<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="postgresql">
    <body>
      <group id="postgresql">
        <trans-unit id="95f8a0055f70864568262af7adc2dc1b06f590cc" translate="yes" xml:space="preserve">
          <source>For additional details see &lt;a href=&quot;https://www.postgresql.org/docs/13/xfunc-volatility.html&quot;&gt;Section 37.7&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/xfunc-volatility.html&quot;&gt;セクション37.7を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cb8ec9455b3b3ecef5cd6da5c8b1451f7a76196b" translate="yes" xml:space="preserve">
          <source>For additional details see &lt;a href=&quot;sql-createpolicy&quot;&gt;CREATE POLICY&lt;/a&gt; and &lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createpolicy&quot;&gt;CREATE POLICY&lt;/a&gt;および&lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7bc2c859a66cc47f7ab253d738eacf7f06902a6f" translate="yes" xml:space="preserve">
          <source>For additional information on tuning these settings, see &lt;a href=&quot;wal-configuration&quot;&gt;Section 29.4&lt;/a&gt;.</source>
          <target state="translated">これらの設定のチューニングの詳細については、&lt;a href=&quot;wal-configuration&quot;&gt;セクション29.4を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3269f32ce55507d4303558fb95944d5f97b55201" translate="yes" xml:space="preserve">
          <source>For additional information see &lt;a href=&quot;sql-createdomain&quot;&gt;CREATE DOMAIN&lt;/a&gt;.</source>
          <target state="translated">追加情報については、&lt;a href=&quot;sql-createdomain&quot;&gt;CREATE DOMAINを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6de3939693bb1f9d3d1fe45488c69d0a8681aad2" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;a href=&quot;sql-createforeigndatawrapper&quot;&gt;CREATE FOREIGN DATA WRAPPER&lt;/a&gt;, &lt;a href=&quot;sql-createserver&quot;&gt;CREATE SERVER&lt;/a&gt;, &lt;a href=&quot;sql-createusermapping&quot;&gt;CREATE USER MAPPING&lt;/a&gt;, &lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGN TABLE&lt;/a&gt;, and &lt;a href=&quot;sql-importforeignschema&quot;&gt;IMPORT FOREIGN SCHEMA&lt;/a&gt;.</source>
          <target state="translated">追加情報については、&lt;a href=&quot;sql-createforeigndatawrapper&quot;&gt;CREATE FOREIGN DATA WRAPPER&lt;/a&gt;、&lt;a href=&quot;sql-createserver&quot;&gt;CREATE SERVER&lt;/a&gt;、&lt;a href=&quot;sql-createusermapping&quot;&gt;CREATE USER MAPPING&lt;/a&gt;、&lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGN TABLE&lt;/a&gt;、および&lt;a href=&quot;sql-importforeignschema&quot;&gt;IMPORT FOREIGN SCHEMAを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e8aca49f3e5f06e066139112539b79576ab0035" translate="yes" xml:space="preserve">
          <source>For additional variables that affect the server, see &lt;a href=&quot;app-postgres&quot;&gt;postgres&lt;/a&gt;.</source>
          <target state="translated">サーバーに影響を与えるその他の変数については、&lt;a href=&quot;app-postgres&quot;&gt;postgresを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf9570df93b845cb267b78130d56401af562fa2" translate="yes" xml:space="preserve">
          <source>For aggregate functions whose &lt;code&gt;state_data_type&lt;/code&gt; is &lt;code&gt;internal&lt;/code&gt;, the &lt;code&gt;combinefunc&lt;/code&gt; must not be strict. In this case the &lt;code&gt;combinefunc&lt;/code&gt; must ensure that null states are handled correctly and that the state being returned is properly stored in the aggregate memory context.</source>
          <target state="translated">その集合関数の &lt;code&gt;state_data_type&lt;/code&gt; ある &lt;code&gt;internal&lt;/code&gt; 、 &lt;code&gt;combinefunc&lt;/code&gt; は厳密であってはなりません。この場合、 &lt;code&gt;combinefunc&lt;/code&gt; は、null状態が正しく処理され、返される状態が集合メモリコンテキストに適切に格納されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="96ebaaa890b3287a6cc4cc73ddb31fd495f4b938" translate="yes" xml:space="preserve">
          <source>For all types of in-memory TOAST pointer, the TOAST management code ensures that no such pointer datum can accidentally get stored on disk. In-memory TOAST pointers are automatically expanded to normal in-line varlena values before storage &amp;mdash; and then possibly converted to on-disk TOAST pointers, if the containing tuple would otherwise be too big.</source>
          <target state="translated">すべてのタイプのインメモリTOASTポインターについて、TOAST管理コードは、そのようなポインターデータが誤ってディスクに格納されないようにします。メモリ内のTOASTポインタは、格納前に通常のインラインvarlena値に自動的に展開されます。含まれるタプルが大きすぎる場合は、ディスク上のTOASTポインタに変換される可能性があります。</target>
        </trans-unit>
        <trans-unit id="00c5f8e7c27807a2274e36cb656c8abd549f0c2f" translate="yes" xml:space="preserve">
          <source>For an &lt;code&gt;INSERT ... ON CONFLICT&lt;/code&gt; command, the publication will publish the operation that actually results from the command. So depending of the outcome, it may be published as either &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt;, or it may not be published at all.</source>
          <target state="translated">以下のために &lt;code&gt;INSERT ... ON CONFLICT&lt;/code&gt; コマンド、出版物は、実際にコマンドから得られるという操作を公開します。したがって、結果に応じて、 &lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;UPDATE&lt;/code&gt; として公開されるか、まったく公開されない場合があります。</target>
        </trans-unit>
        <trans-unit id="e4c28bd7503d02aa54b1f5bc7ca2e5f40da183d1" translate="yes" xml:space="preserve">
          <source>For an MD5 encrypted password, &lt;code&gt;rolpassword&lt;/code&gt; column will begin with the string &lt;code&gt;md5&lt;/code&gt; followed by a 32-character hexadecimal MD5 hash. The MD5 hash will be of the user's password concatenated to their user name. For example, if user &lt;code&gt;joe&lt;/code&gt; has password &lt;code&gt;xyzzy&lt;/code&gt;, PostgreSQL will store the md5 hash of &lt;code&gt;xyzzyjoe&lt;/code&gt;.</source>
          <target state="translated">MD5暗号化パスワードの場合、 &lt;code&gt;rolpassword&lt;/code&gt; 列は文字列 &lt;code&gt;md5&lt;/code&gt; で始まり、その後に32文字の16進MD5ハッシュが続きます。MD5ハッシュは、ユーザー名に連結されたユーザーのパスワードです。たとえば、ユーザー &lt;code&gt;joe&lt;/code&gt; のパスワードが &lt;code&gt;xyzzy&lt;/code&gt; の場合、PostgreSQLは &lt;code&gt;xyzzyjoe&lt;/code&gt; の md5ハッシュを保存します。</target>
        </trans-unit>
        <trans-unit id="a8f9fac8435c636eaa9948982c5c6b1419a33356" translate="yes" xml:space="preserve">
          <source>For an exponential distribution, &lt;code&gt;parameter&lt;/code&gt; controls the distribution by truncating a quickly-decreasing exponential distribution at &lt;code&gt;parameter&lt;/code&gt;, and then projecting onto integers between the bounds. To be precise, with</source>
          <target state="translated">指数分布の場合、 &lt;code&gt;parameter&lt;/code&gt; は、parameterで急速に減少する指数分布を打ち切り、境界間の整数に射影することにより、分布を制御し &lt;code&gt;parameter&lt;/code&gt; 。正確には、</target>
        </trans-unit>
        <trans-unit id="9dddaa17ae34450f80cb35e71888640772ac6f9b" translate="yes" xml:space="preserve">
          <source>For an identity column defined as &lt;code&gt;GENERATED ALWAYS&lt;/code&gt;, it is an error to insert an explicit value (other than &lt;code&gt;DEFAULT&lt;/code&gt;) without specifying either &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt; or &lt;code&gt;OVERRIDING USER VALUE&lt;/code&gt;. (For an identity column defined as &lt;code&gt;GENERATED BY DEFAULT&lt;/code&gt;, &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt; is the normal behavior and specifying it does nothing, but PostgreSQL allows it as an extension.)</source>
          <target state="translated">&lt;code&gt;GENERATED ALWAYS&lt;/code&gt; として定義されたID列の場合、 &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt; または &lt;code&gt;OVERRIDING USER VALUE&lt;/code&gt; VALUEを指定せずに、明示的な値（ &lt;code&gt;DEFAULT&lt;/code&gt; 以外）を挿入するとエラーになります。（として定義されるID列の &lt;code&gt;GENERATED BY DEFAULT&lt;/code&gt; 、 &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt; は、正常な動作であり、それは何もしない指定が、PostgreSQLは拡張としてそれを可能にします。）</target>
        </trans-unit>
        <trans-unit id="65c3010f7ad4d8ce5cd9ffc778600e650d4f3866" translate="yes" xml:space="preserve">
          <source>For an operator family supporting multiple data types, the above laws must hold when &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt; are taken from any data types in the family. The transitive laws are the trickiest to ensure, as in cross-type situations they represent statements that the behaviors of two or three different operators are consistent. As an example, it would not work to put &lt;code&gt;float8&lt;/code&gt; and &lt;code&gt;numeric&lt;/code&gt; into the same operator family, at least not with the current semantics that &lt;code&gt;numeric&lt;/code&gt; values are converted to &lt;code&gt;float8&lt;/code&gt; for comparison to a &lt;code&gt;float8&lt;/code&gt;. Because of the limited accuracy of &lt;code&gt;float8&lt;/code&gt;, this means there are distinct &lt;code&gt;numeric&lt;/code&gt; values that will compare equal to the same &lt;code&gt;float8&lt;/code&gt; value, and thus the transitive law would fail.</source>
          <target state="translated">複数のデータ型をサポートする演算子族の場合、 &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、 &lt;code&gt;C&lt;/code&gt; がその族の任意のデータ型から取られるとき、上記の法則が成り立つ必要があります。推移的な法則は、クロスタイプの状況では、2つまたは3つの異なる演算子の動作が一貫しているという記述を表すため、最も注意が必要です。例として、それはない仕事入れてしまう &lt;code&gt;float8&lt;/code&gt; 型と &lt;code&gt;numeric&lt;/code&gt; 少なくともではないことを、現在のセマンティクスで、同じ演算子族に &lt;code&gt;numeric&lt;/code&gt; の値がに変換され &lt;code&gt;float8&lt;/code&gt; 型と比較するため &lt;code&gt;float8&lt;/code&gt; 。 &lt;code&gt;float8&lt;/code&gt; の精度には限界があるため、これは明確な &lt;code&gt;numeric&lt;/code&gt; が存在することを意味します同じ &lt;code&gt;float8&lt;/code&gt; 値に等しい値と比較される値、したがって推移法則は失敗します。</target>
        </trans-unit>
        <trans-unit id="fb67d8e335116f8d04cb145c346f347c48295886" translate="yes" xml:space="preserve">
          <source>For analyze, a similar condition is used: the threshold, defined as:</source>
          <target state="translated">解析には、同様の条件が使用されます:しきい値、定義されています。</target>
        </trans-unit>
        <trans-unit id="d9ad010e024a4439cd621de2da500fdb418cf81a" translate="yes" xml:space="preserve">
          <source>For any pattern, to install shared applications (tables to be used by everyone, additional functions provided by third parties, etc.), put them into separate schemas. Remember to grant appropriate privileges to allow the other users to access them. Users can then refer to these additional objects by qualifying the names with a schema name, or they can put the additional schemas into their search path, as they choose.</source>
          <target state="translated">どのようなパターンでも、共有アプリケーション(全員で使用するテーブル、サードパーティが提供する追加機能など)をインストールする場合は、それぞれ別のスキーマに入れます。他のユーザがアクセスできるように、適切な権限を付与することを忘れないでください。ユーザーは、スキーマ名で名前を修飾することで、これらの追加オブジェクトを参照することができますし、選択したとおりに検索パスに追加スキーマを入れることもできます。</target>
        </trans-unit>
        <trans-unit id="16a497bd5483558f99655038b89f96368461a1c5" translate="yes" xml:space="preserve">
          <source>For backward compatibility, the name can be enclosed by single quotes.</source>
          <target state="translated">下位互換性のため、名前はシングルクォーテーションで囲むことができます。</target>
        </trans-unit>
        <trans-unit id="ca86393d893511ed217c26aec47e69fc362ff707" translate="yes" xml:space="preserve">
          <source>For both &lt;code&gt;LIKE&lt;/code&gt; and regular-expression searches, keep in mind that a pattern with no extractable trigrams will degenerate to a full-index scan.</source>
          <target state="translated">&lt;code&gt;LIKE&lt;/code&gt; 検索と正規表現検索の両方で、抽出可能なトライグラムがないパターンは、フルインデックススキャンに退化することに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c873bea9ea29f067ffabebef48d2954f71baefe" translate="yes" xml:space="preserve">
          <source>For both these functions, the optional &lt;code&gt;weights&lt;/code&gt; argument offers the ability to weigh word instances more or less heavily depending on how they are labeled. The weight arrays specify how heavily to weigh each category of word, in the order:</source>
          <target state="translated">これらの関数の両方で、オプションの &lt;code&gt;weights&lt;/code&gt; 引数は、ラベル付けの方法に応じて、単語インスタンスを多かれ少なかれ重み付けする機能を提供します。重みの配列は、単語の各カテゴリの重み付けの順番を次のように指定します。</target>
        </trans-unit>
        <trans-unit id="0b0722cabc6ab2e548afa613aa4953b992a05e07" translate="yes" xml:space="preserve">
          <source>For clarity we omitted the &lt;code&gt;coalesce&lt;/code&gt; function calls which would be needed to find rows that contain &lt;code&gt;NULL&lt;/code&gt; in one of the two fields.</source>
          <target state="translated">明確にするために、2つのフィールドのいずれかに &lt;code&gt;NULL&lt;/code&gt; を含む行を見つけるために必要な &lt;code&gt;coalesce&lt;/code&gt; 関数呼び出しを省略しました。</target>
        </trans-unit>
        <trans-unit id="5a4475c3ea46bdd2013d00d5535373f530d5c349" translate="yes" xml:space="preserve">
          <source>For clarity, you can also request default values explicitly, for individual columns or for the entire row:</source>
          <target state="translated">わかりやすくするために、個々の列や行全体に対して明示的にデフォルト値を要求することもできます。</target>
        </trans-unit>
        <trans-unit id="93860c51a978bc4e5066beb2f011be832a913dba" translate="yes" xml:space="preserve">
          <source>For clients using extended query protocol, durations of the Parse, Bind, and Execute steps are logged independently.</source>
          <target state="translated">拡張クエリプロトコルを使用しているクライアントでは、Parse、Bind、およびExecuteの各ステップの期間は独立して記録されます。</target>
        </trans-unit>
        <trans-unit id="642c28fcef80f55a7fa8a09654289e47fe6125b8" translate="yes" xml:space="preserve">
          <source>For comparison, the PostgreSQL 8.1 documentation contained 10,441 unique words, a total of 335,420 words, and the most frequent word &amp;ldquo;postgresql&amp;rdquo; was mentioned 6,127 times in 655 documents.</source>
          <target state="translated">比較のために、PostgreSQL 8.1のドキュメントには10​​,441の一意の単語、合計335,420の単語が含まれており、最も頻繁に使用される単語「postgresql」は655のドキュメントで6,127回言及されていました。</target>
        </trans-unit>
        <trans-unit id="3e2967140afc307af479be8f80698d1858dbc62a" translate="yes" xml:space="preserve">
          <source>For compatibility with output generated by older versions of PostgreSQL, and to allow the output precision to be reduced, the &lt;a href=&quot;runtime-config-client#GUC-EXTRA-FLOAT-DIGITS&quot;&gt;extra_float_digits&lt;/a&gt; parameter can be used to select rounded decimal output instead. Setting a value of 0 restores the previous default of rounding the value to 6 (for &lt;code&gt;float4&lt;/code&gt;) or 15 (for &lt;code&gt;float8&lt;/code&gt;) significant decimal digits. Setting a negative value reduces the number of digits further; for example -2 would round output to 4 or 13 digits respectively.</source>
          <target state="translated">古いバージョンのPostgreSQLによって生成された出力との互換性を確保し、出力精度を下げるために、&lt;a href=&quot;runtime-config-client#GUC-EXTRA-FLOAT-DIGITS&quot;&gt;extra_float_digits&lt;/a&gt;パラメータを使用して、代わりに丸められた10進数出力を選択できます。値を0に設定すると、値を6（ &lt;code&gt;float4&lt;/code&gt; の場合）または15（ &lt;code&gt;float8&lt;/code&gt; の場合）の有効10進数に丸める以前のデフォルトに戻ります。負の値を設定すると、桁数がさらに減ります。たとえば-2は、出力をそれぞれ4桁または13桁に丸めます。</target>
        </trans-unit>
        <trans-unit id="82e33c9e09cc041982adc16695f27c2ebea4aeea" translate="yes" xml:space="preserve">
          <source>For compatibility with some other database systems, &lt;code&gt;argmode&lt;/code&gt; can be written either before or after &lt;code&gt;argname&lt;/code&gt;. But only the first way is standard-compliant.</source>
          <target state="translated">他のいくつかのデータベースシステムとの互換性のために、 &lt;code&gt;argmode&lt;/code&gt; は &lt;code&gt;argname&lt;/code&gt; の前または後に記述できます。しかし、最初の方法だけが標準に準拠しています。</target>
        </trans-unit>
        <trans-unit id="28fead7bc1a5393ae5055409c79f82dc0d627975" translate="yes" xml:space="preserve">
          <source>For compatibility's sake, PostgreSQL will accept the &lt;code&gt;GLOBAL&lt;/code&gt; and &lt;code&gt;LOCAL&lt;/code&gt; keywords in a temporary table declaration, but they currently have no effect. Use of these keywords is discouraged, since future versions of PostgreSQL might adopt a more standard-compliant interpretation of their meaning.</source>
          <target state="translated">互換性のために、PostgreSQLは一時テーブル宣言で &lt;code&gt;GLOBAL&lt;/code&gt; キーワードと &lt;code&gt;LOCAL&lt;/code&gt; キーワードを受け入れますが、現時点では効果がありません。これらのキーワードの使用はお勧めしません。PostgreSQLの将来のバージョンでは、それらの意味についてより標準に準拠した解釈を採用する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="cb0d695c453e288497b0e820fe56bdd716e52946" translate="yes" xml:space="preserve">
          <source>For compiled functions, both built-in and dynamically loaded, &lt;code&gt;prosrc&lt;/code&gt; contains the function's C-language name (link symbol). For all other currently-known language types, &lt;code&gt;prosrc&lt;/code&gt; contains the function's source text. &lt;code&gt;probin&lt;/code&gt; is unused except for dynamically-loaded C functions, for which it gives the name of the shared library file containing the function.</source>
          <target state="translated">組み込み関数と動的に読み込まれる関数の両方について、 &lt;code&gt;prosrc&lt;/code&gt; には関数のC言語名（リンク記号）が含まれています。現在知られている他のすべての言語タイプの場合、 &lt;code&gt;prosrc&lt;/code&gt; には関数のソーステキストが含まれます。 &lt;code&gt;probin&lt;/code&gt; は、動的にロードされるC関数を除いて使用されません。C関数には、関数を含む共有ライブラリファイルの名前が示されます。</target>
        </trans-unit>
        <trans-unit id="1593a37c3e4bef998076b51ab60cf493f14debc2" translate="yes" xml:space="preserve">
          <source>For conditional purposes, non zero numerical values are &lt;code&gt;TRUE&lt;/code&gt;, zero numerical values and &lt;code&gt;NULL&lt;/code&gt; are &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">条件付きでは、ゼロ以外の数値は &lt;code&gt;TRUE&lt;/code&gt; 、ゼロの数値および &lt;code&gt;NULL&lt;/code&gt; は &lt;code&gt;FALSE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ca450dc70846b4e702e0834dc4a1ac754f8335c" translate="yes" xml:space="preserve">
          <source>For convenience there are also single letter command-line option switches available for some parameters. They are described in &lt;a href=&quot;runtime-config-short#RUNTIME-CONFIG-SHORT-TABLE&quot;&gt;Table 19.2&lt;/a&gt;. Some of these options exist for historical reasons, and their presence as a single-letter option does not necessarily indicate an endorsement to use the option heavily.</source>
          <target state="translated">便宜上、一部のパラメーターには1文字のコマンドラインオプションスイッチも使用できます。それらは&lt;a href=&quot;runtime-config-short#RUNTIME-CONFIG-SHORT-TABLE&quot;&gt;表19.2で&lt;/a&gt;説明されています。これらのオプションの一部は歴史的な理由で存在し、1文字のオプションとしての存在は必ずしもオプションを多用することの推奨を示すものではありません。</target>
        </trans-unit>
        <trans-unit id="7bc2076f57d611864b1939f513772007f82c5791" translate="yes" xml:space="preserve">
          <source>For convenience there are also single letter command-line option switches available for some parameters. They are described in &lt;a href=&quot;runtime-config-short#RUNTIME-CONFIG-SHORT-TABLE&quot;&gt;Table 19.3&lt;/a&gt;. Some of these options exist for historical reasons, and their presence as a single-letter option does not necessarily indicate an endorsement to use the option heavily.</source>
          <target state="translated">便宜上、一部のパラメーターで使用できる1文字のコマンドラインオプションスイッチもあります。それらは&lt;a href=&quot;runtime-config-short#RUNTIME-CONFIG-SHORT-TABLE&quot;&gt;表19.3で&lt;/a&gt;説明されています。これらのオプションのいくつかは歴史的な理由で存在し、1文字のオプションとしての存在は、必ずしもオプションを多用することを推奨していることを示しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="0f4b1609541244f90c1469cfda93f87205751028" translate="yes" xml:space="preserve">
          <source>For convenience, the programs &lt;a href=&quot;app-createuser&quot;&gt;createuser&lt;/a&gt; and &lt;a href=&quot;app-dropuser&quot;&gt;dropuser&lt;/a&gt; are provided as wrappers around these SQL commands that can be called from the shell command line:</source>
          <target state="translated">便宜上、プログラム&lt;a href=&quot;app-createuser&quot;&gt;createuser&lt;/a&gt;および&lt;a href=&quot;app-dropuser&quot;&gt;dropuser&lt;/a&gt;は、シェルコマンドラインから呼び出すことができるこれらのSQLコマンドのラッパーとして提供されています。</target>
        </trans-unit>
        <trans-unit id="3832912e6c9f91aa4902ff08b60d0cbcee1c2ac8" translate="yes" xml:space="preserve">
          <source>For convenience, there is also a shell program to drop databases, &lt;a href=&quot;app-dropdb&quot;&gt;dropdb&lt;/a&gt;:</source>
          <target state="translated">便宜上、データベースを削除するためのシェルプログラム&lt;a href=&quot;app-dropdb&quot;&gt;dropdb&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="2086e8168bb5d57d0ea6881d92ef9c3d377f6179" translate="yes" xml:space="preserve">
          <source>For crash safety, an AM can use postgres' &lt;a href=&quot;https://www.postgresql.org/docs/12/wal.html&quot;&gt;WAL&lt;/a&gt;, or a custom implementation. If WAL is chosen, either &lt;a href=&quot;generic-wal&quot;&gt;Generic WAL Records&lt;/a&gt; can be used, or a new type of WAL records can be implemented. Generic WAL Records are easy, but imply higher WAL volume. Implementation of a new type of WAL record currently requires modifications to core code (specifically, &lt;code&gt;src/include/access/rmgrlist.h&lt;/code&gt;).</source>
          <target state="translated">クラッシュの安全性のために、AMはpostgresの&lt;a href=&quot;https://www.postgresql.org/docs/12/wal.html&quot;&gt;WAL&lt;/a&gt;またはカスタム実装を使用できます。 WALを選択した場合は、&lt;a href=&quot;generic-wal&quot;&gt;汎用WALレコード&lt;/a&gt;を使用するか、新しいタイプのWALレコードを実装できます。一般的なWALレコードは簡単ですが、WALの量が多いことを意味します。新しいタイプのWALレコードを実装するには、現在、コアコード（具体的には &lt;code&gt;src/include/access/rmgrlist.h&lt;/code&gt; ）を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="bbdc473894ba97ea91078047c916d6159b963419" translate="yes" xml:space="preserve">
          <source>For crash safety, an AM can use postgres' &lt;a href=&quot;https://www.postgresql.org/docs/13/wal.html&quot;&gt;WAL&lt;/a&gt;, or a custom implementation. If WAL is chosen, either &lt;a href=&quot;generic-wal&quot;&gt;Generic WAL Records&lt;/a&gt; can be used, or a new type of WAL records can be implemented. Generic WAL Records are easy, but imply higher WAL volume. Implementation of a new type of WAL record currently requires modifications to core code (specifically, &lt;code&gt;src/include/access/rmgrlist.h&lt;/code&gt;).</source>
          <target state="translated">衝突安全のために、AMはpostgresの&lt;a href=&quot;https://www.postgresql.org/docs/13/wal.html&quot;&gt;WAL&lt;/a&gt;またはカスタム実装を使用できます。WALを選択した場合は、&lt;a href=&quot;generic-wal&quot;&gt;汎用WALレコード&lt;/a&gt;を使用するか、新しいタイプのWALレコードを実装できます。一般的なWALレコードは簡単ですが、WALの量が多いことを意味します。現在、新しいタイプのWALレコードを実装するには、コアコード（具体的には &lt;code&gt;src/include/access/rmgrlist.h&lt;/code&gt; ）を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="45171c5ce1cebf261c0bfc4a29a7bbae2406dddb" translate="yes" xml:space="preserve">
          <source>For databases, allows new schemas and publications to be created within the database, and allows trusted extensions to be installed within the database.</source>
          <target state="translated">データベースの場合、データベース内に新しいスキーマやパブリケーションを作成したり、信頼できる拡張機能をデータベース内にインストールしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="9c062e145de387371ec37dc656ac5b92503663ca" translate="yes" xml:space="preserve">
          <source>For databases, allows new schemas and publications to be created within the database.</source>
          <target state="translated">データベースの場合、データベース内に新しいスキーマや出版物を作成することができます。</target>
        </trans-unit>
        <trans-unit id="f4984c57688cb1cee66323a19c7444a0a9bb0477" translate="yes" xml:space="preserve">
          <source>For declarative partitioning, partitions must have exactly the same set of columns as the partitioned table, whereas with table inheritance, child tables may have extra columns not present in the parent.</source>
          <target state="translated">宣言的パーティショニングでは、パーティショニングはパーティショニングされたテーブルと全く同じカラムのセットを持たなければなりませんが、テーブル継承では子テーブルは親テーブルにはない余分なカラムを持つことがあります。</target>
        </trans-unit>
        <trans-unit id="fd8cd79e49912cef7e36a49a72250f6cd15cb54e" translate="yes" xml:space="preserve">
          <source>For deployment testing, create a schema-only copy of the old cluster, insert dummy data, and upgrade that.</source>
          <target state="translated">デプロイテストのために、古いクラスタのスキーマのみのコピーを作成し、ダミーデータを挿入し、それをアップグレードします。</target>
        </trans-unit>
        <trans-unit id="23fcbc4c69f038c631978df5d852e7c988638319" translate="yes" xml:space="preserve">
          <source>For details about proper usage of these functions, see &lt;a href=&quot;continuous-archiving&quot;&gt;Section 25.3&lt;/a&gt;.</source>
          <target state="translated">これらの関数の適切な使用方法の詳細については、&lt;a href=&quot;continuous-archiving&quot;&gt;セクション25.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7a67dca85d30cbed66dc7cc81857442fa00d590c" translate="yes" xml:space="preserve">
          <source>For details on using &lt;code&gt;jsonpath&lt;/code&gt; expressions with SQL/JSON query functions, see &lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH&quot;&gt;Section 9.15.2&lt;/a&gt;.</source>
          <target state="translated">SQL / JSONクエリ関数で &lt;code&gt;jsonpath&lt;/code&gt; 式を使用する方法の詳細については、&lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH&quot;&gt;セクション9.15.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0a2ee1a4a4b6ea5b1e5dc69f843d5bf40d2adf1f" translate="yes" xml:space="preserve">
          <source>For details on using &lt;code&gt;jsonpath&lt;/code&gt; expressions with SQL/JSON query functions, see &lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH&quot;&gt;Section 9.16.2&lt;/a&gt;.</source>
          <target state="translated">SQL / JSONクエリ関数での &lt;code&gt;jsonpath&lt;/code&gt; 式の使用の詳細については、&lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH&quot;&gt;セクション9.16.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aba8e3841c67fc994b221c5d39e6ca9666653d88" translate="yes" xml:space="preserve">
          <source>For developers familiar with XQuery and XPath 2.0 or later, XPath 1.0 presents a number of differences to contend with:</source>
          <target state="translated">XQueryやXPath 2.0以降に精通している開発者にとって、XPath 1.0では多くの違いがあります。</target>
        </trans-unit>
        <trans-unit id="444e073c791a9db99f3d6ee4275247eb7942a2d4" translate="yes" xml:space="preserve">
          <source>For development and debugging purposes a few additional configuration parameters exist, as described in &lt;a href=&quot;runtime-config-developer&quot;&gt;Section 19.17&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;runtime-config-developer&quot;&gt;セクション19.17で&lt;/a&gt;説明されているように、開発およびデバッグの目的で、いくつかの追加の構成パラメーターが存在します。</target>
        </trans-unit>
        <trans-unit id="2f6d0f2ed640d213e669a2d88363956decb0dc50" translate="yes" xml:space="preserve">
          <source>For each child table, create an index on the key column(s), as well as any other indexes you might want.</source>
          <target state="translated">各子テーブルについて、キーカラムのインデックスを作成し、その他のインデックスも作成します。</target>
        </trans-unit>
        <trans-unit id="25abda91cdb6a3bbf8ff5bdcb98364248d703bc8" translate="yes" xml:space="preserve">
          <source>For each column in the index key (&lt;code&gt;indnkeyatts&lt;/code&gt; values), this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type.</source>
          <target state="translated">インデックスキーの各列（ &lt;code&gt;indnkeyatts&lt;/code&gt; 値）には、インデックスに使用する照合のOID、または列が照合可能なデータ型でない場合はゼロが含まれます。</target>
        </trans-unit>
        <trans-unit id="6fc7ad5122e2bfa01daa15f6eed504af7d2b8967" translate="yes" xml:space="preserve">
          <source>For each column in the index key (&lt;code&gt;indnkeyatts&lt;/code&gt; values), this contains the OID of the operator class to use. See &lt;a href=&quot;catalog-pg-opclass&quot;&gt;&lt;code&gt;pg_opclass&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">インデックスキーの各列（ &lt;code&gt;indnkeyatts&lt;/code&gt; 値）には、使用する演算子クラスのOIDが含まれます。詳細は&lt;a href=&quot;catalog-pg-opclass&quot;&gt; &lt;code&gt;pg_opclass&lt;/code&gt; &lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="51f668b2a5a8c54bfcef88243c43a45aa5a55a09" translate="yes" xml:space="preserve">
          <source>For each column in the partition key, this contains the OID of the collation to use for partitioning, or zero if the column is not of a collatable data type.</source>
          <target state="translated">パーティションキーの各カラムに対して、パーティショニングに使用する照合順序のOIDが含まれており、照合可能なデータ型でない場合はゼロとなります。</target>
        </trans-unit>
        <trans-unit id="3edc803302a59c643149e81e1e75d11544ede04f" translate="yes" xml:space="preserve">
          <source>For each column in the partition key, this contains the OID of the operator class to use. See &lt;a href=&quot;catalog-pg-opclass&quot;&gt;&lt;code&gt;pg_opclass&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">これには、パーティションキーの各列について、使用する演算子クラスのOIDが含まれています。詳細は&lt;a href=&quot;catalog-pg-opclass&quot;&gt; &lt;code&gt;pg_opclass&lt;/code&gt; &lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="7ccb1aca150cd3fd2a76eea5ce2e2c6866c56ef1" translate="yes" xml:space="preserve">
          <source>For each column that will contain unique references to large objects, create a &lt;code&gt;BEFORE UPDATE OR DELETE&lt;/code&gt; trigger, and give the column name as the sole trigger argument. You can also restrict the trigger to only execute on updates to the column by using &lt;code&gt;BEFORE UPDATE OF&lt;/code&gt;&lt;code&gt;column_name&lt;/code&gt;. If you need multiple &lt;code&gt;lo&lt;/code&gt; columns in the same table, create a separate trigger for each one, remembering to give a different name to each trigger on the same table.</source>
          <target state="translated">ラージオブジェクトへの一意の参照を含む列ごとに、 &lt;code&gt;BEFORE UPDATE OR DELETE&lt;/code&gt; トリガーを作成し、列名を唯一のトリガー引数として指定します。また、 &lt;code&gt;BEFORE UPDATE OF&lt;/code&gt; &lt;code&gt;column_name&lt;/code&gt; を使用して、トリガーが列の更新時にのみ実行されるように制限することもできます。同じテーブルに複数の &lt;code&gt;lo&lt;/code&gt; 列が必要な場合は、同じテーブルの各トリガーに異なる名前を付けることを忘れないで、それぞれに個別のトリガーを作成してください。</target>
        </trans-unit>
        <trans-unit id="dc93abd020281b000ae47dfd8ef843f236c6a3a8" translate="yes" xml:space="preserve">
          <source>For each combination of data types that a btree operator family provides comparison operators for, it must provide a comparison support function, registered in &lt;code&gt;pg_amproc&lt;/code&gt; with support function number 1 and &lt;code&gt;amproclefttype&lt;/code&gt;/&lt;code&gt;amprocrighttype&lt;/code&gt; equal to the left and right data types for the comparison (i.e., the same data types that the matching operators are registered with in &lt;code&gt;pg_amop&lt;/code&gt;). The comparison function must take two non-null values &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; and return an &lt;code&gt;int32&lt;/code&gt; value that is &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, or &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;0&lt;/code&gt; when &lt;code&gt;A&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;A&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;, respectively. A null result is disallowed: all values of the data type must be comparable. See &lt;code&gt;src/backend/access/nbtree/nbtcompare.c&lt;/code&gt; for examples.</source>
          <target state="translated">btree演算子ファミリーが比較演算子を提供するデータ型の各組み合わせについて、 &lt;code&gt;pg_amproc&lt;/code&gt; にサポート関数番号1 で登録され、 &lt;code&gt;amproclefttype&lt;/code&gt; / &lt;code&gt;amprocrighttype&lt;/code&gt; が比較の左右のデータ型と等しい比較サポート関数を提供する必要があります（つまり、一致する演算子が &lt;code&gt;pg_amop&lt;/code&gt; に登録されているのと同じデータ型。比較関数は、2つの非ヌル値が取らなければならない &lt;code&gt;A&lt;/code&gt; 及び &lt;code&gt;B&lt;/code&gt; をと戻り &lt;code&gt;int32&lt;/code&gt; 値 &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、又は &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;B&lt;/code&gt; を、 &lt;code&gt;A&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; &lt;code&gt;B&lt;/code&gt; または &lt;code&gt;A&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;B&lt;/code&gt; です。nullの結果は許可されません。データ型のすべての値は比較可能でなければなりません。例については、 &lt;code&gt;src/backend/access/nbtree/nbtcompare.c&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="816bbd53914791af08e63dd703c10a6ffd0c4825" translate="yes" xml:space="preserve">
          <source>For each database in the cluster there is a subdirectory within &lt;code&gt;PGDATA&lt;/code&gt;&lt;code&gt;/base&lt;/code&gt;, named after the database's OID in &lt;code&gt;pg_database&lt;/code&gt;. This subdirectory is the default location for the database's files; in particular, its system catalogs are stored there.</source>
          <target state="translated">クラスタ内の各データベースの場合内のサブディレクトリがあり &lt;code&gt;PGDATA&lt;/code&gt; &lt;code&gt;/base&lt;/code&gt; でのデータベースのOIDにちなんで名付けられ、 &lt;code&gt;pg_database&lt;/code&gt; の。このサブディレクトリは、データベースのファイルのデフォルトの場所です。特に、そのシステムカタログはそこに格納されます。</target>
        </trans-unit>
        <trans-unit id="5a93df004449e3d17d4da507b5cc8728f0ee8920" translate="yes" xml:space="preserve">
          <source>For each of these hypothetical-set aggregates, the list of direct arguments given in &lt;code&gt;args&lt;/code&gt; must match the number and types of the aggregated arguments given in &lt;code&gt;sorted_args&lt;/code&gt;. Unlike most built-in aggregates, these aggregates are not strict, that is they do not drop input rows containing nulls. Null values sort according to the rule specified in the &lt;code&gt;ORDER BY&lt;/code&gt; clause.</source>
          <target state="translated">これらの架空の集合のそれぞれについて、 &lt;code&gt;args&lt;/code&gt; で指定された直接引数のリストは、 &lt;code&gt;sorted_args&lt;/code&gt; で指定された集約引数の数と型と一致している必要があります。ほとんどの組み込み集計とは異なり、これらの集計は厳密ではありません。つまり、nullを含む入力行は削除されません。 NULL値は、 &lt;code&gt;ORDER BY&lt;/code&gt; 句で指定されたルールに従ってソートされます。</target>
        </trans-unit>
        <trans-unit id="9cc9c8be16b2cd2bfdfefa12d9931dcf7459faa0" translate="yes" xml:space="preserve">
          <source>For each query, output performance statistics of the respective module to the server log. This is a crude profiling instrument, similar to the Unix &lt;code&gt;getrusage()&lt;/code&gt; operating system facility. &lt;code&gt;log_statement_stats&lt;/code&gt; reports total statement statistics, while the others report per-module statistics. &lt;code&gt;log_statement_stats&lt;/code&gt; cannot be enabled together with any of the per-module options. All of these options are disabled by default. Only superusers can change these settings.</source>
          <target state="translated">クエリごとに、それぞれのモジュールのパフォーマンス統計をサーバーログに出力します。これは、Unixの &lt;code&gt;getrusage()&lt;/code&gt; オペレーティングシステム機能に似た、粗雑なプロファイリングツールです。 &lt;code&gt;log_statement_stats&lt;/code&gt; はステートメント統計の合計を報告し、その他はモジュールごとの統計を報告します。 &lt;code&gt;log_statement_stats&lt;/code&gt; は、モジュールごとのオプションと一緒に有効にすることはできません。これらのオプションはすべてデフォルトで無効になっています。これらの設定を変更できるのはスーパーユーザーだけです。</target>
        </trans-unit>
        <trans-unit id="0ba598fc8c9be134161735a51a95dc2f9f525608" translate="yes" xml:space="preserve">
          <source>For each relation (table, view, materialized view, index, sequence, or foreign table) or composite type matching the &lt;code&gt;pattern&lt;/code&gt;, show all columns, their types, the tablespace (if not the default) and any special attributes such as &lt;code&gt;NOT NULL&lt;/code&gt; or defaults. Associated indexes, constraints, rules, and triggers are also shown. For foreign tables, the associated foreign server is shown as well. (&amp;ldquo;Matching the pattern&amp;rdquo; is defined in &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;Patterns&lt;/a&gt; below.)</source>
          <target state="translated">各リレーション（テーブル、ビュー、マテリアライズドビュー、インデックス、シーケンス、または外部テーブル）または &lt;code&gt;pattern&lt;/code&gt; に一致する複合タイプについて、すべての列、そのタイプ、テーブルスペース（デフォルトでない場合）、および &lt;code&gt;NOT NULL&lt;/code&gt; やデフォルト。関連するインデックス、制約、ルール、トリガーも表示されます。外部テーブルの場合、関連する外部サーバーも表示されます。 （「パターンの一致」は、以下の&lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;パターン&lt;/a&gt;で定義されています。）</target>
        </trans-unit>
        <trans-unit id="77b4eaff32602e55630fc25f0d7615181a46a544" translate="yes" xml:space="preserve">
          <source>For each row R1 of T1, the joined table has a row for each row in T2 that satisfies the join condition with R1.</source>
          <target state="translated">T1の各行R1に対して、T2の各行R1との結合条件を満たす行が結合されたテーブルである。</target>
        </trans-unit>
        <trans-unit id="8594ae1b752513c4090775efefd1243bce43044f" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, &lt;code&gt;reltuples&lt;/code&gt; and &lt;code&gt;relpages&lt;/code&gt; are not updated on-the-fly, and so they usually contain somewhat out-of-date values. They are updated by &lt;code&gt;VACUUM&lt;/code&gt;, &lt;code&gt;ANALYZE&lt;/code&gt;, and a few DDL commands such as &lt;code&gt;CREATE INDEX&lt;/code&gt;. A &lt;code&gt;VACUUM&lt;/code&gt; or &lt;code&gt;ANALYZE&lt;/code&gt; operation that does not scan the entire table (which is commonly the case) will incrementally update the &lt;code&gt;reltuples&lt;/code&gt; count on the basis of the part of the table it did scan, resulting in an approximate value. In any case, the planner will scale the values it finds in &lt;code&gt;pg_class&lt;/code&gt; to match the current physical table size, thus obtaining a closer approximation.</source>
          <target state="translated">効率上の理由から、 &lt;code&gt;reltuples&lt;/code&gt; と &lt;code&gt;relpages&lt;/code&gt; はオンザフライで更新されないため、通常、多少古い値が含まれています。それらは、 &lt;code&gt;VACUUM&lt;/code&gt; 、 &lt;code&gt;ANALYZE&lt;/code&gt; 、および &lt;code&gt;CREATE INDEX&lt;/code&gt; などのいくつかのDDLコマンドによって更新されます。 &lt;code&gt;VACUUM&lt;/code&gt; または &lt;code&gt;ANALYZE&lt;/code&gt; （ケースが一般的である）、テーブル全体をスキャンしない増分更新する操作 &lt;code&gt;reltuples&lt;/code&gt; は近似値が得られ、それはスキャンたテーブルの一部に基づいてカウントします。いずれの場合も、プランナは &lt;code&gt;pg_class&lt;/code&gt; で検出した値をスケーリングして、現在の物理テーブルのサイズと一致させることで、より近い近似値を取得します。</target>
        </trans-unit>
        <trans-unit id="2498c1aea650efa3ff6e721df8f862e425ed274a" translate="yes" xml:space="preserve">
          <source>For enum types (described in &lt;a href=&quot;datatype-enum&quot;&gt;Section 8.7&lt;/a&gt;), there are several functions that allow cleaner programming without hard-coding particular values of an enum type. These are listed in &lt;a href=&quot;functions-enum#FUNCTIONS-ENUM-TABLE&quot;&gt;Table 9.33&lt;/a&gt;. The examples assume an enum type created as:</source>
          <target state="translated">列挙型（&lt;a href=&quot;datatype-enum&quot;&gt;セクション8.7で&lt;/a&gt;説明）には、列挙型の特定の値をハードコーディングすることなく、よりクリーンなプログラミングを可能にする関数がいくつかあります。これらを&lt;a href=&quot;functions-enum#FUNCTIONS-ENUM-TABLE&quot;&gt;表9.33に示し&lt;/a&gt;ます。例では、次のように作成された列挙型を想定しています。</target>
        </trans-unit>
        <trans-unit id="7318a3eeb2a0e3f509084e3ec69e3b05be39dc31" translate="yes" xml:space="preserve">
          <source>For enum types (described in &lt;a href=&quot;datatype-enum&quot;&gt;Section 8.7&lt;/a&gt;), there are several functions that allow cleaner programming without hard-coding particular values of an enum type. These are listed in &lt;a href=&quot;functions-enum#FUNCTIONS-ENUM-TABLE&quot;&gt;Table 9.34&lt;/a&gt;. The examples assume an enum type created as:</source>
          <target state="translated">列挙型（&lt;a href=&quot;datatype-enum&quot;&gt;セクション8.7で&lt;/a&gt;説明）の場合、列挙型の特定の値をハードコーディングせずに、よりクリーンなプログラミングを可能にするいくつかの関数があります。これらを&lt;a href=&quot;functions-enum#FUNCTIONS-ENUM-TABLE&quot;&gt;表9.34に示し&lt;/a&gt;ます。例では、次のように作成された列挙型を想定しています。</target>
        </trans-unit>
        <trans-unit id="a25a74babc64151f8b4ea2da440ad370951a8d59" translate="yes" xml:space="preserve">
          <source>For every possible combination of rows from &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; (i.e., a Cartesian product), the joined table will contain a row consisting of all columns in &lt;code&gt;T1&lt;/code&gt; followed by all columns in &lt;code&gt;T2&lt;/code&gt;. If the tables have N and M rows respectively, the joined table will have N * M rows.</source>
          <target state="translated">&lt;code&gt;T1&lt;/code&gt; と &lt;code&gt;T2&lt;/code&gt; の行の可能なすべての組み合わせ（つまり、デカルト積）の場合、結合されたテーブルには、 &lt;code&gt;T1&lt;/code&gt; のすべての列とそれに続く &lt;code&gt;T2&lt;/code&gt; のすべての列で構成される行が含まれます。テーブルにそれぞれN行とM行がある場合、結合されたテーブルにはN * M行があります。</target>
        </trans-unit>
        <trans-unit id="0c6d96910fe12ae8175afb9cb9ebf00927346590" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;@-&lt;/code&gt; is an allowed operator name, but &lt;code&gt;*-&lt;/code&gt; is not. This restriction allows PostgreSQL to parse SQL-compliant commands without requiring spaces between tokens.</source>
          <target state="translated">たとえば、 &lt;code&gt;@-&lt;/code&gt; は許可された演算子名ですが、 &lt;code&gt;*-&lt;/code&gt; は許可されていません。この制限により、PostgreSQLはトークン間にスペースを必要とせずにSQL準拠のコマンドを解析できます。</target>
        </trans-unit>
        <trans-unit id="7420785e3365d78ac1f9c68594d975825431286b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;@-&lt;/code&gt; is an allowed operator name, but &lt;code&gt;*-&lt;/code&gt; is not. This restriction allows PostgreSQL to parse SQL-compliant queries without requiring spaces between tokens.</source>
          <target state="translated">たとえば、 &lt;code&gt;@-&lt;/code&gt; は許可された演算子名ですが、 &lt;code&gt;*-&lt;/code&gt; は許可されていません。この制限により、PostgreSQLはトークン間にスペースを必要とせずにSQL準拠のクエリを解析できます。</target>
        </trans-unit>
        <trans-unit id="1270acc7d371bd67bf727e789543eb2fb05a795a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;count(*)&lt;/code&gt; yields the total number of input rows; &lt;code&gt;count(f1)&lt;/code&gt; yields the number of input rows in which &lt;code&gt;f1&lt;/code&gt; is non-null, since &lt;code&gt;count&lt;/code&gt; ignores nulls; and &lt;code&gt;count(distinct f1)&lt;/code&gt; yields the number of distinct non-null values of &lt;code&gt;f1&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;count(*)&lt;/code&gt; は入力行の総数を生成します。 &lt;code&gt;count(f1)&lt;/code&gt; は、 &lt;code&gt;count&lt;/code&gt; が nullを無視するため、 &lt;code&gt;f1&lt;/code&gt; がnullではない入力行の数を生成します。そして &lt;code&gt;count(distinct f1)&lt;/code&gt; は、 &lt;code&gt;f1&lt;/code&gt; の nullでない明確な値の数を返します。</target>
        </trans-unit>
        <trans-unit id="241e368bd5f84d8bd9b37213abb0c1ce606628ca" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;&lt;code&gt;source_sql&lt;/code&gt;&lt;/em&gt; might produce a set something like:</source>
          <target state="translated">たとえば、&lt;em&gt; &lt;code&gt;source_sql&lt;/code&gt; &lt;/em&gt;は次のようなセットを生成し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="155faecb9306b9147a2e7777bee4e12a795c5623" translate="yes" xml:space="preserve">
          <source>For example, a common way to do case-insensitive comparisons is to use the &lt;code&gt;lower&lt;/code&gt; function:</source>
          <target state="translated">たとえば、大文字と小文字を区別しない比較を行う一般的な方法は、 &lt;code&gt;lower&lt;/code&gt; 関数を使用することです。</target>
        </trans-unit>
        <trans-unit id="d5c31174366767191298875589e027e626f3481e" translate="yes" xml:space="preserve">
          <source>For example, an application workload might consist of: 10% of changes are important customer details, while 90% of changes are less important data that the business can more easily survive if it is lost, such as chat messages between users.</source>
          <target state="translated">例えば、アプリケーションのワークロードは次のようなもので構成されているかもしれません。10%の変更は重要な顧客情報であり、90%の変更は、ユーザー間のチャットメッセージなど、紛失した場合にビジネスがより簡単に生き残ることができる重要度の低いデータです。</target>
        </trans-unit>
        <trans-unit id="130ff877846a9ba145c6084d6c6d927c9f6f130d" translate="yes" xml:space="preserve">
          <source>For example, consider a bank database that contains balances for various customer accounts, as well as total deposit balances for branches. Suppose that we want to record a payment of $100.00 from Alice's account to Bob's account. Simplifying outrageously, the SQL commands for this might look like:</source>
          <target state="translated">例えば、様々な顧客口座の残高と支店の預金残高の合計が含まれている銀行データベースを考えてみましょう。例えば、アリスの口座からボブの口座への100ドルの支払いを記録したいとします。極端に単純化すると、このためのSQLコマンドは次のようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="2f3682a6f9ea0b208434ae010d3a1a17fff514e9" translate="yes" xml:space="preserve">
          <source>For example, consider the definition of a function, &lt;code&gt;dept&lt;/code&gt;, as:</source>
          <target state="translated">たとえば、関数 &lt;code&gt;dept&lt;/code&gt; の定義を次のように考えます。</target>
        </trans-unit>
        <trans-unit id="0e0f997381e2092937165cc0bbee1c5517c59395" translate="yes" xml:space="preserve">
          <source>For example, consider this table definition:</source>
          <target state="translated">例えば、次のようなテーブル定義を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="8190f04d38d06a461e096583cfda36d375198e8e" translate="yes" xml:space="preserve">
          <source>For example, consider:</source>
          <target state="translated">例えば、考えてみてください。</target>
        </trans-unit>
        <trans-unit id="c33bc524f5320aea55d00b964061ae906c69106d" translate="yes" xml:space="preserve">
          <source>For example, if for some reason you want to disable the GEQO optimizer for a given database, you'd ordinarily have to either disable it for all databases or make sure that every connecting client is careful to issue &lt;code&gt;SET geqo TO off&lt;/code&gt;. To make this setting the default within a particular database, you can execute the command:</source>
          <target state="translated">たとえば、何らかの理由で特定のデータベースのGEQOオプティマイザーを無効にする場合は、通常、すべてのデータベースでGEQOオプティマイザーを無効にするか、接続しているすべてのクライアントが &lt;code&gt;SET geqo TO off&lt;/code&gt; を発行するように注意する必要があります。特定のデータベース内でこの設定をデフォルトにするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="3496b62777d29ce14330d5cf671f27e158b5c5b3" translate="yes" xml:space="preserve">
          <source>For example, in an &lt;code&gt;UPDATE&lt;/code&gt; command requiring both &lt;code&gt;SELECT&lt;/code&gt; and &lt;code&gt;UPDATE&lt;/code&gt; permissions, if there are multiple applicable policies of each type, they will be combined as follows:</source>
          <target state="translated">たとえば、 &lt;code&gt;SELECT&lt;/code&gt; 権限と &lt;code&gt;UPDATE&lt;/code&gt; 権限の両方を必要とする &lt;code&gt;UPDATE&lt;/code&gt; コマンドで、各タイプの適用可能なポリシーが複数ある場合、それらは次のように結合されます。</target>
        </trans-unit>
        <trans-unit id="ab8f2f938fa83461064d386cea51bbcdc598d202" translate="yes" xml:space="preserve">
          <source>For example, suppose you have some JSON data from a GPS tracker that you would like to parse, such as:</source>
          <target state="translated">例えば、GPSトラッカーからのJSONデータを持っていて、それを解析したいとします。</target>
        </trans-unit>
        <trans-unit id="09ccf286e7b8e433098859f728308c846bcff18f" translate="yes" xml:space="preserve">
          <source>For example, suppose you would like to retrieve all heart rate values higher than 130. You can achieve this using the following expression:</source>
          <target state="translated">例えば、130よりも高い心拍数の値をすべて取得したいとします。これは次の式を使って実現できます。</target>
        </trans-unit>
        <trans-unit id="06aef20d242f4af58541238d6758845220aef49a" translate="yes" xml:space="preserve">
          <source>For example, the following computes the square root of 2:</source>
          <target state="translated">例えば、次のように2の平方根を計算します。</target>
        </trans-unit>
        <trans-unit id="d06f05887749d75fd3c1c2ace4acae1fa3061b96" translate="yes" xml:space="preserve">
          <source>For example, the following finds the largest city population in each state:</source>
          <target state="translated">例えば、以下は各州で最大の都市の人口を求めます。</target>
        </trans-unit>
        <trans-unit id="da6cc196eb1d7b4036c8cbb26afabb02667647d5" translate="yes" xml:space="preserve">
          <source>For example, the following is (syntactically) valid SQL input:</source>
          <target state="translated">例えば、以下は(構文的に)有効なSQL入力です。</target>
        </trans-unit>
        <trans-unit id="471cd6e5da58fc5eff7b7a62ed009e72a5a73a36" translate="yes" xml:space="preserve">
          <source>For example, the following query finds the names of all cities, including state capitals, that are located at an altitude over 500 feet:</source>
          <target state="translated">例えば、以下のクエリは、州都を含む、標高500フィート以上の場所にあるすべての都市の名前を検索します。</target>
        </trans-unit>
        <trans-unit id="427b943c4463b780091a4e2b86abe42fce5db1c0" translate="yes" xml:space="preserve">
          <source>For example, the following query finds the names of all cities, including state capitals, that are located at an elevation over 500 feet:</source>
          <target state="translated">例えば、以下のクエリは、州都を含む標高500フィート以上の場所にあるすべての都市の名前を検索します。</target>
        </trans-unit>
        <trans-unit id="8766b8f0ef1ada9c82b69e07f58a59c6fe1e88b5" translate="yes" xml:space="preserve">
          <source>For example, the operating system might provide a locale named &lt;code&gt;de_DE.utf8&lt;/code&gt;. &lt;code&gt;initdb&lt;/code&gt; would then create a collation named &lt;code&gt;de_DE.utf8&lt;/code&gt; for encoding &lt;code&gt;UTF8&lt;/code&gt; that has both &lt;code&gt;LC_COLLATE&lt;/code&gt; and &lt;code&gt;LC_CTYPE&lt;/code&gt; set to &lt;code&gt;de_DE.utf8&lt;/code&gt;. It will also create a collation with the &lt;code&gt;.utf8&lt;/code&gt; tag stripped off the name. So you could also use the collation under the name &lt;code&gt;de_DE&lt;/code&gt;, which is less cumbersome to write and makes the name less encoding-dependent. Note that, nevertheless, the initial set of collation names is platform-dependent.</source>
          <target state="translated">たとえば、オペレーティングシステムは &lt;code&gt;de_DE.utf8&lt;/code&gt; という名前のロケールを提供する場合があります。 &lt;code&gt;initdb&lt;/code&gt; の後、名前の照合作成します &lt;code&gt;de_DE.utf8&lt;/code&gt; エンコードするために &lt;code&gt;UTF8&lt;/code&gt; 両方持っている &lt;code&gt;LC_COLLATE&lt;/code&gt; と &lt;code&gt;LC_CTYPE&lt;/code&gt; に設定 &lt;code&gt;de_DE.utf8&lt;/code&gt; を。また、名前から &lt;code&gt;.utf8&lt;/code&gt; タグを取り除いた照合も作成します。したがって、 &lt;code&gt;de_DE&lt;/code&gt; という名前で照合順序を使用することもできます。これにより、記述の煩雑さが軽減され、名前のエンコーディング依存性が低くなります。それにもかかわらず、最初の照合名のセットはプラットフォームに依存することに注意してください。</target>
        </trans-unit>
        <trans-unit id="3d1092481b703760dda3e1ee7578a2b981f6cc15" translate="yes" xml:space="preserve">
          <source>For example, the provided query might produce a set something like:</source>
          <target state="translated">例えば、指定されたクエリは、次のようなセットを生成します。</target>
        </trans-unit>
        <trans-unit id="52791448958e771d66ed4c02517edcf92f08b5b5" translate="yes" xml:space="preserve">
          <source>For example, this call requests 1000 values with a mean of 5 and a standard deviation of 3:</source>
          <target state="translated">例えば、このコールでは、平均が 5、標準偏差が 3 の値を 1000 個要求しています。</target>
        </trans-unit>
        <trans-unit id="2183a836f537bf498dab36fed767383696d0c956" translate="yes" xml:space="preserve">
          <source>For example, this command updates all products that have a price of 5 to have a price of 10:</source>
          <target state="translated">たとえば、このコマンドは、価格が5のすべての製品を10の価格に更新します。</target>
        </trans-unit>
        <trans-unit id="324c8ee952ed40593d1680efa074498a02761679" translate="yes" xml:space="preserve">
          <source>For example, to check the total size of the data contained in a partitioned table &lt;code&gt;measurement&lt;/code&gt;, one could use the following query:</source>
          <target state="translated">たとえば、パーティションテーブルの &lt;code&gt;measurement&lt;/code&gt; 含まれるデータの合計サイズを確認するには、次のクエリを使用できます。</target>
        </trans-unit>
        <trans-unit id="b9b7cfd87b1d0ccc58641762031f79d95fb10548" translate="yes" xml:space="preserve">
          <source>For example, to find the ten most frequent words in a document collection:</source>
          <target state="translated">例えば、文書集の中で最も使用頻度の高い10の単語を見つけるために。</target>
        </trans-unit>
        <trans-unit id="e1319ad17250aad6d336666b42f8c3fc3dd702af" translate="yes" xml:space="preserve">
          <source>For example, we could create a domain over integers that accepts only positive integers:</source>
          <target state="translated">例えば、正の整数のみを受け入れる整数のドメインを作成することができます。</target>
        </trans-unit>
        <trans-unit id="85f07a23cd87e159d728d36de17c8370d8afa3c6" translate="yes" xml:space="preserve">
          <source>For example, when querying the GPS data listed above, you can abstract from the fact that it stores an array of segments when using the lax mode:</source>
          <target state="translated">例えば、上記のGPSデータを照会する際に、弛みモードを使用する場合には、セグメントの配列を格納しているという事実を抽象化することができる。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="c2d772c743b871fd1a2436437c4b730a2cfa282c" translate="yes" xml:space="preserve">
          <source>For examples of usage, see the regression test &lt;code&gt;sql/cube.sql&lt;/code&gt;.</source>
          <target state="translated">使用例については、回帰テスト &lt;code&gt;sql/cube.sql&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="2fc3e3d4179a2417bcd2f2e1fa817b3ae7d39bff" translate="yes" xml:space="preserve">
          <source>For examples of usage, see the regression test &lt;code&gt;sql/seg.sql&lt;/code&gt;.</source>
          <target state="translated">使用例については、回帰テスト &lt;code&gt;sql/seg.sql&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="3df123af765f2fc11785cbb335e07b630c980edc" translate="yes" xml:space="preserve">
          <source>For fixed-width types used in system tables, it is critical that the size and alignment defined in &lt;code&gt;pg_type&lt;/code&gt; agree with the way that the compiler will lay out the column in a structure representing a table row.</source>
          <target state="translated">システムテーブルで使用される固定幅タイプの場合、 &lt;code&gt;pg_type&lt;/code&gt; で定義されたサイズと配置が、コンパイラがテーブル行を表す構造体に列をレイアウトする方法と一致することが重要です。</target>
        </trans-unit>
        <trans-unit id="20343bba651c5588f7a79e82c05205aaef985eca" translate="yes" xml:space="preserve">
          <source>For foreign servers, allows creation of foreign tables using the server. Grantees may also create, alter, or drop their own user mappings associated with that server.</source>
          <target state="translated">外部サーバーの場合、サーバーを使用して外部テーブルを作成することができます。助成対象者は、そのサーバーに関連付けられた独自のユーザーマッピングを作成、変更、または削除することもできます。</target>
        </trans-unit>
        <trans-unit id="f6b32aab859f58749932d6c6be03c33f6bd3e7d6" translate="yes" xml:space="preserve">
          <source>For foreign-data wrappers, allows creation of new servers using the foreign-data wrapper.</source>
          <target state="translated">外部データラッパーの場合、外部データラッパーを使用して新しいサーバーを作成することができます。</target>
        </trans-unit>
        <trans-unit id="781dea1ed3385a0b699638076216344a55a6bbec" translate="yes" xml:space="preserve">
          <source>For functions and operators, an object in the search path is said to be visible if there is no object of the same name &lt;em&gt;and argument data type(s)&lt;/em&gt; earlier in the path. For operator classes and families, both the name and the associated index access method are considered.</source>
          <target state="translated">関数と演算子の場合、検索パス内のオブジェクトは、パスの前に同じ名前&lt;em&gt;と引数のデータ型&lt;/em&gt;のオブジェクトがない場合に表示されると言われます。演算子クラスとファミリの場合、名前と関連するインデックスアクセス方法の両方が考慮されます。</target>
        </trans-unit>
        <trans-unit id="db80d63b0cfce8e9c534eefc3bfa1133ade5f443" translate="yes" xml:space="preserve">
          <source>For functions built into PostgreSQL itself, the bitcode is installed into &lt;code&gt;$pkglibdir/bitcode/postgres&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL自体に組み込まれている関数の場合、ビットコードは &lt;code&gt;$pkglibdir/bitcode/postgres&lt;/code&gt; インストールされます。</target>
        </trans-unit>
        <trans-unit id="76b109732d62dd01020a7a1cd75adf97d78489a2" translate="yes" xml:space="preserve">
          <source>For functions, &lt;code&gt;db_procedure:{execute}&lt;/code&gt; will be checked when user tries to execute a function as a part of query, or using fast-path invocation. If this function is a trusted procedure, it also checks &lt;code&gt;db_procedure:{entrypoint}&lt;/code&gt; permission to check whether it can perform as entry point of trusted procedure.</source>
          <target state="translated">関数の場合、ユーザーがクエリの一部として、または高速パス呼び出しを使用して関数を実行しようとすると、 &lt;code&gt;db_procedure:{execute}&lt;/code&gt; がチェックされます。この関数が信頼できるプロシージャである場合は、 &lt;code&gt;db_procedure:{entrypoint}&lt;/code&gt; 権限もチェックして、信頼できるプロシージャのエントリポイントとして実行できるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="50f73f941e99db6aff704bfc76eaf9cb53fc581b" translate="yes" xml:space="preserve">
          <source>For further examples of scripts used for bulk editing, see &lt;code&gt;convert_oid2name.pl&lt;/code&gt; and &lt;code&gt;remove_pg_type_oid_symbols.pl&lt;/code&gt; attached to this message: &lt;a href=&quot;https://www.postgresql.org/message-id/CAJVSVGVX8gXnPm+Xa=DxR7kFYprcQ1tNcCT5D0O3ShfnM6jehA@mail.gmail.com&quot;&gt;https://www.postgresql.org/message-id/CAJVSVGVX8gXnPm+Xa=DxR7kFYprcQ1tNcCT5D0O3ShfnM6jehA@mail.gmail.com&lt;/a&gt;</source>
          <target state="translated">一括編集に使用されるスクリプトのその他の例については、このメッセージに添付されている &lt;code&gt;convert_oid2name.pl&lt;/code&gt; および &lt;code&gt;remove_pg_type_oid_symbols.pl&lt;/code&gt; を参照して&lt;a href=&quot;https://www.postgresql.org/message-id/CAJVSVGVX8gXnPm+Xa=DxR7kFYprcQ1tNcCT5D0O3ShfnM6jehA@mail.gmail.com&quot;&gt;ください。https&lt;/a&gt;：//www.postgresql.org/message-id/CAJVSVGVX8gXnPm+Xa=DxR7kFYprcQ1tNcCT5D0O3ShfnM6jehA 。</target>
        </trans-unit>
        <trans-unit id="95d0a9533934206493197f921cdd921bcea9067d" translate="yes" xml:space="preserve">
          <source>For historical reasons, &lt;code&gt;ALTER TABLE&lt;/code&gt; can be used with sequences too; but the only variants of &lt;code&gt;ALTER TABLE&lt;/code&gt; that are allowed with sequences are equivalent to the forms shown above.</source>
          <target state="translated">歴史的な理由から、 &lt;code&gt;ALTER TABLE&lt;/code&gt; はシーケンスでも使用できます。ただし、シーケンスで許可される &lt;code&gt;ALTER TABLE&lt;/code&gt; のバリアントは、上記の形式と同等です。</target>
        </trans-unit>
        <trans-unit id="821eb91f933952c5c235fc4f1d7ebbeff4650e0a" translate="yes" xml:space="preserve">
          <source>For historical reasons, &lt;code&gt;ALTER TABLE&lt;/code&gt; can be used with views too; but the only variants of &lt;code&gt;ALTER TABLE&lt;/code&gt; that are allowed with views are equivalent to the ones shown above.</source>
          <target state="translated">歴史的な理由から、 &lt;code&gt;ALTER TABLE&lt;/code&gt; はビューでも使用できます。ただし、ビューで使用できる &lt;code&gt;ALTER TABLE&lt;/code&gt; の唯一のバリアントは、上記のものと同等です。</target>
        </trans-unit>
        <trans-unit id="fd9d930dc3517bba2d1837bdddba003f94a1e402" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;code&gt;inet_ops&lt;/code&gt; operator class is not the default class for types &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt;. To use it, mention the class name in &lt;code&gt;CREATE INDEX&lt;/code&gt;, for example</source>
          <target state="translated">歴史的な理由により、 &lt;code&gt;inet_ops&lt;/code&gt; 演算子クラスは、タイプ &lt;code&gt;inet&lt;/code&gt; および &lt;code&gt;cidr&lt;/code&gt; のデフォルトクラスではありません。これを使用するには、たとえば &lt;code&gt;CREATE INDEX&lt;/code&gt; でクラス名を指定します。</target>
        </trans-unit>
        <trans-unit id="c4d4c412fef208bbedad98fd29f400c744b1038b" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;code&gt;penalty&lt;/code&gt; function doesn't just return a &lt;code&gt;float&lt;/code&gt; result; instead it has to store the value at the location indicated by the third argument. The return value per se is ignored, though it's conventional to pass back the address of that argument.</source>
          <target state="translated">歴史的な理由により、 &lt;code&gt;penalty&lt;/code&gt; 関数は &lt;code&gt;float&lt;/code&gt; 結果を返すだけではありません。代わりに、3番目の引数で示された場所に値を格納する必要があります。戻り値自体は無視されますが、その引数のアドレスを返すのが一般的です。</target>
        </trans-unit>
        <trans-unit id="602a56377f9c453998804c9239a3f0e16670f12d" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;code&gt;same&lt;/code&gt; function doesn't just return a Boolean result; instead it has to store the flag at the location indicated by the third argument. The return value per se is ignored, though it's conventional to pass back the address of that argument.</source>
          <target state="translated">歴史的な理由から、 &lt;code&gt;same&lt;/code&gt; 関数はブール値の結果を返すだけではありません。代わりに、3番目の引数で指定された場所にフラグを保存する必要があります。戻り値自体は無視されますが、その引数のアドレスを返すのが一般的です。</target>
        </trans-unit>
        <trans-unit id="21712eeec3b375c143c6b302dd00ef3b3fdb1287" translate="yes" xml:space="preserve">
          <source>For historical reasons, the function &lt;code&gt;md5&lt;/code&gt; returns a hex-encoded value of type &lt;code&gt;text&lt;/code&gt; whereas the SHA-2 functions return type &lt;code&gt;bytea&lt;/code&gt;. Use the functions &lt;a href=&quot;functions-binarystring#FUNCTION-ENCODE&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions-binarystring#FUNCTION-DECODE&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; to convert between the two. For example write &lt;code&gt;encode(sha256('abc'), 'hex')&lt;/code&gt; to get a hex-encoded text representation, or &lt;code&gt;decode(md5('abc'), 'hex')&lt;/code&gt; to get a &lt;code&gt;bytea&lt;/code&gt; value.</source>
          <target state="translated">歴史的な理由から、関数 &lt;code&gt;md5&lt;/code&gt; は16進エンコードされたタイプ &lt;code&gt;text&lt;/code&gt; の値を返しますが、SHA-2関数はタイプ &lt;code&gt;bytea&lt;/code&gt; を返します。関数&lt;a href=&quot;functions-binarystring#FUNCTION-ENCODE&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;functions-binarystring#FUNCTION-DECODE&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;を使用して、2つの間で変換します。たとえば、 &lt;code&gt;encode(sha256('abc'), 'hex')&lt;/code&gt; を記述して16進エンコードされたテキスト表現を取得するか、 &lt;code&gt;decode(md5('abc'), 'hex')&lt;/code&gt; を &lt;code&gt;bytea&lt;/code&gt; して16進値を取得します。</target>
        </trans-unit>
        <trans-unit id="edf5a6774e8ddac6655d000c335cd8365c752c22" translate="yes" xml:space="preserve">
          <source>For identity columns, the &lt;code&gt;COPY FROM&lt;/code&gt; command will always write the column values provided in the input data, like the &lt;code&gt;INSERT&lt;/code&gt; option &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt;.</source>
          <target state="translated">ID列の場合、 &lt;code&gt;COPY FROM&lt;/code&gt; コマンドは、 &lt;code&gt;INSERT&lt;/code&gt; オプション &lt;code&gt;OVERRIDING SYSTEM VALUE&lt;/code&gt; のように、常に入力データで提供される列の値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="330e059840df0474749e60d131c132790cef269d" translate="yes" xml:space="preserve">
          <source>For index methods that support ordered scans (currently, only B-tree), the optional clauses &lt;code&gt;ASC&lt;/code&gt;, &lt;code&gt;DESC&lt;/code&gt;, &lt;code&gt;NULLS FIRST&lt;/code&gt;, and/or &lt;code&gt;NULLS LAST&lt;/code&gt; can be specified to modify the sort ordering of the index. Since an ordered index can be scanned either forward or backward, it is not normally useful to create a single-column &lt;code&gt;DESC&lt;/code&gt; index &amp;mdash; that sort ordering is already available with a regular index. The value of these options is that multicolumn indexes can be created that match the sort ordering requested by a mixed-ordering query, such as &lt;code&gt;SELECT ... ORDER BY x ASC, y DESC&lt;/code&gt;. The &lt;code&gt;NULLS&lt;/code&gt; options are useful if you need to support &amp;ldquo;nulls sort low&amp;rdquo; behavior, rather than the default &amp;ldquo;nulls sort high&amp;rdquo;, in queries that depend on indexes to avoid sorting steps.</source>
          <target state="translated">順序付けされたスキャン（現在はBツリーのみ）をサポートするインデックスメソッドの場合、オプションの句 &lt;code&gt;ASC&lt;/code&gt; 、 &lt;code&gt;DESC&lt;/code&gt; 、 &lt;code&gt;NULLS FIRST&lt;/code&gt; 、または &lt;code&gt;NULLS LAST&lt;/code&gt; を指定して、インデックスのソート順序を変更できます。順序付けされたインデックスは順方向または逆方向にスキャンできるため、通常、単一列の &lt;code&gt;DESC&lt;/code&gt; インデックスを作成することは役に立ちません。その並べ替え順序は、通常のインデックスですでに利用可能です。これらのオプションの価値は、 &lt;code&gt;SELECT ... ORDER BY x ASC, y DESC&lt;/code&gt; などの混合順序付けクエリによって要求された並べ替え順序に一致する複数列インデックスを作成できることです。 &lt;code&gt;NULLS&lt;/code&gt; オプションは、並べ替え手順を回避するためにインデックスに依存するクエリで、デフォルトの「nulls sort high」ではなく「nulls sort low」動作をサポートする必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="6b918ccfc93956e12afed439ea7d7ee85b4aa64b" translate="yes" xml:space="preserve">
          <source>For indexes, what is tracked is entirely-unused pages, rather than free space within pages. Therefore, the values are not meaningful, just whether a page is full or empty.</source>
          <target state="translated">インデックスの場合、トラッキングされるのは、ページ内の空きスペースではなく、完全に使用されていないページです。したがって、ページが満杯なのか空なのかだけでは、値に意味はありません。</target>
        </trans-unit>
        <trans-unit id="4513c5edb4e83b5f0af5e4602920aeca55f3099c" translate="yes" xml:space="preserve">
          <source>For information about writing new extensions, see &lt;a href=&quot;https://www.postgresql.org/docs/12/extend-extensions.html&quot;&gt;Section 37.17&lt;/a&gt;.</source>
          <target state="translated">新しい拡張機能の記述については、&lt;a href=&quot;https://www.postgresql.org/docs/12/extend-extensions.html&quot;&gt;セクション37.17を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6332e24d7bf340ffc8bee2de4ec1b88cdff7c6ee" translate="yes" xml:space="preserve">
          <source>For information about writing new extensions, see &lt;a href=&quot;https://www.postgresql.org/docs/13/extend-extensions.html&quot;&gt;Section 37.17&lt;/a&gt;.</source>
          <target state="translated">新しい拡張機能の作成については、&lt;a href=&quot;https://www.postgresql.org/docs/13/extend-extensions.html&quot;&gt;セクション37.17を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f9e4e41c768a47414e220546e9436ef01464205" translate="yes" xml:space="preserve">
          <source>For inheritance:</source>
          <target state="translated">相続のために。</target>
        </trans-unit>
        <trans-unit id="ac175c388fdbc502fc95fbb47ec000df9ac1c1ac" translate="yes" xml:space="preserve">
          <source>For instance, the example given in the previous section would also work as</source>
          <target state="translated">例えば、前のセクションで示した例は、次のようにも動作します。</target>
        </trans-unit>
        <trans-unit id="aa594066fb4185dd4bf2bb314c6dc858ea1dc91b" translate="yes" xml:space="preserve">
          <source>For large tables, &lt;code&gt;ANALYZE&lt;/code&gt; takes a random sample of the table contents, rather than examining every row. This allows even very large tables to be analyzed in a small amount of time. Note, however, that the statistics are only approximate, and will change slightly each time &lt;code&gt;ANALYZE&lt;/code&gt; is run, even if the actual table contents did not change. This might result in small changes in the planner's estimated costs shown by &lt;a href=&quot;sql-explain&quot;&gt;EXPLAIN&lt;/a&gt;. In rare situations, this non-determinism will cause the planner's choices of query plans to change after &lt;code&gt;ANALYZE&lt;/code&gt; is run. To avoid this, raise the amount of statistics collected by &lt;code&gt;ANALYZE&lt;/code&gt;, as described below.</source>
          <target state="translated">大きなテーブルの場合、 &lt;code&gt;ANALYZE&lt;/code&gt; はすべての行を調べるのではなく、テーブルコンテンツのランダムなサンプルを取得します。これにより、非常に大きなテーブルでも短時間で分析できます。ただし、統計は概算であり、実際のテーブルの内容が変更されていなくても、 &lt;code&gt;ANALYZE&lt;/code&gt; が実行されるたびにわずかに変化することに注意してください。これにより、&lt;a href=&quot;sql-explain&quot;&gt;EXPLAIN&lt;/a&gt;によって示されるプランナの推定コストに小さな変更が生じる可能性があります。まれに、この &lt;code&gt;ANALYZE&lt;/code&gt; により、ANALYZEの実行後にプランナが選択したクエリプランが変更されます。これを回避するには、以下で説明するように、 &lt;code&gt;ANALYZE&lt;/code&gt; によって収集される統計量を増やします。</target>
        </trans-unit>
        <trans-unit id="d9def7e76f8e004e7c6ff9a43935027a0e8494d2" translate="yes" xml:space="preserve">
          <source>For magnetic drives, a good starting point for this setting is the number of separate drives comprising a RAID 0 stripe or RAID 1 mirror being used for the database. (For RAID 5 the parity drive should not be counted.) However, if the database is often busy with multiple queries issued in concurrent sessions, lower values may be sufficient to keep the disk array busy. A value higher than needed to keep the disks busy will only result in extra CPU overhead. SSDs and other memory-based storage can often process many concurrent requests, so the best value might be in the hundreds.</source>
          <target state="translated">磁気ドライブの場合、この設定の良い出発点は、データベースに使用されている RAID 0 ストライプまたは RAID 1 ミラーを構成する個別のドライブの数です(RAID 5 の場合は、パリティドライブは数えるべきではありません)。(RAID 5の場合、パリティドライブはカウントされません。)しかし、データベースが複数のクエリを同時に発行してビジー状態になることが多い場合は、ディスクアレイをビジー状態に保つためには、より低い値で十分かもしれません。ディスクをビジー状態に保つために必要な値よりも高い値を設定した場合、余分なCPUオーバーヘッドが発生するだけです。SSDやその他のメモリベースのストレージは、多くの同時リクエストを処理できることが多いので、最適な値は数百になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="db0641cab9eeea26c49a646ff42537d081fed018" translate="yes" xml:space="preserve">
          <source>For more detail see &lt;a href=&quot;functions-comparisons&quot;&gt;Section 9.23&lt;/a&gt;. Row constructors can also be used in connection with subqueries, as discussed in &lt;a href=&quot;functions-subquery&quot;&gt;Section 9.22&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;functions-comparisons&quot;&gt;セクション9.23を&lt;/a&gt;参照してください。&lt;a href=&quot;functions-subquery&quot;&gt;セクション9.22で&lt;/a&gt;説明されているように、行コンストラクタはサブクエリと組み合わせて使用​​することもできます。</target>
        </trans-unit>
        <trans-unit id="18338d5f8684a02701c33055a650f503dc79428a" translate="yes" xml:space="preserve">
          <source>For more detail see &lt;a href=&quot;functions-comparisons&quot;&gt;Section 9.24&lt;/a&gt;. Row constructors can also be used in connection with subqueries, as discussed in &lt;a href=&quot;functions-subquery&quot;&gt;Section 9.23&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;functions-comparisons&quot;&gt;セクション9.24を&lt;/a&gt;参照してください。&lt;a href=&quot;functions-subquery&quot;&gt;セクション9.23で&lt;/a&gt;説明されているように、行コンストラクターはサブクエリに関連して使用することもできます。</target>
        </trans-unit>
        <trans-unit id="3cb95316ba3180c7abceba8b606b2390f6f76c76" translate="yes" xml:space="preserve">
          <source>For more details about the structure of B-tree indexes, see &lt;a href=&quot;btree-implementation#BTREE-STRUCTURE&quot;&gt;Section 63.4.1&lt;/a&gt;. For more details about deduplication and posting lists, see &lt;a href=&quot;btree-implementation#BTREE-DEDUPLICATION&quot;&gt;Section 63.4.2&lt;/a&gt;.</source>
          <target state="translated">Bツリーインデックスの構造の詳細については、&lt;a href=&quot;btree-implementation#BTREE-STRUCTURE&quot;&gt;セクション63.4.1を&lt;/a&gt;参照してください。重複排除と投稿リストの詳細については、&lt;a href=&quot;btree-implementation#BTREE-DEDUPLICATION&quot;&gt;セクション63.4.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8fb8d2224d716120397e37c095ccc4fc811af648" translate="yes" xml:space="preserve">
          <source>For more details see &lt;code&gt;man gpg&lt;/code&gt;, &lt;a href=&quot;https://www.gnupg.org/gph/en/manual.html&quot;&gt;The GNU Privacy Handbook&lt;/a&gt; and other documentation on &lt;a href=&quot;https://www.gnupg.org/&quot;&gt;https://www.gnupg.org/&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;code&gt;man gpg&lt;/code&gt;、&lt;a href=&quot;https://www.gnupg.org/gph/en/manual.html&quot;&gt;The GNU Privacy Handbook&lt;/a&gt;、および &lt;a href=&quot;https://www.gnupg.org/&quot;&gt;https://www.gnupg.org/&lt;/a&gt; 等のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2c6217eaee5aceb86ffc3acacd99e4351f7c6bdf" translate="yes" xml:space="preserve">
          <source>For more examples of using &lt;code&gt;jsonpath&lt;/code&gt; operators and methods within path expressions, see &lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH-OPERATORS&quot;&gt;Section 9.15.2.3&lt;/a&gt;.</source>
          <target state="translated">パス式内で &lt;code&gt;jsonpath&lt;/code&gt; 演算子とメソッドを使用するその他の例については、&lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-PATH-OPERATORS&quot;&gt;セクション9.15.2.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="79cf6e3cf917058a0ed742c04d1ca6289aff5a38" translate="yes" xml:space="preserve">
          <source>For more information on each row-level lock mode, refer to &lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;Section 13.3.2&lt;/a&gt;.</source>
          <target state="translated">各行レベルのロックモードの詳細については、&lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;セクション13.3.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e2f8f8e747ece8758e1b6ba702e3c8c61e76fde3" translate="yes" xml:space="preserve">
          <source>For more information on parallel query, see &lt;a href=&quot;https://www.postgresql.org/docs/12/parallel-query.html&quot;&gt;Chapter 15&lt;/a&gt;.</source>
          <target state="translated">並列クエリの詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/12/parallel-query.html&quot;&gt;第15章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c49142dd945917208a161ed15ae4eabdc1feb316" translate="yes" xml:space="preserve">
          <source>For more information on parallel query, see &lt;a href=&quot;https://www.postgresql.org/docs/13/parallel-query.html&quot;&gt;Chapter 15&lt;/a&gt;.</source>
          <target state="translated">並列クエリの詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/parallel-query.html&quot;&gt;第15章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1e9f192fbf0623739197082afd424ce16d42f59b" translate="yes" xml:space="preserve">
          <source>For more information on prepared statements, see &lt;a href=&quot;sql-prepare&quot;&gt;PREPARE&lt;/a&gt;.</source>
          <target state="translated">準備済みステートメントの詳細については、&lt;a href=&quot;sql-prepare&quot;&gt;PREPAREを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d65fb0f770cbb9d7773305feb7d0f9aff8503a9d" translate="yes" xml:space="preserve">
          <source>For more information on query planning and the statistics collected by PostgreSQL for that purpose, see the &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE&lt;/a&gt; documentation.</source>
          <target state="translated">クエリの計画とその目的のためにPostgreSQLによって収集される統計の詳細については、&lt;a href=&quot;sql-analyze&quot;&gt;ANALYZEの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b483319bfce6914eeb2d77590a6f05860cc2822" translate="yes" xml:space="preserve">
          <source>For more information on row security policies, see &lt;a href=&quot;sql-createpolicy&quot;&gt;CREATE POLICY&lt;/a&gt;.</source>
          <target state="translated">行セキュリティポリシーの詳細については、「&lt;a href=&quot;sql-createpolicy&quot;&gt;CREATE POLICY&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="6cd57e75dd7c6d9a0bba32ec8cf0aedac82282ff" translate="yes" xml:space="preserve">
          <source>For more information on schema handling, see &lt;a href=&quot;ddl-schemas&quot;&gt;Section 5.9&lt;/a&gt;. In particular, the default configuration is suitable only when the database has a single user or a few mutually-trusting users.</source>
          <target state="translated">スキーマ処理の詳細については、&lt;a href=&quot;ddl-schemas&quot;&gt;セクション5.9を&lt;/a&gt;参照してください。特に、デフォルトの構成は、データベースに単一のユーザーまたは相互に信頼しているユーザーが少数いる場合にのみ適しています。</target>
        </trans-unit>
        <trans-unit id="7a7cfc539431d71689ab3e6fc5a89a4a3ad68497" translate="yes" xml:space="preserve">
          <source>For more information on tablespaces, see &lt;a href=&quot;manage-ag-tablespaces&quot;&gt;Section 22.6&lt;/a&gt;.</source>
          <target state="translated">表領域の詳細は、&lt;a href=&quot;manage-ag-tablespaces&quot;&gt;22.6項を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="156d896fc36c27213e33f6486192aeb35b072ae4" translate="yes" xml:space="preserve">
          <source>For more information on the creation and usage of prepared statements, see &lt;a href=&quot;sql-prepare&quot;&gt;PREPARE&lt;/a&gt;.</source>
          <target state="translated">準備されたステートメントの作成と使用の詳細については、&lt;a href=&quot;sql-prepare&quot;&gt;PREPAREを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5233548445314b3aa1fa8672502b639b8263c6c7" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;sql-values&quot;&gt;VALUES&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-values&quot;&gt;VALUESを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4dd314c2b9f8c0a5f4a4e41c5efbe9fea6718856" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;continuous-archiving&quot;&gt;Section 25.3&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;continuous-archiving&quot;&gt;セクション25.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5c8ecf019aee64acad91826dcc7e9b171f0be1a3" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;datatype-oid&quot;&gt;Section 8.19&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;datatype-oid&quot;&gt;セクション8.19を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20226217ec3afb436b4729b0abf0339c4c1dd2ec" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;ddl-constraints&quot;&gt;Section 5.4&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ddl-constraints&quot;&gt;セクション5.4を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c1adc5bd35432adf2eb7a774b8a34ae4fb1d4e1a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;ddl-schemas&quot;&gt;Section 5.9&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ddl-schemas&quot;&gt;セクション5.9を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d79b9c727fe67702d70b6fd9999ab32eca117acb" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;functions-aggregate&quot;&gt;Section 9.21&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;functions-aggregate&quot;&gt;セクション9.21を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="980ff7abe737ed29a2eef6afee49381fad9641d4" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://www.postgresql.org/docs/13/bgworker.html&quot;&gt;Chapter 47&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/bgworker.html&quot;&gt;第47章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="780f7f92af5944157940b8ad375fbf026ad4460e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://www.postgresql.org/docs/13/extend-extensions.html&quot;&gt;Section 37.17&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/extend-extensions.html&quot;&gt;セクション37.17を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9dc856ae16ea4020ceefa8b323354b5bb864a7ae" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;logfile-maintenance&quot;&gt;Section 24.3&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;logfile-maintenance&quot;&gt;セクション24.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1290c10776f1a21730c9d3d4d887ff27a87c6292" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;manage-ag-overview&quot;&gt;Section 22.1&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;manage-ag-overview&quot;&gt;セクション22.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b5e210e5231f27abc7ef42e8fb21b52c35cb3c9d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;manage-ag-tablespaces&quot;&gt;Section 22.6&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;manage-ag-tablespaces&quot;&gt;セクション22.6を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="214a61df4ffb5c9aacd0276fef415f0fd717971e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;monitoring-stats&quot;&gt;Section 27.2&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;monitoring-stats&quot;&gt;セクション27.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="69f071548ff8e2bf11f53bb59f5a867ac246fb29" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;routine-vacuuming&quot;&gt;Section 24.1&lt;/a&gt; .</source>
          <target state="translated">詳細については、&lt;a href=&quot;routine-vacuuming&quot;&gt;セクション24.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="14fb86a709f50b66214aa6322a762395267a59e5" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;routine-vacuuming#AUTOVACUUM&quot;&gt;Section 24.1.6&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;routine-vacuuming#AUTOVACUUM&quot;&gt;セクション24.1.6を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="998da92e58bf1cb4909e97dd5246a04a2cb1c611" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;runtime-config-connection&quot;&gt;Section 19.3&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;runtime-config-connection&quot;&gt;セクション19.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1e9cee8d5c892db192aebeb281deff09ba3186a0" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;runtime-config-logging&quot;&gt;Section 19.8&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;runtime-config-logging&quot;&gt;セクション19.8を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="57e27342dd33a63d74ae836f45de53d4f70ca811" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-BACKGROUND-WRITER&quot;&gt;Section 19.4.5&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-BACKGROUND-WRITER&quot;&gt;セクション19.4.5を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2e214c810c78d30da88471e9743b6fb079f8dc4" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-MEMORY&quot;&gt;Section 19.4.1&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-MEMORY&quot;&gt;セクション19.4.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="57a39e47097148bf2b804e705bbfd7be10e3d22f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;runtime-config-wal&quot;&gt;Section 19.5&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;runtime-config-wal&quot;&gt;セクション19.5を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fe101332ab82e0d86e6d3cf0a47fcad58b5e3cfd" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;server-start&quot;&gt;Section 18.3&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;server-start&quot;&gt;セクション18.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4f6e986dbd3152279b0853a52133ca23ef852275" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-analyze&quot;&gt;ANALYZEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6b52e4cf0af72d79422d38425c0eeb1d0943c31" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-commit&quot;&gt;COMMITを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7989d717cddceab28ddd2a4acba5581bf4509f56" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createcast&quot;&gt;CREATE CAST&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createcast&quot;&gt;CREATECASTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="feb082d47f0b69434fc625c629e1b305bb95391f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createforeigndatawrapper&quot;&gt;CREATE FOREIGN DATA WRAPPER&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createforeigndatawrapper&quot;&gt;CREATE FOREIGN DATAWRAPPERを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="51d486d6d4cc03e053d0925cca9ae38c095cdd43" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGN TABLE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGNTABLEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="72aa113f96629050f4ef19a2cf379f2dc52cd5f0" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createfunction&quot;&gt;CREATE FUNCTION&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createfunction&quot;&gt;CREATEFUNCTIONを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3943a2288ce11b53333fada41110757ed47b902a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createindex&quot;&gt;CREATE INDEX&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createindex&quot;&gt;CREATEINDEXを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cae845df4a402ad075e8e3db9aa71b1455d17920" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-creatematerializedview&quot;&gt;CREATE MATERIALIZED VIEW&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-creatematerializedview&quot;&gt;CREATE MATERIALIZEDVIEWを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8ed6c934a5ed774b78b51edbb7e5027d4516dcb3" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createprocedure&quot;&gt;CREATE PROCEDURE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createprocedure&quot;&gt;CREATEPROCEDUREを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee0c9366d5740e64d2536225af931f9da1914bac" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createrole&quot;&gt;CREATE ROLE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createrole&quot;&gt;CREATEROLEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="49d706ea8beef4d7260b021441cd0098fccedf8c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createserver&quot;&gt;CREATE SERVER&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createserver&quot;&gt;CREATESERVERを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4b19a5a64f6dac1c732b3ebb9d66397bfe70bd79" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createtable&quot;&gt;CREATE TABLE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createtable&quot;&gt;CREATETABLEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a1615c2ef2a9a56a9cc0e423d2083415987ccd74" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createtrigger&quot;&gt;CREATE TRIGGER&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createtrigger&quot;&gt;CREATETRIGGERを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4b63a860f4649a0112c2786fe1bdba3d786899d1" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createusermapping&quot;&gt;CREATE USER MAPPING&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createusermapping&quot;&gt;CREATE USERMAPPINGを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1020a498be2604ab4d7cd1896dffc51885aca810" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-createview&quot;&gt;CREATE VIEW&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-createview&quot;&gt;CREATEVIEWを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a24d18f5506b6ee9a84a8cd84f78661ee9adf77f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-delete&quot;&gt;DELETE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-delete&quot;&gt;DELETEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db99c706cdb285235578b6aba63b47fdabf2194c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-grant&quot;&gt;GRANT&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-grant&quot;&gt;GRANTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="71b270bd4563c9f2060a6d80c982b5fe2fcbf480" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-insert&quot;&gt;INSERT&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-insert&quot;&gt;INSERTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e77ed2d4e2d96aeecd1142f94b637f23ca5612a5" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-revoke&quot;&gt;REVOKE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-revoke&quot;&gt;REVOKEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e64300e8df12c926d53c45eb642cc98e387af7f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-rollback&quot;&gt;ROLLBACK&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-rollback&quot;&gt;ROLLBACKを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2fb228d5dbcc85882f9f4b3d191b9ca72d6f348f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-savepoint&quot;&gt;SAVEPOINT&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-savepoint&quot;&gt;SAVEPOINTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="91dbc01352523da4727aedf894f80ad7b6f798c5" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-select&quot;&gt;SELECT&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-select&quot;&gt;SELECTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2032925ebdd4aacf138805e17a31b7d2c9007880" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;sql-update&quot;&gt;UPDATE&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sql-update&quot;&gt;UPDATEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5d94d1228165f626fcdafbcea9f9f512b2bcebb2" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;storage-file-layout&quot;&gt;Section 68.1&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;storage-file-layout&quot;&gt;セクション68.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="42a31e142177fa23ae77a8cce8af185fdd1360b0" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;storage-fsm&quot;&gt;Section 68.3&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;storage-fsm&quot;&gt;セクション68.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="24d65fe6857f379faaff0de74d64cfde9e65cff9" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;storage-toast&quot;&gt;Section 68.2&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;storage-toast&quot;&gt;セクション68.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b7ba20758a038db38b1afb4465c53d889c714355" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;transaction-iso&quot;&gt;Section 13.2&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;transaction-iso&quot;&gt;セクション13.2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dae07da77c31ebbc8bba210c0470d446f27cdfe2" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;tutorial-window&quot;&gt;Section 3.5&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;tutorial-window&quot;&gt;セクション3.5を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9aca210e015407bccd6e5fff2f3af7fc7dc6dfad" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;wal-configuration&quot;&gt;Section 29.4&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;wal-configuration&quot;&gt;セクション29.4を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ccf0df41e7a0c42924a513c55a49a3c1fe56d531" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;wal-internals&quot;&gt;Section 29.5&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;wal-internals&quot;&gt;セクション29.5を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c85bc4c828173ae286d66f5092152fb72a510a4c" translate="yes" xml:space="preserve">
          <source>For more on replication slots, see &lt;a href=&quot;warm-standby#STREAMING-REPLICATION-SLOTS&quot;&gt;Section 26.2.6&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/12/logicaldecoding.html&quot;&gt;Chapter 48&lt;/a&gt;.</source>
          <target state="translated">レプリケーションスロットの詳細については、&lt;a href=&quot;warm-standby#STREAMING-REPLICATION-SLOTS&quot;&gt;セクション26.2.6&lt;/a&gt;および&lt;a href=&quot;https://www.postgresql.org/docs/12/logicaldecoding.html&quot;&gt;第48章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36e5b0eb43b67d12107b8b4cd8c78c78e3b8f7db" translate="yes" xml:space="preserve">
          <source>For more on replication slots, see &lt;a href=&quot;warm-standby#STREAMING-REPLICATION-SLOTS&quot;&gt;Section 26.2.6&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/13/logicaldecoding.html&quot;&gt;Chapter 48&lt;/a&gt;.</source>
          <target state="translated">レプリケーションスロットの詳細については、&lt;a href=&quot;warm-standby#STREAMING-REPLICATION-SLOTS&quot;&gt;セクション26.2.6&lt;/a&gt;および&lt;a href=&quot;https://www.postgresql.org/docs/13/logicaldecoding.html&quot;&gt;第48章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f67c610531547fa3cca67f0d1f83f00712e9e930" translate="yes" xml:space="preserve">
          <source>For most English-text-searching applications the above words would be considered non-normalized, but &lt;code&gt;tsvector&lt;/code&gt; doesn't care. Raw document text should usually be passed through &lt;code&gt;to_tsvector&lt;/code&gt; to normalize the words appropriately for searching:</source>
          <target state="translated">ほとんどの英語テキスト検索アプリケーションでは、上記の単語は正規化されていないと見なされますが、 &lt;code&gt;tsvector&lt;/code&gt; は関係ありません。生のドキュメントテキストは通常、検索のために適切に単語を正規化するために &lt;code&gt;to_tsvector&lt;/code&gt; を介して渡される必要があります。</target>
        </trans-unit>
        <trans-unit id="d11cb8ba24b12fd4341f66b81cfe8da1a67ba46b" translate="yes" xml:space="preserve">
          <source>For most index methods, the speed of creating an index is dependent on the setting of &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt;. Larger values will reduce the time needed for index creation, so long as you don't make it larger than the amount of memory really available, which would drive the machine into swapping.</source>
          <target state="translated">ほとんどのインデックスメソッドでは、インデックスの作成速度は&lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt;の設定に依存します。値を大きくすると、実際に使用可能なメモリの量よりも大きくしない限り、インデックスの作成に必要な時間が短縮されます。これにより、マシンがスワッピングします。</target>
        </trans-unit>
        <trans-unit id="0c13a44404e4e32e101f6de95dbe745d7a8d8623" translate="yes" xml:space="preserve">
          <source>For most kinds of object, only the object's owner can set the comment. Roles don't have owners, so the rule for &lt;code&gt;COMMENT ON ROLE&lt;/code&gt; is that you must be superuser to comment on a superuser role, or have the &lt;code&gt;CREATEROLE&lt;/code&gt; privilege to comment on non-superuser roles. Likewise, access methods don't have owners either; you must be superuser to comment on an access method. Of course, a superuser can comment on anything.</source>
          <target state="translated">ほとんどの種類のオブジェクトでは、オブジェクトの所有者のみがコメントを設定できます。ロールには所有者がいないため、 &lt;code&gt;COMMENT ON ROLE&lt;/code&gt; のルールは、スーパーユーザーロールにコメントするにはスーパーユーザーであるか、非スーパーユーザーロールにコメントするには &lt;code&gt;CREATEROLE&lt;/code&gt; 特権を持っている必要があるということです。同様に、アクセスメソッドにも所有者がいません。アクセス方法についてコメントするには、スーパーユーザーである必要があります。もちろん、スーパーユーザーは何にでもコメントできます。</target>
        </trans-unit>
        <trans-unit id="9837f0c6ad7a5aa6e60539d85268c2d3ed2d116e" translate="yes" xml:space="preserve">
          <source>For new relations being written during a DDL operation that requires a table rewrite, this contains the OID of the original relation; otherwise 0. That state is only visible internally; this field should never contain anything other than 0 for a user-visible relation.</source>
          <target state="translated">テーブルの書き換えを必要とするDDL操作中に書き込まれた新しいリレーションの場合、元のリレーションのOIDが含まれます。 この状態は内部的にのみ表示され、このフィールドにはユーザが見えるリレーションの場合、0以外のものを含むべきではありません。</target>
        </trans-unit>
        <trans-unit id="db2d4f573696790d499c4fdcbed43171e9eb9774" translate="yes" xml:space="preserve">
          <source>For non-anonymous binds, &lt;code&gt;ldapbinddn&lt;/code&gt; and &lt;code&gt;ldapbindpasswd&lt;/code&gt; must be specified as separate options.</source>
          <target state="translated">非匿名バインドの場合、 &lt;code&gt;ldapbinddn&lt;/code&gt; と &lt;code&gt;ldapbindpasswd&lt;/code&gt; を別々のオプションとして指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8e8b858bd4de863389670e9fe6770c7877741b6a" translate="yes" xml:space="preserve">
          <source>For non-null inputs, &lt;code&gt;IS DISTINCT FROM&lt;/code&gt; is the same as the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. However, if both inputs are null it returns false, and if only one input is null it returns true. Similarly, &lt;code&gt;IS NOT DISTINCT FROM&lt;/code&gt; is identical to &lt;code&gt;=&lt;/code&gt; for non-null inputs, but it returns true when both inputs are null, and false when only one input is null. Thus, these predicates effectively act as though null were a normal data value, rather than &amp;ldquo;unknown&amp;rdquo;.</source>
          <target state="translated">null以外の入力の場合、 &lt;code&gt;IS DISTINCT FROM&lt;/code&gt; は &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 演算子と同じです。ただし、両方の入力がnullの場合はfalseを返し、1つの入力のみがnullの場合はtrueを返します。同様に、 &lt;code&gt;IS NOT DISTINCT FROM&lt;/code&gt; はnull以外の入力の &lt;code&gt;=&lt;/code&gt; と同じですが、両方の入力がnullの場合はtrueを返し、1つの入力のみがnullの場合はfalseを返します。したがって、これらの述部は、「不明」ではなく、nullが通常のデータ値であるかのように効果的に機能します。</target>
        </trans-unit>
        <trans-unit id="452c316e78163cb01fa71da21305864e3d992733" translate="yes" xml:space="preserve">
          <source>For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language</source>
          <target state="translated">これは、特定の言語で書かれたすべての関数を実行する責任がある特別な関数です。</target>
        </trans-unit>
        <trans-unit id="08f7ad6afcfac3234695bfac00c247d3c8fb6960" translate="yes" xml:space="preserve">
          <source>For operator classes that do not use prefixes, &lt;code&gt;prefixType&lt;/code&gt; can be set to &lt;code&gt;VOIDOID&lt;/code&gt;. Likewise, for operator classes that do not use node labels, &lt;code&gt;labelType&lt;/code&gt; can be set to &lt;code&gt;VOIDOID&lt;/code&gt;. &lt;code&gt;canReturnData&lt;/code&gt; should be set true if the operator class is capable of reconstructing the originally-supplied index value. &lt;code&gt;longValuesOK&lt;/code&gt; should be set true only when the &lt;code&gt;attType&lt;/code&gt; is of variable length and the operator class is capable of segmenting long values by repeated suffixing (see &lt;a href=&quot;spgist-implementation#SPGIST-LIMITS&quot;&gt;Section 65.4.1&lt;/a&gt;).</source>
          <target state="translated">接頭辞を使用していない演算子クラスについては、 &lt;code&gt;prefixType&lt;/code&gt; は、に設定することができ &lt;code&gt;VOIDOID&lt;/code&gt; 。同様に、ノードのラベルを使用していない演算子クラスのために、 &lt;code&gt;labelType&lt;/code&gt; はに設定することができ &lt;code&gt;VOIDOID&lt;/code&gt; 。演算子クラスが最初に提供されたインデックス値を再構築できる場合は、 &lt;code&gt;canReturnData&lt;/code&gt; をtrueに設定する必要があります。 &lt;code&gt;longValuesOK&lt;/code&gt; をtrueに設定する必要があるのは、 &lt;code&gt;attType&lt;/code&gt; が可変長で、演算子クラスが繰り返しの&lt;a href=&quot;spgist-implementation#SPGIST-LIMITS&quot;&gt;サフィックス&lt;/a&gt;によって長い値をセグメント化できる場合のみです（セクション65.4.1を参照）。</target>
        </trans-unit>
        <trans-unit id="8734e694c951a6833bd37344ff08949a24e29e7a" translate="yes" xml:space="preserve">
          <source>For optimal performance when relying on Serializable transactions for concurrency control, these issues should be considered:</source>
          <target state="translated">Serializable トランザクションに依存して同時実行制御を行う場合に最適なパフォーマンスを得るためには、これらの問題を考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="6009f4ee46750a96d20ce23527cf9e0e8cb726de" translate="yes" xml:space="preserve">
          <source>For ordered-set (including hypothetical-set) aggregates, the final function receives not only the final state value, but also the values of all the direct arguments.</source>
          <target state="translated">順序付き集合(仮説集合を含む)の場合,最終関数は,最終状態の値だけでなく,すべての直接引数の値も受け取ります.</target>
        </trans-unit>
        <trans-unit id="be6a9c4c63ed11fa1c2795f316b3b8e9e65b1b58" translate="yes" xml:space="preserve">
          <source>For ordered-set (including hypothetical-set) aggregates, the state transition function receives only the current state value and the aggregated arguments, not the direct arguments. Otherwise it is the same.</source>
          <target state="translated">順序付き集合(仮説集合を含む)の集約では、状態遷移関数は、直接引数ではなく、現在の状態値と集約された引数のみを受け取ります。それ以外は同じです。</target>
        </trans-unit>
        <trans-unit id="6c0d59e1cc0d04f93b79c02798466c5f3e582923" translate="yes" xml:space="preserve">
          <source>For ordered-set aggregates only, this flag specifies that the aggregate arguments are to be processed according to the requirements for hypothetical-set aggregates: that is, the last few direct arguments must match the data types of the aggregated (&lt;code&gt;WITHIN GROUP&lt;/code&gt;) arguments. The &lt;code&gt;HYPOTHETICAL&lt;/code&gt; flag has no effect on run-time behavior, only on parse-time resolution of the data types and collations of the aggregate's arguments.</source>
          <target state="translated">順序付き集合集計の場合のみ、このフラグは、仮引数集合が仮想集合集計の要件に従って処理されることを指定します。つまり、最後のいくつかの直接引数は、集計（ &lt;code&gt;WITHIN GROUP&lt;/code&gt; ）引数のデータ型と一致する必要があります。 &lt;code&gt;HYPOTHETICAL&lt;/code&gt; フラグはのみの集計の引数のデータ型と照合順序の構文解析時間分解能で、実行時の動作には影響を与えません。</target>
        </trans-unit>
        <trans-unit id="13b1b26b35f07e3a875d44019b004753915b48df" translate="yes" xml:space="preserve">
          <source>For pages that cannot be skipped, it scans each tuple, recording its presence and size in the appropriate counters, and adding up the free space on the page. At the end, it estimates the total number of live tuples based on the number of pages and tuples scanned (in the same way that VACUUM estimates pg_class.reltuples).</source>
          <target state="translated">スキップできないページについては、各タプルをスキャンし、その存在とサイズを適切なカウンタに記録し、ページ上の空き領域を加算します。最後に、スキャンされたページとタプルの数に基づいて(VACUUMがpg_class.reltuplesを推定するのと同じ方法で)ライブタプルの合計数を推定します。</target>
        </trans-unit>
        <trans-unit id="868352f139d86028da2fe3079d740960bf5a0c0a" translate="yes" xml:space="preserve">
          <source>For parameter defaults, the SQL standard specifies only the syntax with the &lt;code&gt;DEFAULT&lt;/code&gt; key word. The syntax with &lt;code&gt;=&lt;/code&gt; is used in T-SQL and Firebird.</source>
          <target state="translated">パラメータのデフォルトの場合、SQL標準では、 &lt;code&gt;DEFAULT&lt;/code&gt; キーワードを使用した構文のみが指定されています。 &lt;code&gt;=&lt;/code&gt; を使用した構文は、T-SQLおよびFirebirdで使用されます。</target>
        </trans-unit>
        <trans-unit id="d24bbed3cf952c936ab011c509488bf0467fa622" translate="yes" xml:space="preserve">
          <source>For policies that can have both &lt;code&gt;USING&lt;/code&gt; and &lt;code&gt;WITH CHECK&lt;/code&gt; expressions (&lt;code&gt;ALL&lt;/code&gt; and &lt;code&gt;UPDATE&lt;/code&gt;), if no &lt;code&gt;WITH CHECK&lt;/code&gt; expression is defined, then the &lt;code&gt;USING&lt;/code&gt; expression will be used both to determine which rows are visible (normal &lt;code&gt;USING&lt;/code&gt; case) and which new rows will be allowed to be added (&lt;code&gt;WITH CHECK&lt;/code&gt; case).</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; と &lt;code&gt;WITH CHECK&lt;/code&gt; 式（ &lt;code&gt;ALL&lt;/code&gt; と &lt;code&gt;UPDATE&lt;/code&gt; ）の両方を持つことができるポリシーでは、 &lt;code&gt;WITH CHECK&lt;/code&gt; 式が定義されていない場合、 &lt;code&gt;USING&lt;/code&gt; 式を使用して、表示される行（通常の &lt;code&gt;USING&lt;/code&gt; ケース）と新しい行を決定します。追加が許可されます（ &lt;code&gt;WITH CHECK&lt;/code&gt; の場合）。</target>
        </trans-unit>
        <trans-unit id="82d5e1c9db6a18c117c8031e2597235ae83ea517" translate="yes" xml:space="preserve">
          <source>For procedural languages, allows use of the language for the creation of functions in that language. This is the only type of privilege that is applicable to procedural languages.</source>
          <target state="translated">手続き型言語では、その言語で関数を作成するためにその言語を使用することができます。手続き型言語に適用される特権はこれだけです。</target>
        </trans-unit>
        <trans-unit id="72ae8edf284efd5793c4ac2e8558efa80968a775" translate="yes" xml:space="preserve">
          <source>For protection against possible future keyword additions, it is recommended that you always either write &lt;code&gt;AS&lt;/code&gt; or double-quote the output column name.</source>
          <target state="translated">今後のキーワードの追加を防ぐため、常に &lt;code&gt;AS&lt;/code&gt; を記述するか、出力列名を二重引用符で囲むことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="90dfd308078c52df87fcfcab656bb11ad21b3919" translate="yes" xml:space="preserve">
          <source>For reasons of backwards compatibility, the commas between successive &lt;code&gt;transaction_modes&lt;/code&gt; can be omitted.</source>
          <target state="translated">下位互換性の理由から、連続する &lt;code&gt;transaction_modes&lt;/code&gt; 間のコンマは省略できます。</target>
        </trans-unit>
        <trans-unit id="ee31746206f7099bf155b9a7de2ea519f45916ff" translate="yes" xml:space="preserve">
          <source>For reference purposes, a standard installation also contains files &lt;code&gt;Africa.txt&lt;/code&gt;, &lt;code&gt;America.txt&lt;/code&gt;, etc, containing information about every time zone abbreviation known to be in use according to the IANA timezone database. The zone name definitions found in these files can be copied and pasted into a custom configuration file as needed. Note that these files cannot be directly referenced as &lt;code&gt;timezone_abbreviations&lt;/code&gt; settings, because of the dot embedded in their names.</source>
          <target state="translated">参考のために、標準インストールには、 &lt;code&gt;Africa.txt&lt;/code&gt; 、 &lt;code&gt;America.txt&lt;/code&gt; などのファイルも含まれ、IANAタイムゾーンデータベースに従って使用されていることがわかっているすべてのタイムゾーンの省略形に関する情報が含まれています。これらのファイルにあるゾーン名の定義をコピーして、必要に応じてカスタム構成ファイルに貼り付けることができます。これらのファイルは、名前にドットが埋め込まれているため、 &lt;code&gt;timezone_abbreviations&lt;/code&gt; 設定として直接参照できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="124811ada3de0016b7583028ff8e0587746fbc22" translate="yes" xml:space="preserve">
          <source>For reliable recovery when changing &lt;code&gt;fsync&lt;/code&gt; off to on, it is necessary to force all modified buffers in the kernel to durable storage. This can be done while the cluster is shutdown or while &lt;code&gt;fsync&lt;/code&gt; is on by running &lt;code&gt;initdb --sync-only&lt;/code&gt;, running &lt;code&gt;sync&lt;/code&gt;, unmounting the file system, or rebooting the server.</source>
          <target state="translated">&lt;code&gt;fsync&lt;/code&gt; をオフに変更して信頼性の高い回復を行うには、カーネル内の変更されたすべてのバッファーを永続ストレージに強制する必要があります。一方、クラスタがシャットダウンしたりしながら、これを行うことができる &lt;code&gt;fsync&lt;/code&gt; 実行することにより、上にある &lt;code&gt;initdb --sync-only&lt;/code&gt; 実行し、 &lt;code&gt;sync&lt;/code&gt; ファイルシステムをアンマウントする、またはサーバーを再起動し、。</target>
        </trans-unit>
        <trans-unit id="319e6f276af3394d5ebbac353d76e4013f542a01" translate="yes" xml:space="preserve">
          <source>For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit.</source>
          <target state="translated">ログインできるロールの場合、このロールができる同時接続の最大数を設定します。-1は制限なしを意味します。</target>
        </trans-unit>
        <trans-unit id="0a4172c7b4024e73e796b850c139c38ecd17203c" translate="yes" xml:space="preserve">
          <source>For schemas, allows access to objects contained in the schema (assuming that the objects' own privilege requirements are also met). Essentially this allows the grantee to &amp;ldquo;look up&amp;rdquo; objects within the schema. Without this permission, it is still possible to see the object names, e.g. by querying system catalogs. Also, after revoking this permission, existing sessions might have statements that have previously performed this lookup, so this is not a completely secure way to prevent object access.</source>
          <target state="translated">スキーマの場合、スキーマに含まれているオブジェクトへのアクセスを許可します（オブジェクト自体の特権要件も満たされている場合）。基本的に、これにより、権限受領者はスキーマ内のオブジェクトを「検索」できます。この権限がなくても、システムカタログをクエリするなどして、オブジェクト名を表示することは可能です。また、この権限を取り消した後、既存のセッションには以前にこのルックアップを実行したステートメントが含まれている可能性があるため、これはオブジェクトアクセスを防止する完全に安全な方法ではありません。</target>
        </trans-unit>
        <trans-unit id="104e353c308a9f15b922dc481c8e27852ead1095" translate="yes" xml:space="preserve">
          <source>For schemas, allows access to objects contained in the schema (assuming that the objects' own privilege requirements are also met). Essentially this allows the grantee to &amp;ldquo;look up&amp;rdquo; objects within the schema. Without this permission, it is still possible to see the object names, e.g., by querying system catalogs. Also, after revoking this permission, existing sessions might have statements that have previously performed this lookup, so this is not a completely secure way to prevent object access.</source>
          <target state="translated">スキーマの場合、スキーマに含まれるオブジェクトへのアクセスを許可します（オブジェクト自体の特権要件も満たされていることを前提としています）。基本的に、これにより、被付与者はスキーマ内のオブジェクトを「検索」できます。この許可がなくても、システムカタログを照会するなどして、オブジェクト名を確認することは可能です。また、このアクセス許可を取り消した後、既存のセッションに以前にこのルックアップを実行したステートメントが含まれている可能性があるため、これはオブジェクトアクセスを防ぐための完全に安全な方法ではありません。</target>
        </trans-unit>
        <trans-unit id="ca22692db97a2637a8e751de3cc8e36b4187aab7" translate="yes" xml:space="preserve">
          <source>For schemas, allows new objects to be created within the schema. To rename an existing object, you must own the object &lt;em&gt;and&lt;/em&gt; have this privilege for the containing schema.</source>
          <target state="translated">スキーマの場合、スキーマ内に新しいオブジェクトを作成できます。既存のオブジェクトの名前を変更するには、オブジェクト&lt;em&gt;を&lt;/em&gt;所有し、含まれているスキーマに対してこの権限を持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="77c0cf444f37221ad1fe5a6fc24e9c33e4046529" translate="yes" xml:space="preserve">
          <source>For searches within PostgreSQL, a document is normally a textual field within a row of a database table, or possibly a combination (concatenation) of such fields, perhaps stored in several tables or obtained dynamically. In other words, a document can be constructed from different parts for indexing and it might not be stored anywhere as a whole. For example:</source>
          <target state="translated">PostgreSQL内での検索では、文書は通常、データベーステーブルの行内のテキストフィールド、あるいはそのようなフィールドの組み合わせ(連結)です。言い換えれば、文書はインデックス作成のために様々な部分から構成され、全体としてはどこにも保存されていない可能性があります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a142a9753e3ece701e9f2b90c2d239cb6b9b44cd" translate="yes" xml:space="preserve">
          <source>For security reasons the new cluster created by &lt;code&gt;initdb&lt;/code&gt; will only be accessible by the cluster owner by default. The &lt;code&gt;--allow-group-access&lt;/code&gt; option allows any user in the same group as the cluster owner to read files in the cluster. This is useful for performing backups as a non-privileged user.</source>
          <target state="translated">セキュリティ上の理由から、 &lt;code&gt;initdb&lt;/code&gt; によって作成された新しいクラスターには、デフォルトではクラスター所有者のみがアクセスできます。 &lt;code&gt;--allow-group-access&lt;/code&gt; オプションは、クラスタの所有者と同じグループ内の任意のユーザーは、クラスタ内のファイルを読み取ることができます。これは、非特権ユーザーとしてバックアップを実行する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1f1663e5a58c2af0c67ac06b0e2e7c597b770b66" translate="yes" xml:space="preserve">
          <source>For security reasons, only superusers and members of the &lt;code&gt;pg_read_all_stats&lt;/code&gt; role are allowed to see the SQL text and &lt;code&gt;queryid&lt;/code&gt; of queries executed by other users. Other users can see the statistics, however, if the view has been installed in their database.</source>
          <target state="translated">セキュリティ上の理由から、スーパーユーザーと &lt;code&gt;pg_read_all_stats&lt;/code&gt; ロールのメンバーのみが、他のユーザーが実行したクエリのSQLテキストとクエリ &lt;code&gt;queryid&lt;/code&gt; を表示できます。ただし、ビューがデータベースにインストールされている場合、他のユーザーは統計を見ることができます。</target>
        </trans-unit>
        <trans-unit id="a2387fb268a4aad1cb27f4814253a95ea4053932" translate="yes" xml:space="preserve">
          <source>For sequences, &lt;code&gt;db_sequence:get_value&lt;/code&gt; is checked when we reference a sequence object using &lt;code&gt;SELECT&lt;/code&gt;; however, note that we do not currently check permissions on execution of corresponding functions such as &lt;code&gt;lastval()&lt;/code&gt;.</source>
          <target state="translated">シーケンスの場合、 &lt;code&gt;SELECT&lt;/code&gt; を使用してシーケンスオブジェクトを参照すると、 &lt;code&gt;db_sequence:get_value&lt;/code&gt; がチェックされます。ただし、現時点では、 &lt;code&gt;lastval()&lt;/code&gt; などの対応する関数の実行に関する権限は確認していません。</target>
        </trans-unit>
        <trans-unit id="a6107c5c35722f41cd50e68f08c51a50459956c5" translate="yes" xml:space="preserve">
          <source>For sequences, allows use of the &lt;code&gt;currval&lt;/code&gt; and &lt;code&gt;nextval&lt;/code&gt; functions.</source>
          <target state="translated">シーケンスの場合、使用可能に &lt;code&gt;currval&lt;/code&gt; と &lt;code&gt;nextval&lt;/code&gt; の機能を。</target>
        </trans-unit>
        <trans-unit id="41c9e0790209171bd641f0e2a59f5f0172d7ebb1" translate="yes" xml:space="preserve">
          <source>For servers that are not regularly connected or have slow communication links, like laptops or remote servers, keeping data consistent among servers is a challenge. Using asynchronous multimaster replication, each server works independently, and periodically communicates with the other servers to identify conflicting transactions. The conflicts can be resolved by users or conflict resolution rules. Bucardo is an example of this type of replication.</source>
          <target state="translated">ノートパソコンやリモートサーバーのように、定期的に接続されていなかったり、通信リンクが遅いサーバーでは、サーバー間でデータの一貫性を保つことが課題となります。非同期マルチマスターレプリケーションを使用すると、各サーバーは独立して動作し、定期的に他のサーバーと通信して競合するトランザクションを特定します。競合は、ユーザーや競合解決ルールによって解決することができます。Bucardoはこのタイプのレプリケーションの一例です。</target>
        </trans-unit>
        <trans-unit id="62b0a1b5925a4635226ab51bcd1ee55bb85746c9" translate="yes" xml:space="preserve">
          <source>For simple &lt;code&gt;IN&lt;/code&gt; tests, it's better to rely on the &lt;a href=&quot;functions-comparisons#FUNCTIONS-COMPARISONS-IN-SCALAR&quot;&gt;list-of-scalars&lt;/a&gt; form of &lt;code&gt;IN&lt;/code&gt; than to write a &lt;code&gt;VALUES&lt;/code&gt; query as shown above. The list of scalars method requires less writing and is often more efficient.</source>
          <target state="translated">単純な &lt;code&gt;IN&lt;/code&gt; テストの場合、上記のように &lt;code&gt;VALUES&lt;/code&gt; クエリを作成するよりも、 &lt;code&gt;IN&lt;/code&gt; の&lt;a href=&quot;functions-comparisons#FUNCTIONS-COMPARISONS-IN-SCALAR&quot;&gt;リストのスカラー&lt;/a&gt;形式に依存する方が適切です。スカラーメソッドのリストは、必要な記述が少なく、効率的です。</target>
        </trans-unit>
        <trans-unit id="1c8ca5d9d323066d6d659aa5ff3196102b40293c" translate="yes" xml:space="preserve">
          <source>For some types of errors, the server reports the name of a database object (a table, table column, data type, or constraint) associated with the error; for example, the name of the unique constraint that caused a &lt;code&gt;unique_violation&lt;/code&gt; error. Such names are supplied in separate fields of the error report message so that applications need not try to extract them from the possibly-localized human-readable text of the message. As of PostgreSQL 9.3, complete coverage for this feature exists only for errors in SQLSTATE class 23 (integrity constraint violation), but this is likely to be expanded in future.</source>
          <target state="translated">一部のタイプのエラーでは、サーバーはエラーに関連付けられたデータベースオブジェクト（テーブル、テーブル列、データ型、または制約）の名前を報告します。たとえば、 &lt;code&gt;unique_violation&lt;/code&gt; エラーの原因となった一意制約の名前。このような名前は、エラー報告メッセージの個別のフィールドで提供されるため、アプリケーションは、おそらくローカライズされたメッセージを人間が読めるテキストから抽出する必要はありません。PostgreSQL 9.3では、この機能の完全なカバレッジはSQLSTATEクラス23のエラー（整合性制約違反）に対してのみ存在しますが、今後拡張される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b6625213e6e6fa2bc1eaac3fdaba176e51b962e6" translate="yes" xml:space="preserve">
          <source>For some types of relation, &lt;code&gt;\d&lt;/code&gt; shows additional information for each column: column values for sequences, indexed expressions for indexes, and foreign data wrapper options for foreign tables.</source>
          <target state="translated">一部のタイプの関係では、 &lt;code&gt;\d&lt;/code&gt; は各列の追加情報を表示します。シーケンスの列値、インデックスのインデックス付き式、および外部テーブルの外部データラッパーオプションです。</target>
        </trans-unit>
        <trans-unit id="96c3119cad566b7b88d64ca07bab7df7991bc93e" translate="yes" xml:space="preserve">
          <source>For source installs, if you wish to install the new server in a custom location, use the &lt;code&gt;prefix&lt;/code&gt; variable:</source>
          <target state="translated">ソースインストールの場合、新しい場所にカスタムサーバーをインストールする場合は、 &lt;code&gt;prefix&lt;/code&gt; 変数を使用します。</target>
        </trans-unit>
        <trans-unit id="02535fa4807bcb15e6b90f67411bc5308adeb97f" translate="yes" xml:space="preserve">
          <source>For tables with GIN indexes, &lt;code&gt;VACUUM&lt;/code&gt; (in any form) also completes any pending index insertions, by moving pending index entries to the appropriate places in the main GIN index structure. See &lt;a href=&quot;gin-implementation#GIN-FAST-UPDATE&quot;&gt;Section 66.4.1&lt;/a&gt; for details.</source>
          <target state="translated">GINインデックスを持つテーブルの場合、 &lt;code&gt;VACUUM&lt;/code&gt; （任意の形式）は、保留中のインデックスエントリをメインGINインデックス構造の適切な場所に移動することにより、保留中のインデックスの挿入も完了します。詳細は&lt;a href=&quot;gin-implementation#GIN-FAST-UPDATE&quot;&gt;項66.4.1&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c91c055bfb7a26b615975cdc96ae00a408c07dd3" translate="yes" xml:space="preserve">
          <source>For tables, &lt;code&gt;db_table:select&lt;/code&gt;, &lt;code&gt;db_table:insert&lt;/code&gt;, &lt;code&gt;db_table:update&lt;/code&gt; or &lt;code&gt;db_table:delete&lt;/code&gt; are checked for all the referenced target tables depending on the kind of statement; in addition, &lt;code&gt;db_table:select&lt;/code&gt; is also checked for all the tables that contain columns referenced in the &lt;code&gt;WHERE&lt;/code&gt; or &lt;code&gt;RETURNING&lt;/code&gt; clause, as a data source for &lt;code&gt;UPDATE&lt;/code&gt;, and so on.</source>
          <target state="translated">テーブルの場合、ステートメントの種類に応じて、参照されるすべてのターゲットテーブルについて、 &lt;code&gt;db_table:select&lt;/code&gt; 、 &lt;code&gt;db_table:insert&lt;/code&gt; 、 &lt;code&gt;db_table:update&lt;/code&gt; または &lt;code&gt;db_table:delete&lt;/code&gt; がチェックされます。さらに、 &lt;code&gt;db_table:select&lt;/code&gt; は、 &lt;code&gt;WHERE&lt;/code&gt; または &lt;code&gt;RETURNING&lt;/code&gt; 句で参照される列を含むすべてのテーブルについて、 &lt;code&gt;UPDATE&lt;/code&gt; のデータソースとしてなどもチェックされます。</target>
        </trans-unit>
        <trans-unit id="c5801368320c105ca425cc142e3ec8942b58fbca" translate="yes" xml:space="preserve">
          <source>For tablespaces, allows tables, indexes, and temporary files to be created within the tablespace, and allows databases to be created that have the tablespace as their default tablespace.</source>
          <target state="translated">テーブル空間については、テーブル、インデックス、および一時ファイルをテーブル空間内に作成できるようにし、テーブル空間をデフォルトのテーブル空間として持つデータベースを作成できるようにします。</target>
        </trans-unit>
        <trans-unit id="9c7df8e7cc19f2604588ffd58fd2bd20e5c27f91" translate="yes" xml:space="preserve">
          <source>For tablespaces, allows tables, indexes, and temporary files to be created within the tablespace, and allows databases to be created that have the tablespace as their default tablespace. (Note that revoking this privilege will not alter the placement of existing objects.)</source>
          <target state="translated">テーブルスペースの場合、テーブル、インデックス、および一時ファイルをテーブルスペース内に作成することができ、テーブルスペースをデフォルトのテーブルスペースとして持つデータベースを作成することができます。(この権限を取り消しても、既存のオブジェクトの配置は変更されないことに注意してください)。</target>
        </trans-unit>
        <trans-unit id="60dffce454150377149f2bc1c7ec0c5dc5d0791c" translate="yes" xml:space="preserve">
          <source>For temporary tables, &lt;code&gt;CREATE INDEX&lt;/code&gt; is always non-concurrent, as no other session can access them, and non-concurrent index creation is cheaper.</source>
          <target state="translated">一時テーブルの場合、他のセッションがそれらにアクセスできないため、 &lt;code&gt;CREATE INDEX&lt;/code&gt; は常に非並行であり、非並行インデックスの作成はより安価です。</target>
        </trans-unit>
        <trans-unit id="93534c68b9e76f0b0f7395d9f112e5d49d630585" translate="yes" xml:space="preserve">
          <source>For temporary tables, &lt;code&gt;DROP INDEX&lt;/code&gt; is always non-concurrent, as no other session can access them, and non-concurrent index drop is cheaper.</source>
          <target state="translated">一時テーブルの場合、他のセッションがそれらにアクセスできないため、 &lt;code&gt;DROP INDEX&lt;/code&gt; は常に非並行であり、非並行インデックスのドロップはより安価です。</target>
        </trans-unit>
        <trans-unit id="82929702d8109347128382c7167aff5836ee34d7" translate="yes" xml:space="preserve">
          <source>For temporary tables, &lt;code&gt;REINDEX&lt;/code&gt; is always non-concurrent, as no other session can access them, and non-concurrent reindex is cheaper.</source>
          <target state="translated">一時テーブルの場合、他のセッションがそれらにアクセスできないため、 &lt;code&gt;REINDEX&lt;/code&gt; は常に非並行であり、非並行再インデックスの方が安価です。</target>
        </trans-unit>
        <trans-unit id="8ed1cb94cb2f097d1a4265a2618f61e0b1b1ddd6" translate="yes" xml:space="preserve">
          <source>For testing purposes, it is possible to run both primary and standby servers on the same system. This does not provide any worthwhile improvement in server robustness, nor would it be described as HA.</source>
          <target state="translated">テスト目的では、同じシステム上でプライマリサーバとスタンバイサーバの両方を実行することが可能です。これは、サーバの堅牢性を向上させる価値のあるものではありませんし、HAとは言えません。</target>
        </trans-unit>
        <trans-unit id="14326aec7784d590e8d770eaca8e03f0b4af843b" translate="yes" xml:space="preserve">
          <source>For text search purposes, each document must be reduced to the preprocessed &lt;code&gt;tsvector&lt;/code&gt; format. Searching and ranking are performed entirely on the &lt;code&gt;tsvector&lt;/code&gt; representation of a document &amp;mdash; the original text need only be retrieved when the document has been selected for display to a user. We therefore often speak of the &lt;code&gt;tsvector&lt;/code&gt; as being the document, but of course it is only a compact representation of the full document.</source>
          <target state="translated">テキスト検索の目的で、各ドキュメントを前処理された &lt;code&gt;tsvector&lt;/code&gt; 形式に縮小する必要があります。検索とランク付けは、ドキュメントの &lt;code&gt;tsvector&lt;/code&gt; 表現で完全に実行されます。元のテキストは、ユーザーに表示するドキュメントが選択されている場合にのみ取得する必要があります。したがって、 &lt;code&gt;tsvector&lt;/code&gt; はドキュメントであるとよく言われますが、もちろんそれは完全なドキュメントのコンパクトな表現にすぎません。</target>
        </trans-unit>
        <trans-unit id="a7a000de4f9a94a7302faa3da1d5fa7c3f403c9e" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; cases, the row elements are compared left-to-right, stopping as soon as an unequal or null pair of elements is found. If either of this pair of elements is null, the result of the row comparison is unknown (null); otherwise comparison of this pair of elements determines the result. For example, &lt;code&gt;ROW(1,2,NULL) &amp;lt; ROW(1,3,0)&lt;/code&gt; yields true, not null, because the third pair of elements are not considered.</source>
          <target state="translated">以下のために &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;gt;=&lt;/code&gt; の場合、行要素は、左から右へ、とすぐに停止要素の不等またはヌル対が見つかったとして比較されます。この要素のペアのいずれかがnullの場合、行比較の結果は不明（null）です。それ以外の場合、この要素のペアの比較により結果が決まります。たとえば、 &lt;code&gt;ROW(1,2,NULL) &amp;lt; ROW(1,3,0)&lt;/code&gt; は、3番目の要素のペアが考慮されないため、nullではなくtrueになります。</target>
        </trans-unit>
        <trans-unit id="dfc3c21d9ddee1f916ca1387da5b3a8a58887534" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;INNER&lt;/code&gt; and &lt;code&gt;OUTER&lt;/code&gt; join types, a join condition must be specified, namely exactly one of &lt;code&gt;NATURAL&lt;/code&gt;, &lt;code&gt;ON join_condition&lt;/code&gt;, or &lt;code&gt;USING (join_column [, ...])&lt;/code&gt;. See below for the meaning. For &lt;code&gt;CROSS JOIN&lt;/code&gt;, none of these clauses can appear.</source>
          <target state="translated">ため &lt;code&gt;INNER&lt;/code&gt; と &lt;code&gt;OUTER&lt;/code&gt; はタイプに参加する、条件のいずれか、すなわち正確に指定する必要があり参加 &lt;code&gt;NATURAL&lt;/code&gt; 、 &lt;code&gt;ON join_condition&lt;/code&gt; 、または &lt;code&gt;USING (join_column [, ...])&lt;/code&gt; 。意味については以下を参照してください。以下のために &lt;code&gt;CROSS JOIN&lt;/code&gt; を、これらの句はどれも表示されないことができます。</target>
        </trans-unit>
        <trans-unit id="dad37c11367f0fd32c32e9bf08cc2fd30c405130" translate="yes" xml:space="preserve">
          <source>For the default TPC-B-like test scenario, the initialization scale factor (&lt;code&gt;-s&lt;/code&gt;) should be at least as large as the largest number of clients you intend to test (&lt;code&gt;-c&lt;/code&gt;); else you'll mostly be measuring update contention. There are only &lt;code&gt;-s&lt;/code&gt; rows in the &lt;code&gt;pgbench_branches&lt;/code&gt; table, and every transaction wants to update one of them, so &lt;code&gt;-c&lt;/code&gt; values in excess of &lt;code&gt;-s&lt;/code&gt; will undoubtedly result in lots of transactions blocked waiting for other transactions.</source>
          <target state="translated">デフォルトのTPC-Bのようなテストシナリオの場合、初期化スケール係数（ &lt;code&gt;-s&lt;/code&gt; ）は、テストするクライアントの最大数（ &lt;code&gt;-c&lt;/code&gt; ）と少なくとも同じ大きさにする必要があります。それ以外の場合は、主に更新の競合を測定します。 &lt;code&gt;pgbench_branches&lt;/code&gt; テーブルには &lt;code&gt;-s&lt;/code&gt; 行しかないため、すべてのトランザクションがそれらの1つを更新する必要があるため、 &lt;code&gt;-s&lt;/code&gt; を超える &lt;code&gt;-c&lt;/code&gt; 値は、多くのトランザクションが他のトランザクションを待機するためにブロックされることになります。</target>
        </trans-unit>
        <trans-unit id="a5751609fa3abe5700d0557e4f26ffe5f05018e3" translate="yes" xml:space="preserve">
          <source>For the default script, the output will look similar to this:</source>
          <target state="translated">デフォルトのスクリプトの場合、出力は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="9007ccafafbe06f38e92e2d086ee0438ce1eec15" translate="yes" xml:space="preserve">
          <source>For the list of built-in functions and operators available for constructing and processing JSON values, see &lt;a href=&quot;functions-json&quot;&gt;Section 9.15&lt;/a&gt;.</source>
          <target state="translated">JSON値の作成と処理に使用できる組み込み関数と演算子のリストについては、&lt;a href=&quot;functions-json&quot;&gt;セクション9.15を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b3e8f597d5cc47851d8a9d164150d2f7a92e4220" translate="yes" xml:space="preserve">
          <source>For the list of built-in functions and operators available for constructing and processing JSON values, see &lt;a href=&quot;functions-json&quot;&gt;Section 9.16&lt;/a&gt;.</source>
          <target state="translated">JSON値の作成と処理に使用できる組み込み関数と演算子のリストについては、&lt;a href=&quot;functions-json&quot;&gt;セクション9.16を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b6a1288823da614ad6ddd8076b29a2c859b00b3d" translate="yes" xml:space="preserve">
          <source>For the purpose of a unique constraint, null values are not considered equal.</source>
          <target state="translated">一意の制約のために、ヌル値は等しいとはみなされません。</target>
        </trans-unit>
        <trans-unit id="c5aa91a6ae5978dfba449fc8f21af598ecb84b63" translate="yes" xml:space="preserve">
          <source>For the purposes of this option, the multixact ID age of a relation is the greatest of the ages of the main relation and its associated TOAST table, if one exists. Since the commands issued by vacuumdb will also process the TOAST table for the relation if necessary, it does not need to be considered separately.</source>
          <target state="translated">このオプションの目的のために、リレーションのマルチクシャクトID年齢は、メインのリレーションとそれに関連するTOASTテーブルが存在する場合には、そのリレーションの年齢のうち最も大きいものとなります。vacuumdbによって発行されたコマンドは、必要に応じてそのリレーションのTOASTテーブルも処理するので、それを個別に考慮する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7a930282601dc6d73b8f0cbaf1770a134e812692" translate="yes" xml:space="preserve">
          <source>For the purposes of this option, the transaction ID age of a relation is the greatest of the ages of the main relation and its associated TOAST table, if one exists. Since the commands issued by vacuumdb will also process the TOAST table for the relation if necessary, it does not need to be considered separately.</source>
          <target state="translated">このオプションの目的のために、リレーションのトランザクションIDの年齢は、メインのリレーションとそれに関連付けられたTOASTテーブルが存在する場合、その年齢のうち最も大きいものである。vacuumdbによって発行されたコマンドは、必要に応じてそのリレーションのTOASTテーブルも処理するので、それを個別に考慮する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e7dd494ba670198b28ebfc500d18e95c5d26c155" translate="yes" xml:space="preserve">
          <source>For the regexp functions, if you want to match case-sensitively, you can specify the &amp;ldquo;c&amp;rdquo; flag to force a case-sensitive match. Otherwise, you must cast to &lt;code&gt;text&lt;/code&gt; before using one of these functions if you want case-sensitive behavior.</source>
          <target state="translated">正規表現関数の場合、大文字と小文字を区別して照合する場合は、「c」フラグを指定して、大文字と小文字を区別して一致させることができます。それ以外の場合、大文字と小文字を区別する動作が必要な場合は、これらの関数のいずれかを使用する前に &lt;code&gt;text&lt;/code&gt; にキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="d78645291bcc7701c1b16378879f0e6ec0613a1b" translate="yes" xml:space="preserve">
          <source>For this purpose, white-space characters are blank, tab, newline, and any character that belongs to the &lt;code&gt;space&lt;/code&gt; character class.</source>
          <target state="translated">この目的のために、空白文字は空白、タブ、改行、および &lt;code&gt;space&lt;/code&gt; 文字クラスに属する任意の文字です。</target>
        </trans-unit>
        <trans-unit id="74af73ce47f8b4a950cf1dc74d44af070dbfb80a" translate="yes" xml:space="preserve">
          <source>For those interested in further details, estimation of the size of a table (before any &lt;code&gt;WHERE&lt;/code&gt; clauses) is done in &lt;code&gt;src/backend/optimizer/util/plancat.c&lt;/code&gt;. The generic logic for clause selectivities is in &lt;code&gt;src/backend/optimizer/path/clausesel.c&lt;/code&gt;. The operator-specific selectivity functions are mostly found in &lt;code&gt;src/backend/utils/adt/selfuncs.c&lt;/code&gt;.</source>
          <target state="translated">さらに詳しく &lt;code&gt;src/backend/optimizer/util/plancat.c&lt;/code&gt; 場合は、テーブルのサイズの推定（ &lt;code&gt;WHERE&lt;/code&gt; 句の前）はsrc / backend / optimizer / util / plancat.cで行われます。句の選択性の一般的なロジックは &lt;code&gt;src/backend/optimizer/path/clausesel.c&lt;/code&gt; にあります。オペレーター固有の選択性関数は、主に &lt;code&gt;src/backend/utils/adt/selfuncs.c&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="f63222727e6629be4e7161b8b3cc8abbda85cb89" translate="yes" xml:space="preserve">
          <source>For those not using autovacuum, a typical approach is to schedule a database-wide &lt;code&gt;VACUUM&lt;/code&gt; once a day during a low-usage period, supplemented by more frequent vacuuming of heavily-updated tables as necessary. (Some installations with extremely high update rates vacuum their busiest tables as often as once every few minutes.) If you have multiple databases in a cluster, don't forget to &lt;code&gt;VACUUM&lt;/code&gt; each one; the program &lt;a href=&quot;app-vacuumdb&quot;&gt;vacuumdb&lt;/a&gt; might be helpful.</source>
          <target state="translated">autovacuumを使用しない場合の一般的なアプローチは、データベース全体の &lt;code&gt;VACUUM&lt;/code&gt; を使用頻度の低い期間に1日1回スケジュールし、必要に応じて頻繁に更新されるテーブルをより頻繁にバキュームすることです。 （更新率が非常に高い一部のインストールでは、数分に1回の頻度で最もビジーなテーブルがバキュームされます。）クラスター内に複数のデータベースがある場合は、それぞれに &lt;code&gt;VACUUM&lt;/code&gt; することを忘れないでください。プログラム&lt;a href=&quot;app-vacuumdb&quot;&gt;vacuumdb&lt;/a&gt;は役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="c7b55b171eb70ee6df74b6fa93a4927e18a0f903" translate="yes" xml:space="preserve">
          <source>For tranches registered by extensions, the name is specified by extension and this will be displayed as &lt;code&gt;wait_event&lt;/code&gt;. It is quite possible that user has registered the tranche in one of the backends (by having allocation in dynamic shared memory) in which case other backends won't have that information, so we display &lt;code&gt;extension&lt;/code&gt; for such cases.</source>
          <target state="translated">拡張機能によって登録されたトランシェの場合、名前は拡張機能によって指定され、これは &lt;code&gt;wait_event&lt;/code&gt; として表示されます。ユーザーがトランシェをバックエンドの1つに登録した可能性があります（動的共有メモリに割り当てを行うことにより）。その場合、他のバックエンドにはその情報がないため、そのような場合の &lt;code&gt;extension&lt;/code&gt; を表示します。</target>
        </trans-unit>
        <trans-unit id="6ededecf7230bd098333895398724d8cf30ca646" translate="yes" xml:space="preserve">
          <source>For typed tables, the OID of the underlying composite type, zero for all other relations</source>
          <target state="translated">型付きテーブルの場合、基礎となる複合型のOID、他のすべてのリレーションの場合はゼロ</target>
        </trans-unit>
        <trans-unit id="27c45ad1aa00e6a5905b5f896364ccf8b4773847" translate="yes" xml:space="preserve">
          <source>For types and domains, allows use of the type or domain in the creation of tables, functions, and other schema objects. (Note that this privilege does not control all &amp;ldquo;usage&amp;rdquo; of the type, such as values of the type appearing in queries. It only prevents objects from being created that depend on the type. The main purpose of this privilege is controlling which users can create dependencies on a type, which could prevent the owner from changing the type later.)</source>
          <target state="translated">タイプおよびドメインの場合、テーブル、関数、およびその他のスキーマオブジェクトの作成でタイプまたはドメインを使用できます。（この特権は、クエリに表示されるタイプの値など、タイプのすべての「使用法」を制御するわけではありません。タイプに依存するオブジェクトが作成されるのを防ぐだけです。この特権の主な目的は、どのユーザーができるかを制御することですタイプに対する依存関係を作成します。これにより、所有者が後でタイプを変更できなくなる可能性があります。）</target>
        </trans-unit>
        <trans-unit id="bff214879bf946c9914852230e9d3373cec1aabc" translate="yes" xml:space="preserve">
          <source>For types used in system tables, it is critical that the size and alignment defined in &lt;code&gt;pg_type&lt;/code&gt; agree with the way that the compiler will lay out the column in a structure representing a table row.</source>
          <target state="translated">システムテーブルで使用されるタイプの場合、 &lt;code&gt;pg_type&lt;/code&gt; で定義されたサイズと配置が、コンパイラがテーブルの行を表す構造で列をレイアウトする方法と一致することが重要です。</target>
        </trans-unit>
        <trans-unit id="0e1106a91cc01fcaaeb464887fd19957f0820912" translate="yes" xml:space="preserve">
          <source>For unlogged relations, everything works the same except that no actual WAL record is emitted. Thus, you typically do not need to do any explicit checks for unlogged relations.</source>
          <target state="translated">ログされていない関係については、実際のWALレコードが出力されないことを除けば、すべてが同じように動作します。したがって、一般的には、ログされていないリレーションに対して明示的なチェックを行う必要はありません。</target>
        </trans-unit>
        <trans-unit id="85b738e0688a60aa0821e2d9571d4dd56271215e" translate="yes" xml:space="preserve">
          <source>For user-defined functions, PostgreSQL tracks dependencies associated with a function's externally-visible properties, such as its argument and result types, but &lt;em&gt;not&lt;/em&gt; dependencies that could only be known by examining the function body. As an example, consider this situation:</source>
          <target state="translated">ユーザー定義関数の場合、PostgreSQLは、引数や結果の型など、関数の外部から見えるプロパティに関連付けられた依存関係を追跡しますが、関数本体を調べることによってのみ知ることができる依存関係は追跡し&lt;em&gt;ません&lt;/em&gt;。例として、次の状況を考えます。</target>
        </trans-unit>
        <trans-unit id="cd43cb783f81232deb1bffc73b358dcab3c75399" translate="yes" xml:space="preserve">
          <source>For very large databases, you might need to combine &lt;code&gt;split&lt;/code&gt; with one of the other two approaches.</source>
          <target state="translated">非常に大規模なデータベースでは、 &lt;code&gt;split&lt;/code&gt; を他の2つの方法のいずれかと組み合わせる必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="33f690385f50f3c83dc2195d926f5a45ebb2cb63" translate="yes" xml:space="preserve">
          <source>For views, &lt;code&gt;db_view:expand&lt;/code&gt; will be checked, then any other required permissions will be checked on the objects being expanded from the view, individually.</source>
          <target state="translated">ビューの場合、 &lt;code&gt;db_view:expand&lt;/code&gt; がチェックされ、次に、ビューから展開されるオブジェクトに対して他の必要な権限が個別にチェックされます。</target>
        </trans-unit>
        <trans-unit id="9bf29d0c0afb407846366a836c4874ef5e6ab74c" translate="yes" xml:space="preserve">
          <source>Forbid the execution of any &lt;a href=&quot;https://www.postgresql.org/docs/12/ddl.html&quot;&gt;DDL&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/12/ddl.html&quot;&gt;DDL&lt;/a&gt;コマンドの実行を禁止します。</target>
        </trans-unit>
        <trans-unit id="12f8a377f5b991eee465fcb5a9cc92f6309394f2" translate="yes" xml:space="preserve">
          <source>Forbid the execution of any &lt;a href=&quot;https://www.postgresql.org/docs/13/ddl.html&quot;&gt;DDL&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/13/ddl.html&quot;&gt;DDL&lt;/a&gt;コマンドの実行を禁止します。</target>
        </trans-unit>
        <trans-unit id="9e74aa9c02843996563e83950d619d1a48cca853" translate="yes" xml:space="preserve">
          <source>Forbids the use of particular scan and join methods: &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;i&lt;/code&gt; disable sequential and index scans respectively, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; disable index-only scans, bitmap index scans, and TID scans respectively, while &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, and &lt;code&gt;h&lt;/code&gt; disable nested-loop, merge and hash joins respectively.</source>
          <target state="translated">特定のスキャンおよび結合メソッドの使用を禁止します： &lt;code&gt;s&lt;/code&gt; および &lt;code&gt;i&lt;/code&gt; は順次スキャンおよびインデックススキャンをそれぞれ無効にし、 &lt;code&gt;o&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; および &lt;code&gt;t&lt;/code&gt; はインデックスのみのスキャン、ビットマップインデックススキャン、およびTIDスキャンをそれぞれ無効にし、 &lt;code&gt;n&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、および &lt;code&gt;h&lt;/code&gt; はネストされた-を無効にしますそれぞれループ、マージ、ハッシュ結合。</target>
        </trans-unit>
        <trans-unit id="6b54925430ba39c29285400ee9438bd06b14498b" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;pg_resetwal&lt;/code&gt; to proceed even if it cannot determine valid data for &lt;code&gt;pg_control&lt;/code&gt;, as explained above.</source>
          <target state="translated">強制 &lt;code&gt;pg_resetwal&lt;/code&gt; それがために有効なデータを判別できない場合でも続行する &lt;code&gt;pg_control&lt;/code&gt; のを、上記で説明したように、。</target>
        </trans-unit>
        <trans-unit id="1eac8549c0aec6316f92f1df6ba514101db909c7" translate="yes" xml:space="preserve">
          <source>Force clusterdb to prompt for a password before connecting to a database.</source>
          <target state="translated">clusterdb がデータベースに接続する前にパスワードを要求するようにしました。</target>
        </trans-unit>
        <trans-unit id="b0925c99f8012867ed4e28694186256d8b497b07" translate="yes" xml:space="preserve">
          <source>Force createdb to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前に、createdb にパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="919f499ede6938621bb948df3ec55861e7b6e806" translate="yes" xml:space="preserve">
          <source>Force createuser to prompt for a password (for connecting to the server, not for the password of the new user).</source>
          <target state="translated">createuserにパスワードを強制的に入力させます (サーバーに接続するためのもので、新しいユーザーのパスワードではありません)。</target>
        </trans-unit>
        <trans-unit id="0f5754485fd77647fa947500ba7d7eb3887d6390" translate="yes" xml:space="preserve">
          <source>Force dropdb to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前に、dropdbにパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="873b3fb51bdfb58a81fcee07b36cfd295d4a25ba" translate="yes" xml:space="preserve">
          <source>Force dropuser to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前に、ドロップユーザーにパスワードを要求するようにしました。</target>
        </trans-unit>
        <trans-unit id="68791460318431f1565f0db6649c38933e1c99f9" translate="yes" xml:space="preserve">
          <source>Force pg_basebackup to prompt for a password before connecting to a database.</source>
          <target state="translated">pg_basebackupがデータベースに接続する前にパスワードを要求するようにしました。</target>
        </trans-unit>
        <trans-unit id="e1db6640e8674298e7ff463f7c01bcb7d3c09291" translate="yes" xml:space="preserve">
          <source>Force pg_dump to prompt for a password before connecting to a database.</source>
          <target state="translated">pg_dumpはデータベースに接続する前にパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="0bf671184854c4cafab424f289da944581383f7f" translate="yes" xml:space="preserve">
          <source>Force pg_dumpall to prompt for a password before connecting to a database.</source>
          <target state="translated">pg_dumpallがデータベースに接続する前にパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="cd46ad236b5565bc59849836637665c81e945654" translate="yes" xml:space="preserve">
          <source>Force pg_receivewal to prompt for a password before connecting to a database.</source>
          <target state="translated">pg_receivewalがデータベースに接続する前にパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="cb0cb6641f18ac0a5ebc128cc7585e9485375d09" translate="yes" xml:space="preserve">
          <source>Force pg_recvlogical to prompt for a password before connecting to a database.</source>
          <target state="translated">pg_recvlogicalがデータベースに接続する前にパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="4333d7ad34894773d7724c896ba1ace5baa2e67d" translate="yes" xml:space="preserve">
          <source>Force pg_restore to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前にpg_restoreにパスワードを要求するように強制します。</target>
        </trans-unit>
        <trans-unit id="5d4bbbd7b1b0e3c3b7ba8c83092d65226c1b31be" translate="yes" xml:space="preserve">
          <source>Force psql to prompt for a password before connecting to a database, even if the password will not be used.</source>
          <target state="translated">psqlでは、パスワードが使用されない場合でも、データベースに接続する前にパスワードを強制的に入力するようにしました。</target>
        </trans-unit>
        <trans-unit id="060988688e7df93b56005121dd07764d70ac7fe5" translate="yes" xml:space="preserve">
          <source>Force psql to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前にpsqlでパスワードを要求するようにしました。</target>
        </trans-unit>
        <trans-unit id="b0cd7fd585ccc7a582ee1111bc67d7d89a04cf8e" translate="yes" xml:space="preserve">
          <source>Force quoting of all identifiers. This option is recommended when dumping a database from a server whose PostgreSQL major version is different from pg_dump's, or when the output is intended to be loaded into a server of a different major version. By default, pg_dump quotes only identifiers that are reserved words in its own major version. This sometimes results in compatibility issues when dealing with servers of other versions that may have slightly different sets of reserved words. Using &lt;code&gt;--quote-all-identifiers&lt;/code&gt; prevents such issues, at the price of a harder-to-read dump script.</source>
          <target state="translated">すべての識別子を強制的に引用します。このオプションは、PostgreSQLメジャーバージョンがpg_dumpとは異なるサーバーからデータベースをダンプする場合、または出力を別のメジャーバージョンのサーバーにロードすることを目的としている場合に推奨されます。デフォルトでは、pg_dumpは独自のメジャーバージョンで予約語である識別子のみを引用します。これにより、予約語のセットがわずかに異なる他のバージョンのサーバーを処理するときに互換性の問題が発生することがあります。 &lt;code&gt;--quote-all-identifiers&lt;/code&gt; を使用すると、このような問題を回避できますが、読みにくいダンプスクリプトが発生します。</target>
        </trans-unit>
        <trans-unit id="b22bd3cb5e64bd74dfce653c7bff0f559c9c1f26" translate="yes" xml:space="preserve">
          <source>Force quoting of all identifiers. This option is recommended when dumping a database from a server whose PostgreSQL major version is different from pg_dumpall's, or when the output is intended to be loaded into a server of a different major version. By default, pg_dumpall quotes only identifiers that are reserved words in its own major version. This sometimes results in compatibility issues when dealing with servers of other versions that may have slightly different sets of reserved words. Using &lt;code&gt;--quote-all-identifiers&lt;/code&gt; prevents such issues, at the price of a harder-to-read dump script.</source>
          <target state="translated">すべての識別子を強制的に引用します。このオプションは、PostgreSQLのメジャーバージョンがpg_dumpallとは異なるサーバーからデータベースをダンプする場合、または出力が異なるメジャーバージョンのサーバーにロードされることを意図している場合に推奨されます。デフォルトでは、pg_dumpallは独自のメジャーバージョンで予約語である識別子のみを引用します。これにより、予約語のセットがわずかに異なる他のバージョンのサーバーを処理するときに互換性の問題が発生することがあります。 &lt;code&gt;--quote-all-identifiers&lt;/code&gt; を使用すると、このような問題を回避できますが、読みにくいダンプスクリプトが発生します。</target>
        </trans-unit>
        <trans-unit id="5a4d553a940905a5b45f8f4a9271805f05936143" translate="yes" xml:space="preserve">
          <source>Force reindexdb to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前にパスワードを要求するように reindexdb を強制します。</target>
        </trans-unit>
        <trans-unit id="d704d18558a65a962929acf79610b9c10e0ea21f" translate="yes" xml:space="preserve">
          <source>Force switch to a new write-ahead log file (restricted to superusers by default, but other users can be granted EXECUTE to run the function)</source>
          <target state="translated">新しい書き込み優先ログファイルに強制的に切り替えます (デフォルトではスーパーユーザに制限されていますが、他のユーザはこの関数を実行するために EXECUTE を許可することができます)</target>
        </trans-unit>
        <trans-unit id="ad34c2643c5ad08a3b8ba0b861d443b8a1146fd4" translate="yes" xml:space="preserve">
          <source>Force vacuumdb to prompt for a password before connecting to a database.</source>
          <target state="translated">データベースに接続する前に、vacuumdb にパスワードを要求するようにしました。</target>
        </trans-unit>
        <trans-unit id="8ba33bb09d0b9eedd0a5116108d4c330db881549" translate="yes" xml:space="preserve">
          <source>Forces all filenames in the backup manifest to be hex-encoded. If this option is not specified, only non-UTF8 filenames are hex-encoded. This option is mostly intended to test that tools which read a backup manifest file properly handle this case.</source>
          <target state="translated">バックアップ マニフェスト内のすべてのファイル名を強制的に 16 進数化します。このオプションを指定しないと、UTF8 以外のファイル名のみが 16 進数でエンコードされます。このオプションは、バックアップ マニフェスト ファイルを読み込むツールがこのケースを適切に処理するかどうかをテストすることを主な目的としています。</target>
        </trans-unit>
        <trans-unit id="26d93bada9089cb03adfebd957430eeb5dee1930" translate="yes" xml:space="preserve">
          <source>Forces pg_basebackup to prompt for a password before connecting to the source server.</source>
          <target state="translated">ソースサーバに接続する前に、pg_basebackupがパスワードを要求するようにします。</target>
        </trans-unit>
        <trans-unit id="ab1894a9915a1c5bdd4fa99a3c35aa7aef1f3043" translate="yes" xml:space="preserve">
          <source>Forces quoting to be used for all non-&lt;code&gt;NULL&lt;/code&gt; values in each specified column. &lt;code&gt;NULL&lt;/code&gt; output is never quoted. If &lt;code&gt;*&lt;/code&gt; is specified, non-&lt;code&gt;NULL&lt;/code&gt; values will be quoted in all columns. This option is allowed only in &lt;code&gt;COPY TO&lt;/code&gt;, and only when using &lt;code&gt;CSV&lt;/code&gt; format.</source>
          <target state="translated">指定された各列のすべての &lt;code&gt;NULL&lt;/code&gt; 以外の値に引用を強制的に使用します。 &lt;code&gt;NULL&lt;/code&gt; 出力は引用されません。場合は &lt;code&gt;*&lt;/code&gt; を指定すると、非 &lt;code&gt;NULL&lt;/code&gt; の値がすべての列に引用されます。このオプションは、 &lt;code&gt;COPY TO&lt;/code&gt; でのみ、および &lt;code&gt;CSV&lt;/code&gt; 形式を使用する場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="538b02792cabcf9f2865608e41802e229f615f71" translate="yes" xml:space="preserve">
          <source>Forces the server to switch to a new write-ahead log file, which allows the current file to be archived (assuming you are using continuous archiving). The result is the ending write-ahead log location plus 1 within the just-completed write-ahead log file. If there has been no write-ahead log activity since the last write-ahead log switch, &lt;code&gt;pg_switch_wal&lt;/code&gt; does nothing and returns the start location of the write-ahead log file currently in use.</source>
          <target state="translated">サーバーに新しい先行書き込みログファイルへの切り替えを強制します。これにより、現在のファイルをアーカイブできます（継続的なアーカイブを使用している場合）。結果は、終了した先行書き込みログの場所に、完了したばかりの先行書き込みログファイル内の1を加えたものになります。最後の先行書き込みログスイッチ以降に先行書き込みログアクティビティがない場合、 &lt;code&gt;pg_switch_wal&lt;/code&gt; は何もせず、現在使用中の先行書き込みログファイルの開始位置を返します。</target>
        </trans-unit>
        <trans-unit id="e53ee207fccbc10bf771537429c8ceb105018b4c" translate="yes" xml:space="preserve">
          <source>Foreign Data</source>
          <target state="translated">海外データ</target>
        </trans-unit>
        <trans-unit id="60b698071b99433356500a6664686a79ff0c576f" translate="yes" xml:space="preserve">
          <source>Foreign data is accessed with help from a &lt;em&gt;foreign data wrapper&lt;/em&gt;. A foreign data wrapper is a library that can communicate with an external data source, hiding the details of connecting to the data source and obtaining data from it. There are some foreign data wrappers available as &lt;code&gt;contrib&lt;/code&gt; modules; see &lt;a href=&quot;https://www.postgresql.org/docs/12/contrib.html&quot;&gt;Appendix F&lt;/a&gt;. Other kinds of foreign data wrappers might be found as third party products. If none of the existing foreign data wrappers suit your needs, you can write your own; see &lt;a href=&quot;https://www.postgresql.org/docs/12/fdwhandler.html&quot;&gt;Chapter 56&lt;/a&gt;.</source>
          <target state="translated">外部データは&lt;em&gt;外部データラッパーの&lt;/em&gt;助けを借りてアクセスされ&lt;em&gt;ます&lt;/em&gt;。外部データラッパーは、外部データソースと通信して、データソースへの接続およびデータソースからのデータの取得の詳細を隠すことができるライブラリです。 &lt;code&gt;contrib&lt;/code&gt; モジュールとして使用可能な外部データラッパーがいくつかあります。&lt;a href=&quot;https://www.postgresql.org/docs/12/contrib.html&quot;&gt;付録Fを&lt;/a&gt;参照してください。他の種類の外部データラッパーがサードパーティ製品として見つかる場合があります。既存の外部データラッパーがニーズに合わない場合は、独自に作成できます。&lt;a href=&quot;https://www.postgresql.org/docs/12/fdwhandler.html&quot;&gt;第56章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e081c17d534c83bc3c89dd5e5ae11f9988469a0c" translate="yes" xml:space="preserve">
          <source>Foreign data is accessed with help from a &lt;em&gt;foreign data wrapper&lt;/em&gt;. A foreign data wrapper is a library that can communicate with an external data source, hiding the details of connecting to the data source and obtaining data from it. There are some foreign data wrappers available as &lt;code&gt;contrib&lt;/code&gt; modules; see &lt;a href=&quot;https://www.postgresql.org/docs/13/contrib.html&quot;&gt;Appendix F&lt;/a&gt;. Other kinds of foreign data wrappers might be found as third party products. If none of the existing foreign data wrappers suit your needs, you can write your own; see &lt;a href=&quot;https://www.postgresql.org/docs/13/fdwhandler.html&quot;&gt;Chapter 56&lt;/a&gt;.</source>
          <target state="translated">外部データは、&lt;em&gt;外部データラッパーの&lt;/em&gt;助けを借りてアクセスされ&lt;em&gt;ます&lt;/em&gt;。外部データラッパーは、外部データソースと通信できるライブラリであり、データソースへの接続とそこからのデータの取得の詳細を非表示にします。 &lt;code&gt;contrib&lt;/code&gt; モジュールとして利用できるいくつかの外部データラッパーがあります。&lt;a href=&quot;https://www.postgresql.org/docs/13/contrib.html&quot;&gt;付録Fを&lt;/a&gt;参照してください。他の種類の外部データラッパーは、サードパーティ製品として見つかる可能性があります。既存の外部データラッパーがどれもニーズに合わない場合は、独自に作成できます。&lt;a href=&quot;https://www.postgresql.org/docs/13/fdwhandler.html&quot;&gt;第56章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1d0b62aaedf4c17c32eaa3ba64c33e854069e4d0" translate="yes" xml:space="preserve">
          <source>Foreign data wrapper</source>
          <target state="translated">外部データラッパー</target>
        </trans-unit>
        <trans-unit id="ec49828d4aeea86333a990a4bd9c0abe72c2db0a" translate="yes" xml:space="preserve">
          <source>Foreign key</source>
          <target state="translated">外部キー</target>
        </trans-unit>
        <trans-unit id="94c0cd02df3f1a32213c26c15ceb6bc33046efb5" translate="yes" xml:space="preserve">
          <source>Foreign key deletion action code: &lt;code&gt;a&lt;/code&gt; = no action, &lt;code&gt;r&lt;/code&gt; = restrict, &lt;code&gt;c&lt;/code&gt; = cascade, &lt;code&gt;n&lt;/code&gt; = set null, &lt;code&gt;d&lt;/code&gt; = set default</source>
          <target state="translated">外部キー削除アクションコード： &lt;code&gt;a&lt;/code&gt; =アクションなし、 &lt;code&gt;r&lt;/code&gt; =制限、 &lt;code&gt;c&lt;/code&gt; =カスケード、 &lt;code&gt;n&lt;/code&gt; =ヌルに設定、 &lt;code&gt;d&lt;/code&gt; =デフォルトに設定</target>
        </trans-unit>
        <trans-unit id="67ed786663de0061ba336e549d3d7d184b09ab90" translate="yes" xml:space="preserve">
          <source>Foreign key match type: &lt;code&gt;f&lt;/code&gt; = full, &lt;code&gt;p&lt;/code&gt; = partial, &lt;code&gt;s&lt;/code&gt; = simple</source>
          <target state="translated">外部キーの一致タイプ： &lt;code&gt;f&lt;/code&gt; =完全、 &lt;code&gt;p&lt;/code&gt; =部分的、 &lt;code&gt;s&lt;/code&gt; =単純</target>
        </trans-unit>
        <trans-unit id="f7223fe60c8520d1d8c5dd54e60a3a21d67aff2e" translate="yes" xml:space="preserve">
          <source>Foreign key update action code: &lt;code&gt;a&lt;/code&gt; = no action, &lt;code&gt;r&lt;/code&gt; = restrict, &lt;code&gt;c&lt;/code&gt; = cascade, &lt;code&gt;n&lt;/code&gt; = set null, &lt;code&gt;d&lt;/code&gt; = set default</source>
          <target state="translated">外部キー更新アクションコード： &lt;code&gt;a&lt;/code&gt; =アクションなし、 &lt;code&gt;r&lt;/code&gt; =制限、 &lt;code&gt;c&lt;/code&gt; =カスケード、 &lt;code&gt;n&lt;/code&gt; =ヌルに設定、 &lt;code&gt;d&lt;/code&gt; =デフォルトに設定</target>
        </trans-unit>
        <trans-unit id="24479ccb6a12c499e80b0da414bfcc11fa42a42f" translate="yes" xml:space="preserve">
          <source>Foreign server</source>
          <target state="translated">外部サーバー</target>
        </trans-unit>
        <trans-unit id="65a5d0add327edf5ad461c0cb7f6054d85e3b0e7" translate="yes" xml:space="preserve">
          <source>Foreign server specific options, as &amp;ldquo;keyword=value&amp;rdquo; strings</source>
          <target state="translated">「keyword = value」文字列としての外部サーバー固有のオプション</target>
        </trans-unit>
        <trans-unit id="2328a33941c65762849f0c57e1700f0618ac2c11" translate="yes" xml:space="preserve">
          <source>Foreign table (relation)</source>
          <target state="translated">がいぶひょう</target>
        </trans-unit>
        <trans-unit id="b1b45f3e264a3f3e8e58872fe892f43e82136b90" translate="yes" xml:space="preserve">
          <source>Foreign table options, as &amp;ldquo;keyword=value&amp;rdquo; strings</source>
          <target state="translated">「keyword = value」文字列としての外部テーブルオプション</target>
        </trans-unit>
        <trans-unit id="a914bd9dafd1ce6150ce31452c647084bd0851ab" translate="yes" xml:space="preserve">
          <source>Foreign tables (see &lt;a href=&quot;ddl-foreign-data&quot;&gt;Section 5.12&lt;/a&gt;) can also be part of inheritance hierarchies, either as parent or child tables, just as regular tables can be. If a foreign table is part of an inheritance hierarchy then any operations not supported by the foreign table are not supported on the whole hierarchy either.</source>
          <target state="translated">外部テーブル（&lt;a href=&quot;ddl-foreign-data&quot;&gt;セクション5.12を&lt;/a&gt;参照）も、通常のテーブルと同様に、親テーブルまたは子テーブルとして継承階層の一部にすることができます。外部テーブルが継承階層の一部である場合、外部テーブルでサポートされていない操作は階層全体でもサポートされません。</target>
        </trans-unit>
        <trans-unit id="f355c9e7f0aaa375694a97f071442929b8bef72d" translate="yes" xml:space="preserve">
          <source>Foreign tables are analyzed only when explicitly selected. Not all foreign data wrappers support &lt;code&gt;ANALYZE&lt;/code&gt;. If the table's wrapper does not support &lt;code&gt;ANALYZE&lt;/code&gt;, the command prints a warning and does nothing.</source>
          <target state="translated">外部テーブルは、明示的に選択された場合にのみ分析されます。すべての外部データラッパーが &lt;code&gt;ANALYZE&lt;/code&gt; をサポートしているわけではありません。テーブルのラッパーが &lt;code&gt;ANALYZE&lt;/code&gt; をサポートしていない場合、コマンドは警告を出力して何もしません。</target>
        </trans-unit>
        <trans-unit id="114810936e2e203f850dfc30c1a7c22dda77dc02" translate="yes" xml:space="preserve">
          <source>Foreign tables can have generated columns. See &lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGN TABLE&lt;/a&gt; for details.</source>
          <target state="translated">外部テーブルは列を生成できます。詳細については、&lt;a href=&quot;sql-createforeigntable&quot;&gt;CREATE FOREIGN TABLE&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="85799ef6669eba496b7c90dd087afbef34699725" translate="yes" xml:space="preserve">
          <source>Foreign-data wrapper specific options, as &amp;ldquo;keyword=value&amp;rdquo; strings</source>
          <target state="translated">「keyword = value」文字列としての外部データラッパー固有のオプション</target>
        </trans-unit>
        <trans-unit id="471121e27a3e0f2a208ec3e9a0b109102268a22f" translate="yes" xml:space="preserve">
          <source>Fork</source>
          <target state="translated">Fork</target>
        </trans-unit>
        <trans-unit id="8340dbc9e3b7c8b79fc57d1ea821c4dd6ab2e45a" translate="yes" xml:space="preserve">
          <source>Fork number within the relation; see &lt;code&gt;include/common/relpath.h&lt;/code&gt;</source>
          <target state="translated">リレーション内のフォーク番号。 &lt;code&gt;include/common/relpath.h&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="bfff5fab0567decaa660bb51d870a4a558ade9bd" translate="yes" xml:space="preserve">
          <source>Form feed (ASCII 12)</source>
          <target state="translated">フォームフィード(ASCII 12</target>
        </trans-unit>
        <trans-unit id="2186cd568d6445c67ce20f9b2564241918cf9481" translate="yes" xml:space="preserve">
          <source>Format arguments according to a format string. This function is similar to the C function &lt;code&gt;sprintf&lt;/code&gt;. See &lt;a href=&quot;functions-string#FUNCTIONS-STRING-FORMAT&quot;&gt;Section 9.4.1&lt;/a&gt;.</source>
          <target state="translated">書式文字列に従って引数を書式設定します。この関数は、C関数 &lt;code&gt;sprintf&lt;/code&gt; に似ています。&lt;a href=&quot;functions-string#FUNCTIONS-STRING-FORMAT&quot;&gt;セクション9.4.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2f10703a114eeb65e11771dfbfc8cbc068e4d983" translate="yes" xml:space="preserve">
          <source>Format of the &lt;code&gt;.dict&lt;/code&gt; file is:</source>
          <target state="translated">&lt;code&gt;.dict&lt;/code&gt; ファイルの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d32d1fc793b4203a324b693b7b245d9ad6dbbf1f" translate="yes" xml:space="preserve">
          <source>Format specifiers are introduced by a &lt;code&gt;%&lt;/code&gt; character and have the form</source>
          <target state="translated">書式指定子は &lt;code&gt;%&lt;/code&gt; 文字で始まり、次の形式になります。</target>
        </trans-unit>
        <trans-unit id="c46b5c69a535eddb26b0b25a59b562dfdb1ab01b" translate="yes" xml:space="preserve">
          <source>Formats arguments according to a format string; see &lt;a href=&quot;functions-string#FUNCTIONS-STRING-FORMAT&quot;&gt;Section 9.4.1&lt;/a&gt;. This function is similar to the C function &lt;code&gt;sprintf&lt;/code&gt;.</source>
          <target state="translated">フォーマット文字列に従って引数をフォーマットします。&lt;a href=&quot;functions-string#FUNCTIONS-STRING-FORMAT&quot;&gt;セクション9.4.1を&lt;/a&gt;参照してください。この関数は、C関数 &lt;code&gt;sprintf&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="ac4e3c929fdec4f6080024051a0ba50e01f4af70" translate="yes" xml:space="preserve">
          <source>Formatting Functions</source>
          <target state="translated">書式設定機能</target>
        </trans-unit>
        <trans-unit id="27f02bbdc243505380802862dfc269e6f51a4b71" translate="yes" xml:space="preserve">
          <source>Formatting of currency amounts</source>
          <target state="translated">通貨金額の書式設定</target>
        </trans-unit>
        <trans-unit id="3117b3b2c7e85f24cb15daec9ea8d347a5a664b1" translate="yes" xml:space="preserve">
          <source>Formatting of dates and times</source>
          <target state="translated">日付と時間の書式設定</target>
        </trans-unit>
        <trans-unit id="860fd1b538482a0032ad8bac4633d0f2e1fcba7b" translate="yes" xml:space="preserve">
          <source>Formatting of numbers</source>
          <target state="translated">数字の書式設定</target>
        </trans-unit>
        <trans-unit id="6a1f6ab661d4c193244f17d409e7e72bd4d570ee" translate="yes" xml:space="preserve">
          <source>Fortunately, PostgreSQL has the ability to combine multiple indexes (including multiple uses of the same index) to handle cases that cannot be implemented by single index scans. The system can form &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; conditions across several index scans. For example, a query like &lt;code&gt;WHERE x = 42 OR x = 47 OR x = 53 OR x = 99&lt;/code&gt; could be broken down into four separate scans of an index on &lt;code&gt;x&lt;/code&gt;, each scan using one of the query clauses. The results of these scans are then ORed together to produce the result. Another example is that if we have separate indexes on &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, one possible implementation of a query like &lt;code&gt;WHERE x = 5 AND y = 6&lt;/code&gt; is to use each index with the appropriate query clause and then AND together the index results to identify the result rows.</source>
          <target state="translated">幸い、PostgreSQLには複数のインデックス（同じインデックスの複数の使用を含む）を組み合わせて、単一のインデックススキャンでは実装できないケースを処理する機能があります。システムは、複数のインデックススキャンにわたって &lt;code&gt;AND&lt;/code&gt; および &lt;code&gt;OR&lt;/code&gt; 条件を形成できます。たとえば、 &lt;code&gt;WHERE x = 42 OR x = 47 OR x = 53 OR x = 99&lt;/code&gt; ようなクエリは、 &lt;code&gt;x&lt;/code&gt; のインデックスの4つの別々のスキャンに分割でき、各スキャンはクエリ句の1つを使用します。これらのスキャンの結果はORされて結果が生成されます。別の例は、 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; に別々のインデックスがある場合、 &lt;code&gt;WHERE x = 5 AND y = 6&lt;/code&gt; ようなクエリの可能な実装の1つです。 適切なクエリ句で各インデックスを使用し、インデックスの結果をANDで結合して、結果の行を特定します。</target>
        </trans-unit>
        <trans-unit id="7a4530052e4c5506e1ca3c7fe0019b4ab8ad7aeb" translate="yes" xml:space="preserve">
          <source>Forward transition function for moving-aggregate mode (zero if none)</source>
          <target state="translated">移動アグリゲートモードの順方向遷移機能(ない場合はゼロ</target>
        </trans-unit>
        <trans-unit id="f6bf4e66e6e60c9947bd8c75fee01c881afbe844" translate="yes" xml:space="preserve">
          <source>Fourth, verify your shell is operating in the &lt;code&gt;unconfined_t&lt;/code&gt; domain:</source>
          <target state="translated">4番目に、シェルが &lt;code&gt;unconfined_t&lt;/code&gt; ドメインで動作していることを確認します。</target>
        </trans-unit>
        <trans-unit id="3b72b0d434a6da3b7a140f72c4533ea003e1049d" translate="yes" xml:space="preserve">
          <source>Fraction of column entries that are null</source>
          <target state="translated">ヌルである列エントリの割合</target>
        </trans-unit>
        <trans-unit id="05336909662a05ee4c216375dd2926cd06ca7ff1" translate="yes" xml:space="preserve">
          <source>Free Space Map</source>
          <target state="translated">フリースペースマップ</target>
        </trans-unit>
        <trans-unit id="8d1442f2468898b3b97983d4c108633f0dd9704b" translate="yes" xml:space="preserve">
          <source>Free space</source>
          <target state="translated">フリースペース</target>
        </trans-unit>
        <trans-unit id="15b3a8f5ed1b0f0d55b8d26fe0145527a2ec6761" translate="yes" xml:space="preserve">
          <source>Free space map (fork)</source>
          <target state="translated">フリースペースマップ(フォーク)</target>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="eba92e8cbbcf79124e18b38dc9296cb1e7b3c90c" translate="yes" xml:space="preserve">
          <source>FreeBSD also allows changing the time source on the fly, and it logs information about the timer selected during boot:</source>
          <target state="translated">FreeBSD では、その場で時間ソースを変更することもできますし、起動時に選択されたタイマーの情報をログに記録します。</target>
        </trans-unit>
        <trans-unit id="163ea5dad4eb636b98f8ad7f2021b2c2146c890b" translate="yes" xml:space="preserve">
          <source>FreeBSD libcrypt</source>
          <target state="translated">FreeBSD libcrypt</target>
        </trans-unit>
        <trans-unit id="28073e04cfc0b55e307bd7ab2f2fab043889d334" translate="yes" xml:space="preserve">
          <source>FreeBSD versions before 4.0 work like old OpenBSD (see below).</source>
          <target state="translated">4.0 以前の FreeBSD のバージョンは、古い OpenBSD (以下を参照)のように動作します。</target>
        </trans-unit>
        <trans-unit id="343be4952511cb2fc2b6ddde12f9c10d6cce223e" translate="yes" xml:space="preserve">
          <source>Frequent calls to this function could have some impact on database performance, because it needs access to the predicate lock manager's shared state for a short time.</source>
          <target state="translated">この関数を頻繁に呼び出すと、短時間だけ述語ロックマネージャの共有状態にアクセスする必要があるため、データベースのパフォーマンスに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="62bfe0b7eae857a638e0542deb3faf6e7cb6ef3b" translate="yes" xml:space="preserve">
          <source>Frequent calls to this function could have some impact on database performance, because it needs exclusive access to the lock manager's shared state for a short time.</source>
          <target state="translated">この関数を頻繁に呼び出すと、ロックマネージャの共有状態への短時間の排他的なアクセスが必要となるため、データベースのパフォーマンスに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">よくある質問</target>
        </trans-unit>
        <trans-unit id="bbd6e32ee1326237814b697269b4368033d50d2f" translate="yes" xml:space="preserve">
          <source>Fri</source>
          <target state="translated">Fri</target>
        </trans-unit>
        <trans-unit id="d166e844a3f3f87149cc4f866eb998e9a751c72a" translate="yes" xml:space="preserve">
          <source>Friday</source>
          <target state="translated">Friday</target>
        </trans-unit>
        <trans-unit id="0092eefda9395145cd29888b2348888692bc90be" translate="yes" xml:space="preserve">
          <source>From PostgreSQL 11, adding a column with a constant default value no longer means that each row of the table needs to be updated when the &lt;code&gt;ALTER TABLE&lt;/code&gt; statement is executed. Instead, the default value will be returned the next time the row is accessed, and applied when the table is rewritten, making the &lt;code&gt;ALTER TABLE&lt;/code&gt; very fast even on large tables.</source>
          <target state="translated">PostgreSQL 11以降では、デフォルト値が一定の列を追加しても、 &lt;code&gt;ALTER TABLE&lt;/code&gt; ステートメントの実行時にテーブルの各行を更新する必要がなくなりました。代わりに、次に行がアクセスされたときにデフォルト値が返され、テーブルが書き換えられたときに適用されるため、大きなテーブルでも &lt;code&gt;ALTER TABLE&lt;/code&gt; が非常に高速になります。</target>
        </trans-unit>
        <trans-unit id="74866cf8a85ad43b25b0fa833b5c4a9e7721fc2f" translate="yes" xml:space="preserve">
          <source>From PostgreSQL 8.3 on, there is XML-related functionality based on the SQL/XML standard in the core server. That functionality covers XML syntax checking and XPath queries, which is what this module does, and more, but the API is not at all compatible. It is planned that this module will be removed in a future version of PostgreSQL in favor of the newer standard API, so you are encouraged to try converting your applications. If you find that some of the functionality of this module is not available in an adequate form with the newer API, please explain your issue to &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:pgsql-hackers@lists.postgresql.org&quot;&gt;pgsql-hackers@lists.postgresql.org&lt;/a&gt;&amp;gt;&lt;/code&gt; so that the deficiency can be addressed.</source>
          <target state="translated">PostgreSQL 8.3以降、コアサーバーにはSQL / XML標準に基づくXML関連の機能があります。この機能は、XML構文チェックとXPathクエリをカバーします。これは、このモジュールが行うことなどですが、APIはまったく互換性がありません。このモジュールはPostgreSQLの将来のバージョンで削除され、新しい標準APIが採用される予定です。そのため、アプリケーションの変換を試すことをお勧めします。このモジュールの一部の機能が新しいAPIで適切な形式で利用できない場合は、問題を &lt;code&gt;&amp;lt;&lt;a href=&quot;mailto:pgsql-hackers@lists.postgresql.org&quot;&gt;pgsql-hackers@lists.postgresql.org&lt;/a&gt;&amp;gt;&lt;/code&gt; 説明して、欠陥に対処できるようにしてください。</target>
        </trans-unit>
        <trans-unit id="278d8abdb35f5b8d4b7f92c6d932b66d8fe44745" translate="yes" xml:space="preserve">
          <source>From experience, values in the thousands (e.g., 5000 &amp;mdash; 20000) work well.</source>
          <target state="translated">経験から、数千の値（5000〜20000など）が適切に機能します。</target>
        </trans-unit>
        <trans-unit id="a9f490fca8caa246230fe49e0dcc7c45a0810a07" translate="yes" xml:space="preserve">
          <source>From the point of view of the issuing session, &lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; is not unlike a &lt;code&gt;ROLLBACK&lt;/code&gt; command: after executing it, there is no active current transaction, and the effects of the prepared transaction are no longer visible. (The effects will become visible again if the transaction is committed.)</source>
          <target state="translated">発行セッションの観点からは、 &lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; は &lt;code&gt;ROLLBACK&lt;/code&gt; コマンドと異なりません。実行後、アクティブな現在のトランザクションはなくなり、準備されたトランザクションの影響は見えなくなります。 （トランザクションがコミットされると、効果は再び見えるようになります。）</target>
        </trans-unit>
        <trans-unit id="2047a74f4a2930f4b44969e9f4cae7215400249e" translate="yes" xml:space="preserve">
          <source>Frontend code should not include any &lt;code&gt;pg_xxx.h&lt;/code&gt; catalog header file, as these files may contain C code that won't compile outside the backend. (Typically, that happens because these files also contain declarations for functions in &lt;code&gt;src/backend/catalog/&lt;/code&gt; files.) Instead, frontend code may include the corresponding generated &lt;code&gt;pg_xxx_d.h&lt;/code&gt; header, which will contain OID &lt;code&gt;#define&lt;/code&gt;s and any other data that might be of use on the client side. If you want macros or other code in a catalog header to be visible to frontend code, write &lt;code&gt;#ifdef EXPOSE_TO_CLIENT_CODE&lt;/code&gt; ... &lt;code&gt;#endif&lt;/code&gt; around that section to instruct &lt;code&gt;genbki.pl&lt;/code&gt; to copy that section to the &lt;code&gt;pg_xxx_d.h&lt;/code&gt; header.</source>
          <target state="translated">フロントエンドコードには、 &lt;code&gt;pg_xxx.h&lt;/code&gt; カタログヘッダーファイルを含めないでください。これらのファイルには、バックエンド外でコンパイルできないCコードが含まれている可能性があるためです。（通常、これらのファイルには &lt;code&gt;src/backend/catalog/&lt;/code&gt; ファイル内の関数の宣言も含まれているために発生します。）代わりに、フロントエンドコードには、対応する生成された &lt;code&gt;pg_xxx_d.h&lt;/code&gt; ヘッダーが含まれ、OID &lt;code&gt;#define&lt;/code&gt; とその他のデータが含まれる場合がありますクライアント側で使用する。カタログヘッダー内のマクロまたは他のコードをしたい場合は、コード、書き込みフロントエンドに見えるようにする &lt;code&gt;#ifdef EXPOSE_TO_CLIENT_CODE&lt;/code&gt; ... &lt;code&gt;#endif&lt;/code&gt; のを指示しにそのセクションの周り &lt;code&gt;genbki.pl&lt;/code&gt; にそのセクションをコピーし &lt;code&gt;pg_xxx_d.h&lt;/code&gt; ヘッダ。</target>
        </trans-unit>
        <trans-unit id="5342caa1027afd1b462e71637b0394a8eb14ac7b" translate="yes" xml:space="preserve">
          <source>Frontend/Backend Protocol</source>
          <target state="translated">フロントエンド/バックエンドプロトコル</target>
        </trans-unit>
        <trans-unit id="6b2e86b36efeac1ca193b435611b528921adc671" translate="yes" xml:space="preserve">
          <source>Full Text Search</source>
          <target state="translated">全文検索</target>
        </trans-unit>
        <trans-unit id="58bab05efd3bb13a137c704cfe50139caf2da01d" translate="yes" xml:space="preserve">
          <source>Full Text Searching (or just &lt;em&gt;text search&lt;/em&gt;) provides the capability to identify natural-language &lt;em&gt;documents&lt;/em&gt; that satisfy a &lt;em&gt;query&lt;/em&gt;, and optionally to sort them by relevance to the query. The most common type of search is to find all documents containing given &lt;em&gt;query terms&lt;/em&gt; and return them in order of their &lt;em&gt;similarity&lt;/em&gt; to the query. Notions of &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;similarity&lt;/code&gt; are very flexible and depend on the specific application. The simplest search considers &lt;code&gt;query&lt;/code&gt; as a set of words and &lt;code&gt;similarity&lt;/code&gt; as the frequency of query words in the document.</source>
          <target state="translated">全文検索（または単に&lt;em&gt;テキスト検索&lt;/em&gt;）は、&lt;em&gt;クエリ&lt;/em&gt;を満たす自然言語の&lt;em&gt;ドキュメント&lt;/em&gt;を識別し、オプションで&lt;em&gt;クエリ&lt;/em&gt;との関連性によってそれらをソートする機能を提供します。最も一般的なタイプの検索は、特定の&lt;em&gt;クエリ用語&lt;/em&gt;を含むすべてのドキュメントを検索し、それらをクエリとの&lt;em&gt;類似性の&lt;/em&gt;順に返します。 &lt;code&gt;query&lt;/code&gt; と &lt;code&gt;similarity&lt;/code&gt; 概念は非常に柔軟で、特定のアプリケーションに依存します。最も単純な検索では、 &lt;code&gt;query&lt;/code&gt; を単語のセットと見なし、 &lt;code&gt;similarity&lt;/code&gt; をドキュメント内のクエリ単語の頻度と見なします。</target>
        </trans-unit>
        <trans-unit id="db82b334faa95ac9dd9f6513348aba4908da1917" translate="yes" xml:space="preserve">
          <source>Full knowledge of running transactions is required before snapshots can be taken. Transactions that use large numbers of subtransactions (currently greater than 64) will delay the start of read only connections until the completion of the longest running write transaction. If this situation occurs, explanatory messages will be sent to the server log.</source>
          <target state="translated">スナップショットを取得する前に、実行中のトランザクションを完全に把握しておく必要があります。多数のサブトランザクションを使用するトランザクション (現在は 64 より大きい)は、最も長く実行されている書き込みトランザクションが完了するまで、読み取り専用の接続の開始を遅延させます。このような状況が発生した場合、説明メッセージがサーバログに送信されます。</target>
        </trans-unit>
        <trans-unit id="0c4e89b5598c4c2f96620f236425e65a764b4e0c" translate="yes" xml:space="preserve">
          <source>Full path name of the configuration file</source>
          <target state="translated">設定ファイルのフルパス名</target>
        </trans-unit>
        <trans-unit id="f75d588686a67b50b8825a6ec9a2cd0fa788d6f1" translate="yes" xml:space="preserve">
          <source>Full text indexing allows documents to be &lt;em&gt;preprocessed&lt;/em&gt; and an index saved for later rapid searching. Preprocessing includes:</source>
          <target state="translated">全文索引付けにより、ドキュメントを&lt;em&gt;前処理&lt;/em&gt;し、後で迅速に検索できるように索引を保存できます。前処理には以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="1e173192dc3f0eff1cb3f86ab840c4e44f26a1a2" translate="yes" xml:space="preserve">
          <source>Full text searching in PostgreSQL is based on the match operator &lt;code&gt;@@&lt;/code&gt;, which returns &lt;code&gt;true&lt;/code&gt; if a &lt;code&gt;tsvector&lt;/code&gt; (document) matches a &lt;code&gt;tsquery&lt;/code&gt; (query). It doesn't matter which data type is written first:</source>
          <target state="translated">PostgreSQLでの全文検索は、 &lt;code&gt;tsvector&lt;/code&gt; （ドキュメント）が &lt;code&gt;tsquery&lt;/code&gt; （クエリ）と一致する場合に &lt;code&gt;true&lt;/code&gt; を返す一致演算子 &lt;code&gt;@@&lt;/code&gt; に基づいています。どのデータ型が最初に書き込まれるかは関係ありません。</target>
        </trans-unit>
        <trans-unit id="31ad0600481ef9dcfec15d2c9583987bbeea5538" translate="yes" xml:space="preserve">
          <source>Full time zone name</source>
          <target state="translated">フルタイムゾーン名</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="199b395518a17474f39a98683e459c8710d22bf0" translate="yes" xml:space="preserve">
          <source>Function (degrees)</source>
          <target state="translated">機能(度)</target>
        </trans-unit>
        <trans-unit id="c4cdc4b98800828d365361d7093d5e13c470e528" translate="yes" xml:space="preserve">
          <source>Function (radians)</source>
          <target state="translated">関数(ラジアン)</target>
        </trans-unit>
        <trans-unit id="f20152848a0a27fa254ba49727fe94ca837e87e8" translate="yes" xml:space="preserve">
          <source>Function (routine)</source>
          <target state="translated">関数(ルーチン</target>
        </trans-unit>
        <trans-unit id="e3ebe4e72fe78109751ae6020102e21b46343c0b" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;concat_lower_or_upper&lt;/code&gt; has two mandatory parameters, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Additionally there is one optional parameter &lt;code&gt;uppercase&lt;/code&gt; which defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; inputs will be concatenated, and forced to either upper or lower case depending on the &lt;code&gt;uppercase&lt;/code&gt; parameter. The remaining details of this function definition are not important here (see &lt;a href=&quot;https://www.postgresql.org/docs/12/extend.html&quot;&gt;Chapter 37&lt;/a&gt; for more information).</source>
          <target state="translated">関数 &lt;code&gt;concat_lower_or_upper&lt;/code&gt; には、2つの必須パラメーター &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; があります。さらに、デフォルトで &lt;code&gt;false&lt;/code&gt; になっている &lt;code&gt;uppercase&lt;/code&gt; オプションパラメータが1つあります。 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; 入力が連結され、そしていずれかの大文字または小文字に応じに強制される &lt;code&gt;uppercase&lt;/code&gt; のパラメータ。この関数定義の残りの詳細はここでは重要ではありません（詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/12/extend.html&quot;&gt;第37章を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="2af2dc6af90c7c987875d7c9624eadd9b65f4d37" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;concat_lower_or_upper&lt;/code&gt; has two mandatory parameters, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Additionally there is one optional parameter &lt;code&gt;uppercase&lt;/code&gt; which defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; inputs will be concatenated, and forced to either upper or lower case depending on the &lt;code&gt;uppercase&lt;/code&gt; parameter. The remaining details of this function definition are not important here (see &lt;a href=&quot;https://www.postgresql.org/docs/13/extend.html&quot;&gt;Chapter 37&lt;/a&gt; for more information).</source>
          <target state="translated">関数 &lt;code&gt;concat_lower_or_upper&lt;/code&gt; には、 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の2つの必須パラメーターがあります。さらに、デフォルトで &lt;code&gt;false&lt;/code&gt; に設定されている &lt;code&gt;uppercase&lt;/code&gt; オプションパラメータが1つあります。 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; 入力が連結され、そしていずれかの大文字または小文字に応じに強制される &lt;code&gt;uppercase&lt;/code&gt; のパラメータ。この関数定義の残りの詳細は、ここでは重要ではありません（詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/extend.html&quot;&gt;第37章を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="a9485768ec808a8458b8061522775420e2a0d736" translate="yes" xml:space="preserve">
          <source>Function Calls in &lt;code&gt;FROM&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; での関数呼び出し</target>
        </trans-unit>
        <trans-unit id="5cd7aa6580361c1c90294750468e2a6e5d51165d" translate="yes" xml:space="preserve">
          <source>Function Security</source>
          <target state="translated">機能セキュリティ</target>
        </trans-unit>
        <trans-unit id="307d58da1cb5c708acf50f78b41a528827c81cf8" translate="yes" xml:space="preserve">
          <source>Function calls</source>
          <target state="translated">関数呼び出し</target>
        </trans-unit>
        <trans-unit id="8b07e5d5a0f30facf481faff6183bfd24366f034" translate="yes" xml:space="preserve">
          <source>Function calls can appear in the &lt;code&gt;FROM&lt;/code&gt; clause. (This is especially useful for functions that return result sets, but any function can be used.) This acts as though the function's output were created as a temporary table for the duration of this single &lt;code&gt;SELECT&lt;/code&gt; command. When the optional &lt;code&gt;WITH ORDINALITY&lt;/code&gt; clause is added to the function call, a new column is appended after all the function's output columns with numbering for each row.</source>
          <target state="translated">関数呼び出しは &lt;code&gt;FROM&lt;/code&gt; 句で使用できます。（これは、結果セットを返す関数に特に役立ちますが、任意の関数を使用できます。）これは、この単一の &lt;code&gt;SELECT&lt;/code&gt; コマンドの期間中、関数の出力が一時テーブルとして作成されたかのように機能します。オプションの &lt;code&gt;WITH ORDINALITY&lt;/code&gt; 句を関数呼び出しに追加すると、すべての関数の出力列の後に、各行に番号が付けられた新しい列が追加されます。</target>
        </trans-unit>
        <trans-unit id="b4946fa700c9eda6e438f9d998236ae26798c94a" translate="yes" xml:space="preserve">
          <source>Function is a security definer (i.e., a &amp;ldquo;setuid&amp;rdquo; function)</source>
          <target state="translated">関数はセキュリティ定義者（つまり、「setuid」関数）</target>
        </trans-unit>
        <trans-unit id="716c6238c1da557cf03815f10e855bae3322359c" translate="yes" xml:space="preserve">
          <source>Function returns a set (i.e., multiple values of the specified data type)</source>
          <target state="translated">この関数は、セット(すなわち、指定されたデータ型の複数の値)を返します。</target>
        </trans-unit>
        <trans-unit id="23fbe0cb5a01469d890d631e094cc17384405a30" translate="yes" xml:space="preserve">
          <source>Function returns null if any call argument is null. In that case the function won't actually be called at all. Functions that are not &amp;ldquo;strict&amp;rdquo; must be prepared to handle null inputs.</source>
          <target state="translated">いずれかの呼び出し引数がnullの場合、関数はnullを返します。その場合、関数は実際にはまったく呼び出されません。「厳密」ではない関数は、ヌル入力を処理できるように準備する必要があります。</target>
        </trans-unit>
        <trans-unit id="8fd90f4b1717187c9f3e3d19223db85d2f734625" translate="yes" xml:space="preserve">
          <source>Function that implements this operator</source>
          <target state="translated">この演算子を実装した関数</target>
        </trans-unit>
        <trans-unit id="3d160cc011b485e39a85d5d485371501ec7cfb5f" translate="yes" xml:space="preserve">
          <source>Function's local settings for run-time configuration variables</source>
          <target state="translated">実行時設定変数の関数のローカル設定</target>
        </trans-unit>
        <trans-unit id="ec496000534b307fd515f93c3bf982f8043b1486" translate="yes" xml:space="preserve">
          <source>Function/Operator</source>
          <target state="translated">Function/Operator</target>
        </trans-unit>
        <trans-unit id="72f655d0260fed163ce26bf8c073ff029ead93e0" translate="yes" xml:space="preserve">
          <source>Functional Dependencies</source>
          <target state="translated">機能的な依存関係</target>
        </trans-unit>
        <trans-unit id="6538b8b49394fd4058eb032b1ed6c7549c5fd8b9" translate="yes" xml:space="preserve">
          <source>Functional dependencies are currently only applied when considering simple equality conditions that compare columns to constant values, and &lt;code&gt;IN&lt;/code&gt; clauses with constant values. They are not used to improve estimates for equality conditions comparing two columns or comparing a column to an expression, nor for range clauses, &lt;code&gt;LIKE&lt;/code&gt; or any other type of condition.</source>
          <target state="translated">関数従属性は現在、列を定数値と比較する単純な等式条件、および定数値を持つ &lt;code&gt;IN&lt;/code&gt; 句を検討する場合にのみ適用されます。これらは、2つの列を比較したり、列を式と比較したりする等式条件の推定を改善するためにも、範囲句、 &lt;code&gt;LIKE&lt;/code&gt; 、またはその他のタイプの条件の推定にも使用されません。</target>
        </trans-unit>
        <trans-unit id="5ff8dd38721f013a6f2f4a7b0736888d581a5d95" translate="yes" xml:space="preserve">
          <source>Functional dependencies are currently only applied when considering simple equality conditions that compare columns to constant values. They are not used to improve estimates for equality conditions comparing two columns or comparing a column to an expression, nor for range clauses, &lt;code&gt;LIKE&lt;/code&gt; or any other type of condition.</source>
          <target state="translated">現在、関数の依存関係は、列を定数値と比較する単純な等価条件を検討する場合にのみ適用されます。これらは、2つの列を比較する、または列を式と比較する等価条件、または範囲句、 &lt;code&gt;LIKE&lt;/code&gt; 、またはその他の種類の条件の推定を改善するためには使用されません。</target>
        </trans-unit>
        <trans-unit id="c1d8fc0143ef31c2eddcaedc63b8975839dcb0a6" translate="yes" xml:space="preserve">
          <source>Functional dependency statistics</source>
          <target state="translated">機能依存性の統計</target>
        </trans-unit>
        <trans-unit id="66e4b5d56651ee62066b47e8179cf0572f0a44de" translate="yes" xml:space="preserve">
          <source>Functional dependency statistics, serialized as &lt;code&gt;pg_dependencies&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;pg_dependencies&lt;/code&gt; タイプとしてシリアル化された機能依存統計</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="2ef4610dd144f45355b17173e115381a509a4ae6" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;get_byte&lt;/code&gt; and &lt;code&gt;set_byte&lt;/code&gt; number the first byte of a binary string as byte 0. Functions &lt;code&gt;get_bit&lt;/code&gt; and &lt;code&gt;set_bit&lt;/code&gt; number bits from the right within each byte; for example bit 0 is the least significant bit of the first byte, and bit 15 is the most significant bit of the second byte.</source>
          <target state="translated">関数 &lt;code&gt;get_byte&lt;/code&gt; および &lt;code&gt;set_byte&lt;/code&gt; は、バイナリ文字列の最初のバイトにバイト0として番号を付けます。関数 &lt;code&gt;get_bit&lt;/code&gt; および &lt;code&gt;set_bit&lt;/code&gt; は、各バイト内の右からビットに番号を付けます。たとえば、ビット0は最初のバイトの最下位ビットであり、ビット15は2番目のバイトの最上位ビットです。</target>
        </trans-unit>
        <trans-unit id="4bc6ed2a77aad7bfa2b82a40e38f2ba52fbf90bc" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;justify_days&lt;/code&gt; and &lt;code&gt;justify_hours&lt;/code&gt; are available for adjusting days and hours that overflow their normal ranges.</source>
          <target state="translated">関数 &lt;code&gt;justify_days&lt;/code&gt; と &lt;code&gt;justify_hours&lt;/code&gt; は、通常の範囲を超える日と時間を調整するために使用できます。</target>
        </trans-unit>
        <trans-unit id="be003abde8f2ab71ad33e1cc06ea3dd303feedda" translate="yes" xml:space="preserve">
          <source>Functions and Operators</source>
          <target state="translated">機能と演算子</target>
        </trans-unit>
        <trans-unit id="c65bb1eea1a55d451d6926238ca1817228c00025" translate="yes" xml:space="preserve">
          <source>Functions and aggregates must be marked &lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; if they write to the database, access sequences, change the transaction state even temporarily (e.g. a PL/pgSQL function which establishes an &lt;code&gt;EXCEPTION&lt;/code&gt; block to catch errors), or make persistent changes to settings. Similarly, functions must be marked &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; if they access temporary tables, client connection state, cursors, prepared statements, or miscellaneous backend-local state which the system cannot synchronize across workers. For example, &lt;code&gt;setseed&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt; are parallel restricted for this last reason.</source>
          <target state="translated">関数と集約関数は、データベースへの書き込み、シーケンスへのアクセス、トランザクション状態の一時的な変更（例：エラーをキャッチするための &lt;code&gt;EXCEPTION&lt;/code&gt; ブロックを確立するPL / pgSQL関数）、または永続的な設定変更を行う場合は、 &lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; とマークする必要があります。同様に、関数が一時テーブル、クライアント接続状態、カーソル、準備されたステートメント、またはシステムがワーカー間で同期できないその他のバックエンドローカル状態にアクセスする場合は、関数に &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; のマークを付ける必要があります。たとえば、この最後の理由により、 &lt;code&gt;setseed&lt;/code&gt; と &lt;code&gt;random&lt;/code&gt; は並行して制限されます。</target>
        </trans-unit>
        <trans-unit id="7d1d2a2fe42ec99a70594ecc07d4bafedfeedcc6" translate="yes" xml:space="preserve">
          <source>Functions and aggregates must be marked &lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; if they write to the database, access sequences, change the transaction state even temporarily (e.g., a PL/pgSQL function which establishes an &lt;code&gt;EXCEPTION&lt;/code&gt; block to catch errors), or make persistent changes to settings. Similarly, functions must be marked &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; if they access temporary tables, client connection state, cursors, prepared statements, or miscellaneous backend-local state which the system cannot synchronize across workers. For example, &lt;code&gt;setseed&lt;/code&gt; and &lt;code&gt;random&lt;/code&gt; are parallel restricted for this last reason.</source>
          <target state="translated">関数とアグリゲートは、データベースへの書き込み、シーケンスへのアクセス、一時的でもトランザクション状態の変更（たとえば、エラーをキャッチするために &lt;code&gt;EXCEPTION&lt;/code&gt; ブロックを確立するPL / pgSQL関数）、または設定の永続的な変更を行う場合は、 &lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; とマークする必要があります。同様に、関数が一時テーブル、クライアント接続状態、カーソル、プリペアドステートメント、またはシステムがワーカー間で同期できないその他のバックエンドローカル状態にアクセスする場合は、 &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; とマークする必要があります。たとえば、 &lt;code&gt;setseed&lt;/code&gt; と &lt;code&gt;random&lt;/code&gt; は、この最後の理由で並列制限されています。</target>
        </trans-unit>
        <trans-unit id="2fe9555fcfd38cd02c2b84229962727f96f4f2eb" translate="yes" xml:space="preserve">
          <source>Functions and most operators return &lt;code&gt;NULL&lt;/code&gt; on &lt;code&gt;NULL&lt;/code&gt; input.</source>
          <target state="translated">関数とほとんどの演算子は、 &lt;code&gt;NULL&lt;/code&gt; 入力で &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0f265f85b070748c539b48bb2df1919c8d0132ab" translate="yes" xml:space="preserve">
          <source>Functions and operators that can be used in filter expressions are listed in &lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-FILTER-EX-TABLE&quot;&gt;Table 9.49&lt;/a&gt;. The path evaluation result to be filtered is denoted by the &lt;code&gt;@&lt;/code&gt; variable. To refer to a JSON element stored at a lower nesting level, add one or more accessor operators after &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">フィルター式で使用できる関数と演算子を&lt;a href=&quot;functions-json#FUNCTIONS-SQLJSON-FILTER-EX-TABLE&quot;&gt;表9.49に示し&lt;/a&gt;ます。フィルタリングされるパス評価結果は、 &lt;code&gt;@&lt;/code&gt; 変数で示されます。下位のネストレベルに格納されているJSON要素を参照するには、 &lt;code&gt;@&lt;/code&gt; の後に1つ以上のアクセサー演算子を追加します。</target>
        </trans-unit>
        <trans-unit id="898ae4ce80d1416da1e82be5528ff4ee3420d0cc" translate="yes" xml:space="preserve">
          <source>Functions are provided to support input in latitude and longitude (in degrees), to support output of latitude and longitude, to calculate the great circle distance between two points and to easily specify a bounding box usable for index searches.</source>
          <target state="translated">緯度経度(度)での入力支援、緯度経度の出力支援、2点間の大円距離の計算、インデックス検索に利用できる境界線を簡単に指定できる機能が用意されています。</target>
        </trans-unit>
        <trans-unit id="bab4610ff64d803d4f4e2ad2f2b59a748f8c7899" translate="yes" xml:space="preserve">
          <source>Functions can also be used for &lt;a href=&quot;glossary#GLOSSARY-TRIGGER&quot;&gt;triggers&lt;/a&gt; to invoke.</source>
          <target state="translated">関数は、&lt;a href=&quot;glossary#GLOSSARY-TRIGGER&quot;&gt;トリガー&lt;/a&gt;を呼び出すためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="363d6f73b8773f17e3ee7b55c329af36a576dd3e" translate="yes" xml:space="preserve">
          <source>Functions coded in C (whether built-in or dynamically loaded) can be declared to accept or return any of these pseudo data types. It is up to the function author to ensure that the function will behave safely when a pseudo-type is used as an argument type.</source>
          <target state="translated">C言語でコーディングされた関数(組み込みでも動的にロードされたものでも)は、これらの疑似データ型のいずれかを受け入れたり返したりするように宣言することができます。疑似データ型が引数型として使用されている場合に、関数が安全に動作するかどうかは関数の作者次第です。</target>
        </trans-unit>
        <trans-unit id="e75c7dde792e62f93784e745daa34244d2b25079" translate="yes" xml:space="preserve">
          <source>Functions coded in C (whether built-in or dynamically loaded) can be declared to accept or return any of these pseudo-types. It is up to the function author to ensure that the function will behave safely when a pseudo-type is used as an argument type.</source>
          <target state="translated">C言語でコーディングされた関数(組み込みでも動的にロードされたものでも)は、これらの疑似型のいずれかを受け入れたり返したりするように宣言することができます。疑似型が引数型として使用されたときに、関数が安全に動作するかどうかは関数の作者次第です。</target>
        </trans-unit>
        <trans-unit id="04ca6b1f3b45b7dfbecfbb5e57babd0db8514f38" translate="yes" xml:space="preserve">
          <source>Functions coded in procedural languages can use pseudo-types only as allowed by their implementation languages. At present most procedural languages forbid use of a pseudo-type as an argument type, and allow only &lt;code&gt;void&lt;/code&gt; and &lt;code&gt;record&lt;/code&gt; as a result type (plus &lt;code&gt;trigger&lt;/code&gt; or &lt;code&gt;event_trigger&lt;/code&gt; when the function is used as a trigger or event trigger). Some also support polymorphic functions using the polymorphic pseudo-types, which are shown above and discussed in detail in &lt;a href=&quot;https://www.postgresql.org/docs/13/extend-type-system.html#EXTEND-TYPES-POLYMORPHIC&quot;&gt;Section 37.2.5&lt;/a&gt;.</source>
          <target state="translated">手続き型言語でコーディングされた関数は、実装言語で許可されている場合にのみ疑似型を使用できます。現在、ほとんどの手続き型言語では、引数型として疑似型を使用することは禁止されており、結果型として &lt;code&gt;void&lt;/code&gt; と &lt;code&gt;record&lt;/code&gt; のみが許可されています（関数がトリガーまたはイベントトリガーとして使用される場合は、 &lt;code&gt;trigger&lt;/code&gt; または &lt;code&gt;event_trigger&lt;/code&gt; も含まれます）。一部は、ポリモーフィック疑似型を使用したポリモーフィック関数もサポートしています。これは、上記に示され、&lt;a href=&quot;https://www.postgresql.org/docs/13/extend-type-system.html#EXTEND-TYPES-POLYMORPHIC&quot;&gt;セクション37.2.5&lt;/a&gt;で詳細に説明されています。</target>
        </trans-unit>
        <trans-unit id="357d435e84354e072901789e999d5e8184ddfdf6" translate="yes" xml:space="preserve">
          <source>Functions coded in procedural languages can use pseudo-types only as allowed by their implementation languages. At present most procedural languages forbid use of a pseudo-type as an argument type, and allow only &lt;code&gt;void&lt;/code&gt; and &lt;code&gt;record&lt;/code&gt; as a result type (plus &lt;code&gt;trigger&lt;/code&gt; or &lt;code&gt;event_trigger&lt;/code&gt; when the function is used as a trigger or event trigger). Some also support polymorphic functions using the types &lt;code&gt;anyelement&lt;/code&gt;, &lt;code&gt;anyarray&lt;/code&gt;, &lt;code&gt;anynonarray&lt;/code&gt;, &lt;code&gt;anyenum&lt;/code&gt;, and &lt;code&gt;anyrange&lt;/code&gt;.</source>
          <target state="translated">手続き型言語でコード化された関数は、実装言語で許可されている場合にのみ疑似型を使用できます。現在、ほとんどの手続き型言語は、引数型としての疑似型の使用を禁止し、結果型として &lt;code&gt;void&lt;/code&gt; と &lt;code&gt;record&lt;/code&gt; のみを許可しています（関数がトリガーまたはイベントトリガーとして使用されている場合は、 &lt;code&gt;trigger&lt;/code&gt; または &lt;code&gt;event_trigger&lt;/code&gt; ）。また、 &lt;code&gt;anyelement&lt;/code&gt; 、 &lt;code&gt;anyarray&lt;/code&gt; 、 &lt;code&gt;anynonarray&lt;/code&gt; 、 &lt;code&gt;anyenum&lt;/code&gt; 、および &lt;code&gt;anyrange&lt;/code&gt; のタイプを使用して多態性関数をサポートするものもあります。</target>
        </trans-unit>
        <trans-unit id="99ae93c6cb1d152d9259b18ff6ab4fe6a95f0f1e" translate="yes" xml:space="preserve">
          <source>Functions for converting strings between different character sets (encodings), and for representing arbitrary binary data in textual form, are shown in &lt;a href=&quot;functions-binarystring#FUNCTIONS-BINARYSTRING-CONVERSIONS&quot;&gt;Table 9.13&lt;/a&gt;. For these functions, an argument or result of type &lt;code&gt;text&lt;/code&gt; is expressed in the database's default encoding, while arguments or results of type &lt;code&gt;bytea&lt;/code&gt; are in an encoding named by another argument.</source>
          <target state="translated">異なる文字セット（エンコーディング）間で文字列を変換するための関数、およびテキスト形式で任意のバイナリデータを表すための関数を&lt;a href=&quot;functions-binarystring#FUNCTIONS-BINARYSTRING-CONVERSIONS&quot;&gt;表9.13に&lt;/a&gt;示します。これらの関数の場合、 &lt;code&gt;text&lt;/code&gt; 型の引数または結果はデータベースのデフォルトエンコーディングで表現され、 &lt;code&gt;bytea&lt;/code&gt; 型の引数または結果は別の引数で指定されたエンコーディングで表現されます。</target>
        </trans-unit>
        <trans-unit id="4a3e904c1371583b52ebdd3a3d3f52a9437f4a8d" translate="yes" xml:space="preserve">
          <source>Functions run inside the backend server process with the operating system permissions of the database server daemon. If the programming language used for the function allows unchecked memory accesses, it is possible to change the server's internal data structures. Hence, among many other things, such functions can circumvent any system access controls. Function languages that allow such access are considered &amp;ldquo;untrusted&amp;rdquo;, and PostgreSQL allows only superusers to create functions written in those languages.</source>
          <target state="translated">関数は、データベースサーバーデーモンのオペレーティングシステム権限でバックエンドサーバープロセス内で実行されます。関数に使用されているプログラミング言語でチェックされていないメモリアクセスが許可されている場合、サーバーの内部データ構造を変更することができます。したがって、他の多くの機能の中でも、このような機能はシステムのアクセス制御を回避できます。そのようなアクセスを許可する関数言語は「信頼できない」と見なされ、PostgreSQLはスーパーユーザーのみがそれらの言語で記述された関数を作成することを許可します。</target>
        </trans-unit>
        <trans-unit id="425b58ada88d6e2c4cd54b7ad94f94b6cfbbbdae" translate="yes" xml:space="preserve">
          <source>Functions should be labeled parallel unsafe if they modify any database state, or if they make changes to the transaction such as using sub-transactions, or if they access sequences or attempt to make persistent changes to settings (e.g. &lt;code&gt;setval&lt;/code&gt;). They should be labeled as parallel restricted if they access temporary tables, client connection state, cursors, prepared statements, or miscellaneous backend-local state which the system cannot synchronize in parallel mode (e.g. &lt;code&gt;setseed&lt;/code&gt; cannot be executed other than by the group leader because a change made by another process would not be reflected in the leader). In general, if a function is labeled as being safe when it is restricted or unsafe, or if it is labeled as being restricted when it is in fact unsafe, it may throw errors or produce wrong answers when used in a parallel query. C-language functions could in theory exhibit totally undefined behavior if mislabeled, since there is no way for the system to protect itself against arbitrary C code, but in most likely cases the result will be no worse than for any other function. If in doubt, functions should be labeled as &lt;code&gt;UNSAFE&lt;/code&gt;, which is the default.</source>
          <target state="translated">関数は、データベースの状態を変更する場合、サブトランザクションの使用などのトランザクションに変更を加える場合、またはシーケンスにアクセスしたり、設定に永続的な変更を &lt;code&gt;setval&lt;/code&gt; うとする場合（setvalなど）、並列安全ではないとラベル付けする必要があります。一時テーブル、クライアント接続状態、カーソル、準備済みステートメント、またはシステムが並列モードで同期できないその他のバックエンドローカル状態（ &lt;code&gt;setseed&lt;/code&gt; など)にアクセスする場合、それらは並列制限付きとしてラベル付けする必要があります。別のプロセスによる変更はリーダーに反映されないため、グループリーダー以外は実行できません）。一般に、制限されているか安全でない関数が安全であるとラベル付けされている場合、または実際に安全でない関数が制限されているとラベル付けされている場合、並列クエリで使用すると、エラーがスローされるか、間違った回答が生成されることがあります。システムが任意のCコードからシステムを保護する方法がないため、C言語の関数は理論上、誤ったラベルが付けられた場合、完全に未定義の動作を示す可能性がありますが、ほとんどの場合、結果は他の関数よりも悪くはありません。疑わしい場合は、関数にデフォルトの &lt;code&gt;UNSAFE&lt;/code&gt; のラベルを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="ca99020631ecbd508e87c7482047eede97742a02" translate="yes" xml:space="preserve">
          <source>Functions should be labeled parallel unsafe if they modify any database state, or if they make changes to the transaction such as using sub-transactions, or if they access sequences or attempt to make persistent changes to settings (e.g., &lt;code&gt;setval&lt;/code&gt;). They should be labeled as parallel restricted if they access temporary tables, client connection state, cursors, prepared statements, or miscellaneous backend-local state which the system cannot synchronize in parallel mode (e.g., &lt;code&gt;setseed&lt;/code&gt; cannot be executed other than by the group leader because a change made by another process would not be reflected in the leader). In general, if a function is labeled as being safe when it is restricted or unsafe, or if it is labeled as being restricted when it is in fact unsafe, it may throw errors or produce wrong answers when used in a parallel query. C-language functions could in theory exhibit totally undefined behavior if mislabeled, since there is no way for the system to protect itself against arbitrary C code, but in most likely cases the result will be no worse than for any other function. If in doubt, functions should be labeled as &lt;code&gt;UNSAFE&lt;/code&gt;, which is the default.</source>
          <target state="translated">関数は、データベースの状態を変更する場合、サブトランザクションの使用などトランザクションに変更を加える場合、またはシーケンスにアクセスするか、設定に永続的な変更を &lt;code&gt;setval&lt;/code&gt; うとする場合（たとえば、setval）、並列安全ではないというラベルを付ける必要があります。一時テーブル、クライアント接続状態、カーソル、プリペアドステートメント、またはシステムが並列モードで同期できないその他のバックエンドローカル状態（例： &lt;code&gt;setseed&lt;/code&gt; )にアクセスする場合は、並列制限としてラベル付けする必要があります。別のプロセスによって行われた変更はリーダーに反映されないため、グループリーダー以外は実行できません）。一般に、関数が制限されているか安全でないときに安全であるとラベル付けされている場合、または実際に安全でないときに制限されているとラベル付けされている場合、並列クエリで使用するとエラーがスローされたり、間違った回答が生成されたりする可能性があります。システムが任意のCコードから自身を保護する方法がないため、C言語関数は、誤ってラベル付けされた場合、理論的には完全に未定義の動作を示す可能性がありますが、ほとんどの場合、結果は他の関数よりも悪くはありません。疑わしい場合は、関数に &lt;code&gt;UNSAFE&lt;/code&gt; というラベルを付ける必要があります。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="b84230860ab5761ae6c39a0cf038afa0e0d25690" translate="yes" xml:space="preserve">
          <source>Functions that display information about &lt;code&gt;PD_ALL_VISIBLE&lt;/code&gt; bits are much more costly than those that only consult the visibility map, because they must read the relation's data blocks rather than only the (much smaller) visibility map. Functions that check the relation's data blocks are similarly expensive.</source>
          <target state="translated">&lt;code&gt;PD_ALL_VISIBLE&lt;/code&gt; ビットに関する情報を表示する関数は、（はるかに小さい）可視性マップだけではなく、リレーションのデータブロックを読み取る必要があるため、可視性マップのみを参照する関数よりもはるかにコストがかかります。リレーションのデータブロックをチェックする関数も同様にコストがかかります。</target>
        </trans-unit>
        <trans-unit id="bdbee713b789a01d106896990329fe65f45aec42" translate="yes" xml:space="preserve">
          <source>Functions that have default values for parameters are considered to match any call that omits zero or more of the defaultable parameter positions. If more than one such function matches a call, the one appearing earliest in the search path is used. If there are two or more such functions in the same schema with identical parameter types in the non-defaulted positions (which is possible if they have different sets of defaultable parameters), the system will not be able to determine which to prefer, and so an &amp;ldquo;ambiguous function call&amp;rdquo; error will result if no better match to the call can be found.</source>
          <target state="translated">パラメーターにデフォルト値がある関数は、デフォルト設定可能なパラメーター位置の0個以上を省略した呼び出しと一致すると見なされます。複数のそのような関数が呼び出しに一致する場合、検索パスで最初に出現するものが使用されます。デフォルトではない位置に同じパラメータタイプを持つ同じスキーマ内にそのような関数が2つ以上ある場合（デフォルト設定可能なパラメータのセットが異なる場合に可能です）、システムはどちらを優先するかを決定できません。 「あいまいな関数呼び出し」エラーは、呼び出しに一致するものが見つからない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="968a1bb51fb8e88d31fbc6fa43c7108e8557e4b7" translate="yes" xml:space="preserve">
          <source>Functions that have different argument type lists will not be considered to conflict at creation time, but if defaults are provided they might conflict in use. For example, consider</source>
          <target state="translated">異なる引数型リストを持つ関数は、作成時には競合しないと考えられますが、デフォルトが提供されている場合は、使用時に競合する可能性があります。例えば、次のように考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="135becd421fd7ec3a1d11031f3897f120bbd244e" translate="yes" xml:space="preserve">
          <source>Functions, triggers and row-level security policies allow users to insert code into the backend server that other users might execute unintentionally. Hence, these mechanisms permit users to &amp;ldquo;Trojan horse&amp;rdquo; others with relative ease. The strongest protection is tight control over who can define objects. Where that is infeasible, write queries referring only to objects having trusted owners. Remove from &lt;code&gt;search_path&lt;/code&gt; the public schema and any other schemas that permit untrusted users to create objects.</source>
          <target state="translated">関数、トリガー、および行レベルのセキュリティポリシーにより、ユーザーは、他のユーザーが意図せずに実行する可能性のあるコードをバックエンドサーバーに挿入できます。したがって、これらのメカニズムにより、ユーザーは比較的簡単に他のユーザーを「トロイの木馬」にすることができます。最も強力な保護は、オブジェクトを定義できるユーザーを厳密に制御することです。それが実行不可能な場合は、信頼できる所有者がいるオブジェクトのみを参照するクエリを記述します。信頼されていないユーザーがオブジェクトを作成できるようにするパブリックスキーマおよびその他のスキーマを &lt;code&gt;search_path&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="5108d609f3fb07622f5f3d1be40ac26ef2e0a0a8" translate="yes" xml:space="preserve">
          <source>Functions: Aggregate</source>
          <target state="translated">機能を提供しています。集計</target>
        </trans-unit>
        <trans-unit id="64682352d164f9b71b9cd241b5b867b131e9918f" translate="yes" xml:space="preserve">
          <source>Functions: Array</source>
          <target state="translated">関数です。配列</target>
        </trans-unit>
        <trans-unit id="a17a5cd5398272b5c3db6c42f415d4231dc9dd50" translate="yes" xml:space="preserve">
          <source>Functions: Binary String</source>
          <target state="translated">関数を使用しています。バイナリ文字列</target>
        </trans-unit>
        <trans-unit id="46e7b932a583771eba0b904ed9f4220de160a130" translate="yes" xml:space="preserve">
          <source>Functions: Bit String</source>
          <target state="translated">関数を使用しています。ビット文字列</target>
        </trans-unit>
        <trans-unit id="106e142aa5e330cde3a84b7b845817b28d2e9175" translate="yes" xml:space="preserve">
          <source>Functions: Data Type Formatting</source>
          <target state="translated">関数を使用しています。データ型の書式設定</target>
        </trans-unit>
        <trans-unit id="bfefb2129f2304220f19e00946bdffaabf6dc0e1" translate="yes" xml:space="preserve">
          <source>Functions: Date/Time</source>
          <target state="translated">機能を提供します。日付/時間</target>
        </trans-unit>
        <trans-unit id="9b63eb1b87b1e024896cd43589c27f090399d066" translate="yes" xml:space="preserve">
          <source>Functions: Geometric</source>
          <target state="translated">関数。幾何学的</target>
        </trans-unit>
        <trans-unit id="4d3dafd3b51e63a124d63c626067bce30229ab1f" translate="yes" xml:space="preserve">
          <source>Functions: JSON</source>
          <target state="translated">関数を使用しています。JSON</target>
        </trans-unit>
        <trans-unit id="9b518a3dc41009e3acee3808ac0e704f6b08a5f3" translate="yes" xml:space="preserve">
          <source>Functions: Mathematical</source>
          <target state="translated">関数。数学的</target>
        </trans-unit>
        <trans-unit id="a9c0c6a0475c27e5bdfe98492ed642ea26c29174" translate="yes" xml:space="preserve">
          <source>Functions: Network Address</source>
          <target state="translated">機能を紹介します。ネットワークアドレス</target>
        </trans-unit>
        <trans-unit id="a4976494155f4e6dade31fdc069e51f1a7d1ce69" translate="yes" xml:space="preserve">
          <source>Functions: Range</source>
          <target state="translated">機能を提供しています。範囲</target>
        </trans-unit>
        <trans-unit id="b8fcb9bba13dc3a8cc6d595a39daf47631d430a4" translate="yes" xml:space="preserve">
          <source>Functions: Statistics Information</source>
          <target state="translated">機能を提供しています。統計情報</target>
        </trans-unit>
        <trans-unit id="d1ee22b179879e9f873763bb172d33f3017f840e" translate="yes" xml:space="preserve">
          <source>Functions: String</source>
          <target state="translated">関数を使用しています。文字列</target>
        </trans-unit>
        <trans-unit id="6843fcead53a6cf24daa8566fecd89162ab37e7f" translate="yes" xml:space="preserve">
          <source>Functions: System Administration</source>
          <target state="translated">機能をご紹介します。システム管理</target>
        </trans-unit>
        <trans-unit id="a388797fbe7fca428c186d9bd0e36003dc121806" translate="yes" xml:space="preserve">
          <source>Functions: System Information</source>
          <target state="translated">機能をご紹介します。システム情報</target>
        </trans-unit>
        <trans-unit id="6774bc067b00b4a898fa2d81854d9f8ccd1bb6e9" translate="yes" xml:space="preserve">
          <source>Functions: Text Search</source>
          <target state="translated">機能を紹介しています。テキスト検索</target>
        </trans-unit>
        <trans-unit id="ce981f4dc8ac16f802c8f14bef565b7c26ef8014" translate="yes" xml:space="preserve">
          <source>Functions: UUID</source>
          <target state="translated">関数を使用しています。UUID</target>
        </trans-unit>
        <trans-unit id="1acb35ad39f3bcd2faf73955c2408efc740b8965" translate="yes" xml:space="preserve">
          <source>Functions: Window</source>
          <target state="translated">機能を提供しています。ウィンドウ</target>
        </trans-unit>
        <trans-unit id="4ea9b0534343b6662064e8e66df29f936486dcbe" translate="yes" xml:space="preserve">
          <source>Functions: XML</source>
          <target state="translated">関数を使用しています。XML</target>
        </trans-unit>
        <trans-unit id="be1881053687afed29c0ae862b5bb84c66f949f7" translate="yes" xml:space="preserve">
          <source>Further along the line of common sense, the fuzziness of the limits suggests that the use of traditional numeric data types leads to a certain loss of information. Consider this: your instrument reads 6.50, and you input this reading into the database. What do you get when you fetch it? Watch:</source>
          <target state="translated">さらに常識的に考えれば、限界値の曖昧さは、従来の数値データ型を使用することで情報の損失につながることを示唆しています。このことを考えてみましょう。あなたの計器が6.50を読み取り、この読み取り値をデータベースに入力しました。それを取得すると何が得られますか?見てください。</target>
        </trans-unit>
        <trans-unit id="e2310579f06e5c7b30a8aa96bc1d602f5e9203e6" translate="yes" xml:space="preserve">
          <source>Further assumptions are that the aggregate ignores null inputs, and that it delivers a null result if and only if there were no non-null inputs. Ordinarily, a data type's &lt;code&gt;&amp;lt;&lt;/code&gt; operator is the proper sort operator for &lt;code&gt;MIN&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; is the proper sort operator for &lt;code&gt;MAX&lt;/code&gt;. Note that the optimization will never actually take effect unless the specified operator is the &amp;ldquo;less than&amp;rdquo; or &amp;ldquo;greater than&amp;rdquo; strategy member of a B-tree index operator class.</source>
          <target state="translated">さらに、アグリゲートはnull入力を無視し、null以外の入力がなかった場合にのみnullの結果を提供すると想定しています。通常、データ型の &lt;code&gt;&amp;lt;&lt;/code&gt; 演算子は &lt;code&gt;MIN&lt;/code&gt; の適切なソート演算子であり、 &lt;code&gt;&amp;gt;&lt;/code&gt; は &lt;code&gt;MAX&lt;/code&gt; の適切なソート演算子です。指定された演算子がBツリーインデックス演算子クラスの「より小」または「より大」の戦略メンバーでない限り、最適化が実際に有効になることはありません。</target>
        </trans-unit>
        <trans-unit id="8e3fde8eb12ee9830b9efa317f6db1a2760019c3" translate="yes" xml:space="preserve">
          <source>Further details about the planner's use of statistics can be found in &lt;a href=&quot;https://www.postgresql.org/docs/12/planner-stats-details.html&quot;&gt;Chapter 70&lt;/a&gt;.</source>
          <target state="translated">プランナーによる統計の使用に関する詳細は、&lt;a href=&quot;https://www.postgresql.org/docs/12/planner-stats-details.html&quot;&gt;第70章に&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="65f251a5bf245d188901a7cc3757ef7e35aa3e2d" translate="yes" xml:space="preserve">
          <source>Further details about the planner's use of statistics can be found in &lt;a href=&quot;https://www.postgresql.org/docs/13/planner-stats-details.html&quot;&gt;Chapter 70&lt;/a&gt;.</source>
          <target state="translated">プランナーによる統計の使用の詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/planner-stats-details.html&quot;&gt;第70章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="80923ff08a3698b44c0358905326ad4315d1f3f8" translate="yes" xml:space="preserve">
          <source>Furthermore, although multiple sessions are guaranteed to allocate distinct sequence values, the values might be generated out of sequence when all the sessions are considered. For example, with a &lt;code&gt;cache&lt;/code&gt; setting of 10, session A might reserve values 1..10 and return &lt;code&gt;nextval&lt;/code&gt;=1, then session B might reserve values 11..20 and return &lt;code&gt;nextval&lt;/code&gt;=11 before session A has generated &lt;code&gt;nextval&lt;/code&gt;=2. Thus, with a &lt;code&gt;cache&lt;/code&gt; setting of one it is safe to assume that &lt;code&gt;nextval&lt;/code&gt; values are generated sequentially; with a &lt;code&gt;cache&lt;/code&gt; setting greater than one you should only assume that the &lt;code&gt;nextval&lt;/code&gt; values are all distinct, not that they are generated purely sequentially. Also, &lt;code&gt;last_value&lt;/code&gt; will reflect the latest value reserved by any session, whether or not it has yet been returned by &lt;code&gt;nextval&lt;/code&gt;.</source>
          <target state="translated">さらに、複数のセッションが異なるシーケンス値を割り当てることが保証されていますが、すべてのセッションが考慮されると、値がシーケンスから生成される場合があります。たとえば、 &lt;code&gt;cache&lt;/code&gt; 設定が10の場合、セッションAは値1..10を予約して &lt;code&gt;nextval&lt;/code&gt; = 1 を返し、セッションBは値11..20を予約して、セッションAが &lt;code&gt;nextval&lt;/code&gt; = 2 を生成する前に &lt;code&gt;nextval&lt;/code&gt; = 11 を返す場合があります。したがって、 &lt;code&gt;cache&lt;/code&gt; 設定が1の場合、 &lt;code&gt;nextval&lt;/code&gt; 値が順次生成されると想定しても安全です。 &lt;code&gt;cache&lt;/code&gt; 1より大きいを設定あなただけのことを想定する必要があり &lt;code&gt;nextval&lt;/code&gt; 値はすべて個別であり、純粋に連続して生成されるわけではありません。また、 &lt;code&gt;last_value&lt;/code&gt; それはまだで返されたかどうかを、任意のセッションによって予約最新の値を反映します &lt;code&gt;nextval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="224c260c1b97921918028686f800ec2a753d6d99" translate="yes" xml:space="preserve">
          <source>Furthermore, if the result of an expression can be determined by evaluating only some parts of it, then other subexpressions might not be evaluated at all. For instance, if one wrote:</source>
          <target state="translated">さらに、ある式の一部だけを評価することで結果が決まる場合、他の副式は全く評価されないかもしれません。例えば、ある人が書いたとします。</target>
        </trans-unit>
        <trans-unit id="c76baa18e3a105ad25a2e47745a365c732d219e6" translate="yes" xml:space="preserve">
          <source>Furthermore, immediately before reporting a uniqueness violation according to the above rules, the access method must recheck the liveness of the row being inserted. If it is committed dead then no violation should be reported. (This case cannot occur during the ordinary scenario of inserting a row that's just been created by the current transaction. It can happen during &lt;code&gt;CREATE UNIQUE INDEX CONCURRENTLY&lt;/code&gt;, however.)</source>
          <target state="translated">さらに、上記のルールに従って一意性違反を報告する直前に、アクセス方法は挿入される行の活性を再確認する必要があります。死んでコミットされた場合、違反は報告されません。（このケースは、現在のトランザクションによって作成されたばかりの行を挿入する通常のシナリオでは発生しません。ただし、 &lt;code&gt;CREATE UNIQUE INDEX CONCURRENTLY&lt;/code&gt; で発生する可能性があります。）</target>
        </trans-unit>
        <trans-unit id="b247028066a34eb255cbd5a7c12a62f7ec515ba5" translate="yes" xml:space="preserve">
          <source>Furthermore, indexes for exclusion constraints cannot be reindexed concurrently. If such an index is named directly in this command, an error is raised. If a table or database with exclusion constraint indexes is reindexed concurrently, those indexes will be skipped. (It is possible to reindex such indexes without the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option.)</source>
          <target state="translated">さらに、除外制約のインデックスを同時に再インデックスすることはできません。このようなインデックスがこのコマンドで直接指定されている場合、エラーが発生します。除外制約インデックスを持つテーブルまたはデータベースが同時に再インデックス付けされる場合、それらのインデックスはスキップされます。（このようなインデックスは、 &lt;code&gt;CONCURRENTLY&lt;/code&gt; オプションなしで再インデックスすることができます。）</target>
        </trans-unit>
        <trans-unit id="ca37f367ca14421a51e0f4caacbc290fabee5387" translate="yes" xml:space="preserve">
          <source>Furthermore, the ordering is total; that is, for all non-null values &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">さらに、順序は合計です。つまり、すべての非null値 &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="403e23f7e975f56f502368918f62f79a68fb24a2" translate="yes" xml:space="preserve">
          <source>Furthermore, the output of &lt;code&gt;JOIN USING&lt;/code&gt; suppresses redundant columns: there is no need to print both of the matched columns, since they must have equal values. While &lt;code&gt;JOIN ON&lt;/code&gt; produces all columns from &lt;code&gt;T1&lt;/code&gt; followed by all columns from &lt;code&gt;T2&lt;/code&gt;, &lt;code&gt;JOIN USING&lt;/code&gt; produces one output column for each of the listed column pairs (in the listed order), followed by any remaining columns from &lt;code&gt;T1&lt;/code&gt;, followed by any remaining columns from &lt;code&gt;T2&lt;/code&gt;.</source>
          <target state="translated">さらに、 &lt;code&gt;JOIN USING&lt;/code&gt; の出力は冗長な列を抑制します。一致する列は同じ値でなければならないため、一致する列を両方とも出力する必要はありません。ながら &lt;code&gt;JOIN ON&lt;/code&gt; 生成からすべての列 &lt;code&gt;T1&lt;/code&gt; はからすべての列が続く &lt;code&gt;T2&lt;/code&gt; 、 &lt;code&gt;JOIN USING&lt;/code&gt; から任意の残りの列が続く、（列挙された順序で）記載されている列の対ごとに1つの出力列を生成 &lt;code&gt;T1&lt;/code&gt; から任意の残りの列が続く、 &lt;code&gt;T2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e40a8533f467834ab1d55c9055f3d84061da31d" translate="yes" xml:space="preserve">
          <source>GEQO</source>
          <target state="translated">GEQO</target>
        </trans-unit>
        <trans-unit id="7c02cecaa08dd20b2878a0e9246d9afddbd1bfa9" translate="yes" xml:space="preserve">
          <source>GIN</source>
          <target state="translated">GIN</target>
        </trans-unit>
        <trans-unit id="ecc6a1db2685ccbd525e456602d8a531d64c012d" translate="yes" xml:space="preserve">
          <source>GIN Indexes: Built-in Operator Classes</source>
          <target state="translated">GINインデックス。組込み演算子クラス</target>
        </trans-unit>
        <trans-unit id="df2283621762cf6fbe34492dd970bdc1a2fb8f2e" translate="yes" xml:space="preserve">
          <source>GIN Indexes: Examples</source>
          <target state="translated">GINインデックス。例</target>
        </trans-unit>
        <trans-unit id="bcdb1f5984e5f5fc37ee2625a5e106b5ace38b47" translate="yes" xml:space="preserve">
          <source>GIN Indexes: Extensibility</source>
          <target state="translated">GIN インデックス。拡張性</target>
        </trans-unit>
        <trans-unit id="1f6ebc2a0d191b466ed9b8d366b380c7d0d18de4" translate="yes" xml:space="preserve">
          <source>GIN Indexes: GIN Tips and Tricks</source>
          <target state="translated">GINのインデックス。GINのヒントとコツ</target>
        </trans-unit>
        <trans-unit id="79cd3f5e4f5e10454468404b67550cb2d0ff11bb" translate="yes" xml:space="preserve">
          <source>GIN Indexes: Implementation</source>
          <target state="translated">GINインデックス。実装</target>
        </trans-unit>
        <trans-unit id="bac90b5d133adfb4770f3d94ae6faf770a933f01" translate="yes" xml:space="preserve">
          <source>GIN Indexes: Limitations</source>
          <target state="translated">GINインデックス。制限事項</target>
        </trans-unit>
        <trans-unit id="ece4291bbc12d9bc7ed3dfad4dd491c4406b75fd" translate="yes" xml:space="preserve">
          <source>GIN and GiST Index Types</source>
          <target state="translated">GINとGiSTインデックスの種類</target>
        </trans-unit>
        <trans-unit id="838975c5a4d167bd2f6ce5e8ea900f60f03b2972" translate="yes" xml:space="preserve">
          <source>GIN assumes that indexable operators are strict. This means that &lt;code&gt;extractValue&lt;/code&gt; will not be called at all on a null item value (instead, a placeholder index entry is created automatically), and &lt;code&gt;extractQuery&lt;/code&gt; will not be called on a null query value either (instead, the query is presumed to be unsatisfiable). Note however that null key values contained within a non-null composite item or query value are supported.</source>
          <target state="translated">GINは、インデックス付け可能な演算子が厳密であることを前提としています。これは、nullアイテム値に対して &lt;code&gt;extractValue&lt;/code&gt; がまったく呼び出されず（代わりにプレースホルダーインデックスエントリが自動的に作成される）、nullクエリ値に対しても &lt;code&gt;extractQuery&lt;/code&gt; が呼び出されないことを意味します（代わりに、クエリが満たされていないと推定されます） 。ただし、null以外の複合アイテムまたはクエリ値に含まれるnullキー値はサポートされています。</target>
        </trans-unit>
        <trans-unit id="fe2b1de04947c2b348e8de70b6c2f63da721161b" translate="yes" xml:space="preserve">
          <source>GIN can support &amp;ldquo;partial match&amp;rdquo; queries, in which the query does not determine an exact match for one or more keys, but the possible matches fall within a reasonably narrow range of key values (within the key sorting order determined by the &lt;code&gt;compare&lt;/code&gt; support method). The &lt;code&gt;extractQuery&lt;/code&gt; method, instead of returning a key value to be matched exactly, returns a key value that is the lower bound of the range to be searched, and sets the &lt;code&gt;pmatch&lt;/code&gt; flag true. The key range is then scanned using the &lt;code&gt;comparePartial&lt;/code&gt; method. &lt;code&gt;comparePartial&lt;/code&gt; must return zero for a matching index key, less than zero for a non-match that is still within the range to be searched, or greater than zero if the index key is past the range that could match.</source>
          <target state="translated">GINは「部分一致」クエリをサポートできます。このクエリでは、1つまたは複数のキーの完全一致は決定されませんが、可能な一致はかなり狭い範囲のキー値に含まれます（ &lt;code&gt;compare&lt;/code&gt; サポートメソッドによって決定されるキーの並べ替え順序内））。 &lt;code&gt;extractQuery&lt;/code&gt; のは、代わりにキー値を戻す方法が正確に一致するように、下側検索する範囲の下限であるキー値を戻し、設定 &lt;code&gt;pmatch&lt;/code&gt; の真フラグ。次に、キー範囲は、 &lt;code&gt;comparePartial&lt;/code&gt; メソッドを使用してスキャンされます。 &lt;code&gt;comparePartial&lt;/code&gt; 一致するインデックスキーの場合はゼロ、検索対象の範囲内にある非一致の場合はゼロ未満、インデックスキーが一致する可能性のある範囲を超えている場合はゼロより大きい値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="614db4420feca405f38d8b066253c12c8348900b" translate="yes" xml:space="preserve">
          <source>GIN index extracts statements of following form out of &lt;code&gt;jsonpath&lt;/code&gt;: &lt;code&gt;accessors_chain&lt;/code&gt; = &lt;code&gt;const&lt;/code&gt;. Accessors chain may consist of &lt;code&gt;.key&lt;/code&gt;, &lt;code&gt;[*]&lt;/code&gt;, and &lt;code&gt;[index]&lt;/code&gt; accessors. &lt;code&gt;jsonb_ops&lt;/code&gt; additionally supports &lt;code&gt;.*&lt;/code&gt; and &lt;code&gt;.**&lt;/code&gt; accessors.</source>
          <target state="translated">GINインデックスは、 &lt;code&gt;jsonpath&lt;/code&gt; から次の形式のステートメントを抽出します： &lt;code&gt;accessors_chain&lt;/code&gt; = &lt;code&gt;const&lt;/code&gt; 。アクセサチェーンは、 &lt;code&gt;.key&lt;/code&gt; 、 &lt;code&gt;[*]&lt;/code&gt; 、および &lt;code&gt;[index]&lt;/code&gt; アクセサで構成されます。 &lt;code&gt;jsonb_ops&lt;/code&gt; はさらに &lt;code&gt;.*&lt;/code&gt; および &lt;code&gt;.**&lt;/code&gt; アクセサーをサポートします。</target>
        </trans-unit>
        <trans-unit id="45189d146afca1631f2530069592ce2a3f6f8758" translate="yes" xml:space="preserve">
          <source>GIN indexes</source>
          <target state="translated">GINインデックス</target>
        </trans-unit>
        <trans-unit id="b1817ec41a2b97676aa792c5a571f79e3047197e" translate="yes" xml:space="preserve">
          <source>GIN indexes accept different parameters:</source>
          <target state="translated">GIN インデックスは異なるパラメータを受け入れます。</target>
        </trans-unit>
        <trans-unit id="9ae2afa12a8014fb0afa678aad4a0a6fdff0194f" translate="yes" xml:space="preserve">
          <source>GIN indexes are &amp;ldquo;inverted indexes&amp;rdquo; which are appropriate for data values that contain multiple component values, such as arrays. An inverted index contains a separate entry for each component value, and can efficiently handle queries that test for the presence of specific component values.</source>
          <target state="translated">GINインデックスは「逆インデックス」であり、配列などの複数のコンポーネント値を含むデータ値に適しています。転置インデックスには、各コンポーネント値の個別のエントリが含まれており、特定のコンポーネント値の存在をテストするクエリを効率的に処理できます。</target>
        </trans-unit>
        <trans-unit id="6e3602f0fe2770a2e803379f390135df1f58a159" translate="yes" xml:space="preserve">
          <source>GIN indexes are the preferred text search index type. As inverted indexes, they contain an index entry for each word (lexeme), with a compressed list of matching locations. Multi-word searches can find the first match, then use the index to remove rows that are lacking additional words. GIN indexes store only the words (lexemes) of &lt;code&gt;tsvector&lt;/code&gt; values, and not their weight labels. Thus a table row recheck is needed when using a query that involves weights.</source>
          <target state="translated">GINインデックスは、推奨されるテキスト検索インデックスタイプです。逆索引として、各単語（語彙素）の索引エントリと、一致する場所の圧縮リストが含まれます。複数単語の検索では、最初に一致するものを見つけ、次にインデックスを使用して、追加の単語がない行を削除できます。GINインデックスには、 &lt;code&gt;tsvector&lt;/code&gt; 値の単語（語彙素）のみが格納され、重みラベルは格納されません。したがって、重みを含むクエリを使用する場合は、テーブル行の再チェックが必要です。</target>
        </trans-unit>
        <trans-unit id="662e0bcd43903a7d3e17f00c272dcd79f02aa415" translate="yes" xml:space="preserve">
          <source>GIN indexes can be used to efficiently search for keys or key/value pairs occurring within a large number of &lt;code&gt;jsonb&lt;/code&gt; documents (datums). Two GIN &amp;ldquo;operator classes&amp;rdquo; are provided, offering different performance and flexibility trade-offs.</source>
          <target state="translated">GINインデックスを使用すると、多数の &lt;code&gt;jsonb&lt;/code&gt; ドキュメント（データ）内で発生するキーまたはキーと値のペアを効率的に検索できます。2つのGIN「演算子クラス」が提供され、さまざまなパフォーマンスと柔軟性のトレードオフが提供されます。</target>
        </trans-unit>
        <trans-unit id="680a142f22f16149f0a10d5733b44a15bfc9f906" translate="yes" xml:space="preserve">
          <source>GIN is generalized in the sense that the GIN access method code does not need to know the specific operations that it accelerates. Instead, it uses custom strategies defined for particular data types. The strategy defines how keys are extracted from indexed items and query conditions, and how to determine whether a row that contains some of the key values in a query actually satisfies the query.</source>
          <target state="translated">GINは一般化されており、GINアクセスメソッドのコードがアクセラレーションする特定の操作を知る必要がありません。その代わりに、特定のデータ型に対して定義されたカスタムストラテジーを使用します。ストラテジーは、インデックス化された項目とクエリ条件からキーがどのように抽出されるかを定義し、クエリ内のキー値の一部を含む行が実際にクエリを満たすかどうかを判断する方法を定義します。</target>
        </trans-unit>
        <trans-unit id="2d1d5b806ff667bfec2719e4c38322233f7a1f8b" translate="yes" xml:space="preserve">
          <source>GIN stands for Generalized Inverted Index. GIN is designed for handling cases where the items to be indexed are composite values, and the queries to be handled by the index need to search for element values that appear within the composite items. For example, the items could be documents, and the queries could be searches for documents containing specific words.</source>
          <target state="translated">GINはGeneralized Inverted Indexの略である。GINは、インデックス化する項目が複合値であり、インデックスが扱うクエリは、複合項目内に現れる要素値を検索する必要がある場合に対応するように設計されている。例えば、項目は文書であり、クエリは特定の単語を含む文書を検索することができる。</target>
        </trans-unit>
        <trans-unit id="823f6d975b918a4f4904609a69bccd4f6db0e016" translate="yes" xml:space="preserve">
          <source>GIN version number</source>
          <target state="translated">GINバージョン番号</target>
        </trans-unit>
        <trans-unit id="d84234ce9f95c2df9a9cb91648dc0629d7b55a78" translate="yes" xml:space="preserve">
          <source>GMT</source>
          <target state="translated">GMT</target>
        </trans-unit>
        <trans-unit id="46e5d5c005d767dc686d5fdb5278440482f67660" translate="yes" xml:space="preserve">
          <source>GRANT</source>
          <target state="translated">GRANT</target>
        </trans-unit>
        <trans-unit id="f96c309d7771b4500d22efff00cb264218c6cf3a" translate="yes" xml:space="preserve">
          <source>GRANT &amp;mdash; define access privileges</source>
          <target state="translated">GRANT &amp;mdash;アクセス特権を定義する</target>
        </trans-unit>
        <trans-unit id="50381ef340ee08d7a029c8e513ea2dc8126c9d21" translate="yes" xml:space="preserve">
          <source>GRANT on Database Objects</source>
          <target state="translated">データベースオブジェクトのGRANT</target>
        </trans-unit>
        <trans-unit id="040876dd6cec9809d1a84a48115c6451d11d511c" translate="yes" xml:space="preserve">
          <source>GRANT on Roles</source>
          <target state="translated">役割についてのGRANT</target>
        </trans-unit>
        <trans-unit id="18b63165da1ffe19e191b11267fd831d16b20629" translate="yes" xml:space="preserve">
          <source>GSSAPI</source>
          <target state="translated">GSSAPI</target>
        </trans-unit>
        <trans-unit id="6b3f2424f13149fada5347cf28d874ce4ce85971" translate="yes" xml:space="preserve">
          <source>GSSAPI Authentication</source>
          <target state="translated">GSSAPI認証</target>
        </trans-unit>
        <trans-unit id="3d0265dcf1697d6c2f5c259d07fa634b6fbdea24" translate="yes" xml:space="preserve">
          <source>GSSAPI is an industry-standard protocol for secure authentication defined in RFC 2743. PostgreSQL supports GSSAPI for use as either an encrypted, authenticated layer, or for authentication only. GSSAPI provides automatic authentication (single sign-on) for systems that support it. The authentication itself is secure. If GSSAPI encryption (see &lt;code&gt;hostgssenc&lt;/code&gt;) or SSL encryption are used, the data sent along the database connection will be encrypted; otherwise, it will not.</source>
          <target state="translated">GSSAPIは、RFC 2743で定義された安全な認証のための業界標準プロトコルです。PostgreSQLは、GSSAPIを暗号化された認証済みレイヤーとして、または認証専用として使用することをサポートしています。GSSAPIは、それをサポートするシステムに自動認証（シングルサインオン）を提供します。認証自体は安全です。GSSAPI暗号化（ &lt;code&gt;hostgssenc&lt;/code&gt; を参照）またはSSL暗号化が使用されている場合、データベース接続を介して送信されるデータは暗号化されます。そうでなければ、それはしません。</target>
        </trans-unit>
        <trans-unit id="9c340397893e38112dd6e1110b015089ffe980f8" translate="yes" xml:space="preserve">
          <source>GSSAPI support has to be enabled when PostgreSQL is built; see &lt;a href=&quot;https://www.postgresql.org/docs/12/installation.html&quot;&gt;Chapter 16&lt;/a&gt; for more information.</source>
          <target state="translated">PostgreSQLのビルド時にGSSAPIサポートを有効にする必要があります。詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/12/installation.html&quot;&gt;第16章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="071a79ebe1f1c0887de7c400f4061aba943bc234" translate="yes" xml:space="preserve">
          <source>GSSAPI support has to be enabled when PostgreSQL is built; see &lt;a href=&quot;https://www.postgresql.org/docs/13/installation.html&quot;&gt;Chapter 16&lt;/a&gt; for more information.</source>
          <target state="translated">PostgreSQLのビルド時にGSSAPIサポートを有効にする必要があります。詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/installation.html&quot;&gt;第16章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a65194631e53d423c8f7dc36b0337ca4d0af275f" translate="yes" xml:space="preserve">
          <source>GSSAPI-encrypted connections encrypt all data sent across the network, including queries and data returned. (No password is sent across the network.) The &lt;code&gt;pg_hba.conf&lt;/code&gt; file allows administrators to specify which hosts can use non-encrypted connections (&lt;code&gt;host&lt;/code&gt;) and which require GSSAPI-encrypted connections (&lt;code&gt;hostgssenc&lt;/code&gt;). Also, clients can specify that they connect to servers only on GSSAPI-encrypted connections (&lt;code&gt;gssencmode=require&lt;/code&gt;).</source>
          <target state="translated">GSSAPIで暗号化された接続は、クエリや返されたデータを含む、ネットワーク経由で送信されるすべてのデータを暗号化します。（ネットワークを介してパスワードは送信されません。） &lt;code&gt;pg_hba.conf&lt;/code&gt; ファイルを使用すると、管理者は非暗号化接続を使用できる &lt;code&gt;host&lt;/code&gt; （host）とGSSAPI暗号化接続を必要とするホスト（ &lt;code&gt;hostgssenc&lt;/code&gt; ）を指定できます。また、クライアントは、GSSAPIで暗号化された接続（ &lt;code&gt;gssencmode=require&lt;/code&gt; ）でのみサーバーに接続するように指定できます。</target>
        </trans-unit>
        <trans-unit id="5f4a781a866c82c10ec06cfdb99d578fac96f0a9" translate="yes" xml:space="preserve">
          <source>GUC</source>
          <target state="translated">GUC</target>
        </trans-unit>
        <trans-unit id="55d3b12a3edecf2084b5b37090f9f7a53387e200" translate="yes" xml:space="preserve">
          <source>Gaussian-distributed random integer in &lt;code&gt;[lb, ub]&lt;/code&gt;, see below</source>
          <target state="translated">&lt;code&gt;[lb, ub]&lt;/code&gt; ガウス分布ランダム整数、以下を参照</target>
        </trans-unit>
        <trans-unit id="ae313cc97f019cc02b5747068e2416db0beed99a" translate="yes" xml:space="preserve">
          <source>General Purpose</source>
          <target state="translated">一般目的</target>
        </trans-unit>
        <trans-unit id="3160665d714fc6d7b194361c56057ae8d2d10ef8" translate="yes" xml:space="preserve">
          <source>Generalized Inverted Index</source>
          <target state="translated">一般化反転指数</target>
        </trans-unit>
        <trans-unit id="aa5854e74a08fd00bcac0cc44c6f66a2c57b9442" translate="yes" xml:space="preserve">
          <source>Generalized Search Tree</source>
          <target state="translated">一般化された検索ツリー</target>
        </trans-unit>
        <trans-unit id="3e7c9f89ced37df1cb7e21ed93f1ae9c43e37c8c" translate="yes" xml:space="preserve">
          <source>Generally, any file system with POSIX semantics can be used for PostgreSQL. Users prefer different file systems for a variety of reasons, including vendor support, performance, and familiarity. Experience suggests that, all other things being equal, one should not expect major performance or behavior changes merely from switching file systems or making minor file system configuration changes.</source>
          <target state="translated">一般的に、POSIXセマンティクスを持つ任意のファイルシステムをPostgreSQLに使用することができます。ユーザが異なるファイルシステムを好む理由は、ベンダーのサポート、性能、親しみやすさなど様々な理由があります。経験上、他のすべてのことが同じであるにもかかわらず、ファイルシステムを切り替えたり、ファイルシステムの設定を少し変更したりしただけでは、大きな性能や動作の変化を期待すべきではないことが示唆されています。</target>
        </trans-unit>
        <trans-unit id="e4dfa0a05721faeacd6c28188e09916650d7ec35" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;EXPLAIN&lt;/code&gt; output will display details for every plan node which was generated by the query planner. However, there are cases where the executor is able to determine that certain nodes are not required; currently, the only node types to support this are the &lt;code&gt;Append&lt;/code&gt; and &lt;code&gt;MergeAppend&lt;/code&gt; nodes. These node types have the ability to discard subnodes which they are able to determine won't contain any records required by the query. It is possible to determine that nodes have been removed in this way by the presence of a &quot;Subplans Removed&quot; property in the &lt;code&gt;EXPLAIN&lt;/code&gt; output.</source>
          <target state="translated">通常、 &lt;code&gt;EXPLAIN&lt;/code&gt; 出力には、クエリプランナーによって生成されたすべてのプランノードの詳細が表示されます。ただし、特定のノードが不要であるとエグゼキューターが判断できる場合があります。現在、これをサポートするノードタイプは &lt;code&gt;Append&lt;/code&gt; ノードと &lt;code&gt;MergeAppend&lt;/code&gt; ノードのみです。これらのノードタイプには、クエリで必要なレコードが含まれていないと判断できるサブノードを破棄する機能があります。 &lt;code&gt;EXPLAIN&lt;/code&gt; 出力に「削除されたサブプラン」プロパティが存在することにより、ノードがこのように削除されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="affe2a15ea854fded86126b770c099c64d24c777" translate="yes" xml:space="preserve">
          <source>Generally, the system will enforce filter conditions imposed using security policies prior to qualifications that appear in user queries, in order to prevent inadvertent exposure of the protected data to user-defined functions which might not be trustworthy. However, functions and operators marked by the system (or the system administrator) as &lt;code&gt;LEAKPROOF&lt;/code&gt; may be evaluated before policy expressions, as they are assumed to be trustworthy.</source>
          <target state="translated">一般に、システムは、ユーザークエリに表示される資格の前にセキュリティポリシーを使用して課されるフィルター条件を適用し、信頼できない可能性のあるユーザー定義関数に保護されたデータが誤って公開されるのを防ぎます。ただし、システム（またはシステム管理者）によって &lt;code&gt;LEAKPROOF&lt;/code&gt; としてマークされた関数と演算子は、信頼できると見なされるため、ポリシー式の前に評価される場合があります。</target>
        </trans-unit>
        <trans-unit id="f3eac14aa88e73035cec53cd24d7892747e63a31" translate="yes" xml:space="preserve">
          <source>Generate a series comprising the given array's subscripts.</source>
          <target state="translated">指定された配列の添え字からなる系列を生成します。</target>
        </trans-unit>
        <trans-unit id="4a5175300e4854a10a7b94e474436e6a6e890471" translate="yes" xml:space="preserve">
          <source>Generate a series comprising the given array's subscripts. When &lt;em&gt;&lt;code&gt;reverse&lt;/code&gt;&lt;/em&gt; is true, the series is returned in reverse order.</source>
          <target state="translated">指定された配列の添え字で構成されるシリーズを生成します。とき&lt;em&gt; &lt;code&gt;reverse&lt;/code&gt; &lt;/em&gt;真である、シリーズは逆の順序で返されます。</target>
        </trans-unit>
        <trans-unit id="ad5fcb5a5c8eeebb88c26d2bf0bde7f9fa38281f" translate="yes" xml:space="preserve">
          <source>Generate a series of values, from &lt;em&gt;&lt;code&gt;start&lt;/code&gt;&lt;/em&gt; to &lt;em&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/em&gt; with a step size of &lt;em&gt;&lt;code&gt;step&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">ステップサイズが&lt;em&gt; &lt;code&gt;step&lt;/code&gt; の&lt;/em&gt;&lt;em&gt; &lt;code&gt;start&lt;/code&gt; &lt;/em&gt;から&lt;em&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/em&gt;までの一連の値を生成します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5fb2cfb648fe3292c4f21944415cd71835246e3" translate="yes" xml:space="preserve">
          <source>Generate a series of values, from &lt;em&gt;&lt;code&gt;start&lt;/code&gt;&lt;/em&gt; to &lt;em&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/em&gt; with a step size of one</source>
          <target state="translated">ステップサイズが1の&lt;em&gt; &lt;code&gt;start&lt;/code&gt; &lt;/em&gt;から&lt;em&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/em&gt;までの一連の値を生成します</target>
        </trans-unit>
        <trans-unit id="37f727cfa62167384e5f8947ef57078f0d482808" translate="yes" xml:space="preserve">
          <source>Generate data and load it into the standard tables, replacing any data already present.</source>
          <target state="translated">データを生成し、既に存在するデータを置き換えて標準テーブルにロードします。</target>
        </trans-unit>
        <trans-unit id="9dcf1fb2a5619d507a1603ea13343b634907fbb2" translate="yes" xml:space="preserve">
          <source>Generated Columns</source>
          <target state="translated">生成されたカラム</target>
        </trans-unit>
        <trans-unit id="75d723afc8209b9ad813733ed0d276b98f57a469" translate="yes" xml:space="preserve">
          <source>Generated columns are, conceptually, updated after &lt;code&gt;BEFORE&lt;/code&gt; triggers have run. Therefore, changes made to base columns in a &lt;code&gt;BEFORE&lt;/code&gt; trigger will be reflected in generated columns. But conversely, it is not allowed to access generated columns in &lt;code&gt;BEFORE&lt;/code&gt; triggers.</source>
          <target state="translated">生成された列は、概念的には、 &lt;code&gt;BEFORE&lt;/code&gt; トリガーの実行後に更新されます。したがって、 &lt;code&gt;BEFORE&lt;/code&gt; トリガーで基本列に加えられた変更は、生成された列に反映されます。ただし、逆に、 &lt;code&gt;BEFORE&lt;/code&gt; トリガーで生成された列にアクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="942c0fc170e0c5a1f9b1ae453e356f340b1b4ebb" translate="yes" xml:space="preserve">
          <source>Generated columns maintain access privileges separately from their underlying base columns. So, it is possible to arrange it so that a particular role can read from a generated column but not from the underlying base columns.</source>
          <target state="translated">生成されたカラムは、ベースとなるカラムとは別にアクセス権限を保持します。そのため、特定のロールが生成されたカラムからは読めるが、ベースとなるカラムからは読めないようにアレンジすることができます。</target>
        </trans-unit>
        <trans-unit id="7f0ef22f71ecfc740ab931db74f147c122ec3d69" translate="yes" xml:space="preserve">
          <source>Generates a great amount of debugging output for the &lt;code&gt;LISTEN&lt;/code&gt; and &lt;code&gt;NOTIFY&lt;/code&gt; commands. &lt;a href=&quot;runtime-config-client#GUC-CLIENT-MIN-MESSAGES&quot;&gt;client_min_messages&lt;/a&gt; or &lt;a href=&quot;runtime-config-logging#GUC-LOG-MIN-MESSAGES&quot;&gt;log_min_messages&lt;/a&gt; must be &lt;code&gt;DEBUG1&lt;/code&gt; or lower to send this output to the client or server logs, respectively.</source>
          <target state="translated">&lt;code&gt;LISTEN&lt;/code&gt; および &lt;code&gt;NOTIFY&lt;/code&gt; コマンドの大量のデバッグ出力を生成します。この出力をクライアントまたはサーバーのログに送信するには、&lt;a href=&quot;runtime-config-client#GUC-CLIENT-MIN-MESSAGES&quot;&gt;client_min_messages&lt;/a&gt;または&lt;a href=&quot;runtime-config-logging#GUC-LOG-MIN-MESSAGES&quot;&gt;log_min_messages&lt;/a&gt;をそれぞれ &lt;code&gt;DEBUG1&lt;/code&gt; 以下にする必要があります。</target>
        </trans-unit>
        <trans-unit id="0c512aad043f38a5c410a9715731ea7ab925a02c" translate="yes" xml:space="preserve">
          <source>Generates a new random salt string for use in &lt;code&gt;crypt()&lt;/code&gt;. The salt string also tells &lt;code&gt;crypt()&lt;/code&gt; which algorithm to use.</source>
          <target state="translated">&lt;code&gt;crypt()&lt;/code&gt; で使用する新しいランダムソルト文字列を生成します。salt文字列は、使用するアルゴリズムを &lt;code&gt;crypt()&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="cbde187b61954e6ea30cd14491acf93d47d93995" translate="yes" xml:space="preserve">
          <source>Generates a series comprising the valid subscripts of the &lt;em&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/em&gt;'th dimension of the given array.</source>
          <target state="translated">指定された配列の&lt;em&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/em&gt;次元の有効な添え字で構成されるシリーズを生成します。</target>
        </trans-unit>
        <trans-unit id="3315cb9c251ba92b686585eaa006d098cd316db2" translate="yes" xml:space="preserve">
          <source>Generates a series comprising the valid subscripts of the &lt;em&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/em&gt;'th dimension of the given array. When &lt;em&gt;&lt;code&gt;reverse&lt;/code&gt;&lt;/em&gt; is true, returns the series in reverse order.</source>
          <target state="translated">指定された配列の&lt;em&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/em&gt;次元の有効な添え字で構成されるシリーズを生成します。&lt;em&gt; &lt;code&gt;reverse&lt;/code&gt; &lt;/em&gt;がtrueの場合、シリーズを逆の順序で返します。</target>
        </trans-unit>
        <trans-unit id="5b9efd71e8210e50c6cf31398196b39400f42912" translate="yes" xml:space="preserve">
          <source>Generates a series of values from &lt;em&gt;&lt;code&gt;start&lt;/code&gt;&lt;/em&gt; to &lt;em&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/em&gt;, with a step size of &lt;em&gt;&lt;code&gt;step&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">ステップサイズが&lt;em&gt; &lt;code&gt;step&lt;/code&gt; の&lt;/em&gt;、&lt;em&gt; &lt;code&gt;start&lt;/code&gt; &lt;/em&gt;から&lt;em&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/em&gt;までの一連の値を生成します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2fe64f6ae7efb31df1c280c81e9337ab336a691f" translate="yes" xml:space="preserve">
          <source>Generates a series of values from &lt;em&gt;&lt;code&gt;start&lt;/code&gt;&lt;/em&gt; to &lt;em&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/em&gt;, with a step size of &lt;em&gt;&lt;code&gt;step&lt;/code&gt;&lt;/em&gt;. &lt;em&gt;&lt;code&gt;step&lt;/code&gt;&lt;/em&gt; defaults to 1.</source>
          <target state="translated">ステップサイズが&lt;em&gt; &lt;code&gt;step&lt;/code&gt; の&lt;/em&gt;、&lt;em&gt; &lt;code&gt;start&lt;/code&gt; &lt;/em&gt;から&lt;em&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/em&gt;までの一連の値を生成します。&lt;em&gt; &lt;code&gt;step&lt;/code&gt; &lt;/em&gt;デフォルトは1です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="447f18f7fd582d437e245ed58834f9f6f0d3572f" translate="yes" xml:space="preserve">
          <source>Generates a version 1 UUID, but uses a random multicast MAC address instead of the real MAC address of the computer.</source>
          <target state="translated">バージョン 1 UUID を生成しますが、コンピュータの実際の MAC アドレスの代わりにランダムなマルチキャスト MAC アドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="61eee4f4b5d39293f14efcf028cd9d79aa5d58ef" translate="yes" xml:space="preserve">
          <source>Generates a version 1 UUID. This involves the MAC address of the computer and a time stamp. Note that UUIDs of this kind reveal the identity of the computer that created the identifier and the time at which it did so, which might make it unsuitable for certain security-sensitive applications.</source>
          <target state="translated">バージョン 1 の UUID を生成します。これには、コンピュータのMACアドレスとタイムスタンプが含まれます。この種の UUUID は、識別子を作成したコンピュータの身元とそれを作成した時刻を明らかにするので、特定のセキュリティに敏感なアプリケーションには適さないかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="72a73fa7358c1c8df9b5e2fd5fbe3bbadb09cc37" translate="yes" xml:space="preserve">
          <source>Generates a version 3 UUID in the given namespace using the specified input name. The namespace should be one of the special constants produced by the &lt;code&gt;uuid_ns_*()&lt;/code&gt; functions shown in &lt;a href=&quot;uuid-ossp#UUID-OSSP-CONSTANTS&quot;&gt;Table F.33&lt;/a&gt;. (It could be any UUID in theory.) The name is an identifier in the selected namespace.</source>
          <target state="translated">指定された入力名を使用して、指定された名前空間にバージョン3のUUIDを生成します。名前空間は、&lt;a href=&quot;uuid-ossp#UUID-OSSP-CONSTANTS&quot;&gt;表F.33に&lt;/a&gt;示す &lt;code&gt;uuid_ns_*()&lt;/code&gt; 関数によって生成される特別な定数の1つである必要があります。（理論的には任意のUUIDにすることができます。）名前は、選択した名前空間の識別子です。</target>
        </trans-unit>
        <trans-unit id="23cef3016afd0a928c6e33c378fcd6c9a3819d0e" translate="yes" xml:space="preserve">
          <source>Generates a version 4 UUID, which is derived entirely from random numbers.</source>
          <target state="translated">バージョン 4 の UUID を生成します。</target>
        </trans-unit>
        <trans-unit id="abf0eb60bb57f570d739469888a828e2f5865138" translate="yes" xml:space="preserve">
          <source>Generates a version 5 UUID, which works like a version 3 UUID except that SHA-1 is used as a hashing method. Version 5 should be preferred over version 3 because SHA-1 is thought to be more secure than MD5.</source>
          <target state="translated">バージョン 5 の UUID を生成します。これはバージョン 3 の UUID と同様に動作しますが、SHA-1 がハッシュメソッドとして使用されていることを除けば、バージョン 3 の UUID と同じように動作します。SHA-1 は MD5 よりも安全だと考えられているため、バージョン 3 よりもバージョン 5 の方が好ましいです。</target>
        </trans-unit>
        <trans-unit id="2aed1c9095c07cc7e84b3424230f02a2d9b469cc" translate="yes" xml:space="preserve">
          <source>Generic Security Services Application Programming Interface</source>
          <target state="translated">ジェネリックセキュリティサービスアプリケーションプログラミングインタフェース</target>
        </trans-unit>
        <trans-unit id="8bc48767cdd05b47e355717259ca35db85925a08" translate="yes" xml:space="preserve">
          <source>Generic WAL Records</source>
          <target state="translated">ジェネリックWALレコード</target>
        </trans-unit>
        <trans-unit id="205b89cfc2a1a2269f79b2bc4ed00c40f5cec848" translate="yes" xml:space="preserve">
          <source>Generic WAL assumes that the pages to be modified have standard layout, and in particular that there is no useful data between &lt;code&gt;pd_lower&lt;/code&gt; and &lt;code&gt;pd_upper&lt;/code&gt;.</source>
          <target state="translated">ジェネリックWALは、変更されるページが標準のレイアウトであること、特に &lt;code&gt;pd_lower&lt;/code&gt; と &lt;code&gt;pd_upper&lt;/code&gt; の間に有用なデータがないことを前提としています。</target>
        </trans-unit>
        <trans-unit id="651fc79b97c554a5773cb00dd19d49f06b1a6de8" translate="yes" xml:space="preserve">
          <source>Genetic Query Optimizer</source>
          <target state="translated">遺伝的クエリオプティマイザ</target>
        </trans-unit>
        <trans-unit id="285a459d41ebc8b40cc4e21eb5058c5046b9a518" translate="yes" xml:space="preserve">
          <source>Genetic Query Optimizer: Further Reading</source>
          <target state="translated">遺伝的クエリオプティマイザ。さらなる読み物</target>
        </trans-unit>
        <trans-unit id="0fe3a114537a44f8bb8da3ae145d25fd674c9baa" translate="yes" xml:space="preserve">
          <source>Genetic Query Optimizer: Genetic Algorithms</source>
          <target state="translated">遺伝的クエリオプティマイザ。遺伝的アルゴリズム</target>
        </trans-unit>
        <trans-unit id="a4b0f535ba1259d8c2e707ca90836a3a1579135e" translate="yes" xml:space="preserve">
          <source>Genetic Query Optimizer: Genetic Query Optimization (GEQO) in PostgreSQL</source>
          <target state="translated">遺伝的クエリオプティマイザ。PostgreSQLでの遺伝的クエリ最適化 (GEQO)</target>
        </trans-unit>
        <trans-unit id="c07c10eab422b8e5a37b4814c23b452b246b27ed" translate="yes" xml:space="preserve">
          <source>Genetic Query Optimizer: Query Handling as a Complex Optimization Problem</source>
          <target state="translated">遺伝的クエリオプティマイザ 複雑な最適化問題としてのクエリ処理</target>
        </trans-unit>
        <trans-unit id="59a79a1ee234d61d42db147aa7f797d2e6ec2302" translate="yes" xml:space="preserve">
          <source>Geometric Types</source>
          <target state="translated">幾何学的なタイプ</target>
        </trans-unit>
        <trans-unit id="1b872848d87aaa550340d8fe24c7f0a2a9ae8bcb" translate="yes" xml:space="preserve">
          <source>Geometric Types: box</source>
          <target state="translated">幾何学的なタイプ:ボックス</target>
        </trans-unit>
        <trans-unit id="92cdb69f3efb505ed8f65eafd9adff3faa140669" translate="yes" xml:space="preserve">
          <source>Geometric Types: circle</source>
          <target state="translated">幾何学的なタイプ:円</target>
        </trans-unit>
        <trans-unit id="b780ba45a62c07dae122a8391383dec51d0ae3fb" translate="yes" xml:space="preserve">
          <source>Geometric Types: line</source>
          <target state="translated">幾何学的なタイプ:線</target>
        </trans-unit>
        <trans-unit id="93e949ac77b5da81e10c0d00eb14e5b76ecbcd17" translate="yes" xml:space="preserve">
          <source>Geometric Types: lseg</source>
          <target state="translated">幾何学的タイプ:lseg</target>
        </trans-unit>
        <trans-unit id="70c8994901b16ea96046ff8cb3549fb5591cc7c5" translate="yes" xml:space="preserve">
          <source>Geometric Types: path</source>
          <target state="translated">幾何学的なタイプ:パス</target>
        </trans-unit>
        <trans-unit id="5971b419fcb4741dbee95edc6702d224da6e2f8b" translate="yes" xml:space="preserve">
          <source>Geometric Types: point</source>
          <target state="translated">幾何学的なタイプ:点</target>
        </trans-unit>
        <trans-unit id="a42b9eae0d25dcae6593b119b1ff920376ab3fdb" translate="yes" xml:space="preserve">
          <source>Geometric Types: polygon</source>
          <target state="translated">幾何学的なタイプ:ポリゴン</target>
        </trans-unit>
        <trans-unit id="c0f24750d757100bf5b4c2c76561499175630de1" translate="yes" xml:space="preserve">
          <source>Geometric data types represent two-dimensional spatial objects. &lt;a href=&quot;datatype-geometric#DATATYPE-GEO-TABLE&quot;&gt;Table 8.20&lt;/a&gt; shows the geometric types available in PostgreSQL.</source>
          <target state="translated">幾何データ型は、2次元の空間オブジェクトを表します。&lt;a href=&quot;datatype-geometric#DATATYPE-GEO-TABLE&quot;&gt;表8.20&lt;/a&gt;は、PostgreSQLで使用可能なジオメトリタイプを示しています。</target>
        </trans-unit>
        <trans-unit id="7694ba97cb7c18e18a22a41d6adc199509b697ef" translate="yes" xml:space="preserve">
          <source>Geometric types</source>
          <target state="translated">幾何学的なタイプ</target>
        </trans-unit>
        <trans-unit id="9ae1f34e04075cebb1033f14ff7dd7b2bf91177b" translate="yes" xml:space="preserve">
          <source>Geometric: #</source>
          <target state="translated">幾何学的な #</target>
        </trans-unit>
        <trans-unit id="623ca67b93ccce110311b935c4b0ce7ca78865ad" translate="yes" xml:space="preserve">
          <source>Geometric: # path &amp;#x27;,,)&amp;#x27;</source>
          <target state="translated">幾何学的：＃パス ',,）'</target>
        </trans-unit>
        <trans-unit id="541465ff2784b3862252a679a04558fbc655a79e" translate="yes" xml:space="preserve">
          <source>Geometric: ##</source>
          <target state="translated">幾何学的だ ##</target>
        </trans-unit>
        <trans-unit id="72e0052efc06dc944e06a8b63310fcb1f4bce4d7" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;amp;&amp;amp;</source>
          <target state="translated">幾何学的：&amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c6f1767ec1ac7b1e533771c3bc6f2d157e3a0ffa" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;amp;&amp;gt;</source>
          <target state="translated">幾何学的：＆&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0efad1957c6995260f5c39d190b260d9567a113b" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;amp;&amp;lt;</source>
          <target state="translated">幾何学的：＆&amp;lt;</target>
        </trans-unit>
        <trans-unit id="0f689675538b5b4ec110540ff41eb289d6bd6b43" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;amp;&amp;lt;|</source>
          <target state="translated">幾何学的：＆&amp;lt;|</target>
        </trans-unit>
        <trans-unit id="f1e472c7b332a52572d117379abc66949f9e31c1" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;gt;&amp;gt;</source>
          <target state="translated">幾何学的：&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e6fb2a9acb2064c887124b6f5b0e4e754de5f5fc" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;gt;^</source>
          <target state="translated">幾何学的：&amp;gt; ^</target>
        </trans-unit>
        <trans-unit id="d77e84d344e830ae23e28900f46ab81224e68d7d" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;lt;&amp;lt;</source>
          <target state="translated">幾何学的：&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="114e3e68bec04a11161b64f095fcabaa1b93c022" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;lt;&amp;lt;|</source>
          <target state="translated">幾何学的：&amp;lt;&amp;lt; |</target>
        </trans-unit>
        <trans-unit id="3ebddf62e56d977cd85a67e8678d46b2782a23db" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;lt;-&amp;gt;</source>
          <target state="translated">幾何学的：&amp;lt;-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f3447c8a88fb2334b8df577a95ce9dc8220f2dd2" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;lt;@</source>
          <target state="translated">幾何学的：&amp;lt;@</target>
        </trans-unit>
        <trans-unit id="cce9525015da81ce4d350742ece1c53d96c3ca2b" translate="yes" xml:space="preserve">
          <source>Geometric: &amp;lt;^</source>
          <target state="translated">幾何学的：&amp;lt;^</target>
        </trans-unit>
        <trans-unit id="56a2009f06f5c74871588a05282ba0b39fb6ceeb" translate="yes" xml:space="preserve">
          <source>Geometric: *</source>
          <target state="translated">幾何学的な。*</target>
        </trans-unit>
        <trans-unit id="fa3ffad94fe9509b3b02c414cf9edaa0a2aba46e" translate="yes" xml:space="preserve">
          <source>Geometric: +</source>
          <target state="translated">幾何学的だ +</target>
        </trans-unit>
        <trans-unit id="356d9d70234e609b9b853b2369c157f70b7aebbe" translate="yes" xml:space="preserve">
          <source>Geometric: -</source>
          <target state="translated">幾何学的:-。</target>
        </trans-unit>
        <trans-unit id="2ffe2cc10b627cd354dfeb7422da5a985c240d62" translate="yes" xml:space="preserve">
          <source>Geometric: /</source>
          <target state="translated">幾何学的な。/</target>
        </trans-unit>
        <trans-unit id="1c2280f6c1d1edcd9860d33a2a8a075c691adc71" translate="yes" xml:space="preserve">
          <source>Geometric: ?#</source>
          <target state="translated">幾何学的:?</target>
        </trans-unit>
        <trans-unit id="12821b449935c6dc49b03d2b040482308099f146" translate="yes" xml:space="preserve">
          <source>Geometric: ?-</source>
          <target state="translated">幾何学的:?</target>
        </trans-unit>
        <trans-unit id="3cd66d53af1e48242331e1745ba5fc7187566303" translate="yes" xml:space="preserve">
          <source>Geometric: ?- lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：？-lseg ''</target>
        </trans-unit>
        <trans-unit id="41659a241d6173118c63109b8d58f3b040547d38" translate="yes" xml:space="preserve">
          <source>Geometric: ?-|</source>
          <target state="translated">幾何学的:?-|</target>
        </trans-unit>
        <trans-unit id="d6f03fc9c9b0ab0563a28c6910f4a205a373dffb" translate="yes" xml:space="preserve">
          <source>Geometric: ?|</source>
          <target state="translated">幾何学的:?</target>
        </trans-unit>
        <trans-unit id="38b31205d1dae501b1ba03ac0e742900375d3d6b" translate="yes" xml:space="preserve">
          <source>Geometric: ?| lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：？| lseg ''</target>
        </trans-unit>
        <trans-unit id="13e94b0d1073bd3bdfb91bcd5a193786583c973b" translate="yes" xml:space="preserve">
          <source>Geometric: ?||</source>
          <target state="translated">幾何学的:?</target>
        </trans-unit>
        <trans-unit id="9330c7f285f4544ce63cffaf12c739ac5f145ca1" translate="yes" xml:space="preserve">
          <source>Geometric: @&amp;gt;</source>
          <target state="translated">幾何学的：@&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5270f97dad19be61277e040028add99dc4c8a2f8" translate="yes" xml:space="preserve">
          <source>Geometric: @-@</source>
          <target state="translated">幾何学的な @-@</target>
        </trans-unit>
        <trans-unit id="fe111f6519f93956916d5072524a2a1cf0002778" translate="yes" xml:space="preserve">
          <source>Geometric: @-@ path &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：@-@パス ''</target>
        </trans-unit>
        <trans-unit id="28dfb9d3208de0df87974a869f843209287712a0" translate="yes" xml:space="preserve">
          <source>Geometric: @@</source>
          <target state="translated">幾何学的な @@</target>
        </trans-unit>
        <trans-unit id="3c3c043849e3c1e3749e2bdce5b1a842a3084138" translate="yes" xml:space="preserve">
          <source>Geometric: @@ box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：@@ボックス '、'</target>
        </trans-unit>
        <trans-unit id="b52a6568265c2c5d617423e6cf36665bbcecd5cd" translate="yes" xml:space="preserve">
          <source>Geometric: area</source>
          <target state="translated">幾何学的:面積</target>
        </trans-unit>
        <trans-unit id="81b6264e52168059ad003a6e2b407928038d86a2" translate="yes" xml:space="preserve">
          <source>Geometric: area,&amp;#x27;)</source>
          <target state="translated">幾何学的：面積、 '）</target>
        </trans-unit>
        <trans-unit id="93665e808ca1c14ef16cc6912cf6d87101aae4b0" translate="yes" xml:space="preserve">
          <source>Geometric: bound_box</source>
          <target state="translated">幾何学的:bound_box</target>
        </trans-unit>
        <trans-unit id="e0c040881075a6da4960c127c1025ca1c4e3e78e" translate="yes" xml:space="preserve">
          <source>Geometric: bound_box,&amp;#x27;, box &amp;#x27;,&amp;#x27;)</source>
          <target state="translated">幾何学的：bound_box、 '、box'、 '）</target>
        </trans-unit>
        <trans-unit id="39d2105da034c7db21d98973af72a8064f606dda" translate="yes" xml:space="preserve">
          <source>Geometric: box</source>
          <target state="translated">幾何学的な:箱</target>
        </trans-unit>
        <trans-unit id="f2f9f89c4b6f4917d364f4c229b877c630c28339" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; # box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、'＃ボックス '、'</target>
        </trans-unit>
        <trans-unit id="2816ad481532412dc4f968541eb54f6a73270279" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; &amp;amp;&amp;amp; box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、' &amp;amp;&amp;amp;ボックス '、'</target>
        </trans-unit>
        <trans-unit id="f2fd06d9fd68d32124c59b325cb0db0d79219bc5" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; &amp;amp;&amp;gt; box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、'＆&amp;gt;ボックス '、'</target>
        </trans-unit>
        <trans-unit id="acff8f01767e5f76f5b1d4fd1a990a03aad21fec" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; &amp;amp;&amp;lt; box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、'＆&amp;lt;ボックス '、'</target>
        </trans-unit>
        <trans-unit id="d6174b595baddb6f900bbe68bd994ef45d5794b9" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; &amp;amp;&amp;lt;| box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、'＆&amp;lt;| ボックス '、'</target>
        </trans-unit>
        <trans-unit id="8c46e012460f34cad22ebb427ed0712715560663" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; &amp;lt;&amp;lt;| box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、' &amp;lt;&amp;lt; | ボックス '、'</target>
        </trans-unit>
        <trans-unit id="cd84c4808d85b33347dff12aa320353447c00559" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; + point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、' +ポイント ''</target>
        </trans-unit>
        <trans-unit id="2043406f5483c3b78fe2702d1e60c14292a2b7fc" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; - point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、'-ポイント ''</target>
        </trans-unit>
        <trans-unit id="ef9ed5b74e6ef8d26a18017da8e1beeeec09cd1e" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; |&amp;amp;&amp;gt; box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、' |＆&amp;gt;ボックス '、'</target>
        </trans-unit>
        <trans-unit id="a0efc8325a73507b346ab303c99230f031e5d01e" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,&amp;#x27; |&amp;gt;&amp;gt; box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、' | &amp;gt;&amp;gt;ボックス '、'</target>
        </trans-unit>
        <trans-unit id="3b4c443e59431193bcca574cac250450f92759da" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,)&amp;#x27; &amp;gt;^ box &amp;#x27;,)&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、）'&amp;gt; ^ボックス '、）'</target>
        </trans-unit>
        <trans-unit id="ab59191ffc41e6e94384185a516bb868f42810c0" translate="yes" xml:space="preserve">
          <source>Geometric: box &amp;#x27;,)&amp;#x27; &amp;lt;^ box &amp;#x27;,)&amp;#x27;</source>
          <target state="translated">幾何学的：ボックス '、）' &amp;lt;^ボックス '、）'</target>
        </trans-unit>
        <trans-unit id="2fe5ea0c0f9734fffa0671e590985facfaf3a07d" translate="yes" xml:space="preserve">
          <source>Geometric: box&amp;#x27;)</source>
          <target state="translated">幾何学的：ボックス '）</target>
        </trans-unit>
        <trans-unit id="b9b733d8febdf138608e064b45be416040fbb687" translate="yes" xml:space="preserve">
          <source>Geometric: box&amp;#x27;, point &amp;#x27;&amp;#x27;)</source>
          <target state="translated">幾何学的：ボックス '、ポイント' '）</target>
        </trans-unit>
        <trans-unit id="006e03d5685497ae0051c04f0f60f285cd6720c9" translate="yes" xml:space="preserve">
          <source>Geometric: box,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：ボックス、、） '）</target>
        </trans-unit>
        <trans-unit id="03bd3a9c2b876396b45f5f79b42b5cdad4adebd2" translate="yes" xml:space="preserve">
          <source>Geometric: box,2&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：ボックス、2&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="f403cd59f8511c55a29a5613deb6dc17553ae356" translate="yes" xml:space="preserve">
          <source>Geometric: center</source>
          <target state="translated">幾何学的な:中心</target>
        </trans-unit>
        <trans-unit id="b8d1e8b02bdbf1095140cb17f5807ecc91d43016" translate="yes" xml:space="preserve">
          <source>Geometric: center,&amp;#x27;)</source>
          <target state="translated">幾何学的：中央、 '）</target>
        </trans-unit>
        <trans-unit id="e4f391fd63cca84c9f17c34aa7cc7e489332e1f7" translate="yes" xml:space="preserve">
          <source>Geometric: circle</source>
          <target state="translated">幾何学的:円</target>
        </trans-unit>
        <trans-unit id="c535f92f1ddcd8259b16d0e3bee14e0580797b6f" translate="yes" xml:space="preserve">
          <source>Geometric: circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27; &amp;gt;&amp;gt; circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27;</source>
          <target state="translated">幾何学的：円 '&amp;lt;、1&amp;gt;' &amp;gt;&amp;gt;円 '&amp;lt;、1&amp;gt;'</target>
        </trans-unit>
        <trans-unit id="fa5e4572ef426454d58bb1dd84794831792d9e66" translate="yes" xml:space="preserve">
          <source>Geometric: circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27; &amp;lt;&amp;lt; circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27;</source>
          <target state="translated">幾何学的：円 '&amp;lt;、1&amp;gt;' &amp;lt;&amp;lt;円 '&amp;lt;、1&amp;gt;'</target>
        </trans-unit>
        <trans-unit id="3cff985774e188b9f562e91cd8addc996ee66f5e" translate="yes" xml:space="preserve">
          <source>Geometric: circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27; &amp;lt;-&amp;gt; circle &amp;#x27;&amp;lt;,1&amp;gt;&amp;#x27;</source>
          <target state="translated">幾何学的：円 '&amp;lt;、1&amp;gt;' &amp;lt;-&amp;gt;円 '&amp;lt;、1&amp;gt;'</target>
        </trans-unit>
        <trans-unit id="aca3c18e75d0490dc088bdeee289cf2f2ddb6623" translate="yes" xml:space="preserve">
          <source>Geometric: circle &amp;#x27;&amp;lt;,2&amp;gt;&amp;#x27; @&amp;gt; point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：円 '&amp;lt;、2&amp;gt;' @&amp;gt;点 ''</target>
        </trans-unit>
        <trans-unit id="9e96c558473932e2346f244a964ddae1b0c5b426" translate="yes" xml:space="preserve">
          <source>Geometric: circle&amp;#x27;, 2.0)</source>
          <target state="translated">幾何学的：円 '、2.0）</target>
        </trans-unit>
        <trans-unit id="e0a8f29a6cfa0086f71a2371a4a9cfa61519981f" translate="yes" xml:space="preserve">
          <source>Geometric: circle,&amp;#x27;)</source>
          <target state="translated">幾何学的：円、 '）</target>
        </trans-unit>
        <trans-unit id="c0b3563bc1ec602c1db6eda2dfa3e1d52d9bcc3f" translate="yes" xml:space="preserve">
          <source>Geometric: circle,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：円、、） '）</target>
        </trans-unit>
        <trans-unit id="53c6cfb41275da6c404267d632f7f90d89031096" translate="yes" xml:space="preserve">
          <source>Geometric: diagonal</source>
          <target state="translated">幾何学的:対角線</target>
        </trans-unit>
        <trans-unit id="553006cf848708f4902731c3386a9dc66eabab66" translate="yes" xml:space="preserve">
          <source>Geometric: diagonal,&amp;#x27;)</source>
          <target state="translated">幾何学的：対角線、 '）</target>
        </trans-unit>
        <trans-unit id="e9d52c7012ac5f08fa191553229f86a574d2d1fe" translate="yes" xml:space="preserve">
          <source>Geometric: diameter</source>
          <target state="translated">幾何学的:直径</target>
        </trans-unit>
        <trans-unit id="373415090bda87622f255f56f7a729917c064931" translate="yes" xml:space="preserve">
          <source>Geometric: diameter,2&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：直径、2&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="eba387383e96b60f7dd8fc11f767b059ffe3a921" translate="yes" xml:space="preserve">
          <source>Geometric: height</source>
          <target state="translated">幾何学的:高さ</target>
        </trans-unit>
        <trans-unit id="9fe1907c928c52f78e63d26b9f3f3f24fef06655" translate="yes" xml:space="preserve">
          <source>Geometric: height,&amp;#x27;)</source>
          <target state="translated">幾何学的：高さ、 '）</target>
        </trans-unit>
        <trans-unit id="dfc5959ea0a6181524e306d022dfcc8e49a1d83c" translate="yes" xml:space="preserve">
          <source>Geometric: isclosed</source>
          <target state="translated">幾何学的な:閉じられた</target>
        </trans-unit>
        <trans-unit id="6bc612f7069d860cd43f5e1d8de4a3377f55aac2" translate="yes" xml:space="preserve">
          <source>Geometric: isclosed,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：閉じている、、） '）</target>
        </trans-unit>
        <trans-unit id="7f81a6975db9a38b5af5931e1338ccf232987667" translate="yes" xml:space="preserve">
          <source>Geometric: isopen</source>
          <target state="translated">幾何学的:isopen</target>
        </trans-unit>
        <trans-unit id="9da3cbb89ee4413929959266836080754f0761b5" translate="yes" xml:space="preserve">
          <source>Geometric: isopen,,]&amp;#x27;)</source>
          <target state="translated">幾何学的：isopen 、、] '）</target>
        </trans-unit>
        <trans-unit id="a9a3900467aaca1b8a4c1362db68f305b19582ef" translate="yes" xml:space="preserve">
          <source>Geometric: length</source>
          <target state="translated">幾何学的:長さ</target>
        </trans-unit>
        <trans-unit id="0f477e538e17fdaf626987c0b3e059c4ed218340" translate="yes" xml:space="preserve">
          <source>Geometric: length,)&amp;#x27;)</source>
          <target state="translated">幾何学的：長さ、） '）</target>
        </trans-unit>
        <trans-unit id="1ba5f3a75b551d018972ef798eb335c100716e14" translate="yes" xml:space="preserve">
          <source>Geometric: line</source>
          <target state="translated">幾何学的な:線</target>
        </trans-unit>
        <trans-unit id="72246d884c9da412f7faa402c1b15644165242d1" translate="yes" xml:space="preserve">
          <source>Geometric: line&amp;#x27;, point &amp;#x27;&amp;#x27;)</source>
          <target state="translated">幾何学的：線 '、点' '）</target>
        </trans-unit>
        <trans-unit id="206f9fccbd7deb8bf02553e15b19fa03337233fd" translate="yes" xml:space="preserve">
          <source>Geometric: lseg</source>
          <target state="translated">幾何学的:lseg</target>
        </trans-unit>
        <trans-unit id="a3e0f8989703d9c594a884c56db0eb613ad74516" translate="yes" xml:space="preserve">
          <source>Geometric: lseg &amp;#x27;&amp;#x27; # lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：lseg ''＃lseg ''</target>
        </trans-unit>
        <trans-unit id="1cb00d68ff82986196da967a004bf414500fdbc3" translate="yes" xml:space="preserve">
          <source>Geometric: lseg &amp;#x27;&amp;#x27; ?# box &amp;#x27;,&amp;#x27;</source>
          <target state="translated">幾何学的：lseg ''？＃box '、'</target>
        </trans-unit>
        <trans-unit id="5370b1ba4e23c335eab44730c33ba038eab3dcde" translate="yes" xml:space="preserve">
          <source>Geometric: lseg &amp;#x27;&amp;#x27; ?-| lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：lseg ''？-| lseg ''</target>
        </trans-unit>
        <trans-unit id="ac68a0711d9e1d8888e00b92046aa1a1a2a3a5ec" translate="yes" xml:space="preserve">
          <source>Geometric: lseg &amp;#x27;&amp;#x27; ?|| lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：lseg ''？|| lseg ''</target>
        </trans-unit>
        <trans-unit id="602ad64d70c153b03a7b7aac0df2c618dd7413ee" translate="yes" xml:space="preserve">
          <source>Geometric: lseg&amp;#x27;, point &amp;#x27;&amp;#x27;)</source>
          <target state="translated">幾何学的：lseg '、point' '）</target>
        </trans-unit>
        <trans-unit id="87ca41bc81644dec1ecec1aaf558379a4bf49a06" translate="yes" xml:space="preserve">
          <source>Geometric: lseg,&amp;#x27;)</source>
          <target state="translated">幾何学的：lseg、 '）</target>
        </trans-unit>
        <trans-unit id="4d54cec15bcab56f2da1b1f390b73632b1dcbf4d" translate="yes" xml:space="preserve">
          <source>Geometric: npoints</source>
          <target state="translated">幾何学的:n点</target>
        </trans-unit>
        <trans-unit id="82f9176da26c349ac3a2fec9cfbb20c91c1ceba2" translate="yes" xml:space="preserve">
          <source>Geometric: npoints,,]&amp;#x27;)</source>
          <target state="translated">幾何学的：npoints 、、] '）</target>
        </trans-unit>
        <trans-unit id="28645e62602ce8fec7218147e4987f407e8f9a72" translate="yes" xml:space="preserve">
          <source>Geometric: path</source>
          <target state="translated">幾何学的:パス</target>
        </trans-unit>
        <trans-unit id="6f5880dc04850313da101d9308d336ea96de5d8c" translate="yes" xml:space="preserve">
          <source>Geometric: path &amp;#x27;&amp;#x27; + path &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：パス '' +パス ''</target>
        </trans-unit>
        <trans-unit id="cff8e922e3b31692c9ca250b6025ed31dd8fdd3d" translate="yes" xml:space="preserve">
          <source>Geometric: path &amp;#x27;,,)&amp;#x27; * point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：パス ',,）' *ポイント ''</target>
        </trans-unit>
        <trans-unit id="01bbc7843b38974a4c7d9f7e2b9400b56faabea0" translate="yes" xml:space="preserve">
          <source>Geometric: path &amp;#x27;,,)&amp;#x27; * point, sind)</source>
          <target state="translated">幾何学的：パス ',,）' *ポイント、sind）</target>
        </trans-unit>
        <trans-unit id="f0c3a98f4a21bb6236d0f2cfa15d8ab5a7945f46" translate="yes" xml:space="preserve">
          <source>Geometric: path &amp;#x27;,,)&amp;#x27; / point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：パス '、、）' /ポイント ''</target>
        </trans-unit>
        <trans-unit id="124e9a6db4d0ac040d679077edb6b8ab8a6696d7" translate="yes" xml:space="preserve">
          <source>Geometric: path &amp;#x27;,,)&amp;#x27; / point, sind)</source>
          <target state="translated">幾何学的：パス ',,）' /ポイント、sind）</target>
        </trans-unit>
        <trans-unit id="0c51b62ccd035da31f83330a680fa86308c2f3d9" translate="yes" xml:space="preserve">
          <source>Geometric: path,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：パス、、） '）</target>
        </trans-unit>
        <trans-unit id="45ec99c5c4e908e62ccff4e585500d723032cfdc" translate="yes" xml:space="preserve">
          <source>Geometric: pclose</source>
          <target state="translated">幾何学的:pclose</target>
        </trans-unit>
        <trans-unit id="b182f6b565883e6e2c646016b78ac68577626b98" translate="yes" xml:space="preserve">
          <source>Geometric: pclose,,]&amp;#x27;)</source>
          <target state="translated">幾何学的：pclose 、、] '）</target>
        </trans-unit>
        <trans-unit id="507989896f0547d05a215ff9f295d24b17e091c7" translate="yes" xml:space="preserve">
          <source>Geometric: point</source>
          <target state="translated">幾何学的:点</target>
        </trans-unit>
        <trans-unit id="a2bd5d2d4b4907f20a470b8849f5a3801b5cf240" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; ## lseg &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：点 '' ## lseg ''</target>
        </trans-unit>
        <trans-unit id="d4fbb59521d848959fc9c310aa00242e442c3c84" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; &amp;gt;^ point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：ポイント ''&amp;gt; ^ポイント ''</target>
        </trans-unit>
        <trans-unit id="98399bfb394dae31e0ee9be7a1510b6d2f29c20d" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; &amp;lt;@ circle &amp;#x27;&amp;lt;,2&amp;gt;&amp;#x27;</source>
          <target state="translated">幾何学的：点 '' &amp;lt;@円 '&amp;lt;、2&amp;gt;'</target>
        </trans-unit>
        <trans-unit id="5899e5d0e3c89c66550565207bae86ba6b876cca" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; &amp;lt;^ point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：ポイント '' &amp;lt;^ポイント ''</target>
        </trans-unit>
        <trans-unit id="6a7ecda7f258e60f6482f618841a959ce963e1eb" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; ?- point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：点 ''？-点 ''</target>
        </trans-unit>
        <trans-unit id="f37b2dc5b2749acec1a49318ba6543c2d864c85f" translate="yes" xml:space="preserve">
          <source>Geometric: point &amp;#x27;&amp;#x27; ?| point &amp;#x27;&amp;#x27;</source>
          <target state="translated">幾何学的：点 ''？| ポイント ''</target>
        </trans-unit>
        <trans-unit id="6fde5286b89f54817cc5ab239faa374c00dc4606" translate="yes" xml:space="preserve">
          <source>Geometric: point,&amp;#x27;)</source>
          <target state="translated">幾何学的：点、 '）</target>
        </trans-unit>
        <trans-unit id="d8a576ac01a8a1ee78f8ff82f815c76dacfdc290" translate="yes" xml:space="preserve">
          <source>Geometric: point,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：点、、） '）</target>
        </trans-unit>
        <trans-unit id="4f23b963baba040a9faace3d21a05bf602160384" translate="yes" xml:space="preserve">
          <source>Geometric: point,2&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：点、2&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="65a338ccdb82881febce734e97c4fdf45d453ff3" translate="yes" xml:space="preserve">
          <source>Geometric: point,]&amp;#x27;)</source>
          <target state="translated">幾何学的：点、] '）</target>
        </trans-unit>
        <trans-unit id="3ae9f6bad12ee8c28eb43284381811f2bae31846" translate="yes" xml:space="preserve">
          <source>Geometric: polygon</source>
          <target state="translated">幾何学的:多角形</target>
        </trans-unit>
        <trans-unit id="5b35c0d746dfcc047a0afcd93f0b3c4cd18bde6b" translate="yes" xml:space="preserve">
          <source>Geometric: polygon &amp;#x27;,)&amp;#x27; ~= polygon &amp;#x27;,)&amp;#x27;</source>
          <target state="translated">幾何学的：ポリゴン '、）'〜=ポリゴン '、）'</target>
        </trans-unit>
        <trans-unit id="869816f787f3c390221cdff48c373141618216b9" translate="yes" xml:space="preserve">
          <source>Geometric: polygon,&amp;#x27;)</source>
          <target state="translated">幾何学的：ポリゴン、 '）</target>
        </trans-unit>
        <trans-unit id="ab05db392d81b824cdb41f7a6fe5d8d14bc9d11f" translate="yes" xml:space="preserve">
          <source>Geometric: polygon,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：ポリゴン、、） '）</target>
        </trans-unit>
        <trans-unit id="5804fd3a3f57f14319c118fa75cb7051954b6773" translate="yes" xml:space="preserve">
          <source>Geometric: polygon,1&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：ポリゴン、1&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="d6845c24e84d1c6f6af34f8e667ff55b799afc77" translate="yes" xml:space="preserve">
          <source>Geometric: polygon,2&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：ポリゴン、2&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="819b82ef2ad538d3fe48c1ae412245c21d9fd58a" translate="yes" xml:space="preserve">
          <source>Geometric: popen</source>
          <target state="translated">幾何学的:ポペン</target>
        </trans-unit>
        <trans-unit id="0ce17112425a0c921d0d37f14277221f7e5cb662" translate="yes" xml:space="preserve">
          <source>Geometric: popen,,)&amp;#x27;)</source>
          <target state="translated">幾何学的：popen 、、） '）</target>
        </trans-unit>
        <trans-unit id="833a7938b28ff55bf890ede9562c88a3cf3616b2" translate="yes" xml:space="preserve">
          <source>Geometric: radius</source>
          <target state="translated">幾何学的:半径</target>
        </trans-unit>
        <trans-unit id="1c82295a4acd05e88581d706623e57915bba554e" translate="yes" xml:space="preserve">
          <source>Geometric: radius,2&amp;gt;&amp;#x27;)</source>
          <target state="translated">幾何学的：半径、2&amp;gt; '）</target>
        </trans-unit>
        <trans-unit id="31424f50624bafbef104ec60ff8d6cd6d9806a4a" translate="yes" xml:space="preserve">
          <source>Geometric: slope</source>
          <target state="translated">幾何学的:斜面</target>
        </trans-unit>
        <trans-unit id="e674485cf8e6967f9fda199dfc4f37a6860ba57a" translate="yes" xml:space="preserve">
          <source>Geometric: slope&amp;#x27;, point &amp;#x27;&amp;#x27;)</source>
          <target state="translated">幾何学的：勾配 '、点' '）</target>
        </trans-unit>
        <trans-unit id="7f7868cefc6080ede3e7599ccdee8580f1c6391a" translate="yes" xml:space="preserve">
          <source>Geometric: width</source>
          <target state="translated">幾何学的:幅</target>
        </trans-unit>
        <trans-unit id="ecb1f3c3e3bb61f6a55b262498f5de376961e7b6" translate="yes" xml:space="preserve">
          <source>Geometric: width,&amp;#x27;)</source>
          <target state="translated">幾何学的：幅、 '）</target>
        </trans-unit>
        <trans-unit id="a3d7536af893973e797484588417b811fa49c9c9" translate="yes" xml:space="preserve">
          <source>Geometric: |&amp;amp;&amp;gt;</source>
          <target state="translated">幾何学的：|＆&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dac5ddcfb396044c241822b103826072cea9122a" translate="yes" xml:space="preserve">
          <source>Geometric: |&amp;gt;&amp;gt;</source>
          <target state="translated">幾何学的：| &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e1ce90a64a5a3e719604091e787102d24302368f" translate="yes" xml:space="preserve">
          <source>Geometric: ~=</source>
          <target state="translated">幾何学的:~=。</target>
        </trans-unit>
        <trans-unit id="3764766959b2e2fca792b770cb84c07ab6ed354f" translate="yes" xml:space="preserve">
          <source>Germ&amp;aacute;n M&amp;eacute;ndez Bravo (Kronuz), 2004 - 2006</source>
          <target state="translated">Germ&amp;aacute;nM&amp;eacute;ndezBravo（Kronuz）、2004〜2006</target>
        </trans-unit>
        <trans-unit id="a5921456830bc3242d009637ad1fbb6f191cdc48" translate="yes" xml:space="preserve">
          <source>Germ&amp;aacute;n M&amp;eacute;ndez Bravo (Kronuz), 2004&amp;ndash;2006</source>
          <target state="translated">Germ&amp;aacute;nM&amp;eacute;ndezBravo（Kronuz）、2004〜 2006年</target>
        </trans-unit>
        <trans-unit id="8435540f9357c0427826e02b4177ce363970db3c" translate="yes" xml:space="preserve">
          <source>German collation for Austria, default variant</source>
          <target state="translated">オーストリアのドイツ語照合順序、デフォルトのバリアント</target>
        </trans-unit>
        <trans-unit id="7510fc993536622c741a49aafa894361e7ab10a4" translate="yes" xml:space="preserve">
          <source>German collation with phone book collation type</source>
          <target state="translated">電話帳照合式のドイツ語照合</target>
        </trans-unit>
        <trans-unit id="564857758dc8e91c1f74d993f78de5567b5c7dfc" translate="yes" xml:space="preserve">
          <source>German collation, default variant</source>
          <target state="translated">ドイツ語照合、デフォルトのバリアント</target>
        </trans-unit>
        <trans-unit id="f27aff0cadc166c49cd93ee1187bf701f6029a5e" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;n&lt;/code&gt;-th coordinate of cube (counting from 1).</source>
          <target state="translated">キューブの &lt;code&gt;n&lt;/code&gt; 番目の座標を取得します（1から数えます）。</target>
        </trans-unit>
        <trans-unit id="d35f795aa05a88fb426392aad122ef3b2bb082f7" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;n&lt;/code&gt;-th coordinate of cube in following way: n = 2 * k - 1 means lower bound of &lt;code&gt;k&lt;/code&gt;-th dimension, n = 2 * k means upper bound of &lt;code&gt;k&lt;/code&gt;-th dimension. Negative &lt;code&gt;n&lt;/code&gt; denotes the inverse value of the corresponding positive coordinate. This operator is designed for KNN-GiST support.</source>
          <target state="translated">次の方法でキューブの &lt;code&gt;n&lt;/code&gt; 番目の座標を取得します。n= 2 * k-1は &lt;code&gt;k&lt;/code&gt; 番目の次元の下限を意味し、n = 2 * kは &lt;code&gt;k&lt;/code&gt; 番目の次元の上限を意味します。負の &lt;code&gt;n&lt;/code&gt; は、対応する正の座標の逆の値を示します。このオペレーターは、KNN-GiSTサポート用に設計されています。</target>
        </trans-unit>
        <trans-unit id="cc6f8c8aaf13b3fdd311883db3b903abaee70123" translate="yes" xml:space="preserve">
          <source>Get JSON array element (indexed from zero, negative integers count from the end)</source>
          <target state="translated">JSON配列の要素を取得します(インデックスは0から、負の整数は末尾から数えます)。</target>
        </trans-unit>
        <trans-unit id="96cd8c94d1b03053f959c0260a5693091dfb369e" translate="yes" xml:space="preserve">
          <source>Get JSON array element as &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">JSON配列要素を &lt;code&gt;text&lt;/code&gt; として取得する</target>
        </trans-unit>
        <trans-unit id="cf31bd14e1935206dcfd63aadbd1872ba57dea93" translate="yes" xml:space="preserve">
          <source>Get JSON object at the specified path</source>
          <target state="translated">指定したパスのJSONオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="ef1cbd5cb305475720a9020825d5fd0aab442b3e" translate="yes" xml:space="preserve">
          <source>Get JSON object at the specified path as &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">指定されたパスにあるJSONオブジェクトを &lt;code&gt;text&lt;/code&gt; として取得します</target>
        </trans-unit>
        <trans-unit id="25fd43d0d3f16339264c4b37b814115f9d3ce410" translate="yes" xml:space="preserve">
          <source>Get JSON object field as &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">JSONオブジェクトフィールドを &lt;code&gt;text&lt;/code&gt; として取得する</target>
        </trans-unit>
        <trans-unit id="073ceb452af411396658b2179c607b15772b77b9" translate="yes" xml:space="preserve">
          <source>Get JSON object field by key</source>
          <target state="translated">キーによるJSONオブジェクトフィールドの取得</target>
        </trans-unit>
        <trans-unit id="a3c9485f60ac0e72f3350d75767b48ed6ff294ae" translate="yes" xml:space="preserve">
          <source>Get current write-ahead log flush location</source>
          <target state="translated">現在の書き込み優先ログのフラッシュ位置を取得します。</target>
        </trans-unit>
        <trans-unit id="ff5bd5ba7d4bd0b1adf164a5c3514a0cde09068d" translate="yes" xml:space="preserve">
          <source>Get current write-ahead log insert location</source>
          <target state="translated">現在の書き込み優先ログの挿入場所を取得します。</target>
        </trans-unit>
        <trans-unit id="6d563af8ba9dd62228b11fa7ee4de03e9c015df2" translate="yes" xml:space="preserve">
          <source>Get current write-ahead log write location</source>
          <target state="translated">現在の書き込み先ログの書き込み位置を取得</target>
        </trans-unit>
        <trans-unit id="5a63fc57b07be5ce8ae7fc6091aace9eaf741156" translate="yes" xml:space="preserve">
          <source>Get interval subfield (equivalent to &lt;code&gt;extract&lt;/code&gt;); see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">間隔サブフィールドを取得します（ &lt;code&gt;extract&lt;/code&gt; と同等）。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="7654b6edcaa442685671e13437c400615fa36a31" translate="yes" xml:space="preserve">
          <source>Get interval subfield; see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">間隔サブフィールドを取得します。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="6128ac644ecb365c2a1eeec7ff1509ae52372521" translate="yes" xml:space="preserve">
          <source>Get last write-ahead log location received and synced to disk by streaming replication. While streaming replication is in progress this will increase monotonically. If recovery has completed this will remain static at the value of the last WAL record received and synced to disk during recovery. If streaming replication is disabled, or if it has not yet started, the function returns NULL.</source>
          <target state="translated">ストリーミング・レプリケーションで受信し、ディスクに同期された最後の書込先ログの場所を取得します。ストリーミングレプリケーションが進行中の間は、これは単調増加します。リカバリが完了した場合、これは、リカバリ中に最後に受信してディスクに同期されたWALレコードの値で静的なままになります。ストリーミングレプリケーションが無効な場合、またはまだ開始していない場合、この関数は NULL を返す。</target>
        </trans-unit>
        <trans-unit id="76a64be22601bc127252c3868430ba6f7837c55b" translate="yes" xml:space="preserve">
          <source>Get last write-ahead log location replayed during recovery. If recovery is still in progress this will increase monotonically. If recovery has completed then this value will remain static at the value of the last WAL record applied during that recovery. When the server has been started normally without recovery the function returns NULL.</source>
          <target state="translated">リカバリー中に再生された最後の書込み先ログの場所を取得します。リカバリがまだ進行中の場合、この値は単調に増加します。リカバリが完了した場合、この値は、そのリカバリ中に適用された最後の WAL レコードの値に固定されたままになります。サーバがリカバリなしで正常に起動された場合、この関数は NULL を返す。</target>
        </trans-unit>
        <trans-unit id="406fdc630e83917e4241518be673ae1f0d8347d2" translate="yes" xml:space="preserve">
          <source>Get start time of an on-line exclusive backup in progress.</source>
          <target state="translated">オンラインでの排他的なバックアップの開始時間を取得します。</target>
        </trans-unit>
        <trans-unit id="dca6c016406c3b0ed8f48fe56cd9e3bf358bbd54" translate="yes" xml:space="preserve">
          <source>Get subfield (equivalent to &lt;code&gt;extract&lt;/code&gt;); see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">サブフィールドを取得します（ &lt;code&gt;extract&lt;/code&gt; と同等）。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="3152064f9ae3eb1ab6d172e1fe8f75ea161bdf61" translate="yes" xml:space="preserve">
          <source>Get subfield; see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">サブフィールドを取得します。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="4cfad13dc60760cc3b206a5a63697b11a532048c" translate="yes" xml:space="preserve">
          <source>Get time stamp of last transaction replayed during recovery. This is the time at which the commit or abort WAL record for that transaction was generated on the primary. If no transactions have been replayed during recovery, this function returns NULL. Otherwise, if recovery is still in progress this will increase monotonically. If recovery has completed then this value will remain static at the value of the last transaction applied during that recovery. When the server has been started normally without recovery the function returns NULL.</source>
          <target state="translated">リカバリ中に再生された最後のトランザクションのタイムスタンプを取得します。これは、そのトランザクションのコミットまたはアボートWALレコードがプライマリ上に生成された時刻です。リカバリ中にトランザクションが再生されなかった場合、この関数は NULL を返します。そうでない場合、リカバリがまだ進行中であれば、この値は単調に増加します。リカバリが完了した場合、この値は、そのリカバリ中に適用された最後のトランザクションの値で静的なままである。リカバリを行わずにサーバが正常に起動された場合、この関数は NULL を返す。</target>
        </trans-unit>
        <trans-unit id="9ab69254c214c6784aca932c9cdbfd619399aeab" translate="yes" xml:space="preserve">
          <source>Get timestamp subfield (equivalent to &lt;code id=&quot;extract&quot;&gt;extract&lt;/code&gt;); see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">タイムスタンプサブフィールドを取得します（ &lt;code id=&quot;extract&quot;&gt;extract&lt;/code&gt; と同等）。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="41ba912fbba3eb8b34c259aed583d396fabedb3e" translate="yes" xml:space="preserve">
          <source>Get timestamp subfield; see &lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;Section 9.9.1&lt;/a&gt;</source>
          <target state="translated">タイムスタンプサブフィールドを取得します。&lt;a href=&quot;functions-datetime#FUNCTIONS-DATETIME-EXTRACT&quot;&gt;セクション9.9.1を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="2286e40b8a539e9f8b5d59de04327253f0b8e306" translate="yes" xml:space="preserve">
          <source>Gets all JSON items returned by JSON path for the specified JSON value and wraps result into an array.</source>
          <target state="translated">指定したJSON値のJSONパスで返されたJSON項目をすべて取得し、結果を配列にラップします。</target>
        </trans-unit>
        <trans-unit id="69ca4727f266434b20f8a8cff91f85228790e89c" translate="yes" xml:space="preserve">
          <source>Gets all JSON items returned by JSON path for the specified JSON value.</source>
          <target state="translated">指定したJSON値のJSONパスが返すJSON項目を全て取得します。</target>
        </trans-unit>
        <trans-unit id="f74211e2c2ac907544fec9e563a5484f2bc9bf8f" translate="yes" xml:space="preserve">
          <source>Gets the current status of the weak mode</source>
          <target state="translated">弱モードの現在の状態を取得します。</target>
        </trans-unit>
        <trans-unit id="ffe1d3bb8fb75103abea9d97f24675a5e6f74f12" translate="yes" xml:space="preserve">
          <source>Gets the first JSON item returned by JSON path for the specified JSON value. Returns &lt;code&gt;NULL&lt;/code&gt; on no results.</source>
          <target state="translated">指定されたJSON値のJSONパスによって返された最初のJSONアイテムを取得します。結果がない場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1ea0c334189a899d918625993b37ead61ecb3937" translate="yes" xml:space="preserve">
          <source>GiST</source>
          <target state="translated">GiST</target>
        </trans-unit>
        <trans-unit id="2c7e841b76f37f5f1283940a7342c797bb3bd024" translate="yes" xml:space="preserve">
          <source>GiST Development Site &lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/&quot;&gt;http://www.sai.msu.su/~megera/postgres/gist/&lt;/a&gt;</source>
          <target state="translated">GiST開発サイト&lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/&quot;&gt;http://www.sai.msu.su/~megera/postgres/gist/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77dacc994e0a5c24fbb20b4e435e091dad5586f5" translate="yes" xml:space="preserve">
          <source>GiST Indexes: Built-in Operator Classes</source>
          <target state="translated">GiSTインデックス 組込み演算子クラス</target>
        </trans-unit>
        <trans-unit id="22165dcd40882c92f600bb8d95e394930c229760" translate="yes" xml:space="preserve">
          <source>GiST Indexes: Examples</source>
          <target state="translated">GiSTインデックス 例</target>
        </trans-unit>
        <trans-unit id="cd4fa206206b0d9b9a4a09e74cdc45a9b7bac6d5" translate="yes" xml:space="preserve">
          <source>GiST Indexes: Extensibility</source>
          <target state="translated">GiSTインデックス 拡張性</target>
        </trans-unit>
        <trans-unit id="1e6e31ed1dfc0534ae7fa938c637d58b4def631a" translate="yes" xml:space="preserve">
          <source>GiST Indexes: Implementation</source>
          <target state="translated">GiSTインデックス 実装</target>
        </trans-unit>
        <trans-unit id="494456433e65d5f6cf54c8e3f52f00d35404d83c" translate="yes" xml:space="preserve">
          <source>GiST and SP-GiST indexes can be created for table columns of range types. For instance, to create a GiST index:</source>
          <target state="translated">GiSTインデックスとSP-GISTインデックスは、範囲型のテーブル列に対して作成することができます。例えば、GiSTインデックスを作成するには</target>
        </trans-unit>
        <trans-unit id="64ccd39c4988da1de12e6185509ac6695e61212e" translate="yes" xml:space="preserve">
          <source>GiST index over &lt;code&gt;ltree&lt;/code&gt; (&lt;code&gt;gist_ltree_ops&lt;/code&gt; opclass): &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;@&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;@&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">GiSTインデックスの上に &lt;code&gt;ltree&lt;/code&gt; は（ &lt;code&gt;gist_ltree_ops&lt;/code&gt; OPCLASS）： &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;@&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;@&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49924620a95a816339f17d76ecc000e2cecd8a90" translate="yes" xml:space="preserve">
          <source>GiST index over &lt;code&gt;ltree&lt;/code&gt;: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;@&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;@&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">以上のGiSTインデックス &lt;code&gt;ltree&lt;/code&gt; は： &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;@&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;@&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="693c5c0cbde228a43b08f1288fe686338587e0d2" translate="yes" xml:space="preserve">
          <source>GiST index over &lt;code&gt;ltree[]&lt;/code&gt; (&lt;code&gt;gist__ltree_ops&lt;/code&gt; opclass): &lt;code&gt;ltree[] &amp;lt;@ ltree&lt;/code&gt;, &lt;code&gt;ltree @&amp;gt; ltree[]&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">以上のGiSTインデックス &lt;code&gt;ltree[]&lt;/code&gt; （ &lt;code&gt;gist__ltree_ops&lt;/code&gt; OPCLASS）： &lt;code&gt;ltree[] &amp;lt;@ ltree&lt;/code&gt; 、 &lt;code&gt;ltree @&amp;gt; ltree[]&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c380bccd59920d150dcf1776323ee944932357" translate="yes" xml:space="preserve">
          <source>GiST index over &lt;code&gt;ltree[]&lt;/code&gt;: &lt;code&gt;ltree[] &amp;lt;@ ltree&lt;/code&gt;, &lt;code&gt;ltree @&amp;gt; ltree[]&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">以上のGiSTインデックス &lt;code&gt;ltree[]&lt;/code&gt; ： &lt;code&gt;ltree[] &amp;lt;@ ltree&lt;/code&gt; 、 &lt;code&gt;ltree @&amp;gt; ltree[]&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d319a311ddbbf36d4e1fdb2142c71c77f7a27e3" translate="yes" xml:space="preserve">
          <source>GiST indexes additionally accept this parameter:</source>
          <target state="translated">GiSTインデックスはこのパラメータを追加で受け付けることができます。</target>
        </trans-unit>
        <trans-unit id="fd10e71b27221cbba626117e71058b4d0b5d0794" translate="yes" xml:space="preserve">
          <source>GiST indexes are also capable of optimizing &amp;ldquo;nearest-neighbor&amp;rdquo; searches, such as</source>
          <target state="translated">GiSTインデックスは、次のような「最も近い」検索を最適化することもできます。</target>
        </trans-unit>
        <trans-unit id="52e06a8812b702e9e01b2b2a18cfa676aaed004f" translate="yes" xml:space="preserve">
          <source>GiST indexes are not a single kind of index, but rather an infrastructure within which many different indexing strategies can be implemented. Accordingly, the particular operators with which a GiST index can be used vary depending on the indexing strategy (the &lt;em&gt;operator class&lt;/em&gt;). As an example, the standard distribution of PostgreSQL includes GiST operator classes for several two-dimensional geometric data types, which support indexed queries using these operators:</source>
          <target state="translated">GiSTインデックスは、単一の種類のインデックスではなく、多くの異なるインデックス作成戦略を実装できるインフラストラクチャです。したがって、GiSTインデックスで使用できる特定の演算子は、インデックス作成戦略（&lt;em&gt;演算子クラス&lt;/em&gt;）によって異なります。例として、PostgreSQLの標準ディストリビューションには、いくつかの2次元ジオメトリックデータタイプのGiST演算子クラスが含まれており、これらの演算子を使用したインデックス付きクエリをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8444450d765d03c90597419731d461339d26e37a" translate="yes" xml:space="preserve">
          <source>GiST stands for Generalized Search Tree. It is a balanced, tree-structured access method, that acts as a base template in which to implement arbitrary indexing schemes. B-trees, R-trees and many other indexing schemes can be implemented in GiST.</source>
          <target state="translated">GiSTはGeneralized Search Treeの略です。バランスのとれた木構造のアクセス方法であり、任意の索引付けスキームを実装するためのベーステンプレートとして機能します。B木、R木、その他多くの索引付け方式がGiSTで実装できます。</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="b0f44dac1f3500cf2c64a5e96b25bdc72296caa1" translate="yes" xml:space="preserve">
          <source>Give a role a non-default setting of the &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; parameter:</source>
          <target state="translated">役割に、&lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt;パラメーターのデフォルト以外の設定を付与します。</target>
        </trans-unit>
        <trans-unit id="0d339f7ddc04ed38d6c4f1627fd17d7b3c263479" translate="yes" xml:space="preserve">
          <source>Give a role a non-default, database-specific setting of the &lt;a href=&quot;runtime-config-client#GUC-CLIENT-MIN-MESSAGES&quot;&gt;client_min_messages&lt;/a&gt; parameter:</source>
          <target state="translated">&lt;a href=&quot;runtime-config-client#GUC-CLIENT-MIN-MESSAGES&quot;&gt;client_min_messages&lt;/a&gt;パラメータのデフォルトではないデータベース固有の設定をロールに付与します。</target>
        </trans-unit>
        <trans-unit id="657b05bd06e4a30ca8560408b6cca3b16ee24c04" translate="yes" xml:space="preserve">
          <source>Give a role the ability to create other roles and new databases:</source>
          <target state="translated">他の役割と新しいデータベースを作成する能力を与えます。</target>
        </trans-unit>
        <trans-unit id="7e461b397ac9e789e72233367d6e54d13bd1ea4f" translate="yes" xml:space="preserve">
          <source>Given an index entry &lt;code&gt;p&lt;/code&gt; and a query value &lt;code&gt;q&lt;/code&gt;, this function determines the index entry's &amp;ldquo;distance&amp;rdquo; from the query value. This function must be supplied if the operator class contains any ordering operators. A query using the ordering operator will be implemented by returning index entries with the smallest &amp;ldquo;distance&amp;rdquo; values first, so the results must be consistent with the operator's semantics. For a leaf index entry the result just represents the distance to the index entry; for an internal tree node, the result must be the smallest distance that any child entry could have.</source>
          <target state="translated">インデックスエントリ &lt;code&gt;p&lt;/code&gt; とクエリ値 &lt;code&gt;q&lt;/code&gt; が与えられると、この関数はクエリ値からインデックスエントリの「距離」を決定します。演算子クラスに順序付け演算子が含まれている場合、この関数を指定する必要があります。順序付け演算子を使用したクエリは、最小の「距離」値を持つインデックスエントリを最初に返すことによって実装されるため、結果は演算子のセマンティクスと一致している必要があります。リーフインデックスエントリの場合、結果はインデックスエントリまでの距離を表します。内部ツリーノードの場合、結果は子エントリが持つことができる最小距離でなければなりません。</target>
        </trans-unit>
        <trans-unit id="693396c0b50006bc8bf563a767c6df7376338535" translate="yes" xml:space="preserve">
          <source>Given an index entry &lt;code&gt;p&lt;/code&gt; and a query value &lt;code&gt;q&lt;/code&gt;, this function determines whether the index entry is &amp;ldquo;consistent&amp;rdquo; with the query; that is, could the predicate &amp;ldquo;&lt;code&gt;indexed_column&lt;/code&gt;&lt;code&gt;indexable_operator&lt;/code&gt;&lt;code&gt;q&lt;/code&gt;&amp;rdquo; be true for any row represented by the index entry? For a leaf index entry this is equivalent to testing the indexable condition, while for an internal tree node this determines whether it is necessary to scan the subtree of the index represented by the tree node. When the result is &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;recheck&lt;/code&gt; flag must also be returned. This indicates whether the predicate is certainly true or only possibly true. If &lt;code&gt;recheck&lt;/code&gt; = &lt;code&gt;false&lt;/code&gt; then the index has tested the predicate condition exactly, whereas if &lt;code&gt;recheck&lt;/code&gt; = &lt;code&gt;true&lt;/code&gt; the row is only a candidate match. In that case the system will automatically evaluate the &lt;code&gt;indexable_operator&lt;/code&gt; against the actual row value to see if it is really a match. This convention allows GiST to support both lossless and lossy index structures.</source>
          <target state="translated">インデックスエントリ &lt;code&gt;p&lt;/code&gt; とクエリ値 &lt;code&gt;q&lt;/code&gt; が与えられると、この関数はインデックスエントリがクエリと「整合性がある」かどうかを判断します。つまり、述語「 &lt;code&gt;indexed_column&lt;/code&gt; indexable_operator &lt;code&gt;q&lt;/code&gt; 」は、インデックスエントリによって表される任意の行に対してtrueになる &lt;code&gt;indexable_operator&lt;/code&gt; 性がありますか？リーフインデックスエントリの場合、これはインデックス可能な条件をテストすることと同じですが、内部ツリーノードの場合、これは、ツリーノードによって表されるインデックスのサブツリーをスキャンする必要があるかどうかを決定します。結果が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;recheck&lt;/code&gt; フラグも返す必要があります。これは、述語が確かに真であるか、おそらく真であるかを示します。 &lt;code&gt;recheck&lt;/code&gt; = &lt;code&gt;false&lt;/code&gt; の場合次に、インデックスは述語条件を正確にテストしましたが、 &lt;code&gt;recheck&lt;/code&gt; = &lt;code&gt;true&lt;/code&gt; の場合、行は候補の一致のみです。その場合、システムは実際の行の値に対して &lt;code&gt;indexable_operator&lt;/code&gt; を自動的に評価し、実際に一致するかどうかを確認します。この規則により、GiSTはロスレスとロッシーの両方のインデックス構造をサポートできます。</target>
        </trans-unit>
        <trans-unit id="e92d55ae3ac298e4b66632b1af221ac34e3be444" translate="yes" xml:space="preserve">
          <source>Given an index tuple and an indexed value, modifies the indicated attribute of the tuple so that it additionally represents the new value. If any modification was done to the tuple, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">インデックスタプルとインデックス付きの値を指定すると、タプルの指定された属性を変更して、新しい値を追加で表すようにします。タプルに変更が加えられた場合、 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="769764fd5b04005314c3f8df7317ab69c5882b21" translate="yes" xml:space="preserve">
          <source>Given the cost of the plan, it is entirely reasonable that no JIT was used; the cost of JIT would have been bigger than the potential savings. Adjusting the cost limits will lead to JIT use:</source>
          <target state="translated">計画のコストを考えれば、JIT を使用しなかったのは完全に合理的であり、JIT のコストは潜在的な節約よりも大きかったであろう。コストの限界を調整することが、JITの利用につながる。</target>
        </trans-unit>
        <trans-unit id="37460509d9524c32ce3522fe588bb30e9b9a9e2c" translate="yes" xml:space="preserve">
          <source>Given the default configuration and only the first function existing, the first and second calls are insecure. Any user could intercept them by creating the second or third function. By matching the argument type exactly and using the &lt;code&gt;VARIADIC&lt;/code&gt; keyword, the third call is secure.</source>
          <target state="translated">デフォルトの構成と最初の関数のみが存在する場合、最初と2番目の呼び出しは安全ではありません。どのユーザーも、2番目または3番目の関数を作成することで、それらを傍受できます。引数の型を正確に照合し、 &lt;code&gt;VARIADIC&lt;/code&gt; キーワードを使用することにより、3番目の呼び出しは安全です。</target>
        </trans-unit>
        <trans-unit id="40af5c52e4886430e556bb2588adddc7f3345e29" translate="yes" xml:space="preserve">
          <source>Given the sample data from the PostgreSQL tutorial (see &lt;a href=&quot;tutorial-sql-intro&quot;&gt;Section 2.1&lt;/a&gt;), this returns:</source>
          <target state="translated">PostgreSQLチュートリアルからのサンプルデータ（&lt;a href=&quot;tutorial-sql-intro&quot;&gt;セクション2.1を&lt;/a&gt;参照）が与えられると、これは以下を返します。</target>
        </trans-unit>
        <trans-unit id="48862a4ac236aec67af11d9ca9afc2c469e5ae88" translate="yes" xml:space="preserve">
          <source>Gives syntax help on the specified SQL command. If &lt;code&gt;command&lt;/code&gt; is not specified, then psql will list all the commands for which syntax help is available. If &lt;code&gt;command&lt;/code&gt; is an asterisk (&lt;code&gt;*&lt;/code&gt;), then syntax help on all SQL commands is shown.</source>
          <target state="translated">指定されたSQLコマンドの構文ヘルプを提供します。 &lt;code&gt;command&lt;/code&gt; が指定されていない場合、psqlは構文ヘルプが利用可能なすべてのコマンドをリストします。場合は &lt;code&gt;command&lt;/code&gt; アスタリスク（ある &lt;code&gt;*&lt;/code&gt; ）は、すべてのSQLコマンドの構文ヘルプが表示されます。</target>
        </trans-unit>
        <trans-unit id="696e22e619af6c7115546ae99d980b04fd02c2c6" translate="yes" xml:space="preserve">
          <source>Gives the distance in statute miles between two points on the Earth's surface.</source>
          <target state="translated">地球表面上の2つの点間の距離を平方マイルで表示します。</target>
        </trans-unit>
        <trans-unit id="b2e72630d76d2483c8fcffc2dffd1c7c6a52ab67" translate="yes" xml:space="preserve">
          <source>Global transaction identifier that was assigned to the transaction</source>
          <target state="translated">トランザクションに割り当てられたグローバル・トランザクション識別子</target>
        </trans-unit>
        <trans-unit id="31e73c02a46d40c2d70edd740f19c8958fbb213c" translate="yes" xml:space="preserve">
          <source>Global validity checks require extra thought under non-serializable MVCC. For example, a banking application might wish to check that the sum of all credits in one table equals the sum of debits in another table, when both tables are being actively updated. Comparing the results of two successive &lt;code&gt;SELECT sum(...)&lt;/code&gt; commands will not work reliably in Read Committed mode, since the second query will likely include the results of transactions not counted by the first. Doing the two sums in a single repeatable read transaction will give an accurate picture of only the effects of transactions that committed before the repeatable read transaction started &amp;mdash; but one might legitimately wonder whether the answer is still relevant by the time it is delivered. If the repeatable read transaction itself applied some changes before trying to make the consistency check, the usefulness of the check becomes even more debatable, since now it includes some but not all post-transaction-start changes. In such cases a careful person might wish to lock all tables needed for the check, in order to get an indisputable picture of current reality. A &lt;code&gt;SHARE&lt;/code&gt; mode (or higher) lock guarantees that there are no uncommitted changes in the locked table, other than those of the current transaction.</source>
          <target state="translated">グローバル有効性チェックは、シリアライズ不可能なMVCCの下での追加の検討を必要とします。たとえば、銀行のアプリケーションでは、両方のテーブルがアクティブに更新されているときに、1つのテーブルのすべてのクレジットの合計が別のテーブルの借方の合計と等しいことを確認する場合があります。2つの連続する &lt;code&gt;SELECT sum(...)&lt;/code&gt; の結果の比較2番目のクエリには最初のクエリではカウントされなかったトランザクションの結果が含まれる可能性が高いため、Read Committedモードではコマンドは確実に機能しません。 1つの繰り返し可能な読み取りトランザクションで2つの合計を実行すると、繰り返し可能な読み取りトランザクションが開始する前にコミットされたトランザクションの影響のみが正確に把握できます。ただし、回答が配信される時点でまだ適切であるかどうかを正当に疑問に思うかもしれません。一貫性チェックを行う前に、繰り返し可能な読み取りトランザクション自体がいくつかの変更を適用した場合、トランザクション開始後の変更のすべてではなく一部が含まれるため、チェックの有用性はさらに議論の余地があります。そのような場合、注意深い人は、チェックに必要なすべてのテーブルをロックして、現在の現実の紛れもない状況を把握したいと思うかもしれません。 &lt;code&gt;SHARE&lt;/code&gt; モード（またはそれ以上）ロックは、現在のトランザクションの変更以外に、ロックされたテーブルにコミットされていない変更がないことを保証します。</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="4a647f902e0d765ea12195a96e4829f8b1e8aa9f" translate="yes" xml:space="preserve">
          <source>Good Practices</source>
          <target state="translated">グッドプラクティス</target>
        </trans-unit>
        <trans-unit id="3c09ec28f005ae7495ffdeada3d59d9447d92430" translate="yes" xml:space="preserve">
          <source>Good results will show most (&amp;gt;90%) individual timing calls take less than one microsecond. Average per loop overhead will be even lower, below 100 nanoseconds. This example from an Intel i7-860 system using a TSC clock source shows excellent performance:</source>
          <target state="translated">良い結果は、ほとんど（&amp;gt; 90％）の個別のタイミング呼び出しに1マイクロ秒未満しかかからないことを示しています。ループあたりの平均オーバーヘッドはさらに低くなり、100ナノ秒未満になります。TSCクロックソースを使用したIntel i7-860システムのこの例は、優れたパフォーマンスを示しています。</target>
        </trans-unit>
        <trans-unit id="c02329c48f348eb633688f33c499b18b31dcb947" translate="yes" xml:space="preserve">
          <source>Grant</source>
          <target state="translated">Grant</target>
        </trans-unit>
        <trans-unit id="01af961ffadccd5726ec885717dd08dd99e478cf" translate="yes" xml:space="preserve">
          <source>Grant SELECT privilege to everyone for all tables (and views) you subsequently create in schema &lt;code&gt;myschema&lt;/code&gt;, and allow role &lt;code&gt;webuser&lt;/code&gt; to INSERT into them too:</source>
          <target state="translated">スキーマ &lt;code&gt;myschema&lt;/code&gt; で後で作成するすべてのテーブル（およびビュー）のすべてのユーザーにSELECT権限を付与し、ロール &lt;code&gt;webuser&lt;/code&gt; がそれらにINSERT できるようにします。</target>
        </trans-unit>
        <trans-unit id="24617f7e457da3734cfeda27633b2aa731a9c9ef" translate="yes" xml:space="preserve">
          <source>Grant all available privileges to user &lt;code&gt;manuel&lt;/code&gt; on view &lt;code&gt;kinds&lt;/code&gt;:</source>
          <target state="translated">ビューの &lt;code&gt;kinds&lt;/code&gt; に関するすべての利用可能な権限をユーザー &lt;code&gt;manuel&lt;/code&gt; に付与します。</target>
        </trans-unit>
        <trans-unit id="6e182dc9d9691657bc39b554f5fd47996c873086" translate="yes" xml:space="preserve">
          <source>Grant all of the privileges available for the object's type. The &lt;code&gt;PRIVILEGES&lt;/code&gt; key word is optional in PostgreSQL, though it is required by strict SQL.</source>
          <target state="translated">オブジェクトのタイプに使用できるすべての特権を付与します。 &lt;code&gt;PRIVILEGES&lt;/code&gt; それは、厳密なSQLによって必要とされるが、キーワードが、PostgreSQLでは省略可能です。</target>
        </trans-unit>
        <trans-unit id="bb6ece16050b16e5f45fddd08ab0ab254c3c1353" translate="yes" xml:space="preserve">
          <source>Grant all privileges on all views in schema &lt;code&gt;public&lt;/code&gt; to role &lt;code&gt;webuser&lt;/code&gt;:</source>
          <target state="translated">スキーマ &lt;code&gt;public&lt;/code&gt; のすべてのビューに対するすべての権限をロール &lt;code&gt;webuser&lt;/code&gt; に付与します。</target>
        </trans-unit>
        <trans-unit id="269d15aac0905b9feb98dc13ab02754db1782270" translate="yes" xml:space="preserve">
          <source>Grant insert privilege to all users on table &lt;code&gt;films&lt;/code&gt;:</source>
          <target state="translated">テーブル &lt;code&gt;films&lt;/code&gt; すべてのユーザーに挿入権限を付与します。</target>
        </trans-unit>
        <trans-unit id="ba27670ed37d6c78d0b14c4148d50cc7aab110fa" translate="yes" xml:space="preserve">
          <source>Grant membership in role &lt;code&gt;admins&lt;/code&gt; to user &lt;code&gt;joe&lt;/code&gt;:</source>
          <target state="translated">ロール &lt;code&gt;admins&lt;/code&gt; メンバーシップをユーザー &lt;code&gt;joe&lt;/code&gt; に付与します。</target>
        </trans-unit>
        <trans-unit id="1f88fd823ea9c3dd2200a42432c3efa9ef706298" translate="yes" xml:space="preserve">
          <source>Granting permission on a table does not automatically extend permissions to any sequences used by the table, including sequences tied to &lt;code&gt;SERIAL&lt;/code&gt; columns. Permissions on sequences must be set separately.</source>
          <target state="translated">テーブルに権限を付与しても、 &lt;code&gt;SERIAL&lt;/code&gt; 列に関連付けられたシーケンスを含め、テーブルで使用されるシーケンスへの権限は自動的に拡張されません。シーケンスの権限は個別に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="translated">グレーター</target>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="translated">以上</target>
        </trans-unit>
        <trans-unit id="2b3dd5feef716f81ba8f5a6b4f110f37be61a79c" translate="yes" xml:space="preserve">
          <source>Greater-than comparison</source>
          <target state="translated">比較対象よりも大きい</target>
        </trans-unit>
        <trans-unit id="e7c7faa35b86c7d8f2aa278406d57686d0e76cab" translate="yes" xml:space="preserve">
          <source>Greater-than operator</source>
          <target state="translated">グレーター・ザン・オペレーター</target>
        </trans-unit>
        <trans-unit id="6be50f6e20e368774e1648e96e60824f64284093" translate="yes" xml:space="preserve">
          <source>Greater-than-or-equal-to comparison</source>
          <target state="translated">対等以上の比較</target>
        </trans-unit>
        <trans-unit id="1b0cd62dcaabb41d866e961c21030484cdf15a5a" translate="yes" xml:space="preserve">
          <source>Greater-than-or-equal-to operator</source>
          <target state="translated">等しくない演算子</target>
        </trans-unit>
        <trans-unit id="016d8dc207e4a957a80df31d268b5c8c6a8e9e53" translate="yes" xml:space="preserve">
          <source>Greatest common divisor (the largest positive number that divides both inputs with no remainder); returns &lt;code id=&quot;0&quot;&gt;0&lt;/code&gt; if both inputs are zero; available for &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;bigint&lt;/code&gt;, and &lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">最大公約数（余りなしで両方の入力を分割する最大の正の数）; 両方の入力がゼロの場合は &lt;code id=&quot;0&quot;&gt;0&lt;/code&gt; を返します。 &lt;code&gt;integer&lt;/code&gt; 、 &lt;code&gt;bigint&lt;/code&gt; 、および &lt;code&gt;numeric&lt;/code&gt; 使用可能</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="fafd8001d43d87515ae86352c97c37616a4d6762" translate="yes" xml:space="preserve">
          <source>Greenwich Mean Time</source>
          <target state="translated">グリニッジ平均時</target>
        </trans-unit>
        <trans-unit id="cf098c159fa893be7ea9fe00bfc173e418306bad" translate="yes" xml:space="preserve">
          <source>Gregorian years AD 1&amp;ndash;99 can be entered by using 4 digits with leading zeros (e.g., &lt;code&gt;0099&lt;/code&gt; is AD 99).</source>
          <target state="translated">グレゴリオ暦のAD1〜99年は、先行ゼロ付きの4桁を使用して入力できます（たとえば、 &lt;code&gt;0099&lt;/code&gt; はAD 99です）。</target>
        </trans-unit>
        <trans-unit id="6261b12bce7847fa9426739910b4246568401661" translate="yes" xml:space="preserve">
          <source>Gregorian years AD 1-99 can be entered by using 4 digits with leading zeros (e.g., &lt;code&gt;0099&lt;/code&gt; is AD 99).</source>
          <target state="translated">グレゴリオ暦の西暦1〜99年は、先頭に0を付けた4桁で入力できます（たとえば、 &lt;code&gt;0099&lt;/code&gt; は西暦99）。</target>
        </trans-unit>
        <trans-unit id="2b13ec9d057eee3b8bf047437042e0b54f1f6425" translate="yes" xml:space="preserve">
          <source>Grouping operations are used in conjunction with grouping sets (see &lt;a href=&quot;queries-table-expressions#QUERIES-GROUPING-SETS&quot;&gt;Section 7.2.4&lt;/a&gt;) to distinguish result rows. The arguments to the &lt;code&gt;GROUPING&lt;/code&gt; operation are not actually evaluated, but they must match exactly expressions given in the &lt;code&gt;GROUP BY&lt;/code&gt; clause of the associated query level. Bits are assigned with the rightmost argument being the least-significant bit; each bit is 0 if the corresponding expression is included in the grouping criteria of the grouping set generating the result row, and 1 if it is not. For example:</source>
          <target state="translated">グループ化操作は、結果行を区別するためにグループ化セット（&lt;a href=&quot;queries-table-expressions#QUERIES-GROUPING-SETS&quot;&gt;セクション7.2.4を&lt;/a&gt;参照）と組み合わせて使用​​されます。 &lt;code&gt;GROUPING&lt;/code&gt; 操作の引数は実際には評価されませんが、関連するクエリレベルの &lt;code&gt;GROUP BY&lt;/code&gt; 句で指定された式と正確に一致する必要があります。ビットは、右端の引数を最下位ビットとして割り当てられます。各行は、対応する式が結果行を生成するグループ化セットのグループ化基準に含まれている場合は0、含まれていない場合は1です。例えば：</target>
        </trans-unit>
        <trans-unit id="88d7c69cfe151f010dd11e55984fa5a2e4485f4b" translate="yes" xml:space="preserve">
          <source>Grouping without aggregate expressions effectively calculates the set of distinct values in a column. This can also be achieved using the &lt;code&gt;DISTINCT&lt;/code&gt; clause (see &lt;a href=&quot;queries-select-lists#QUERIES-DISTINCT&quot;&gt;Section 7.3.3&lt;/a&gt;).</source>
          <target state="translated">集約式なしでグループ化すると、列内の一連の個別の値が効果的に計算されます。これは、 &lt;code&gt;DISTINCT&lt;/code&gt; 句を使用して実現することもできます（&lt;a href=&quot;queries-select-lists#QUERIES-DISTINCT&quot;&gt;7.3.3項を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="b82d3603eb93c98eb825eb4e6b01ee350ff3fb6d" translate="yes" xml:space="preserve">
          <source>HASH version number</source>
          <target state="translated">HASHバージョン番号</target>
        </trans-unit>
        <trans-unit id="1cc155b76768b5b5fb2f3643a0744204e68a9ccc" translate="yes" xml:space="preserve">
          <source>HBA</source>
          <target state="translated">HBA</target>
        </trans-unit>
        <trans-unit id="0feddc013d3db0d214cc286a21a9e52cacbc17e4" translate="yes" xml:space="preserve">
          <source>HMAC: Keyed-Hashing for Message Authentication.</source>
          <target state="translated">HMAC。メッセージ認証のための鍵付きハッシュ。</target>
        </trans-unit>
        <trans-unit id="06833bde6c3138c525040c232dbadac4725bac88" translate="yes" xml:space="preserve">
          <source>HOT</source>
          <target state="translated">HOT</target>
        </trans-unit>
        <trans-unit id="c305ce22fa1ddad5ff6a9a241e6067a9f35cad67" translate="yes" xml:space="preserve">
          <source>HP-UX</source>
          <target state="translated">HP-UX</target>
        </trans-unit>
        <trans-unit id="61a2a1882fc631d64e7d30ef57cec31971ea2c09" translate="yes" xml:space="preserve">
          <source>Had there been MCV lists for the two columns, &lt;code&gt;eqjoinsel&lt;/code&gt; would have used direct comparison of the MCV lists to determine the join selectivity within the part of the column populations represented by the MCVs. The estimate for the remainder of the populations follows the same approach shown here.</source>
          <target state="translated">2つの列にMCVリストがあった場合、 &lt;code&gt;eqjoinsel&lt;/code&gt; はMCVリストの直接比較を使用して、MCVによって表される列の母集団の一部内の結合選択性を決定します。残りの母集団の推定値は、ここに示すのと同じアプローチに従います。</target>
        </trans-unit>
        <trans-unit id="4bf7a6d465bc019e543ce8b66fbf5cd1235516a8" translate="yes" xml:space="preserve">
          <source>Had we not supplied values for all the subfields of the column, the remaining subfields would have been filled with null values.</source>
          <target state="translated">カラムのすべてのサブフィールドに値を与えなければ、残りのサブフィールドはヌル値で埋められていたでしょう。</target>
        </trans-unit>
        <trans-unit id="e0c8e4e26ef951b2d257ad48905d56d36c233bc8" translate="yes" xml:space="preserve">
          <source>Handling of Invalid or Ambiguous Timestamps</source>
          <target state="translated">無効または曖昧なタイムスタンプの処理</target>
        </trans-unit>
        <trans-unit id="56d01e9677df53b4a2c4ef118ff77a201dd06a2e" translate="yes" xml:space="preserve">
          <source>Has a replication origin been configured in the current session?</source>
          <target state="translated">現在のセッションでレプリケーションオリジンが構成されていますか?</target>
        </trans-unit>
        <trans-unit id="3127cc395c91e262a7a0864c40a7527573818c9c" translate="yes" xml:space="preserve">
          <source>Has the constraint been validated? Currently, can only be false for foreign keys and CHECK constraints</source>
          <target state="translated">制約は検証されていますか?現在のところ、外部キーとCHECK制約に対してのみfalseにすることができます。</target>
        </trans-unit>
        <trans-unit id="3dc36e4e0152a0239de102d530bd0c47b3d9e3a1" translate="yes" xml:space="preserve">
          <source>Hash Partitioning</source>
          <target state="translated">ハッシュ分割</target>
        </trans-unit>
        <trans-unit id="90507c1a5721f22f49292627451907b5c9b469f4" translate="yes" xml:space="preserve">
          <source>Hash functions &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;hash_murmur2&lt;/code&gt; and &lt;code&gt;hash_fnv1a&lt;/code&gt; accept an input value and an optional seed parameter. In case the seed isn't provided the value of &lt;code&gt;:default_seed&lt;/code&gt; is used, which is initialized randomly unless set by the command-line &lt;code&gt;-D&lt;/code&gt; option. Hash functions can be used to scatter the distribution of random functions such as &lt;code&gt;random_zipfian&lt;/code&gt; or &lt;code&gt;random_exponential&lt;/code&gt;. For instance, the following pgbench script simulates possible real world workload typical for social media and blogging platforms where few accounts generate excessive load:</source>
          <target state="translated">ハッシュ関数 &lt;code&gt;hash&lt;/code&gt; 、 &lt;code&gt;hash_murmur2&lt;/code&gt; 、および &lt;code&gt;hash_fnv1a&lt;/code&gt; は、入力値とオプションのシードパラメーターを受け入れます。シードが提供されていない場合、 &lt;code&gt;:default_seed&lt;/code&gt; の値が使用されます。これは、コマンドラインの &lt;code&gt;-D&lt;/code&gt; オプションで設定されない限り、ランダムに初期化されます。ハッシュ関数は、 &lt;code&gt;random_zipfian&lt;/code&gt; や &lt;code&gt;random_exponential&lt;/code&gt; などのランダム関数の分布を分散させるために使用できます。たとえば、次のpgbenchスクリプトは、ソーシャルメディアやブログプラットフォームに典型的な、現実のワークロードの可能性をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="cc1cfbcfc5781fb19f027f2126a6d7e099a4d8b1" translate="yes" xml:space="preserve">
          <source>Hash indexes</source>
          <target state="translated">ハッシュインデックス</target>
        </trans-unit>
        <trans-unit id="f9f75839548d1e6a1a51f586eb631d2c4a104ff8" translate="yes" xml:space="preserve">
          <source>Hash indexes can only handle simple equality comparisons. The query planner will consider using a hash index whenever an indexed column is involved in a comparison using the &lt;code&gt;=&lt;/code&gt; operator. The following command is used to create a hash index:</source>
          <target state="translated">ハッシュインデックスは、単純な等値比較のみを処理できます。クエリプランナーは、インデックス付きの列が &lt;code&gt;=&lt;/code&gt; 演算子を使用した比較に関与している場合は常に、ハッシュインデックスの使用を検討します。次のコマンドを使用して、ハッシュインデックスを作成します。</target>
        </trans-unit>
        <trans-unit id="956456c077f843c8529aa0f90522e368a7e51001" translate="yes" xml:space="preserve">
          <source>Hash-based operations are generally more sensitive to memory availability than equivalent sort-based operations. The memory available for hash tables is computed by multiplying &lt;code&gt;work_mem&lt;/code&gt; by &lt;code&gt;hash_mem_multiplier&lt;/code&gt;. This makes it possible for hash-based operations to use an amount of memory that exceeds the usual &lt;code&gt;work_mem&lt;/code&gt; base amount.</source>
          <target state="translated">ハッシュベースの操作は、一般に、同等のソートベースの操作よりもメモリの可用性に敏感です。ハッシュテーブルに使用できるメモリは、 &lt;code&gt;work_mem&lt;/code&gt; に &lt;code&gt;hash_mem_multiplier&lt;/code&gt; を掛けて計算されます。これにより、ハッシュベースの操作で通常の &lt;code&gt;work_mem&lt;/code&gt; 基本量を超えるメモリ量を使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="ea4ccce2369daab1022355aaafd39217be056ac4" translate="yes" xml:space="preserve">
          <source>Hashes/sec</source>
          <target state="translated">Hashes/sec</target>
        </trans-unit>
        <trans-unit id="fa2065c836a17176e9e4314cc0f9ae6d0e4ea762" translate="yes" xml:space="preserve">
          <source>Having created this trigger, any change in &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;body&lt;/code&gt; will automatically be reflected into &lt;code&gt;tsv&lt;/code&gt;, without the application having to worry about it.</source>
          <target state="translated">このトリガーを作成すると、 &lt;code&gt;title&lt;/code&gt; や &lt;code&gt;body&lt;/code&gt; 変更は、アプリケーションが心配することなく、自動的に &lt;code&gt;tsv&lt;/code&gt; に反映されます。</target>
        </trans-unit>
        <trans-unit id="349ced815f5c84c9f5228e606a1b7ba0c2ddee06" translate="yes" xml:space="preserve">
          <source>Having defined the types, we can use them to create tables:</source>
          <target state="translated">型を定義したので、それらを使ってテーブルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="2723c816765ee34102b273de3e99b00ba0f56303" translate="yes" xml:space="preserve">
          <source>Having the bloom index defined on the table is better than btree in handling this type of search:</source>
          <target state="translated">テーブル上でブルームインデックスを定義することは、このタイプの検索を処理する上でbtreeよりも優れています。</target>
        </trans-unit>
        <trans-unit id="847116884ad55b09c96b3c4dc05ec99dcc5ec687" translate="yes" xml:space="preserve">
          <source>Header extension area length</source>
          <target state="translated">ヘッダー延長エリアの長さ</target>
        </trans-unit>
        <trans-unit id="977169a2f56615065497cd1735f54129679d50ec" translate="yes" xml:space="preserve">
          <source>Heap</source>
          <target state="translated">Heap</target>
        </trans-unit>
        <trans-unit id="e10aa6b979969f7c629b2451c2c2a904b3d450a7" translate="yes" xml:space="preserve">
          <source>Heap-Only Tuples</source>
          <target state="translated">ヒープのみのタプル</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="0107076effd18727f0d6bde8cfc48a85171576c5" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;*&lt;/code&gt; is a shorthand for &amp;ldquo;all columns&amp;rdquo;. &lt;a href=&quot;#ftn.id-1.4.4.6.2.10&quot;&gt;&lt;sup id=&quot;id-1.4.4.6.2.10&quot;&gt;[2]&lt;/sup&gt;&lt;/a&gt; So the same result would be had with:</source>
          <target state="translated">ここで &lt;code&gt;*&lt;/code&gt; は「すべての列」の省略形です。&lt;a href=&quot;#ftn.id-1.4.4.6.2.10&quot;&gt;&lt;sup id=&quot;id-1.4.4.6.2.10&quot;&gt;[2]&lt;/sup&gt;&lt;/a&gt;したがって、同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="4c0298ee7318c32798634cdbf2dfdaaab57a634f" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;ANY&lt;/code&gt; can be considered either as introducing a subquery, or as being an aggregate function, if the subquery returns one row with a Boolean value. Thus the standard name cannot be given to these aggregates.</source>
          <target state="translated">ここで、 &lt;code&gt;ANY&lt;/code&gt; は、サブクエリを導入するもの、またはブール値を持つ1つの行をサブクエリが返す場合、集約関数と見なすことができます。したがって、これらの集合体に標準名を付けることはできません。</target>
        </trans-unit>
        <trans-unit id="fa4131a740f8662a6e1405a124ef5fe7cf873c01" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;expression&lt;/code&gt; is an arbitrary value expression that is evaluated for all rows. A set of rows for which all the expressions are equal are considered duplicates, and only the first row of the set is kept in the output. Note that the &amp;ldquo;first row&amp;rdquo; of a set is unpredictable unless the query is sorted on enough columns to guarantee a unique ordering of the rows arriving at the &lt;code&gt;DISTINCT&lt;/code&gt; filter. (&lt;code&gt;DISTINCT ON&lt;/code&gt; processing occurs after &lt;code&gt;ORDER BY&lt;/code&gt; sorting.)</source>
          <target state="translated">ここで &lt;code&gt;expression&lt;/code&gt; は、すべての行に対して評価される任意の値の式です。すべての式が等しい行のセットは重複と見なされ、セットの最初の行のみが出力に保持されます。 &lt;code&gt;DISTINCT&lt;/code&gt; フィルターに到達する行の一意の順序を保証するのに十分な列でクエリがソートされない限り、セットの「最初の行」は予測できないことに注意してください。（ &lt;code&gt;DISTINCT ON&lt;/code&gt; 処理は、 &lt;code&gt;ORDER BY&lt;/code&gt; ソート後に発生します。）</target>
        </trans-unit>
        <trans-unit id="32e70bf63bd6299c1b514b324e5813b6785f48fc" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;sum&lt;/code&gt; is an aggregate function that computes a single value over the entire group. More information about the available aggregate functions can be found in &lt;a href=&quot;functions-aggregate&quot;&gt;Section 9.20&lt;/a&gt;.</source>
          <target state="translated">ここで &lt;code&gt;sum&lt;/code&gt; は、グループ全体で単一の値を計算する集約関数です。利用可能な集約関数の詳細については、&lt;a href=&quot;functions-aggregate&quot;&gt;セクション9.20を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d1138b514ed4337e7415d5a15b6a232b2308f96" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;sum&lt;/code&gt; is an aggregate function that computes a single value over the entire group. More information about the available aggregate functions can be found in &lt;a href=&quot;functions-aggregate&quot;&gt;Section 9.21&lt;/a&gt;.</source>
          <target state="translated">ここで、 &lt;code&gt;sum&lt;/code&gt; は、グループ全体で単一の値を計算する集計関数です。使用可能な集計関数の詳細については、&lt;a href=&quot;functions-aggregate&quot;&gt;セクション9.21を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c74e599f4f4cd10f806357bb4a577d879a636f92" translate="yes" xml:space="preserve">
          <source>Here again, the result row ordering might vary. You can ensure consistent results by using &lt;code&gt;DISTINCT&lt;/code&gt; and &lt;code&gt;ORDER BY&lt;/code&gt; together: &lt;a href=&quot;#ftn.id-1.4.4.6.6.7&quot;&gt;&lt;sup id=&quot;id-1.4.4.6.6.7&quot;&gt;[3]&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">ここでも、結果の行の順序が異なる場合があります。 &lt;code&gt;DISTINCT&lt;/code&gt; と &lt;code&gt;ORDER BY&lt;/code&gt; を一緒に使用することで、一貫した結果を保証できます：&lt;a href=&quot;#ftn.id-1.4.4.6.6.7&quot;&gt;&lt;sup id=&quot;id-1.4.4.6.6.7&quot;&gt;[3]&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9361fe781c0dc9515f2a15d806649d45978ad2ff" translate="yes" xml:space="preserve">
          <source>Here are a few more operating-system-specific suggestions. (In each case be sure to use the proper installation directory and user name where we show generic values.)</source>
          <target state="translated">ここでは、さらにいくつかのオペレーティングシステム固有の提案を紹介します。(いずれの場合も、一般的な値を表示する場合は、適切なインストールディレクトリとユーザ名を使用するようにしてください)。</target>
        </trans-unit>
        <trans-unit id="33c629349369b081c96a4709bd4c05ca3d526b68" translate="yes" xml:space="preserve">
          <source>Here are examples using &lt;code&gt;width&lt;/code&gt; fields and the &lt;code&gt;-&lt;/code&gt; flag:</source>
          <target state="translated">以下は、 &lt;code&gt;width&lt;/code&gt; フィールドと &lt;code&gt;-&lt;/code&gt; フラグの使用例です。</target>
        </trans-unit>
        <trans-unit id="3f1ddfcdc9a3ca5369958338ec3215bfb4261c95" translate="yes" xml:space="preserve">
          <source>Here are examples using &lt;em&gt;&lt;code&gt;width&lt;/code&gt;&lt;/em&gt; fields and the &lt;code&gt;-&lt;/code&gt; flag:</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;width&lt;/code&gt; &lt;/em&gt;フィールドと &lt;code&gt;-&lt;/code&gt; フラグを使用した例を次に示します。</target>
        </trans-unit>
        <trans-unit id="7e1f296e08c37893cc7499c23d5ef526f191a997" translate="yes" xml:space="preserve">
          <source>Here are some example collations that might be created:</source>
          <target state="translated">ここでは、作成される可能性のある照合順序の例をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="794bf261c0ef6d9f03e6ee073f42ca9e62437531" translate="yes" xml:space="preserve">
          <source>Here are some examples for the Norwegian language:</source>
          <target state="translated">ノルウェー語の例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="aedfd7af6c8c45fb8ea4b749385a6c955d7ebd4b" translate="yes" xml:space="preserve">
          <source>Here are some examples of &lt;code&gt;WHERE&lt;/code&gt; clauses:</source>
          <target state="translated">次に、 &lt;code&gt;WHERE&lt;/code&gt; 句の例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="2b46ad535b1f1605c8d8b383d4b83d313d3c5c39" translate="yes" xml:space="preserve">
          <source>Here are some examples of full text search:</source>
          <target state="translated">全文検索の例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="59581a37d8149d77f6e2121b432ef3ab5471d652" translate="yes" xml:space="preserve">
          <source>Here are some examples of path matching:</source>
          <target state="translated">パスマッチングの例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="081304796cf08884f88e8e57322d960864d34d64" translate="yes" xml:space="preserve">
          <source>Here are some examples of the basic format conversions:</source>
          <target state="translated">基本的なフォーマット変換の例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="6671c9ef7af5c4291212558669b68a47697a4f97" translate="yes" xml:space="preserve">
          <source>Here are some examples of the proper syntax for inserting and updating composite columns. First, inserting or updating a whole column:</source>
          <target state="translated">ここでは、複合カラムの挿入と更新の適切な構文の例を紹介します。まず、列全体を挿入または更新します。</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">ここでは、いくつかの例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="cff6bd1f9746e782ec9405f845ffac129954f75a" translate="yes" xml:space="preserve">
          <source>Here are some suggestions about the easiest ways to perform common tasks when updating catalog data files.</source>
          <target state="translated">ここでは、カタログデータファイルを更新する際に一般的なタスクを実行する最も簡単な方法をいくつか提案します。</target>
        </trans-unit>
        <trans-unit id="8d395c7f381e1a472cda6f6e9e7b568dac052ead" translate="yes" xml:space="preserve">
          <source>Here are some trivial examples to help you get started. For more information and examples, see &lt;a href=&quot;https://www.postgresql.org/docs/12/xfunc.html&quot;&gt;Section 37.3&lt;/a&gt;.</source>
          <target state="translated">以下は、始めるのに役立つ簡単な例です。詳細と例については、&lt;a href=&quot;https://www.postgresql.org/docs/12/xfunc.html&quot;&gt;セクション37.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="26b8e6990652910b8bb15ce27b2a3afd5fd095c9" translate="yes" xml:space="preserve">
          <source>Here are some trivial examples to help you get started. For more information and examples, see &lt;a href=&quot;https://www.postgresql.org/docs/13/xfunc.html&quot;&gt;Section 37.3&lt;/a&gt;.</source>
          <target state="translated">始めるのに役立つ簡単な例をいくつか示します。詳細と例については、&lt;a href=&quot;https://www.postgresql.org/docs/13/xfunc.html&quot;&gt;セクション37.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="211fc895cd2c281ef748e752305609850c1006cd" translate="yes" xml:space="preserve">
          <source>Here are some usage examples:</source>
          <target state="translated">いくつかの使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="869c324dd483307e5d715a3f86abbbcd015bfd60" translate="yes" xml:space="preserve">
          <source>Here are two complete examples:</source>
          <target state="translated">ここでは、2つの完全な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="461b806fbebb6f513c6608122e9ae50853cfb34f" translate="yes" xml:space="preserve">
          <source>Here are two simple examples of defining composite types:</source>
          <target state="translated">ここでは、複合型を定義する簡単な例を2つ紹介します。</target>
        </trans-unit>
        <trans-unit id="24ca8b33236bc0d0ef50e2dd43fb66e04162b483" translate="yes" xml:space="preserve">
          <source>Here is a complete example:</source>
          <target state="translated">ここに完全な例があります。</target>
        </trans-unit>
        <trans-unit id="879a2b3e6157baeae30fe41038c69a70091e7ab2" translate="yes" xml:space="preserve">
          <source>Here is a concatenation of two values of unspecified types:</source>
          <target state="translated">ここでは、不特定の型の2つの値を連結しています。</target>
        </trans-unit>
        <trans-unit id="cc7d83360ed38ff4e831e43a35b15e111bd3cccc" translate="yes" xml:space="preserve">
          <source>Here is a more complete example of bloom index definition and usage, as well as a comparison with equivalent btree indexes. The bloom index is considerably smaller than the btree index, and can perform better.</source>
          <target state="translated">ここでは、ブルームインデックスの定義と使用法、および同等のbtreeインデックスとの比較について、より完全な例を示します。bloom インデックスは btree インデックスよりもかなり小さく、より良い性能を発揮します。</target>
        </trans-unit>
        <trans-unit id="5f6e374336fa7e724d2419753cd63165e6b67b04" translate="yes" xml:space="preserve">
          <source>Here is a more complex example: &lt;code&gt;to_timestamp('15:12:02.020.001230', 'HH24:MI:SS.MS.US')&lt;/code&gt; is 15 hours, 12 minutes, and 2 seconds + 20 milliseconds + 1230 microseconds = 2.021230 seconds.</source>
          <target state="translated">これはより複雑な例です： &lt;code&gt;to_timestamp('15:12:02.020.001230', 'HH24:MI:SS.MS.US')&lt;/code&gt; is 15 hours、12 minutes、and 2 seconds + 20 milliseconds + 1230 microseconds = 2.021230 seconds 。</target>
        </trans-unit>
        <trans-unit id="4b2dfe5ad07694de5eeb1cdf20070a788ef8e7be" translate="yes" xml:space="preserve">
          <source>Here is a sample of data suitable for copying into a table from &lt;code&gt;STDIN&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;STDIN&lt;/code&gt; からテーブルにコピーするのに適したデータのサンプルです。</target>
        </trans-unit>
        <trans-unit id="ea724b816190320574ae29c6484ba706b02e562b" translate="yes" xml:space="preserve">
          <source>Here is a simple example:</source>
          <target state="translated">簡単な例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="79fce6a010075477b9d4f3d2b7d0892550a64ad8" translate="yes" xml:space="preserve">
          <source>Here is a snippet of a log file generated in a single-client run:</source>
          <target state="translated">以下はシングルクライアントの実行で生成されたログファイルのスニペットです。</target>
        </trans-unit>
        <trans-unit id="5a5fc7880a4ea236d1b3bb1d32e27412d9d31338" translate="yes" xml:space="preserve">
          <source>Here is a trivial example, just to show what the output looks like:</source>
          <target state="translated">ここでは、出力がどのように見えるかを示すために、些細な例を示します。</target>
        </trans-unit>
        <trans-unit id="196e7b38bd23094a34f08fd4e1d56d0de9737199" translate="yes" xml:space="preserve">
          <source>Here is an example for a search+bind configuration that uses &lt;code&gt;ldapsearchfilter&lt;/code&gt; instead of &lt;code&gt;ldapsearchattribute&lt;/code&gt; to allow authentication by user ID or email address:</source>
          <target state="translated">ここでの用途があること、検索+バインド設定のための一例である &lt;code&gt;ldapsearchfilter&lt;/code&gt; の代わりに &lt;code&gt;ldapsearchattribute&lt;/code&gt; ユーザーIDまたはメールアドレスによる認証を許可するには：</target>
        </trans-unit>
        <trans-unit id="adb407aa80bcb23407a6343cd3fb06a44aaa7159" translate="yes" xml:space="preserve">
          <source>Here is an example for a search+bind configuration that uses DNS SRV discovery to find the host name(s) and port(s) for the LDAP service for the domain name &lt;code&gt;example.net&lt;/code&gt;:</source>
          <target state="translated">DNS SRVディスカバリーを使用して、ドメイン名 &lt;code&gt;example.net&lt;/code&gt; の LDAPサービスのホスト名とポートを検索するsearch + bind構成の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="8294bedf7f93c4debbc985ac5b71d91485ccb87a" translate="yes" xml:space="preserve">
          <source>Here is an example for a search+bind configuration:</source>
          <target state="translated">ここでは、検索とバインドの設定例を示します。</target>
        </trans-unit>
        <trans-unit id="b1012c91578d9866c1a1a935ccf5f74b1c398069" translate="yes" xml:space="preserve">
          <source>Here is an example for a simple-bind LDAP configuration:</source>
          <target state="translated">ここでは、シンプルバインドLDAPの設定例を示します。</target>
        </trans-unit>
        <trans-unit id="1e2a8eb0839de265c32ba8726c7fb8ce612f9ebc" translate="yes" xml:space="preserve">
          <source>Here is an example of a dictionary definition using the &lt;code&gt;simple&lt;/code&gt; template:</source>
          <target state="translated">以下は、 &lt;code&gt;simple&lt;/code&gt; テンプレートを使用した辞書定義の例です。</target>
        </trans-unit>
        <trans-unit id="d6c310d42c6ff4f581c1e303b9eef10bb403ca6c" translate="yes" xml:space="preserve">
          <source>Here is an example of a function with an ordinality column added:</source>
          <target state="translated">序列列を追加した関数の例を示します。</target>
        </trans-unit>
        <trans-unit id="39d9a1ec97da0de0b2ebe001d89411c194d0136a" translate="yes" xml:space="preserve">
          <source>Here is an example of a query plan for a query using an aggregate function:</source>
          <target state="translated">集計機能を利用した問い合わせプランの例です。</target>
        </trans-unit>
        <trans-unit id="f6d493babc38181bb9e797ebc36b6dee1ed42248" translate="yes" xml:space="preserve">
          <source>Here is an example of collecting functional-dependency statistics:</source>
          <target state="translated">ここでは、機能依存性の統計情報を収集する例を示します。</target>
        </trans-unit>
        <trans-unit id="d635cae1e0a20113dd837d7519806bc17d144c7b" translate="yes" xml:space="preserve">
          <source>Here is an example of creating a foreign table with &lt;code&gt;postgres_fdw&lt;/code&gt;. First install the extension:</source>
          <target state="translated">以下は &lt;code&gt;postgres_fdw&lt;/code&gt; で外部テーブルを作成する例です。最初に拡張機能をインストールします。</target>
        </trans-unit>
        <trans-unit id="a9d65bbbca8355ed90ddee51a853e323cb2c5356" translate="yes" xml:space="preserve">
          <source>Here is an example of how wait events can be viewed</source>
          <target state="translated">ここでは、待ちイベントの表示方法の例を示します。</target>
        </trans-unit>
        <trans-unit id="d1ba55b43049bc0f3ea6eba1c4f511076f5487a7" translate="yes" xml:space="preserve">
          <source>Here is an example of how wait events can be viewed:</source>
          <target state="translated">ここでは、待ちイベントがどのように表示されるかの例を示します。</target>
        </trans-unit>
        <trans-unit id="289e8ce361948510d7bea9298d834548d8a0bcac" translate="yes" xml:space="preserve">
          <source>Here is an example of selecting a sample of a table with &lt;code&gt;SYSTEM_ROWS&lt;/code&gt;. First install the extension:</source>
          <target state="translated">次に、 &lt;code&gt;SYSTEM_ROWS&lt;/code&gt; を使用してテーブルのサンプルを選択する例を示します。最初に拡張機能をインストールします。</target>
        </trans-unit>
        <trans-unit id="a28a21ccc575549b0e4278f1befd6c3171d0c15c" translate="yes" xml:space="preserve">
          <source>Here is an example of selecting a sample of a table with &lt;code&gt;SYSTEM_TIME&lt;/code&gt;. First install the extension:</source>
          <target state="translated">以下は、 &lt;code&gt;SYSTEM_TIME&lt;/code&gt; を使用してテーブルのサンプルを選択する例です。最初に拡張機能をインストールします。</target>
        </trans-unit>
        <trans-unit id="6c1b25585e57445c9a690160c1f6293b2c2334f6" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;EXPLAIN EXECUTE&lt;/code&gt; to display the execution plan for a prepared query:</source>
          <target state="translated">&lt;code&gt;EXPLAIN EXECUTE&lt;/code&gt; を使用して準備済みクエリの実行プランを表示する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="3d0353f1bd1f4e5d0cdada03e8194af993f90dd3" translate="yes" xml:space="preserve">
          <source>Here is an example showing how to initialize a fresh database cluster with &lt;code&gt;sepgsql&lt;/code&gt; functions and security labels installed. Adjust the paths shown as appropriate for your installation:</source>
          <target state="translated">次の例は、 &lt;code&gt;sepgsql&lt;/code&gt; 関数とセキュリティラベルがインストールされた新しいデータベースクラスタを初期化する方法を示しています。インストールに応じて、表示されているパスを調整します。</target>
        </trans-unit>
        <trans-unit id="f5681a46af83bb7c4af1228232eef4280217edbe" translate="yes" xml:space="preserve">
          <source>Here is an example showing how to insert the &lt;code&gt;unaccent&lt;/code&gt; dictionary into a text search configuration:</source>
          <target state="translated">以下は、 &lt;code&gt;unaccent&lt;/code&gt; 辞書をテキスト検索構成に挿入する方法を示す例です。</target>
        </trans-unit>
        <trans-unit id="740b499e9d1667a11938c2361c53f8d80be32b73" translate="yes" xml:space="preserve">
          <source>Here is an example showing the effects of &lt;code&gt;LIMIT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;LIMIT&lt;/code&gt; の効果を示す例を次に示します。</target>
        </trans-unit>
        <trans-unit id="b663de54fe9a475edef4cab194ba9fd34363260e" translate="yes" xml:space="preserve">
          <source>Here is an example that selects only the ten highest-ranked matches:</source>
          <target state="translated">ここでは、上位10試合のみを選択する例を紹介します。</target>
        </trans-unit>
        <trans-unit id="df8103a128aa015d77a6739520d4e9345c77b089" translate="yes" xml:space="preserve">
          <source>Here is an example that shows how to compare each employee's salary with the average salary in his or her department:</source>
          <target state="translated">ここでは、社員一人一人の給与を、所属する部署の平均給与と比較した例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="b75486070871a14c2ef5c89ea4b7f39dda615103" translate="yes" xml:space="preserve">
          <source>Here is another example of resolving an operator with one known and one unknown input:</source>
          <target state="translated">ここでは、1つの既知の入力と1つの未知の入力を持つ演算子を解決する別の例を示します。</target>
        </trans-unit>
        <trans-unit id="862cabf7adcfd5c087659f8a55b3eecf121ea793" translate="yes" xml:space="preserve">
          <source>Here is another example: it calculates the total sales for each product (rather than the total sales of all products):</source>
          <target state="translated">ここにもう一つの例があります:それは各製品の売上高の合計を計算します(全製品の売上高の合計ではなく)。</target>
        </trans-unit>
        <trans-unit id="a6970b339f07dcc03e141391304c0d8752344244" translate="yes" xml:space="preserve">
          <source>Here is sample status output from pg_ctl:</source>
          <target state="translated">以下はpg_ctlから出力されるステータスのサンプルです。</target>
        </trans-unit>
        <trans-unit id="1352c501bf85911546ec6a7652f925835c799c63" translate="yes" xml:space="preserve">
          <source>Here is some example output:</source>
          <target state="translated">以下に出力例を示します。</target>
        </trans-unit>
        <trans-unit id="e962869eb6c37279a68d52de2ccf4f45b22a61bc" translate="yes" xml:space="preserve">
          <source>Here is the same plan with cost estimates suppressed:</source>
          <target state="translated">ここでは、費用の見積もりを抑えた同じプランをご紹介します。</target>
        </trans-unit>
        <trans-unit id="fabdc0d28afb5f0b655ec42a14587280ddf1ed63" translate="yes" xml:space="preserve">
          <source>Here is the same query, but in YAML format:</source>
          <target state="translated">以下は同じクエリですが、YAML形式です。</target>
        </trans-unit>
        <trans-unit id="760b794b45c32777224d4cbdefb3ac43472e24da" translate="yes" xml:space="preserve">
          <source>Here is the same query, with JSON output formatting:</source>
          <target state="translated">以下は同じクエリで、JSON出力のフォーマットを指定したものです。</target>
        </trans-unit>
        <trans-unit id="a12bd1a7adf1cd80938f005fb42c32962ebef7a7" translate="yes" xml:space="preserve">
          <source>Here is the same search+bind configuration written as a URL:</source>
          <target state="translated">ここでは、同じ検索+バインドの設定をURLとして記述しています。</target>
        </trans-unit>
        <trans-unit id="841d1a406c85c774b7e74eabd4886bcaf8000efc" translate="yes" xml:space="preserve">
          <source>Here it can be seen that column 1 (zip code) fully determines column 5 (city) so the coefficient is 1.0, while city only determines zip code about 42% of the time, meaning that there are many cities (58%) that are represented by more than a single ZIP code.</source>
          <target state="translated">ここでは、1列目(郵便番号)が5列目(都市)を完全に決定しているので、係数は1.0であるのに対し、都市は42%程度しか郵便番号を決定しておらず、1つ以上の郵便番号で表される都市が多い(58%)ことがわかります。</target>
        </trans-unit>
        <trans-unit id="0ae0c10bf978a8e41d20283c701cce10abe5e998" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;$1&lt;/code&gt; references the value of the first function argument whenever the function is invoked.</source>
          <target state="translated">ここで、 &lt;code&gt;$1&lt;/code&gt; は、関数が呼び出されるたびに、最初の関数引数の値を参照します。</target>
        </trans-unit>
        <trans-unit id="e24bb102552ef59f6370ebf0e5c3297d839673d3" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;ONLY&lt;/code&gt; before &lt;code&gt;cities&lt;/code&gt; indicates that the query should be run over only the &lt;code&gt;cities&lt;/code&gt; table, and not tables below &lt;code&gt;cities&lt;/code&gt; in the inheritance hierarchy. Many of the commands that we have already discussed &amp;mdash; &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; &amp;mdash; support this &lt;code&gt;ONLY&lt;/code&gt; notation.</source>
          <target state="translated">ここで、 &lt;code&gt;cities&lt;/code&gt; 前 &lt;code&gt;ONLY&lt;/code&gt; は、クエリが &lt;code&gt;cities&lt;/code&gt; テーブルのみで実行され、継承階層の &lt;code&gt;cities&lt;/code&gt; 下のテーブルでは実行されないことを示しています。これまでに説明したコマンドの多く（ &lt;code&gt;SELECT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt; 、および &lt;code&gt;DELETE&lt;/code&gt; )は、この表記 &lt;code&gt;ONLY&lt;/code&gt; サポートしています。</target>
        </trans-unit>
        <trans-unit id="c60ac8b55debcc4cd6f35118bfe06a2acf106ceb" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;ONLY&lt;/code&gt; keyword indicates that the query should apply only to &lt;code&gt;cities&lt;/code&gt;, and not any tables below &lt;code&gt;cities&lt;/code&gt; in the inheritance hierarchy. Many of the commands that we have already discussed &amp;mdash; &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; &amp;mdash; support the &lt;code&gt;ONLY&lt;/code&gt; keyword.</source>
          <target state="translated">ここで &lt;code&gt;ONLY&lt;/code&gt; キーワードは、クエリが &lt;code&gt;cities&lt;/code&gt; のみに適用され、継承階層内の &lt;code&gt;cities&lt;/code&gt; 下のテーブルには適用されないことを示します。これまでに説明したコマンドの多く（ &lt;code&gt;SELECT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt; 、および &lt;code&gt;DELETE&lt;/code&gt; )は、 &lt;code&gt;ONLY&lt;/code&gt; キーワードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="180331b7141355384ecd89f79e056920df2b9440" translate="yes" xml:space="preserve">
          <source>Here the first field is a non-NULL empty string, the third is NULL.</source>
          <target state="translated">ここでは、最初のフィールドはNULLではない空の文字列で、3番目のフィールドはNULLです。</target>
        </trans-unit>
        <trans-unit id="5f5c637c8dd6f2e0bc8a363ff5737852d1e4d516" translate="yes" xml:space="preserve">
          <source>Here the planner has decided to use a two-step plan: the child plan node visits an index to find the locations of rows matching the index condition, and then the upper plan node actually fetches those rows from the table itself. Fetching rows separately is much more expensive than reading them sequentially, but because not all the pages of the table have to be visited, this is still cheaper than a sequential scan. (The reason for using two plan levels is that the upper plan node sorts the row locations identified by the index into physical order before reading them, to minimize the cost of separate fetches. The &amp;ldquo;bitmap&amp;rdquo; mentioned in the node names is the mechanism that does the sorting.)</source>
          <target state="translated">ここで、プランナは2段階のプランを使用することを決定しました。子プランノードはインデックスにアクセスして、インデックス条件に一致する行の場所を見つけ、次に上位プランノードが実際にそれらの行をテーブル自体からフェッチします。行を個別にフェッチすることは、それらを順次読み取るよりもはるかにコストがかかりますが、テーブルのすべてのページにアクセスする必要がないため、これは順次スキャンよりも安価です。 （2つのプランレベルを使用する理由は、上位プランノードが、インデックスによって識別される行の場所を読み取る前に物理的な順序にソートして、個別のフェッチのコストを最小限に抑えるためです。ノード名で言及されている「ビットマップ」は、ソートを行います。）</target>
        </trans-unit>
        <trans-unit id="09e8656c67ee501e993f2cabda72b9c29cefa0ac" translate="yes" xml:space="preserve">
          <source>Here the query's IP address is covered by the partial index. The following query cannot use the partial index, as it uses an IP address that is excluded from the index:</source>
          <target state="translated">ここでは、クエリのIPアドレスは部分インデックスによってカバーされています。次のクエリは、インデックスから除外されたIPアドレスを使用しているため、部分インデックスを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="2ec31c843165653bc80fe695cd716d3b9ef2fc60" translate="yes" xml:space="preserve">
          <source>Here the sum is taken from the first (lowest) salary up through the current one, including any duplicates of the current one (notice the results for the duplicated salaries).</source>
          <target state="translated">ここでは、現在のものと重複するものも含めて、最初の(最低の)給料から現在のものまでの合計を取っています(重複する給料の結果に注意してください)。</target>
        </trans-unit>
        <trans-unit id="537366727b0a957f32d32f1d223a0385ada41099" translate="yes" xml:space="preserve">
          <source>Here the system has implicitly resolved the unknown-type literal as type &lt;code&gt;float8&lt;/code&gt; before applying the chosen operator. We can verify that &lt;code&gt;float8&lt;/code&gt; and not some other type was used:</source>
          <target state="translated">ここでは、選択された演算子を適用する前に、未知のタイプのリテラルがタイプ &lt;code&gt;float8&lt;/code&gt; として暗黙的に解決されています。他のタイプではなく &lt;code&gt;float8&lt;/code&gt; が使用されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="cf1e98ca0f0c927b9d08ba4561b2098f2af147e3" translate="yes" xml:space="preserve">
          <source>Here we can see that &lt;code&gt;tenk1&lt;/code&gt; contains 10000 rows, as do its indexes, but the indexes are (unsurprisingly) much smaller than the table.</source>
          <target state="translated">ここで、 &lt;code&gt;tenk1&lt;/code&gt; にはそのインデックスと同様に10000行が含まれていますが、インデックスは（当然のことながら）テーブルよりもはるかに小さいことがわかります。</target>
        </trans-unit>
        <trans-unit id="d0eab29aaf89686f1fe2e4313a3e207759c193e4" translate="yes" xml:space="preserve">
          <source>Here we can see that the index returned one candidate row, which was then rejected by a recheck of the index condition. This happens because a GiST index is &amp;ldquo;lossy&amp;rdquo; for polygon containment tests: it actually returns the rows with polygons that overlap the target, and then we have to do the exact containment test on those rows.</source>
          <target state="translated">ここで、インデックスが1つの候補行を返し、その後、インデックス条件の再チェックによって拒否されたことがわかります。これは、GiSTインデックスがポリゴンの包含テストで「不可逆」であるために発生します。実際には、ターゲットと重なるポリゴンを含む行を返し、それらの行に対して正確な包含テストを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d135a143a8ec460162e891ace4cc0562f7f0ea6" translate="yes" xml:space="preserve">
          <source>Here we give a short overview of the stages a query has to pass in order to obtain a result.</source>
          <target state="translated">ここでは、結果を得るためにクエリが通過しなければならない段階の概要を簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="bcbe633ffbd28597ca13c601e922e114369f31f0" translate="yes" xml:space="preserve">
          <source>Here we have relabeled the weather table as &lt;code&gt;W1&lt;/code&gt; and &lt;code&gt;W2&lt;/code&gt; to be able to distinguish the left and right side of the join. You can also use these kinds of aliases in other queries to save some typing, e.g.:</source>
          <target state="translated">ここでは、結合の左側と右側を区別できるように、天気表のラベルを &lt;code&gt;W1&lt;/code&gt; と &lt;code&gt;W2&lt;/code&gt; に変更しました。他のクエリでこれらの種類のエイリアスを使用して、いくつかの入力を節約することもできます。例：</target>
        </trans-unit>
        <trans-unit id="42307deb2832e0c7af756f3107b84bf8b2ea8057" translate="yes" xml:space="preserve">
          <source>Here we have used &lt;code&gt;setweight&lt;/code&gt; to label the source of each lexeme in the finished &lt;code&gt;tsvector&lt;/code&gt;, and then merged the labeled &lt;code&gt;tsvector&lt;/code&gt; values using the &lt;code&gt;tsvector&lt;/code&gt; concatenation operator &lt;code&gt;||&lt;/code&gt;. (&lt;a href=&quot;textsearch-features#TEXTSEARCH-MANIPULATE-TSVECTOR&quot;&gt;Section 12.4.1&lt;/a&gt; gives details about these operations.)</source>
          <target state="translated">ここでは、 &lt;code&gt;setweight&lt;/code&gt; を使用して、完成した &lt;code&gt;tsvector&lt;/code&gt; の各語彙素のソースにラベルを付け、次に &lt;code&gt;tsvector&lt;/code&gt; 連結演算子を使用してラベル付けされた &lt;code&gt;tsvector&lt;/code&gt; 値をマージしました &lt;code&gt;||&lt;/code&gt; 。（&lt;a href=&quot;textsearch-features#TEXTSEARCH-MANIPULATE-TSVECTOR&quot;&gt;12.4.1項に&lt;/a&gt;、これらの操作の詳細を示します。）</target>
        </trans-unit>
        <trans-unit id="ebe0ff0a0f834e90a6235b06460f658da331e569" translate="yes" xml:space="preserve">
          <source>Here's a simple example of usage:</source>
          <target state="translated">簡単な使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="a00d1ad8972f6aee9ca962b7dd2f9cc873a842a4" translate="yes" xml:space="preserve">
          <source>Here's an annotated example of &lt;code&gt;lquery&lt;/code&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;lquery&lt;/code&gt; の注釈付きの例を示します。</target>
        </trans-unit>
        <trans-unit id="d49be83bb6ef95a34484a28f1063c126af2cd0f3" translate="yes" xml:space="preserve">
          <source>Here's an example &lt;code&gt;ltxtquery&lt;/code&gt;:</source>
          <target state="translated">次に &lt;code&gt;ltxtquery&lt;/code&gt; の例を示します。</target>
        </trans-unit>
        <trans-unit id="48493c355bde53a50b460fe64d3981e1bf2c28dd" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;DictFile&lt;/code&gt;, &lt;code&gt;AffFile&lt;/code&gt;, and &lt;code&gt;StopWords&lt;/code&gt; specify the base names of the dictionary, affixes, and stop-words files. The stop-words file has the same format explained above for the &lt;code&gt;simple&lt;/code&gt; dictionary type. The format of the other files is not specified here but is available from the above-mentioned web sites.</source>
          <target state="translated">ここで、 &lt;code&gt;DictFile&lt;/code&gt; 、 &lt;code&gt;AffFile&lt;/code&gt; 、および &lt;code&gt;StopWords&lt;/code&gt; は、辞書、接辞、およびストップワードファイルのベース名を指定します。ストップワードファイルは、 &lt;code&gt;simple&lt;/code&gt; 辞書タイプについて上記で説明したものと同じ形式です。他のファイルの形式はここでは指定されていませんが、上記のWebサイトから入手できます。</target>
        </trans-unit>
        <trans-unit id="a15f0741ab9f0607b3961ed00005a1407be190df" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;db_column:update&lt;/code&gt; will be checked for &lt;code&gt;t1.x&lt;/code&gt;, since it is being updated, &lt;code&gt;db_column:{select update}&lt;/code&gt; will be checked for &lt;code&gt;t1.y&lt;/code&gt;, since it is both updated and referenced, and &lt;code&gt;db_column:select&lt;/code&gt; will be checked for &lt;code&gt;t1.z&lt;/code&gt;, since it is only referenced. &lt;code&gt;db_table:{select update}&lt;/code&gt; will also be checked at the table level.</source>
          <target state="translated">ここで、 &lt;code&gt;db_column:update&lt;/code&gt; チェックされます &lt;code&gt;t1.x&lt;/code&gt; それは、更新されているため、 &lt;code&gt;db_column:{select update}&lt;/code&gt; をチェックする &lt;code&gt;t1.y&lt;/code&gt; それは両方の更新と参照されているため、および &lt;code&gt;db_column:select&lt;/code&gt; するためにチェックされる &lt;code&gt;t1.z&lt;/code&gt; は参照されるだけなので。 &lt;code&gt;db_table:{select update}&lt;/code&gt; もテーブルレベルでチェックされます。</target>
        </trans-unit>
        <trans-unit id="94323f34e2769fd6d8140ecf86916e1a4ffa6df9" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;english&lt;/code&gt; is the base name of a file of stop words. The file's full name will be &lt;code&gt;$SHAREDIR/tsearch_data/english.stop&lt;/code&gt;, where &lt;code&gt;$SHAREDIR&lt;/code&gt; means the PostgreSQL installation's shared-data directory, often &lt;code&gt;/usr/local/share/postgresql&lt;/code&gt; (use &lt;code&gt;pg_config --sharedir&lt;/code&gt; to determine it if you're not sure). The file format is simply a list of words, one per line. Blank lines and trailing spaces are ignored, and upper case is folded to lower case, but no other processing is done on the file contents.</source>
          <target state="translated">ここで、 &lt;code&gt;english&lt;/code&gt; はストップワードのファイルのベース名です。ファイルのフルネームは次のようになります &lt;code&gt;$SHAREDIR/tsearch_data/english.stop&lt;/code&gt; ところ、 &lt;code&gt;$SHAREDIR&lt;/code&gt; 、多くの場合、PostgreSQLのインストールの共有データディレクトリを意味 &lt;code&gt;/usr/local/share/postgresql&lt;/code&gt; （使用 &lt;code&gt;pg_config --sharedir&lt;/code&gt; あなたがいないのであれば、それを決定します承知しました）。ファイル形式は、1行に1つの単語のリストです。空白行と末尾のスペースは無視され、大文字は小文字に変換されますが、ファイルの内容に対して他の処理は行われません。</target>
        </trans-unit>
        <trans-unit id="1c3b85c63ac80bdd86554daac13d878a06c56b22" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;expression&lt;/code&gt; represents any value expression that does not itself contain window function calls.</source>
          <target state="translated">ここで、 &lt;code&gt;expression&lt;/code&gt; は、それ自体がウィンドウ関数呼び出しを含まない任意の値式を表します。</target>
        </trans-unit>
        <trans-unit id="b22882051bae4c80aed43f53d018119709936657" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;key&lt;/code&gt; is an element in the index and &lt;code&gt;query&lt;/code&gt; the value being looked up in the index. The &lt;code&gt;StrategyNumber&lt;/code&gt; parameter indicates which operator of your operator class is being applied &amp;mdash; it matches one of the operator numbers in the &lt;code&gt;CREATE OPERATOR CLASS&lt;/code&gt; command.</source>
          <target state="translated">ここで、 &lt;code&gt;key&lt;/code&gt; はインデックスの要素であり、インデックスで &lt;code&gt;query&lt;/code&gt; いる値をクエリします。 &lt;code&gt;StrategyNumber&lt;/code&gt; のパラメータが適用されているあなたの演算子クラスのどのオペレータを示している-それはでオペレータ番号のいずれかに一致する &lt;code&gt;CREATE OPERATOR CLASS&lt;/code&gt; のコマンド。</target>
        </trans-unit>
        <trans-unit id="f689631caa32c4a22198886b0f15d59af75c4c1d" translate="yes" xml:space="preserve">
          <source>Here, all the input punctuation was discarded as being space symbols.</source>
          <target state="translated">ここでは、入力された句読点はすべてスペース記号として破棄されました。</target>
        </trans-unit>
        <trans-unit id="0ca2ace43c2caf64cad6ca5ff508187ff18cbed2" translate="yes" xml:space="preserve">
          <source>Here, all the input punctuation was discarded.</source>
          <target state="translated">ここでは、入力された句読点はすべて破棄されました。</target>
        </trans-unit>
        <trans-unit id="c2bea9418baff2dab8ad2f535eead313521a74b5" translate="yes" xml:space="preserve">
          <source>Here, condition has a format similar to the format of regular expressions. It can use groupings &lt;code&gt;[...]&lt;/code&gt; and &lt;code&gt;[^...]&lt;/code&gt;. For example, &lt;code&gt;[AEIOU]Y&lt;/code&gt; means that the last letter of the word is &lt;code&gt;&quot;y&quot;&lt;/code&gt; and the penultimate letter is &lt;code&gt;&quot;a&quot;&lt;/code&gt;, &lt;code&gt;&quot;e&quot;&lt;/code&gt;, &lt;code&gt;&quot;i&quot;&lt;/code&gt;, &lt;code&gt;&quot;o&quot;&lt;/code&gt; or &lt;code&gt;&quot;u&quot;&lt;/code&gt;. &lt;code&gt;[^EY]&lt;/code&gt; means that the last letter is neither &lt;code&gt;&quot;e&quot;&lt;/code&gt; nor &lt;code&gt;&quot;y&quot;&lt;/code&gt;.</source>
          <target state="translated">ここで、条件の形式は正規表現の形式に似ています。グループ化 &lt;code&gt;[...]&lt;/code&gt; および &lt;code&gt;[^...]&lt;/code&gt; を使用できます。たとえば、 &lt;code&gt;[AEIOU]Y&lt;/code&gt; は、単語の最後の文字が &lt;code&gt;&quot;y&quot;&lt;/code&gt; で、最後から2番目の文字が &lt;code&gt;&quot;a&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;e&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;i&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;o&quot;&lt;/code&gt; または &lt;code&gt;&quot;u&quot;&lt;/code&gt; 意味します。 &lt;code&gt;[^EY]&lt;/code&gt; は、最後の文字が &lt;code&gt;&quot;e&quot;&lt;/code&gt; でも &lt;code&gt;&quot;y&quot;&lt;/code&gt; でもないことを意味します。</target>
        </trans-unit>
        <trans-unit id="00e7b43ee7c6b641274238949f463079d5bbf579" translate="yes" xml:space="preserve">
          <source>Here, materialization of the &lt;code&gt;WITH&lt;/code&gt; query ensures that &lt;code&gt;very_expensive_function&lt;/code&gt; is evaluated only once per table row, not twice.</source>
          <target state="translated">ここでは、 &lt;code&gt;WITH&lt;/code&gt; クエリの具体化により、 &lt;code&gt;very_expensive_function&lt;/code&gt; がテーブル行ごとに1回だけ評価され、2回評価されることはありません。</target>
        </trans-unit>
        <trans-unit id="eadb56d6708463f3d868c5af1a2244c7c4a3fed2" translate="yes" xml:space="preserve">
          <source>Here, since type &lt;code&gt;real&lt;/code&gt; cannot be implicitly cast to &lt;code&gt;integer&lt;/code&gt;, but &lt;code&gt;integer&lt;/code&gt; can be implicitly cast to &lt;code&gt;real&lt;/code&gt;, the union result type is resolved as &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="translated">ここでは、 &lt;code&gt;real&lt;/code&gt; 型を暗黙的に &lt;code&gt;integer&lt;/code&gt; にキャストすることはできませんが、 &lt;code&gt;integer&lt;/code&gt; を暗黙的に &lt;code&gt;real&lt;/code&gt; にキャストできるため、union結果型は &lt;code&gt;real&lt;/code&gt; として解決されます。</target>
        </trans-unit>
        <trans-unit id="5f0dca8cee0ac9d29f980481c680637be6b839c3" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;grouping&lt;/code&gt; value &lt;code&gt;0&lt;/code&gt; in the first four rows shows that those have been grouped normally, over both the grouping columns. The value &lt;code&gt;1&lt;/code&gt; indicates that &lt;code&gt;model&lt;/code&gt; was not grouped by in the next-to-last two rows, and the value &lt;code&gt;3&lt;/code&gt; indicates that neither &lt;code&gt;make&lt;/code&gt; nor &lt;code&gt;model&lt;/code&gt; was grouped by in the last row (which therefore is an aggregate over all the input rows).</source>
          <target state="translated">ここで、最初の4行の &lt;code&gt;grouping&lt;/code&gt; 値 &lt;code&gt;0&lt;/code&gt; は、両方のグループ化列で、それらが正常にグループ化されていることを示しています。値 &lt;code&gt;1&lt;/code&gt; は、 &lt;code&gt;model&lt;/code&gt; が最後から2番目の行でグループ化されていない &lt;code&gt;make&lt;/code&gt; 示し、値 &lt;code&gt;3&lt;/code&gt; は、makeも &lt;code&gt;model&lt;/code&gt; も最後の行でグループ化されていないことを示します（したがって、すべての入力行の集計です）。</target>
        </trans-unit>
        <trans-unit id="cfec33c2243bfacb00b180b26c912c2de7a8aad2" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;uppercase&lt;/code&gt; parameter is omitted, so it receives its default value of &lt;code&gt;false&lt;/code&gt;, resulting in lower case output. In positional notation, arguments can be omitted from right to left so long as they have defaults.</source>
          <target state="translated">ここでは、 &lt;code&gt;uppercase&lt;/code&gt; パラメーターが省略されているため、デフォルト値の &lt;code&gt;false&lt;/code&gt; を受け取り、小文字で出力されます。位置表記では、デフォルトがある限り、引数は右から左に省略できます。</target>
        </trans-unit>
        <trans-unit id="c823dd873535ad7ccdb6e068431505db91bdcea6" translate="yes" xml:space="preserve">
          <source>Here, the planner has chosen to use a hash join, in which rows of one table are entered into an in-memory hash table, after which the other table is scanned and the hash table is probed for matches to each row. Again note how the indentation reflects the plan structure: the bitmap scan on &lt;code&gt;tenk1&lt;/code&gt; is the input to the Hash node, which constructs the hash table. That's then returned to the Hash Join node, which reads rows from its outer child plan and searches the hash table for each one.</source>
          <target state="translated">ここでは、プランナはハッシュ結合を使用することを選択しました。この場合、1つのテーブルの行がメモリ内のハッシュテーブルに入力され、その後、他のテーブルがスキャンされ、ハッシュテーブルが各行との一致を調べられます。ここでも、インデントがプランの構造を反映していることに注意してください &lt;code&gt;tenk1&lt;/code&gt; のビットマップスキャンは、ハッシュテーブルへの入力であるHashノードへの入力です。次に、ハッシュ結合ノードに返されます。このノードは、外部の子プランから行を読み取り、ハッシュテーブルから各行を検索します。</target>
        </trans-unit>
        <trans-unit id="5850a821f06c0b2f442ebe11558a575852c8aeb5" translate="yes" xml:space="preserve">
          <source>Here, the sequence &lt;code&gt;$q$[\t\r\n\v\\]$q$&lt;/code&gt; represents a dollar-quoted literal string &lt;code&gt;[\t\r\n\v\\]&lt;/code&gt;, which will be recognized when the function body is executed by PostgreSQL. But since the sequence does not match the outer dollar quoting delimiter &lt;code&gt;$function$&lt;/code&gt;, it is just some more characters within the constant so far as the outer string is concerned.</source>
          <target state="translated">ここで、シーケンス &lt;code&gt;$q$[\t\r\n\v\\]$q$&lt;/code&gt; は、ドルで引用されたリテラル文字列 &lt;code&gt;[\t\r\n\v\\]&lt;/code&gt; を表します。これは、関数本体がPostgreSQLによって実行されます。ただし、シーケンスは外側のドル引用符区切り文字 &lt;code&gt;$function$&lt;/code&gt; と一致しないため、外側の文字列に関する限り、定数内の文字が少しだけ増えます。</target>
        </trans-unit>
        <trans-unit id="e42cf0e074b0fa8e95e14f4ebb3e1b606554ddda" translate="yes" xml:space="preserve">
          <source>Here, the unknown-type literal &lt;code&gt;'b'&lt;/code&gt; will be resolved to type &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">ここでは、不明なタイプのリテラル &lt;code&gt;'b'&lt;/code&gt; はタイプ &lt;code&gt;text&lt;/code&gt; に解決されます。</target>
        </trans-unit>
        <trans-unit id="a1e31a79ba26a76d28a87c7ed0407b897f88b5e6" translate="yes" xml:space="preserve">
          <source>Here:</source>
          <target state="translated">Here:</target>
        </trans-unit>
        <trans-unit id="6789cbae03419b1c1cfba25dda2b2a3e23e7e4c6" translate="yes" xml:space="preserve">
          <source>Hex Representation</source>
          <target state="translated">16進数表現</target>
        </trans-unit>
        <trans-unit id="120e75d0d27169271eff5b30f1995d939cf69223" translate="yes" xml:space="preserve">
          <source>Hexadecimal digits are &lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;A&lt;/code&gt;-&lt;code&gt;F&lt;/code&gt;. Octal digits are &lt;code&gt;0&lt;/code&gt;-&lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">16進数は、 &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; 、- &lt;code&gt;f&lt;/code&gt; 、および &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;F&lt;/code&gt; 。8進数は、 &lt;code&gt;0&lt;/code&gt; を - &lt;code&gt;7&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffcadc3bbf92f4882971ddc3bc8286e63dfa62c0" translate="yes" xml:space="preserve">
          <source>High Availability</source>
          <target state="translated">高可用性</target>
        </trans-unit>
        <trans-unit id="946223b4ede05fe838dc846e6faf0a89f88f0e1d" translate="yes" xml:space="preserve">
          <source>High Value</source>
          <target state="translated">高価値</target>
        </trans-unit>
        <trans-unit id="c23ab61c10027c96a9184ffc34b5fb7aecf016a1" translate="yes" xml:space="preserve">
          <source>Historically this module depended on the OSSP UUID library, which accounts for the module's name. While the OSSP UUID library can still be found at &lt;a href=&quot;http://www.ossp.org/pkg/lib/uuid/&quot;&gt;http://www.ossp.org/pkg/lib/uuid/&lt;/a&gt;, it is not well maintained, and is becoming increasingly difficult to port to newer platforms. &lt;code&gt;uuid-ossp&lt;/code&gt; can now be built without the OSSP library on some platforms. On FreeBSD, NetBSD, and some other BSD-derived platforms, suitable UUID creation functions are included in the core &lt;code&gt;libc&lt;/code&gt; library. On Linux, macOS, and some other platforms, suitable functions are provided in the &lt;code&gt;libuuid&lt;/code&gt; library, which originally came from the &lt;code&gt;e2fsprogs&lt;/code&gt; project (though on modern Linux it is considered part of &lt;code&gt;util-linux-ng&lt;/code&gt;). When invoking &lt;code&gt;configure&lt;/code&gt;, specify &lt;code&gt;--with-uuid=bsd&lt;/code&gt; to use the BSD functions, or &lt;code&gt;--with-uuid=e2fs&lt;/code&gt; to use &lt;code&gt;e2fsprogs&lt;/code&gt;' &lt;code&gt;libuuid&lt;/code&gt;, or &lt;code&gt;--with-uuid=ossp&lt;/code&gt; to use the OSSP UUID library. More than one of these libraries might be available on a particular machine, so &lt;code&gt;configure&lt;/code&gt; does not automatically choose one.</source>
          <target state="translated">歴史的にこのモジュールは、モジュールの名前を説明するOSSP UUIDライブラリに依存していました。 OSSP UUIDライブラリはまだ&lt;a href=&quot;http://www.ossp.org/pkg/lib/uuid/&quot;&gt;http://www.ossp.org/pkg/lib/uuid/にありますが&lt;/a&gt;、十分にメンテナンスされておらず、新しいプラットフォームへの移植がますます難しくなっています。一部のプラットフォームでは、 &lt;code&gt;uuid-ossp&lt;/code&gt; をOSSPライブラリなしでビルドできるようになりました。 FreeBSD、NetBSD、およびその他のBSD派生プラットフォームでは、適切なUUID作成関数がコア &lt;code&gt;libc&lt;/code&gt; ライブラリに含まれています。 Linux、macOS、およびその他の一部のプラットフォームでは、適切な関数が &lt;code&gt;libuuid&lt;/code&gt; ライブラリで提供されます。これは、もともと &lt;code&gt;e2fsprogs&lt;/code&gt; プロジェクトからのものです（ただし、最近のLinuxでは &lt;code&gt;util-linux-ng&lt;/code&gt; の一部と見なされています））。呼び出すとき &lt;code&gt;configure&lt;/code&gt; 、指定 &lt;code&gt;--with-uuid=bsd&lt;/code&gt; 、BSD関数を使用するか、 &lt;code&gt;--with-uuid=e2fs&lt;/code&gt; 使用する &lt;code&gt;e2fsprogs&lt;/code&gt; の「 &lt;code&gt;libuuid&lt;/code&gt; 、または &lt;code&gt;--with-uuid=ossp&lt;/code&gt; OSSP UUIDライブラリを使用します。特定のマシンでこれらのライブラリが複数利用できる可能性があるため、 &lt;code&gt;configure&lt;/code&gt; が自動的に選択することはありません。</target>
        </trans-unit>
        <trans-unit id="b5584bf16896f3c913b27677d773698adc908eae" translate="yes" xml:space="preserve">
          <source>History of Units</source>
          <target state="translated">ユニットの歴史</target>
        </trans-unit>
        <trans-unit id="70f8bb9a8a5393ef080507a89e4b98d139000d65" translate="yes" xml:space="preserve">
          <source>Home</source>
          <target state="translated">Home</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="7e3d4d69eb95f3292122a5fea9416ed4cba36be3" translate="yes" xml:space="preserve">
          <source>Host name of the connected client, as reported by a reverse DNS lookup of &lt;code&gt;client_addr&lt;/code&gt;. This field will only be non-null for IP connections, and only when &lt;a href=&quot;runtime-config-logging#GUC-LOG-HOSTNAME&quot;&gt;log_hostname&lt;/a&gt; is enabled.</source>
          <target state="translated">接続されたクライアントのホスト名 &lt;code&gt;client_addr&lt;/code&gt; DNS逆引き参照で報告されます。このフィールドは、IP接続の場合、および&lt;a href=&quot;runtime-config-logging#GUC-LOG-HOSTNAME&quot;&gt;log_hostname&lt;/a&gt;が有効になっている場合にのみnull以外になります。</target>
        </trans-unit>
        <trans-unit id="67b082e00139eb65670882e9969e878f533f20b1" translate="yes" xml:space="preserve">
          <source>Host name or IP address, or one of &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;samehost&lt;/code&gt;, or &lt;code&gt;samenet&lt;/code&gt;, or null for local connections</source>
          <target state="translated">ホスト名またはIPアドレス、または &lt;code&gt;all&lt;/code&gt; 、 &lt;code&gt;samehost&lt;/code&gt; 、または &lt;code&gt;samenet&lt;/code&gt; のいずれか、またはローカル接続の場合はnull</target>
        </trans-unit>
        <trans-unit id="3acb05d9b4db45ddd95be7a72351a5560907bba2" translate="yes" xml:space="preserve">
          <source>Host of the PostgreSQL instance this WAL receiver is connected to. This can be a host name, an IP address, or a directory path if the connection is via Unix socket. (The path case can be distinguished because it will always be an absolute path, beginning with &lt;code&gt;/&lt;/code&gt;.)</source>
          <target state="translated">このWALレシーバーが接続されているPostgreSQLインスタンスのホスト。これは、ホスト名、IPアドレス、または接続がUnixソケット経由の場合はディレクトリパスにすることができます。（パスの大文字小文字は常に &lt;code&gt;/&lt;/code&gt; で始まる絶対パスであるため区別できます。）</target>
        </trans-unit>
        <trans-unit id="e716495d010a3dcebf55c7c74d98bdb385a76508" translate="yes" xml:space="preserve">
          <source>Host-Based Authentication</source>
          <target state="translated">ホストベース認証</target>
        </trans-unit>
        <trans-unit id="cc53b246d6c96fb218922a66ec6b6ca310bf3021" translate="yes" xml:space="preserve">
          <source>Hot Standby</source>
          <target state="translated">ホットスタンバイ</target>
        </trans-unit>
        <trans-unit id="d972243453928257bff4b6354fce98c1493ba542" translate="yes" xml:space="preserve">
          <source>Hot Standby feedback propagates upstream, whatever the cascaded arrangement.</source>
          <target state="translated">ホットスタンバイフィードバックは、カスケード配置がどのようなものであっても上流に伝搬します。</target>
        </trans-unit>
        <trans-unit id="5091beeb3be00f483925a2bb31c058bfcaaaeb31" translate="yes" xml:space="preserve">
          <source>Hot Standby is the term used to describe the ability to connect to the server and run read-only queries while the server is in archive recovery or standby mode. This is useful both for replication purposes and for restoring a backup to a desired state with great precision. The term Hot Standby also refers to the ability of the server to move from recovery through to normal operation while users continue running queries and/or keep their connections open.</source>
          <target state="translated">ホットスタンバイとは、サーバーがアーカイブリカバリーまたはスタンバイモードにある間に、サーバーに接続して読み取り専用のクエリを実行する機能を説明するために使用される用語です。これは、レプリケーションの目的でも、バックアップを希望の状態に高精度で復元する場合にも有用です。ホットスタンバイという用語は、ユーザーがクエリを実行し続けたり、接続を開いたままにしている間に、サーバーがリカバリから通常の操作に移行する能力を意味します。</target>
        </trans-unit>
        <trans-unit id="9e25a34e635a123f8958bbe26e7c4843278597fb" translate="yes" xml:space="preserve">
          <source>Hours</source>
          <target state="translated">Hours</target>
        </trans-unit>
        <trans-unit id="b8d371fd69de846ce0d56ec576287b8268a9b53e" translate="yes" xml:space="preserve">
          <source>How Connections Are Established</source>
          <target state="translated">コネクションの確立方法</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="a41409a5166c5d74bdffdf63899f116578d1e299" translate="yes" xml:space="preserve">
          <source>How Parallel Query Works</source>
          <target state="translated">パラレルクエリの仕組み</target>
        </trans-unit>
        <trans-unit id="7604442ec6b924ac1f168d8f81e9b0b61679f4f6" translate="yes" xml:space="preserve">
          <source>How many concurrent connections can be made to this database. -1 (the default) means no limit.</source>
          <target state="translated">このデータベースへの同時接続数を指定します。-1 (デフォルト)は制限なしを意味します。</target>
        </trans-unit>
        <trans-unit id="d98f671ec6200c3b445e94f09f19857316dd290b" translate="yes" xml:space="preserve">
          <source>How many concurrent connections can be made to this database. -1 means no limit.</source>
          <target state="translated">このデータベースへの同時接続数を指定します。-1 は制限なしを意味します。</target>
        </trans-unit>
        <trans-unit id="e914be45633e81e1b35dd5a5a8544fdfa64c8d17" translate="yes" xml:space="preserve">
          <source>How much to compress. Higher levels compress smaller but are slower. 0 disables compression.</source>
          <target state="translated">どのくらい圧縮するか。レベルが高いほど圧縮量は小さくなりますが、速度は遅くなります。0は圧縮を無効にします。</target>
        </trans-unit>
        <trans-unit id="ef6f180b70cdcd17c60a982706ebbdc6fbb46234" translate="yes" xml:space="preserve">
          <source>How the planner determines the cardinality of &lt;code&gt;tenk1&lt;/code&gt; is covered in &lt;a href=&quot;planner-stats&quot;&gt;Section 14.2&lt;/a&gt;, but is repeated here for completeness. The number of pages and rows is looked up in &lt;code&gt;pg_class&lt;/code&gt;:</source>
          <target state="translated">プランナが &lt;code&gt;tenk1&lt;/code&gt; のカーディナリティを決定する方法については、&lt;a href=&quot;planner-stats&quot;&gt;セクション14.2&lt;/a&gt;で説明していますが、完全を期すためにここで繰り返します。ページと行の数は &lt;code&gt;pg_class&lt;/code&gt; で検索されます。</target>
        </trans-unit>
        <trans-unit id="94ecf8c7f95f01155b7f0495cbc646415e78c1ae" translate="yes" xml:space="preserve">
          <source>How to choose a good password.</source>
          <target state="translated">良いパスワードの選び方。</target>
        </trans-unit>
        <trans-unit id="2ba82223beeb024535e1c4a0ddfd885368b08372" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;jsonb&lt;/code&gt; will preserve trailing fractional zeroes, as seen in this example, even though those are semantically insignificant for purposes such as equality checks.</source>
          <target state="translated">ただし、 &lt;code&gt;jsonb&lt;/code&gt; は、等価チェックなどの目的で意味的に重要ではない場合でも、この例に示すように、後続の小数部のゼロを保持します。</target>
        </trans-unit>
        <trans-unit id="483f78f78539b97c5a6d0e5895b7ea66709bc65e" translate="yes" xml:space="preserve">
          <source>However, a &lt;code&gt;TABLE&lt;/code&gt; function is different from the preceding examples, because it actually returns a &lt;em&gt;set&lt;/em&gt; of records, not just one record.</source>
          <target state="translated">ただし、 &lt;code&gt;TABLE&lt;/code&gt; 関数は、実際には1つのレコードだけでなく、&lt;em&gt;一連&lt;/em&gt;のレコードを返すため、前述の例とは異なります。</target>
        </trans-unit>
        <trans-unit id="5593eb449291b54fa57b6d536402c4a2c8454af7" translate="yes" xml:space="preserve">
          <source>However, a &lt;code&gt;WITH&lt;/code&gt; query can be marked &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; to remove this guarantee. In that case, the &lt;code&gt;WITH&lt;/code&gt; query can be folded into the primary query much as though it were a simple sub-&lt;code&gt;SELECT&lt;/code&gt; in the primary query's &lt;code&gt;FROM&lt;/code&gt; clause. This results in duplicate computations if the primary query refers to that &lt;code&gt;WITH&lt;/code&gt; query more than once; but if each such use requires only a few rows of the &lt;code&gt;WITH&lt;/code&gt; query's total output, &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; can provide a net savings by allowing the queries to be optimized jointly. &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; is ignored if it is attached to a &lt;code&gt;WITH&lt;/code&gt; query that is recursive or is not side-effect-free (i.e., is not a plain &lt;code&gt;SELECT&lt;/code&gt; containing no volatile functions).</source>
          <target state="translated">ただし、 &lt;code&gt;WITH&lt;/code&gt; クエリに &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; のマークを付けて、この保証を削除することができます。その場合、 &lt;code&gt;WITH&lt;/code&gt; クエリは、プライマリクエリの &lt;code&gt;FROM&lt;/code&gt; 句の単純なサブ &lt;code&gt;SELECT&lt;/code&gt; であるかのように、プライマリクエリに組み込むことができます。これにより、プライマリクエリがその &lt;code&gt;WITH&lt;/code&gt; クエリを複数回参照すると、計算が重複します。しかし、そのような使用ごとに &lt;code&gt;WITH&lt;/code&gt; クエリの合計出力の数行のみが必要な場合、 &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; はクエリを一緒に最適化できるようにすることで、実質的な節約を提供できます。 &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; が &lt;code&gt;WITH&lt;/code&gt; にアタッチされている場合は無視されます再帰的または副作用のないクエリ（つまり、揮発性関数を含まない単純な &lt;code&gt;SELECT&lt;/code&gt; ではない）。</target>
        </trans-unit>
        <trans-unit id="b767ca4c454cedd41bdf2ff2cdb11395909dd8d9" translate="yes" xml:space="preserve">
          <source>However, buffering index build needs to call the &lt;code&gt;penalty&lt;/code&gt; function more often, which consumes some extra CPU resources. Also, the buffers used in the buffering build need temporary disk space, up to the size of the resulting index. Buffering can also influence the quality of the resulting index, in both positive and negative directions. That influence depends on various factors, like the distribution of the input data and the operator class implementation.</source>
          <target state="translated">ただし、バッファリングインデックスのビルドでは、 &lt;code&gt;penalty&lt;/code&gt; 関数をより頻繁に呼び出す必要があるため、余分なCPUリソースが消費されます。また、バッファリングビルドで使用されるバッファーには、結果のインデックスのサイズまでの一時的なディスク領域が必要です。バッファリングは、正と負の両方の方向で、結果のインデックスの品質にも影響を与える可能性があります。その影響は、入力データの分布や演算子クラスの実装など、さまざまな要因によって異なります。</target>
        </trans-unit>
        <trans-unit id="9ace55465d56f996227de2d5f96f6d4ae754cfc4" translate="yes" xml:space="preserve">
          <source>However, every year divisible by 100 is not a leap year.</source>
          <target state="translated">しかし、100で割った毎年の年はうるう年ではありません。</target>
        </trans-unit>
        <trans-unit id="792feefacc6fed97444972da0544bbf7d0187b3d" translate="yes" xml:space="preserve">
          <source>However, every year divisible by 400 is a leap year after all.</source>
          <target state="translated">しかし、400で割った年は、結局はうるう年なのです。</target>
        </trans-unit>
        <trans-unit id="7f65ac3c6b4eb7f83cd55133554a3e43236a59b1" translate="yes" xml:space="preserve">
          <source>However, filtered forms in Microsoft Access generate queries that appear to use &lt;code&gt;expr = NULL&lt;/code&gt; to test for null values, so if you use that interface to access the database you might want to turn this option on. Since expressions of the form &lt;code&gt;expr = NULL&lt;/code&gt; always return the null value (using the SQL standard interpretation), they are not very useful and do not appear often in normal applications so this option does little harm in practice. But new users are frequently confused about the semantics of expressions involving null values, so this option is off by default.</source>
          <target state="translated">ただし、Microsoft Accessのフィルターされたフォームは、 &lt;code&gt;expr = NULL&lt;/code&gt; を使用してnull値をテストするように見えるクエリを生成するため、そのインターフェイスを使用してデータベースにアクセスする場合は、このオプションをオンにすることができます。 &lt;code&gt;expr = NULL&lt;/code&gt; の形式の式は常に（SQL標準解釈を使用して）null値を返すため、あまり有用ではなく、通常のアプリケーションではあまり表示されないため、このオプションは実際にはほとんど害を及ぼしません。ただし、新しいユーザーは、null値を含む式のセマンティクスについて混乱することが多いため、このオプションはデフォルトでオフになっています。</target>
        </trans-unit>
        <trans-unit id="27fc16525c2f3eccc5221bef3e492bce51567b8a" translate="yes" xml:space="preserve">
          <source>However, if a &lt;code&gt;WITH&lt;/code&gt; query is non-recursive and side-effect-free (that is, it is a &lt;code&gt;SELECT&lt;/code&gt; containing no volatile functions) then it can be folded into the parent query, allowing joint optimization of the two query levels. By default, this happens if the parent query references the &lt;code&gt;WITH&lt;/code&gt; query just once, but not if it references the &lt;code&gt;WITH&lt;/code&gt; query more than once. You can override that decision by specifying &lt;code&gt;MATERIALIZED&lt;/code&gt; to force separate calculation of the &lt;code&gt;WITH&lt;/code&gt; query, or by specifying &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; to force it to be merged into the parent query. The latter choice risks duplicate computation of the &lt;code&gt;WITH&lt;/code&gt; query, but it can still give a net savings if each usage of the &lt;code&gt;WITH&lt;/code&gt; query needs only a small part of the &lt;code&gt;WITH&lt;/code&gt; query's full output.</source>
          <target state="translated">ただし、 &lt;code&gt;WITH&lt;/code&gt; クエリが再帰的ではなく、副作用がない場合（つまり、揮発性関数を含まない &lt;code&gt;SELECT&lt;/code&gt; の場合）、親クエリに折りたたむことができるため、2つのクエリレベルを同時に最適化できます。デフォルトでは、これは親クエリが &lt;code&gt;WITH&lt;/code&gt; クエリを1回だけ参照する場合に発生しますが、 &lt;code&gt;WITH&lt;/code&gt; クエリを複数回参照する場合には発生しません。 &lt;code&gt;MATERIALIZED&lt;/code&gt; を指定して &lt;code&gt;WITH&lt;/code&gt; クエリの個別の計算を強制するか、 &lt;code&gt;NOT MATERIALIZED&lt;/code&gt; を指定して強制的に親クエリにマージすることにより、その決定を上書きできます。後者の選択は、 &lt;code&gt;WITH&lt;/code&gt; の重複計算のリスクがありますクエリを使用しますが、 &lt;code&gt;WITH&lt;/code&gt; クエリを使用するたびに、 &lt;code&gt;WITH&lt;/code&gt; クエリの完全な出力のごく一部しか必要としない場合は、実質的に節約できます。</target>
        </trans-unit>
        <trans-unit id="057cccafbf2013b3d5aa591e41a10dbea6d97107" translate="yes" xml:space="preserve">
          <source>However, if the default value is volatile (e.g. &lt;code&gt;clock_timestamp()&lt;/code&gt;) each row will need to be updated with the value calculated at the time &lt;code&gt;ALTER TABLE&lt;/code&gt; is executed. To avoid a potentially lengthy update operation, particularly if you intend to fill the column with mostly nondefault values anyway, it may be preferable to add the column with no default, insert the correct values using &lt;code&gt;UPDATE&lt;/code&gt;, and then add any desired default as described below.</source>
          <target state="translated">ただし、デフォルト値が揮発性である場合（例： &lt;code&gt;clock_timestamp()&lt;/code&gt; ）、 &lt;code&gt;ALTER TABLE&lt;/code&gt; の実行時に計算された値で各行を更新する必要があります。特に更新操作が長くなる可能性があるのを避けるために、特に列にほとんどデフォルト以外の値を入力する場合は、デフォルトなしで列を追加し、 &lt;code&gt;UPDATE&lt;/code&gt; を使用して正しい値を挿入してから、以下で説明するように必要なデフォルトを追加することをお勧めします。 。</target>
        </trans-unit>
        <trans-unit id="ad2998ee50884b058602cae8c89653b7c98ab015" translate="yes" xml:space="preserve">
          <source>However, if the default value is volatile (e.g., &lt;code&gt;clock_timestamp()&lt;/code&gt;) each row will need to be updated with the value calculated at the time &lt;code&gt;ALTER TABLE&lt;/code&gt; is executed. To avoid a potentially lengthy update operation, particularly if you intend to fill the column with mostly nondefault values anyway, it may be preferable to add the column with no default, insert the correct values using &lt;code&gt;UPDATE&lt;/code&gt;, and then add any desired default as described below.</source>
          <target state="translated">しかし、デフォルト値が揮発性である場合（例えば、 &lt;code&gt;clock_timestamp()&lt;/code&gt; ）の各行は、一度算出された値で更新される必要が &lt;code&gt;ALTER TABLE&lt;/code&gt; が実行されます。潜在的に長い更新操作を回避するために、特に列にデフォルト以外の値をほとんど入力する場合は、デフォルトなしで列を追加し、 &lt;code&gt;UPDATE&lt;/code&gt; を使用して正しい値を挿入してから、以下に説明するように任意のデフォルトを追加することをお勧めします。 。</target>
        </trans-unit>
        <trans-unit id="fbbfd51a31cdab8f282fc85ab92999c7b1df44cb" translate="yes" xml:space="preserve">
          <source>However, it is not necessary to remove role memberships involving the role; &lt;code&gt;DROP ROLE&lt;/code&gt; automatically revokes any memberships of the target role in other roles, and of other roles in the target role. The other roles are not dropped nor otherwise affected.</source>
          <target state="translated">ただし、役割に関連する役割メンバーシップを削除する必要はありません。 &lt;code&gt;DROP ROLE&lt;/code&gt; は、他のロールのターゲットロールのメンバーシップ、およびターゲットロールのその他のロールのメンバーシップを自動的に取り消します。その他の役割は削除されず、影響も受けません。</target>
        </trans-unit>
        <trans-unit id="f99a4fe30aa35a7291430986cdc65efbff8dd39f" translate="yes" xml:space="preserve">
          <source>However, the above does not account for amortization of index reads across repeated index scans.</source>
          <target state="translated">しかし、上記は、繰り返されるインデックススキャンにまたがるインデックスリードの償却を考慮していない。</target>
        </trans-unit>
        <trans-unit id="8c28ea9e20c2e7864029d4301f424d9903192d30" translate="yes" xml:space="preserve">
          <source>However, the current implementation ignores any supplied array size limits, i.e., the behavior is the same as for arrays of unspecified length.</source>
          <target state="translated">しかし,現在の実装では,指定された配列サイズの制限は無視されます.</target>
        </trans-unit>
        <trans-unit id="e7668db05f29105ac82edf505ab55c50a37483ff" translate="yes" xml:space="preserve">
          <source>However, the first and second calls will prefer more-specific functions, if available:</source>
          <target state="translated">しかし、最初の呼び出しと2回目の呼び出しは、利用可能であれば、より特定の関数を好むでしょう。</target>
        </trans-unit>
        <trans-unit id="8dd49b73a6bd91b9638ef49c19702f4c5cff091d" translate="yes" xml:space="preserve">
          <source>However, the index can also be used in queries that do not involve &lt;code&gt;order_nr&lt;/code&gt; at all, e.g.:</source>
          <target state="translated">ただし、インデックスは、 &lt;code&gt;order_nr&lt;/code&gt; をまったく含まないクエリでも使用できます。例：</target>
        </trans-unit>
        <trans-unit id="a2b5348adbefd43e71711c0de0facb597d742b53" translate="yes" xml:space="preserve">
          <source>However, the index could not be used for queries like the following, because though the operator &lt;code&gt;?&lt;/code&gt; is indexable, it is not applied directly to the indexed column &lt;code&gt;jdoc&lt;/code&gt;:</source>
          <target state="translated">ただし、次のようなクエリにはインデックスを使用できません &lt;code&gt;?&lt;/code&gt; 索引付け可能であり、索引付けされた列 &lt;code&gt;jdoc&lt;/code&gt; に直接適用されません。</target>
        </trans-unit>
        <trans-unit id="30d62ecc57d7df5a78dd582f05557b7fb23c077b" translate="yes" xml:space="preserve">
          <source>However, the second query may give unexpected results if &lt;code&gt;salesmen&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; is not a unique key, whereas the first query is guaranteed to raise an error if there are multiple &lt;code&gt;id&lt;/code&gt; matches. Also, if there is no match for a particular &lt;code&gt;accounts&lt;/code&gt;.&lt;code&gt;sales_id&lt;/code&gt; entry, the first query will set the corresponding name fields to NULL, whereas the second query will not update that row at all.</source>
          <target state="translated">ただし、 &lt;code&gt;salesmen&lt;/code&gt; 場合、2番目のクエリは予期しない結果をもたらす可能性があります。 &lt;code&gt;id&lt;/code&gt; は一意のキーではありませんが、最初のクエリでは、一致する &lt;code&gt;id&lt;/code&gt; が複数ある場合にエラーが発生することが保証されています。また、特定の &lt;code&gt;accounts&lt;/code&gt; 一致するものがない場合。 &lt;code&gt;sales_id&lt;/code&gt; エントリでは、最初のクエリは対応する名前フィールドをNULLに設定しますが、2番目のクエリはその行をまったく更新しません。</target>
        </trans-unit>
        <trans-unit id="ac0aa3ca3aadbd76b33daf42fe2d9f38b7a21341" translate="yes" xml:space="preserve">
          <source>However, this is not recommended. Floating point numbers should not be used to handle money due to the potential for rounding errors.</source>
          <target state="translated">ただし、これはお勧めできません。浮動小数点数は、丸め誤差が生じる可能性があるため、お金の取り扱いには使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e7a5e278e5a670634fe4d0890f09f0f07f287151" translate="yes" xml:space="preserve">
          <source>However, this only works for types whose names are also valid as function names. For example, &lt;code&gt;double precision&lt;/code&gt; cannot be used this way, but the equivalent &lt;code&gt;float8&lt;/code&gt; can. Also, the names &lt;code&gt;interval&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;timestamp&lt;/code&gt; can only be used in this fashion if they are double-quoted, because of syntactic conflicts. Therefore, the use of the function-like cast syntax leads to inconsistencies and should probably be avoided.</source>
          <target state="translated">ただし、これは、名前が関数名としても有効な型に対してのみ機能します。たとえば、 &lt;code&gt;double precision&lt;/code&gt; はこの方法では使用できませんが、同等の &lt;code&gt;float8&lt;/code&gt; では使用できます。また、 &lt;code&gt;interval&lt;/code&gt; 、 &lt;code&gt;time&lt;/code&gt; 、および &lt;code&gt;timestamp&lt;/code&gt; の名前は、構文の競合のために二重引用符で囲まれている場合にのみ、この方法で使用できます。したがって、関数のようなキャスト構文を使用すると矛盾が生じ、おそらく回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="ab41e0a4da3a7de05a4b7068787924b0e3cb154d" translate="yes" xml:space="preserve">
          <source>However, this quickly becomes tedious for large arrays, and is not helpful if the size of the array is unknown. An alternative method is described in &lt;a href=&quot;functions-comparisons&quot;&gt;Section 9.23&lt;/a&gt;. The above query could be replaced by:</source>
          <target state="translated">ただし、これは大きな配列ではすぐに退屈になるため、配列のサイズが不明な場合は役に立ちません。代替方法については、&lt;a href=&quot;functions-comparisons&quot;&gt;セクション9.23で&lt;/a&gt;説明します。上記のクエリは次のように置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="36ec95290f6f5b115ce53145f3f502e1463f93d8" translate="yes" xml:space="preserve">
          <source>However, this quickly becomes tedious for large arrays, and is not helpful if the size of the array is unknown. An alternative method is described in &lt;a href=&quot;functions-comparisons&quot;&gt;Section 9.24&lt;/a&gt;. The above query could be replaced by:</source>
          <target state="translated">ただし、これは大きな配列ではすぐに面倒になり、配列のサイズが不明な場合は役に立ちません。別の方法は&lt;a href=&quot;functions-comparisons&quot;&gt;セクション9.24で&lt;/a&gt;説明されています。上記のクエリは次のように置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="49121f1f7d3b19887ff759c895c872e45fe0450d" translate="yes" xml:space="preserve">
          <source>However, unless a module is specifically designed to be used in this way by non-superusers, this is usually not the right setting to use. Look at &lt;a href=&quot;runtime-config-client#GUC-SESSION-PRELOAD-LIBRARIES&quot;&gt;session_preload_libraries&lt;/a&gt; instead.</source>
          <target state="translated">ただし、モジュールがスーパーユーザー以外のユーザーがこのように使用するように特別に設計されていない限り、これは通常、適切な設定ではありません。代わりに、&lt;a href=&quot;runtime-config-client#GUC-SESSION-PRELOAD-LIBRARIES&quot;&gt;session_preload_libraries&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="f4744bf3a8101c9dd55ef2a04f348b62af8e9994" translate="yes" xml:space="preserve">
          <source>However, while the directory contents are secure, the default client authentication setup allows any local user to connect to the database and even become the database superuser. If you do not trust other local users, we recommend you use one of &lt;code&gt;initdb&lt;/code&gt;'s &lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;--pwprompt&lt;/code&gt; or &lt;code&gt;--pwfile&lt;/code&gt; options to assign a password to the database superuser. Also, specify &lt;code&gt;-A md5&lt;/code&gt; or &lt;code&gt;-A password&lt;/code&gt; so that the default &lt;code&gt;trust&lt;/code&gt; authentication mode is not used; or modify the generated &lt;code&gt;pg_hba.conf&lt;/code&gt; file after running &lt;code&gt;initdb&lt;/code&gt;, but &lt;em&gt;before&lt;/em&gt; you start the server for the first time. (Other reasonable approaches include using &lt;code&gt;peer&lt;/code&gt; authentication or file system permissions to restrict connections. See &lt;a href=&quot;https://www.postgresql.org/docs/12/client-authentication.html&quot;&gt;Chapter 20&lt;/a&gt; for more information.)</source>
          <target state="translated">ただし、ディレクトリの内容は安全ですが、デフォルトのクライアント認証設定では、すべてのローカルユーザーがデータベースに接続して、データベースのスーパーユーザーになることさえできます。あなたが他のローカルユーザを信用しない場合、我々はあなたがのいずれかを使用をお勧めします &lt;code&gt;initdb&lt;/code&gt; のさん &lt;code&gt;-W&lt;/code&gt; 、 &lt;code&gt;--pwprompt&lt;/code&gt; または &lt;code&gt;--pwfile&lt;/code&gt; データベーススーパーユーザにパスワードを割り当てるオプションを。また、デフォルトの &lt;code&gt;trust&lt;/code&gt; 認証モードが使用されないように、 &lt;code&gt;-A md5&lt;/code&gt; または &lt;code&gt;-A password&lt;/code&gt; 指定します。または、生成された &lt;code&gt;pg_hba.conf&lt;/code&gt; ファイルを &lt;code&gt;initdb&lt;/code&gt; の実行後、ただし&lt;em&gt;前に&lt;/em&gt;変更します&lt;em&gt;&lt;/em&gt;初めてサーバーを起動します。（他の合理的なアプローチには、 &lt;code&gt;peer&lt;/code&gt; 認証またはファイルシステムのアクセス許可を使用して接続を制限することが含まれます。詳細は、&lt;a href=&quot;https://www.postgresql.org/docs/12/client-authentication.html&quot;&gt;第20章を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="c256b10902d81d3561c1f226e5f4cb70fe93cebd" translate="yes" xml:space="preserve">
          <source>However, while the directory contents are secure, the default client authentication setup allows any local user to connect to the database and even become the database superuser. If you do not trust other local users, we recommend you use one of &lt;code&gt;initdb&lt;/code&gt;'s &lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;--pwprompt&lt;/code&gt; or &lt;code&gt;--pwfile&lt;/code&gt; options to assign a password to the database superuser. Also, specify &lt;code&gt;-A md5&lt;/code&gt; or &lt;code&gt;-A password&lt;/code&gt; so that the default &lt;code&gt;trust&lt;/code&gt; authentication mode is not used; or modify the generated &lt;code&gt;pg_hba.conf&lt;/code&gt; file after running &lt;code&gt;initdb&lt;/code&gt;, but &lt;em&gt;before&lt;/em&gt; you start the server for the first time. (Other reasonable approaches include using &lt;code&gt;peer&lt;/code&gt; authentication or file system permissions to restrict connections. See &lt;a href=&quot;https://www.postgresql.org/docs/13/client-authentication.html&quot;&gt;Chapter 20&lt;/a&gt; for more information.)</source>
          <target state="translated">ただし、ディレクトリの内容は安全ですが、デフォルトのクライアント認証設定では、すべてのローカルユーザーがデータベースに接続でき、データベースのスーパーユーザーになることもできます。あなたが他のローカルユーザを信用しない場合、我々はあなたがのいずれかを使用をお勧めします &lt;code&gt;initdb&lt;/code&gt; のさん &lt;code&gt;-W&lt;/code&gt; 、 &lt;code&gt;--pwprompt&lt;/code&gt; または &lt;code&gt;--pwfile&lt;/code&gt; データベーススーパーユーザにパスワードを割り当てるオプションを。また、デフォルトの &lt;code&gt;trust&lt;/code&gt; 認証モードが使用されないように、 &lt;code&gt;-A md5&lt;/code&gt; または &lt;code&gt;-A password&lt;/code&gt; 指定します。または、 &lt;code&gt;initdb&lt;/code&gt; を実行した後、&lt;em&gt;前に&lt;/em&gt;生成された &lt;code&gt;pg_hba.conf&lt;/code&gt; ファイルを変更します&lt;em&gt;&lt;/em&gt;サーバーを初めて起動します。（他の合理的なアプローチには、 &lt;code&gt;peer&lt;/code&gt; 認証またはファイルシステムのアクセス許可を使用して接続を制限することが含まれます。詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/13/client-authentication.html&quot;&gt;第20章を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="57ff938f130455fd7c5423b61feb93bb1fcef3bc" translate="yes" xml:space="preserve">
          <source>Huge pages are known as large pages on Windows. To use them, you need to assign the user right Lock Pages in Memory to the Windows user account that runs PostgreSQL. You can use Windows Group Policy tool (gpedit.msc) to assign the user right Lock Pages in Memory. To start the database server on the command prompt as a standalone process, not as a Windows service, the command prompt must be run as an administrator or User Access Control (UAC) must be disabled. When the UAC is enabled, the normal command prompt revokes the user right Lock Pages in Memory when started.</source>
          <target state="translated">巨大なページは、Windows上ではラージページとして知られています。それらを使用するには、PostgreSQLを実行しているWindowsユーザアカウントにユーザ権限のLock Pages in Memoryを割り当てる必要があります。Windowsのグループポリシーツール(gpedit.msc)を使用して、ユーザ権限のLock Pages in Memoryを割り当てることができます。コマンドプロンプトでデータベースサーバをWindowsサービスではなくスタンドアロンプロセスとして起動するには、コマンドプロンプトを管理者として実行するか、ユーザアクセス制御(UAC)を無効にする必要があります。UAC が有効になっている場合、通常のコマンド プロンプトでは、起動時にユーザーの権利である Lock Pages in Memory が取り消されます。</target>
        </trans-unit>
        <trans-unit id="1f8503304967af954a53ebd078e0b78234d12b54" translate="yes" xml:space="preserve">
          <source>Hyperbolic cosine</source>
          <target state="translated">双曲余弦</target>
        </trans-unit>
        <trans-unit id="6cd3a73e406381253718a612b965e023a4f56989" translate="yes" xml:space="preserve">
          <source>Hyperbolic sine</source>
          <target state="translated">双曲正弦波</target>
        </trans-unit>
        <trans-unit id="9197379568d57d2a0451b5bb547d22e3de876985" translate="yes" xml:space="preserve">
          <source>Hyperbolic tangent</source>
          <target state="translated">双曲正接</target>
        </trans-unit>
        <trans-unit id="d8bf3846fb1be35204cb20d765d7076251578e99" translate="yes" xml:space="preserve">
          <source>Hyphenated word part, all ASCII</source>
          <target state="translated">ハイフン付きの単語部分、すべてASCII</target>
        </trans-unit>
        <trans-unit id="8cdd097739f98ad844abd99f2945f21997a9eb1e" translate="yes" xml:space="preserve">
          <source>Hyphenated word part, all letters</source>
          <target state="translated">ハイフンで区切られた単語の部分、すべての文字</target>
        </trans-unit>
        <trans-unit id="e93c4156f46693ca03a7e7a80ab8d3ba346ec445" translate="yes" xml:space="preserve">
          <source>Hyphenated word part, letters and digits</source>
          <target state="translated">ハイフンで区切られた単語の部分、文字と数字</target>
        </trans-unit>
        <trans-unit id="5b3864b1f64d7c5d3d32b1aa431d4fc8168f5866" translate="yes" xml:space="preserve">
          <source>Hyphenated word, all ASCII</source>
          <target state="translated">ハイフン付きワード、すべてASCII</target>
        </trans-unit>
        <trans-unit id="913f77eb20ad8621544651272e4864006cc9a993" translate="yes" xml:space="preserve">
          <source>Hyphenated word, all letters</source>
          <target state="translated">ハイフン付きの単語、すべての文字</target>
        </trans-unit>
        <trans-unit id="f8a2b7bdb3666b53d93dd9a984de988e23d346eb" translate="yes" xml:space="preserve">
          <source>Hyphenated word, letters and digits</source>
          <target state="translated">ハイフン付きの単語、文字、数字</target>
        </trans-unit>
        <trans-unit id="b4d527f11debd0a7c15ff494a4d7c586833b355b" translate="yes" xml:space="preserve">
          <source>I believe this union:</source>
          <target state="translated">私はこの組合を信じています。</target>
        </trans-unit>
        <trans-unit id="778d85fd9d1cf9d0bbf34776934bafa267e37666" translate="yes" xml:space="preserve">
          <source>ICU &amp;ldquo;root&amp;rdquo; collation. Use this to get a reasonable language-agnostic sort order.</source>
          <target state="translated">ICUの「ルート」照合。これを使用して、言語に依存しない合理的なソート順を取得します。</target>
        </trans-unit>
        <trans-unit id="4186bb5b6042e95ce616f6bfea478c30a4a80a0a" translate="yes" xml:space="preserve">
          <source>ICU allows collations to be customized beyond the basic language+country set that is preloaded by &lt;code&gt;initdb&lt;/code&gt;. Users are encouraged to define their own collation objects that make use of these facilities to suit the sorting behavior to their requirements. See &lt;a href=&quot;http://userguide.icu-project.org/locale&quot;&gt;http://userguide.icu-project.org/locale&lt;/a&gt; and &lt;a href=&quot;http://userguide.icu-project.org/collation/api&quot;&gt;http://userguide.icu-project.org/collation/api&lt;/a&gt; for information on ICU locale naming. The set of acceptable names and attributes depends on the particular ICU version.</source>
          <target state="translated">ICUでは、 &lt;code&gt;initdb&lt;/code&gt; によってプリロードされる基本的な言語と国のセットを超えて照合をカスタマイズできます。ユーザーは、これらの機能を利用して独自の照合オブジェクトを定義し、ソート動作を要件に適合させることをお勧めします。ICUロケールの命名については、&lt;a href=&quot;http://userguide.icu-project.org/collation/api&quot;&gt;http&lt;/a&gt;：&lt;a href=&quot;http://userguide.icu-project.org/locale&quot;&gt;//userguide.icu-project.org/locale&lt;/a&gt;およびhttp://userguide.icu-project.org/collat​​ion/apiを参照してください。受け入れ可能な名前と属性のセットは、特定のICUバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="6f538ad1e5ea2537ef4ecc8ee6d246518b569e28" translate="yes" xml:space="preserve">
          <source>ICU?</source>
          <target state="translated">ICU?</target>
        </trans-unit>
        <trans-unit id="85ddc12eb726993ba7496e593b7b33905cb52428" translate="yes" xml:space="preserve">
          <source>ID of a role that has a member</source>
          <target state="translated">メンバーを持つロールのID</target>
        </trans-unit>
        <trans-unit id="5e2534334ba3879c3b535d5349da57994812e977" translate="yes" xml:space="preserve">
          <source>ID of a role that is a member of &lt;code&gt;roleid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;roleid&lt;/code&gt; のメンバーであるロールのID</target>
        </trans-unit>
        <trans-unit id="b3334a0f3355b9fb358c2a763909308ff227db92" translate="yes" xml:space="preserve">
          <source>ID of role</source>
          <target state="translated">役割のID</target>
        </trans-unit>
        <trans-unit id="00ab5d608ce03301bac5fabc168033a98fb8425a" translate="yes" xml:space="preserve">
          <source>ID of the role that granted this membership</source>
          <target state="translated">このメンバーシップを付与したロールのID</target>
        </trans-unit>
        <trans-unit id="4acecf86a885801175aac9f839c4e27dfcd0bb71" translate="yes" xml:space="preserve">
          <source>ID of the transaction targeted by the lock, or null if the target is not a transaction ID</source>
          <target state="translated">ロックの対象となるトランザクションのID、または対象がトランザクションIDでない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="4405588c83fcde9e77a297389a5a77edfc33fd81" translate="yes" xml:space="preserve">
          <source>ID of this group</source>
          <target state="translated">このグループのID</target>
        </trans-unit>
        <trans-unit id="364041630f947c82ae36797d2d8b4d8c51f1090b" translate="yes" xml:space="preserve">
          <source>ID of this user</source>
          <target state="translated">このユーザーのID</target>
        </trans-unit>
        <trans-unit id="efeddb9b2b9bc9d252eb880921c3b8b3f041d65a" translate="yes" xml:space="preserve">
          <source>ID, in the range 1..&lt;code&gt;shared_buffers&lt;/code&gt;</source>
          <target state="translated">ID、1 .. &lt;code&gt;shared_buffers&lt;/code&gt; の範囲</target>
        </trans-unit>
        <trans-unit id="fab9fa5af6726f4fbc7c7dbc87a28acfc40a63e9" translate="yes" xml:space="preserve">
          <source>IEC</source>
          <target state="translated">IEC</target>
        </trans-unit>
        <trans-unit id="91e003cabbbc52544795f505584d809fe4bf1cdc" translate="yes" xml:space="preserve">
          <source>IEEE</source>
          <target state="translated">IEEE</target>
        </trans-unit>
        <trans-unit id="44285b6e9ccd859327d44fd855fe1b27a08233b1" translate="yes" xml:space="preserve">
          <source>IEEE Std 802-2001 specifies the second shown form (with hyphens) as the canonical form for MAC addresses, and specifies the first form (with colons) as the bit-reversed notation, so that 08-00-2b-01-02-03 = 01:00:4D:08:04:0C. This convention is widely ignored nowadays, and it is relevant only for obsolete network protocols (such as Token Ring). PostgreSQL makes no provisions for bit reversal, and all accepted formats use the canonical LSB order.</source>
          <target state="translated">IEEE Std 802-2001では、MACアドレスの正規表現として第2の形式(ハイフン付き)を指定し、ビット反転表記として第1の形式(コロン付き)を指定しているため、08-00-2b-01-02-03=01:00:4D:08:04:0Cとなります。この規約は現在では広く無視されており、時代遅れのネットワークプロトコル(トークンリングなど)にのみ関係しています。PostgreSQLはビット反転の規定を設けておらず、すべての受け入れられている形式は正規のLSB順序を使用します。</target>
        </trans-unit>
        <trans-unit id="c6125697017457f602c07e148a748e8cb804d044" translate="yes" xml:space="preserve">
          <source>IEEE754 specifies that &lt;code&gt;NaN&lt;/code&gt; should not compare equal to any other floating-point value (including &lt;code&gt;NaN&lt;/code&gt;). In order to allow floating-point values to be sorted and used in tree-based indexes, PostgreSQL treats &lt;code&gt;NaN&lt;/code&gt; values as equal, and greater than all non-&lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">IEEE754は、 &lt;code&gt;NaN&lt;/code&gt; が他の浮動小数点値（ &lt;code&gt;NaN&lt;/code&gt; を含む）と比較してはならないことを規定しています。浮動小数点値をソートしてツリーベースのインデックスで使用できるようにするため、PostgreSQLは &lt;code&gt;NaN&lt;/code&gt; 値をすべての非 &lt;code&gt;NaN&lt;/code&gt; 値よりも大きく、等しい値として扱います。</target>
        </trans-unit>
        <trans-unit id="0d3a231ed1c6dcab8fa35edd0bd127d0e5d21d84" translate="yes" xml:space="preserve">
          <source>IMPORT FOREIGN SCHEMA</source>
          <target state="translated">FOREIGN SCHEMAをインポート</target>
        </trans-unit>
        <trans-unit id="b8d5fc1f41eb794e02ccf1b51b842239e54448da" translate="yes" xml:space="preserve">
          <source>IMPORT FOREIGN SCHEMA &amp;mdash; import table definitions from a foreign server</source>
          <target state="translated">IMPORT FOREIGN SCHEMA &amp;mdash;外部サーバーからテーブル定義をインポートします</target>
        </trans-unit>
        <trans-unit id="c20ea07e32d25c072a65368c234d6f5a88f4521a" translate="yes" xml:space="preserve">
          <source>INSERT</source>
          <target state="translated">INSERT</target>
        </trans-unit>
        <trans-unit id="b42f874d7db1e2726d84a76cc0d5b0946a10b15b" translate="yes" xml:space="preserve">
          <source>INSERT &amp;mdash; create new rows in a table</source>
          <target state="translated">INSERT &amp;mdash;テーブルに新しい行を作成する</target>
        </trans-unit>
        <trans-unit id="48ef49cd856e5cecb996e0f1d379dbd5b56b7cb9" translate="yes" xml:space="preserve">
          <source>IP address mask, or null if not applicable</source>
          <target state="translated">IP アドレスのマスク、または該当しない場合は NULL</target>
        </trans-unit>
        <trans-unit id="998514d91724c3d88d4cab07518debfcd96862e2" translate="yes" xml:space="preserve">
          <source>IP address of the client connected to this WAL sender. If this field is null, it indicates that the client is connected via a Unix socket on the server machine.</source>
          <target state="translated">このWAL送信者に接続されているクライアントのIPアドレス。このフィールドがNULLの場合、クライアントがサーバマシン上のUnixソケットを介して接続されていることを示します。</target>
        </trans-unit>
        <trans-unit id="26ec3318a4493a39e748c88c589f3baeb8b0af15" translate="yes" xml:space="preserve">
          <source>IP address of the client connected to this backend</source>
          <target state="translated">このバックエンドに接続しているクライアントのIPアドレス</target>
        </trans-unit>
        <trans-unit id="4da843a738e5c670d4d958349979cce4c9e32eb3" translate="yes" xml:space="preserve">
          <source>IP address of the client connected to this backend. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum.</source>
          <target state="translated">このバックエンドに接続されているクライアントのIPアドレス。このフィールドがNULLの場合、クライアントがサーバマシンのUnixソケットを介して接続されているか、これがautovacuumのような内部プロセスであることを示します。</target>
        </trans-unit>
        <trans-unit id="f4aa7e6cdf843e01253be3fd2becaee731842f78" translate="yes" xml:space="preserve">
          <source>IPC</source>
          <target state="translated">IPC</target>
        </trans-unit>
        <trans-unit id="e5ef9147dc5536f205d6a3c473e0918abe3ea487" translate="yes" xml:space="preserve">
          <source>IPC parameters can be adjusted using &lt;code&gt;sysctl&lt;/code&gt;, for example:</source>
          <target state="translated">IPCパラメータは、 &lt;code&gt;sysctl&lt;/code&gt; を使用して調整できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="82c9856123dd418f4774d9eae5cdc6c13b4a17dd" translate="yes" xml:space="preserve">
          <source>IPC parameters can be set in the System Administration Manager (SAM) under Kernel Configuration &amp;rarr; Configurable Parameters. Choose Create A New Kernel when you're done.</source>
          <target state="translated">IPCパラメータは、システム管理マネージャ（SAM）の[カーネル構成]&amp;rarr;[構成可能パラメータ]で設定できます。完了したら、[新しいカーネルの作成]を選択します。</target>
        </trans-unit>
        <trans-unit id="ab288f3447cf3cc34399c5b2b5851efa6c3d80a4" translate="yes" xml:space="preserve">
          <source>IPv4 and IPv6 hosts and networks</source>
          <target state="translated">IPv4 および IPv6 ホストとネットワーク</target>
        </trans-unit>
        <trans-unit id="86de966d86cc975242ef8e4aaaa8450d6855f8c5" translate="yes" xml:space="preserve">
          <source>IPv4 and IPv6 networks</source>
          <target state="translated">IPv4およびIPv6ネットワーク</target>
        </trans-unit>
        <trans-unit id="570cca22ddf6e073a6dbd2cc896fd406204eb7b0" translate="yes" xml:space="preserve">
          <source>IPv4 or IPv6 host address</source>
          <target state="translated">IPv4 または IPv6 ホストアドレス</target>
        </trans-unit>
        <trans-unit id="c2e4edd4992d9d0688f940e8473197cf9ffe481e" translate="yes" xml:space="preserve">
          <source>IPv4 or IPv6 network address</source>
          <target state="translated">IPv4 または IPv6 ネットワークアドレス</target>
        </trans-unit>
        <trans-unit id="9d11567d01c59efb43ef67bb8206340e658f9d9d" translate="yes" xml:space="preserve">
          <source>ISBN &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISBN &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="bb9ab15de59e9d547e927c8c62069791df1e8268" translate="yes" xml:space="preserve">
          <source>ISBN &amp;lt;=&amp;gt; ISBN13</source>
          <target state="translated">ISBN &amp;lt;=&amp;gt; ISBN13</target>
        </trans-unit>
        <trans-unit id="a43d901bb73f40ccaba8783a1129360f50fba85d" translate="yes" xml:space="preserve">
          <source>ISBN13 &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISBN13 &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="4497b3ae9c75adbc043fd5847cc29356be8a5644" translate="yes" xml:space="preserve">
          <source>ISBN13, ISMN13, ISSN13 numbers are all EAN13 numbers.</source>
          <target state="translated">ISBN13、ISMN13、ISSN13の番号はすべてEAN13番号です。</target>
        </trans-unit>
        <trans-unit id="95889ddf7167ca49889a166a2e3858db51bb28d5" translate="yes" xml:space="preserve">
          <source>ISMN &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISMN &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="d9a94674870da708d9a2ffc2a85d2b1561319391" translate="yes" xml:space="preserve">
          <source>ISMN &amp;lt;=&amp;gt; ISMN13</source>
          <target state="translated">ISMN &amp;lt;=&amp;gt; ISMN13</target>
        </trans-unit>
        <trans-unit id="9f6fa2a3d8d31764fc531c626fb4ec439b13e49d" translate="yes" xml:space="preserve">
          <source>ISMN13 &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISMN13 &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="4f325d995b6d028ccc75771b1679537b623521c4" translate="yes" xml:space="preserve">
          <source>ISO</source>
          <target state="translated">ISO</target>
        </trans-unit>
        <trans-unit id="445867d9c88cb9ec795d4d1edb4358f7f32ed23d" translate="yes" xml:space="preserve">
          <source>ISO 8601</source>
          <target state="translated">ISO8601</target>
        </trans-unit>
        <trans-unit id="03b66feb77a5287d927a40831615b0a53c5c265e" translate="yes" xml:space="preserve">
          <source>ISO 8601 &amp;ldquo;alternative format&amp;rdquo;: same meaning as above</source>
          <target state="translated">ISO 8601「代替フォーマット」：上記と同じ意味</target>
        </trans-unit>
        <trans-unit id="347f83fd1ecbce8da8703c53ec0ee71401af00f9" translate="yes" xml:space="preserve">
          <source>ISO 8601 &amp;ldquo;format with designators&amp;rdquo;: same meaning as above</source>
          <target state="translated">ISO 8601「指定子付きのフォーマット」：上記と同じ意味</target>
        </trans-unit>
        <trans-unit id="249eb6740bd82a6c1db53f9cab25650c97a5d209" translate="yes" xml:space="preserve">
          <source>ISO 8601 day of the week, Monday (&lt;code&gt;1&lt;/code&gt;) to Sunday (&lt;code&gt;7&lt;/code&gt;)</source>
          <target state="translated">ISO 8601曜日、月曜日（ &lt;code&gt;1&lt;/code&gt; ）から日曜日（ &lt;code&gt;7&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9d2092d27bf384f64eb368a2dfd612d31022bd2b" translate="yes" xml:space="preserve">
          <source>ISO 8601 specifies the use of uppercase letter &lt;code&gt;T&lt;/code&gt; to separate the date and time. PostgreSQL accepts that format on input, but on output it uses a space rather than &lt;code&gt;T&lt;/code&gt;, as shown above. This is for readability and for consistency with RFC 3339 as well as some other database systems.</source>
          <target state="translated">ISO 8601では、日付を区別するために大文字の &lt;code&gt;T&lt;/code&gt; を使用することを指定しています。PostgreSQLは、入力ではその形式を受け入れますが、出力では、上記のように &lt;code&gt;T&lt;/code&gt; ではなくスペースを使用します。これは、可読性と、RFC 3339および他の一部のデータベースシステムとの整合性のためです。</target>
        </trans-unit>
        <trans-unit id="5e8d83297c37a8caa9129a785251aaffead6b3d8" translate="yes" xml:space="preserve">
          <source>ISO 8601 week-numbering year (4 or more digits)</source>
          <target state="translated">ISO 8601 週番付年号(4桁以上</target>
        </trans-unit>
        <trans-unit id="5113b76aa827aecd1b2fbeb19739776b2cdcbdb5" translate="yes" xml:space="preserve">
          <source>ISO 8601, SQL standard</source>
          <target state="translated">ISO 8601、SQL標準</target>
        </trans-unit>
        <trans-unit id="c4bb947ff5dc5345f70f6892f02bf85a04d4eb7d" translate="yes" xml:space="preserve">
          <source>ISO 8601; January 8 in any mode (recommended format)</source>
          <target state="translated">ISO 8601;1月8日の任意のモード(推奨フォーマット</target>
        </trans-unit>
        <trans-unit id="a83c80f67456b395aa2704158f1dc68957610271" translate="yes" xml:space="preserve">
          <source>ISO 8601; January 8, 1999 in any mode</source>
          <target state="translated">ISO 8601;1999年1月8日、任意のモードで</target>
        </trans-unit>
        <trans-unit id="b1922fbd22025577b8a5e43c812e096c3b9acffc" translate="yes" xml:space="preserve">
          <source>ISO 8859-1, ECMA 94</source>
          <target state="translated">ISO 8859-1、ECMA 94</target>
        </trans-unit>
        <trans-unit id="276d48941fbc0543fbb5ce642fe1dc3b05b9bb7d" translate="yes" xml:space="preserve">
          <source>ISO 8859-10, ECMA 144</source>
          <target state="translated">ISO 8859-10、ECMA 144</target>
        </trans-unit>
        <trans-unit id="b206da53a9051bf3226d71a6e114418f28766469" translate="yes" xml:space="preserve">
          <source>ISO 8859-13</source>
          <target state="translated">ISO 8859-13</target>
        </trans-unit>
        <trans-unit id="26424d0dadf461ca6901513d3dcfc085ec66b2c7" translate="yes" xml:space="preserve">
          <source>ISO 8859-14</source>
          <target state="translated">ISO 8859-14</target>
        </trans-unit>
        <trans-unit id="b292668cb49c44b020b58d7d79cd50329ab61aed" translate="yes" xml:space="preserve">
          <source>ISO 8859-15</source>
          <target state="translated">ISO 8859-15</target>
        </trans-unit>
        <trans-unit id="6a937cb9225885ed540430a532e08182311c8fb7" translate="yes" xml:space="preserve">
          <source>ISO 8859-16, ASRO SR 14111</source>
          <target state="translated">ISO 8859-16、ASRO SR 14111</target>
        </trans-unit>
        <trans-unit id="5f8eb67d9b294dc7fa2960e49427ec254bf78d3e" translate="yes" xml:space="preserve">
          <source>ISO 8859-2, ECMA 94</source>
          <target state="translated">ISO 8859-2、ECMA 94</target>
        </trans-unit>
        <trans-unit id="34bfa7b1e0970a505b7c18beda35ee12ae67b627" translate="yes" xml:space="preserve">
          <source>ISO 8859-3, ECMA 94</source>
          <target state="translated">ISO 8859-3、ECMA 94</target>
        </trans-unit>
        <trans-unit id="19f1d5efe10cfb525dac348f64f156d08531f5ba" translate="yes" xml:space="preserve">
          <source>ISO 8859-4, ECMA 94</source>
          <target state="translated">ISO 8859-4、ECMA 94</target>
        </trans-unit>
        <trans-unit id="958ae0517642b5a63a0ba42f16e7dba51f3f03b9" translate="yes" xml:space="preserve">
          <source>ISO 8859-5, ECMA 113</source>
          <target state="translated">ISO 8859-5、ECMA 113</target>
        </trans-unit>
        <trans-unit id="edc58fa1dfcc675f8f0e7cd9ba637022f963b9a5" translate="yes" xml:space="preserve">
          <source>ISO 8859-6, ECMA 114</source>
          <target state="translated">ISO 8859-6、ECMA 114</target>
        </trans-unit>
        <trans-unit id="ac642f9b939a7e25fc9c152794f7c55763fbe736" translate="yes" xml:space="preserve">
          <source>ISO 8859-7, ECMA 118</source>
          <target state="translated">ISO 8859-7、ECMA 118</target>
        </trans-unit>
        <trans-unit id="aafb9bf8d9a3dd18a9bc858aa3091007431a81fe" translate="yes" xml:space="preserve">
          <source>ISO 8859-8, ECMA 121</source>
          <target state="translated">ISO 8859-8、ECMA 121</target>
        </trans-unit>
        <trans-unit id="561419819864b8b7eafa254ff17c2c5838572d02" translate="yes" xml:space="preserve">
          <source>ISO 8859-9, ECMA 128</source>
          <target state="translated">ISO 8859-9、ECMA 128</target>
        </trans-unit>
        <trans-unit id="19fa6eb3258ffb4709ac1dfbba399d0753e7e88f" translate="yes" xml:space="preserve">
          <source>ISO-8601 offset for PST</source>
          <target state="translated">PSTのISO-8601オフセット</target>
        </trans-unit>
        <trans-unit id="d9bfc4c480632e7b109f99ac77c51a2a5260171b" translate="yes" xml:space="preserve">
          <source>ISSN</source>
          <target state="translated">ISSN</target>
        </trans-unit>
        <trans-unit id="3941c970e85e394c43837d5b44cc1bf0483f215f" translate="yes" xml:space="preserve">
          <source>ISSN &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISSN &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="a203140c0f91a7564ce62d86b204a626e15ee7d8" translate="yes" xml:space="preserve">
          <source>ISSN &amp;lt;=&amp;gt; ISSN13</source>
          <target state="translated">ISSN &amp;lt;=&amp;gt; ISSN13</target>
        </trans-unit>
        <trans-unit id="57b604002c866aad17fa814a63620ac73af4bf08" translate="yes" xml:space="preserve">
          <source>ISSN13 &amp;lt;=&amp;gt; EAN13</source>
          <target state="translated">ISSN13 &amp;lt;=&amp;gt; EAN13</target>
        </trans-unit>
        <trans-unit id="0a6d0a09ee6e1eec933513081c533fbe57cab3a4" translate="yes" xml:space="preserve">
          <source>Ident Authentication</source>
          <target state="translated">アイデンティティ認証</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="64ed35bcb9eba82bb5083c305000e3e8e174b736" translate="yes" xml:space="preserve">
          <source>Identifier of the large object that includes this page</source>
          <target state="translated">このページを含むラージオブジェクトの識別子</target>
        </trans-unit>
        <trans-unit id="d19347e41a5213caf5fbef640d085e03cc5288d2" translate="yes" xml:space="preserve">
          <source>Identifies a function taking or returning an unspecified row type.</source>
          <target state="translated">指定されていない行の型を取る、または返す関数を識別します。</target>
        </trans-unit>
        <trans-unit id="9f9c67a87f9e8c8e7cd1eee8d202259f233b1765" translate="yes" xml:space="preserve">
          <source>Identifies a not-yet-resolved type, e.g. of an undecorated string literal.</source>
          <target state="translated">未解決の文字列リテラルのような、装飾されていない文字列リテラルの未解決型を識別します。</target>
        </trans-unit>
        <trans-unit id="c41af45b5400af4443194716d5554aafcc29e526" translate="yes" xml:space="preserve">
          <source>Identifies a not-yet-resolved type, e.g., of an undecorated string literal.</source>
          <target state="translated">未解決の文字列リテラルなどの型を識別します。</target>
        </trans-unit>
        <trans-unit id="c7cbe1f08ac13359acc228819549de4cb50db912" translate="yes" xml:space="preserve">
          <source>Identifies a representation of DDL commands that is available to event triggers.</source>
          <target state="translated">イベントトリガーで利用可能なDDLコマンドの表現を識別します。</target>
        </trans-unit>
        <trans-unit id="c10498b4e600d39b28759a6ca1704d299a1166cc" translate="yes" xml:space="preserve">
          <source>Identifies the event for which this trigger fires</source>
          <target state="translated">このトリガーが発生するイベントを識別します。</target>
        </trans-unit>
        <trans-unit id="708e5b0969ad9b9e70cb24a115182be857e71a40" translate="yes" xml:space="preserve">
          <source>If 1, OIDs are included in the data; if 0, not. Oid system columns are not supported in PostgreSQL anymore, but the format still contains the indicator.</source>
          <target state="translated">1の場合、OIDがデータに含まれ、0の場合は含まれません。OIDシステムカラムはPostgreSQLではサポートされなくなりましたが、フォーマットにはまだインジケータが含まれています。</target>
        </trans-unit>
        <trans-unit id="bb8295c4be7fefd76f1788c97ecf7d786d2a81d6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;runtime-config-logging#GUC-CLUSTER-NAME&quot;&gt;cluster_name&lt;/a&gt; has been configured the cluster name will also be shown in &lt;code&gt;ps&lt;/code&gt; output:</source>
          <target state="translated">&lt;a href=&quot;runtime-config-logging#GUC-CLUSTER-NAME&quot;&gt;cluster_name&lt;/a&gt;が構成されている場合、クラスター名も &lt;code&gt;ps&lt;/code&gt; 出力に表示されます。</target>
        </trans-unit>
        <trans-unit id="8a629049c6dc481b39f88d9e65ac7e85ce3a796f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;runtime-config-query#GUC-JIT&quot;&gt;jit&lt;/a&gt; is set to &lt;code&gt;off&lt;/code&gt;, or if no JIT implementation is available (for example because the server was compiled without &lt;code&gt;--with-llvm&lt;/code&gt;), JIT will not be performed, even if it would be beneficial based on the above criteria. Setting &lt;a href=&quot;runtime-config-query#GUC-JIT&quot;&gt;jit&lt;/a&gt; to &lt;code&gt;off&lt;/code&gt; has effects at both plan and execution time.</source>
          <target state="translated">場合&lt;a href=&quot;runtime-config-query#GUC-JIT&quot;&gt;JITが&lt;/a&gt;に設定されている &lt;code&gt;off&lt;/code&gt; 、又は（サーバをせずにコンパイルされたため、例えば何JIT実装が利用できない場合 &lt;code&gt;--with-llvm&lt;/code&gt; ）、JITは、上記の基準に基づくことが有益である場合であっても、実行されません。&lt;a href=&quot;runtime-config-query#GUC-JIT&quot;&gt;jit&lt;/a&gt;を &lt;code&gt;off&lt;/code&gt; に設定すると、計画時と実行時の両方に影響があります。</target>
        </trans-unit>
        <trans-unit id="b58e6f959038162d8a80485253d8424b9f1e1e29" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;runtime-config-replication#GUC-SYNCHRONOUS-STANDBY-NAMES&quot;&gt;synchronous_standby_names&lt;/a&gt; is non-empty, &lt;code&gt;synchronous_commit&lt;/code&gt; also controls whether transaction commits will wait for their WAL records to be processed on the standby server(s).</source>
          <target state="translated">場合&lt;a href=&quot;runtime-config-replication#GUC-SYNCHRONOUS-STANDBY-NAMES&quot;&gt;synchronous_standby_namesが&lt;/a&gt;非空で、 &lt;code&gt;synchronous_commit&lt;/code&gt; トランザクションのコミットは、そのWALレコードを待つことになるかどうかもコントロールは、スタンバイサーバ（複数可）で処理されます。</target>
        </trans-unit>
        <trans-unit id="9523a6aef92c0b8b469d3754e7282b8f5942c267" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;runtime-config-replication#GUC-SYNCHRONOUS-STANDBY-NAMES&quot;&gt;synchronous_standby_names&lt;/a&gt; is non-empty, this parameter also controls whether or not transaction commits will wait for their WAL records to be replicated to the standby server(s). When set to &lt;code&gt;on&lt;/code&gt;, commits will wait until replies from the current synchronous standby(s) indicate they have received the commit record of the transaction and flushed it to disk. This ensures the transaction will not be lost unless both the primary and all synchronous standbys suffer corruption of their database storage. When set to &lt;code&gt;remote_apply&lt;/code&gt;, commits will wait until replies from the current synchronous standby(s) indicate they have received the commit record of the transaction and applied it, so that it has become visible to queries on the standby(s). When set to &lt;code&gt;remote_write&lt;/code&gt;, commits will wait until replies from the current synchronous standby(s) indicate they have received the commit record of the transaction and written it out to their operating system. This setting is sufficient to ensure data preservation even if a standby instance of PostgreSQL were to crash, but not if the standby suffers an operating-system-level crash, since the data has not necessarily reached stable storage on the standby. Finally, the setting &lt;code&gt;local&lt;/code&gt; causes commits to wait for local flush to disk, but not for replication. This is not usually desirable when synchronous replication is in use, but is provided for completeness.</source>
          <target state="translated">&lt;a href=&quot;runtime-config-replication#GUC-SYNCHRONOUS-STANDBY-NAMES&quot;&gt;Synchronous_standby_names&lt;/a&gt;が空でない場合、このパラメーターは、トランザクションコミットがWALレコードがスタンバイサーバーにレプリケートされるのを待つかどうかも制御します。 &lt;code&gt;on&lt;/code&gt; に設定すると、コミットは、現在の同期スタンバイからの応答がトランザクションのコミットレコードを受信し、それをディスクにフラッシュしたことを示すまで待機します。これにより、プライマリスタンバイとすべての同期スタンバイの両方でデータベースストレージが破損しない限り、トランザクションが失われることはありません。 &lt;code&gt;remote_apply&lt;/code&gt; に設定すると、コミットは、現在の同期スタンバイからの応答がトランザクションのコミットレコードを受信して​​適用したことを示すまで待機するため、スタンバイでのクエリから見えるようになります。に設定した場合 &lt;code&gt;remote_write&lt;/code&gt; 、コミットは、現在の同期スタンバイからの応答がトランザクションのコミットレコードを受信して​​オペレーティングシステムに書き込んだことを示すまで待機します。この設定は、PostgreSQLのスタンバイインスタンスがクラッシュした場合でもデータを確実に保持するには十分ですが、スタンバイでオペレーティングシステムレベルのクラッシュが発生した場合は、データがスタンバイの安定したストレージに到達するとは限らないためです。最後に、 &lt;code&gt;local&lt;/code&gt; に設定すると、コミットはディスクへのローカルフラッシュを待機しますが、レプリケーションは待機しません。これは通常、同期レプリケーションが使用されている場合は望ましくありませんが、完全を期すために提供されています。</target>
        </trans-unit>
        <trans-unit id="1a25dc46209d8ed1ade19ed10060c5c528c285e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;+&lt;/code&gt; is appended to the command name, the sum of the sizes of each relation's partitions is also displayed, along with the relation's description. If &lt;code&gt;n&lt;/code&gt; is combined with &lt;code&gt;+&lt;/code&gt;, two sizes are shown: one including the total size of directly-attached leaf partitions, and another showing the total size of all partitions, including indirectly attached sub-partitions.</source>
          <target state="translated">コマンド名に &lt;code&gt;+&lt;/code&gt; が追加されている場合、各リレーションのパーティションのサイズの合計も、リレーションの説明とともに表示されます。もし &lt;code&gt;n&lt;/code&gt; と結合される &lt;code&gt;+&lt;/code&gt; 、2つのサイズが示されている：直接接続リーフ・パーティションの合計サイズを含むものを、もう一つは間接的に結合サブパーティションを含むすべてのパーティションの合計サイズを示します。</target>
        </trans-unit>
        <trans-unit id="f1cb07ba733b8d98ef45c815d6dfcd5240fbfb93" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;+&lt;/code&gt; is appended to the command name, then the output lines are numbered from 1.</source>
          <target state="translated">コマンド名に &lt;code&gt;+&lt;/code&gt; が追加されている場合、出力行には1から番号が付けられます。</target>
        </trans-unit>
        <trans-unit id="070b09cd2b09c6b749465149e9d2da178b70c1ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;+&lt;/code&gt; is appended to the command name, then the output lines are numbered, with the first line of the function body being line 1.</source>
          <target state="translated">コマンド名に &lt;code&gt;+&lt;/code&gt; が追加されている場合、出力行には番号が付けられ、関数本体の最初の行は1行目です。</target>
        </trans-unit>
        <trans-unit id="2d52331f0d53378e8895c635840bb2a68f08d247" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--latency-limit&lt;/code&gt; is used together with &lt;code&gt;--rate&lt;/code&gt;, a transaction can lag behind so much that it is already over the latency limit when the previous transaction ends, because the latency is calculated from the scheduled start time. Such transactions are not sent to the server, but are skipped altogether and counted separately.</source>
          <target state="translated">&lt;code&gt;--latency-limit&lt;/code&gt; が &lt;code&gt;--rate&lt;/code&gt; と一緒に使用される場合、レイテンシはスケジュールされた開始時間から計算されるため、トランザクションは大幅に遅れて、前のトランザクションが終了したときにすでにレイテンシ制限を超えている可能性があります。このようなトランザクションはサーバーに送信されませんが、すべてスキップされ、個別にカウントされます。</target>
        </trans-unit>
        <trans-unit id="5b7745b7624e7dd43bb242cb0d62e7379c97ee2a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ALTER TYPE ... ADD VALUE&lt;/code&gt; (the form that adds a new value to an enum type) is executed inside a transaction block, the new value cannot be used until after the transaction has been committed.</source>
          <target state="translated">場合 &lt;code&gt;ALTER TYPE ... ADD VALUE&lt;/code&gt; （列挙型に新しい値を追加して、フォームが）トランザクションブロック内で実行され、新しい値は、トランザクションがコミットされた後まで使用することはできません。</target>
        </trans-unit>
        <trans-unit id="bb077bc49a16e30ee77115d9ffe115d963646660" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;AND CHAIN&lt;/code&gt; is specified, a new transaction is immediately started with the same transaction characteristics (see &lt;a href=&quot;sql-set-transaction&quot;&gt;SET TRANSACTION&lt;/a&gt;) as the just finished one. Otherwise, no new transaction is started.</source>
          <target state="translated">場合は &lt;code&gt;AND CHAIN&lt;/code&gt; 指定され、新しいトランザクションがすぐに（参照、同じトランザクション特性で開始された&lt;a href=&quot;sql-set-transaction&quot;&gt;SET TRANSACTIONを&lt;/a&gt;終了したばかり一つとして）。それ以外の場合、新しいトランザクションは開始されません。</target>
        </trans-unit>
        <trans-unit id="d7c08e9bace5b5133ac34adca9a08f4fe042258e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;CALL&lt;/code&gt; is executed in a transaction block, then the called procedure cannot execute transaction control statements. Transaction control statements are only allowed if &lt;code&gt;CALL&lt;/code&gt; is executed in its own transaction.</source>
          <target state="translated">&lt;code&gt;CALL&lt;/code&gt; がトランザクションブロックで実行される場合、呼び出されたプロシージャはトランザクション制御ステートメントを実行できません。トランザクション制御ステートメントは、 &lt;code&gt;CALL&lt;/code&gt; が独自のトランザクションで実行される場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="848ec5bbdc5b00e6cc3d9f1bcaa95b1dc8f6e6eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DEFAULT&lt;/code&gt; is specified, the table will be created as the default partition of the parent table. This option is not available for hash-partitioned tables. A partition key value not fitting into any other partition of the given parent will be routed to the default partition.</source>
          <target state="translated">場合は &lt;code&gt;DEFAULT&lt;/code&gt; が指定され、テーブルには、親テーブルのデフォルトのパーティションとして作成されます。このオプションは、ハッシュパーティションテーブルでは使用できません。指定された親の他のパーティションに適合しないパーティションキー値は、デフォルトパーティションにルーティングされます。</target>
        </trans-unit>
        <trans-unit id="e7358add8de8561a637a99b57db04968568623ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DISTINCT&lt;/code&gt; is specified in addition to an &lt;code&gt;order_by_clause&lt;/code&gt;, then all the &lt;code&gt;ORDER BY&lt;/code&gt; expressions must match regular arguments of the aggregate; that is, you cannot sort on an expression that is not included in the &lt;code&gt;DISTINCT&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;DISTINCT&lt;/code&gt; が &lt;code&gt;order_by_clause&lt;/code&gt; に加えて指定されている場合、すべての &lt;code&gt;ORDER BY&lt;/code&gt; 式は集計の通常の引数と一致する必要があります。つまり、 &lt;code&gt;DISTINCT&lt;/code&gt; リストに含まれていない式でソートすることはできません。</target>
        </trans-unit>
        <trans-unit id="30705d4f5de2e5919df753dbf707be6e61f46c94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DO&lt;/code&gt; is executed in a transaction block, then the procedure code cannot execute transaction control statements. Transaction control statements are only allowed if &lt;code&gt;DO&lt;/code&gt; is executed in its own transaction.</source>
          <target state="translated">&lt;code&gt;DO&lt;/code&gt; がトランザクションブロックで実行される場合、プロシージャコードはトランザクション制御ステートメントを実行できません。トランザクション制御ステートメントは、 &lt;code&gt;DO&lt;/code&gt; が独自のトランザクションで実行される場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="0d029254e59ae42060c8fbefb0b0879b5e2662e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DROP EXPRESSION IF EXISTS&lt;/code&gt; is specified and the column is not a stored generated column, no error is thrown. In this case a notice is issued instead.</source>
          <target state="translated">場合 &lt;code&gt;DROP EXPRESSION IF EXISTS&lt;/code&gt; 指定され、列が格納されて生成された列ではありません、エラーがスローされません。この場合、代わりに通知が発行されます。</target>
        </trans-unit>
        <trans-unit id="df6a86ce0cd5c24d459324e69a0c7e3798125378" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DROP IDENTITY IF EXISTS&lt;/code&gt; is specified and the column is not an identity column, no error is thrown. In this case a notice is issued instead.</source>
          <target state="translated">場合は &lt;code&gt;DROP IDENTITY IF EXISTS&lt;/code&gt; が指定され、列がID列ではありません、エラーがスローされません。この場合、代わりに通知が発行されます。</target>
        </trans-unit>
        <trans-unit id="895523ab1404bbeb5f8a66ec67423cf5c0e02e37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DROP ROLE&lt;/code&gt; is attempted while dependent objects still remain, it will issue messages identifying which objects need to be reassigned or dropped.</source>
          <target state="translated">場合は &lt;code&gt;DROP ROLE&lt;/code&gt; 試行された依存オブジェクトがまだ残っている間、それは再割り当てまたは削除する必要があるオブジェクトの識別メッセージを発行します。</target>
        </trans-unit>
        <trans-unit id="da529f5ed28015eb2651a4b68ada28ed62e240c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FILTER&lt;/code&gt; is specified, then only the input rows for which the &lt;code&gt;filter_clause&lt;/code&gt; evaluates to true are fed to the aggregate function; other rows are discarded. For example:</source>
          <target state="translated">&lt;code&gt;FILTER&lt;/code&gt; が指定されている場合、 &lt;code&gt;filter_clause&lt;/code&gt; がtrueと評価される入力行のみが集約関数に送られます。他の行は破棄されます。例えば：</target>
        </trans-unit>
        <trans-unit id="0bc024c5c56715620389a9f40a0a619b2dabf192" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FILTER&lt;/code&gt; is specified, then only the input rows for which the &lt;code&gt;filter_clause&lt;/code&gt; evaluates to true are fed to the window function; other rows are discarded. Only window functions that are aggregates accept a &lt;code&gt;FILTER&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;FILTER&lt;/code&gt; が指定されている場合、 &lt;code&gt;filter_clause&lt;/code&gt; がtrueと評価された入力行のみがウィンドウ関数に送られます。他の行は破棄されます。集計であるウィンドウ関数のみが &lt;code&gt;FILTER&lt;/code&gt; 句を受け入れます。</target>
        </trans-unit>
        <trans-unit id="cd9e1d53d5d6b7dacb647bc6b43f3a0bb2b3f3ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FINALFUNC_EXTRA&lt;/code&gt; is specified, then in addition to the final state value and any direct arguments, the final function receives extra NULL values corresponding to the aggregate's regular (aggregated) arguments. This is mainly useful to allow correct resolution of the aggregate result type when a polymorphic aggregate is being defined.</source>
          <target state="translated">&lt;code&gt;FINALFUNC_EXTRA&lt;/code&gt; が指定されている場合、最終的な状態値と直接引数に加えて、最終関数は、集計の通常の（集計された）引数に対応する追加のNULL値を受け取ります。これは主に、ポリモーフィック集計が定義されているときに集計結果タイプを正しく解決するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="79c74fbef6be293db9ab06b3c7837e0fb4b62bf1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FOR UPDATE&lt;/code&gt;, &lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt;, &lt;code&gt;FOR SHARE&lt;/code&gt; or &lt;code&gt;FOR KEY SHARE&lt;/code&gt; is specified, the &lt;code&gt;SELECT&lt;/code&gt; statement locks the selected rows against concurrent updates. (See &lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;The Locking Clause&lt;/a&gt; below.)</source>
          <target state="translated">場合は &lt;code&gt;FOR UPDATE&lt;/code&gt; 、 &lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt; 、 &lt;code&gt;FOR SHARE&lt;/code&gt; または &lt;code&gt;FOR KEY SHARE&lt;/code&gt; が指定され、 &lt;code&gt;SELECT&lt;/code&gt; ステートメントは、同時更新に対して選択された行をロックします。（下記&lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;のロック節を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="a805c0a50f5da5361e847219abae4a282083ebad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;FX&lt;/code&gt; is specified, a separator in the template string matches exactly one character in the input string. But note that the input string character is not required to be the same as the separator from the template string. For example, &lt;code&gt;to_timestamp('2000/JUN', 'FXYYYY MON')&lt;/code&gt; works, but &lt;code&gt;to_timestamp('2000/JUN', 'FXYYYY&amp;nbsp;&amp;nbsp;MON')&lt;/code&gt; returns an error because the second space in the template string consumes the letter &lt;code&gt;J&lt;/code&gt; from the input string.</source>
          <target state="translated">&lt;code&gt;FX&lt;/code&gt; が指定されている場合、テンプレート文字列のセパレータは、入力文字列の1文字と完全に一致します。ただし、入力文字列の文字は、テンプレート文字列のセパレータと同じである必要はないことに注意してください。たとえば、 &lt;code&gt;to_timestamp('2000/JUN', 'FXYYYY MON')&lt;/code&gt; 機能しますが、 &lt;code&gt;to_timestamp('2000/JUN', 'FXYYYY&amp;nbsp;&amp;nbsp;MON')&lt;/code&gt; は、テンプレート文字列の2番目のスペースが入力から文字 &lt;code&gt;J&lt;/code&gt; を消費するため、エラーを返しますストリング。</target>
        </trans-unit>
        <trans-unit id="14af0e221ff15633d3dbc5822cb9a995fc47a018" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GENERIC_XLOG_FULL_IMAGE&lt;/code&gt; is not specified for a registered buffer, the generic WAL record contains a delta between the old and the new page images. This delta is based on byte-by-byte comparison. This is not very compact for the case of moving data within a page, and might be improved in the future.</source>
          <target state="translated">&lt;code&gt;GENERIC_XLOG_FULL_IMAGE&lt;/code&gt; が登録済みバッファーに指定されていない場合、汎用WALレコードには、古いページイメージと新しいページイメージの間のデルタが含まれます。この差分は、バイトごとの比較に基づいています。これは、ページ内でデータを移動する場合にはあまりコンパクトではなく、将来的には改善される可能性があります。</target>
        </trans-unit>
        <trans-unit id="dd5c28224428244bd7b83410c113faa1c8237d3c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GRANT OPTION FOR&lt;/code&gt; is specified, only the grant option for the privilege is revoked, not the privilege itself. Otherwise, both the privilege and the grant option are revoked.</source>
          <target state="translated">場合 &lt;code&gt;GRANT OPTION FOR&lt;/code&gt; 指定され、特権のための唯一のグラントオプションが取り消され、ない特権そのもの。それ以外の場合は、特権と付与オプションの両方が取り消されます。</target>
        </trans-unit>
        <trans-unit id="36e5c2c5c78fde83426abf27ef6c16ab41ff4995" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GRANTED BY&lt;/code&gt; is specified, the grant is recorded as having been done by the specified role. Only database superusers may use this option, except when it names the same role executing the command.</source>
          <target state="translated">場合 &lt;code&gt;GRANTED BY&lt;/code&gt; が指定され、助成金は、指定された役割によって行われたものとして記録されています。コマンドを実行する同じロールに名前を付ける場合を除いて、データベーススーパーユーザーのみがこのオプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="f1dbb4a5b057fd9d80b4085324de683535f1772c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;IF NOT EXISTS&lt;/code&gt; is specified, it is not an error if the type already contains the new value: a notice is issued but no other action is taken. Otherwise, an error will occur if the new value is already present.</source>
          <target state="translated">場合 &lt;code&gt;IF NOT EXISTS&lt;/code&gt; が指定されているタイプは、すでに新しい値が含まれている場合、それはエラーではありません：通知が発行されますが、他のアクションは取られません。そうでない場合、新しい値がすでに存在しているとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="713b84661234cdebeb4eb076bfe7612a7ddb758e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NO CYCLE&lt;/code&gt; is specified, any calls to &lt;code&gt;nextval&lt;/code&gt; after the sequence has reached its maximum value will return an error. If neither &lt;code&gt;CYCLE&lt;/code&gt; or &lt;code&gt;NO CYCLE&lt;/code&gt; are specified, &lt;code&gt;NO CYCLE&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;NO CYCLE&lt;/code&gt; が指定されている場合、シーケンスが最大値に達した後に &lt;code&gt;nextval&lt;/code&gt; を呼び出すと、エラーが返されます。 &lt;code&gt;CYCLE&lt;/code&gt; も &lt;code&gt;NO CYCLE&lt;/code&gt; も指定されていない場合、 &lt;code&gt;NO CYCLE&lt;/code&gt; がデフォルトです。</target>
        </trans-unit>
        <trans-unit id="72454c0dc96ec89da5b352eb2463b5c3b5e5fc00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NONE&lt;/code&gt; is selected, the backup manifest will not contain any checksums. Otherwise, it will contain a checksum of each file in the backup using the specified algorithm. In addition, the manifest will always contain a &lt;code&gt;SHA256&lt;/code&gt; checksum of its own contents. The &lt;code&gt;SHA&lt;/code&gt; algorithms are significantly more CPU-intensive than &lt;code&gt;CRC32C&lt;/code&gt;, so selecting one of them may increase the time required to complete the backup.</source>
          <target state="translated">場合は &lt;code&gt;NONE&lt;/code&gt; が選択されていない、バックアップマニフェストは、任意のチェックサムが含まれません。それ以外の場合は、指定されたアルゴリズムを使用したバックアップ内の各ファイルのチェックサムが含まれます。さらに、マニフェストには常にそれ自体の内容の &lt;code&gt;SHA256&lt;/code&gt; チェックサムが含まれます。 &lt;code&gt;SHA&lt;/code&gt; のアルゴリズムは、かなり多くのCPU集約型よりも &lt;code&gt;CRC32C&lt;/code&gt; それらのいずれかを選択する時間を増やすことがありので、バックアップを完了するために必要な。</target>
        </trans-unit>
        <trans-unit id="6bbdf1bb14119659019986a40e06a497bd2493a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NULLS LAST&lt;/code&gt; is specified, null values sort after all non-null values; if &lt;code&gt;NULLS FIRST&lt;/code&gt; is specified, null values sort before all non-null values. If neither is specified, the default behavior is &lt;code&gt;NULLS LAST&lt;/code&gt; when &lt;code&gt;ASC&lt;/code&gt; is specified or implied, and &lt;code&gt;NULLS FIRST&lt;/code&gt; when &lt;code&gt;DESC&lt;/code&gt; is specified (thus, the default is to act as though nulls are larger than non-nulls). When &lt;code&gt;USING&lt;/code&gt; is specified, the default nulls ordering depends on whether the operator is a less-than or greater-than operator.</source>
          <target state="translated">&lt;code&gt;NULLS LAST&lt;/code&gt; が指定されている場合、NULL値はすべての非NULL値の後にソートされます。 &lt;code&gt;NULLS FIRST&lt;/code&gt; が指定されている場合、NULL値はすべての非NULL値の前にソートされます。どちらも指定されていない場合、デフォルトの動作は、 &lt;code&gt;ASC&lt;/code&gt; が指定または暗黙指定されている場合は &lt;code&gt;NULLS LAST&lt;/code&gt; 、 &lt;code&gt;DESC&lt;/code&gt; が指定されている場合は &lt;code&gt;NULLS FIRST&lt;/code&gt; です（したがって、デフォルトでは、NULLは非NULLよりも大きいかのように動作します）。ときに &lt;code&gt;USING&lt;/code&gt; 指定され、デフォルトのヌル順序は、オペレータが少なく、より以上、よりオペレータであるかどうかに依存します。</target>
        </trans-unit>
        <trans-unit id="8fb56e2e9f0f01bd1fdfbdbf89ac20f3bbcae1c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PARTITION OF&lt;/code&gt; clause is specified then the table is created as a partition of &lt;code&gt;parent_table&lt;/code&gt; with specified bounds.</source>
          <target state="translated">場合 &lt;code&gt;PARTITION OF&lt;/code&gt; 句が指定されたテーブルは、のパーティションとして作成さ &lt;code&gt;parent_table&lt;/code&gt; 指定境界を持ちます。</target>
        </trans-unit>
        <trans-unit id="c7ee0e44f6b6bd7b6f554d708cd5b901ba47c152" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PRIMARY KEY&lt;/code&gt; is specified, and the index's columns are not already marked &lt;code&gt;NOT NULL&lt;/code&gt;, then this command will attempt to do &lt;code&gt;ALTER COLUMN SET NOT NULL&lt;/code&gt; against each such column. That requires a full table scan to verify the column(s) contain no nulls. In all other cases, this is a fast operation.</source>
          <target state="translated">場合 &lt;code&gt;PRIMARY KEY&lt;/code&gt; が指定され、インデックスの列がすでにマークされていない &lt;code&gt;NOT NULL&lt;/code&gt; を、このコマンドは何しようとします &lt;code&gt;ALTER COLUMN SET NOT NULL&lt;/code&gt; を、そのような各列に対して。列にnullが含まれていないことを確認するには、テーブル全体をスキャンする必要があります。他のすべての場合では、これは高速な操作です。</target>
        </trans-unit>
        <trans-unit id="ae2eae0b6691115fff0baa447860d3557c71a926" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;RECURSIVE&lt;/code&gt; is specified, it allows a &lt;code&gt;SELECT&lt;/code&gt; subquery to reference itself by name. Such a subquery must have the form</source>
          <target state="translated">場合は &lt;code&gt;RECURSIVE&lt;/code&gt; が指定され、それが可能に &lt;code&gt;SELECT&lt;/code&gt; サブクエリが名前で自身を参照すること。このようなサブクエリは次の形式でなければなりません</target>
        </trans-unit>
        <trans-unit id="5c5e50c2f4aff13823fb6c53c60eb5ef4318ca54" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SELECT DISTINCT&lt;/code&gt; is specified, all duplicate rows are removed from the result set (one row is kept from each group of duplicates). &lt;code&gt;SELECT ALL&lt;/code&gt; specifies the opposite: all rows are kept; that is the default.</source>
          <target state="translated">&lt;code&gt;SELECT DISTINCT&lt;/code&gt; が指定されている場合、すべての重複行が結果セットから削除されます（重複グループごとに1行が保持されます）。 &lt;code&gt;SELECT ALL&lt;/code&gt; は逆を指定します。すべての行が保持されます。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="04b3f6938761ce362c4ded325b6abaf0a88a5df2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SET LOCAL&lt;/code&gt; is used within a function that has a &lt;code&gt;SET&lt;/code&gt; option for the same variable (see &lt;a href=&quot;sql-createfunction&quot;&gt;CREATE FUNCTION&lt;/a&gt;), the effects of the &lt;code&gt;SET LOCAL&lt;/code&gt; command disappear at function exit; that is, the value in effect when the function was called is restored anyway. This allows &lt;code&gt;SET LOCAL&lt;/code&gt; to be used for dynamic or repeated changes of a parameter within a function, while still having the convenience of using the &lt;code&gt;SET&lt;/code&gt; option to save and restore the caller's value. However, a regular &lt;code&gt;SET&lt;/code&gt; command overrides any surrounding function's &lt;code&gt;SET&lt;/code&gt; option; its effects will persist unless rolled back.</source>
          <target state="translated">場合は &lt;code&gt;SET LOCAL&lt;/code&gt; を持つ関数内で使用される &lt;code&gt;SET&lt;/code&gt; （参照同じ変数のオプションを&lt;a href=&quot;sql-createfunction&quot;&gt;CREATE FUNCTIONを&lt;/a&gt;）、の影響 &lt;code&gt;SET LOCAL&lt;/code&gt; コマンドは、関数の出口で消えます。つまり、関数が呼び出されたときに有効だった値が復元されます。これにより、 &lt;code&gt;SET LOCAL&lt;/code&gt; を関数内のパラメーターの動的変更または繰り返し変更に使用できる一方で、 &lt;code&gt;SET&lt;/code&gt; オプションを使用して呼び出し元の値を保存および復元できるという利便性を維持できます。ただし、通常の &lt;code&gt;SET&lt;/code&gt; コマンドは、周囲の関数の &lt;code&gt;SET&lt;/code&gt; オプションをオーバーライドします。ロールバックしない限り、その効果は持続します。</target>
        </trans-unit>
        <trans-unit id="ec901162256017a1ee3d75cc5aa3a5194df885bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SET TRANSACTION&lt;/code&gt; is executed without a prior &lt;code&gt;START TRANSACTION&lt;/code&gt; or &lt;code&gt;BEGIN&lt;/code&gt;, it emits a warning and otherwise has no effect.</source>
          <target state="translated">場合 &lt;code&gt;SET TRANSACTION&lt;/code&gt; 前なしで実行されている &lt;code&gt;START TRANSACTION&lt;/code&gt; または &lt;code&gt;BEGIN&lt;/code&gt; 、それは警告を発し、さもなければ影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="c679999524623fe277800e4000b75170afd22ce0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SET&lt;/code&gt; (or equivalently &lt;code&gt;SET SESSION&lt;/code&gt;) is issued within a transaction that is later aborted, the effects of the &lt;code&gt;SET&lt;/code&gt; command disappear when the transaction is rolled back. Once the surrounding transaction is committed, the effects will persist until the end of the session, unless overridden by another &lt;code&gt;SET&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;SET&lt;/code&gt; （または同等の &lt;code&gt;SET SESSION&lt;/code&gt; が）後に中止されたトランザクション内で発行された、の影響 &lt;code&gt;SET&lt;/code&gt; のトランザクションがロールバックされたときにコマンドが消えます。周囲のトランザクションがコミットされると、別の &lt;code&gt;SET&lt;/code&gt; によってオーバーライドされない限り、効果はセッションの最後まで持続します。</target>
        </trans-unit>
        <trans-unit id="9705e1f00e76813c6d22bc3d6eab56b5d6ef9cd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WITH ADMIN OPTION&lt;/code&gt; is specified, the member can in turn grant membership in the role to others, and revoke membership in the role as well. Without the admin option, ordinary users cannot do that. A role is not considered to hold &lt;code&gt;WITH ADMIN OPTION&lt;/code&gt; on itself, but it may grant or revoke membership in itself from a database session where the session user matches the role. Database superusers can grant or revoke membership in any role to anyone. Roles having &lt;code&gt;CREATEROLE&lt;/code&gt; privilege can grant or revoke membership in any role that is not a superuser.</source>
          <target state="translated">場合は &lt;code&gt;WITH ADMIN OPTION&lt;/code&gt; 指定され、役割のメンバー缶順番に付与他者へのロールのメンバーシップ、およびREVOKEの会員にも。 adminオプションがないと、一般ユーザーはそれを行うことができません。ロールはそれ自体で &lt;code&gt;WITH ADMIN OPTION&lt;/code&gt; を保持するとは見なされませんが、セッションユーザーがロールと一致するデータベースセッションからそれ自体のメンバーシップを付与または取り消す場合があります。データベースのスーパーユーザーは、任意のロールのメンバーシップを誰にでも付与または取り消すことができます。 &lt;code&gt;CREATEROLE&lt;/code&gt; 特権を持つ役割は、スーパーユーザーではない任意の役割のメンバーシップを付与または取り消すことができます。</target>
        </trans-unit>
        <trans-unit id="abd80886f4a2be834b3e10dda7c9db6fa997569b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; is specified, the recipient of the privilege can in turn grant it to others. Without a grant option, the recipient cannot do that. Grant options cannot be granted to &lt;code&gt;PUBLIC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WITH GRANT OPTION&lt;/code&gt; が指定されている場合、特権の受信者はそれを他のユーザーに付与できます。付与オプションがないと、受信者はそれを行うことができません。付与オプションを &lt;code&gt;PUBLIC&lt;/code&gt; に付与することはできません。</target>
        </trans-unit>
        <trans-unit id="9373b178281613a72e6b020f7636dc488a5f1d3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WITH HOLD&lt;/code&gt; is specified and the transaction that created the cursor successfully commits, the cursor can continue to be accessed by subsequent transactions in the same session. (But if the creating transaction is aborted, the cursor is removed.) A cursor created with &lt;code&gt;WITH HOLD&lt;/code&gt; is closed when an explicit &lt;code&gt;CLOSE&lt;/code&gt; command is issued on it, or the session ends. In the current implementation, the rows represented by a held cursor are copied into a temporary file or memory area so that they remain available for subsequent transactions.</source>
          <target state="translated">場合 &lt;code&gt;WITH HOLD&lt;/code&gt; 指定し、カーソルを作成したトランザクションが正常にコミットされ、カーソルが同じセッションで、後続のトランザクションによってアクセスし続けることができます。（ただし、作成中のトランザクションが中止されると、カーソルは削除されます。） &lt;code&gt;WITH HOLD&lt;/code&gt; で作成されたカーソルは、明示的な &lt;code&gt;CLOSE&lt;/code&gt; コマンドが発行されるか、セッションが終了すると閉じられます。現在の実装では、保持されたカーソルで表される行が一時ファイルまたはメモリ領域にコピーされ、後続のトランザクションで引き続き使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="d9dde45619a2d3c398745c13026f768d6b6b6cbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;\d&lt;/code&gt; is used without a &lt;code&gt;pattern&lt;/code&gt; argument, it is equivalent to &lt;code&gt;\dtvmsE&lt;/code&gt; which will show a list of all visible tables, views, materialized views, sequences and foreign tables. This is purely a convenience measure.</source>
          <target state="translated">場合は &lt;code&gt;\d&lt;/code&gt; せずに使用されている &lt;code&gt;pattern&lt;/code&gt; 引数、それは同等です &lt;code&gt;\dtvmsE&lt;/code&gt; すべての可視テーブルの一覧が表示されますされ、ビューは、ビュー、シーケンス、外部テーブルをマテリアライズド。これは純粋に便利な手段です。</target>
        </trans-unit>
        <trans-unit id="99696408eca3e79444094829903879dfb2c22cfc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;\pset columns&lt;/code&gt; is zero, controls the width for the &lt;code&gt;wrapped&lt;/code&gt; format and width for determining if wide output requires the pager or should be switched to the vertical format in expanded auto mode.</source>
          <target state="translated">場合は &lt;code&gt;\pset columns&lt;/code&gt; ゼロである、のための幅を制御 &lt;code&gt;wrapped&lt;/code&gt; 広い出力がページャを必要とするか、または拡張され、オートモードでの垂直フォーマットに切り替えるべきかどうかを決定するためのフォーマットと幅を。</target>
        </trans-unit>
        <trans-unit id="65d8ff6e4bb927882e0081eeca2677185a93d180" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;archive_mode&lt;/code&gt; is set to &lt;code&gt;on&lt;/code&gt;, the archiver is not enabled during recovery or standby mode. If the standby server is promoted, it will start archiving after the promotion, but will not archive any WAL it did not generate itself. To get a complete series of WAL files in the archive, you must ensure that all WAL is archived, before it reaches the standby. This is inherently true with file-based log shipping, as the standby can only restore files that are found in the archive, but not if streaming replication is enabled. When a server is not in recovery mode, there is no difference between &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;always&lt;/code&gt; modes.</source>
          <target state="translated">場合 &lt;code&gt;archive_mode&lt;/code&gt; に設定されている &lt;code&gt;on&lt;/code&gt; 、アーカイバは、リカバリまたはスタンバイモード時に有効になっていません。スタンバイサーバーが昇格した場合、昇格後にアーカイブが開始されますが、自身が生成しなかったWALはアーカイブされません。アーカイブ内の完全な一連のWALファイルを取得するには、スタンバイに到達する前に、すべてのWALがアーカイブされていることを確認する必要があります。スタンバイはアーカイブで見つかったファイルのみを復元でき、ストリーミングレプリケーションが有効になっている場合は復元できないため、これはファイルベースのログ配布に本質的に当てはまります。サーバーがリカバリモードでない場合、 &lt;code&gt;on&lt;/code&gt; モードと &lt;code&gt;always&lt;/code&gt; モードの間に違いはありません。</target>
        </trans-unit>
        <trans-unit id="6c695d4c8ca7c7dc88430e23d97c617405cca08b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;archive_mode&lt;/code&gt; is set to &lt;code&gt;on&lt;/code&gt;, the archiver is not enabled during recovery or standby mode. If the standby server is promoted, it will start archiving after the promotion, but will not archive any WAL or timeline history files that it did not generate itself. To get a complete series of WAL files in the archive, you must ensure that all WAL is archived, before it reaches the standby. This is inherently true with file-based log shipping, as the standby can only restore files that are found in the archive, but not if streaming replication is enabled. When a server is not in recovery mode, there is no difference between &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;always&lt;/code&gt; modes.</source>
          <target state="translated">場合 &lt;code&gt;archive_mode&lt;/code&gt; に設定されている &lt;code&gt;on&lt;/code&gt; 、アーカイバは、リカバリまたはスタンバイモード時に有効になっていません。スタンバイサーバーが昇格された場合、昇格後にアーカイブが開始されますが、それ自体が生成しなかったWALまたはタイムライン履歴ファイルはアーカイブされません。アーカイブ内の一連のWALファイル全体を取得するには、スタンバイに到達する前に、すべてのWALがアーカイブされていることを確認する必要があります。スタンバイはアーカイブ内にあるファイルのみを復元でき、ストリーミングレプリケーションが有効になっている場合は復元できないため、これはファイルベースのログ配布に本質的に当てはまります。サーバーがリカバリモードでない場合、 &lt;code&gt;on&lt;/code&gt; モードと &lt;code&gt;always&lt;/code&gt; モードの間に違いはありません。</target>
        </trans-unit>
        <trans-unit id="4c5e023785c0eaf8158798154829baaec24284f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filename&lt;/code&gt; is &lt;code&gt;-&lt;/code&gt; (hyphen), then standard input is read until an EOF indication or &lt;code&gt;\q&lt;/code&gt; meta-command. This can be used to intersperse interactive input with input from files. Note however that Readline is not used in this case (much as if &lt;code&gt;-n&lt;/code&gt; had been specified).</source>
          <target state="translated">場合 &lt;code&gt;filename&lt;/code&gt; ある &lt;code&gt;-&lt;/code&gt; （ハイフン）、標準入力はEOF指示またはまで読み取られる &lt;code&gt;\q&lt;/code&gt; メタコマンド。これは、対話型入力とファイルからの入力を混在させるために使用できます。ただし、この場合、Readlineは使用されません（ &lt;code&gt;-n&lt;/code&gt; が指定されている場合と同様）。</target>
        </trans-unit>
        <trans-unit id="a4833473639ec21367a52ecaec9a765427862e75" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filename&lt;/code&gt; is &lt;code&gt;-&lt;/code&gt; (hyphen), then standard input is read until an EOF indication or &lt;code&gt;\q&lt;/code&gt; meta-command. This can be used to intersperse interactive input with input from files. Note that Readline behavior will be used only if it is active at the outermost level.</source>
          <target state="translated">場合 &lt;code&gt;filename&lt;/code&gt; ある &lt;code&gt;-&lt;/code&gt; （ハイフン）、標準入力はEOF指示またはまで読み取られる &lt;code&gt;\q&lt;/code&gt; メタコマンド。これは、対話型入力とファイルからの入力を混在させるために使用できます。Readlineの動作は、最も外側のレベルでアクティブな場合にのみ使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5d8bdbf29f6ea734e4384d8cec6971a567637c07" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filename&lt;/code&gt; is specified, the file is edited; after the editor exits, the file's content is copied into the current query buffer. If no &lt;code&gt;filename&lt;/code&gt; is given, the current query buffer is copied to a temporary file which is then edited in the same fashion. Or, if the current query buffer is empty, the most recently executed query is copied to a temporary file and edited in the same fashion.</source>
          <target state="translated">場合は &lt;code&gt;filename&lt;/code&gt; 指定され、このファイルが編集されます。エディターが終了すると、ファイルのコンテンツが現在のクエリバッファーにコピーされます。 &lt;code&gt;filename&lt;/code&gt; が指定されていない場合、現在のクエリバッファーは一時ファイルにコピーされ、同じ方法で編集されます。または、現在のクエリバッファーが空の場合、最後に実行されたクエリが一時ファイルにコピーされ、同じ方法で編集されます。</target>
        </trans-unit>
        <trans-unit id="87b5fa64a8f2d20fd3cdbf376e8372ac5be9682f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;frame_end&lt;/code&gt; is omitted it defaults to &lt;code&gt;CURRENT ROW&lt;/code&gt;. Restrictions are that &lt;code&gt;frame_start&lt;/code&gt; cannot be &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt;, &lt;code&gt;frame_end&lt;/code&gt; cannot be &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt;, and the &lt;code&gt;frame_end&lt;/code&gt; choice cannot appear earlier in the above list of &lt;code&gt;frame_start&lt;/code&gt; and &lt;code&gt;frame_end&lt;/code&gt; options than the &lt;code&gt;frame_start&lt;/code&gt; choice does &amp;mdash; for example &lt;code&gt;RANGE BETWEEN CURRENT ROW AND offset PRECEDING&lt;/code&gt; is not allowed.</source>
          <target state="translated">場合 &lt;code&gt;frame_end&lt;/code&gt; にデフォルトは省略されている &lt;code&gt;CURRENT ROW&lt;/code&gt; 。制限事項は、そのある &lt;code&gt;frame_start&lt;/code&gt; をすることはできません &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt; 、 &lt;code&gt;frame_end&lt;/code&gt; することはできません &lt;code&gt;UNBOUNDED PRECEDING&lt;/code&gt; 、および &lt;code&gt;frame_end&lt;/code&gt; 選択は、上記のリストで先に表示することはできません &lt;code&gt;frame_start&lt;/code&gt; と &lt;code&gt;frame_end&lt;/code&gt; よりもオプション &lt;code&gt;frame_start&lt;/code&gt; の選択肢がありません-たとえばための &lt;code&gt;RANGE BETWEEN CURRENT ROW AND offset PRECEDING&lt;/code&gt; 許可されていません。</target>
        </trans-unit>
        <trans-unit id="c1493aafac52b8fb4240f760d7718dc0ee8aca4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;genbki.pl&lt;/code&gt; needs to assign an OID to a catalog entry that does not have a manually-assigned OID, it will use a value in the range 10000&amp;mdash;11999. The server's OID counter is set to 12000 at the start of a bootstrap run. Thus objects created by regular SQL commands during the later phases of bootstrap, such as objects created while running the &lt;code&gt;information_schema.sql&lt;/code&gt; script, receive OIDs of 12000 or above.</source>
          <target state="translated">&lt;code&gt;genbki.pl&lt;/code&gt; が、手動で割り当てられたOIDを持たないカタログエントリにOIDを割り当てる必要がある場合、10000〜11999の範囲の値を使用します。サーバーのOIDカウンターは、ブートストラップ実行の開始時に12000に設定されます。したがって、 &lt;code&gt;information_schema.sql&lt;/code&gt; スクリプトの実行中に作成されたオブジェクトなど、ブートストラップの後の段階で通常のSQLコマンドによって作成されたオブジェクトは、12000以上のOIDを受け取ります。</target>
        </trans-unit>
        <trans-unit id="e8c7103cc04741a131a5ac6b2ff588f135e3ddcc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hot_standby&lt;/code&gt; is &lt;code&gt;on&lt;/code&gt; in &lt;code&gt;postgresql.conf&lt;/code&gt; (the default value) and there is a &lt;code&gt;standby.signal&lt;/code&gt; file present, the server will run in Hot Standby mode. However, it may take some time for Hot Standby connections to be allowed, because the server will not accept connections until it has completed sufficient recovery to provide a consistent state against which queries can run. During this period, clients that attempt to connect will be refused with an error message. To confirm the server has come up, either loop trying to connect from the application, or look for these messages in the server logs:</source>
          <target state="translated">場合 &lt;code&gt;hot_standby&lt;/code&gt; がある &lt;code&gt;on&lt;/code&gt; で &lt;code&gt;postgresql.conf&lt;/code&gt; （デフォルト値）とがあり &lt;code&gt;standby.signal&lt;/code&gt; ファイル存在は、サーバがホットスタンバイモードで実行されます。ただし、サーバーは、クエリを実行できる一貫した状態を提供するための十分な回復が完了するまで接続を受け入れないため、ホットスタンバイ接続が許可されるまでに時間がかかる場合があります。この期間中、接続を試みるクライアントは拒否され、エラーメッセージが表示されます。サーバーが起動したことを確認するには、ループしてアプリケーションから接続しようとするか、サーバーログで次のメッセージを探します。</target>
        </trans-unit>
        <trans-unit id="2c8e31ec3780ebc59dc482c2ca3c59c045a41221" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;in_range&lt;/code&gt; with &lt;code&gt;less&lt;/code&gt; = true is false for some &lt;code&gt;val1&lt;/code&gt; and &lt;code&gt;base&lt;/code&gt;, it must be false for every &lt;code&gt;val2&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;val1&lt;/code&gt; with the same &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;in_range&lt;/code&gt; と &lt;code&gt;less&lt;/code&gt; =真は、いくつかのために偽の &lt;code&gt;val1&lt;/code&gt; と &lt;code&gt;base&lt;/code&gt; 、それはすべてのために偽でなければならない &lt;code&gt;val2&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;val1&lt;/code&gt; と同じで &lt;code&gt;base&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="332193353c52bde38e0eb3c661ad221eb1be8b6c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;in_range&lt;/code&gt; with &lt;code&gt;less&lt;/code&gt; = true is false for some &lt;code&gt;val&lt;/code&gt; and &lt;code&gt;base1&lt;/code&gt;, it must be false for every &lt;code&gt;base2&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;base1&lt;/code&gt; with the same &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;in_range&lt;/code&gt; と &lt;code&gt;less&lt;/code&gt; =真は、いくつかのために偽の &lt;code&gt;val&lt;/code&gt; と &lt;code&gt;base1&lt;/code&gt; 、それはすべてのために偽でなければなりません &lt;code&gt;base2&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;base1&lt;/code&gt; 同じで &lt;code&gt;val&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="aa930e16baff55aa31e6852a2b74660f8ec3544e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;in_range&lt;/code&gt; with &lt;code&gt;less&lt;/code&gt; = true is true for some &lt;code&gt;val1&lt;/code&gt; and &lt;code&gt;base&lt;/code&gt;, it must be true for every &lt;code&gt;val2&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;val1&lt;/code&gt; with the same &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;in_range&lt;/code&gt; と &lt;code&gt;less&lt;/code&gt; =真は、いくつかのために真である &lt;code&gt;val1&lt;/code&gt; と &lt;code&gt;base&lt;/code&gt; 、それはすべてのために真でなければならない &lt;code&gt;val2&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;val1&lt;/code&gt; と同じで &lt;code&gt;base&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342ab2a9a17f2fb194989decac130f65bf2a3ab2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;in_range&lt;/code&gt; with &lt;code&gt;less&lt;/code&gt; = true is true for some &lt;code&gt;val&lt;/code&gt; and &lt;code&gt;base1&lt;/code&gt;, it must be true for every &lt;code&gt;base2&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;base1&lt;/code&gt; with the same &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;in_range&lt;/code&gt; と &lt;code&gt;less&lt;/code&gt; =真は、いくつかのために真である &lt;code&gt;val&lt;/code&gt; と &lt;code&gt;base1&lt;/code&gt; 、それはすべてのために真でなければなりません &lt;code&gt;base2&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;base1&lt;/code&gt; 同じで &lt;code&gt;val&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e3506d1e84d2320597dc89468fa4fbfef68d52af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pager_min_lines&lt;/code&gt; is set to a number greater than the page height, the pager program will not be called unless there are at least this many lines of output to show. The default setting is 0.</source>
          <target state="translated">&lt;code&gt;pager_min_lines&lt;/code&gt; がページの高さよりも大きい数値に設定されている場合、少なくとも表示する出力の行数がなければ、ページャープログラムは呼び出されません。デフォルト設定は0です。</target>
        </trans-unit>
        <trans-unit id="ad57f5bc57449c70be03f78cafa8198c7fecd4a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pattern&lt;/code&gt; does not contain percent signs or underscores, then the pattern only represents the string itself; in that case &lt;code&gt;LIKE&lt;/code&gt; acts like the equals operator. An underscore (&lt;code&gt;_&lt;/code&gt;) in &lt;code&gt;pattern&lt;/code&gt; stands for (matches) any single character; a percent sign (&lt;code&gt;%&lt;/code&gt;) matches any sequence of zero or more characters.</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; パーセント記号またはアンダースコアが含まれていない場合、パターンは文字列自体を表すだけです。その場合、 &lt;code&gt;LIKE&lt;/code&gt; は等号演算子のように機能します。 &lt;code&gt;pattern&lt;/code&gt; 内の下線（ &lt;code&gt;_&lt;/code&gt; ）は、任意の1文字を表します（一致します）。パーセント記号（ &lt;code&gt;%&lt;/code&gt; ）は、ゼロ個以上の文字のシーケンスと一致します。</target>
        </trans-unit>
        <trans-unit id="929282dbe9432a59498fc7de54e9f120a0c23fde" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pg_resetwal&lt;/code&gt; complains that it cannot determine valid data for &lt;code&gt;pg_control&lt;/code&gt;, you can force it to proceed anyway by specifying the &lt;code&gt;-f&lt;/code&gt; (force) option. In this case plausible values will be substituted for the missing data. Most of the fields can be expected to match, but manual assistance might be needed for the next OID, next transaction ID and epoch, next multitransaction ID and offset, and WAL starting location fields. These fields can be set using the options discussed below. If you are not able to determine correct values for all these fields, &lt;code&gt;-f&lt;/code&gt; can still be used, but the recovered database must be treated with even more suspicion than usual: an immediate dump and reload is imperative. &lt;em&gt;Do not&lt;/em&gt; execute any data-modifying operations in the database before you dump, as any such action is likely to make the corruption worse.</source>
          <target state="translated">場合 &lt;code&gt;pg_resetwal&lt;/code&gt; は、それがために有効なデータを判別できないと文句を言い &lt;code&gt;pg_control&lt;/code&gt; の、あなたが指定して、とにかく続行することを強制することができ &lt;code&gt;-f&lt;/code&gt; （強制）オプションを選択します。この場合、欠落データの代わりにもっともらしい値が使用されます。ほとんどのフィールドは一致すると予想されますが、次のOID、次のトランザクションIDとエポック、次のマルチトランザクションIDとオフセット、およびWAL開始場所フィールドについては、手動による支援が必要になる場合があります。これらのフィールドは、以下で説明するオプションを使用して設定できます。これらすべてのフィールドの正しい値を決定できない場合でも、 &lt;code&gt;-f&lt;/code&gt; を使用できますが、リカバリされたデータベースは、通常よりもさらに疑いを持って処理する必要があります。即時のダンプとリロードが不可欠です。&lt;em&gt;しない&lt;/em&gt; ダンプする前にデータベースでデータ変更操作を実行してください。そのようなアクションは破損をさらに悪化させる可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="f13d0730a2d7549daf41a4dfb84c03f31c4b1319" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pg_upgrade&lt;/code&gt; aborted before linking started, the old cluster was unmodified; it can be restarted.</source>
          <target state="translated">リンクが開始する前に &lt;code&gt;pg_upgrade&lt;/code&gt; が中止された場合、古いクラスターは変更されていません。再起動できます。</target>
        </trans-unit>
        <trans-unit id="e188ae9422c6dffedeb340ab362e8934b4b3e43d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;prokind&lt;/code&gt; indicates that the entry is for an aggregate function, there should be a matching row in &lt;code&gt;pg_aggregate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prokind&lt;/code&gt; がエントリが集約関数用であることを示している場合、pg_aggregateに一致する行がある &lt;code&gt;pg_aggregate&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1e29943d28ac675fb4f0be463fde98da976b1859" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;synchronous_standby_names&lt;/code&gt; is empty, the only meaningful settings are &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;off&lt;/code&gt;; &lt;code&gt;remote_apply&lt;/code&gt;, &lt;code&gt;remote_write&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; all provide the same local synchronization level as &lt;code&gt;on&lt;/code&gt;. The local behavior of all non-&lt;code&gt;off&lt;/code&gt; modes is to wait for local flush of WAL to disk. In &lt;code&gt;off&lt;/code&gt; mode, there is no waiting, so there can be a delay between when success is reported to the client and when the transaction is later guaranteed to be safe against a server crash. (The maximum delay is three times &lt;a href=&quot;runtime-config-wal#GUC-WAL-WRITER-DELAY&quot;&gt;wal_writer_delay&lt;/a&gt;.) Unlike &lt;a href=&quot;runtime-config-wal#GUC-FSYNC&quot;&gt;fsync&lt;/a&gt;, setting this parameter to &lt;code&gt;off&lt;/code&gt; does not create any risk of database inconsistency: an operating system or database crash might result in some recent allegedly-committed transactions being lost, but the database state will be just the same as if those transactions had been aborted cleanly. So, turning &lt;code&gt;synchronous_commit&lt;/code&gt; off can be a useful alternative when performance is more important than exact certainty about the durability of a transaction. For more discussion see &lt;a href=&quot;wal-async-commit&quot;&gt;Section 29.3&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;synchronous_standby_names&lt;/code&gt; が空である、唯一の意味のある設定は、 &lt;code&gt;on&lt;/code&gt; と &lt;code&gt;off&lt;/code&gt; 。 &lt;code&gt;remote_apply&lt;/code&gt; 、 &lt;code&gt;remote_write&lt;/code&gt; 、および &lt;code&gt;local&lt;/code&gt; はすべて、と同じローカル同期レベルを提供 &lt;code&gt;on&lt;/code&gt; ます。すべての非 &lt;code&gt;off&lt;/code&gt; モードのローカル動作は、WALがディスクにローカルフラッシュされるのを待つことです。で &lt;code&gt;off&lt;/code&gt; モードで、待ち時間なしではありませんので、成功がクライアントに報告されたときに、トランザクションが、後にサーバがクラッシュに対して安全であることが保証されている場合との間に遅延が発生する場合があります。 （最大遅延は3倍である&lt;a href=&quot;runtime-config-wal#GUC-WAL-WRITER-DELAY&quot;&gt;wal_writer_delay&lt;/a&gt;。）とは異なり&lt;a href=&quot;runtime-config-wal#GUC-FSYNC&quot;&gt;FSYNC&lt;/a&gt;、このパラメータを設定する &lt;code&gt;off&lt;/code&gt; データベースの不整合のリスクは発生しません。オペレーティングシステムまたはデータベースのクラッシュにより、最近コミットされたとされるトランザクションが失われる可能性がありますが、データベースの状態は、それらのトランザクションが正常に中止された場合とまったく同じになります。したがって、 &lt;code&gt;synchronous_commit&lt;/code&gt; をオフにすることは、トランザクションの耐久性に関する正確な確実性よりもパフォーマンスが重要な場合に役立つ代替手段になる可能性があります。詳細については、&lt;a href=&quot;wal-async-commit&quot;&gt;セクション29.3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="32186644a8227bc9629078cb6964f294409c3b69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;synchronous_standby_names&lt;/code&gt; is empty, the settings &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;remote_apply&lt;/code&gt;, &lt;code&gt;remote_write&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; all provide the same synchronization level: transaction commits only wait for local flush to disk.</source>
          <target state="translated">場合 &lt;code&gt;synchronous_standby_names&lt;/code&gt; が空である、設定 &lt;code&gt;on&lt;/code&gt; 、 &lt;code&gt;remote_apply&lt;/code&gt; 、 &lt;code&gt;remote_write&lt;/code&gt; と &lt;code&gt;local&lt;/code&gt; すべて同じ同期レベルを提供：トランザクションのコミットは、ディスクへのローカルのフラッシュを待ちます。</target>
        </trans-unit>
        <trans-unit id="e17b6ba8e8e554c6fa5ecad07078e794222b7865" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typarray&lt;/code&gt; is not 0 then it identifies another row in &lt;code&gt;pg_type&lt;/code&gt;, which is the &amp;ldquo;true&amp;rdquo; array type having this type as element</source>
          <target state="translated">&lt;code&gt;typarray&lt;/code&gt; が0でない場合は、 &lt;code&gt;pg_type&lt;/code&gt; の別の行を識別します。これは、この型を要素として持つ「真の」配列型です</target>
        </trans-unit>
        <trans-unit id="1643f010e11a8ec209a76b1daf0df11fad85a094" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typdefaultbin&lt;/code&gt; is not null, it is the &lt;code&gt;nodeToString()&lt;/code&gt; representation of a default expression for the type. This is only used for domains.</source>
          <target state="translated">&lt;code&gt;typdefaultbin&lt;/code&gt; がnullでない場合、それは型のデフォルト式の &lt;code&gt;nodeToString()&lt;/code&gt; 表現です。これはドメインにのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="a098d6d2d4ed82c302d8bd246178fb2399080947" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typelem&lt;/code&gt; is not 0 then it identifies another row in &lt;code&gt;pg_type&lt;/code&gt;. The current type can then be subscripted like an array yielding values of type &lt;code&gt;typelem&lt;/code&gt;. A &amp;ldquo;true&amp;rdquo; array type is variable length (&lt;code&gt;typlen&lt;/code&gt; = -1), but some fixed-length (&lt;code&gt;typlen&lt;/code&gt; &amp;gt; 0) types also have nonzero &lt;code&gt;typelem&lt;/code&gt;, for example &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;point&lt;/code&gt;. If a fixed-length type has a &lt;code&gt;typelem&lt;/code&gt; then its internal representation must be some number of values of the &lt;code&gt;typelem&lt;/code&gt; data type with no other data. Variable-length array types have a header defined by the array subroutines.</source>
          <target state="translated">&lt;code&gt;typelem&lt;/code&gt; が0でない場合、それは &lt;code&gt;pg_type&lt;/code&gt; の別の行を識別します。次に、現在の型に、 &lt;code&gt;typelem&lt;/code&gt; 型の値を生成する配列のように添え字を付けることができます。 「真の」配列型は可変長（ &lt;code&gt;typlen&lt;/code&gt; = -1）ですが、一部の固定長（ &lt;code&gt;typlen&lt;/code&gt; &amp;gt; 0）型も、 &lt;code&gt;name&lt;/code&gt; や &lt;code&gt;point&lt;/code&gt; など、ゼロ以外の &lt;code&gt;typelem&lt;/code&gt; を持っています。固定長型が持っている場合 &lt;code&gt;typelem&lt;/code&gt; その内部表現は、値のいくつかの数でなければなら &lt;code&gt;typelem&lt;/code&gt; ない他のデータとデータタイプ。可変長配列型には、配列サブルーチンによって定義されたヘッダーがあります。</target>
        </trans-unit>
        <trans-unit id="962e01512a43e6b662e513b46b2720b8eda2c536" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is specified it must be either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; which will enable or disable display of a locale-specific character to separate groups of digits to the left of the decimal marker. If &lt;code&gt;value&lt;/code&gt; is omitted the command toggles between regular and locale-specific numeric output.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; を指定する場合、 &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; にする必要があります。これにより、ロケール固有の文字の表示を有効または無効にして、小数点の左側の桁のグループを区切ることができます。場合 &lt;code&gt;value&lt;/code&gt; 、通常とロケール固有の数値出力間のコマンドトグルを省略しています。</target>
        </trans-unit>
        <trans-unit id="0ac5be223120c8314531a02347c6041d7cd668b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is specified it must be either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; which will enable or disable display of the table footer (the &lt;code&gt;(n rows)&lt;/code&gt; count). If &lt;code&gt;value&lt;/code&gt; is omitted the command toggles footer display on or off.</source>
          <target state="translated">場合は &lt;code&gt;value&lt;/code&gt; 指定されている、それはどちらかでなければならない &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; テーブルフッタ（の表示を有効または無効になる &lt;code&gt;(n rows)&lt;/code&gt; カウントを）。場合 &lt;code&gt;value&lt;/code&gt; 省略されているコマンドは、オンまたはオフにフッターの表示を切り替えます。</target>
        </trans-unit>
        <trans-unit id="5cba26a9c2b6ebc7647fabad9eea11f281ddf193" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is specified it must be either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; which will enable or disable tuples-only mode. If &lt;code&gt;value&lt;/code&gt; is omitted the command toggles between regular and tuples-only output. Regular output includes extra information such as column headers, titles, and various footers. In tuples-only mode, only actual table data is shown.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; を指定する場合は、 &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; にする必要があります。これにより、タプルのみのモードが有効または無効になります。場合 &lt;code&gt;value&lt;/code&gt; 通常のタプルのみの出力間のコマンドトグルを省略しています。通常の出力には、列ヘッダー、タイトル、さまざまなフッターなどの追加情報が含まれます。タプルのみのモードでは、実際のテーブルデータのみが表示されます。</target>
        </trans-unit>
        <trans-unit id="6fae09f9e5152eceff65217f721d75ba03342e63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is specified it must be either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;, which will enable or disable expanded mode, or &lt;code&gt;auto&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is omitted the command toggles between the on and off settings. When expanded mode is enabled, query results are displayed in two columns, with the column name on the left and the data on the right. This mode is useful if the data wouldn't fit on the screen in the normal &amp;ldquo;horizontal&amp;rdquo; mode. In the auto setting, the expanded mode is used whenever the query output has more than one column and is wider than the screen; otherwise, the regular mode is used. The auto setting is only effective in the aligned and wrapped formats. In other formats, it always behaves as if the expanded mode is off.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; を指定する場合は、拡張モードを有効または無効にする &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; のいずれかでなければなりません。場合 &lt;code&gt;value&lt;/code&gt; オンとオフの設定の間のコマンドトグルを省略しています。拡張モードが有効な場合、クエリ結果は2つの列に表示され、左側に列名、右側にデータが表示されます。このモードは、データが通常の「水平」モードで画面に収まらない場合に役立ちます。自動設定では、クエリ出力に複数の列があり、画面よりも幅が広い場合は常に拡張モードが使用されます。それ以外の場合は、通常モードが使用されます。 auto設定は、整列およびラップされた形式でのみ有効です。他のフォーマットでは、常に拡張モードがオフであるかのように動作します。</target>
        </trans-unit>
        <trans-unit id="ca01598c7c349232ee9c2f60f218cecf6c2e9b2b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;weights&lt;/code&gt; is supplied, only occurrences having one of those weights are counted.</source>
          <target state="translated">&lt;code&gt;weights&lt;/code&gt; が指定されている場合、それらの重みの1つを持つオカレンスのみがカウントされます。</target>
        </trans-unit>
        <trans-unit id="2dc5f92abbdc131542b5a63d7715ef7b5720a0a1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;do_detoast&lt;/code&gt;&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, attribute that will be detoasted as needed. Default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt; &lt;code&gt;do_detoast&lt;/code&gt; が&lt;/em&gt;ある &lt;code&gt;true&lt;/code&gt; 必要に応じて、属性detoastedされています。デフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6ce8f09a4ea0ee9a5326d6de1774ed409702a270" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;new_value&lt;/code&gt;&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt;, behaves identically to &lt;code&gt;jsonb_set&lt;/code&gt;. Otherwise behaves according to the value of &lt;em&gt;&lt;code&gt;null_value_treatment&lt;/code&gt;&lt;/em&gt; which must be one of &lt;code&gt;'raise_exception'&lt;/code&gt;, &lt;code&gt;'use_json_null'&lt;/code&gt;, &lt;code&gt;'delete_key'&lt;/code&gt;, or &lt;code&gt;'return_target'&lt;/code&gt;. The default is &lt;code&gt;'use_json_null'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;new_value&lt;/code&gt; &lt;/em&gt;が &lt;code&gt;NULL&lt;/code&gt; でない場合、 &lt;code&gt;jsonb_set&lt;/code&gt; と同じように動作します。それ以外の場合は、&lt;em&gt; &lt;code&gt;null_value_treatment&lt;/code&gt; &lt;/em&gt;の値に従って動作します。この値は、 &lt;code&gt;'raise_exception'&lt;/code&gt; 、 &lt;code&gt;'use_json_null'&lt;/code&gt; 、 &lt;code&gt;'delete_key'&lt;/code&gt; 、または &lt;code&gt;'return_target'&lt;/code&gt; いずれかである必要があります。デフォルトは &lt;code&gt;'use_json_null'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9855c6593bb788e4a7fc1baab60a566fbf901f03" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;tableforest&lt;/code&gt;&lt;/em&gt; is false, then the resulting XML document looks like this:</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;tableforest&lt;/code&gt; &lt;/em&gt;がfalseの場合、結果のXMLドキュメントは次のようになります。</target>
        </trans-unit>
        <trans-unit id="c50916d42c87228c370dd43c14046f7ce4402cc5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;tableforest&lt;/code&gt;&lt;/em&gt; is true, the result is an XML content fragment that looks like this:</source>
          <target state="translated">場合&lt;em&gt; &lt;code&gt;tableforest&lt;/code&gt; が&lt;/em&gt; trueの場合、結果は次のようになりますことをXMLコンテンツフラグメントであります：</target>
        </trans-unit>
        <trans-unit id="a00e85c8c38a440ad71ba2067ec654d399028aa3" translate="yes" xml:space="preserve">
          <source>If BC has been specified, negate the year and add one for internal storage. (There is no year zero in the Gregorian calendar, so numerically 1 BC becomes year zero.)</source>
          <target state="translated">BCが指定されている場合は、年を否定して内部記憶用に1を追加します(グレゴリオ暦には0年はないので、数値的には1BCが0年になります)。(グレゴリオ暦にはゼロ年はないので、数値的には1BCがゼロ年になります)</target>
        </trans-unit>
        <trans-unit id="2a6677efb7a76da9c59cedae433efda4935b91f1" translate="yes" xml:space="preserve">
          <source>If BC was not specified, and if the year field was two digits in length, then adjust the year to four digits. If the field is less than 70, then add 2000, otherwise add 1900.</source>
          <target state="translated">BCが指定されておらず、年のフィールドが2桁の場合は、年を4桁に調整します。フィールドが70未満の場合は2000を追加し、そうでない場合は1900を追加します。</target>
        </trans-unit>
        <trans-unit id="a9b50e5581cb9a085c462f20b706e74a8924f7f1" translate="yes" xml:space="preserve">
          <source>If CSV-format output is enabled in &lt;code&gt;log_destination&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt; will be appended to the timestamped log file name to create the file name for CSV-format output. (If &lt;code&gt;log_filename&lt;/code&gt; ends in &lt;code&gt;.log&lt;/code&gt;, the suffix is replaced instead.)</source>
          <target state="translated">CSV形式の出力が &lt;code&gt;log_destination&lt;/code&gt; で有効になっている場合、タイムスタンプ付きのログファイル名に &lt;code&gt;.csv&lt;/code&gt; が追加され、CSV形式の出力用のファイル名が作成されます。（ &lt;code&gt;log_filename&lt;/code&gt; が &lt;code&gt;.log&lt;/code&gt; で終わる場合、代わりにサフィックスが置き換えられます。）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
