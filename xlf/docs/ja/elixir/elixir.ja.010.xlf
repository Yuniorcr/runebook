<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="2811dc2871409b74c7634f3fe21b9cfad8e3426d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="70a0cb56fb988edcefd7f57e57c953aed4c9f29d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:pang&lt;/code&gt; if it fails, or &lt;code&gt;:pong&lt;/code&gt; if it is successful.</source>
          <target state="translated">失敗した場合は &lt;code&gt;:pang&lt;/code&gt; を返し、成功した場合は &lt;code&gt;:pong&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fa4c892f8a51f6377453163a59366a24b8673154" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; is out of bounds.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; が範囲外の場合、 &lt;code&gt;default&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d21a89523dd182a1ba29c1ffb24f85507a56dc6f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if none of the above are writable.</source>
          <target state="translated">上記のいずれも書き込み可能でない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1f0f9beba5634a498253a4c1ac4faaaf1bb2245e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if the module cannot be found, if it is an alias, or if it is not a valid &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールが見つからない場合、エイリアスである場合、または有効な&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; で&lt;/a&gt;ない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="898fb5eb3ba6e23f0ccd7d7539ee54b65de26942" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;string&lt;/code&gt; escaped using the specified &lt;code&gt;color&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;color&lt;/code&gt; を使用してエスケープされた &lt;code&gt;string&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4ac9182b080017ba693939798ee4b3253313dff7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;config&lt;/code&gt; is the configuration for an umbrella project.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; がアンブレラプロジェクトの構成である場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9962d949955102edf7d4c95bfcf26efb4913fef8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;enumerable&lt;/code&gt; is empty, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; が空の場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c5674c2a52dea0e62c8659c4dd8c99131becc466" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;fun.(element)&lt;/code&gt; is truthy for all elements in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; のすべての要素について &lt;code&gt;fun.(element)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="f74f38a142de62e72e50fbadcb7c75b8d2b80e17" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;fun.(element)&lt;/code&gt; is truthy for at least one element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; の少なくとも1つの要素について &lt;code&gt;fun.(element)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="179a1732a2513e4c3ac51063ba35f20395592f09" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is a key in &lt;code&gt;map&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">keyが &lt;code&gt;map&lt;/code&gt; 内の &lt;code&gt;key&lt;/code&gt; である場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc728eb61f6e336eb00009dac943b8ae70a8775e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; が &lt;code&gt;right&lt;/code&gt; よりも小さい場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7e3c7c1904dff8eceac5f6c60a3d217708b53587" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than or equal to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; が &lt;code&gt;right&lt;/code&gt; 以下の場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="217d90c4952fc34630ab587101fa3345f127ffd6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; が &lt;code&gt;right&lt;/code&gt; より大きい場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="752f02f9b82f19702cd7c61e772ca7001eabb5d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than or equal to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; が &lt;code&gt;right&lt;/code&gt; 以上の場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="514fe375f6bf375eaadfe6b59fe1fa8665022d7f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; matches &lt;code&gt;right&lt;/code&gt; (if it's a regular expression) or contains &lt;code&gt;right&lt;/code&gt; (if it's a string).</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 場合は &lt;code&gt;left&lt;/code&gt; のマッチ &lt;code&gt;right&lt;/code&gt; （それは正規表現の場合）または含まれている &lt;code&gt;right&lt;/code&gt; （それは文字列の場合）。</target>
        </trans-unit>
        <trans-unit id="ea241259b8bf2bfa681b13e041e456b2a872afb0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is an improper list. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; が不適切なリストで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="13bb0ccf3c3642db1839be80f4503b7d3328419c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; starts with the given &lt;code&gt;prefix&lt;/code&gt; list; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; が指定された &lt;code&gt;prefix&lt;/code&gt; リストで始まる場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="30b6f388eb9b873621632a9225533fab3fd32015" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;module&lt;/code&gt; is loaded and contains a public &lt;code&gt;function&lt;/code&gt; with the given &lt;code&gt;arity&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; がロードされ、指定された &lt;code&gt;arity&lt;/code&gt; 持つパブリック &lt;code&gt;function&lt;/code&gt; が含まれている場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a1ff647bff772fb3c27239fe80409991ad029c38" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;module&lt;/code&gt; is loaded and contains a public &lt;code&gt;macro&lt;/code&gt; with the given &lt;code&gt;arity&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; が読み込まれ、指定された &lt;code&gt;arity&lt;/code&gt; 持つパブリック &lt;code&gt;macro&lt;/code&gt; が含まれている場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="98b09495aa1c8dc345b23e7149ef0c6a164db4ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string1&lt;/code&gt; is canonically equivalent to 'string2'.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; が「string2」と正規に等しい場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="315cea72c5e0f6161a3b846c3752c56b24a3948c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string&lt;/code&gt; ends with any of the suffixes given.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; が指定されたサフィックスのいずれかで終わる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c5875290ab59e60512fe2c79091c539fa829d55d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string&lt;/code&gt; starts with any of the prefixes given.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; が指定されたプレフィックスのいずれかで始まる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b90e50f671b05dc996377d3785c4a6e0e543d9ff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5e0cec38e965cb1a7be0a1586c0c1e423e655e66" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a PID (process identifier); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がPID（プロセス識別子）の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bc1ef9358f093fef465082c08cb4e7223756760e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a binary; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がバイナリの場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0cb68195b8efb7757981bf81f0fe6586be5d3de1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a bitstring (including a binary); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がビット文字列（バイナリを含む）の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="79b3d661830095f41c2c68053ed17e9b52d8a01f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a floating-point number; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が浮動小数点数の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2dfdb69c5aae41737cbd815e59c8f1871298087f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a function that can be applied with &lt;code&gt;arity&lt;/code&gt; number of arguments; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が &lt;code&gt;arity&lt;/code&gt; 個の引数で適用できる関数である場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6e89f73bf316fbcc1d6d52abc07e4cb1ed326b1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a function; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が関数の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dc10af9077eb74d82ee86a391efb59e0cd84b7b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a keyword list; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がキーワードリストの場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4e151da898f287d233b2078fa6ce5e9be52488e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a list with zero or more elements; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が0個以上の要素を持つリストの場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67b05b7c88321c7891dc98e1ad13a9b71be8ac91" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a map; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がマップの場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ead0e61ee4b2af85c87450fd0aad9af3d5e78d5a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a port identifier; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がポート識別子の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7cc5a8e3d83346b723a1e98b79b03336e58e5997" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a reference; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が参照の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="836dab30db9cebf9ce31984fd2d439fc70e98fae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a tuple; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がタプルの場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cd9eb92704a0ae5f8e88de02a6cf887bf2e96aca" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an atom; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がアトムの場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2b8986c4215419978baefd80231f45b3beba66ef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an integer; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が整数の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="14d9412f32700bc4cbbf29f37ca9bcb0a10c90d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is either an integer or a floating-point number; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が整数または浮動小数点数の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7a9f98e326f05651d287e6878b38e46a8be222b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is either the atom &lt;code&gt;true&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt; (i.e., a boolean); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; がアトム &lt;code&gt;true&lt;/code&gt; またはアトム &lt;code&gt;false&lt;/code&gt; （つまりブール値）の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3f92792e4651577bb721731f8ac15665ae74573f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;tuple&lt;/code&gt; in &lt;code&gt;module&lt;/code&gt; is marked as overridable.</source>
          <target state="translated">返し &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;tuple&lt;/code&gt; 内 &lt;code&gt;module&lt;/code&gt; オーバーライドとしてマークされています。</target>
        </trans-unit>
        <trans-unit id="9aaf8e3dc93c82783121ab82de252342ee31d985" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;version&lt;/code&gt; satisfies &lt;code&gt;requirement&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise. Raises a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidRequirementError.html&quot;&gt;&lt;code&gt;Version.InvalidRequirementError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;requirement&lt;/code&gt; is not parsable, or a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidVersionError.html&quot;&gt;&lt;code&gt;Version.InvalidVersionError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;version&lt;/code&gt; is not parsable. If given an already parsed version and requirement this function won't raise.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; が &lt;code&gt;requirement&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。発生させ&lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidRequirementError.html&quot;&gt; &lt;code&gt;Version.InvalidRequirementError&lt;/code&gt; の&lt;/a&gt;場合は例外 &lt;code&gt;requirement&lt;/code&gt; 解析可能ではない、または&lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidVersionError.html&quot;&gt; &lt;code&gt;Version.InvalidVersionError&lt;/code&gt; の&lt;/a&gt;場合に例外を &lt;code&gt;version&lt;/code&gt; 解析可能ではありません。すでに解析されたバージョンと要件が与えられた場合、この関数は発生しません。</target>
        </trans-unit>
        <trans-unit id="3c6d2a9d4ac17e816f44f5c8d82e7d9189bc17b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;version&lt;/code&gt; satisfies &lt;code&gt;requirement&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise. Raises a &lt;a href=&quot;version.invalidrequirementerror&quot;&gt;&lt;code&gt;Version.InvalidRequirementError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;requirement&lt;/code&gt; is not parsable, or a &lt;a href=&quot;version.invalidversionerror&quot;&gt;&lt;code&gt;Version.InvalidVersionError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;version&lt;/code&gt; is not parsable. If given an already parsed version and requirement this function won't raise.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; が &lt;code&gt;requirement&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。発生させ&lt;a href=&quot;version.invalidrequirementerror&quot;&gt; &lt;code&gt;Version.InvalidRequirementError&lt;/code&gt; の&lt;/a&gt;場合は例外 &lt;code&gt;requirement&lt;/code&gt; 解析可能ではない、または&lt;a href=&quot;version.invalidversionerror&quot;&gt; &lt;code&gt;Version.InvalidVersionError&lt;/code&gt; の&lt;/a&gt;場合に例外を &lt;code&gt;version&lt;/code&gt; 解析可能ではありません。すでに解析済みのバージョンと要件が指定されている場合、この関数は発生しません。</target>
        </trans-unit>
        <trans-unit id="b102633aa65f0f78fd85e893465d9febbf820c32" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if IEx was started, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">IExが開始された場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e78d65a702a5304adca7eb9dab5e18bc6ac1ece7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if Mix is in debug mode, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">Mixがデバッグモードの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="db763b2e2e218025c9bf3894db52d7ba51dfc882" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if given module is a task.</source>
          <target state="translated">指定されたモジュールがタスクの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9105393990e5f4b49e81200562038a9b37a0983b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is less than or equal to right.</source>
          <target state="translated">左が右以下の場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="10d817cde0ccac57c3abe0e906618887d09b990f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is less than right.</source>
          <target state="translated">左が右より小さい場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4e3751787d81fb8270fa300c2ad1abeed3087881" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is more than or equal to right.</source>
          <target state="translated">左が右以上の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6d3a72a03b6c80be9f6c0fd73128ebce147e5ab7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is more than right.</source>
          <target state="translated">左が右より大きい場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0ae8d1d3d77e5618d9d9149276c9cd506b6a50c2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, &lt;code&gt;false&lt;/code&gt; if not, and the atom &lt;code&gt;:ignored&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; 、失敗した場合はfalse、ローカルノードがアクティブでない場合はatom &lt;code&gt;:ignored&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5569a7432c35dfe52f433263028783085945fdba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;integer&lt;/code&gt; is an even number, otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;integer&lt;/code&gt; が偶数の場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="96e3993e05bf18f75065b0a674e4abf8709186ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;integer&lt;/code&gt; is an odd number, otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;integer&lt;/code&gt; が奇数の場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="73e3c10f82f542446d2c7d01a47b7b0bfb6361e2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;term&lt;/code&gt; is a regex. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;term&lt;/code&gt; が正規表現の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a75c9e8f261e40e0328fdfc1d1e450ebf79d0480" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;term&lt;/code&gt; is an exception.</source>
          <target state="translated">指定された &lt;code&gt;term&lt;/code&gt; が例外で &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="5cd92930de87a97665516f3e7c0ed77c0241d737" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given name and arity is a special form.</source>
          <target state="translated">指定された名前とアリティが特殊な形式の場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dbbcb4829fb9912c3525baacd41622ceec30d952" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given name and arity is an operator.</source>
          <target state="translated">指定された名前とアリティが演算子の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="52116aac5e28100d570d3cb42c4444a615786a50" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given path exists.</source>
          <target state="translated">指定されたパスが存在する場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c5fc3ddeee6d05ca5c0842207c7f56323a1a6f14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given path is a directory.</source>
          <target state="translated">指定されたパスがディレクトリの場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="517323943306de393ed5a17a3debaae9a9fed99c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given quoted expression is an AST literal.</source>
          <target state="translated">与えられた引用式がASTリテラルで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="d6e0001b2628e13496971665ebef6ff9dd613c7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given quoted expression represents a quoted literal.</source>
          <target state="translated">指定された引用符付き式が引用符付きリテラルを表す場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="070beb97acda30870921a2b5172f899e978ee793" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given year is a leap year.</source>
          <target state="translated">指定された年がうるう年で &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d291a7b2377eea8162c3c36aa1cd1e9a3a7a6551" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the local node is alive.</source>
          <target state="translated">ローカルノードが生きている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="156b20d9c8ac68b8747fdeb1da0914a3b632fddb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the path is a regular file.</source>
          <target state="translated">パスが通常のファイルの場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1d9b07689695541ab22ddfbd90213a8b9d2d0606" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the protocol was consolidated.</source>
          <target state="translated">プロトコルが統合されている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="881d186c21e4675ad58d6e30bbadb52783870ebd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are equal.</source>
          <target state="translated">2つの項が等しい場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2e22125544cf945bb28eba5fc390b3a027251780" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are exactly equal.</source>
          <target state="translated">2つの項が完全に等しい場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6f32dc56bc22b6598e27fc9e37220143e0f323c6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not equal.</source>
          <target state="translated">2つの項が等しくない場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="065ff8f9bd783f62860f90b7044cda8eab69fb25" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not exactly equal.</source>
          <target state="translated">2つの項が完全に等しくない場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a83460add6e7dd59fd53822fb82653e66c9d24b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not exactly equal. See &lt;a href=&quot;#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt; for a definition of what is considered &quot;exactly equal&quot;.</source>
          <target state="translated">2つの項が完全に等しくない場合は &lt;code&gt;true&lt;/code&gt; を返します。「&lt;a href=&quot;#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt;に等しい」と見なされるものの定義については、=== / 2を参照してください。</target>
        </trans-unit>
        <trans-unit id="229c2393cba0014721bc6cce3f70d909956c53cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the year in the given &lt;code&gt;date&lt;/code&gt; is a leap year.</source>
          <target state="translated">指定された &lt;code&gt;date&lt;/code&gt; 年がうるう年である場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="13a00c2b01cafb21f20aede0315828bc757af694" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is such a spec and it was copied as a callback. If the function associated to the spec has documentation defined prior to invoking this function, the docs are copied too.</source>
          <target state="translated">そのような仕様があり、コールバックとしてコピーされた場合は &lt;code&gt;true&lt;/code&gt; を返します。仕様に関連付けられている関数に、この関数を呼び出す前にドキュメントが定義されている場合、ドキュメントもコピーされます。</target>
        </trans-unit>
        <trans-unit id="baa3ca70dba967b0e62e4a45ae94ce224c5b50d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if two calendars have the same moment of starting a new day, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">2つのカレンダーが新しい日を開始する同じ瞬間を持っている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="efe1be0b98d40df3569dc29aeea771c28ce30865" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="47f2f68842134b4ffc89dac515dace73b452b30e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :nofile}&lt;/code&gt; if the object code (i.e. &quot;.beam&quot; file) for the module could not be found locally.</source>
          <target state="translated">モジュールのオブジェクトコード（「.beam」ファイル）がローカルで見つからなかった場合は &lt;code&gt;{:error, :nofile}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="b3f710f35d60c6b707ea291cad4605f95090d8c8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, binary}&lt;/code&gt;, where &lt;code&gt;binary&lt;/code&gt; is a binary data object that contains the contents of &lt;code&gt;path&lt;/code&gt;, or &lt;code&gt;{:error, reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;{:ok, binary}&lt;/code&gt; 返します。ここで、 &lt;code&gt;binary&lt;/code&gt; は &lt;code&gt;path&lt;/code&gt; の内容を含むバイナリデータオブジェクト、またはエラーが発生した場合は &lt;code&gt;{:error, reason}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="25e0d60989d049e604d74bc930f296684099ec4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, bytes_copied}&lt;/code&gt; if successful, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">成功した場合は &lt;code&gt;{:ok, bytes_copied}&lt;/code&gt; 返し &lt;code&gt;{:error, reason}&lt;/code&gt; それ以外の場合は{：error、reason}を返します。</target>
        </trans-unit>
        <trans-unit id="d3f3b14d34e951b96b9a67a82034916e33ca9318" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, date}&lt;/code&gt; if the calendars are compatible, or &lt;code&gt;{:error, :incompatible_calendars}&lt;/code&gt; if they are not.</source>
          <target state="translated">カレンダーに互換性がある場合は &lt;code&gt;{:ok, date}&lt;/code&gt; 返し、互換性がない場合は &lt;code&gt;{:error, :incompatible_calendars}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="c6057594582ceb37532b2d7e625f688602918826" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, element}&lt;/code&gt; if found, otherwise &lt;code&gt;:error&lt;/code&gt;.</source>
          <target state="translated">見つかった場合は &lt;code&gt;{:ok, element}&lt;/code&gt; 返し、それ以外の場合は &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8465f6ff407bdb0c564ac803b1f00a18b0d13256" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, files_and_directories}&lt;/code&gt; with all files and directories removed in no specific order, &lt;code&gt;{:error, reason, file}&lt;/code&gt; otherwise.</source>
          <target state="translated">すべてのファイルとディレクトリを特定の順序で削除せずに &lt;code&gt;{:ok, files_and_directories}&lt;/code&gt; を返し &lt;code&gt;{:error, reason, file}&lt;/code&gt; それ以外の場合は{：error、reason、file}を返します。</target>
        </trans-unit>
        <trans-unit id="19f842e2bafa50ff26925ccf6b987eee1f2ba2de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, files}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">成功した場合は &lt;code&gt;{:ok, files}&lt;/code&gt; を返し &lt;code&gt;{:error, reason}&lt;/code&gt; それ以外の場合は{：error、reason}を返します。</target>
        </trans-unit>
        <trans-unit id="8fc3733718dbca9b65f2fc1faa8f991cc16a2e70" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, function_result}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">成功した場合は &lt;code&gt;{:ok, function_result}&lt;/code&gt; を返し &lt;code&gt;{:error, reason}&lt;/code&gt; それ以外の場合は{：error、reason}を返します。</target>
        </trans-unit>
        <trans-unit id="98db4c3fa0a1a28efa6e85fa145c623de0fb6e8e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, quoted_form}&lt;/code&gt; if it succeeds, &lt;code&gt;{:error, {line, error, token}}&lt;/code&gt; otherwise.</source>
          <target state="translated">成功した場合は &lt;code&gt;{:ok, quoted_form}&lt;/code&gt; 場合は &lt;code&gt;{:error, {line, error, token}}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4c62985686c63d161efb90844fcc11aa585deb21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, reply}&lt;/code&gt; if the reply is received while shutting down the task, &lt;code&gt;{:exit, reason}&lt;/code&gt; if the task died, otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">タスクのシャットダウン中に応答を受信した場合は &lt;code&gt;{:ok, reply}&lt;/code&gt; 返し、タスクが停止した場合は &lt;code&gt;{:exit, reason}&lt;/code&gt; 返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7721fcaadf1867ccdb0ee8fabd46fbe4697b0e3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, reply}&lt;/code&gt; if the reply is received, &lt;code&gt;nil&lt;/code&gt; if no reply has arrived, or &lt;code&gt;{:exit, reason}&lt;/code&gt; if the task has already exited. Keep in mind that normally a task failure also causes the process owning the task to exit. Therefore this function can return &lt;code&gt;{:exit, reason}&lt;/code&gt; only if</source>
          <target state="translated">返信が受信された場合は &lt;code&gt;{:ok, reply}&lt;/code&gt; 返し、返信が届かなかった場合は &lt;code&gt;nil&lt;/code&gt; を返し、タスクがすでに終了した場合は &lt;code&gt;{:exit, reason}&lt;/code&gt; 返します。通常、タスクが失敗すると、タスクを所有するプロセスも終了することに注意してください。したがって、この関数は &lt;code&gt;{:exit, reason}&lt;/code&gt; 返すことができるのは、</target>
        </trans-unit>
        <trans-unit id="6896659ffea22eb2764c29cba88f3b1d0028bf30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, supervisor_pid}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt; if not called from the test process.</source>
          <target state="translated">テストプロセスから呼び出されない場合は &lt;code&gt;{:ok, supervisor_pid}&lt;/code&gt; または &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42c38d3829fadb64161c3356c163c581ae817e29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, time}&lt;/code&gt; if the conversion was successful, or &lt;code&gt;{:error, reason}&lt;/code&gt; if it was not, for some reason.</source>
          <target state="translated">変換が成功した場合は &lt;code&gt;{:ok, time}&lt;/code&gt; 返し、 &lt;code&gt;{:error, reason}&lt;/code&gt; 場合は{：error、reason}を返します。</target>
        </trans-unit>
        <trans-unit id="154aaa63b2577dee11cda9665444466fcb0b0d8a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, value}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; if there is such a key, or &lt;code&gt;:error&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">戻り値 &lt;code&gt;{:ok, value}&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 下の値である &lt;code&gt;key&lt;/code&gt; 、キー、または存在する場合 &lt;code&gt;:error&lt;/code&gt; 場合に &lt;code&gt;key&lt;/code&gt; 見つかりません。</target>
        </trans-unit>
        <trans-unit id="fa7e955fa1d334a3f092f415c81243abd2e6e73b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{pid, value}&lt;/code&gt; pairs under the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; that match &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;registry&lt;/code&gt; 内の指定された &lt;code&gt;key&lt;/code&gt; 下で、 &lt;code&gt;pattern&lt;/code&gt; に一致する &lt;code&gt;{pid, value}&lt;/code&gt; ペアを返します。</target>
        </trans-unit>
        <trans-unit id="85343a2e2d448cdb8c68e2a769e6043640f27d33" translate="yes" xml:space="preserve">
          <source>Returns Elixir's version as binary.</source>
          <target state="translated">Elixirのバージョンをバイナリで返します。</target>
        </trans-unit>
        <trans-unit id="c8327a48eb3d8b0888d21e8643d31dbfd61ce65e" translate="yes" xml:space="preserve">
          <source>Returns ExUnit configuration.</source>
          <target state="translated">ExUnit の設定を返します。</target>
        </trans-unit>
        <trans-unit id="e45ed402a1aef0911bf0539790a9e21d296ec8d5" translate="yes" xml:space="preserve">
          <source>Returns IEx configuration.</source>
          <target state="translated">IEx の設定を返します。</target>
        </trans-unit>
        <trans-unit id="d8ddd6d989fce705f0bd075a07a2e07b8419b81a" translate="yes" xml:space="preserve">
          <source>Returns Unicode graphemes in the string as per Extended Grapheme Cluster algorithm.</source>
          <target state="translated">Extended Grapheme Clusterアルゴリズムに従って、文字列内のUnicode書記素を返します。</target>
        </trans-unit>
        <trans-unit id="a879d2b042e9ebf3e77966bf7fa720eb5fe03d58" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; for the same point in time, but instead at the time zone provided. It assumes that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is valid and exists in the given time zone and calendar.</source>
          <target state="translated">同じ時点の&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;を返しますが、指定されたタイムゾーンを返します。これは、&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;が有効であり、指定されたタイムゾーンとカレンダーに存在することを前提としています。</target>
        </trans-unit>
        <trans-unit id="68a4b55af4634a3e875518186464c1a14a8382cb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; in the match context.</source>
          <target state="translated">一致コンテキストで&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="6eec35892f7539fb9be61cf27410a2e47b62417d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;file.stream&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; for the given &lt;code&gt;path&lt;/code&gt; with the given &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;modes&lt;/code&gt; で、指定された &lt;code&gt;path&lt;/code&gt; &lt;a href=&quot;file.stream&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="dccffa93c4c5a66e488e798b23abf8252297da2e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stream.html&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; for the given &lt;code&gt;path&lt;/code&gt; with the given &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;modes&lt;/code&gt; 指定された &lt;code&gt;path&lt;/code&gt; &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stream.html&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d8144be8098e36dc7446a14e943dc98ccaeb4c84" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;{new_value, old_value}&lt;/code&gt; tuple or &lt;code&gt;:error&lt;/code&gt; if there is no such key assigned to the current process.</source>
          <target state="translated">&lt;code&gt;{new_value, old_value}&lt;/code&gt; タプルを返します。現在のプロセスにそのようなキーが割り当てられていない場合は &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ed9d70afa84c2d6c400dd032dc85829ad3b83b52" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt; in the given &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;base&lt;/code&gt; の &lt;code&gt;integer&lt;/code&gt; のテキスト表現に対応するバイナリを返します。</target>
        </trans-unit>
        <trans-unit id="3fe6fea6c77a74fd7aefea1b6360d798d95ece81" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; のテキスト表現に対応するバイナリを返します。</target>
        </trans-unit>
        <trans-unit id="fb6a545975b068b3aecc7914d1615a7f44705a51" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of the given float.</source>
          <target state="translated">指定した float のテキスト表現に対応するバイナリを返します。</target>
        </trans-unit>
        <trans-unit id="e9ee2af2fefcd231b751de3abbbb4367e4a017d5" translate="yes" xml:space="preserve">
          <source>Returns a binary with the contents of the given filename, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error occurs.</source>
          <target state="translated">指定されたファイル名の内容を含むバイナリを返します。エラーが発生した場合は&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="9683178b14e89f1c355e93b4487f048f5ca8a5f6" translate="yes" xml:space="preserve">
          <source>Returns a binary with the contents of the given filename, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error occurs.</source>
          <target state="translated">指定されたファイル名の内容を含むバイナリを返すか、エラーが発生した場合は&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="9f6a14d09fc51779f49cc04321f6fe02c2fb21d7" translate="yes" xml:space="preserve">
          <source>Returns a boolean if the dependency can be fetched or it is meant to be previously available in the file system.</source>
          <target state="translated">依存関係を取得できるかどうか、あるいはそれがファイルシステムで以前に利用可能なものであるかどうかをブール値で返します。</target>
        </trans-unit>
        <trans-unit id="120b1743f1c9682c89a8ee1edeecbdcde083f3e9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether there was a match or not.</source>
          <target state="translated">一致したかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="b5dce3473d3544c2ba77aa5170f30e27f43d3523" translate="yes" xml:space="preserve">
          <source>Returns a break document based on the given &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;string&lt;/code&gt; 基づいてブレークドキュメントを返します。</target>
        </trans-unit>
        <trans-unit id="148f06e99adcd7ca106331bc4f679ef4533da0a3" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt; in the given &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;base&lt;/code&gt; の &lt;code&gt;integer&lt;/code&gt; のテキスト表現に対応する文字リストを返します。</target>
        </trans-unit>
        <trans-unit id="1503e8fafb0830e350373d283f11c7581b3c38f8" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of the given &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;integer&lt;/code&gt; テキスト表現に対応する文字リストを返します。</target>
        </trans-unit>
        <trans-unit id="43b18b9794e48a6db989f7ec557071f9c475c477" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of the given float.</source>
          <target state="translated">指定した float のテキスト表現に対応する charlist を返します。</target>
        </trans-unit>
        <trans-unit id="a66b98e04f0ea2a62e2fb6e6de98289cd67c3736" translate="yes" xml:space="preserve">
          <source>Returns a document entity used to represent nothingness.</source>
          <target state="translated">何もない状態を表現するために使用されているドキュメントエンティティを返します。</target>
        </trans-unit>
        <trans-unit id="a1bfd05f736e844750b386b1c01e973ef52bc4ca" translate="yes" xml:space="preserve">
          <source>Returns a flex break document based on the given &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;string&lt;/code&gt; 基づいてフレックスブレイクドキュメントを返します。</target>
        </trans-unit>
        <trans-unit id="0c47e20aaea8620c53179f6fb170bdceaf383d8a" translate="yes" xml:space="preserve">
          <source>Returns a float value between 0 and 1 representing the bag distance between &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; と &lt;code&gt;string2&lt;/code&gt; の間のバッグの距離を表す0と1の間の浮動小数点値を返します。</target>
        </trans-unit>
        <trans-unit id="998bf1dee48191c100b29bb8870dc0bfd94436f0" translate="yes" xml:space="preserve">
          <source>Returns a float value between &lt;code&gt;0.0&lt;/code&gt; (equates to no similarity) and &lt;code&gt;1.0&lt;/code&gt; (is an exact match) representing &lt;a href=&quot;https://en.wikipedia.org/wiki/Jaro-Winkler_distance&quot;&gt;Jaro&lt;/a&gt; distance between &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; と &lt;code&gt;string2&lt;/code&gt; の間の&lt;a href=&quot;https://en.wikipedia.org/wiki/Jaro-Winkler_distance&quot;&gt;Jaro&lt;/a&gt;距離を表す &lt;code&gt;0.0&lt;/code&gt; （類似性なし）と &lt;code&gt;1.0&lt;/code&gt; （完全一致）の間の浮動小数点値を返します。</target>
        </trans-unit>
        <trans-unit id="e9f8bf09a9f34d4aa9970244bb6b08137539aa70" translate="yes" xml:space="preserve">
          <source>Returns a float whose text representation is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">テキスト表現が &lt;code&gt;string&lt;/code&gt; であるfloatを返します。</target>
        </trans-unit>
        <trans-unit id="31dfe0ef9ec0fedde587f2c8b1e43ddb330410d1" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses all elements of a list that match the provided predicate.</source>
          <target state="translated">指定した述語にマッチするリストの全要素にアクセスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="b2e7a33fe2eca022933ae3188c0bec0da1284381" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses all the elements in a list.</source>
          <target state="translated">リスト内のすべての要素にアクセスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="cfd1c05d413a490f8c760724f59340db6b61354f" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the element at &lt;code&gt;index&lt;/code&gt; (zero based) of a list.</source>
          <target state="translated">リストの &lt;code&gt;index&lt;/code&gt; （ゼロベース）の要素にアクセスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="ea1bb2d03634b86a0bbf62fe40a739bf0c9036dd" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the element at the given index in a tuple.</source>
          <target state="translated">タプル内の指定したインデックスの要素にアクセスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="1b5bb78552cf299e3751c2c8eda6479ac9f7282f" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the given key in a map/struct.</source>
          <target state="translated">マップ/構造体内の指定したキーにアクセスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="55f8b9bb8e42ffaf566f7f747a4ca7567d68281b" translate="yes" xml:space="preserve">
          <source>Returns a function that slices the data structure contiguously.</source>
          <target state="translated">データ構造体を連続的にスライスする関数を返します。</target>
        </trans-unit>
        <trans-unit id="2f00d7a399dbc354afa8c2290b54636c57247f20" translate="yes" xml:space="preserve">
          <source>Returns a group containing the specified document &lt;code&gt;doc&lt;/code&gt;.</source>
          <target state="translated">指定されたドキュメント &lt;code&gt;doc&lt;/code&gt; を含むグループを返します。</target>
        </trans-unit>
        <trans-unit id="8c5398d8391a0259d1ccb3c8a1e4048bcef9effb" translate="yes" xml:space="preserve">
          <source>Returns a keyword list containing the file and line information as keys.</source>
          <target state="translated">ファイルや行の情報をキーとして含むキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="648bd9570648164795082b3f1c9c78a01e804e98" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of &lt;code&gt;{record_name, fields}&lt;/code&gt; tuples where &lt;code&gt;record_name&lt;/code&gt; is the name of an extracted record and &lt;code&gt;fields&lt;/code&gt; is a list of &lt;code&gt;{field, value}&lt;/code&gt; tuples representing the fields for that record.</source>
          <target state="translated">戻り値のキーワードリスト &lt;code&gt;{record_name, fields}&lt;/code&gt; タプル &lt;code&gt;record_name&lt;/code&gt; 抽出したレコードの名前である &lt;code&gt;fields&lt;/code&gt; リストされ &lt;code&gt;{field, value}&lt;/code&gt; そのレコードのフィールドを表すタプル。</target>
        </trans-unit>
        <trans-unit id="8337c1a71b4665b5929e7d32d232482d86ee48e9" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an &lt;em&gt;edit script&lt;/em&gt; with nested diffs.</source>
          <target state="translated">ネストされたdiffを持つ&lt;em&gt;編集スクリプト&lt;/em&gt;を表すキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="8a26e224d0b8b71dece8f5e916d84049523f0979" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an &lt;em&gt;edit script&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;編集スクリプト&lt;/em&gt;を表すキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="cb34012caf25d7194cf4d1bc9c046b1e42666795" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an edit script.</source>
          <target state="translated">編集スクリプトを表すキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="eedf848148ad7204be333289f9f16e13b3fc0697" translate="yes" xml:space="preserve">
          <source>Returns a keyword list with information about a function.</source>
          <target state="translated">関数に関する情報を含むキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="a294c106358f5929d6a933ceb72092fc4e91db19" translate="yes" xml:space="preserve">
          <source>Returns a list of PIDs corresponding to all the processes currently existing on the local node.</source>
          <target state="translated">ローカルノード上に現在存在するすべてのプロセスに対応するPIDのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d8906cc4706b054f3a0871dd9d0310a0ffd4a655" translate="yes" xml:space="preserve">
          <source>Returns a list of all ports in the current node.</source>
          <target state="translated">現在のノード内のすべてのポートのリストを返します。</target>
        </trans-unit>
        <trans-unit id="442155f6918bffcbda71b7032acfad2eca666df5" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes in the system, excluding the local node.</source>
          <target state="translated">ローカルノードを除く、システム内のすべての可視ノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f8eb0a24f0941de92ece10ea21ea0c9bd87f18fc" translate="yes" xml:space="preserve">
          <source>Returns a list of binaries each of which contains only one kind of characters.</source>
          <target state="translated">バイナリのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f3fb52e7396fe9cc95ccc08f46f8b8423b0ca55f" translate="yes" xml:space="preserve">
          <source>Returns a list of code points encoded as strings.</source>
          <target state="translated">文字列としてエンコードされたコードポイントのリストを返します。</target>
        </trans-unit>
        <trans-unit id="41dabd7ef6701ee8f9c03c392f544c0830be2893" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in &lt;code&gt;enumerable&lt;/code&gt; excluding those for which the function &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">関数 &lt;code&gt;fun&lt;/code&gt; が真の値を返す要素を除いて、 &lt;code&gt;enumerable&lt;/code&gt; 要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="08000c5f7be9ad33a6570c782818808e7f042883" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in &lt;code&gt;enumerable&lt;/code&gt; in reverse order.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 要素のリストを逆の順序で返します。</target>
        </trans-unit>
        <trans-unit id="c4d08a398f8c15dbdfe83b1a89d1c9a457b9a84f" translate="yes" xml:space="preserve">
          <source>Returns a list of every &lt;code&gt;nth&lt;/code&gt; element in the &lt;code&gt;enumerable&lt;/code&gt; dropped, starting with the first element.</source>
          <target state="translated">最初の要素から始めて、ドロップされた &lt;code&gt;enumerable&lt;/code&gt; 要素の &lt;code&gt;nth&lt;/code&gt; ごとの要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="4b51f0df81b5ca5b56cb57f91725427bb75c7424" translate="yes" xml:space="preserve">
          <source>Returns a list of every &lt;code&gt;nth&lt;/code&gt; element in the &lt;code&gt;enumerable&lt;/code&gt;, starting with the first element.</source>
          <target state="translated">最初の要素から始めて、 &lt;code&gt;enumerable&lt;/code&gt; の &lt;code&gt;nth&lt;/code&gt; ごとの要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="b454366f7b3d78cbfc941bae8df22ee9fbb4a118" translate="yes" xml:space="preserve">
          <source>Returns a list of information of all the function calls in the project.</source>
          <target state="translated">プロジェクト内のすべての関数呼び出しの情報のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5bff518683c6906e55dfac98df0d59c753368978" translate="yes" xml:space="preserve">
          <source>Returns a list of information of all the runtime function calls in the project.</source>
          <target state="translated">プロジェクト内のすべてのランタイム関数呼び出しの情報のリストを返します。</target>
        </trans-unit>
        <trans-unit id="543f883da41aab298162970e26e0991542c23a78" translate="yes" xml:space="preserve">
          <source>Returns a list of lists.</source>
          <target state="translated">リストのリストを返します。</target>
        </trans-unit>
        <trans-unit id="c263c9ad704887b94b7128901687e89cfa0d788f" translate="yes" xml:space="preserve">
          <source>Returns a list of names in the regex.</source>
          <target state="translated">正規表現に含まれる名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="0e24c8386f4a72d5dc84fefa837a24b53df43bca" translate="yes" xml:space="preserve">
          <source>Returns a list of names which have been registered using &lt;a href=&quot;#register/2&quot;&gt;&lt;code&gt;register/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#register/2&quot;&gt; &lt;code&gt;register/2&lt;/code&gt; &lt;/a&gt;を使用して登録された名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e8470e68b35ac3b3b896cdb54a7773a9a2458a74" translate="yes" xml:space="preserve">
          <source>Returns a list of nodes according to argument given.</source>
          <target state="translated">与えられた引数に応じたノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f3ec5a571b567053b25abfcf409e5640616ed510" translate="yes" xml:space="preserve">
          <source>Returns a list of project configuration files for this project.</source>
          <target state="translated">このプロジェクトのプロジェクト設定ファイルの一覧を返します。</target>
        </trans-unit>
        <trans-unit id="62f88ef397b63230e48736e2ce2545ec58ddb020" translate="yes" xml:space="preserve">
          <source>Returns a list of results of invoking &lt;code&gt;fun&lt;/code&gt; on every &lt;code&gt;nth&lt;/code&gt; element of &lt;code&gt;enumerable&lt;/code&gt;, starting with the first element.</source>
          <target state="translated">最初の要素から始めて、 &lt;code&gt;enumerable&lt;/code&gt; の &lt;code&gt;nth&lt;/code&gt; 要素ごとに &lt;code&gt;fun&lt;/code&gt; を呼び出した結果のリストを返します。</target>
        </trans-unit>
        <trans-unit id="4c0da4ac57cdd143f28807e9843083a477fb478d" translate="yes" xml:space="preserve">
          <source>Returns a list of strings, where the string is expected to be a task optionally followed by its arguments.</source>
          <target state="translated">文字列のリストを返します。文字列は、タスクであることが予想され、引数の後にはオプションでその文字列が続きます。</target>
        </trans-unit>
        <trans-unit id="7292bae2c0f63dc656dbd249aaa4731f9723fd61" translate="yes" xml:space="preserve">
          <source>Returns a list of these parts.</source>
          <target state="translated">これらの部品のリストを返します。</target>
        </trans-unit>
        <trans-unit id="fccd605cb6dc280f4d9624edc25a5e8af076d5e8" translate="yes" xml:space="preserve">
          <source>Returns a list of these parts. The pattern can be a string, a list of strings, a regular expression, or a compiled pattern.</source>
          <target state="translated">これらのパーツのリストを返します。パターンは、文字列、文字列のリスト、正規表現、コンパイルされたパターンのいずれかです。</target>
        </trans-unit>
        <trans-unit id="8244ce7e7962dc18e63cc6bb50b0981feb2b847c" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where the first element is the module name and the second one is its bytecode (as a binary). A &lt;code&gt;file&lt;/code&gt; can be given as second argument which will be used for reporting warnings and errors.</source>
          <target state="translated">最初の要素がモジュール名で2番目の要素がバイトコード（バイナリとして）であるタプルのリストを返します。 &lt;code&gt;file&lt;/code&gt; 警告やエラーを報告するために使用される2番目の引数として与えることができます。</target>
        </trans-unit>
        <trans-unit id="8030ddd5e1a6c45acf4116b3a1cb2af7216011a1" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where the first element is the module name and the second one is its bytecode (as a binary). Opposite to &lt;a href=&quot;#require_file/2&quot;&gt;&lt;code&gt;require_file/2&lt;/code&gt;&lt;/a&gt;, it does not track the filename of the compiled file.</source>
          <target state="translated">最初の要素がモジュール名で2番目の要素がバイトコード（バイナリとして）であるタプルのリストを返します。&lt;a href=&quot;#require_file/2&quot;&gt; &lt;code&gt;require_file/2&lt;/code&gt; の&lt;/a&gt;反対で、コンパイルされたファイルのファイル名を追跡しません。</target>
        </trans-unit>
        <trans-unit id="7b04fc71c3bba89d65fc90b112e21df50106a3bc" translate="yes" xml:space="preserve">
          <source>Returns a list of variables in the current environment.</source>
          <target state="translated">現在の環境にある変数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="a435441f15be08b7ff15b579018abecdc00bc602" translate="yes" xml:space="preserve">
          <source>Returns a list where each element is the result of invoking &lt;code&gt;fun&lt;/code&gt; on each corresponding element of &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">各要素が &lt;code&gt;enumerable&lt;/code&gt; の対応する各要素で &lt;code&gt;fun&lt;/code&gt; を呼び出した結果であるリストを返します。</target>
        </trans-unit>
        <trans-unit id="ec27903f5ae78dc874c9df5818a4b29f8aa65266" translate="yes" xml:space="preserve">
          <source>Returns a list with &lt;code&gt;value&lt;/code&gt; inserted at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;index&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 挿入されたリストを返します。</target>
        </trans-unit>
        <trans-unit id="7f2ea00fcc82bbc6b6dcd711a2adc16be411dabf" translate="yes" xml:space="preserve">
          <source>Returns a list with a replaced value at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;index&lt;/code&gt; 値を置き換えたリストを返します。</target>
        </trans-unit>
        <trans-unit id="738903c88ae1a99226fdc1ef400364560e39c48b" translate="yes" xml:space="preserve">
          <source>Returns a list with all available compiler options.</source>
          <target state="translated">利用可能なすべてのコンパイラオプションのリストを返します。</target>
        </trans-unit>
        <trans-unit id="194e44d56acccbecc0953b596c47bacb2836f1fa" translate="yes" xml:space="preserve">
          <source>Returns a list with an updated value at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;index&lt;/code&gt; 値が更新されたリストを返します。</target>
        </trans-unit>
        <trans-unit id="cac6cb2d5b65cec2cebc7f98c8e676a52e8a12e5" translate="yes" xml:space="preserve">
          <source>Returns a list with information about all children of the given supervisor.</source>
          <target state="translated">指定した監督者のすべての子に関する情報を一覧で返します。</target>
        </trans-unit>
        <trans-unit id="8be9be340deaec39cff95b3d58502fb1f32311d0" translate="yes" xml:space="preserve">
          <source>Returns a list with information about all children.</source>
          <target state="translated">すべての子に関する情報を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="ae5b3e7b9544d246ab2ddf253fc4625df3b3fad2" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications which are currently running.</source>
          <target state="translated">現在実行中のアプリケーションに関する情報を一覧で返します。</target>
        </trans-unit>
        <trans-unit id="9556f6608ac48363049e28e2254897ca4d3d6bbe" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications which have been loaded.</source>
          <target state="translated">読み込んだアプリケーションに関する情報を一覧で返します。</target>
        </trans-unit>
        <trans-unit id="9dc40e627344f95c93e4ec9b038b5d04b7dabe06" translate="yes" xml:space="preserve">
          <source>Returns a list with the available compiler options.</source>
          <target state="translated">利用可能なコンパイラオプションのリストを返します。</target>
        </trans-unit>
        <trans-unit id="caa61a915d0b0a3954d25228367b76a55e8c46b5" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements of &lt;code&gt;enumerable&lt;/code&gt; shuffled.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 要素をシャッフルしたリストを返します。</target>
        </trans-unit>
        <trans-unit id="75e31c70d49c501aa570c31218e633b38b9cac15" translate="yes" xml:space="preserve">
          <source>Returns a map containing count values for the given supervisor.</source>
          <target state="translated">指定されたスーパバイザのカウント値を含むマップを返します。</target>
        </trans-unit>
        <trans-unit id="6aa62c1653283a212e8297ca294f4114c48e5453" translate="yes" xml:space="preserve">
          <source>Returns a map containing count values for the supervisor.</source>
          <target state="translated">スーパーバイザのカウント値を含むマップを返します。</target>
        </trans-unit>
        <trans-unit id="f64f0a2526f951c2cc84f1d137432fe69495d9aa" translate="yes" xml:space="preserve">
          <source>Returns a map containing the total number of tests, the number of failures, the number of excluded tests and the number of skipped tests.</source>
          <target state="translated">テストの総数、失敗の数、除外されたテストの数、およびスキップされたテストの数を含むマップを返します。</target>
        </trans-unit>
        <trans-unit id="22eec31a1a969336ec50d1b3efedbdd13a3e921b" translate="yes" xml:space="preserve">
          <source>Returns a map with keys as unique elements given by &lt;code&gt;key_fun&lt;/code&gt; and values as the count of every element.</source>
          <target state="translated">&lt;code&gt;key_fun&lt;/code&gt; で指定された一意の要素としてキーを持ち、すべての要素の数として値を持つマップを返します。</target>
        </trans-unit>
        <trans-unit id="2faef9abf0859c818da0d6ce12d9c161d543a35d" translate="yes" xml:space="preserve">
          <source>Returns a map with keys as unique elements of &lt;code&gt;enumerable&lt;/code&gt; and values as the count of every element.</source>
          <target state="translated">キーを &lt;code&gt;enumerable&lt;/code&gt; な一意の要素として、値をすべての要素の数としてマップを返します。</target>
        </trans-unit>
        <trans-unit id="e48947a95d8a72816f9cddcba983270eb4a365c9" translate="yes" xml:space="preserve">
          <source>Returns a map with the Elixir version, the Erlang/OTP release it was compiled with, a short Git revision hash and the date and time it was built.</source>
          <target state="translated">Elixir のバージョン、コンパイルした Erlang/OTP リリース、短い Git リビジョンハッシュ、ビルドされた日時をマップで返します。</target>
        </trans-unit>
        <trans-unit id="4cbfdcfd806b8b2dd63bdb3d7952ca6be2cb7883" translate="yes" xml:space="preserve">
          <source>Returns a map with the umbrella child applications paths.</source>
          <target state="translated">アンブレラの子アプリケーションのパスを含むマップを返します。</target>
        </trans-unit>
        <trans-unit id="577b259579425fb15446d410225cd83d09c11ab4" translate="yes" xml:space="preserve">
          <source>Returns a microsecond tuple truncated to a given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">マイクロ秒のタプルを、指定された精度（ &lt;code&gt;:microsecond&lt;/code&gt; 、 &lt;code&gt;:millisecond&lt;/code&gt; または &lt;code&gt;:second&lt;/code&gt; ）に切り捨てて返します。</target>
        </trans-unit>
        <trans-unit id="456254db671e7211f8cf975ebc7a01fd2d4e0998" translate="yes" xml:space="preserve">
          <source>Returns a new empty map.</source>
          <target state="translated">新しい空のマップを返します。</target>
        </trans-unit>
        <trans-unit id="1de9e80d913162895ee668db73d628ac36f3f1be" translate="yes" xml:space="preserve">
          <source>Returns a new list with all the tuple elements.</source>
          <target state="translated">すべてのタプル要素を含む新しいリストを返します。</target>
        </trans-unit>
        <trans-unit id="f1eabd6cd97a0e9ba88d32a0847a516f885aa149" translate="yes" xml:space="preserve">
          <source>Returns a new map with all the key-value pairs in &lt;code&gt;map&lt;/code&gt; where the key is in &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">キーが &lt;code&gt;keys&lt;/code&gt; にある &lt;code&gt;map&lt;/code&gt; 内のすべてのキーと値のペアを含む新しいマップを返します。</target>
        </trans-unit>
        <trans-unit id="af29913ee55ab14a28ffeef5c6463f0e6a27de67" translate="yes" xml:space="preserve">
          <source>Returns a new set which is a copy of &lt;code&gt;map_set&lt;/code&gt; but without &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set&lt;/code&gt; のコピーであるが &lt;code&gt;value&lt;/code&gt; ない新しいセットを返します。</target>
        </trans-unit>
        <trans-unit id="d89b807379e6e83302850820787d6e2455a9be49" translate="yes" xml:space="preserve">
          <source>Returns a new set.</source>
          <target state="translated">新しいセットを返します。</target>
        </trans-unit>
        <trans-unit id="593aa885fd57e21ecae557eeb33661b2357bb26c" translate="yes" xml:space="preserve">
          <source>Returns a new string created by replacing occurrences of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt; with &lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subject&lt;/code&gt; 内の &lt;code&gt;pattern&lt;/code&gt; の出現を &lt;code&gt;replacement&lt;/code&gt; で置き換えることにより作成された新しい文字列を返します。</target>
        </trans-unit>
        <trans-unit id="5083144141615836b53ba33e2622989da2341885" translate="yes" xml:space="preserve">
          <source>Returns a new string padded with a leading filler which is made of elements from the &lt;code&gt;padding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; の要素で構成される、先頭のフィラーが埋め込まれた新しい文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f5f12166c88991612389eebd8f5e894dc39963de" translate="yes" xml:space="preserve">
          <source>Returns a new string padded with a trailing filler which is made of elements from the &lt;code&gt;padding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; の要素で構成される末尾のフィラーで埋められた新しい文字列を返します。</target>
        </trans-unit>
        <trans-unit id="3b79ec9067cac0c611785cc80d52ec1f184545e0" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with the element appended at the end, and contains the elements in &lt;code&gt;tuple&lt;/code&gt; followed by &lt;code&gt;value&lt;/code&gt; as the last element.</source>
          <target state="translated">末尾に追加要素を有する新しいタプルを返し、の要素含ま &lt;code&gt;tuple&lt;/code&gt; 続く &lt;code&gt;value&lt;/code&gt; 最後の要素として。</target>
        </trans-unit>
        <trans-unit id="1fd950ec684b5f58c716702cc6515ef2732cc35c" translate="yes" xml:space="preserve">
          <source>Returns a pair of integers whose ratio is exactly equal to the original float and with a positive denominator.</source>
          <target state="translated">比率が元の float と完全に一致し、かつ正の分母を持つ整数のペアを返します。</target>
        </trans-unit>
        <trans-unit id="ebb93599cfaa3e0a101538db0f72f4e659111549" translate="yes" xml:space="preserve">
          <source>Returns a quoted expression containing the fields as a list of tuples.</source>
          <target state="translated">フィールドを含む引用符付きの式をタプルのリストとして返します。</target>
        </trans-unit>
        <trans-unit id="0258ae812e9738eccffc25af4f511a4696661e12" translate="yes" xml:space="preserve">
          <source>Returns a random element of an &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; のランダムな要素を返します。</target>
        </trans-unit>
        <trans-unit id="68311a4d355d1a1367604d1a97e1ec72781c2627" translate="yes" xml:space="preserve">
          <source>Returns a range of dates.</source>
          <target state="translated">日付の範囲を返します。</target>
        </trans-unit>
        <trans-unit id="fb20084f202d63d2e087bd5b253825ad1541cba1" translate="yes" xml:space="preserve">
          <source>Returns a range with the specified &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; integers.</source>
          <target state="translated">指定された &lt;code&gt;first&lt;/code&gt; と &lt;code&gt;last&lt;/code&gt; 整数の範囲を返します。</target>
        </trans-unit>
        <trans-unit id="0cfb3ee91f1e7803aeeae50c9afdbd58c4a0494f" translate="yes" xml:space="preserve">
          <source>Returns a set containing all members of &lt;code&gt;map_set1&lt;/code&gt; and &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set1&lt;/code&gt; と &lt;code&gt;map_set2&lt;/code&gt; のすべてのメンバーを含むセットを返します。</target>
        </trans-unit>
        <trans-unit id="c7e140698da2797ab90228cb1fe2e4daf4bf7bd0" translate="yes" xml:space="preserve">
          <source>Returns a set containing only members that &lt;code&gt;map_set1&lt;/code&gt; and &lt;code&gt;map_set2&lt;/code&gt; have in common.</source>
          <target state="translated">&lt;code&gt;map_set1&lt;/code&gt; と &lt;code&gt;map_set2&lt;/code&gt; が共通に持つメンバーのみを含むセットを返します。</target>
        </trans-unit>
        <trans-unit id="77d801b91285762b7c58364cfd1b23fdf545bf37" translate="yes" xml:space="preserve">
          <source>Returns a set that is &lt;code&gt;map_set1&lt;/code&gt; without the members of &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">あるセットを返し &lt;code&gt;map_set1&lt;/code&gt; のメンバーなし &lt;code&gt;map_set2&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fd8e89ddc96087c4845355b2bc3ed2ac6bca08b8" translate="yes" xml:space="preserve">
          <source>Returns a specific information about the function.</source>
          <target state="translated">関数に関する特定の情報を返します。</target>
        </trans-unit>
        <trans-unit id="ade53d26fd49c96742f8c2f9ec1c19ff5f585daa" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a dynamic supervisor under a supervisor.</source>
          <target state="translated">スーパバイザの下でダイナミックスーパバイザを起動するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="688104702b513d9e2a5c6b446efa4fff4350efd8" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a registry under a supervisor.</source>
          <target state="translated">スーパーバイザの下でレジストリを起動するための指定を返します。</target>
        </trans-unit>
        <trans-unit id="39726169845a0007a11ac1c1802741f412dc9a02" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a task under a supervisor.</source>
          <target state="translated">スーパーバイザの下でタスクを開始するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="a971d06295628f307553b8532333fe53b2d6db9e" translate="yes" xml:space="preserve">
          <source>Returns a specification to start an agent under a supervisor.</source>
          <target state="translated">スーパーバイザの下でエージェントを起動するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="3b59fc82f7ced9ba4e9462febb3a349db49c4788" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor.</source>
          <target state="translated">スーパーバイザの下でこのモジュールを起動するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="37a637ecd014943420fb395fff88ce0640ba2b2f" translate="yes" xml:space="preserve">
          <source>Returns a stream generated by calling &lt;code&gt;generator_fun&lt;/code&gt; repeatedly.</source>
          <target state="translated">&lt;code&gt;generator_fun&lt;/code&gt; を繰り返し呼び出して生成されたストリームを返します。</target>
        </trans-unit>
        <trans-unit id="2ce10d4439c9ded520a2ceb914ab4aa7920dd279" translate="yes" xml:space="preserve">
          <source>Returns a stream of two-element tuples representing key-value pairs in the given &lt;code&gt;query&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;query&lt;/code&gt; キーと値のペアを表す2要素のタプルのストリームを返します。</target>
        </trans-unit>
        <trans-unit id="8c408cbe5adb568e4c29e0c46a4da3160a6a82b7" translate="yes" xml:space="preserve">
          <source>Returns a stream that runs the given &lt;code&gt;function&lt;/code&gt; concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; の各要素で指定された &lt;code&gt;function&lt;/code&gt; 同時に実行するストリームを返します。</target>
        </trans-unit>
        <trans-unit id="6e496b0f2924747071bd9a07cac7da5f78b00d7c" translate="yes" xml:space="preserve">
          <source>Returns a stream that runs the given function &lt;code&gt;fun&lt;/code&gt; concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; の各要素で指定された関数 &lt;code&gt;fun&lt;/code&gt; を同時に実行するストリームを返します。</target>
        </trans-unit>
        <trans-unit id="a0abd42595135eb6e6bc02e83c1dc3bb49aa88b3" translate="yes" xml:space="preserve">
          <source>Returns a stream where the given function (&lt;code&gt;module&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt;) is mapped concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">指定された関数（ &lt;code&gt;module&lt;/code&gt; と &lt;code&gt;function&lt;/code&gt; ）が &lt;code&gt;enumerable&lt;/code&gt; 各要素に同時にマップされるストリームを返します。</target>
        </trans-unit>
        <trans-unit id="5678b516f871306c06a41b4392d2b5b139efdac5" translate="yes" xml:space="preserve">
          <source>Returns a stream where the given function (&lt;code&gt;module&lt;/code&gt; and &lt;code&gt;function_name&lt;/code&gt;) is mapped concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">指定された関数（ &lt;code&gt;module&lt;/code&gt; および &lt;code&gt;function_name&lt;/code&gt; ）が &lt;code&gt;enumerable&lt;/code&gt; の各要素に同時にマップされるストリームを返します。</target>
        </trans-unit>
        <trans-unit id="180fc15b92792093769a25c20115b5e9872ea17f" translate="yes" xml:space="preserve">
          <source>Returns a string &lt;code&gt;subject&lt;/code&gt; duplicated &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 回複製された &lt;code&gt;subject&lt;/code&gt; 文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6be4ae560047bcef41ff0b28a347e27a66f4e0f8" translate="yes" xml:space="preserve">
          <source>Returns a string containing the (usually) numerical identifier for a process. On UNIX, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process ID as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">プロセスの（通常は）数値識別子を含む文字列を返します。UNIXでは、これは通常、 &lt;code&gt;getpid()&lt;/code&gt; システムコールの戻り値です。Windowsでは、 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; システムコールによって返されるプロセスID が使用されます。</target>
        </trans-unit>
        <trans-unit id="597beeba0b6f07d8f0210a0a139920960a47dbff" translate="yes" xml:space="preserve">
          <source>Returns a string containing the (usually) numerical identifier for a process. On Unix-like operating systems, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process ID as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">プロセスの（通常は）数値識別子を含む文字列を返します。Unixライクなオペレーティングシステムでは、これは通常、 &lt;code&gt;getpid()&lt;/code&gt; システムコールの戻り値です。Windowsでは、 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; システムコールによって返されるプロセスIDが使用されます。</target>
        </trans-unit>
        <trans-unit id="03b67ee202b1416da310923512cd404cf6adecdf" translate="yes" xml:space="preserve">
          <source>Returns a string representing the SCM. This is used when printing the dependency and not for inspection, so the amount of information should be concise and easy to spot.</source>
          <target state="translated">SCMを表す文字列を返します。これは依存関係を印刷する際に使用するものであり、検査のために使用するものではないので、情報量は簡潔で見やすいものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e2a419178bbb940b05880a5915a9ca05120adc14" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">先頭の &lt;code&gt;to_trim&lt;/code&gt; 文字がすべて削除された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="9ce1c2a880865790d64e30f1e06470b38e182bfd" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading Unicode whitespaces have been removed.</source>
          <target state="translated">先頭の Unicode の空白がすべて削除された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="5863b021d35f8bce6c99b63c41facc6909ca977c" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading and trailing &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">先頭および末尾の &lt;code&gt;to_trim&lt;/code&gt; 文字がすべて削除された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f3acd17e8deabf16e78c4e5d3cd435340469c166" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading and trailing Unicode whitespaces have been removed.</source>
          <target state="translated">先頭と末尾の Unicode の空白がすべて取り除かれた文字列を返します。</target>
        </trans-unit>
        <trans-unit id="77037d4de2ee207efdb679f3991444eaf4bfb6d8" translate="yes" xml:space="preserve">
          <source>Returns a string where all trailing &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">末尾の &lt;code&gt;to_trim&lt;/code&gt; 文字がすべて削除された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="b44e9f329fffddee85ee207a2880ca69a73d5432" translate="yes" xml:space="preserve">
          <source>Returns a string where all trailing Unicode whitespaces has been removed.</source>
          <target state="translated">後続の Unicode の空白をすべて削除した文字列を返します。</target>
        </trans-unit>
        <trans-unit id="59755cc1b2bcebeacfa9d917bc55e49814c2c282" translate="yes" xml:space="preserve">
          <source>Returns a subset list of the given &lt;code&gt;enumerable&lt;/code&gt; by &lt;code&gt;index_range&lt;/code&gt;.</source>
          <target state="translated">与えられたのサブセットリストを返し &lt;code&gt;enumerable&lt;/code&gt; によって &lt;code&gt;index_range&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f01588f322f3a6c48ef0b1142d4af450e450f7de" translate="yes" xml:space="preserve">
          <source>Returns a subset list of the given &lt;code&gt;enumerable&lt;/code&gt;, from &lt;code&gt;start_index&lt;/code&gt; (zero-based) with &lt;code&gt;amount&lt;/code&gt; number of elements if available.</source>
          <target state="translated">リターン所与のサブセットリスト &lt;code&gt;enumerable&lt;/code&gt; から、 &lt;code&gt;start_index&lt;/code&gt; 有する（ゼロベースの） &lt;code&gt;amount&lt;/code&gt; 要素の数（使用可能な場合）。</target>
        </trans-unit>
        <trans-unit id="db1fa0efe5f563fd77fbd770ee5847604d12fb0c" translate="yes" xml:space="preserve">
          <source>Returns a substring from the offset given by the start of the range to the offset given by the end of the range.</source>
          <target state="translated">範囲の開始点で指定されたオフセットから範囲の終了点で指定されたオフセットまでの部分文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d5a014df4d2914afff26758db84313e7b53629c2" translate="yes" xml:space="preserve">
          <source>Returns a substring starting at the offset &lt;code&gt;start&lt;/code&gt;, and of length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">オフセット &lt;code&gt;start&lt;/code&gt; から始まり、長さが &lt;code&gt;len&lt;/code&gt; の部分文字列を返します。</target>
        </trans-unit>
        <trans-unit id="8e1989cb1566225affc5cd997a379ccd74bc5465" translate="yes" xml:space="preserve">
          <source>Returns a substring starting at the offset &lt;code&gt;start&lt;/code&gt;, and of the given &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">オフセット &lt;code&gt;start&lt;/code&gt; 、指定 &lt;code&gt;length&lt;/code&gt; れた長さの部分文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6ec101f14dc34f334988903f882113db6c75107c" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{day, era}&lt;/code&gt; representing the day within the era and the era number.</source>
          <target state="translated">&lt;code&gt;{day, era}&lt;/code&gt; 内の日と元号を表すタプル{day、era}を返します。</target>
        </trans-unit>
        <trans-unit id="8e67509fba3335899cfadcaef1653695ee755861" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{year, era}&lt;/code&gt; representing the year within the era and the era number.</source>
          <target state="translated">&lt;code&gt;{year, era}&lt;/code&gt; 内の年と元号を表すタプル{year、era}を返します。</target>
        </trans-unit>
        <trans-unit id="52156632450d79f9f5ab8c859740936952731cd7" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the supervisor specification. This tuple can be used as the return value of the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt;&lt;code&gt;Supervisor.init/1&lt;/code&gt;&lt;/a&gt; callback when implementing a module-based supervisor.</source>
          <target state="translated">スーパーバイザー仕様を含むタプルを返します。このタプルは、モジュールベースのスーパーバイザーを実装するときに、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt; &lt;code&gt;Supervisor.init/1&lt;/code&gt; &lt;/a&gt;コールバックの戻り値として使用できます。</target>
        </trans-unit>
        <trans-unit id="fdd9f6699ef007d5bcfc4921c7b71d74906d67f2" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the supervisor specification. This tuple can be used as the return value of the &lt;code&gt;c:init/1&lt;/code&gt; callback when implementing a module-based supervisor.</source>
          <target state="translated">スーパーバイザ仕様を含むタプルを返します。このタプルは、モジュールベースのスーパーバイザを実装するときに、 &lt;code&gt;c:init/1&lt;/code&gt; コールバックの戻り値として使用できます。</target>
        </trans-unit>
        <trans-unit id="7f0996b39345ea9e7c9060c1426d24e1a14d175c" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the value associated with the key and the updated container. &lt;code&gt;nil&lt;/code&gt; is returned for the value if the key isn't in the container.</source>
          <target state="translated">キーに関連付けられた値と更新されたコンテナを含むタプルを返します。キーがコンテナにない場合、値には &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="99ed48aeaa9cacfc046b3ed84f5a089a3b08b7d5" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing useful information about test failures from the manifest. The tuple contains</source>
          <target state="translated">マニフェストからテストの失敗に関する有用な情報を含むタプルを返します。タプルには以下のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="6e81df157fde9e3652e0850af1f8c56a1647a281" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing useful information about test failures from the manifest. The tuple contains:</source>
          <target state="translated">マニフェストからテストの失敗に関する有用な情報を含むタプルを返します。タプルには以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="ff054a062909831fae54faf25f69066b049f0472" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the form &lt;code&gt;{value, binding}&lt;/code&gt;, where &lt;code&gt;value&lt;/code&gt; is the value returned from evaluating &lt;code&gt;string&lt;/code&gt;. If an error occurs while evaluating &lt;code&gt;string&lt;/code&gt; an exception will be raised.</source>
          <target state="translated">フォームのタプルを返し &lt;code&gt;{value, binding}&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 評価から返された値である &lt;code&gt;string&lt;/code&gt; 。 &lt;code&gt;string&lt;/code&gt; の評価中にエラーが発生した場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="9e1d2c960241a00096afd91bf252ac31507af671" translate="yes" xml:space="preserve">
          <source>Returns a tuple where the first element is the mapped enumerable and the second one is the final accumulator.</source>
          <target state="translated">最初の要素がマップされた列挙可能要素、2番目の要素が最終的なアキュムレータであるタプルを返します。</target>
        </trans-unit>
        <trans-unit id="9b9e1bdb527e70cc179683a4fe2a7521e95d2a67" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the minimal and the maximal elements in the enumerable according to Erlang's term ordering.</source>
          <target state="translated">Erlangの項順に従って列挙可能な要素の最小値と最大値を持つタプルを返します。</target>
        </trans-unit>
        <trans-unit id="9289a49fc0b517d3d38226831426fdffeb900f0b" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the minimal and the maximal elements in the enumerable as calculated by the given function.</source>
          <target state="translated">与えられた関数によって計算された、列挙可能な要素の最小値と最大値を持つタプルを返します。</target>
        </trans-unit>
        <trans-unit id="78bc10df51b7a09f0be40994df79a6b72b67f2c3" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the new list and the old list with removed keys.</source>
          <target state="translated">新しいリストと古いリストからキーを削除したタプルを返します。</target>
        </trans-unit>
        <trans-unit id="49a58596d4c32840c588fba7e77c85318bcb2968" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the new map and the old map with removed keys.</source>
          <target state="translated">新しいマップと古いマップからキーを削除したタプルを返します。</target>
        </trans-unit>
        <trans-unit id="ed72d4b56f51e8613ab1dfc371169fca9e518330" translate="yes" xml:space="preserve">
          <source>Returns a writable temporary directory. Searches for directories in the following order:</source>
          <target state="translated">書き込み可能な一時ディレクトリを返します。以下の順序でディレクトリを検索します。</target>
        </trans-unit>
        <trans-unit id="617a3854618af04f4e538d414b7ed5fabd3b804a" translate="yes" xml:space="preserve">
          <source>Returns all available SCMs. Each SCM is tried in order until a matching one is found.</source>
          <target state="translated">利用可能なすべてのSCMを返します。各SCMは、一致するSCMが見つかるまで順番に試行されます。</target>
        </trans-unit>
        <trans-unit id="23e90f5d3fdcd0278c4a00a44f64af0255b2144a" translate="yes" xml:space="preserve">
          <source>Returns all breakpoints.</source>
          <target state="translated">すべてのブレークポイントを返します。</target>
        </trans-unit>
        <trans-unit id="e713a513acbdedf0dda43d90f08d107eb1c0c63b" translate="yes" xml:space="preserve">
          <source>Returns all children PIDs.</source>
          <target state="translated">すべての子PIDを返します。</target>
        </trans-unit>
        <trans-unit id="e6a21f48135285b8b5bb30d5ad65b3b47e26f561" translate="yes" xml:space="preserve">
          <source>Returns all code points in the string.</source>
          <target state="translated">文字列内のすべてのコードポイントを返します。</target>
        </trans-unit>
        <trans-unit id="e3cf44631bb390e7d2badb9d7470fae3253dc5ba" translate="yes" xml:space="preserve">
          <source>Returns all compilers.</source>
          <target state="translated">すべてのコンパイラを返します。</target>
        </trans-unit>
        <trans-unit id="2eb063f7df2b53298067ccba943c78fcfbd1392a" translate="yes" xml:space="preserve">
          <source>Returns all dependencies app names.</source>
          <target state="translated">すべての依存関係アプリ名を返します。</target>
        </trans-unit>
        <trans-unit id="14b145390a9ebf308c4b373dc11333b017df30f2" translate="yes" xml:space="preserve">
          <source>Returns all functions and macros defined in &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; で定義されているすべての関数とマクロを返します。</target>
        </trans-unit>
        <trans-unit id="ad3bb32900d7c344e494107abf9c4c7326be59e8" translate="yes" xml:space="preserve">
          <source>Returns all functions defined in &lt;code&gt;module&lt;/code&gt;, according to its kind.</source>
          <target state="translated">種類に応じて、 &lt;code&gt;module&lt;/code&gt; で定義されているすべての関数を返します。</target>
        </trans-unit>
        <trans-unit id="b5df146a1464140be99d57b6a49844f0f5e9e584" translate="yes" xml:space="preserve">
          <source>Returns all key-value pairs for &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; のすべてのキーと値のペアを返します。</target>
        </trans-unit>
        <trans-unit id="156e3a5fb38c335ce430ccbdf832347b21177bd7" translate="yes" xml:space="preserve">
          <source>Returns all key-value pairs in the process dictionary.</source>
          <target state="translated">プロセス辞書内のすべてのキーと値のペアを返します。</target>
        </trans-unit>
        <trans-unit id="406cf177f03a1fe2a55cb14779e3af7a09489d14" translate="yes" xml:space="preserve">
          <source>Returns all keys from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; からすべてのキーを返します。</target>
        </trans-unit>
        <trans-unit id="556358f0f53235e5674d035cdcc5f6968be35f2c" translate="yes" xml:space="preserve">
          <source>Returns all keys from the keyword list.</source>
          <target state="translated">キーワードリストからすべてのキーを返します。</target>
        </trans-unit>
        <trans-unit id="6d7122282aecdbcfa075a5e668d5f2c21f2161d1" translate="yes" xml:space="preserve">
          <source>Returns all keys in the process dictionary that have the given &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;value&lt;/code&gt; を持つプロセスディクショナリのすべてのキーを返します。</target>
        </trans-unit>
        <trans-unit id="042b9c023d06dd909ce950f350535dbfb0777cec" translate="yes" xml:space="preserve">
          <source>Returns all keys in the process dictionary.</source>
          <target state="translated">プロセス辞書内のすべてのキーを返します。</target>
        </trans-unit>
        <trans-unit id="e94b9dcfc2e9dac51c4ac8484e5dfd70f3e9b33b" translate="yes" xml:space="preserve">
          <source>Returns all loaded task modules.</source>
          <target state="translated">ロードされたすべてのタスクモジュールを返します。</target>
        </trans-unit>
        <trans-unit id="71787f9010554f94575f9522f1c99c44b60cb2e4" translate="yes" xml:space="preserve">
          <source>Returns all system environment variables.</source>
          <target state="translated">すべてのシステム環境変数を返します。</target>
        </trans-unit>
        <trans-unit id="fec7365b9d9fe12959a17507dde24cd128df0d44" translate="yes" xml:space="preserve">
          <source>Returns all values for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; すべての値を返し、キーワードリスト内の関連するすべてのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="e569da60b7ca186199784958ba9d2b81bb1397d9" translate="yes" xml:space="preserve">
          <source>Returns all values from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; からすべての値を返します。</target>
        </trans-unit>
        <trans-unit id="1e7a0349730cbf3f3bafb2a0c0cb3cc28bea70d5" translate="yes" xml:space="preserve">
          <source>Returns all values from the keyword list.</source>
          <target state="translated">キーワードリストからすべての値を返します。</target>
        </trans-unit>
        <trans-unit id="d96004909e4ad7c64db0522497fe2d3b803021f3" translate="yes" xml:space="preserve">
          <source>Returns an almost unique reference.</source>
          <target state="translated">ほぼ一意の参照を返します。</target>
        </trans-unit>
        <trans-unit id="a1ca941f10bbc2a839f82df74e5a66de383248c6" translate="yes" xml:space="preserve">
          <source>Returns an atom representing the name of the local node. If the node is not alive, &lt;code&gt;:nonode@nohost&lt;/code&gt; is returned instead.</source>
          <target state="translated">ローカルノードの名前を表すアトムを返します。ノードが &lt;code&gt;:nonode@nohost&lt;/code&gt; ない場合は、代わりに：nonode @ nohostが返されます。</target>
        </trans-unit>
        <trans-unit id="4bca5cf89834f191f0b7d25cb60600751e2192dc" translate="yes" xml:space="preserve">
          <source>Returns an empty keyword list, i.e. an empty list.</source>
          <target state="translated">空のキーワードリスト、すなわち空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="9336405d72004e8204acc026354f638b5932365d" translate="yes" xml:space="preserve">
          <source>Returns an enumerable that splits a string on demand.</source>
          <target state="translated">必要に応じて文字列を分割するenumerableを返します。</target>
        </trans-unit>
        <trans-unit id="c23eeb7a803311ef05d76bc46b75ead9502cb701" translate="yes" xml:space="preserve">
          <source>Returns an inclusive range between dates.</source>
          <target state="translated">日付間の包含範囲を返します。</target>
        </trans-unit>
        <trans-unit id="36ea821a1bd58beb41a35815684e5f6dd46947c7" translate="yes" xml:space="preserve">
          <source>Returns an initial accumulator and a &quot;collector&quot; function.</source>
          <target state="translated">初期アキュムレータとコレクター関数を返します。</target>
        </trans-unit>
        <trans-unit id="790893bc81d3d485385a9efd616205fa2997b5ed" translate="yes" xml:space="preserve">
          <source>Returns an integer or float which is the arithmetical absolute value of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">算術の絶対値である整数又は浮動小数点返し &lt;code&gt;number&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ed4feca62654761a5cba1c5468578f70dd1f1a9" translate="yes" xml:space="preserve">
          <source>Returns an integer which is the size in bits of &lt;code&gt;bitstring&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bitstring&lt;/code&gt; のビット単位のサイズである整数を返します。</target>
        </trans-unit>
        <trans-unit id="ff9f7b86de9e03f6280fece12d53e95bb81fce12" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;charlist&lt;/code&gt; in base &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">テキスト表現がbase &lt;code&gt;base&lt;/code&gt; の &lt;code&gt;charlist&lt;/code&gt; である整数を返します。</target>
        </trans-unit>
        <trans-unit id="7844d0ca3375055eb41de872777bcf4aa843366e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">テキスト表現が &lt;code&gt;charlist&lt;/code&gt; である整数を返します。</target>
        </trans-unit>
        <trans-unit id="1f2895d4e76b96a85b5b1d6745d2f5eacc89e7d4" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;string&lt;/code&gt; in base &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">テキスト表現がbase &lt;code&gt;base&lt;/code&gt; の &lt;code&gt;string&lt;/code&gt; である整数を返します。</target>
        </trans-unit>
        <trans-unit id="a9d71ba16fbf453d9081568d72974d94e2e8747e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">テキスト表現が &lt;code&gt;string&lt;/code&gt; である整数を返します。</target>
        </trans-unit>
        <trans-unit id="7d427036e767479c0ab88861dea125a1bc02a46f" translate="yes" xml:space="preserve">
          <source>Returns and removes the first value associated with &lt;code&gt;key&lt;/code&gt; in the keyword list.</source>
          <target state="translated">キーワードリストの &lt;code&gt;key&lt;/code&gt; に関連付けられた最初の値を返し、削除します。</target>
        </trans-unit>
        <trans-unit id="457f810f71fb1432ef32c797ca78c08adc756ed1" translate="yes" xml:space="preserve">
          <source>Returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt; or raises if &lt;code&gt;key&lt;/code&gt; is not present.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 内の &lt;code&gt;key&lt;/code&gt; に関連付けられている値を返したり削除したり、 &lt;code&gt;key&lt;/code&gt; が存在しない場合は上げたりします。</target>
        </trans-unit>
        <trans-unit id="095f100d342a14917373097117de47a712bc7df4" translate="yes" xml:space="preserve">
          <source>Returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; の &lt;code&gt;key&lt;/code&gt; に関連付けられた値を返し、削除します。</target>
        </trans-unit>
        <trans-unit id="71815281c0754fe990acff24c0fb1c1b90c930ef" translate="yes" xml:space="preserve">
          <source>Returns and removes the value at the specified &lt;code&gt;index&lt;/code&gt; in the &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 内の指定された &lt;code&gt;index&lt;/code&gt; にある値を返し、削除します。</target>
        </trans-unit>
        <trans-unit id="ab602893bed93a1e176fdba47312a8d6bb5af3b7" translate="yes" xml:space="preserve">
          <source>Returns environment (for example, &lt;code&gt;:test&lt;/code&gt;, or &lt;code&gt;:prod&lt;/code&gt;), or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">環境（たとえば &lt;code&gt;:test&lt;/code&gt; 、 &lt;code&gt;:prod&lt;/code&gt; ）、または &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0fa3cb37f1e4007aa007cdec17116a9bc321c77e" translate="yes" xml:space="preserve">
          <source>Returns false if the file exists and the user forbade to override it. Returns true otherwise.</source>
          <target state="translated">ファイルが存在し、ユーザーがそのファイルを上書きすることを禁止している場合に false を返します。そうでなければ true を返します。</target>
        </trans-unit>
        <trans-unit id="231ac834375083e4a7e856080b08131fcdfd068a" translate="yes" xml:space="preserve">
          <source>Returns false if the given name is not an alias or if it is not a task.</source>
          <target state="translated">与えられた名前がエイリアスでない場合、またはタスクでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="4184d0c0b5ec85866ae7f923f0a84ad9c22e3fef" translate="yes" xml:space="preserve">
          <source>Returns formatter options to be used for the given file.</source>
          <target state="translated">指定したファイルで使用するフォーマッタオプションを返します。</target>
        </trans-unit>
        <trans-unit id="4b69fcc9982e69bd0bf87f18dd2d92acb6b8e942" translate="yes" xml:space="preserve">
          <source>Returns how many days there are in the given year-month.</source>
          <target state="translated">指定した年月に何日あるかを返します。</target>
        </trans-unit>
        <trans-unit id="490a95607dded73b4e2c7121c35b8a2a2901b097" translate="yes" xml:space="preserve">
          <source>Returns how many months there are in the given year.</source>
          <target state="translated">指定した年の月数を返します。</target>
        </trans-unit>
        <trans-unit id="59cba054246bb0ebf15017c4a39c70c24fc14704" translate="yes" xml:space="preserve">
          <source>Returns if protocols have been consolidated at least once.</source>
          <target state="translated">プロトコルが一度でも連結されているかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="da0d66142abc50d51d45fadbe1b7ceb2bf128de8" translate="yes" xml:space="preserve">
          <source>Returns if the given year is a leap year.</source>
          <target state="translated">指定した年がうるう年であるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="f5884d887fb7ba8b1601d037e06dde2d616f18cc" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If it exists, it returns a &lt;code&gt;{:ok, info}&lt;/code&gt; tuple, where info is a &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct. Returns &lt;code&gt;{:error, reason}&lt;/code&gt; with the same reasons as &lt;a href=&quot;#read/1&quot;&gt;&lt;code&gt;read/1&lt;/code&gt;&lt;/a&gt; if a failure occurs.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; に関する情報を返します。存在する場合は、 &lt;code&gt;{:ok, info}&lt;/code&gt; タプルを返します&lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;はFile.Stat構造体です。失敗が発生した場合、&lt;a href=&quot;#read/1&quot;&gt; &lt;code&gt;read/1&lt;/code&gt; &lt;/a&gt;と同じ理由で &lt;code&gt;{:error, reason}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9f6d2788a24a43342e5c35310161a6251b14ddb2" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If it exists, it returns a &lt;code&gt;{:ok, info}&lt;/code&gt; tuple, where info is a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct. Returns &lt;code&gt;{:error, reason}&lt;/code&gt; with the same reasons as &lt;a href=&quot;#read/1&quot;&gt;&lt;code&gt;read/1&lt;/code&gt;&lt;/a&gt; if a failure occurs.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; に関する情報を返します。存在する場合は、 &lt;code&gt;{:ok, info}&lt;/code&gt; タプルを返します。ここで、infoは&lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;構造体です。障害が発生した場合、&lt;a href=&quot;#read/1&quot;&gt; &lt;code&gt;read/1&lt;/code&gt; &lt;/a&gt;と同じ理由で &lt;code&gt;{:error, reason}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="71f428255ff2f929b5d980ed8e402267ff12f103" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If the file is a symlink, sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;:symlink&lt;/code&gt; and returns a &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct for the link. For any other file, returns exactly the same values as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; に関する情報を返します。ファイルがシンボリックリンクの場合、 &lt;code&gt;type&lt;/code&gt; を &lt;code&gt;:symlink&lt;/code&gt; に設定し、リンクの&lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;構造体を返します。その他のファイルの場合、&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt;とまったく同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="a24a47b6f14f4f0f97766f7d19fbd1281ce055c4" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If the file is a symlink, sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;:symlink&lt;/code&gt; and returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct for the link. For any other file, returns exactly the same values as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; に関する情報を返します。ファイルがシンボリックリンクの場合、 &lt;code&gt;type&lt;/code&gt; を &lt;code&gt;:symlink&lt;/code&gt; に設定し、リンクの&lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;構造体を返します。その他のファイルの場合、&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt;とまったく同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="2202568b5257269fabf7b8610f1f9626579ccc58" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;port&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if the port is closed.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; に関する情報、またはポートが閉じている場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="83f9b5f443afc3ae957189755eaa98e7c3fb2722" translate="yes" xml:space="preserve">
          <source>Returns information about the process identified by &lt;code&gt;pid&lt;/code&gt;, or returns &lt;code&gt;nil&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; で識別されるプロセスに関する情報を返すか、プロセスが &lt;code&gt;nil&lt;/code&gt; ない場合はnilを返します。</target>
        </trans-unit>
        <trans-unit id="68913468c2a51af8445d3d3e172ba53ca0d82a7c" translate="yes" xml:space="preserve">
          <source>Returns its input &lt;code&gt;value&lt;/code&gt;. This function can be passed as an anonymous function to transformation functions.</source>
          <target state="translated">入力 &lt;code&gt;value&lt;/code&gt; 返します。この関数は、無名関数として変換関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="04a73d587974a8675e9a92ec0f5497b61cf34112" translate="yes" xml:space="preserve">
          <source>Returns list of lists containing &lt;code&gt;count&lt;/code&gt; elements each, where each new chunk starts &lt;code&gt;step&lt;/code&gt; elements into the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 個の要素をそれぞれ含むリストのリストを返します。新しいチャンクはそれぞれ、 &lt;code&gt;enumerable&lt;/code&gt; への &lt;code&gt;step&lt;/code&gt; 要素を開始します。</target>
        </trans-unit>
        <trans-unit id="97c42435f2786e7a4559d668951c6de124e0b400" translate="yes" xml:space="preserve">
          <source>Returns registered &lt;code&gt;after_spawn&lt;/code&gt; callbacks.</source>
          <target state="translated">登録された &lt;code&gt;after_spawn&lt;/code&gt; コールバックを返します。</target>
        </trans-unit>
        <trans-unit id="47ffe01fd507b663ed8e30105a91166b14c69993" translate="yes" xml:space="preserve">
          <source>Returns the &quot;local time&quot; for the machine the Elixir program is running on.</source>
          <target state="translated">Elixirプログラムが実行されているマシンの「ローカルタイム」を返します。</target>
        </trans-unit>
        <trans-unit id="35972be543b88cdbe520718e001cfd9da6a4c1a6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;calendar#t:iso_days/0&quot;&gt;&lt;code&gt;Calendar.iso_days/0&lt;/code&gt;&lt;/a&gt; format of the specified date.</source>
          <target state="translated">指定された日付の&lt;a href=&quot;calendar#t:iso_days/0&quot;&gt; &lt;code&gt;Calendar.iso_days/0&lt;/code&gt; &lt;/a&gt;形式を返します。</target>
        </trans-unit>
        <trans-unit id="45ea7a1a9aa8ccb8df4b5d24ef06173bad5aa6aa" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#t:iso_days/0&quot;&gt;&lt;code&gt;Calendar.iso_days/0&lt;/code&gt;&lt;/a&gt; format of the specified date.</source>
          <target state="translated">指定された日付の&lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#t:iso_days/0&quot;&gt; &lt;code&gt;Calendar.iso_days/0&lt;/code&gt; &lt;/a&gt;形式を返します。</target>
        </trans-unit>
        <trans-unit id="4d8fb3220039c4a989cf50dc53c6e73ba318cf3b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;enumerable&lt;/code&gt; with each element wrapped in a tuple alongside its index.</source>
          <target state="translated">各要素がそのインデックスと一緒にタプルにラップされた &lt;code&gt;enumerable&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f6e24cfb2ae8f59a7578a010e574fc3caa012742" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;path&lt;/code&gt; with the &lt;code&gt;extension&lt;/code&gt; stripped.</source>
          <target state="translated">&lt;code&gt;extension&lt;/code&gt; 取り除いた &lt;code&gt;path&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="87a8309107d7a6e786d42c6f7078f4fae7ad490a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; of a GenServer process, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">GenServerプロセスの &lt;code&gt;pid&lt;/code&gt; または &lt;code&gt;{name, node}&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dc74c30f8661f563864d03e8b3c44b66d1bd4aa7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; of a GenServer process, or &lt;code&gt;nil&lt;/code&gt; if no process is associated with the given &lt;code&gt;server&lt;/code&gt;.</source>
          <target state="translated">GenServerプロセスの &lt;code&gt;pid&lt;/code&gt; または &lt;code&gt;{name, node}&lt;/code&gt; を返し &lt;code&gt;server&lt;/code&gt; 。指定されたサーバーに関連付けられているプロセスがない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="90365e0f63c31c851a4ea0a22762d8fd5340a36b" translate="yes" xml:space="preserve">
          <source>Returns the Erlang/OTP release number.</source>
          <target state="translated">Erlang/OTP のリリース番号を返します。</target>
        </trans-unit>
        <trans-unit id="bc57bd779fa06cd3c466e24b49175637b5fc12c9" translate="yes" xml:space="preserve">
          <source>Returns the IEx width for printing.</source>
          <target state="translated">印刷するための IEx の幅を返します。</target>
        </trans-unit>
        <trans-unit id="8dab0f32fd45479245e3d6084613b9547e47fae3" translate="yes" xml:space="preserve">
          <source>Returns the Mix target.</source>
          <target state="translated">Mixターゲットを返します。</target>
        </trans-unit>
        <trans-unit id="3cb31056e81f8170874a64e3b816a1cafeaf8b88" translate="yes" xml:space="preserve">
          <source>Returns the PID (process identifier) of the calling process.</source>
          <target state="translated">呼び出し元のプロセスの PID(プロセス識別子)を返します。</target>
        </trans-unit>
        <trans-unit id="28781d2a7b24b9b3e88b31850c6fffc73a81f172" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new linked process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; に &lt;code&gt;fun&lt;/code&gt; を適用することによって開始された、新しくリンクされたプロセスのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="2a1c4c6c2d4ba2c1a2bfd7c6cfe2d55559ccd904" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new linked process started by the application of &lt;code&gt;module.function(args)&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">戻り値のアプリケーションによって開始された新しいリンクプロセスのPID &lt;code&gt;module.function(args)&lt;/code&gt; 上の &lt;code&gt;node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1bea2590103786ac5c9572e9655db1dfaa04b8a" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; に &lt;code&gt;fun&lt;/code&gt; を適用することによって開始された新しいプロセスのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="cd52650d0092e03bdb2d1d752a3e5d17538c5add" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;. If &lt;code&gt;node&lt;/code&gt; does not exist, a useless PID is returned.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; に &lt;code&gt;fun&lt;/code&gt; を適用することによって開始された新しいプロセスのPIDを返します。場合は &lt;code&gt;node&lt;/code&gt; 存在しない、役に立たないPIDが返されます。</target>
        </trans-unit>
        <trans-unit id="fff6b40d45bb938426184e6a79905ec94d725709" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;module.function(args)&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">戻り値のアプリケーションによって開始された新しいプロセスのPID &lt;code&gt;module.function(args)&lt;/code&gt; 上の &lt;code&gt;node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fc95961643565d6ee0e94b3a948a9b32184e234" translate="yes" xml:space="preserve">
          <source>Returns the PID of the group leader for the calling process.</source>
          <target state="translated">呼び出しプロセスのグループリーダのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="67e30a9be70444eddcad990e1b99321a52cda56a" translate="yes" xml:space="preserve">
          <source>Returns the PID or port identifier registered under &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if the name is not registered.</source>
          <target state="translated">戻り値は、PIDまたはポート識別子は、下に登録 &lt;code&gt;name&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; の名前が登録されていない場合。</target>
        </trans-unit>
        <trans-unit id="1dd775c416fda16999814ba9687c6184bef6c5e3" translate="yes" xml:space="preserve">
          <source>Returns the SCMs of all dependencies as a map.</source>
          <target state="translated">すべての依存関係のSCMをマップとして返します。</target>
        </trans-unit>
        <trans-unit id="b6ea0621ee843d2f4183487a30251fd512bb4dd5" translate="yes" xml:space="preserve">
          <source>Returns the absolute path of the directory of the current file as a binary.</source>
          <target state="translated">カレントファイルのディレクトリの絶対パスをバイナリで返します。</target>
        </trans-unit>
        <trans-unit id="b054fb6b930203c886bcc866a9d057bd209f4748" translate="yes" xml:space="preserve">
          <source>Returns the accumulator for the next enumeration step.</source>
          <target state="translated">次の列挙ステップのアキュムレータを返します。</target>
        </trans-unit>
        <trans-unit id="c2b4002e3b75b6bab925771b8767cfa960e477fa" translate="yes" xml:space="preserve">
          <source>Returns the application path inside the build.</source>
          <target state="translated">ビルド内のアプリケーションのパスを返します。</target>
        </trans-unit>
        <trans-unit id="9b85bed3a262af6f35083e7e28994ef4428c7299" translate="yes" xml:space="preserve">
          <source>Returns the biggest of the two given terms according to Erlang's term ordering.</source>
          <target state="translated">Erlangの項順に従って、与えられた2つの項のうち最大のものを返します。</target>
        </trans-unit>
        <trans-unit id="4c73fe240b4369bf936955b81b2c9591391aad4e" translate="yes" xml:space="preserve">
          <source>Returns the binary which is the captured output.</source>
          <target state="translated">キャプチャされた出力のバイナリを返します。</target>
        </trans-unit>
        <trans-unit id="fea2095c1f29cacac8d65cf66784d4ef1ae83102" translate="yes" xml:space="preserve">
          <source>Returns the binding for the given context as a keyword list.</source>
          <target state="translated">指定したコンテキストのバインディングをキーワードリストとして返します。</target>
        </trans-unit>
        <trans-unit id="752314d956a27e5c44f8fbfba8a3757afae67eba" translate="yes" xml:space="preserve">
          <source>Returns the build path for the given project.</source>
          <target state="translated">指定したプロジェクトのビルドパスを返します。</target>
        </trans-unit>
        <trans-unit id="f3430bfff23bef3205d5b94556c5c97c82aa0437" translate="yes" xml:space="preserve">
          <source>Returns the configured applications.</source>
          <target state="translated">設定されたアプリケーションを返します。</target>
        </trans-unit>
        <trans-unit id="573a0f5ab58416d588ed3b479256a76e548b06c3" translate="yes" xml:space="preserve">
          <source>Returns the cookie if the node is alive, otherwise &lt;code&gt;:nocookie&lt;/code&gt;.</source>
          <target state="translated">ノードが生きている場合はクッキーを返し、そうでない場合は &lt;code&gt;:nocookie&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d845d89480874ca778a1116c5567c440609d9b1a" translate="yes" xml:space="preserve">
          <source>Returns the count of elements in the &lt;code&gt;enumerable&lt;/code&gt; for which &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">戻り値の要素の数 &lt;code&gt;enumerable&lt;/code&gt; いる &lt;code&gt;fun&lt;/code&gt; truthy値を返します。</target>
        </trans-unit>
        <trans-unit id="5f20500df9c0629148c9bd099e966749367e6127" translate="yes" xml:space="preserve">
          <source>Returns the current Mix environment.</source>
          <target state="translated">現在のミックス環境を返します。</target>
        </trans-unit>
        <trans-unit id="12648382f3837cbbd85b3069dab4f0e0d52e2f2b" translate="yes" xml:space="preserve">
          <source>Returns the current calling environment as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">現在の呼び出し環境を&lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt;構造体として返します。</target>
        </trans-unit>
        <trans-unit id="0f05fa0008ff2e3de6102d2eb231a36353917056" translate="yes" xml:space="preserve">
          <source>Returns the current calling environment as a &lt;a href=&quot;macro.env&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">現在の呼び出し環境を&lt;a href=&quot;macro.env&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt;構造体として返します。</target>
        </trans-unit>
        <trans-unit id="cbcdc4db9ba8ae581e0947b7522b6b7808fe867d" translate="yes" xml:space="preserve">
          <source>Returns the current date in UTC.</source>
          <target state="translated">現在の日付をUTCで返します。</target>
        </trans-unit>
        <trans-unit id="d427f0d881fcb426b0308f9c5527544913d37578" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in UTC.</source>
          <target state="translated">現在の日付時刻をUTCで返します。</target>
        </trans-unit>
        <trans-unit id="42d461efb4b3ec582a95598ba42fe415d9dc5208" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in the provided time zone or raises on errors</source>
          <target state="translated">指定されたタイムゾーンの現在の日時を返します。</target>
        </trans-unit>
        <trans-unit id="6db00f03d4b312ef865190016b2f434102565fa4" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in the provided time zone.</source>
          <target state="translated">指定したタイムゾーンにおける現在の日付時刻を返します。</target>
        </trans-unit>
        <trans-unit id="eb8693f6416350e33862fd628bc33e626df3cbb3" translate="yes" xml:space="preserve">
          <source>Returns the current environment information as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">現在の環境情報を&lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt;構造体として返します。</target>
        </trans-unit>
        <trans-unit id="b4e884734713aacb55b93422d56caab2fd2fd029" translate="yes" xml:space="preserve">
          <source>Returns the current environment information as a &lt;a href=&quot;macro.env&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">現在の環境情報を&lt;a href=&quot;macro.env&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt;構造体として返します。</target>
        </trans-unit>
        <trans-unit id="c2d246446e08e73fc7f43897b3ee7185cb7780f4" translate="yes" xml:space="preserve">
          <source>Returns the current input/output buffers for the given IO device.</source>
          <target state="translated">指定したIOデバイスの現在の入出力バッファを返します。</target>
        </trans-unit>
        <trans-unit id="fe927394cd0bfd1e814f4cc201198db4e42a8162" translate="yes" xml:space="preserve">
          <source>Returns the current module name as an atom or &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">現在のモジュール名をアトムとして返すか、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="521ef1fd72b95fd19ed6d9439535d64de0fedd30" translate="yes" xml:space="preserve">
          <source>Returns the current monotonic time in the &lt;code&gt;:native&lt;/code&gt; time unit.</source>
          <target state="translated">現在の単調な時間を &lt;code&gt;:native&lt;/code&gt; 時間単位で返します。</target>
        </trans-unit>
        <trans-unit id="345cd1d89db7604f650f8e73c200c61040ceeea5" translate="yes" xml:space="preserve">
          <source>Returns the current monotonic time in the given time unit.</source>
          <target state="translated">指定した時間単位での現在の単調時間を返します。</target>
        </trans-unit>
        <trans-unit id="26adce4b3c858c82bd89e77053f0a78750bacda8" translate="yes" xml:space="preserve">
          <source>Returns the current naive datetime in UTC.</source>
          <target state="translated">現在のナイーブな日付の時刻をUTCで返します。</target>
        </trans-unit>
        <trans-unit id="1bec217a2783d794b0aff1789f2269eed2669c4d" translate="yes" xml:space="preserve">
          <source>Returns the current node.</source>
          <target state="translated">現在のノードを返します。</target>
        </trans-unit>
        <trans-unit id="6d12c14c21595e740c48f9036de98fd93391e9c1" translate="yes" xml:space="preserve">
          <source>Returns the current operating system (OS) time in the given time &lt;code&gt;unit&lt;/code&gt;.</source>
          <target state="translated">指定された時間 &lt;code&gt;unit&lt;/code&gt; で現在のオペレーティングシステム（OS）時間を返します。</target>
        </trans-unit>
        <trans-unit id="8ec3d852082bcaf3ce2741e711151dd5810411b5" translate="yes" xml:space="preserve">
          <source>Returns the current operating system (OS) time.</source>
          <target state="translated">現在のオペレーティングシステム(OS)の時刻を返します。</target>
        </trans-unit>
        <trans-unit id="9577165071461244948e156a490206caaa49ee13" translate="yes" xml:space="preserve">
          <source>Returns the current shell.</source>
          <target state="translated">現在のシェルを返します。</target>
        </trans-unit>
        <trans-unit id="8e8ea115727f9d4064d043a892fb6bd3286e6745" translate="yes" xml:space="preserve">
          <source>Returns the current system time in the &lt;code&gt;:native&lt;/code&gt; time unit.</source>
          <target state="translated">現在のシステム時刻を &lt;code&gt;:native&lt;/code&gt; 時間単位で返します。</target>
        </trans-unit>
        <trans-unit id="92212b92e0e8001ce298e74695fe895e088b04d3" translate="yes" xml:space="preserve">
          <source>Returns the current system time in the given time unit.</source>
          <target state="translated">指定した時間単位での現在のシステム時刻を返します。</target>
        </trans-unit>
        <trans-unit id="540dd0788a95b6d0957d5ed2f9059d09fdbd91d9" translate="yes" xml:space="preserve">
          <source>Returns the current time in UTC.</source>
          <target state="translated">現在の時刻をUTCで返します。</target>
        </trans-unit>
        <trans-unit id="4fabbe6f4e846eeed8c475505bc8075dfa40dcb3" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between the Erlang VM monotonic time and the Erlang VM system time.</source>
          <target state="translated">Erlang VMのモノトニックタイムとErlang VMのシステムタイムの間の現在の時間オフセットを返します。</target>
        </trans-unit>
        <trans-unit id="20d5a985cb0015239605f2f1156e73f61f7acab9" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or &lt;code&gt;nil&lt;/code&gt; if one is not available.</source>
          <target state="translated">現在の作業ディレクトリを返します。使用できない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7c33b1f1feff4869046db9a2a0823a42ffa420f1" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の作業ディレクトリを返すか、&lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3f4d96f8d1d49184aac4fce163ea1635bed830d9" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の作業ディレクトリを返したり提起&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd5eda37e289b94da28ee644df8f58ab267ce4a8" translate="yes" xml:space="preserve">
          <source>Returns the day of the week as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 7, where 1 is Monday and 7 is Sunday.</source>
          <target state="translated">曜日を整数で返します。ISO 8601 カレンダー (デフォルト)の場合は、1 から 7 までの整数で、1 は月曜日、7 は日曜日です。</target>
        </trans-unit>
        <trans-unit id="473215ad94d1a89d8e50f3170d490992cd7fa885" translate="yes" xml:space="preserve">
          <source>Returns the day of the year as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 366.</source>
          <target state="translated">年の曜日を整数で返します。ISO 8601 カレンダー (デフォルト)では、1 から 366 までの整数値となります。</target>
        </trans-unit>
        <trans-unit id="33b04f5e22dce70a50b505e48c02613150c8eb8a" translate="yes" xml:space="preserve">
          <source>Returns the day of the year as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 4.</source>
          <target state="translated">年の曜日を整数で返します。ISO 8601 カレンダー (デフォルト)の場合は、1 から 4 までの整数値となります。</target>
        </trans-unit>
        <trans-unit id="04afcb00bb6df97dc22721d3b7726ba2c39e5893" translate="yes" xml:space="preserve">
          <source>Returns the default compilers used by Mix.</source>
          <target state="translated">Mixが使用するデフォルトのコンパイラを返します。</target>
        </trans-unit>
        <trans-unit id="3918a2e8d3b80984f96cb96c51a0494d3d39bed6" translate="yes" xml:space="preserve">
          <source>Returns the default port for a given &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;scheme&lt;/code&gt; デフォルトポートを返します。</target>
        </trans-unit>
        <trans-unit id="535f11476c25e1bb602ba6d2aeb55347a1d6a043" translate="yes" xml:space="preserve">
          <source>Returns the difference between two times, considering only the hour, minute, second and microsecond.</source>
          <target state="translated">時、分、秒、マイクロ秒だけを考慮して、2つの時間の差を返します。</target>
        </trans-unit>
        <trans-unit id="c360d7e4c5c2b410f7a146c98152183d42efdcf3" translate="yes" xml:space="preserve">
          <source>Returns the directory component of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; のディレクトリコンポーネントを返します。</target>
        </trans-unit>
        <trans-unit id="743a31f3d672772d256b1200c80f279d76f2d31c" translate="yes" xml:space="preserve">
          <source>Returns the docs for the given module or path to &lt;code&gt;.beam&lt;/code&gt; file.</source>
          <target state="translated">指定されたモジュールのドキュメントまたは &lt;code&gt;.beam&lt;/code&gt; ファイルへのパスを返します。</target>
        </trans-unit>
        <trans-unit id="60f44569a96a86763b4d5487c67ec190e0aa215b" translate="yes" xml:space="preserve">
          <source>Returns the endianness the system was compiled with.</source>
          <target state="translated">システムがコンパイルされた際のエンディアンを返します。</target>
        </trans-unit>
        <trans-unit id="90dc2654ea71a38a108c2c7c6240011daa9ac00b" translate="yes" xml:space="preserve">
          <source>Returns the endianness.</source>
          <target state="translated">エンディアンを返します。</target>
        </trans-unit>
        <trans-unit id="55ed469436421de6156924c6030eb3ab0a32ba8f" translate="yes" xml:space="preserve">
          <source>Returns the environment stacktrace.</source>
          <target state="translated">環境のスタックトレースを返します。</target>
        </trans-unit>
        <trans-unit id="c4ef529c7c8dda97e6b68bc28a95bbaa115afcc7" translate="yes" xml:space="preserve">
          <source>Returns the environment this configuration file is executed on.</source>
          <target state="translated">この設定ファイルが実行されている環境を返します。</target>
        </trans-unit>
        <trans-unit id="5456a19f646f58529fe8a657394e5ddae1330e08" translate="yes" xml:space="preserve">
          <source>Returns the error or fails otherwise.</source>
          <target state="translated">エラーを返すか、そうでなければ失敗します。</target>
        </trans-unit>
        <trans-unit id="7362835e7fb583b56ba30b3e3d72e9f11ce9a6a9" translate="yes" xml:space="preserve">
          <source>Returns the exit status/message of the current process or fails otherwise.</source>
          <target state="translated">現在のプロセスの終了ステータス/メッセージを返すか、そうでない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="13b1cd87bb42d7ad26289e50c4f9af5414cf7bac" translate="yes" xml:space="preserve">
          <source>Returns the extension of the last component of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; の最後のコンポーネントの拡張子を返します。</target>
        </trans-unit>
        <trans-unit id="30b2ff36eaf15948432462e234a67e21fe2e2019" translate="yes" xml:space="preserve">
          <source>Returns the first element for which &lt;code&gt;fun&lt;/code&gt; returns a truthy value. If no such element is found, returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; が真の値を返す最初の要素を返します。そのような要素が見つからない場合は、 &lt;code&gt;default&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="44fb56015a721ac17ca474e99ac44941901f7216" translate="yes" xml:space="preserve">
          <source>Returns the first element in &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is empty.</source>
          <target state="translated">最初の要素を返し &lt;code&gt;list&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; を場合は &lt;code&gt;list&lt;/code&gt; 空です。</target>
        </trans-unit>
        <trans-unit id="b755a0a7007ddbe1d8bd4609634632fb2a788b92" translate="yes" xml:space="preserve">
          <source>Returns the first grapheme from a UTF-8 string, &lt;code&gt;nil&lt;/code&gt; if the string is empty.</source>
          <target state="translated">UTF-8文字列から最初の書記素を返します。文字列が空の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c7edf8c53138a591a47a5cc086f366bc283deabe" translate="yes" xml:space="preserve">
          <source>Returns the first value for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list, raising if &lt;code&gt;key&lt;/code&gt; is not present.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; の最初の値を返し、キーワードリスト内の関連するすべてのエントリを削除し、 &lt;code&gt;key&lt;/code&gt; が存在しない場合は上げます。</target>
        </trans-unit>
        <trans-unit id="2328ab83b14d6136b16a050205c1494154a3401b" translate="yes" xml:space="preserve">
          <source>Returns the first value for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; の最初の値を返し、キーワードリスト内のすべての関連エントリを削除します。</target>
        </trans-unit>
        <trans-unit id="adace3ea6573dd72a53ac820de069b8efe08eeae" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">テキスト表現が &lt;code&gt;charlist&lt;/code&gt; であるfloatを返します。</target>
        </trans-unit>
        <trans-unit id="132d92e12bedb340ac3d1a53925f3bc5b200ce16" translate="yes" xml:space="preserve">
          <source>Returns the full path of all dependencies as a map.</source>
          <target state="translated">すべての依存関係のフルパスをマップとして返します。</target>
        </trans-unit>
        <trans-unit id="8d3182b82f60a34d74d98ba7cc9c7db20ff5729c" translate="yes" xml:space="preserve">
          <source>Returns the given &lt;code&gt;path&lt;/code&gt; relative to the given &lt;code&gt;from&lt;/code&gt; path.</source>
          <target state="translated">戻り値指定した &lt;code&gt;path&lt;/code&gt; 与えられたの相対 &lt;code&gt;from&lt;/code&gt; パス。</target>
        </trans-unit>
        <trans-unit id="75bed7c4c49c3acb846eb78679f043b5f9939bba" translate="yes" xml:space="preserve">
          <source>Returns the given captures as a map or &lt;code&gt;nil&lt;/code&gt; if no captures are found.</source>
          <target state="translated">指定されたキャプチャをマップとして返​​すか、キャプチャが見つからない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0871bdec42d4933403a85dcc8f24ed7f878565b1" translate="yes" xml:space="preserve">
          <source>Returns the given datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">指定された精度（ &lt;code&gt;:microsecond&lt;/code&gt; 、 &lt;code&gt;:millisecond&lt;/code&gt; 、または &lt;code&gt;:second&lt;/code&gt; ）に切り捨てられたマイクロ秒フィールドを使用して、指定された日時を返します。</target>
        </trans-unit>
        <trans-unit id="7fa658bba7d8988f6fff21b54b937be943e2fbb1" translate="yes" xml:space="preserve">
          <source>Returns the given datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">マイクロ秒フィールドを指定された精度（ &lt;code&gt;:microsecond&lt;/code&gt; 、 &lt;code&gt;millisecond&lt;/code&gt; 、または &lt;code&gt;:second&lt;/code&gt; ）に切り捨てて、指定された日時を返します。</target>
        </trans-unit>
        <trans-unit id="28d16705056be413543338cdc59340c17555be51" translate="yes" xml:space="preserve">
          <source>Returns the given naive datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">マイクロ秒フィールドを指定された精度（ &lt;code&gt;:microsecond&lt;/code&gt; 、 &lt;code&gt;:millisecond&lt;/code&gt; または &lt;code&gt;:second&lt;/code&gt; ）に切り捨てて、指定された単純な日時を返します。</target>
        </trans-unit>
        <trans-unit id="3d1a559ecef9e97b4e0334ec074b0b1f5674bf30" translate="yes" xml:space="preserve">
          <source>Returns the given path inside &lt;a href=&quot;#app_dir/1&quot;&gt;&lt;code&gt;app_dir/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#app_dir/1&quot;&gt; &lt;code&gt;app_dir/1&lt;/code&gt; &lt;/a&gt;内の指定されたパスを返します。</target>
        </trans-unit>
        <trans-unit id="45f9818c95e6364d0071ed3fb00b8ef3cc3d319d" translate="yes" xml:space="preserve">
          <source>Returns the given time with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">マイクロ秒フィールドを指定された精度（ &lt;code&gt;:microsecond&lt;/code&gt; 、 &lt;code&gt;millisecond&lt;/code&gt; 、または &lt;code&gt;:second&lt;/code&gt; ）に切り捨てて、指定された時間を返します。</target>
        </trans-unit>
        <trans-unit id="909b8d4669adb90c693b81f2a8d07663b593a92e" translate="yes" xml:space="preserve">
          <source>Returns the grapheme at the &lt;code&gt;position&lt;/code&gt; of the given UTF-8 &lt;code&gt;string&lt;/code&gt;. If &lt;code&gt;position&lt;/code&gt; is greater than &lt;code&gt;string&lt;/code&gt; length, then it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">指定されたUTF-8 &lt;code&gt;string&lt;/code&gt; &lt;code&gt;position&lt;/code&gt; にある書記素を返します。 &lt;code&gt;position&lt;/code&gt; が &lt;code&gt;string&lt;/code&gt; 長さより大きい場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="05c6f692fd2828628bdd1efab20923941cb15eae" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor of the two given integers.</source>
          <target state="translated">与えられた2つの整数の最大公約数を返します。</target>
        </trans-unit>
        <trans-unit id="b283ba5da4ce9761248fbc47c852c80114d37e35" translate="yes" xml:space="preserve">
          <source>Returns the head of a list. Raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">リストの先頭を返します。発生させます&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;リストが空の場合。</target>
        </trans-unit>
        <trans-unit id="2ed57f915a80db25488161c5cd1ffa61a8941d52" translate="yes" xml:space="preserve">
          <source>Returns the head of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">リストの先頭を返します。発生させます&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;リストが空の場合。</target>
        </trans-unit>
        <trans-unit id="1aab8bad43ed60da302eaec7116a0fb4f8228f71" translate="yes" xml:space="preserve">
          <source>Returns the integer part of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; の整数部分を返します。</target>
        </trans-unit>
        <trans-unit id="3e4caee94b42975fc4ef569f7edb886b32f98473" translate="yes" xml:space="preserve">
          <source>Returns the integer represented by the ordered &lt;code&gt;digits&lt;/code&gt;.</source>
          <target state="translated">順序付けられた &lt;code&gt;digits&lt;/code&gt; 表される整数を返します。</target>
        </trans-unit>
        <trans-unit id="9dca7c41159299ac837cdcf59a4ccdfd24e8223d" translate="yes" xml:space="preserve">
          <source>Returns the keyword list itself.</source>
          <target state="translated">キーワードリスト自体を返します。</target>
        </trans-unit>
        <trans-unit id="28cf4adaa9e99aa7a488eb9e9efd274d65ac64ca" translate="yes" xml:space="preserve">
          <source>Returns the known keys for the given &lt;code&gt;pid&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; in no particular order.</source>
          <target state="translated">与えられたため、既知のキーを返し &lt;code&gt;pid&lt;/code&gt; で &lt;code&gt;registry&lt;/code&gt; 順不同で。</target>
        </trans-unit>
        <trans-unit id="ed4f2c86eaedecae2c967c536bfa703cc2920d0c" translate="yes" xml:space="preserve">
          <source>Returns the largest integer smaller than or equal to &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 以下の最大の整数を返します。</target>
        </trans-unit>
        <trans-unit id="b463682e5f1620bc48bbe9a0c681922d3b6e22db" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;path&lt;/code&gt; with the &lt;code&gt;extension&lt;/code&gt; stripped.</source>
          <target state="translated">最後のコンポーネントを返し &lt;code&gt;path&lt;/code&gt; して &lt;code&gt;extension&lt;/code&gt; 剥奪。</target>
        </trans-unit>
        <trans-unit id="81927b94fd63f85c8665acc4bc7874e3d4d31937" translate="yes" xml:space="preserve">
          <source>Returns the last component of the path or the path itself if it does not contain any directory separators.</source>
          <target state="translated">パスの最後のコンポーネント、あるいはパスがディレクトリセパレータを含まない場合はパス自体を返します。</target>
        </trans-unit>
        <trans-unit id="45bb2bd2dfb7427c0def40b931c0fa8bb71e07c7" translate="yes" xml:space="preserve">
          <source>Returns the last element in &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is empty.</source>
          <target state="translated">内の最後の要素を返し &lt;code&gt;list&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; を場合は &lt;code&gt;list&lt;/code&gt; 空です。</target>
        </trans-unit>
        <trans-unit id="b60f9b2a8336b775ec25cc98be20c5236daea41a" translate="yes" xml:space="preserve">
          <source>Returns the last grapheme from a UTF-8 string, &lt;code&gt;nil&lt;/code&gt; if the string is empty.</source>
          <target state="translated">UTF-8文字列から最後の書記素を返します。文字列が空の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="60f662f4df687832912347c33ee43b43e8d7e49d" translate="yes" xml:space="preserve">
          <source>Returns the latest modification time from config files.</source>
          <target state="translated">設定ファイルの最新の変更時刻を返します。</target>
        </trans-unit>
        <trans-unit id="1a17acd17d93c2beed018ebd32e7381da5cf43a4" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; の長さを返します。</target>
        </trans-unit>
        <trans-unit id="8b308f7849b98129f4e56bec9a2ab362236e7a74" translate="yes" xml:space="preserve">
          <source>Returns the list of command line arguments passed to the program.</source>
          <target state="translated">プログラムに渡されたコマンドライン引数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="44d5cb238fa513f56b5a6d6939f5b722a4d1a26c" translate="yes" xml:space="preserve">
          <source>Returns the list of files in the given directory.</source>
          <target state="translated">指定したディレクトリ内のファイルの一覧を返します。</target>
        </trans-unit>
        <trans-unit id="fe0f0d1d998912ae211cef3e07fac10c74125c71" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the local node.</source>
          <target state="translated">ローカルノードのマジッククッキーを返します。</target>
        </trans-unit>
        <trans-unit id="33b9544a2e452f1a99c29a76bae5d5dc88adf825" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlangの用語の順序に従って、 &lt;code&gt;enumerable&lt;/code&gt; 要素の最大要素を返します。</target>
        </trans-unit>
        <trans-unit id="41186c318e828039af269a01be0e2bd9f8f652da" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;fun&lt;/code&gt; によって計算された &lt;code&gt;enumerable&lt;/code&gt; 最大要素を返します。</target>
        </trans-unit>
        <trans-unit id="7a1a242005e42a95aa3266b2eab0a2a4fd8e3105" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given function.</source>
          <target state="translated">指定された関数で計算された &lt;code&gt;enumerable&lt;/code&gt; 要素の最大要素を返します。</target>
        </trans-unit>
        <trans-unit id="9536ff1a100bf1bce64d62cc60d29cc363b6d009" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlangの用語の順序に従って、 &lt;code&gt;enumerable&lt;/code&gt; 要素の最小要素を返します。</target>
        </trans-unit>
        <trans-unit id="44badba0e2347859f3285bb4929ae13d47893315" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;fun&lt;/code&gt; によって計算された &lt;code&gt;enumerable&lt;/code&gt; 最小要素を返します。</target>
        </trans-unit>
        <trans-unit id="4aaf9ad65824961ffacf65287788a624a792d8ad" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given function.</source>
          <target state="translated">指定された関数で計算された &lt;code&gt;enumerable&lt;/code&gt; 要素の最小要素を返します。</target>
        </trans-unit>
        <trans-unit id="0ae1bfedd52d674e4dd2a7059e781e1680098395" translate="yes" xml:space="preserve">
          <source>Returns the moduledoc or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">moduledocまたは &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dc0172f27e90560535eb10761257b16c6438a35f" translate="yes" xml:space="preserve">
          <source>Returns the next code point in a string.</source>
          <target state="translated">文字列の次のコードポイントを返します。</target>
        </trans-unit>
        <trans-unit id="b7a2d63dd8aa9e75aa8ca9871ffd197f84b3ad92" translate="yes" xml:space="preserve">
          <source>Returns the next grapheme in a string.</source>
          <target state="translated">文字列の次の書記素を返します。</target>
        </trans-unit>
        <trans-unit id="a16815d4724b8691695891cfce1bd1b80506605c" translate="yes" xml:space="preserve">
          <source>Returns the node where the given argument is located. The argument can be a PID, a reference, or a port. If the local node is not alive, &lt;code&gt;:nonode@nohost&lt;/code&gt; is returned.</source>
          <target state="translated">指定された引数があるノードを返します。引数には、PID、参照、またはポートを指定できます。ローカルノードが生きていない場合、 &lt;code&gt;:nonode@nohost&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="fb0d19709454ac201a1e441f05c0767db885f7e5" translate="yes" xml:space="preserve">
          <source>Returns the normalized day fraction of the specified time.</source>
          <target state="translated">指定した時刻の正規化された日分数を返します。</target>
        </trans-unit>
        <trans-unit id="ebe9ee0e2dcfef83024da931aea937711de22721" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;code&gt;{pid, value}&lt;/code&gt; pairs under the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; that match &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;registry&lt;/code&gt; 内の指定された &lt;code&gt;key&lt;/code&gt; 下で、 &lt;code&gt;pattern&lt;/code&gt; に一致する &lt;code&gt;{pid, value}&lt;/code&gt; ペアの数を返します。</target>
        </trans-unit>
        <trans-unit id="993096f11931f901931f9487833be33b5fe12f30" translate="yes" xml:space="preserve">
          <source>Returns the number of Unicode graphemes in a UTF-8 string.</source>
          <target state="translated">UTF-8文字列に含まれるUnicode書記素の数を返します。</target>
        </trans-unit>
        <trans-unit id="b9318f14536ad10f68dec3a090722544f2fc933e" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes needed to contain &lt;code&gt;bitstring&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bitstring&lt;/code&gt; を含めるために必要なバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="0ab6d73ab9101e6ad794ac65a9028c34ffc39f8a" translate="yes" xml:space="preserve">
          <source>Returns the number of days in the given &lt;code&gt;date&lt;/code&gt; month.</source>
          <target state="translated">指定された &lt;code&gt;date&lt;/code&gt; 月の日数を返します。</target>
        </trans-unit>
        <trans-unit id="aef856be9186f5050ccf210e12afe31c44f70bfd" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;map_set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set&lt;/code&gt; の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="5b54c7695f5998e85118fe351a01a0eac6afe807" translate="yes" xml:space="preserve">
          <source>Returns the number of months in the given &lt;code&gt;date&lt;/code&gt; year.</source>
          <target state="translated">指定された &lt;code&gt;date&lt;/code&gt; 年の月数を返します。</target>
        </trans-unit>
        <trans-unit id="d1ea18c62ae69b9b7617892c57bf359ea558d46a" translate="yes" xml:space="preserve">
          <source>Returns the number of registered keys in a registry. It runs in constant time.</source>
          <target state="translated">レジストリに登録されているキーの数を返します。これは一定時間で実行されます。</target>
        </trans-unit>
        <trans-unit id="acfbdec1c3382733c31d3e5a142e482203fcba40" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers in the VM.</source>
          <target state="translated">VM内のスケジューラの数を返します。</target>
        </trans-unit>
        <trans-unit id="b889415c6fce3d59b84ddd96e7cca2db8db380cb" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers online in the VM.</source>
          <target state="translated">VM内でオンラインになっているスケジューラの数を返します。</target>
        </trans-unit>
        <trans-unit id="5df4306ee94fe8f8fafbfae6afb8dc375379b369" translate="yes" xml:space="preserve">
          <source>Returns the old value of &lt;code&gt;flag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; の古い値を返します。</target>
        </trans-unit>
        <trans-unit id="13ba9fcca2a0649fec425cb7848af73f91935f3e" translate="yes" xml:space="preserve">
          <source>Returns the operating system PID for the current Erlang runtime system instance.</source>
          <target state="translated">現在のErlangランタイムシステムインスタンスのオペレーティングシステムのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="89200e57745b7c39430ec5683fae28a368d62bac" translate="yes" xml:space="preserve">
          <source>Returns the options used for inspecting.</source>
          <target state="translated">検査に使用したオプションを返します。</target>
        </trans-unit>
        <trans-unit id="e56c4592d5df7f1bace540247183fda61bd3a8c9" translate="yes" xml:space="preserve">
          <source>Returns the ordered digits for the given &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;integer&lt;/code&gt; 順序付けられた数字を返します。</target>
        </trans-unit>
        <trans-unit id="8d395cac96a71568d47555bbbbf4625ac25a1410" translate="yes" xml:space="preserve">
          <source>Returns the path type.</source>
          <target state="translated">パスの種類を返します。</target>
        </trans-unit>
        <trans-unit id="12f1d8051a526d9c6a64f1dbb1d2d7d5ae196c74" translate="yes" xml:space="preserve">
          <source>Returns the path where dependencies are stored for the given project.</source>
          <target state="translated">指定したプロジェクトの依存関係が保存されているパスを返します。</target>
        </trans-unit>
        <trans-unit id="25dbe974fbdff9402cb982b026d936c4ff110e40" translate="yes" xml:space="preserve">
          <source>Returns the path where manifests are stored.</source>
          <target state="translated">マニフェストが保存されているパスを返します。</target>
        </trans-unit>
        <trans-unit id="9d953d9255141f7294d89b7b7fe49a513a28c2b3" translate="yes" xml:space="preserve">
          <source>Returns the path where protocol consolidations are stored.</source>
          <target state="translated">プロトコル統合が保存されているパスを返します。</target>
        </trans-unit>
        <trans-unit id="1f11106aa39ba84c5e30cc0b55e17085927e4e42" translate="yes" xml:space="preserve">
          <source>Returns the paths the given project compiles to.</source>
          <target state="translated">指定したプロジェクトのコンパイル先のパスを返します。</target>
        </trans-unit>
        <trans-unit id="f12bd00aec58184b41e9e6a2031aa30605d2df99" translate="yes" xml:space="preserve">
          <source>Returns the pluralization for &lt;code&gt;word&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;word&lt;/code&gt; の複数形を返します。</target>
        </trans-unit>
        <trans-unit id="52d4796aa3d390fecdd3129fa8cd9f3682f3c79d" translate="yes" xml:space="preserve">
          <source>Returns the printable app name.</source>
          <target state="translated">印刷可能なアプリ名を返します。</target>
        </trans-unit>
        <trans-unit id="df6a4629eb175817de97b50b825cf94add115c00" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current Erlang emulator in the format most commonly used by the operating system environment.</source>
          <target state="translated">現在のErlangエミュレータのプロセス識別子をオペレーティングシステム環境で最も一般的に使われている形式で返します。</target>
        </trans-unit>
        <trans-unit id="568636cdc2330b657828aa8245c56f10e4eee142" translate="yes" xml:space="preserve">
          <source>Returns the project configuration.</source>
          <target state="translated">プロジェクトの設定を返します。</target>
        </trans-unit>
        <trans-unit id="ab453c26a5feb021a2c9059dd3c8585ac19eb3ef" translate="yes" xml:space="preserve">
          <source>Returns the regex options as a string.</source>
          <target state="translated">正規表現オプションを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="ce3ebec18204dd94a1942d1c3249ace4c6e0d006" translate="yes" xml:space="preserve">
          <source>Returns the regex source as a binary.</source>
          <target state="translated">正規表現のソースをバイナリで返します。</target>
        </trans-unit>
        <trans-unit id="9433dc7ce38dfb47f9e2242a44435d8ec1469e59" translate="yes" xml:space="preserve">
          <source>Returns the shortdoc or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">shortdocまたは &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5eb49c64118b8afcc3cd03264a3763f54c004293" translate="yes" xml:space="preserve">
          <source>Returns the size (in bytes) of the next grapheme.</source>
          <target state="translated">次の書記素のサイズ(バイト数)を返します。</target>
        </trans-unit>
        <trans-unit id="53b0081e44e5c9c4563adcd42943126cb72ba8c9" translate="yes" xml:space="preserve">
          <source>Returns the size of a map.</source>
          <target state="translated">マップのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="464da3495a9bba600da306000b297ddb8d537d28" translate="yes" xml:space="preserve">
          <source>Returns the size of a tuple.</source>
          <target state="translated">タプルのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="2eab1deb376aa2eb3ded24f57f590dc04c57e6b1" translate="yes" xml:space="preserve">
          <source>Returns the size of an IO data.</source>
          <target state="translated">IOデータのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="771fa37bdad6a0b0f3f8ca4535f1113f29b7cca1" translate="yes" xml:space="preserve">
          <source>Returns the size of the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; のサイズを返します。</target>
        </trans-unit>
        <trans-unit id="4360055191bbc6d560abe7b2a7ed6423ae2263a6" translate="yes" xml:space="preserve">
          <source>Returns the size of the next grapheme.</source>
          <target state="translated">次の書記素のサイズを返します。</target>
        </trans-unit>
        <trans-unit id="921d7de9abba27ebf9e4ec955853abb5d9b2dfde" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 以上の最小の整数を返します。</target>
        </trans-unit>
        <trans-unit id="ec9bf6067fd64ae230688cac070ca822929e9781" translate="yes" xml:space="preserve">
          <source>Returns the smallest of the two given terms according to Erlang's term ordering.</source>
          <target state="translated">Erlangの項順に従って、与えられた2つの項のうち最も小さいものを返します。</target>
        </trans-unit>
        <trans-unit id="f7e094cce152da41bb001fe75ff8ff8c450d3c55" translate="yes" xml:space="preserve">
          <source>Returns the spec for &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; の仕様を返します。</target>
        </trans-unit>
        <trans-unit id="5393c9233d23da08562a8362027b6bca2a3dff85" translate="yes" xml:space="preserve">
          <source>Returns the stacktrace for the currently handled exception.</source>
          <target state="translated">現在処理中の例外のスタックトレースを返します。</target>
        </trans-unit>
        <trans-unit id="8b893b416ca9bfbcc2d075a8ada9c6aca862a339" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given &lt;a href=&quot;#t:t/0&quot;&gt;URI struct&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;#t:t/0&quot;&gt;URI構造体&lt;/a&gt;の文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="cea5e90d9f2a065b00dd59e1c92db64e63a26004" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there are no occurrences.</source>
          <target state="translated">発生していない場合は、未処理の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="2119c6340fc1c60d171f69f5b6fc40832b65f1de" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there is no match. If &lt;code&gt;match&lt;/code&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), &lt;code&gt;replacement&lt;/code&gt; is just appended to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">一致しない場合、文字列をそのまま返します。場合は &lt;code&gt;match&lt;/code&gt; 空の文字列である（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）、 &lt;code&gt;replacement&lt;/code&gt; ちょうどに追加され &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d3e5f86a6a3448482723c629b72cbcf08d2a6d1" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there is no match. If &lt;code&gt;match&lt;/code&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), &lt;code&gt;replacement&lt;/code&gt; is just prepended to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">一致しない場合、文字列をそのまま返します。場合は &lt;code&gt;match&lt;/code&gt; 空の文字列である（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）、 &lt;code&gt;replacement&lt;/code&gt; ただの先頭に付加される &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99f109b4c1e9e2e52c16c8c6e0ba33b2337b1129" translate="yes" xml:space="preserve">
          <source>Returns the sum of all elements.</source>
          <target state="translated">すべての要素の合計を返します。</target>
        </trans-unit>
        <trans-unit id="5446f0a929a51f2841c8d97a177322c6d4cfbd4b" translate="yes" xml:space="preserve">
          <source>Returns the tail of a list. Raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">リストの末尾を返します。発生させます&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;リストが空の場合。</target>
        </trans-unit>
        <trans-unit id="ae673d62b221b01c1e38d729fb3d2bf2b4ec8893" translate="yes" xml:space="preserve">
          <source>Returns the tail of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">リストの末尾を返します。発生させます&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;リストが空の場合。</target>
        </trans-unit>
        <trans-unit id="b78ad4492677f3fbfec83019e0ee942fb3a1c7d7" translate="yes" xml:space="preserve">
          <source>Returns the target this configuration file is executed on.</source>
          <target state="translated">この設定ファイルが実行されているターゲットを返します。</target>
        </trans-unit>
        <trans-unit id="c9be2b1fad24de04c50b3e83a236b19a500bd708" translate="yes" xml:space="preserve">
          <source>Returns the task name for the given &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;module&lt;/code&gt; タスク名を返します。</target>
        </trans-unit>
        <trans-unit id="878347c3aa6513fbf6afa6efa6c7f012a2ebde56" translate="yes" xml:space="preserve">
          <source>Returns the thrown value or fails otherwise.</source>
          <target state="translated">投げられた値を返すか、そうでなければ失敗します。</target>
        </trans-unit>
        <trans-unit id="76679b3900f0ba1621d3328c4d07b6237c72c826" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;re_pattern&lt;/code&gt; in the regular expression.</source>
          <target state="translated">正規表現で基になる &lt;code&gt;re_pattern&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="59d495cfe60137b96fefadc85ec284a40580d7a3" translate="yes" xml:space="preserve">
          <source>Returns the usable managers for the dependency. This can be used if the SCM has extra knowledge of the dependency, otherwise it should return an empty list.</source>
          <target state="translated">依存関係で使用可能なマネージャを返します。これは、SCMが依存関係についての余分な知識を持っている場合に使用できますが、 そうでない場合は空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="8968b9f6847de7df218d57ed06876fcd4deefde7" translate="yes" xml:space="preserve">
          <source>Returns the user home directory (platform independent).</source>
          <target state="translated">ユーザーのホームディレクトリを返します(プラットフォームに依存しません)。</target>
        </trans-unit>
        <trans-unit id="f853f8018f651d849df46372217944c5cafdc33f" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s environment in a tuple.</source>
          <target state="translated">戻り値 &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;app&lt;/code&gt; タプル内の環境。</target>
        </trans-unit>
        <trans-unit id="a25fac0ea4b17b37d92bb53583068e5149115241" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s environment.</source>
          <target state="translated">戻り値 &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;app&lt;/code&gt; の環境。</target>
        </trans-unit>
        <trans-unit id="98a6e9fe912ad2fc1ebf1d97990bf4eace7713a9" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s specification.</source>
          <target state="translated">戻り値 &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;app&lt;/code&gt; の仕様。</target>
        </trans-unit>
        <trans-unit id="4904ba9d019e50de81dadd2fd0f3950811aa6e11" translate="yes" xml:space="preserve">
          <source>Returns the value for the given &lt;code&gt;key&lt;/code&gt; in the process dictionary, or &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not set.</source>
          <target state="translated">プロセスディクショナリ内の指定された &lt;code&gt;key&lt;/code&gt; 値を返します。 &lt;code&gt;key&lt;/code&gt; が設定されていない場合は &lt;code&gt;default&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4743b722e00687fb023b8b72382036b52d966a63" translate="yes" xml:space="preserve">
          <source>Returns the value of a given compiler option.</source>
          <target state="translated">指定したコンパイラオプションの値を返します。</target>
        </trans-unit>
        <trans-unit id="4b4cb0e2ce0546225daafc01a7abd95363859e47" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;n&lt;/code&gt;th expression in the history.</source>
          <target state="translated">履歴の &lt;code&gt;n&lt;/code&gt; 番目の式の値を返します。</target>
        </trans-unit>
        <trans-unit id="d4c5eb060d7795d63f93a93d2174bfbde5eec930" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable or &lt;code&gt;:error&lt;/code&gt; if not found.</source>
          <target state="translated">指定された環境変数の値を返します。見つからない場合は &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6d3c958f0d384e41e1fd39b3e1093c21e579bb87" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable or raises if not found.</source>
          <target state="translated">与えられた環境変数の値を返します。</target>
        </trans-unit>
        <trans-unit id="fc426843775837bb9713393133e0f84dd5fa52c9" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable.</source>
          <target state="translated">指定した環境変数の値を返します。</target>
        </trans-unit>
        <trans-unit id="b17bccbe58f022f5360104153b5324a3a5f8ab53" translate="yes" xml:space="preserve">
          <source>Returns the value that was under &lt;code&gt;key&lt;/code&gt; in the process dictionary, or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was not stored in the process dictionary.</source>
          <target state="translated">プロセスディクショナリの &lt;code&gt;key&lt;/code&gt; 下にあった値を返します。 &lt;code&gt;key&lt;/code&gt; がプロセスディクショナリに格納されていない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4002ca69c8b4a4e8942a2a8ca79b1e4c4939052d" translate="yes" xml:space="preserve">
          <source>Returns the value under &lt;code&gt;key&lt;/code&gt; if there is such a key, or &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">そのような &lt;code&gt;key&lt;/code&gt; 場合はキーの下の値を返し、 &lt;code&gt;key&lt;/code&gt; が見つからない場合は &lt;code&gt;default&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="3af843cadbfac1113304e7db687b00b1758b0e54" translate="yes" xml:space="preserve">
          <source>Returns the version of the underlying Regex engine.</source>
          <target state="translated">Regexエンジンのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="af922ff6ebd15316652a53a13bd789e06e1f23aa" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is a struct of &lt;code&gt;name&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が &lt;code&gt;name&lt;/code&gt; の構造体である場合、trueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="373be6bd9bc30c786b2adfb4cf4440e08ef707c9" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is a struct; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が構造体の場合はtrueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="75a0a4919d161080821fce71f93272a01bf13e4e" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is an exception of &lt;code&gt;name&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が &lt;code&gt;name&lt;/code&gt; の例外である場合、trueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16443fde0771debdcb416187e4e9b40192f6a6e8" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is an exception; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; が例外の場合、trueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="78cdac4eb08c467f44dd89fc7e846deacd7708f7" translate="yes" xml:space="preserve">
          <source>Returns true if the current process can await for module compilation.</source>
          <target state="translated">現在のプロセスがモジュールのコンパイルを待つことができるかどうかを true で返します。</target>
        </trans-unit>
        <trans-unit id="9b92f5e15d4121cfea6774176f91d79a7ff1ad71" translate="yes" xml:space="preserve">
          <source>Returns true if the release was copied, false otherwise.</source>
          <target state="translated">リリースがコピーされている場合はtrueを、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="a5febd0aca2ae71b9183cb365b24eaa3298ba222" translate="yes" xml:space="preserve">
          <source>Returns whether a given &lt;code&gt;key&lt;/code&gt; exists in the given &lt;code&gt;keywords&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;keywords&lt;/code&gt; 指定された &lt;code&gt;key&lt;/code&gt; が存在するかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="7d1348c5848b47392a61baf065679e3fe4bbd884" translate="yes" xml:space="preserve">
          <source>Returns whether the compilation environment is currently inside a guard.</source>
          <target state="translated">コンパイル環境が現在ガード内にあるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="d07dcf1758adbeddd9f6a8a1e7d76495004156ac" translate="yes" xml:space="preserve">
          <source>Returns whether the compilation environment is currently inside a match clause.</source>
          <target state="translated">コンパイル環境が現在 match 節の中にあるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="198fd42b2e9a3935326202ead8ca134f2cac7795" translate="yes" xml:space="preserve">
          <source>Returns whether the given &lt;code&gt;key&lt;/code&gt; exists in the given &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; が指定された &lt;code&gt;map&lt;/code&gt; 存在するかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="01fbde488cfeb2be87794669321f673adeab9228" translate="yes" xml:space="preserve">
          <source>Returns whether the logging is enabled for given process.</source>
          <target state="translated">指定したプロセスに対してロギングが有効であるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="8f15c934f199fc52996cd96ba7cb34c1dfc57796" translate="yes" xml:space="preserve">
          <source>Reverses the &lt;code&gt;enumerable&lt;/code&gt; in the range from initial &lt;code&gt;start_index&lt;/code&gt; through &lt;code&gt;count&lt;/code&gt; elements.</source>
          <target state="translated">反転させ &lt;code&gt;enumerable&lt;/code&gt; 初期の範囲で &lt;code&gt;start_index&lt;/code&gt; て &lt;code&gt;count&lt;/code&gt; 要素。</target>
        </trans-unit>
        <trans-unit id="51ef45f336354a32dda3e205577483e8849e2250" translate="yes" xml:space="preserve">
          <source>Reverses the elements in &lt;code&gt;enumerable&lt;/code&gt;, appends the &lt;code&gt;tail&lt;/code&gt;, and returns it as a list.</source>
          <target state="translated">要素を反転させ &lt;code&gt;enumerable&lt;/code&gt; 、追加 &lt;code&gt;tail&lt;/code&gt; 、リストとして戻り、それを。</target>
        </trans-unit>
        <trans-unit id="b84612001a4f1eaa6c97171fdc0b0c9f2ef21eae" translate="yes" xml:space="preserve">
          <source>Reverses the graphemes in given string.</source>
          <target state="translated">与えられた文字列の中の書記素を反転させます。</target>
        </trans-unit>
        <trans-unit id="da502a644e54b1ce6f094fca466290322f89787d" translate="yes" xml:space="preserve">
          <source>Right to left</source>
          <target state="translated">右から左へ</target>
        </trans-unit>
        <trans-unit id="8565eb000a57c1167c9162526ae9f7f67679477d" translate="yes" xml:space="preserve">
          <source>Rounds a float to the largest number less than or equal to &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">floatを &lt;code&gt;num&lt;/code&gt; 以下の最大の数値に丸めます。</target>
        </trans-unit>
        <trans-unit id="d4d7ddf396c77d3a28aacfec25345f3233ed75ed" translate="yes" xml:space="preserve">
          <source>Rounds a float to the smallest integer greater than or equal to &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">floatを &lt;code&gt;num&lt;/code&gt; 以上の最小の整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="f2bfe2b43d2e555e7e1fc1953a64ed430131021f" translate="yes" xml:space="preserve">
          <source>Rounds a floating-point value to an arbitrary number of fractional digits (between 0 and 15).</source>
          <target state="translated">浮動小数点値を任意の端数桁数(0~15)に丸めます。</target>
        </trans-unit>
        <trans-unit id="9740f5d1fe5f451949c9d945ffaea21c8d9432a4" translate="yes" xml:space="preserve">
          <source>Rounds a number to the nearest integer.</source>
          <target state="translated">数値を最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="394ff7414ed58e9bb399195e5ae3da301b62e17d" translate="yes" xml:space="preserve">
          <source>Routing layer</source>
          <target state="translated">ルーティング層</target>
        </trans-unit>
        <trans-unit id="2cab34e43d5bf64f55c18070062b1bc29de8d797" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix help test&lt;/code&gt;&lt;/a&gt; for more information on how to run filters via Mix.</source>
          <target state="translated">Mixを介してフィルターを実行する方法の詳細については、Mix &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix help test&lt;/code&gt; &lt;/a&gt;を実行してください。</target>
        </trans-unit>
        <trans-unit id="7f49ea60a8e2caa16528ffe5a08a1e644ee38ac0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;iex -S mix&lt;/code&gt; so we can give our dynamic supervisor a try:</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; を実行して、動的スーパーバイザーを試せるようにします。</target>
        </trans-unit>
        <trans-unit id="858865eeebb714c4204dbc57a8ddb8b571d4940a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;code formatter&lt;/a&gt;. The code formatter formats your code according to a consistent style shared by your library and the whole community, making it easier for other developers to understand your code and contribute.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;コードフォーマッタを&lt;/a&gt;実行します。コードフォーマッタは、ライブラリおよびコミュニティ全体で共有される一貫したスタイルに従ってコードをフォーマットし、他の開発者がコードを理解して貢献することを容易にします。</target>
        </trans-unit>
        <trans-unit id="2561b01d11beb7887fdb55f789d105da46475bd7" translate="yes" xml:space="preserve">
          <source>Run the test suite and the doctest should fail:</source>
          <target state="translated">テストスイートを実行し、doctestは失敗するはずです。</target>
        </trans-unit>
        <trans-unit id="502cb8247a0563cd3767c7c278a608b8f2c8d52e" translate="yes" xml:space="preserve">
          <source>Run the tests and they should all pass!</source>
          <target state="translated">テストを実行して、それらはすべて合格する必要があります</target>
        </trans-unit>
        <trans-unit id="abce5e360ddf9e955294138f90e126f096dcc734" translate="yes" xml:space="preserve">
          <source>Running IEx in the directory where the above &lt;code&gt;.iex.exs&lt;/code&gt; file is located results in:</source>
          <target state="translated">上記の &lt;code&gt;.iex.exs&lt;/code&gt; ファイルが置かれているディレクトリでIExを実行すると、次のような結果になります。</target>
        </trans-unit>
        <trans-unit id="e8a30d8ac7729deb2e42d58fc103a0fb057a8270" translate="yes" xml:space="preserve">
          <source>Running commands</source>
          <target state="translated">コマンドの実行</target>
        </trans-unit>
        <trans-unit id="e1e0218f656dddcbb2f3c0fcf7777db3f26647dd" translate="yes" xml:space="preserve">
          <source>Running scripts</source>
          <target state="translated">スクリプトの実行</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="ae6f4b64040963769b7f32a98c16f274e7e2534e" translate="yes" xml:space="preserve">
          <source>Running the formatter</source>
          <target state="translated">フォーマッタの実行</target>
        </trans-unit>
        <trans-unit id="df38332b0882d84326d5075dc4e909ea354360de" translate="yes" xml:space="preserve">
          <source>Running the release</source>
          <target state="translated">リリースの実行</target>
        </trans-unit>
        <trans-unit id="2ad21e0961858c4a176621a74bbb6c251ecc92f2" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;task&lt;/code&gt; with the given &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;args&lt;/code&gt; で &lt;code&gt;task&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="27f5a1001c04b3d326d3130b840b82e3d8b78086" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;fun&lt;/code&gt; inside the given project.</source>
          <target state="translated">指定 &lt;code&gt;fun&lt;/code&gt; れたプロジェクト内で指定されたfunを実行します。</target>
        </trans-unit>
        <trans-unit id="fc60430f8b509c1280cf05d516e5e479f037c43d" translate="yes" xml:space="preserve">
          <source>Runs the given stream.</source>
          <target state="translated">与えられたストリームを実行します。</target>
        </trans-unit>
        <trans-unit id="d815a8f6506a6d2030fc71c5314a4b7cbc242ba3" translate="yes" xml:space="preserve">
          <source>Runs the regular expression against the given string until the first match. It returns a list with all captures or &lt;code&gt;nil&lt;/code&gt; if no match occurred.</source>
          <target state="translated">最初の一致まで、指定された文字列に対して正規表現を実行します。すべてのキャプチャを含むリストを返すか、一致が発生しなかった場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e5ffbfd911e0b566d41b50bdfa640dfbca592312" translate="yes" xml:space="preserve">
          <source>Runs the tests for a project.</source>
          <target state="translated">プロジェクトのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="119006df7a024a81cf340543ca824cea7d8efa82" translate="yes" xml:space="preserve">
          <source>Runs the tests. It is invoked automatically if ExUnit is started via &lt;a href=&quot;#start/1&quot;&gt;&lt;code&gt;start/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テストを実行します。ExUnitが&lt;a href=&quot;#start/1&quot;&gt; &lt;code&gt;start/1&lt;/code&gt; を&lt;/a&gt;介して起動されると、自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="222cad2bd37e45b5f33d5d967590f4b613622bfd" translate="yes" xml:space="preserve">
          <source>Runtime Configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="bef3d737e1cd6b54fa5c0c009af907047c31c70e" translate="yes" xml:space="preserve">
          <source>Runtime configuration - can be set before the &lt;code&gt;:logger&lt;/code&gt; application is started, but may be changed during runtime</source>
          <target state="translated">ランタイム構成- &lt;code&gt;:logger&lt;/code&gt; アプリケーションが起動する前に設定できますが、ランタイム中に変更できます</target>
        </trans-unit>
        <trans-unit id="ff26f39d83b123ccb1a1c98811df39ff106ea3d2" translate="yes" xml:space="preserve">
          <source>Runtime dependencies are added whenever you invoke another module inside a function. Modules with runtime dependencies do not have to be compiled when the callee changes, unless there is a transitive compile or export time dependency between them.</source>
          <target state="translated">ランタイム依存関係は、関数内の別のモジュールを呼び出すたびに追加されます。ランタイム依存関係を持つモジュールは、それらの間に遷移的なコンパイルやエクスポート時の依存関係がない限り、呼び出し元が変更されたときにコンパイルする必要はありません。</target>
        </trans-unit>
        <trans-unit id="f1be8bbdfa39d80e63d75464d871ca752fb54889" translate="yes" xml:space="preserve">
          <source>RuntimeError</source>
          <target state="translated">RuntimeError</target>
        </trans-unit>
        <trans-unit id="2367bc1690bc7150c00e3cc3a74e421b0f5a75af" translate="yes" xml:space="preserve">
          <source>RuntimeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">RuntimeError &lt;small&gt;例外&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="e6e3167edd23dbf899b58fa5a6d66a01d35194a0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#at/1&quot;&gt;&lt;code&gt;at/1&lt;/code&gt;&lt;/a&gt; except that it raises &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.OutOfBoundsError.html&quot;&gt;&lt;code&gt;Enum.OutOfBoundsError&lt;/code&gt;&lt;/a&gt; if the given index is out of bounds.</source>
          <target state="translated">指定されたインデックスが範囲外の場合に&lt;a href=&quot;https://hexdocs.pm/elixir/Enum.OutOfBoundsError.html&quot;&gt; &lt;code&gt;Enum.OutOfBoundsError&lt;/code&gt; &lt;/a&gt;を発生させることを除いて、&lt;a href=&quot;#at/1&quot;&gt; &lt;code&gt;at/1&lt;/code&gt; と&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="48afa22bba76fdc43e8ef8f37036831d587b298b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; と&lt;/a&gt;同じですが、無名関数の代わりにモジュール、関数、引数が必要です。状態は、指定された引数リストの最初の引数として追加されます。</target>
        </trans-unit>
        <trans-unit id="8b6186d6c9aeff961c16e5da9e96a9c93e25a101" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chgrp/2&quot;&gt;&lt;code&gt;chgrp/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chgrp/2&quot;&gt; &lt;code&gt;chgrp/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69296d112ff3af6c5df54cb070d2348a8f3612cf" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chgrp/2&quot;&gt;&lt;code&gt;chgrp/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chgrp/2&quot;&gt; &lt;code&gt;chgrp/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5551163d02c8194e2886a885aa06654149c83ba" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chmod/2&quot;&gt;&lt;code&gt;chmod/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chmod/2&quot;&gt; &lt;code&gt;chmod/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe9824c72b0e3e90519110a7c5244b6978c151fe" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chmod/2&quot;&gt;&lt;code&gt;chmod/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chmod/2&quot;&gt; &lt;code&gt;chmod/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="452a2701829e8135c60bab1ba0681e8954ffe2b7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chown/2&quot;&gt;&lt;code&gt;chown/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chown/2&quot;&gt; &lt;code&gt;chown/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7eefd845404a1af9a5973a6d27c4f19e7a383cb" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chown/2&quot;&gt;&lt;code&gt;chown/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chown/2&quot;&gt; &lt;code&gt;chown/2&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0949047f6cf1d6ba67f61109f1b819c88cfe7a7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#defrecord/3&quot;&gt;&lt;code&gt;defrecord/3&lt;/code&gt;&lt;/a&gt; but generates private macros.</source>
          <target state="translated">&lt;a href=&quot;#defrecord/3&quot;&gt; &lt;code&gt;defrecord/3&lt;/code&gt; と&lt;/a&gt;同じですが、プライベートマクロを生成します。</target>
        </trans-unit>
        <trans-unit id="cf2f22a3a1f7b55255793e20c9f4a438a4f902ed" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; but returns the value directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; と&lt;/a&gt;同じですが、値を直接返すか、 &lt;code&gt;key&lt;/code&gt; が見つからない場合は&lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="8e9194a522fb8fb657e281729e962d0ed06857f7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get/0&quot;&gt;&lt;code&gt;get/0&lt;/code&gt;&lt;/a&gt;, but raises an exception if there is no current project.</source>
          <target state="translated">&lt;a href=&quot;#get/0&quot;&gt; &lt;code&gt;get/0&lt;/code&gt; &lt;/a&gt;と同じですが、現在のプロジェクトがない場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="1a5ebf1a38b49af9938b5e72845065800dbdcff3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; と&lt;/a&gt;同じですが、無名関数の代わりにモジュール、関数、および引数が必要です。状態は、指定された引数リストの最初の引数として追加されます。</target>
        </trans-unit>
        <trans-unit id="454d80b60394294842383e45eb87437d14c3f75a" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get_and_update/3&quot;&gt;&lt;code&gt;get_and_update/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#get_and_update/3&quot;&gt; &lt;code&gt;get_and_update/3&lt;/code&gt; と&lt;/a&gt;同じですが、無名関数の代わりにモジュール、関数、および引数が必要です。状態は、指定された引数リストの最初の引数として追加されます。</target>
        </trans-unit>
        <trans-unit id="51fc3a99abe232080d3ba08eef47a68cfc7ea01d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get_env/1&quot;&gt;&lt;code&gt;get_env/1&lt;/code&gt;&lt;/a&gt; but raises instead of returning &lt;code&gt;nil&lt;/code&gt; when the variable is not set.</source>
          <target state="translated">&lt;a href=&quot;#get_env/1&quot;&gt; &lt;code&gt;get_env/1&lt;/code&gt; と&lt;/a&gt;同じですが、変数が設定されていない場合は &lt;code&gt;nil&lt;/code&gt; を返す代わりに発生します。</target>
        </trans-unit>
        <trans-unit id="3c7f2b70e8cfe5f2634b92d0a6549de81f8bd0c0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln/2&quot;&gt;&lt;code&gt;ln/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.linkerror&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln/2&quot;&gt; &lt;code&gt;ln/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;file.linkerror&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="53cbae5857cb670f52634d5450b9fdb4c0bef065" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln/2&quot;&gt;&lt;code&gt;ln/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln/2&quot;&gt; &lt;code&gt;ln/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="62ec00d18d6c7c4096134aa08579c416180f7b6c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln_s/2&quot;&gt;&lt;code&gt;ln_s/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.linkerror&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln_s/2&quot;&gt; &lt;code&gt;ln_s/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;file.linkerror&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cd5ac3e5838dd561369ea6873a2105776541e58f" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln_s/2&quot;&gt;&lt;code&gt;ln_s/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln_s/2&quot;&gt; &lt;code&gt;ln_s/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="98a4a1fa45aa8e47b2fe2b04f4757dac9baf83e3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#lstat/2&quot;&gt;&lt;code&gt;lstat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#lstat/2&quot;&gt; &lt;code&gt;lstat/2&lt;/code&gt; と&lt;/a&gt;同じですが、&lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;構造体を直接返します。エラーが返された場合は、&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="ef31648ed5697cb0efd84f6aa0e0a61571925586" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#lstat/2&quot;&gt;&lt;code&gt;lstat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#lstat/2&quot;&gt; &lt;code&gt;lstat/2&lt;/code&gt; と&lt;/a&gt;同じですが、&lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt;構造体を直接返すか、エラーが返された場合は&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="5a1ac89b3d9b7123dddd932cfa309cb1e771fec8" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir/1&quot;&gt;&lt;code&gt;mkdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir/1&quot;&gt; &lt;code&gt;mkdir/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e916d802d3de71569ff931ffbcb4f1eceb125c9d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir/1&quot;&gt;&lt;code&gt;mkdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir/1&quot;&gt; &lt;code&gt;mkdir/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36da26cc0d9ef98b6d7a837321a0b850aa977e10" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir_p/1&quot;&gt;&lt;code&gt;mkdir_p/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir_p/1&quot;&gt; &lt;code&gt;mkdir_p/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a19b8aa624334705800e8a1ac9d5d0361d31a6d3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir_p/1&quot;&gt;&lt;code&gt;mkdir_p/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir_p/1&quot;&gt; &lt;code&gt;mkdir_p/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f817cb5944a5943ab83623cde62144c04d14cd3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#read_link/1&quot;&gt;&lt;code&gt;read_link/1&lt;/code&gt;&lt;/a&gt; but returns the target directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#read_link/1&quot;&gt; &lt;code&gt;read_link/1&lt;/code&gt; と&lt;/a&gt;同じですが、ターゲットを直接返します。エラーが返された場合は&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="8951c3bac4ae5dffa4c5bbea3daceb6ccde41c9e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#read_link/1&quot;&gt;&lt;code&gt;read_link/1&lt;/code&gt;&lt;/a&gt; but returns the target directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#read_link/1&quot;&gt; &lt;code&gt;read_link/1&lt;/code&gt; と&lt;/a&gt;同じですが、ターゲットを直接返すか、エラーが返された場合は&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="d59c6eed3d63d4d8a3c113ef08c30a24189a97d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm/1&quot;&gt;&lt;code&gt;rm/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rm/1&quot;&gt; &lt;code&gt;rm/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63a1737ebe7a1f4b8baac187d9e892d887a5e227" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm/1&quot;&gt;&lt;code&gt;rm/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rm/1&quot;&gt; &lt;code&gt;rm/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb0d2ee4285409ea9feb23a66cf1147cd51c9979" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failures, otherwise the list of files or directories removed.</source>
          <target state="translated">&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; と&lt;/a&gt;同じですが、失敗した場合は&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は、ファイルまたはディレクトリのリストが削除されます。</target>
        </trans-unit>
        <trans-unit id="b25c71a5b0c32195108d4191f8034583b1760af2" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failures, otherwise the list of files or directories removed.</source>
          <target state="translated">&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; と&lt;/a&gt;同じですが、失敗した場合は&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は、ファイルまたはディレクトリのリストが削除されます。</target>
        </trans-unit>
        <trans-unit id="ca1993cb0cbd43a38f474d1155f5b7b631b2f919" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rmdir/1&quot;&gt;&lt;code&gt;rmdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rmdir/1&quot;&gt; &lt;code&gt;rmdir/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。そうでなければ &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4acd9651df159887b04e83b3fb157d24bc9da094" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rmdir/1&quot;&gt;&lt;code&gt;rmdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rmdir/1&quot;&gt; &lt;code&gt;rmdir/1&lt;/code&gt; &lt;/a&gt;と同じですが、失敗した場合に&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合 &lt;code&gt;:ok&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="575d3a4dccc355486708c0f537c0716004925b5b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but scans the target several times collecting all matches of the regular expression.</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; &lt;/a&gt;と同じですが、ターゲットを数回スキャンして、正規表現のすべての一致を収集します。</target>
        </trans-unit>
        <trans-unit id="a8119ce98300dd3b62b884b623f2b5c032fd9ac9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#setup_all/1&quot;&gt;&lt;code&gt;setup_all/1&lt;/code&gt;&lt;/a&gt; but also takes a context. See the &quot;Context&quot; section in the module documentation.</source>
          <target state="translated">&lt;a href=&quot;#setup_all/1&quot;&gt; &lt;code&gt;setup_all/1&lt;/code&gt; と&lt;/a&gt;同じですが、コンテキストも取ります。モジュールドキュメントの「コンテキスト」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b77457b6b2b1ee2217867a7c46a67495e6e62c68" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; but also starts the applications listed under &lt;code&gt;:applications&lt;/code&gt; in the &lt;code&gt;.app&lt;/code&gt; file in case they were not previously started.</source>
          <target state="translated">&lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; と&lt;/a&gt;同じ &lt;code&gt;:applications&lt;/code&gt; が、以前に開始されていなかった場合に備えて、 &lt;code&gt;.app&lt;/code&gt; ファイルの：applicationsにリストされているアプリケーションも開始します。</target>
        </trans-unit>
        <trans-unit id="e78793e6d643221f3a0ae420ea08015425edcec9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; but returns &lt;code&gt;:ok&lt;/code&gt; if the application was already started. This is useful in scripts and in test setup, where test applications need to be explicitly started:</source>
          <target state="translated">&lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; と&lt;/a&gt;同じですが、アプリケーションがすでに開始されている場合は &lt;code&gt;:ok&lt;/code&gt; を返します。これは、テストアプリケーションを明示的に開始する必要があるスクリプトやテストセットアップで役立ちます。</target>
        </trans-unit>
        <trans-unit id="0a3828c1ba3c6005e9c3108c08cdb5024ed08348" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function; &lt;code&gt;fun&lt;/code&gt; in &lt;code&gt;module&lt;/code&gt; will be called with the given arguments &lt;code&gt;args&lt;/code&gt; to initialize the state.</source>
          <target state="translated">&lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; と&lt;/a&gt;同じですが、無名関数の代わりにモジュール、関数、および引数が必要です。 &lt;code&gt;fun&lt;/code&gt; in &lt;code&gt;module&lt;/code&gt; は、指定された引数 &lt;code&gt;args&lt;/code&gt; を使用して呼び出され、状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="a7642aeb9f07cd0551ad686039cb0019e61b10b4" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start_supervised/2&quot;&gt;&lt;code&gt;start_supervised/2&lt;/code&gt;&lt;/a&gt; but returns the PID on success and raises if not started properly.</source>
          <target state="translated">&lt;a href=&quot;#start_supervised/2&quot;&gt; &lt;code&gt;start_supervised/2&lt;/code&gt; と&lt;/a&gt;同じですが、成功するとPIDを返し、正しく開始されない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="b74921cc1238626c0cdfe7d517884a5434d9754d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; と&lt;/a&gt;同じですが、&lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; を&lt;/a&gt;直接返します。エラーが返された場合は、&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="58ee48292e77c54c338409215ea0e4154d0a74cd" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; と&lt;/a&gt;同じですが、&lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; を&lt;/a&gt;直接返すか、エラーが返された場合は&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="dd2effc797ddede6a7aa32cd7994b68da2dcb33d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stop_supervised/1&quot;&gt;&lt;code&gt;stop_supervised/1&lt;/code&gt;&lt;/a&gt; but raises if it cannot be stopped.</source>
          <target state="translated">&lt;a href=&quot;#stop_supervised/1&quot;&gt; &lt;code&gt;stop_supervised/1&lt;/code&gt; と&lt;/a&gt;同じですが、停止できない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="ae7155b178d9750b819a572ae3567be8cfaae862" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tmp_dir/0&quot;&gt;&lt;code&gt;tmp_dir/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no temp dir is set.</source>
          <target state="translated">&lt;a href=&quot;#tmp_dir/0&quot;&gt; &lt;code&gt;tmp_dir/0&lt;/code&gt; と&lt;/a&gt;同じですが、一時ディレクトリが設定されていない場合、 &lt;code&gt;nil&lt;/code&gt; を返す代わりに&lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="752522d479f590f393198cc7a71e949163e1bfc7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tmp_dir/0&quot;&gt;&lt;code&gt;tmp_dir/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no temp dir is set.</source>
          <target state="translated">&lt;a href=&quot;#tmp_dir/0&quot;&gt; &lt;code&gt;tmp_dir/0&lt;/code&gt; と&lt;/a&gt;同じですが、一時ディレクトリが設定されていない場合、 &lt;code&gt;nil&lt;/code&gt; を返す代わりに&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="0f0e9ffc8fa804b8724f92c838bc286537c2fe1b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#touch/2&quot;&gt;&lt;code&gt;touch/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#touch/2&quot;&gt; &lt;code&gt;touch/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ce963fff25685f29eb854818d261e2854d35fa93" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#touch/2&quot;&gt;&lt;code&gt;touch/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#touch/2&quot;&gt; &lt;code&gt;touch/2&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f77f681371830c84b3006064d21f15db82e03e0f" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#update/3&quot;&gt;&lt;code&gt;update/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#update/3&quot;&gt; &lt;code&gt;update/3&lt;/code&gt; と&lt;/a&gt;同じですが、無名関数の代わりにモジュール、関数、および引数が必要です。状態は、指定された引数リストの最初の引数として追加されます。</target>
        </trans-unit>
        <trans-unit id="a0b40ed8100f9c5f15887812110fdf67031d3bb6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#user_home/0&quot;&gt;&lt;code&gt;user_home/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no user home is set.</source>
          <target state="translated">&lt;a href=&quot;#user_home/0&quot;&gt; &lt;code&gt;user_home/0&lt;/code&gt; と&lt;/a&gt;同じですが、ユーザーホームが設定されていない場合、 &lt;code&gt;nil&lt;/code&gt; を返す代わりに&lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="66821177dd6aa530fcb0000506d72a8e2ab408e7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#user_home/0&quot;&gt;&lt;code&gt;user_home/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no user home is set.</source>
          <target state="translated">&lt;a href=&quot;#user_home/0&quot;&gt; &lt;code&gt;user_home/0&lt;/code&gt; と&lt;/a&gt;同じですが、ユーザーのホームが設定されていない場合は &lt;code&gt;nil&lt;/code&gt; を返す代わりに、&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="8977282b08efdcece77456c7255cb72c1b1e4397" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write/3&quot;&gt;&lt;code&gt;write/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write/3&quot;&gt; &lt;code&gt;write/3&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="da43cb357526d39be851295db9ced6a5928f117e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write/3&quot;&gt;&lt;code&gt;write/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write/3&quot;&gt; &lt;code&gt;write/3&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0e1bb5e835ea84efb6ed3926f6ca1a526b10413b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write_stat/3&quot;&gt;&lt;code&gt;write_stat/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write_stat/3&quot;&gt; &lt;code&gt;write_stat/3&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d99da87360ba77fb6f7376936615aeba4dffbbed" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write_stat/3&quot;&gt;&lt;code&gt;write_stat/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write_stat/3&quot;&gt; &lt;code&gt;write_stat/3&lt;/code&gt; と&lt;/a&gt;同じですが、失敗すると&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0e420af5a80458e93aaceadae51899a9fda1e40e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;list(:visible)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list(:visible)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="3a2788ea60da9cbed396e6fb45b36d1e06c38473" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;load/2&lt;/code&gt; but returns &lt;code&gt;:ok&lt;/code&gt; if the application was already loaded.</source>
          <target state="translated">&lt;code&gt;load/2&lt;/code&gt; と同じですが、アプリケーションがすでにロードされている場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="72636a9e74014e05a068fdeb4cbbbe0b8cdb277c" translate="yes" xml:space="preserve">
          <source>Sample config provider</source>
          <target state="translated">サンプル設定プロバイダ</target>
        </trans-unit>
        <trans-unit id="96628af1c348f649b32608354d505436e3d1b258" translate="yes" xml:space="preserve">
          <source>Save it as &lt;code&gt;simple.exs&lt;/code&gt; and execute it with &lt;code&gt;elixir&lt;/code&gt;:</source>
          <target state="translated">それを保存 &lt;code&gt;simple.exs&lt;/code&gt; し、それを実行し &lt;code&gt;elixir&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1469fbd916831395b6490858a3b537c06e6af8b1" translate="yes" xml:space="preserve">
          <source>Say we have a &lt;code&gt;LousyCalculator&lt;/code&gt; module, which performs the usual arithmetic operations (sum, product, and so on) but, instead of returning numbers, it returns tuples with the result of an operation as the first element and a random remark as the second element.</source>
          <target state="translated">通常の算術演算（合計、積など）を実行する &lt;code&gt;LousyCalculator&lt;/code&gt; モジュールがあるが、数値を返すのではなく、演算の結果を最初の要素として、ランダムな注釈を2番目の要素としてタプルを返すとします。 。</target>
        </trans-unit>
        <trans-unit id="97a0b16b16a4b9ffa852bc90badc2708b654ea72" translate="yes" xml:space="preserve">
          <source>Say we want to implement a bunch of parsers, each parsing structured data: for example, a JSON parser and a MessagePack parser. Each of these two parsers will &lt;em&gt;behave&lt;/em&gt; the same way: both will provide a &lt;code&gt;parse/1&lt;/code&gt; function and an &lt;code&gt;extensions/0&lt;/code&gt; function. The &lt;code&gt;parse/1&lt;/code&gt; function will return an Elixir representation of the structured data, while the &lt;code&gt;extensions/0&lt;/code&gt; function will return a list of file extensions that can be used for each type of data (e.g., &lt;code&gt;.json&lt;/code&gt; for JSON files).</source>
          <target state="translated">たとえば、JSONパーサーとMessagePackパーサーなど、一連のパーサーを実装して、それぞれが構造化データを解析するとします。これら2つのパーサーはそれぞれ同じように&lt;em&gt;動作&lt;/em&gt;します。どちらも &lt;code&gt;parse/1&lt;/code&gt; 関数と &lt;code&gt;extensions/0&lt;/code&gt; 関数を提供します。 &lt;code&gt;parse/1&lt;/code&gt; ながら機能は、構造化データのエリクサー表現を返します。 &lt;code&gt;extensions/0&lt;/code&gt; 関数はデータの種類ごとに使用できるファイル拡張子のリストを返します（例えば、 &lt;code&gt;.json&lt;/code&gt; JSONファイル用）。</target>
        </trans-unit>
        <trans-unit id="f797ec069a3a588cc93b2d7e7b51ec1b87b751dc" translate="yes" xml:space="preserve">
          <source>Scripted mode</source>
          <target state="translated">スクリプトモード</target>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="8847aea2b37857c4fe9c4e29d9a32c95be30e798" translate="yes" xml:space="preserve">
          <source>Second, IEx allows you to break an expression into many lines, since this is common in Elixir. For example:</source>
          <target state="translated">第二に、IExでは式を多くの行に分割することができます。例えば</target>
        </trans-unit>
        <trans-unit id="80863c7291923af44e1f330d4438e654d8c8d816" translate="yes" xml:space="preserve">
          <source>Security patches only</source>
          <target state="translated">セキュリティパッチのみ</target>
        </trans-unit>
        <trans-unit id="f87ff12a5586b140b44d0aed5d1141d157905ed6" translate="yes" xml:space="preserve">
          <source>Security: a security issue in the implementation may arise whose resolution requires backwards incompatible changes. We reserve the right to address such security issues.</source>
          <target state="translated">セキュリティ:実装におけるセキュリティ上の問題が発生する可能性があり、その解決には後方互換性のない変更が必要となります。当社は、このようなセキュリティ問題に対処する権利を留保します。</target>
        </trans-unit>
        <trans-unit id="3d297aad6172ead65e3f02dab6f6aac40aa79934" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/5&quot;&gt;&lt;code&gt;async_stream/5&lt;/code&gt;&lt;/a&gt; for discussion, options, and more examples.</source>
          <target state="translated">説明、オプション、およびその他の例については、&lt;a href=&quot;#async_stream/5&quot;&gt; &lt;code&gt;async_stream/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9ea2a4f9446b7042ac45e1cc5f076950d4c363d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/6&quot;&gt;&lt;code&gt;async_stream/6&lt;/code&gt;&lt;/a&gt; for discussion and examples.</source>
          <target state="translated">説明と例については、&lt;a href=&quot;#async_stream/6&quot;&gt; &lt;code&gt;async_stream/6&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab0b50cd928f15f49cfb5f68465e7dfe1adc62ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/6&quot;&gt;&lt;code&gt;async_stream/6&lt;/code&gt;&lt;/a&gt; for discussion, options, and examples.</source>
          <target state="translated">説明、オプション、および例については、&lt;a href=&quot;#async_stream/6&quot;&gt; &lt;code&gt;async_stream/6&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c711218ea0622a68dc6c47b17be58ae3b4864c62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#compile_file/2&quot;&gt;&lt;code&gt;compile_file/2&lt;/code&gt;&lt;/a&gt; if you would like to compile a file without tracking its filenames. Finally, if you would like to get the result of evaluating a file rather than the modules defined in it, see &lt;a href=&quot;#eval_file/2&quot;&gt;&lt;code&gt;eval_file/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイル名を追跡せずにファイルをコンパイルする場合は、&lt;a href=&quot;#compile_file/2&quot;&gt; &lt;code&gt;compile_file/2&lt;/code&gt; を&lt;/a&gt;参照してください。最後に、ファイルで定義されたモジュールではなくファイルの評価結果を取得したい場合は、&lt;a href=&quot;#eval_file/2&quot;&gt; &lt;code&gt;eval_file/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6204a9c040341b764a2faf52239bda6c2bbaf5b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#compiler_options/1&quot;&gt;&lt;code&gt;compiler_options/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#compiler_options/1&quot;&gt; &lt;code&gt;compiler_options/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8acee194aad3daee245a1266feffabc3fee2e4f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#encode_www_form/1&quot;&gt;&lt;code&gt;encode_www_form/1&lt;/code&gt;&lt;/a&gt; if you are interested in escaping reserved characters too.</source>
          <target state="translated">予約文字のエスケープにも関心がある場合は、&lt;a href=&quot;#encode_www_form/1&quot;&gt; &lt;code&gt;encode_www_form/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e611f60301c28b28d34681daac56111d0fc4c7be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#eval_string/3&quot;&gt;&lt;code&gt;eval_string/3&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;binding&lt;/code&gt; and options.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; とオプションの説明については、&lt;a href=&quot;#eval_string/3&quot;&gt; &lt;code&gt;eval_string/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7ca396c98cfdbd4e90a303c7e6adb445c5b12ce0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#eval_string/3&quot;&gt;&lt;code&gt;eval_string/3&lt;/code&gt;&lt;/a&gt; for a description of bindings and options.</source>
          <target state="translated">バインディングとオプションの説明については、&lt;a href=&quot;#eval_string/3&quot;&gt; &lt;code&gt;eval_string/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a25453935310383344a90ea3aef438a7fa788ccc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#format_string!/2&quot;&gt;&lt;code&gt;format_string!/2&lt;/code&gt;&lt;/a&gt; for more information on code formatting and available options.</source>
          <target state="translated">コードのフォーマットと使用可能なオプションの詳細については、&lt;a href=&quot;#format_string!/2&quot;&gt; &lt;code&gt;format_string!/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e6ede686bbbc8be3fd59893f9004d60af9a622cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#getn/3&quot;&gt;&lt;code&gt;IO.getn/3&lt;/code&gt;&lt;/a&gt; for a description of return values.</source>
          <target state="translated">戻り値の説明については、&lt;a href=&quot;#getn/3&quot;&gt; &lt;code&gt;IO.getn/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2883129c68b02ac70cbb305db2bb3985757fe9f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;inspect/2&lt;/code&gt;&lt;/a&gt; for a full list of options.</source>
          <target state="translated">オプションの完全なリストについては、&lt;a href=&quot;#inspect/2&quot;&gt; &lt;code&gt;inspect/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6775db0edf91fd1bcde122f816eb64ab4807cb75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#line/0&quot;&gt;&lt;code&gt;line/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#line/0&quot;&gt; &lt;code&gt;line/0&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e856b9a0b3c384f7599e00c066aa601e20cd32e9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#multi_call/4&quot;&gt;&lt;code&gt;multi_call/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;#multi_call/4&quot;&gt; &lt;code&gt;multi_call/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="412e2ee91670d1cb67318a56aed59f181db3e2c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#myers_difference/3&quot;&gt;&lt;code&gt;myers_difference/3&lt;/code&gt;&lt;/a&gt; if you want to handle nesting in the diff scripts.</source>
          <target state="translated">差分スクリプトでネストを処理する場合は、&lt;a href=&quot;#myers_difference/3&quot;&gt; &lt;code&gt;myers_difference/3&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f9ef13c719ed6d23f577cb59bb94384ed2c4ffcd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#now/2&quot;&gt;&lt;code&gt;now/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#now/2&quot;&gt; &lt;code&gt;now/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5383aa98051793554179d6dd9886bd65adc02068" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; for the list of available &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">使用可能な &lt;code&gt;modes&lt;/code&gt; のリストについては、&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e9443c84eb6a0e5596d38a53c0ea69e901bb5f63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; for the list of available modes.</source>
          <target state="translated">利用可能なモードのリストについては、&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="72587bfb37893ece855338ff229de106ec981e60" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a60c62583c5e98de75e0009105889ad004974083" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#random/1&quot;&gt;&lt;code&gt;random/1&lt;/code&gt;&lt;/a&gt; for notes on implementation and random seed.</source>
          <target state="translated">実装とランダムシードに関する注記については、&lt;a href=&quot;#random/1&quot;&gt; &lt;code&gt;random/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d748ec4ca0ee9bfc4f418d05c4495aa5f4146c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#shift_zone/3&quot;&gt;&lt;code&gt;shift_zone/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#shift_zone/3&quot;&gt; &lt;code&gt;shift_zone/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f79bab9f64b4c1b4a45f5094f7ec3cc5e70348f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#spec/1&quot;&gt;&lt;code&gt;spec/1&lt;/code&gt;&lt;/a&gt; for the supported keys. If the given specification parameter does not exist, this function will raise. Returns &lt;code&gt;nil&lt;/code&gt; if the application is not loaded.</source>
          <target state="translated">サポートされているキーについては、&lt;a href=&quot;#spec/1&quot;&gt; &lt;code&gt;spec/1&lt;/code&gt; &lt;/a&gt;を参照してください。指定された仕様パラメータが存在しない場合、この関数が発生します。アプリケーションがロードされていない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4b86593efd6d87f56f5a4b1d1c80f9efa89b9f35" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9104acc9f7e509727a191a9c211563bc8c6b8821" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="30ce1591410e8c20c70a914da2c1f177eba54a6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/4&quot;&gt;&lt;code&gt;start_link/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#start_link/4&quot;&gt; &lt;code&gt;start_link/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="025b78a6ec53671f1f70eaadb8c6a69193d1552c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#time_offset/1&quot;&gt;&lt;code&gt;time_offset/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#time_offset/1&quot;&gt; &lt;code&gt;time_offset/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="85b0baaaca71d7d382229291aee3fadaa203940b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;calendar#c:day_rollover_relative_to_midnight_utc/0&quot;&gt;&lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="translated">ドキュメントについては、&lt;a href=&quot;calendar#c:day_rollover_relative_to_midnight_utc/0&quot;&gt; &lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="39aa7c276c8b00b83eda4436db990a46be4f135d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;calendar.timezonedatabase&quot;&gt;&lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt;&lt;/a&gt; for more information on custom time zone databases.</source>
          <target state="translated">カスタムタイムゾーンデータベースの詳細については、&lt;a href=&quot;calendar.timezonedatabase&quot;&gt; &lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b437e60993127a72d9f00604cb32048636bf30b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;exunit.case&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exunit.callbacks&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt; for more information about defining test cases and setting up callbacks.</source>
          <target state="translated">テストケースの定義とコールバックの設定の詳細については、&lt;a href=&quot;exunit.case&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;exunit.callbacks&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c5e92f1a723af642ec18095ee3c3e5a7b44a5253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#demonitor-2&quot;&gt;&lt;code&gt;:erlang.demonitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#demonitor-2&quot;&gt; &lt;code&gt;:erlang.demonitor/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="236c47cfb4f80177fcf2f8fee345fdbbdb89da09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#hibernate-3&quot;&gt;&lt;code&gt;:erlang.hibernate/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#hibernate-3&quot;&gt; &lt;code&gt;:erlang.hibernate/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="eb6d7556c0af02d5c3798524709f1fdfd3d33b21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#link-1&quot;&gt;&lt;code&gt;:erlang.link/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#link-1&quot;&gt; &lt;code&gt;:erlang.link/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b294ce31a8bb19561980ff4b847d775b1ea0dc45" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt;&lt;code&gt;:erlang.monitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt; &lt;code&gt;:erlang.monitor/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="937ed9e63e3b26fc6260095741b862928cedd6d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-2&quot;&gt;&lt;code&gt;:erlang.process_flag/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-2&quot;&gt; &lt;code&gt;:erlang.process_flag/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5cb7732eb146e3fb56c4b2718c19b9b1594162d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-3&quot;&gt;&lt;code&gt;:erlang.process_flag/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-3&quot;&gt; &lt;code&gt;:erlang.process_flag/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1b8a68e27e33937ed393acd9f8bbbb6ac56124be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-1&quot;&gt;&lt;code&gt;:erlang.process_info/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-1&quot;&gt; &lt;code&gt;:erlang.process_info/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c57f8a3d92d9199927d2cc7fa62dbb000dd3236c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-2&quot;&gt;&lt;code&gt;:erlang.process_info/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-2&quot;&gt; &lt;code&gt;:erlang.process_info/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="09e49090898de7a7c2f63c4761f683b4aa8ffefe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#processes-0&quot;&gt;&lt;code&gt;:erlang.processes/0&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#processes-0&quot;&gt; &lt;code&gt;:erlang.processes/0&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9b42c9b4711df8ae0d4cbe5f4d34c94df707f05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#unlink-1&quot;&gt;&lt;code&gt;:erlang.unlink/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#unlink-1&quot;&gt; &lt;code&gt;:erlang.unlink/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="90a52cb46cb51ef1c81084e7b546e8f0e253d2e0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#whereis-1&quot;&gt;&lt;code&gt;:erlang.whereis/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#whereis-1&quot;&gt; &lt;code&gt;:erlang.whereis/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="17e5bc7119d17d5e936d1012e37bfd0ad107efba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/genserver.html#the-need-for-monitoring&quot;&gt;the need for monitoring&lt;/a&gt; for an example. See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt;&lt;code&gt;:erlang.monitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">例について&lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/genserver.html#the-need-for-monitoring&quot;&gt;は、監視の必要性を&lt;/a&gt;参照してください。詳細は&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt; &lt;code&gt;:erlang.monitor/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e0c3f01512f58907c7a7cd3cde0a0895c0deafbd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.TimeZoneDatabase.html&quot;&gt;&lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt;&lt;/a&gt; for more information on custom time zone databases.</source>
          <target state="translated">カスタムタイムゾーンデータベースの詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.TimeZoneDatabase.html&quot;&gt; &lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d39dbfd198e71a35b61d43d938835092418fb95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#c:day_rollover_relative_to_midnight_utc/0&quot;&gt;&lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="translated">ドキュメントについては、&lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#c:day_rollover_relative_to_midnight_utc/0&quot;&gt; &lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="334d32997c282eeeeb84b2303486421a48c111cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Function.html&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Function.html&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="620cb8de6ae1a2b9a0cf8721fa8840096789cf30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for a full list of remaining formatting options.</source>
          <target state="translated">残りのフォーマットオプションの完全なリストについては、&lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ff292d29bb98bb0fb3e3262c9d111868a43a1bea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for the full list of options.</source>
          <target state="translated">オプションの完全なリストについては、&lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6cf00eaea6c021a1b10fc534dc36f0afa759156e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt;&lt;/a&gt; for more information on importing.</source>
          <target state="translated">インポートの詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f80093b4a4b4bffa28bc84780eefc07e11b44b2f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defoverridable/1&quot;&gt;&lt;code&gt;Kernel.defoverridable/1&lt;/code&gt;&lt;/a&gt; for more information and documentation.</source>
          <target state="translated">詳細とドキュメントについては、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defoverridable/1&quot;&gt; &lt;code&gt;Kernel.defoverridable/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="18608b11c1121dbb962c735470194553f805b88e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#run/1&quot;&gt;&lt;code&gt;Stream.run/1&lt;/code&gt;&lt;/a&gt; for an example of streaming into a file.</source>
          <target state="translated">ファイルへのストリーミングの例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#run/1&quot;&gt; &lt;code&gt;Stream.run/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cce79031ac48bd22190a42bf791851f4dbf7f44c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; for more information. The task spawned must be always awaited on by calling &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/1&quot;&gt;&lt;code&gt;Task.await/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt;を参照してください。生成されたタスクは、&lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/1&quot;&gt; &lt;code&gt;Task.await/1&lt;/code&gt; を&lt;/a&gt;呼び出して常に待機する必要があります</target>
        </trans-unit>
        <trans-unit id="3a332609124d5c768610c6068efe667f1415a785" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt; for more information about defining test cases and setting up callbacks.</source>
          <target state="translated">テストケースの定義とコールバックの設定の詳細については、&lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ff7fac65821b31c7cfc50567f8471dc1022a6991" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#configure/1&quot;&gt;&lt;code&gt;ExUnit.configure/1&lt;/code&gt;&lt;/a&gt; for more information on configuration options.</source>
          <target state="translated">設定オプションの詳細については、&lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#configure/1&quot;&gt; &lt;code&gt;ExUnit.configure/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ad2197ff4b330c1dce02fa27c3f0c4aa0eb6fea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for a complete description of breakpoints in IEx.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt;のブレークポイントの詳細については、IEx.break！/ 4を参照してください。</target>
        </trans-unit>
        <trans-unit id="2aa73013ec0f8266d2782f591e22ca6349c23e1f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Release.html&quot;&gt;&lt;code&gt;Mix.Release&lt;/code&gt;&lt;/a&gt; for more documentation on the struct and which fields can be modified. Note that the &lt;code&gt;:steps&lt;/code&gt; field itself can be modified and it is updated every time a step is called. Therefore, if you need to execute a command before and after assembling the release, you only need to declare the first steps in your pipeline and then inject the last step into the release struct. The steps field can also be used to verify if the step was set before or after assembling the release.</source>
          <target state="translated">構造体と変更可能なフィールドの詳細については、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Release.html&quot;&gt; &lt;code&gt;Mix.Release&lt;/code&gt; &lt;/a&gt;を参照してください。 &lt;code&gt;:steps&lt;/code&gt; フィールド自体は変更可能であり、ステップが呼び出されるたびに更新されることに注意してください。したがって、リリースをアセンブルする前後にコマンドを実行する必要がある場合は、パイプラインの最初のステップを宣言してから、最後のステップをリリース構造体に挿入するだけで済みます。ステップフィールドを使用して、リリースをアセンブルする前または後にステップが設定されたかどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="d3ed9464974cc03cebc39d10e5627e1ce2b2c310" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.SCM.html&quot;&gt;&lt;code&gt;Mix.SCM&lt;/code&gt;&lt;/a&gt; module documentation to learn more about SCMs.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/mix/Mix.SCM.html&quot;&gt; &lt;code&gt;Mix.SCM&lt;/code&gt; &lt;/a&gt;詳細については、Mix.SCMモジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6edba8d79bc2caa95282b27ca2537278ef94ab01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for a complete description of breakpoints in IEx.</source>
          <target state="translated">&lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt;のブレークポイントの詳細については、IEx.break！/ 4を参照してください。</target>
        </trans-unit>
        <trans-unit id="5122ba27d8721b949fffc951604aa13f45980e9b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;inspect.opts&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for a full list of remaining formatting options.</source>
          <target state="translated">残りのフォーマットオプションの完全なリストについては、&lt;a href=&quot;inspect.opts&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1dc68776cfd1eb7d70aa15085d8f462ed1d3d053" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;io#getn/3&quot;&gt;&lt;code&gt;IO.getn/3&lt;/code&gt;&lt;/a&gt; for a description of return values.</source>
          <target state="translated">戻り値の説明については、&lt;a href=&quot;io#getn/3&quot;&gt; &lt;code&gt;IO.getn/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="97d611377e22e5db00ff12e232a607ad3ab3ef5e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kernel#defoverridable/1&quot;&gt;&lt;code&gt;Kernel.defoverridable/1&lt;/code&gt;&lt;/a&gt; for more information and documentation.</source>
          <target state="translated">詳細およびドキュメントについては、&lt;a href=&quot;kernel#defoverridable/1&quot;&gt; &lt;code&gt;Kernel.defoverridable/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="571066f54659ec2ac5b16799e2adaad081cfb2dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kernel.specialforms#import/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt;&lt;/a&gt; for more information on importing.</source>
          <target state="translated">インポートの詳細については、&lt;a href=&quot;kernel.specialforms#import/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2f044d50d2ace10fab3e6c795376b601501a3205" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#run/1&quot;&gt;&lt;code&gt;Stream.run/1&lt;/code&gt;&lt;/a&gt; for an example of streaming into a file.</source>
          <target state="translated">ファイルへのストリーミングの例については、&lt;a href=&quot;stream#run/1&quot;&gt; &lt;code&gt;Stream.run/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c71eb54f62c0e44af2d3fc12b12fd9ffd5a6142c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="14914fd526c793471e43dfbd5057556d75ec048c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;task#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; for more information. The task spawned must be always awaited on by calling &lt;a href=&quot;task#await/1&quot;&gt;&lt;code&gt;Task.await/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;task#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt;を参照してください。生成されたタスクは、常に&lt;a href=&quot;task#await/1&quot;&gt; &lt;code&gt;Task.await/1&lt;/code&gt; を&lt;/a&gt;呼び出して待機する必要があります</target>
        </trans-unit>
        <trans-unit id="3aa41a4f7ed7d2b0af79578b5fcca0043e0e1e47" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;%Task{}&lt;/code&gt; for information about each field of the structure.</source>
          <target state="translated">構造体の各フィールドについては、 &lt;code&gt;%Task{}&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="4cceaf34a6a814616d8794130f79ffcf533b24d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;encode_www_form&lt;/code&gt; if you are interested in escaping reserved characters too.</source>
          <target state="translated">予約文字のエスケープにも関心がある場合は、 &lt;code&gt;encode_www_form&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c68610d4f3ab56d8617f2cfbefaa73856e91cce0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#async/3&quot;&gt;&lt;code&gt;async/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#async/3&quot;&gt; &lt;code&gt;async/3&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="29a63667da796e9c242be4119c0fafe37c909456" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#filter/2&quot;&gt;&lt;code&gt;filter/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#filter/2&quot;&gt; &lt;code&gt;filter/2&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0a0192db1681c0a57d284e9275a06f0331fb0685" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="521978e302ce7fcc9d153cb10876b8947a2b4270" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#reject/2&quot;&gt;&lt;code&gt;reject/2&lt;/code&gt;&lt;/a&gt; which discards all elements where the function returns a truthy value.</source>
          <target state="translated">関数が真の値を返すすべての要素を破棄する&lt;a href=&quot;#reject/2&quot;&gt; &lt;code&gt;reject/2&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="31d0b6ab96038fad7452ed84f59baf70b0a8479c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#t:std_offset/0&quot;&gt;&lt;code&gt;std_offset/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#t:std_offset/0&quot;&gt; &lt;code&gt;std_offset/0&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="a6f19e1118fb5439e3b2951ab6f2872117a4c839" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;calendar#compatible_calendars?/2&quot;&gt;&lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#compatible_calendars?/2&quot;&gt; &lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cce61e3bd48619c59d1a4129a8b1e9973519ccfe" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;function#capture/3&quot;&gt;&lt;code&gt;Function.capture/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function#capture/3&quot;&gt; &lt;code&gt;Function.capture/3&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="fa9c250cb404bd52c2b300838fe07d2daf3dab9c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#compatible_calendars?/2&quot;&gt;&lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#compatible_calendars?/2&quot;&gt; &lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="119b4bb99508808fddddf1ce2805eb2930f0d98d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hexdocs.pm/elixir/Function.html#capture/3&quot;&gt;&lt;code&gt;Function.capture/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Function.html#capture/3&quot;&gt; &lt;code&gt;Function.capture/3&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="57eefd5a434fd09c6836f667932fd5024b9ccc46" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;kernel#is_atom/1&quot;&gt;&lt;code&gt;Kernel.is_atom/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;kernel#is_atom/1&quot;&gt; &lt;code&gt;Kernel.is_atom/1&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="65b68fca61a40ff6b6e86ee7c61e7e40d5a2a59a" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="3f470d483a35d2073612b4a4c8065fc1f8baf17f" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Agent&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;use Agent&lt;/code&gt; の直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="3338e1f5bdd155f6af081eb43e57d26cd9caae74" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use GenServer&lt;/code&gt; will be attached to the generated &lt;code&gt;child_spec/1&lt;/code&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;use GenServer&lt;/code&gt; を使用する直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された &lt;code&gt;child_spec/1&lt;/code&gt; 関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="00095b78abd10669d614655214e1a3c2c4524a2e" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Task&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;use Task&lt;/code&gt; 直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="2b47b902698fa63ed92ca0c651047d9fbaef5a1d" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="1dd6eb5e99c7c03dbe3b1d4be075fa120ab3f831" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Agent&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;use Agent&lt;/code&gt; の直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="960d22cd31686e11772eef98ee456c7709453659" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use GenServer&lt;/code&gt; will be attached to the generated &lt;code&gt;child_spec/1&lt;/code&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;@doc&lt;/code&gt; の直前の注釈 &lt;code&gt;use GenServer&lt;/code&gt; 生成に付着する &lt;code&gt;child_spec/1&lt;/code&gt; 機能。</target>
        </trans-unit>
        <trans-unit id="7b1dc97a60bbc7638b75a98279e08aacfb50a439" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Task&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">詳細については、&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールの「子の仕様」セクションを参照してください。 &lt;code&gt;use Task&lt;/code&gt; の直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="30dd4d39d714824873c91242d2b45957ae02a0c9" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the module documentation for all of the available keys for overriding.</source>
          <target state="translated">オーバーライドに使用できるすべてのキーについては、モジュールドキュメントの「子の仕様」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="13a1ebd27d05e64d87df69ec749b3054f6d91e47" translate="yes" xml:space="preserve">
          <source>See the &quot;Examples&quot; section for examples on how to use these macros.</source>
          <target state="translated">これらのマクロの使用方法については、「例」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="8021c2632ef085ff4af63198b9eb5555ee02ad16" translate="yes" xml:space="preserve">
          <source>See the &quot;Requirements&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt;モジュールの「要件」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4715e0f5e31a7ecf5eb97e3118b4e7cb9a349e30" translate="yes" xml:space="preserve">
          <source>See the &quot;Requirements&quot; section in the &lt;a href=&quot;version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;version&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt;モジュールの「要件」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="085f6faad706b44fbfe10741a52117a1876b7c28" translate="yes" xml:space="preserve">
          <source>See the &quot;Runtime Configuration&quot; section in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; module documentation for the available options. The changes done here are automatically persisted to the &lt;code&gt;:logger&lt;/code&gt; application environment.</source>
          <target state="translated">使用可能なオプションについては、&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントの「ランタイム構成」セクションを参照してください。ここで行われた変更は、 &lt;code&gt;:logger&lt;/code&gt; アプリケーション環境に自動的に永続化されます。</target>
        </trans-unit>
        <trans-unit id="cca171332e51871d4f29f2362aba4c90108dd995" translate="yes" xml:space="preserve">
          <source>See the &quot;Supervisor and worker options&quot; section in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Supervisor.Spec&lt;/code&gt;&lt;/a&gt; module for more information on the available options.</source>
          <target state="translated">使用可能なオプションの詳細については、&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Supervisor.Spec&lt;/code&gt; &lt;/a&gt;モジュールの「スーパーバイザーとワーカーのオプション」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="fed1d1ad790bc4b32e368f1dd909f8be2e226649" translate="yes" xml:space="preserve">
          <source>See the &quot;User-defined types&quot; and &quot;Defining a specification&quot; sub-sections below for more information on defining types and typespecs.</source>
          <target state="translated">タイプの定義とタイプ仕様の詳細については、以下の「ユーザー定義タイプ」と「仕様の定義」のサブセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="d47f633402a6dc7774499c24b6dc4ec38c37f7ac" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hex.pm/docs/usage&quot;&gt;Hex usage documentation&lt;/a&gt; for Hex options.</source>
          <target state="translated">Hexオプションについては、&lt;a href=&quot;https://hex.pm/docs/usage&quot;&gt;Hexの使用法のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f2819013089d7de456841d6baad7b4a9a0642c29" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html&quot;&gt;&lt;code&gt;IO.ANSI&lt;/code&gt;&lt;/a&gt; module for a list of colors and attributes.</source>
          <target state="translated">色と属性のリストについては、&lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html&quot;&gt; &lt;code&gt;IO.ANSI&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="7622ba68cb3ee7ad3e40e5d0e473fd94e133e828" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module for more information about maps, their syntax, and ways to access and manipulate them.</source>
          <target state="translated">マップ、マップの構文、およびマップにアクセスして操作する方法の詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">このコールバックの実装方法の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; の&lt;/a&gt;実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="5becf3146c3b70c6347637f8299df03d385c78b8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="4f671fc3ebd2e39b5395b23af773eafa2ea0646d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; docs for a discussion of when you may want to use module-based supervisors. A &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use DynamicSupervisor&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">モジュールベースのスーパーバイザーをいつ使用するかについては、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;ドキュメントを参照してください。 &lt;code&gt;use DynamicSupervisor&lt;/code&gt; を使用する直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="e4e1309d06b307016c3bb04091688992534bfea8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for a discussion on child specifications and the available specification keys.</source>
          <target state="translated">子の仕様と使用可能な仕様キーの説明については、&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="8ee65331e280be5729e9102b34da75d2a9af4f7f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; module for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd32b7ab5b01b35903a9586d9d833a80b5dd7fd6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html&quot;&gt;&lt;code&gt;Mix.Project&lt;/code&gt;&lt;/a&gt; module for detailed documentation on Mix projects.</source>
          <target state="translated">Mixプロジェクトの詳細なドキュメントについては、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html&quot;&gt; &lt;code&gt;Mix.Project&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="7c6950e22c21b6f7b716f5c525cae0336cd96fb8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt; behaviour for detailed documentation on Mix tasks.</source>
          <target state="translated">Mixタスクの詳細なドキュメントについては、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; の&lt;/a&gt;動作を参照してください。</target>
        </trans-unit>
        <trans-unit id="31cebecc5227b5e52c63b7361e188bd42aa17e0e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module for more information about maps, their syntax, and ways to access and manipulate them.</source>
          <target state="translated">マップ、その構文、およびマップにアクセスして操作する方法の詳細については、&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="651c622de5237592dd974ed0f2426a971dc5e1d4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;map#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyword#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">このコールバックの実装方法の例については、&lt;a href=&quot;map#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;keyword#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; の&lt;/a&gt;実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="b624e472805d3adc4b87dc79e98807bc8b027cc7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mix.project&quot;&gt;&lt;code&gt;Mix.Project&lt;/code&gt;&lt;/a&gt; module for detailed documentation on Mix projects.</source>
          <target state="translated">Mixプロジェクトの詳細なドキュメントについては、&lt;a href=&quot;mix.project&quot;&gt; &lt;code&gt;Mix.Project&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="7d2161f4dd28a8df53dbe019879d314fcf1214b8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mix.task&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt; behaviour for detailed documentation on Mix tasks.</source>
          <target state="translated">Mixタスクの詳細なドキュメントについては、&lt;a href=&quot;mix.task&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt;動作を参照してください。</target>
        </trans-unit>
        <trans-unit id="834e1b329e36786a4bfd904e77180b7810718e3a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="0847e6e61327a1ea818ef259423a8a134e0ee0f4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; docs for a discussion of when you may want to use module-based supervisors. A &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use DynamicSupervisor&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">モジュールベースのスーパーバイザをいつ使用するかについては、&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;ドキュメントを参照してください。 &lt;code&gt;use DynamicSupervisor&lt;/code&gt; を使用する直前の &lt;code&gt;@doc&lt;/code&gt; アノテーションは、生成された&lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt;関数に添付されます。</target>
        </trans-unit>
        <trans-unit id="30646707ecc4c9e5716bc2575d2918e37f631016" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; module for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="521883a412627960d91b5785452a647e50c8e912" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%3C%3C%3E%3E/1&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; for a complete definition of pattern matching for binaries.</source>
          <target state="translated">バイナリのパターンマッチングの完全な定義については、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%3C%3C%3E%3E/1&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="97b5840ba3ecf762a5d50e89e069b4203e9b0770" translate="yes" xml:space="preserve">
          <source>See the documentation of the types &lt;a href=&quot;#t:result/0&quot;&gt;&lt;code&gt;result/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#t:acc/0&quot;&gt;&lt;code&gt;acc/0&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#t:result/0&quot;&gt; &lt;code&gt;result/0&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#t:acc/0&quot;&gt; &lt;code&gt;acc/0&lt;/code&gt; &lt;/a&gt;タイプのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="48919ea9082d235b5077c7a570c846b395a36e13" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#translate/4&quot;&gt;&lt;code&gt;translate/4&lt;/code&gt;&lt;/a&gt; in this module for an example implementation and the default messages translated by Logger.</source>
          <target state="translated">実装例とLoggerによって翻訳されるデフォルトのメッセージについては、このモジュールの関数&lt;a href=&quot;#translate/4&quot;&gt; &lt;code&gt;translate/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d03554d098407b50efb80318b6cb826078d373be" translate="yes" xml:space="preserve">
          <source>See the functions &lt;a href=&quot;#key/1&quot;&gt;&lt;code&gt;key/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#key!/1&quot;&gt;&lt;code&gt;key!/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#elem/1&quot;&gt;&lt;code&gt;elem/1&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#all/0&quot;&gt;&lt;code&gt;all/0&lt;/code&gt;&lt;/a&gt; for some of the available accessors.</source>
          <target state="translated">使用可能なアクセサの一部については、関数&lt;a href=&quot;#key/1&quot;&gt; &lt;code&gt;key/1&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#key!/1&quot;&gt; &lt;code&gt;key!/1&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#elem/1&quot;&gt; &lt;code&gt;elem/1&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#all/0&quot;&gt; &lt;code&gt;all/0&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt;の実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="d99ed096cc54f8665e2cf9b783ce3e9873f41906" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;map#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keyword#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;map#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;keyword#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt;の実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt;の実装をご覧ください。</target>
        </trans-unit>
        <trans-unit id="48e1c7f34e1efc0af461c403476b7022caec0f16" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;map#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keyword#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;map#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;keyword#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt;の実装をご覧ください。</target>
        </trans-unit>
        <trans-unit id="6c1685eaa54fe519606b25019173c312cf3476a2" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using the &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; function for building custom dispatching or a pubsub system.</source>
          <target state="translated">カスタムディスパッチまたはpubsubシステムを構築するための&lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt;関数の使用例については、モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0517a29706a6bfbbd785d85785828e366f8d6e42" translate="yes" xml:space="preserve">
          <source>See the proper names in the library installation instructions.</source>
          <target state="translated">ライブラリのインストール説明書の適切な名前を参照してください。</target>
        </trans-unit>
        <trans-unit id="14956dad2080627640e7bd584face34c8c603039" translate="yes" xml:space="preserve">
          <source>Seen in typespecs between &lt;code&gt;(&lt;/code&gt;/&lt;code&gt;)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; / &lt;code&gt;)&lt;/code&gt; の間のtypespecsで見られる：</target>
        </trans-unit>
        <trans-unit id="0bf39df7a763366418834d3b6d581e918c721630" translate="yes" xml:space="preserve">
          <source>Select key, pid, and values registered using full match specs.</source>
          <target state="translated">フルマッチ仕様で登録されたキー、pid、値を選択します。</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="72921a7d1afeb5d46deeaae06094b4518ba182c2" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir in your servers, as it includes the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">自己完結型。リリースでは、本番の成果物にソースコードを含める必要はありません。すべてのコードはプリコンパイルされてパッケージ化されています。リリースにはデフォルトでErlang VMとそのランタイムが含まれているので、ErlangやElixirをサーバにインストールする必要はありません。さらに、ErlangとElixirの標準ライブラリは、あなたが実際に使っている部分だけを持ってくるようにストリップされています。</target>
        </trans-unit>
        <trans-unit id="a2fea41f17d4b9ff27715e407e2cf8ec1bb01c0a" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir in your servers, as they include the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">自己完結型。リリースでは、本番の成果物にソースコードを含める必要はありません。すべてのコードはプリコンパイルされてパッケージ化されています。リリースにはデフォルトでErlang VMとそのランタイムが含まれているので、ErlangやElixirをサーバにインストールする必要はありません。さらに、ErlangとElixirの標準ライブラリは、あなたが実際に使っている部分だけを持ってくるようにストリップされています。</target>
        </trans-unit>
        <trans-unit id="f539471dbc831750f340efd3dd43b33bbb4a5ee4" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir on your servers, as they include the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">自己完結型。リリースでは、本番の成果物にソースコードを含める必要はありません。すべてのコードはプリコンパイルされてパッケージ化されています。リリースにはデフォルトでErlang VMとそのランタイムが含まれているので、ErlangやElixirをサーバにインストールする必要はありません。さらに、ErlangとElixirの標準ライブラリは、あなたが実際に使っている部分だけを持ってくるようにストリップされています。</target>
        </trans-unit>
        <trans-unit id="fa5e4064e6fa9724596beba2eb2d2bdeb5bdd5ec" translate="yes" xml:space="preserve">
          <source>Self-synchronization</source>
          <target state="translated">Self-synchronization</target>
        </trans-unit>
        <trans-unit id="3c0d7514174147765863ad4a49aa216f1de66c30" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;data&lt;/code&gt; to the port driver &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">送信し &lt;code&gt;data&lt;/code&gt; ポートドライバに &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f64dd7958524cc44215629f3b20e0dd31bc22fa" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;msg&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; after &lt;code&gt;time&lt;/code&gt; milliseconds.</source>
          <target state="translated">送信 &lt;code&gt;msg&lt;/code&gt; に &lt;code&gt;dest&lt;/code&gt; した後 &lt;code&gt;time&lt;/code&gt; （ミリ秒）。</target>
        </trans-unit>
        <trans-unit id="17e918478af63ce463699cc4ff1b23f883f95a9f" translate="yes" xml:space="preserve">
          <source>Sends a message to the given &lt;code&gt;dest&lt;/code&gt; and returns the message.</source>
          <target state="translated">所与へメッセージを送信 &lt;code&gt;dest&lt;/code&gt; とメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="b54fc6854b1a982d3c545edf5c557bc49fded778" translate="yes" xml:space="preserve">
          <source>Sends a message to the given &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;dest&lt;/code&gt; にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="2cefd165c18081fd6fe91c82252ac408d3292fbd" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;server&lt;/code&gt;.</source>
          <target state="translated">非同期リクエストを &lt;code&gt;server&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca5b7002363f9f0cca78f8e906c3aa3330d0ae12" translate="yes" xml:space="preserve">
          <source>Sends an exit signal with the given &lt;code&gt;reason&lt;/code&gt; to &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;reason&lt;/code&gt; 終了シグナルを &lt;code&gt;pid&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="1e44ba6bd0968aeac7b6e9cefab2ddb65373d4d8" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;columns&lt;/code&gt; to the left.</source>
          <target state="translated">カーソル &lt;code&gt;columns&lt;/code&gt; を左に移動します。</target>
        </trans-unit>
        <trans-unit id="7f6080a32049ff439b9da9800dd735d75c29d425" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;columns&lt;/code&gt; to the right.</source>
          <target state="translated">カーソル &lt;code&gt;columns&lt;/code&gt; を右に送ります。</target>
        </trans-unit>
        <trans-unit id="6dbc5e735ac797de8a8c5b81a5251a5f1a283865" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;lines&lt;/code&gt; down.</source>
          <target state="translated">カーソル &lt;code&gt;lines&lt;/code&gt; 下に送ります。</target>
        </trans-unit>
        <trans-unit id="b9a4e84d28ea3580244ab3256b50bd9efdbc0151" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;lines&lt;/code&gt; up.</source>
          <target state="translated">カーソル &lt;code&gt;lines&lt;/code&gt; 上に送ります。</target>
        </trans-unit>
        <trans-unit id="bcec44f9ec6cb9df6688389583935ce809c35f6c" translate="yes" xml:space="preserve">
          <source>Sends cursor home.</source>
          <target state="translated">カーソルを原点復帰させます。</target>
        </trans-unit>
        <trans-unit id="bc0e62df768087c38a6a36d743e8886f42bf3c96" translate="yes" xml:space="preserve">
          <source>Sends cursor to the absolute position specified by &lt;code&gt;line&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; と &lt;code&gt;column&lt;/code&gt; で指定された絶対位置にカーソルを送ります。</target>
        </trans-unit>
        <trans-unit id="76a031d2a08054668d0a9c564544c0a45f112c18" translate="yes" xml:space="preserve">
          <source>Services mode (Windows)</source>
          <target state="translated">サービスモード(Windows</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="9be72aa01b53dd3cf81dc5aa2dc80af2f415c3d0" translate="yes" xml:space="preserve">
          <source>Sets Mix debug mode.</source>
          <target state="translated">Mix デバッグモードを設定します。</target>
        </trans-unit>
        <trans-unit id="1d77307070c014b533b9d6cfd05431cb6f0b4261" translate="yes" xml:space="preserve">
          <source>Sets a callback to be executed after the completion of a test suite.</source>
          <target state="translated">テストスイートの完了後に実行されるコールバックを設定します。</target>
        </trans-unit>
        <trans-unit id="95049291413df5043d39363ceb451c80a5958431" translate="yes" xml:space="preserve">
          <source>Sets a new &lt;code&gt;value&lt;/code&gt; for the environment variable &lt;code&gt;varname&lt;/code&gt;.</source>
          <target state="translated">環境変数 &lt;code&gt;varname&lt;/code&gt; の新しい &lt;code&gt;value&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="df04ebaf2d3a8d6495161f70b69f8869f9593188" translate="yes" xml:space="preserve">
          <source>Sets a new value for each environment variable corresponding to each &lt;code&gt;{key, value}&lt;/code&gt; pair in &lt;code&gt;enum&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; の各 &lt;code&gt;{key, value}&lt;/code&gt; ペアに対応する各環境変数に新しい値を設定します。</target>
        </trans-unit>
        <trans-unit id="e9ab43d5de5cacd3bc561774001fd54e4bba2a96" translate="yes" xml:space="preserve">
          <source>Sets alternative font 1.</source>
          <target state="translated">代替フォント 1 を設定します。</target>
        </trans-unit>
        <trans-unit id="8edb8def9cdb97da70bf0451c00ff25555c70e10" translate="yes" xml:space="preserve">
          <source>Sets alternative font 2.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="8d1ac9cd4cf8b0e229c6dda3c6ecd12e98303ed1" translate="yes" xml:space="preserve">
          <source>Sets alternative font 3.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="7072854cf2f06837bfe9e42053b67d0885cc7381" translate="yes" xml:space="preserve">
          <source>Sets alternative font 4.</source>
          <target state="translated">代替フォントの設定 4.</target>
        </trans-unit>
        <trans-unit id="2aa48cc2b1893e137ef411ac32f856604cb77735" translate="yes" xml:space="preserve">
          <source>Sets alternative font 5.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="39ca4c1a80bf153fcd9906082161dce28ef18160" translate="yes" xml:space="preserve">
          <source>Sets alternative font 6.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="4215ec54612d026378660065215630d2d5625b02" translate="yes" xml:space="preserve">
          <source>Sets alternative font 7.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="ad6d8612ae8881afaba1678731ca951e971a4545" translate="yes" xml:space="preserve">
          <source>Sets alternative font 8.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="72c2cb3ddc59641afaf2b1648696085dca57354a" translate="yes" xml:space="preserve">
          <source>Sets alternative font 9.</source>
          <target state="translated">代替フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="8cc46141abbbe2bfc4a335984571ebea030f1f4e" translate="yes" xml:space="preserve">
          <source>Sets an environment variable value.</source>
          <target state="translated">環境変数の値を設定します。</target>
        </trans-unit>
        <trans-unit id="a826d74849fb62ee6a74ceb3b1cd7978be06262a" translate="yes" xml:space="preserve">
          <source>Sets background color to black.</source>
          <target state="translated">背景色を黒に設定します。</target>
        </trans-unit>
        <trans-unit id="10d0c6b6216ecb182183e3e4490d75b331e5ac4e" translate="yes" xml:space="preserve">
          <source>Sets background color to blue.</source>
          <target state="translated">背景色を青に設定します。</target>
        </trans-unit>
        <trans-unit id="d1c957999d6dba80218cf8c9e454329ec1c641b4" translate="yes" xml:space="preserve">
          <source>Sets background color to cyan.</source>
          <target state="translated">背景色をシアンに設定します。</target>
        </trans-unit>
        <trans-unit id="465b2301d66d2ec0dd6aba721293763d3f5fbd3c" translate="yes" xml:space="preserve">
          <source>Sets background color to green.</source>
          <target state="translated">背景色を緑に設定します。</target>
        </trans-unit>
        <trans-unit id="fdef1c6739e5c7657622b69f885688ac2aaf4c09" translate="yes" xml:space="preserve">
          <source>Sets background color to light black.</source>
          <target state="translated">背景色を明るい黒に設定します。</target>
        </trans-unit>
        <trans-unit id="6174513109caa31b77c1be107e7629e5ce50fce3" translate="yes" xml:space="preserve">
          <source>Sets background color to light blue.</source>
          <target state="translated">背景色を水色に設定します。</target>
        </trans-unit>
        <trans-unit id="03c66b8d8e716ec6c1fecb339dadb258b6f11e36" translate="yes" xml:space="preserve">
          <source>Sets background color to light cyan.</source>
          <target state="translated">背景色をライトシアンに設定します。</target>
        </trans-unit>
        <trans-unit id="470bff16eaf6d3fe0e9511cc22903bf7199b64f9" translate="yes" xml:space="preserve">
          <source>Sets background color to light green.</source>
          <target state="translated">背景色をライトグリーンに設定します。</target>
        </trans-unit>
        <trans-unit id="c39a6cde4a6acc3a0d5beb27b16ee1f4c511d012" translate="yes" xml:space="preserve">
          <source>Sets background color to light magenta.</source>
          <target state="translated">背景色を明るいマゼンタに設定します。</target>
        </trans-unit>
        <trans-unit id="111295dc77fed13435d084cb4401ea78ad5738ad" translate="yes" xml:space="preserve">
          <source>Sets background color to light red.</source>
          <target state="translated">背景色を淡い赤に設定します。</target>
        </trans-unit>
        <trans-unit id="9ad6ecd81399c88b626b837ebb871a3c9b0bb23f" translate="yes" xml:space="preserve">
          <source>Sets background color to light white.</source>
          <target state="translated">背景色を淡い白に設定します。</target>
        </trans-unit>
        <trans-unit id="a9206206a115c985d751db2969e98ef4a03e0264" translate="yes" xml:space="preserve">
          <source>Sets background color to light yellow.</source>
          <target state="translated">背景色を明るい黄色に設定します。</target>
        </trans-unit>
        <trans-unit id="8a1777285d3d09b9e1d76c7f8cd49f56a1573623" translate="yes" xml:space="preserve">
          <source>Sets background color to magenta.</source>
          <target state="translated">背景色をマゼンタに設定します。</target>
        </trans-unit>
        <trans-unit id="adca10d1c7b344189df9fae05a24c1bd96a1d92d" translate="yes" xml:space="preserve">
          <source>Sets background color to red.</source>
          <target state="translated">背景色を赤に設定します。</target>
        </trans-unit>
        <trans-unit id="b2c0cffecb0fad25ca47ab11177e30d0c791deeb" translate="yes" xml:space="preserve">
          <source>Sets background color to white.</source>
          <target state="translated">背景色を白に設定します。</target>
        </trans-unit>
        <trans-unit id="b1bdfb344a41cbd6621586aef35110ba60881a19" translate="yes" xml:space="preserve">
          <source>Sets background color to yellow.</source>
          <target state="translated">背景色を黄色に設定します。</target>
        </trans-unit>
        <trans-unit id="23e5897be4d76f7fd4bcf26d66bb09668bfae14d" translate="yes" xml:space="preserve">
          <source>Sets background color.</source>
          <target state="translated">背景色を設定します。</target>
        </trans-unit>
        <trans-unit id="b0e963b8a639f7cfa8a928aa5ef30a18f01b8b76" translate="yes" xml:space="preserve">
          <source>Sets compilation options.</source>
          <target state="translated">コンパイルオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="4af3191878353787f09804a940963cda289d2d58" translate="yes" xml:space="preserve">
          <source>Sets foreground color to black.</source>
          <target state="translated">前景色を黒に設定します。</target>
        </trans-unit>
        <trans-unit id="9693e9447a4e2e975813685e987ef317a4f373d1" translate="yes" xml:space="preserve">
          <source>Sets foreground color to blue.</source>
          <target state="translated">前景色を青に設定します。</target>
        </trans-unit>
        <trans-unit id="e44fc44fed1f585a9fb08e38ac54d6f386d53ac5" translate="yes" xml:space="preserve">
          <source>Sets foreground color to cyan.</source>
          <target state="translated">前景色をシアンに設定します。</target>
        </trans-unit>
        <trans-unit id="6c8d3d784036e97c3c14e6d5155a1952076959ea" translate="yes" xml:space="preserve">
          <source>Sets foreground color to green.</source>
          <target state="translated">前景色を緑に設定します。</target>
        </trans-unit>
        <trans-unit id="4643e7e7d60ef13b2f47d12231b5f29dc03d16e3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light black.</source>
          <target state="translated">前景色を明るい黒に設定します。</target>
        </trans-unit>
        <trans-unit id="a1be063da145c5ab4439b40cb811d8dbef34898c" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light blue.</source>
          <target state="translated">前景色を水色に設定します。</target>
        </trans-unit>
        <trans-unit id="08f981db1719b08b000707738b3ef9fc3d0c75d3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light cyan.</source>
          <target state="translated">前景色をライトシアンに設定します。</target>
        </trans-unit>
        <trans-unit id="104b8231f209bfbf0b97108717afda2f1750e5d3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light green.</source>
          <target state="translated">前景色をライトグリーンに設定します。</target>
        </trans-unit>
        <trans-unit id="9db34278c7284edbd42cf0cfc89abc1fb83132ee" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light magenta.</source>
          <target state="translated">前景色を明るいマゼンタに設定します。</target>
        </trans-unit>
        <trans-unit id="db32a2537ecf889b0b1e5629fd7f42272fcb8fb5" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light red.</source>
          <target state="translated">前景色を淡い赤に設定します。</target>
        </trans-unit>
        <trans-unit id="72d00d975399756fdaf345e4284802fef4f90f59" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light white.</source>
          <target state="translated">前景色をライトホワイトに設定します。</target>
        </trans-unit>
        <trans-unit id="30c5f586e9b9108513eabb3254f8b2f1c79928cf" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light yellow.</source>
          <target state="translated">前景色を明るい黄色に設定します。</target>
        </trans-unit>
        <trans-unit id="6abe9f60e85e97f2db25eaee46be72b5178bd4ac" translate="yes" xml:space="preserve">
          <source>Sets foreground color to magenta.</source>
          <target state="translated">前景色をマゼンタに設定します。</target>
        </trans-unit>
        <trans-unit id="0f1aec19bba5405d7e33275e8d1e98684627bc08" translate="yes" xml:space="preserve">
          <source>Sets foreground color to red.</source>
          <target state="translated">前景色を赤に設定します。</target>
        </trans-unit>
        <trans-unit id="137be52a07b0514fd13837fd0050db9f38fd3616" translate="yes" xml:space="preserve">
          <source>Sets foreground color to white.</source>
          <target state="translated">前景色を白に設定します。</target>
        </trans-unit>
        <trans-unit id="2056c5a1cef57a1806341bd57931cd7718d0b632" translate="yes" xml:space="preserve">
          <source>Sets foreground color to yellow.</source>
          <target state="translated">前景色を黄色に設定します。</target>
        </trans-unit>
        <trans-unit id="9d088fae2dd79b40a794415b1ccbd5f28b7b2072" translate="yes" xml:space="preserve">
          <source>Sets foreground color.</source>
          <target state="translated">前景色を設定します。</target>
        </trans-unit>
        <trans-unit id="138c11b17735272c60f9c50b24086509b686f1f3" translate="yes" xml:space="preserve">
          <source>Sets multiple environment variables.</source>
          <target state="translated">複数の環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="68c33adeac89d23e6d5c99a05bcb4768a7c7a0e8" translate="yes" xml:space="preserve">
          <source>Sets primary (default) font.</source>
          <target state="translated">プライマリ(デフォルト)フォントを設定します。</target>
        </trans-unit>
        <trans-unit id="e3fdb4abe2997f749409b0d03703a7b121cc9bd8" translate="yes" xml:space="preserve">
          <source>Sets the background color from individual RGB values.</source>
          <target state="translated">個々のRGB値から背景色を設定します。</target>
        </trans-unit>
        <trans-unit id="bc55385c692fce0d395e0b8027824e31b2766460" translate="yes" xml:space="preserve">
          <source>Sets the current shell.</source>
          <target state="translated">現在のシェルを設定します。</target>
        </trans-unit>
        <trans-unit id="74d40df198b56abc05f8ae6474de9b6ea08c8551" translate="yes" xml:space="preserve">
          <source>Sets the current time zone database.</source>
          <target state="translated">現在のタイムゾーンデータベースを設定します。</target>
        </trans-unit>
        <trans-unit id="0d9058661731fe47ca5d9563f7f21cf061409cb2" translate="yes" xml:space="preserve">
          <source>Sets the current working directory.</source>
          <target state="translated">現在の作業ディレクトリを設定します。</target>
        </trans-unit>
        <trans-unit id="0481389a90a61b6c7c4ff7d6f8792d81ecb8db2e" translate="yes" xml:space="preserve">
          <source>Sets the foreground color from individual RGB values.</source>
          <target state="translated">個々のRGB値から前景色を設定します。</target>
        </trans-unit>
        <trans-unit id="4544a9510feb0bb4447692b76f601f1678a0ecba" translate="yes" xml:space="preserve">
          <source>Sets the given &lt;code&gt;flag&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt; for the calling process.</source>
          <target state="translated">指定された &lt;code&gt;flag&lt;/code&gt; を呼び出しプロセスの &lt;code&gt;value&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="51027f581acba990017f79f26cef0236eb4184ea" translate="yes" xml:space="preserve">
          <source>Sets the given &lt;code&gt;flag&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt; for the given process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;flag&lt;/code&gt; を、指定されたプロセス &lt;code&gt;pid&lt;/code&gt; の &lt;code&gt;value&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="5c02ad6423bb5f9510d26c0e48d4dc2436660ce3" translate="yes" xml:space="preserve">
          <source>Sets the group leader of the given &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;leader&lt;/code&gt;.</source>
          <target state="translated">与えられたのグループリーダーを設定し &lt;code&gt;pid&lt;/code&gt; に &lt;code&gt;leader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee2d768284181cfd0a76ff1eedd982eeb0cd8f49" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;node&lt;/code&gt; to the atom &lt;code&gt;cookie&lt;/code&gt;.</source>
          <target state="translated">マジッククッキーを設定し &lt;code&gt;node&lt;/code&gt; 原子に &lt;code&gt;cookie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a730a55e3da87bcb0378535ef9cec7bda9822337" translate="yes" xml:space="preserve">
          <source>Sets the number of pending stops in the breakpoint with the given &lt;code&gt;id&lt;/code&gt; to zero.</source>
          <target state="translated">指定された &lt;code&gt;id&lt;/code&gt; を持つブレークポイントで保留中の停止の数をゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="4dd8c9f35b81d47b86870fbb320fb9caa4087ba5" translate="yes" xml:space="preserve">
          <source>Sets the number of pending stops in the given module, function and arity to zero.</source>
          <target state="translated">指定されたモジュール、関数、およびアリティの保留中のストップの数をゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="5526d1cab96d796578c11fabfff9398f5447f063" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint in &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;arity&lt;/code&gt; with the given number of &lt;code&gt;stops&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 、 &lt;code&gt;function&lt;/code&gt; 、および &lt;code&gt;arity&lt;/code&gt; に、指定した &lt;code&gt;stops&lt;/code&gt; 数でブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="ac886fdfaa6fd9a7ee855714753c80da4fe01b17" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint on the given module/function/args with the given &lt;code&gt;guard&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;guard&lt;/code&gt; して、指定されたモジュール/関数/引数にブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="33a42ba01a3c3e7c2c394398744f3bb048626b6e" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint on the given module/function/arity.</source>
          <target state="translated">指定されたモジュール/機能/アリティのブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="5ff2890da0c6af3803e3733c3157cb74c62b5167" translate="yes" xml:space="preserve">
          <source>Sets, maps, and other dictionaries can also be given to the &lt;code&gt;:into&lt;/code&gt; option. In general, &lt;code&gt;:into&lt;/code&gt; accepts any structure that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">セット、マップ、およびその他の辞書を &lt;code&gt;:into&lt;/code&gt; オプションに指定することもできます。一般に、 &lt;code&gt;:into&lt;/code&gt; は&lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt;プロトコルを実装するすべての構造を受け入れます。</target>
        </trans-unit>
        <trans-unit id="bd4535505c2417e61961a7113d0eafce3cb64c39" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;:trap_exit&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; - trapping exits should be used only in special circumstances as it would make your process immune to not only exits from the task but from any other processes.</source>
          <target state="translated">&lt;code&gt;:trap_exit&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定-出口のトラップは、プロセスがタスクからの出口だけでなく他のプロセスからの出口にも影響されないようにするため、特別な状況でのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="33c6a34bf194e7199e9c0a18fddd93d8d9fefeed" translate="yes" xml:space="preserve">
          <source>Setting configuration</source>
          <target state="translated">設定内容</target>
        </trans-unit>
        <trans-unit id="d6289491eaac788284614dd116bb32674dddf31b" translate="yes" xml:space="preserve">
          <source>Setting variables or importing modules in IEx does not affect the caller's environment. However, sending and receiving messages will change the process state.</source>
          <target state="translated">IEx で変数を設定したり、モジュールをインポートしたりしても、呼び出し元の環境には影響しません。ただし、メッセージの送受信によりプロセスの状態が変化します。</target>
        </trans-unit>
        <trans-unit id="acd658415e3f4cbdae905269541fc503e941566c" translate="yes" xml:space="preserve">
          <source>Several environment variables can be used to modify Mix's behaviour.</source>
          <target state="translated">Mix の動作を変更するために、いくつかの環境変数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="34986433934e6d447e3723e81abc0c589c141051" translate="yes" xml:space="preserve">
          <source>Severity of a diagnostic</source>
          <target state="translated">診断の重症度</target>
        </trans-unit>
        <trans-unit id="ef6442010b8ae2c5feefff86551e01b7d2254ba5" translate="yes" xml:space="preserve">
          <source>Severity of a diagnostic:</source>
          <target state="translated">診断の重症度。</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">共有オプション</target>
        </trans-unit>
        <trans-unit id="47bf46e89ff4eb081f0b726f66e98d60c275fcf4" translate="yes" xml:space="preserve">
          <source>Shared state in tests</source>
          <target state="translated">テストでの共有状態</target>
        </trans-unit>
        <trans-unit id="15226b1f30cdb72557e1cfce27d2920a8525c275" translate="yes" xml:space="preserve">
          <source>Shell commands</source>
          <target state="translated">シェルコマンド</target>
        </trans-unit>
        <trans-unit id="6fce86e296dfabdc486d69f2a4bdabf524c07784" translate="yes" xml:space="preserve">
          <source>Shell history</source>
          <target state="translated">シェルの歴史</target>
        </trans-unit>
        <trans-unit id="3b7bc055d42cb5ee445b4629591b6c7ce151525c" translate="yes" xml:space="preserve">
          <source>Shortcut Syntax</source>
          <target state="translated">ショートカット構文</target>
        </trans-unit>
        <trans-unit id="bff5c401cba317d37dd02f3bf20eb021a9a7d880" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;chunk_every(enum, count, count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk_every(enum, count, count)&lt;/code&gt; へのショートカット。</target>
        </trans-unit>
        <trans-unit id="d799f33666a25c03f217b3a7fec86053786d518a" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;chunk_every(enumerable, count, count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk_every(enumerable, count, count)&lt;/code&gt; へのショートカット。</target>
        </trans-unit>
        <trans-unit id="3772f76c5efeb817b41e59c6169f0a12a5138e18" translate="yes" xml:space="preserve">
          <source>Should be called with the &lt;code&gt;enumerable&lt;/code&gt; element and the accumulator contents.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 要素とアキュムレータのコンテンツを使用して呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="eaf3c5d30de589fe59588a546de2d175706c0a28" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;true&lt;/code&gt; if the given date describes a proper date in the calendar.</source>
          <target state="translated">指定された日付がカレンダーの適切な日付を表す場合、 &lt;code&gt;true&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f80193079cddaf6297db3a4d414717fac1a93d52" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;true&lt;/code&gt; if the given time describes a proper time in the calendar.</source>
          <target state="translated">指定された時刻がカレンダーの適切な時刻を表す場合、 &lt;code&gt;true&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="cbf43a01a6c566cc924430796428a82791fb3321" translate="yes" xml:space="preserve">
          <source>Shutdown values (:shutdown)</source>
          <target state="translated">シャットダウン値 (:shutdown)</target>
        </trans-unit>
        <trans-unit id="48d45e15f28f53d164bd6ccb48a540af8d866b66" translate="yes" xml:space="preserve">
          <source>Shutdown values (&lt;code&gt;:shutdown&lt;/code&gt;)</source>
          <target state="translated">シャットダウン値（ &lt;code&gt;:shutdown&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="61b96603a0adb4afa5ae805609bff262dc3909bc" translate="yes" xml:space="preserve">
          <source>Shutting down a live system cleanly can be done by calling &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#stop/1&quot;&gt;&lt;code&gt;System.stop/1&lt;/code&gt;&lt;/a&gt;. It will shut down every application in the opposite order they had been started.</source>
          <target state="translated">ライブシステムをクリーンにシャットダウンするには、&lt;a href=&quot;https://hexdocs.pm/elixir/System.html#stop/1&quot;&gt; &lt;code&gt;System.stop/1&lt;/code&gt; を&lt;/a&gt;呼び出します。開始されたのとは逆の順序ですべてのアプリケーションをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="4bebc37beab3e41d0359e7a912db5b152d7f9a2a" translate="yes" xml:space="preserve">
          <source>Shutting down a live system cleanly can be done by calling &lt;a href=&quot;system#stop/1&quot;&gt;&lt;code&gt;System.stop/1&lt;/code&gt;&lt;/a&gt;. It will shut down every application in the opposite order they had been started.</source>
          <target state="translated">ライブシステムを正常にシャットダウンするには、&lt;a href=&quot;system#stop/1&quot;&gt; &lt;code&gt;System.stop/1&lt;/code&gt; を&lt;/a&gt;呼び出します。すべてのアプリケーションを、開始されたときとは逆の順序でシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="9495787c0b2e930e3fb428c17f97a16d333de82b" translate="yes" xml:space="preserve">
          <source>Sigils</source>
          <target state="translated">Sigils</target>
        </trans-unit>
        <trans-unit id="093f8622874818f518acf108d0ec2fc97a25f178" translate="yes" xml:space="preserve">
          <source>Sigils also support heredocs, that is, triple double- or single-quotes as separators:</source>
          <target state="translated">また、シグルはヘレドク、つまりトリプルダブルクォートやシングルクォートをセパレータとしてサポートしています。</target>
        </trans-unit>
        <trans-unit id="bbca56d468485c6eba966412dcb3ca64c51d15bd" translate="yes" xml:space="preserve">
          <source>Sigils are useful to encode text with their own escaping rules, such as regular expressions, datetimes, and others.</source>
          <target state="translated">シギルは、正規表現や日付時間など、独自のエスケープルールでテキストを符号化するのに便利です。</target>
        </trans-unit>
        <trans-unit id="5c6cf440097cb0b13b54bff0118fbd4058653ed5" translate="yes" xml:space="preserve">
          <source>Sigils are useful to encode text with their own escaping rules, such as regular expressions, datetimes, etc.</source>
          <target state="translated">シギルは、正規表現や日付など、独自のエスケープルールを持つテキストをエンコードするのに便利です。</target>
        </trans-unit>
        <trans-unit id="fc9770922e8235e07af434b1817bb43b4b551610" translate="yes" xml:space="preserve">
          <source>Sigils can also be used to do compile-time work with the help of macros. For example, regular expressions in Elixir are compiled into an efficient representation during compilation of the source code, therefore skipping this step at runtime. If you&amp;rsquo;re interested in the subject, we recommend you learn more about macros and check out how sigils are implemented in the &lt;code&gt;Kernel&lt;/code&gt; module (where the &lt;code&gt;sigil_*&lt;/code&gt; functions are defined).</source>
          <target state="translated">Sigilsは、マクロを利用してコンパイル時の作業を行うためにも使用できます。たとえば、Elixirの正規表現は、ソースコードのコンパイル中に効率的な表現にコンパイルされるため、実行時にこの手順をスキップします。主題に興味がある場合は、マクロについてさらに学び、 &lt;code&gt;sigil_*&lt;/code&gt; が &lt;code&gt;Kernel&lt;/code&gt; モジュール（sigil_ *関数が定義されている場所）でどのように実装されているかを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6a856a592437bb8bd2bfbbd8383e2fec047cb719" translate="yes" xml:space="preserve">
          <source>Sigils start with &lt;code&gt;~&lt;/code&gt; and are followed by a letter and one of the following pairs:</source>
          <target state="translated">Sigilは &lt;code&gt;~&lt;/code&gt; で始まり、その後に文字と次のペアのいずれかが続きます。</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="83755b5bb4d8f50108c88dbf26b3cd7060bdd814" translate="yes" xml:space="preserve">
          <source>Similar results can be achieved with the string concatenation operator &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">文字列連結演算子 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; でも同様の結果が得られます。</target>
        </trans-unit>
        <trans-unit id="52e2c22437ed86a2689a7c81089c1cd114c1c7a4" translate="yes" xml:space="preserve">
          <source>Similar rule applies to numbers. Finally, note that numbers in patterns perform strict comparison. In other words, integers to do not match floats:</source>
          <target state="translated">同様のルールが数字にも適用されます。最後に、パターン内の数字は厳密な比較を行うことに注意してください。言い換えれば、整数は浮動小数点数と一致しません。</target>
        </trans-unit>
        <trans-unit id="5ea4e567871f4aad673963dd3ff9b92aa6d80dcc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#convert/2&quot;&gt;&lt;code&gt;Date.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;#convert/2&quot;&gt; &lt;code&gt;Date.convert/2&lt;/code&gt; に&lt;/a&gt;似ていますが、2つのカレンダー間の変換が不可能な場合、&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="5bced70420543c4355b9839b02e5819a55887571" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#convert/2&quot;&gt;&lt;code&gt;Time.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;#convert/2&quot;&gt; &lt;code&gt;Time.convert/2&lt;/code&gt; に&lt;/a&gt;似ていますが、2つのカレンダー間の変換が不可能な場合、&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="680a08604d41ca47d86f103212437a67e75222e6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#defmacrop/2&quot;&gt;&lt;code&gt;defmacrop/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#defguardp/1&quot;&gt;&lt;code&gt;defguardp/1&lt;/code&gt;&lt;/a&gt; must be defined before its use in the current module.</source>
          <target state="translated">&lt;a href=&quot;#defmacrop/2&quot;&gt; &lt;code&gt;defmacrop/2&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#defguardp/1&quot;&gt; &lt;code&gt;defguardp/1&lt;/code&gt; &lt;/a&gt;は、現在のモジュールで使用する前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a4528cdf8fb4e2486a93c3402abd54f52d95d7d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;true&lt;/code&gt; if the module is already loaded or was successfully loaded and compiled. Returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ensure_compiled/1&quot;&gt; &lt;code&gt;ensure_compiled/1&lt;/code&gt; &lt;/a&gt;似ていますが、モジュールが既にロードされているか、または正常にロードされてコンパイルされた場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d8d26b0dd0bc64203103e9942583d4ea3210f692" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;true&lt;/code&gt; if the module is already loaded or was successfully loaded. Returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt;似ていますが、モジュールが既にロードされているか、正常にロードされた場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="671b3de2f1f9e1bc01bc7256b906ac67b5dbc5aa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#find/3&quot;&gt;&lt;code&gt;find/3&lt;/code&gt;&lt;/a&gt;, but returns the index (zero-based) of the element instead of the element itself.</source>
          <target state="translated">&lt;a href=&quot;#find/3&quot;&gt; &lt;code&gt;find/3&lt;/code&gt; に&lt;/a&gt;似ていますが、要素自体ではなく要素のインデックス（ゼロから始まる）を返します。</target>
        </trans-unit>
        <trans-unit id="ed983810dcc745a1edc28d41dbf198f45ff86a26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#find/3&quot;&gt;&lt;code&gt;find/3&lt;/code&gt;&lt;/a&gt;, but returns the value of the function invocation instead of the element itself.</source>
          <target state="translated">&lt;a href=&quot;#find/3&quot;&gt; &lt;code&gt;find/3&lt;/code&gt; に&lt;/a&gt;似ていますが、要素自体ではなく、関数呼び出しの値を返します。</target>
        </trans-unit>
        <trans-unit id="28bf29c85f16c49113a753b53367de4973636708" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#get_env/3&quot;&gt;&lt;code&gt;get_env/3&lt;/code&gt;&lt;/a&gt;, except it must be used to read values at compile time. This allows Elixir to track when configuration values change between compile time and runtime.</source>
          <target state="translated">&lt;a href=&quot;#get_env/3&quot;&gt; &lt;code&gt;get_env/3&lt;/code&gt; &lt;/a&gt;と似ていますが、コンパイル時に値を読み取るために使用する必要がある点が異なります。これにより、Elixirは、コンパイル時と実行時の間で構成値がいつ変更されるかを追跡できます。</target>
        </trans-unit>
        <trans-unit id="cb0ea66cf26fd48568417afc7388e0fe5e4a0cfe" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#key/2&quot;&gt;&lt;code&gt;key/2&lt;/code&gt;&lt;/a&gt;, but the returned function raises if the key does not exist.</source>
          <target state="translated">&lt;a href=&quot;#key/2&quot;&gt; &lt;code&gt;key/2&lt;/code&gt; に&lt;/a&gt;似ていますが、キーが存在しない場合、返される関数が発生します。</target>
        </trans-unit>
        <trans-unit id="0e30d8489677f14c1a6e61f63b887f618946e277" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but expects a function as its last argument.</source>
          <target state="translated">&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; に&lt;/a&gt;似ていますが、最後の引数として関数を想定しています。</target>
        </trans-unit>
        <trans-unit id="9a017555f9bfef427f80d7907bb1a0b56d3fc6f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened. Returns the IO device otherwise.</source>
          <target state="translated">&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; に&lt;/a&gt;似ていますが、ファイルを開けなかった場合は&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合はIOデバイスを返します。</target>
        </trans-unit>
        <trans-unit id="33624a0d9da8eb41a4683fa34d3089dc49c4b18b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened. Returns the IO device otherwise.</source>
          <target state="translated">&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; に&lt;/a&gt;似ていますが、ファイルを開くことができなかった場合、&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合はIOデバイスを返します。</target>
        </trans-unit>
        <trans-unit id="fa8f09aee13c03e4fa19ccdc0e8643206d67f367" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/3&quot;&gt;&lt;code&gt;open/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened.</source>
          <target state="translated">&lt;a href=&quot;#open/3&quot;&gt; &lt;code&gt;open/3&lt;/code&gt; &lt;/a&gt;と似ていますが、ファイルを開けなかった場合は&lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="57c98adeaafde8439640c13c276eef195525e8b1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/3&quot;&gt;&lt;code&gt;open/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened.</source>
          <target state="translated">&lt;a href=&quot;#open/3&quot;&gt; &lt;code&gt;open/3&lt;/code&gt; に&lt;/a&gt;似ていますが、ファイルを開くことができなかった場合、&lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="0c7612d9e10f8bbba6b6e71ca68dcee1c3c8ada0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; but only parses the head of &lt;code&gt;argv&lt;/code&gt;; as soon as it finds a non-switch, it stops parsing.</source>
          <target state="translated">&lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; に&lt;/a&gt;似ていますが、 &lt;code&gt;argv&lt;/code&gt; の先頭のみを解析します。非スイッチが見つかると、解析を停止します。</target>
        </trans-unit>
        <trans-unit id="28666d5f51ea0ff4ccceab9d321f0bdd59480ef2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sort/2&quot;&gt;&lt;code&gt;sort/2&lt;/code&gt;&lt;/a&gt;, you can pass a custom sorter:</source>
          <target state="translated">&lt;a href=&quot;#sort/2&quot;&gt; &lt;code&gt;sort/2&lt;/code&gt; &lt;/a&gt;と同様に、カスタムソーターを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="86e0d7ca33894f72508f1acefed15f61bc326aa6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt; except the task is specified by the given &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;fun&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#start_child/2&quot;&gt; &lt;code&gt;start_child/2&lt;/code&gt; &lt;/a&gt;と同様ですが、タスクは指定された &lt;code&gt;module&lt;/code&gt; 、 &lt;code&gt;fun&lt;/code&gt; 、および &lt;code&gt;args&lt;/code&gt; によって指定されます。</target>
        </trans-unit>
        <trans-unit id="fffdeb395a71dd9c69be0df6ed520f0f8929cdac" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#init/2&quot;&gt;&lt;code&gt;init/2&lt;/code&gt;&lt;/a&gt;, it expects a &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;{module, arg}&lt;/code&gt; or a map as the child specification. If a module is given, the specification is retrieved by calling &lt;code&gt;module.child_spec(arg)&lt;/code&gt;.</source>
          <target state="translated">類似&lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#init/2&quot;&gt; &lt;code&gt;init/2&lt;/code&gt; &lt;/a&gt;、それが期待 &lt;code&gt;module&lt;/code&gt; 、 &lt;code&gt;{module, arg}&lt;/code&gt; または子仕様としてマップ。モジュールが指定されている場合、 &lt;code&gt;module.child_spec(arg)&lt;/code&gt; を呼び出すことで仕様が取得されます。</target>
        </trans-unit>
        <trans-unit id="4f96191ac218da513737f46d949226677e297839" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt; but checks for key validity.</source>
          <target state="translated">&lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; に&lt;/a&gt;似ていますが、キーの有効性をチェックします。</target>
        </trans-unit>
        <trans-unit id="544d28beafeb6ba6440bbbfe15ff61212ffb6825" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#transform/3&quot;&gt;&lt;code&gt;transform/3&lt;/code&gt;&lt;/a&gt; but the initial accumulated value is computed lazily via &lt;code&gt;start_fun&lt;/code&gt; and executes an &lt;code&gt;after_fun&lt;/code&gt; at the end of enumeration (both in cases of success and failure).</source>
          <target state="translated">類似&lt;a href=&quot;#transform/3&quot;&gt; &lt;code&gt;transform/3&lt;/code&gt; &lt;/a&gt;が、初期積算値を介して遅延して計算される &lt;code&gt;start_fun&lt;/code&gt; て実行 &lt;code&gt;after_fun&lt;/code&gt; （成功と失敗の場合には両方）列挙の終わりにあります。</target>
        </trans-unit>
        <trans-unit id="31f64163363b89c1b2d96b23c5caf03b42260cad" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unquote/1&quot;&gt; &lt;code&gt;unquote/1&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="a4bad9ce5e5e51929cb2b375dafa5b7519c51fcd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;date#convert/2&quot;&gt;&lt;code&gt;Date.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;date#convert/2&quot;&gt; &lt;code&gt;Date.convert/2&lt;/code&gt; に&lt;/a&gt;似ていますが、2つのカレンダー間の変換が不可能な場合は&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="4eff11b7d153ee0a489cadc51578e41461ca9e03" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt;, the binary will only be written to disk as a &lt;code&gt;.beam&lt;/code&gt; file if &lt;a href=&quot;#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; is invoked in a file that is currently being compiled.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defmodule/2&quot;&gt; &lt;code&gt;Kernel.defmodule/2&lt;/code&gt; &lt;/a&gt;と同様に、現在コンパイル中のファイルで&lt;a href=&quot;#create/3&quot;&gt; &lt;code&gt;Module.create/3&lt;/code&gt; &lt;/a&gt;が呼び出された場合にのみ、バイナリは &lt;code&gt;.beam&lt;/code&gt; ファイルとしてディスクに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="7709e39a2e11a56955398111724acefaa59fbfbd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, dynamic supervisors also support module-based supervisors.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;と同様に、動的スーパーバイザーもモジュールベースのスーパーバイザーをサポートします。</target>
        </trans-unit>
        <trans-unit id="49dab40556418138d9a746ed4e7aec86ea69773a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;kernel#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt;, the binary will only be written to disk as a &lt;code&gt;.beam&lt;/code&gt; file if &lt;a href=&quot;module#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; is invoked in a file that is currently being compiled.</source>
          <target state="translated">&lt;a href=&quot;kernel#defmodule/2&quot;&gt; &lt;code&gt;Kernel.defmodule/2&lt;/code&gt; &lt;/a&gt;と同様に、現在コンパイルされているファイルで&lt;a href=&quot;module#create/3&quot;&gt; &lt;code&gt;Module.create/3&lt;/code&gt; &lt;/a&gt;が呼び出された場合、バイナリは &lt;code&gt;.beam&lt;/code&gt; ファイルとしてのみディスクに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="78ac4aae468baba341cc07ffa89a70612faee3d2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, dynamic supervisors also support module-based supervisors.</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;と同様に、ダイナミックスーパーバイザもモジュールベースのスーパーバイザをサポートしています。</target>
        </trans-unit>
        <trans-unit id="12930727ef42425fe713d11813225cb176e88f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;time#convert/2&quot;&gt;&lt;code&gt;Time.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;time#convert/2&quot;&gt; &lt;code&gt;Time.convert/2&lt;/code&gt; に&lt;/a&gt;似ていますが、2つのカレンダー間の変換が不可能な場合は&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a8b6ff3051123b6b61657f0295e50e9b9854f439" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;IEx.pry/0&lt;/code&gt;, once a breakpoint is reached code execution stops until &lt;code&gt;continue&lt;/code&gt; is invoked. However, note &lt;code&gt;break!/2&lt;/code&gt; does not have access to aliases and imports from the debugged code as it works on the compiled artifact rather than on source.</source>
          <target state="translated">&lt;code&gt;IEx.pry/0&lt;/code&gt; と同様に、ブレークポイントに到達すると、 &lt;code&gt;continue&lt;/code&gt; が呼び出されるまでコードの実行が停止します。ただし、 &lt;code&gt;break!/2&lt;/code&gt; は、ソースではなくコンパイルされたアーティファクトで機能するため、デバッグコードからエイリアスとインポートにアクセスできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c170635871c9a0051be86c8b2c08c1a5fff6790" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt;, &lt;code&gt;unquote(x)&lt;/code&gt; will always generate a remote call, independent of the value of &lt;code&gt;x&lt;/code&gt;. To generate an alias via the quoted expression, one needs to rely on &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#concat/2&quot;&gt;&lt;code&gt;Module.concat/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt; と同様に、 &lt;code&gt;unquote(x)&lt;/code&gt; は、 &lt;code&gt;x&lt;/code&gt; の値に関係なく、常にリモート呼び出しを生成します。引用された式を介してエイリアスを生成するには、&lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#concat/2&quot;&gt; &lt;code&gt;Module.concat/2&lt;/code&gt; &lt;/a&gt;に依存する必要があります。</target>
        </trans-unit>
        <trans-unit id="b9586bcd0e9346aa9f7e1956ff7ddc48f27965b9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt;, &lt;code&gt;unquote(x)&lt;/code&gt; will always generate a remote call, independent of the value of &lt;code&gt;x&lt;/code&gt;. To generate an alias via the quoted expression, one needs to rely on &lt;a href=&quot;module#concat/2&quot;&gt;&lt;code&gt;Module.concat/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">同様に &lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt; 、 &lt;code&gt;unquote(x)&lt;/code&gt; 、常にの値とは無関係に、リモート呼び出しを生成します &lt;code&gt;x&lt;/code&gt; 。引用された式を介してエイリアスを生成するには、&lt;a href=&quot;module#concat/2&quot;&gt; &lt;code&gt;Module.concat/2&lt;/code&gt; &lt;/a&gt;に依存する必要があります。</target>
        </trans-unit>
        <trans-unit id="a72d340e0a469b82ec469f91c51a4c2a166acbb3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;case&lt;/code&gt;, a function may have many clauses. A particular clause is executed when the arguments passed to the function match the clause&amp;rsquo;s argument patterns and its guard evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; と同様に、関数には多くの句がある場合があります。関数に渡された引数が句の引数パターンと一致し、そのガードが &lt;code&gt;true&lt;/code&gt; と評価されると、特定の句が実行されます。</target>
        </trans-unit>
        <trans-unit id="58a8720c49132c3d420546dd2af8d053e8ae07f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;import_file&lt;/code&gt; but only imports the file if it is available.</source>
          <target state="translated">&lt;code&gt;import_file&lt;/code&gt; に似ていますが、ファイルが使用可能な場合にのみインポートします。</target>
        </trans-unit>
        <trans-unit id="b996bc1af4b984c3da4c7bc2ef94d27afb3fd274" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;import_file&lt;/code&gt; but only imports the file it if it is available.</source>
          <target state="translated">&lt;code&gt;import_file&lt;/code&gt; に似ていますが、利用可能な場合にのみファイルをインポートします。</target>
        </trans-unit>
        <trans-unit id="68799b7562c806765dc2184265fa19c244ff0d6b" translate="yes" xml:space="preserve">
          <source>Similar to aliases, imports in Elixir are hygienic. Consider the following code:</source>
          <target state="translated">エイリアスと同様に、Elixirでのインポートは衛生的です。次のコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="dc2b244e98818b0c2e54b67213f8b4899ca5dd2c" translate="yes" xml:space="preserve">
          <source>Similar to constructs like &lt;code&gt;if&lt;/code&gt;, named functions support both &lt;code&gt;do:&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; block syntax, as &lt;a href=&quot;case-cond-and-if#doend-blocks&quot;&gt;we learned &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; is a convenient syntax for the keyword list format&lt;/a&gt;. For example, we can edit &lt;code&gt;math.exs&lt;/code&gt; to look like this:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; などの構文と同様に、名前付き関数は &lt;code&gt;do:&lt;/code&gt; および &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; ブロック構文の両方をサポートします。これ&lt;a href=&quot;case-cond-and-if#doend-blocks&quot;&gt;は、&lt;/a&gt; &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; がキーワードリスト形式の便利な構文であることを学習したためです。たとえば、 &lt;code&gt;math.exs&lt;/code&gt; を次のように編集できます。</target>
        </trans-unit>
        <trans-unit id="399d5c38656b13369d3de8bc4c4d3ffe8febae4e" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;debugger&lt;/code&gt; note above, your package manager may require a separate installation in order to run Observer.</source>
          <target state="translated">上記の &lt;code&gt;debugger&lt;/code&gt; ノートと同様に、パッケージマネージャはObserverを実行するために個別のインストールを必要とする場合があります。</target>
        </trans-unit>
        <trans-unit id="1967136eae3bf06afa80ff77d2c742df8670b3d5" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;hd/1&lt;/code&gt; and &lt;code&gt;tl/1&lt;/code&gt; functions, we can&amp;rsquo;t match an empty list with a head and tail pattern:</source>
          <target state="translated">&lt;code&gt;hd/1&lt;/code&gt; 関数と &lt;code&gt;tl/1&lt;/code&gt; 関数と同様に、空のリストを先頭と末尾のパターンに一致させることはできません。</target>
        </trans-unit>
        <trans-unit id="82f50da22742b95c84f018370c23671aa332e9f5" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#yield/2&quot;&gt;&lt;code&gt;yield/2&lt;/code&gt;&lt;/a&gt;, each task's result will be</source>
          <target state="translated">&lt;a href=&quot;#yield/2&quot;&gt; &lt;code&gt;yield/2&lt;/code&gt; &lt;/a&gt;と同様に、各タスクの結果は次のようになります</target>
        </trans-unit>
        <trans-unit id="93b5800fe560b818a42489dce100f7db2d3fa208" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;code&gt;@doc&lt;/code&gt; also accepts a keyword list to provide metadata about the module. For more details, see the documentation of &lt;code&gt;@doc&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;@doc&lt;/code&gt; と同様に、モジュールに関するメタデータを提供するキーワードリストも受け入れます。詳細については、上記の &lt;code&gt;@doc&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7181e6c21b4fe82c37829114be36b71e425278a2" translate="yes" xml:space="preserve">
          <source>Similarly to IEx you can use numbers in your &quot;prompts&quot;:</source>
          <target state="translated">IEx と同様に、「プロンプト」でも数字を使用することができます。</target>
        </trans-unit>
        <trans-unit id="c33174c994c7adc74f3417777668f8c098a0d34c" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;uniq: true&lt;/code&gt; can also be given to comprehensions to guarantee the results are only added to the collection if they were not returned before. For example:</source>
          <target state="translated">同様に、 &lt;code&gt;uniq: true&lt;/code&gt; は、結果が以前に返されなかった場合にのみコレクションに追加されることを保証するために、理解に与えることもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="f039a2100664bab09c37cccb1c2473f79463bd63" translate="yes" xml:space="preserve">
          <source>Similarly, an exception inside an &lt;code&gt;else&lt;/code&gt; clause is not caught or rescued inside the same &lt;code&gt;try&lt;/code&gt;:</source>
          <target state="translated">同様に、 &lt;code&gt;else&lt;/code&gt; 句内の例外は、同じ &lt;code&gt;try&lt;/code&gt; 内でキャッチまたは救出されません。</target>
        </trans-unit>
        <trans-unit id="13caed6c080be256771accadfa9730439fb295aa" translate="yes" xml:space="preserve">
          <source>Similarly, doctests do not run in any kind of sandbox. So any module defined in a code example is going to linger throughout the whole test suite run.</source>
          <target state="translated">同様に、doctests はサンドボックスのようなものの中では実行されません。そのため、コード例で定義されているモジュールは、テストスイート全体の実行中に残ることになります。</target>
        </trans-unit>
        <trans-unit id="639b47876914dc3c064fca8afae90a6661f1b39d" translate="yes" xml:space="preserve">
          <source>Similarly, even if we defined an alias with the same name before invoking a macro, it won't affect the macro's result:</source>
          <target state="translated">同様に、マクロを呼び出す前に同名のエイリアスを定義しても、マクロの結果には影響しません。</target>
        </trans-unit>
        <trans-unit id="b0b02f74e4f6ced9283eee76d1f5d4a6dc901fa2" translate="yes" xml:space="preserve">
          <source>Similarly, if a match expression is given, it will report any failure in terms of that match. Given</source>
          <target state="translated">同様に、一致する式が与えられた場合、その一致の観点から失敗を報告します。与えられた</target>
        </trans-unit>
        <trans-unit id="d93711412269341e983df1ae16c13701f1ea42ed" translate="yes" xml:space="preserve">
          <source>Similarly, if you are waiting for a process to terminate, monitor that process instead of sleeping. &lt;strong&gt;Do not&lt;/strong&gt;:</source>
          <target state="translated">同様に、プロセスの終了を待っている場合は、スリープ状態ではなく、そのプロセスを監視します。&lt;strong&gt;しないでください&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="af89b8a35f09db9218c7eaf5334bf79735fe57ba" translate="yes" xml:space="preserve">
          <source>Similarly, once a capture on a named device has begun, the encoding on that device cannot be changed in a subsequent concurrent capture. An error will be raised in this case.</source>
          <target state="translated">同様に、一度指定されたデバイスのキャプチャが開始されると、その後の同時キャプチャでそのデバイスのエンコーディングを変更することはできません。この場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="cbf36629b903bf319e1dd5dfee276a2f96f82ebd" translate="yes" xml:space="preserve">
          <source>Similarly, the performance of list concatenation depends on the length of the left-hand list:</source>
          <target state="translated">同様に、リスト連結の性能は左手リストの長さに依存します。</target>
        </trans-unit>
        <trans-unit id="c1f148bd168fe86bf71a8f03f4f454f35acbd7df" translate="yes" xml:space="preserve">
          <source>Similarly, we could write the list &lt;code&gt;[1, 2, 3]&lt;/code&gt; using only such pairs (called cons cells):</source>
          <target state="translated">同様に、そのようなペア（コンスセルと呼ばれる）だけを使用してリスト &lt;code&gt;[1, 2, 3]&lt;/code&gt; を書くことができます</target>
        </trans-unit>
        <trans-unit id="f432574a8cdf8950eee176efcedda99515fdf9f6" translate="yes" xml:space="preserve">
          <source>Similarly, when creating a stand-alone package and release for Windows, note the Erlang Runtime System has a dependency to some Microsoft libraries (Visual C++ Redistributable Packages for Visual Studio 2013). These libraries are installed (if not present before) when Erlang is installed but it is not part of the standard Windows environment. Deploying a stand-alone release on a computer without these libraries will result in a failure when trying to run the release. One way to solve this is to download and install these Microsoft libraries the first time a release is deployed (the Erlang installer version 10.6 ships with &amp;ldquo;Microsoft Visual C++ 2013 Redistributable - 12.0.30501&amp;rdquo;).</source>
          <target state="translated">同様に、Windows用のスタンドアロンパッケージとリリースを作成する場合、Erlangランタイムシステムは一部のMicrosoftライブラリ（Visual Studio2013用のVisualC ++再頒布可能パッケージ）に依存していることに注意してください。これらのライブラリは、Erlangのインストール時にインストールされます（以前に存在しなかった場合）が、標準のWindows環境の一部ではありません。これらのライブラリがないコンピュータにスタンドアロンリリースを展開すると、リリースを実行しようとしたときに失敗します。これを解決する1つの方法は、リリースが最初にデプロイされたときにこれらのMicrosoftライブラリをダウンロードしてインストールすることです（Erlangインストーラーバージョン10.6には「MicrosoftVisual C ++ 2013再頒布可能パッケージ-12.0.30501」が付属しています）。</target>
        </trans-unit>
        <trans-unit id="b59932c5adb29f058bd5e0bb657d8adae59c14bf" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Enum&lt;/code&gt;&lt;em&gt;does&lt;/em&gt; provide a proper API, in practice &lt;code&gt;Enum.find/2&lt;/code&gt; is the way to go:</source>
          <target state="translated">&lt;code&gt;Enum&lt;/code&gt; &lt;em&gt;は&lt;/em&gt;適切なAPIを提供するので、実際には &lt;code&gt;Enum.find/2&lt;/code&gt; がその方法です。</target>
        </trans-unit>
        <trans-unit id="69225423a0e2b117d7cd03442182856546997bd1" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;setup_all&lt;/code&gt; blocks don't belong to a specific test, log messages generated in them (or between tests) are never captured. If you want to suppress these messages as well, remove the console backend globally by setting:</source>
          <target state="translated">以来 &lt;code&gt;setup_all&lt;/code&gt; ブロックは、特定のテストに属していない、彼ら（またはテスト間）で生成されたログメッセージは捕獲されることはありません。これらのメッセージも抑制する場合は、次のように設定して、コンソールバックエンドをグローバルに削除します。</target>
        </trans-unit>
        <trans-unit id="e2bf20a6c317edb9d40eaad36a3fcaaa5065a63f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;use&lt;/code&gt; allows any code to run, we can&amp;rsquo;t really know the side-effects of using a module without reading its documentation. For this reason, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; are often preferred, as their semantics are defined by the language.</source>
          <target state="translated">以来 &lt;code&gt;use&lt;/code&gt; 実行するために任意のコードを可能にする、私たちは本当にそのマニュアルを読まずにモジュールを使用しての副作用を知ることができません。そのため、セマンティクスは言語によって定義されるため、 &lt;code&gt;import&lt;/code&gt; と &lt;code&gt;alias&lt;/code&gt; がよく使用されます。</target>
        </trans-unit>
        <trans-unit id="f2b5647acb141b9dc51673b2f6c9dfb87cbf88e2" translate="yes" xml:space="preserve">
          <source>Since Elixir controls when the streamed file is opened, the underlying device cannot be shared and as such it is convenient to open the file in raw mode for performance reasons. Therefore, Elixir &lt;strong&gt;will&lt;/strong&gt; open streams in &lt;code&gt;:raw&lt;/code&gt; mode with the &lt;code&gt;:read_ahead&lt;/code&gt; option unless an encoding is specified. This means any data streamed into the file must be converted to &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;&lt;code&gt;iodata/0&lt;/code&gt;&lt;/a&gt; type. If you pass, for example, &lt;code&gt;[encoding: :utf8]&lt;/code&gt; or &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; in the modes parameter, the underlying stream will use &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol to convert the data. See &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binwrite/2&quot;&gt;&lt;code&gt;IO.binwrite/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">Elixirはストリーミングファイルを開くタイミングを制御するため、基盤となるデバイスを共有することはできません。パフォーマンス上の理由から、ファイルをrawモードで開くと便利です。したがって、エンコーディングが指定されていない限り、Elixir&lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;:read_ahead&lt;/code&gt; オプションを指定して &lt;code&gt;:raw&lt;/code&gt; モードでストリーム&lt;strong&gt;を&lt;/strong&gt;開きます。つまり、ファイルにストリーミングされるデータはすべて&lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt; &lt;code&gt;iodata/0&lt;/code&gt; &lt;/a&gt;タイプに変換する必要があります。たとえば、modesパラメーターで &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; &lt;code&gt;[encoding: :utf8]&lt;/code&gt; または[encoding：{：utf16、：little}]を&lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; &lt;/a&gt;と、基になるストリームはIO.write / 2と&lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt;プロトコルを使用してデータを変換します。 。&lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binwrite/2&quot;&gt; &lt;code&gt;IO.binwrite/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; を&lt;/a&gt;参照してください 。</target>
        </trans-unit>
        <trans-unit id="4d3c552f54084c3d7869c55199e78593b9eebc2e" translate="yes" xml:space="preserve">
          <source>Since Elixir controls when the streamed file is opened, the underlying device cannot be shared and as such it is convenient to open the file in raw mode for performance reasons. Therefore, Elixir &lt;strong&gt;will&lt;/strong&gt; open streams in &lt;code&gt;:raw&lt;/code&gt; mode with the &lt;code&gt;:read_ahead&lt;/code&gt; option unless an encoding is specified. This means any data streamed into the file must be converted to &lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;iodata/0&lt;/code&gt;&lt;/a&gt; type. If you pass e.g. &lt;code&gt;[encoding: :utf8]&lt;/code&gt; or &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; in the modes parameter, the underlying stream will use &lt;a href=&quot;io#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol to convert the data. See &lt;a href=&quot;io#binwrite/2&quot;&gt;&lt;code&gt;IO.binwrite/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">Elixirはストリーミングされたファイルをいつ開くかを制御するため、基になるデバイスを共有することはできません。そのため、パフォーマンス上の理由から、ファイルをrawモードで開くと便利です。したがって、エンコーディングが指定されていない限り、Elixir &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;:read_ahead&lt;/code&gt; オプションを使用して &lt;code&gt;:raw&lt;/code&gt; モードでストリーム&lt;strong&gt;を&lt;/strong&gt;開きます。つまり、ファイルにストリーミングされるデータはすべて、&lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;iodata/0&lt;/code&gt; &lt;/a&gt;タイプに変換する必要があります。たとえば、 &lt;code&gt;[encoding: :utf8]&lt;/code&gt; または &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; をモードパラメータで&lt;a href=&quot;io#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; &lt;/a&gt;と、基になるストリームはIO.write / 2と&lt;a href=&quot;string.chars&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt;プロトコルを使用してデータを変換します。&lt;a href=&quot;io#binwrite/2&quot;&gt; &lt;code&gt;IO.binwrite/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;io#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9b843f681fc1bcd217e1f4a763ec59aff63d55b7" translate="yes" xml:space="preserve">
          <source>Since Elixir provides a &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt;, it is easy to use one to dynamically start tasks across nodes:</source>
          <target state="translated">Elixirは&lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; を&lt;/a&gt;提供しているため、ノード間でタスクを動的に開始するために1つを使用するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="acfc136eac08ea2248c061b764cdc270d0d7d75b" translate="yes" xml:space="preserve">
          <source>Since Elixir provides a &lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt;, it is easy to use one to dynamically start tasks across nodes:</source>
          <target state="translated">Elixirは&lt;a href=&quot;task.supervisor&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; を&lt;/a&gt;提供するため、ノード間で動的にタスクを開始するために簡単に使用できます。</target>
        </trans-unit>
        <trans-unit id="9ddb7c4c4e5a83e7e2eb15f183943d89c62afa54" translate="yes" xml:space="preserve">
          <source>Since Elixir's compilation happens in parallel, in some situations you may need to use a module that was not yet compiled, therefore it can't even be loaded.</source>
          <target state="translated">Elixirのコンパイルは並行して行われるので、状況によってはまだコンパイルされていないモジュールを使う必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7382428d7f17d64e52201beba024a7ffa766e6af" translate="yes" xml:space="preserve">
          <source>Since ISO 8601 does not include the proper time zone, the given string will be converted to UTC and its offset in seconds will be returned as part of this function. Therefore offset information must be present in the string.</source>
          <target state="translated">ISO 8601には適切なタイムゾーンが含まれていないため、与えられた文字列はUTCに変換され、この関数の一部として秒単位のオフセットが返されます。したがって、オフセット情報は文字列の中に存在しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b15ad8d4c4ceb4a097cb8049bcccb30f2c171c27" translate="yes" xml:space="preserve">
          <source>Since a &lt;code&gt;DynamicSupervisor&lt;/code&gt; does not define any children during initialization, the &lt;code&gt;DynamicSupervisor&lt;/code&gt; also allows us to skip the work of defining a whole separate module with the usual &lt;code&gt;start_link&lt;/code&gt; function and the &lt;code&gt;init&lt;/code&gt; callback. Instead, we can define a &lt;code&gt;DynamicSupervisor&lt;/code&gt; directly in the supervision tree, by giving it a name and a strategy.</source>
          <target state="translated">以来 &lt;code&gt;DynamicSupervisor&lt;/code&gt; が初期化中に子を定義していない、 &lt;code&gt;DynamicSupervisor&lt;/code&gt; はまた、私たちはいつもと全体の別のモジュールを定義する作業をスキップすることを可能にする &lt;code&gt;start_link&lt;/code&gt; 機能と &lt;code&gt;init&lt;/code&gt; コールバックを。代わりに、名前と戦略を指定することにより、 &lt;code&gt;DynamicSupervisor&lt;/code&gt; を直接監視ツリーで定義できます。</target>
        </trans-unit>
        <trans-unit id="a6552dd3f478ee5a7825eccbbaad93572a691d75" translate="yes" xml:space="preserve">
          <source>Since agents are processes, each bucket has a process identifier (pid), but buckets do not have a name. Back &lt;a href=&quot;../processes&quot;&gt;in the Process chapter&lt;/a&gt;, we have learned that we can register processes in Elixir by giving them atom names:</source>
          <target state="translated">エージェントはプロセスであるため、各バケットにはプロセス識別子（pid）がありますが、バケットには名前がありません。&lt;a href=&quot;../processes&quot;&gt;プロセスの章に&lt;/a&gt;戻ると、プロセスにアトム名を付けることでプロセスをElixirに登録できることがわかりました。</target>
        </trans-unit>
        <trans-unit id="3a720a734f9deda5036a5ed5e6279947f6baf484" translate="yes" xml:space="preserve">
          <source>Since an expression inside &lt;code&gt;try&lt;/code&gt; may not have been evaluated due to an exception, any variable created inside &lt;code&gt;try&lt;/code&gt; cannot be accessed externally. For instance:</source>
          <target state="translated">内部表現ので &lt;code&gt;try&lt;/code&gt; 例外のために評価されていないかもしれないが、内部で作成した任意の変数 &lt;code&gt;try&lt;/code&gt; 外部からアクセスすることができません。例えば：</target>
        </trans-unit>
        <trans-unit id="6e8e1aa133da1364ca9cd2b48bd61a3e3c1339f3" translate="yes" xml:space="preserve">
          <source>Since any message, including the ones sent via &lt;code&gt;send/2&lt;/code&gt;, go to &lt;code&gt;handle_info/2&lt;/code&gt;, there is a chance unexpected messages will arrive to the server. Therefore, if we don&amp;rsquo;t define the catch-all clause, those messages could cause our registry to crash, because no clause would match. We don&amp;rsquo;t need to worry about such cases for &lt;code&gt;handle_call/3&lt;/code&gt; and &lt;code&gt;handle_cast/2&lt;/code&gt; though. Calls and casts are only done via the &lt;code&gt;GenServer&lt;/code&gt; API, so an unknown message is quite likely a developer mistake.</source>
          <target state="translated">&lt;code&gt;send/2&lt;/code&gt; 経由で送信されたメッセージを含むすべてのメッセージが &lt;code&gt;handle_info/2&lt;/code&gt; に移動するため、予期しないメッセージがサーバーに到着する可能性があります。したがって、catch-all句を定義しないと、一致する句がないため、これらのメッセージによってレジストリがクラッシュする可能性があります。ただし、 &lt;code&gt;handle_cast/2&lt;/code&gt; &lt;code&gt;handle_call/3&lt;/code&gt; とhandle_cast / 2については、そのような場合について心配する必要はありません。呼び出しとキャストは &lt;code&gt;GenServer&lt;/code&gt; API を介してのみ行われるため、不明なメッセージは開発者の間違いである可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="11fb67f1e2d25f6df1a9a1266e1b60bb58f6b6d3" translate="yes" xml:space="preserve">
          <source>Since archives are specific to Elixir versions, it is expected from build tools to swap the &lt;code&gt;MIX_ARCHIVES&lt;/code&gt; variable to different locations based on a particular Elixir installation.</source>
          <target state="translated">アーカイブはElixirのバージョンに固有であるため、ビルドツールから、特定のElixirのインストールに基づいて &lt;code&gt;MIX_ARCHIVES&lt;/code&gt; 変数を別の場所に交換することが期待されます。</target>
        </trans-unit>
        <trans-unit id="3d6f72045be18842d7d487aab2142772aa012354" translate="yes" xml:space="preserve">
          <source>Since configuration files are often accessed on target machines, it can be expressed either as:</source>
          <target state="translated">設定ファイルはターゲットマシン上でアクセスされることが多いので、どちらかのように表現することができます。</target>
        </trans-unit>
        <trans-unit id="8fc813b30867503fd7d80ceb89d26056f219ebb2" translate="yes" xml:space="preserve">
          <source>Since each test has a unique name, we use the test name to name our registries. This way, we no longer need to pass the registry PID around, instead we identify it by the test name. Also note we assigned the result of &lt;code&gt;start_supervised!&lt;/code&gt; to underscore (&lt;code&gt;_&lt;/code&gt;). This idiom is often used to signal that we are not interested in the result of &lt;code&gt;start_supervised!&lt;/code&gt;.</source>
          <target state="translated">各テストには一意の名前があるため、レジストリに名前を付けるためにテスト名を使用します。これにより、レジストリPIDを渡す必要がなくなり、代わりにテスト名で識別します。また、 &lt;code&gt;start_supervised!&lt;/code&gt; の結果を割り当てたことにも注意してください。アンダースコア（ &lt;code&gt;_&lt;/code&gt; ）に。このイディオムは、 &lt;code&gt;start_supervised!&lt;/code&gt; の結果に関心がないことを示すためによく使用されます。。</target>
        </trans-unit>
        <trans-unit id="539b55b9c301e37db2ba5709f167489b7c16ad33" translate="yes" xml:space="preserve">
          <source>Since evaluating this function causes the process to terminate, it has no return value.</source>
          <target state="translated">この関数を評価するとプロセスが終了するため、戻り値はありません。</target>
        </trans-unit>
        <trans-unit id="f1ce4d7db6e34c56c6b0f354fe1c976084fd70b9" translate="yes" xml:space="preserve">
          <source>Since exceptions are structs, the API supported by &lt;a href=&quot;#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt; is also available in &lt;a href=&quot;#defexception/1&quot;&gt;&lt;code&gt;defexception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例外は構造体なので、でサポートされているAPI &lt;a href=&quot;#defstruct/1&quot;&gt; &lt;code&gt;defstruct/1&lt;/code&gt; &lt;/a&gt;でもご覧になれます。&lt;a href=&quot;#defexception/1&quot;&gt; &lt;code&gt;defexception/1&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43379b8fa276cfff986ca581f0982483e58e7290" translate="yes" xml:space="preserve">
          <source>Since our routing table is now empty, our distributed tests should fail. Restart the apps and re-run tests to see the failure:</source>
          <target state="translated">ルーティングテーブルが空になったので、分散テストは失敗するはずです。アプリを再起動し、テストを再実行して失敗を確認してください。</target>
        </trans-unit>
        <trans-unit id="35acc66a5d066ad7dd9d09e09f76ee2a2ec26964" translate="yes" xml:space="preserve">
          <source>Since regular strings are valid entities in an algebra document, an implementation of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol may simply return a string, although that will devoid it of any pretty-printing.</source>
          <target state="translated">通常の文字列は代数ドキュメントでは有効なエンティティであるため、&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt;プロトコルの実装は単純に文字列を返す可能性がありますが、これではきれいな印刷ができなくなります。</target>
        </trans-unit>
        <trans-unit id="2f64d99700777b1262233e96b381239b72533e52" translate="yes" xml:space="preserve">
          <source>Since the &amp;ldquo;shopping&amp;rdquo; bucket would be stored on &lt;code&gt;bar&lt;/code&gt;, the request fails as &lt;code&gt;bar&lt;/code&gt; is not available. If you go back to the terminal running &lt;code&gt;foo&lt;/code&gt;, you will see:</source>
          <target state="translated">「ショッピング」バケットは &lt;code&gt;bar&lt;/code&gt; に保存されるため、 &lt;code&gt;bar&lt;/code&gt; が利用できないため、リクエストは失敗します。 &lt;code&gt;foo&lt;/code&gt; を実行しているターミナルに戻ると、次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="f3f50b4e1f5b6c16d180ba7b01763cd119278691" translate="yes" xml:space="preserve">
          <source>Since the bucket terminated, the registry also stopped, and our test fails when trying to &lt;code&gt;GenServer.call/3&lt;/code&gt; it:</source>
          <target state="translated">バケットが終了したため、レジストリも停止し、 &lt;code&gt;GenServer.call/3&lt;/code&gt; を実行しようとするとテストが失敗します。</target>
        </trans-unit>
        <trans-unit id="7a4bb3b51a8bb6e716ca0d2a7b86f828cab0f46b" translate="yes" xml:space="preserve">
          <source>Since the example above is such a common requirement, it can be expressed as:</source>
          <target state="translated">上記の例はそのような一般的な要件であるため、次のように表現することができます。</target>
        </trans-unit>
        <trans-unit id="85bfe62ef0b50ee77c720da4424c8a1e00f3e6de" translate="yes" xml:space="preserve">
          <source>Since the first element of the enumerable is used as the initial value of the accumulator, &lt;code&gt;fun&lt;/code&gt; will only be executed &lt;code&gt;n - 1&lt;/code&gt; times where &lt;code&gt;n&lt;/code&gt; is the length of the enumerable. This function won't call the specified function for enumerables that are one-element long.</source>
          <target state="translated">enumerableの最初の要素はアキュムレータの初期値として使用されるため、 &lt;code&gt;fun&lt;/code&gt; は &lt;code&gt;n - 1&lt;/code&gt; 回のみ実行されます。ここで、 &lt;code&gt;n&lt;/code&gt; はenumerableの長さです。この関数は、1要素の長さの列挙型に対して指定された関数を呼び出しません。</target>
        </trans-unit>
        <trans-unit id="aacb89f517203634d25c6d9f152a44057ef8ac07" translate="yes" xml:space="preserve">
          <source>Since there is no variable &lt;code&gt;unknown&lt;/code&gt; previously defined, Elixir assumed you were trying to call a function named &lt;code&gt;unknown/0&lt;/code&gt;, but such a function does not exist.</source>
          <target state="translated">以前に定義された &lt;code&gt;unknown&lt;/code&gt; 変数がないため、Elixirは &lt;code&gt;unknown/0&lt;/code&gt; という名前の関数を呼び出そうとしていると想定しましたが、そのような関数は存在しません。</target>
        </trans-unit>
        <trans-unit id="765bd0055668383c0ea2677b5b1bfbe98b9619f4" translate="yes" xml:space="preserve">
          <source>Since there is no variable &lt;code&gt;unknown&lt;/code&gt; previously defined, Elixir imagined you were trying to call a function named &lt;code&gt;unknown/0&lt;/code&gt;, but such a function does not exist.</source>
          <target state="translated">以前に定義された変数 &lt;code&gt;unknown&lt;/code&gt; がないため、Elixirは、 &lt;code&gt;unknown/0&lt;/code&gt; という名前の関数を呼び出そうとしていると想像しましたが、そのような関数は存在しません。</target>
        </trans-unit>
        <trans-unit id="f8894fa7fe5c3478753e328f6f323ba67ca2e3bb" translate="yes" xml:space="preserve">
          <source>Since these tasks are supervised and not directly linked to the caller, they cannot be awaited on. &lt;a href=&quot;#start_link/1&quot;&gt;&lt;code&gt;start_link/1&lt;/code&gt;&lt;/a&gt;, unlike &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;, returns &lt;code&gt;{:ok, pid}&lt;/code&gt; (which is the result expected by supervisors).</source>
          <target state="translated">これらのタスクは監視され、呼び出し元に直接リンクされていないため、待つことはできません。&lt;a href=&quot;#start_link/1&quot;&gt; &lt;code&gt;start_link/1&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt;とは異なり、 &lt;code&gt;{:ok, pid}&lt;/code&gt; 返します（これはスーパーバイザが期待する結果です）。</target>
        </trans-unit>
        <trans-unit id="389839597845fc091bf9814cfbeff4f11280ed1d" translate="yes" xml:space="preserve">
          <source>Since this function prints the result returned by the editor, &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; can be set &quot;echo&quot; if you prefer to display the location rather than opening it.</source>
          <target state="translated">この関数はエディターから返された結果を出力するので、場所を開くのではなく表示したい場合は、 &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; を「エコー」に設定できます。</target>
        </trans-unit>
        <trans-unit id="2a41fdc6391fdcf7a1524af099a49c3aa668d5ca" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, cleaning of dependencies only occurs when passing arguments/options:</source>
          <target state="translated">これは破壊的なアクションなので、依存関係のクリーニングは引数/オプションを渡したときにのみ発生します。</target>
        </trans-unit>
        <trans-unit id="0bf76283b6bb6b290186e0db4141422fda25d569" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, unlocking dependencies only occurs when passing arguments/options:</source>
          <target state="translated">これは破壊的なアクションなので、依存関係のロックを解除するのは引数やオプションを渡したときだけです。</target>
        </trans-unit>
        <trans-unit id="5a6e67529e7deb94dfc751f6f9825f6e84397505" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, updating all dependencies only occurs when the &lt;code&gt;--all&lt;/code&gt; command line option is passed.</source>
          <target state="translated">これは破壊的なアクションであるため、すべての依存関係の更新は、 &lt;code&gt;--all&lt;/code&gt; コマンドラインオプションが渡された場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="9288bd650531234fa96d8de10cb48efb896be63c" translate="yes" xml:space="preserve">
          <source>Since tuples, lists, maps, and others are treated the same as function calls in Elixir syntax, this property is also available to them:</source>
          <target state="translated">タプル、リスト、マップなどは、Elixirの構文では関数呼び出しと同じように扱われるので、このプロパティはそれらにも利用できます。</target>
        </trans-unit>
        <trans-unit id="bd876c2171809804da789369d0f788453b1d762e" translate="yes" xml:space="preserve">
          <source>Since typespecs and docs are loaded from the .beam file (they are not loaded in memory with the module because there is no need for them to be in memory), they are not reloaded when you reload the module.</source>
          <target state="translated">typespecやdocsは.beamファイルから読み込まれるので(メモリにある必要がないのでモジュールと一緒に読み込まれることはありません)、モジュールをリロードしてもリロードされることはありません。</target>
        </trans-unit>
        <trans-unit id="695e4486dc05d2af7e873048e111e9ef335874fa" translate="yes" xml:space="preserve">
          <source>Since we have changed the supervisor specification, we need to ask: is our supervision strategy still correct?</source>
          <target state="translated">スーパーバイザーの仕様を変更したので、次のような質問をする必要があります:私たちのスーパーバイザー戦略はまだ正しいのか?</target>
        </trans-unit>
        <trans-unit id="1ebfcf673c0172052f119086e5c87a6211d88260" translate="yes" xml:space="preserve">
          <source>Since we have characters like &lt;code&gt;ł&lt;/code&gt; assigned to the code point &lt;code&gt;322&lt;/code&gt;, we actually need more than one byte to represent them. That&amp;rsquo;s why we see a difference when we calculate the &lt;code&gt;byte_size/1&lt;/code&gt; of a string compared to its &lt;code&gt;String.length/1&lt;/code&gt;:</source>
          <target state="translated">我々のような文字があるので &lt;code&gt;ł&lt;/code&gt; コードポイントに割り当てられた &lt;code&gt;322&lt;/code&gt; を、我々は実際にそれらを表現するために、複数のバイトを必要としています。我々は計算するとき、我々は違いを参照してください理由です &lt;code&gt;byte_size/1&lt;/code&gt; のに比べて、文字列のを &lt;code&gt;String.length/1&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f2c19e5383a549d66b2f89101e27b9b7851ada37" translate="yes" xml:space="preserve">
          <source>Since we have now changed our registry to use &lt;code&gt;KV.BucketSupervisor&lt;/code&gt;, which is registered globally, our tests are now relying on this shared supervisor even though each test has its own registry. The question is: should we?</source>
          <target state="translated">これで、グローバルに登録されている &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; を使用するようにレジストリを変更したため、各テストに独自のレジストリがある場合でも、テストはこの共有スーパーバイザに依存しています。問題は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="73c1faf8869380abc1edacc97a5d1771ec7b9e8e" translate="yes" xml:space="preserve">
          <source>Since we have relied only on a non-shared partition of the bucket supervisor so far, we don&amp;rsquo;t need to worry about concurrency issues in our test suite. In case it ever becomes a problem, we can start a supervisor per test and pass it as an argument to the registry &lt;code&gt;start_link&lt;/code&gt; function.</source>
          <target state="translated">これまではバケットスーパーバイザーの非共有パーティションのみに依存していたため、テストスイートでの同時実行の問題を心配する必要はありません。問題が発生する場合は、テストごとにスーパーバイザを起動し、それを引数としてレジストリの &lt;code&gt;start_link&lt;/code&gt; 関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="27114ec0715ca4313c0f129e147c381a042f1009" translate="yes" xml:space="preserve">
          <source>Since we have specified &lt;code&gt;KV&lt;/code&gt; as the module callback, let&amp;rsquo;s change the &lt;code&gt;KV&lt;/code&gt; module defined in &lt;code&gt;lib/kv.ex&lt;/code&gt; to implement a &lt;code&gt;start/2&lt;/code&gt; function:</source>
          <target state="translated">モジュールのコールバックとして &lt;code&gt;KV&lt;/code&gt; を指定したので、 &lt;code&gt;lib/kv.ex&lt;/code&gt; で定義されている &lt;code&gt;KV&lt;/code&gt; モジュールを変更して、 &lt;code&gt;start/2&lt;/code&gt; 関数を実装します。</target>
        </trans-unit>
        <trans-unit id="701589be2a9f211ec2f7483dc6bba98a5419568a" translate="yes" xml:space="preserve">
          <source>Since we want &lt;code&gt;kv_server&lt;/code&gt; to eventually use the functionality we defined in &lt;code&gt;kv&lt;/code&gt;, we need to add &lt;code&gt;kv&lt;/code&gt; as a dependency to our application.</source>
          <target state="translated">&lt;code&gt;kv_server&lt;/code&gt; が最終的に &lt;code&gt;kv&lt;/code&gt; で定義した機能を使用するようにしたいので、アプリケーションに依存関係として &lt;code&gt;kv&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="425a08cd5321884d0ab45bab21799979e1c5501f" translate="yes" xml:space="preserve">
          <source>Single quotes are charlists, double quotes are strings. We will talk more about them in the &lt;a href=&quot;binaries-strings-and-char-lists&quot;&gt;&amp;ldquo;Binaries, strings and charlists&amp;rdquo;&lt;/a&gt; chapter.</source>
          <target state="translated">一重引用符は文字リスト、二重引用符は文字列です。これらについては、&lt;a href=&quot;binaries-strings-and-char-lists&quot;&gt;「バイナリ、文字列、および文字リスト」の&lt;/a&gt;章で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="2d7528bda0a71f6d8069c7c15f6dcbe9bf22f1e0" translate="yes" xml:space="preserve">
          <source>Single-line strings in Elixir are written between double-quotes, such as &lt;code&gt;&quot;foo&quot;&lt;/code&gt;. Any double-quote inside the string must be escaped with &lt;code&gt;\&lt;/code&gt;. Strings support Unicode characters and are stored as UTF-8 encoded binaries.</source>
          <target state="translated">Elixirの単一行の文字列は、 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; のように二重引用符で囲まれています。文字列内の二重引用符は &lt;code&gt;\&lt;/code&gt; でエスケープする必要があります。文字列はUnicode文字をサポートし、UTF-8エンコードされたバイナリとして保存されます。</target>
        </trans-unit>
        <trans-unit id="a2e31d493b537b363c074ec4f97ee377323684c2" translate="yes" xml:space="preserve">
          <source>Size and unit can also be specified using a syntax shortcut when passing integer values:</source>
          <target state="translated">サイズと単位は、整数値を渡すときに構文ショートカットを使って指定することもできます。</target>
        </trans-unit>
        <trans-unit id="52d2c70012d8ed1ea7e910df59a016b1f6976dde" translate="yes" xml:space="preserve">
          <source>Sizes for types are a bit more nuanced. The default size for integers is 8.</source>
          <target state="translated">型のサイズはもう少しニュアンスがあります。整数のデフォルトサイズは8です。</target>
        </trans-unit>
        <trans-unit id="5bb4bb1ca83ec5f474261d62ad95799078b47602" translate="yes" xml:space="preserve">
          <source>Skipped (via @tag :skip)</source>
          <target state="translated">スキップ (@tag :skip)</target>
        </trans-unit>
        <trans-unit id="d5ca622d07bd8d35b6d8664121b3593144857e10" translate="yes" xml:space="preserve">
          <source>Sleeps the current process for the given &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;timeout&lt;/code&gt; 、現在のプロセスをスリープ状態にします。</target>
        </trans-unit>
        <trans-unit id="f7ef1d93c43e803ddf8450fe78ca43bb2364e006" translate="yes" xml:space="preserve">
          <source>So far they behave the same, as we are passing an integer as argument. But what happens when we pass an expression:</source>
          <target state="translated">これまでのところ、引数に整数を渡しているので、両者の動作は同じです。しかし、式を渡すとどうなるでしょうか。</target>
        </trans-unit>
        <trans-unit id="7fa4b79925c8d51a8a7c81a3dc5cde46fe8fe666" translate="yes" xml:space="preserve">
          <source>So far we have been starting one registry per test to ensure they are isolated:</source>
          <target state="translated">これまでのところ、テストごとに1つのレジストリを開始し、それらが分離されていることを確認しています。</target>
        </trans-unit>
        <trans-unit id="c0b9613de7c2b582f1851b80ca71692048f39354" translate="yes" xml:space="preserve">
          <source>So far we have explored tasks that are started and run in isolation, with no regard for their return value. However, sometimes it is useful to run a task to compute a value and read its result later on. For this, tasks also provide the &lt;code&gt;async/await&lt;/code&gt; pattern:</source>
          <target state="translated">これまでは、戻り値に関係なく、独立して開始および実行されるタスクについて検討してきました。ただし、値を計算してその結果を後で読み取るタスクを実行すると便利な場合があります。このため、タスクは &lt;code&gt;async/await&lt;/code&gt; パターンも提供します。</target>
        </trans-unit>
        <trans-unit id="7f909522b97564dd4054fcb1eb6b62ef9bbb43d1" translate="yes" xml:space="preserve">
          <source>So far we have hardcoded the routing table into the &lt;code&gt;KV.Router&lt;/code&gt; module. However, we would like to make the table dynamic. This allows us not only to configure development/test/production, but also to allow different nodes to run with different entries in the routing table. There is a feature of</source>
          <target state="translated">これまでのところ、ルーティングテーブルを &lt;code&gt;KV.Router&lt;/code&gt; モジュールにハードコーディングしました。ただし、テーブルを動的にする必要があります。これにより、開発/テスト/本番環境を構成できるだけでなく、ルーティングテーブル内の異なるエントリを使用して異なるノードを実行できるようになります。の特徴があります</target>
        </trans-unit>
        <trans-unit id="6f62da9b30846d1f5dc3344a1711f438b5114216" translate="yes" xml:space="preserve">
          <source>So far we have only written unit tests, typically testing a single module directly. However, in order to make &lt;code&gt;KVServer.Command.run/1&lt;/code&gt; testable as a unit we would need to change its implementation to not send commands directly to the &lt;code&gt;KV.Registry&lt;/code&gt; process but instead pass a server as an argument. For example, we would need to change &lt;code&gt;run&lt;/code&gt;&amp;rsquo;s signature to &lt;code&gt;def run(command, pid)&lt;/code&gt; and then change all clauses accordingly:</source>
          <target state="translated">これまでのところ、単体テストのみを記述し、通常は単一のモジュールを直接テストしています。ただし、 &lt;code&gt;KVServer.Command.run/1&lt;/code&gt; 1をユニットとしてテスト可能にするには、その実装を変更して、コマンドを &lt;code&gt;KV.Registry&lt;/code&gt; プロセスに直接送信せず、代わりにサーバーを引数として渡す必要があります。たとえば、 &lt;code&gt;run&lt;/code&gt; の署名を &lt;code&gt;def run(command, pid)&lt;/code&gt; に変更し、それに応じてすべての句を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="251229844d6239ebff61cacf8582cf96e235c9f5" translate="yes" xml:space="preserve">
          <source>So far we have started the supervisor and listed its children. Once the supervisor started, it also started all of its children.</source>
          <target state="translated">ここまでで、監督者を起動し、その子供たちをリストアップしました。スーパバイザが起動すると、その子供たちもすべて起動しました。</target>
        </trans-unit>
        <trans-unit id="cd7e3ac7c01c70e2691dd378c34f831dc99cf144" translate="yes" xml:space="preserve">
          <source>So far we have started the supervisor passing a single child as a tuple as well as a strategy called &lt;code&gt;:one_for_one&lt;/code&gt;:</source>
          <target state="translated">これまでのところ、スーパーバイザーは単一の子をタプルとして渡すとともに、 &lt;code&gt;:one_for_one&lt;/code&gt; という戦略を渡しました。</target>
        </trans-unit>
        <trans-unit id="2b84bcc0b56e9b7a77002fd2c4c80e6b1043dfd4" translate="yes" xml:space="preserve">
          <source>So far we have used three callbacks: &lt;code&gt;handle_call/3&lt;/code&gt;, &lt;code&gt;handle_cast/2&lt;/code&gt; and &lt;code&gt;handle_info/2&lt;/code&gt;. Here is what we should consider when deciding when to use each:</source>
          <target state="translated">これまで、3つのコールバックを使用しました： &lt;code&gt;handle_call/3&lt;/code&gt; 、 &lt;code&gt;handle_cast/2&lt;/code&gt; 、および &lt;code&gt;handle_info/2&lt;/code&gt; 。以下は、それぞれをいつ使用するかを決定するときに考慮すべきことです。</target>
        </trans-unit>
        <trans-unit id="6f7dbac470c8be21619867a1a999689fe67e712e" translate="yes" xml:space="preserve">
          <source>So far we haven&amp;rsquo;t discussed any associative data structures, i.e. data structures that are able to associate a certain value (or multiple values) to a key. Different languages call these different names like dictionaries, hashes, associative arrays, etc.</source>
          <target state="translated">これまで、連想データ構造、つまり特定の値（または複数の値）をキーに関連付けることができるデータ構造については説明していませんでした。辞書、ハッシュ、連想配列など、さまざまな言語がこれらのさまざまな名前を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5774107ee19024763a6ae09242699f6a7714e566" translate="yes" xml:space="preserve">
          <source>So far, all examples have used &lt;code&gt;/&lt;/code&gt; to delimit a regular expression. However, sigils support 8 different delimiters:</source>
          <target state="translated">これまでのところ、すべての例では &lt;code&gt;/&lt;/code&gt; を使用して正規表現を区切っています。ただし、シギルは8つの異なる区切り文字をサポートします。</target>
        </trans-unit>
        <trans-unit id="088fcaa5540ac3f087305577f114f1bc32519aad" translate="yes" xml:space="preserve">
          <source>So far, we have assembled a release named &lt;code&gt;foo&lt;/code&gt;, but our routing table contains information for both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;. Let&amp;rsquo;s start &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">これまでのところ、 &lt;code&gt;foo&lt;/code&gt; という名前のリリースをアセンブルしましたが、ルーティングテーブルには &lt;code&gt;foo&lt;/code&gt; と &lt;code&gt;bar&lt;/code&gt; の両方の情報が含まれています。 &lt;code&gt;foo&lt;/code&gt; を始めましょう：</target>
        </trans-unit>
        <trans-unit id="e56c23fa4849096bb2c027d3d123d2a2f49fa67b" translate="yes" xml:space="preserve">
          <source>So far, we have learned that a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; can be used as a supervised process that handles sync and async calls. It can also handle system messages, such as periodic messages and monitoring events. GenServer processes may also be named.</source>
          <target state="translated">これまでのところ、&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;は同期および非同期呼び出しを処理する監視対象プロセスとして使用できることを学びました。また、定期的なメッセージや監視イベントなどのシステムメッセージを処理することもできます。GenServerプロセスにも名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="68075bc4dca6cf8169233819190fd1733a0423c9" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s get started!</source>
          <target state="translated">それでは始めましょう！</target>
        </trans-unit>
        <trans-unit id="25ecbbe8564fb6e467c9ba98322930bbb97f7a85" translate="yes" xml:space="preserve">
          <source>So one may ask: which exit reason should I choose when exiting? There are three options:</source>
          <target state="translated">だから一つは、次のように尋ねるかもしれません:私はどの出口の理由を選択する必要がありますか?3つの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="c55832fc922e1c92f24778a3f7674a00b54faf03" translate="yes" xml:space="preserve">
          <source>So our last option is to go all in and pick the &lt;code&gt;:one_for_all&lt;/code&gt; strategy: the supervisor will kill and restart all of its children processes whenever any one of them dies. This is a completely reasonable approach for our application, since the registry can&amp;rsquo;t work without the bucket supervisor, and the bucket supervisor should terminate without the registry. Let&amp;rsquo;s reimplement &lt;code&gt;init/1&lt;/code&gt; in &lt;code&gt;KV.Supervisor&lt;/code&gt; to encode those properties:</source>
          <target state="translated">したがって、私たちの最後のオプションは、オールインして &lt;code&gt;:one_for_all&lt;/code&gt; 戦略を選択することです。スーパーバイザーは、子プロセスのいずれかが停止すると、子プロセスをすべて強制終了して再起動します。これはアプリケーションにとって完全に合理的なアプローチです。レジストリはバケットスーパーバイザーなしでは機能せず、バケットスーパーバイザーはレジストリなしで終了する必要があるためです。これらのプロパティをエンコードするために、 &lt;code&gt;KV.Supervisor&lt;/code&gt; で &lt;code&gt;init/1&lt;/code&gt; を再実装してみましょう。</target>
        </trans-unit>
        <trans-unit id="7c297254927239f3c40ab4e76d309f6bc508fb85" translate="yes" xml:space="preserve">
          <source>So to be more precise, to deploy straight from a host to a separate target, the Erlang Runtime System (ERTS), and any native dependencies (NIFs), must be compiled for the same target triple. If you are building on a MacBook (&lt;code&gt;x86_64-apple-darwin&lt;/code&gt;) and trying to deploy to a typical Ubuntu machine (&lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt;), the release will not work. Instead you should build the release on a &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; host. As we will see, this can be done in multiple ways, such as releasing on the target itself, or by using virtual machines or containers, usually as part of your release pipeline.</source>
          <target state="translated">したがって、より正確に言うと、ホストから別のターゲットに直接デプロイするには、Erlangランタイムシステム（ERTS）とネイティブ依存関係（NIF）を同じターゲットトリプル用にコンパイルする必要があります。MacBook（ &lt;code&gt;x86_64-apple-darwin&lt;/code&gt; ）でビルドしていて、一般的なUbuntuマシン（ &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; ）にデプロイしようとすると、リリースは機能しません。代わりに、 &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; ホストでリリースをビルドする必要があります。これから説明するように、これは、ターゲット自体でのリリースや、通常はリリースパイプラインの一部としての仮想マシンまたはコンテナーの使用など、複数の方法で実行できます。</target>
        </trans-unit>
        <trans-unit id="b3f2a9dc09a340a2ebdee83822979ce59327f246" translate="yes" xml:space="preserve">
          <source>So, as mentioned above, we need to explicitly &lt;em&gt;not&lt;/em&gt; import &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#+/2&quot;&gt;&lt;code&gt;+/2&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">したがって、前述のように、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#+/2&quot;&gt; &lt;code&gt;+/2&lt;/code&gt; &lt;/a&gt;を明示的にインポートし&lt;em&gt;ない&lt;/em&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="83ae82602ec909b7e64f3e9c4185c9b43776fc1a" translate="yes" xml:space="preserve">
          <source>So, as mentioned above, we need to explicitly &lt;em&gt;not&lt;/em&gt; import &lt;a href=&quot;kernel#+/2&quot;&gt;&lt;code&gt;+/2&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">したがって、上記のように、&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;kernel#+/2&quot;&gt; &lt;code&gt;+/2&lt;/code&gt; &lt;/a&gt;を明示的にインポートし&lt;em&gt;ない&lt;/em&gt;ようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="59e08d5e1e0246e318c2c7b29c0f2dddbb1c0e3a" translate="yes" xml:space="preserve">
          <source>Some filters, like &lt;code&gt;:line&lt;/code&gt;, may require the whole test &lt;code&gt;collection&lt;/code&gt; to find the closest line, that's why it must also be passed as an argument.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; などの一部のフィルターでは、最も近い行を見つけるためにテスト &lt;code&gt;collection&lt;/code&gt; 全体が必要になる場合があるため、引数としても渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="05246bea080a0c4e539d207d5406b5490bd3f2cd" translate="yes" xml:space="preserve">
          <source>Some functions that work on integers are found in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">整数で動作するいくつかの関数は&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;ます：</target>
        </trans-unit>
        <trans-unit id="298eccb34dba30d15b41ce5a15b44bef2b165685" translate="yes" xml:space="preserve">
          <source>Some functions that work on integers are found in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">整数で機能するいくつかの関数は&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; にあり&lt;/a&gt;ます：</target>
        </trans-unit>
        <trans-unit id="b4ff408bd67bda590b1a8dadfe81203b9dd46dcd" translate="yes" xml:space="preserve">
          <source>Some lists, called improper lists, do not have an empty list as the second element in the last cons cell:</source>
          <target state="translated">不適切なリストと呼ばれるリストの中には、最後のconsセルの2番目の要素として空のリストを持たないものがあります。</target>
        </trans-unit>
        <trans-unit id="841f2a3b2c7dce37f997bb04e09b4e105bd45274" translate="yes" xml:space="preserve">
          <source>Some metadata, however, is always added automatically by Logger whenever possible. Those are:</source>
          <target state="translated">ただし、いくつかのメタデータは、可能な限り常にロガーによって自動的に追加されます。それは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d07d38fa8e482844b99583b24c1125361f791f0e" translate="yes" xml:space="preserve">
          <source>Some names have specific meaning in Elixir. We detail those cases below.</source>
          <target state="translated">エリクサーには特定の意味を持つ名前もあります。以下では、そのような場合について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="5102715b1c152eb041c75bc9866d03423b108a9d" translate="yes" xml:space="preserve">
          <source>Some of the functionalities described here will not be available depending on your terminal. In particular, if you get a message saying that the smart terminal could not be run, some of the features described here won't work.</source>
          <target state="translated">お使いの端末によっては、ここで説明した機能の一部が利用できない場合があります。特に、スマートターミナルを実行できませんでしたというメッセージが表示された場合、ここで説明した機能の一部は動作しません。</target>
        </trans-unit>
        <trans-unit id="424f006fc61cb524f1c4101e27c8c225bd339a44" translate="yes" xml:space="preserve">
          <source>Some of the functions described in this module are inlined by the Elixir compiler into their Erlang counterparts in the &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html&quot;&gt;&lt;code&gt;:erlang&lt;/code&gt; module&lt;/a&gt;. Those functions are called BIFs (built-in internal functions) in Erlang-land and they exhibit interesting properties, as some of them are allowed in guards and others are used for compiler optimizations.</source>
          <target state="translated">このモジュールで説明されている関数の一部は、Elixirコンパイラーによって、&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html&quot;&gt; &lt;code&gt;:erlang&lt;/code&gt; モジュール&lt;/a&gt;内の対応するErlangにインライン化されます。これらの関数は、ErlangランドではBIF（組み込み内部関数）と呼ばれ、ガードで許可されているものとコンパイラーの最適化に使用されているものがあるため、興味深い特性を示します。</target>
        </trans-unit>
        <trans-unit id="da0b69950243e012775921ae13af5b19b4d25d0f" translate="yes" xml:space="preserve">
          <source>Some of the functions in this module are inlined by the compiler, similar to functions in the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module and they are explicitly marked in their docs as &quot;inlined by the compiler&quot;. For more information about inlined functions, check out the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールの一部の関数は、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;モジュールの関数と同様に、コンパイラによってインライン化されており、ドキュメントでは「コンパイラによってインライン化された」と明示的にマークされています。インライン関数の詳細については、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;モジュールを確認してください。</target>
        </trans-unit>
        <trans-unit id="a192dcc1e8e79268df0b27c2cf55ebeff7ecf7e0" translate="yes" xml:space="preserve">
          <source>Some of the functions in this module are inlined by the compiler, similar to functions in the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module and they are explicitly marked in their docs as &quot;inlined by the compiler&quot;. For more information about inlined functions, check out the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールの一部の関数は、&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;モジュールの関数と同様に、コンパイラーによってインライン化され、それらのドキュメントでは「コンパイラーによってインライン化された」として明示的にマークされています。インライン関数の詳細については、&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt;モジュールをご覧ください。</target>
        </trans-unit>
        <trans-unit id="1351a1f3f5e4ff15e2ee7bf563a9188c76ada1d8" translate="yes" xml:space="preserve">
          <source>Some of those functions are low-level, allowing the user to interact with files or IO devices, like &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; and others. This module also provides higher level functions that work with filenames and have their naming based on UNIX variants. For example, one can copy a file via &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt; and remove files and directories recursively via &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの機能の一部は低レベルであり、ユーザーは&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; &lt;/a&gt;などのファイルまたはIOデバイスを操作できます。このモジュールは、ファイル名を処理し、UNIXバリアントに基づいて名前を付ける、より高レベルの関数も提供します。たとえば、&lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt;を介してファイルをコピーし、&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; を&lt;/a&gt;介してファイルとディレクトリを再帰的に削除できます。</target>
        </trans-unit>
        <trans-unit id="24da5e653548d5291e81eaa6c8d00166cc1a3c68" translate="yes" xml:space="preserve">
          <source>Some of those functions are low-level, allowing the user to interact with files or IO devices, like &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; and others. This module also provides higher level functions that work with filenames and have their naming based on Unix variants. For example, one can copy a file via &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt; and remove files and directories recursively via &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの機能の一部は低レベルであり、ユーザーは&lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; &lt;/a&gt;などのファイルまたはIOデバイスを操作できます。このモジュールは、ファイル名を処理し、Unixバリアントに基づいて名前を付ける高レベルの関数も提供します。たとえば、&lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt;を介してファイルをコピーし、&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; を&lt;/a&gt;介してファイルとディレクトリを再帰的に削除できます。</target>
        </trans-unit>
        <trans-unit id="0607fbf81b66732aa3f0cb08914ffecb1a52e30a" translate="yes" xml:space="preserve">
          <source>Some other operators are special forms and cannot be overridden:</source>
          <target state="translated">他のいくつかの演算子は特殊な形式であり、オーバーライドできません。</target>
        </trans-unit>
        <trans-unit id="6fd879bb620af289a1b036290e1cf67c2340065b" translate="yes" xml:space="preserve">
          <source>Some switches will output different values based on the switches types:</source>
          <target state="translated">一部のスイッチは、スイッチの種類によって異なる値を出力します。</target>
        </trans-unit>
        <trans-unit id="078594884aa40212dd4dbd4c58daf70340519f4d" translate="yes" xml:space="preserve">
          <source>Some tasks are automatically reenabled though, as they are expected to be invoked multiple times. They are: &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt;&lt;code&gt;mix cmd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Do.html&quot;&gt;&lt;code&gt;mix do&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Loadconfig.html&quot;&gt;&lt;code&gt;mix loadconfig&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Cprof.html&quot;&gt;&lt;code&gt;mix profile.cprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Eprof.html&quot;&gt;&lt;code&gt;mix profile.eprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Fprof.html&quot;&gt;&lt;code&gt;mix profile.fprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Xref.html&quot;&gt;&lt;code&gt;mix xref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ただし、一部のタスクは複数回呼び出されることが予想されるため、自動的に再度有効になります。彼らは以下のとおりです。&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt; &lt;code&gt;mix cmd&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Do.html&quot;&gt; &lt;code&gt;mix do&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Loadconfig.html&quot;&gt; &lt;code&gt;mix loadconfig&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Cprof.html&quot;&gt; &lt;code&gt;mix profile.cprof&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Eprof.html&quot;&gt; &lt;code&gt;mix profile.eprof&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Fprof.html&quot;&gt; &lt;code&gt;mix profile.fprof&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Xref.html&quot;&gt; &lt;code&gt;mix xref&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1594a8ec691f4330becf7636c23a4c5abd8a9640" translate="yes" xml:space="preserve">
          <source>Some types have associated modifiers to clear up ambiguity in byte representation.</source>
          <target state="translated">いくつかの型には、バイト表現の曖昧さを解消するための関連する修飾子があります。</target>
        </trans-unit>
        <trans-unit id="0a60adb38022b605c61e542eae88c79cb8debaee" translate="yes" xml:space="preserve">
          <source>Some types' internal structures are kept hidden and instead show a user-friendly structure when inspected. The idiom in Elixir is to print those data types in the format &lt;code&gt;#Name&amp;lt;...&amp;gt;&lt;/code&gt;. Because those values are treated as comments in Elixir code due to the leading &lt;code&gt;#&lt;/code&gt; sign, they require special care when being used in doctests.</source>
          <target state="translated">一部のタイプの内部構造は非表示に保たれ、代わりに検査時にユーザーフレンドリーな構造を示します。Elixirのイディオムは、これらのデータ型を &lt;code&gt;#Name&amp;lt;...&amp;gt;&lt;/code&gt; 形式で出力することです。これらの値は、先頭に &lt;code&gt;#&lt;/code&gt; 記号があるため、Elixirコードではコメントとして扱われるため、doctestで使用する場合は特別な注意が必要です。</target>
        </trans-unit>
        <trans-unit id="deaf1a57d57875a67207f24f3b5dd3ac6b782a3a" translate="yes" xml:space="preserve">
          <source>Sometimes a module embeds information from an external file. This attribute allows the module to annotate which external resources have been used.</source>
          <target state="translated">モジュールが外部ファイルからの情報を埋め込むことがあります。この属性は、モジュールがどの外部リソースが使用されたかをアノテーションすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="384caed829a0ddd94d2e273f1d95ffe9dee6a8ec" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s necessary to ensure that a resource is cleaned up after some action that could potentially raise an error. The &lt;code&gt;try/after&lt;/code&gt; construct allows you to do that. For example, we can open a file and use an &lt;code&gt;after&lt;/code&gt; clause to close it&amp;ndash;even if something goes wrong:</source>
          <target state="translated">場合によっては、エラーを発生させる可能性のある何らかのアクションの後で、リソースを確実にクリーンアップする必要があります。 &lt;code&gt;try/after&lt;/code&gt; 構文あなたがそれを行うことができます。たとえば、何か問題が発生した場合でも、ファイルを開き、 &lt;code&gt;after&lt;/code&gt; 句を使用してファイルを閉じることができます。</target>
        </trans-unit>
        <trans-unit id="e2b2ac6019fb65f8717c90d1d018234f716a20c9" translate="yes" xml:space="preserve">
          <source>Sometimes variable names might be dynamically created. In such cases, &lt;code&gt;Macro.var/2&lt;/code&gt; can be used to define new variables:</source>
          <target state="translated">変数名が動的に作成される場合があります。このような場合、 &lt;code&gt;Macro.var/2&lt;/code&gt; を使用して新しい変数を定義できます。</target>
        </trans-unit>
        <trans-unit id="c3e6cdc44719c0255e951c12c019ffe28042a186" translate="yes" xml:space="preserve">
          <source>Sometimes when working with quoted expressions, it may be useful to get the textual code representation back. This can be done with &lt;code&gt;Macro.to_string/1&lt;/code&gt;:</source>
          <target state="translated">引用符で囲まれた式を使用する場合、テキストコード表現を元に戻すと役立つことがあります。これは &lt;code&gt;Macro.to_string/1&lt;/code&gt; で行うことができます：</target>
        </trans-unit>
        <trans-unit id="f678369b61eb09a9e589708cd7a2e02598564507" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to wrap the entire body of a function in a &lt;code&gt;try&lt;/code&gt; construct, often to guarantee some code will be executed afterwards. In such cases, Elixir allows you to omit the &lt;code&gt;try&lt;/code&gt; line:</source>
          <target state="translated">場合によっては、関数の本体全体を &lt;code&gt;try&lt;/code&gt; 構文でラップし、後でいくつかのコードが実行されることを保証したい場合があります。このような場合、Elixirでは、 &lt;code&gt;try&lt;/code&gt; 行を省略できます。</target>
        </trans-unit>
        <trans-unit id="a96f5994cefa16cd2405b3c485f7fd5c98881745" translate="yes" xml:space="preserve">
          <source>Sometimes you will create a list and it will return a value in single quotes. For example:</source>
          <target state="translated">リストを作成して、一重引用符で値を返すこともあります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8127688bd131696b0a37f05f499d0599032f888f" translate="yes" xml:space="preserve">
          <source>Sometimes, it may be handy to define supervisors backed by a module:</source>
          <target state="translated">時には、モジュールに裏打ちされたスーパーバイザを定義するのに便利な場合もあります。</target>
        </trans-unit>
        <trans-unit id="7107404c903a42c3ea798cd0771e63de0679051a" translate="yes" xml:space="preserve">
          <source>Sorting by multiple properties - first by size, then by first letter (this takes advantage of the fact that tuples are compared element-by-element):</source>
          <target state="translated">複数のプロパティによるソート-最初にサイズでソートし、次に最初の文字でソートします(これは、タプルが要素ごとに比較されるという事実を利用しています)。</target>
        </trans-unit>
        <trans-unit id="cc46235140c8ba00a6b05c8f64c1ba9742da0042" translate="yes" xml:space="preserve">
          <source>Sorting structs</source>
          <target state="translated">構造体のソート</target>
        </trans-unit>
        <trans-unit id="be5acfabf53936ea3e9b1247e69a2a9d3351da9f" translate="yes" xml:space="preserve">
          <source>Sorts the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlangの用語の順序に従って &lt;code&gt;enumerable&lt;/code&gt; ソートします。</target>
        </trans-unit>
        <trans-unit id="e68a312ee613bb7d1d0c541895ad03ce0f0b9c2f" translate="yes" xml:space="preserve">
          <source>Sorts the &lt;code&gt;enumerable&lt;/code&gt; by the given function.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; ものを与えられた関数でソートします。</target>
        </trans-unit>
        <trans-unit id="abd6bf16aa13625f3c6058f6271a87fad2698de5" translate="yes" xml:space="preserve">
          <source>Sorts the mapped results of the &lt;code&gt;enumerable&lt;/code&gt; according to the provided &lt;code&gt;sorter&lt;/code&gt; function.</source>
          <target state="translated">提供された &lt;code&gt;sorter&lt;/code&gt; 関数に従って、 &lt;code&gt;enumerable&lt;/code&gt; のマップされた結果をソートします。</target>
        </trans-unit>
        <trans-unit id="1d1fce18c4110d2ca57fcf7014c3e55e330f72ee" translate="yes" xml:space="preserve">
          <source>Spawn executable is a more restricted and explicit version of spawn. It expects full file paths to the executable you want to execute. If they are in your &lt;code&gt;$PATH&lt;/code&gt;, they can be retrieved by calling &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#find_executable/1&quot;&gt;&lt;code&gt;System.find_executable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">スポーン実行可能ファイルは、スポーンのより制限された明示的なバージョンです。実行する実行可能ファイルへの完全なファイルパスが必要です。それらが &lt;code&gt;$PATH&lt;/code&gt; にある場合は、&lt;a href=&quot;https://hexdocs.pm/elixir/System.html#find_executable/1&quot;&gt; &lt;code&gt;System.find_executable/1&lt;/code&gt; を&lt;/a&gt;呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="15783b50f9d3f00eb365b748b956c65a135f9d3e" translate="yes" xml:space="preserve">
          <source>Spawn executable is a more restricted and explicit version of spawn. It expects full file paths to the executable you want to execute. If they are in your &lt;code&gt;$PATH&lt;/code&gt;, they can be retrieved by calling &lt;a href=&quot;system#find_executable/1&quot;&gt;&lt;code&gt;System.find_executable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">スポーン実行可能ファイルは、スポーンのより制限された明示的なバージョンです。実行する実行可能ファイルへの完全なファイルパスが必要です。それらが &lt;code&gt;$PATH&lt;/code&gt; にある場合は、&lt;a href=&quot;system#find_executable/1&quot;&gt; &lt;code&gt;System.find_executable/1&lt;/code&gt; を&lt;/a&gt;呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="06d844ce2d042cfc05ff00cd36cbaef907fbf9f7" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from module &lt;code&gt;mod&lt;/code&gt;, passing the given &lt;code&gt;args&lt;/code&gt; according to the given options.</source>
          <target state="translated">モジュール &lt;code&gt;mod&lt;/code&gt; から指定された関数 &lt;code&gt;fun&lt;/code&gt; を生成し、指定されたオプションに従って指定された &lt;code&gt;args&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="e59d5e96307908db7f7259b156c4207b4b6647f1" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from the given &lt;code&gt;module&lt;/code&gt; passing it the given &lt;code&gt;args&lt;/code&gt; and returns its PID.</source>
          <target state="translated">指定 &lt;code&gt;fun&lt;/code&gt; れた &lt;code&gt;module&lt;/code&gt; から指定された関数funを生成し、指定された &lt;code&gt;args&lt;/code&gt; を渡して、そのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="ebfa1216cad38e8a649b56dffd10838521f159b4" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from the given &lt;code&gt;module&lt;/code&gt; passing it the given &lt;code&gt;args&lt;/code&gt;, links it to the current process, and returns its PID.</source>
          <target state="translated">指定 &lt;code&gt;fun&lt;/code&gt; れた &lt;code&gt;module&lt;/code&gt; から指定された関数funを生成し、指定された &lt;code&gt;args&lt;/code&gt; を渡して、現在のプロセスにリンクし、そのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="ea2e62ea14924f90832df9726a7c47d9b99aef7a" translate="yes" xml:space="preserve">
          <source>Spawns the given function according to the given options.</source>
          <target state="translated">与えられたオプションに従って、与えられた関数を起動します。</target>
        </trans-unit>
        <trans-unit id="3315809b279cf15aa395cbce73fa8ae67f6dbff9" translate="yes" xml:space="preserve">
          <source>Spawns the given function and returns its PID.</source>
          <target state="translated">指定された関数をスポーンし、そのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="35d6575cb965b03843b65682af53845db43ea4f1" translate="yes" xml:space="preserve">
          <source>Spawns the given function, links it to the current process, and returns its PID.</source>
          <target state="translated">指定された関数を起動し、現在のプロセスにリンクし、そのPIDを返します。</target>
        </trans-unit>
        <trans-unit id="6b3166525e86d6671be4ca627ba932e58c5e6876" translate="yes" xml:space="preserve">
          <source>Spawns the given function, monitors it and returns its PID and monitoring reference.</source>
          <target state="translated">指定された関数を起動し、それを監視し、そのPIDと監視参照を返します。</target>
        </trans-unit>
        <trans-unit id="476a4f932c0193636e1b5b265079bd4eebed09cf" translate="yes" xml:space="preserve">
          <source>Spawns the given module and function passing the given args, monitors it and returns its PID and monitoring reference.</source>
          <target state="translated">指定されたモジュールと関数は、指定された引数を渡して生成され、それを監視し、その PID と監視参照を返します。</target>
        </trans-unit>
        <trans-unit id="11becd1e5ec9242aef1d1841d542f66a7becf7fb" translate="yes" xml:space="preserve">
          <source>Special forms are the basic building blocks of Elixir, and therefore cannot be overridden by the developer.</source>
          <target state="translated">特殊なフォームは Elixir の基本的な構成要素であるため、開発者がオーバーライドすることはできません。</target>
        </trans-unit>
        <trans-unit id="ec2d21cb128d08e54f4cc7123b3da9fc09f1d1fc" translate="yes" xml:space="preserve">
          <source>Special names</source>
          <target state="translated">特殊名称</target>
        </trans-unit>
        <trans-unit id="bd9733e0c08db2f71cd9184a67c342d610f82cb0" translate="yes" xml:space="preserve">
          <source>Specifically, this function takes a UTF-8 encoded binary and returns a list of its integer code points. It is similar to &lt;a href=&quot;#codepoints/1&quot;&gt;&lt;code&gt;codepoints/1&lt;/code&gt;&lt;/a&gt; except that the latter returns a list of code points as strings.</source>
          <target state="translated">具体的には、この関数はUTF-8エンコードされたバイナリを受け取り、その整数コードポイントのリストを返します。&lt;a href=&quot;#codepoints/1&quot;&gt; &lt;code&gt;codepoints/1&lt;/code&gt; に&lt;/a&gt;似ていますが、後者はコードポイントのリストを文字列として返す点が異なります。</target>
        </trans-unit>
        <trans-unit id="076d7709d7ab86ddce0bc7b4c95d3c7f192f7af8" translate="yes" xml:space="preserve">
          <source>Specifications can be overloaded just like ordinary functions.</source>
          <target state="translated">仕様は、通常の関数と同じようにオーバーロードすることができます。</target>
        </trans-unit>
        <trans-unit id="5caf5e40c5f8e8465a047f2e293de43751354b57" translate="yes" xml:space="preserve">
          <source>Specifies a provider API that loads configuration during boot.</source>
          <target state="translated">ブート時に構成をロードするプロバイダ API を指定します。</target>
        </trans-unit>
        <trans-unit id="594428487583abee60caa384a006645343bb4dab" translate="yes" xml:space="preserve">
          <source>Specifies an external resource for the current module.</source>
          <target state="translated">現在のモジュールの外部リソースを指定します。</target>
        </trans-unit>
        <trans-unit id="991ba6c6c1d2cdca7ee53711d92474c28af8b0e5" translate="yes" xml:space="preserve">
          <source>Specifies the time zone database for calendar operations.</source>
          <target state="translated">カレンダー操作のタイムゾーンデータベースを指定します。</target>
        </trans-unit>
        <trans-unit id="33f17cd6008d68beaa918cd4a927ca8b7fb23835" translate="yes" xml:space="preserve">
          <source>Specify the module version. Accepts any valid Elixir value, for example:</source>
          <target state="translated">モジュールのバージョンを指定します。有効なElixirの値を指定します。</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="5ae92cad872366e915ee35a53033e6a501a2ddaf" translate="yes" xml:space="preserve">
          <source>Splits a string into &lt;a href=&quot;#t:argv/0&quot;&gt;&lt;code&gt;argv/0&lt;/code&gt;&lt;/a&gt; chunks.</source>
          <target state="translated">文字列を&lt;a href=&quot;#t:argv/0&quot;&gt; &lt;code&gt;argv/0&lt;/code&gt; &lt;/a&gt;チャンクに分割します。</target>
        </trans-unit>
        <trans-unit id="9cee674c64765c1d80ecb8eac714ef8b24a33c1b" translate="yes" xml:space="preserve">
          <source>Splits a string into two at the specified offset. When the offset given is negative, location is counted from the end of the string.</source>
          <target state="translated">指定されたオフセットで文字列を2つに分割します。指定されたオフセットが負の場合は、文字列の末尾から位置をカウントします。</target>
        </trans-unit>
        <trans-unit id="ff232001d7426240fb22459c05a5783114c65dee" translate="yes" xml:space="preserve">
          <source>Splits enumerable in two at the position of the element for which &lt;code&gt;fun&lt;/code&gt; returns a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) for the first time.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; が最初に &lt;code&gt;false&lt;/code&gt; 値（falseまたは &lt;code&gt;nil&lt;/code&gt; ）を返す要素の位置で列挙可能を2つに分割します。</target>
        </trans-unit>
        <trans-unit id="17bf201d5ac6822c0e5461609bb3331d4a9b71ae" translate="yes" xml:space="preserve">
          <source>Splits enumerable on every element for which &lt;code&gt;fun&lt;/code&gt; returns a new value.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; が新しい値を返すすべての要素で列挙可能を分割します。</target>
        </trans-unit>
        <trans-unit id="8fab28fdcf7550270e90b45a72ddba1737cc4ba0" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; in two lists according to the given function &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">指定された関数 &lt;code&gt;fun&lt;/code&gt; に従って、 &lt;code&gt;enumerable&lt;/code&gt; を2つのリストに分割します。</target>
        </trans-unit>
        <trans-unit id="e9928604019411df089cbfb5d79d98e495eb508a" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; into groups based on &lt;code&gt;key_fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; を &lt;code&gt;key_fun&lt;/code&gt; に基づいてグループに分割します。</target>
        </trans-unit>
        <trans-unit id="9508aa9de8649214346d921d5668688428b1f895" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; into two enumerables, leaving &lt;code&gt;count&lt;/code&gt; elements in the first one.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; を2つのenumerableに分割し、 &lt;code&gt;count&lt;/code&gt; 要素を最初の要素に残します。</target>
        </trans-unit>
        <trans-unit id="f96c656c96d7ad7920526ee526067cab2352a1cf" translate="yes" xml:space="preserve">
          <source>Splits the given &lt;code&gt;enumerable&lt;/code&gt; in two lists by calling &lt;code&gt;fun&lt;/code&gt; with each element in the &lt;code&gt;enumerable&lt;/code&gt; as its only argument. Returns a tuple with the first list containing all the elements in &lt;code&gt;enumerable&lt;/code&gt; for which applying &lt;code&gt;fun&lt;/code&gt; returned a truthy value, and a second list with all the elements for which applying &lt;code&gt;fun&lt;/code&gt; returned a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">与えられた分割 &lt;code&gt;enumerable&lt;/code&gt; 呼び出すことによって、二つのリストに &lt;code&gt;fun&lt;/code&gt; 内の各要素を &lt;code&gt;enumerable&lt;/code&gt; 唯一の引数として。 &lt;code&gt;fun&lt;/code&gt; を適用して真の値を返した &lt;code&gt;enumerable&lt;/code&gt; すべての要素を含む最初のリストと、 &lt;code&gt;fun&lt;/code&gt; を適用して &lt;code&gt;false&lt;/code&gt; 値（falseまたは &lt;code&gt;nil&lt;/code&gt; ）を返したすべての要素を含む2番目のリストを含むタプルを返します。</target>
        </trans-unit>
        <trans-unit id="178b0042fed7fdd8f93f31219d901e4b9b82d0c2" translate="yes" xml:space="preserve">
          <source>Splits the given module name into binary parts.</source>
          <target state="translated">与えられたモジュール名をバイナリ部分に分割します。</target>
        </trans-unit>
        <trans-unit id="0fd31f1cd4c506deb298a3d1cd81da35a74ebe25" translate="yes" xml:space="preserve">
          <source>Splits the given target based on the given pattern and in the given number of parts.</source>
          <target state="translated">指定されたパターンに基づいて指定されたターゲットを指定された数のパーツに分割します。</target>
        </trans-unit>
        <trans-unit id="8b112253fdc3346c7e770f36bb6f23ad8926016d" translate="yes" xml:space="preserve">
          <source>Splits the path into a list at the path separator.</source>
          <target state="translated">パスをパス区切りでリストに分割します。</target>
        </trans-unit>
        <trans-unit id="359b1199c2392525736cac5022b5304530d285ca" translate="yes" xml:space="preserve">
          <source>Splits the string into chunks of characters that share a common trait.</source>
          <target state="translated">文字列を共通の特徴を持つ文字の塊に分割します。</target>
        </trans-unit>
        <trans-unit id="036d667a456f6e5701ef615d7e9fe0acfd59a5e1" translate="yes" xml:space="preserve">
          <source>Splitting on empty string returns graphemes:</source>
          <target state="translated">空の文字列に分割すると、グレープスキームが返されます。</target>
        </trans-unit>
        <trans-unit id="580cb6b295814a3188d6380df0dec3f391ba39fd" translate="yes" xml:space="preserve">
          <source>Splitting with a string pattern:</source>
          <target state="translated">文字列パターンで分割。</target>
        </trans-unit>
        <trans-unit id="bcf765c54d34e28f6803f95f077f285d09e39e5b" translate="yes" xml:space="preserve">
          <source>Stacktrace information</source>
          <target state="translated">スタックトレース情報</target>
        </trans-unit>
        <trans-unit id="27f8a6f3b534fe60cc2d1d773b278872783430c8" translate="yes" xml:space="preserve">
          <source>Start IEx with &lt;code&gt;iex -S mix&lt;/code&gt; and you can see that the IEx prompt has changed.</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; でIExを開始すると、IExプロンプトが変更されたことがわかります。</target>
        </trans-unit>
        <trans-unit id="cd55884cf622ecaecfbd0f8029b7a2200a0e0ffe" translate="yes" xml:space="preserve">
          <source>Start a new server with &lt;code&gt;PORT=4040 mix run --no-halt&lt;/code&gt; and we can now open up many concurrent telnet clients. You will also notice that quitting a client does not bring the acceptor down. Excellent!</source>
          <target state="translated">&lt;code&gt;PORT=4040 mix run --no-halt&lt;/code&gt; 新しいサーバーを起動し、mix run --no-haltを実行すると、多数の同時Telnetクライアントを開くことができます。また、クライアントを終了してもアクセプターがダウンしないことに気付くでしょう。優れた！</target>
        </trans-unit>
        <trans-unit id="a95c450013bed3752195e10c7871fec8dc526ef5" translate="yes" xml:space="preserve">
          <source>Start an IEx session inside the &lt;code&gt;kv_server&lt;/code&gt; application with &lt;code&gt;iex -S mix&lt;/code&gt;. Inside IEx, run:</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; を使用して、 &lt;code&gt;kv_server&lt;/code&gt; アプリケーション内でIExセッションを開始します。IEx内で、以下を実行します。</target>
        </trans-unit>
        <trans-unit id="f1e3c34a15115da4146bddae97a22e873ad3aba6" translate="yes" xml:space="preserve">
          <source>Start and shutdown</source>
          <target state="translated">スタートとシャットダウン</target>
        </trans-unit>
        <trans-unit id="12af8a4747b6cb74e2c03f95e160e013ad4c5cb4" translate="yes" xml:space="preserve">
          <source>Start new sections with second level Markdown headers &lt;code&gt;##&lt;/code&gt;. First level headers are reserved for module and function names.</source>
          <target state="translated">第2レベルのMarkdownヘッダー &lt;code&gt;##&lt;/code&gt; で新しいセクションを開始します。第1レベルのヘッダーは、モジュールと関数の名前用に予約されています。</target>
        </trans-unit>
        <trans-unit id="089185f450fbba06f1ee579db9849d55ba57b73a" translate="yes" xml:space="preserve">
          <source>Start the function name with one or two underscores, for example, &lt;code&gt;__add__/2&lt;/code&gt;, and add &lt;code&gt;@doc false&lt;/code&gt;. The compiler does not import functions with leading underscores and they hint to anyone reading the code of their intended private usage.</source>
          <target state="translated">関数名を1つまたは2つの下線（例えば &lt;code&gt;__add__/2&lt;/code&gt; で開始し、 &lt;code&gt;@doc false&lt;/code&gt; を追加します。コンパイラーは、先頭に下線が付いている関数をインポートせず、意図したプライベート使用のコードを読んでいる人にヒントを与えます。</target>
        </trans-unit>
        <trans-unit id="07f93068d3bc0f04950355efb6ddd2d17ec1f56e" translate="yes" xml:space="preserve">
          <source>Started applications are, finally, &lt;em&gt;stopped&lt;/em&gt;:</source>
          <target state="translated">開始されたアプリケーションは、最終的に&lt;em&gt;停止され&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="64358ae1fb937d4c75eba047d686e13aa9f19ac8" translate="yes" xml:space="preserve">
          <source>Starting applications</source>
          <target state="translated">アプリケーションの開始</target>
        </trans-unit>
        <trans-unit id="5a0e3a53e4a7ea34425d543e3c60624682092a9f" translate="yes" xml:space="preserve">
          <source>Starting from Erlang/OTP 23, this function will always return an empty list.</source>
          <target state="translated">Erlang/OTP 23からは、この関数は常に空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="f835ee5c0014a63ad6b6df82abb9e701ec553824" translate="yes" xml:space="preserve">
          <source>Starts ExUnit and automatically runs tests right before the VM terminates.</source>
          <target state="translated">ExUnit を起動し、VM が終了する直前にテストを自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="86c6bbd882bee2fa0066e7a22e3454fd13db4c2a" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; process linked to the current process.</source>
          <target state="translated">現在のプロセスにリンクされた&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="2318ba34ca99a824b9aff08f1f35d1274803200e" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; process without links (outside of a supervision tree).</source>
          <target state="translated">リンクなしで（監視ツリー外に）&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="0782a0a4923899805a82fdd2cfd52de5db03738c" translate="yes" xml:space="preserve">
          <source>Starts a child process under the test supervisor.</source>
          <target state="translated">試験監督者の下で子プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="8ae57b5742336733267931b5f6b503fd008c72a0" translate="yes" xml:space="preserve">
          <source>Starts a module-based supervisor process with the given &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;module&lt;/code&gt; と &lt;code&gt;arg&lt;/code&gt; でモジュールベースの監視プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="fcf80a20aa8126b71633a9c4d9fbaa386ee40cfe" translate="yes" xml:space="preserve">
          <source>Starts a module-based supervisor process with the given &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;init_arg&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;module&lt;/code&gt; と &lt;code&gt;init_arg&lt;/code&gt; でモジュールベースの監視プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="a29ac2effba91a69db59f15d944bea1c07200c03" translate="yes" xml:space="preserve">
          <source>Starts a new IEx server session.</source>
          <target state="translated">新しい IEx サーバー セッションを開始します。</target>
        </trans-unit>
        <trans-unit id="d40ac264e18a64e3aa1c8e14b1832737938a297e" translate="yes" xml:space="preserve">
          <source>Starts a new supervisor.</source>
          <target state="translated">新しいスーパーバイザーを開始します。</target>
        </trans-unit>
        <trans-unit id="ebaacaa2714f2595144af20c9a68793efe7ffd04" translate="yes" xml:space="preserve">
          <source>Starts a process linked to the current process.</source>
          <target state="translated">現在のプロセスに連動したプロセスを起動します。</target>
        </trans-unit>
        <trans-unit id="2b59224aef1ecbe4120f6edee31cbd426830d26d" translate="yes" xml:space="preserve">
          <source>Starts a supervisor with the given children.</source>
          <target state="translated">与えられた子供たちと一緒に監督を開始します。</target>
        </trans-unit>
        <trans-unit id="7d9965ed4725208ff0fa257915381d4a0e7c1131" translate="yes" xml:space="preserve">
          <source>Starts a supervisor with the given options.</source>
          <target state="translated">与えられたオプションでスーパーバイザーを開始します。</target>
        </trans-unit>
        <trans-unit id="07b52174845bc90fe1ecf5c9721f55e62fa125c0" translate="yes" xml:space="preserve">
          <source>Starts a task as a child of the given &lt;code&gt;supervisor&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;supervisor&lt;/code&gt; 子としてタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="b2df2466c722de3bf0630de14ca0456f24b95029" translate="yes" xml:space="preserve">
          <source>Starts a task as part of a supervision tree.</source>
          <target state="translated">監督ツリーの一部としてタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="1cb728f23ec3d4bd98eecc35a24b2ca0a288323d" translate="yes" xml:space="preserve">
          <source>Starts a task for parallel compilation.</source>
          <target state="translated">並列コンパイルのためのタスクを起動します。</target>
        </trans-unit>
        <trans-unit id="3e12fe5929d287faa596ff7c27135e404f41d121" translate="yes" xml:space="preserve">
          <source>Starts a task that can be awaited on.</source>
          <target state="translated">待機可能なタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="5e4e4d48d3e46c07e8ad89683993faa9920d4034" translate="yes" xml:space="preserve">
          <source>Starts a task that must be awaited on.</source>
          <target state="translated">待機しなければならないタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="baff2e0636d16f2edf213eeb533e7524ff6da6ba" translate="yes" xml:space="preserve">
          <source>Starts a task.</source>
          <target state="translated">タスクを開始します。</target>
        </trans-unit>
        <trans-unit id="ff8a45fd44c45d6d08595af80800745e432d6c83" translate="yes" xml:space="preserve">
          <source>Starts all registered apps.</source>
          <target state="translated">登録されている全てのアプリを起動します。</target>
        </trans-unit>
        <trans-unit id="60a11990717e4ff2488b4ece1a89e6bbe58d521f" translate="yes" xml:space="preserve">
          <source>Starts an agent linked to the current process with the given function.</source>
          <target state="translated">与えられた関数で現在のプロセスにリンクされたエージェントを起動します。</target>
        </trans-unit>
        <trans-unit id="88115ca2a6a5c44765a372981f691549cc020d54" translate="yes" xml:space="preserve">
          <source>Starts an agent linked to the current process.</source>
          <target state="translated">現在のプロセスにリンクされたエージェントを起動します。</target>
        </trans-unit>
        <trans-unit id="95ae19223d60b6b02cb6c4bd30ac4fa25fed8a18" translate="yes" xml:space="preserve">
          <source>Starts an agent process without links (outside of a supervision tree).</source>
          <target state="translated">リンクのないエージェントプロセスを開始します(監視ツリーの外)。</target>
        </trans-unit>
        <trans-unit id="abf365e5082ecbff5e0e8db22fa0296d814d2bfa" translate="yes" xml:space="preserve">
          <source>Starts an agent without links with the given module, function, and arguments.</source>
          <target state="translated">与えられたモジュール、関数、引数とのリンクなしでエージェントを起動します。</target>
        </trans-unit>
        <trans-unit id="a32e4b2048c8ef3240a536f9df6ce6e47d26f263" translate="yes" xml:space="preserve">
          <source>Starts an application in synchronous phases.</source>
          <target state="translated">同期フェーズでアプリケーションを起動します。</target>
        </trans-unit>
        <trans-unit id="c1cb03abb8e558c98285d30efef32d8ab46f3eb9" translate="yes" xml:space="preserve">
          <source>Starts monitoring the given &lt;code&gt;item&lt;/code&gt; from the calling process.</source>
          <target state="translated">呼び出しプロセスから指定された &lt;code&gt;item&lt;/code&gt; 監視を開始します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
