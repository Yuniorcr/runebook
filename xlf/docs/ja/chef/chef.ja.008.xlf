<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="5a8a41031cd6e880ddcfb0d9ea4c8826ff073d7e" translate="yes" xml:space="preserve">
          <source>Any other attribute type that is contained in this JSON file will be treated as a &lt;code&gt;normal&lt;/code&gt; attribute. Setting attributes at other precedence levels is not possible. For example, attempting to update &lt;code&gt;override&lt;/code&gt; attributes using the &lt;code&gt;-j&lt;/code&gt; option:</source>
          <target state="translated">このJSONファイルに含まれているその他の属性タイプは、 &lt;code&gt;normal&lt;/code&gt; 属性として扱われます。他の優先レベルで属性を設定することはできません。たとえば、 &lt;code&gt;-j&lt;/code&gt; オプションを使用して &lt;code&gt;override&lt;/code&gt; 属性を更新しようとすると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="46e237dba5cade2d95af3ff178bd70afcb11ac79" translate="yes" xml:space="preserve">
          <source>Any other git options are valid for a GitHub location.</source>
          <target state="translated">その他のgitオプションはGitHubの場所で有効です。</target>
        </trans-unit>
        <trans-unit id="bacf4f6d54719c827f4e035bda38a4f04e8b5a37" translate="yes" xml:space="preserve">
          <source>Any physical violence &lt;em&gt;or&lt;/em&gt; intimidation, threatened or acted on, is a serious offense and will result in immediate exclusion from the community and appropriate follow up with law enforcement. No, we are not kidding.</source>
          <target state="translated">脅迫または行動された身体的暴力&lt;em&gt;または&lt;/em&gt;脅迫は重大な犯罪であり、コミュニティからの即時の排除および法執行機関による適切なフォローアップにつながります。いいえ、冗談ではありません。</target>
        </trans-unit>
        <trans-unit id="e3b76cfb89df218c0ce752c76bcf9c0d1a99d829" translate="yes" xml:space="preserve">
          <source>Any platforms or versions not explicitly listed here are unsupported, both commercially and by the community.</source>
          <target state="translated">ここに明示的に記載されていないプラットフォームやバージョンは、商用でもコミュニティでもサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d743f05ef4e34f0264cab6fb0884e07852dd2280" translate="yes" xml:space="preserve">
          <source>Any project configured to use runners will not use Push Jobs as the transport mechanism for managing the phase builds (unit, lint, provision, etc.). Push Jobs is still required to execute the delivery_push_job resource that the delivery-sugar cookbook exposes. This means that if you use the default &lt;a href=&quot;https://github.com/chef-cookbooks/delivery-truck/blob/b9e386e720376f7f3173ca03311cba667eb7ef4b/recipes/deploy.rb&quot;&gt;deploy.rb&lt;/a&gt; recipe from delivery-truck, then Push Jobs is still used within the deploy phase.</source>
          <target state="translated">ランナーを使用するように構成されたプロジェクトは、フェーズビルド（ユニット、リント、プロビジョニングなど）を管理するためのトランスポートメカニズムとしてプッシュジョブを使用しません。delivery-sugarクックブックが公開しているdelivery_push_jobリソースを実行するには、引き続きプッシュジョブが必要です。これは、delivery-truckのデフォルトの&lt;a href=&quot;https://github.com/chef-cookbooks/delivery-truck/blob/b9e386e720376f7f3173ca03311cba667eb7ef4b/recipes/deploy.rb&quot;&gt;deploy.rb&lt;/a&gt;レシピを使用する場合、デプロイフェーズ内でプッシュジョブが引き続き使用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="1a6e49dce63d1120044a72a91d072b2c9219be57" translate="yes" xml:space="preserve">
          <source>Any properties that are marked &lt;code&gt;identity: true&lt;/code&gt; or &lt;code&gt;desired_state: false&lt;/code&gt; will be available from &lt;code&gt;load_current_value&lt;/code&gt;. If access to other properties of a resource is needed, use a block argument that contains all of the properties of the requested resource. For example:</source>
          <target state="translated">&lt;code&gt;identity: true&lt;/code&gt; または &lt;code&gt;desired_state: false&lt;/code&gt; とマークされているプロパティは、 &lt;code&gt;load_current_value&lt;/code&gt; から利用できます。リソースの他のプロパティへのアクセスが必要な場合は、要求されたリソースのすべてのプロパティを含むブロック引数を使用してください。例えば：</target>
        </trans-unit>
        <trans-unit id="e375ddb3d0caecdb64b173f3a18214abbe27595f" translate="yes" xml:space="preserve">
          <source>Any properties that are marked &lt;code&gt;identity: true&lt;/code&gt;, &lt;code&gt;desired_state: false&lt;/code&gt;, or &lt;code&gt;name_property: true&lt;/code&gt; will be directly available from &lt;code&gt;load_current_value&lt;/code&gt;. If access to other properties of a resource is needed, use a block argument with load_current_value. The block argument will have the values of the requested resource. For example:</source>
          <target state="translated">マークされている任意のプロパティ &lt;code&gt;identity: true&lt;/code&gt; 、 &lt;code&gt;desired_state: false&lt;/code&gt; 、または &lt;code&gt;name_property: true&lt;/code&gt; から直接利用できるようになります &lt;code&gt;load_current_value&lt;/code&gt; 。リソースの他のプロパティへのアクセスが必要な場合は、load_current_valueでブロック引数を使用します。ブロック引数には、要求されたリソースの値が含まれます。例えば：</target>
        </trans-unit>
        <trans-unit id="7b922fed9c894f1c640057d0f0b4093d66a4f035" translate="yes" xml:space="preserve">
          <source>Any recipes using the &lt;code&gt;git-deploy&lt;/code&gt; gem can continue using the same API. To include this behavior in a recipe, do something like the following:</source>
          <target state="translated">&lt;code&gt;git-deploy&lt;/code&gt; gem を使用するすべてのレシピは、同じAPIを引き続き使用できます。この動作をレシピに含めるには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="37a21bccbc92efa566429468a2c33b20e8bc9172" translate="yes" xml:space="preserve">
          <source>Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the &lt;code&gt;guard_interpreter&lt;/code&gt; property to specify a &lt;strong&gt;script&lt;/strong&gt;-based resource.</source>
          <target state="translated">文字列コマンドを渡すリソースは、その文字列コマンドの評価に使用されるインタプリタも指定できます。これは、 &lt;code&gt;guard_interpreter&lt;/code&gt; プロパティを使用して&lt;strong&gt;スクリプト&lt;/strong&gt;ベースのリソースを指定することによって行われます。</target>
        </trans-unit>
        <trans-unit id="a810b7a972980f54dbe8011f9f8cc32da5278bad" translate="yes" xml:space="preserve">
          <source>Any roles that are present in the node&amp;rsquo;s run-list or recursively included by those roles</source>
          <target state="translated">ノードの実行リストに存在するか、それらのロールに再帰的に含まれるロール</target>
        </trans-unit>
        <trans-unit id="e9a208bd86dee2a16c158fbe3c611526d475420e" translate="yes" xml:space="preserve">
          <source>Any run of &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; will ensure the key exists and is stored without any additional steps.</source>
          <target state="translated">任意の実行 &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; キーが存在し、任意の追加の手順なしで保存されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="657852794d1af86c6c92c73f3b44d2a018e5b475" translate="yes" xml:space="preserve">
          <source>Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use knife to search within a data bag named &amp;ldquo;admin_data&amp;rdquo; across all items, except for the &amp;ldquo;admin_users&amp;rdquo; item, enter the following:</source>
          <target state="translated">データバッグ（またはデータバッグアイテム）の検索では、データバッグの名前を指定し、検索中に使用される検索クエリ文字列を提供する必要があります。たとえば、knifeを使用して、「admin_users」アイテムを除くすべてのアイテムにわたって「admin_data」という名前のデータバッグ内を検索するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="925373bd428ea2369b32954d6eb99acc1d7259b3" translate="yes" xml:space="preserve">
          <source>Any tags assigned to the route table.</source>
          <target state="translated">ルートテーブルに割り当てられたタグ。</target>
        </trans-unit>
        <trans-unit id="c99beb4ffb35194a8fca62377ccbf19b348f2098" translate="yes" xml:space="preserve">
          <source>Any valid &lt;code&gt;wget&lt;/code&gt; URL will work.</source>
          <target state="translated">有効な &lt;code&gt;wget&lt;/code&gt; URLはすべて機能します。</target>
        </trans-unit>
        <trans-unit id="c39a68b07bd4be237a1f3124f490ace970077e64" translate="yes" xml:space="preserve">
          <source>Any virtual private gateway (VGW) propagating routes.</source>
          <target state="translated">ルートを伝播する任意の仮想プライベートゲートウェイ(VGW)。</target>
        </trans-unit>
        <trans-unit id="24e0483517ac44396ece43fe809bc1c9cee64498" translate="yes" xml:space="preserve">
          <source>Anyone can find and use public packages</source>
          <target state="translated">誰でも公開されているパッケージを見つけて利用することができます。</target>
        </trans-unit>
        <trans-unit id="ff6fa097c038f5ab29c8c1a23a621018b38db45b" translate="yes" xml:space="preserve">
          <source>Anyone who is asked to stop unacceptable behavior is expected to comply immediately.</source>
          <target state="translated">容認できない行動を止めるように求められた者は、直ちにこれに応じることが期待されます。</target>
        </trans-unit>
        <trans-unit id="5269a468e70bc4d1896a8572169eb130c72e2ca4" translate="yes" xml:space="preserve">
          <source>Anything that can be done with Ruby can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In Ruby, the conditionals &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are false; every other conditional is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">式（if、unlessなど）、caseステートメント、ループステートメント、配列、ハッシュ、変数など、Rubyで実行できるすべてのものをレシピ内で使用できます。 Rubyでは、条件 &lt;code&gt;nil&lt;/code&gt; および &lt;code&gt;false&lt;/code&gt; はfalseです。他のすべての条件は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6b5eb5323ebdf9967a47d00f6cd95e50c095cb54" translate="yes" xml:space="preserve">
          <source>Apache 2.0</source>
          <target state="translated">アパッチ2.</target>
        </trans-unit>
        <trans-unit id="f64224c20bb2a6d06fed4766f55344f934934dbd" translate="yes" xml:space="preserve">
          <source>Apache Mesos and DC/OS</source>
          <target state="translated">Apache Mesos と DC/OS</target>
        </trans-unit>
        <trans-unit id="327347ee8d3a0f9bb3a74835ec6a91f7a545513b" translate="yes" xml:space="preserve">
          <source>Apache Qpid</source>
          <target state="translated">アパッチキューピッド</target>
        </trans-unit>
        <trans-unit id="b6be50237f89783f0620e526091e23959d03f3a9" translate="yes" xml:space="preserve">
          <source>Apache Solr</source>
          <target state="translated">アパッチソル</target>
        </trans-unit>
        <trans-unit id="12a17ac8ef7d7f0a155b4e32aff84a8259a6063e" translate="yes" xml:space="preserve">
          <source>App Engine HTTP target. If the job providers a App Engine HTTP target the cron will send a request to the service instance</source>
          <target state="translated">App Engine HTTP ターゲット。ジョブが App Engine HTTP ターゲットを提供する場合、cron はサービス インスタンスの</target>
        </trans-unit>
        <trans-unit id="ba5ab6fdfd42f7df14b8868bb8cf4a1e672f99c0" translate="yes" xml:space="preserve">
          <source>App Engine Routing setting for the job.</source>
          <target state="translated">ジョブのApp Engine Routing設定。</target>
        </trans-unit>
        <trans-unit id="a38a75e2384ffe73d95f351f5bb12326e8d90722" translate="yes" xml:space="preserve">
          <source>App instance. By default, the job is sent to an instance which is available when the job is attempted.</source>
          <target state="translated">アプリのインスタンス。デフォルトでは、ジョブが試行されたときに利用可能なインスタンスに送信されます。</target>
        </trans-unit>
        <trans-unit id="336ae345f0b54116cd7c0a8f6c6dacb9c8b16db8" translate="yes" xml:space="preserve">
          <source>App service. By default, the job is sent to the service which is the default service when the job is attempted.</source>
          <target state="translated">App サービス。デフォルトでは、ジョブが試行されたときにデフォルトのサービスであるサービスにジョブが送信されます。</target>
        </trans-unit>
        <trans-unit id="8ffc989d5d5428448c94dc085ebd76d684df88d0" translate="yes" xml:space="preserve">
          <source>App version. By default, the job is sent to the version which is the default version when the job is attempted.</source>
          <target state="translated">アプリのバージョン。デフォルトでは、ジョブが試行されたときにデフォルトのバージョンであるバージョンに送信されます。</target>
        </trans-unit>
        <trans-unit id="da0d2a08b8d6882ddbddbaa18b1a2b8662628ed6" translate="yes" xml:space="preserve">
          <source>App whitelisting indicates if adaptive application controls are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">アプリのホワイトリストは、アダプティブアプリケーションコントロールが有効になっているかどうかを示します（ &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d04af15aa636a70a5023c30a71d4c7f5c9238e3b" translate="yes" xml:space="preserve">
          <source>AppArmor</source>
          <target state="translated">AppArmor</target>
        </trans-unit>
        <trans-unit id="76ba367a2d37e08c7a76a64a713d5341157c3543" translate="yes" xml:space="preserve">
          <source>Append cookbook versions to cookbooks. Set to &lt;code&gt;false&lt;/code&gt; to hide cookbook versions: &lt;code&gt;cookbooks/apache&lt;/code&gt;. Set to &lt;code&gt;true&lt;/code&gt; to show cookbook versions: &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; and/or &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt;. When this setting is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;knife download&lt;/code&gt; downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the Chef Infra Server is required. For example:</source>
          <target state="translated">クックブックのバージョンをクックブックに追加します。クックブックのバージョンを非表示にするには、 &lt;code&gt;false&lt;/code&gt; に設定します： &lt;code&gt;cookbooks/apache&lt;/code&gt; 。クックブックのバージョンを表示するには、 &lt;code&gt;true&lt;/code&gt; に設定します： &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; および/または &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt; 。この設定が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;knife download&lt;/code&gt; はすべてのクックブックバージョンをダウンロードします。これは、Chef InfraServer上のデータの完全なバックアップが必要な場合に役立ちます。例えば：</target>
        </trans-unit>
        <trans-unit id="ea938c5647f2489ca5e54a6d6b5fe26f12baae6d" translate="yes" xml:space="preserve">
          <source>Append cookbook versions to cookbooks. Set to &lt;code&gt;false&lt;/code&gt; to hide cookbook versions: &lt;code&gt;cookbooks/apache&lt;/code&gt;. Set to &lt;code&gt;true&lt;/code&gt; to show cookbook versions: &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; and/or &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt;. When this setting is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;knife download&lt;/code&gt; downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the Chef server is required. For example:</source>
          <target state="translated">クックブックにクックブックのバージョンを追加します。クックブックのバージョンを非表示にするには &lt;code&gt;false&lt;/code&gt; に設定します： &lt;code&gt;cookbooks/apache&lt;/code&gt; 。クックブックのバージョンを表示するには、 &lt;code&gt;true&lt;/code&gt; に設定します： &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; および/または &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt; 。この設定が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;knife download&lt;/code&gt; はすべてのクックブックバージョンをダウンロードします。これは、Chefサーバー上のデータの完全忠実なバックアップが必要な場合に役立ちます。例えば：</target>
        </trans-unit>
        <trans-unit id="a3a930ee9fa443f44bf0b63d2fd2b2b229fc4b41" translate="yes" xml:space="preserve">
          <source>Append to the log file instead of overwriting the log file on each run.</source>
          <target state="translated">実行のたびにログファイルを上書きするのではなく、ログファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="002d1acd04eb03151ec0da84016d3b7f00295bbc" translate="yes" xml:space="preserve">
          <source>Append users to groups</source>
          <target state="translated">ユーザーをグループに追加</target>
        </trans-unit>
        <trans-unit id="3f629807aac35bae09fba9db8b521354344f18e7" translate="yes" xml:space="preserve">
          <source>Appending Test Kitchen to the RubyGems file, .gitignore, and .thor</source>
          <target state="translated">RubyGemsファイル、.gitignore、.thorにTest Kitchenを追加します。</target>
        </trans-unit>
        <trans-unit id="13a3b31c4b05dead96f8104cca3f4e7206e10b86" translate="yes" xml:space="preserve">
          <source>Apple Enterprise Developer Account</source>
          <target state="translated">Apple Enterprise Developerアカウント</target>
        </trans-unit>
        <trans-unit id="7136e3fbdb8393932c4285ff6980427720d76f69" translate="yes" xml:space="preserve">
          <source>Apple XCode is installed on machines running Mac OS X; this application can be downloaded from Apple for free</source>
          <target state="translated">Apple XCodeはMac OS Xを実行しているマシンにインストールされています。このアプリケーションはAppleから無料でダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="2e3e2dc172b2e4a5456b7652f108e1dcb1b26adb" translate="yes" xml:space="preserve">
          <source>Apple generally supports the last three macOS releases, for example: 10.14, 10.15, and 11.0. Apple does not officially publish EOL dates.</source>
          <target state="translated">Appleは一般的に、10.14、10.15、11.0など、過去3回のmacOSのリリースをサポートしています。Appleは公式にEOLの日付を公表していません。</target>
        </trans-unit>
        <trans-unit id="dab2aff3745bc607a93adda2d0bf2c8d0c29fb2d" translate="yes" xml:space="preserve">
          <source>Apple macOS</source>
          <target state="translated">アップルマコス</target>
        </trans-unit>
        <trans-unit id="a1b0679ee59fc8ebc116caa5ae5fa2ad491cd8b2" translate="yes" xml:space="preserve">
          <source>Apple macOS 10.13</source>
          <target state="translated">アップル macOS 10.13</target>
        </trans-unit>
        <trans-unit id="e3cbc636ca9cdcf4d142d0be15090b9e7d14ab8a" translate="yes" xml:space="preserve">
          <source>Apple macOS SLA</source>
          <target state="translated">アップル macOS SLA</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="524dbe4bae007b1b968c60cbd91a98094a28e18b" translate="yes" xml:space="preserve">
          <source>Application Checks</source>
          <target state="translated">アプリケーションチェック</target>
        </trans-unit>
        <trans-unit id="1e5923dbf7ac1700cd14a544ce596f34bb876f0b" translate="yes" xml:space="preserve">
          <source>Application Lifecycle Hooks</source>
          <target state="translated">アプリケーションライフサイクルフック</target>
        </trans-unit>
        <trans-unit id="3252c8dd86809c12991ca3ce9c641976809cb4ca" translate="yes" xml:space="preserve">
          <source>Application Properties</source>
          <target state="translated">アプリケーションのプロパティ</target>
        </trans-unit>
        <trans-unit id="e0f3bc4d7f54ea60e87752a3830746c1cd457816" translate="yes" xml:space="preserve">
          <source>Application Rebuild Flow</source>
          <target state="translated">アプリケーションリビルドの流れ</target>
        </trans-unit>
        <trans-unit id="7f97e4616b36343fb454813ae885c0cb61aa730a" translate="yes" xml:space="preserve">
          <source>Application logs are created by the services directly, and may require log rotation policies to be applied based on organizational goals and the platform(s) on which the services are running.</source>
          <target state="translated">アプリケーションログはサービスによって直接作成され、組織の目標やサービスが実行されているプラットフォームに基づいてログローテーションポリシーを適用する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="aba8ab4d648e4bcbf488363787b80204ea1f64df" translate="yes" xml:space="preserve">
          <source>Application management to deploy and manage apps that you care about</source>
          <target state="translated">気になるアプリをデプロイして管理するアプリ管理</target>
        </trans-unit>
        <trans-unit id="0b54a95ce06000d3a3d1e0eae4f70eb9fd2f6909" translate="yes" xml:space="preserve">
          <source>Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating.</source>
          <target state="translated">アプリケーションレベルのチェックは定期的に行い、十分なディスク容量、十分なメモリ、フロントエンドとバックエンドのサービスが通信していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="59a6b4469e2ac1b54e66557342a8e61c4fc588fd" translate="yes" xml:space="preserve">
          <source>Applications Dashboard</source>
          <target state="translated">アプリケーション ダッシュボード</target>
        </trans-unit>
        <trans-unit id="84d9e3da1063e538e3e3210801c3d5b5c11d341e" translate="yes" xml:space="preserve">
          <source>Applications have two types of dependencies: buildtime and runtime.</source>
          <target state="translated">アプリケーションには、ビルドタイムとランタイムの2種類の依存関係があります。</target>
        </trans-unit>
        <trans-unit id="5ea69eaf79f52cfb0431900b82334d1da43d4912" translate="yes" xml:space="preserve">
          <source>Applies to Version</source>
          <target state="translated">バージョンに適用</target>
        </trans-unit>
        <trans-unit id="66f47502aaf6f028ce030611298b01162b5fc43b" translate="yes" xml:space="preserve">
          <source>Applies to parameters that reference information in other AWS services.</source>
          <target state="translated">他のAWSサービスの情報を参照するパラメータに適用します。</target>
        </trans-unit>
        <trans-unit id="f5157f6e3179761d7037aa0bae91c433a85cd999" translate="yes" xml:space="preserve">
          <source>Apply Chef Automate license</source>
          <target state="translated">Chef Automateのライセンスを適用する</target>
        </trans-unit>
        <trans-unit id="4fd8eb69a45c82d422f775dc3fbe628d15fc9491" translate="yes" xml:space="preserve">
          <source>Apply Chef Automate license token. - &amp;lt;LICENSE&amp;gt; must be valid encoded license string</source>
          <target state="translated">ChefAutomateライセンストークンを適用します。-&amp;lt;LICENSE&amp;gt;は有効なエンコードされたライセンス文字列である必要があります</target>
        </trans-unit>
        <trans-unit id="1d98ef7b1d21f6d3173da77516bfc24efea19095" translate="yes" xml:space="preserve">
          <source>Apply Configuration Changes</source>
          <target state="translated">設定変更の適用</target>
        </trans-unit>
        <trans-unit id="8adb161be26b1291d6882f30b7718853e5787d03" translate="yes" xml:space="preserve">
          <source>Apply Configuration Updates to all Services in a Service Group</source>
          <target state="translated">構成の更新をサービスグループ内のすべてのサービスに適用する</target>
        </trans-unit>
        <trans-unit id="6ede39585ba3d3eec47c9580c9e29686cad08c88" translate="yes" xml:space="preserve">
          <source>Apply Configuration Updates to an Individual Service</source>
          <target state="translated">個々のサービスへの設定更新の適用</target>
        </trans-unit>
        <trans-unit id="9a4b1c00a35ecaba39032e651d7077abcc7d193e" translate="yes" xml:space="preserve">
          <source>Apply a Resource to a Single Node over SSH</source>
          <target state="translated">SSH 経由で単一ノードにリソースを適用する</target>
        </trans-unit>
        <trans-unit id="d74ac94e890fa23d21840d2fe95a771e36005bca" translate="yes" xml:space="preserve">
          <source>Apply a partial Chef Automate configuration to the deployment. It will take the partial configuration, merge it with the existing configuration, and apply and required changes.</source>
          <target state="translated">Chef Automate の部分的な設定をデプロイメントに適用します。部分的な設定を取得し、既存の設定とマージし、必要な変更を適用します。</target>
        </trans-unit>
        <trans-unit id="30cf06a6812e8f7c38b58a548b73ec7a613b2003" translate="yes" xml:space="preserve">
          <source>Apply a predefined set of default object access controls to this bucket. Acceptable values are: - &amp;ldquo;authenticatedRead&amp;rdquo;: Object owner gets OWNER access, and allAuthenticatedUsers get READER access. - &amp;ldquo;bucketOwnerFullControl&amp;rdquo;: Object owner gets OWNER access, and project team owners get OWNER access. - &amp;ldquo;bucketOwnerRead&amp;rdquo;: Object owner gets OWNER access, and project team owners get READER access. - &amp;ldquo;private&amp;rdquo;: Object owner gets OWNER access. - &amp;ldquo;projectPrivate&amp;rdquo;: Object owner gets OWNER access, and project team members get access according to their roles. - &amp;ldquo;publicRead&amp;rdquo;: Object owner gets OWNER access, and allUsers get READER access.</source>
          <target state="translated">事前定義されたデフォルトのオブジェクトアクセス制御のセットをこのバケットに適用します。許容値は次のとおりです。-「authenticatedRead」：オブジェクト所有者はOWNERアクセスを取得し、allAuthenticatedUsersはREADERアクセスを取得します。-「bucketOwnerFullControl」：オブジェクト所有者はOWNERアクセスを取得し、プロジェクトチーム所有者はOWNERアクセスを取得します。-「bucketOwnerRead」：オブジェクトの所有者はOWNERアクセスを取得し、プロジェクトチームの所有者はREADERアクセスを取得します。-「プライベート」：オブジェクト所有者はOWNERアクセスを取得します。-「projectPrivate」：オブジェクト所有者はOWNERアクセスを取得し、プロジェクトチームメンバーは役割に応じてアクセスを取得します。-「publicRead」：オブジェクトの所有者はOWNERアクセスを取得し、allUsersはREADERアクセスを取得します。</target>
        </trans-unit>
        <trans-unit id="905ac905aa96c9d999fec86db42f9d47b856e803" translate="yes" xml:space="preserve">
          <source>Apply atomic file updates to all resources. Set to &lt;code&gt;true&lt;/code&gt; for global atomic file updates. Set to &lt;code&gt;false&lt;/code&gt; for global non-atomic file updates. (Use the &lt;code&gt;atomic_update&lt;/code&gt; setting on a per-resource basis to override this setting.) Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">すべてのリソースにアトミックファイルの更新を適用します。グローバルなアトミックファイルの更新に対して &lt;code&gt;true&lt;/code&gt; に設定します。グローバルな非アトミックファイル更新の場合は &lt;code&gt;false&lt;/code&gt; に設定します。（この設定をオーバーライドするには、リソースごとに &lt;code&gt;atomic_update&lt;/code&gt; 設定を使用します。）デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ed75b4414eab655f17a6401089b6c1b28e0168" translate="yes" xml:space="preserve">
          <source>Apply more filters to this initial list if desired. Specific filter values populate according to available desktop information and include the categories of &amp;ldquo;platform,&amp;rdquo; &amp;ldquo;environment,&amp;rdquo; &amp;ldquo;domain,&amp;rdquo; and &amp;ldquo;last run status.&amp;rdquo;</source>
          <target state="translated">必要に応じて、この初期リストにさらにフィルターを適用します。特定のフィルター値は、利用可能なデスクトップ情報に従って入力され、「プラットフォーム」、「環境」、「ドメイン」、および「最終実行ステータス」のカテゴリが含まれます。</target>
        </trans-unit>
        <trans-unit id="95acfe68e4da5365368d8c25e2eaf96c49a76edb" translate="yes" xml:space="preserve">
          <source>Apply proxy settings consistently across a Chef organization</source>
          <target state="translated">プロキシ設定をChef組織全体に一貫して適用</target>
        </trans-unit>
        <trans-unit id="d78cd2d87d88217c9464c4d449209509de07587a" translate="yes" xml:space="preserve">
          <source>Apply the Chef Desktop Policy</source>
          <target state="translated">Chefデスクトップポリシーの適用</target>
        </trans-unit>
        <trans-unit id="67d7add3e4f5cdd1a938b1aaf4cd4332013bdb47" translate="yes" xml:space="preserve">
          <source>Apply the Cookbooks to the Images</source>
          <target state="translated">クックブックを画像に適用する</target>
        </trans-unit>
        <trans-unit id="1325dcf55a42098d2b9976de3e41a257f9425644" translate="yes" xml:space="preserve">
          <source>Apply the Desktop Cookbook to VMs</source>
          <target state="translated">デスクトップクックブックをVMに適用する</target>
        </trans-unit>
        <trans-unit id="afe02812e49c471dd67ec39c245915319f61e987" translate="yes" xml:space="preserve">
          <source>Apply the configuration change with &lt;code&gt;chef-automate config patch FILENAME.TOML&lt;/code&gt;. You should see output similar to:</source>
          <target state="translated">&lt;code&gt;chef-automate config patch FILENAME.TOML&lt;/code&gt; 構成パッチFILENAME.TOMLを使用して構成変更を適用します。次のような出力が表示されます。</target>
        </trans-unit>
        <trans-unit id="ceb3ac3e917b40ebd85698369989e3d053ec2bf3" translate="yes" xml:space="preserve">
          <source>Apply the configuration:</source>
          <target state="translated">設定を適用します。</target>
        </trans-unit>
        <trans-unit id="1fed5e68d9a76f9d4a0071a7c7bcab57f224d52c" translate="yes" xml:space="preserve">
          <source>Apply the corrective action.</source>
          <target state="translated">是正処置を適用する。</target>
        </trans-unit>
        <trans-unit id="bf2af64c1e90bd83ae262f9ce974960d256856c9" translate="yes" xml:space="preserve">
          <source>Apply the new change to your Chef Habitat config:</source>
          <target state="translated">新しい変更をChef Habitatの設定に適用します。</target>
        </trans-unit>
        <trans-unit id="53aaf4d13065a58208ca8fba48214d6f67fb9bde" translate="yes" xml:space="preserve">
          <source>Apply the patch to the Chef Automate installation:</source>
          <target state="translated">Chef Automateインストールにパッチを適用します。</target>
        </trans-unit>
        <trans-unit id="54ec507c0ec8ec62e977d81f32b10dcb2b6884f9" translate="yes" xml:space="preserve">
          <source>Apply to Run-lists</source>
          <target state="translated">ランリストに適用</target>
        </trans-unit>
        <trans-unit id="097d5324e7ff1f9771b5876e3064ebf68dcc7f0e" translate="yes" xml:space="preserve">
          <source>Apply your configuration changes with the Chef Automate command-line tool:</source>
          <target state="translated">Chef Automateコマンドラインツールで設定変更を適用します。</target>
        </trans-unit>
        <trans-unit id="711940865c5d501c8dfcff2f7caa34d68ea61319" translate="yes" xml:space="preserve">
          <source>Applying a Resource to a Single Node over WinRM</source>
          <target state="translated">WinRM上の単一ノードへのリソースの適用</target>
        </trans-unit>
        <trans-unit id="8cc047ac17d3d845efb05b9097f3496c8768b444" translate="yes" xml:space="preserve">
          <source>Approval</source>
          <target state="translated">Approval</target>
        </trans-unit>
        <trans-unit id="87913004ecb5df4f9eb23e9e41c192053a4a81c0" translate="yes" xml:space="preserve">
          <source>Approve a Change</source>
          <target state="translated">変更の承認</target>
        </trans-unit>
        <trans-unit id="2f73aad640af5b964b0af02b72773d86d0d0cff1" translate="yes" xml:space="preserve">
          <source>Approving a Change (Merging a Pull Request)</source>
          <target state="translated">変更の承認(プルリクエストのマージ</target>
        </trans-unit>
        <trans-unit id="d3c57ba8e27b0f6ac56b6bdeae5d37c8f0ccfe60" translate="yes" xml:space="preserve">
          <source>April 30, 2017</source>
          <target state="translated">2017年4月30日</target>
        </trans-unit>
        <trans-unit id="fc7a403bd8425d54852e6827ba37327336fd54e2" translate="yes" xml:space="preserve">
          <source>April 30, 2019</source>
          <target state="translated">2019年4月30日</target>
        </trans-unit>
        <trans-unit id="50a5f15a41e45b95d89bf6ba53811d0f7bc097c4" translate="yes" xml:space="preserve">
          <source>April 30, 2020</source>
          <target state="translated">2020年4月30日</target>
        </trans-unit>
        <trans-unit id="0b7a008e8921917dcd6969b063165e335277d2b0" translate="yes" xml:space="preserve">
          <source>April 30, 2021</source>
          <target state="translated">2021年4月30日</target>
        </trans-unit>
        <trans-unit id="e585e33590758bde030c11ec26a7c7c2c8074924" translate="yes" xml:space="preserve">
          <source>April 30, 2022</source>
          <target state="translated">2022年4月30日</target>
        </trans-unit>
        <trans-unit id="6df5bdeb9cc3d8365df07cf5d91c69226a66e079" translate="yes" xml:space="preserve">
          <source>Apt (Debian and Ubuntu platforms)</source>
          <target state="translated">Apt (Debian と Ubuntu プラットフォーム)</target>
        </trans-unit>
        <trans-unit id="82f296cf2e676313e5f813af0b25ff521611d80a" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using GNU Wget. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">GNU Wgetの使用時にbootstrapコマンドに追加される任意のオプション。このオプションは、 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; と同じコマンドでは使用できません。</target>
        </trans-unit>
        <trans-unit id="29618365e98e41a272e8073b1da7d4d84c52e0f1" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using cURL. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">cURLの使用時にbootstrapコマンドに追加される任意のオプション。このオプションは、 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; と同じコマンドでは使用できません。</target>
        </trans-unit>
        <trans-unit id="0a89342e9fcb31a038f4068e38847b411ea691af" translate="yes" xml:space="preserve">
          <source>Arch Linux</source>
          <target state="translated">アーチリナックス</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="fe3a04b5646a3d7a4330fa27e5e6e2460ddd621d" translate="yes" xml:space="preserve">
          <source>Archive a profile to tar.gz (default) or zip</source>
          <target state="translated">プロファイルを tar.gz (デフォルト)または zip にアーカイブします。</target>
        </trans-unit>
        <trans-unit id="2b5ce22f387dc478c587bf1eb5b82d00f6953ed5" translate="yes" xml:space="preserve">
          <source>Are all nodes and/or clients in use? Clean up any extra nodes and clients. Use the &lt;code&gt;knife node list&lt;/code&gt;, &lt;code&gt;knife client list&lt;/code&gt;, and &lt;a href=&quot;../workstation/knife_status/index&quot;&gt;knife status&lt;/a&gt; commands to verify nodes and clients in use.</source>
          <target state="translated">すべてのノードやクライアントが使用されていますか？余分なノードとクライアントをクリーンアップします。使用中のノードとクライアントを確認するには、 &lt;code&gt;knife node list&lt;/code&gt; 、 &lt;code&gt;knife client list&lt;/code&gt; 、および&lt;a href=&quot;../workstation/knife_status/index&quot;&gt;knifestatus&lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="53b82aa6782d38757a638452293db06fae00a47e" translate="yes" xml:space="preserve">
          <source>Are grouped into recipes, which describe working configurations</source>
          <target state="translated">作業構成を記述するレシピにグループ化されています。</target>
        </trans-unit>
        <trans-unit id="b4dd967074f59c2eeec23bca3a31e924281cc066" translate="yes" xml:space="preserve">
          <source>Are not true resources</source>
          <target state="translated">真の資源ではない</target>
        </trans-unit>
        <trans-unit id="042b3e5bd6972c644359040a1ccf4b6236c1a1d4" translate="yes" xml:space="preserve">
          <source>Are processed when resource collection is compiled, not when a node is converged</source>
          <target state="translated">リソースコレクションがコンパイルされたときに処理され、ノードが収束したときに処理されるのではなく、リソースコレクションがコンパイルされたときに処理されます。</target>
        </trans-unit>
        <trans-unit id="7a7bcd8aef474878dcea1ffb778e537151e0ec2a" translate="yes" xml:space="preserve">
          <source>Are you supporting the &lt;code&gt;expect&lt;/code&gt; syntax?</source>
          <target state="translated">&lt;code&gt;expect&lt;/code&gt; 構文をサポートしていますか？</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="78cf54ad1abbe99ef5c6d865462564b4f0196d93" translate="yes" xml:space="preserve">
          <source>Arguments to pass to the target when the shortcut is executed.</source>
          <target state="translated">ショートカット実行時にターゲットに渡す引数。</target>
        </trans-unit>
        <trans-unit id="3f2f90b5ef730527132a6b958e629066ae2382f1" translate="yes" xml:space="preserve">
          <source>Array Syntax Shortcut</source>
          <target state="translated">配列構文のショートカット</target>
        </trans-unit>
        <trans-unit id="f3cdf5a69ee40aa43effff8ec07da6ff7623711a" translate="yes" xml:space="preserve">
          <source>Array of Access Keys belonging to each User.</source>
          <target state="translated">各ユーザに属するアクセスキーの配列。</target>
        </trans-unit>
        <trans-unit id="2f0bbe5f7c406882854d59a0ed3eb8a3031a7f24" translate="yes" xml:space="preserve">
          <source>Array of Subject Alternative Name entries, in format &lt;code&gt;DNS:example.com&lt;/code&gt; or &lt;code&gt;IP:1.2.3.4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DNS:example.com&lt;/code&gt; または &lt;code&gt;IP:1.2.3.4&lt;/code&gt; の形式のサブジェクト代替名エントリの配列。</target>
        </trans-unit>
        <trans-unit id="a9164eb67287d4dedeefb75a833008476d2bf57c" translate="yes" xml:space="preserve">
          <source>Array of key/values</source>
          <target state="translated">キー/値の配列</target>
        </trans-unit>
        <trans-unit id="f3430a2b73192f477788a02bedd25813c0852c47" translate="yes" xml:space="preserve">
          <source>Array of strings in the form &lt;code&gt;origin/name&lt;/code&gt;. Each string is the qualified name of a dependency of a service that was selected by the filter criteria. This list is de-duplicated.</source>
          <target state="translated">&lt;code&gt;origin/name&lt;/code&gt; の形式の文字列の配列。各文字列は、フィルター基準によって選択されたサービスの依存関係の修飾名です。このリストは重複排除されています。</target>
        </trans-unit>
        <trans-unit id="2feedf3b4e70ed652c404d25fc618bcb61858daf" translate="yes" xml:space="preserve">
          <source>Array of strings reflecting how the software package backing the services that matched the filter should be updated. Values include &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;rolling&lt;/code&gt;, and &lt;code&gt;at-once&lt;/code&gt;. See &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#using-updates&quot;&gt;the Habitat docs&lt;/a&gt; for implications of these values. This list is de-duplicated.</source>
          <target state="translated">フィルタに一致したサービスをサポートするソフトウェアパッケージを更新する方法を反映する文字列の配列。値には、 &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;rolling&lt;/code&gt; 、および &lt;code&gt;at-once&lt;/code&gt; が含まれます。これらの値の意味について&lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#using-updates&quot;&gt;は、Habitatのドキュメント&lt;/a&gt;を参照してください。このリストは重複排除されています。</target>
        </trans-unit>
        <trans-unit id="5dd44fba131f665223e14015664c3a1dcde4aa20" translate="yes" xml:space="preserve">
          <source>Array of strings reflecting the topology of the matched services. Values include &lt;code&gt;standalone&lt;/code&gt; and &lt;code&gt;leader&lt;/code&gt; (for leader-follower). See &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#topologies&quot;&gt;the Habitat docs&lt;/a&gt; for implications of these values. This list is de-duplicated.</source>
          <target state="translated">一致したサービスのトポロジを反映する文字列の配列。値には、 &lt;code&gt;standalone&lt;/code&gt; と &lt;code&gt;leader&lt;/code&gt; （リーダーフォロワーの場合）が含まれます。これらの値の意味について&lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#topologies&quot;&gt;は、Habitatのドキュメント&lt;/a&gt;を参照してください。このリストは重複排除されています。</target>
        </trans-unit>
        <trans-unit id="d8af9d945bcada19c6bd9778ff360ef8bb909522" translate="yes" xml:space="preserve">
          <source>Array of strings. A list of the packages that this service depends on, in the form of &lt;code&gt;dep_origin/dep_name/1.2.3/20190325123456&lt;/code&gt;. This value may be difficult to compare, because the version identifier (&lt;code&gt;1.2.3&lt;/code&gt;, the third component) may be formatted in any way the maintainer of the project chooses; they need not be of the form &lt;code&gt;1.2.3&lt;/code&gt;.</source>
          <target state="translated">文字列の配列。このサービスが依存するパッケージのリスト（ &lt;code&gt;dep_origin/dep_name/1.2.3/20190325123456&lt;/code&gt; の形式)。バージョン識別子（ &lt;code&gt;1.2.3&lt;/code&gt; 、3番目のコンポーネント）はプロジェクトのメンテナが選択した方法でフォーマットされる可能性があるため、この値を比較するのは難しい場合があります。それらは &lt;code&gt;1.2.3&lt;/code&gt; の形式である必要はありません。</target>
        </trans-unit>
        <trans-unit id="e01c7d90bdfc6304425e164e40004724e873173d" translate="yes" xml:space="preserve">
          <source>Array of strings. A list of the packages that this service depends on, in the form of &lt;code&gt;dep_origin/dep_name&lt;/code&gt;. This property does not contain version information; see &lt;code&gt;dependency_ids&lt;/code&gt; for that.</source>
          <target state="translated">文字列の配列。このサービスが依存するパッケージのリスト（ &lt;code&gt;dep_origin/dep_name&lt;/code&gt; の形式)。このプロパティにはバージョン情報は含まれていません。それについては &lt;code&gt;dependency_ids&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7aaadd6e2aa490959a025393e5a8bdc62304bb3f" translate="yes" xml:space="preserve">
          <source>Array of strings. Each string is a 14-digit timestamp, in the format &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt;. The timestamp reflects the time at which the package backing the package was released. These strings are sortable and comparable. This list is de-duplicated.</source>
          <target state="translated">文字列の配列。各文字列は、 &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt; の形式の14桁のタイムスタンプです。タイムスタンプは、パッケージをサポートするパッケージがリリースされた時刻を反映しています。これらの文字列は並べ替え可能で比較可能です。このリストは重複排除されています。</target>
        </trans-unit>
        <trans-unit id="fd4276147b5021c5e9c065a0d8c2be5ef4f6d832" translate="yes" xml:space="preserve">
          <source>Array of strings. Each string is a 14-digit timestamp, in the format &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt;. The timestamp reflects the time at which the package backing the service was released. These strings are sortable and comparable. This list is de-duplicated.</source>
          <target state="translated">文字列の配列。各文字列は、 &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt; の形式の14桁のタイムスタンプです。タイムスタンプは、サービスをサポートするパッケージがリリースされた時刻を反映しています。これらの文字列は並べ替え可能で比較可能です。このリストは重複排除されています。</target>
        </trans-unit>
        <trans-unit id="49d6ff7f2809fccdf2944c4f4e1152edc0d85a74" translate="yes" xml:space="preserve">
          <source>Array of strings. The names of the origins that created the matched packages. This list is de-duplicated.</source>
          <target state="translated">文字列の配列。一致したパッケージを作成したオリジンの名前。このリストは重複排除されます。</target>
        </trans-unit>
        <trans-unit id="8bd78ca0162453e6f508523a0892d56b20d85924" translate="yes" xml:space="preserve">
          <source>Array of strings. The names of the origins that created the packages that backs the services that were matched. This list is de-duplicated.</source>
          <target state="translated">文字列の配列。マッチしたサービスをバックアップするパッケージを作成したオリジンの名前。このリストは重複排除されます。</target>
        </trans-unit>
        <trans-unit id="bf0bda43c87d476d73bf4518472d420a96ec4818" translate="yes" xml:space="preserve">
          <source>Array of strings. The unqualified name of the package, such as &amp;lsquo;httpd&amp;rsquo;. This list is de-duplicated, though a name is almost always unique anyway.</source>
          <target state="translated">文字列の配列。'httpd'などのパッケージの非修飾名。このリストは重複排除されていますが、名前はほとんどの場合一意です。</target>
        </trans-unit>
        <trans-unit id="51d397e18bb5b6677af3054fbfa88fa30db23227" translate="yes" xml:space="preserve">
          <source>Array of strings. The unqualified name of the service, such as &amp;lsquo;httpd&amp;rsquo;. This list is de-duplicated, though a name is almost always unique anyway.</source>
          <target state="translated">文字列の配列。'httpd'などのサービスの非修飾名。このリストは重複排除されていますが、名前はほとんどの場合一意です。</target>
        </trans-unit>
        <trans-unit id="27924726f5af77d727578664bc1ddaa9af0701ce" translate="yes" xml:space="preserve">
          <source>Array of users associated with the group.</source>
          <target state="translated">グループに関連付けられたユーザーの配列。</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="c3992cc80d638f9072ed1c7dfb86d0a915246508" translate="yes" xml:space="preserve">
          <source>Arrays: Use square brackets with comma-separated entries of the same type.</source>
          <target state="translated">配列。同じ型のカンマで区切られたエントリには角括弧を使用します。</target>
        </trans-unit>
        <trans-unit id="b04686fd32ab7ba63c1696966929efa4c0059b34" translate="yes" xml:space="preserve">
          <source>Artifact repository name. &lt;code&gt;stable&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt; or &lt;code&gt;unstable&lt;/code&gt;.</source>
          <target state="translated">アーティファクトリポジトリ名。 &lt;code&gt;stable&lt;/code&gt; 、 &lt;code&gt;current&lt;/code&gt; または &lt;code&gt;unstable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91ab328c6f2d8c37e9f358e14dacb5389b2b1517" translate="yes" xml:space="preserve">
          <source>Artifacts are the cryptographically-signed tarballs that are uploaded, downloaded, unpacked, and installed in Chef Habitat. They are built from shell scripts known as plans, but may also include application lifecycle hooks and service configuration files that describe the behavior and configuration of a running service.</source>
          <target state="translated">アーティファクトとは、アップロード、ダウンロード、解凍、Chef Habitatにインストールされる暗号化されたターボールのことです。アーティファクトは、プランと呼ばれるシェルスクリプトから構築されますが、アプリケーションのライフサイクルフックや、実行中のサービスの動作や設定を記述するサービス設定ファイルを含むこともあります。</target>
        </trans-unit>
        <trans-unit id="0e022a55ef92d318132767c186b37f2df0275c53" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;chef_zero&lt;/code&gt; explicitly tests outside the context of a Chef Infra Server, the &lt;code&gt;policy_groups&lt;/code&gt; concept is not applicable. The value of &lt;code&gt;policy_group&lt;/code&gt; during a converge will be set to &lt;code&gt;local&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;chef_zero&lt;/code&gt; が明示的シェフインフラサーバーのコンテキストの外側でテストし、 &lt;code&gt;policy_groups&lt;/code&gt; の概念が適用されません。値 &lt;code&gt;policy_group&lt;/code&gt; 収束時には次のように設定されます &lt;code&gt;local&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c1402e6730864716225ca2784c01886c7aa9151" translate="yes" xml:space="preserve">
          <source>As JSON (i.e. a file that ends with &lt;code&gt;.json&lt;/code&gt;)</source>
          <target state="translated">JSONとして（つまり、 &lt;code&gt;.json&lt;/code&gt; で終わるファイル）</target>
        </trans-unit>
        <trans-unit id="41dfb1eb40124283bba2d6e3ef98ffce50c1cf34" translate="yes" xml:space="preserve">
          <source>As Ruby (i.e. a file that ends with &lt;code&gt;.rb&lt;/code&gt;); this format is not available when running Chef Infra Client in local mode</source>
          <target state="translated">Rubyとして（つまり、 &lt;code&gt;.rb&lt;/code&gt; で終わるファイル）; Chef Infra Clientをローカルモードで実行している場合、この形式は使用できません</target>
        </trans-unit>
        <trans-unit id="6a09f1dbbefc728fae4525ca35dcc3f1bf2c58ed" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;../../glossary/index#plural_resource&quot;&gt;plural resource&lt;/a&gt;, all of &lt;code&gt;shadow&lt;/code&gt;&amp;rsquo;s properties return lists (that is, Ruby Arrays). &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;be_empty&lt;/code&gt; are two useful matchers when working with lists. You can also perform manipulation of the lists, such as calling &lt;code&gt;uniq&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../glossary/index#plural_resource&quot;&gt;複数形のリソース&lt;/a&gt;として、 &lt;code&gt;shadow&lt;/code&gt; のすべてのプロパティはリスト（つまり、Ruby配列）を返します。 &lt;code&gt;include&lt;/code&gt; と &lt;code&gt;be_empty&lt;/code&gt; は、リストを操作するときに役立つ2つのマッチャーです。また、 &lt;code&gt;uniq&lt;/code&gt; 、 &lt;code&gt;sort&lt;/code&gt; 、 &lt;code&gt;count&lt;/code&gt; 、 &lt;code&gt;first&lt;/code&gt; 、 &lt;code&gt;last&lt;/code&gt; 、 &lt;code&gt;min&lt;/code&gt; 、 &lt;code&gt;max&lt;/code&gt; の呼び出しなど、リストの操作を実行することもできます。</target>
        </trans-unit>
        <trans-unit id="cb57eb70fd0214151fa6fd571b44b9fd6c3a34eb" translate="yes" xml:space="preserve">
          <source>As a Definition</source>
          <target state="translated">定義として</target>
        </trans-unit>
        <trans-unit id="1937aa03d59efa11b8c33c539dafa16cad84b164" translate="yes" xml:space="preserve">
          <source>As a Resource</source>
          <target state="translated">リソースとして</target>
        </trans-unit>
        <trans-unit id="9a5f981af73c4e1a06349b1fb25d805fb7ee7294" translate="yes" xml:space="preserve">
          <source>As a Supermarket feature, Fieri must be enabled via the &lt;code&gt;default['supermarket']['features']&lt;/code&gt; option.</source>
          <target state="translated">スーパーマーケットの機能として、Fieriは &lt;code&gt;default['supermarket']['features']&lt;/code&gt; オプションを介して有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="4719295f9c3ce7cdb29bdf303bbda91dd9b01f34" translate="yes" xml:space="preserve">
          <source>As a Supermarket feature, GitHub must be enabled via the &lt;code&gt;default['supermarket']['features']&lt;/code&gt; option.</source>
          <target state="translated">スーパーマーケットの機能として、GitHubは &lt;code&gt;default['supermarket']['features']&lt;/code&gt; オプションを介して有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="4439f7ca605c1bbf2934c7bd4484b0df398443aa" translate="yes" xml:space="preserve">
          <source>As a community that meets in physical public spaces, harassment also includes:</source>
          <target state="translated">物理的な公共空間で集まるコミュニティとして、ハラスメントも含まれています。</target>
        </trans-unit>
        <trans-unit id="51eb914152e8b02bf3646602e294cbe3d552f695" translate="yes" xml:space="preserve">
          <source>As a general rule, limit the number of heading levels to no more than two within a topic. There can be exceptions, especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what&amp;rsquo;s in it.</source>
          <target state="translated">原則として、トピック内の見出しレベルの数は2つ以下に制限してください。特にドキュメントが非常に大きい場合は例外がありますが、HTML TOC構造には通常（表示側で）幅の制限があり、TOC内の構造が多いほど、ユーザーがその内容を理解するのが難しくなる可能性があることに注意してください。 。</target>
        </trans-unit>
        <trans-unit id="188d36388d4541a2b90f875e5e2275e869a12568" translate="yes" xml:space="preserve">
          <source>As a general standard, Chef requires every contribution to by signed for the Developer Certificate of Origin (DCO).</source>
          <target state="translated">一般的な基準として、シェフは、すべての貢献は、開発者の起源の証明書(DCO)のために署名されたものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ba110bf9761ce57095d29b358efff015231406ac" translate="yes" xml:space="preserve">
          <source>As a point of reference: as of September 2017 after three years of operation, the public Supermarket has approx 70,000 users, 3,300 cookbooks with a total of 20,000 versions published. The PostgreSQL database weighs in at 310 MB (50 MB when exported with &lt;code&gt;pg_dump&lt;/code&gt;), and the S3 bucket containing all of the published community cookbooks weighs in at 2.7 GB</source>
          <target state="translated">参考までに：2017年9月現在、3年間の運営を経て、公共スーパーマーケットには約70,000人のユーザー、3,300冊の料理本があり、合計20,000のバージョンが発行されています。PostgreSQLデータベースの重量は &lt;code&gt;pg_dump&lt;/code&gt; エクスポートした場合は50 MB ）であり、公開されているすべてのコミュニティクックブックを含むS3バケットの重量は2.7GBです。</target>
        </trans-unit>
        <trans-unit id="d58414cdf1abbf4e545f7919a22267ef9bccf319" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef Automate package on the server, using the name of the package provided by Chef.</source>
          <target state="translated">ルートユーザーとして、Chefが提供するパッケージ名を使用して、Chef Automateパッケージをサーバーにインストールします。</target>
        </trans-unit>
        <trans-unit id="ff73e7e9684079264f8fb0e508574e39934bf52b" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef Infra Server package on the server, using the name of the package provided by Chef. For Red Hat Enterprise Linux and CentOS:</source>
          <target state="translated">rootユーザーとして、Chefが提供するパッケージ名を使用して、Chef Infra Serverパッケージをサーバーにインストールします。Red Hat Enterprise LinuxおよびCentOSの場合。</target>
        </trans-unit>
        <trans-unit id="5b8b4f2c6672b008f7fc20ac6996ac59cdb452f5" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef server package on the server, using the name of the package provided by Chef. For Red Hat and CentOS 6:</source>
          <target state="translated">rootユーザーとして、Chefから提供されたパッケージ名を使用して、Chefサーバパッケージをサーバにインストールします。Red Hat と CentOS 6 の場合。</target>
        </trans-unit>
        <trans-unit id="6b002378d5afd108565ac8ca42d52d113993b8b3" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, changes are obvious fixes if they do not introduce any new functionality or creative thinking. As long as the change does not affect functionality, some likely examples include the following:</source>
          <target state="translated">経験則として、新しい機能性や創造的思考を導入しない場合、変更は明らかな修正です。変更が機能に影響を与えない限り、以下のような例が考えられます。</target>
        </trans-unit>
        <trans-unit id="99c7419a9519cbcab8661b23a48370dc9eedeb2d" translate="yes" xml:space="preserve">
          <source>As a single &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">単一の &lt;code&gt;String&lt;/code&gt; として</target>
        </trans-unit>
        <trans-unit id="77dba9ad5f389c46c4a221b9a9948a53e6c42d22" translate="yes" xml:space="preserve">
          <source>As a single package:</source>
          <target state="translated">1つのパッケージとして。</target>
        </trans-unit>
        <trans-unit id="ccea1d4fcbb4df07e323cd17558c335f0db3840b" translate="yes" xml:space="preserve">
          <source>As a user that is a member of the &lt;code&gt;admins&lt;/code&gt; group, replace &lt;code&gt;ORGNAME&lt;/code&gt; with your own &lt;code&gt;ORGNAME&lt;/code&gt; and run:</source>
          <target state="translated">メンバーであるユーザーとして、 &lt;code&gt;admins&lt;/code&gt; グループ、置き換え &lt;code&gt;ORGNAME&lt;/code&gt; をあなた自身で &lt;code&gt;ORGNAME&lt;/code&gt; と実行：</target>
        </trans-unit>
        <trans-unit id="f33767a4f515517fa57646bd8b3174c7b5fcd350" translate="yes" xml:space="preserve">
          <source>As a way to start to understand plans, let&amp;rsquo;s look at an example &lt;code&gt;plan.sh&lt;/code&gt; for &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;sqlite&lt;/a&gt;:</source>
          <target state="translated">計画を理解するために開始するための方法として、例えばで見てみましょう &lt;code&gt;plan.sh&lt;/code&gt; のため&lt;a href=&quot;https://www.sqlite.org/&quot;&gt;のsqlite&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5f664b51f16c34e3865417a7e61a195bc818957d" translate="yes" xml:space="preserve">
          <source>As an array of packages:</source>
          <target state="translated">パッケージの配列として。</target>
        </trans-unit>
        <trans-unit id="b36234f36f3836f47cb6970bbf6bd451d60da7b3" translate="yes" xml:space="preserve">
          <source>As an array:</source>
          <target state="translated">配列として</target>
        </trans-unit>
        <trans-unit id="bb465dbc82be8c1e30a4a1ba66c0e8c53f892421" translate="yes" xml:space="preserve">
          <source>As an enterprise admin, you can configure a SAML Service to enable single sign on. To do this from the Chef Automate UI, click on the &lt;code&gt;Admin&lt;/code&gt; menu item. From the &lt;code&gt;Admin&lt;/code&gt; screen, navigate to the SAML Setup tab. Once you are on the SAML Setup tab, you can configure the details necessary to integrate Chef Automate and SAML.</source>
          <target state="translated">エンタープライズ管理者は、シングルサインオンを有効にするようにSAMLサービスを構成できます。Chef Automate UIからこれを行うには、[ &lt;code&gt;Admin&lt;/code&gt; ]メニュー項目をクリックします。以下からの &lt;code&gt;Admin&lt;/code&gt; 画面、SAMLの設定]タブに移動します。[SAMLセットアップ]タブが表示されたら、ChefAutomateとSAMLを統合するために必要な詳細を構成できます。</target>
        </trans-unit>
        <trans-unit id="d24c1c1580fccd4a61c028c335aba51d60e58221" translate="yes" xml:space="preserve">
          <source>As an enterprise administrator on the Workflow server, select &lt;strong&gt;Admin&lt;/strong&gt;.</source>
          <target state="translated">ワークフローサーバーのエンタープライズ管理者として、[&lt;strong&gt;管理者]を&lt;/strong&gt;選択します。</target>
        </trans-unit>
        <trans-unit id="1b8e0836d1d6fc947c9594527c79e4ae2daec2f1" translate="yes" xml:space="preserve">
          <source>As an example where you would previously use the attribute &lt;code&gt;node['digital_ocean']['networks']['v4'][0]['ipaddress']&lt;/code&gt; you would now use &lt;code&gt;node['digital_ocean']['interfaces']['public'][0]['ipv4']['ip_address']&lt;/code&gt;.</source>
          <target state="translated">以前は属性 &lt;code&gt;node['digital_ocean']['networks']['v4'][0]['ipaddress']&lt;/code&gt; を使用していた例として、 &lt;code&gt;node['digital_ocean']['interfaces']['public'][0]['ipv4']['ip_address']&lt;/code&gt; 使用します。 'public'] [0] ['ipv4'] ['ip_address']。</target>
        </trans-unit>
        <trans-unit id="ca1dc76309de21daeb0be1ad833e5ba63ba463b7" translate="yes" xml:space="preserve">
          <source>As an example, let us say that you, the admin, want to delegate a portion of your tasks to a colleague, but without granting them full admin access. In this case, you could create a policy called &lt;code&gt;Team Devops Managers&lt;/code&gt;, which grants its members some&amp;ndash;but not all&amp;ndash;administrative privileges. Create a JSON file in the editor of your choice. Following JSON syntax, begin with the name property.</source>
          <target state="translated">例として、管理者であるあなたが、タスクの一部を同僚に委任したいが、完全な管理者アクセスを許可しないとしましょう。この場合、 &lt;code&gt;Team Devops Managers&lt;/code&gt; と呼ばれるポリシーを作成できます。このポリシーは、メンバーにすべてではありませんが一部の管理者権限を付与します。選択したエディターでJSONファイルを作成します。JSON構文に従って、nameプロパティから始めます。</target>
        </trans-unit>
        <trans-unit id="824961084c41d1d0e06c586375889ab570d2f736" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s say we have an application server, called &lt;code&gt;session-server&lt;/code&gt;, that needs to connect to a database service, and needs both a &amp;ldquo;port&amp;rdquo; and an &amp;ldquo;ssl-port&amp;rdquo; in order to make that connection. We can describe this relationship in our &lt;code&gt;plan.sh&lt;/code&gt; file like so:</source>
          <target state="translated">例として、データベースサービスに接続する必要があり、その接続を確立するために「ポート」と「SSLポート」の両方を必要とする &lt;code&gt;session-server&lt;/code&gt; サーバーと呼ばれるアプリケーションサーバーがあるとします。この関係は、 &lt;code&gt;plan.sh&lt;/code&gt; ファイルで次のように説明できます。</target>
        </trans-unit>
        <trans-unit id="fd467d5eb9ddf9df5ee2053def7d685b7329b720" translate="yes" xml:space="preserve">
          <source>As an example, to retrieve users whos &lt;code&gt;external_authentication_uid&lt;/code&gt; is &lt;code&gt;jane@doe.com&lt;/code&gt;, you would do the following:</source>
          <target state="translated">例として、 &lt;code&gt;external_authentication_uid&lt;/code&gt; が &lt;code&gt;jane@doe.com&lt;/code&gt; であるユーザーを取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="80208fc9f498b6c05c623b5a77bf8e8d3cdd1818" translate="yes" xml:space="preserve">
          <source>As before, to help set up environment variables for the Studio, we&amp;rsquo;re going to use a &lt;a href=&quot;https://github.com/habitat-sh/core-plans/blob/master/bin/bootstrap/stage3-studio.sh&quot;&gt;stage3 Studio&lt;/a&gt; wrapper:</source>
          <target state="translated">以前と同様に、Studioの環境変数の設定を支援するために、&lt;a href=&quot;https://github.com/habitat-sh/core-plans/blob/master/bin/bootstrap/stage3-studio.sh&quot;&gt;stage3Studio&lt;/a&gt;ラッパーを使用します。</target>
        </trans-unit>
        <trans-unit id="c7b7fa5430a565dd38aeb417486e739f20800f27" translate="yes" xml:space="preserve">
          <source>As changes flow through the Chef Automate pipeline, they are tested in a series of runtime environments that are increasingly similar to the final runtime target environment.</source>
          <target state="translated">変更がChef Automateパイプラインを通過すると、変更は最終的なランタイムターゲット環境とますます類似した一連のランタイム環境でテストされます。</target>
        </trans-unit>
        <trans-unit id="30743a2583386e77ca704830eb7fc2ae8063a39d" translate="yes" xml:space="preserve">
          <source>As changes flow through the Workflow pipeline, they are tested in a series of runtime environments that are increasingly similar to the final runtime target environment.</source>
          <target state="translated">変更がワークフロー・パイプラインを通過すると、変更は最終的なランタイム・ターゲット環境にますます類似した一連のランタイム環境でテストされます。</target>
        </trans-unit>
        <trans-unit id="39ccec775994414d321cdec9a81f87a0b9b25c36" translate="yes" xml:space="preserve">
          <source>As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)</source>
          <target state="translated">RFC 1035(セクション5)およびRFC 1034(セクション3.6.1)で定義されているように</target>
        </trans-unit>
        <trans-unit id="6ece35d76eec96f8b1ccadce0b8fa2fda977ce93" translate="yes" xml:space="preserve">
          <source>As described above, dependency failures are breakages in your dependency graph, which keep the current project&amp;rsquo;s pipeline from being able to ship safely. You can see such failures as warnings on the change view in the Chef Automate server web UI. These failures are tracked because they allow Chef Automate to know which changes are safe to promote.</source>
          <target state="translated">上記のように、依存関係の失敗は依存関係グラフの破損であり、現在のプロジェクトのパイプラインを安全に出荷できなくなります。ChefAutomateサーバーのWebUIの変更ビューで、警告などの失敗を確認できます。これらの失敗は、Chef Automateがどの変更を安全にプロモートできるかを知ることができるため、追跡されます。</target>
        </trans-unit>
        <trans-unit id="612314ecf225893447a973aa64272337138e3097" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;../sup_crypto/index&quot;&gt;security overview&lt;/a&gt;, this process also requires the generation of a user key for every user making configuration updates to the Supervisor network.</source>
          <target state="translated">&lt;a href=&quot;../sup_crypto/index&quot;&gt;セキュリティの概要&lt;/a&gt;で説明されているように、このプロセスでは、スーパーバイザネットワークの構成を更新するすべてのユーザーに対してユーザーキーを生成する必要もあります。</target>
        </trans-unit>
        <trans-unit id="b87d8fbdf78eb0dd70e9176ee46e307e7469ad4c" translate="yes" xml:space="preserve">
          <source>As illustrated, updates of this kind are completely optional; you may prefer to move update responsibility to your container scheduler and treat your containers as immutable in this regard.</source>
          <target state="translated">図示されているように、この種の更新は完全に任意です。更新の責任をコンテナスケジューラに移して、コンテナをこの点では不変として扱う方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="ed8e13a2d2f91111f4bc5e3d2c4ccde30a897ecc" translate="yes" xml:space="preserve">
          <source>As in the past, the origin &amp;lsquo;Owner&amp;rsquo; has full read and write access to the origin. Only Owners can delete the origin or transfer ownership to another member.</source>
          <target state="translated">過去と同様に、オリジン「所有者」はオリジンへの完全な読み取りおよび書き込みアクセス権を持っています。所有者のみがオリジンを削除したり、所有権を別のメンバーに譲渡したりできます。</target>
        </trans-unit>
        <trans-unit id="694301e4aac123807ec2e77e95b83c0a769f6dbc" translate="yes" xml:space="preserve">
          <source>As in the stage2 build, we need to get the fully-qualified package identifier of the &lt;code&gt;core/hab-backline&lt;/code&gt; package we just built in stage2. You can use &lt;code&gt;ls -1 ./results-stage2/core-hab-backline-*.hart&lt;/code&gt; to list the artifact. The naming of this file will help you to figure out the package identifier. For now, let&amp;rsquo;s assume that the identifier corresponding to the artifact was &lt;code&gt;core/hab-backline/0.56.0/20180322181801&lt;/code&gt;.</source>
          <target state="translated">stage2ビルドと同様に、stage2でビルドした &lt;code&gt;core/hab-backline&lt;/code&gt; パッケージの完全修飾パッケージ識別子を取得する必要があります。 &lt;code&gt;ls -1 ./results-stage2/core-hab-backline-*.hart&lt;/code&gt; を使用して、アーティファクトを一覧表示できます。このファイルの名前は、パッケージ識別子を理解するのに役立ちます。今のところ、アーティファクトに対応する識別子が &lt;code&gt;core/hab-backline/0.56.0/20180322181801&lt;/code&gt; であると仮定しましょう。</target>
        </trans-unit>
        <trans-unit id="6a197692ef3f159bd24f40d6e4461a9b71a868fd" translate="yes" xml:space="preserve">
          <source>As installed (without specialized plugins), Chef InSpec supports several ways of setting inputs:</source>
          <target state="translated">インストールされている状態では(特別なプラグインを使用せずに)、Chef InSpec はいくつかの入力設定方法をサポートしています。</target>
        </trans-unit>
        <trans-unit id="36b3fe842fdb3c2c5cdbe60610f94e4ae216ec25" translate="yes" xml:space="preserve">
          <source>As long as a USER.pem is also present on the workstation from which the validatorless bootstrap operation will be initiated, the bootstrap operation will run and will use the USER.pem file instead of the ORGANIZATION-validator.pem file.</source>
          <target state="translated">バリデータレスブートストラップ操作を開始するワークステーションにUSER.pemが存在する限り、ブートストラップ操作は実行され、ORGANIZATION-validator.pemファイルの代わりにUSER.pemファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="eeec5b7abab54b7eff6260b4fd1604cd75de2e3f" translate="yes" xml:space="preserve">
          <source>As long as a file is in the correct directory structure, knife will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:</source>
          <target state="translated">ファイルが正しいディレクトリ構造にある限り、ナイフはデータバッグとデータバッグの項目名だけでデータバッグとデータバッグの項目を見つけることができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="5e3b209d83616410c5c6a42dfaefc0555bec65b8" translate="yes" xml:space="preserve">
          <source>As long as good source code management is practiced with cookbooks and other files in the chef-repo, any missing bits can be re-uploaded after there is a working cluster. In some cases, newly-created users or organizations will need to be re-created. Other actions, such as chef-client runs and uploads may fail while the cluster is in an &lt;code&gt;Inconsistent&lt;/code&gt; state, but will be fine after there is a working cluster.</source>
          <target state="translated">chef-repo内のクックブックやその他のファイルを使用して適切なソースコード管理を実行している限り、動作しているクラスターが存在した後、欠落しているビットを再アップロードできます。場合によっては、新しく作成されたユーザーまたは組織を再作成する必要があります。その他のアクション（chef-clientの実行やアップロードなど）は、クラスターが &lt;code&gt;Inconsistent&lt;/code&gt; 状態のときに失敗する可能性がありますが、稼働中のクラスターがあると問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="e70a6f522e3d147275506b32d993ec8274a8be1a" translate="yes" xml:space="preserve">
          <source>As long as you are already a member of the Habitat origin, once Builder possesses at least the public origin key, then you may upload one or more artifacts to that origin with the &lt;code&gt;hab pkg upload&lt;/code&gt; command. After Habitat validates the cryptographic integrity of the artifact, it is then uploaded and stored on Builder. Uploading artifacts is a privileged operation for which you must have the access token.</source>
          <target state="translated">すでにHabitatオリジンのメンバーである限り、Builderが少なくともパブリックオリジンキーを所有していると、 &lt;code&gt;hab pkg upload&lt;/code&gt; コマンドを使用してそのオリジンに1つ以上のアーティファクトをアップロードできます。Habitatがアーティファクトの暗号の整合性を検証した後、アーティファクトはアップロードされ、Builderに保存されます。アーティファクトのアップロードは、アクセストークンが必要な特権操作です。</target>
        </trans-unit>
        <trans-unit id="f898882f6f3abfc8dd92fb6d46c42cb921d79f2d" translate="yes" xml:space="preserve">
          <source>As mandated by the SSE protocol, each event has:</source>
          <target state="translated">SSEプロトコルで義務付けられているように、各イベントには以下があります。</target>
        </trans-unit>
        <trans-unit id="0683cdd5efcc541699d8571893de01d20f0704f7" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, including &lt;code&gt;&quot;public_key&quot;&lt;/code&gt;, &lt;code&gt;&quot;private_key&quot;&lt;/code&gt;, or &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; in PUT requests to clients/users will cause a 400 response.</source>
          <target state="translated">12.1.0以降、クライアント/ユーザーへのPUT要求に &lt;code&gt;&quot;public_key&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;private_key&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; を含めると、400応答が発生します。</target>
        </trans-unit>
        <trans-unit id="1c5d40edcea8ee6836d9abe8da1e04b6a0dac888" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is no longer supported in client/user creation and support. If used in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; of a client or user, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is ignored.</source>
          <target state="translated">12.1.0以降、 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; パラメーターはクライアント/ユーザーの作成とサポートでサポートされなくなりました。クライアントまたはユーザーの &lt;code&gt;POST&lt;/code&gt; または &lt;code&gt;PUT&lt;/code&gt; で使用される場合、 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; パラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="235bb6ef5dcfac1f3e3b11360f6e47334c7f27d3" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is no longer supported in client/user creation and support. If used in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; of a client or user, then it is ignored.</source>
          <target state="translated">12.1.0以降、 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; パラメーターはクライアント/ユーザーの作成とサポートでサポートされなくなりました。クライアントまたはユーザーの &lt;code&gt;POST&lt;/code&gt; または &lt;code&gt;PUT&lt;/code&gt; で使用される場合、それは無視されます。</target>
        </trans-unit>
        <trans-unit id="49ed1afebda1e7ebd86489bcfc8f4e859aab6f9b" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;public_key&quot;&lt;/code&gt;, &lt;code&gt;&quot;private_key&quot;&lt;/code&gt;, and &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; parameters in PUT requests to clients/users will cause a 400 response.</source>
          <target state="translated">12.1.0以降、クライアント/ユーザーへのPUT要求の &lt;code&gt;&quot;public_key&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;private_key&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; パラメーターは400応答を引き起こします。</target>
        </trans-unit>
        <trans-unit id="fd6ea5321314fd4a9fd8b832eaed02c3f4852a3d" translate="yes" xml:space="preserve">
          <source>As of April 2018, you are only permitted one configuration recorder per region.</source>
          <target state="translated">2018年4月現在、1地域につき1台のコンフィグレコーダーしか許可されていません。</target>
        </trans-unit>
        <trans-unit id="3331c19388db35ba575154f95f76cc5e5288170f" translate="yes" xml:space="preserve">
          <source>As of Automate 1.7.114, the compliance service uses a &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch index to improves the performance of the reporting APIs at scale. Automate creates this index automatically as part of the upgrade to Automate 1.7.114. The index is updated with each new compliance report. If the &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch index becomes out of sync with the time-series data, it can be regenerated using the &lt;code&gt;automate-ctl migrate-compliance&lt;/code&gt; subcommand. For more information, see &lt;a href=&quot;../ctl_automate_server/index#migrate-compliance&quot;&gt;migrate-compliance&lt;/a&gt;.</source>
          <target state="translated">Automate 1.7.114以降、コンプライアンスサービスは &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearchインデックスを使用して、レポートAPIのパフォーマンスを大規模に改善します。Automateは、Automate 1.7.114へのアップグレードの一環として、このインデックスを自動的に作成します。インデックスは、新しいコンプライアンスレポートごとに更新されます。場合 &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearchインデックスが時系列データと同期しなくなり、それを使って再生することができる &lt;code&gt;automate-ctl migrate-compliance&lt;/code&gt; サブコマンドを。詳細については、&lt;a href=&quot;../ctl_automate_server/index#migrate-compliance&quot;&gt;migrate-complianceを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e2b14b2b9ab67923a70b09fad0d1060314a8d091" translate="yes" xml:space="preserve">
          <source>As of Chef Automate 1.6.87, Kibana is no longer enabled by default. To enable it, see the &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/setup.html&quot;&gt;Kibana setup documentation&lt;/a&gt;. In prior versions of Chef Automate, Kibana and its authentication are enabled by default.</source>
          <target state="translated">Chef Automate 1.6.87以降、Kibanaはデフォルトで有効ではなくなりました。これを有効にするには、&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/setup.html&quot;&gt;Kibanaセットアップドキュメントを&lt;/a&gt;参照してください。Chef Automateの以前のバージョンでは、Kibanaとその認証がデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="837adb12d2f2e0fbe4e49f1391534a7f65d0830b" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 2.0, we have expanded our platform support beyond individual machines and now include support for select AWS and Azure resources.</source>
          <target state="translated">Chef InSpec 2.0では、プラットフォームのサポートが個々のマシンにとどまらず、現在では一部のAWSとAzureリソースのサポートが含まれるようになりました。</target>
        </trans-unit>
        <trans-unit id="c3ef777cd09016b95a5129a792958ed2e005e2ad" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 4.12, this mechanism has the following limitations:</source>
          <target state="translated">Chef InSpec 4.12の時点では、このメカニズムには以下の制限があります。</target>
        </trans-unit>
        <trans-unit id="8ab541aee459e188bf042e284708a0a626cafad5" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 4.3.2, this mechanism has the following limitations:</source>
          <target state="translated">Chef InSpec 4.3.2の時点では、このメカニズムには以下のような制限があります。</target>
        </trans-unit>
        <trans-unit id="198937498cd76e1fc906253495726f44ae907499" translate="yes" xml:space="preserve">
          <source>As of Chef Infra Client 15.x, Chef Infra Client ships with Ruby 2.6.</source>
          <target state="translated">Chef Infra Client 15.xの時点では、Chef Infra ClientはRuby 2.6で出荷されています。</target>
        </trans-unit>
        <trans-unit id="5286be69f633ce14be4492c967cf5c43edf71409" translate="yes" xml:space="preserve">
          <source>As of InSpec v4.16, resources are lazily loaded into the &lt;code&gt;inspec&lt;/code&gt; process upon use. This greatly speeds up the initial startup costs of the &lt;code&gt;inspec&lt;/code&gt; process and only loads what you need to use. For example, &lt;code&gt;inspec --version&lt;/code&gt; no longer runs for 10 seconds!.</source>
          <target state="translated">InSpec v4.16以降、リソースは使用 &lt;code&gt;inspec&lt;/code&gt; プロセスに遅延ロードされます。これにより、 &lt;code&gt;inspec&lt;/code&gt; プロセスの初期起動コストが大幅にスピードアップし、使用する必要があるものだけがロードされます。たとえば、 &lt;code&gt;inspec --version&lt;/code&gt; は10秒間実行されなくなりました！。</target>
        </trans-unit>
        <trans-unit id="1256bd8c8ca83c691714f3e34c0842b0b8b7aaeb" translate="yes" xml:space="preserve">
          <source>As of the end of life date, the application will no longer be supported by Chef and will no longer be available for download</source>
          <target state="translated">ライフ終了日をもって、このアプリケーションはChefのサポートを終了し、ダウンロードすることができなくなります。</target>
        </trans-unit>
        <trans-unit id="7779862e93d57c2b5cbd17b9ecbab2535b3a94d9" translate="yes" xml:space="preserve">
          <source>As of version 12.14, Chef Infra Server renders passwords inside of the &lt;code&gt;/etc/opscode&lt;/code&gt; directory by default. If you are using Chef Infra Server without add-ons, or if you are using the latest add-ons versions, you can set &lt;code&gt;insecure_addon_compat&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in `/etc/opscode/chef-server.rb. and Chef Infra Server will write all credentials to a single location.</source>
          <target state="translated">バージョン12.14以降、Chef &lt;code&gt;/etc/opscode&lt;/code&gt; はデフォルトで/ etc / opscodeディレクトリ内にパスワードをレンダリングします。アドオンなしでChefInfra Serverを使用している場合、または最新のアドオンバージョンを使用している場合は、 `/etc/opscode/chef-server.rbで &lt;code&gt;insecure_addon_compat&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定できます。Chef Infra Serverは、すべての資格情報を1つの場所に書き込みます。</target>
        </trans-unit>
        <trans-unit id="dbb89833bd41a876348c81c6f927a384cbaa6612" translate="yes" xml:space="preserve">
          <source>As packaged, Chef InSpec uses the following priority values:</source>
          <target state="translated">パッケージ化されているため、Chef InSpecでは以下の優先順位の値を使用しています。</target>
        </trans-unit>
        <trans-unit id="7f0f6eb43a2a02eade40d1faee96ba15cb7af150" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;every chef-client run&lt;/a&gt;, the chef-client authenticates to the Chef server using an RSA private key and the Chef server API.</source>
          <target state="translated">&lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;すべてのchef-client runの&lt;/a&gt;一部として、chef-clientはRSA秘密鍵とChefサーバーAPIを使用してChefサーバーに対して認証します。</target>
        </trans-unit>
        <trans-unit id="7c1f9099fa86077a0d4c01bfa85536c28d3fb1a8" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;../chef_client/index#the-chef-client-run&quot;&gt;every Chef Infra Client run&lt;/a&gt;, Chef Infra Client authenticates to the Chef Infra Server using an RSA private key and the Chef Infra Server API.</source>
          <target state="translated">&lt;a href=&quot;../chef_client/index#the-chef-client-run&quot;&gt;すべてのChefInfra Clientの実行の&lt;/a&gt;一部として、Chef Infra Clientは、RSA秘密鍵とChef Infra ServerAPIを使用してChefInfraServerに対して認証を行います。</target>
        </trans-unit>
        <trans-unit id="78a809875fd598f4ebb24027a649537aa079d58d" translate="yes" xml:space="preserve">
          <source>As part of the chef-client run, where audit-mode runs after all resources have been converged on the node</source>
          <target state="translated">chef-client実行の一部として、すべてのリソースがノードに収束した後に監査モードが実行されます。</target>
        </trans-unit>
        <trans-unit id="0ac44ce6a6033a358551bf709f190a3d06e962cf" translate="yes" xml:space="preserve">
          <source>As root on the Chef Infra Server, point to the bundled &lt;code&gt;eper&lt;/code&gt; package of debugging tools. Replace the 2nd and 5th path entries and the &lt;code&gt;X.XX.X&lt;/code&gt; value in the following path with the items that occur on the system.</source>
          <target state="translated">Chef Infra Serverのルートとして、デバッグツールのバンドルされた &lt;code&gt;eper&lt;/code&gt; パッケージをポイントします。次のパスの2番目と5番目のパスエントリと &lt;code&gt;X.XX.X&lt;/code&gt; 値を、システムで発生する項目に置き換えます。</target>
        </trans-unit>
        <trans-unit id="d7eb5ec947e5501e4246a28063a6471908e5ea2e" translate="yes" xml:space="preserve">
          <source>As root on the Chef server, point to the bundled &lt;code&gt;eper&lt;/code&gt; package of debugging tools. Replace the 2nd and 5th path entries and the &lt;code&gt;X.XX.X&lt;/code&gt; value in the following path with the items that occur on the system.</source>
          <target state="translated">Chefサーバーのルートとして、デバッグツールのバンドルされた &lt;code&gt;eper&lt;/code&gt; パッケージをポイントします。次のパスの2番目と5番目のパスエントリと &lt;code&gt;X.XX.X&lt;/code&gt; 値を、システムで発生するアイテムに置き換えます。</target>
        </trans-unit>
        <trans-unit id="1138858bbb9fddfc57f6ec382a070f4071ad01e4" translate="yes" xml:space="preserve">
          <source>As shown in an example above, there are occasions when you want to override the default behavior of the hab-plan-build script. The Plan syntax guide lists the default implementations for &lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;build phase callbacks&lt;/a&gt;, but if you need to reference specific packages in the process of building your applications or services, then you need to override the default implementations as in the example below.</source>
          <target state="translated">上記の例に示されているように、hab-plan-buildスクリプトのデフォルトの動作をオーバーライドしたい場合があります。Plan構文ガイドには、&lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;ビルドフェーズコールバックの&lt;/a&gt;デフォルトの実装がリストされていますが、アプリケーションまたはサービスのビルドプロセスで特定のパッケージを参照する必要がある場合は、以下の例のようにデフォルトの実装をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="6a8128533337906a86d2398d86c81126064f45e7" translate="yes" xml:space="preserve">
          <source>As specified in the SSE protocol, you may request all events since a particular ID by including the optional &lt;code&gt;Last-Event-ID&lt;/code&gt; Header. If the ID is omitted, or not recognized, the stream will start from the beginning of the job.</source>
          <target state="translated">SSEプロトコルで指定されているように、オプションの &lt;code&gt;Last-Event-ID&lt;/code&gt; ヘッダーを含めることにより、特定のID以降のすべてのイベントを要求できます。IDが省略されているか、認識されていない場合、ストリームはジョブの最初から開始されます。</target>
        </trans-unit>
        <trans-unit id="370ace03cae80d85f2cbfea8e9f79bfcdb74956c" translate="yes" xml:space="preserve">
          <source>As specified in the SSE protocol, you may request all events since a particular ID by including the optional &lt;code&gt;Last-Event-ID&lt;/code&gt; Header. If this header is not included, no events will be produced until the next activity in the organization produces an event. If the &lt;code&gt;Last-Event-ID&lt;/code&gt; header is passed but not recognized, it is assumed that the ID has already expired, and the feed will produce the events as far back as are recorded, proceeded by a synthetic &lt;code&gt;start_of_history&lt;/code&gt;. The expiration time of organization events is 60 seconds (configurable).</source>
          <target state="translated">SSEプロトコルで指定されているように、オプションの &lt;code&gt;Last-Event-ID&lt;/code&gt; ヘッダーを含めることにより、特定のID以降のすべてのイベントを要求できます。このヘッダーが含まれていない場合、組織内の次のアクティビティがイベントを生成するまで、イベントは生成されません。場合は &lt;code&gt;Last-Event-ID&lt;/code&gt; ヘッダが渡されますが認識されない、IDが既に満了していると仮定して、フィードは限りバックなどのイベントが生成されます、記録合成により進めている &lt;code&gt;start_of_history&lt;/code&gt; 。組織イベントの有効期限は60秒（構成可能）です。</target>
        </trans-unit>
        <trans-unit id="3669b7c2b0f82b6918bb5aae5524d96bc90f2f98" translate="yes" xml:space="preserve">
          <source>As stated earlier, the Supervisor reads its secret from its &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; file, the contents of which you can control using &lt;code&gt;hab sup secret generate&lt;/code&gt; and your chosen provisioner / deployment tooling. This ensures that the shared secret is in place, but one more step must be taken to fully enable the feature.</source>
          <target state="translated">前述のように、スーパーバイザーは &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; ファイルからシークレットを読み取ります。このファイルの内容は、 &lt;code&gt;hab sup secret generate&lt;/code&gt; secretgenerateと選択したプロビジョナー/デプロイメントツールを使用して制御できます。これにより、共有シークレットが確実に配置されますが、機能を完全に有効にするには、もう1つの手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="431d486c4c75309d92317b5ab549c41d60e32d78" translate="yes" xml:space="preserve">
          <source>As such, overriding core resources is not recommended best practice.</source>
          <target state="translated">そのため、コアリソースをオーバーライドすることは推奨されるベストプラクティスではありません。</target>
        </trans-unit>
        <trans-unit id="f3830668b5522ba475ae1d1c1948dd05ef15ecea" translate="yes" xml:space="preserve">
          <source>As the internal resources and providers in core chef have been ported over to use the &lt;code&gt;Chef::ProviderResolver&lt;/code&gt; dynamic resolution the use of the old Chef::Platform class methods have actually been broken. Tools like &lt;code&gt;chefspec&lt;/code&gt; and &lt;code&gt;chef-minitest-handler&lt;/code&gt; were ported over to the new APIs in Chef Client 12.0. The &lt;code&gt;Chef::Resource#provider_for_action&lt;/code&gt; API dates back to before Chef Client 11.0.0 and is fully backwards compatible, any remaining code using the old APIs should be exceedingly buggy at this point.</source>
          <target state="translated">コア &lt;code&gt;Chef::ProviderResolver&lt;/code&gt; の内部リソースとプロバイダーがChef :: ProviderResolver動的解決を使用するように移植されたため、古いChef :: Platformクラスメソッドの使用は実際には壊れています。 &lt;code&gt;chefspec&lt;/code&gt; や &lt;code&gt;chef-minitest-handler&lt;/code&gt; などのツールは、Chef Client12.0の新しいAPIに移植されました。 &lt;code&gt;Chef::Resource#provider_for_action&lt;/code&gt; API日はシェフクライアント11.0.0前にバックアップし、完全な下位互換性があり、古いAPIを使用して、任意の残りのコードは、この時点で非常にバギーでなければなりません。</target>
        </trans-unit>
        <trans-unit id="3cd2efc2e68fcb076cea000b241c808d43890cdd" translate="yes" xml:space="preserve">
          <source>As the queue depth increases it may take longer for updates posted to the Chef server by each chef-client to be added to the search indexes on the Chef server. The depth of this queue should be monitored using the following command:</source>
          <target state="translated">キューの深さが大きくなると、各chef-clientがChefサーバに投稿した更新がChefサーバの検索インデックスに追加されるまでに時間がかかる場合があります。このキューの深さは、以下のコマンドを使用して監視する必要があります。</target>
        </trans-unit>
        <trans-unit id="745243210a1c51c8c060c829fe571c74d0e38a7c" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;configure&lt;/code&gt;, you can run data lifecycle jobs globally across all data or by using the data type sub-resource.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; および &lt;code&gt;configure&lt;/code&gt; と同様に、すべてのデータに対してグローバルに、またはデータ型サブリソースを使用して、データライフサイクルジョブを実行できます。</target>
        </trans-unit>
        <trans-unit id="cb90965cc602725ae38d343632b7b63687a8e00e" translate="yes" xml:space="preserve">
          <source>As with Linux, you must first &lt;a href=&quot;../install_habitat/index&quot;&gt;install Chef Habitat&lt;/a&gt; on the machine. Unlike Linux, however, the Windows Supervisor has no requirements for any &lt;code&gt;hab&lt;/code&gt; user.</source>
          <target state="translated">Linuxと同様に、最初に&lt;a href=&quot;../install_habitat/index&quot;&gt;ChefHabitat&lt;/a&gt;をマシンにインストールする必要があります。ただし、Linuxとは異なり、Windowsスーパーバイザーには &lt;code&gt;hab&lt;/code&gt; ユーザーの要件はありません。</target>
        </trans-unit>
        <trans-unit id="583239085c0a379329c5d381b9b60296c0475cab" translate="yes" xml:space="preserve">
          <source>As with all Supervisor interaction commands, if you do not specify &lt;code&gt;--remote-sup&lt;/code&gt;, &lt;code&gt;hab config apply&lt;/code&gt; will attempt to connect to a Supervisor running on the same host.</source>
          <target state="translated">すべてのスーパーバイザインタラクションコマンドと同様に、 &lt;code&gt;hab config apply&lt;/code&gt; &lt;code&gt;--remote-sup&lt;/code&gt; 指定しない場合、hab configapplyは同じホストで実行されているスーパーバイザに接続しようとします。</target>
        </trans-unit>
        <trans-unit id="c832bcca5c47ffc8b036653d9eebc60dfc3dbbf9" translate="yes" xml:space="preserve">
          <source>As with any topology using leader election, you must start at least three peers using the &lt;code&gt;--topology leader&lt;/code&gt; flag to the Supervisor.</source>
          <target state="translated">リーダー選出を使用する他のトポロジと同様に、スーパーバイザに対して &lt;code&gt;--topology leader&lt;/code&gt; フラグを使用して少なくとも3つのピアを開始する必要があります。</target>
        </trans-unit>
        <trans-unit id="31e3fe8fcd612517267a2ee34fbd651419e56d07" translate="yes" xml:space="preserve">
          <source>As with the prior example, only &lt;code&gt;baseline-2&lt;/code&gt; and &lt;code&gt;baseline-4&lt;/code&gt; are executed, but if &lt;code&gt;baseline-2&lt;/code&gt; fails, it will report with an impact of &lt;code&gt;0.5&lt;/code&gt; instead of the originally-intended &lt;code&gt;1.0&lt;/code&gt; impact.</source>
          <target state="translated">前の例と同様に、 &lt;code&gt;baseline-2&lt;/code&gt; と &lt;code&gt;baseline-4&lt;/code&gt; のみが実行されますが、 &lt;code&gt;baseline-2&lt;/code&gt; が失敗した場合、当初意図されていた &lt;code&gt;1.0&lt;/code&gt; の影響ではなく、 &lt;code&gt;0.5&lt;/code&gt; の影響で報告されます。</target>
        </trans-unit>
        <trans-unit id="e017ff25831f62fc424092e4da9b8916855665df" translate="yes" xml:space="preserve">
          <source>As you are working with other members of the community, please keep in mind that the following guidelines apply equally to founders, mentors, those who submit new features/pull requests, and anyone who is seeking help and guidance.</source>
          <target state="translated">コミュニティの他のメンバーと協力して作業をする際には、以下のガイドラインが創業者、メンター、新機能/プルリクエストを提出する人、そして助けやガイダンスを求めている人にも等しく適用されることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="1d88aa192f5edde498ebe7abf47f3417d6591450" translate="yes" xml:space="preserve">
          <source>As you can see, the Chef InSpec test files just focuses on tests and tries to avoid all clutter.</source>
          <target state="translated">ご覧のように、Chef InSpec のテストファイルはテストに集中しており、すべての乱雑さを避けようとしています。</target>
        </trans-unit>
        <trans-unit id="7644623021703cf2b42f7d053019a0140d501d77" translate="yes" xml:space="preserve">
          <source>As you make changes to the cookbooks, follow your organization&amp;rsquo;s existing software development practices. Commit your changes to your cookbooks and submit your changes to your cookbook pipeline to be tested by your automated testing system. Once the changes have passed testing, the cookbooks should receive new version numbers and be published to the new Chef Infra Server by the continuous deployment system.</source>
          <target state="translated">クックブックに変更を加えるときは、組織の既存のソフトウェア開発慣行に従ってください。クックブックへの変更をコミットし、クックブックパイプラインに変更を送信して、自動テストシステムでテストします。変更がテストに合格すると、クックブックは新しいバージョン番号を受け取り、継続的デプロイシステムによって新しいChef InfraServerに公開されます。</target>
        </trans-unit>
        <trans-unit id="94f4b9e6233d642dc61cb62091c84bf1402975e4" translate="yes" xml:space="preserve">
          <source>Aside from controls, profiles can also contain &lt;a href=&quot;#custom-resource&quot;&gt;custom resources&lt;/a&gt;. If the profile contains only custom resources and no controls, we call it a &lt;a href=&quot;#resource-pack&quot;&gt;resource pack&lt;/a&gt;.</source>
          <target state="translated">コントロールの他に、プロファイルには&lt;a href=&quot;#custom-resource&quot;&gt;カスタムリソースを&lt;/a&gt;含めることもできます。プロファイルにカスタムリソースのみが含まれ、コントロールが含まれていない場合、それを&lt;a href=&quot;#resource-pack&quot;&gt;リソースパック&lt;/a&gt;と呼びます。</target>
        </trans-unit>
        <trans-unit id="35332641e67d9d64731b1d8ee12d48ebe669da15" translate="yes" xml:space="preserve">
          <source>Ask the violator to stop the unacceptable behavior.</source>
          <target state="translated">違反者に、受け入れられない行為をやめるようにお願いします。</target>
        </trans-unit>
        <trans-unit id="57f17574efd73916f01b13e96de2424f3a96a8fc" translate="yes" xml:space="preserve">
          <source>Assemble a previously created array into an active array.</source>
          <target state="translated">以前に作成した配列をアクティブな配列に組み立てます。</target>
        </trans-unit>
        <trans-unit id="ea303605e12d9c4454e41424fec7fd4b33a167cc" translate="yes" xml:space="preserve">
          <source>Assert default Security Center Policy exists</source>
          <target state="translated">デフォルトのセキュリティセンターポリシーが存在することを確認する</target>
        </trans-unit>
        <trans-unit id="9eaeedf98c2b460cb592ceac57b1fd252caab120" translate="yes" xml:space="preserve">
          <source>Assert that the default Security Center Policy exists</source>
          <target state="translated">デフォルトのセキュリティ センター ポリシーが存在することを確認する</target>
        </trans-unit>
        <trans-unit id="6e35d34fe04e7d19cd9a0112320af7b195a4630b" translate="yes" xml:space="preserve">
          <source>Assert that the default Security Center Policy has log collection enabled</source>
          <target state="translated">デフォルトのセキュリティ センター ポリシーでログ収集が有効になっていることをアサートします。</target>
        </trans-unit>
        <trans-unit id="14e86b8d9364759ffb6a25690cfa7ea02e463cf7" translate="yes" xml:space="preserve">
          <source>Assertion Consumer Service / Reply URL. This is where Chef Automate receives SAML assertions from the Identity Provider:</source>
          <target state="translated">アサーション消費者サービス/返信URL。これはChef AutomateがIdentity ProviderからSAMLアサーションを受信する場所です。</target>
        </trans-unit>
        <trans-unit id="19cf97be5a2ef4233a45ee5565668941d5d73c53" translate="yes" xml:space="preserve">
          <source>Asserts whether the deployed Azure WebApp is using the latest supported version of the given language/stack. Supported stacks (i.e. python, java, php, node) can be found in the &lt;code&gt;properties&lt;/code&gt; section of WebApp Configuration &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/appservice/webapps/getconfiguration#siteconfigresource&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">デプロイされたAzureWebAppが、指定された言語/スタックのサポートされている最新バージョンを使用しているかどうかを確認します。サポートされているスタック（つまり、python、java、php、node）は、WebApp構成&lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/appservice/webapps/getconfiguration#siteconfigresource&quot;&gt;ドキュメントの&lt;/a&gt; &lt;code&gt;properties&lt;/code&gt; セクションにあります。</target>
        </trans-unit>
        <trans-unit id="858729fff0a41cec1905d6b83452556d173b4dc1" translate="yes" xml:space="preserve">
          <source>Assign Dependencies</source>
          <target state="translated">依存関係の割り当て</target>
        </trans-unit>
        <trans-unit id="06fb46b73786d060a421debe477236595eb5e067" translate="yes" xml:space="preserve">
          <source>Assign a local variable:</source>
          <target state="translated">ローカル変数を代入します。</target>
        </trans-unit>
        <trans-unit id="144c5d881ab63189ad201cda14ca6bd7ce4e6522" translate="yes" xml:space="preserve">
          <source>Assign a unique name for the notification</source>
          <target state="translated">通知にユニークな名前を割り当てる</target>
        </trans-unit>
        <trans-unit id="7f980e41d2e4d29db8fa522911b6603f59fb2a85" translate="yes" xml:space="preserve">
          <source>Assign a value</source>
          <target state="translated">値を割り当てる</target>
        </trans-unit>
        <trans-unit id="214703c8c0787858e3dd7ee8ec9429f3281633e7" translate="yes" xml:space="preserve">
          <source>Assign your set of ingested Client Run and Compliance Nodes to projects via the project ingest rules that you create for the project. An ingest rule specifies one or more conditions, and each condition specifies a set of attribute values that a node must include for assignment to the given project.</source>
          <target state="translated">インジェストされたクライアント実行ノードとコンプライアンス ノードのセットを、プロジェクト用に作成したプロジェク トのインジェスト ルールを介してプロジェクトに割り当てます。インジェスト ルールは、1 つ以上の条件を指定し、各条件は、ノードが指定されたプロジェクトに割り当てるために含める必要がある属性値のセットを指定します。</target>
        </trans-unit>
        <trans-unit id="22b01c5fcee3d160ddad19768c49338f39a00525" translate="yes" xml:space="preserve">
          <source>Assigned service group for the package. &lt;strong&gt;Not used in a &lt;code&gt;plan.ps1&lt;/code&gt;.&lt;/strong&gt; Type: string. Default: &lt;code&gt;hab&lt;/code&gt;. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">パッケージに割り当てられたサービスグル​​ープ。&lt;strong&gt; &lt;code&gt;plan.ps1&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;では使用されません。&lt;/strong&gt;タイプ：文字列。デフォルト： &lt;code&gt;hab&lt;/code&gt; 。&lt;em&gt;オプション&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6bf790107c0257e0330e9bd5c7ad1347af550d94" translate="yes" xml:space="preserve">
          <source>Assigning Ingested Resources to Projects</source>
          <target state="translated">インジェストされたリソースをプロジェクトに割り当てる</target>
        </trans-unit>
        <trans-unit id="6d3b27f523c514efd07c299a608112fb94fd1ac5" translate="yes" xml:space="preserve">
          <source>Assigning Resources to Projects</source>
          <target state="translated">プロジェクトへのリソースの割り当て</target>
        </trans-unit>
        <trans-unit id="f357edf9d370cf07a3d3a40f1a4ea2cc6ef5062c" translate="yes" xml:space="preserve">
          <source>Assigning Teams and Tokens to Projects</source>
          <target state="translated">プロジェクトにチームとトークンを割り当てる</target>
        </trans-unit>
        <trans-unit id="bd5586d4e25740342c74394366abcc20ea1a18c7" translate="yes" xml:space="preserve">
          <source>Assigning the virtual IP address and sending a &lt;code&gt;proxy-arp&lt;/code&gt;; this step transitions the virtual IP address, which means traffic will flow to the back-end Chef server while it makes the transition to becoming the primary Chef server.</source>
          <target state="translated">仮想IPアドレスの割り当てと &lt;code&gt;proxy-arp&lt;/code&gt; の送信。この手順では、仮想IPアドレスを移行します。つまり、トラフィックはバックエンドChefサーバーに流れ、プライマリChefサーバーに移行します。</target>
        </trans-unit>
        <trans-unit id="9c1fa11ff3555c5d0f6c027a7002383c63f12ef9" translate="yes" xml:space="preserve">
          <source>Assigns a name to a port number. For example: {name: &amp;ldquo;http&amp;rdquo;, port: 80}. This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: &amp;ldquo;http&amp;rdquo;, port: 80},{name: &amp;ldquo;http&amp;rdquo;, port: 8080}] Named ports apply to all instances in this instance group.</source>
          <target state="translated">ポート番号に名前を割り当てます。例：{名前：「http」、ポート：80}。これにより、システムはポート番号ではなく、割り当てられた名前でポートを参照できます。名前付きポートには、複数のポートを含めることもできます。例：[{name：&amp;ldquo; http&amp;rdquo;、port：80}、{name：&amp;ldquo; http&amp;rdquo;、port：8080}]名前付きポートは、このインスタンスグループ内のすべてのインスタンスに適用されます。</target>
        </trans-unit>
        <trans-unit id="89edb1060ccaf249e829dd4cab5fc55658796148" translate="yes" xml:space="preserve">
          <source>Assigns a priority to a repository where the priority value is between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; inclusive. Priorities are used to enforce ordered protection of repositories. Packages from repositories with a lower priority (higher numerical value) will never be used to upgrade packages that were installed from a repository with a higher priority (lower numerical value). The repositories with the lowest numerical priority number have the highest priority.</source>
          <target state="translated">優先度の値が &lt;code&gt;1&lt;/code&gt; から &lt;code&gt;99&lt;/code&gt; までのリポジトリに優先度を割り当てます。優先順位は、リポジトリの順序付けられた保護を実施するために使用されます。優先度の低い（数値の高い）リポジトリからのパッケージは、優先度の高い（数値の低い）リポジトリからインストールされたパッケージのアップグレードには使用されません。数値優先順位番号が最も低いリポジトリーが最も優先順位が高くなります。</target>
        </trans-unit>
        <trans-unit id="c7ed432e125e6772920b262ec8535da9101e55d4" translate="yes" xml:space="preserve">
          <source>Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.</source>
          <target state="translated">このディスクにゼロベースのインデックスを割り当てます。例えば、インスタンスに多数のディスクが接続されている場合、各ディスクは一意のインデックス番号を持つことになります。指定しない場合、サーバは適切な値を選択します。</target>
        </trans-unit>
        <trans-unit id="e83dfb0a5299bee79cf1797002a855998dbb8e83" translate="yes" xml:space="preserve">
          <source>Assigns an instance name of &lt;code&gt;httpd_site&lt;/code&gt; that uses port 81</source>
          <target state="translated">ポート81を使用する &lt;code&gt;httpd_site&lt;/code&gt; のインスタンス名を割り当てます</target>
        </trans-unit>
        <trans-unit id="21d6c2c5bc38e5402b183be100dbdbc1ea70b6bf" translate="yes" xml:space="preserve">
          <source>Associate &lt;code&gt;USER_NAME&lt;/code&gt; with the organization after creation.</source>
          <target state="translated">准 &lt;code&gt;USER_NAME&lt;/code&gt; 作成後の組織と。</target>
        </trans-unit>
        <trans-unit id="818176fa77e247cc3a5e7d7d3b8cf37b726dae38" translate="yes" xml:space="preserve">
          <source>Associate a user with an organization and add them to the &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing_admins&lt;/code&gt; security groups.</source>
          <target state="translated">ユーザーを組織に &lt;code&gt;billing_admins&lt;/code&gt; 、それらを &lt;code&gt;admins&lt;/code&gt; およびbilling_adminsセキュリティグループに追加します。</target>
        </trans-unit>
        <trans-unit id="6bdc08a87a26480a9e316f0c159e5818b2d0fb59" translate="yes" xml:space="preserve">
          <source>Associate the IAM role for backup access.</source>
          <target state="translated">バックアップアクセスのためのIAMロールを関連付けます。</target>
        </trans-unit>
        <trans-unit id="22c8e67b52c434a1f5f88193b01ee3967e767167" translate="yes" xml:space="preserve">
          <source>Associated Role</source>
          <target state="translated">関連する役割</target>
        </trans-unit>
        <trans-unit id="fa774e31718ce44a7ec8cf58f0c5e2d906425f44" translate="yes" xml:space="preserve">
          <source>Associates a list of members to a role.</source>
          <target state="translated">メンバーのリストをロールに関連付けます。</target>
        </trans-unit>
        <trans-unit id="d7a76eff1c8e7b20ce80d3e42034e8ebaa2d6bc3" translate="yes" xml:space="preserve">
          <source>Associating Workflow with your GitHub instance</source>
          <target state="translated">ワークフローを GitHub インスタンスに関連付ける</target>
        </trans-unit>
        <trans-unit id="fd30594aa84f1cce9f1c36cc9c454d06a15a44f9" translate="yes" xml:space="preserve">
          <source>Assume a helper module has been created in the cookbook &lt;code&gt;libraries/helper.rb&lt;/code&gt; file.</source>
          <target state="translated">クックブック &lt;code&gt;libraries/helper.rb&lt;/code&gt; ファイルにヘルパーモジュールが作成されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="ba29720d4c4218d210fb5adce1497597e63dfebb" translate="yes" xml:space="preserve">
          <source>Assume we have some projects with the following dependencies:</source>
          <target state="translated">以下のような依存関係を持つプロジェクトがあるとします。</target>
        </trans-unit>
        <trans-unit id="2e127ba7a8c4ef833d5db1368f5b8a062c3900b5" translate="yes" xml:space="preserve">
          <source>Assume you named your project &lt;code&gt;Devops&lt;/code&gt;, and have two users: Terry and Kelly. If Terry needs to &lt;em&gt;view&lt;/em&gt;&lt;code&gt;Devops&lt;/code&gt;-scoped resources, then add Terry as a member to the &lt;code&gt;Devops&lt;/code&gt; Project Viewers policy. If Kelly needs the ability to &lt;em&gt;edit&lt;/em&gt;&lt;code&gt;Devops&lt;/code&gt;-scoped resources, then add Kelly to the &lt;code&gt;Devops&lt;/code&gt; Project Editor policy.</source>
          <target state="translated">プロジェクトに &lt;code&gt;Devops&lt;/code&gt; という名前を付け、TerryとKellyの2人のユーザーがいるとします。Terryが &lt;code&gt;Devops&lt;/code&gt; スコープのリソースを&lt;em&gt;表示&lt;/em&gt;する必要がある場合は、Terryをメンバーとして &lt;code&gt;Devops&lt;/code&gt; ProjectViewersポリシーに追加します。Kellyが &lt;code&gt;Devops&lt;/code&gt; スコープのリソースを&lt;em&gt;編集&lt;/em&gt;する機能を必要とする場合は、Kellyを &lt;code&gt;Devops&lt;/code&gt; プロジェクトエディターポリシーに追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad3b82f4b2150476bee6c3bc6e557e4a020baf15" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;code&gt;etcd&lt;/code&gt; and &lt;code&gt;leaderl&lt;/code&gt; are running properly, two of the three nodes can have service-level PostgreSQL failures. Once the service-level problems have been resolved, the two failed nodes can be resynced from the leader node.</source>
          <target state="translated">&lt;code&gt;etcd&lt;/code&gt; と &lt;code&gt;leaderl&lt;/code&gt; が正しく実行されていると仮定すると、3つのノードのうち2つでサービスレベルのPostgreSQL障害が発生する可能性があります。サービスレベルの問題が解決されると、障害が発生した2つのノードをリーダーノードから再同期できます。</target>
        </trans-unit>
        <trans-unit id="df0e90a9f475eed0e2622fbc5c8991cc3b7023db" translate="yes" xml:space="preserve">
          <source>Assuming the attributes yml file contains your GCP project ID, this sample profile can then be executed using the following command:</source>
          <target state="translated">属性 yml ファイルに GCP プロジェクト ID が含まれていると仮定して、次のコマンドを使用してこのサンプル・プロファイルを実行します。</target>
        </trans-unit>
        <trans-unit id="4f1d1e0068b2a7eddc490bf93dad0946efa1df74" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;re using the Docker image pulled from &lt;code&gt;myorigin/mytutorial&lt;/code&gt;, port 8080 on the container should be accessible. Pass networking ports exposed by Chef Habitat with &lt;code&gt;kubectl run&lt;/code&gt; as &lt;code&gt;--port&lt;/code&gt; options. In this example, the &lt;code&gt;kubectl get&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;myorigin/mytutorial&lt;/code&gt; から取得したDockerイメージを使用しているとすると、コンテナーのポート8080にアクセスできるはずです。 &lt;code&gt;--port&lt;/code&gt; オプションとして &lt;code&gt;kubectl run&lt;/code&gt; れるkubectlを使用して、ChefHabitatによって公開されたネットワークポートを渡します。この例では、 &lt;code&gt;kubectl get&lt;/code&gt; コマンドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8b593995c88f61a609044a01e37e8e4ccc22e065" translate="yes" xml:space="preserve">
          <source>Assumptions</source>
          <target state="translated">Assumptions</target>
        </trans-unit>
        <trans-unit id="06ab452e5e4de71a3cb78a52303bb0b02b82c3e6" translate="yes" xml:space="preserve">
          <source>Asynchronous Resources</source>
          <target state="translated">非同期リソース</target>
        </trans-unit>
        <trans-unit id="b3104570f2c7cab4118f3d3535b642513f011bad" translate="yes" xml:space="preserve">
          <source>Asynchronous block level replication of logical volume managers, positioned between the two back-end machines</source>
          <target state="translated">2台のバックエンドマシン間に配置された論理ボリュームマネージャの非同期ブロックレベルレプリケーション</target>
        </trans-unit>
        <trans-unit id="c1d53d3d0bc0f3756b0bce7a8e6c60a850201986" translate="yes" xml:space="preserve">
          <source>At Chef&amp;rsquo;s option, additional support may be provided to customers beyond the vendor end-of-life in the above table. As such, the following table indicates upcoming product end-of-life dates for particular platforms. On the Chef end-of-life date, Chef discontinues building software for that platform and version.</source>
          <target state="translated">Chefの選択により、上記の表のベンダーのサポート終了を超えて、追加のサポートが顧客に提供される場合があります。そのため、次の表は、特定のプラットフォームの今後の製品の保守終了日を示しています。Chefの保守終了日に、Chefはそのプラットフォームおよびバージョン用のソフトウェアの構築を中止します。</target>
        </trans-unit>
        <trans-unit id="378d48697571df1b6b68a5846bbc129bab876bae" translate="yes" xml:space="preserve">
          <source>At a minimum, you must update the following settings with the appropriate values:</source>
          <target state="translated">最低限、以下の設定を適切な値に更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b7c543c3f646745346e5051aff83c778080c638" translate="yes" xml:space="preserve">
          <source>At any given time, only one DRBD host has &lt;code&gt;userland&lt;/code&gt; access to data, This host is referred to as the primary node. The other host runs the DRBD daemon, but cannot mount the storage into the file system. The secondary node receives information from the primary node, and then replicates disk actions on its local storage copy (even if the partition looks like it doesn&amp;rsquo;t have a file system to which a &lt;code&gt;mount&lt;/code&gt; command can be sent).</source>
          <target state="translated">常に、1つのDRBDホストのみがデータへの &lt;code&gt;userland&lt;/code&gt; アクセスを持っています。このホストはプライマリノードと呼ばれます。他のホストはDRBDデーモンを実行しますが、ストレージをファイルシステムにマウントできません。セカンダリノードはプライマリノードから情報を受信し、ローカルストレージコピーにディスクアクションを複製します（パーティションに、 &lt;code&gt;mount&lt;/code&gt; コマンドを送信できるファイルシステムがないように見える場合でも）。</target>
        </trans-unit>
        <trans-unit id="49e6ada2e250c2cba7f881788f931cc5f54066b1" translate="yes" xml:space="preserve">
          <source>At least one action (actions tell Chef Infra Client what to do)</source>
          <target state="translated">少なくとも1つのアクション(アクションはChef Infra Clientに何をすべきかを伝える</target>
        </trans-unit>
        <trans-unit id="9d71cbf1915844bcd437759638f196186484ad88" translate="yes" xml:space="preserve">
          <source>At least one action (actions tell the chef-client what to do)</source>
          <target state="translated">少なくとも一つのアクション(アクションはシェフ・クライアントに何をすべきかを伝える</target>
        </trans-unit>
        <trans-unit id="dba8392fff1c8815bdd9dff7b78f30b5cf6bea49" translate="yes" xml:space="preserve">
          <source>At least one management workstation</source>
          <target state="translated">少なくとも1台の管理用ワークステーション</target>
        </trans-unit>
        <trans-unit id="fb6383920765beac0727f6e9a9eb7b57787f8159" translate="yes" xml:space="preserve">
          <source>At least one of &lt;code&gt;--password [PASSWORD]&lt;/code&gt; or &lt;code&gt;--ssh-identity-file FILE&lt;/code&gt; are necessary for ssh access.</source>
          <target state="translated">sshアクセスには、少なくとも1つの &lt;code&gt;--password [PASSWORD]&lt;/code&gt; または &lt;code&gt;--ssh-identity-file FILE&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="de393c8d3646ac0e156cf77b4f4f74b3d5013f3a" translate="yes" xml:space="preserve">
          <source>At least one of the following parameters must be provided.</source>
          <target state="translated">以下のパラメータのうち、少なくとも1つを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="87cdee25a7b81d1f6c91e6376083edbaa4a53c08" translate="yes" xml:space="preserve">
          <source>At runtime - Users can alter config at runtime using &lt;code&gt;hab config apply&lt;/code&gt;. The input for this command also uses the TOML format.</source>
          <target state="translated">実行時-ユーザーは、 &lt;code&gt;hab config apply&lt;/code&gt; を使用して、実行時に構成を変更できます。このコマンドの入力もTOML形式を使用します。</target>
        </trans-unit>
        <trans-unit id="ca5320409e5caaa061fe199efecf48932d0a3d00" translate="yes" xml:space="preserve">
          <source>At the bare minimum, you must set the version to v2:</source>
          <target state="translated">最低限、バージョンをv2に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f95cedf3c66158b0b35f13f6c0c2243a53fdc480" translate="yes" xml:space="preserve">
          <source>At the beginning of a chef-client run, all attributes are reset. The chef-client rebuilds them using automatic attributes collected by Ohai at the beginning of the chef-client run and then using default and override attributes that are specified in cookbooks or by roles and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the chef-client run, the attributes that were applied to the node are saved to the Chef server as part of the node object.</source>
          <target state="translated">chef-clientの実行の開始時に、すべてのアトリビュートはリセットされます。chef-clientは、chef-client実行の開始時にOhaiによって収集された自動属性を使用して再構築し、その後、クックブックやロールや環境によって指定されたデフォルト属性やオーバーライド属性を使用します。通常の属性は決してリセットされません。すべての属性はマージされ、属性の優先順位に従ってノードに適用されます。chef-client実行の終了時に、ノードに適用されたアトリビュートは、ノードオブジェクトの一部としてChefサーバーに保存されます。</target>
        </trans-unit>
        <trans-unit id="41ad996be01b1a1ea0143cbd315c3fcbc3058bb3" translate="yes" xml:space="preserve">
          <source>At the center of Chef Habitat packaging is the plan. This is a directory comprised of shell scripts and optional configuration files that define how you download, configure, make, install, and manage the lifecycle of the software in the artifact. More conceptual information on artifacts can be found in the &lt;a href=&quot;../pkg_ids/index&quot;&gt;Package Identifiers&lt;/a&gt; page.</source>
          <target state="translated">シェフハビタットのパッケージングの中心は計画です。これは、アーティファクト内のソフトウェアのライフサイクルをダウンロード、構成、作成、インストール、および管理する方法を定義するシェルスクリプトとオプションの構成ファイルで構成されるディレクトリです。アーティファクトに関するより概念的な情報は、&lt;a href=&quot;../pkg_ids/index&quot;&gt;パッケージ識別子の&lt;/a&gt;ページにあります。</target>
        </trans-unit>
        <trans-unit id="768175ee2b45ba5965087228eb3f082530025f4f" translate="yes" xml:space="preserve">
          <source>At the end of every Chef Infra Client run, the node object is saved to the Chef Infra Server. From the Chef Infra Server, each node object is then added to the &lt;code&gt;SOLR&lt;/code&gt; search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">Chef Infra Clientの実行が終了するたびに、ノードオブジェクトがChef InfraServerに保存されます。次に、Chef Infra Serverから、各ノードオブジェクトが &lt;code&gt;SOLR&lt;/code&gt; 検索インデックスに追加されます。このプロセスは非同期です。デフォルトでは、ノードオブジェクトは60秒ごとまたは1000ノードオブジェクトごとのいずれか早い方で検索インデックスにコミットされます。</target>
        </trans-unit>
        <trans-unit id="55d2227ef33e2a61e15b4e070d83b938b3b26f3a" translate="yes" xml:space="preserve">
          <source>At the end of every Chef Infra Client run, the node object is saved to the Chef Infra Server. From the Chef Infra Server, each node object is then added to the Apache Solr search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">各Chef Infraクライアントの実行の最後に、ノードオブジェクトはChef Infraサーバに保存されます。Chef Infraサーバから、各ノードオブジェクトがApache Solrの検索インデックスに追加されます。このプロセスは非同期です。デフォルトでは、ノードオブジェクトは60秒ごと、または1000個のノードオブジェクトごとに、どちらか早い方で検索インデックスにコミットされます。</target>
        </trans-unit>
        <trans-unit id="184942f4aa8da74441a65d20bc162311e7bec185" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the &lt;code&gt;SOLR&lt;/code&gt; search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">すべてのchef-client実行の最後に、ノードオブジェクトがChefサーバーに保存されます。Chefサーバーから、各ノードオブジェクトが &lt;code&gt;SOLR&lt;/code&gt; 検索インデックスに追加されます。このプロセスは非同期です。デフォルトでは、ノードオブジェクトは、60秒ごと、または1000ノードオブジェクトごとのいずれか早い方で、検索インデックスにコミットされます。</target>
        </trans-unit>
        <trans-unit id="617126bfcd6bd80167d43a4e1f5212a1e5bfbe92" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the Apache Solr search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">各chef-clientの実行の最後に、ノードオブジェクトはChefサーバに保存されます。Chefサーバから、各ノードオブジェクトがApache Solrの検索インデックスに追加されます。このプロセスは非同期です。デフォルトでは、ノードオブジェクトは60秒ごと、または1000個のノードオブジェクトごとのどちらか早い方で検索インデックスにコミットされます。</target>
        </trans-unit>
        <trans-unit id="025f6c74028d99947ed8cd58130b5778eea47b67" translate="yes" xml:space="preserve">
          <source>At the end of the deployment process you will see:</source>
          <target state="translated">展開プロセスの最後に表示されます。</target>
        </trans-unit>
        <trans-unit id="5284052651bf51e5d94fad49a974a1f7daa7d475" translate="yes" xml:space="preserve">
          <source>At the end, the recipe is using the &lt;code&gt;notifies&lt;/code&gt; property&amp;mdash;a common attribute available to all resources&amp;mdash;to alert two services (named &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;) that they should restart.</source>
          <target state="translated">最後に、レシピは、 &lt;code&gt;notifies&lt;/code&gt; プロパティ（すべてのリソースで使用できる共通の属性）を使用して、2つのサービス（「foo」と「bar」という名前）を再起動する必要があることを警告しています。</target>
        </trans-unit>
        <trans-unit id="88f69dd38efbd0cf3b73e2e28229af058eee6928" translate="yes" xml:space="preserve">
          <source>At the moment, there doesn&amp;rsquo;t appear to be a way to select the version of the Azure API docs. If you notice a newer version being referenced in the official documentation please open an issue or submit a pull request using the updated version.</source>
          <target state="translated">現時点では、AzureAPIドキュメントのバージョンを選択する方法はないようです。公式ドキュメントで参照されている新しいバージョンに気付いた場合は、問題を開くか、更新されたバージョンを使用してプルリクエストを送信してください。</target>
        </trans-unit>
        <trans-unit id="ba1a38e35a57ecdab65a85211c2cd9ad97dfaa7a" translate="yes" xml:space="preserve">
          <source>At this phase of the build, the origin key has been checked for, all package dependencies have been resolved and downloaded, and the &lt;code&gt;$PATH&lt;/code&gt; and environment are set, but this is just before any source downloading would occur (if &lt;code&gt;$pkg_source&lt;/code&gt; is set). This could be a suitable phase in which to compute a dynamic version of a package given the state of a Git repository, fire an API call, start timing something, etc.</source>
          <target state="translated">ビルドのこのフェーズでは、オリジンキーがチェックされ、すべてのパッケージの依存関係が解決されてダウンロードされ、 &lt;code&gt;$PATH&lt;/code&gt; と環境が設定されますが、これはソースのダウンロードが発生する直前です（ &lt;code&gt;$pkg_source&lt;/code&gt; が設定されている場合） 。これは、Gitリポジトリの状態を指定してパッケージの動的バージョンを計算したり、API呼び出しを起動したり、何かのタイミングを開始したりするのに適したフェーズになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="74fe9413ace358d2f70d1ccfa954e0b8d962d26a" translate="yes" xml:space="preserve">
          <source>At this phase, the package has been built, installed, stripped, but before the package metadata is written and the artifact is created and signed.</source>
          <target state="translated">この段階では、パッケージはビルドされ、インストールされ、ストリッピングされていますが、パッケージのメタデータが書き込まれ、成果物が作成され、署名される前です。</target>
        </trans-unit>
        <trans-unit id="1d91d73cd73de5a45c13a4aebf677f30c635a262" translate="yes" xml:space="preserve">
          <source>At this point we have a solid set of base packages which can be used to built anything and everything else. As such, it makes sense to at least attempt to rebuild all the other core packages that haven&amp;rsquo;t been touched to this point. The first task here is to generate the build list order of all remaining packages in our &amp;ldquo;world&amp;rdquo; and exclude all the base packages so that we can avoid building them yet another time (for no additional benefit). Luckily, there is a &lt;code&gt;build-order.rb&lt;/code&gt; program in the &lt;code&gt;core-plans&lt;/code&gt; repository that will generate such a list. The reason that this program is in Ruby is to take advantage of the topological sorting library in Ruby&amp;rsquo;s stdlib (called &lt;code&gt;tsort&lt;/code&gt;). If you&amp;rsquo;ve ever used &lt;code&gt;rake&lt;/code&gt; before with tasks and dependencies, &lt;code&gt;tsort&lt;/code&gt; is the magic which powers it.</source>
          <target state="translated">この時点で、他のすべてのものを構築するために使用できる基本パッケージの堅実なセットがあります。そのため、少なくとも、この時点まで触れられていない他のすべてのコアパッケージの再構築を試みることは理にかなっています。ここでの最初のタスクは、「ワールド」に残っているすべてのパッケージのビルドリストの順序を生成し、すべての基本パッケージを除外して、それらをもう一度ビルドすることを回避できるようにすることです（追加のメリットはありません）。幸いなことに、そのようなリストを生成する &lt;code&gt;build-order.rb&lt;/code&gt; プログラムが &lt;code&gt;core-plans&lt;/code&gt; リポジトリにあります。このプログラムがRubyにある理由は、Rubyのstdlib（ &lt;code&gt;tsort&lt;/code&gt; と呼ばれる）のトポロジカルソートライブラリを利用するためです。タスクと依存関係で以前に &lt;code&gt;rake&lt;/code&gt; を使用したことがある場合は、 &lt;code&gt;tsort&lt;/code&gt; はそれを動かす魔法です。</target>
        </trans-unit>
        <trans-unit id="89f4e6e3cf74941feac9ee38399030ce5715957c" translate="yes" xml:space="preserve">
          <source>At this point, all users should be able to use their Active Directory or LDAP usernames and passwords to log in to the Chef Infra Server.</source>
          <target state="translated">この時点で、すべてのユーザーがActive DirectoryまたはLDAPのユーザー名とパスワードを使用してChef Infra Serverにログインできるようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="a19f796e764224d98868ca2b6cc9e7643dec4e07" translate="yes" xml:space="preserve">
          <source>At this point, all users should be able to use their Active Directory or LDAP usernames and passwords to log in to the Chef server.</source>
          <target state="translated">この時点で、すべてのユーザーがActive DirectoryまたはLDAPのユーザー名とパスワードを使用してChefサーバーにログインできるようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="675e0fcbf0b1da0782277a490d1f57d1482a1d56" translate="yes" xml:space="preserve">
          <source>At this point, enter the path to your cookbook development directory, for example, &lt;code&gt;/Users/user_name/my_cookbooks&lt;/code&gt; at the prompt.</source>
          <target state="translated">この時点で、プロンプトで &lt;code&gt;/Users/user_name/my_cookbooks&lt;/code&gt; など、クックブック開発ディレクトリへのパスを入力します。</target>
        </trans-unit>
        <trans-unit id="6067a41244fa02806d0f404a6a500cd9a6cdd535" translate="yes" xml:space="preserve">
          <source>At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the Chef server back online can begin.</source>
          <target state="translated">この時点で、新しいホストはセカンダリのバックエンドサーバーと同期しているはずです。セカンダリバックエンドサーバーは、今はなくなったプライマリバックエンドサーバーから失われたデータをすべて忘れ、Chefサーバーをオンラインに戻すプロセスを開始することができます。</target>
        </trans-unit>
        <trans-unit id="5a9dea0f581e3f897f78bd094f9fecfa99652eb8" translate="yes" xml:space="preserve">
          <source>At this time, backend clusters can only have three nodes.</source>
          <target state="translated">現時点では、バックエンドクラスタは3つのノードしか持つことができません。</target>
        </trans-unit>
        <trans-unit id="e59dfe7f072e09c06cb61f4008964a9e6a9385d9" translate="yes" xml:space="preserve">
          <source>At this time, only the users &lt;code&gt;sean_horn&lt;/code&gt; and &lt;code&gt;angle&lt;/code&gt; are authorized to read and manage the vault.</source>
          <target state="translated">現時点では、ユーザー &lt;code&gt;sean_horn&lt;/code&gt; と &lt;code&gt;angle&lt;/code&gt; のみがボールトの読み取りと管理を許可されています。</target>
        </trans-unit>
        <trans-unit id="1d9f045c48f8060de2ab08482d0cf49cf2eef12f" translate="yes" xml:space="preserve">
          <source>At-Once Strategy</source>
          <target state="translated">アットワンス戦略</target>
        </trans-unit>
        <trans-unit id="49ab9163a8ceb29e3695cb884b95663dbb239b88" translate="yes" xml:space="preserve">
          <source>Atomic File Updates</source>
          <target state="translated">アトミックファイルの更新</target>
        </trans-unit>
        <trans-unit id="c8e899a441fa17a106696c125382340da1f953bd" translate="yes" xml:space="preserve">
          <source>Atomic updates are enabled by default. They can be managed globally using the &lt;code&gt;file_atomic_update&lt;/code&gt; setting in the client.rb file. They can be managed on a per-resource basis using the &lt;code&gt;atomic_update&lt;/code&gt; property that is available with the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="translated">アトミック更新はデフォルトで有効になっています。それらは、client.rbファイルの &lt;code&gt;file_atomic_update&lt;/code&gt; 設定を使用してグローバルに管理できます。これらは、&lt;strong&gt;cookbook_file&lt;/strong&gt;、&lt;strong&gt;file&lt;/strong&gt;、&lt;strong&gt;remote_file&lt;/strong&gt;、および&lt;strong&gt;テンプレート&lt;/strong&gt;リソースで使用可能な &lt;code&gt;atomic_update&lt;/code&gt; プロパティを使用して、リソースごとに管理できます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7fc053c82238599e8067922471eb420fbbf6026" translate="yes" xml:space="preserve">
          <source>Atomic updates are used with &lt;strong&gt;file&lt;/strong&gt;-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out.</source>
          <target state="translated">アトミック更新は&lt;strong&gt;ファイル&lt;/strong&gt;ベースのリソースとともに使用され、バイナリーの更新時またはディスク領域が不足した場合にファイル更新を確実に実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="52d8612c8d00091a78b6a1bf5b4350cb38441188" translate="yes" xml:space="preserve">
          <source>Atomically demotes selected packages in a target channel</source>
          <target state="translated">ターゲットチャンネルで選択されたパッケージをアトミックに降格させます。</target>
        </trans-unit>
        <trans-unit id="82e41f0872324c464253151fd85b3b6d5fd0e163" translate="yes" xml:space="preserve">
          <source>Atomically promotes all packages in channel</source>
          <target state="translated">チャンネル内のすべてのパッケージをアトミックにプロモーション</target>
        </trans-unit>
        <trans-unit id="7a24bea786bddf12cd27152c3d2d1b970e938635" translate="yes" xml:space="preserve">
          <source>Attach the S3 bucket access policy to the role.</source>
          <target state="translated">ロールにS3バケットのアクセスポリシーを添付します。</target>
        </trans-unit>
        <trans-unit id="07a73ca2fc303af30888e1d85873ef4f02a0df32" translate="yes" xml:space="preserve">
          <source>Attach the Upgraded Node to the New Server</source>
          <target state="translated">アップグレードしたノードを新しいサーバーにアタッチする</target>
        </trans-unit>
        <trans-unit id="47287a10a10a4739025f8695f012c087842058b8" translate="yes" xml:space="preserve">
          <source>Attempt a Converge and Check for Errors</source>
          <target state="translated">収束の試みとエラーのチェック</target>
        </trans-unit>
        <trans-unit id="a95f896f330aab5ff1839f5ab8e1b45eade25950" translate="yes" xml:space="preserve">
          <source>Attempting to perform an operation using the Habitat client to communicate with a service that has a custom certificate can produce an error, such as:</source>
          <target state="translated">カスタム証明書を持つサービスと通信するためにHabitatクライアントを使用して操作を実行しようとすると、以下のようなエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="47c9b01cbc44619c374487e28eb3c03839f456eb" translate="yes" xml:space="preserve">
          <source>Attempting to take over as the primary Chef server for the DRBD device.</source>
          <target state="translated">DRBDデバイスのプライマリーシェフサーバーとしての引き継ぎを試みています。</target>
        </trans-unit>
        <trans-unit id="6317b6708c851cf1dfb0a725d207b704428a3b59" translate="yes" xml:space="preserve">
          <source>Attempts to guess the &amp;ldquo;first&amp;rdquo; &amp;ldquo;real&amp;rdquo; IPv4 address on any interface. Looks for interfaces that are up and have IPv4 addresses assigned, then tries to filter out loopback, management (10/8) and local (192.168/16) IP addresses, returning the best of of those that it can; you may still get nil, or a loopback address. Note that if the machine is behind NAT this will not be the external IP address; use the &lt;code&gt;http&lt;/code&gt; resource to query an IP lookup service for that.</source>
          <target state="translated">任意のインターフェースで「最初の」「実際の」IPv4アドレスを推測しようとします。稼働していてIPv4アドレスが割り当てられているインターフェイスを探し、ループバック、管理（10/8）、およびローカル（192.168 / 16）IPアドレスを除外して、可能な限り最高のものを返します。それでもnilまたはループバックアドレスを取得する可能性があります。マシンがNATの背後にある場合、これは外部IPアドレスではないことに注意してください。使用 &lt;code&gt;http&lt;/code&gt; そのためIP検索サービスを照会するためのリソースを。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="7314850fdc2868f9c47326e647c4d832d84e8d05" translate="yes" xml:space="preserve">
          <source>Attribute Allowlist</source>
          <target state="translated">属性許容リスト</target>
        </trans-unit>
        <trans-unit id="5809fc789931a8b3a07d65dd0f9460793372546a" translate="yes" xml:space="preserve">
          <source>Attribute Evaluation Order</source>
          <target state="translated">属性評価順序</target>
        </trans-unit>
        <trans-unit id="77af70551e42ecdfacd2bd179132c7e56fc1b08c" translate="yes" xml:space="preserve">
          <source>Attribute Files</source>
          <target state="translated">属性ファイル</target>
        </trans-unit>
        <trans-unit id="e99fc97a1f7c210260680a5b60a282a0c7d9d2de" translate="yes" xml:space="preserve">
          <source>Attribute Persistence</source>
          <target state="translated">属性の持続性</target>
        </trans-unit>
        <trans-unit id="f439ff4e18ae922bccee721044529af94b8f4f3b" translate="yes" xml:space="preserve">
          <source>Attribute Precedence</source>
          <target state="translated">属性の優先順位</target>
        </trans-unit>
        <trans-unit id="8b7b1b0061d717ceef36eaead8161e0baf0ff1be" translate="yes" xml:space="preserve">
          <source>Attribute Sources</source>
          <target state="translated">属性ソース</target>
        </trans-unit>
        <trans-unit id="7200477de9f90bdbdcfe2706e7c5cb9ade5e08da" translate="yes" xml:space="preserve">
          <source>Attribute Type</source>
          <target state="translated">属性タイプ</target>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="translated">属性タイプ</target>
        </trans-unit>
        <trans-unit id="f7dc845d8d36204a8be50543b3dac6d531fc0aa0" translate="yes" xml:space="preserve">
          <source>Attribute files (in cookbooks)</source>
          <target state="translated">属性ファイル(クックブック内</target>
        </trans-unit>
        <trans-unit id="9c8ca62271ff23ba849b4f717b8b4500da8c2359" translate="yes" xml:space="preserve">
          <source>Attribute precedence levels may be:</source>
          <target state="translated">属性の優先順位のレベルは、次のようにしてもよい。</target>
        </trans-unit>
        <trans-unit id="609a08d35568d128cff8d518c3d1fa0a0310b59d" translate="yes" xml:space="preserve">
          <source>Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:</source>
          <target state="translated">属性の優先順位は、概要図と同じ観点から見たもので、図内の数字が属性の優先順位の順序と一致しています。</target>
        </trans-unit>
        <trans-unit id="8c9a40eab9da175a6d3d23dc3899f181cd09a4f8" translate="yes" xml:space="preserve">
          <source>Attribute precedence, when viewed as a table:</source>
          <target state="translated">テーブルとして見た場合の属性の優先順位。</target>
        </trans-unit>
        <trans-unit id="3fe5f18712254009ad829e3487d7a7aa92224178" translate="yes" xml:space="preserve">
          <source>Attribute values</source>
          <target state="translated">属性値</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="ad1863b2e3b81a7cb1b70873ba959aafc643654e" translate="yes" xml:space="preserve">
          <source>Attributes Blocklist</source>
          <target state="translated">属性ブロックリスト</target>
        </trans-unit>
        <trans-unit id="c751423a032976446883438c3a6aac8fe4e74da0" translate="yes" xml:space="preserve">
          <source>Attributes are allowlisted by attribute type, with each attribute type being allowlisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define allowlists by using the following settings in the client.rb file:</source>
          <target state="translated">属性は属性タイプごとに許可リストされ、各属性タイプは個別に許可リストされます。各属性タイプ（ &lt;code&gt;automatic&lt;/code&gt; 、 &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、および &lt;code&gt;override&lt;/code&gt; は、client.rbファイルの次の設定を使用して許可リストを定義できます。</target>
        </trans-unit>
        <trans-unit id="f29de19b39a8cb331d8c32a4c9b0c683c019532e" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by Chef Infra Client in the following order:</source>
          <target state="translated">属性は常に以下の順序でChef Infra Clientによって適用されます。</target>
        </trans-unit>
        <trans-unit id="21fa130a26fa5adcc94b8ddeb1e5b42dc30557c8" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by the chef-client in the following order:</source>
          <target state="translated">属性は常に以下の順番で適用されます。</target>
        </trans-unit>
        <trans-unit id="6205fc4ad970a41be2c6ff813ccf48dbd0102134" translate="yes" xml:space="preserve">
          <source>Attributes are blocklisted by attribute type, with each attribute type being blocklisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define blocklists by using the following settings in the client.rb file:</source>
          <target state="translated">属性は属性タイプごとにブロックリストされ、各属性タイプは個別にブロックリストされます。各属性タイプ（ &lt;code&gt;automatic&lt;/code&gt; 、 &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、および &lt;code&gt;override&lt;/code&gt; は、client.rbファイルの次の設定を使用してブロックリストを定義できます。</target>
        </trans-unit>
        <trans-unit id="5134bd448c6e81f4bd98af95eeda28ac49f7b4c2" translate="yes" xml:space="preserve">
          <source>Attributes are defined by:</source>
          <target state="translated">属性は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="8c5977710f9e1dc10240329e3c083bc50a5ad449" translate="yes" xml:space="preserve">
          <source>Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:</source>
          <target state="translated">属性はオプションで、デフォルトレベルとオーバーライドレベルで設定できます。これらは、属性の優先順位に従って処理されます。環境属性は、より高い優先度の属性によって上書きされる場所を除いて、環境内のすべてのノードに適用されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ba67b728f55372374a718f911c328adba9a3240c" translate="yes" xml:space="preserve">
          <source>Attributes are provided to Chef Infra Client from the following locations:</source>
          <target state="translated">属性は以下の場所からシェフ・インフラクライアントに提供されます。</target>
        </trans-unit>
        <trans-unit id="16ee0be748cbf871a8fa4ca3eb2ec5f5324388c4" translate="yes" xml:space="preserve">
          <source>Attributes are provided to the chef-client from the following locations:</source>
          <target state="translated">属性は以下の場所からシェフ・クライアントに提供されます。</target>
        </trans-unit>
        <trans-unit id="120c47677bf111c795cd932b67cc36ace4899ef2" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a Chef Infra Client run. A recipe can store attribute values using a multi-level hash or array.</source>
          <target state="translated">属性は通常、クックブック、レシピ、ロール、環境で定義されます。これらの属性は、Chef Infra Clientの実行中にノードレベルにロールアップされます。レシピは複数レベルのハッシュや配列を使用して属性値を保存することができます。</target>
        </trans-unit>
        <trans-unit id="8dd5bb0914abbfdc64b5eac84eb9921f6928083a" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a chef-client run. A recipe can store attribute values using a multi-level Hash or array.</source>
          <target state="translated">属性は通常、クックブック、レシピ、ロール、環境で定義されます。これらの属性はchef-clientの実行中にノードレベルにロールアップされます。レシピは複数レベルのHashや配列を使って属性値を保存することができます。</target>
        </trans-unit>
        <trans-unit id="cdaeb6eda2cbbd47ab00e089f60a4539a6377cf7" translate="yes" xml:space="preserve">
          <source>Attributes are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define whitelists by using the following settings in the client.rb file:</source>
          <target state="translated">属性は属性タイプごとにホワイトリストに登録され、各属性タイプは個別にホワイトリストに登録されます。各属性タイプ（ &lt;code&gt;automatic&lt;/code&gt; 、 &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;override&lt;/code&gt; は、client.rbファイルの次の設定を使用してホワイトリストを定義できます。</target>
        </trans-unit>
        <trans-unit id="1ce9f36d6200c2dfd20b02fed9b74a4f7314ffec" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of a Chef Infra Client run. See &lt;a href=&quot;../attributes/index&quot;&gt;Attributes&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">属性は、クックブック（属性ファイルとレシピ）、ロール、および環境で構成できます。さらに、Ohaiは、Chef InfraClientの実行の開始時に各ノードに関する属性データを収集します。これらすべての属性がどのように組み合わされるかについての詳細は、&lt;a href=&quot;../attributes/index&quot;&gt;属性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d052fd272c1bc16d2cd16a5cc8486465402c27da" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of a Chef Infra Client run. See &lt;a href=&quot;attributes/index&quot;&gt;Attributes&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">属性は、クックブック（属性ファイルとレシピ）、ロール、および環境で構成できます。さらに、Ohaiは、Chef InfraClientの実行の開始時に各ノードに関する属性データを収集します。これらすべての属性がどのように組み合わされるかについての詳細は、&lt;a href=&quot;attributes/index&quot;&gt;属性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="577c3be005618e163a94cffa1a6608265d49e096" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of the chef-client run. See &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">属性は、クックブック（属性ファイルとレシピ）、ロール、および環境で構成できます。さらに、Ohaiはchef-client実行の開始時に各ノードに関する属性データを収集します。これらの属性すべてがどのように組み合わされるかについての詳細は、&lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https：//docs.chef.io/attributes.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="63c9b441f6085a9be14f56ec9cb93a480bf44cd4" translate="yes" xml:space="preserve">
          <source>Attributes can be defined in an environment and then used to override the default attributes in a cookbook. When an environment is applied during a Chef Infra Client run, environment attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, Chef Infra Client applies those new settings and values during a Chef Infra Client run.</source>
          <target state="translated">アトリビュートは環境で定義し、クックブックのデフォルトのアトリビュートを上書きするために使用することができます。Chef Infraクライアントの実行中に環境が適用されると、環境属性はノードに既に存在する属性と比較されます。環境属性がデフォルト属性よりも優先されると、Chef Infra ClientはChef Infra Clientの実行中に新しい設定と値を適用します。</target>
        </trans-unit>
        <trans-unit id="9417cac9eb45c67633887d7b0390cc7b4ebc3c86" translate="yes" xml:space="preserve">
          <source>Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.</source>
          <target state="translated">PubsubMessage の属性。Pubsubメッセージは、空ではないデータ、または少なくとも1つの属性を含まなければなりません。</target>
        </trans-unit>
        <trans-unit id="b2341b03f2a8f6e9f8a1ef0841c4c676e26d02e3" translate="yes" xml:space="preserve">
          <source>Attributes passed via JSON on the CLI</source>
          <target state="translated">CLIでJSON経由で渡される属性</target>
        </trans-unit>
        <trans-unit id="156a413c6e8bb3ccdd706df06d8eacc012cff96c" translate="yes" xml:space="preserve">
          <source>Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:</source>
          <target state="translated">属性はレシピ内からのアクションに依存することがあるので、レシピ内から与えられた属性をリロードする必要があるかもしれません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="31458a40e8d1b0dabc0e735cebc8396eb0d6a191" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic attributes, in that these attributes are used by the chef-client to ensure that these attributes remain unchanged after the chef-client is done configuring the node.</source>
          <target state="translated">Ohaiによって収集される属性は自動属性で、シェフクライアントがノードの設定を完了した後も、これらの属性が変更されないことを保証するために、シェフクライアントによって使用されます。</target>
        </trans-unit>
        <trans-unit id="ad31c6765b629dc6ba0414e5a81274dcb8ff6f09" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic level attributes, in that these attributes are used by Chef Infra Client to ensure that these attributes remain unchanged after Chef Infra Client is done configuring the node.</source>
          <target state="translated">Ohaiによって収集される属性は、これらの属性がChef Infra Clientによって使用され、Chef Infra Clientがノードの設定を完了した後も、これらの属性が変更されないことを保証するという意味で、自動レベルの属性です。</target>
        </trans-unit>
        <trans-unit id="310fe5e73a128a3c5a4a4547ab5f0b29e9c579f3" translate="yes" xml:space="preserve">
          <source>Attributes that have been configured, but are not found in the results, lead to user search failures, too. Note that this also affects default values.</source>
          <target state="translated">設定されているにもかかわらず、結果に表示されない属性は、ユーザー検索の失敗にもつながります。これはデフォルト値にも影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="ec8ee66d5ebcca4201088fd093ebb1889a66c232" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be allowlisted in the client.rb file. The allowlist is a hash of keys that specifies each attribute to be saved.</source>
          <target state="translated">ノードが保存すべき属性は、client.rbファイル内でallowlistedすることができます。allowlistは、保存すべき各属性を指定するキーのハッシュです。</target>
        </trans-unit>
        <trans-unit id="be82aec0f2a97d56f68b7e603805db1a8754af10" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be whitelisted in the client.rb file. The whitelist is a Hash of keys that specify each attribute to be saved.</source>
          <target state="translated">ノードが保存すべき属性は、client.rbファイルでホワイトリスト化することができます。ホワイトリストは、保存すべき各属性を指定するキーのハッシュです。</target>
        </trans-unit>
        <trans-unit id="7fa9c04c56d002e4611e4afd197fba66e1a8935a" translate="yes" xml:space="preserve">
          <source>Attributes that should not be saved by a node may be blocklisted in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file. The blocklist is a Hash of keys that specify each attribute to be filtered out.</source>
          <target state="translated">ノードによって保存されるべきではない属性は、&lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt;ファイルにブロックリストされる場合があります。ブロックリストは、除外する各属性を指定するキーのハッシュです。</target>
        </trans-unit>
        <trans-unit id="a9e2ab705bfe9cd136e905d14b99d2cf93f3bab0" translate="yes" xml:space="preserve">
          <source>Attributes that should not be saved by a node may be blocklisted in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file. The blocklist is a Hash of keys that specify each attribute to be filtered out.</source>
          <target state="translated">ノードによって保存されるべきではない属性は、&lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb&lt;/a&gt;ファイルにブロックリストされる場合があります。ブロックリストは、除外する各属性を指定するキーのハッシュです。</target>
        </trans-unit>
        <trans-unit id="a4d81396d4ea19197dfceaa774ef776332674285" translate="yes" xml:space="preserve">
          <source>Attribution</source>
          <target state="translated">Attribution</target>
        </trans-unit>
        <trans-unit id="d1404fc0e354ef71aa4f69f98ab0c95d3f22b388" translate="yes" xml:space="preserve">
          <source>Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.</source>
          <target state="translated">OIDCトークン生成時に使用するオーディエンス。指定しない場合は、targetで指定したURIが使用されます。</target>
        </trans-unit>
        <trans-unit id="7591f7e536f39f498c621ec7183627cd8b5d8138" translate="yes" xml:space="preserve">
          <source>Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for. The audience value is a single case-sensitive string. Having multiple values (array) for the audience field is not supported. More info about the OIDC JWT token audience here: &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.3&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1.3&lt;/a&gt; Note: if not specified, the Push endpoint URL will be used.</source>
          <target state="translated">OIDCトークンを生成するときに使用されるオーディエンス。オーディエンスクレームは、JWTが対象としている受信者を識別します。オーディエンス値は、大文字と小文字を区別する単一の文字列です。オーディエンスフィールドに複数の値（配列）を設定することはサポートされていません。OIDC JWTトークンオーディエンスの詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.3&quot;&gt;https&lt;/a&gt;：//tools.ietf.org/html/rfc7519#section-4.1.3を参照してください。注：指定されていない場合は、プッシュエンドポイントURLが使用されます。</target>
        </trans-unit>
        <trans-unit id="b73b8202df0bb2a8615c0090b55c64d5376dbf18" translate="yes" xml:space="preserve">
          <source>Audience. This will be the metadata URL for Chef Automate:</source>
          <target state="translated">オーディエンス。これはChef AutomateのメタデータURLになります。</target>
        </trans-unit>
        <trans-unit id="fe3117efd4208998b85ec07b8e95334e99e0ce4e" translate="yes" xml:space="preserve">
          <source>Audit Cookbook</source>
          <target state="translated">オーディットクックブック</target>
        </trans-unit>
        <trans-unit id="52e886f141a11d93af4208abc9159c4ade45e3b0" translate="yes" xml:space="preserve">
          <source>Audit Cookbook + Inspec + Automate 2 Versions Support Matrix</source>
          <target state="translated">監査クックブック+インスペク+自動化2バージョンサポートマトリックス</target>
        </trans-unit>
        <trans-unit id="e3bf6ec38dd730ea46936e195d6e024865c572a8" translate="yes" xml:space="preserve">
          <source>Audit Cookbook version 4.2.0 or later requires Chef InSpec 1.25.1 or later. You can upgrade your Chef InSpec package in several different ways: by upgrading Automate, by upgrading the Chef Workstation, by upgrading Chef Infra Client, or by setting the &lt;code&gt;node['audit']['inspec_version']&lt;/code&gt; attribute in your cookbook.</source>
          <target state="translated">Audit Cookbookバージョン4.2.0以降には、Chef InSpec1.25.1以降が必要です。Chef InSpecパッケージは、Automateをアップグレードする、Chef Workstationをアップグレードする、Chef Infra Clientをアップグレードする、クックブックで &lt;code&gt;node['audit']['inspec_version']&lt;/code&gt; 属性を設定するなど、いくつかの方法でアップグレードできます。</target>
        </trans-unit>
        <trans-unit id="f3c3e838c5df34c8029af1d6d14e6a67d4aa580b" translate="yes" xml:space="preserve">
          <source>August 31, 2019</source>
          <target state="translated">2019年8月31日</target>
        </trans-unit>
        <trans-unit id="9917748cf5f95df44776a66177e1405cb79fe63f" translate="yes" xml:space="preserve">
          <source>AuthN Service</source>
          <target state="translated">AuthNサービス</target>
        </trans-unit>
        <trans-unit id="7dfb258c4eb86e35cd60b3324b884a2297536f01" translate="yes" xml:space="preserve">
          <source>AuthZ Service</source>
          <target state="translated">AuthZサービス</target>
        </trans-unit>
        <trans-unit id="4ddcf30135bcf4e1b9cdd96686d4f3eeaa61250f" translate="yes" xml:space="preserve">
          <source>Authenticate to the target host with this password.&quot;</source>
          <target state="translated">このパスワードでターゲットホストを認証します。</target>
        </trans-unit>
        <trans-unit id="4aefbe7bff51abd1c8c39b88b719c698d63d82b2" translate="yes" xml:space="preserve">
          <source>Authenticate to the target host with this user account.</source>
          <target state="translated">このユーザーアカウントでターゲットホストを認証します。</target>
        </trans-unit>
        <trans-unit id="400a61c4a582ab9261105e82c9439010017e56ae" translate="yes" xml:space="preserve">
          <source>Authenticate with Azure Container Registry from Azure Container Service</source>
          <target state="translated">Azure Container ServiceからAzure Container Registryで認証する</target>
        </trans-unit>
        <trans-unit id="5991165ff7e4c219905623028b74233b72e1cfff" translate="yes" xml:space="preserve">
          <source>Authenticated API Requests</source>
          <target state="translated">認証済み API リクエスト</target>
        </trans-unit>
        <trans-unit id="2e0e8dcb3140334eb403633555f6fc4cd63ae5c7" translate="yes" xml:space="preserve">
          <source>Authenticating Existing Chef Automate and Builder Installations</source>
          <target state="translated">既存のChef自動化とビルダーのインストールを認証する</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="e9a482c3e6fdbaf6f0ce7ac1850719d22739b824" translate="yes" xml:space="preserve">
          <source>Authentication Headers</source>
          <target state="translated">認証ヘッダ</target>
        </trans-unit>
        <trans-unit id="259182d2b39530cc1d61fa0f36b918da2852b48e" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization</source>
          <target state="translated">認証と認可</target>
        </trans-unit>
        <trans-unit id="baccae5739be67739ebc84c2c75a4c31e94de18e" translate="yes" xml:space="preserve">
          <source>Authentication between client (&lt;code&gt;hab&lt;/code&gt; CLI) and server (Supervisor) is achieved using a shared secret. The &lt;code&gt;hab&lt;/code&gt; CLI receives its secret from a configuration file (&lt;code&gt;~/.hab/config/cli.toml&lt;/code&gt;) or from an environment variable (&lt;code&gt;HAB_CTL_SECRET&lt;/code&gt;). The Supervisor reads its secret from its &lt;code&gt;CTL_SECRET&lt;/code&gt; file, located at &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt;. When the value used by &lt;code&gt;hab&lt;/code&gt; matches the one used by the Supervisor, the requested command is carried out.</source>
          <target state="translated">クライアント（ &lt;code&gt;hab&lt;/code&gt; CLI）とサーバー（Supervisor）の間の認証は、共有シークレットを使用して実現されます。 &lt;code&gt;hab&lt;/code&gt; CLIは、構成ファイルからその秘密を受け取る（ &lt;code&gt;~/.hab/config/cli.toml&lt;/code&gt; ）または環境変数から（ &lt;code&gt;HAB_CTL_SECRET&lt;/code&gt; ）。スーパーバイザーは、 &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; にある &lt;code&gt;CTL_SECRET&lt;/code&gt; ファイルからシークレットを読み取ります。 &lt;code&gt;hab&lt;/code&gt; が使用する値がスーパーバイザーが使用する値と一致すると、要求されたコマンドが実行されます。</target>
        </trans-unit>
        <trans-unit id="8f68c8c0ffcedeca396a5ef07931d1fc4747a54c" translate="yes" xml:space="preserve">
          <source>Authentication for Elasticsearch and Kibana</source>
          <target state="translated">ElasticsearchとKibanaの認証</target>
        </trans-unit>
        <trans-unit id="4208b7d5916b6e981c4115bba82715936a4a135a" translate="yes" xml:space="preserve">
          <source>Authentication or authorization</source>
          <target state="translated">認証または認可</target>
        </trans-unit>
        <trans-unit id="a5227efabe1df4b20e56993a3d8bf32ce8448161" translate="yes" xml:space="preserve">
          <source>Authentication protocol 1.3 is only supported on Chef Server versions 12.4.0 and above.</source>
          <target state="translated">認証プロトコル1.3はChef Serverのバージョン12.4.0以上でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="e96741fbfe7eba4dce656c0c623e8fa11df63b44" translate="yes" xml:space="preserve">
          <source>Authentication times out after three minutes if you don&amp;rsquo;t keep a browser window open on Chef Automate.</source>
          <target state="translated">Chef Automateでブラウザウィンドウを開いたままにしないと、認証は3分後にタイムアウトになります。</target>
        </trans-unit>
        <trans-unit id="dbaa06aa0d5da513d4dd826d37407f2e1afa28c7" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef Infra Server requires a specific set of HTTP headers signed using a private key that is associated with the client making the request. The request is authorized if the Chef Infra Server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="translated">Chef Infra サーバーへの認証には、リクエストを行うクライアントに関連付けられた秘密鍵を使用して署名された特定の HTTP ヘッダーのセットが必要です。Chef Infra サーバが公開鍵を使用して署名を検証できる場合、リクエストは承認されます。許可されたアクションのみが許可されます。</target>
        </trans-unit>
        <trans-unit id="12624bb509e41c5e9e239fc581c27ccd77c4112f" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef server occurs when a specific set of HTTP headers are signed using a private key that is associated with the machine from which the request is made. The request is authorized if the Chef server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="translated">Chefサーバへの認証は、特定のHTTPヘッダのセットが、リクエストが行われたマシンに関連付けられた秘密鍵を使用して署名されたときに発生します。Chef サーバが公開鍵を使用して署名を検証できる場合、リクエストは承認されます。許可されたアクションのみが許可されます。</target>
        </trans-unit>
        <trans-unit id="64057bbe88a62dc3a2956ba3ba7a20c18b605e01" translate="yes" xml:space="preserve">
          <source>Authentication via Existing Identity Management Systems</source>
          <target state="translated">既存のアイデンティティ管理システムによる認証</target>
        </trans-unit>
        <trans-unit id="e919dd3548ee21af2b234bad6ddb01192e169d38" translate="yes" xml:space="preserve">
          <source>Authentication, Authorization</source>
          <target state="translated">認証、認可</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="7c85fac7d86d4befec37244402d39495c8016172" translate="yes" xml:space="preserve">
          <source>Authorization token used to perform privileged operations against the depot, e.g. uploading packages or keys.</source>
          <target state="translated">パッケージや鍵のアップロードなど、デポに対して特権的な操作を行うために使用される認可トークンです。</target>
        </trans-unit>
        <trans-unit id="483e873ae5c828dba0da59bc66fb3e7542016d59" translate="yes" xml:space="preserve">
          <source>Authorization with LDAP</source>
          <target state="translated">LDAPによる認証</target>
        </trans-unit>
        <trans-unit id="8735c6161f11028aec516dce441a18614796ffbf" translate="yes" xml:space="preserve">
          <source>Authorize Communication from Chef Habitat to Chef Automate</source>
          <target state="translated">シェフハビタットからシェフ自動化への通信を許可する</target>
        </trans-unit>
        <trans-unit id="3b3bbe7d3dea0ebbf820c35f45b2d76ea99923d4" translate="yes" xml:space="preserve">
          <source>Auto-build Option</source>
          <target state="translated">オートビルドオプション</target>
        </trans-unit>
        <trans-unit id="9855d05ce888d558e06af24a463927eebdfac110" translate="yes" xml:space="preserve">
          <source>Auto-provisioned users</source>
          <target state="translated">オートプロビジョニングされたユーザー</target>
        </trans-unit>
        <trans-unit id="cad33846801c94ea43e07ae3a46d0486a8ba13fd" translate="yes" xml:space="preserve">
          <source>Auto-update . Set to &lt;code&gt;true&lt;/code&gt; to auto update the version of the Azure Chef Extension when the virtual machine is restarted. For example, if this option is enabled, a virtual machine that has version &lt;code&gt;1205.12.2.0&lt;/code&gt; will be updated automatically to &lt;code&gt;1205.12.2.1&lt;/code&gt; when it is published.</source>
          <target state="translated">自動更新 。仮想マシンの再起動時にAzureChef Extensionのバージョンを自動更新するには、 &lt;code&gt;true&lt;/code&gt; に設定します。たとえば、このオプションが有効になっている場合、バージョン &lt;code&gt;1205.12.2.0&lt;/code&gt; の仮想マシンは、公開時に &lt;code&gt;1205.12.2.1&lt;/code&gt; に自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="30ecfb1257b197a0bd403e16d0c752a5a266a5bf" translate="yes" xml:space="preserve">
          <source>Auto-update Chef Infra Client. Set to &lt;code&gt;true&lt;/code&gt; to auto update the version of the Azure Chef Extension when the virtual machine is restarted. For example, if this option is enabled, a virtual machine that has version &lt;code&gt;1205.12.2.0&lt;/code&gt; will be updated automatically to &lt;code&gt;1205.12.2.1&lt;/code&gt; when it is published. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chefインフラクライアントを自動更新します。仮想マシンの再起動時にAzureChef Extensionのバージョンを自動更新するには、 &lt;code&gt;true&lt;/code&gt; に設定します。たとえば、このオプションが有効になっている場合、バージョン &lt;code&gt;1205.12.2.0&lt;/code&gt; の仮想マシンは、公開時に &lt;code&gt;1205.12.2.1&lt;/code&gt; に自動的に更新されます。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28c4ff9fb601f2e4e7d12e06fe10089d9099b59d" translate="yes" xml:space="preserve">
          <source>AutoPkg</source>
          <target state="translated">AutoPkg</target>
        </trans-unit>
        <trans-unit id="0a29368a2b01ba5d821e0944c40ec916e012a001" translate="yes" xml:space="preserve">
          <source>AutoPkg is an automation framework for macOS software packaging and distribution, oriented towards the tasks one would normally perform manually to prepare third-party software for mass deployment to managed clients.</source>
          <target state="translated">AutoPkgはmacOSソフトウェアのパッケージングと配布のための自動化フレームワークで、管理されているクライアントに大量にデプロイするためのサードパーティ製ソフトウェアを準備するために通常は手動で行うタスクを対象としています。</target>
        </trans-unit>
        <trans-unit id="2bf71cedf2ba9e7e348e603ad9d98149bb844d6a" translate="yes" xml:space="preserve">
          <source>AutoPkg is an automation framework for macOS software packaging and distribution, oriented towards the tasks one would perform manually to prepare third-party software for mass deployment to managed clients.</source>
          <target state="translated">AutoPkgはmacOSソフトウェアのパッケージングと配布のための自動化フレームワークで、管理されているクライアントに大量にデプロイするためのサードパーティ製ソフトウェアを準備するために手動で実行するタスクを対象としています。</target>
        </trans-unit>
        <trans-unit id="f92a8b9db8dc1c3f56db4d524341cd9e5a3925ba" translate="yes" xml:space="preserve">
          <source>Autocorrecting Cookstyle Warnings</source>
          <target state="translated">クックスタイルの警告を自動修正する</target>
        </trans-unit>
        <trans-unit id="dc12f66a0409c8bb7e20b1acb07135cd18559a22" translate="yes" xml:space="preserve">
          <source>Automate</source>
          <target state="translated">Automate</target>
        </trans-unit>
        <trans-unit id="23b42631da911fb111b86cfbf48c128611d894a8" translate="yes" xml:space="preserve">
          <source>Automate 2 Architecture</source>
          <target state="translated">2アーキテクチャを自動化する</target>
        </trans-unit>
        <trans-unit id="50caabc63e4dd1ab511e8b3730188bbc05783db6" translate="yes" xml:space="preserve">
          <source>Automate CLI Commands</source>
          <target state="translated">CLIコマンドの自動化</target>
        </trans-unit>
        <trans-unit id="8b2776958414b357ca31a0c50a38ee0dc511cba0" translate="yes" xml:space="preserve">
          <source>Automate Docker Container Publishing Flow</source>
          <target state="translated">Dockerコンテナのパブリッシングフローを自動化する</target>
        </trans-unit>
        <trans-unit id="055136d4fd930590bdd77217628edac04b1ac6dc" translate="yes" xml:space="preserve">
          <source>Automate Gateway</source>
          <target state="translated">ゲートウェイの自動化</target>
        </trans-unit>
        <trans-unit id="72e012cc536aac2a0d81e1531559f3e6255c25c6" translate="yes" xml:space="preserve">
          <source>Automate Reporter</source>
          <target state="translated">レポーターの自動化</target>
        </trans-unit>
        <trans-unit id="e50956f6cb1b6aeb7101a266669cfe86e968bf06" translate="yes" xml:space="preserve">
          <source>Automate With Workflow - 8GB RAM recommended</source>
          <target state="translated">ワークフローで自動化-8GB RAM推奨</target>
        </trans-unit>
        <trans-unit id="83c3f746a2209847c900df05cf33e8231006be7f" translate="yes" xml:space="preserve">
          <source>Automate archive only</source>
          <target state="translated">アーカイブのみを自動化</target>
        </trans-unit>
        <trans-unit id="669739c91233d5370f2f7e8767e2b93a9ce9590f" translate="yes" xml:space="preserve">
          <source>Automate has its own reconfigure tool, &lt;code&gt;automate-ctl&lt;/code&gt;. This tool walks users through the install and setup of Automate. The Chef license is accepted after that in the browser. Please follow the in-product prompts.</source>
          <target state="translated">Automateには、独自の再構成ツール、 &lt;code&gt;automate-ctl&lt;/code&gt; ます。このツールは、Automateのインストールとセットアップをユーザーに説明します。その後、Chefライセンスがブラウザで受け入れられます。製品内のプロンプトに従ってください。</target>
        </trans-unit>
        <trans-unit id="79c3c54c90828e9d3cdfe52d1fbb9e75e8e66fbd" translate="yes" xml:space="preserve">
          <source>Automate uses port &lt;code&gt;636&lt;/code&gt; by default. To override the port, append it to the host setting, e.g.</source>
          <target state="translated">Automateはデフォルトでポート &lt;code&gt;636&lt;/code&gt; を使用します。ポートを上書きするには、ポートをホスト設定に追加します。例：</target>
        </trans-unit>
        <trans-unit id="57264f0966c41c3055ac915924633f5e99d930aa" translate="yes" xml:space="preserve">
          <source>Automated Builds</source>
          <target state="translated">自動ビルド</target>
        </trans-unit>
        <trans-unit id="30c1aa8f6412cb4840906939dd7af01e38cdc5f3" translate="yes" xml:space="preserve">
          <source>Automated Scaffolding</source>
          <target state="translated">足場の自動化</target>
        </trans-unit>
        <trans-unit id="6665e344ddd5f4f3c3b0845e8f46eb325337d350" translate="yes" xml:space="preserve">
          <source>Automatic (Ohai)</source>
          <target state="translated">オートマチック(オハイ</target>
        </trans-unit>
        <trans-unit id="353f5177a1bfcbce4a2c25a083394f58ee0735ce" translate="yes" xml:space="preserve">
          <source>Automatic Attributes</source>
          <target state="translated">自動属性</target>
        </trans-unit>
        <trans-unit id="ec083f42d3cc45eaa7947db6925856ed10d2672a" translate="yes" xml:space="preserve">
          <source>Automatic Installation (recommended)</source>
          <target state="translated">自動インストール(推奨</target>
        </trans-unit>
        <trans-unit id="4eb15eab064afa0af10b36b4e8e41c769f07de8b" translate="yes" xml:space="preserve">
          <source>Automatic Node Run Data Collection with Chef Infra Server</source>
          <target state="translated">Chef Infra Serverによるノード実行データの自動収集</target>
        </trans-unit>
        <trans-unit id="ad323278039669f3f916bc62c7c7fc17b075537d" translate="yes" xml:space="preserve">
          <source>Automatic Proxy Config</source>
          <target state="translated">自動プロキシ設定</target>
        </trans-unit>
        <trans-unit id="e058d8490e0e3376f4c3339040d8813299af411b" translate="yes" xml:space="preserve">
          <source>Automatic SAML configuration through Identity Provider metadata</source>
          <target state="translated">Identity Providerのメタデータを介したSAMLの自動構成</target>
        </trans-unit>
        <trans-unit id="b4e9aea5df7d91f728780cd6b4ae6fcd85db7991" translate="yes" xml:space="preserve">
          <source>Automatic scaling is based on request rate, response latencies, and other application metrics.</source>
          <target state="translated">自動スケーリングは、リクエストレート、レスポンスレイテンシー、その他のアプリケーションメトリクスに基づいて行われます。</target>
        </trans-unit>
        <trans-unit id="7c70f368f277153573a8d9c0046807779d8d3b93" translate="yes" xml:space="preserve">
          <source>Automatically add localhost and any local IP addresses to the configured FQDNs. Useful in combination with &lt;code&gt;nginx['strict_host_header']&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">設定されたFQDNにローカルホストとローカルIPアドレスを自動的に追加します。 &lt;code&gt;nginx['strict_host_header']&lt;/code&gt; と組み合わせて使用​​すると便利です。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8db00ae2a71b02b76785f78f77615b51e66d0d7" translate="yes" xml:space="preserve">
          <source>Automatically calculated based on available memory.</source>
          <target state="translated">使用可能なメモリに基づいて自動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="0b7f2ea0e9239465d6e4f8c6ab08b1096dc7ff82" translate="yes" xml:space="preserve">
          <source>Automatically computed by Elasticsearch based on available memory. Specify in MB if you wish to override.</source>
          <target state="translated">Elasticsearchが利用可能なメモリに基づいて自動的に計算します。オーバーライドする場合はMB単位で指定してください。</target>
        </trans-unit>
        <trans-unit id="1ccc740c95deecb7012696544174ab11024ce93a" translate="yes" xml:space="preserve">
          <source>Automatically handles authentication</source>
          <target state="translated">認証を自動的に処理</target>
        </trans-unit>
        <trans-unit id="7802f42821505282942409a14b4622cc513dabef" translate="yes" xml:space="preserve">
          <source>Automatically import the specified key when setting up the repository.</source>
          <target state="translated">リポジトリの設定時に指定したキーを自動的にインポートします。</target>
        </trans-unit>
        <trans-unit id="6ec8a853090aa7d9892125f1b8bf297db60a2986" translate="yes" xml:space="preserve">
          <source>Automatically install minor updates. Default is False</source>
          <target state="translated">マイナーアップデートを自動的にインストールします。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="99c8ebab682d5d752ee2f4bc6db5b6734d69e7c5" translate="yes" xml:space="preserve">
          <source>Automatically install the Homebrew cask tap, if necessary.</source>
          <target state="translated">必要に応じて、Homebrewカスクタップを自動的にインストールします。</target>
        </trans-unit>
        <trans-unit id="a129f1f55f313122fe7dafb7ef1113a6642b3d70" translate="yes" xml:space="preserve">
          <source>Automatically supports why-run mode, unlike custom resources</source>
          <target state="translated">カスタムリソースとは異なり、自動的にwhy-runモードをサポートします。</target>
        </trans-unit>
        <trans-unit id="431fb25dad0ca30d5b49d817704da1be7ad0a1f3" translate="yes" xml:space="preserve">
          <source>Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.</source>
          <target state="translated">この NodePool のオートスケーラの設定。オートスケーラは有効な設定が存在する場合にのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="0ba300730fa9fb6b6229a4d5ed08ab0455ad4a3d" translate="yes" xml:space="preserve">
          <source>Available Memory</source>
          <target state="translated">利用可能なメモリ</target>
        </trans-unit>
        <trans-unit id="021ed450ffbbe161fae9f276ff0c6495b3cbf04e" translate="yes" xml:space="preserve">
          <source>Available Supermarket profiles can be listed with &lt;code&gt;inspec supermarket profiles&lt;/code&gt;.</source>
          <target state="translated">利用可能なスーパーマーケットプロファイルは、 &lt;code&gt;inspec supermarket profiles&lt;/code&gt; とともに一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="9777a9fbca64743822c6d76bcf154110e850dbab" translate="yes" xml:space="preserve">
          <source>Available data cleanup configuration parameters:</source>
          <target state="translated">利用可能なデータクリーンアップ設定パラメータ。</target>
        </trans-unit>
        <trans-unit id="d216de02f4e665618a338eb0613c526f39a02ed9" translate="yes" xml:space="preserve">
          <source>Available for list policies.</source>
          <target state="translated">リストポリシーで利用可能。</target>
        </trans-unit>
        <trans-unit id="f679e9071f542206074e85ca590b69d0ad1e3ffa" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;controls&lt;/code&gt;/&lt;code&gt;control&lt;/code&gt; in your control filenames</source>
          <target state="translated">コントロールファイル名で &lt;code&gt;controls&lt;/code&gt; / &lt;code&gt;control&lt;/code&gt; を避ける</target>
        </trans-unit>
        <trans-unit id="2206ec47052ac7440d20a158eed8cd13b0603310" translate="yes" xml:space="preserve">
          <source>Avoid Ruby IO on files</source>
          <target state="translated">ファイルへのRuby IOを避ける</target>
        </trans-unit>
        <trans-unit id="1e9d42d49747b2b1e71c32aac874caa16a3d7e9a" translate="yes" xml:space="preserve">
          <source>Avoid Ruby gem dependencies in controls</source>
          <target state="translated">コントロールにおける Ruby gem の依存を避ける</target>
        </trans-unit>
        <trans-unit id="6e1cff543c08d17f75245cb0e42262323c4f5ed9" translate="yes" xml:space="preserve">
          <source>Avoid Ruby system calls</source>
          <target state="translated">Rubyのシステムコールを避ける</target>
        </trans-unit>
        <trans-unit id="b1e4a917b995e4dc68c0c1bec0454e1a9024b7ee" translate="yes" xml:space="preserve">
          <source>Avoid debugging calls (in production)</source>
          <target state="translated">デバッグコールを避ける (プロダクションでは)</target>
        </trans-unit>
        <trans-unit id="03450daebbfaf7035ffbff1d3cb218ef35604c12" translate="yes" xml:space="preserve">
          <source>Avoid dynamic elements in the control IDs</source>
          <target state="translated">コントロールIDの動的要素を避ける</target>
        </trans-unit>
        <trans-unit id="3131b4211160ef3cd8af2c0869782d54b2e6d9a9" translate="yes" xml:space="preserve">
          <source>Avoid shelling out</source>
          <target state="translated">支出を避ける</target>
        </trans-unit>
        <trans-unit id="cf0fb6092e89498e9760c81c658da13b844c1177" translate="yes" xml:space="preserve">
          <source>Avoid stopping an update unless absolutely necessary. It will leave your system in an unknown state where only some resources have been moved into their projects while others still remain in old projects. Only another successful update will restore the system to an up-to-date state.</source>
          <target state="translated">絶対に必要でない限り、更新を停止することは避けてください。更新を停止すると、システムが未知の状態になり、一部のリソースだけがそのプロジェクトに移動され、他のリソースは古いプロジェクトに残ったままになります。更新が成功した場合のみ、システムを最新の状態に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="dc2371fe4ccb3f3ccf8c4302e9f03e65d17c5466" translate="yes" xml:space="preserve">
          <source>Avoid the following patterns:</source>
          <target state="translated">以下のパターンは避けましょう。</target>
        </trans-unit>
        <trans-unit id="ab8f8f1ba8f6f2ea41210bdf72313a5586c20cb0" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary parentheses in matchers</source>
          <target state="translated">マッチャーの不要な括弧を避ける</target>
        </trans-unit>
        <trans-unit id="3867da054847d8ec495df49fa3552266dfbffa69" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary string interpolation</source>
          <target state="translated">不要な文字列補間を避ける</target>
        </trans-unit>
        <trans-unit id="5fa434dda6ad970ae52c99a9e77d98683eacdfcf" translate="yes" xml:space="preserve">
          <source>Avoid wrapping controls in conditional statements</source>
          <target state="translated">条件文でコントロールをラップしないようにする</target>
        </trans-unit>
        <trans-unit id="bc5522b2f46bb076d554e1f0ecba681c398838f9" translate="yes" xml:space="preserve">
          <source>Avoid:</source>
          <target state="translated">Avoid:</target>
        </trans-unit>
        <trans-unit id="6f85b2bfcbb0fa2f75065b9806f3edc8026fee56" translate="yes" xml:space="preserve">
          <source>Azure</source>
          <target state="translated">Azure</target>
        </trans-unit>
        <trans-unit id="8944a54f830d190ae0eb91450405ce1bd4e2ec83" translate="yes" xml:space="preserve">
          <source>Azure AD</source>
          <target state="translated">アジュールAD</target>
        </trans-unit>
        <trans-unit id="17920eb014ee02bf8bb29097b823e0276bdba5e5" translate="yes" xml:space="preserve">
          <source>Azure AD lets you choose the &lt;em&gt;NameID&lt;/em&gt; field, and optionally apply &lt;em&gt;transformations&lt;/em&gt; to it. The SAML configuration setting is only respected if the selected value in &amp;ldquo;Choose name identifier format&amp;rdquo; in Azure AD matches the &lt;code&gt;name_id_policy_format&lt;/code&gt; configuration in Chef Automate.</source>
          <target state="translated">Azure ADでは、&lt;em&gt;NameID&lt;/em&gt;フィールドを選択し、オプションで&lt;em&gt;変換&lt;/em&gt;を適用できます。SAML構成設定は、 &lt;code&gt;name_id_policy_format&lt;/code&gt; 「名前識別子形式の選択」で選択した値がChefAutomateのname_id_policy_format構成と一致する場合にのみ尊重されます。</target>
        </trans-unit>
        <trans-unit id="8fb70089d1cdc864802dcef8ec01ab1ec6c5c9c9" translate="yes" xml:space="preserve">
          <source>Azure Active Directory</source>
          <target state="translated">アズールアクティブディレクトリ</target>
        </trans-unit>
        <trans-unit id="b07300d971a11e626c5352c9313d82f17529ed55" translate="yes" xml:space="preserve">
          <source>Azure CLI</source>
          <target state="translated">Azure CLI</target>
        </trans-unit>
        <trans-unit id="a4096a6c8905abd853de2888fb62fbffe749dbe9" translate="yes" xml:space="preserve">
          <source>Azure Cloud Shell Installation</source>
          <target state="translated">Azureクラウドシェルのインストール</target>
        </trans-unit>
        <trans-unit id="8d68af50f8b5b4736cddfe7540fe684904f91136" translate="yes" xml:space="preserve">
          <source>Azure Container Registry (ACR)</source>
          <target state="translated">Azure Container Registry (ACR)</target>
        </trans-unit>
        <trans-unit id="f949d20f3e34eb6f1d52f3a6310ce61bfd4e85a5" translate="yes" xml:space="preserve">
          <source>Azure Container Registry is a managed Docker container registry service used for storing private Docker container images. It&amp;rsquo;s a fully managed Azure resource and gives you local, network-close storage of your container images when deploying to AKS. Chef Habitat Builder has native integration with this service so you can publish your packages directly to Azure Container Registry.</source>
          <target state="translated">Azure Container Registryは、プライベートDockerコンテナーイメージを格納するために使用されるマネージドDockerコンテナーレジストリサービスです。これは完全に管理されたAzureリソースであり、AKSにデプロイするときに、コンテナーイメージのローカルのネットワーククローズストレージを提供します。Chef Habitat Builderはこのサービスとネイティブに統合されているため、パッケージをAzure ContainerRegistryに直接公開できます。</target>
        </trans-unit>
        <trans-unit id="dda6ef333d7f414a267c927b9dac79a1805dba17" translate="yes" xml:space="preserve">
          <source>Azure Container Services (AKS)</source>
          <target state="translated">Azureコンテナサービス(AKS</target>
        </trans-unit>
        <trans-unit id="7a13e08b6adc01a2ed587fada5fec9e6ef9bbcdc" translate="yes" xml:space="preserve">
          <source>Azure Permissions</source>
          <target state="translated">Azureのアクセス許可</target>
        </trans-unit>
        <trans-unit id="e0b91dafc5d1222517a5ef2ddb893793de719f49" translate="yes" xml:space="preserve">
          <source>Azure Platform Support in InSpec</source>
          <target state="translated">インスペックのAzureプラットフォームサポート</target>
        </trans-unit>
        <trans-unit id="d634bcc20aca3c1ea4a1f9e73927d90825b914f1" translate="yes" xml:space="preserve">
          <source>Azure Portal</source>
          <target state="translated">アジュールポータル</target>
        </trans-unit>
        <trans-unit id="06e691ba0afa4ef8d2510104fa81efd7408078a3" translate="yes" xml:space="preserve">
          <source>Azure Powershell cmdlets</source>
          <target state="translated">Azure Powershell のコマンドレット</target>
        </trans-unit>
        <trans-unit id="343b94719cf48c1d6d8d5a764b7bceb060abb9a4" translate="yes" xml:space="preserve">
          <source>Azure REST API Version</source>
          <target state="translated">Azure REST APIのバージョン</target>
        </trans-unit>
        <trans-unit id="b08836143f67f455f7737d9233cb228c455a35b6" translate="yes" xml:space="preserve">
          <source>Azure REST API version</source>
          <target state="translated">Azure REST APIのバージョン</target>
        </trans-unit>
        <trans-unit id="7f31d0becd6fb010582a1ee920fcf7a18b562e10" translate="yes" xml:space="preserve">
          <source>Azure Ruby SDK - Compute</source>
          <target state="translated">Azure Ruby SDK-計算</target>
        </trans-unit>
        <trans-unit id="5566d237e23309a007062978b47f1c3ca4ec8694" translate="yes" xml:space="preserve">
          <source>Azure Ruby SDK - Resources</source>
          <target state="translated">Azure Ruby SDK-リソース</target>
        </trans-unit>
        <trans-unit id="babbca19233565212cf5d652cfaa6046cee66609" translate="yes" xml:space="preserve">
          <source>Azure VM Scanning with Chef Automate</source>
          <target state="translated">ChefによるAzure VMのスキャン 自動化</target>
        </trans-unit>
        <trans-unit id="1e338db6bd6eaa31100ce7edaaa9d2da5fadf1e5" translate="yes" xml:space="preserve">
          <source>Azure extensions have network access limitations. See the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/features-linux#network-access&quot;&gt;Azure documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Azure拡張機能には、ネットワークアクセスの制限があります。詳細については、&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/features-linux#network-access&quot;&gt;Azureのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8949d23eb1e62bc0539a98ee7234659c954bbd9a" translate="yes" xml:space="preserve">
          <source>Azure resource ID.</source>
          <target state="translated">AzureリソースIDです。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="9ad2cc2e5ccad5692284cedc56d7fe64b75f9c05" translate="yes" xml:space="preserve">
          <source>BACKUP</source>
          <target state="translated">BACKUP</target>
        </trans-unit>
        <trans-unit id="0893567fc1d8f46c69a1bd9bf54d359d02b5dad7" translate="yes" xml:space="preserve">
          <source>BASIC</source>
          <target state="translated">BASIC</target>
        </trans-unit>
        <trans-unit id="28d6304dd6d05d172bd2c2ad4fe98d0bebabf4de" translate="yes" xml:space="preserve">
          <source>BETA</source>
          <target state="translated">BETA</target>
        </trans-unit>
        <trans-unit id="1631c15ec77ccd780f975c79628d2f1a3bb51534" translate="yes" xml:space="preserve">
          <source>BGP information specific to this router.</source>
          <target state="translated">このルータに固有のBGP情報。</target>
        </trans-unit>
        <trans-unit id="d9eeb2cb8428f7f7837b638c0525440c6fa21b5a" translate="yes" xml:space="preserve">
          <source>BIGTABLE</source>
          <target state="translated">BIGTABLE</target>
        </trans-unit>
        <trans-unit id="d05fb01e0b399387c3a28586f5fd296e2670d6a3" translate="yes" xml:space="preserve">
          <source>BINARY</source>
          <target state="translated">BINARY</target>
        </trans-unit>
        <trans-unit id="292c7af4fff95bcd09dba6dcdd4b5f6d636b95c8" translate="yes" xml:space="preserve">
          <source>BOOL</source>
          <target state="translated">BOOL</target>
        </trans-unit>
        <trans-unit id="ab68d8e893a82cff70979ba20bec0023dbfe4be3" translate="yes" xml:space="preserve">
          <source>BOOLEAN</source>
          <target state="translated">BOOLEAN</target>
        </trans-unit>
        <trans-unit id="03056823a83cba373e3d93c8632458fb85f57534" translate="yes" xml:space="preserve">
          <source>BOX-PUB-1</source>
          <target state="translated">BOX-PUB-1</target>
        </trans-unit>
        <trans-unit id="ffea48cf058e7ecf9357793a761137b930492ebd" translate="yes" xml:space="preserve">
          <source>BOX-SEC-1</source>
          <target state="translated">BOX-SEC-1</target>
        </trans-unit>
        <trans-unit id="71bd7104729f6b2cf10c957e8e8ff50f600a70fe" translate="yes" xml:space="preserve">
          <source>BUILDTIME_ENVIRONMENT</source>
          <target state="translated">BUILDTIME_ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="eebf79ff26b2603cf7c40d9cc247d0e0996333bb" translate="yes" xml:space="preserve">
          <source>BUILDTIME_ENVIRONMENT_PROVENANCE</source>
          <target state="translated">BUILDTIME_ENVIRONMENT_PROVENANCE</target>
        </trans-unit>
        <trans-unit id="ed61a8f823d2a35f5d413b1ecb91ee74f1b4969c" translate="yes" xml:space="preserve">
          <source>BUILD_DEPS</source>
          <target state="translated">BUILD_DEPS</target>
        </trans-unit>
        <trans-unit id="bd1c85b1054fa89c32caff63b2a439429d3a9e3e" translate="yes" xml:space="preserve">
          <source>BUILD_TDEPS</source>
          <target state="translated">BUILD_TDEPS</target>
        </trans-unit>
        <trans-unit id="7d70f6a49c217b2daa206e8811d0f77109ad0a96" translate="yes" xml:space="preserve">
          <source>BYTES</source>
          <target state="translated">BYTES</target>
        </trans-unit>
        <trans-unit id="3b6488e9f997b0ee6944f5c9326c56f3a166328c" translate="yes" xml:space="preserve">
          <source>Back End</source>
          <target state="translated">バックエンド</target>
        </trans-unit>
        <trans-unit id="2373918c983d9edeb430ef70f78590917fa7f1e5" translate="yes" xml:space="preserve">
          <source>Back up Chef Automate Census data. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef AutomateCensusデータをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a8585bbd225fa9171fc8a940cf4fa8451ee4541" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate PostgreSQL database. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef AutomatePostgreSQLデータベースをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2235a522d45e4d212a97df6e355bcdfdc9dc0614" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate RabbitMQ queues. It is disabled by default because it&amp;rsquo;s rare to have a lengthy RabbitMQ queue and the backup procedure requires temporarily shutting down Chef Automate services when backing up the queues. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef AutomateRabbitMQキューをバックアップします。長いRabbitMQキューが存在することはまれであり、バックアップ手順ではキューをバックアップするときにChef Automateサービスを一時的にシャットダウンする必要があるため、デフォルトでは無効になっています。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e4787e4cc20d054c7001a69441fcdc065fa0cbb" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate compliance profiles. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ChefAutomateコンプライアンスプロファイルをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd84408ca23e4257a44e03ba0d9ce0b10269c23b" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate configuration directory. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ChefAutomate構成ディレクトリをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="182642f36e76aa68a54291d4ead8aeb2b2c301d5" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate git repositories. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automategitリポジトリをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4ee0d2dd2653ea4efb39c0fb9e310f9bc34e041" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate license file. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ChefAutomateライセンスファイルをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0ef1872ec8dcec203d4256c5c07c45bc9d0ece2" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate notification rules. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ChefAutomate通知ルールをバックアップします。デフォルト値： &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e503fbe5ed1aead56a07e44345239f73ef4d462" translate="yes" xml:space="preserve">
          <source>Back up the Chef Infra Server configuration directory. Useful for instances when Chef Automate and Chef Infra Server are installed on a single node. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef InfraServer構成ディレクトリをバックアップします。ChefAutomateとChefInfraServerが単一のノードにインストールされている場合に便利です。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="829616fe746d0afe2568fbc3339e20a446baaddc" translate="yes" xml:space="preserve">
          <source>Back up the Chef Infra Server data before starting the upgrade process using &lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;を使用してアップグレードプロセスを開始する前に、Chef InfraServerデータをバックアップしてください。</target>
        </trans-unit>
        <trans-unit id="5afb437332e4028b066472996dacedbb4af4df62" translate="yes" xml:space="preserve">
          <source>Back up the PostgreSQL data, remove the existing databases, and reconfigure the Chef server</source>
          <target state="translated">PostgreSQLデータのバックアップ、既存のデータベースの削除、Chefサーバの再設定を行います。</target>
        </trans-unit>
        <trans-unit id="d930a58505937e97cd278eb095dba97689ee19af" translate="yes" xml:space="preserve">
          <source>Back up the data using &lt;code&gt;knife ec backup&lt;/code&gt;, create a new backend instance, and then restore the data</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; を使用してデータをバックアップし、新しいバックエンドインスタンスを作成してから、データを復元します</target>
        </trans-unit>
        <trans-unit id="a12931b9045ac61d214bc5ba3d3ee4a8501ec425" translate="yes" xml:space="preserve">
          <source>Back up your Chef Infra Server data before starting the upgrade process using &lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;を使用してアップグレードプロセスを開始する前に、Chef InfraServerデータをバックアップしてください。</target>
        </trans-unit>
        <trans-unit id="fdfea2af9997ba09a816ece6501fca7c023e89e8" translate="yes" xml:space="preserve">
          <source>Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of DRBD and the responsiveness of the Chef server. Failover is achieved using:</source>
          <target state="translated">バックエンドマシンは、メモリ、処理能力、高速ディスク、専用ネットワークインターフェースカードを追加してスループットを向上させ、DRBDの信頼性とChefサーバーの応答性を向上させることで、垂直方向にスケーリングします。を用いてフェイルオーバーを実現しています。</target>
        </trans-unit>
        <trans-unit id="940abf9ad3d7c633569d3f3529df53dfdb5b4837" translate="yes" xml:space="preserve">
          <source>Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication.</source>
          <target state="translated">バックエンドマシンは、データの保存と検索、メッセージングとルーティング、分析処理、検索を処理します。バックエンドマシンは、ブロックレベルのレプリケーションを使用してフェイルオーバーを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2759124b25ea67d5a5f358b1fadabe1f30b249b5" translate="yes" xml:space="preserve">
          <source>Back-end server #1 fails gracefully (all data is synced)</source>
          <target state="translated">バックエンドサーバ#1が正常に失敗する(すべてのデータが同期される</target>
        </trans-unit>
        <trans-unit id="dc330d5d3fdb66614bfc685e03599af7e41c6930" translate="yes" xml:space="preserve">
          <source>Back-end server #1 hard fails badly (unsynced data)</source>
          <target state="translated">バックエンドサーバ#1のハードがひどく失敗する(同期されていないデータ)</target>
        </trans-unit>
        <trans-unit id="5f315bfee58c6e531615c7454b4c241a8007f343" translate="yes" xml:space="preserve">
          <source>Back-end server #2 fails gracefully (all data is synced)</source>
          <target state="translated">バックエンドサーバ#2が正常に失敗する(すべてのデータが同期される</target>
        </trans-unit>
        <trans-unit id="89a1f6fa4123e416399e2abbe6bed6ee5b34a574" translate="yes" xml:space="preserve">
          <source>Back-end server #2 hard fails badly (unsynced data)</source>
          <target state="translated">バックエンドサーバ#2のハードがひどく失敗する(データが同期されていない</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="f811d26984a703bdad0c17b84c07f7e2a330bc41" translate="yes" xml:space="preserve">
          <source>Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.</source>
          <target state="translated">バックエンドホストは、クライアント接続のメタデータに基づいて選択されます。つまり、接続がロードバランサーにリダイレクトされる前に、接続が着信接続の宛先アドレスと同じアドレスに開かれます。</target>
        </trans-unit>
        <trans-unit id="2ebda77533302b4c6618b180e6d9de88e4d4cae3" translate="yes" xml:space="preserve">
          <source>Backend servers &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;should have a dedicated connection&lt;/a&gt;. This is required for replication between the two servers.</source>
          <target state="translated">バックエンドサーバーに&lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;は専用の接続が必要&lt;/a&gt;です。これは、2つのサーバー間の複製に必要です。</target>
        </trans-unit>
        <trans-unit id="8c7d9d2c30522cdf997cdc45141c1917c87b4597" translate="yes" xml:space="preserve">
          <source>Backend servers make use of a single Amazon Elastic Block Store (EBS) volume.</source>
          <target state="translated">バックエンドサーバーは、1つのAmazon Elastic Block Store (EBS)ボリュームを利用します。</target>
        </trans-unit>
        <trans-unit id="e382920577fc766a77124fe6edd508d0fe43ef89" translate="yes" xml:space="preserve">
          <source>Backend servers will share a virtual IP address that must also be accessible from each frontend server. This virtual IP address is created and managed by the Chef server, but will also need to be added to the DNS so that all servers in the high availability configuration may access it.</source>
          <target state="translated">バックエンドサーバーは、各フロントエンドサーバーからもアクセスできる仮想IPアドレスを共有します。この仮想 IP アドレスは Chef サーバによって作成・管理されますが、高可用性構成のすべてのサーバがアクセスできるように DNS に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="dd96994d01e723dd6f9b0bdb6119722dbeb9faf0" translate="yes" xml:space="preserve">
          <source>Backup</source>
          <target state="translated">Backup</target>
        </trans-unit>
        <trans-unit id="e29ccd471022564865582470f68008a844ad7749" translate="yes" xml:space="preserve">
          <source>Backup / Restore</source>
          <target state="translated">バックアップ/リストア</target>
        </trans-unit>
        <trans-unit id="df26fed865ff98adb2dd1b6d984abb1433821224" translate="yes" xml:space="preserve">
          <source>Backup Commands</source>
          <target state="translated">バックアップコマンド</target>
        </trans-unit>
        <trans-unit id="c490d4a850779e46be31b4f0eb4f39b01cafd156" translate="yes" xml:space="preserve">
          <source>Backup Cron</source>
          <target state="translated">バックアップクローン</target>
        </trans-unit>
        <trans-unit id="8b104bcc7e3c03437f66cfcd065c9ef890f409a8" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to AWS S3</source>
          <target state="translated">外部にデプロイされたElasticsearchをAWS S3にバックアップする</target>
        </trans-unit>
        <trans-unit id="a49fa92c18495a6580595a9c72205c45cff118e1" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to GCS</source>
          <target state="translated">外部展開されたElasticsearchをGCSにバックアップする</target>
        </trans-unit>
        <trans-unit id="b4013ba28066bec71890b2c1714328d1a8315e8a" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to Local Filesystem</source>
          <target state="translated">外部展開されたElasticsearchをローカルファイルシステムにバックアップする</target>
        </trans-unit>
        <trans-unit id="4fabe62f83a5e2f86805ae2e5298b19c81d4ae3f" translate="yes" xml:space="preserve">
          <source>Backup Space Requirements</source>
          <target state="translated">バックアップスペースの要件</target>
        </trans-unit>
        <trans-unit id="a5932464fe7ee7685cdde1f28a54e89455da1784" translate="yes" xml:space="preserve">
          <source>Backup and Restore</source>
          <target state="translated">バックアップとリストア</target>
        </trans-unit>
        <trans-unit id="83e59757e302f157142ccb2f1a669bc95fc1675a" translate="yes" xml:space="preserve">
          <source>Backup and Restore a Standalone or Frontend install</source>
          <target state="translated">スタンドアロンまたはフロントエンドのインストールのバックアップとリストア</target>
        </trans-unit>
        <trans-unit id="bdf010c46a5cb3155ef00232bc37fa37bb0069da" translate="yes" xml:space="preserve">
          <source>Backup and restore a Chef Backend install</source>
          <target state="translated">Chef Backendインストールのバックアップとリストア</target>
        </trans-unit>
        <trans-unit id="90802fdf2f907c32a8bb0c3766a12243d8ce33b7" translate="yes" xml:space="preserve">
          <source>Backup the /etc/opscode and /var/opt/opscode directories and include the postgres export file as root</source>
          <target state="translated">etc/opscodeと/var/opt/opscodeディレクトリをバックアップし、postgresエクスポートファイルをルートとしてインクルードします。</target>
        </trans-unit>
        <trans-unit id="74146146cb3407fb001e6d06663416f14801beb7" translate="yes" xml:space="preserve">
          <source>Backup the &lt;code&gt;/var/opt/supermarket&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;/var/opt/supermarket&lt;/code&gt; ディレクトリをバックアップします。</target>
        </trans-unit>
        <trans-unit id="ec4f74964956211fd3a2737819b0d5cec4146a0a" translate="yes" xml:space="preserve">
          <source>Backup the data on the Chef Infra Server using &lt;code&gt;knife ec backup&lt;/code&gt;. This backup method will export all Chef Infra Server data into nested JSON files that can be used to import into the Chef Automate Azure VM. We must use the JSON-based backup and restore procedure because the Chef Infra Server data on the Chef Automate VM image is stored in a combined configuration with Chef Automate, therefore, using file based backups from your existing Chef Infra Server is not supported.</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; を使用してChefInfraServerにデータをバックアップします。このバックアップ方法では、すべてのChef Infra ServerデータがネストされたJSONファイルにエクスポートされ、Chef Automate AzureVMへのインポートに使用できます。 Chef AutomateVMイメージ上のChefInfraServerデータはChefAutomateと組み合わせた構成で保存されるため、JSONベースのバックアップと復元の手順を使用する必要があります。したがって、既存のChef InfraServerからのファイルベースのバックアップの使用はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="b040f072580ea4cefa275ae09679d4eb450b6813" translate="yes" xml:space="preserve">
          <source>Backup the data on the Chef Infra Server using &lt;code&gt;knife ec backup&lt;/code&gt;. This method will export all of your existing Chef Infra Server data as JSON. We&amp;rsquo;ll then re-import the same data into a new Chef Automate cluster. We use the JSON based backup and restore procedure because the Chef Infra Server data on the Chef Automate Marketplace AMI is stored in shared databases so copying of binary files won&amp;rsquo;t work.</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; を使用してChefInfraServerにデータをバックアップします。このメソッドは、既存のChef InfraServerデータをすべてJSONとしてエクスポートします。次に、同じデータを新しいChefAutomateクラスターに再インポートします。 Chef Automate MarketplaceAMIのChefInfra Serverデータは共有データベースに保存されているため、バイナリファイルのコピーは機能しないため、JSONベースのバックアップと復元の手順を使用します。</target>
        </trans-unit>
        <trans-unit id="283b35f8cf945c381341167c62415e5b1ac073a8" translate="yes" xml:space="preserve">
          <source>Backup to AWS S3</source>
          <target state="translated">AWS S3へのバックアップ</target>
        </trans-unit>
        <trans-unit id="1e0ae5cfbb5337915bbc347ae8837aef9684dad6" translate="yes" xml:space="preserve">
          <source>Backup to GCS</source>
          <target state="translated">GCSへのバックアップ</target>
        </trans-unit>
        <trans-unit id="5138c3f6616f0eb2dc24daea005b2c0eb3dfe8d9" translate="yes" xml:space="preserve">
          <source>Backup to a Filesystem</source>
          <target state="translated">ファイルシステムへのバックアップ</target>
        </trans-unit>
        <trans-unit id="d6a6fdd7a784a8d8ee406d61cdf5240be5131d4f" translate="yes" xml:space="preserve">
          <source>Backup your Chef Automate 1 install, to minimize the amount of data that will need to be backed up while the system is down:</source>
          <target state="translated">システムがダウンしている間にバックアップが必要なデータ量を最小限に抑えるために、Chef Automate 1のインストールをバックアップします。</target>
        </trans-unit>
        <trans-unit id="289d311c4797db9e15fed97bb2061a5000fc9eeb" translate="yes" xml:space="preserve">
          <source>BackupError</source>
          <target state="translated">BackupError</target>
        </trans-unit>
        <trans-unit id="3bb33cca64ac2a450a14e366471bbbbe9c843f3f" translate="yes" xml:space="preserve">
          <source>BackupRestoreError</source>
          <target state="translated">BackupRestoreError</target>
        </trans-unit>
        <trans-unit id="3247d77f0d3261e859d8f62d19b14e64353f4759" translate="yes" xml:space="preserve">
          <source>Backups are crucial for protecting your data from catastrophic loss and preparing a recovery procedure. The &lt;code&gt;chef-automate backup create&lt;/code&gt; command creates a single backup that contains data for all products deployed with Chef Automate, including &lt;a href=&quot;../infra_server/index&quot;&gt;Chef Infra Server&lt;/a&gt; and &lt;a href=&quot;../on_prem_builder/index&quot;&gt;Chef Habitat Builder on-prem&lt;/a&gt;. By default, Chef Automate stores backups to the filesystem in the directory &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt;. You can also configure Chef Automate to store backups in AWS S3 buckets or in Google Cloud Storage (GCS) buckets.</source>
          <target state="translated">バックアップは、壊滅的な損失からデータを保護し、回復手順を準備するために重要です。 &lt;code&gt;chef-automate backup create&lt;/code&gt; コマンドを含むシェフ自動化してデプロイされたすべての製品のためのデータが含まれ、単一のバックアップ作成&lt;a href=&quot;../infra_server/index&quot;&gt;シェフインフラサーバー&lt;/a&gt;と&lt;a href=&quot;../on_prem_builder/index&quot;&gt;オンプレムシェフの生息地Builderを&lt;/a&gt;。デフォルトでは、ChefAutomateはバックアップをファイルシステムのディレクトリ &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt; に保存します。バックアップをAWSS3バケットまたはGoogleCloud Storage（GCS）バケットに保存するようにChefAutomateを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="4ebaa2c54352b1304ea222685255527449723573" translate="yes" xml:space="preserve">
          <source>Backups created with the older &lt;code&gt;automate-ctl backup-data&lt;/code&gt; command are not supported with this command. If you wish to restore an older backup please install the version of Chef Automate that took the backup and use &lt;code&gt;automate-ctl restore-data&lt;/code&gt;</source>
          <target state="translated">古い &lt;code&gt;automate-ctl backup-data&lt;/code&gt; コマンドで作成されたバックアップは、このコマンドではサポートされていません。古いバックアップを復元したい場合は、バックアップを取得したバージョンのChef Automateをインストールし、 &lt;code&gt;automate-ctl restore-data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faeadc1ed0e5db8d070a56c237b12a320ad81f27" translate="yes" xml:space="preserve">
          <source>Bad request. The contents of the request are not formatted correctly.</source>
          <target state="translated">リクエストが間違っています。リクエストの内容が正しくフォーマットされていません。</target>
        </trans-unit>
        <trans-unit id="e60b68a177e02f02c7f8645c1f5f6ef138e2f089" translate="yes" xml:space="preserve">
          <source>Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded. The payload does not contain a well-formed &lt;code&gt;checksums&lt;/code&gt; parameter that is a hash containing a key for each checksum.</source>
          <target state="translated">要求の形式が正しくありません。オブジェクトは既にコミットされているか、1つ（または複数）のオブジェクトが適切にアップロードされていません。ペイロードには、各チェックサムのキーを含むハッシュである整形式の &lt;code&gt;checksums&lt;/code&gt; パラメータが含まれていません。</target>
        </trans-unit>
        <trans-unit id="794b03ca458ee717c8a7fd69f8c9e36f9dfa7ce8" translate="yes" xml:space="preserve">
          <source>Bad version of PostgreSQL.</source>
          <target state="translated">PostgreSQLのバージョンが悪い。</target>
        </trans-unit>
        <trans-unit id="c8af83fb4c1ea103238bcdedb758767604d9423c" translate="yes" xml:space="preserve">
          <source>Banner</source>
          <target state="translated">Banner</target>
        </trans-unit>
        <trans-unit id="3b91f32ec5f1fad1e569d0afd3521bc99f32f7b7" translate="yes" xml:space="preserve">
          <source>Bare Chef InSpec resources are instantiated and their help text is presented. You may also access the resource contents or other matchers that they define. Run &lt;code&gt;help &amp;lt;resource&amp;gt;&lt;/code&gt; to get more help on using a particular resource or see the Chef InSpec resources documentation online.</source>
          <target state="translated">ベアシェフのInSpecリソースがインスタンス化され、ヘルプテキストが表示されます。また、リソースの内容またはそれらが定義する他のマッチャーにアクセスすることもできます。 &lt;code&gt;help &amp;lt;resource&amp;gt;&lt;/code&gt; を実行して、特定のリソースの使用に関するヘルプを取得するか、ChefInSpecリソースのドキュメントをオンラインで参照してください。</target>
        </trans-unit>
        <trans-unit id="e2261a3f746931a0157736557a885eae56834946" translate="yes" xml:space="preserve">
          <source>Bare Kubernetes</source>
          <target state="translated">ベアKubernetes</target>
        </trans-unit>
        <trans-unit id="eaf48039ab23b8dbd57742cdc925807cc079aa73" translate="yes" xml:space="preserve">
          <source>Base dn to use when searching for users in LDAP, typically &lt;code&gt;OU=Users&lt;/code&gt; and then the domain. Default value: &lt;code&gt;OU=Employees,OU=Domain users,DC=examplecorp,DC=com&lt;/code&gt;.</source>
          <target state="translated">LDAPでユーザーを検索するときに使用するベースDN（通常は &lt;code&gt;OU=Users&lt;/code&gt; 、次にドメイン）。デフォルト値： &lt;code&gt;OU=Employees,OU=Domain users,DC=examplecorp,DC=com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a5536dc4dc9a4d720044454a9d7073b121db06b" translate="yes" xml:space="preserve">
          <source>Base64 encoding is used to preserve special characters in encrypted contents</source>
          <target state="translated">Base64 エンコーディングは、暗号化されたコンテンツの特殊文字を保持するために使用されます。</target>
        </trans-unit>
        <trans-unit id="022d0c770bc5baad433e124ff811629bba4291c4" translate="yes" xml:space="preserve">
          <source>Base64-encoded private key used by clients to authenticate to the cluster endpoint.</source>
          <target state="translated">クライアントがクラスタエンドポイントの認証に使用する Base64 エンコードされた秘密鍵。</target>
        </trans-unit>
        <trans-unit id="c50d6d93c6699e77ca88d1dff9692a7922f4f612" translate="yes" xml:space="preserve">
          <source>Base64-encoded public certificate that is the root of trust for the cluster.</source>
          <target state="translated">クラスタの信頼のルートとなるBase64エンコードされた公開証明書。</target>
        </trans-unit>
        <trans-unit id="c6061d6ea1dd4688d2f64185d2499f4529266df6" translate="yes" xml:space="preserve">
          <source>Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.</source>
          <target state="translated">クライアントがクラスタエンドポイントを認証するために使用する Base64 エンコードされた公開証明書。</target>
        </trans-unit>
        <trans-unit id="f5ebd1d35be376e0365da49252bbb2bfc146765f" translate="yes" xml:space="preserve">
          <source>Based on these concerns, InSpec attributes have been renamed to InSpec inputs in Chef InSpec v4.</source>
          <target state="translated">これらの懸念事項に基づいて、InSpec属性はChef InSpec v4ではInSpec入力に名称が変更されました。</target>
        </trans-unit>
        <trans-unit id="7a5251afedb4edf5cfa9e36246fa04941542bd1a" translate="yes" xml:space="preserve">
          <source>Baseline indicates if OS vulnerabilities recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">ベースラインは、仮想マシンのOS脆弱性の推奨事項が有効になっているかどうかを示します（ &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f620cacbc465c805c4e1c25e20fa57e55c09e33e" translate="yes" xml:space="preserve">
          <source>Bash</source>
          <target state="translated">Bash</target>
        </trans-unit>
        <trans-unit id="fd2137cc1f30dc8ef486e1d17244e9b4127bbd3f" translate="yes" xml:space="preserve">
          <source>Bash Plans: &lt;code&gt;attach&lt;/code&gt;</source>
          <target state="translated">Bashプラン： &lt;code&gt;attach&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b6dac7ece96a0defa85e862f31df7c8d8851f33" translate="yes" xml:space="preserve">
          <source>Bash User Data</source>
          <target state="translated">バッシュユーザデータ</target>
        </trans-unit>
        <trans-unit id="8d02d0ad3adb6565b45b0245e401f38ad6d9b710" translate="yes" xml:space="preserve">
          <source>Bash callbacks are prefixed with &lt;code&gt;do_&lt;/code&gt; and use an underscore convention. Powershell plans prefix callbacks with &lt;code&gt;Invoke-&lt;/code&gt; and use a PascalCase convention.</source>
          <target state="translated">Bashコールバックには接頭辞 &lt;code&gt;do_&lt;/code&gt; が付き、アンダースコア規則が使用されます。 &lt;code&gt;Invoke-&lt;/code&gt; 、プレフィックスコールバックにInvoke-を付けて計画し、PascalCase規則を使用します。</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="95d4fff06b6fc78119db569b6adaa1e52f3714c7" translate="yes" xml:space="preserve">
          <source>Basic Hardware Requirements</source>
          <target state="translated">基本的なハードウェア要件</target>
        </trans-unit>
        <trans-unit id="15e10e999d9f45564ef18325b8fb75ba7dfdf012" translate="yes" xml:space="preserve">
          <source>Basic Syntax</source>
          <target state="translated">基本構文</target>
        </trans-unit>
        <trans-unit id="eeb4d13b0f4c31cf80b070f53d2a11e2790348aa" translate="yes" xml:space="preserve">
          <source>Basic scaling creates instances when your application receives requests. Each instance will be shut down when the application becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.</source>
          <target state="translated">基本的なスケーリングは、アプリケーションがリクエストを受け取るとインスタンスを作成します。各インスタンスは、アプリケーションがアイドル状態になるとシャットダウンされます。基本的なスケーリングは、断続的な作業やユーザーの活動によって駆動される作業に最適です。</target>
        </trans-unit>
        <trans-unit id="ab749ba7f3b4f97110082efd73d5220bec97fb03" translate="yes" xml:space="preserve">
          <source>Basic tests for inetd_conf services:</source>
          <target state="translated">inetd_conf サービスの基本テスト。</target>
        </trans-unit>
        <trans-unit id="c2224f8a107d36c0de776aadc7b40c433729805c" translate="yes" xml:space="preserve">
          <source>Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, &lt;code&gt;split-brained&lt;/code&gt; host, and is the one unconnected and incorrect. It will take no automatic action.</source>
          <target state="translated">基本的に、これが意味することは、明示的なテイクオーバーが開始されずにプライマリがセカンダリから使用できなくなった場合、セカンダリはそれ自体が &lt;code&gt;split-brained&lt;/code&gt; ホストであり、接続されておらず、正しくないホストであると見なします。自動アクションは行われません。</target>
        </trans-unit>
        <trans-unit id="da6bfbeb74345cd58e2418d477a881477c20d8e3" translate="yes" xml:space="preserve">
          <source>Bastion Ring / Permanent Peers</source>
          <target state="translated">バスティオンリング/パーマネントピア</target>
        </trans-unit>
        <trans-unit id="aa3fb9470b4909c3c471b4c48b9042ff6b36bb5e" translate="yes" xml:space="preserve">
          <source>Be aware that the referenced commands and files need to already exist before verification.</source>
          <target state="translated">参照されているコマンドやファイルは、検証の前に既に存在している必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="95e2396f5ac767886330e28094936a53a31f496c" translate="yes" xml:space="preserve">
          <source>Be careful in the words that you choose. Be kind to others. Practice empathy. Don&amp;rsquo;t insult or put down others. Remember that sexist, racist, ableist, ageist, and other exclusionary jokes can be offensive to those around you. If you think your conversation is making another community member uncomfortable &lt;em&gt;or&lt;/em&gt; if they tell you so, stop immediately, make amends, and move forward.</source>
          <target state="translated">選択する言葉に注意してください。他の人に親切にしてください。共感を練習します。他人を侮辱したり、下したりしないでください。性差別主義者、人種差別主義者、障害者差別主義者、年齢差別主義者、およびその他の排他的なジョークは、周囲の人々に不快感を与える可能性があることを忘れないでください。会話が他のコミュニティメンバーを不快にさせていると思われる場合、&lt;em&gt;または&lt;/em&gt;彼らがそう言った場合は、すぐに停止し、修正を加えて、先に進んでください。</target>
        </trans-unit>
        <trans-unit id="e7f1873c0b469c34f9c30ce8def623803fce53ab" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by Chef Infra Client.</source>
          <target state="translated">使用する場合は注意してください &lt;code&gt;:delete_key&lt;/code&gt; とアクション &lt;code&gt;recursive&lt;/code&gt; 属性を。これにより、レジストリキー、そのすべての値、およびそれらに関連付けられているすべての名前、タイプ、およびデータが削除されます。Chef InfraClientではこれを元に戻すことはできません。</target>
        </trans-unit>
        <trans-unit id="cee0bed171e9a04da4d52b6adfbe2ba4971aacd4" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by the chef-client.</source>
          <target state="translated">使用する場合は注意してください &lt;code&gt;:delete_key&lt;/code&gt; とアクション &lt;code&gt;recursive&lt;/code&gt; 属性を。これにより、レジストリキー、そのすべての値、およびそれらに関連付けられているすべての名前、タイプ、データが削除されます。これは、シェフクライアントが元に戻すことはできません。</target>
        </trans-unit>
        <trans-unit id="63fd8241acebcbd84b57624daa6309cbead93414" translate="yes" xml:space="preserve">
          <source>Be cautious about making assumptions about what someone does or does not know about something - assuming that someone does not understand an issue and over explaining can be condescending (even when not intended to be so).</source>
          <target state="translated">誰かが何かについて何をしているのか、何も知らないのかを推測することに注意してください-誰かが問題を理解していないと仮定して、過剰に説明することは、(意図していなくても)見下している可能性があります。</target>
        </trans-unit>
        <trans-unit id="bf153ad12230a809978053c2e29b4ff6ac732c36" translate="yes" xml:space="preserve">
          <source>Be cautious when running your cookbooks locally. It is possible to accidentally impact production infrastructure based on settings in your cookbooks and attributes. Read over your cookbooks and attributes, especially attributes set in roles and environments. If needed, override attributes so they can be tested locally in your &lt;code&gt;kitchen.yml&lt;/code&gt;.</source>
          <target state="translated">クックブックをローカルで実行するときは注意してください。クックブックと属性の設定に基づいて、誤って本番インフラストラクチャに影響を与える可能性があります。クックブックと属性、特にロールと環境で設定された属性を読みます。必要に応じて、 &lt;code&gt;kitchen.yml&lt;/code&gt; でローカルにテストできるように属性をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="b2114cc22852e2d98c4fd075e4574afadac5fd71" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1</source>
          <target state="translated">RAID1のいずれかで構成可能</target>
        </trans-unit>
        <trans-unit id="e497a8ccc57ee52a23183391423a8920102f2464" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1 or RAID5</source>
          <target state="translated">RAID1またはRAID5のいずれかで構成可能</target>
        </trans-unit>
        <trans-unit id="1eefee9f6ccf1c5a7d16c6e5f644985ff6b0510c" translate="yes" xml:space="preserve">
          <source>Be identical across both of your backend servers</source>
          <target state="translated">バックエンドサーバーの両方で同一のものにする</target>
        </trans-unit>
        <trans-unit id="5bf1e45c3bad60afcca8d9b5c6d98bb05e3bdae8" translate="yes" xml:space="preserve">
          <source>Be inspected for instances of a) the &lt;code&gt;Chef::Provider&lt;/code&gt; base class, and then b) for the presence of any core resources from the chef-client</source>
          <target state="translated">a） &lt;code&gt;Chef::Provider&lt;/code&gt; 基本クラスのインスタンスについて検査され、次にb）chef-clientからのコアリソースの存在について検査されます。</target>
        </trans-unit>
        <trans-unit id="0f854bc4053de45fb266e1b83077fc91bc85d1e3" translate="yes" xml:space="preserve">
          <source>Be respectful of differing viewpoints and experiences</source>
          <target state="translated">異なる視点や経験を尊重すること</target>
        </trans-unit>
        <trans-unit id="13d246fbf9613b687cb0533026edb0d5e000495b" translate="yes" xml:space="preserve">
          <source>Be sure to back up the Chef server data before starting the upgrade process.</source>
          <target state="translated">アップグレード処理を開始する前に、必ずChefサーバーのデータをバックアップしてください。</target>
        </trans-unit>
        <trans-unit id="c6e3e9bc52383cadfb6bc8116ba73f88a8af551c" translate="yes" xml:space="preserve">
          <source>Be sure to update the various local values in the &lt;code&gt;pg_dump&lt;/code&gt; command as necessary to match your infrastructure. For documentation about the pg_dump utility, see: &lt;a href=&quot;https://www.postgresql.org/docs/9.3/app-pgdump.html&quot;&gt;https://www.postgresql.org/docs/9.3/app-pgdump.html&lt;/a&gt;</source>
          <target state="translated">インフラストラクチャに一致するように、必要に応じて &lt;code&gt;pg_dump&lt;/code&gt; コマンドのさまざまなローカル値を更新してください。 pg_dumpユーティリティに関するドキュメントについては、&lt;a href=&quot;https://www.postgresql.org/docs/9.3/app-pgdump.html&quot;&gt;https&lt;/a&gt;：//www.postgresql.org/docs/9.3/app-pgdump.htmlを参照してください。</target>
        </trans-unit>
        <trans-unit id="2521f2374fb6c929af4a4da62adddb515b9f49fa" translate="yes" xml:space="preserve">
          <source>Be updated to use the &lt;code&gt;LWRPBase&lt;/code&gt; base class</source>
          <target state="translated">&lt;code&gt;LWRPBase&lt;/code&gt; 基本クラスを使用するように更新されている</target>
        </trans-unit>
        <trans-unit id="acf8472649b885a5ad27d65f25155edc45c3b9e5" translate="yes" xml:space="preserve">
          <source>Because Chef Habitat is an eventually-consistent distributed system, the role of the leader is different than in strongly-consistent systems. It only serves as the leader for &lt;em&gt;application level semantics&lt;/em&gt;, e.g. a database write leader. The fact that a Supervisor is a leader has no bearing upon other operations in the Chef Habitat system, including rumor dissemination for configuration updates. It is &lt;em&gt;not&lt;/em&gt; akin to a &lt;a href=&quot;https://raft.github.io/&quot;&gt;Raft&lt;/a&gt; leader, through which writes must all be funneled. This allows for very high scalability of the Chef Habitat Supervisor ring.</source>
          <target state="translated">Chef Habitatは結果整合性のある分散システムであるため、リーダーの役割は、整合性の高いシステムとは異なります。これは、データベース書き込みリーダーなど、&lt;em&gt;アプリケーションレベルのセマンティクスの&lt;/em&gt;リーダーとしてのみ機能します。スーパーバイザーがリーダーであるという事実は、構成更新の噂の普及など、ChefHabitatシステムの他の操作とは関係ありません。それは&lt;em&gt;ない&lt;/em&gt;に似&lt;a href=&quot;https://raft.github.io/&quot;&gt;ラフトの&lt;/a&gt;書き込みがすべて注ぎ込まれなければならない、それを通してリーダー、。これにより、Chef HabitatSupervisorリングの非常に高いスケーラビリティが可能になります。</target>
        </trans-unit>
        <trans-unit id="a5456045131d85e39ab0e516777afc514fc121c2" translate="yes" xml:space="preserve">
          <source>Because an action is not explicitly specified, the chef-client will use the default action: &lt;code&gt;:deploy&lt;/code&gt;</source>
          <target state="translated">アクションが明示的に指定されていないため、chef-clientはデフォルトのアクションを使用します &lt;code&gt;:deploy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92230d6ba2e936e32c99884e09c69fb6e69e31e7" translate="yes" xml:space="preserve">
          <source>Because both the &lt;code&gt;ftp&lt;/code&gt; and &lt;code&gt;telnet&lt;/code&gt; Internet services are commented out (&lt;code&gt;#&lt;/code&gt;), both services are disabled. Consequently, both tests will return &lt;code&gt;true&lt;/code&gt;. However, if the &lt;code&gt;inetd.conf&lt;/code&gt; file is set as follows:</source>
          <target state="translated">&lt;code&gt;ftp&lt;/code&gt; と &lt;code&gt;telnet&lt;/code&gt; の両方のインターネットサービスがコメントアウトされているため（ &lt;code&gt;#&lt;/code&gt; ）、両方のサービスが無効になっています。したがって、両方のテストで &lt;code&gt;true&lt;/code&gt; が返されます。ただし、 &lt;code&gt;inetd.conf&lt;/code&gt; ファイルが次のように設定されている場合：</target>
        </trans-unit>
        <trans-unit id="dc1b637499247a8b3d5ac599d82818abdf925dfd" translate="yes" xml:space="preserve">
          <source>Because build cookbooks read the configuration file, use the configuration file to customize the build cookbook to suit the needs of a particular project. In this way, you can share some &amp;ldquo;standard&amp;rdquo; version of a build cookbook with others and then use extra data in the config file to tailor the cookbook as needed.</source>
          <target state="translated">ビルドクックブックは構成ファイルを読み取るため、構成ファイルを使用して、特定のプロジェクトのニーズに合わせてビルドクックブックをカスタマイズします。このようにして、ビルドクックブックの「標準」バージョンを他のユーザーと共有し、構成ファイルの追加データを使用して、必要に応じてクックブックを調整できます。</target>
        </trans-unit>
        <trans-unit id="9e1428ac4351296b1461a20deb2d92a0dfa81da1" translate="yes" xml:space="preserve">
          <source>Because compliance remediation changes your system, its defaults are different than compliance scanning:</source>
          <target state="translated">コンプライアンスの是正措置はシステムを変更するため、そのデフォルトはコンプライアンス スキャンとは異なります。</target>
        </trans-unit>
        <trans-unit id="fa48d983b5b637f947eda6ff81eea6e8e7033db1" translate="yes" xml:space="preserve">
          <source>Because externally-deployed Elasticsearch nodes will not have access to Chef Automate&amp;rsquo;s built-in backup storage services, you must configure Elasticsearch backup settings separately from Chef Automate&amp;rsquo;s primary backup settings. You can configure backups to use either the local filesystem or S3.</source>
          <target state="translated">外部にデプロイされたElasticsearchノードはChefAutomateの組み込みバックアップストレージサービスにアクセスできないため、ChefAutomateのプライマリバックアップ設定とは別にElasticsearchバックアップ設定を構成する必要があります。ローカルファイルシステムまたはS3のいずれかを使用するようにバックアップを構成できます。</target>
        </trans-unit>
        <trans-unit id="67c6162ba37d1cbf334eadff44d65f8d75f3752b" translate="yes" xml:space="preserve">
          <source>Because most of the peer communication between nodes in the backend cluster happens in the clear, the backend cluster is vulnerable to passive monitoring of network traffic between nodes. To help prevent an active attacker from intercepting or changing cluster data, Chef recommends using iptables or an equivalent network ACL tool to restrict access to PostgreSQL, Elasticsearch and etcd to only hosts that need access.</source>
          <target state="translated">バックエンドクラスタ内のノード間のピア通信の大部分は透明な場所で行われるため、バックエンドクラスタはノード間のネットワークトラフィックの受動的な監視に対して脆弱です。能動的な攻撃者がクラスタデータを傍受したり変更したりすることを防ぐために、iptablesまたは同等のネットワークACLツールを使用して、PostgreSQL、Elasticsearch、etcdへのアクセスをアクセスを必要とするホストのみに制限することをChefでは推奨しています。</target>
        </trans-unit>
        <trans-unit id="b4ffed6fc8eb8738f02187fd11889228862cec57" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, Chef Infra Client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="translated">&lt;code&gt;inherits&lt;/code&gt; プロパティが指定されていないため、Chef Infra Clientはデフォルトで &lt;code&gt;true&lt;/code&gt; に設定します。これにより、既存のファイルのセキュリティ設定が変更されないようになります。</target>
        </trans-unit>
        <trans-unit id="677e84929e7f7e325068ef76544bb0aed72d2938" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, the chef-client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="translated">&lt;code&gt;inherits&lt;/code&gt; プロパティが指定されていないため、chef-clientはデフォルトで &lt;code&gt;true&lt;/code&gt; に設定し、既存のファイルのセキュリティ設定が変更されないようにします。</target>
        </trans-unit>
        <trans-unit id="e5f7aaae6389c4c0472dce93b931023f6de56f21" translate="yes" xml:space="preserve">
          <source>Because the CLI is outside the scope of any individual profile and the inputs don&amp;rsquo;t take options, the inputs are clumsily copied into every profile, effectively making the CLI mechanism global.</source>
          <target state="translated">CLIは個々のプロファイルの範囲外であり、入力はオプションをとらないため、入力はすべてのプロファイルに不器用にコピーされ、CLIメカニズムを効果的にグローバルにします。</target>
        </trans-unit>
        <trans-unit id="3c35246c25804ecb5729df93d69912abbe14c7b4" translate="yes" xml:space="preserve">
          <source>Because the Chef Infra Server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="translated">Chef Infra Serverは、機能するシステムを作成するために連携する多くの異なるサービスで構成されているため、このステップを完了するのに数分かかる場合があります。</target>
        </trans-unit>
        <trans-unit id="68377b428dda6afda1febc21acab204801dff74c" translate="yes" xml:space="preserve">
          <source>Because the Chef server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="translated">Chefサーバーは、機能するシステムを構築するために多くの異なるサービスで構成されているため、このステップを完了するのに数分かかる場合があります。</target>
        </trans-unit>
        <trans-unit id="27e976475cded20fd575a0ed7d11a5f74185e1e6" translate="yes" xml:space="preserve">
          <source>Because the FQDN has already been configured, do the following:</source>
          <target state="translated">FQDNが設定済みのため、以下の操作を行います。</target>
        </trans-unit>
        <trans-unit id="2294f8d8742fb4b7618479e3e73040a9b02eba2f" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, anything that can be done using Ruby can also be done in a recipe or custom resource, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies. See the &lt;a href=&quot;../ruby/index&quot;&gt;Ruby Guide&lt;/a&gt; for further information on built-in Ruby functionality.</source>
          <target state="translated">RecipeDSLはRubyDSLであるため、Rubyを使用して実行できることはすべて、 &lt;code&gt;include?&lt;/code&gt; を使用して &lt;code&gt;if&lt;/code&gt; ステートメントや &lt;code&gt;case&lt;/code&gt; ステートメントを含め、レシピまたはカスタムリソースで実行することもできます。レシピにレシピを含め、依存関係をチェックするRubyメソッド。組み込みのRuby機能の詳細については、&lt;a href=&quot;../ruby/index&quot;&gt;Rubyガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2e85f8849005356d69d8f39e0572f4ebb0901e04" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, then anything that can be done using Ruby can also be done in a recipe, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies.</source>
          <target state="translated">レシピDSLはRubyのDSLであるため、ルビーを使用して行うことができ、その後は何も含めて、レシピに行うことができる &lt;code&gt;if&lt;/code&gt; と &lt;code&gt;case&lt;/code&gt; 使って、書類 &lt;code&gt;include?&lt;/code&gt; Rubyメソッド。レシピ内のレシピを含み、依存関係をチェックします。</target>
        </trans-unit>
        <trans-unit id="23d4eea6b6df4739d4ea98a02ed1a7858290851f" translate="yes" xml:space="preserve">
          <source>Because the Supervisor is running in the background, you will not see the Supervisor output as you start your service. However you can use the &lt;code&gt;sup-log&lt;/code&gt; (or &lt;code&gt;Get-SupervisorLog&lt;/code&gt; on Windows) command that will stream the tail of the Supervisor output (you can also look at the contents of &lt;code&gt;/hab/sup/default/sup.log&lt;/code&gt;, which is where the Studio directs its Supervisor output).</source>
          <target state="translated">スーパーバイザーはバックグラウンドで実行されているため、サービスを開始してもスーパーバイザーの出力は表示されません。しかし、あなたが使用することができます &lt;code&gt;sup-log&lt;/code&gt; （または &lt;code&gt;Get-SupervisorLog&lt;/code&gt; Windowsの場合）スーパーバイザー出力の尾（あなたもの内容を見ることができますストリーミングするコマンド &lt;code&gt;/hab/sup/default/sup.log&lt;/code&gt; ところで、 Studioはスーパーバイザー出力を指示します）。</target>
        </trans-unit>
        <trans-unit id="7261cfd728a0d0ac78492c02f3762e536360514c" translate="yes" xml:space="preserve">
          <source>Because the basic functionality of process supervision is well-known, this document does not discuss those details. Instead, this document focuses strictly on the internals of the feature that makes the Chef Habitat Supervisor special: the fact that each Supervisor is connected to others in a peer-to-peer, masterless network which we refer to as a &lt;em&gt;ring&lt;/em&gt;. This allows Supervisors to share configuration data with one another and adapt to changing conditions in the ring by modifying their own configuration.</source>
          <target state="translated">プロセス監視の基本機能はよく知られているため、このドキュメントではそれらの詳細については説明しません。代わりに、このドキュメントでは、Chef Habitat Supervisorを特別なものにする機能の内部に厳密に焦点を当てています。つまり、各スーパーバイザーは、&lt;em&gt;リングと&lt;/em&gt;呼ばれるピアツーピアのマスターレスネットワークで他のスーパーバイザーに接続されています。これにより、スーパーバイザは構成データを相互に共有し、独自の構成を変更することでリング内の変化する条件に適応できます。</target>
        </trans-unit>
        <trans-unit id="4cb8fc629e6cbab2a15acaddefba3e810fa8da33" translate="yes" xml:space="preserve">
          <source>Because the contents of encrypted data bag items are not visible to the Chef Infra Server, search queries against data bags with encrypted items will not return any results.</source>
          <target state="translated">暗号化されたデータバッグ項目の内容はChef Infra Serverからは見えないため、暗号化された項目を持つデータバッグに対する検索クエリは結果を返しません。</target>
        </trans-unit>
        <trans-unit id="6b11f9d78f71498a16039269ca563e32fad544d7" translate="yes" xml:space="preserve">
          <source>Because the default value for &lt;code&gt;link_type&lt;/code&gt; is symbolic, and because properties that are not specified in the resource block will be assigned their default values, the following example creates a symbolic link:</source>
          <target state="translated">&lt;code&gt;link_type&lt;/code&gt; のデフォルト値はシンボリックであり、リソースブロックで指定されていないプロパティにはデフォルト値が割り当てられるため、次の例ではシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="fdeb6333e5dff4eb1e2aa9ae89b431d2914c5625" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, Chef Infra Client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="translated">最初のリソース（ &lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt; ）はまだ実行リストにあるため、再度実行されます。また、そのファイルはすでに存在するため、Chef InfraClientはファイルの再作成を試みません。最後に、ファイルは &lt;code&gt;ls&lt;/code&gt; メソッドを使用して作成されました。</target>
        </trans-unit>
        <trans-unit id="192f0563907f2e6ff425c0188abbe8de39316a7d" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, the chef-client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="translated">最初のリソース（ &lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt; ）はまだ実行リストにあるため、再度実行されます。そして、そのファイルはすでに存在しているので、chef-clientはそれを再作成しようとしません。最後に、ファイルは &lt;code&gt;ls&lt;/code&gt; メソッドを使用して作成されました。</target>
        </trans-unit>
        <trans-unit id="3a2879c038c0fdc73ba71a2f95042392bdd4c527" translate="yes" xml:space="preserve">
          <source>Because the private key is used to sign your artifact, it should not be shared freely; however, if anyone wants to download and use your artifact, then they must have your public key (.pub) installed in their local &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; or &lt;code&gt;/hab/cache/keys&lt;/code&gt; directory. If the origin&amp;rsquo;s public key is not present, Chef Habitat attempts to download it from the Builder endpoint specified by the &lt;code&gt;--url&lt;/code&gt; argument (&lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;https://bldr.habitat.sh&lt;/a&gt; by default) to &lt;code&gt;hab pkg install&lt;/code&gt;.</source>
          <target state="translated">秘密鍵はアーティファクトの署名に使用されるため、自由に共有しないでください。ただし、アーティファクトをダウンロードして使用する場合は、ローカルの &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; または &lt;code&gt;/hab/cache/keys&lt;/code&gt; ディレクトリに公開鍵（.pub）をインストールする必要があります。オリジンの公開鍵が存在しない場合、Chef Habitatは、 &lt;code&gt;--url&lt;/code&gt; 引数（デフォルトでは&lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;https://bldr.habitat.sh&lt;/a&gt;）で指定されたBuilderエンドポイントから &lt;code&gt;hab pkg install&lt;/code&gt; pkginstallにダウンロードしようとします。</target>
        </trans-unit>
        <trans-unit id="cb3d429b1e5952fb4cf78d13559ab5529e871cd9" translate="yes" xml:space="preserve">
          <source>Because the two &lt;code&gt;control_group&lt;/code&gt; block names are identical, the chef-client will return an exception similar to:</source>
          <target state="translated">2つの &lt;code&gt;control_group&lt;/code&gt; ブロック名は同一であるため、chef-clientは次のような例外を返します。</target>
        </trans-unit>
        <trans-unit id="2c852677b8aab01a0c9fd6e4420a3c59f5391b6b" translate="yes" xml:space="preserve">
          <source>Because they test source code, the Verify and Build stages ordinarily run exclusively on the runners and don&amp;rsquo;t involve other infrastructure. The necessary runtime environments are created and destroyed during the execution of the stage. For example, they can be established using virtual machines created by testing frameworks such as Kitchen.</source>
          <target state="translated">これらはソースコードをテストするため、検証ステージとビルドステージは通常、ランナーでのみ実行され、他のインフラストラクチャは含まれません。必要なランタイム環境は、ステージの実行中に作成および破棄されます。たとえば、Kitchenなどのフレームワークをテストして作成された仮想マシンを使用して確立できます。</target>
        </trans-unit>
        <trans-unit id="34ea2b2f3037b117a061017e2eda33692439488f" translate="yes" xml:space="preserve">
          <source>Because you are using an on-prem installation of Chef Habitat Builder, you must specify the &lt;a href=&quot;index#access-chef-habitat-builder-on-prem-with-habitat-command-line-tools&quot;&gt;Builder API endpoint of your installation&lt;/a&gt; when following the &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/&quot;&gt;Habitat Builder documentation&lt;/a&gt;. This documentation covers &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;using origin keys&lt;/a&gt;, &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;using origin secrets&lt;/a&gt;, and &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#upload-and-promote-packages&quot;&gt;uploading and promoting packages&lt;/a&gt;.</source>
          <target state="translated">Chef Habitat Builderのオンプレミスインストールを使用しているため、&lt;a href=&quot;https://www.habitat.sh/docs/using-builder/&quot;&gt;Habitat Builderのドキュメント&lt;/a&gt;に従う場合&lt;a href=&quot;index#access-chef-habitat-builder-on-prem-with-habitat-command-line-tools&quot;&gt;は、インストールの&lt;/a&gt;BuilderAPIエンドポイントを指定する必要があります。このドキュメントでは&lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;、オリジンキーの使用&lt;/a&gt;、&lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;オリジンシークレットの使用&lt;/a&gt;、&lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#upload-and-promote-packages&quot;&gt;パッケージのアップロードとプロモートについて説明します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13acfbaab69531aa08b21c108fcf48c5a2048f66" translate="yes" xml:space="preserve">
          <source>Before a profile can use controls from another profile, the to-be-included profile needs to be specified in the including profile&amp;rsquo;s &lt;code&gt;inspec.yml&lt;/code&gt; file in the &lt;code&gt;depends&lt;/code&gt; section. For each profile to be included, a location for the profile from where to be fetched and a name for the profile should be included. For example:</source>
          <target state="translated">プロファイルが別のプロファイルのコントロールを使用する前に、インクルードするプロファイルを &lt;code&gt;depends&lt;/code&gt; セクションの &lt;code&gt;inspec.yml&lt;/code&gt; プロファイルのinspec.ymlファイルで指定する必要があります。含めるプロファイルごとに、フェッチ元のプロファイルの場所とプロファイルの名前を含める必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="3d1cdedaff0a7f637c251c3330ed591f24d4e860" translate="yes" xml:space="preserve">
          <source>Before adding any settings to the knife.rb file:</source>
          <target state="translated">knife.rbファイルに設定を追加する前に</target>
        </trans-unit>
        <trans-unit id="fb6d78fd6c8a4f5e21c45a059da7084883a227d7" translate="yes" xml:space="preserve">
          <source>Before beginning your installation, check the &lt;a href=&quot;../system_requirements/index&quot;&gt;System Requirements&lt;/a&gt; for Chef Automate, and ensure that the &lt;code&gt;chef-automate&lt;/code&gt; command line tool installed.</source>
          <target state="translated">インストールを開始する前に、Chef Automateの&lt;a href=&quot;../system_requirements/index&quot;&gt;システム要件&lt;/a&gt;を確認し、 &lt;code&gt;chef-automate&lt;/code&gt; コマンドラインツールがインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="b1b0a05f3da943923fdbb3caa0cb21c27f8ed789" translate="yes" xml:space="preserve">
          <source>Before beginning your installation, check the &lt;a href=&quot;../system_requirements/index&quot;&gt;System Requirements&lt;/a&gt; for Chef Automate.</source>
          <target state="translated">インストールを開始する前に、ChefAutomateの&lt;a href=&quot;../system_requirements/index&quot;&gt;システム要件&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="ca42b7eea9900da4b8e5d90985410305fe4d5042" translate="yes" xml:space="preserve">
          <source>Before creating the backend HA cluster and building at least one Chef Infra Server to be part of the frontend group, verify:</source>
          <target state="translated">バックエンドHAクラスタを作成し、フロントエンドグループの一部となるChef Infra Serverを少なくとも1台構築する前に、検証を行います。</target>
        </trans-unit>
        <trans-unit id="f223474c0a576f16b0e0dea39f8fbdd70856cbde" translate="yes" xml:space="preserve">
          <source>Before data can be uploaded, an organization must be created. When prompted, enter the organization name, and then a full organization name.</source>
          <target state="translated">データをアップロードする前に、組織を作成する必要があります。プロンプトが表示されたら、組織名を入力し、完全な組織名を入力します。</target>
        </trans-unit>
        <trans-unit id="28dd3e9a86bf71d92109b67b67cc3c3cb4a1f511" translate="yes" xml:space="preserve">
          <source>Before following these steps, be sure to complete the OAuth setup process detailed in the &lt;a href=&quot;index#chef-identity&quot;&gt;Chef Identity&lt;/a&gt; section of this guide.</source>
          <target state="translated">これらの手順を実行する前に、このガイドの「&lt;a href=&quot;index#chef-identity&quot;&gt;シェフID」&lt;/a&gt;セクションで詳しく説明されているOAuthセットアッププロセスを必ず完了してください。</target>
        </trans-unit>
        <trans-unit id="976bd038eaf7e14458ac8d8991b69e32e4116038" translate="yes" xml:space="preserve">
          <source>Before following these steps, be sure to complete the OAuth setup process detailed in the &lt;a href=&quot;install_supermarket/index#chef-identity&quot;&gt;Chef Identity&lt;/a&gt; section of this guide.</source>
          <target state="translated">これらの手順を実行する前に、このガイドの「&lt;a href=&quot;install_supermarket/index#chef-identity&quot;&gt;シェフID」&lt;/a&gt;セクションで詳しく説明されているOAuthセットアッププロセスを必ず完了してください。</target>
        </trans-unit>
        <trans-unit id="2fe68664e034492c38b730fb9c4a8884be6531da" translate="yes" xml:space="preserve">
          <source>Before installing Chef Infra:</source>
          <target state="translated">Chef Infraをインストールする前に</target>
        </trans-unit>
        <trans-unit id="4b4078433b5eb13331b948c644f4b0c4cf60badd" translate="yes" xml:space="preserve">
          <source>Before installing the Chef Infra Server software, perform the following steps:</source>
          <target state="translated">Chef Infra Server ソフトウェアをインストールする前に、以下の手順を実行してください。</target>
        </trans-unit>
        <trans-unit id="366fea70c07c2f67adf0c0671eaf4b3eaf473140" translate="yes" xml:space="preserve">
          <source>Before installing the Chef Infra Server, ensure that each machine has the following installed and configured properly:</source>
          <target state="translated">Chef Infra Serverをインストールする前に、各マシンに以下の項目が正しくインストールされ、設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="fb4c3950b338d955bc3a80ebed3b9eeb44d13376" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server software, perform the following steps:</source>
          <target state="translated">Chefサーバーソフトウェアをインストールする前に、以下の手順を実行してください。</target>
        </trans-unit>
        <trans-unit id="dcde53847d94d5aa88fdcaca03435562f9b18a73" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server, ensure that each machine has the following installed and configured properly:</source>
          <target state="translated">Chefサーバーをインストールする前に、各マシンに以下の項目が正しくインストールされ、設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="716f5d091424f2f9287af76645f9a1e3cff5073d" translate="yes" xml:space="preserve">
          <source>Before restoring a Chef Automate installation, see how to &lt;a href=&quot;../backup/index&quot;&gt;configure your backups&lt;/a&gt;.</source>
          <target state="translated">Chef Automateのインストールを復元する前に&lt;a href=&quot;../backup/index&quot;&gt;、バックアップ&lt;/a&gt;を構成する方法を参照してください。</target>
        </trans-unit>
        <trans-unit id="33f2eb64ffb4e8b53a890fa3476ef71905a9ca43" translate="yes" xml:space="preserve">
          <source>Before the 0.56.0 release of Chef Habitat, the interaction between &lt;code&gt;hab&lt;/code&gt; and the Supervisor was not formally defined, and relied on making changes to files on disk. As a result, it was often possible to continue interacting with a newer Supervisor using an older version of the &lt;code&gt;hab&lt;/code&gt; CLI. This was particularly noticeable when the Supervisor was configured to automatically update itself; the Supervisor would continue upgrading over time, while the &lt;code&gt;hab&lt;/code&gt; CLI binary remained at whatever version it was when it was originally installed, because each of the two executable were distributed in separate packages.</source>
          <target state="translated">Chef Habitatの0.56.0リリース以前は、 &lt;code&gt;hab&lt;/code&gt; とSupervisorの間の相互作用は正式に定義されておらず、ディスク上のファイルに変更を加えることに依存していました。その結果、多くの場合、古いバージョンの &lt;code&gt;hab&lt;/code&gt; CLIを使用して新しいスーパーバイザーとの対話を継続することが可能でした。これは、スーパーバイザーが自動的に更新するように構成されている場合に特に顕著でした。2つの実行可能ファイルはそれぞれ別々のパッケージで配布されていたため、スーパーバイザーは時間の経過とともにアップグレードを続行しましたが、 &lt;code&gt;hab&lt;/code&gt; CLIバイナリは最初にインストールされたときのバージョンのままでした。</target>
        </trans-unit>
        <trans-unit id="8fa7a961870cb606d20a6e46b5976f0e74f9d8ec" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef Infra Server, the nested fields are extracted into the top level, similar to:</source>
          <target state="translated">このデータがChef Infra Serverでインデックス化される前に、ネストされたフィールドがトップレベルに抽出されます。</target>
        </trans-unit>
        <trans-unit id="ceee650cd2d37cf247f9b9f709bb8a21065e9922" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef server, the nested fields are extracted into the top level, similar to:</source>
          <target state="translated">このデータがChefサーバーでインデックス化される前に、ネストされたフィールドがトップレベルに抽出されます。</target>
        </trans-unit>
        <trans-unit id="acf261e6bedfe18c4f784c91861e48206adfdd1e" translate="yes" xml:space="preserve">
          <source>Before upgrading, please view the notes for more background on the upgrade process from Enterprise Chef 11 to Chef server 12.</source>
          <target state="translated">アップグレードの前に、Enterprise Chef 11からChefサーバー12へのアップグレードプロセスの詳細については、注意事項をご覧ください。</target>
        </trans-unit>
        <trans-unit id="0336893163301f22213cad2263272a55e2acf2e2" translate="yes" xml:space="preserve">
          <source>Before you begin, you must copy the &lt;code&gt;config.rb&lt;/code&gt; file and the client key .pem file (referenced as &lt;code&gt;client_key&lt;/code&gt; in &lt;code&gt;config.rb&lt;/code&gt;) to the build nodes/runners that you will use in the build-cookbook. This can be done manually by logging in to the build nodes/runners and copying the files or automated through the use of a secure copy tool like &lt;code&gt;scp&lt;/code&gt;.</source>
          <target state="translated">あなたが開始する前に、コピーする必要があり &lt;code&gt;config.rb&lt;/code&gt; ファイルと（として参照クライアントキー.pemファイル &lt;code&gt;client_key&lt;/code&gt; で &lt;code&gt;config.rb&lt;/code&gt; ビルド・クックブックで使用することをビルドノード/ランナーへの）。これは、ビルドノード/ランナーにログインしてファイルをコピーすることで手動で実行するか、 &lt;code&gt;scp&lt;/code&gt; などの安全なコピーツールを使用して自動化することができます。</target>
        </trans-unit>
        <trans-unit id="4f4c88883da618fb65df756a7f7ea1ee80a92eac" translate="yes" xml:space="preserve">
          <source>Before you can follow this procedure, you must have integrated Chef Automate and GitHub Enterprise or &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com&lt;/a&gt;. This is the same procedure whether you have Amazon Web Services (AWS) provisioning or SSH provisioning.</source>
          <target state="translated">この手順を実行する前に、&lt;a href=&quot;https://github.com/&quot;&gt;ChefAutomateとGitHubEnterprise&lt;/a&gt;またはGitHub.comを統合しておく必要があります。これは、Amazon Web Services（AWS）プロビジョニングまたはSSHプロビジョニングのどちらを使用している場合でも同じ手順です。</target>
        </trans-unit>
        <trans-unit id="191ced9c30df0642b41adb5c0e0be04e385ac75e" translate="yes" xml:space="preserve">
          <source>Before you can push or pull images, you must configure Docker to use the gcloud command-line tool to authenticate requests to Container Registry. To do so, run the following command (you are only required to do this once):</source>
          <target state="translated">イメージのプッシュやプルを行う前に、Dockerがgcloudコマンドラインツールを使用してコンテナレジストリへのリクエストを認証するように設定する必要があります。そのためには、以下のコマンドを実行します (これは一度だけ実行してください)。</target>
        </trans-unit>
        <trans-unit id="1618ebb917a65859d85ab013df751a2f13eef4c1" translate="yes" xml:space="preserve">
          <source>Before you start the migration process, fulfill the requirements detailed in this section.</source>
          <target state="translated">移行プロセスを開始する前に、このセクションの詳細な要件を満たしてください。</target>
        </trans-unit>
        <trans-unit id="d643e79de9964cc24bb1e7e08077f8b9594daf3a" translate="yes" xml:space="preserve">
          <source>Before you use the Delivery CLI from a workstation, you need to provide it with details such as the URL of the Chef Automate server, and the names of the relevant enterprise, organization, and user. The &lt;code&gt;delivery setup&lt;/code&gt; subcommand creates a configuration file named &lt;code&gt;.delivery/cli.toml&lt;/code&gt; with the required information.</source>
          <target state="translated">ワークステーションからDeliveryCLIを使用する前に、Chef AutomateサーバーのURL、関連する企業、組織、およびユーザーの名前などの詳細を提供する必要があります。 &lt;code&gt;delivery setup&lt;/code&gt; サブコマンドは、指定された設定ファイルを作成 &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 必要な情報とを。</target>
        </trans-unit>
        <trans-unit id="4cc2a25a8f44d5900ed5c62f7c81d0cbe4bd1219" translate="yes" xml:space="preserve">
          <source>Beginning with Chef InSpec 1.41, you can enable the ability to have the HTTP test execute on the remote target:</source>
          <target state="translated">Chef InSpec 1.41 以降では、リモート ターゲット上で HTTP テストを実行する機能を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="ee450a51f7196d477f565d7d8caf07ef417b86a0" translate="yes" xml:space="preserve">
          <source>Beginning with the Acceptance stage, the pipeline switches from analyzing the project&amp;rsquo;s source code to verifying the set of artifacts that were produced in the Build stage. The goal of the Acceptance stage is for the team to make a decision about whether the change should go all the way out to production or not. There are four phases in Acceptance:</source>
          <target state="translated">Acceptanceステージから、パイプラインはプロジェクトのソースコードの分析から、Buildステージで生成されたアーティファクトのセットの検証に切り替わります。承認段階の目標は、チームが変更を本番環境に移行するかどうかを決定することです。承認には4つのフェーズがあります。</target>
        </trans-unit>
        <trans-unit id="5a4c8813c4550f17751776db0a7e6c6ff11849c2" translate="yes" xml:space="preserve">
          <source>Behavior of the elevation prompt for administrators in Admin Approval Mode. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ConsentPromptBehaviorAdmin.</source>
          <target state="translated">管理者承認モードの管理者用昇降プロンプトの動作について。Sets HKEY_LOCAL_MACHINE\SOFTWARE\MicrosoftWindows\CurrentVersion\Policies\SystemEnableLUA\ConsentPromptBehaviorAdmin.</target>
        </trans-unit>
        <trans-unit id="41e0a75c78ceba73aaebe2b86cce122107528ef9" translate="yes" xml:space="preserve">
          <source>Behavior of the elevation prompt for standard users. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ConsentPromptBehaviorUser.</source>
          <target state="translated">標準ユーザのための昇降プロンプトの動作。Sets HKEY_LOCAL_MACHINE\SOFTWAREMicrosoftWindows\CurrentVersion\Policies\SystemEnableLUA\ConsentPromptBehaviorUser.</target>
        </trans-unit>
        <trans-unit id="49435fd4ace7be6756f904e1e79eefa497b8274e" translate="yes" xml:space="preserve">
          <source>Behavior when multiple packages match</source>
          <target state="translated">複数のパッケージが一致した場合の動作</target>
        </trans-unit>
        <trans-unit id="a7602e4697612fbda2f719b3b1e65112fecc0d7e" translate="yes" xml:space="preserve">
          <source>Behavior when not found</source>
          <target state="translated">見つからなかった場合の行動</target>
        </trans-unit>
        <trans-unit id="641f1a75e7768ff2f26380e579a06234d9e25c8e" translate="yes" xml:space="preserve">
          <source>Below are some of the core concepts that make up Chef InSpec.</source>
          <target state="translated">以下に、シェフ インスペックを構成するコアコンセプトのいくつかをご紹介します。</target>
        </trans-unit>
        <trans-unit id="49c22e62f20332407336d72809b0fa33acb6c108" translate="yes" xml:space="preserve">
          <source>Below is a mapping table to help you understand what property the unix field maps to the windows &lt;code&gt;Get-Process&lt;/code&gt; Property</source>
          <target state="translated">以下は、UNIXフィールドがウィンドウの &lt;code&gt;Get-Process&lt;/code&gt; プロパティにマップするプロパティを理解するのに役立つマッピングテーブルです。</target>
        </trans-unit>
        <trans-unit id="7423ca4aabb659589557c649c95781fc7a4c9ae3" translate="yes" xml:space="preserve">
          <source>Below is a section of a Munki catalog. You CAN edit the details if needed, but using the tools above is strongly encouraged to reduce the probability of introducing an error.</source>
          <target state="translated">以下はMunkiのカタログの一部です。必要に応じて詳細を編集することができますが、エラーが発生する確率を減らすためには、上記のツールを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="5d33a0be9f6bbb8f8ff72b5777445b1ebc174cf3" translate="yes" xml:space="preserve">
          <source>Below is a section of a Munki catalog. You can manually edit the details if you need to, but we strongly encourage you to use the tools above to reduce the chances of introducing an error.</source>
          <target state="translated">以下はMunkiのカタログの一部です。必要に応じて手動で詳細を編集することができますが、エラーを起こす可能性を減らすために上記のツールを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="b626aecb1d4d9a6d0b700ef6c213531cb239d026" translate="yes" xml:space="preserve">
          <source>Below is an example Amazon Web Services (AWS) instance profile policy with the required permissions to create an S3 bucket called &lt;code&gt;example-backups&lt;/code&gt;. A policy with these permissions is sufficient for the backup commands to function as expected.</source>
          <target state="translated">以下は、 &lt;code&gt;example-backups&lt;/code&gt; と呼ばれるS3バケットを作成するために必要なアクセス許可を持つAmazon Web Services（AWS）インスタンスプロファイルポリシーの例です。バックアップコマンドが期待どおりに機能するには、これらのアクセス許可を持つポリシーで十分です。</target>
        </trans-unit>
        <trans-unit id="49300d4db151510f5d450a3f19ba4f5be4f5ff41" translate="yes" xml:space="preserve">
          <source>Below is an example curl command with the recommended data cleanup settings:</source>
          <target state="translated">以下は、推奨されるデータのクリーンアップ設定をしたcurlコマンドの例です。</target>
        </trans-unit>
        <trans-unit id="76e4b87178b1140559969558bb5840eb528265ec" translate="yes" xml:space="preserve">
          <source>Below is an example curl command:</source>
          <target state="translated">以下はcurlコマンドの例です。</target>
        </trans-unit>
        <trans-unit id="c58045d28c00c460cf0aea392953232930f35d31" translate="yes" xml:space="preserve">
          <source>Below is an example of a container that shows three code blocks in three languages. You can copy and paste the code below into a page to get started. Note that the &lt;code&gt;tabs-id&lt;/code&gt; and &lt;code&gt;panel-id&lt;/code&gt;/&lt;code&gt;panel-link&lt;/code&gt; values must be unique on the page.</source>
          <target state="translated">以下は、3つの言語で3つのコードブロックを表示するコンテナーの例です。以下のコードをコピーしてページに貼り付けて開始できます。ことに注意してください &lt;code&gt;tabs-id&lt;/code&gt; および &lt;code&gt;panel-id&lt;/code&gt; / &lt;code&gt;panel-link&lt;/code&gt; 値がページ上で一意でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0ace2ce6e813205c2d9042e716e236b9b0226302" translate="yes" xml:space="preserve">
          <source>Below you&amp;rsquo;ll find installation instructions for each platform and their requirements. The Chef Habitat CLI is currently supported on Linux, Mac, and Windows.</source>
          <target state="translated">以下に、各プラットフォームのインストール手順とその要件を示します。Chef Habitat CLIは現在、Linux、Mac、およびWindowsでサポートされています。</target>
        </trans-unit>
        <trans-unit id="b2fb59beef82d9ff6361369b85b83c7108f2d49a" translate="yes" xml:space="preserve">
          <source>Beneath it, add the following, replacing &lt;code&gt;gems.example.com&lt;/code&gt; with the URL of your gem mirror:</source>
          <target state="translated">その下に、 &lt;code&gt;gems.example.com&lt;/code&gt; をgemミラーのURLに置き換えて、以下を追加します。</target>
        </trans-unit>
        <trans-unit id="6e51197e8eacbc96e9ff4e7e699163d6c8eba5a2" translate="yes" xml:space="preserve">
          <source>Benny Vasquez</source>
          <target state="translated">ベニー・バスケス</target>
        </trans-unit>
        <trans-unit id="12e6aa139bb4e06700f49df991e0fc9804c17587" translate="yes" xml:space="preserve">
          <source>Bento</source>
          <target state="translated">Bento</target>
        </trans-unit>
        <trans-unit id="6b2a7c54e36825894f264a14c49279b8a4a198ac" translate="yes" xml:space="preserve">
          <source>Berkshelf</source>
          <target state="translated">Berkshelf</target>
        </trans-unit>
        <trans-unit id="56c4b83a7ed68883a61e88cb4e2115d7fb69ca7a" translate="yes" xml:space="preserve">
          <source>Berkshelf CLI</source>
          <target state="translated">バークシェルフCLI</target>
        </trans-unit>
        <trans-unit id="b36ccf42bb25ec4a7478adf99dc7a444062bc98b" translate="yes" xml:space="preserve">
          <source>Berkshelf can include multiple Chef Supermarket instances for dependency resolution. Cookbook dependency resolution is performed from the top down. The first source defined in the Berksfile will be searched for the cookbook before the second source.</source>
          <target state="translated">Berkshelfは、依存関係の解決のために複数のChef Supermarketインスタンスを含めることができます。クックブックの依存関係解決はトップダウンから実行されます。Berksfileで定義された最初のソースは、2番目のソースよりも前にクックブックを検索します。</target>
        </trans-unit>
        <trans-unit id="6a876c0e899dd4e3c29afe99600c9c9adf131bfa" translate="yes" xml:space="preserve">
          <source>Berkshelf is a dependency manager for Chef cookbooks. With it, you can easily depend on community cookbooks and have them safely included in your workflow. You can also ensure that your CI systems reproducibly select the same cookbook versions, and can upload and bundle cookbook dependencies without needing a locally maintained copy. Berkshelf is included in Chef Workstation.</source>
          <target state="translated">BerkshelfはChefのクックブックの依存関係管理ツールです。これを使えば、コミュニティのクックブックに簡単に依存することができ、ワークフローに安全に組み込むことができます。また、CIシステムが同じバージョンのクックブックを再現的に選択できるようにし、ローカルで管理されているコピーを必要とせずに、クックブックの依存関係をアップロードしてバンドルすることができます。BerkshelfはChef Workstationに含まれています。</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">ベストプラクティス</target>
        </trans-unit>
        <trans-unit id="3dc57c4709a31164ae54a4e1e3045305a42f3f22" translate="yes" xml:space="preserve">
          <source>Beta Resource</source>
          <target state="translated">ベータリソース</target>
        </trans-unit>
        <trans-unit id="1e297b6e70493ca02c1d640234836cb0be944bd3" translate="yes" xml:space="preserve">
          <source>Binary Wrapper Packages</source>
          <target state="translated">バイナリラッパーパッケージ</target>
        </trans-unit>
        <trans-unit id="6ad58f28dea91bf2d4da144c3a827f0e97140156" translate="yes" xml:space="preserve">
          <source>Binary packages often come with other utility scripts that have their interpreter, or &amp;ldquo;shebang&amp;rdquo;, line (first line of a script) hardcoded to a path that will not exist under Chef Habitat. Examples are: &lt;code&gt;#!/bin/sh&lt;/code&gt;, &lt;code&gt;#!/bin/bash&lt;/code&gt;, &lt;code&gt;#!/bin/env&lt;/code&gt; or &lt;code&gt;#!/usr/bin/perl&lt;/code&gt;. It is necessary to modify these to point to the Chef Habitat-provided versions, and also declare a runtime dependency in your plan on the corresponding Chef Habitat package (for example, &lt;code&gt;core/perl&lt;/code&gt;).</source>
          <target state="translated">バイナリパッケージには、多くの場合、Chef Habitatの下に存在しないパスにハードコードされたインタプリタまたは「shebang」行（スクリプトの最初の行）を持つ他のユーティリティスクリプトが付属しています。例： &lt;code&gt;#!/bin/sh&lt;/code&gt; 、 &lt;code&gt;#!/bin/bash&lt;/code&gt; 、 &lt;code&gt;#!/bin/env&lt;/code&gt; または &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; 。Chef Habitatが提供するバージョンを指すようにこれらを変更し、対応するChef Habitatパッケージ（たとえば、 &lt;code&gt;core/perl&lt;/code&gt; ）に対するプランのランタイム依存関係を宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="83a9e49fc4cb9ac64b7028f07d9d3339609981c4" translate="yes" xml:space="preserve">
          <source>Bind</source>
          <target state="translated">Bind</target>
        </trans-unit>
        <trans-unit id="47e04cc658b4e6b588ca22184fe128c12ba8d1fe" translate="yes" xml:space="preserve">
          <source>Bind Redis to the specified IP address. Default value: &lt;code&gt;'127.0.0.1'&lt;/code&gt;.</source>
          <target state="translated">Redisを指定したIPアドレスにバインドします。デフォルト値： &lt;code&gt;'127.0.0.1'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3660fd88efe564321855f8c0dd10adac04ca6bfd" translate="yes" xml:space="preserve">
          <source>Binding Attributes</source>
          <target state="translated">バインディング属性</target>
        </trans-unit>
        <trans-unit id="5ab3d2342d1042d2292f3463da30850ee8b90155" translate="yes" xml:space="preserve">
          <source>Binds defined in &lt;code&gt;pkg_binds_optional&lt;/code&gt;, on the other hand, &lt;em&gt;may&lt;/em&gt; be mapped when loading a service. If a service group mapping is not defined at load time, the Supervisor will load the service without question. As an extreme example, a service could have no &lt;code&gt;pkg_binds&lt;/code&gt; entries, and five &lt;code&gt;pkg_binds_optional&lt;/code&gt; entries; such a service could be loaded with no binds mapped, one bind mapped, all the way to mapping all five binds.</source>
          <target state="translated">で定義された結合 &lt;code&gt;pkg_binds_optional&lt;/code&gt; は、一方で、&lt;em&gt;よい&lt;/em&gt;サービスをロードするときにマッピングされます。ロード時にサービスグル​​ープマッピングが定義されていない場合、スーパーバイザーは問題なくサービスをロードします。極端な例として、サービスには &lt;code&gt;pkg_binds&lt;/code&gt; エントリがなく、5つの &lt;code&gt;pkg_binds_optional&lt;/code&gt; エントリが含まれる場合があります。このようなサービスは、バインドをマップせずに、1つのバインドをマップして、5つのバインドすべてをマッピングするまでロードできます。</target>
        </trans-unit>
        <trans-unit id="9daa59ce846ab844e0e568cec7e9aed4b6115847" translate="yes" xml:space="preserve">
          <source>Bitbucket integration is designed for use with Bitbucket 3.x or 4.x and supports connecting a Workflow enterprise with a single Bitbucket server URL. Workflow does not support Bitbucket project repositories that are hosted at &lt;a href=&quot;https://bitbucket.org&quot;&gt;https://bitbucket.org&lt;/a&gt; at this time. Workflow communicates with Bitbucket using the Bitbucket REST API and HTTP-based git protocol. Workflow authenticates with Bitbucket with a user account over HTTP basic authentication. It is recommended that the connection be protected using SSL.</source>
          <target state="translated">Bitbucket統合は、Bitbucket 3.xまたは4.xで使用するように設計されており、単一のBitbucketサーバーURLを使用したワークフローエンタープライズの接続をサポートします。ワークフローは、現時点では&lt;a href=&quot;https://bitbucket.org&quot;&gt;https://bitbucket.org&lt;/a&gt;でホストされているBitbucketプロジェクトリポジトリをサポートしていません。ワークフローは、Bitbucket RESTAPIとHTTPベースのgitプロトコルを使用してBitbucketと通信します。ワークフローは、HTTP基本認証を介してユーザーアカウントを使用してBitbucketで認証します。SSLを使用して接続を保護することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2a3efc7a3320f33e72e2b5a460b1bc85f3d2b4e2" translate="yes" xml:space="preserve">
          <source>Bitbucket integration with Workflow allows Bitbucket to be used as the canonical git repository for projects while at the same time benefiting from Workflow workflow and pipeline automation. When Bitbucket integration is enabled for a project in Bitbucket, you will be able to:</source>
          <target state="translated">Bitbucket と Workflow を統合することで、Bitbucket をプロジェクトの標準的な git リポジトリとして使用することができ、同時に Workflow のワークフローとパイプラインの自動化の恩恵を受けることができます。Bitbucket のプロジェクトに対して Bitbucket 統合を有効にすると、以下のことができるようになります。</target>
        </trans-unit>
        <trans-unit id="22c5ae7c9428ccb037b9af57e8e6863d6d72e100" translate="yes" xml:space="preserve">
          <source>Bitbucket integration with Workflow has the following requirements:</source>
          <target state="translated">BitbucketとWorkflowの統合には、以下の要件があります。</target>
        </trans-unit>
        <trans-unit id="90183b7433926b51074b48a7ada431b3f2fc0c81" translate="yes" xml:space="preserve">
          <source>Blacklist a kernel module.</source>
          <target state="translated">カーネルモジュールをブラックリストに登録します。</target>
        </trans-unit>
        <trans-unit id="44d0080a6ce481f7885f4e5563a4a0f58607fa3d" translate="yes" xml:space="preserve">
          <source>Blacklist a module from loading.</source>
          <target state="translated">モジュールの読み込みをブラックリスト化します。</target>
        </trans-unit>
        <trans-unit id="09e05f1acf76ca75b111826bc3d6dc06a9cf93ad" translate="yes" xml:space="preserve">
          <source>Blob Container name, e.g. &lt;code&gt;my-blob-container&lt;/code&gt;.</source>
          <target state="translated">Blobコンテナ名。例： &lt;code&gt;my-blob-container&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40cbafebf909ffac8e3da68ec0917a85cb11960d" translate="yes" xml:space="preserve">
          <source>Block Arguments</source>
          <target state="translated">ブロック引数</target>
        </trans-unit>
        <trans-unit id="d4790ea34607c20a125ff04fb48ba642201830a0" translate="yes" xml:space="preserve">
          <source>Block expressions use a helper function to perform the logic. The syntax is the same for all block expressions and looks like this:</source>
          <target state="translated">ブロック式は、ヘルパー関数を使用してロジックを実行します。構文はすべてのブロック式で同じで、次のようになります。</target>
        </trans-unit>
        <trans-unit id="a01bbec444c2f8bd86a5624ffb4e13672279c3f3" translate="yes" xml:space="preserve">
          <source>Block specified in CIDR notation</source>
          <target state="translated">CIDR 記法で指定されたブロック</target>
        </trans-unit>
        <trans-unit id="8baef1b5bc39d642fc9856846bd0817492274400" translate="yes" xml:space="preserve">
          <source>Blocked Projects</source>
          <target state="translated">ブロックされたプロジェクト</target>
        </trans-unit>
        <trans-unit id="441a353bf672ed6748ab1b5ff4d1506a72efcc7c" translate="yes" xml:space="preserve">
          <source>Blocklist Attributes</source>
          <target state="translated">ブロックリストの属性</target>
        </trans-unit>
        <trans-unit id="73b3a5bc3727153def2a9c1e7eab41c3f71e0030" translate="yes" xml:space="preserve">
          <source>Blocklisting Ohai (automatic) Attributes</source>
          <target state="translated">ブロックリストオハイ(自動)属性</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="750f627abe221b6f5bdcbf7f8f8a8f51e39e2241" translate="yes" xml:space="preserve">
          <source>Bob is a member of team alpha and team omega. Team alpha contains a broad range of permissions, while team omega experiences severe restrictions in what its members may access. The &amp;ldquo;major teams&amp;rdquo; policy has a statement that allows team alpha to access the resource &lt;code&gt;compliance:reporting:nodes&lt;/code&gt;, while it has another statement that denies Team Omega access to the same resource. &lt;em&gt;Net effect&lt;/em&gt;: The policy denies Bob access because at least one statement denies access.</source>
          <target state="translated">ボブはチームアルファとチームオメガのメンバーです。チームアルファには幅広い権限が含まれていますが、チームオメガではメンバーがアクセスできるものに厳しい制限があります。「メジャーチーム」ポリシーには、チームアルファがリソース &lt;code&gt;compliance:reporting:nodes&lt;/code&gt; にアクセスできるようにするステートメントがあり、チームオメガが同じリソースにアクセスすることを拒否するステートメントがあります。&lt;em&gt;正味の効果&lt;/em&gt;：少なくとも1つのステートメントがアクセスを拒否するため、ポリシーはボブのアクセスを拒否します。</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="701b95d15786128eff05d70cdb0efb05cbd7a74b" translate="yes" xml:space="preserve">
          <source>Bonding options to pass via &lt;code&gt;BONDING_OPTS&lt;/code&gt; on RHEL and CentOS. For example: &lt;code&gt;mode=active-backup miimon=100&lt;/code&gt;.</source>
          <target state="translated">RHELおよびCentOSで &lt;code&gt;BONDING_OPTS&lt;/code&gt; を介して渡すボンディングオプション。例： &lt;code&gt;mode=active-backup miimon=100&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d88689cdf329b1eacc73297a0d6a810dd4c7635" translate="yes" xml:space="preserve">
          <source>Bookshelf</source>
          <target state="translated">Bookshelf</target>
        </trans-unit>
        <trans-unit id="d43d49be167481b0718243e7f86b1e750d56285a" translate="yes" xml:space="preserve">
          <source>Bookshelf Settings</source>
          <target state="translated">本棚の設定</target>
        </trans-unit>
        <trans-unit id="24266c1df82a205f7d78565dae57626587b71319" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef Infra Server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef Infra Server and search index repositories.</source>
          <target state="translated">Bookshelfは、クックブックバージョンの一部としてChef Infra Serverにアップロードされたクックブックコンテンツ（ファイル、テンプレートなど）を保存するために使用されます。クックブックのコンテンツは、コンテンツチェックサムによって保存されます。2つの異なるクックブックまたは同じクックブックの異なるバージョンに同じファイルまたはテンプレートが含まれている場合、Bookshelfはそのファイルを1回だけ保存します。Bookshelfが管理するクックブックのコンテンツはフラットファイルに保存され、Chef InfraServerおよび検索インデックスリポジトリから分離されています。</target>
        </trans-unit>
        <trans-unit id="70d1c8e72de85027bd5f9ea73cc646df45e10526" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef server and search index repositories.</source>
          <target state="translated">Bookshelfは、クックブックバージョンの一部としてChefサーバーにアップロードされたクックブックコンテンツ（ファイル、テンプレートなど）を格納するために使用されます。クックブックのコンテンツは、コンテンツチェックサムによって保存されます。2つの異なるクックブックまたは同じクックブックの異なるバージョンに同じファイルまたはテンプレートが含まれている場合、Bookshelfはそのファイルを1回だけ保存します。Bookshelfによって管理されるクックブックのコンテンツはフラットファイルに保存され、Chefサーバーおよび検索インデックスリポジトリから分離されます。</target>
        </trans-unit>
        <trans-unit id="4a45dedaf2d6840f480cacda8906f1b768277c05" translate="yes" xml:space="preserve">
          <source>Boolean for if this policy is enforced.</source>
          <target state="translated">このポリシーが適用されるかどうかのブール値。</target>
        </trans-unit>
        <trans-unit id="14511462330a1a6979ed5abec7f00a4158584d37" translate="yes" xml:space="preserve">
          <source>Boolean indicating if the Access Key was created with a User.</source>
          <target state="translated">アクセスキーがユーザーで作成されたかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="7e15327fef3ecac7ab2b4140bfc59a817753cd72" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the User has policies set directly on them.</source>
          <target state="translated">ユーザーに直接ポリシーが設定されているかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="826c4f7d173374297441a6ec70ae2cf5e56df69d" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is ACTIVE.</source>
          <target state="translated">クラスタの状態がACTIVEであるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="80f7fb69484189bf9ea6fa7fec9647ae8fd58a23" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is CREATING.</source>
          <target state="translated">クラスタの状態がCREATINGであるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="aaf125635a98061b436c866c2c3b117ebff03112" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is DELETING.</source>
          <target state="translated">クラスタの状態がDELETINGであるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="90ada74c0f1a9ef5283009bc3fe5f219b77cb732" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is FAILED.</source>
          <target state="translated">クラスタの状態がFAILEDであるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="bf21f9a89fdbfff682be9283716406e76065bb5c" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the User has MFA enabled or not.</source>
          <target state="translated">ユーザーがMFAを有効にしているかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="6651dabe1f469a29d259e5043be6ec24e662f134" translate="yes" xml:space="preserve">
          <source>Boolean option to determine if the API certification should be verified. Default is &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">API認証を検証する必要があるかどうかを決定するブールオプション。デフォルトは &lt;code&gt;false&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="dbd1ba24c427688297e51999b3fde7a2c1c2ca78" translate="yes" xml:space="preserve">
          <source>Boolean stating if the disk is a managed disk or not. If it is not a managed disk then it is one that is stored in a Storage Account.</source>
          <target state="translated">ディスクが管理されたディスクかどうかを示すブール値。管理ディスクでない場合は、ストレージアカウントに保存されているディスクです。</target>
        </trans-unit>
        <trans-unit id="2a4a79c080a81e78b3c28a08318cd95138f1a6c8" translate="yes" xml:space="preserve">
          <source>Boolean test to see if boot diagnostics have been enabled on the machine</source>
          <target state="translated">ブート診断がマシン上で有効になっているかどうかを調べるブール値テスト</target>
        </trans-unit>
        <trans-unit id="237c18f546f2ec9fe0a59ac2f9b5097b8b89f060" translate="yes" xml:space="preserve">
          <source>Boolean to enable or disable rollback on stack creation failures:</source>
          <target state="translated">スタック作成失敗時のロールバックを有効または無効にするブール値です。</target>
        </trans-unit>
        <trans-unit id="78ef361d0c74947c9eb40035ba2057c05d4085aa" translate="yes" xml:space="preserve">
          <source>Boolean to state if the machine has SSH keys assigned to it</source>
          <target state="translated">マシンに SSH 鍵が割り当てられているかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="252e004b6d943f37b9dfe6601185012986b260ab" translate="yes" xml:space="preserve">
          <source>Boolean to state if the machine has custom data or not</source>
          <target state="translated">マシンがカスタムデータを持っているかどうかを示すブール値</target>
        </trans-unit>
        <trans-unit id="aa9778f508de1ff2549f932bd00c58b9994cdc51" translate="yes" xml:space="preserve">
          <source>Boolean to state of password authentication is enabled or not for the admin user.</source>
          <target state="translated">管理者ユーザのパスワード認証を有効にしているかどうかを示すブール値です。</target>
        </trans-unit>
        <trans-unit id="2ebd2fe70115f884cb9bf397e10c35bb5e373fda" translate="yes" xml:space="preserve">
          <source>Boolean to state of the machine is accessible using SSH keys</source>
          <target state="translated">マシンの状態がSSHキーを使ってアクセス可能な状態にするためのブール値</target>
        </trans-unit>
        <trans-unit id="3ff58ff2627736e2a6f20db54b6b012bb28b2c7a" translate="yes" xml:space="preserve">
          <source>Boolean value showing if Azure DDoS standard protection is enabled on the virtual network.</source>
          <target state="translated">仮想ネットワーク上でAzure DDoS標準保護が有効になっているかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="04b9981976d9e892541d85194279a9176e98482c" translate="yes" xml:space="preserve">
          <source>Boolean value showing if the virtual network has VM protection enabled.</source>
          <target state="translated">仮想ネットワークで VM 保護が有効になっているかどうかを示すブール値です。</target>
        </trans-unit>
        <trans-unit id="e434184e4d929aa570d2d4cd6b658111d9eb1b70" translate="yes" xml:space="preserve">
          <source>Bootstrap Chef Habitat Builder with Core Packages (Optional)</source>
          <target state="translated">コアパッケージ付きBootstrap Chef Habitat Builder (オプション)</target>
        </trans-unit>
        <trans-unit id="30eb1e85c74c3432cd590abcd393a5b159028885" translate="yes" xml:space="preserve">
          <source>Bootstrap Nodes</source>
          <target state="translated">ブートストラップのノード</target>
        </trans-unit>
        <trans-unit id="9839b1ebfb397e3fee90226677a441224551a23a" translate="yes" xml:space="preserve">
          <source>Bootstrap Operations</source>
          <target state="translated">ブートストラップの操作</target>
        </trans-unit>
        <trans-unit id="62b6c6d937591fcfd24eb5634b59167d614888ad" translate="yes" xml:space="preserve">
          <source>Bootstrap Supermarket</source>
          <target state="translated">ブートストラップスーパーマーケット</target>
        </trans-unit>
        <trans-unit id="bfc982321c3ba1a302574d537d3434b11ab6e800" translate="yes" xml:space="preserve">
          <source>Bootstrap a Custom Template</source>
          <target state="translated">カスタムテンプレートのブートストラップ</target>
        </trans-unit>
        <trans-unit id="a7d748ae838f614a39e813a5861c654dbb040d67" translate="yes" xml:space="preserve">
          <source>Bootstrap a Node</source>
          <target state="translated">ノードのブートストラップ</target>
        </trans-unit>
        <trans-unit id="d165fcc0d46fb21a7ac5eea92e2e2d6a99892d76" translate="yes" xml:space="preserve">
          <source>Bootstrap the First Test Node</source>
          <target state="translated">最初のテストノードのブートストラップ</target>
        </trans-unit>
        <trans-unit id="dc9b2a89fa3f85d7790bd056921d73b57cda8a9c" translate="yes" xml:space="preserve">
          <source>Bootstrap the node on which Chef Supermarket is to be installed. For example, to bootstrap a node running Ubuntu on Amazon Web Services (AWS), the command is similar to:</source>
          <target state="translated">Chef Supermarketをインストールするノードをブートストラップします。例えば、Amazon Web Services (AWS)上でUbuntuを実行しているノードをブートストラップするには、コマンドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="3027180ebacc65b8df588b769ddb899c7d729ff8" translate="yes" xml:space="preserve">
          <source>Bootstrapped to the older Chef Infra Server</source>
          <target state="translated">古いChef Infra Serverにブートストラップされています。</target>
        </trans-unit>
        <trans-unit id="e4229c1ced9a825b2e7b3fe208f68700c815f98a" translate="yes" xml:space="preserve">
          <source>Bootstrapping nodes in this way upgrades the installed Chef Infra Client to version 16. Congratulations!</source>
          <target state="translated">このようにノードをブートストラップすると、インストールされているChef Infra Clientがバージョン16にアップグレードされます。おめでとうございます。</target>
        </trans-unit>
        <trans-unit id="6de9d7102ed758b9bde8fab40d633be1c12faf7e" translate="yes" xml:space="preserve">
          <source>Bootstrapping the first Node</source>
          <target state="translated">最初のノードのブートストラップ</target>
        </trans-unit>
        <trans-unit id="62a4d2496f61a854436f90d7ccf6857e7c8cfcda" translate="yes" xml:space="preserve">
          <source>Bootstrapping with User Data</source>
          <target state="translated">ユーザーデータを使ったブートストラップ</target>
        </trans-unit>
        <trans-unit id="ec95820cb8dbca3d52c9d541f821e2a7c1238b0a" translate="yes" xml:space="preserve">
          <source>Bootstrapping with chef-vault</source>
          <target state="translated">chef-vaultでのブートストラップ</target>
        </trans-unit>
        <trans-unit id="857758c7b3f00221dfbcbb0c2997ccc285c57c68" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group found on the new server</source>
          <target state="translated">新しいサーバーで見つかった &lt;code&gt;opscode&lt;/code&gt; と &lt;code&gt;opscode-pgsql&lt;/code&gt; の両方のユーザーとグループ</target>
        </trans-unit>
        <trans-unit id="b03abe434834e4030c337bf94d82adb24e50eb6b" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group not found on the new server</source>
          <target state="translated">新しいサーバーで &lt;code&gt;opscode&lt;/code&gt; と &lt;code&gt;opscode-pgsql&lt;/code&gt; の両方のユーザーとグループが見つかりません</target>
        </trans-unit>
        <trans-unit id="2b09c065a3af7dcaec254afc2a6393188a41205f" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; behave the same way when triggering unhandled exceptions and may be used interchangeably.</source>
          <target state="translated">未処理の例外をトリガーする場合、 &lt;code&gt;raise&lt;/code&gt; と &lt;code&gt;fail&lt;/code&gt; はどちらも同じように動作し、交換して使用できます。</target>
        </trans-unit>
        <trans-unit id="11243ad075dcf95f636fb2c4dc11e4358c3986be" translate="yes" xml:space="preserve">
          <source>Both Chef Infra Client and knife use the Chef Infra Server API when communicating with the Chef Infra Server. The chef-validator uses the Chef Infra Server API, but only during the first Chef Infra Client run on a node.</source>
          <target state="translated">Chef Infraクライアントとナイフの両方が、Chef Infraサーバーと通信する際にChef InfraサーバーAPIを使用します。chef-validatorはChef Infra Server APIを使用しますが、ノード上で最初のChef Infra Clientを実行している間のみ使用します。</target>
        </trans-unit>
        <trans-unit id="5e88ce305063bc9cacc133c34ff14dc8d9b93824" translate="yes" xml:space="preserve">
          <source>Both hosts are up as secondary, and the Chef server is unhappy</source>
          <target state="translated">両方のホストがセカンダリになっていて、Chefサーバーが不幸になっている</target>
        </trans-unit>
        <trans-unit id="16569245f612b05a8016cf8e858b5eba728c5c02" translate="yes" xml:space="preserve">
          <source>Both lines in the example will cause separate deprecation warnings.</source>
          <target state="translated">この例では、両方の行が別々に非推奨の警告を出します。</target>
        </trans-unit>
        <trans-unit id="f81755b8656c9ed78aa50cc38f132d72d8250bad" translate="yes" xml:space="preserve">
          <source>Both of these files are similar because they share the same structure. When an attribute value is a hash, that data is merged. When an attribute value is an array, if the attribute precedence levels are the same, then that data is merged. If the attribute value precedence levels in an array are different, then that data is replaced. For all other value types (such as strings, integers, etc.), that data is replaced.</source>
          <target state="translated">これらのファイルはどちらも構造が同じなので似ています。属性値がハッシュの場合、そのデータはマージされます。属性値が配列の場合、属性値の優先順位が同じであれば、そのデータはマージされます。配列内の属性値の優先順位が異なる場合、そのデータは置換されます。他のすべての値型(文字列や整数など)については、そのデータが置き換えられます。</target>
        </trans-unit>
        <trans-unit id="8e9d90dc82793410350d5e4af3482a6177f71713" translate="yes" xml:space="preserve">
          <source>Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as a hash or an array, that data is merged when the attribute precedence levels are the same and is replaced when the attribute precedence levels are different.</source>
          <target state="translated">これらのファイルはどちらも似ています。これらのファイルは同じ構造を共有しています。ある属性がハッシュや配列のような同じタイプのデータである場合、そのデータは属性の優先順位が同じであればマージされ、属性の優先順位が異なる場合は置換されます。</target>
        </trans-unit>
        <trans-unit id="6068af78fcbf298f0c59a2d87ea52b879db5c847" translate="yes" xml:space="preserve">
          <source>Both of these options must be available at the top-level within the callback, along with any assigned values that will be used later in the callback.</source>
          <target state="translated">これらのオプションは、コールバック内のトップレベルで使用可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7d7e9758da2a170c7a0421db4ce9eb38a4b435d6" translate="yes" xml:space="preserve">
          <source>Both service instances restart with the new configuration. Supervisor A&amp;rsquo;s output is:</source>
          <target state="translated">両方のサービスインスタンスが新しい構成で再起動します。スーパーバイザーAの出力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8e2035cd9475ef398d5225b2fb1870182599af18" translate="yes" xml:space="preserve">
          <source>Both the chef-client and knife use the Chef server API when communicating with the Chef server. The chef-validator uses the Chef server API, but only during the first chef-client run on a node.</source>
          <target state="translated">chef-clientとknifeは、Chefサーバーと通信する際にChefサーバーAPIを使用します。chef-validatorはChefサーバーAPIを使用しますが、ノード上で最初にchef-clientを実行したときのみ使用します。</target>
        </trans-unit>
        <trans-unit id="647daf0403dd1360a230c74c616724d0f94d0d7b" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a Chef Infra Client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="translated">どちらのタイプのハンドラも、Chef Infraクライアントの実行に関するデータを収集するために使用することができ、すべてのタイプの使用状況に関する豊富なレベルのデータを提供することができ、後で組織全体の傾向や分析に使用することができます。</target>
        </trans-unit>
        <trans-unit id="8b87666b54b22b2b5afcdac2d68a8a6c7870a81f" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a chef-client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="translated">どちらのタイプのハンドラーも、シェフ・クライアントの実行に関するデータを収集するために使用することができ、すべてのタイプの使用状況に関する豊富なレベルのデータを提供することができます。</target>
        </trans-unit>
        <trans-unit id="d239a700ff2ba267329636bf4c693aec7e686c57" translate="yes" xml:space="preserve">
          <source>Both types of policies allow for membership modification.</source>
          <target state="translated">どちらのタイプのポリシーでも、会員の変更が可能です。</target>
        </trans-unit>
        <trans-unit id="cf7c39f3cd6a2d3a1a613e2fb0c7d67a7ea79430" translate="yes" xml:space="preserve">
          <source>Branch Tracking</source>
          <target state="translated">ブランチトラッキング</target>
        </trans-unit>
        <trans-unit id="0e8be1ec417780a7956a38c993de93147d7c4cef" translate="yes" xml:space="preserve">
          <source>Breaking a source file into multiple source files, or consolidating multiple source files into one source file, with no change in code behavior;</source>
          <target state="translated">ソースファイルを複数のソースファイルに分割したり、複数のソースファイルを1つのソースファイルに統合したりしても、コードの動作に変化はありません。</target>
        </trans-unit>
        <trans-unit id="4ed76fb2bc4e489d439d38f36b9b3ad0c35ef316" translate="yes" xml:space="preserve">
          <source>Briefly:</source>
          <target state="translated">Briefly:</target>
        </trans-unit>
        <trans-unit id="df8e1d340420bdfdd1748be1db456f9bfaa0c4e0" translate="yes" xml:space="preserve">
          <source>Bring Your Own License (BYOL) AMI</source>
          <target state="translated">免許証の持ち込み(BYOL)AMI</target>
        </trans-unit>
        <trans-unit id="c18cc47359291f3abb476de2bd03934c481c47ec" translate="yes" xml:space="preserve">
          <source>Bring up the network interface on boot.</source>
          <target state="translated">起動時にネットワークインターフェースを起動します。</target>
        </trans-unit>
        <trans-unit id="778a6c613c015f4adafa9c80b73833cafd60643c" translate="yes" xml:space="preserve">
          <source>Bring up the network interface when its parent interface is brought up.</source>
          <target state="translated">親インタフェースを起動したときにネットワークインタフェースを起動します。</target>
        </trans-unit>
        <trans-unit id="5942be8e7eab47c9a72668f9e83d02b0709510d1" translate="yes" xml:space="preserve">
          <source>Browse code (including in-flight changes in the Workflow pipeline) using Bitbucket</source>
          <target state="translated">Bitbucketを使用してコードをブラウズ(Workflowパイプラインのインフライト変更を含む)。</target>
        </trans-unit>
        <trans-unit id="e04a084a21e5b72eb24535a98ae5dc760382c7e4" translate="yes" xml:space="preserve">
          <source>Browse code (including in-flight changes in the Workflow pipeline) using GitHub.</source>
          <target state="translated">GitHubを使ってコードをブラウズ(Workflowパイプラインのインフライト変更を含む)。</target>
        </trans-unit>
        <trans-unit id="f6322c100a250778f22c150d900225604e81382c" translate="yes" xml:space="preserve">
          <source>Browse the changes and make comments.</source>
          <target state="translated">変更点を閲覧し、コメントを付けます。</target>
        </trans-unit>
        <trans-unit id="7343059558ded0b0239600725d2ea2afb9113671" translate="yes" xml:space="preserve">
          <source>Browse to the top level of the chef-repo and enter:</source>
          <target state="translated">シェフレポの最上段を参照して入力します。</target>
        </trans-unit>
        <trans-unit id="6aeac1bc3a5063f0c472eb50f35a4abdbdd0bc0c" translate="yes" xml:space="preserve">
          <source>Browser Tab</source>
          <target state="translated">ブラウザタブ</target>
        </trans-unit>
        <trans-unit id="43083b63f945bc27dd77373aeb43a0b8aa02f2ee" translate="yes" xml:space="preserve">
          <source>Buffer Size</source>
          <target state="translated">バッファサイズ</target>
        </trans-unit>
        <trans-unit id="06ae4fe0aeb024acad7edd04979f8259e96fc632" translate="yes" xml:space="preserve">
          <source>Bug fixes that change default return values or error codes stored in constants</source>
          <target state="translated">定数に格納されているデフォルトの戻り値やエラーコードを変更するバグ修正</target>
        </trans-unit>
        <trans-unit id="2386e2b1f69beaa0c7aecc0bab39d2bb6e3ff369" translate="yes" xml:space="preserve">
          <source>Bug fixes that change default return values or error codes stored in constants, literals, or simple variable types;</source>
          <target state="translated">定数、リテラル、単純な変数型に格納されているデフォルトの戻り値やエラーコードを変更するバグを修正しました。</target>
        </trans-unit>
        <trans-unit id="b6d03a45cce6c181208cc49f145d6e3f331dce42" translate="yes" xml:space="preserve">
          <source>Build Cookbook</source>
          <target state="translated">ビルドクックブック</target>
        </trans-unit>
        <trans-unit id="a047e6f86bd41a9d1e5791443e9b78a972176875" translate="yes" xml:space="preserve">
          <source>Build Cookbook Structure</source>
          <target state="translated">ビルドクックブックの構造</target>
        </trans-unit>
        <trans-unit id="64b1f256250f91394df9c8daaddfc803b08066ee" translate="yes" xml:space="preserve">
          <source>Build Helpers</source>
          <target state="translated">ビルドヘルパー</target>
        </trans-unit>
        <trans-unit id="9d47fb898fc01d743d33b737101f00d157182578" translate="yes" xml:space="preserve">
          <source>Build Nodes and Phases</source>
          <target state="translated">ノードとフェーズの構築</target>
        </trans-unit>
        <trans-unit id="4b63aed85fe9b68a218ad74ce2028c7fdc819182" translate="yes" xml:space="preserve">
          <source>Build Phase Callbacks</source>
          <target state="translated">ビルドフェーズコールバック</target>
        </trans-unit>
        <trans-unit id="c6fcfef56a89d0004a9b1e9f049feff9fbed488f" translate="yes" xml:space="preserve">
          <source>Build Stage</source>
          <target state="translated">ビルドステージ</target>
        </trans-unit>
        <trans-unit id="edea1615aed311a4ca9896093f4e51ba187f1100" translate="yes" xml:space="preserve">
          <source>Build a InstallApplications package to bootstrap macOS</source>
          <target state="translated">macOS を起動するための InstallApplications パッケージを構築する</target>
        </trans-unit>
        <trans-unit id="786c5eda88f0c24440a32dbf7ea51200957cde4a" translate="yes" xml:space="preserve">
          <source>Build a Standalone Chef Infra Server</source>
          <target state="translated">スタンドアロンのChef Infraサーバーを構築する</target>
        </trans-unit>
        <trans-unit id="aedec35172edfd2476051f7631fcbe7121c77cdd" translate="yes" xml:space="preserve">
          <source>Build an Effortless Audit profile and load it on your systems.</source>
          <target state="translated">Effortless Auditプロファイルを構築し、システムにロードします。</target>
        </trans-unit>
        <trans-unit id="7fcccdc6a24e25bb77d75fe5de28e666654231d6" translate="yes" xml:space="preserve">
          <source>Build and Run Your Package</source>
          <target state="translated">パッケージの構築と実行</target>
        </trans-unit>
        <trans-unit id="b7b60f770a96f9335e492eaea824f79e3aa35a71" translate="yes" xml:space="preserve">
          <source>Build and deploy Gorilla to deploy apps to Windows devices</source>
          <target state="translated">アプリをWindowsデバイスに展開するためのGorillaのビルドとデプロイ</target>
        </trans-unit>
        <trans-unit id="615c311bf629a78c4ede653f9886e94871124403" translate="yes" xml:space="preserve">
          <source>Build and deploy Munki to deploy apps to the laptops</source>
          <target state="translated">Munkiをビルドしてラップトップにアプリをデプロイする</target>
        </trans-unit>
        <trans-unit id="b4e90363c8fce3b112e5b4bea33f6f2e8f376824" translate="yes" xml:space="preserve">
          <source>Build and deploy Munki to deploy apps to the macOS devices</source>
          <target state="translated">MunkiをビルドしてmacOSデバイスにアプリをデプロイする</target>
        </trans-unit>
        <trans-unit id="5180b6571067eda4cc41345d87804ff8c3ab85e7" translate="yes" xml:space="preserve">
          <source>Build and test the changes locally.</source>
          <target state="translated">変更内容をローカルでビルドしてテストします。</target>
        </trans-unit>
        <trans-unit id="6becbc85d949fef6ed475e593c70120afe2cb5a9" translate="yes" xml:space="preserve">
          <source>Build or execute a command line against a local file. Set to &lt;code&gt;false&lt;/code&gt; to build or execute against a remote file. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ローカルファイルに対してコマンドラインをビルドまたは実行します。リモートファイルに対してビルドまたは実行するには、 &lt;code&gt;false&lt;/code&gt; に設定します。デフォルト： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f344f1cc3a3a36142a88ca54099248deef14cace" translate="yes" xml:space="preserve">
          <source>Build out a folder structure that looks like this:</source>
          <target state="translated">このようなフォルダ構造を構築します。</target>
        </trans-unit>
        <trans-unit id="dc4709e362ef4028cb25a2c00e5cd2eb1bd689a2" translate="yes" xml:space="preserve">
          <source>Build out your Azure Instance</source>
          <target state="translated">Azureインスタンスを構築する</target>
        </trans-unit>
        <trans-unit id="02fa78f47dd3c1fdc6888c21a6ca5983aa479e4e" translate="yes" xml:space="preserve">
          <source>Build the InstallApplications package.</source>
          <target state="translated">InstallApplications パッケージをビルドします。</target>
        </trans-unit>
        <trans-unit id="6e7dc350c9fa390cc4701c4246abc0f7d9e0c9f4" translate="yes" xml:space="preserve">
          <source>Build the MDM server</source>
          <target state="translated">MDMサーバの構築</target>
        </trans-unit>
        <trans-unit id="86e321e108683cbd18944a717555c44d665c84c8" translate="yes" xml:space="preserve">
          <source>Build the artifact in an unattended fashion, passing the name of the origin key to the command.</source>
          <target state="translated">コマンドにオリジン・キーの名前を渡して、無人でアーティファクトを構築します。</target>
        </trans-unit>
        <trans-unit id="b17f8a9529d8cb82e41dd2c6e336c156366fa16b" translate="yes" xml:space="preserve">
          <source>Build the package</source>
          <target state="translated">パッケージの構築</target>
        </trans-unit>
        <trans-unit id="9d0c312c6090ed878495b2536b1a8c35f88f4217" translate="yes" xml:space="preserve">
          <source>Build the package with the command: &lt;code&gt;hab pkg build .&lt;/code&gt;</source>
          <target state="translated">次のコマンドを使用してパッケージをビルドします： &lt;code&gt;hab pkg build .&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcf827ac8e62fdf04d4dca479f1455fe07c93597" translate="yes" xml:space="preserve">
          <source>Build the package:</source>
          <target state="translated">パッケージをビルドします。</target>
        </trans-unit>
        <trans-unit id="555689b0683c2923720a412396a3ac7f7aac0610" translate="yes" xml:space="preserve">
          <source>Build the plan as you normally would. When you start the Supervisor, pass the name of the directory with your plan inside it:</source>
          <target state="translated">通常どおりに計画を構築します。スーパバイザを起動するときに、その中にプランが入っているディレクトリの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="dc5a66e469942eaa6a9ef7e3824790768965300d" translate="yes" xml:space="preserve">
          <source>Build using a Studio</source>
          <target state="translated">スタジオを使ったビルド</target>
        </trans-unit>
        <trans-unit id="4b4cd2835efda51ace2805d92775191af20498df" translate="yes" xml:space="preserve">
          <source>Build your local repo and test Chef Desktop</source>
          <target state="translated">ローカルレポの構築とChef Desktopのテスト</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="6b06cb37d86edf02261f16c5281975f1b47677ef" translate="yes" xml:space="preserve">
          <source>Builder Profile</source>
          <target state="translated">ビルダーのプロフィール</target>
        </trans-unit>
        <trans-unit id="fca7d9c3fcdf3fd8029126987b8e0222ecf0ab03" translate="yes" xml:space="preserve">
          <source>Builder requires the private origin key to enable new artifact builds from packages with plans linked to that origin.</source>
          <target state="translated">ビルダーは、その原点にリンクされたプランを持つパッケージから新しいアーティファクトをビルドできるようにするために、秘密の原点キーを必要とします。</target>
        </trans-unit>
        <trans-unit id="8a390a6ee39a60a5720caa99618d84f659f8d10c" translate="yes" xml:space="preserve">
          <source>Builder requires the public origin key to upload artifacts for that origin, so you&amp;rsquo;ll need to upload it.</source>
          <target state="translated">Builderは、そのオリジンのアーティファクトをアップロードするためにパブリックオリジンキーを必要とするため、アップロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="0d5188266ad849d94fa2778f305ded4913047a2c" translate="yes" xml:space="preserve">
          <source>Building Dependent Plans in the Studio</source>
          <target state="translated">スタジオでの依存プランの構築</target>
        </trans-unit>
        <trans-unit id="3086dd4287db2e9945b4e209d99b9b53091cd31e" translate="yes" xml:space="preserve">
          <source>Building Packages</source>
          <target state="translated">ビルディングパッケージ</target>
        </trans-unit>
        <trans-unit id="14d083989b54ad48644d1d444fe93596a5813da2" translate="yes" xml:space="preserve">
          <source>Building Packages with Multiple Plans</source>
          <target state="translated">複数のプランでパッケージを構築</target>
        </trans-unit>
        <trans-unit id="0d5d6cb79dff33d19cf255052a7c6a526d9ae401" translate="yes" xml:space="preserve">
          <source>Building the node object</source>
          <target state="translated">ノードオブジェクトの構築</target>
        </trans-unit>
        <trans-unit id="1a0f6aee772fa59b7339f89ff144fd7e441ba40e" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;.gemrc&lt;/code&gt; file based on a &lt;code&gt;gemrc.erb&lt;/code&gt; template</source>
          <target state="translated">&lt;code&gt;gemrc.erb&lt;/code&gt; テンプレートに基づいて &lt;code&gt;.gemrc&lt;/code&gt; ファイルをビルドします</target>
        </trans-unit>
        <trans-unit id="b219cb82075f34eab38bfb177966fde2bab70bf9" translate="yes" xml:space="preserve">
          <source>Builds a Plan using a Studio</source>
          <target state="translated">スタジオを使ってプランを構築する</target>
        </trans-unit>
        <trans-unit id="094ba01cf1e5387974023d255d23e94135fccce0" translate="yes" xml:space="preserve">
          <source>Builds and installs the binary or library using &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt; for Linux based builds, and TODO: WHAT DOES WINDOWS USE? Invoke-Unpack function with Start-Process? Invoke-Install &amp;amp; Copy-Item? unless the callback methods are overridden in the plan.</source>
          <target state="translated">ビルドとインストールのバイナリやライブラリを使用して &lt;code&gt;make&lt;/code&gt; し、 &lt;code&gt;make install&lt;/code&gt; を構築するベースのLinuxのために、とTODO：WHAT DOES WINDOWSでしょうか？Start-Processで関数を呼び出す-解凍しますか？呼び出し-インストールとコピー-アイテム？コールバックメソッドがプランでオーバーライドされない限り。</target>
        </trans-unit>
        <trans-unit id="178de3356bd95bf631178e6868f057029b83f848" translate="yes" xml:space="preserve">
          <source>Buildtime Workflow</source>
          <target state="translated">ビルドタイムワークフロー</target>
        </trans-unit>
        <trans-unit id="1e48312d227f788cce9d4d224a4c3ff84086daba" translate="yes" xml:space="preserve">
          <source>Built into the chef-provisioning-vsphere driver</source>
          <target state="translated">chef-provisioning-vsphere ドライバに組み込まれています。</target>
        </trans-unit>
        <trans-unit id="7998e59d701a8696fc25146f2f6266408261fbbd" translate="yes" xml:space="preserve">
          <source>Built-in Helpers</source>
          <target state="translated">内蔵ヘルパー</target>
        </trans-unit>
        <trans-unit id="ad28684e79d5f99d6d3ff51f9c95e38a0dda71a0" translate="yes" xml:space="preserve">
          <source>Built-in Subcommands</source>
          <target state="translated">内蔵サブコマンド</target>
        </trans-unit>
        <trans-unit id="3d7efc70b9bf3d81820ca4e5189bad97d36012eb" translate="yes" xml:space="preserve">
          <source>Bulk Node Add</source>
          <target state="translated">バルクノードの追加</target>
        </trans-unit>
        <trans-unit id="ca029509502ce74d12c3502a3202897f3eda5520" translate="yes" xml:space="preserve">
          <source>Bulk Node Delete</source>
          <target state="translated">バルクノード削除</target>
        </trans-unit>
        <trans-unit id="f95331a8f029b17a350268b06fe1b96e4762454c" translate="yes" xml:space="preserve">
          <source>Bulk Uploads Habitat Artifacts to a Depot from a local directory</source>
          <target state="translated">ローカルディレクトリからデポへのハビタット・アーティファクトの一括アップロード</target>
        </trans-unit>
        <trans-unit id="66d0a9231703d2e4bb6654e40bcb88be102e51e3" translate="yes" xml:space="preserve">
          <source>Bulk-Upload Seed List Packages to Chef Habitat Builder on-prem</source>
          <target state="translated">シードリストパッケージをChef Habitat Builderオンプレミスに一括アップロード</target>
        </trans-unit>
        <trans-unit id="d705258c54e6079321beb65fed2aa198e0303783" translate="yes" xml:space="preserve">
          <source>Bulleted Lists</source>
          <target state="translated">箇条書きリスト</target>
        </trans-unit>
        <trans-unit id="7c4d4d2c08fa038a9daadf2a2507c392dab677c9" translate="yes" xml:space="preserve">
          <source>Bulleted lists break up text blocks and draw attention to a group of items:</source>
          <target state="translated">箇条書きのリストは、テキストブロックを分割して、項目のグループに注意を喚起します。</target>
        </trans-unit>
        <trans-unit id="6bcfe872db7486935e1ec6cc537ec1e6a48045b2" translate="yes" xml:space="preserve">
          <source>Bumping the version number as appropriate.</source>
          <target state="translated">適当にバージョン番号をバンプさせる。</target>
        </trans-unit>
        <trans-unit id="0f94adbcac1ee47c2daf825cae5516e6e522c12f" translate="yes" xml:space="preserve">
          <source>Bumps the cookbook metadata version number automatically when &lt;code&gt;delivery review&lt;/code&gt; is run.</source>
          <target state="translated">&lt;code&gt;delivery review&lt;/code&gt; 実行時に、クックブックメタデータのバージョン番号を自動的にバンプします。</target>
        </trans-unit>
        <trans-unit id="f839b560c992fbd3146343eae4d2b92a214791b5" translate="yes" xml:space="preserve">
          <source>Bumps the cookbook metadata version number automatically when &lt;code&gt;delivery review&lt;/code&gt; is run. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delivery review&lt;/code&gt; 実行時に、クックブックメタデータのバージョン番号を自動的にバンプします。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30929f843c57d54e410d8a1630a8a98113dcf0df" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of Chef Infra Client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="translated">しかし、これでは、特にほとんどのものが同じものであるため、あまり効率的ではありません。Chef Infra Clientのディープマージ機能では、クックブック、レシピ、ロール、環境にまたがって属性を重ねることができます。これにより、クックブックレベルで設定されたデフォルトの属性を利用して、ノード間で属性を再利用することができますが、特定の属性(属性の優先順位が高い)が適用されるべき時にのみ適用されるようにする方法も提供します。</target>
        </trans-unit>
        <trans-unit id="4b4d2ccd13ffe2b3ffda5f6be46d01a658768ff8" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the chef-client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="translated">しかし、これでは効率的ではありません。chef-clientのディープマージ機能を使うと、クックブック、レシピ、ロール、環境にまたがって属性を重ねることができます。これにより、クックブックレベルで設定されたデフォルトの属性を利用してノード間で属性を再利用することができますが、特定の属性(属性の優先順位が高いもの)を適用すべき時にのみ適用する方法も提供します。</target>
        </trans-unit>
        <trans-unit id="eb9a81dbae55c1deaafa73ce57144aa8efbd370a" translate="yes" xml:space="preserve">
          <source>But what happens if you want more flexibility to manage the users instead of devices? This approach creates a user group that applies the same policies to individuals. That way, if a user logs onto a different system their account is still managed correctly.</source>
          <target state="translated">しかし、デバイスではなくユーザーをより柔軟に管理したい場合はどうなるでしょうか?このアプローチでは、個人に同じポリシーを適用するユーザーグループを作成します。これにより、ユーザーが別のシステムにログインしても、そのアカウントは正しく管理されます。</target>
        </trans-unit>
        <trans-unit id="a2705406de2f662b10cbd3f03b2189fcafcdb645" translate="yes" xml:space="preserve">
          <source>But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:</source>
          <target state="translated">しかし、すべてのウェブサーバが同じではないとしたらどうでしょうか?ウェブサーバのいくつかが単一の属性に異なる値を要求していたとしたらどうでしょうか?これらの設定を、先ほどの例のように一度だけ、そして次の例のように一度だけ、2つの場所に保存することができます。</target>
        </trans-unit>
        <trans-unit id="8bdcc5556978f1b366f450955e7b98990429e145" translate="yes" xml:space="preserve">
          <source>But with this example, the &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;owner&lt;/code&gt; attribute values will only be applied to &lt;code&gt;/baz&lt;/code&gt;. Which is fine, if that&amp;rsquo;s what you want. But most of the time, when the entire &lt;code&gt;/foo/bar/baz&lt;/code&gt; directory structure is not there, you must be explicit about each directory. For example:</source>
          <target state="translated">ただし、この例では、 &lt;code&gt;group&lt;/code&gt; 、 &lt;code&gt;mode&lt;/code&gt; 、および &lt;code&gt;owner&lt;/code&gt; 属性値は &lt;code&gt;/baz&lt;/code&gt; にのみ適用されます。それがあなたが望むものなら、それは結構です。しかし、ほとんどの場合、 &lt;code&gt;/foo/bar/baz&lt;/code&gt; ディレクトリ構造全体がそこにない場合、各ディレクトリについて明示する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="5512a52c12c22842da0eeb1a761b4a1e9ff20987" translate="yes" xml:space="preserve">
          <source>But, the following:</source>
          <target state="translated">しかし、以下のような</target>
        </trans-unit>
        <trans-unit id="41a76f2148dc8625f9a6189e7676a6ab555b5ed3" translate="yes" xml:space="preserve">
          <source>Butterfly</source>
          <target state="translated">Butterfly</target>
        </trans-unit>
        <trans-unit id="5258eb53fc31c16aee5a8de6393914551de396c1" translate="yes" xml:space="preserve">
          <source>Butterfly differs from SWIM in the following ways:</source>
          <target state="translated">バタフライはSWIMとは以下の点で異なります。</target>
        </trans-unit>
        <trans-unit id="8bc37109c8f88fd27fa8b1afc135c7d961d5fa95" translate="yes" xml:space="preserve">
          <source>Butterfly encrypts traffic on the wire using Curve25519 and a symmetric key. If a ring is configured to use transport level encryption, only members with a matching key are allowed to communicate.</source>
          <target state="translated">バタフライは、Curve25519と対称鍵を使用してワイヤ上のトラフィックを暗号化します。リングがトランスポートレベルの暗号化を使用するように設定されている場合、一致するキーを持つメンバーのみが通信を許可されます。</target>
        </trans-unit>
        <trans-unit id="0d98bbf9c5c60f98235a761382dd9d8895bfaa57" translate="yes" xml:space="preserve">
          <source>Butterfly is an eventually consistent system - it says, with a very high degree of probability, that a given piece of information will be received by every member of the network. It makes no guarantees as to when that state will arrive; in practice, the answer is usually &amp;ldquo;quite quickly&amp;rdquo;.</source>
          <target state="translated">バタフライは結果整合性のあるシステムです。非常に高い確率で、特定の情報がネットワークのすべてのメンバーによって受信されると言われています。その状態がいつ到着するかについては保証しません。実際には、答えは通常「非常に迅速」です。</target>
        </trans-unit>
        <trans-unit id="a08863fbbb96a0512519f576c41b546ca7cb1df9" translate="yes" xml:space="preserve">
          <source>Butterfly servers keep track of what members are present in a ring, and are constantly checking each other for failure. Any given member is in one of four health states:</source>
          <target state="translated">バタフライ・サーバーは、リング内にどのメンバーがいるかを追跡し、失敗がないかどうかを常にチェックしています。特定のメンバーは、4つの健康状態のうちの1つになります。</target>
        </trans-unit>
        <trans-unit id="0cf6006633ce60be35578bb59d10f480ec24a0fa" translate="yes" xml:space="preserve">
          <source>Butterfly uses ZeroMQ to disseminate rumors throughout the network. Its flow:</source>
          <target state="translated">バタフライはZeroMQを使用してネットワーク全体に噂を広めます。その流れ。</target>
        </trans-unit>
        <trans-unit id="96136ddf45172c48f4a591ef408f71a825d2ab6d" translate="yes" xml:space="preserve">
          <source>By Subcommand</source>
          <target state="translated">サブコマンド</target>
        </trans-unit>
        <trans-unit id="2c5246b99be91d3cd60d41e1b9d43202602ef14e" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to Chef Infra Client at the start of a Chef Infra Client run</source>
          <target state="translated">開始ハンドラーを&lt;strong&gt;chef-client&lt;/strong&gt;クックブックに追加することにより、ノードにハンドラーをインストールして、Chef InfraClientの実行の開始時にChefInfraClientが使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="8c134f1d4bc6ab786d72f4b398a6d87c30ab5569" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to the chef-client at the start of the chef-client run</source>
          <target state="translated">開始ハンドラを&lt;strong&gt;chef-client&lt;/strong&gt;クックブックに追加します。これにより、ハンドラがノードにインストールされ、chef-client実行の開始時にchef-clientが使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="974cc898b3b8be7ed9691860804ee8514243fee1" translate="yes" xml:space="preserve">
          <source>By adding the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a recipe, and then adding that recipe to the run-list for a node. (The &lt;strong&gt;chef_handler&lt;/strong&gt; resource is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook.)</source>
          <target state="translated">追加することにより&lt;strong&gt;chef_handler&lt;/strong&gt;レシピにリソースをして、ノードのために、実行リストにそのレシピを追加します。（&lt;strong&gt;chef_handler&lt;/strong&gt;リソースは&lt;strong&gt;chef_handler&lt;/strong&gt;クックブックから入手できます。）</target>
        </trans-unit>
        <trans-unit id="5845bc358184518c07bd3ef6cc57143c929f50b8" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how Chef Infra Client is being run:</source>
          <target state="translated">Chef Infra Clientの実行方法に応じて、client.rbファイルまたはsolo.rbファイルのいずれかに以下のRubyコードの行を追加します。</target>
        </trans-unit>
        <trans-unit id="a558e0981c24356985f21cb25bc197711d72c158" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how the chef-client is being run:</source>
          <target state="translated">chef-clientの実行方法に応じて、client.rbファイルかsolo.rbファイルに以下のRubyコードを追加してください。</target>
        </trans-unit>
        <trans-unit id="d90ced6e70b965534c561bea92689ff8f37e3503" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;exception_handlers&lt;/code&gt; and/or &lt;code&gt;report_handlers&lt;/code&gt;</source>
          <target state="translated">ノードのclient.rbファイルの次の設定の1つにハンドラーを追加する： &lt;code&gt;exception_handlers&lt;/code&gt; および/または &lt;code&gt;report_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9655186f940d77bf0f58c90cb3ab2e7fb1cb06b9" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;start_handlers&lt;/code&gt;</source>
          <target state="translated">ノードのclient.rbファイルの次の設定の1つにハンドラーを追加する： &lt;code&gt;start_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14553a114a6e4bab2587ef28af72f75b01fdf4dc" translate="yes" xml:space="preserve">
          <source>By bootstraping Chef Infra Client using &lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;knife bootstrap&lt;/a&gt; from a local workstation using WinRM</source>
          <target state="translated">使用したシェフインフラクライアントをブートストラップすることにより&lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;ナイフブートストラップを&lt;/a&gt;WinRMのを使用してローカルワークステーションから</target>
        </trans-unit>
        <trans-unit id="eee4357f4459067fae66aaebf094ac76b1753912" translate="yes" xml:space="preserve">
          <source>By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor.</source>
          <target state="translated">ワイルドカードと範囲一致パターンとワイルドカードクエリを組み合わせることで、MACアドレスのベンダ部分を使って、指定したベンダ製のネットワークカードを持つすべてのノードを検索するなど、非常に強力な検索を行うことができます。</target>
        </trans-unit>
        <trans-unit id="d4e3ebc3ed141f01182b781f9dfce7b6788d9f60" translate="yes" xml:space="preserve">
          <source>By connecting a plan file in &lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;Chef Habitat Builder&lt;/a&gt;, you can trigger both manual (via the web UI, or via the &lt;code&gt;hab&lt;/code&gt; command line) as well as automated package rebuilds whenever a change is merged into the &lt;code&gt;master&lt;/code&gt; branch of the repository containing your Chef Habitat plan, or when a dependent package updates (rebuilds).</source>
          <target state="translated">&lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;Chef Habitat Builder&lt;/a&gt;でプランファイルを接続することにより、変更がChef Habitatを含むリポジトリの &lt;code&gt;master&lt;/code&gt; ブランチにマージされるたびに、手動（Web UIまたは &lt;code&gt;hab&lt;/code&gt; コマンドライン経由）と自動パッケージ再構築の両方をトリガーできます。計画、または依存パッケージが更新（再構築）されるとき。</target>
        </trans-unit>
        <trans-unit id="8d5159ff85fa0f3f305cfc7542ce39f4954ca747" translate="yes" xml:space="preserve">
          <source>By creating and editing files using the Ruby DSL or JSON, role data can be dynamically generated with the Ruby DSL. Roles created and edited using files are compatible with all versions of Chef, including chef-solo. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using knife or the Chef management console, as changes will be overwritten.</source>
          <target state="translated">Ruby DSLやJSONを使ってファイルを作成・編集することで、Ruby DSLでロールデータを動的に生成することができます。ファイルを使って作成・編集したロールは、chef-soloを含むすべてのバージョンのChefに対応しています。ファイルを使って作成・編集したロールは、バージョンソース管理で保持することができ、いつ何を変更したかの履歴も保持します。ファイルを使用してロールを作成・編集する場合、変更が上書きされるため、knifeやChef管理コンソールを使用して管理しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="7d0bd7ceb9908127f8ef3e6f67b0c773fe884e07" translate="yes" xml:space="preserve">
          <source>By default only Admins of Chef Automate may create and manage notifications.</source>
          <target state="translated">デフォルトではChef Automateの管理者のみが通知の作成と管理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="46aad7e6a001f5863791bc1519da5e1350e2eea2" translate="yes" xml:space="preserve">
          <source>By default the Chef Automate cluster is configured to store near-complete backup archives and snapshots on the local filesystem. When you create backups they will include all Chef Automate data and configuration except for the RabbitMQ queues. This was determined to be a safe choice as the RabbitMQ queues are commonly quite small and require taking the Chef Automate cluster offline in order to back them up. As they are not required to restore a functional Chef Automate cluster the services disruption is rarely worth the value of the RabbitMQ queues.</source>
          <target state="translated">デフォルトでは、Chef Automateクラスタは、ほぼ完全なバックアップアーカイブとスナップショットをローカルファイルシステムに保存するように設定されています。バックアップを作成すると、RabbitMQキューを除くすべてのChef Automateデータと設定が含まれます。RabbitMQキューは一般的に非常に小さく、それらをバックアップするためにChef Automateクラスタをオフラインにする必要があるため、これは安全な選択であると判断されました。それらは機能的なChef Automateクラスタをリストアするために必要とされるものではないので、サービスの混乱がRabbitMQキューの価値に見合うことはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="bfefa1b48328280be946f040df25ee33e5671d66" translate="yes" xml:space="preserve">
          <source>By default the chef generate repo command generates a base chef-repo configured for Policyfiles. To create a repository setup for Roles and Environments instead use the &lt;code&gt;--roles&lt;/code&gt; flag when running the command.</source>
          <target state="translated">デフォルトでは、chef generate repoコマンドは、ポリシーファイル用に構成されたベースchef-repoを生成します。ロールと環境のリポジトリ設定を作成するには、代わりにコマンドの実行時に &lt;code&gt;--roles&lt;/code&gt; フラグを使用します。</target>
        </trans-unit>
        <trans-unit id="4d44d4f86b500815df8cd42a1f6140b0f0b71232" translate="yes" xml:space="preserve">
          <source>By default the command that is ran is shown in the Chef InSpec output. This can be problematic if the command contains sensitive arguments such as a password. These sensitive parts can be redacted by passing in &lt;code&gt;redact_regex&lt;/code&gt; and a regular expression to redact. Optionally, you can use 2 capture groups to fine tune what is redacted.</source>
          <target state="translated">デフォルトでは、実行されるコマンドはChefInSpec出力に表示されます。コマンドにパスワードなどの機密性の高い引数が含まれている場合、これは問題になる可能性があります。これらのデリケートな部分は、 &lt;code&gt;redact_regex&lt;/code&gt; と正規表現を渡して編集することで編集できます。オプションで、2つのキャプチャグループを使用して、編集対象を微調整できます。</target>
        </trans-unit>
        <trans-unit id="242d4a2f19a8716d717d57b4a429555eeeeb9d33" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;knife bootstrap&lt;/code&gt; uses the &lt;code&gt;chef-full&lt;/code&gt; template to bootstrap a node. This template contains a number of useful features, but it also attempts to pull an installation script from &lt;code&gt;downloads.chef.io&lt;/code&gt;. In this section, you&amp;rsquo;ll copy the contents of the &lt;code&gt;chef-full&lt;/code&gt; template to a custom template, and then modify the package and Ruby gem sources.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;knife bootstrap&lt;/code&gt; は &lt;code&gt;chef-full&lt;/code&gt; テンプレートを使用してノードをブートストラップします。このテンプレートには多くの便利な機能が含まれていますが、 &lt;code&gt;downloads.chef.io&lt;/code&gt; からインストールスクリプトを取得しようとします。このセクションでは、 &lt;code&gt;chef-full&lt;/code&gt; テンプレートのコンテンツをカスタムテンプレートにコピーしてから、パッケージとRubygemソースを変更します。</target>
        </trans-unit>
        <trans-unit id="85b19cf7fa9746e6001c6b342ae00b878a96655d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;knife bootstrap&lt;/code&gt; will attempt to use &lt;code&gt;ssh&lt;/code&gt; to connect to the target node. Use the &lt;code&gt;-o&lt;/code&gt; to specify a different protocol, such as &lt;code&gt;winrm&lt;/code&gt; for windows nodes.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;knife bootstrap&lt;/code&gt; は &lt;code&gt;ssh&lt;/code&gt; を使用してターゲットノードに接続しようとします。 &lt;code&gt;-o&lt;/code&gt; を使用して、Windowsノードの &lt;code&gt;winrm&lt;/code&gt; などの別のプロトコルを指定します。</target>
        </trans-unit>
        <trans-unit id="eb3b1efc29a95a82121eb2d57a511067e2319237" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate includes a &lt;em&gt;project-owner&lt;/em&gt; role, so the global admin may delegate much of these responsibilities for project management to others and share some of the global admin&amp;rsquo;s burden.</source>
          <target state="translated">デフォルトでは、Chef Automateには&lt;em&gt;プロジェクト所有者の&lt;/em&gt;役割が含まれているため、グローバル管理者はプロジェクト管理に関するこれらの責任の多くを他の人に委任し、グローバル管理者の負担の一部を分担することができます。</target>
        </trans-unit>
        <trans-unit id="86c176cb9451de82019a153b0693c6cf6de120af" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate limits you to 300 projects. You can increase the project limit using the command line.</source>
          <target state="translated">デフォルトでは、Chef Automate は 300 プロジェクトに制限しています。プロジェクトの制限を増やすには、コマンドラインを使用します。</target>
        </trans-unit>
        <trans-unit id="1249c0c1921e42912d441d763dd46e8ba8e9314d" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate prevents irreversible destructive operations by keeping deleted node history in Elasticsearch, unless users configure this functionality. Chef Software recommends setting the &lt;code&gt;threshold&lt;/code&gt; for destroying deleted node history to 1 day and running data cleanup every 15 minutes.</source>
          <target state="translated">デフォルトでは、Chef Automateは、ユーザーがこの機能を構成しない限り、Elasticsearchで削除されたノード履歴を保持することにより、不可逆的な破壊的操作を防ぎます。Chef Softwareは、削除されたノードの履歴を破棄するための &lt;code&gt;threshold&lt;/code&gt; を1日に設定し、15分ごとにデータクリーンアップを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="abfb23bd553323ba8e3780f257842bbe580cfbb4" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate will automatically upgrade to the latest version available. These updates can be taken safely, as we&amp;rsquo;ve committed to ensuring the stability of the upgrade process - automatic updates will never introduce breaking changes.</source>
          <target state="translated">デフォルトでは、ChefAutomateは利用可能な最新バージョンに自動的にアップグレードします。アップグレードプロセスの安定性を確保することを約束しているため、これらの更新は安全に行うことができます。自動更新によって重大な変更が発生することはありません。</target>
        </trans-unit>
        <trans-unit id="6b37a23e0ff11ba5e6ac4bac6bde8df24220c2d8" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate&amp;rsquo;s SAML integration will use EntityId &lt;code&gt;https://&amp;lt;yourChef AutomateDomain&amp;gt;/api/v0/e/&amp;lt;yourEnterprise&amp;gt;/saml/metadata&lt;/code&gt;. This can be overridden in &lt;code&gt;delivery.rb&lt;/code&gt; as follows:</source>
          <target state="translated">デフォルトでは、Chef AutomateのSAML統合はEntityIdhttps &lt;code&gt;https://&amp;lt;yourChef AutomateDomain&amp;gt;/api/v0/e/&amp;lt;yourEnterprise&amp;gt;/saml/metadata&lt;/code&gt; ます。これは、 &lt;code&gt;delivery.rb&lt;/code&gt; で次のようにオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="1eeecddc63997c9a3d8c4044040faec3b0771d78" translate="yes" xml:space="preserve">
          <source>By default, Chef Habitat treats all variables as &amp;ldquo;primitive&amp;rdquo; variables. If you are working with a value that is actually an &amp;ldquo;aggregate&amp;rdquo; type, you must set the following special environment variable somewhere in the top level of your plan.</source>
          <target state="translated">デフォルトでは、ChefHabitatはすべての変数を「プリミティブ」変数として扱います。実際には「集計」タイプの値を使用している場合は、プランの最上位のどこかに次の特別な環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6d1e8f439d9baca3bb42f9ea13eccd2f05be24e" translate="yes" xml:space="preserve">
          <source>By default, Chef InSpec is configured to look at &lt;code&gt;~/.azure/credentials&lt;/code&gt;, and it should contain:</source>
          <target state="translated">デフォルトでは、Chef &lt;code&gt;~/.azure/credentials&lt;/code&gt; は〜/ .azure / credentialsを参照するように構成されており、次のものが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="d9a4b29a5dcdae4cab77b0295cdfd747c269d8cf" translate="yes" xml:space="preserve">
          <source>By default, Chef InSpec looks for a config file in &lt;code&gt;~/.inspec/config.json&lt;/code&gt;. Chef InSpec does not need a configuration file to run.</source>
          <target state="translated">デフォルトでは、Chef &lt;code&gt;~/.inspec/config.json&lt;/code&gt; は〜/ .inspec /config.jsonで構成ファイルを検索します。Chef InSpecは、実行するために構成ファイルを必要としません。</target>
        </trans-unit>
        <trans-unit id="d583ad52dff5f88d5df7e24104c256a7edade508" translate="yes" xml:space="preserve">
          <source>By default, Chef Infra Server still writes service credentials to multiple locations inside &lt;code&gt;/etc/opscode&lt;/code&gt;. This is designed to maintain compatibility with add-ons. Chef Server 12.14 introduces the &lt;code&gt;insecure_addon_compat&lt;/code&gt; configuration option in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;, which allows you to further restrict where credentials are written. &lt;code&gt;insecure_addon_compat&lt;/code&gt; can be used if you are not using add-ons, or if you are using the latest add-on versions. Setting &lt;code&gt;insecure_addon_compat&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; writes credentials to only one location: &lt;code&gt;/etc/opscode/private-chef-secrets.json&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、Chef &lt;code&gt;/etc/opscode&lt;/code&gt; 内の複数の場所にサービス資格情報を書き込みます。これは、アドオンとの互換性を維持するように設計されています。 Chef Server 12.14では、 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; に &lt;code&gt;insecure_addon_compat&lt;/code&gt; 構成オプションが導入されています。これにより、資格情報の書き込み先をさらに制限できます。 &lt;code&gt;insecure_addon_compat&lt;/code&gt; は、アドオンを使用していない場合、または最新のアドオンバージョンを使用している場合に使用できます。 &lt;code&gt;insecure_addon_compat&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定すると、資格情報が1つの場所（ &lt;code&gt;/etc/opscode/private-chef-secrets.json&lt;/code&gt; )にのみ書き込まれます。</target>
        </trans-unit>
        <trans-unit id="621730e427a7e11696b4396849f8db206b22d0ee" translate="yes" xml:space="preserve">
          <source>By default, Elasticsearch uses a private temporary directory that the startup script creates immediately below the system temporary directory. Default value: &lt;code&gt;/var/opt/opscode/elasticsearch/tmp&lt;/code&gt;</source>
          <target state="translated">デフォルトでは、Elasticsearchは、スタートアップスクリプトがシステム一時ディレクトリのすぐ下に作成するプライベート一時ディレクトリを使用します。デフォルト値： &lt;code&gt;/var/opt/opscode/elasticsearch/tmp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1470d6eb7ff0c065c4d3a6b42d7cf62123d782fd" translate="yes" xml:space="preserve">
          <source>By default, PostgreSQL only allows systems on its local network to connect to the database server that runs it and the &lt;code&gt;pg_hba.conf&lt;/code&gt; used by PostgreSQL controls network access to the server. The default &lt;code&gt;pg_hba.conf&lt;/code&gt; has the following four entries:</source>
          <target state="translated">デフォルトでは、PostgreSQLはローカルネットワーク上のシステムのみがそれを実行するデータベースサーバーに接続することを許可し、PostgreSQLが使用する &lt;code&gt;pg_hba.conf&lt;/code&gt; がサーバーへのネットワークアクセスを制御します。デフォルトの &lt;code&gt;pg_hba.conf&lt;/code&gt; には、次の4つのエントリがあります。</target>
        </trans-unit>
        <trans-unit id="07061e5e295f9b09f78fe89a2d15f3e6863c8664" translate="yes" xml:space="preserve">
          <source>By default, Windows systems will run the chef-client cookbook as a scheduled task if your run-list looks like this: &lt;code&gt;recipe[chef-client::default]&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、実行リストが次のようになっている場合、Windowsシステムはchef-clientクックブックをスケジュールされたタスクとして実行します： &lt;code&gt;recipe[chef-client::default]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="149524de8d755c68a5e2f773f73fb2c025897a7d" translate="yes" xml:space="preserve">
          <source>By default, Workflow will use the current directory name as project name. If you want to name the project something else, you may specify the project name as an argument (&lt;code&gt;--project=$AUTOMATE_PROJECT_NAME&lt;/code&gt;).</source>
          <target state="translated">デフォルトでは、ワークフローは現在のディレクトリ名をプロジェクト名として使用します。プロジェクトに別の名前を付けたい場合は、プロジェクト名を引数として指定できます（ &lt;code&gt;--project=$AUTOMATE_PROJECT_NAME&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cec99e320ec90350e28b8fed45528174d948f18a" translate="yes" xml:space="preserve">
          <source>By default, a Berksfile has a source for Chef&amp;rsquo;s public Supermarket:</source>
          <target state="translated">デフォルトでは、BerksfileにはChefのパブリックスーパーマーケットのソースがあります。</target>
        </trans-unit>
        <trans-unit id="5152ca88eaab741ef432fed71b2cb587f61e8b39" translate="yes" xml:space="preserve">
          <source>By default, a Supervisor runs unsecured. It communicates with other Supervisors in cleartext, and it allows any user to apply new configuration without authentication. While this is beneficial for demonstrating the concepts of Chef Habitat, users will want to provide external security on production deployments of Chef Habitat Supervisor networks.</source>
          <target state="translated">デフォルトでは、スーパバイザは保護されていない状態で動作します。これは、他のスーパバイザとクリアテキストで通信し、どのユーザーでも認証なしで新しい設定を適用できます。これはChef Habitatの概念を実演するのには有益ですが、ユーザーはChef Habitatスーパバイザネットワークの本番環境で外部セキュリティを提供したいと思うでしょう。</target>
        </trans-unit>
        <trans-unit id="3cd3f138a1575a88634ad0fdb31ec46c2e14db79" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell Chef Infra Client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="translated">デフォルトでは、ファイルまたはディレクトリはその親ディレクトリから権限を継承します。ほとんどの場合、これは好ましい動作ですが、より具体的に権利を制御するための手順を実行する必要がある場合もあります。 &lt;code&gt;inherits&lt;/code&gt; プロパティは、具体的には（適用するかではない）を適用するシェフインフラクライアントに伝えるために使用することができ、その親ディレクトリから継承された権利。</target>
        </trans-unit>
        <trans-unit id="9a5e71ebfa3aeb72ae98f51660e74a37975b03f2" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell the chef-client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="translated">デフォルトでは、ファイルまたはディレクトリは親ディレクトリから権限を継承します。ほとんどの場合、これが望ましい動作ですが、権利をより具体的に制御するための手順を実行する必要がある場合があります。 &lt;code&gt;inherits&lt;/code&gt; プロパティは、具体的には（適用するかしない）その親ディレクトリから継承された権利を適用するシェフ、クライアントに伝えるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9afd4fcbe5ab7cddf395784c81b360459c3ec67c" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook</source>
          <target state="translated">デフォルトでは、部分テンプレートファイルは、トップレベルのテンプレートを含むクックブックにあると想定されます。別のクックブックへのパスを指定するには、このオプションを使用します。</target>
        </trans-unit>
        <trans-unit id="95fa357bbb924ddee6d97d5db6b4d0a81db973f0" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)</source>
          <target state="translated">デフォルトでは、部分テンプレートファイルはそのファイル名で識別されます。このオプションを使用して、(部分テンプレートファイルの名前の代わりに)別の名前や使用するローカルパスを指定します。</target>
        </trans-unit>
        <trans-unit id="6ce19a97bcdcfb562252deb688d41c07b675fb2d" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef Infra Server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="translated">デフォルトでは、Chef Infra Serverで必要なアカウントはセットアップ時に作成されます。お使いの環境で、ローカルユーザーやグループアカウントの作成に制限があり、セットアップ中にこれらのアカウントが自動的に作成されない場合は、これらのアカウントを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="65122aaf9200a934cc31a6c9e618db8d549e30a6" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="translated">デフォルトでは、Chefサーバーが必要とするアカウントはセットアップ時に作成されます。ご使用の環境で、ローカルユーザーやグループアカウントの作成に制限があり、セットアップ時にこれらのアカウントが自動的に作成されない場合は、これらのアカウントを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="1d2835e65a1a62ffa0b00bfde520c461893cf850" translate="yes" xml:space="preserve">
          <source>By default, all of the custom resources from a listed dependency are available for use in your profile. If two of your dependencies provide a resource with the same name, you can use the &lt;code&gt;require_resource&lt;/code&gt; DSL function to disambiguate the two:</source>
          <target state="translated">デフォルトでは、リストされた依存関係のすべてのカスタムリソースをプロファイルで使用できます。2つの依存関係が同じ名前のリソースを提供する場合、 &lt;code&gt;require_resource&lt;/code&gt; DSL関数を使用して2つを明確にすることができます。</target>
        </trans-unit>
        <trans-unit id="4cfe074578ccf3b6758f0ed6a24dacdb7a323da8" translate="yes" xml:space="preserve">
          <source>By default, all requests are denied.</source>
          <target state="translated">デフォルトでは、すべてのリクエストは拒否されます。</target>
        </trans-unit>
        <trans-unit id="7d37ef7ea1d082df747d656c9abd5a5bbf4ddad7" translate="yes" xml:space="preserve">
          <source>By default, any attempt to run a Chef Push Jobs command other than &lt;code&gt;chef-client&lt;/code&gt; will be rejected with &lt;code&gt;nack&lt;/code&gt;. For example:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;chef-client&lt;/code&gt; 以外のChef Push Jobsコマンドを実行しようとすると、 &lt;code&gt;nack&lt;/code&gt; で拒否されます。例えば：</target>
        </trans-unit>
        <trans-unit id="d18a0605a0f46903e7fb0748fcbe69e0f04228b3" translate="yes" xml:space="preserve">
          <source>By default, any users that authenticate successfully with the configured Identity Provider will be logged in: both users with existing user accounts in Chef Automate that are set up for SAML authentication, and users hitherto unknown to Chef Automate, which then get a user account created in Chef Automate automatically. It is also possible to migrate existing users, or to create SAML users manually.</source>
          <target state="translated">デフォルトでは、設定されたIdentity Providerで正常に認証されたユーザーはすべてログインされます。SAML認証のために設定されたChef Automateの既存のユーザーアカウントを持つユーザーと、Chef Automateにまだ知られていないユーザーの両方が、Chef Automateで自動的に作成されたユーザーアカウントを取得します。既存のユーザーを移行したり、手動で SAML ユーザーを作成したりすることも可能です。</target>
        </trans-unit>
        <trans-unit id="6442e11780e11f880c632deaea5e718f8490fe58" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef Infra Server. The chef-shell can be run as a Chef Infra Client to verify functionality that is only available when Chef Infra Client connects to the Chef Infra Server, such as search functionality or accessing data stored in data bags.</source>
          <target state="translated">デフォルトでは、chef-shell はスタンドアロン モードでロードされ、Chef Infra サーバーには接続されません。chef-shell を Chef Infra クライアントとして実行して、検索機能やデータバッグに保存されたデータへのアクセスなど、Chef Infra クライアントが Chef Infra サーバーに接続したときにのみ利用可能な機能を検証することができます。</target>
        </trans-unit>
        <trans-unit id="531033f1d5c8c124b92373d2ce5162f1505a5ed1" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef server. The chef-shell can be run as a chef-client to verify functionality that is only available when the chef-client connects to the Chef server, such as search functionality or accessing data stored in data bags.</source>
          <target state="translated">デフォルトでは、chef-shellはスタンドアロン モードでロードされ、Chefサーバーには接続されません。chef-shellをchef-clientとして実行して、chef-clientがChefサーバーに接続したときにのみ利用可能な機能(検索機能やデータバッグに保存されたデータへのアクセスなど)を検証することができます。</target>
        </trans-unit>
        <trans-unit id="b69e6ba9c388d59271822bec0e6580c23a7235af" translate="yes" xml:space="preserve">
          <source>By default, each build cookbook recipe &lt;code&gt;$RECIPE&lt;/code&gt; is located at &lt;code&gt;.delivery/build-cookbook/recipes/$RECIPE.rb&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、各ビルドクックブックレシピ &lt;code&gt;$RECIPE&lt;/code&gt; は &lt;code&gt;.delivery/build-cookbook/recipes/$RECIPE.rb&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="dd656f79a82d9dcddd3bd1d43bbb822639cb8ac3" translate="yes" xml:space="preserve">
          <source>By default, every log resource that executes will count as an updated resource in the updated resource count at the end of a Chef run. You can disable this behavior by adding &lt;code&gt;count_log_resource_updates false&lt;/code&gt; to your Chef &lt;code&gt;client.rb&lt;/code&gt; configuration file.</source>
          <target state="translated">デフォルトでは、実行されるすべてのログリソースは、Chefの実行終了時に更新されたリソースカウントで更新されたリソースとしてカウントされます。この動作を無効にするには、 &lt;code&gt;count_log_resource_updates false&lt;/code&gt; をChef &lt;code&gt;client.rb&lt;/code&gt; 構成ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="0a9ab5a26a4475a8770eb38f662408bb7167b0ec" translate="yes" xml:space="preserve">
          <source>By default, every new package is placed in the &lt;code&gt;unstable&lt;/code&gt; channel by Builder. Packages in the &lt;code&gt;unstable&lt;/code&gt; channel cannot be started or installed unless you specify the &lt;code&gt;--channel&lt;/code&gt; flag in the &lt;code&gt;hab&lt;/code&gt; CLI, or set the &lt;code&gt;HAB_BLDR_CHANNEL&lt;/code&gt; environment variable to a non-stable channel. This is because the default channel used by the &lt;code&gt;hab&lt;/code&gt; CLI when starting, installing, or loading packages is the &lt;code&gt;stable&lt;/code&gt; channel. The &lt;code&gt;stable&lt;/code&gt; channel indicates a level of stability and functionality suitable for use in multi-service applications or as a dependency for your service.</source>
          <target state="translated">デフォルトでは、すべての新しいパッケージはBuilderによって &lt;code&gt;unstable&lt;/code&gt; チャネルに配置されます。 &lt;code&gt;hab&lt;/code&gt; CLIで &lt;code&gt;--channel&lt;/code&gt; フラグを指定するか、 &lt;code&gt;HAB_BLDR_CHANNEL&lt;/code&gt; 環境変数を非安定チャネルに設定しない限り、 &lt;code&gt;unstable&lt;/code&gt; チャネルのパッケージを開始またはインストールすることはできません。これは、パッケージの起動、インストール、またはロード時に &lt;code&gt;hab&lt;/code&gt; CLIが使用するデフォルトのチャネルが &lt;code&gt;stable&lt;/code&gt; チャネルであるためです。 &lt;code&gt;stable&lt;/code&gt; チャンネルは、安定性とマルチサービス・アプリケーションまたはあなたのサービスの依存関係として使用するのに適した機能性のレベルを示しています。</target>
        </trans-unit>
        <trans-unit id="b0fc2c706a5ded2740ed732f71a552f70bd9fc0d" translate="yes" xml:space="preserve">
          <source>By default, every service joins the &lt;code&gt;service-name.default&lt;/code&gt; service group unless otherwise specified at runtime.</source>
          <target state="translated">デフォルトでは、実行時に特に指定されていない限り、すべてのサービスが &lt;code&gt;service-name.default&lt;/code&gt; サービスグル​​ープに参加します。</target>
        </trans-unit>
        <trans-unit id="dfe252e51e46f6b0f850113bc8c4bfa37a9cd771" translate="yes" xml:space="preserve">
          <source>By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler, then it will be retried with exponential backoff according to the settings</source>
          <target state="translated">デフォルトでは、ジョブが正常に完了しなかった場合、つまりハンドラからの確認応答が受信されなかった場合、そのジョブは設定された</target>
        </trans-unit>
        <trans-unit id="22b2e532feed76b316a23022db2b33a554db75e0" translate="yes" xml:space="preserve">
          <source>By default, it collects the most current log file as well as any others that have been modified in the last 180 minutes. If the &lt;code&gt;--all-logs&lt;/code&gt; option is given, all log files are collected.</source>
          <target state="translated">デフォルトでは、最新のログファイルと、過去180分間に変更されたその他のログファイルが収集されます。場合は &lt;code&gt;--all-logs&lt;/code&gt; オプションが指定され、すべてのログファイルを収集しています。</target>
        </trans-unit>
        <trans-unit id="87f5a920758e81f7c92d247c4eaf27fda8361627" translate="yes" xml:space="preserve">
          <source>By default, new plan connections will have auto-build turned off.</source>
          <target state="translated">デフォルトでは、新規プランの接続は自動構築がオフになっています。</target>
        </trans-unit>
        <trans-unit id="3d78770db1347fcf70e806632a9d60abe96f57f4" translate="yes" xml:space="preserve">
          <source>By default, newly uploaded packages are placed in the &lt;code&gt;unstable&lt;/code&gt; channel. However, the default package that is downloaded is the latest &lt;code&gt;stable&lt;/code&gt; version of a package, unless overridden in commands such as &lt;code&gt;hab sup run&lt;/code&gt;, &lt;code&gt;hab svc load&lt;/code&gt;, and &lt;code&gt;hab pkg install&lt;/code&gt;. If you want to promote your package to the &lt;code&gt;stable&lt;/code&gt; channel, run the &lt;code&gt;hab pkg promote&lt;/code&gt; command as follows:</source>
          <target state="translated">デフォルトでは、新しくアップロードされたパッケージは &lt;code&gt;unstable&lt;/code&gt; チャネルに配置されます。ただし、ダウンロードされるデフォルトのパッケージは、 &lt;code&gt;hab sup run&lt;/code&gt; 、 &lt;code&gt;hab svc load&lt;/code&gt; 、 &lt;code&gt;hab pkg install&lt;/code&gt; などのコマンドでオーバーライドされない限り、パッケージの最新の &lt;code&gt;stable&lt;/code&gt; バージョンです。パッケージを &lt;code&gt;stable&lt;/code&gt; チャネルにプロモートする場合は、次のように &lt;code&gt;hab pkg promote&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="07dcf7be7da4fe72df29d3c4d5b60afd3caf93fa" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a Chef Infra Client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、通知は &lt;code&gt;:delayed&lt;/code&gt; です。つまり、通知はトリガーされるとキューに入れられ、Chef InfraClientの実行の最後に実行されます。アクションをすぐに実行するには、 &lt;code&gt;:immediately&lt;/code&gt; ：を使用します。</target>
        </trans-unit>
        <trans-unit id="da8483a98e5e5057c87a30ab2a2ca13e8b18f177" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a Chef Infra Client run. To run kan action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、通知は &lt;code&gt;:delayed&lt;/code&gt; です。つまり、通知はトリガーされるとキューに入れられ、Chef InfraClientの実行の最後に実行されます。kanアクションをすぐに実行するには、 &lt;code&gt;:immediately&lt;/code&gt; ：を使用します。</target>
        </trans-unit>
        <trans-unit id="ef35f941166c67f18f63df8baa46957dd47f251c" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a chef-client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、通知は &lt;code&gt;:delayed&lt;/code&gt; です。つまり、通知はトリガーされるとキューに入れられ、シェフクライアントの実行の最後に実行されます。アクションをすぐに実行するには、 &lt;code&gt;:immediately&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="fa71c7c3d57a70a6fabbc7d95fa6be595649c616" translate="yes" xml:space="preserve">
          <source>By default, only Admin users of Chef Automate may create and manage Data Feeds.</source>
          <target state="translated">デフォルトでは、Chef AutomateのAdminユーザーのみがデータフィードの作成と管理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="3a6aa43ce47af1ebaf735cf66d7a538c93bcfd75" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;actions&lt;/strong&gt; should be investigated further:</source>
          <target state="translated">デフォルトでは、runitは、サービスが失敗したときにサービスを自動的に再起動します。したがって、runitは、サービスに問題がある場合でも、サービスのステータスを &lt;code&gt;run:&lt;/code&gt; として報告する場合があります。特定のサービスが正常に実行されていない理由を調査するときは、稼働時間が最も短いサービスを探してください。たとえば、以下のリストは、&lt;strong&gt;アクション&lt;/strong&gt;をさらに調査&lt;strong&gt;する&lt;/strong&gt;必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="71133340820cb57c31c7d7ea0d547077b21284bd" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;opscode-erchef&lt;/strong&gt; should be investigated further:</source>
          <target state="translated">デフォルトでは、runitはサービスが失敗したときにサービスを自動的に再起動します。そのため、runitはサービスのステータスを &lt;code&gt;run:&lt;/code&gt; として報告する場合があります。そのサービスに問題がある場合でもです。特定のサービスが想定どおりに実行されない理由を調査するときは、稼働時間が最短のサービスを探します。たとえば、以下のリストは、&lt;strong&gt;opscode-erchef&lt;/strong&gt;をさらに調査する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="5195b2fc741347a5be096f4d45b760e3c4b92a96" translate="yes" xml:space="preserve">
          <source>By default, service groups will trust &lt;em&gt;any&lt;/em&gt; communication, so for a production deployment of Chef Habitat, setting up these relationships is essential.</source>
          <target state="translated">デフォルトでは、サービスグル​​ープは&lt;em&gt;すべての&lt;/em&gt;通信を信頼&lt;em&gt;する&lt;/em&gt;ため、Chef Habitatの実稼働展開では、これらの関係を設定することが不可欠です。</target>
        </trans-unit>
        <trans-unit id="d245f87d35d89131b4577983776e035c3ab8d2cf" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;public_key_read_access&lt;/code&gt; assigns all members of the &lt;code&gt;users&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt; group permission to these endpoints:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;public_key_read_access&lt;/code&gt; は、 &lt;code&gt;users&lt;/code&gt; および &lt;code&gt;clients&lt;/code&gt; グループのすべてのメンバーに、これらのエンドポイントへの権限を割り当てます。</target>
        </trans-unit>
        <trans-unit id="00e39efed1bb385d469131e33ba2a27c59b95219" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;delivery-truck&lt;/strong&gt; cookbook is configured for use with Chef Automate-backed cookbook projects.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;配達トラックの&lt;/strong&gt;クックブックは、ChefAutomateが支援するクックブックプロジェクトで使用するように構成されています。</target>
        </trans-unit>
        <trans-unit id="fcbd8c180fdf44c1f4b3b9ea7ab6966d109be385" translate="yes" xml:space="preserve">
          <source>By default, the Chef Automate 2 upgrade process will not proceed if your Chef Automate 1 installation does not have backups configured. Invoke the migration using the &lt;code&gt;--skip-backup-check&lt;/code&gt; flag to avoid this check.</source>
          <target state="translated">デフォルトでは、Chef Automate 1のインストールにバックアップが構成されていない場合、Chef Automate2のアップグレードプロセスは続行されません。このチェックを回避 &lt;code&gt;--skip-backup-check&lt;/code&gt; は、-skip-backup-checkフラグを使用して移行を呼び出します。</target>
        </trans-unit>
        <trans-unit id="589c9cb21f16f8bc8a8ab99cd5d984da113ce0a2" translate="yes" xml:space="preserve">
          <source>By default, the Chef server uses the FQDN to determine the common name (&lt;code&gt;CN&lt;/code&gt;). If the FQDN of the Chef server is longer than 64 characters, the &lt;code&gt;reconfigure&lt;/code&gt; command will not fail, but an empty certificate file will be created. Nginx will not start if a certificate file is empty.</source>
          <target state="translated">デフォルトでは、ChefサーバーはFQDNを使用して共通名（ &lt;code&gt;CN&lt;/code&gt; ）を決定します。ChefサーバーのFQDNが64文字より長い場合、 &lt;code&gt;reconfigure&lt;/code&gt; コマンドは失敗しませんが、空の証明書ファイルが作成されます。証明書ファイルが空の場合、nginxは起動しません。</target>
        </trans-unit>
        <trans-unit id="6cad4c5aa880998056843b216cd90c7598b924f6" translate="yes" xml:space="preserve">
          <source>By default, the Studio is reset to a clean state after the package is built; however, &lt;em&gt;if you are using the Linux version of &lt;code&gt;hab&lt;/code&gt;&lt;/em&gt;, you can reuse a previous Studio when building your package by specifying the &lt;code&gt;-R&lt;/code&gt; option when calling the &lt;code&gt;hab pkg build&lt;/code&gt; subcommand.</source>
          <target state="translated">デフォルトでは、Studioはパッケージのビルド後にクリーンな状態にリセットされます。ただし、&lt;em&gt;Linuxバージョンの &lt;code&gt;hab&lt;/code&gt; &lt;/em&gt;を使用している場合は、 &lt;code&gt;hab pkg build&lt;/code&gt; サブコマンドを呼び出すときに &lt;code&gt;-R&lt;/code&gt; オプションを指定することで、パッケージをビルドするときに以前のStudioを再利用できます。</target>
        </trans-unit>
        <trans-unit id="2855d3be06ffec12ea8b8589c1045171ba706d4a" translate="yes" xml:space="preserve">
          <source>By default, the Supervisor&amp;rsquo;s &amp;ldquo;control gateway&amp;rdquo; listens on the &lt;code&gt;127.0.0.1&lt;/code&gt; interface for incoming commands. This means that it can only receive commands from the same machine, and not from remote clients. If you wish to control a Supervisor remotely, you&amp;rsquo;ll have to start the Supervisor setting its &lt;code&gt;--listen-ctl&lt;/code&gt; option to an appropriate interface and port (9632 is the default control gateway port):</source>
          <target state="translated">デフォルトでは、スーパーバイザの「制御ゲートウェイ」は、 &lt;code&gt;127.0.0.1&lt;/code&gt; インターフェイスで着信コマンドをリッスンします。これは、同じマシンからのみコマンドを受信でき、リモートクライアントからは受信できないことを意味します。スーパーバイザーをリモートで制御する場合は、スーパーバイザーを起動して、その &lt;code&gt;--listen-ctl&lt;/code&gt; オプションを適切なインターフェイスとポートに設定する必要があります（9632がデフォルトの制御ゲートウェイポートです）。</target>
        </trans-unit>
        <trans-unit id="7dee108fcba5e05c3066f09a2959fa986ac5ee48" translate="yes" xml:space="preserve">
          <source>By default, the delivery-truck cookbook is configured for use with Chef Automate-backed cookbook projects.</source>
          <target state="translated">デフォルトでは、Delivery-track クックブックは、Chef Automate をバックにしたクックブックプロジェクトで使用するように設定されています。</target>
        </trans-unit>
        <trans-unit id="766761c3060b16984b288b0d0a5b0d539b15b784" translate="yes" xml:space="preserve">
          <source>By default, the solver selection depends on your environment. When the &lt;code&gt;dep_selector&lt;/code&gt; gem is installed, as in the case of Chef Workstation, the &lt;code&gt;gecode&lt;/code&gt; solver is used. Otherwise, the &lt;code&gt;ruby&lt;/code&gt; solver is utilized by default.</source>
          <target state="translated">デフォルトでは、ソルバーの選択は環境によって異なります。Chef Workstationの場合のように、 &lt;code&gt;dep_selector&lt;/code&gt; gemがインストールされると、 &lt;code&gt;gecode&lt;/code&gt; ソルバーが使用されます。それ以外の場合は、デフォルトで &lt;code&gt;ruby&lt;/code&gt; ソルバーが使用されます。</target>
        </trans-unit>
        <trans-unit id="d97a177f245efffc199d16fdbd57a8cc5afea2ec" translate="yes" xml:space="preserve">
          <source>By default, the table rows sort from the smallest to the largest percentage of &amp;ldquo;OK&amp;rdquo; services. Selecting the &lt;em&gt;Health&lt;/em&gt; column reverses the order, and displays the percentage of &amp;ldquo;OK&amp;rdquo; services from largest to smallest.</source>
          <target state="translated">デフォルトでは、テーブルの行は「OK」サービスの最小から最大のパーセンテージでソートされます。[&lt;em&gt;ヘルス&lt;/em&gt;]列を選択すると、順序が逆になり、「OK」サービスの割合が最大から最小に表示されます。</target>
        </trans-unit>
        <trans-unit id="ad6b1930c186bf3f39a72d7902f8670aef48798e" translate="yes" xml:space="preserve">
          <source>By default, this command communicates with your running Chef Automate installation to list the backups. If the Chef Automate installation is down, you can still list the backups.</source>
          <target state="translated">デフォルトでは、このコマンドは実行中のChef Automateと通信してバックアップを一覧表示します。Chef Automateがダウンしていても、バックアップをリストアップすることができます。</target>
        </trans-unit>
        <trans-unit id="48abd51959093623111d5a222cc28b5ea1050ca4" translate="yes" xml:space="preserve">
          <source>By defining multiple paths for multiple locations:</source>
          <target state="translated">複数の場所に対して複数のパスを定義することで</target>
        </trans-unit>
        <trans-unit id="67ebd7e78051f9281ced1a6cbe0afd0e4a0060a6" translate="yes" xml:space="preserve">
          <source>By defining those same multiple paths as an array:</source>
          <target state="translated">それらの同じ複数のパスを配列として定義することで</target>
        </trans-unit>
        <trans-unit id="df6a87a67cffa70410559f677f9deb9355017b83" translate="yes" xml:space="preserve">
          <source>By downloading Chef Infra Client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="translated">ターゲットノードにChef Infra Clientをダウンロードし、ローカルでMicrosoft Installer Package (MSI)を実行することで、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="54cfca649e0c8ba9b58e8082aab63c23e4f20683" translate="yes" xml:space="preserve">
          <source>By downloading the chef-client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="translated">ターゲットノードにchef-clientをダウンロードし、ローカルでMicrosoft Installer Package (MSI)を実行します。</target>
        </trans-unit>
        <trans-unit id="10e8f4f7b75d0467b9c8fd1afa8782e175b5b65c" translate="yes" xml:space="preserve">
          <source>By editing the &lt;code&gt;chef_environment&lt;/code&gt; directly using knife or the Chef management console</source>
          <target state="translated">ナイフまたはChef管理コンソールを使用して &lt;code&gt;chef_environment&lt;/code&gt; を直接編集する</target>
        </trans-unit>
        <trans-unit id="630d2f93884bd545008634772ca1cbc8954959af" translate="yes" xml:space="preserve">
          <source>By editing the &lt;code&gt;environment&lt;/code&gt; configuration details in the client.rb file, and then using &lt;code&gt;knife bootstrap -e environment_name&lt;/code&gt; to bootstrap the changes to the specified environment</source>
          <target state="translated">client.rbファイルの &lt;code&gt;environment&lt;/code&gt; 構成の詳細を編集し、 &lt;code&gt;knife bootstrap -e environment_name&lt;/code&gt; を使用して、指定した環境への変更をブートストラップします。</target>
        </trans-unit>
        <trans-unit id="f9b9ab365481633d69526f5c027b2a66d544d2d1" translate="yes" xml:space="preserve">
          <source>By itself (i.e. a chef-client run that does not build the resource collection or converge the node)</source>
          <target state="translated">単独で(すなわち、リソースコレクションの構築やノードの収束を行わないchef-client実行)</target>
        </trans-unit>
        <trans-unit id="765d055727735c29d2cea8848cc5579e3f878993" translate="yes" xml:space="preserve">
          <source>By now we should have a full set of base packages that have been built using Chef Habitat packages. These should be suitable for use when building other packages. As a final cleanup:</source>
          <target state="translated">これまでに、Chef Habitat パッケージを使ってビルドされた基本パッケージのフルセットを手に入れているはずです。これらは、他のパッケージをビルドする際に使用するのに適しているはずです。最後のクリーンアップとして。</target>
        </trans-unit>
        <trans-unit id="ea4100669136136721164d360b9686d3e0f0e325" translate="yes" xml:space="preserve">
          <source>By organization. A webhook that is specified at the organization level enables Slack notifications for all projects that belong to that organization.</source>
          <target state="translated">組織単位で。組織レベルで指定されたWebhookは、その組織に属するすべてのプロジェクトに対してSlackの通知を可能にします。</target>
        </trans-unit>
        <trans-unit id="aa6dcf759db2708a5cd0a0b7b24159679de7a345" translate="yes" xml:space="preserve">
          <source>By project. A webhook that is specified at the project level enables Slack notifications only for that project.</source>
          <target state="translated">プロジェクト単位で。プロジェクトレベルで指定されたウェブフックは、そのプロジェクトに対してのみSlack通知を有効にします。</target>
        </trans-unit>
        <trans-unit id="66ecd12fb29d25bc1c1ea3b2acc69b33655387ae" translate="yes" xml:space="preserve">
          <source>By service role, access requirements are as follows:</source>
          <target state="translated">サービスの役割別に見ると、アクセス要件は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0a20345f58c49e3d4e7adc58d63cb40a9e7cbbf1" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;environment&lt;/code&gt; configuration entry in the client.rb file ; when Chef Infra Client runs, it will pick up the value and then set the &lt;code&gt;chef_environment&lt;/code&gt; attribute of the node</source>
          <target state="translated">client.rbファイルに &lt;code&gt;environment&lt;/code&gt; 構成エントリを設定する。Chef Infra Clientを実行すると、値が取得され、ノードの &lt;code&gt;chef_environment&lt;/code&gt; 属性が設定されます。</target>
        </trans-unit>
        <trans-unit id="7837e72973ea6d1778e65e90a327e758c6ec5a40" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;pkg_scaffolding&lt;/code&gt; variable in your plan, Chef Habitat will pull in the necessary package dependencies, run the build steps for Chef Infra and/or Chef InSpec, and provide you with a Chef Habitat artifact that contains your cookbooks or profiles and a way to run them on your systems.</source>
          <target state="translated">プランで &lt;code&gt;pkg_scaffolding&lt;/code&gt; 変数を指定することにより、Chef Habitatは必要なパッケージの依存関係を取得し、ChefInfraやChefInSpecのビルド手順を実行し、クックブックまたはプロファイルを含むChefHabitatアーティファクトとその方法を提供します。システムでそれらを実行します。</target>
        </trans-unit>
        <trans-unit id="e3dffbdfb7383eedc12ebf14765c34e19c81bd8d" translate="yes" xml:space="preserve">
          <source>By specifying the configuration setting directly within the &lt;code&gt;def&lt;/code&gt; Ruby blocks using either &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; or &lt;code&gt;config[:setting_name]&lt;/code&gt;</source>
          <target state="translated">内で直接構成設定を指定して &lt;code&gt;def&lt;/code&gt; いずれかを使用してルビーブロック &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; または &lt;code&gt;config[:setting_name]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0698f5f15d41ca0e9e48bc71228d09cd085acc4f" translate="yes" xml:space="preserve">
          <source>By specifying the path to a valid Windows PowerShell data file</source>
          <target state="translated">有効な Windows PowerShell データファイルへのパスを指定することで</target>
        </trans-unit>
        <trans-unit id="75dbe76292db6dc593b3edf58eae16fbfc4d3115" translate="yes" xml:space="preserve">
          <source>By starting a few Supervisors in the network using the &lt;code&gt;--permanent-peer&lt;/code&gt; option, an additional bit of information is gossipped about these Supervisors. In effect, it tells all other Supervisors it communicates with to &lt;em&gt;always&lt;/em&gt; try to reestablish contact with it, even if that Supervisor considers the &amp;ldquo;permanent&amp;rdquo; Supervisor to be dead. This provides a mechanism by which split networks can stitch themselves together again after the split has been resolved.</source>
          <target state="translated">&lt;code&gt;--permanent-peer&lt;/code&gt; オプションを使用してネットワーク内のいくつかのスーパーバイザーを起動することにより、これらのスーパーバイザーに関する追加情報がゴシップされます。事実上、通信する他のすべてのスーパーバイザーに、そのスーパーバイザーが「永続的な」スーパーバイザーが死んでいると見なした場合でも、&lt;em&gt;常に&lt;/em&gt;それとの連絡を再確立しようとするように指示します。これにより、分割が解決された後、分割されたネットワークが再び結合できるメカニズムが提供されます。</target>
        </trans-unit>
        <trans-unit id="c1b93d519bf2f31ed0c552cbc2d796513f5ed6fc" translate="yes" xml:space="preserve">
          <source>By the time you get the new node is up, the secondary back-end server may have taken itself into &lt;code&gt;standalone&lt;/code&gt; mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:</source>
          <target state="translated">新しいノードが起動するまでに、セカンダリバックエンドサーバーは &lt;code&gt;standalone&lt;/code&gt; モードになっている可能性があります。つまり、ネットワークポートでリッスンしていません。この状況では、次のコマンドを実行して、セカンダリバックエンドサーバーが新しいノードと通信できるようにします。</target>
        </trans-unit>
        <trans-unit id="e0f546d831a7122f39b5e308d26dfcf03fe0c39b" translate="yes" xml:space="preserve">
          <source>By using FTP:</source>
          <target state="translated">FTPを使うことで。</target>
        </trans-unit>
        <trans-unit id="34a18faf5ac33deb27029ea8be53a044a861d735" translate="yes" xml:space="preserve">
          <source>By using Ruby or JSON files that are stored in a version source control system. These files are pushed to the Chef Infra Server using the &lt;code&gt;knife environment&lt;/code&gt; subcommand and the &lt;code&gt;from file&lt;/code&gt; argument. This approach allows environment data to be dynamically generated. This approach will not work unless these files are defined in the proper format&amp;mdash;Ruby file end with &lt;code&gt;.rb&lt;/code&gt;; JSON files end with &lt;code&gt;.json&lt;/code&gt;.</source>
          <target state="translated">バージョンソース管理システムに保存されているRubyまたはJSONファイルを使用する。これらのファイルは、使用してシェフのインフラサーバにプッシュされている &lt;code&gt;knife environment&lt;/code&gt; サブコマンドと &lt;code&gt;from file&lt;/code&gt; 引数を。このアプローチにより、環境データを動的に生成できます。これらのファイルが適切な形式で定義されていない限り、このアプローチは機能しません &lt;code&gt;.rb&lt;/code&gt; ファイルは.rbで終わります。JSONファイルは &lt;code&gt;.json&lt;/code&gt; で終わります。</target>
        </trans-unit>
        <trans-unit id="329102ec802b05b7c1888b42b42515c1dff62f9b" translate="yes" xml:space="preserve">
          <source>By using SFTP:</source>
          <target state="translated">SFTPを利用することで。</target>
        </trans-unit>
        <trans-unit id="39bd9acbfc114872b50d83381ea2b800f8294aa6" translate="yes" xml:space="preserve">
          <source>By using a Microsoft Windows UNC:</source>
          <target state="translated">Microsoft Windows UNCを使用することで。</target>
        </trans-unit>
        <trans-unit id="f9e9b3165d3a4be4136e2d1a23f57926f630bb14" translate="yes" xml:space="preserve">
          <source>By using a local path:</source>
          <target state="translated">ローカルパスを使うことで</target>
        </trans-unit>
        <trans-unit id="0ef630d370e814978b923822cd9fb13a3c896328" translate="yes" xml:space="preserve">
          <source>By using a node attribute:</source>
          <target state="translated">ノード属性を使用することで</target>
        </trans-unit>
        <trans-unit id="932fec424a7307d12dad0333a80c03453bcd6ec9" translate="yes" xml:space="preserve">
          <source>By using an existing process already in place for managing Microsoft Windows machines, such as System Center</source>
          <target state="translated">System Center などの Microsoft Windows マシンを管理するための既存のプロセスを使用することで</target>
        </trans-unit>
        <trans-unit id="b4e0de7c041ecee0deabf84042982a2abf9202d9" translate="yes" xml:space="preserve">
          <source>By using attributes to define paths:</source>
          <target state="translated">属性を使ってパスを定義することで</target>
        </trans-unit>
        <trans-unit id="7b68b5388a07324fe03c3bc88b715bbd79cdcb1f" translate="yes" xml:space="preserve">
          <source>By using both channels and either the &lt;code&gt;at-once&lt;/code&gt; or &lt;code&gt;rolling&lt;/code&gt;&lt;a href=&quot;#using-updates&quot;&gt;update strategies&lt;/a&gt;, you can automatically update packages in a given channel as shown below:</source>
          <target state="translated">両方のチャネルと、 &lt;code&gt;at-once&lt;/code&gt; &lt;a href=&quot;#using-updates&quot;&gt;更新&lt;/a&gt;または &lt;code&gt;rolling&lt;/code&gt; 更新戦略のいずれかを使用することにより、以下に示すように、特定のチャネルのパッケージを自動的に更新できます。</target>
        </trans-unit>
        <trans-unit id="917c22860abe3528157f50af186c4c4c2da2c883" translate="yes" xml:space="preserve">
          <source>By using knife and passing the &lt;code&gt;-E ENVIRONMENT_NAME&lt;/code&gt; option with &lt;code&gt;knife cookbook upload&lt;/code&gt;</source>
          <target state="translated">ナイフを使用し、 &lt;code&gt;knife cookbook upload&lt;/code&gt; &lt;code&gt;-E ENVIRONMENT_NAME&lt;/code&gt; オプションを渡す。</target>
        </trans-unit>
        <trans-unit id="4aeccb08175d2214f545f84dcc2aa22b9e51da21" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;../resources/chef_handler/index&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">次のように、レシピで&lt;a href=&quot;../resources/chef_handler/index&quot;&gt;chef_handler&lt;/a&gt;リソースを使用します。</target>
        </trans-unit>
        <trans-unit id="81216f09c01384a7f53937edba6154a5cd115829" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">次のような&lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt;リソースをレシピで使用します。</target>
        </trans-unit>
        <trans-unit id="3bab289fa38efb5ab8a78a233bd266e5d001f3ab" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;:proc&lt;/code&gt; attribute of the &lt;code&gt;option&lt;/code&gt; method and code that references &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;option&lt;/code&gt; メソッドの &lt;code&gt;:proc&lt;/code&gt; 属性と、 &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; を参照するコードを使用する</target>
        </trans-unit>
        <trans-unit id="8b0c7213b5b8e6677784b23e773856dd6243bae3" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;chef_handler&lt;/code&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">次のように、レシピで &lt;code&gt;chef_handler&lt;/code&gt; リソースを使用します。</target>
        </trans-unit>
        <trans-unit id="573999d93c72797e6db40a1e2dfa25478dd37344" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data&lt;/code&gt; 属性を使用する</target>
        </trans-unit>
        <trans-unit id="27f2798d154d06e1e10a1c3fed3759c63f53d663" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data_script&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data_script&lt;/code&gt; 属性を使用する</target>
        </trans-unit>
        <trans-unit id="3f847c3cd7c2fa4f211c2ed8648f8ee9ad0f24a9" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;knife edit&lt;/code&gt; and &lt;code&gt;knife exec&lt;/code&gt; subcommands</source>
          <target state="translated">&lt;code&gt;knife edit&lt;/code&gt; および &lt;code&gt;knife exec&lt;/code&gt; サブコマンドを使用する</target>
        </trans-unit>
        <trans-unit id="9b99b0cb8fc12026c9984c49701d01eb96667178" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;render&lt;/code&gt; method in the template file</source>
          <target state="translated">テンプレートファイルで &lt;code&gt;render&lt;/code&gt; メソッドを使用する</target>
        </trans-unit>
        <trans-unit id="1de8e85d6a034daf568f9525632a018f4cdd6a96" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;chef_handler&lt;/strong&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">次のような&lt;strong&gt;chef_handler&lt;/strong&gt;リソースをレシピで使用します。</target>
        </trans-unit>
        <trans-unit id="8c043fa42df9d01a7ed495ec7adc3e44e71355a6" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;template&lt;/strong&gt; resource and the &lt;code&gt;variables&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;テンプレート&lt;/strong&gt;リソースと &lt;code&gt;variables&lt;/code&gt; プロパティを使用する。</target>
        </trans-unit>
        <trans-unit id="33ecd3843b844d7c6c4b8eabf432c192a1af7d7c" translate="yes" xml:space="preserve">
          <source>By using the knife windows plugin to bootstrap the chef-client; this process requires the target node be available via SSH (port 22) or by using the HTTP or HTTPS ports that are required by WinRM</source>
          <target state="translated">knife windowsプラグインを使用してchef-clientを起動します。このプロセスでは、ターゲットノードがSSH(ポート22)経由で利用できるようにするか、WinRMで必要とされるHTTPまたはHTTPSポートを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="45ff9d4fbf725749ddde320b5e3cbb4d5df5af28" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef Infra Server, and require credential rotation.</source>
          <target state="translated">ターミナルのプロンプトをバイパスして、Chef Infra Serverを無効にしたいことに同意し、クレデンシャルのローテーションを必要とします。</target>
        </trans-unit>
        <trans-unit id="979b5fd223f38d19edf509197e67fb7103245c3e" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef server, and require credential rotation.</source>
          <target state="translated">ターミナルのプロンプトをバイパスして、シェフサーバーを無効にしたいことに同意し、クレデンシャルのローテーションを要求します。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b0ce13d52036e2a17b9d3f7ce2f71421509410c8" translate="yes" xml:space="preserve">
          <source>C compiler options.</source>
          <target state="translated">C コンパイラのオプション。</target>
        </trans-unit>
        <trans-unit id="0b107c0b8e762b7b67494ef342f89466d2bd1563" translate="yes" xml:space="preserve">
          <source>C linker options.</source>
          <target state="translated">C リンカオプション。</target>
        </trans-unit>
        <trans-unit id="a508f3e058a535c5ceccec3db5300e2eb059584d" translate="yes" xml:space="preserve">
          <source>CAA</source>
          <target state="translated">CAA</target>
        </trans-unit>
        <trans-unit id="d166f3f49c385e768dcb613c72ca776ca60de885" translate="yes" xml:space="preserve">
          <source>CACHE_PATH</source>
          <target state="translated">CACHE_PATH</target>
        </trans-unit>
        <trans-unit id="f6bf0dd46d24d7a5a24454aac6c60a28344f72b9" translate="yes" xml:space="preserve">
          <source>CALICO</source>
          <target state="translated">CALICO</target>
        </trans-unit>
        <trans-unit id="c80211fd3da3c28a41840f34df3169e707409790" translate="yes" xml:space="preserve">
          <source>CCRs/min</source>
          <target state="translated">CCRs/min</target>
        </trans-unit>
        <trans-unit id="b77da9422330fead9ab9ec32fbbd59bb9d5fc19a" translate="yes" xml:space="preserve">
          <source>CE</source>
          <target state="translated">CE</target>
        </trans-unit>
        <trans-unit id="e51495f07605bb64c53a74856ae29c9caa38ea53" translate="yes" xml:space="preserve">
          <source>CFG</source>
          <target state="translated">CFG</target>
        </trans-unit>
        <trans-unit id="aabe04d0ee1e6511da67c8f24ba2db3493a705bc" translate="yes" xml:space="preserve">
          <source>CFLAGS</source>
          <target state="translated">CFLAGS</target>
        </trans-unit>
        <trans-unit id="2c5d206fbf972f35e3c68d2a5190e7dd0f68abce" translate="yes" xml:space="preserve">
          <source>CHEF-0</source>
          <target state="translated">CHEF-0</target>
        </trans-unit>
        <trans-unit id="dd482942d45ba3ae3a4def50e4340cc1a8f9a48c" translate="yes" xml:space="preserve">
          <source>CHEF-1</source>
          <target state="translated">CHEF-1</target>
        </trans-unit>
        <trans-unit id="4b840201a1063f4bbcde0e56b2be374ccbba3061" translate="yes" xml:space="preserve">
          <source>CHEF-10</source>
          <target state="translated">CHEF-10</target>
        </trans-unit>
        <trans-unit id="f8d23210f0041b2636091f10b1233588b32dbca5" translate="yes" xml:space="preserve">
          <source>CHEF-11</source>
          <target state="translated">CHEF-11</target>
        </trans-unit>
        <trans-unit id="ef1383244e5edf15055ef4d5282df7ce3eef511e" translate="yes" xml:space="preserve">
          <source>CHEF-12</source>
          <target state="translated">CHEF-12</target>
        </trans-unit>
        <trans-unit id="fd5d34c196e5e93e5b79b1d20d285a142c51cf9c" translate="yes" xml:space="preserve">
          <source>CHEF-13</source>
          <target state="translated">CHEF-13</target>
        </trans-unit>
        <trans-unit id="9801b328e969240ba83960ec6eeafcdd1700159b" translate="yes" xml:space="preserve">
          <source>CHEF-14</source>
          <target state="translated">CHEF-14</target>
        </trans-unit>
        <trans-unit id="23f6b7d933cf4293987ab4f393a6454793c7d015" translate="yes" xml:space="preserve">
          <source>CHEF-18</source>
          <target state="translated">CHEF-18</target>
        </trans-unit>
        <trans-unit id="369b1248df7cc75fa08cf75311340cf501f86e9c" translate="yes" xml:space="preserve">
          <source>CHEF-19</source>
          <target state="translated">CHEF-19</target>
        </trans-unit>
        <trans-unit id="53162e0123c797231fe84cdd523ec6c80db323e7" translate="yes" xml:space="preserve">
          <source>CHEF-2</source>
          <target state="translated">CHEF-2</target>
        </trans-unit>
        <trans-unit id="c1bd7296a0a72d48d993e7bf0c6ef656269adba0" translate="yes" xml:space="preserve">
          <source>CHEF-20</source>
          <target state="translated">CHEF-20</target>
        </trans-unit>
        <trans-unit id="f3c47839cece7183c262845b503cc0799efdd680" translate="yes" xml:space="preserve">
          <source>CHEF-21</source>
          <target state="translated">CHEF-21</target>
        </trans-unit>
        <trans-unit id="d035b267b8753c219b3de133c28ee65493a059e7" translate="yes" xml:space="preserve">
          <source>CHEF-22</source>
          <target state="translated">CHEF-22</target>
        </trans-unit>
        <trans-unit id="9d2bc3a8322234c91f913b8964f5cfe0f2e2574c" translate="yes" xml:space="preserve">
          <source>CHEF-23</source>
          <target state="translated">CHEF-23</target>
        </trans-unit>
        <trans-unit id="87d878efca44eda4ec8ed7ff80329d0ba760cd55" translate="yes" xml:space="preserve">
          <source>CHEF-24</source>
          <target state="translated">CHEF-24</target>
        </trans-unit>
        <trans-unit id="f6e9100dd691f75c37fb2912097cf0aaf66c0710" translate="yes" xml:space="preserve">
          <source>CHEF-25</source>
          <target state="translated">CHEF-25</target>
        </trans-unit>
        <trans-unit id="66bb42e338ee66ae6271b6e47a5152c05ae48e51" translate="yes" xml:space="preserve">
          <source>CHEF-27</source>
          <target state="translated">CHEF-27</target>
        </trans-unit>
        <trans-unit id="ce6d3eb798a486cdac676511b401bc166fe70fe8" translate="yes" xml:space="preserve">
          <source>CHEF-3</source>
          <target state="translated">CHEF-3</target>
        </trans-unit>
        <trans-unit id="a5672de776c2ce56409b1f632cfef055ffd1d0a8" translate="yes" xml:space="preserve">
          <source>CHEF-31</source>
          <target state="translated">CHEF-31</target>
        </trans-unit>
        <trans-unit id="4fc7629f1470fea7930846a434d85ce5addc523c" translate="yes" xml:space="preserve">
          <source>CHEF-3694</source>
          <target state="translated">CHEF-3694</target>
        </trans-unit>
        <trans-unit id="aaa08af2461a1f34c16372483db78acdca6c3798" translate="yes" xml:space="preserve">
          <source>CHEF-4</source>
          <target state="translated">CHEF-4</target>
        </trans-unit>
        <trans-unit id="1e07930fc6fd96792d2f8c518b9ebe200dc7eef0" translate="yes" xml:space="preserve">
          <source>CHEF-5</source>
          <target state="translated">CHEF-5</target>
        </trans-unit>
        <trans-unit id="d2c9f40be8a8561298ea5dd621782e51a4c77c18" translate="yes" xml:space="preserve">
          <source>CHEF-6</source>
          <target state="translated">CHEF-6</target>
        </trans-unit>
        <trans-unit id="d1e87a7e9a2718740c854d2d4aedfbb684c72ea8" translate="yes" xml:space="preserve">
          <source>CHEF-7</source>
          <target state="translated">CHEF-7</target>
        </trans-unit>
        <trans-unit id="f921de7ea361c928e75aa9a5926b5b07bb8545b0" translate="yes" xml:space="preserve">
          <source>CHEF-8</source>
          <target state="translated">CHEF-8</target>
        </trans-unit>
        <trans-unit id="dd1628ac3648a0bfe14323a2b48a5110348c930a" translate="yes" xml:space="preserve">
          <source>CHEF-9</source>
          <target state="translated">CHEF-9</target>
        </trans-unit>
        <trans-unit id="b66e7f4c814ecc489a14a223784920bddd8bac26" translate="yes" xml:space="preserve">
          <source>CHEFINT001</source>
          <target state="translated">CHEFINT001</target>
        </trans-unit>
        <trans-unit id="32884eac9170df6cd8d6eafb221541410e3a32c6" translate="yes" xml:space="preserve">
          <source>CHEFTRN007</source>
          <target state="translated">CHEFTRN007</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="96636ec44fcb4fae1a227c6dfd7095c095fd4810" translate="yes" xml:space="preserve">
          <source>CLI &lt;code&gt;--input-file&lt;/code&gt; option</source>
          <target state="translated">CLI-- &lt;code&gt;--input-file&lt;/code&gt; オプション</target>
        </trans-unit>
        <trans-unit id="de9704e9a3138d55d4803b008f48e57a92514b12" translate="yes" xml:space="preserve">
          <source>CLI &lt;code&gt;--input&lt;/code&gt; option</source>
          <target state="translated">CLI &lt;code&gt;--input&lt;/code&gt; オプション</target>
        </trans-unit>
        <trans-unit id="26f58ae8e7df3630f48327b4d920811cdb236252" translate="yes" xml:space="preserve">
          <source>CLI flag</source>
          <target state="translated">CLIフラグ</target>
        </trans-unit>
        <trans-unit id="6aa149d2af33a27f542e8e0ee0925ff1ef571a9b" translate="yes" xml:space="preserve">
          <source>CLI-input-file-set inputs have a priority of 40.</source>
          <target state="translated">CLI-input-file-setの入力は40の優先度を持っています。</target>
        </trans-unit>
        <trans-unit id="6a96ca016ff87da4896eb5893807f498f6ef0740" translate="yes" xml:space="preserve">
          <source>CLI-set inputs have a priority of 50.</source>
          <target state="translated">CLIセット入力の優先度は50です。</target>
        </trans-unit>
        <trans-unit id="289fd6dd86c78fc18484670bd5337ffc1457b23f" translate="yes" xml:space="preserve">
          <source>CLIENT</source>
          <target state="translated">CLIENT</target>
        </trans-unit>
        <trans-unit id="4895924a2f45b1656d7a65b3bcd5638d1d737a40" translate="yes" xml:space="preserve">
          <source>CLIENT*IP_PORT_PROTO</source>
          <target state="translated">CLIENT*IP_PORT_PROTO</target>
        </trans-unit>
        <trans-unit id="fd175b3eb019d7a002c4874d6f9e2fdfcd322428" translate="yes" xml:space="preserve">
          <source>CLIENT*IP_PROTO</source>
          <target state="translated">CLIENT*IP_PROTO</target>
        </trans-unit>
        <trans-unit id="3606e6da0a34ea998e376bd42c1883d9d234df74" translate="yes" xml:space="preserve">
          <source>CLIENT_IP</source>
          <target state="translated">CLIENT_IP</target>
        </trans-unit>
        <trans-unit id="bdce8de2a77f502564fe40f4fb8398ddf26e65be" translate="yes" xml:space="preserve">
          <source>CLIENT_IP_PORT_PROTO</source>
          <target state="translated">CLIENT_IP_PORT_PROTO</target>
        </trans-unit>
        <trans-unit id="a9a6936e211afc54f3f31780c8c1cad39f14202c" translate="yes" xml:space="preserve">
          <source>CLIENT_IP_PROTO</source>
          <target state="translated">CLIENT_IP_PROTO</target>
        </trans-unit>
        <trans-unit id="f3ee8d637030418766d6b09f471754cb1dca5875" translate="yes" xml:space="preserve">
          <source>CLOUD_FUNCTION_STATUS_UNSPECIFIED</source>
          <target state="translated">CLOUD_FUNCTION_STATUS_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="3d8899b30b6e106d7569d720518fe8abe7b499e8" translate="yes" xml:space="preserve">
          <source>CLOUD_SQL_INSTANCE</source>
          <target state="translated">CLOUD_SQL_INSTANCE</target>
        </trans-unit>
        <trans-unit id="b9c1aaaf65573c7e15b93b6d826729e7711cf242" translate="yes" xml:space="preserve">
          <source>CNAME</source>
          <target state="translated">CNAME</target>
        </trans-unit>
        <trans-unit id="d57ab216d6da031d6c757645b6b95721d49f0416" translate="yes" xml:space="preserve">
          <source>COLDLINE</source>
          <target state="translated">COLDLINE</target>
        </trans-unit>
        <trans-unit id="402978c149e8044dec8af025fe93b360bc5163b5" translate="yes" xml:space="preserve">
          <source>COMMENTS_DISABLED</source>
          <target state="translated">COMMENTS_DISABLED</target>
        </trans-unit>
        <trans-unit id="2a6e8038d867cbb3adf991f420eedcf7d0fbb6bc" translate="yes" xml:space="preserve">
          <source>COMMENTS_ENABLED</source>
          <target state="translated">COMMENTS_ENABLED</target>
        </trans-unit>
        <trans-unit id="169c22cf3e89b382b7f7b4db658675a8e71ff2e4" translate="yes" xml:space="preserve">
          <source>COMPARISON_EQ</source>
          <target state="translated">COMPARISON_EQ</target>
        </trans-unit>
        <trans-unit id="a9ee1b84638fc6dff0e93345adcf6b82c4679e4d" translate="yes" xml:space="preserve">
          <source>COMPARISON_GE</source>
          <target state="translated">COMPARISON_GE</target>
        </trans-unit>
        <trans-unit id="ae3350e10bd0b58f3de44535c426c03a35f3b0e6" translate="yes" xml:space="preserve">
          <source>COMPARISON_GT</source>
          <target state="translated">COMPARISON_GT</target>
        </trans-unit>
        <trans-unit id="d590895c68cb17da4cd5d8dc096f329b28947f66" translate="yes" xml:space="preserve">
          <source>COMPARISON_LE</source>
          <target state="translated">COMPARISON_LE</target>
        </trans-unit>
        <trans-unit id="fcaa1fca9d0dc0293973c9d547569151e9ef8361" translate="yes" xml:space="preserve">
          <source>COMPARISON_LT</source>
          <target state="translated">COMPARISON_LT</target>
        </trans-unit>
        <trans-unit id="f4c1e49fd8a929896755a74a55057c4d137ca08f" translate="yes" xml:space="preserve">
          <source>COMPARISON_NE</source>
          <target state="translated">COMPARISON_NE</target>
        </trans-unit>
        <trans-unit id="e2dfd7127d921c8f5981d3f2fa051788321b0ef1" translate="yes" xml:space="preserve">
          <source>COMPATIBLE</source>
          <target state="translated">COMPATIBLE</target>
        </trans-unit>
        <trans-unit id="b4c069e0954c23bf9b630a463f1347b16745bbd2" translate="yes" xml:space="preserve">
          <source>COMPONENT_UNSPECIFIED</source>
          <target state="translated">COMPONENT_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="adecadb5b80d5b6a9956deb015022038a15d7c21" translate="yes" xml:space="preserve">
          <source>CONNECTION</source>
          <target state="translated">CONNECTION</target>
        </trans-unit>
        <trans-unit id="ff221d4752ce05f5a91bbf1d28b78a7bf7e2ddaa" translate="yes" xml:space="preserve">
          <source>CPU</source>
          <target state="translated">CPU</target>
        </trans-unit>
        <trans-unit id="71f0f4da2e0f035e4478025bcf5334667baeb4b0" translate="yes" xml:space="preserve">
          <source>CPU data</source>
          <target state="translated">CPUデータ</target>
        </trans-unit>
        <trans-unit id="35703b6f920b2aecfcc3558041495c53e0afccab" translate="yes" xml:space="preserve">
          <source>CRC32c checksum.</source>
          <target state="translated">CRC32cチェックサム。</target>
        </trans-unit>
        <trans-unit id="0e0bd9224cae3992bdb822021f1daed06a2e0a72" translate="yes" xml:space="preserve">
          <source>CS</source>
          <target state="translated">CS</target>
        </trans-unit>
        <trans-unit id="6f50813d048f9e43197a62d22e7bad1c5c5ebdf3" translate="yes" xml:space="preserve">
          <source>CSPG001 (changed setting)</source>
          <target state="translated">CSPG001(設定変更</target>
        </trans-unit>
        <trans-unit id="7beb5aa34f7f93eab94b5d3a43c1b99e15fc0b96" translate="yes" xml:space="preserve">
          <source>CSPG010 (cannot connect)</source>
          <target state="translated">CSPG010(接続できません</target>
        </trans-unit>
        <trans-unit id="0fa9dbfcc565e3b662161c09e293417ef531e231" translate="yes" xml:space="preserve">
          <source>CSPG011 (cannot authenticate)</source>
          <target state="translated">CSPG011(認証できません</target>
        </trans-unit>
        <trans-unit id="cb44ff8616d38e97d17523404142780c99bd9b8a" translate="yes" xml:space="preserve">
          <source>CSPG012 (incorrect rules)</source>
          <target state="translated">CSPG012(不正解のルール</target>
        </trans-unit>
        <trans-unit id="f20aa27cfb590f2255562317516e78fac7806bb9" translate="yes" xml:space="preserve">
          <source>CSPG013 (incorrect permissions)</source>
          <target state="translated">CSPG013 (不正なパーミッション)</target>
        </trans-unit>
        <trans-unit id="e4f5f93d05d040badc3c0453809068c4496581e7" translate="yes" xml:space="preserve">
          <source>CSPG014 (incorrect version)</source>
          <target state="translated">CSPG014(不正確なバージョン</target>
        </trans-unit>
        <trans-unit id="e0c8c77d894bb70e857c6b04cdeff1465e5a7eda" translate="yes" xml:space="preserve">
          <source>CSPG015 (missing database)</source>
          <target state="translated">CSPG015 (データベース欠落)</target>
        </trans-unit>
        <trans-unit id="f472e81cb18701f5faa745d8d127123a42b706e2" translate="yes" xml:space="preserve">
          <source>CSPG016 (database exists)</source>
          <target state="translated">CSPG016 (データベースが存在する)</target>
        </trans-unit>
        <trans-unit id="7c3a74799c51b3d9982939976edd12ea57116114" translate="yes" xml:space="preserve">
          <source>CSPG017 (user exists)</source>
          <target state="translated">CSPG017 (ユーザが存在する)</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="a0c4ce6370160e380bfa3c6d9851821705722d37" translate="yes" xml:space="preserve">
          <source>CUMULATIVE</source>
          <target state="translated">CUMULATIVE</target>
        </trans-unit>
        <trans-unit id="63d55e50dde7ba12ca28578468e41d18d788a893" translate="yes" xml:space="preserve">
          <source>CUSTOM</source>
          <target state="translated">CUSTOM</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="22a4f18c23f94e75b78e44f34cc94a4d50573916" translate="yes" xml:space="preserve">
          <source>Cache directory for origin signing keys</source>
          <target state="translated">オリジン署名鍵のキャッシュディレクトリ</target>
        </trans-unit>
        <trans-unit id="4805c3bca9af848d49d25d7dafce4073e656a0dd" translate="yes" xml:space="preserve">
          <source>Caffeinate</source>
          <target state="translated">Caffeinate</target>
        </trans-unit>
        <trans-unit id="34cdfac62150e2fe20a5b3313a6b5e4a2f4e289e" translate="yes" xml:space="preserve">
          <source>Call a Method</source>
          <target state="translated">メソッドを呼び出す</target>
        </trans-unit>
        <trans-unit id="9ffaea2b17925a076b1e481ccfb5042e49a8fa70" translate="yes" xml:space="preserve">
          <source>Call a method on something with &lt;code&gt;.method_name()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.method_name()&lt;/code&gt; で何かに対してメソッドを呼び出します：</target>
        </trans-unit>
        <trans-unit id="30dbe44657a52ceb039c224bda7d5bbbdaddcc2a" translate="yes" xml:space="preserve">
          <source>Call the command to execute with &lt;code&gt;exec &amp;lt;command&amp;gt; &amp;lt;options&amp;gt;&lt;/code&gt; rather than running the command directly. This ensures the command is executed in the same process and that the service will restart correctly on configuration changes.</source>
          <target state="translated">コマンドを直接実行するのではなく、 &lt;code&gt;exec &amp;lt;command&amp;gt; &amp;lt;options&amp;gt;&lt;/code&gt; して実行するコマンドを呼び出します。これにより、コマンドが同じプロセスで実行され、構成が変更されたときにサービスが正しく再起動することが保証されます。</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="6589b6033e06cd46b644b323248a6630a56bc1b6" translate="yes" xml:space="preserve">
          <source>Callback Do&amp;rsquo;s</source>
          <target state="translated">コールバックする</target>
        </trans-unit>
        <trans-unit id="55aedc34e7498806b42221c3662fb0b1af1a6b16" translate="yes" xml:space="preserve">
          <source>Callback Don&amp;rsquo;t&amp;rsquo;s</source>
          <target state="translated">コールバックしないでください</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="f80ba508d3cbb63a4b6411f9e0152418fc3ef30a" translate="yes" xml:space="preserve">
          <source>Campfire</source>
          <target state="translated">Campfire</target>
        </trans-unit>
        <trans-unit id="e6963ae545bac15aed38efb443d3d82358c30715" translate="yes" xml:space="preserve">
          <source>Can approve the successful completion of the &lt;strong&gt;Verify&lt;/strong&gt; stage. Once approved, the change automatically moves to the &lt;strong&gt;Build&lt;/strong&gt; stage. Also, can read and write comments.</source>
          <target state="translated">&lt;strong&gt;検証&lt;/strong&gt;ステージの正常な完了を承認できます。承認されると、変更は自動的に&lt;strong&gt;ビルド&lt;/strong&gt;段階に移行します。また、コメントの読み書きができます。</target>
        </trans-unit>
        <trans-unit id="d2fad09023d359be7723ea1059ae6184554af314" translate="yes" xml:space="preserve">
          <source>Can be either</source>
          <target state="translated">どちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="7f93695562d9938e07d645d8f9f71d0c89ec7ccf" translate="yes" xml:space="preserve">
          <source>Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 属性と一緒に使用できます。</target>
        </trans-unit>
        <trans-unit id="12e83d2f2ad4fc35ec5483a52291c71f4a4b407f" translate="yes" xml:space="preserve">
          <source>Can commit a change to Chef Automate. Also, can modify, delete, or add recipes in a phase (at the source code level); and can read and write comments.</source>
          <target state="translated">Chef Automateに変更をコミットすることができます。また、フェーズ(ソースコードレベル)でのレシピの修正、削除、追加ができ、コメントの読み書きができます。</target>
        </trans-unit>
        <trans-unit id="5b40f61b26a725280e89a71299a414822d7177a3" translate="yes" xml:space="preserve">
          <source>Can disable version 0 and version 1 data bag item encryption formats</source>
          <target state="translated">バージョン0とバージョン1のデータバッグ項目の暗号化形式を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="1962810a5cbc82e06161b6228266432deb280ccb" translate="yes" xml:space="preserve">
          <source>Can integrate directly with vRO to call out predetermined workflows</source>
          <target state="translated">vROと直接統合して、あらかじめ設定したワークフローを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b0d39a8242a6fb3820fe78189398022901d86104" translate="yes" xml:space="preserve">
          <source>Can observe the actions and results of the pipeline as the change progresses through the stages. Cannot take any action.</source>
          <target state="translated">段階を経て変化が進行していく中で、パイプラインのアクションや結果を観察することができる。何らかのアクションを取ることができない。</target>
        </trans-unit>
        <trans-unit id="a98e6323d176f918ee6cd03caf997b5c255e325f" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. Configures whether metadata fields should be added to the reported VPC flow logs.</source>
          <target state="translated">このサブネットワークの VPC フローログが有効になっている場合にのみ指定できます。報告されたVPCフローログにメタデータフィールドを追加するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="ab516d608331192be3ea7c441f5d4df2f0004ce0" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 which means half of all collected logs are reported.</source>
          <target state="translated">このサブネットワークのVPCフローログが有効になっている場合のみ指定できます。フィールドの値は[0,1]でなければなりません。 1.0はすべての収集されたログが報告されることを意味し、0.0はログが報告されないことを意味します。デフォルトは0.5で、収集されたすべてのログの半分が報告されることを意味します。</target>
        </trans-unit>
        <trans-unit id="f36fed6e2a8726059fb080e281d76b9fdee00de8" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.</source>
          <target state="translated">このサブネットワークの VPC フローログが有効な場合にのみ指定できます。フローログを収集するためのアグリゲーション間隔をトグルします。インターバル時間を長くすると、長期的な接続のために生成されるフローログの量が減ります。デフォルトは、接続ごとに 5 秒の間隔です。</target>
        </trans-unit>
        <trans-unit id="050244212958e77971e6d20e85b0c1a858a94bb7" translate="yes" xml:space="preserve">
          <source>Can ship a change from the &lt;strong&gt;Acceptance&lt;/strong&gt; stage into the shared pipeline stages, &lt;strong&gt;Union&lt;/strong&gt;&lt;strong&gt;Rehearsal&lt;/strong&gt; and &lt;strong&gt;Delivered&lt;/strong&gt;.</source>
          <target state="translated">以下からの変化を出荷することができます&lt;strong&gt;受け入れ&lt;/strong&gt;、共有パイプラインステージに段階&lt;strong&gt;連合&lt;/strong&gt;&lt;strong&gt;リハーサル&lt;/strong&gt;と&lt;strong&gt;配信&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="901c1a24ba8a5414a7d5e52240821136a22eac80" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t report to Chef Automate</source>
          <target state="translated">シェフの自動化に報告できません</target>
        </trans-unit>
        <trans-unit id="5b4efe95e921a9d6889b8d66c5b975155ca49d59" translate="yes" xml:space="preserve">
          <source>Cancel a build job group and any in-progress builds</source>
          <target state="translated">ビルドジョブグループと進行中のビルドをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="4fe065168e0cc9592e59c11e72e3018d484013c3" translate="yes" xml:space="preserve">
          <source>Cancel a reboot</source>
          <target state="translated">再起動のキャンセル</target>
        </trans-unit>
        <trans-unit id="c4c509c65f991420a5aa7ab0e7df72cf2edd66fc" translate="yes" xml:space="preserve">
          <source>Cancel a reboot request.</source>
          <target state="translated">再起動要求をキャンセルします。</target>
        </trans-unit>
        <trans-unit id="2f369afab5001840710e7fe04d7f7347fb439420" translate="yes" xml:space="preserve">
          <source>Cancel invite for User</source>
          <target state="translated">ユーザーの招待をキャンセル</target>
        </trans-unit>
        <trans-unit id="f39e9e16c0d51423c03735e2785e49d3bce00aac" translate="yes" xml:space="preserve">
          <source>Cancel the currently running backup create, delete, or restore operation</source>
          <target state="translated">現在実行中のバックアップの作成、削除、または復元操作をキャンセルします。</target>
        </trans-unit>
        <trans-unit id="3ea6b14ab1b1d8b2d791ea4baebe2208c461a03f" translate="yes" xml:space="preserve">
          <source>Canceling a pending invite for a user can currently be completed using knife:</source>
          <target state="translated">ユーザーの保留中の招待をキャンセルすることは、現在のところナイフを使用して完了することができます。</target>
        </trans-unit>
        <trans-unit id="55b44d893e2216a7cf5f05f1a21f29451fa3f101" translate="yes" xml:space="preserve">
          <source>Cancelling Jobs</source>
          <target state="translated">求人のキャンセル</target>
        </trans-unit>
        <trans-unit id="24c6f14cb0a6304cc386a6075b790a8451bc4474" translate="yes" xml:space="preserve">
          <source>Cannot authenticate to PostgreSQL on the remote server.</source>
          <target state="translated">リモートサーバでPostgreSQLを認証できません。</target>
        </trans-unit>
        <trans-unit id="89b2f31925b0eaa3fc02f2b36f820366dd6d6251" translate="yes" xml:space="preserve">
          <source>Cannot be tested with ChefSpec</source>
          <target state="translated">ChefSpecではテストできません。</target>
        </trans-unit>
        <trans-unit id="dbbf566ee551f811fd9041c62d3fa4073b535433" translate="yes" xml:space="preserve">
          <source>Cannot connect to PostgreSQL on the remote server because rules in &lt;code&gt;pg_hba&lt;/code&gt; are incorrect.</source>
          <target state="translated">&lt;code&gt;pg_hba&lt;/code&gt; のルールが正しくないため、リモートサーバー上のPostgreSQLに接続できません。</target>
        </trans-unit>
        <trans-unit id="b095fada0124206ed795b83e48f0eb140a949e5f" translate="yes" xml:space="preserve">
          <source>Cannot connect to PostgreSQL on the remote server.</source>
          <target state="translated">リモートサーバでPostgreSQLに接続できません。</target>
        </trans-unit>
        <trans-unit id="a6899b1d92f3d6f558c5627c86dc9b97a718cb03" translate="yes" xml:space="preserve">
          <source>Cannot find config file</source>
          <target state="translated">設定ファイルが見つからない</target>
        </trans-unit>
        <trans-unit id="5e418d8d3e575ade5d6b25b74d6864330a6006da" translate="yes" xml:space="preserve">
          <source>Canonical Header Format 1.0 using SHA-1</source>
          <target state="translated">SHA-1を使用したCanonical Header Format 1.0</target>
        </trans-unit>
        <trans-unit id="a2c0c2f60b52edd028b696e107becbe81589cee6" translate="yes" xml:space="preserve">
          <source>Canonical Header Format 1.3 using SHA-256</source>
          <target state="translated">SHA-256 を使用した Canonical Header Format 1.3</target>
        </trans-unit>
        <trans-unit id="53304cda0905a08e57c700ce0ecf625f7f784051" translate="yes" xml:space="preserve">
          <source>Capacity Planning</source>
          <target state="translated">キャパシティプランニング</target>
        </trans-unit>
        <trans-unit id="0741c184d87e541a8a9b559598221ff634366eab" translate="yes" xml:space="preserve">
          <source>Capture and visualize what happens during the execution of Chef Infra Client runs across all of your Chef-managed infrastructure.</source>
          <target state="translated">Chef Infraクライアントの実行中に何が起こるかをキャプチャし、可視化します。</target>
        </trans-unit>
        <trans-unit id="1d8cbd0421b54da8e31fe6689a47e6e36ba0de5a" translate="yes" xml:space="preserve">
          <source>Capture stdin and stdout for this job.</source>
          <target state="translated">このジョブの標準入力と標準出力をキャプチャします。</target>
        </trans-unit>
        <trans-unit id="1f08183d67e37b25ac9fde4d650e9dd36fc5a563" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ファイルに変更が加えられたときに、Chef InfraClientに差分を作成させます。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3534806b71d86387b3feb50af88c1cca817f16d1" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to send run data to the Automate server.</source>
          <target state="translated">Chef InfraクライアントがAutomateサーバーに実行データを送信するようにします。</target>
        </trans-unit>
        <trans-unit id="66756e46ff7ba3dfc2cea923fb6dc6e5c09eab08" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to use the original chef-solo mode instead of chef local mode. This is not recommended.</source>
          <target state="translated">Chef Infraクライアントがchefローカルモードではなく、オリジナルのchef-soloモードを使用するようになります。これは推奨されません。</target>
        </trans-unit>
        <trans-unit id="3e735d1bead39f0c8d84edf40e24423f6416cd84" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when Chef Infra Client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">Microsoft WindowsでChef Infraクライアントが管理者権限を持っていない場合、Chef Infraクライアントの実行が失敗する原因となります。</target>
        </trans-unit>
        <trans-unit id="f87e7f8bcc485048a4f9ae2ce0975d91c0c7d21c" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when run data cannot be sent to the Automate server (for any reason).</source>
          <target state="translated">ランデータがAutomateサーバーに送信できない場合(何らかの理由で)、Chef Infraクライアントのランが失敗する。</target>
        </trans-unit>
        <trans-unit id="be589e8a36a35e58c837ececbeb8f22e6de4bf51" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when the Chef Infra Client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">Microsoft WindowsでChef Infraクライアントが管理者権限を持っていない場合、Chef Infraクライアントの実行が失敗する原因となります。</target>
        </trans-unit>
        <trans-unit id="d2c0c91d82388e7c626f9682d635f4067250f436" translate="yes" xml:space="preserve">
          <source>Cause a chef-client run to fail when the chef-client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">Microsoft Windowsでchef-clientに管理者権限がない場合、chef-clientの実行に失敗する。</target>
        </trans-unit>
        <trans-unit id="c56cdd3fd53bdbb76fdb7bfb85fb2e87cd5fd96e" translate="yes" xml:space="preserve">
          <source>Cause knife to use the default value instead of asking a user to provide one.</source>
          <target state="translated">ユーザーに提供を求める代わりに、ナイフがデフォルト値を使用するようにしました。</target>
        </trans-unit>
        <trans-unit id="45c839323a2760d0efbfbf7b6977364d957107e5" translate="yes" xml:space="preserve">
          <source>Cause the Chef Infra Server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef InfraServerがSSLを使用してLDAPサーバーに接続するようにします。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。 &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;false&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="fa5f4e761d441db8b903bbd1a3f97573f9db1270" translate="yes" xml:space="preserve">
          <source>Cause the Chef server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ChefサーバーがSSLを使用してLDAPサーバーに接続するようにします。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。でなければならない &lt;code&gt;false&lt;/code&gt; とき &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; である &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52eff7b22fe11f86eadebb4a4a10df91257e6cfa" translate="yes" xml:space="preserve">
          <source>Cause the chef-client run to fail when Reporting data cannot be sent to the Chef server (for any reason).</source>
          <target state="translated">レポートデータをChefサーバーに送信できない場合(何らかの理由で)、chef-clientの実行が失敗する原因となります。</target>
        </trans-unit>
        <trans-unit id="e895acc53b1d0a0af6c525021f60e76cdad52f48" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ファイルに変更が加えられたときにchef-clientに差分を作成させます。デフォルト値： &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a3bb85a309bf35ab8e50ebf3d3ce7b4d8964a3c" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to detect and manage the source file for a symlink. Possible values: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;. When this value is set to &lt;code&gt;nil&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and emit a warning. When this value is set to &lt;code&gt;true&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and not emit a warning. Default value: &lt;code&gt;nil&lt;/code&gt;. The default value will be changed to &lt;code&gt;false&lt;/code&gt; in a future version.</source>
          <target state="translated">chef-clientにシンボリックリンクのソースファイルを検出および管理させます。可能な値： &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; 、または &lt;code&gt;false&lt;/code&gt; 。この値が &lt;code&gt;nil&lt;/code&gt; に設定されている場合、シェフクライアントはシンボリックリンクのソースファイルを管理し、警告を発します。この値が &lt;code&gt;true&lt;/code&gt; に設定されている場合、シェフクライアントはシンボリックリンクのソースファイルを管理し、警告を発しません。デフォルト値： &lt;code&gt;nil&lt;/code&gt; 。デフォルト値は、将来のバージョンで &lt;code&gt;false&lt;/code&gt; に変更される予定です。</target>
        </trans-unit>
        <trans-unit id="df769fc492b2d987e58f57acdcc3e78c88786e00" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to not use chef local mode, but rather the original chef-solo mode. This is not recommended unless really required.</source>
          <target state="translated">chef-clientがchefローカルモードではなく、オリジナルのchef-soloモードを使用するようにします。これは本当に必要でない限り推奨されません。</target>
        </trans-unit>
        <trans-unit id="f12e66194782f565420f48723fc1320cc2f36816" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to send data to the Chef server for use with Reporting.</source>
          <target state="translated">レポートで使用するためのデータをChefサーバーに送信します。</target>
        </trans-unit>
        <trans-unit id="680b07bdbfe07cc96301e3af5aac7ab769ac3957" translate="yes" xml:space="preserve">
          <source>Caveats to Running as a Non-root User</source>
          <target state="translated">非 root ユーザーとして実行する際の注意点</target>
        </trans-unit>
        <trans-unit id="d338d3edac3d8bc55f158201b757155d68d5bdbc" translate="yes" xml:space="preserve">
          <source>Census</source>
          <target state="translated">Census</target>
        </trans-unit>
        <trans-unit id="51ad199d6352d3bb64db022bd0fbb0fcdea024f8" translate="yes" xml:space="preserve">
          <source>CentOS</source>
          <target state="translated">CentOS</target>
        </trans-unit>
        <trans-unit id="3b0e6b751d6be08094954628e4320e832dec0102" translate="yes" xml:space="preserve">
          <source>CentOS is downloaded the first time this command is run, after which Vagrant is started. (This may take a few minutes.)</source>
          <target state="translated">CentOSはこのコマンドを実行すると最初にダウンロードされ、その後Vagrantが起動します。(これには数分かかるかもしれません)。</target>
        </trans-unit>
        <trans-unit id="b46006710c2bc818e78bdb61b38fbd63d658b6ba" translate="yes" xml:space="preserve">
          <source>Centralized distribution of cookbooks</source>
          <target state="translated">料理本の集中配信</target>
        </trans-unit>
        <trans-unit id="e1de6a20b799f00564c176d01a2864b4e8ebf146" translate="yes" xml:space="preserve">
          <source>Certain settings defined by a knife plugin can be configured so that they can be set using the config.rb file. This can be done in two ways:</source>
          <target state="translated">knifeプラグインで定義されている特定の設定は、config.rbファイルを使って設定できるように設定することができます。これには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="98245677ba8bd69f82ab45b240169dd291583da8" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef Infra Server that can only be accessed by nodes that authenticate to the Chef Infra Server with the correct SSL certificates</source>
          <target state="translated">特定の種類のデータ（パスワード、ユーザーアカウントデータ、その他の機密項目）は、ChefInfraサーバーの安全なサブエリアにあるデータバッグに入れることができます。データバッグは、ChefInfraに対して認証を行うノードからのみアクセスできます。正しいSSL証明書を持つサーバー</target>
        </trans-unit>
        <trans-unit id="c4b22d7e953f32628611912cfd9ba3ed0d4dbce3" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef server that can only be accessed by nodes that authenticate to the Chef server with the correct SSL certificates</source>
          <target state="translated">特定のタイプのデータ（パスワード、ユーザーアカウントデータ、その他の機密アイテム）は、データバッグに配置できます。データバッグはChefサーバーの安全なサブエリアに配置され、Chefサーバーで認証されるノードのみがアクセスできます。正しいSSL証明書</target>
        </trans-unit>
        <trans-unit id="e921239584eda1bcba00e1006f0e656b17e9f49a" translate="yes" xml:space="preserve">
          <source>Change Attributes</source>
          <target state="translated">属性の変更</target>
        </trans-unit>
        <trans-unit id="2f961cf917c966831b112d6cb21b6cbee6c01be5" translate="yes" xml:space="preserve">
          <source>Change Directory into &lt;code&gt;examples/effortless_config/chef_repo_pattern&lt;/code&gt;</source>
          <target state="translated">ディレクトリを &lt;code&gt;examples/effortless_config/chef_repo_pattern&lt;/code&gt; に変更します</target>
        </trans-unit>
        <trans-unit id="49289db43e663a3df5e2c70714722ecc54895565" translate="yes" xml:space="preserve">
          <source>Change Password</source>
          <target state="translated">パスワードの変更</target>
        </trans-unit>
        <trans-unit id="3d0d31929a4d384a805be01847b197f2bf6c7a85" translate="yes" xml:space="preserve">
          <source>Change an existing service from automatic to manual startup:</source>
          <target state="translated">既存のサービスを自動起動から手動起動に変更します。</target>
        </trans-unit>
        <trans-unit id="2902e0403027fc220789721469435c870aa5f524" translate="yes" xml:space="preserve">
          <source>Change an origin member&amp;rsquo;s role</source>
          <target state="translated">オリジンメンバーの役割を変更する</target>
        </trans-unit>
        <trans-unit id="549795d06a6e0bdb5e4b5e59ab8dbeb5fadfa9cc" translate="yes" xml:space="preserve">
          <source>Change directories into &lt;code&gt;~/.berkshelf/cookbooks&lt;/code&gt;:</source>
          <target state="translated">ディレクトリを &lt;code&gt;~/.berkshelf/cookbooks&lt;/code&gt; 変更します：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
