<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="7c6f54e907a75263fd0bf968b6313ce06f8b53fe" translate="yes" xml:space="preserve">
          <source>Add the ability to read both little-endian and big-endian databases. So a database created under SunOS or Mac OS X can be read and written under Linux or Windows and vice versa.</source>
          <target state="translated">リトルエンディアンとビッグエンディアンの両方のデータベースを読む機能を追加します。これにより、SunOSやMac OS Xで作成されたデータベースをLinuxやWindowsで読み書きできるようになり、その逆も可能になります。</target>
        </trans-unit>
        <trans-unit id="af73d1caadd8c6a0bfa650a1605b5bc6b382fa8b" translate="yes" xml:space="preserve">
          <source>Add the ability to read from &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; databases even if the application lacks write permission on the database and its containing directory, as long as the -shm and -wal files exist in that directory.</source>
          <target state="translated">-shmファイルと-walファイルがそのディレクトリに存在する限り、アプリケーションがデータベースとその包含ディレクトリに対する書き込み権限を持っていない場合でも、&lt;a href=&quot;wal&quot;&gt;WALモード&lt;/a&gt;データベースから読み取る機能を追加します。</target>
        </trans-unit>
        <trans-unit id="380f653fc0d3d6ccefb92e152868bd3b2cfdb518" translate="yes" xml:space="preserve">
          <source>Add the ability to run a full regression test with a small &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit&lt;/a&gt;.</source>
          <target state="translated">小さな&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit&lt;/a&gt;で完全な回帰テストを実行する機能を追加します。</target>
        </trans-unit>
        <trans-unit id="cb5bd71c1b0c8add951478fd6dd2ffd86268514b" translate="yes" xml:space="preserve">
          <source>Add the ability to specify an alternative temporary file directory using the &quot;sqlite_temp_directory&quot; global variable.</source>
          <target state="translated">グローバル変数 &quot;sqlite_temp_directory &quot;を使用して、代替の一時ファイルディレクトリを指定する機能を追加する。</target>
        </trans-unit>
        <trans-unit id="4f2ac397ad237a3ec1542096c2f09b239a87fcab" translate="yes" xml:space="preserve">
          <source>Add the ability to use quoted strings as table and column names in expressions.</source>
          <target state="translated">式のテーブル名や列名として引用符付きの文字列を使用する機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="6e7939de31db1c52152d61c7f45b0bf4965a26a9" translate="yes" xml:space="preserve">
          <source>Add the build-in RTRIM collating sequence.</source>
          <target state="translated">ビルドインのRTRIM照合シーケンスを追加します。</target>
        </trans-unit>
        <trans-unit id="d4031514981ccb92e8822ed8b31bcfdb01017867" translate="yes" xml:space="preserve">
          <source>Add the capability of &quot;hidden&quot; columns in virtual tables.</source>
          <target state="translated">仮想テーブルに &quot;非表示 &quot;カラムの機能を追加します。</target>
        </trans-unit>
        <trans-unit id="6ce623dc6dee7dc1c4546659cdff0cc47e7ae976" translate="yes" xml:space="preserve">
          <source>Add the capability of evaluating an &lt;a href=&quot;lang_expr#in_op&quot;&gt;IN operator&lt;/a&gt; as a sequence of comparisons as an alternative to using a table lookup. Use the sequence of comparisons implementation in circumstances where it is likely to be faster, such as when the right-hand side of the IN operator is small and/or changes frequently.</source>
          <target state="translated">テーブルルックアップを使用する代わりに、&lt;a href=&quot;lang_expr#in_op&quot;&gt;IN演算子&lt;/a&gt;を一連の比較として評価する機能を追加します。IN演算子の右側が小さい場合や頻繁に変更される場合など、より高速である可能性が高い状況では、一連の比較実装を使用します。</target>
        </trans-unit>
        <trans-unit id="913170471b20c5cadb18e221b79038b72aa6c5c5" translate="yes" xml:space="preserve">
          <source>Add the constant P2 to the value in register P1. The result is always an integer.</source>
          <target state="translated">レジスタP1の値に定数P2を加算します。結果は常に整数となります。</target>
        </trans-unit>
        <trans-unit id="49543ed02ed7f75a8b5f4d3033d6dbc8ce95628d" translate="yes" xml:space="preserve">
          <source>Add the fuzzcheck test program and automatically run this program using both SQL and database test cases on &quot;make test&quot;.</source>
          <target state="translated">fuzzcheckテストプログラムを追加し、「make test」でSQLとデータベースの両方のテストケースを使ってこのプログラムを自動実行します。</target>
        </trans-unit>
        <trans-unit id="f6c12a1411453c369d89d2764b058c0cb481650f" translate="yes" xml:space="preserve">
          <source>Add the global variable sqlite_temp_directory which if set defines the directory in which temporary files are stored.</source>
          <target state="translated">グローバル変数sqlite_temp_directoryを追加し、設定されていれば一時ファイルが格納されるディレクトリを定義します。</target>
        </trans-unit>
        <trans-unit id="05674fc8f1df1c74cf46b61016ca2070fc8379b9" translate="yes" xml:space="preserve">
          <source>Add the long-standing &quot;.testctrl&quot; command to the &quot;.help&quot; menu.</source>
          <target state="translated">.help&quot; メニューに長年の間、使われてきた &quot;.testctrl&quot; コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="31c64589ffb807ef4d796e265bb6d226b04b8cc8" translate="yes" xml:space="preserve">
          <source>Add the name of an individual configuration setting to query the current value of that setting. Optionally add a boolean value to change a setting.</source>
          <target state="translated">個々の設定の名前を追加して、その設定の現在の値を照会します。オプションで、設定を変更するためのブール値を追加します。</target>
        </trans-unit>
        <trans-unit id="19a95d896cccaf286ff7b2470d35b7c705d0ca8a" translate="yes" xml:space="preserve">
          <source>Add the name of an individual configuration setting to query the current value of that setting. Optionally add a boolean value to change a setting. For example, turn off support for the &lt;a href=&quot;quirks#dblquote&quot;&gt;double-quoted string literal&lt;/a&gt; misfeature like this:</source>
          <target state="translated">個々の構成設定の名前を追加して、その設定の現在の値を照会します。オプションで、ブール値を追加して設定を変更します。たとえば、次のように&lt;a href=&quot;quirks#dblquote&quot;&gt;二重引用符で囲まれた文字列リテラルの&lt;/a&gt;誤解のサポートをオフにします。</target>
        </trans-unit>
        <trans-unit id="765e23b58c1bb51c78a2c11360fa9dffbf0998be" translate="yes" xml:space="preserve">
          <source>Add the new &quot;.genfkey&quot; command in the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; for generating triggers to implement foreign key constraints.</source>
          <target state="translated">外部キー制約を実装するトリガーを生成するために、&lt;a href=&quot;cli&quot;&gt;CLIに&lt;/a&gt;新しい「.genfkey」コマンドを追加します。</target>
        </trans-unit>
        <trans-unit id="353211e020fc294eba4ff8c7f60b45103bef8637" translate="yes" xml:space="preserve">
          <source>Add the new &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_error_code()&lt;/a&gt; API and use it in the implementation of &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; so that proper error codes are returned when an &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; fails.</source>
          <target state="translated">新しい&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_error_code（）&lt;/a&gt; APIを追加し、それを&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;の実装で使用して、&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;が失敗したときに適切なエラーコードが返されるようにします。</target>
        </trans-unit>
        <trans-unit id="d645979e763a15ad29729f489aa54879c9058e28" translate="yes" xml:space="preserve">
          <source>Add the sorter-reference optimization as a compile-time option. Only available if compiled with SQLITE_ENABLE_SORTER_REFERENCES.</source>
          <target state="translated">ソータ参照の最適化をコンパイル時のオプションとして追加します。SQLITE_ENABLE_SORTER_REFERENCES でコンパイルした場合のみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="09f9f5215cd0bcd28873268a2df03e58b7edb884" translate="yes" xml:space="preserve">
          <source>Add the text in register P1 onto the end of the text in register P2 and store the result in register P3. If either the P1 or P2 text are NULL then store NULL in P3.</source>
          <target state="translated">レジスタP1のテキストをレジスタP2のテキストの末尾に追加し、その結果をレジスタP3に格納します。P1またはP2のテキストがNULLの場合は、P3にNULLを格納します。</target>
        </trans-unit>
        <trans-unit id="1cf58523b65d0b130a577861b217d7b44ae4b7ae" translate="yes" xml:space="preserve">
          <source>Add the value in register P1 to the value in register P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP1の値をレジスタP2の値に加算し、その結果をレジスタP3に格納します。どちらかの入力がNULLの場合、結果はNULLになります。</target>
        </trans-unit>
        <trans-unit id="66fcebde89e16dc9a370173c80b02abe9e4c78f0" translate="yes" xml:space="preserve">
          <source>AddImm</source>
          <target state="translated">AddImm</target>
        </trans-unit>
        <trans-unit id="2110eeb59898919163140d91e36c5206d742c963" translate="yes" xml:space="preserve">
          <source>Added &quot;.lint fkey-indexes&quot; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;「.lint fkey-indexes」を追加しました。</target>
        </trans-unit>
        <trans-unit id="17b3156c2ecab2f101328f99f2bb4049428c27f0" translate="yes" xml:space="preserve">
          <source>Added &quot;.mode quote&quot; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;「.mode quote」を追加しました。</target>
        </trans-unit>
        <trans-unit id="6f34edea5910a5e62ccf46db8b7d60aaaee76631" translate="yes" xml:space="preserve">
          <source>Added &quot;busy&quot; and &quot;timeout&quot; methods to the Tcl interface</source>
          <target state="translated">Tcl インターフェースに &quot;busy&quot; と &quot;timeout&quot; メソッドを追加しました。</target>
        </trans-unit>
        <trans-unit id="379c527f7af719153fa43206a68c9c81b52a41ba" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; as an optional bit in the 4th argument to the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; and related interfaces, providing applications with the ability to create new functions that can be factored out of inner loops when they have constant arguments.</source>
          <target state="translated">&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;および関連するインターフェースの4番目の引数のオプションビットとして&lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt;を追加し、定数引数がある場合に内部ループから除外できる新しい関数を作成する機能をアプリケーションに提供します。</target>
        </trans-unit>
        <trans-unit id="7c75ca03b5710969006d7c9cdc20263784e7e1d5" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; as an optional bit in the 4th argument to the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; and related interfaces, providing applications with the ability to create new functions that can be factored out of inner loops when they have constant arguments.</source>
          <target state="translated">&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;および関連するインターフェイスの4番目の引数のオプションビットとして&lt;a href=&quot;c3ref/c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt;を追加し、定数引数がある場合に内部ループから除外できる新しい関数をアプリケーションに作成できるようにしました。</target>
        </trans-unit>
        <trans-unit id="c33f2de4952c71c6ae8d2342c531d9ec5acdd089" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt; file control opcode.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt;ファイル制御オペコードが追加されました。</target>
        </trans-unit>
        <trans-unit id="41f0bea9f1aab4e8e94f7f046274987aafe92259" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;fts5&quot;&gt;Full Text Search version 5 (FTS5)&lt;/a&gt; to the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, enabled using &lt;a href=&quot;compile#enable_fts5&quot;&gt;SQLITE_ENABLE_FTS5&lt;/a&gt;. FTS5 will be considered &quot;experimental&quot; (subject to incompatible changes) for at least one more release cycle.</source>
          <target state="translated">追加されました&lt;a href=&quot;fts5&quot;&gt;全文検索のバージョン5（FTS5）&lt;/a&gt;の&lt;a href=&quot;amalgamation&quot;&gt;合併は&lt;/a&gt;、使用して有効&lt;a href=&quot;compile#enable_fts5&quot;&gt;SQLITE_ENABLE_FTS5を&lt;/a&gt;。FTS5は、少なくとももう1つのリリースサイクルで「試験的」と見なされます（互換性のない変更が適用される場合があります）。</target>
        </trans-unit>
        <trans-unit id="e5083f2c6979cbe0e53546ddb0afabcdf2faa5b7" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt; module in the source tree, and in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;. Enable support using the &lt;a href=&quot;compile#enable_json1&quot;&gt;SQLITE_ENABLE_JSON1&lt;/a&gt; compile-time option.</source>
          <target state="translated">ソースツリーと&lt;a href=&quot;amalgamation&quot;&gt;amalgamationに&lt;/a&gt;&lt;a href=&quot;json1&quot;&gt;json1拡張&lt;/a&gt;モジュールを追加しました。&lt;a href=&quot;compile#enable_json1&quot;&gt;SQLITE_ENABLE_JSON1&lt;/a&gt;コンパイル時オプションを使用してサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="ce4b533f0e27715071ef87eea4d93f3cf1f90e06" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;PRAGMA checkpoint_fullfsync&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;PRAGMA checkpoint_fullfsyncを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="01f1995fb018bbb40a46ee81938b4ec1c3d8a6dc" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_freelist_count&quot;&gt;PRAGMA freelist_count&lt;/a&gt; for determining the current size of the freelist.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_freelist_count&quot;&gt;フリーリスト&lt;/a&gt;の現在のサイズを決定するためのPRAGMA freelist_countを追加しました。</target>
        </trans-unit>
        <trans-unit id="971c4ac1e76be78c3a8dee23705ac7dd59d334eb" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt; that works just like &lt;a href=&quot;pragma#pragma_table_info&quot;&gt;PRAGMA table_info&lt;/a&gt; except that it also shows &lt;a href=&quot;vtab#hiddencol&quot;&gt;hidden columns&lt;/a&gt; in virtual tables.</source>
          <target state="translated">仮想テーブルの&lt;a href=&quot;vtab#hiddencol&quot;&gt;非表示の列&lt;/a&gt;も表示することを除いて、&lt;a href=&quot;pragma#pragma_table_info&quot;&gt;PRAGMA table_infoと&lt;/a&gt;同じように機能する&lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="d0a0808cf95414d138c9f313f7f4408d5a231ce9" translate="yes" xml:space="preserve">
          <source>Added &lt;em&gt;experimental&lt;/em&gt; support for the &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMA and persistent journal.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMAと永続ジャーナルの&lt;em&gt;実験的&lt;/em&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="37e5cd3d1cdeaf90ac5106de1f3234e18cceede7" translate="yes" xml:space="preserve">
          <source>Added APIs &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_database()&lt;/a&gt;, &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_journal()&lt;/a&gt;, and &lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_wal()&lt;/a&gt; which are useful for specialized extensions.</source>
          <target state="translated">特殊な拡張機能に役立つ&lt;a href=&quot;c3ref/filename_database&quot;&gt;APIsqlite3_filename_database（）&lt;/a&gt;、&lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_journal（）&lt;/a&gt;、および&lt;a href=&quot;c3ref/filename_database&quot;&gt;sqlite3_filename_wal（）&lt;/a&gt;が追加されました。</target>
        </trans-unit>
        <trans-unit id="b2336dfca3803f9a8e032676d0cec38c1ebfd454" translate="yes" xml:space="preserve">
          <source>Added Mac OS X locking patches (beta - disabled by default)</source>
          <target state="translated">Mac OS Xのロックパッチを追加(ベータ版-デフォルトでは無効になっています</target>
        </trans-unit>
        <trans-unit id="db99ee2e25e21b5b81f68fcf9810b39626b69d8d" translate="yes" xml:space="preserve">
          <source>Added RPMS to the delivery (patches from Doug Henry)</source>
          <target state="translated">配信にRPMSを追加(Doug Henryからのパッチ)</target>
        </trans-unit>
        <trans-unit id="67198b6e07398a12f3c25aaf4ac2154027ff0378" translate="yes" xml:space="preserve">
          <source>Added SQL functions &lt;a href=&quot;lang_corefunc#unicode&quot;&gt;unicode(A)&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#char&quot;&gt;char(X1,...,XN)&lt;/a&gt;.</source>
          <target state="translated">SQL関数&lt;a href=&quot;lang_corefunc#unicode&quot;&gt;unicode（A）&lt;/a&gt;および&lt;a href=&quot;lang_corefunc#char&quot;&gt;char（X1、...、XN）が&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="2ac6ca0d8ed6a2ff2db4fe6f55b929a7c0125e12" translate="yes" xml:space="preserve">
          <source>Added SQL-92 compliant handling of NULLs.</source>
          <target state="translated">SQL-92に準拠したNULLの取り扱いを追加しました。</target>
        </trans-unit>
        <trans-unit id="33c2a0ba3f2291cb99aee2473a49a09f7ccf3bf8" translate="yes" xml:space="preserve">
          <source>Added UTC to localtime conversions to the experimental date/time functions.</source>
          <target state="translated">実験的な日付/時間関数にUTCからローカルタイムへの変換を追加しました。</target>
        </trans-unit>
        <trans-unit id="cdce9c9a8eb91c9a8d97198c0a3be5edb3ec079e" translate="yes" xml:space="preserve">
          <source>Added a &quot;memory:&quot; backend driver that stores its database in an in-memory hash table.</source>
          <target state="translated">データベースをインメモリハッシュテーブルに格納する &quot;memory:&quot;バックエンドドライバを追加しました。</target>
        </trans-unit>
        <trans-unit id="00e371dc673bc0768232c8a31e4ebbea705ef36e" translate="yes" xml:space="preserve">
          <source>Added a &lt;b&gt;GLOB&lt;/b&gt; operator: similar to &lt;b&gt;LIKE&lt;/b&gt; but it uses Unix shell globbing wildcards instead of the '%' and '_' wildcards of SQL.</source>
          <target state="translated">追加しました&lt;b&gt;GLOBの&lt;/b&gt;演算子：と似&lt;b&gt;LIKEを&lt;/b&gt;、それはSQLのワイルドカードをワイルドカードグロブの代わりに「％」と「_」Unixのシェルを使用しています。</target>
        </trans-unit>
        <trans-unit id="250be653dbe1b995ef443b4744fbdd334d1af201" translate="yes" xml:space="preserve">
          <source>Added a &lt;b&gt;VACUUM&lt;/b&gt; command that calls the &lt;b&gt;gdbm_reorganize()&lt;/b&gt; function on the underlying database files.</source>
          <target state="translated">基盤となるデータベースファイルで&lt;b&gt;gdbm_reorganize（）&lt;/b&gt;関数を呼び出す&lt;b&gt;VACUUM&lt;/b&gt;コマンドを追加しました。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8f50be98792a4473f5df166e79e4c15e470e945f" translate="yes" xml:space="preserve">
          <source>Added a REGEXP operator to the parser. There is no function to back up this operator in the standard build but users can add their own using sqlite3_create_function()</source>
          <target state="translated">パーサにREGEXP演算子を追加しました。標準ビルドにはこの演算子をバックアップする関数はありませんが、sqlite3_create_function()を使って独自の演算子を追加することができます。</target>
        </trans-unit>
        <trans-unit id="c212ede6225bb468c44a057a6ea39db59358c58f" translate="yes" xml:space="preserve">
          <source>Added a bunch more tests that take advantage of the new fcnt() function. The new tests did not uncover any new problems.</source>
          <target state="translated">新しい fcnt()関数を利用するテストを追加しました。新しいテストでは新しい問題は発見されませんでした。</target>
        </trans-unit>
        <trans-unit id="405362df77d500b1d4a23148d0fa3aadc04a61a9" translate="yes" xml:space="preserve">
          <source>Added a memory barrier in the implementation of &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize()&lt;/a&gt; to help ensure that it is thread-safe.</source>
          <target state="translated">&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize（）の&lt;/a&gt;実装にメモリバリアを追加して、スレッドセーフであることを保証します。</target>
        </trans-unit>
        <trans-unit id="b9e87cd127e91da0ec0dda2b4bc2817875de241c" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; source code file to the source tree: &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;loadext&quot;&gt;ロード可能な拡張&lt;/a&gt;ソースコードファイルをソースツリーに追加：&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a7bef2f5c6c7c126bee7d0e1381e04a2bc5d5c7" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;rtree&quot;&gt;R*Tree index extension&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;rtree&quot;&gt;R * Treeインデックス拡張が&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="9b4c4957f61db08c301d624dc05f1392878c4ab6" translate="yes" xml:space="preserve">
          <source>Added a new &lt;a href=&quot;rtree&quot;&gt;R*Tree virtual table&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;rtree&quot;&gt;R * Tree仮想テーブルを&lt;/a&gt;追加</target>
        </trans-unit>
        <trans-unit id="0e29fe680785011d7bda3161f75d1202d6b3c9e3" translate="yes" xml:space="preserve">
          <source>Added a new C/C++ API that does not use callback for returning data.</source>
          <target state="translated">データを返す際にコールバックを使わないC/C++APIを追加しました。</target>
        </trans-unit>
        <trans-unit id="b214b9ae924929f1e2351882a725695633b6e8e3" translate="yes" xml:space="preserve">
          <source>Added a new OS interface method for determining the sector size of underlying media: sqlite3OsSectorSize().</source>
          <target state="translated">基盤となるメディアのセクタサイズを決定するための新しいOSインターフェース・メソッドを追加しました。</target>
        </trans-unit>
        <trans-unit id="7ce29058ae0caf8062f35fba6d887336c4a7ab9a" translate="yes" xml:space="preserve">
          <source>Added a virtual function layer for the OS interface</source>
          <target state="translated">OSインターフェースに仮想関数層を追加</target>
        </trans-unit>
        <trans-unit id="61b8033f44960f290c02892665b99592125d3ee3" translate="yes" xml:space="preserve">
          <source>Added additional test cases and fixed a few bugs that those test cases found.</source>
          <target state="translated">テストケースを追加し、それらのテストケースで見つかったいくつかのバグを修正しました。</target>
        </trans-unit>
        <trans-unit id="51c1830e3a8de651ced6ed3d6d28fa7fd0b964bd" translate="yes" xml:space="preserve">
          <source>Added an experimental power-of-two, first-fit memory allocator.</source>
          <target state="translated">実験的なパワー・オブ・ツー、ファースト・フィット・メモリ・アロケータを追加しました。</target>
        </trans-unit>
        <trans-unit id="61506056435b0abe346d4b1592020fa0841dc847" translate="yes" xml:space="preserve">
          <source>Added an optimization to UNION ALL</source>
          <target state="translated">UNION ALLに最適化を追加</target>
        </trans-unit>
        <trans-unit id="1a0bf560d56111975b663b31d372f7d04ccc0408" translate="yes" xml:space="preserve">
          <source>Added an optional 5th parameter defining the collating sequence to the next_char() extension SQL function.</source>
          <target state="translated">next_char()拡張 SQL 関数に照合順序を定義するオプションの 5 番目のパラメータを追加しました。</target>
        </trans-unit>
        <trans-unit id="03d357182f3b49b9560b914618c22b6d797e8a50" translate="yes" xml:space="preserve">
          <source>Added an output buffer size parameter to the xGetTempname() method of the VFS layer.</source>
          <target state="translated">VFS レイヤーの xGetTempname()メソッドに出力バッファサイズのパラメータを追加しました。</target>
        </trans-unit>
        <trans-unit id="f92c6a94a65042a5738630118f0b6522d064c4d6" translate="yes" xml:space="preserve">
          <source>Added authorization hooks for the new ATTACH and DETACH commands.</source>
          <target state="translated">新しいATTACHとDETACHコマンドの認可フックを追加しました。</target>
        </trans-unit>
        <trans-unit id="29532217c190ee9ef8560df060b282fde86a0201" translate="yes" xml:space="preserve">
          <source>Added built-in support for VxWorks</source>
          <target state="translated">VxWorksのビルトインサポートを追加</target>
        </trans-unit>
        <trans-unit id="f73272ae7b494f886c0b2f663aab600ada22a9d0" translate="yes" xml:space="preserve">
          <source>Added code for the &lt;a href=&quot;uintcseq&quot;&gt;UINT collating sequence&lt;/a&gt; as an optional &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">オプションの&lt;a href=&quot;loadext&quot;&gt;ロード可能な拡張機能&lt;/a&gt;として、&lt;a href=&quot;uintcseq&quot;&gt;UINT照合シーケンスの&lt;/a&gt;コードを追加しました。</target>
        </trans-unit>
        <trans-unit id="147b8e42a7c5709c165ca9ec210f58e87fdbc166" translate="yes" xml:space="preserve">
          <source>Added compound select operators: &lt;b&gt;UNION&lt;/b&gt;, &lt;b&gt;UNION ALL&lt;/b&gt;, &lt;b&gt;INTERSECT&lt;/b&gt;, and &lt;b&gt;EXCEPT&lt;/b&gt;</source>
          <target state="translated">追加された複合選択演算子：&lt;b&gt;UNION&lt;/b&gt;、&lt;b&gt;UNION ALL&lt;/b&gt;、&lt;b&gt;INTERSECT&lt;/b&gt;、および&lt;b&gt;EXCEPT&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="966bb7eeb144aa22658b66260b0fc07c41cb34a5" translate="yes" xml:space="preserve">
          <source>Added documentation on SELECT DISTINCT and on how SQLite handles NULLs.</source>
          <target state="translated">SELECT DISTINCTとSQLiteがどのようにNULLを扱うかについてのドキュメントを追加しました。</target>
        </trans-unit>
        <trans-unit id="a5259a8e93acf37a2a605d329efcce9e4a1e269e" translate="yes" xml:space="preserve">
          <source>Added documentation on compiling to WinNT.</source>
          <target state="translated">WinNTへのコンパイルに関するドキュメントを追加しました。</target>
        </trans-unit>
        <trans-unit id="5004dca04585c7d3aaf25e1e1a41516474e09016" translate="yes" xml:space="preserve">
          <source>Added driver for OS/2</source>
          <target state="translated">OS/2用のドライバを追加しました。</target>
        </trans-unit>
        <trans-unit id="fe42510cd0463afe5cbf6d7827cc69110a1cc60c" translate="yes" xml:space="preserve">
          <source>Added experimental API: sqlite3_auto_extension()</source>
          <target state="translated">実験的なAPIを追加しました:sqlite3_auto_extension()</target>
        </trans-unit>
        <trans-unit id="7766b89d29253ecd84d2e8efcc547f8a4a19fdd2" translate="yes" xml:space="preserve">
          <source>Added experimental sqlite_bind() and sqlite_reset() APIs.</source>
          <target state="translated">実験的なsqlite_bind()とsqlite_reset()のAPIを追加しました。</target>
        </trans-unit>
        <trans-unit id="aa8380976f60b469b795a9cfe69a68ad28519ab2" translate="yes" xml:space="preserve">
          <source>Added experimental sqlite_progress_handler() callback API</source>
          <target state="translated">実験的な sqlite_progress_handler()コールバック API を追加しました。</target>
        </trans-unit>
        <trans-unit id="0dde0a29472bfdb42ef6a4ba4d29d82906afeb01" translate="yes" xml:space="preserve">
          <source>Added experimental support for &lt;a href=&quot;pragma#pragfunc&quot;&gt;PRAGMA functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragfunc&quot;&gt;PRAGMA関数の&lt;/a&gt;実験的サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="1b04ee6a08af9da9a7cc5155935020b217c59f16" translate="yes" xml:space="preserve">
          <source>Added explicit &lt;a href=&quot;limits&quot;&gt;upper bounds&lt;/a&gt; on the sizes and quantities of things SQLite can process. This change might cause compatibility problems for applications that use SQLite in the extreme, which is why the current release is 3.4.0 instead of 3.3.18.</source>
          <target state="translated">SQLiteが処理できるもののサイズと量に明示的な&lt;a href=&quot;limits&quot;&gt;上限を&lt;/a&gt;追加しました。この変更により、SQLiteを極端に使用するアプリケーションの互換性の問題が発生する可能性があります。そのため、現在のリリースは3.3.18ではなく3.4.0です。</target>
        </trans-unit>
        <trans-unit id="468a08b7f21336387bf99840259543add6d147c1" translate="yes" xml:space="preserve">
          <source>Added four new &lt;a href=&quot;cli#dotmode&quot;&gt;output modes&lt;/a&gt;: &quot;box&quot;, &quot;json&quot;, &quot;markdown&quot;, and &quot;table&quot;.</source>
          <target state="translated">「box」、「json」、「markdown」、「table」の4つの新しい&lt;a href=&quot;cli#dotmode&quot;&gt;出力モードが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="39458a71b59bf72d180e407a4469d5eee8eb52fb" translate="yes" xml:space="preserve">
          <source>Added functions &lt;b&gt;length()&lt;/b&gt; and &lt;b&gt;substr()&lt;/b&gt;.</source>
          <target state="translated">関数&lt;b&gt;length（）&lt;/b&gt;および&lt;b&gt;substr（）が&lt;/b&gt;追加&lt;b&gt;され&lt;/b&gt;ました。</target>
        </trans-unit>
        <trans-unit id="ea09a49bd5b911106d49b4181dd736a6c1febba9" translate="yes" xml:space="preserve">
          <source>Added improved version identification features: C-Preprocessor macro &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt;, C/C++ interface &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, and SQL function &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">改良されたバージョン識別機能が追加されました：Cプリ&lt;a href=&quot;c3ref/c_source_id&quot;&gt;プロセッサー&lt;/a&gt;マクロSQLITE_SOURCE_ID、C / C ++インターフェース&lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid（）&lt;/a&gt;、およびSQL関数&lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36da124a6f3ace551424bb6aa30d21793847e7e5" translate="yes" xml:space="preserve">
          <source>Added limited support for transactions. At this point, transactions will do table locking on the GDBM backend. There is no support (yet) for rollback or atomic commit.</source>
          <target state="translated">トランザクションの限定的なサポートを追加しました。この時点では、トランザクションはGDBMバックエンドでテーブルロックを行います。ロールバックやアトミックコミットのサポートは(まだ)ありません。</target>
        </trans-unit>
        <trans-unit id="322bfefb44d4286a4a0577edd8cf824412924d23" translate="yes" xml:space="preserve">
          <source>Added logic to detect when the library API routines are called out of sequence.</source>
          <target state="translated">ライブラリAPIルーチンが順番外に呼び出されたときに検出するロジックを追加しました。</target>
        </trans-unit>
        <trans-unit id="67317880fae037ebc6d3e2d3e37f7ba602179da1" translate="yes" xml:space="preserve">
          <source>Added lots of new test cases</source>
          <target state="translated">新しいテストケースを多数追加</target>
        </trans-unit>
        <trans-unit id="7d49fe297826d5eff0d8ba253a3d0ec9f7707bb3" translate="yes" xml:space="preserve">
          <source>Added many new loadable extensions to the source tree, including amatch, closure, fuzzer, ieee754, nextchar, regexp, spellfix, and wholenumber. See header comments on each extension source file for further information about what that extension does.</source>
          <target state="translated">ソースツリーに、amatch、 closure、fuzzer、ieee754、nextchar、regexp、spellfix、wholenumber を含む多くの新しいロード可能な拡張機能が追加されました。その拡張子が何をするかについての詳細な情報は、各拡張子のソースファイルのヘッダコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b7ee37f0f1005525b8836f4f65d7fb421a50ba51" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;uri#coreqp&quot;&gt;URI query parameters&lt;/a&gt; &quot;nolock&quot; and &quot;immutable&quot;.</source>
          <target state="translated">新しい&lt;a href=&quot;uri#coreqp&quot;&gt;URIクエリパラメータ&lt;/a&gt;「nolock」と「immutable」が追加されました。</target>
        </trans-unit>
        <trans-unit id="63392fe9fe96791514a3c1be366331a2c5669d4f" translate="yes" xml:space="preserve">
          <source>Added new commands &quot;.backup&quot; and &quot;.restore&quot; to the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;CLIに&lt;/a&gt;新しいコマンド「.backup」および「.restore」を追加しました。</target>
        </trans-unit>
        <trans-unit id="d7b636e1930793301d407d0d74d8b0aa8cb970ae" translate="yes" xml:space="preserve">
          <source>Added new commands &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusschemaused&quot;&gt;SQLITE_DBSTATUS_SCHEMA_USED&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusstmtused&quot;&gt;SQLITE_DBSTATUS_STMT_USED&lt;/a&gt; to the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface, in order to report out the amount of memory used to hold the schema and prepared statements of a connection.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;インターフェースに新しいコマンド&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusschemaused&quot;&gt;SQLITE_DBSTATUS_SCHEMA_USED&lt;/a&gt;および&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusstmtused&quot;&gt;SQLITE_DBSTATUS_STMT_USED&lt;/a&gt;を追加して、接続のスキーマおよび準備されたステートメントを保持するために使用されたメモリの量を報告します。</target>
        </trans-unit>
        <trans-unit id="f8dfe8f26d08433a24df679977a760d4f646d3d2" translate="yes" xml:space="preserve">
          <source>Added new extended error codes for all SQLITE_CONSTRAINT errors</source>
          <target state="translated">すべてのSQLITE_CONSTRAINTエラーに新しい拡張エラーコードを追加しました。</target>
        </trans-unit>
        <trans-unit id="5688bbdc29e537f15ce91e77d0144288a884fe89" translate="yes" xml:space="preserve">
          <source>Added new functions: &lt;b&gt;round()&lt;/b&gt; and &lt;b&gt;abs()&lt;/b&gt;.</source>
          <target state="translated">追加された新しい関数：&lt;b&gt;round（）&lt;/b&gt;および&lt;b&gt;abs（）&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="d0329da0075f52ea225b62d5bf9417d8dcd00a71" translate="yes" xml:space="preserve">
          <source>Added new interfaces with 64-bit length parameters: &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64()&lt;/a&gt;, &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc64()&lt;/a&gt;, &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob64()&lt;/a&gt;, &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_blob64()&lt;/a&gt;, &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text64()&lt;/a&gt;, and &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_text64()&lt;/a&gt;.</source>
          <target state="translated">64ビット長のパラメーターを持つ新しいインターフェースが追加されました：&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64（）&lt;/a&gt;、&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc64（）&lt;/a&gt;、&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob64（）&lt;/a&gt;、&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_blob64（）&lt;/a&gt;、&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text64（）&lt;/a&gt;、&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_text64（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64cc3fb84831f2e27cea592dad28ee0dfb47e000" translate="yes" xml:space="preserve">
          <source>Added new methods &lt;a href=&quot;tclsqlite#backup&quot;&gt;backup&lt;/a&gt; and &lt;a href=&quot;tclsqlite#restore&quot;&gt;restore&lt;/a&gt; to the TCL interface.</source>
          <target state="translated">TCLインターフェイスに新しいメソッドの&lt;a href=&quot;tclsqlite#backup&quot;&gt;バックアップ&lt;/a&gt;と&lt;a href=&quot;tclsqlite#restore&quot;&gt;復元&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="f026a440b97b07d3a085b4f6c26cd70cd6721d81" translate="yes" xml:space="preserve">
          <source>Added new operators: &lt;b&gt;&amp;amp;&lt;/b&gt; (bitwise-and) &lt;b&gt;|&lt;/b&gt; (bitwise-or), &lt;b&gt;~&lt;/b&gt; (ones-complement), &lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt; (shift left), &lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt; (shift right).</source>
          <target state="translated">新しい演算子が追加されました：&lt;b&gt;＆&lt;/b&gt;（ビットごとのAND）&lt;b&gt;| &lt;/b&gt;（ビット単位OR）、&lt;b&gt;〜&lt;/b&gt;（1の補数）、&lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt;（左シフト）、&lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt;（右シフト）。</target>
        </trans-unit>
        <trans-unit id="de14b01c9e35bbb7629521f6a50271a7ccde1b67" translate="yes" xml:space="preserve">
          <source>Added new tests for &lt;b&gt;sqlite_complete()&lt;/b&gt; and for memory leaks.</source>
          <target state="translated">&lt;b&gt;sqlite_complete（）&lt;/b&gt;とメモリリークの新しいテストを追加しました。</target>
        </trans-unit>
        <trans-unit id="c20dd22d769d6a0327cc8caabe7593808b2f880b" translate="yes" xml:space="preserve">
          <source>Added notes on how to compile for Windows95/98.</source>
          <target state="translated">Windows95/98用のコンパイル方法についての注意点を追加しました。</target>
        </trans-unit>
        <trans-unit id="8b3777e6498a05a9cf616db470b108348609eefe" translate="yes" xml:space="preserve">
          <source>Added options &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachehit&quot;&gt;SQLITE_DBSTATUS_CACHE_HIT&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachemiss&quot;&gt;SQLITE_DBSTATUS_CACHE_MISS&lt;/a&gt; to the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface.</source>
          <target state="translated">オプション&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachehit&quot;&gt;SQLITE_DBSTATUS_CACHE_HIT&lt;/a&gt;および&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachemiss&quot;&gt;SQLITE_DBSTATUS_CACHE_MISS&lt;/a&gt;が&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;インターフェースに追加されました。</target>
        </trans-unit>
        <trans-unit id="f2bcb2d14872cd27ad8179b401d41712f3826ac8" translate="yes" xml:space="preserve">
          <source>Added pattern matching to the &quot;.table&quot; command in the &quot;sqlite&quot; command shell.</source>
          <target state="translated">sqlite &quot;コマンドシェルの&quot;.table &quot;コマンドにパターンマッチングを追加しました。</target>
        </trans-unit>
        <trans-unit id="dd7fdec30649f808ade235da9f1d9bfc39928676" translate="yes" xml:space="preserve">
          <source>Added special column names ROWID, OID, and _ROWID_ that refer to the unique random integer key associated with every row of every table.</source>
          <target state="translated">すべてのテーブルのすべての行に関連付けられた一意のランダム整数キーを参照する特別なカラム名 ROWID、OID、および _ROWID_を追加しました。</target>
        </trans-unit>
        <trans-unit id="3d0fd30f1cefc34648f44fd621d0ab7f5704b046" translate="yes" xml:space="preserve">
          <source>Added superfluous casts and variable initializations in order to suppress nuisance compiler warnings.</source>
          <target state="translated">迷惑なコンパイラの警告を抑制するために、余分なキャストと変数の初期化を追加しました。</target>
        </trans-unit>
        <trans-unit id="e8034fb730a94e978b35dda6f4f886fe746b86bb" translate="yes" xml:space="preserve">
          <source>Added support for &quot;Proxy Locking&quot; on Mac OS X.</source>
          <target state="translated">Mac OS Xの「Proxy Locking」に対応しました。</target>
        </trans-unit>
        <trans-unit id="1a768a274150328fc95ef914aa94e10888b14001" translate="yes" xml:space="preserve">
          <source>Added support for &quot;sz=NNN&quot; parameters at the end of &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1.stat&lt;/a&gt; fields used to specify the average length in bytes for table and index rows.</source>
          <target state="translated">テーブルおよびインデックス行の平均の長さをバイト単位で指定するために使用される&lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1.stat&lt;/a&gt;フィールドの最後に、「sz = NNN」パラメーターのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="c5d796f1bc1788a94bdc0f744f6885401132b83b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;c3ref/blob_open&quot;&gt;Incremental BLOB I/O&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/blob_open&quot;&gt;インクリメンタルBLOB I / Oの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c77bdf718a836eec40d5cc2bd3bd76b51bd6ed19" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigmaindbname&quot;&gt;SQLITE_DBCONFIG_MAINDBNAME&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigmaindbname&quot;&gt;SQLITE_DBCONFIG_MAINDBNAMEの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="d912639164fbfa089f0b32366f17a5c6aa911805" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4の&lt;/a&gt;サポートを追加しました</target>
        </trans-unit>
        <trans-unit id="a7df61cc46e1a14c31ecf305ec5b3cdc2ad14931" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;expridx&quot;&gt;式のインデックスの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="ccee6fe1568710feac231d9b82d4b7116c357c1f" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraints&lt;/a&gt;. Foreign key constraints are disabled by default. Use the &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;foreign_keys pragma&lt;/a&gt; to turn them on.</source>
          <target state="translated">&lt;a href=&quot;foreignkeys&quot;&gt;外部キー制約の&lt;/a&gt;サポートが追加されました。外部キー制約はデフォルトで無効になっています。&lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;foreign_keysプラグマ&lt;/a&gt;を使用してオンにします。</target>
        </trans-unit>
        <trans-unit id="57d3823a31c3d971b8257b18cfb2e7dd4e9220f5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;fts3#*fts4compression&quot;&gt;compressed FTS4 content&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fts3#*fts4compression&quot;&gt;圧縮されたFTS4コンテンツの&lt;/a&gt;サポートを追加</target>
        </trans-unit>
        <trans-unit id="c4787e7cb7c644f741f21a4cb4f977bb669f1d4c" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt; and enhancements to the FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;fts3#fts4&quot;&gt;FTS4の&lt;/a&gt;サポートが追加され、FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo（）&lt;/a&gt;関数が拡張されました。</target>
        </trans-unit>
        <trans-unit id="6092d378933e07269403fd4dd90531c8858f1c75" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;http://www.icu-project.org/&quot;&gt;International Components for Unicode (ICU)&lt;/a&gt; to the full-text search extensions.</source>
          <target state="translated">全文検索拡張機能に&lt;a href=&quot;http://www.icu-project.org/&quot;&gt;International Components for Unicode（ICU）の&lt;/a&gt;サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="b494fc9ecd0ea1218a4c28e118fe3101d154372d" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_analyze#approx&quot;&gt;approximate ANALYZE&lt;/a&gt; using the &lt;a href=&quot;pragma#pragma_analysis_limit&quot;&gt;PRAGMA analysis_limit&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_analysis_limit&quot;&gt;PRAGMAanalysis_limit&lt;/a&gt;コマンドを使用した&lt;a href=&quot;lang_analyze#approx&quot;&gt;近似ANALYZEの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="1f5facc051f99921d391afa4e3643b439a064280" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#hexint&quot;&gt;hexadecimal integer literals&lt;/a&gt; in the SQL parser. (Ex: 0x123abc)</source>
          <target state="translated">SQLパーサーに&lt;a href=&quot;lang_expr#hexint&quot;&gt;16進整数リテラルの&lt;/a&gt;サポートが追加されました。（例：0x123abc）</target>
        </trans-unit>
        <trans-unit id="3f5a1e3af94d119995760c36810093890d689e97" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;, &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt;, and &lt;a href=&quot;lang_expr#regexp&quot;&gt;REGEXP&lt;/a&gt; operators on &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;vtab&quot;&gt;仮想テーブル&lt;/a&gt;での&lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;、&lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt;、および&lt;a href=&quot;lang_expr#regexp&quot;&gt;REGEXP&lt;/a&gt;演算子のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="2b5ae11919833702f8097527352d77974e85a4c5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameters&lt;/a&gt; and the &lt;a href=&quot;cli#param&quot;&gt;.parameter command&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_expr#varparam&quot;&gt;バインドされたパラメーター&lt;/a&gt;と&lt;a href=&quot;cli#param&quot;&gt;.parameterコマンドの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="da287db3ef9d940ef6e06049e899a3255c626579" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_savepoint&quot;&gt;nested transactions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lang_savepoint&quot;&gt;ネストされたトランザクションの&lt;/a&gt;サポートが追加されました</target>
        </trans-unit>
        <trans-unit id="57b0cb14c26129da9af31340671c9b3ff8e5ccca" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;lang_with&quot;&gt;common table expressions&lt;/a&gt; and the &lt;a href=&quot;lang_with&quot;&gt;WITH clause&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_with&quot;&gt;共通テーブル式&lt;/a&gt;と&lt;a href=&quot;lang_with&quot;&gt;WITH句の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="a3dc90ea23f1ee6a95938b67f9463a536aa9aa65" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt; Incremental Vacuum&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;Incremental Vacuumの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="098e47061ac752cad3c4f0dd71b4386b546c1923" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;queryplanner#partialsort&quot;&gt;partial sorting by index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;queryplanner#partialsort&quot;&gt;インデックスによる部分ソートの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5852f13702a3f6d2950690e297970675461ddffd" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;rowvalue&quot;&gt;row values&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rowvalue&quot;&gt;行の値の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="9304a1ae7bcff7f9d0294fd922fb7902290e9b40" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;rtree#customquery&quot;&gt;custom r-tree queries&lt;/a&gt; using application-supplied callback routines to define the boundary of the query region.</source>
          <target state="translated">クエリ領域の境界を定義するためにアプリケーション提供のコールバックルーチンを使用する&lt;a href=&quot;rtree#customquery&quot;&gt;カスタムrツリークエリの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="38862a5dbb5ef062dda0972b971e23cd8f009ced" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;shortnames&quot;&gt;short filenames&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;shortnames&quot;&gt;短いファイル名の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="0678942ca70cc2234b4d6948778baf5cfae7a7b8" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#epovtab&quot;&gt;eponymous virtual tables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;vtab#epovtab&quot;&gt;代名詞の仮想テーブルの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f743bdcce78a1dddfc4dc927a772db18d15b9bd9" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; in the FROM clause of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメントのFROM句で&lt;a href=&quot;vtab#tabfunc2&quot;&gt;テーブル値関数の&lt;/a&gt;サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="28342e05a28a19c9120653536a77b2d3b8ecfa3f" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID virtual tables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID仮想テーブルの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="e30cf1fb4cdcf9dd548c26ae0e68c541d4720f1d" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;wal&quot;&gt;write-ahead logging&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;wal&quot;&gt;先行書き込みロギングの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f2a37e36b173d50699a7a383daf4808cca9005f3" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; tables.</source>
          <target state="translated">&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;テーブルのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="aaa626c013ccfe7078969d1a2418f195260916f5" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;GROUP BY&lt;/b&gt; and &lt;b&gt;HAVING&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;GROUP BY&lt;/b&gt;および&lt;b&gt;HAVINGの&lt;/b&gt;サポートが追加されました&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="23c6378ca8e0385b32d8c34595a31f9e34896f43" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;IN&lt;/b&gt; and &lt;b&gt;BETWEEN&lt;/b&gt; operators</source>
          <target state="translated">&lt;b&gt;IN&lt;/b&gt;および&lt;b&gt;BETWEEN&lt;/b&gt;演算子のサポートが追加されました</target>
        </trans-unit>
        <trans-unit id="39906a48ce3fe7d0519d7138f444bf5e0f5d0c4e" translate="yes" xml:space="preserve">
          <source>Added support for &lt;b&gt;SELECT DISTINCT ...&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;SELECT DISTINCTの&lt;/b&gt;サポートを追加&lt;b&gt;...&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4d369d287f216943320eb1cf4c8784d883517fcc" translate="yes" xml:space="preserve">
          <source>Added support for ALTER TABLE ADD COLUMN.</source>
          <target state="translated">ALTER TABLE ADD COLUMNのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="f61dc3bfef1b0fb9159060519a3d5996919b7cdf" translate="yes" xml:space="preserve">
          <source>Added support for CASE expressions (patch from Dan Kennedy)</source>
          <target state="translated">CASE式のサポートを追加(Dan Kennedyからのパッチ</target>
        </trans-unit>
        <trans-unit id="5ef50e566503d5ec6fc8c4206728cad99f6ab4e0" translate="yes" xml:space="preserve">
          <source>Added support for COUNT(DISTINCT expr)</source>
          <target state="translated">COUNT(DISTINCT expr)のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="4f1a1db14256e94e83a51e328f837e192ca0c2b7" translate="yes" xml:space="preserve">
          <source>Added support for CREATE TABLE AS SELECT</source>
          <target state="translated">CREATE TABLE AS SELECTのサポートを追加</target>
        </trans-unit>
        <trans-unit id="f480cd382ac5c6dd6874aa6a99de254caa5bd680" translate="yes" xml:space="preserve">
          <source>Added support for IF EXISTS on CREATE/DROP TRIGGER/VIEW</source>
          <target state="translated">CREATE/DROP TRIGGER/VIEWでIF EXISTSのサポートを追加</target>
        </trans-unit>
        <trans-unit id="802bbd8e68481149017b168987b2b6dcf3e3f523" translate="yes" xml:space="preserve">
          <source>Added support for TEMP triggers and indices.</source>
          <target state="translated">TEMPトリガーとインデックスのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="aecb8ed5eb711ab5bc883c11daa59ac6b2d5ce62" translate="yes" xml:space="preserve">
          <source>Added support for TEMPORARY tables and indices.</source>
          <target state="translated">TEMPORARYテーブルとインデックスのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="4d8ec5d1af662afdc6e8cea0faa53d9548a3715c" translate="yes" xml:space="preserve">
          <source>Added support for VIEWs.</source>
          <target state="translated">VIEWのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="b7d8cf0f737beb23e6e9108cf9c8ba695b902478" translate="yes" xml:space="preserve">
          <source>Added support for Windows Phone 8 platforms</source>
          <target state="translated">Windows Phone 8プラットフォームのサポートを追加</target>
        </trans-unit>
        <trans-unit id="156d52498375f646744777537d1b8661c3748353" translate="yes" xml:space="preserve">
          <source>Added support for aggregate functions (Ex: &lt;b&gt;COUNT(*)&lt;/b&gt;, &lt;b&gt;MIN(...)&lt;/b&gt;) to the SELECT statement.</source>
          <target state="translated">SELECTステートメントに集計関数（例：&lt;b&gt;COUNT（*）&lt;/b&gt;、&lt;b&gt;MIN（...）&lt;/b&gt;）のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="59adb1923dce593e20f6cdd76d1aad57f9b3c08b" translate="yes" xml:space="preserve">
          <source>Added support for default values on columns of a table.</source>
          <target state="translated">テーブルの列のデフォルト値のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="da71dda5aa64971e5509406d2038fc8ff0a58226" translate="yes" xml:space="preserve">
          <source>Added support for dynamically loaded extensions (beta)</source>
          <target state="translated">動的にロードされる拡張機能のサポートを追加(ベータ版)</target>
        </trans-unit>
        <trans-unit id="2caaf5d365573dc0f505bc362a8d1a5cfa8a2a47" translate="yes" xml:space="preserve">
          <source>Added support for exclusive access mode using &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt; &quot;PRAGMA locking_mode=EXCLUSIVE&quot;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;「PRAGMAlocking_mode = EXCLUSIVE」&lt;/a&gt;を使用した排他的アクセスモードのサポートを追加</target>
        </trans-unit>
        <trans-unit id="edfbd1d9a982b614144ea7761b02cfc7f2dbb5f8" translate="yes" xml:space="preserve">
          <source>Added support for grave-accent quoting for compatibility with MySQL</source>
          <target state="translated">MySQLとの互換性のために、墓石アクセントのクォートのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="22bbd337e6061caadf8960bdff6dde0fe2e1ce00" translate="yes" xml:space="preserve">
          <source>Added support for in-memory databases.</source>
          <target state="translated">インメモリデータベースのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="269e7f8bd5682bfd59fdb502a94ab258bd85c346" translate="yes" xml:space="preserve">
          <source>Added support for new functions: &lt;b&gt;coalesce()&lt;/b&gt;, &lt;b&gt;lower()&lt;/b&gt;, &lt;b&gt;upper()&lt;/b&gt;, and &lt;b&gt;random()&lt;/b&gt;</source>
          <target state="translated">新しい関数のサポートが追加されました&lt;b&gt;。coalesce（）&lt;/b&gt;、&lt;b&gt;lower（）&lt;/b&gt;、&lt;b&gt;upper（）&lt;/b&gt;、&lt;b&gt;random（）&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="714630549f890ebcea85844393f6d39effdd678c" translate="yes" xml:space="preserve">
          <source>Added support for parentheses in FTS3 query patterns using the &lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt;コンパイル時オプションを使用したFTS3クエリパターンでの括弧のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f0eb5b5e0bf2134ccfb6085dc04cfe49a2b50cb2" translate="yes" xml:space="preserve">
          <source>Added support for read-only &lt;a href=&quot;vtab#xshadowname&quot;&gt;shadow tables&lt;/a&gt; when the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; option is enabled.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;オプションが有効な場合の読み取り専用&lt;a href=&quot;vtab#xshadowname&quot;&gt;シャドウテーブルの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f5328ffada12715fa1740f8ed07ec5f56e3e6e11" translate="yes" xml:space="preserve">
          <source>Added support for reading and writing &lt;a href=&quot;sqlar&quot;&gt;SQLite Archive&lt;/a&gt; files using the &lt;a href=&quot;cli#sqlar&quot;&gt;.archive command&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli#sqlar&quot;&gt;.archiveコマンド&lt;/a&gt;を使用した&lt;a href=&quot;sqlar&quot;&gt;SQLiteアーカイブ&lt;/a&gt;ファイルの読み取りと書き込みのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="d83a93fa67e821fa39cee2c0269a9594a2b7048d" translate="yes" xml:space="preserve">
          <source>Added support for row triggers.</source>
          <target state="translated">行トリガのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="7d546045a17d60665f8f36d2355b1056f5514277" translate="yes" xml:space="preserve">
          <source>Added support for sub-queries in the FROM clause of a SELECT.</source>
          <target state="translated">SELECTのFROM句のサブクエリのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5baf8f3125a1b4ab71c92fa8a5439c0508a7b6ff" translate="yes" xml:space="preserve">
          <source>Added support for the &quot;T&quot; separator in ISO-8601 date/time strings.</source>
          <target state="translated">ISO-8601日付/時刻文字列の &quot;T &quot;区切り文字のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="725493f315496bd1f2f4a13c4ac5b992869c96d8" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_normalized_sql()&lt;/a&gt; interface, when compiling with SQLITE_ENABLE_NORMALIZE.</source>
          <target state="translated">&lt;a href=&quot;c3ref/expanded_sql&quot;&gt;SQLITE_ENABLE_NORMALIZEで&lt;/a&gt;コンパイルするときに、sqlite3_normalized_sql（）インターフェースのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="498b965855c0df0c65ab77d01077c70c3176df7c" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts3#*fts4languageid&quot;&gt;FTS4 languageid option&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fts3#*fts4languageid&quot;&gt;FTS4 languageidオプションの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5bebd7419f01257793b74d6f7189da20f77e3cdd" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts3#fts4prefix&quot;&gt;FTS4 prefix option&lt;/a&gt; and the &lt;a href=&quot;fts3#fts4order&quot;&gt;FTS4 order option&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fts3#fts4prefix&quot;&gt;FTS4接頭辞オプション&lt;/a&gt;と&lt;a href=&quot;fts3#fts4order&quot;&gt;FTS4注文オプションの&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="a61e8713611aa7f646e2e630cf8669d823feec59" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;a href=&quot;fts5#carrotq&quot;&gt;&quot;^&quot; initial token syntax&lt;/a&gt; in FTS5.</source>
          <target state="translated">FTS5の&lt;a href=&quot;fts5#carrotq&quot;&gt;「^」初期トークン構文の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="63f525fb27345b220e85e4b1882d1f850d9fd641" translate="yes" xml:space="preserve">
          <source>Added support for the CAST operator</source>
          <target state="translated">CAST演算子のサポートを追加</target>
        </trans-unit>
        <trans-unit id="04fad2e75b780f1e57df3facebce6367bd600478" translate="yes" xml:space="preserve">
          <source>Added support for user-defined functions implemented in C.</source>
          <target state="translated">C言語で実装されたユーザー定義関数のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="5fd469aa2c2d142386dbb22e08493982d3a3c0cf" translate="yes" xml:space="preserve">
          <source>Added support for using &lt;b&gt;(SELECT ...)&lt;/b&gt; within expressions</source>
          <target state="translated">式内で&lt;b&gt;（SELECT ...）&lt;/b&gt;を使用するためのサポートを追加</target>
        </trans-unit>
        <trans-unit id="9dbdc56037dd11ba01c820085bfc64d7a45c048d" translate="yes" xml:space="preserve">
          <source>Added support for virtual tables (beta)</source>
          <target state="translated">仮想テーブルのサポートを追加(ベータ版</target>
        </trans-unit>
        <trans-unit id="5a11c44e956f0b2eed596db722d97e53d70a1408" translate="yes" xml:space="preserve">
          <source>Added the &quot;#-N&quot; array notation for &lt;a href=&quot;json1#jsonpath&quot;&gt;JSON function path arguments&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;json1#jsonpath&quot;&gt;JSON関数パス引数に&lt;/a&gt;「＃-N」配列表記を追加しました。</target>
        </trans-unit>
        <trans-unit id="ef53cbf2e79a9098a11853089aaa8d3c0fdee6d1" translate="yes" xml:space="preserve">
          <source>Added the &quot;%Q&quot; expansion to sqlite_*_printf().</source>
          <target state="translated">sqlite_*_printf()に &quot;%Q&quot; 拡張を追加しました。</target>
        </trans-unit>
        <trans-unit id="d19a5fb60f5adeafbe53fbf0afc64944745e9a28" translate="yes" xml:space="preserve">
          <source>Added the &quot;--indent&quot; option to the &quot;.schema&quot; and &quot;.fullschema&quot; commands of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;, to turn on pretty-printing.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェル&lt;/a&gt;の「.schema」および「.fullschema」コマンドに「--indent」オプションを追加し、プリティプリントをオンにしました。</target>
        </trans-unit>
        <trans-unit id="bbed788f58b78e99986ec814826250aabd00b5f8" translate="yes" xml:space="preserve">
          <source>Added the &quot;--newlines&quot; option to the &quot;&lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt;&quot; command to cause U+000a and U+000d characters to be output literally rather than escaped using the &lt;a href=&quot;lang_corefunc#replace&quot;&gt;replace()&lt;/a&gt; function.</source>
          <target state="translated">「&lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt;」コマンドに「--newlines」オプションを追加し、&lt;a href=&quot;lang_corefunc#replace&quot;&gt;replace（）&lt;/a&gt;関数を使用してエスケープするのではなく、U + 000aおよびU + 000d文字をそのまま出力するようにしました。</target>
        </trans-unit>
        <trans-unit id="4d540026cb1605d53141475378c06aed40694ee4" translate="yes" xml:space="preserve">
          <source>Added the &quot;--transaction&quot; option to &lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt;.</source>
          <target state="translated">「--transaction」オプションを追加しました&lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="478aa7b2f50ff9f66c73e09765475623c1296d17" translate="yes" xml:space="preserve">
          <source>Added the &quot;-echo&quot; option to the shell.</source>
          <target state="translated">シェルに&quot;-echo &quot;オプションを追加した。</target>
        </trans-unit>
        <trans-unit id="8299146bfa027dbb559bc3d23457ff833b781801" translate="yes" xml:space="preserve">
          <source>Added the &quot;-heap&quot; option to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;「-heap」オプションを追加</target>
        </trans-unit>
        <trans-unit id="dfd798caa17668bf08f6cc875f2f20a116ec83ed" translate="yes" xml:space="preserve">
          <source>Added the &quot;-sourceid&quot; option to the &quot;sqlite3&quot; command.</source>
          <target state="translated">sqlite3 &quot;コマンドに&quot;-sourceid &quot;オプションを追加した。</target>
        </trans-unit>
        <trans-unit id="20b758a047367c847e236a7d6e0ee3c1b4474249" translate="yes" xml:space="preserve">
          <source>Added the &quot;.auth ON|OFF&quot; command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;「.auth ON | OFF」コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="940607a7aa26e4eb8956b707dcdaed3399cf8e2b" translate="yes" xml:space="preserve">
          <source>Added the &quot;.bail&quot; command to the command-line shell</source>
          <target state="translated">コマンドラインシェルに &quot;.bail&quot; コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="3bc22cc03bccb3a5998ffd80255b3094a2a899a7" translate="yes" xml:space="preserve">
          <source>Added the &quot;.changes ON|OFF&quot; and &quot;.vfsinfo&quot; &lt;a href=&quot;cli#dotcmd&quot;&gt;dot-commands&lt;/a&gt;.</source>
          <target state="translated">「.changes ON | OFF」および「.vfsinfo」&lt;a href=&quot;cli#dotcmd&quot;&gt;ドットコマンドを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="09be07a1075c82f137355e04fdda8ba46481b558" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbconfig&quot; command</source>
          <target state="translated">.dbconfig」コマンドを追加</target>
        </trans-unit>
        <trans-unit id="b530795e109b90659ae4200c9b9587d5f7062df4" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbconfig&quot; command.</source>
          <target state="translated">.dbconfig」コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="71435fab5cdfaf1ac01d7010f6e9ba64d0dc7ff6" translate="yes" xml:space="preserve">
          <source>Added the &quot;.dbinfo&quot; command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;「.dbinfo」コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="e44bed98bc9ffcac82331aa66719ea4a5d15e106" translate="yes" xml:space="preserve">
          <source>Added the &quot;.eqp full&quot; option to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;, that does both &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; and &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; on each statement that is evaluated.</source>
          <target state="translated">評価される各ステートメントで&lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;と&lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLANの&lt;/a&gt;両方を実行する「.eqp full」オプションを&lt;a href=&quot;cli&quot;&gt;コマンドラインシェル&lt;/a&gt;に追加しました。</target>
        </trans-unit>
        <trans-unit id="bc76269d710537ecfa607d27057feb111d2f5738" translate="yes" xml:space="preserve">
          <source>Added the &quot;.eqp trigger&quot; variant of the &quot;.eqp&quot; command</source>
          <target state="translated">.eqp&quot; コマンドの &quot;.eqp trigger&quot; バリアントを追加しました。</target>
        </trans-unit>
        <trans-unit id="4db11420723106d62b97b1cddde4d80a86b6d3b9" translate="yes" xml:space="preserve">
          <source>Added the &quot;.print&quot; command</source>
          <target state="translated">.print」コマンドを追加</target>
        </trans-unit>
        <trans-unit id="2e7ac74eb8ba91a3704bc76910d5bdd08a822466" translate="yes" xml:space="preserve">
          <source>Added the &quot;.timer&quot; command to the CLI</source>
          <target state="translated">CLIに「.timer」コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="e4061075559d28d8e4ed816bdd15c79dc564dc7a" translate="yes" xml:space="preserve">
          <source>Added the &quot;.trace&quot; dot-command to the command-line shell.</source>
          <target state="translated">コマンドラインシェルに &quot;.trace&quot; ドットコマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="aadf72f23a2ada14e4167774049503cfd395b448" translate="yes" xml:space="preserve">
          <source>Added the &quot;.vfslist&quot; &lt;a href=&quot;cli#dotcmd&quot;&gt;dot-command&lt;/a&gt;.</source>
          <target state="translated">「.vfslist」&lt;a href=&quot;cli#dotcmd&quot;&gt;ドットコマンドを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="0d70605741bcb27d28026147f94d6cd602433b0f" translate="yes" xml:space="preserve">
          <source>Added the &quot;&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/dbdata.c&quot;&gt;sqlite_dbdata&lt;/a&gt;&quot; virtual table for extracting raw low-level content from an SQLite database, even a database that is corrupt.</source>
          <target state="translated">破損したデータベースであっても、SQLiteデータベースから未加工の低レベルのコンテンツを抽出するための「&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/dbdata.c&quot;&gt;sqlite_dbdata&lt;/a&gt;」仮想テーブルを追加しました。</target>
        </trans-unit>
        <trans-unit id="d2ea4e959435eb02b355c49cbea6f7bc7d2b3ef5" translate="yes" xml:space="preserve">
          <source>Added the &quot;&lt;a href=&quot;uri#urimodeof&quot;&gt;modeof=&lt;i&gt;filename&lt;/i&gt;&lt;/a&gt;&quot; URI parameter on the unix VFS</source>
          <target state="translated">UNIX VFSに&quot; &lt;a href=&quot;uri#urimodeof&quot;&gt;modeof = &lt;i&gt;filename&lt;/i&gt;&lt;/a&gt; &quot; URIパラメータを追加しました</target>
        </trans-unit>
        <trans-unit id="8283f3eb012777e892f47004d1b706afd30de071" translate="yes" xml:space="preserve">
          <source>Added the &quot;EXTRA&quot; option to &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; that does a sync of the containing directory when a rollback journal is unlinked in DELETE mode, for better durability. The &lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt; compile-time option enables &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=EXTRA&lt;/a&gt; by default.</source>
          <target state="translated">耐久性を高めるために、DELETEモードでロールバックジャーナルがリンク解除されたときに、含まれているディレクトリの&lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;同期&lt;/a&gt;を実行する「EXTRA」オプションをPRAGMA同期に追加しました。&lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt;コンパイル時のオプションが有効に&lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA同期= EXTRAを&lt;/a&gt;デフォルトで。</target>
        </trans-unit>
        <trans-unit id="9e0605f79be49e0270c61cb5b9dfa4647f4728a0" translate="yes" xml:space="preserve">
          <source>Added the &quot;bitvec&quot; object for keeping track of which pages have been journalled. Improves speed and reduces memory consumption, especially for large database files.</source>
          <target state="translated">どのページがジャーナルされたかを追跡するための &quot;bitvec&quot; オブジェクトを追加しました。速度を向上させ、特に大容量のデータベースファイルのメモリ消費を削減しました。</target>
        </trans-unit>
        <trans-unit id="8c6dbbfeafc55121e8fcf541554220fbbb17e684" translate="yes" xml:space="preserve">
          <source>Added the &quot;case_sensitive_like&quot; pragma and the SQLITE_CASE_SENSITIVE_LIKE compile-time option to set its default value to &quot;on&quot;.</source>
          <target state="translated">case_sensitive_like &quot;プラグマとSQLITE_CASE_SENSITIVE_LIKEコンパイル時オプションを追加し、デフォルト値を &quot;on &quot;に設定するようにしました。</target>
        </trans-unit>
        <trans-unit id="eb193ea8cf898f73b58007ba9543b807b3854870" translate="yes" xml:space="preserve">
          <source>Added the &quot;percentile()&quot; function as a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; in the ext/misc subdirectory of the source tree.</source>
          <target state="translated">ソースツリーのext / miscサブディレクトリに&lt;a href=&quot;loadext&quot;&gt;ロード可能な拡張&lt;/a&gt;機能として「percentile（）」関数を追加しました。</target>
        </trans-unit>
        <trans-unit id="5611b9f6138afb0064fc4e62d5516726fcbf742e" translate="yes" xml:space="preserve">
          <source>Added the &quot;transaction&quot; method to the Tcl interface</source>
          <target state="translated">Tclインターフェースに &quot;transaction &quot;メソッドを追加しました。</target>
        </trans-unit>
        <trans-unit id="1bef58aa7bf5fa4ae3d0cfd6f4672ac479bf0763" translate="yes" xml:space="preserve">
          <source>Added the &quot;unix-excl&quot; built-in VFS on unix and unix-like platforms.</source>
          <target state="translated">unixおよびunixライクなプラットフォーム上での &quot;unix-excl &quot;ビルトインVFSを追加しました。</target>
        </trans-unit>
        <trans-unit id="fd67f2b6106389654227f8b92e474aef42afe028" translate="yes" xml:space="preserve">
          <source>Added the &quot;win32-none&quot; VFS, analogous to the &quot;unix-none&quot; VFS, that works like the default &quot;win32&quot; VFS except that it ignores all file locks.</source>
          <target state="translated">unix-none&quot; VFS に似た &quot;win32-none&quot; VFS を追加しました。</target>
        </trans-unit>
        <trans-unit id="badfd05b3b5c28b37d6844c2c9da5b634785d36b" translate="yes" xml:space="preserve">
          <source>Added the --append option to the &quot;.backup&quot; command.</source>
          <target state="translated">.backup &quot;コマンドに--appendオプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="46228df7212ca1bca7bba47d433ba46ed3b8c9d9" translate="yes" xml:space="preserve">
          <source>Added the --enable-editline and --enable-static-shell options to the various autoconf-generated configure scripts.</source>
          <target state="translated">自動生成された様々な configure スクリプトに --enable-editline と --enable-static-shell オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="40bfc9f24ea3e7bc19fd8e19fb2ea5316c41113c" translate="yes" xml:space="preserve">
          <source>Added the --new option to the &quot;.open&quot; dot-command, causing any prior content in the database to be purged prior to opening.</source>
          <target state="translated">.open&quot; ドットコマンドに --new オプションを追加し、データベース内の以前のコンテンツを開く前にパージするようにしました。</target>
        </trans-unit>
        <trans-unit id="98f31449b9f6901e8d5bc307f552648c8c9f60ad" translate="yes" xml:space="preserve">
          <source>Added the -A command-line option to the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; to make it easier to manage &lt;a href=&quot;sqlar&quot;&gt;SQLite Archive files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sqlar&quot;&gt;SQLiteアーカイブファイルの&lt;/a&gt;管理を容易にするために、-Aコマンドラインオプションを&lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;に追加しました。</target>
        </trans-unit>
        <trans-unit id="3ab6c1327f76f890e520a0110e775c0d686745d7" translate="yes" xml:space="preserve">
          <source>Added the -D&lt;a href=&quot;compile#max_memory&quot;&gt;SQLITE_MAX_MEMORY&lt;/a&gt;=</source>
          <target state="translated">-D &lt;a href=&quot;compile#max_memory&quot;&gt;SQLITE_MAX_MEMORY&lt;/a&gt; =を追加しました</target>
        </trans-unit>
        <trans-unit id="5367ce2c93bb38a095b36e1fed991b9fb4d889ac" translate="yes" xml:space="preserve">
          <source>Added the -returntype option to the &lt;a href=&quot;tclsqlite#function&quot;&gt;function method&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tclsqlite#function&quot;&gt;functionメソッドに&lt;/a&gt; -returntypeオプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="e93bb7d2fcd01a6f436bdc9a5880040e6f97639d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;bytecodevtab&quot;&gt;bytecode virtual table&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;bytecodevtab&quot;&gt;バイトコード仮想テーブルを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="0c8fe56b695cf00317baad779130870ca95a81df" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;hot-backup interface&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;ホットバックアップインターフェースを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="b9a89f10c162ecc008c3e13971bca30f64a17a50" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob()&lt;/a&gt; API and the &lt;a href=&quot;lang_expr#zeroblob&quot;&gt;zeroblob()&lt;/a&gt; SQL function.</source>
          <target state="translated">&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob（）&lt;/a&gt; APIと&lt;a href=&quot;lang_expr#zeroblob&quot;&gt;zeroblob（）&lt;/a&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="77121aeb8c2408e6e7a1a0e10e0b563a3977d08d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt; interface to allow an existing &lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt; object to be rebound to a new row.</source>
          <target state="translated">&lt;a href=&quot;c3ref/blob_reopen&quot;&gt;sqlite3_blob_reopen（）&lt;/a&gt;インターフェースが追加され、既存の&lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt;オブジェクトを新しい行に再バインドできるようになりました。</target>
        </trans-unit>
        <trans-unit id="55608cf2764566ce89f4e1034e4a2042979d3f0d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_checkpoint_full&quot;&gt;SQLITE_CHECKPOINT_TRUNCATE&lt;/a&gt; option to the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; interface, with corresponding enhancements to &lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;PRAGMA wal_checkpoint&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_checkpoint_full&quot;&gt;SQLITE_CHECKPOINT_TRUNCATE&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;インターフェースに追加され、対応する&lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;PRAGMA wal_checkpointが&lt;/a&gt;強化されました。</target>
        </trans-unit>
        <trans-unit id="24795c7f167ca4977e5c234dc2cbe0a63579121e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt; verb to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; to control the default lookaside configuration.</source>
          <target state="translated">デフォルトのlookaside構成を制御するために、&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt;動詞を&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;に追加しました。</target>
        </trans-unit>
        <trans-unit id="5cb84f5843071fd6a0d0c50960687d9f19b751bd" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpcachehdrsz&quot;&gt;SQLITE_CONFIG_PCACHE_HDRSZ&lt;/a&gt; option to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; which makes it easier for applications to determine the appropriate amount of memory for use with &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpcachehdrsz&quot;&gt;SQLITE_CONFIG_PCACHE_HDRSZ&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）に&lt;/a&gt;追加されました。これにより、アプリケーションが&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;で使用する適切なメモリ量を簡単に決定できるようになります。</target>
        </trans-unit>
        <trans-unit id="78ab457ef12e647bf4dc7ecead1c36d5c4673d12" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; option which disables the ability to create corrupt database files using ordinary SQL.</source>
          <target state="translated">通常のSQLを使用して破損したデータベースファイルを作成する機能を無効にする&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="6e71c54907adbe78a8a28fd46aaebb36d69493c1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;SQLITE_DBCONFIG_DQS_DDL&lt;/a&gt; actions to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; for activating and deactivating the &lt;a href=&quot;quirks#dblquote&quot;&gt;double-quoted string literal&lt;/a&gt; misfeature. Both default to &quot;on&quot; for legacy compatibility, but developers are encouraged to turn them &quot;off&quot;, perhaps using the &lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS=0&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt;および&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;SQLITE_DBCONFIG_DQS_DDL&lt;/a&gt;アクションを&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;に追加し、&lt;a href=&quot;quirks#dblquote&quot;&gt;二重引用符で囲まれた文字列リテラルの&lt;/a&gt;誤動作をアクティブ化および非アクティブ化しました。レガシー互換性のために両方ともデフォルトで「オン」になっていますが、開発者は、おそらく&lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS = 0&lt;/a&gt;コンパイル時オプションを使用して、それらを「オフ」にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d7ad0ef8ac2497ed1aa5f01e1b664e81567669d2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenablefts3tokenizer&quot;&gt;SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; which allows the two-argument version of the &lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer()&lt;/a&gt; SQL function to be enabled or disabled at run-time.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenablefts3tokenizer&quot;&gt;SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER&lt;/a&gt;オプションを&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）に&lt;/a&gt;追加しました。これにより、引数が2つのバージョンの&lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer（）&lt;/a&gt; SQL関数を実行時に有効または無効にできます。</target>
        </trans-unit>
        <trans-unit id="d6416a3ba6c9f666e4baee452d3cb91764a92165" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfignockptonclose&quot;&gt;SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfignockptonclose&quot;&gt;SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="692b08dd48ff9799615b16dfbc27375f3082dcfb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigresetdatabase&quot;&gt;SQLITE_DBCONFIG_RESET_DATABASE&lt;/a&gt; option to the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigresetdatabase&quot;&gt;SQLITE_DBCONFIG_RESET_DATABASE&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt; APIに追加されました。</target>
        </trans-unit>
        <trans-unit id="c327f817896429826daa4e2c7ed4c07b63ba0c6d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; connection setting which is also controllable via the new &lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;trusted_schema pragma&lt;/a&gt; and at compile-time using the &lt;a href=&quot;compile#trusted_schema&quot;&gt;-DSQLITE_TRUSTED_SCHEMA&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt;接続設定が追加されました。これは、新しい&lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;trusted_schemaプラグマ&lt;/a&gt;を介して、およびコンパイル時に&lt;a href=&quot;compile#trusted_schema&quot;&gt;-DSQLITE_TRUSTED_SCHEMA&lt;/a&gt;コンパイル時オプションを使用して制御することもできます。</target>
        </trans-unit>
        <trans-unit id="a6daec8b1f14932a0265d49a93345e89fdffd9a4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigwritableschema&quot;&gt;SQLITE_DBCONFIG_WRITABLE_SCHEMA&lt;/a&gt; verb for the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; interface, that does the same work as &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema&lt;/a&gt; without using the SQL parser.</source>
          <target state="translated">SQLパーサーを使用せずに&lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema&lt;/a&gt;と同じ機能を実行する&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;インターフェースの&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigwritableschema&quot;&gt;SQLITE_DBCONFIG_WRITABLE_SCHEMA&lt;/a&gt; verbを追加しました。</target>
        </trans-unit>
        <trans-unit id="5d750e0c7bb7bb7bec2d0c2a829768642cb54851" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachespill&quot;&gt;SQLITE_DBSTATUS_CACHE_SPILL&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; for reporting the number of cache spills that have occurred.</source>
          <target state="translated">発生したキャッシュスピルの数を報告するために、&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscachespill&quot;&gt;SQLITE_DBSTATUS_CACHE_SPILL&lt;/a&gt;オプションを&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）に&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="53f2be88cd88e0e32064f44c1119c7bd8eba616a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheusedshared&quot;&gt;SQLITE_DBSTATUS_CACHE_USED_SHARED&lt;/a&gt; option to &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuscacheusedshared&quot;&gt;SQLITE_DBSTATUS_CACHE_USED_SHARED&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="d572c740f2c606b38c1537872052780a90a1967b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidehit&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_HIT&lt;/a&gt;, &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemisssize&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE&lt;/a&gt;, and &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemissfull&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL&lt;/a&gt; options for the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;インターフェースに&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidehit&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_HIT&lt;/a&gt;、&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemisssize&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE&lt;/a&gt;、および&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatuslookasidemissfull&quot;&gt;SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL&lt;/a&gt;オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="8ff540364583dcc44fa1ef2c4aadebbebd6864c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag for &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; to prevent those functions from being used inside triggers and views.</source>
          <target state="translated">&lt;a href=&quot;c3ref/create_function&quot;&gt;アプリケーション定義のSQL関数&lt;/a&gt;に&lt;a href=&quot;c3ref/c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt;フラグが追加され、これらの関数がトリガーおよびビュー内で使用されないようになりました。</target>
        </trans-unit>
        <trans-unit id="f7600d6d8a603816feb6b034aac51cea89c66055" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_deterministic#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag for &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; to prevent those functions from being used inside triggers and views.</source>
          <target state="translated">&lt;a href=&quot;appfunc&quot;&gt;アプリケーション定義のSQL関数&lt;/a&gt;に&lt;a href=&quot;c3ref/c_deterministic#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt;フラグを追加して、これらの関数がトリガーおよびビュー内で使用されないようにしました。</target>
        </trans-unit>
        <trans-unit id="1edde08f9646ef2c3e76ad318411c8fb6e51b64f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlbusyhandler&quot;&gt;SQLITE_FCNTL_BUSYHANDLER&lt;/a&gt; file control, used to allow VFS implementations to get access to the busy handler callback.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlbusyhandler&quot;&gt;SQLITE_FCNTL_BUSYHANDLER&lt;/a&gt;ファイルコントロールが追加されました。これは、VFS実装がビジーハンドラーコールバックにアクセスできるようにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="c39ae96ebc2e88dd6b2cd7e2fc1b875ebe3e289c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlchunksize&quot;&gt;SQLITE_FCNTL_CHUNK_SIZE&lt;/a&gt; verb to the &lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control()&lt;/a&gt; interface for both unix and windows, to cause database files to grow in large chunks in order to reduce disk fragmentation.</source>
          <target state="translated">unixとwindowsの両方の&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlchunksize&quot;&gt;SQLITE_FCNTL_CHUNK_SIZE&lt;/a&gt; verbを&lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control（）&lt;/a&gt;インターフェースに追加し、ディスクの断片化を減らすためにデータベースファイルを大きなチャンクに拡張しました。</target>
        </trans-unit>
        <trans-unit id="fe950f2e1aef661f6ce9192c747caf6f073c554c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntldataversion&quot;&gt;SQLITE_FCNTL_DATA_VERSION&lt;/a&gt; file-control.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntldataversion&quot;&gt;SQLITE_FCNTL_DATA_VERSION&lt;/a&gt;ファイルコントロールが追加されました。</target>
        </trans-unit>
        <trans-unit id="c419db6b4698987a8e91b919db8b97ecb28f7972" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlfilepointer&quot;&gt;SQLITE_FCNTL_FILE_POINTER&lt;/a&gt; option to &lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlfilepointer&quot;&gt;SQLITE_FCNTL_FILE_POINTER&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/file_control&quot;&gt;sqlite3_file_control（）に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="acf39bdbea0f8885f79a39d332adbbca1cd2395f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntloverwrite&quot;&gt;SQLITE_FCNTL_OVERWRITE&lt;/a&gt; file-control by which the SQLite core indicates to the VFS that the current transaction will overwrite the entire database file.</source>
          <target state="translated">現在のトランザクションがデータベースファイル全体を上書きすることをSQLiteコアがVFSに示す&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntloverwrite&quot;&gt;SQLITE_FCNTL_OVERWRITE&lt;/a&gt;ファイルコントロールを追加しました。</target>
        </trans-unit>
        <trans-unit id="872bfec9dc1a2fcffd8687a9f2be6d01ed62715c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control, giving &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations the ability to add new &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements or to override built-in PRAGMAs.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt;ファイルコントロールが追加され、&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;実装で新しい&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;ステートメントを追加したり、組み込みのPRAGMAを上書きしたりできるようになりました。</target>
        </trans-unit>
        <trans-unit id="8a08888203226d0cb933e2381c131bd134f3e0ba" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt; file control opcode.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlwin32gethandle&quot;&gt;SQLITE_FCNTL_WIN32_GET_HANDLE&lt;/a&gt;ファイル制御オペコードが追加されました。</target>
        </trans-unit>
        <trans-unit id="2fe9d20a7ecb27f21ed97321987de71e7453d365" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt; bit to the set of bits that can be returned by the xDeviceCharacteristics method of a &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt;ビットが、&lt;a href=&quot;vfs&quot;&gt;VFSの&lt;/a&gt; xDeviceCharacteristicsメソッドによって返されるビットのセットに追加されました。</target>
        </trans-unit>
        <trans-unit id="7f843fb220ff24f90a61313273ce94ebe78eaef3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt; option to &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_threads&quot;&gt;PRAGMA threads&lt;/a&gt; command for configuring the number of available worker threads.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit（）&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_threads&quot;&gt;PRAGMAスレッド&lt;/a&gt;コマンドに追加され、使用可能なワーカースレッドの数を構成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="c8e1dea17a78ee539422e7da11345abec026d26c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_VFS1&lt;/a&gt; static mutex and use it in the Windows &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_VFS1&lt;/a&gt;静的ミューテックスを追加し、Windows &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;で使用します。</target>
        </trans-unit>
        <trans-unit id="c9f5d53ac1d13ed7fd23ea322e4248752246fa8d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; and &lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_PRIVATECACHE&lt;/a&gt; flags for &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; used to override the global &lt;a href=&quot;sharedcache&quot;&gt;shared cache mode&lt;/a&gt; settings for individual database connections.</source>
          <target state="translated">個々のデータベース接続のグローバル&lt;a href=&quot;sharedcache&quot;&gt;共有キャッシュモード&lt;/a&gt;設定を上書きするために使用される&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;の&lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt;および&lt;a href=&quot;c3ref/c_open_autoproxy&quot;&gt;SQLITE_OPEN_PRIVATECACHE&lt;/a&gt;フラグを追加しました。</target>
        </trans-unit>
        <trans-unit id="ee6f319a0408b5352c4ea820f41707cd9f47de22" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_prepare_normalize#sqlitepreparenovtab&quot;&gt;SQLITE_PREPARE_NO_VTAB&lt;/a&gt; option to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;. Use that option to prevent circular references to &lt;a href=&quot;vtab#xshadowname&quot;&gt;shadow tables&lt;/a&gt; from causing resource leaks.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_prepare_normalize#sqlitepreparenovtab&quot;&gt;SQLITE_PREPARE_NO_VTAB&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3（）に&lt;/a&gt;追加されました。このオプションを使用して、&lt;a href=&quot;vtab#xshadowname&quot;&gt;シャドウテーブル&lt;/a&gt;への循環参照がリソースリークを引き起こすのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="98b481e9d7f3d70cd2eecd21d70129ae31ed1963" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusvmstep&quot;&gt;SQLITE_STMTSTATUS_VM_STEP&lt;/a&gt; option to &lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_stmtstatus_counter#sqlitestmtstatusvmstep&quot;&gt;SQLITE_STMTSTATUS_VM_STEP&lt;/a&gt;オプションが&lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status（）に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="173e2525ec3884e959b6bd821ed96525c786e2b2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_BYTEORDER&lt;/a&gt; test control.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_BYTEORDER&lt;/a&gt;テストコントロールが追加されました。</target>
        </trans-unit>
        <trans-unit id="3d008e63c41f50a70b14a41ab55032164f43f128" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_EXPLAIN_STMT&lt;/a&gt; test-control option with the &lt;a href=&quot;compile#enable_tree_explain&quot;&gt;SQLITE_ENABLE_TREE_EXPLAIN&lt;/a&gt; compile-time option to enable the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; to display ASCII-art parse trees of SQL statements that it processes, for debugging and analysis.</source>
          <target state="translated">追加しました&lt;a href=&quot;c3ref/c_testctrl_always&quot;&gt;SQLITE_TESTCTRL_EXPLAIN_STMT&lt;/a&gt;と、テスト制御オプション&lt;a href=&quot;compile#enable_tree_explain&quot;&gt;SQLITE_ENABLE_TREE_EXPLAIN&lt;/a&gt;有効にするにはコンパイル時のオプション&lt;a href=&quot;cli&quot;&gt;のコマンドラインシェルを&lt;/a&gt;デバッグし、分析のために、それが処理するSQL文の表示ASCII最先端の解析木にを。</target>
        </trans-unit>
        <trans-unit id="6d895d26ed7e55d69a402b7a4c87a8b6ef2550de" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="bfc2c5299cf593550d927e4ff94e7186fd8be0ca" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get()&lt;/a&gt; interfaces as well as the &lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt; and the &lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; SQL functions.</source>
          <target state="translated">&lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_used（）&lt;/a&gt;および&lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get（）&lt;/a&gt;インターフェース、&lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_optionsプラグマ&lt;/a&gt;、&lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used（）&lt;/a&gt;および&lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get（）&lt;/a&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="9fb684d2d6c2147c74c80743a4ba8731d23977f3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface for doing run-time configuration of the entire SQLite library.</source>
          <target state="translated">SQLiteライブラリ全体の実行時設定を行うための&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;インターフェースを追加しました。</target>
        </trans-unit>
        <trans-unit id="ec41ecd622afa734ab8f9b12f590344b751a2786" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_create_filename()&lt;/a&gt;, &lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_free_filename()&lt;/a&gt;, and &lt;a href=&quot;c3ref/database_file_object&quot;&gt;sqlite3_database_file_object()&lt;/a&gt; interfaces to better support of &lt;a href=&quot;vfs#shim&quot;&gt;VFS shim&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;vfs#shim&quot;&gt;VFSシムの&lt;/a&gt;実装をより適切にサポートするために、&lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_create_filename（）&lt;/a&gt;、&lt;a href=&quot;c3ref/create_filename&quot;&gt;sqlite3_free_filename（）&lt;/a&gt;、および&lt;a href=&quot;c3ref/database_file_object&quot;&gt;sqlite3_database_file_object（）&lt;/a&gt;インターフェイスが追加されました。</target>
        </trans-unit>
        <trans-unit id="ed3d70e2882ec52d0c7e2a7601fe732995c7a8e5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function_v2()&lt;/a&gt; interface that includes a destructor callback.</source>
          <target state="translated">デストラクタコールバックを含む&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function_v2（）&lt;/a&gt;インターフェースを追加しました。</target>
        </trans-unit>
        <trans-unit id="32fc735cb1d9ab9a07f352a1fc25b9ea800e944b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_cacheflush&quot;&gt;sqlite3_db_cacheflush()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_cacheflush&quot;&gt;sqlite3_db_cacheflush（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="44cee0699cbf54959614bd6a182f20329176bd39" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; and &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt; interfaces for controlling and monitoring the lookaside allocator separately on each &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;.</source>
          <target state="translated">各&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続で&lt;/a&gt;個別にlookasideアロケータを制御および監視するための&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;および&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;インターフェースを追加しました。</target>
        </trans-unit>
        <trans-unit id="c14a9e833df50e1b6ce64060f4e3b591d691bb2f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableloadextension&quot;&gt;SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION&lt;/a&gt;) interface which allows the &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; C-API to be enabled while keeping the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension()&lt;/a&gt; SQL function disabled for security.</source>
          <target state="translated">追加されました&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;（デシベル、&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableloadextension&quot;&gt;SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION&lt;/a&gt;ことができます）インターフェース&lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt; C-APIを有効にすることを維持しながら&lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extensionを（）&lt;/a&gt;セキュリティのため無効にSQL関数を。</target>
        </trans-unit>
        <trans-unit id="071c285856222e5eb7858ec7e945402304af9915" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_filename&quot;&gt;sqlite3_db_filename()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_filename&quot;&gt;sqlite3_db_filename（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="0988b37104db6710779e2dd00393ccc8aed4f156" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_mutex&quot;&gt;sqlite3_db_mutex()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_mutex&quot;&gt;sqlite3_db_mutex（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="99b915781990b7bab55347af3d7784e6f66b997a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_readonly&quot;&gt;sqlite3_db_readonly()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_readonly&quot;&gt;sqlite3_db_readonly（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="1689be755f4b5947383c0fa1c767961ce85ec869" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt; interface and the &lt;a href=&quot;pragma#pragma_shrink_memory&quot;&gt;shrink_memory pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/db_release_memory&quot;&gt;sqlite3_db_release_memory（）&lt;/a&gt;インターフェースと&lt;a href=&quot;pragma#pragma_shrink_memory&quot;&gt;shrink_memoryプラグマを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="d06e21c2743772c66eb0de3135ffb4cabfd2528d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_errstr()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_errstr（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="79f9185a6e3e6c23fc4569ebe588283d6a971b66" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_extended_errcode()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/errcode&quot;&gt;sqlite3_extended_errcode（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="800b59c31eab1692fa422187bd90b32b14e1376e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64()&lt;/a&gt; interface as a replacement for &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit()&lt;/a&gt;.</source>
          <target state="translated">加え&lt;a href=&quot;c3ref/hard_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64（）&lt;/a&gt;の代わりにインタフェースを&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1353ba42736589cda5eaab5595079f29c695d72f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize()&lt;/a&gt; and &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_initialize（）&lt;/a&gt;および&lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_shutdown（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="dd7f42008f5ea2ae13832ff2fc538b92619a2aa1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log()&lt;/a&gt; interface together with the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglog&quot;&gt;SQLITE_CONFIG_LOG&lt;/a&gt; verb to &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt;. The &quot;.log&quot; command is added to the &lt;a href=&quot;cli&quot;&gt;Command Line Interface&lt;/a&gt;.</source>
          <target state="translated">追加しました&lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log（）&lt;/a&gt;と一緒にインターフェイスを&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglog&quot;&gt;SQLITE_CONFIG_LOG&lt;/a&gt;に動詞&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（） &lt;/a&gt;。「.log」コマンドが&lt;a href=&quot;cli&quot;&gt;コマンドラインインターフェースに&lt;/a&gt;追加されます。</target>
        </trans-unit>
        <trans-unit id="0f3b9f436d3aca81a329352d555edcf6d2fc53ab" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_vsnprintf()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_vsnprintf（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="cb1e02c2bfcb32dedecbd7d74f284c573c13e3ce" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/next_stmt&quot;&gt;sqlite3_next_stmt()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/next_stmt&quot;&gt;sqlite3_next_stmt（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="3a526df89839bb699bba5ca5c33ef0946cc371fa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="3cdad7a02f932844f1d5aad978ef31e8280c723b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt; APIを追加しました。</target>
        </trans-unit>
        <trans-unit id="f89e059472e4cdf3b79424c462aeb1d9f42e7450" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt; and &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; interfaces with the extra &quot;prepFlags&quot; parameters.</source>
          <target state="translated">&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;および&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare16_v3（）&lt;/a&gt;インターフェイスが追加の「prepFlags」パラメーターとともに追加されました。</target>
        </trans-unit>
        <trans-unit id="8f79e632c84dd8f613db0c9edb744b3211ad41ad" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_zeroblob64()&lt;/a&gt; and &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob64()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_zeroblob64（）&lt;/a&gt;および&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_zeroblob64（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="2ec059ca77f534e2ad1c9da5da7a07bfe515b8e8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; interface and use the new interface in the &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt;, and &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; extensions to ensure that the &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid()&lt;/a&gt; interface always returns reasonable values.</source>
          <target state="translated">&lt;a href=&quot;c3ref/set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;インターフェースを追加し、&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;、&lt;a href=&quot;fts3#fts4&quot;&gt;FTS4&lt;/a&gt;、および&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;拡張機能の新しいインターフェースを使用して、&lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid（）&lt;/a&gt;インターフェースが常に適切な値を返すようにします。</target>
        </trans-unit>
        <trans-unit id="0499000ae920f692c6c10ff730922e71f2175340" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/soft_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64()&lt;/a&gt; interface as a replacement for &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit()&lt;/a&gt;.</source>
          <target state="translated">加え&lt;a href=&quot;c3ref/soft_heap_limit64&quot;&gt;sqlite3_soft_heap_limit64（）&lt;/a&gt;の代わりにインタフェースを&lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bed7ca4c56c731b0baef64d49ccf82b79e764321" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status()&lt;/a&gt; interface used for querying run-time status information about the overall SQLite library and its subsystems.</source>
          <target state="translated">SQLiteライブラリ全体とそのサブシステムに関するランタイムステータス情報のクエリに使用する&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status（）&lt;/a&gt;インターフェイスを追加しました。</target>
        </trans-unit>
        <trans-unit id="d388429eb7d67d2eee28cd2e532f95aff575159a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status64()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status64（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="d0c02d677fed007a0f3b79b5d1f2d07fc18c142f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_busy&quot;&gt;sqlite3_stmt_busy()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/stmt_busy&quot;&gt;sqlite3_stmt_busy（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="1a521c795e189c1663c9a6d75d13d86189164b4d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_readonly&quot;&gt;sqlite3_stmt_readonly()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/stmt_readonly&quot;&gt;sqlite3_stmt_readonly（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="1fef1d855e862457ed32ca48c067aa07064074f2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus()&lt;/a&gt; interface, available only when compiled with &lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus（）&lt;/a&gt;インターフェースが追加され&lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;ました&lt;/a&gt;。これは、SQLITE_ENABLE_STMT_SCANSTATUSでコンパイルした場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="ab35212654f74bbb4e759f54b77da2dec843228c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt; interface for performance monitoring.</source>
          <target state="translated">パフォーマンス監視のための&lt;a href=&quot;c3ref/stmt_status&quot;&gt;sqlite3_stmt_status（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="b17c7d56b39fa08e8e4f793f514bff570e85da50" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_stricmp()&lt;/a&gt; interface as a counterpart to &lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_strnicmp()&lt;/a&gt;.</source>
          <target state="translated">加え&lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_stricmp（）&lt;/a&gt;への対応などのインタフェースを&lt;a href=&quot;c3ref/stricmp&quot;&gt;sqlite3_strnicmp（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36ab51188a3976b29c35159f06ed161f1e35db56" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/strlike&quot;&gt;sqlite3_strlike（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="e6ec1296a97b3b974db4a08e61f32e7aafc39768" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/system_errno&quot;&gt;sqlite3_system_errno()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/system_errno&quot;&gt;sqlite3_system_errno（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="5c3ccb20e7e108f7d767e7d7513fa5c98ba8b126" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="b9d150faf203ca09b9bbbc984a5975f99628a02e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_boolean()&lt;/a&gt; and &lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_int64()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_boolean（）&lt;/a&gt;および&lt;a href=&quot;c3ref/uri_boolean&quot;&gt;sqlite3_uri_int64（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="3426443574d8d278622270eb29b6c8bc749bbfa3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_frombind()&lt;/a&gt; API for determining if the argument to an SQL function is from a &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameter&lt;/a&gt;.</source>
          <target state="translated">SQL関数への引数が&lt;a href=&quot;lang_expr#varparam&quot;&gt;バインドされたパラメーター&lt;/a&gt;からのものかどうかを判別するための&lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_frombind（）&lt;/a&gt; APIを追加しました。</target>
        </trans-unit>
        <trans-unit id="43b7debc2fe468faedbcf826ae56b984b1bd24d7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_dup()&lt;/a&gt; and &lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_free()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_dup（）&lt;/a&gt;および&lt;a href=&quot;c3ref/value_dup&quot;&gt;sqlite3_value_free（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="daa32da23e9524ac42660361582e6acf7f0d9ba3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype()&lt;/a&gt; and &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype()&lt;/a&gt; interfaced (used by &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt;).</source>
          <target state="translated">インターフェース化された&lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype（）&lt;/a&gt;および&lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype（）を&lt;/a&gt;追加しました（&lt;a href=&quot;json1&quot;&gt;json1拡張&lt;/a&gt;によって使用されます）。</target>
        </trans-unit>
        <trans-unit id="e23d8810bd1d174b58a21d6487a29fbd4ec86121" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/vtab_collation&quot;&gt;sqlite3_vtab_collation()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/vtab_collation&quot;&gt;sqlite3_vtab_collat​​ion（）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="a4ac561108af405d7aa448c97e428307506c4b7a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/vtab_nochange&quot;&gt;sqlite3_vtab_nochange()&lt;/a&gt; and &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_nochange()&lt;/a&gt; interfaces to help virtual table implementations optimize UPDATE operations.</source>
          <target state="translated">&lt;a href=&quot;c3ref/vtab_nochange&quot;&gt;sqlite3_vtab_nochange（）&lt;/a&gt;および&lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_nochange（）&lt;/a&gt;インターフェースを追加して、仮想テーブルの実装がUPDATE操作を最適化できるようにしました。</target>
        </trans-unit>
        <trans-unit id="ddf120a30cf931bf5d51052ad2c827a892d71cac" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; interface and enhanced the &lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;wal_checkpoint pragma&lt;/a&gt; to support blocking checkpoints.</source>
          <target state="translated">&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;インターフェースが追加され、ブロッキングチェックポイントをサポートするように&lt;a href=&quot;pragma#pragma_wal_checkpoint&quot;&gt;wal_checkpointプラグマ&lt;/a&gt;が拡張されました。</target>
        </trans-unit>
        <trans-unit id="d0929c2ba69cbc1ab90381ef901ed1c43220d3b7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;carray&quot;&gt;carray() table-valued function&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;carray&quot;&gt;carray（）テーブル値関数&lt;/a&gt;拡張が追加されました。</target>
        </trans-unit>
        <trans-unit id="4198af2bb2d3a6a2e5d9e717e487ffdb864f387d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#editfunc&quot;&gt;edit() SQL function&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli#editfunc&quot;&gt;edit（）SQL関数が&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="474818afcad8b8e66370e87650be26268e65480a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#exexcel*&quot;&gt;.excel command&lt;/a&gt; to simplify exporting database content to a spreadsheet.</source>
          <target state="translated">&lt;a href=&quot;cli#exexcel*&quot;&gt;.excelコマンド&lt;/a&gt;が追加され、データベースコンテンツをスプレッドシートに簡単にエクスポートできるようになりました。</target>
        </trans-unit>
        <trans-unit id="fd0d090262bc2f05e4866375d263ebdd0c0c20b9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#fullschema&quot;&gt;.fullschema&lt;/a&gt; dot-command to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli#fullschema&quot;&gt;.fullschema&lt;/a&gt; dot-commandを&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="efaa065fc6ae309d6f393706b579d1948716e05b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;cli#sha3sum&quot;&gt;.sha3sum dot-command&lt;/a&gt; and the &lt;a href=&quot;cli#selftest&quot;&gt;.selftest dot-command&lt;/a&gt; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cli#sha3sum&quot;&gt;.sha3sumドットコマンド&lt;/a&gt;と&lt;a href=&quot;cli#selftest&quot;&gt;.selftestドットコマンド&lt;/a&gt;を&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;追加しました</target>
        </trans-unit>
        <trans-unit id="e6c65b9a76c93d9f52da8c8997329f7ae8313b1d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#allow_uri_authority&quot;&gt;SQLITE_ALLOW_URI_AUTHORITY&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#allow_uri_authority&quot;&gt;SQLITE_ALLOW_URI_AUTHORITY&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="e6ce6e1df1cafb18c2d838e2c4bcdbb99f313309" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="e862d7c1b81982153f4eb3d2e608a91a4403f0a9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt; and &lt;a href=&quot;compile#default_wal_synchronous&quot;&gt;SQLITE_DEFAULT_WAL_SYNCHRONOUS&lt;/a&gt; compile-time options. The &lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt; compile-time option replaces the &lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt; option, which is no longer supported.</source>
          <target state="translated">&lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt;および&lt;a href=&quot;compile#default_wal_synchronous&quot;&gt;SQLITE_DEFAULT_WAL_SYNCHRONOUS&lt;/a&gt;コンパイル時オプションが追加されました。&lt;a href=&quot;compile#default_synchronous&quot;&gt;SQLITE_DEFAULT_SYNCHRONOUS&lt;/a&gt;コンパイル時のオプションは、置き換え&lt;a href=&quot;compile#extra_durable&quot;&gt;SQLITE_EXTRA_DURABLE&lt;/a&gt;サポートされなくなったオプションを、。</target>
        </trans-unit>
        <trans-unit id="0d9939088e42394a02853dfc4d6f72c7cbfcfabb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#direct_overflow_read&quot;&gt;SQLITE_DIRECT_OVERFLOW_READ&lt;/a&gt; compile-time option, causing &lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;overflow pages&lt;/a&gt; to be read directly from the database file, bypassing the &lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;page cache&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;compile#direct_overflow_read&quot;&gt;SQLITE_DIRECT_OVERFLOW_READ&lt;/a&gt;コンパイル時オプションが追加され、&lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;ページキャッシュを&lt;/a&gt;バイパスして、&lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;オーバーフローページ&lt;/a&gt;がデータベースファイルから直接読み取られるようになりました。</target>
        </trans-unit>
        <trans-unit id="89be077605abd75e22c5ffc02c2f38f9fadca22f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#disable_fts4_deferred&quot;&gt;SQLITE_DISABLE_FTS4_DEFERRED&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#disable_fts4_deferred&quot;&gt;SQLITE_DISABLE_FTS4_DEFERRED&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="809eece43957fbb9e8168262d4e0fe553c274d57" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_api_armor&quot;&gt;SQLITE_ENABLE_API_ARMOR&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#enable_api_armor&quot;&gt;SQLITE_ENABLE_API_ARMOR&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="78acf1f8c9551ddf3a305b4527973a912eca40df" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_null_trim&quot;&gt;SQLITE_ENABLE_NULL_TRIM&lt;/a&gt; compile-time option, which can result in significantly smaller database files for some applications, at the risk of being incompatible with older versions of SQLite.</source>
          <target state="translated">&lt;a href=&quot;compile#enable_null_trim&quot;&gt;SQLITE_ENABLE_NULL_TRIM&lt;/a&gt;コンパイル時オプションを追加しました。これにより、一部のアプリケーションではデータベースファイルが大幅に小さくなり、SQLiteの古いバージョンとの互換性がなくなるリスクがあります。</target>
        </trans-unit>
        <trans-unit id="9cc7192a68013b4ccfb34fc5fa843f664f068838" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#enable_unknown_sql_function&quot;&gt;SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION&lt;/a&gt; compile-time option and turned that option on by default when building the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;compile#enable_unknown_sql_function&quot;&gt;SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION&lt;/a&gt;コンパイル時オプションを追加し、&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルの&lt;/a&gt;ビルド時にデフォルトでそのオプションをオンにしました。</target>
        </trans-unit>
        <trans-unit id="e26774dce1b145c5b9b287b32dbb4c00e6fe2392" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#fts3_max_expr_depth&quot;&gt;SQLITE_FTS3_MAX_EXPR_DEPTH&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#fts3_max_expr_depth&quot;&gt;SQLITE_FTS3_MAX_EXPR_DEPTH&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="39f704cba224d0630f060896cdfabf87b14693b5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#have_isnan&quot;&gt;SQLITE_HAVE_ISNAN&lt;/a&gt; compile-time option which will cause the isnan() function from the standard math library to be used instead of SQLite's own home-brew NaN checker.</source>
          <target state="translated">SQLite独自の自作NaNチェッカーの代わりに標準の数学ライブラリのisnan（）関数が使用されるようにする&lt;a href=&quot;compile#have_isnan&quot;&gt;SQLITE_HAVE_ISNAN&lt;/a&gt;コンパイル時オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="558383d2bbd0eb67a29332971af16389f89345ef" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#like_doesnt_match_blobs&quot;&gt;SQLITE_LIKE_DOESNT_MATCH_BLOBS&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#like_doesnt_match_blobs&quot;&gt;SQLITE_LIKE_DOESNT_MATCH_BLOBS&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="84daf3b5302c6fe472e4c66d1c3fa77e1f119885" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#minimum_file_descriptor&quot;&gt;SQLITE_MINIMUM_FILE_DESCRIPTOR&lt;/a&gt; compile-time option</source>
          <target state="translated">&lt;a href=&quot;compile#minimum_file_descriptor&quot;&gt;SQLITE_MINIMUM_FILE_DESCRIPTOR&lt;/a&gt;コンパイル時オプションを追加しました</target>
        </trans-unit>
        <trans-unit id="8d7a7e10a04ea0438234a85069c16c9283a34f44" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#omit_autoreset&quot;&gt;SQLITE_OMIT_AUTORESET&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#omit_autoreset&quot;&gt;SQLITE_OMIT_AUTORESET&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="cb3a294a7e977a259efaa0c86a5bd58c0ece5079" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#omit_truncate_optimization&quot;&gt;SQLITE_OMIT_TRUNCATE_OPTIMIZATION&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#omit_truncate_optimization&quot;&gt;SQLITE_OMIT_TRUNCATE_OPTIMIZATION&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="a909d1326bcfce04150c32be27f8c49b83bd0ecc" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#reverse_unordered_selects&quot;&gt;SQLITE_REVERSE_UNORDERED_SELECTS&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#reverse_unordered_selects&quot;&gt;SQLITE_REVERSE_UNORDERED_SELECTS&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="502456daba3bbfc42c2aae4e0545df4627f551ad" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#sorter_pmasz&quot;&gt;SQLITE_SORTER_PMASZ&lt;/a&gt; compile-time option and &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpmasz&quot;&gt;SQLITE_CONFIG_PMASZ&lt;/a&gt; start-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#sorter_pmasz&quot;&gt;SQLITE_SORTER_PMASZ&lt;/a&gt;コンパイル時オプションと&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigpmasz&quot;&gt;SQLITE_CONFIG_PMASZ&lt;/a&gt;開始時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="28034c0cfb70c12e27ba3ede26d8dd8ede415516" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#trace_size_limit&quot;&gt;SQLITE_TRACE_SIZE_LIMIT&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#trace_size_limit&quot;&gt;SQLITE_TRACE_SIZE_LIMIT&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="09fb1f6511621b38cfa7a99512d14f14883fbc85" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC&lt;/a&gt; compile-time option.</source>
          <target state="translated">&lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC&lt;/a&gt;コンパイル時オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="3f3173fa35c3a879c2726fc2a5942b9f31caf835" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;completion&quot;&gt;COMPLETION extension&lt;/a&gt; - designed to suggest tab-completions for interactive user interfaces. This is a work in progress. Expect further enhancements in future releases.</source>
          <target state="translated">&lt;a href=&quot;completion&quot;&gt;COMPLETION拡張機能が&lt;/a&gt;追加されました-インタラクティブなユーザーインターフェイスのタブ補完を提案するように設計されています。これは進行中の作業です。今後のリリースでは、さらに機能が強化される予定です。</target>
        </trans-unit>
        <trans-unit id="bd72639918b4a26ff2fb29a0faca5f35c83f254f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;csv&quot;&gt;CSV virtual table&lt;/a&gt; for reading &lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt; formatted comma-separated value files.</source>
          <target state="translated">&lt;a href=&quot;https://www.ietf.org/rfc/rfc4180.txt&quot;&gt;RFC 4180&lt;/a&gt;形式のコンマ区切り値ファイルを読み取るための&lt;a href=&quot;csv&quot;&gt;CSV仮想テーブル&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="92093860669f80e0461cf2bf8c10bee5f03e1d55" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;floatingpoint#decext&quot;&gt;decimal extension&lt;/a&gt; for doing arbitrary-precision decimal arithmetic.</source>
          <target state="translated">任意精度の10進演算を行うための&lt;a href=&quot;floatingpoint#decext&quot;&gt;10進拡張が&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="3160ced06d046132de38a26647860622e0cdffde" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts3tok&quot;&gt;fts3tokenize virtual table&lt;/a&gt; to the &lt;a href=&quot;fts3&quot;&gt;full-text search&lt;/a&gt; logic.</source>
          <target state="translated">&lt;a href=&quot;fts3&quot;&gt;全文検索&lt;/a&gt;ロジックに&lt;a href=&quot;fts3#fts3tok&quot;&gt;fts3tokenize仮想テーブル&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="4c8b894319f521eb57fd47b0be0aa9684d1ec5aa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts4aux&quot;&gt;fts4aux&lt;/a&gt; table</source>
          <target state="translated">&lt;a href=&quot;fts3#fts4aux&quot;&gt;fts4aux&lt;/a&gt;テーブルを追加</target>
        </trans-unit>
        <trans-unit id="4f7adb875b0c694ac11f99fb4651fab782bc54c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#fts4notindexed&quot;&gt;FTS4 notindexed option&lt;/a&gt;, allowing non-indexed columns in an FTS4 table.</source>
          <target state="translated">&lt;a href=&quot;fts3#fts4notindexed&quot;&gt;FTS4 notindexedオプションが&lt;/a&gt;追加され、FTS4テーブルで非インデックス列を使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="af80c1928f1855cabc20adda009b71283ddea157" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#matchinfo-b&quot;&gt;matchinfo 'b' flag&lt;/a&gt; to the &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function in &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fts3#matchinfo-b&quot;&gt;FTS3の&lt;/a&gt;&lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo（）&lt;/a&gt;関数に&lt;a href=&quot;fts3&quot;&gt;matchinfo &lt;/a&gt;'b'フラグを追加しました。</target>
        </trans-unit>
        <trans-unit id="65d5c29f868afb57f7cc51fb08236c713031a2c7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts3#matchinfo-y&quot;&gt;matchinfo y flag&lt;/a&gt; to the &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function of &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;.</source>
          <target state="translated">添加&lt;a href=&quot;fts3#matchinfo-y&quot;&gt;のMatchInfo Yフラグ&lt;/a&gt;へ&lt;a href=&quot;fts3#matchinfo&quot;&gt;のMatchInfo（）&lt;/a&gt;の関数&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a827723f97ea5885e808c3970a4b40110e42abfa" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;fts5#the_detail_option&quot;&gt;FTS5 detail option&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fts5#the_detail_option&quot;&gt;FTS5詳細オプションが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="a22bb4ef0d3b7209d712c5d4d93daa0aaef7a82c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly&quot;&gt;Geopoly module&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;geopoly&quot;&gt;Geopolyモジュールを&lt;/a&gt;追加</target>
        </trans-unit>
        <trans-unit id="87c6d5f726f175566512f2d2234a5c4de18fd7f8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly#ccw&quot;&gt;geopoly_ccw()&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;geopoly#ccw&quot;&gt;geopoly_ccw（）&lt;/a&gt;関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="1b0e11f7f07f3617d74c59523f8c23d59441befb" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;geopoly#regpoly&quot;&gt;geopoly_regular()&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;geopoly#regpoly&quot;&gt;geopoly_regular（）&lt;/a&gt;関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="f24e2a1102cf6edaae603eaa6aac92e181730dab" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;User Authentication&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/ext/userauth/user-auth.txt&quot;&gt;ユーザー認証&lt;/a&gt;拡張機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="98eddc92334b847599f4ce6d60f53ec694b28ec8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt; source code&lt;/a&gt; and &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt; documentation&lt;/a&gt; for the &lt;b&gt;genfkey&lt;/b&gt; program for automatically generating triggers to enforce foreign key constraints.</source>
          <target state="translated">外部キー制約を適用するトリガーを自動的に生成するための&lt;b&gt;genfkey&lt;/b&gt;プログラムの&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.c&quot;&gt;ソースコード&lt;/a&gt;と&lt;a href=&quot;http://www.sqlite.org/src/finfo?name=tool/genfkey.README&quot;&gt;ドキュメント&lt;/a&gt;を追加しました。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fb847b6e2ea32d443186a136c7cc13619b505325" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/anycollseq.c&quot;&gt;anycollseq.c&lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; that allows a generic SQLite database connection to read a schema that contains unknown and/or application-specific &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;.</source>
          <target state="translated">汎用のSQLiteデータベース接続が未知の、またはアプリケーション固有の&lt;a href=&quot;datatype3#collation&quot;&gt;照合シーケンス&lt;/a&gt;を含むスキーマを読み取ることができるようにする、&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/anycollseq.c&quot;&gt;anycollseq.c &lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;ロード可能拡張機能&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="7bcf45513f10ebd75a93f6b5b6e89e6063d27a70" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/explain.c&quot;&gt;explain virtual table&lt;/a&gt; as a run-time loadable extension.</source>
          <target state="translated">実行時にロード可能な拡張機能として、&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/explain.c&quot;&gt;Explain仮想テーブル&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="b081bf5f1f1b82752017714981d03b1881cbb935" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fossildelta.c&quot;&gt;fossildelta.c&lt;/a&gt; extension that can create, apply, and deconstruct the &lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/delta_format.wiki&quot;&gt;Fossil DVCS file delta format&lt;/a&gt; that is used by the &lt;a href=&quot;rbu&quot;&gt;RBU extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rbu&quot;&gt;RBU拡張で&lt;/a&gt;使用される&lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/delta_format.wiki&quot;&gt;Fossil DVCSファイルデルタ形式&lt;/a&gt;を作成、適用、および分解できる&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fossildelta.c&quot;&gt;fossildelta.c&lt;/a&gt;拡張を追加しました。</target>
        </trans-unit>
        <trans-unit id="1c17244cfd78fdd7f17b6be947bca36290283497" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/normalize.c&quot;&gt;sqlite3_normalize()&lt;/a&gt; extension function.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/normalize.c&quot;&gt;sqlite3_normalize（）&lt;/a&gt;拡張関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="759f9c17eb2b892ce355010ec281cce2d5bc2292" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/unionvtab.c&quot;&gt;swarm virtual table&lt;/a&gt; to the existing union virtual table extension.</source>
          <target state="translated">既存のユニオン仮想テーブル拡張に&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/unionvtab.c&quot;&gt;スウォーム仮想テーブル&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="f734d95c970b9097c58b6ecfdc16f5977d6ec48b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/uuid.c&quot;&gt;uuid.c&lt;/a&gt; extension module implementing functions for processing RFC-4122 UUIDs.</source>
          <target state="translated">RFC- &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/uuid.c&quot;&gt;4122UUID&lt;/a&gt;を処理するための関数を実装するuuid.c拡張モジュールを追加しました。</target>
        </trans-unit>
        <trans-unit id="b331aec1305fafaaca20c2db450d1ed83b8ce70e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/ext/session/changesetfuzz.c&quot;&gt;changesetfuzz.c&lt;/a&gt; test-case generator utility.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/src/file/ext/session/changesetfuzz.c&quot;&gt;changesetfuzz.c&lt;/a&gt;テストケースジェネレーターユーティリティを追加しました。</target>
        </trans-unit>
        <trans-unit id="6ce84b6020b5a29dc39d3e75ab7c42a1088a870c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://sqlite.org/src/file/src/dbpage.c&quot;&gt;sqlite_dbpage virtual table&lt;/a&gt; for providing direct access to pages of the database file. The source code is built into the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; and is activated using the &lt;a href=&quot;compile#enable_dbpage_vtab&quot;&gt;-DSQLITE_ENABLE_DBPAGE_VTAB&lt;/a&gt; compile-time option.</source>
          <target state="translated">データベースファイルのページに直接アクセスするための&lt;a href=&quot;https://sqlite.org/src/file/src/dbpage.c&quot;&gt;sqlite_dbpage仮想テーブルが&lt;/a&gt;追加されました。ソースコードは&lt;a href=&quot;amalgamation&quot;&gt;統合に&lt;/a&gt;組み込まれ、&lt;a href=&quot;compile#enable_dbpage_vtab&quot;&gt;-DSQLITE_ENABLE_DBPAGE_VTAB&lt;/a&gt;コンパイル時オプションを使用してアクティブ化されます。</target>
        </trans-unit>
        <trans-unit id="c2442f1bc55ec77c692e59556f169e49a895d4fc" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/artifact/d7cc99350?ln=403-443&quot;&gt;sqlite3rbu_bp_progress()&lt;/a&gt; interface to the &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;https://www.sqlite.org/src/artifact/d7cc99350?ln=403-443&quot;&gt;sqlite3rbu_bp_progress（）&lt;/a&gt;インターフェースを&lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt;拡張に追加しました。</target>
        </trans-unit>
        <trans-unit id="9465d7ab14adb931b5593d0471021aeb683a5ed7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/artifact/f971962e92ebb8b0&quot;&gt;eval.c&lt;/a&gt;&lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; that implements an eval() SQL function that will recursively evaluate SQL.</source>
          <target state="translated">SQLを再帰的に評価するeval（）SQL関数を実装する&lt;a href=&quot;loadext&quot;&gt;ロード可能な&lt;/a&gt;&lt;a href=&quot;https://www.sqlite.org/src/artifact/f971962e92ebb8b0&quot;&gt;eval.c &lt;/a&gt;拡張を追加しました。</target>
        </trans-unit>
        <trans-unit id="23f6d845a0f388b044a8b1c50b1667ba4a60cc2c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/remember.c&quot;&gt;remember(V,PTR)&lt;/a&gt; SQL function as a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;loadext&quot;&gt;読み込み可能な拡張&lt;/a&gt;機能として、&lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/remember.c&quot;&gt;remember（V、PTR）&lt;/a&gt; SQL関数を追加しました。</target>
        </trans-unit>
        <trans-unit id="425b7d13c017ba95b58d6a07a030a87fd80839e1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/sha1.c&quot;&gt;sha1.c&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/sha1.c&quot;&gt;sha1.c&lt;/a&gt;拡張が追加されました。</target>
        </trans-unit>
        <trans-unit id="8e99c060c956cad10a0ae2061ee04da178be3f84" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;imposter#dotimposter&quot;&gt;.imposter dot-command&lt;/a&gt; to the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;&lt;a href=&quot;imposter#dotimposter&quot;&gt;.imposter dot-command&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="727f21d6dc5af5ea8308f45987497ba8687f21e0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jgrouparray&quot;&gt;json_group_array()&lt;/a&gt; and &lt;a href=&quot;json1#jgroupobject&quot;&gt;json_group_object()&lt;/a&gt; SQL functions in the &lt;a href=&quot;json1#jmini&quot;&gt;json&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;json1#jmini&quot;&gt;json&lt;/a&gt;拡張に&lt;a href=&quot;json1#jgrouparray&quot;&gt;json_group_array（）&lt;/a&gt;および&lt;a href=&quot;json1#jgroupobject&quot;&gt;json_group_object（）&lt;/a&gt; SQL関数を追加しました。</target>
        </trans-unit>
        <trans-unit id="1bb5ebb2b769f13a8af1db1abb9a9158e890bf67" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jpatch&quot;&gt;json_patch()&lt;/a&gt; SQL function to the &lt;a href=&quot;json1&quot;&gt;JSON1 extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;json1#jpatch&quot;&gt;json_patch（）&lt;/a&gt; SQL関数が&lt;a href=&quot;json1&quot;&gt;JSON1拡張に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="4a094211337515c1dc028d6f9e6cf2117139fbc0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;json1#jquote&quot;&gt;json_quote()&lt;/a&gt; SQL function to &lt;a href=&quot;json1&quot;&gt;the json1 extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;json1#jquote&quot;&gt;json_quote（）&lt;/a&gt; SQL関数が&lt;a href=&quot;json1&quot;&gt;json1拡張に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="a328d8e8703958674a4567fcec41c8773ac9bc0f" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#iif&quot;&gt;iif() SQL function&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_corefunc#iif&quot;&gt;iif（）SQL関数を&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="6d18b3be87f155b2457df15bacd3dd11c3e674d5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#instr&quot;&gt;instr()&lt;/a&gt; SQL function.</source>
          <target state="translated">&lt;a href=&quot;lang_corefunc#instr&quot;&gt;instr（）&lt;/a&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="247064f74dbe4b79f59940594bcda97f277a43f3" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#likely&quot;&gt;likely(X)&lt;/a&gt; SQL function.</source>
          <target state="translated">Like &lt;a href=&quot;lang_corefunc#likely&quot;&gt;（X）&lt;/a&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="bac96e190aeab6b4919769c4f3fd24dfbe89ae73" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf()&lt;/a&gt; SQL function.</source>
          <target state="translated">&lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf（）&lt;/a&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="d60a43dfdb6c9e0039a4d0aa4f120238cb346854" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;unlikely()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;likelihood()&lt;/a&gt; SQL functions to be used as hints to the query planner.</source>
          <target state="translated">クエリプランナーへのヒントとして使用する、&lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;unlikely（）&lt;/a&gt;および&lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;尤度（）&lt;/a&gt; SQL関数を追加しました。</target>
        </trans-unit>
        <trans-unit id="bb0ee30e9ce216eed1bab03b1463da8795ac409d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_expr#match&quot;&gt;MATCH&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;lang_expr#match&quot;&gt;MATCH&lt;/a&gt;演算子が追加されました。</target>
        </trans-unit>
        <trans-unit id="afa2810329e9d36a72775faefe7a4b187615efbd" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;lang_vacuum#vacuuminto&quot;&gt;VACUUM INTO&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;lang_vacuum#vacuuminto&quot;&gt;VACUUM INTO&lt;/a&gt;コマンドを追加</target>
        </trans-unit>
        <trans-unit id="47f839667c95acc5a008254deb814f5fd2e72e82" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; for a speed improvement in excess of 15% on some workloads. (Your mileage may vary.)</source>
          <target state="translated">一部のワークロードで速度が15％を超えるように、&lt;a href=&quot;malloc#lookaside&quot;&gt;lookasideメモリアロケータ&lt;/a&gt;を追加しました。（あなたのマイレージは異なる場合があります。）</target>
        </trans-unit>
        <trans-unit id="ca85bb0b52986a81e52b50ef04e5ef298fc1ebdf" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;optoverview#skipscan&quot;&gt;skip-scan optimization&lt;/a&gt; to the query planner.</source>
          <target state="translated">&lt;a href=&quot;optoverview#skipscan&quot;&gt;スキップ&lt;/a&gt;プランの最適化をクエリプランナーに追加しました。</target>
        </trans-unit>
        <trans-unit id="c52772fca787badd301bbb28489a51e6b2c18437" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;busy_timeout pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;busy_timeoutプラグマが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="acf053bb493580f8d76bf2fe4425a6ee95eb3b00" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_cache_spill&quot;&gt;cache_spill pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_cache_spill&quot;&gt;cache_spillプラグマが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="7028868fffc72a85c59d3c3b9112eb23b4ec033e" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_cell_size_check&quot;&gt;PRAGMA cell_size_check&lt;/a&gt; command for better and earlier detection of database file corruption.</source>
          <target state="translated">データベースファイルの破損をより適切かつ早期に検出するために、&lt;a href=&quot;pragma#pragma_cell_size_check&quot;&gt;PRAGMA cell_size_check&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="f60e6b13f01cdd96d811863e696687470fe6d7c1" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_data_version&quot;&gt;PRAGMA data_version&lt;/a&gt; command that can be used to determine if a database file has been modified by another process.</source>
          <target state="translated">データベースファイルが別のプロセスによって変更されたかどうかを判断するために使用できる&lt;a href=&quot;pragma#pragma_data_version&quot;&gt;PRAGMA data_version&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="6dc9cd4f3681e1d6bfff801310b10819f9c239c5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_defer_foreign_keys&quot;&gt;defer_foreign_keys pragma&lt;/a&gt; and the &lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status&lt;/a&gt;(db, &lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusdeferredfks&quot;&gt;SQLITE_DBSTATUS_DEFERRED_FKS&lt;/a&gt;,...) C-language interface.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_defer_foreign_keys&quot;&gt;defer_foreign_keysプラグマ&lt;/a&gt;と&lt;a href=&quot;c3ref/db_status&quot;&gt;sqlite3_db_status&lt;/a&gt;（db、&lt;a href=&quot;c3ref/c_dbstatus_options#sqlitedbstatusdeferredfks&quot;&gt;SQLITE_DBSTATUS_DEFERRED_FKS&lt;/a&gt;、...）C言語インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="9260575fd05ff275b40b928c8ff145c26653a33b" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_foreign_key_check&quot;&gt;PRAGMA foreign_key_check&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_foreign_key_check&quot;&gt;PRAGMA foreign_key_check&lt;/a&gt;コマンドが追加されました。</target>
        </trans-unit>
        <trans-unit id="fd33bca500a56cb70a0e4189db705ce4c14918ef" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_index_xinfo&quot;&gt;PRAGMA index_xinfo&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_index_xinfo&quot;&gt;PRAGMA index_xinfo&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="d2cb1ad431d49ff1624974b470ad507e7e6aade5" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table&lt;/a&gt; command, which if enabled causes the &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; command to behave like older version of SQLite (prior to version 3.25.0) for compatibility.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_legacy_alter_table&quot;&gt;PRAGMA legacy_alter_table&lt;/a&gt;コマンドを追加しました。有効にすると、互換性のために、&lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt;コマンドが古いバージョンのSQLite（バージョン3.25.0より前）のように動作します。</target>
        </trans-unit>
        <trans-unit id="241f9aa0870d7629a649c6fcf7aff48add9bd27d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA最適化&lt;/a&gt;コマンドを追加</target>
        </trans-unit>
        <trans-unit id="522f4f5023f50f82e4cb75d28460040b08ac77c8" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_page_count&quot;&gt;PRAGMA page_count&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_page_count&quot;&gt;PRAGMA page_count&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="181f42a6c7e001d819f97d8ba8bb1793d0d0a062" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_page_count&quot;&gt;page_count&lt;/a&gt; PRAGMA for returning the size of the underlying database file in pages.</source>
          <target state="translated">基礎となるデータベースファイルのサイズをページ単位で返すための&lt;a href=&quot;pragma#pragma_page_count&quot;&gt;page_count&lt;/a&gt; PRAGMAを追加しました。</target>
        </trans-unit>
        <trans-unit id="b0186fd0e400893a1b30b7508e00203dc47dcbd7" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_query_only&quot;&gt;query_only pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_query_only&quot;&gt;query_onlyプラグマが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="8f14ae05567f16f27c2ce37117eaac6068a50a87" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_reverse_unordered_selects&quot;&gt;reverse_unordered_selects pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_reverse_unordered_selects&quot;&gt;reverse_unordered_selectsプラグマが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="0623635bd786359d5b3e0fa8a8c82ab7ea0f9a41" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete=FAST&lt;/a&gt; command. When secure_delete is set to FAST, old content is overwritten with zeros as long as that does not increase the amount of I/O. Deleted content might still persist on the &lt;a href=&quot;fileformat2#freelist&quot;&gt;free-page list&lt;/a&gt; but will be purged from all b-tree pages.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete = FAST&lt;/a&gt;コマンドが追加されました。secure_deleteがFASTに設定されている場合、I / Oの量が増加しない限り、古いコンテンツはゼロで上書きされます。削除されたコンテンツは、まだ&lt;a href=&quot;fileformat2#freelist&quot;&gt;フリーページリストに&lt;/a&gt;残っている可能性がありますが、すべてのBツリーページから削除されます。</target>
        </trans-unit>
        <trans-unit id="837b2abaf90eb53043c6e7f99d8293f985e4ea36" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;secure_delete pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;secure_deleteプラグマを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="6ed2f465aa832c05e440067dd7bf41e8a2ea7c7d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limit pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limitプラグマが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="6aa4735afedc1efa7a8fd6ef84be33fe2ae0da0d" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_stats&quot;&gt;PRAGMA stats&lt;/a&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_stats&quot;&gt;PRAGMA stats&lt;/a&gt;ステートメントを追加しました。</target>
        </trans-unit>
        <trans-unit id="dda41fd88ccb8b6e627abcd4e0e1e198b532f161" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;pragma#pragma_vdbe_addoptrace&quot;&gt;PRAGMA vdbe_addoptrace&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_vdbe_debug&quot;&gt;PRAGMA vdbe_debug&lt;/a&gt; commands.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_vdbe_addoptrace&quot;&gt;PRAGMA vdbe_addoptrace&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_vdbe_debug&quot;&gt;PRAGMA vdbe_debug&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="eca68a9d9e7785e54f4fcfc001732202953d934a" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;psow&quot;&gt;powersafe overwrite&lt;/a&gt; property to the VFS interface. Provide the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_POWERSAFE_OVERWRITE&lt;/a&gt; I/O capability, the &lt;a href=&quot;compile#powersafe_overwrite&quot;&gt;SQLITE_POWERSAFE_OVERWRITE&lt;/a&gt; compile-time option, and the &quot;psow=BOOLEAN&quot; query parameter for &lt;a href=&quot;uri&quot;&gt;URI filenames&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;psow&quot;&gt;powersafe overwrite&lt;/a&gt;プロパティをVFSインターフェイスに追加しました。提供&lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_POWERSAFE_OVERWRITE&lt;/a&gt; I / O機能、&lt;a href=&quot;compile#powersafe_overwrite&quot;&gt;SQLITE_POWERSAFE_OVERWRITE&lt;/a&gt;コンパイル時のオプション、およびのための「psow = BOOLEAN」クエリパラメータ&lt;a href=&quot;uri&quot;&gt;URIファイル名を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04abd4bf7e803d987674de715233b44d21ad1237" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;rtree#rtreecheck&quot;&gt;rtreecheck()&lt;/a&gt; scalar SQL function to the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rtree#rtreecheck&quot;&gt;rtreecheck（）&lt;/a&gt;スカラーSQL関数が&lt;a href=&quot;rtree&quot;&gt;R-Tree拡張に&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="bc105b8ec07cf1f35ee3a44ebcb504b698c185e2" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;rtree#xquery&quot;&gt;sqlite3_rtree_query_callback()&lt;/a&gt; interface to &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;</source>
          <target state="translated">加え&lt;a href=&quot;rtree#xquery&quot;&gt;sqlite3_rtree_query_callback（）&lt;/a&gt;へのインターフェイス&lt;a href=&quot;rtree&quot;&gt;Rツリー拡張を&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39750cb3b229cd41fd745ee42224961db3f0e9a9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;session/c_changesetapply_invert&quot;&gt;SQLITE_CHANGESETAPPLY_INVERT&lt;/a&gt; flag</source>
          <target state="translated">&lt;a href=&quot;session/c_changesetapply_invert&quot;&gt;SQLITE_CHANGESETAPPLY_INVERT&lt;/a&gt;フラグを追加しました</target>
        </trans-unit>
        <trans-unit id="be5c46b76747ab1af6431ca228fa917fafbc088c" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;session/sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2()&lt;/a&gt; interface and the &lt;a href=&quot;session/c_changesetstart_invert&quot;&gt;SQLITE_CHANGESETSTART_INVERT&lt;/a&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;session/sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2（）&lt;/a&gt;インターフェースと&lt;a href=&quot;session/c_changesetstart_invert&quot;&gt;SQLITE_CHANGESETSTART_INVERT&lt;/a&gt;フラグを追加しました。</target>
        </trans-unit>
        <trans-unit id="bc1c498f90678af89842f0c30b1342851695eaf9" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;sqldiff&quot;&gt;sqldiff.exe&lt;/a&gt; utility program for computing the differences between two SQLite database files.</source>
          <target state="translated">2つのSQLiteデータベースファイルの違いを計算するための&lt;a href=&quot;sqldiff&quot;&gt;sqldiff.exe&lt;/a&gt;ユーティリティプログラムを追加しました。</target>
        </trans-unit>
        <trans-unit id="26e4d8fe0797614c479eea512419e56f330774a0" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;stmt&quot;&gt;SQLITE_STMT virtual table&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;stmt&quot;&gt;SQLITE_STMT仮想テーブル&lt;/a&gt;拡張が追加されました。</target>
        </trans-unit>
        <trans-unit id="7141a7f71545fdc2d8f0941a70f5d692420e5873" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;tclsqlite&quot;&gt;TCL Interface&lt;/a&gt;&lt;a href=&quot;tclsqlite#config&quot;&gt;config method&lt;/a&gt; in order to be able to disable &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt; as well as control other &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; options from TCL.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigenableview&quot;&gt;SQLITE_DBCONFIG_ENABLE_VIEW&lt;/a&gt;を無効にしたり、TCLから他の&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;オプションを制御したりできるようにするために、&lt;a href=&quot;tclsqlite&quot;&gt;TCLインターフェイスの&lt;/a&gt;&lt;a href=&quot;tclsqlite#config&quot;&gt;configメソッドを&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="3034d006b7d037b3012d84d49eab4202967372ce" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;unionvtab&quot;&gt;UNION virtual table&lt;/a&gt; extension.</source>
          <target state="translated">&lt;a href=&quot;unionvtab&quot;&gt;UNION仮想テーブル&lt;/a&gt;拡張が追加されました。</target>
        </trans-unit>
        <trans-unit id="7d1fcdd4ec63f81664121b096c84af0efcd65365" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;vtab#colUsed&quot;&gt;colUsed field&lt;/a&gt; to &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; for use by the &lt;a href=&quot;vtab#xbestindex&quot;&gt;sqlite3_module.xBestIndex&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;vtab#xbestindex&quot;&gt;sqlite3_module.xBestIndex&lt;/a&gt;メソッドで使用するために、&lt;a href=&quot;vtab#colUsed&quot;&gt;colUsedフィールド&lt;/a&gt;を&lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_infoに&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="abff860b551a8d132b543df75ebaabf23d9a1164" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;COPY&lt;/b&gt; command patterned after &lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; so that SQLite can now read the output of the &lt;b&gt;pg_dump&lt;/b&gt; database dump utility of PostgreSQL.</source>
          <target state="translated">SQLiteが&lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;の&lt;b&gt;pg_dump&lt;/b&gt;データベースダンプユーティリティの出力を読み取れるように、PostgreSQLを模した&lt;b&gt;COPY&lt;/b&gt;コマンドを追加しました。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e304ab36743ecbc720ac93786500ba376598ce88" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;LIKE&lt;/b&gt; operator.</source>
          <target state="translated">&lt;b&gt;LIKE&lt;/b&gt;演算子が追加されました。</target>
        </trans-unit>
        <trans-unit id="e12e3e86e8d93c49072339ca4e285a481d50fb9d" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;last_insert_rowid()&lt;/b&gt; SQL function.</source>
          <target state="translated">&lt;b&gt;last_insert_rowid（）&lt;/b&gt; SQL関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="3193cf97b99861e9e104fce03f06019602ead587" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_..._printf()&lt;/b&gt; interface routines.</source>
          <target state="translated">&lt;b&gt;sqlite _..._ printf（）&lt;/b&gt;インターフェイスルーチンが追加されました。</target>
        </trans-unit>
        <trans-unit id="043d356fd73cb171db8858f0f5622b884db88636" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_busy_handler()&lt;/b&gt; and &lt;b&gt;sqlite_busy_timeout()&lt;/b&gt; interface.</source>
          <target state="translated">&lt;b&gt;sqlite_busy_handler（）&lt;/b&gt;および&lt;b&gt;sqlite_busy_timeout（）&lt;/b&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="e9ea8f321d97c10573a695234e9878da4617c5e5" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_changes()&lt;/b&gt; API function to return the number of row that changed in the most recent operation.</source>
          <target state="translated">最新の操作で変更された行数を返す&lt;b&gt;sqlite_changes（）&lt;/b&gt; API関数を追加しました。</target>
        </trans-unit>
        <trans-unit id="b8527c0256e1df6259b3b96966c858732fd00e5f" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_get_table()&lt;/b&gt; API</source>
          <target state="translated">&lt;b&gt;sqlite_get_table（）&lt;/b&gt; APIを追加しました</target>
        </trans-unit>
        <trans-unit id="998f6cbca04b2d05276533a7914bab3fa482581f" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_interrupt()&lt;/b&gt; interface.</source>
          <target state="translated">&lt;b&gt;sqlite_interrupt（）&lt;/b&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="a71daae0bfba6e902831cbd84539462138fb543a" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_open_aux_file()&lt;/b&gt; API, though it is still mostly undocumented and untested.</source>
          <target state="translated">&lt;b&gt;sqlite_open_aux_file（）&lt;/b&gt; APIが追加されましたが、まだほとんどドキュメント化もテストもされていません。</target>
        </trans-unit>
        <trans-unit id="04ac72f388de3cc88954c42e0e92ea3b9fd55074" translate="yes" xml:space="preserve">
          <source>Added the &lt;b&gt;sqlite_set_authorizer()&lt;/b&gt; API. Formal documentation has not been written - see the source code comments for instructions on how to use this function.</source>
          <target state="translated">&lt;b&gt;sqlite_set_authorizer（）&lt;/b&gt; APIを追加しました。正式なドキュメントは作成されていません。この関数の使用方法については、ソースコードのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="03c76f9466cfa8b45c7eef759eaf4885a10cbd2e" translate="yes" xml:space="preserve">
          <source>Added the &lt;em&gt;experimental&lt;/em&gt;&lt;a href=&quot;c3ref/snapshot_get&quot;&gt;sqlite3_snapshot_get()&lt;/a&gt;, &lt;a href=&quot;c3ref/snapshot_open&quot;&gt;sqlite3_snapshot_open()&lt;/a&gt;, and &lt;a href=&quot;c3ref/snapshot_free&quot;&gt;sqlite3_snapshot_free()&lt;/a&gt; interfaces. These are subject to change or removal in a subsequent release.</source>
          <target state="translated">&lt;em&gt;実験的な&lt;/em&gt;&lt;a href=&quot;c3ref/snapshot_get&quot;&gt;sqlite3_snapshot_get（）&lt;/a&gt;、&lt;a href=&quot;c3ref/snapshot_open&quot;&gt;sqlite3_snapshot_open（）&lt;/a&gt;、&lt;a href=&quot;c3ref/snapshot_free&quot;&gt;sqlite3_snapshot_free（）&lt;/a&gt;インターフェースを追加しました。これらは、今後のリリースで変更または削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb8960036bc5202bda42674d6c0203a6bd0c46dd" translate="yes" xml:space="preserve">
          <source>Added the ANALYZE command for gathering statistics on indices and using those statistics when picking an index in the optimizer</source>
          <target state="translated">オプティマイザでインデックスをピックする際にインデックスの統計情報を収集し、それらの統計情報を使用するためのANALYZEコマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="e76828fc2ef742c439bfc84df1818b198b243eeb" translate="yes" xml:space="preserve">
          <source>Added the ATTACH and DETACH commands to allow interacting with multiple database files at the same time.</source>
          <target state="translated">複数のデータベースファイルを同時に操作できるように、ATTACHコマンドとDETACHコマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="648b7548b08d3433a571e65bdfcce48f0369af0b" translate="yes" xml:space="preserve">
          <source>Added the COUNT_CHANGES pragma.</source>
          <target state="translated">COUNT_CHANGESプラグマを追加しました。</target>
        </trans-unit>
        <trans-unit id="0a82f263a7163cc945f7a54766155ffe5bad18eb" translate="yes" xml:space="preserve">
          <source>Added the EMPTY_RESULT_CALLBACKS pragma</source>
          <target state="translated">EMPTY_RESULT_CALLBACKSプラグマを追加しました。</target>
        </trans-unit>
        <trans-unit id="adf9996aa89891e17522dba8a3b313501dd38637" translate="yes" xml:space="preserve">
          <source>Added the ESCAPE clause on the LIKE operator.</source>
          <target state="translated">LIKE演算子にESCAPE句を追加しました。</target>
        </trans-unit>
        <trans-unit id="f305242a3191cbfb5aec027e3852204245b42cf2" translate="yes" xml:space="preserve">
          <source>Added the FULL_COLUMN_NAMES pragma. When set to &quot;ON&quot;, the names of columns are reported back as TABLE.COLUMN instead of just COLUMN.</source>
          <target state="translated">FULL_COLUMN_NAMESプラグマを追加しました。ON &quot;に設定した場合、カラムの名前は単なるCOLUMNではなくTABLE.COLUMNとして報告されるようになりました。</target>
        </trans-unit>
        <trans-unit id="bc9f140f4e869766b8cc9921a38bfc1214b22f28" translate="yes" xml:space="preserve">
          <source>Added the SANITY_CHECK pragma.</source>
          <target state="translated">SANITY_CHECKプラグマを追加しました。</target>
        </trans-unit>
        <trans-unit id="ab67de0b2fcd45ff0f66e746a10daf00336c46a1" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_MIXED_ENDIAN_64BIT_FLOAT compile-time option to support ARM7 processors with goofy endianness.</source>
          <target state="translated">ARM7 プロセッサをグーフィーエンディアンでサポートするために、SQLITE_MIXED_ENDIAN_64BIT_FLOAT コンパイル時オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="8512503a8a6ee6ac4c42b6ec6960124aa1141343" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_READONLY_ROLLBACK extended error code for when a database cannot be opened because it needs rollback recovery but is read-only.</source>
          <target state="translated">ロールバック復元が必要だが読み取り専用なのでデータベースを開けない場合のために、SQLITE_READONLY_ROLLBACK拡張エラーコードを追加しました。</target>
        </trans-unit>
        <trans-unit id="d860363ab44e2e09ecb05e55d177bb6e0cc5efda" translate="yes" xml:space="preserve">
          <source>Added the SQLITE_UINT64_TYPE compile-time option as an analog to SQLITE_INT64_TYPE.</source>
          <target state="translated">SQLITE_INT64_TYPEのアナログとして、SQLITE_UINT64_TYPEコンパイル時オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="0dc2a114a80ab21b7a59a0682328a2000b97132e" translate="yes" xml:space="preserve">
          <source>Added the SYNCHRONOUS pragma</source>
          <target state="translated">SYNCHRONOUSプラグマを追加しました。</target>
        </trans-unit>
        <trans-unit id="f2840998df920dfd1ea272df7b05ff7b737d636e" translate="yes" xml:space="preserve">
          <source>Added the TABLE_INFO() and INDEX_INFO() pragmas to help support the ODBC interface.</source>
          <target state="translated">TABLE_INFO()および INDEX_INFO()プラグマを追加し、ODBC インタフェースのサポートを支援します。</target>
        </trans-unit>
        <trans-unit id="55b81f73060b913ff9ec244fef4f2242a8077314" translate="yes" xml:space="preserve">
          <source>Added the TRUNCATE option to &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;TRAGATE&lt;/a&gt;オプションをPRAGMA journal_modeに追加しました</target>
        </trans-unit>
        <trans-unit id="01a5050102a4554f6884185179621e32222f113e" translate="yes" xml:space="preserve">
          <source>Added the ability to &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; an &lt;a href=&quot;lang_attach&quot;&gt;ATTACH-ed&lt;/a&gt; database.</source>
          <target state="translated">&lt;a href=&quot;lang_attach&quot;&gt;ATTACHされた&lt;/a&gt;データベースを&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;する機能が追加されました。</target>
        </trans-unit>
        <trans-unit id="06c38c134cf06def71bdb05238df7b454e3474fe" translate="yes" xml:space="preserve">
          <source>Added the ability to link against the &quot;&lt;a href=&quot;https://github.com/antirez/linenoise&quot;&gt;linenoise&lt;/a&gt;&quot; command-line editing library in unix builds of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルの&lt;/a&gt; UNIXビルドで、「&lt;a href=&quot;https://github.com/antirez/linenoise&quot;&gt;linenoise&lt;/a&gt;」コマンドライン編集ライブラリに対してリンクする機能が追加されました。</target>
        </trans-unit>
        <trans-unit id="64b8cf9d4fd6b2c51e94a6a6f014fcfd569e941f" translate="yes" xml:space="preserve">
          <source>Added the ability to resolve constraint conflicts is ways other than an abort and rollback. See the documentation on the &quot;ON CONFLICT&quot; clause for details.</source>
          <target state="translated">制約の競合をアボートとロールバック以外の方法で解決する機能が追加されました。詳細は &quot;ON CONFLICT &quot;句のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f101692603c49e55897cc1b0a0872864ceef28cd" translate="yes" xml:space="preserve">
          <source>Added the ability to specify &quot;*&quot; as part of a larger column list in the result section of a SELECT statement. For example:</source>
          <target state="translated">SELECT文の結果セクションで、より大きなカラムリストの一部として &quot;*&quot;を指定する機能が追加されました。例えば</target>
        </trans-unit>
        <trans-unit id="9da37dd2277aa54e92101d7aa5cc21a4b4b41b35" translate="yes" xml:space="preserve">
          <source>Added the concatenate string operator (||)</source>
          <target state="translated">文字列連結演算子 (||)を追加しました。</target>
        </trans-unit>
        <trans-unit id="8781e73412ec3dcdbe8ddfaabe88ccd47d652415" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;cli#expert&quot;&gt;.expert command&lt;/a&gt;</source>
          <target state="translated">試験的な&lt;a href=&quot;cli#expert&quot;&gt;.expertコマンドを&lt;/a&gt;追加しました</target>
        </trans-unit>
        <trans-unit id="0fc342be926b0820e09fb4675d0d305018e3e35d" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; extension. Note that this extension is experimental and subject to change in incompatible ways.</source>
          <target state="translated">試験的な&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;拡張機能を追加しました。この拡張機能は実験的なものであり、互換性のない方法で変更される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="10d4e217a57507e7cf4bdc496b8ef5f7cdbf4429" translate="yes" xml:space="preserve">
          <source>Added the experimental &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; extension. Note that this extension is experimental and subject to change in incompatible ways.</source>
          <target state="translated">試験的な&lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt;拡張機能を追加しました。この拡張機能は実験的なものであり、互換性のない方法で変更される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3dd32bd379fd1ee1dbe9dd7bcac2b99d55f0988b" translate="yes" xml:space="preserve">
          <source>Added the experimental and undocumented EXPLAIN QUERY PLAN capability</source>
          <target state="translated">実験的で文書化されていない EXPLAIN QUERY PLAN 機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="bbf7af11f593a05578593b77e950de9d08708237" translate="yes" xml:space="preserve">
          <source>Added the experimental malloc-free memory allocator in mem3.c.</source>
          <target state="translated">mem3.c に実験的な malloc-free メモリアロケータを追加しました。</target>
        </trans-unit>
        <trans-unit id="5c30e3baaca4fbdcfb24a460d6ac28afed94f059" translate="yes" xml:space="preserve">
          <source>Added the fcnt() function to the SQL interpreter. The fcnt() function returns the number of database &quot;Fetch&quot; operations that have occurred. This function is designed for use in test scripts to verify that queries are efficient and appropriately optimized. Fcnt() has no other useful purpose, as far as I know.</source>
          <target state="translated">SQL インタプリタに fcnt()関数を追加しました。fcnt()関数は、発生したデータベースの &quot;Fetch&quot; 操作の数を返します。この関数は、クエリが効率的で適切に最適化されているかどうかを検証するためのテストスクリプトで使用するために設計されています。Fcnt()は、私の知る限り、他に有用な目的はありません。</target>
        </trans-unit>
        <trans-unit id="7a58a2fc5a5367d63f94f8275791e299dd75eb74" translate="yes" xml:space="preserve">
          <source>Added the fsdir(PATH) &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued function&lt;/a&gt; to the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt; extension, for listing the files in a directory.</source>
          <target state="translated">fsdir（PATH）&lt;a href=&quot;vtab#tabfunc2&quot;&gt;テーブル値関数&lt;/a&gt;を&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/fileio.c&quot;&gt;fileio.c&lt;/a&gt;拡張子に追加して、ディレクトリ内のファイルを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="17d23ff1e41223a23eed74ee1f278a16171c0953" translate="yes" xml:space="preserve">
          <source>Added the fullfsync pragma.</source>
          <target state="translated">fullfsyncプラグマを追加しました。</target>
        </trans-unit>
        <trans-unit id="c8e37096ddd5586a6257d3283c3c1a2dfcb73ea7" translate="yes" xml:space="preserve">
          <source>Added the new &lt;a href=&quot;c3ref/stmt_isexplain&quot;&gt;sqlite3_stmt_isexplain(S)&lt;/a&gt; interface for determining whether or not a &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; is an &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;が&lt;a href=&quot;lang_explain&quot;&gt;EXPLAINで&lt;/a&gt;あるかどうかを判別するための新しい&lt;a href=&quot;c3ref/stmt_isexplain&quot;&gt;sqlite3_stmt_isexplain（S）&lt;/a&gt;インターフェースが追加されました。</target>
        </trans-unit>
        <trans-unit id="4d5a2b0e9f488226eecba61aa448d45b4ae4e1d9" translate="yes" xml:space="preserve">
          <source>Added the new &lt;a href=&quot;tclsqlite#bind_fallback&quot;&gt;bind_fallback method&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;tclsqlite#bind_fallback&quot;&gt;bind_fallbackメソッドが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="698d2bae74641dc2312ecf24ccb34bdaf37e3654" translate="yes" xml:space="preserve">
          <source>Added the new &lt;b&gt;SQLITE_TEMP_MASTER&lt;/b&gt; table which records the schema for temporary tables in the same way that &lt;b&gt;SQLITE_MASTER&lt;/b&gt; does for persistent tables.</source>
          <target state="translated">&lt;b&gt;SQLITE_MASTER&lt;/b&gt;が永続テーブルに対して行うのと同じ方法で一時テーブルのスキーマを記録する新しい&lt;b&gt;SQLITE_TEMP_MASTER&lt;/b&gt;テーブルを追加しました。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f8314265965cb9729309aa3a47d77b4ebbd0dc84" translate="yes" xml:space="preserve">
          <source>Added the new &lt;b&gt;sqlite_last_insert_rowid()&lt;/b&gt; API function.</source>
          <target state="translated">新しい&lt;b&gt;sqlite_last_insert_rowid（）&lt;/b&gt; API関数が追加されました。</target>
        </trans-unit>
        <trans-unit id="f36e59151eae3a6b62bf13680d5957b9ac83ad96" translate="yes" xml:space="preserve">
          <source>Added the new interface &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_msize()&lt;/a&gt; that returns the size of a memory allocation obtained from &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64()&lt;/a&gt; and its variants.</source>
          <target state="translated">&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc64（）&lt;/a&gt;とそのバリアントから取得したメモリ割り当てのサイズを返す新しいインターフェイス&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_msize（）&lt;/a&gt;を追加しました。</target>
        </trans-unit>
        <trans-unit id="49d6fc07cdd58d69c1061156379f31f91815e6f2" translate="yes" xml:space="preserve">
          <source>Added the new sqlite3_bind_parameter_name() interface.</source>
          <target state="translated">新しい sqlite3_bind_parameter_name()インターフェースを追加しました。</target>
        </trans-unit>
        <trans-unit id="294074eb5cc5a602340ff9920845209bc774b64a" translate="yes" xml:space="preserve">
          <source>Added the optional &lt;a href=&quot;asyncvfs&quot;&gt;asynchronous VFS&lt;/a&gt; module.</source>
          <target state="translated">オプションの&lt;a href=&quot;asyncvfs&quot;&gt;非同期VFS&lt;/a&gt;モジュールが追加されました。</target>
        </trans-unit>
        <trans-unit id="d2ff57d315c3b6f550eb4477360be1d9ece1af4e" translate="yes" xml:space="preserve">
          <source>Added the remove_diacritics=2 option to &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; and &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;.</source>
          <target state="translated">remove_diacritics = 2オプションを&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;および&lt;a href=&quot;fts5&quot;&gt;FTS5に&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="5543829232c2352604477be7d98b18681931c4e6" translate="yes" xml:space="preserve">
          <source>Added the sqlite3_db_handle() API</source>
          <target state="translated">sqlite3_db_handle()APIを追加しました。</target>
        </trans-unit>
        <trans-unit id="31ca3dd4e3255f6b9042e4416d3da3cdbcd74a82" translate="yes" xml:space="preserve">
          <source>Added the sqlite3_get_autocommit() API</source>
          <target state="translated">sqlite3_get_autocommit()APIを追加しました。</target>
        </trans-unit>
        <trans-unit id="01da972e948cd498d37d659567824ec295b8ab3b" translate="yes" xml:space="preserve">
          <source>Added the sqlite_encode_binary() and sqlite_decode_binary() functions to the source tree. But they are not yet linked into the library.</source>
          <target state="translated">sqlite_encode_binary()とsqlite_decode_binary()関数をソースツリーに追加しました。しかし、これらはまだライブラリにリンクされていません。</target>
        </trans-unit>
        <trans-unit id="4b7931525b0f49699c8919c663442c12cd2042a1" translate="yes" xml:space="preserve">
          <source>Added the subquery flattening optimizer.</source>
          <target state="translated">サブクエリの平坦化オプティマイザを追加しました。</target>
        </trans-unit>
        <trans-unit id="c7b7e1fb260a3da09d3b883f4ceb3d8fea98b06f" translate="yes" xml:space="preserve">
          <source>Added the test_multiplex.c module which provides an example VFS that provides multiplexing (sharding) of a DB, splitting it over multiple files of fixed size.</source>
          <target state="translated">DBを固定サイズの複数のファイルに分割して多重化(シャーディング)するVFSのサンプルを提供する test_multiplex.c モジュールを追加しました。</target>
        </trans-unit>
        <trans-unit id="ae0013cb7d834fd47edf840654f5d38cdca51233" translate="yes" xml:space="preserve">
          <source>Added the test_regexp.c module as a demonstration of how to implement the REGEXP operator.</source>
          <target state="translated">REGEXP演算子の実装方法のデモンストレーションとして、test_regexp.cモジュールを追加しました。</target>
        </trans-unit>
        <trans-unit id="32a49834c953fbdb6828ba126355f3f55173d44b" translate="yes" xml:space="preserve">
          <source>Added the test_superlock.c module which provides example code for obtaining an exclusive lock to a rollback or WAL database.</source>
          <target state="translated">ロールバックやWALデータベースに排他的なロックを取得するためのサンプルコードを提供する test_superlock.c モジュールを追加しました。</target>
        </trans-unit>
        <trans-unit id="09972935bcd9fee093e7ba1782e40d68896023ca" translate="yes" xml:space="preserve">
          <source>Added the win32-longpath VFS on windows, permitting filenames up to 32K characters in length.</source>
          <target state="translated">Windows で win32-longpath VFS を追加し、32K 文字までの長さのファイル名を許可するようにした。</target>
        </trans-unit>
        <trans-unit id="f94f686ce38728ef2b6f0370975b863c680811c8" translate="yes" xml:space="preserve">
          <source>Added the xGetLastError() method to &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; for returning filesystem-specific error messages and error codes back to SQLite.</source>
          <target state="translated">ファイルシステム固有のエラーメッセージとエラーコードをSQLite に&lt;a href=&quot;c3ref/vfs&quot;&gt;返す&lt;/a&gt;ために、xGetLastError（）メソッドをsqlite3_vfsに追加しました。</target>
        </trans-unit>
        <trans-unit id="7f5e4ed0c375fbca2b5b605896122a1929784c92" translate="yes" xml:space="preserve">
          <source>Added two new C-language interfaces: &lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_expanded_sql()&lt;/a&gt; and &lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2()&lt;/a&gt;. These new interfaces subsume the functions of &lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_trace()&lt;/a&gt; and &lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_profile()&lt;/a&gt; which are now deprecated.</source>
          <target state="translated">2つの新しいC言語インターフェース、&lt;a href=&quot;c3ref/expanded_sql&quot;&gt;sqlite3_expanded_sql（）&lt;/a&gt;および&lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2（）が&lt;/a&gt;追加されました。これらの新しいインターフェースは&lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;および&lt;a href=&quot;c3ref/profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;の機能を含んでおり、これらは現在非推奨です。</target>
        </trans-unit>
        <trans-unit id="82207d09f92cb6fda6e84b7a4f36383b773b1975" translate="yes" xml:space="preserve">
          <source>Added two new experimental functions: &lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob()&lt;/a&gt; and &lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex()&lt;/a&gt;. Their intended use is to facilitate generating &lt;a href=&quot;http://en.wikipedia.org/wiki/UUID&quot;&gt;UUIDs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_expr#randomblobFunc&quot;&gt;randomBlob（）&lt;/a&gt;と&lt;a href=&quot;lang_expr#hexFunc&quot;&gt;hex（）の&lt;/a&gt; 2つの新しい実験的関数が追加されました。それらの使用目的は、&lt;a href=&quot;http://en.wikipedia.org/wiki/UUID&quot;&gt;UUIDの&lt;/a&gt;生成を容易にすることです。</target>
        </trans-unit>
        <trans-unit id="738e6cc3217ca2553bb9e0d6d54a155cd0ad0e85" translate="yes" xml:space="preserve">
          <source>Added verbs &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatuspagecachesize&quot;&gt;SQLITE_STATUS_PAGECACHE_SIZE&lt;/a&gt; and &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusscratchsize&quot;&gt;SQLITE_STATUS_SCRATCH_SIZE&lt;/a&gt; to the &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status()&lt;/a&gt; interface.</source>
          <target state="translated">動詞&lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatuspagecachesize&quot;&gt;SQLITE_STATUS_PAGECACHE_SIZE&lt;/a&gt;および&lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusscratchsize&quot;&gt;SQLITE_STATUS_SCRATCH_SIZE&lt;/a&gt;を&lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status（）&lt;/a&gt;インターフェースに追加しました。</target>
        </trans-unit>
        <trans-unit id="c680515f169f90f11c5dd355902aaea8ab7434ee" translate="yes" xml:space="preserve">
          <source>Adding anything to null gives null</source>
          <target state="translated">null に何かを追加すると null になります。</target>
        </trans-unit>
        <trans-unit id="fb59cdfe69dfa59c552601b0c1f3bb462cce88b5" translate="yes" xml:space="preserve">
          <source>Adding new auxiliary functions implemented in C, and</source>
          <target state="translated">C言語で実装された新しい補助関数の追加や</target>
        </trans-unit>
        <trans-unit id="f056b3609aae2fc232cd7cd2146d49c24a7d20cd" translate="yes" xml:space="preserve">
          <source>Adding new tokenizers, also implemented in C.</source>
          <target state="translated">C言語でも実装されている新しいトークナイザーの追加。</target>
        </trans-unit>
        <trans-unit id="6889504fdc32a6b06fe8b6bcc4bddeee9d4dd115" translate="yes" xml:space="preserve">
          <source>Adding optional features like &lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt;, &lt;a href=&quot;compile#enable_fts5&quot;&gt;-DSQLITE_ENABLE_FTS5&lt;/a&gt;, or &lt;a href=&quot;compile#enable_rtree&quot;&gt;-DSQLITE_ENABLE_RTREE&lt;/a&gt; will increase the size of the library, obviously.</source>
          <target state="translated">&lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt;、&lt;a href=&quot;compile#enable_fts5&quot;&gt;-DSQLITE_ENABLE_FTS5&lt;/a&gt;、または&lt;a href=&quot;compile#enable_rtree&quot;&gt;-DSQLITE_ENABLE_RTREE&lt;/a&gt;などのオプション機能を追加すると、ライブラリのサイズが明らかに大きくなります。</target>
        </trans-unit>
        <trans-unit id="96d5a0933a519ba202a444bedd7df31dcc598d63" translate="yes" xml:space="preserve">
          <source>Adding to Zip</source>
          <target state="translated">ジップへの追加</target>
        </trans-unit>
        <trans-unit id="c1cc55a80b36a00837a2ba9fccba63e4cde092d5" translate="yes" xml:space="preserve">
          <source>Additional OS/2 updates</source>
          <target state="translated">OS/2の追加アップデート</target>
        </trans-unit>
        <trans-unit id="92dafa949d6bc0b1375a028d351e58c914e80e5e" translate="yes" xml:space="preserve">
          <source>Additional application-specific collating functions can be added to SQLite using the &lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collation()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collat​​ion（）&lt;/a&gt;インターフェースを使用して、アプリケーション固有の照合関数をSQLiteに追加できます。</target>
        </trans-unit>
        <trans-unit id="f27c7e9f8642590f605d8547ee9d3195fc42ee26" translate="yes" xml:space="preserve">
          <source>Additional background information is available in the &lt;a href=&quot;queryplanner&quot;&gt;indexing tutorial&lt;/a&gt; document.</source>
          <target state="translated">追加の背景情報は、&lt;a href=&quot;queryplanner&quot;&gt;インデックス作成のチュートリアル&lt;/a&gt;ドキュメントで入手できます。</target>
        </trans-unit>
        <trans-unit id="2c99c8da41f3c9e92b76081bdd22fd42577b1a01" translate="yes" xml:space="preserve">
          <source>Additional documentation is available &lt;a href=&quot;cli&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">追加のドキュメントは&lt;a href=&quot;cli&quot;&gt;こちらから&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="00b84c5eeb4233a176f6bc28e3bd04baf2d28fa4" translate="yes" xml:space="preserve">
          <source>Additional documentation on Fossil can be found at &lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&quot;&gt;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&lt;/a&gt;</source>
          <target state="translated">Fossilに関する追加のドキュメントは、&lt;a href=&quot;https://fossil-scm.org/fossil/doc/trunk/www/permutedindex.html&quot;&gt;https：//fossil-scm.org/fossil/doc/trunk/www/permutedindex.htmlにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="317e6d6c624cc48cb4d511774ceb090affd1ec71" translate="yes" xml:space="preserve">
          <source>Additional fixes for issues detected by &lt;a href=&quot;https://github.com/google/oss-fuzz&quot;&gt;OSSFuzz&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/google/oss-fuzz&quot;&gt;OSSFuzz&lt;/a&gt;によって検出された問題に対する追加の修正：</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">追加情報</target>
        </trans-unit>
        <trans-unit id="92a863bb50cbb4e362af4fa066e5c6af932cb4b2" translate="yes" xml:space="preserve">
          <source>Additional information about datatypes in SQLite version 3.0 is available &lt;a href=&quot;datatype3&quot;&gt;separately&lt;/a&gt;.</source>
          <target state="translated">SQLiteバージョン3.0のデータ型に関する追加情報は、&lt;a href=&quot;datatype3&quot;&gt;別途&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="3ec1e59a22ef60dce4ecbbf53a52e3ca6ce479f4" translate="yes" xml:space="preserve">
          <source>Additional information about each of these temporary file types is in the sequel.</source>
          <target state="translated">これらの一時的なファイルタイプのそれぞれについての詳細は、続編に記載されています。</target>
        </trans-unit>
        <trans-unit id="86d1a81241f56a80c6f10677f29019f00a708f3e" translate="yes" xml:space="preserve">
          <source>Additional information is provided in the &lt;a href=&quot;optoverview&quot;&gt;SQLite query planner&lt;/a&gt; and &lt;a href=&quot;queryplanner-ng&quot;&gt;next generation query planner&lt;/a&gt; documents.</source>
          <target state="translated">追加情報は、&lt;a href=&quot;optoverview&quot;&gt;SQLiteクエリプランナー&lt;/a&gt;および&lt;a href=&quot;queryplanner-ng&quot;&gt;次世代クエリプランナーの&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="e54fe371689214dc8e5e5e621b7eb86aecf9d56f" translate="yes" xml:space="preserve">
          <source>Additional language codes might be added in future releases.</source>
          <target state="translated">今後のリリースでは、追加の言語コードが追加される可能性があります。</target>
        </trans-unit>
        <trans-unit id="3fd6df38d5642afc4cf37656b0d1bca445886b04" translate="yes" xml:space="preserve">
          <source>Additional notes on compiling SQLite can be found on the &lt;a href=&quot;howtocompile&quot;&gt;How To Compile SQLite&lt;/a&gt; page.</source>
          <target state="translated">SQLiteのコンパイルに関するその他の注意事項は、SQLiteの&lt;a href=&quot;howtocompile&quot;&gt;コンパイル方法の&lt;/a&gt;ページにあります。</target>
        </trans-unit>
        <trans-unit id="e4ec2f0b6cbf4bf0e81b4a109aa98e3ffbd4166d" translate="yes" xml:space="preserve">
          <source>Additional notes:</source>
          <target state="translated">追加の注意事項。</target>
        </trans-unit>
        <trans-unit id="332472b920f973dc311033ff008ad95ae21f625e" translate="yes" xml:space="preserve">
          <source>Additional speed-up can occur if an index can be used to speed the search of either or the two loops.</source>
          <target state="translated">インデックスを使用して、どちらかのループまたは2つのループの検索を高速化することができる場合、追加の高速化が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="62327a6c1f64cd300d626d84824c24a7457822b7" translate="yes" xml:space="preserve">
          <source>Additional tests added to the regression suite to cover the new ROWID feature and the TCL interface bugs mentioned below.</source>
          <target state="translated">新しいROWID機能と下記のTCLインターフェースのバグをカバーするために、リグレッションスイートに追加されたテスト。</target>
        </trans-unit>
        <trans-unit id="654733e6ef7698fde15afb843bdcb55e4a4bdac2" translate="yes" xml:space="preserve">
          <source>Additionally, all VFS implementations are required to provide the</source>
          <target state="translated">さらに、すべての VFS 実装は</target>
        </trans-unit>
        <trans-unit id="751381c740adf479c5b317c56d4dbca83d940699" translate="yes" xml:space="preserve">
          <source>Additionally, five extra &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations are provided as well as the default. By specifying one of the extra VFS implementations when calling &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;, an application may bypass the file-system detection logic and explicitly select one of the above locking styles. The five extra &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations are called &quot;unix-posix&quot;, &quot;unix-afp&quot;, &quot;unix-flock&quot;, &quot;unix-dotfile&quot; and &quot;unix-none&quot;.</source>
          <target state="translated">さらに、デフォルトだけでなく、5つの追加の&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;実装が提供されます。&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）を&lt;/a&gt;呼び出すときに追加のVFS実装の1つを指定することにより、アプリケーションはファイルシステム検出ロジックをバイパスし、上記のロックスタイルの1つを明示的に選択できます。5つの追加の&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;実装は、「unix-posix」、「unix-afp」、「unix-flock」、「unix-dotfile」、および「unix-none」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="9c0db46574ddb3c258907307bfcb277854bd98be" translate="yes" xml:space="preserve">
          <source>Additionally, if xBestIndex sets the SQLITE_INDEX_SCAN_UNIQUE flag, then SQLite also assumes that if a call to the xUpdate() method is made as part of the same statement to delete or update a virtual table row and the implementation returns SQLITE_CONSTRAINT, then there is no need to rollback any database changes. In other words, if the xUpdate() returns SQLITE_CONSTRAINT, the database contents must be exactly as they were before xUpdate was called. By contrast, if SQLITE_INDEX_SCAN_UNIQUE is not set and xUpdate returns SQLITE_CONSTRAINT, any database changes made by the xUpdate method are automatically rolled back by SQLite.</source>
          <target state="translated">さらに、xBestIndex が SQLITE_INDEX_SCAN_UNIQUE フラグを設定している場合、SQLite は、仮想テーブルの行を削除または更新するために同じステートメントの一部として xUpdate()メソッドの呼び出しが行われ、実装が SQLITE_CONSTRAINT を返した場合、データベースの変更をロールバックする必要がないことも想定しています。言い換えれば、xUpdate()がSQLITE_CONSTRAINTを返した場合、データベースの内容はxUpdateが呼び出される前と全く同じでなければなりません。対照的に、SQLITE_INDEX_SCAN_UNIQUEが設定されておらず、xUpdateがSQLITE_CONSTRAINTを返す場合、xUpdateメソッドによって行われたデータベースの変更は、SQLiteによって自動的にロールバックされます。</target>
        </trans-unit>
        <trans-unit id="bd3296bcc9f5f36b885d1f44a772cfcd7df89079" translate="yes" xml:space="preserve">
          <source>Additionally, the result of the comparison is only valid if both of the snapshot handles were obtained by calling sqlite3_snapshot_get() since the last time the wal file was deleted. The wal file is deleted when the database is changed back to rollback mode or when the number of database clients drops to zero. If either snapshot handle was obtained before the wal file was last deleted, the value returned by this function is undefined.</source>
          <target state="translated">さらに、最後にwalファイルが削除されてからsqlite3_snapshot_get()を呼び出して両方のスナップショットハンドルが取得された場合にのみ、比較結果が有効になります。walファイルは、データベースがロールバックモードに変更されたとき、またはデータベースクライアントの数がゼロになったときに削除されます。walファイルが最後に削除される前にどちらかのスナップショットハンドルが取得された場合、この関数によって返される値は未定義です。</target>
        </trans-unit>
        <trans-unit id="68ad616133628f7a9c711f524c6d649bfd1e605e" translate="yes" xml:space="preserve">
          <source>Adjust how SQLite does &lt;a href=&quot;malloc&quot;&gt;memory allocation&lt;/a&gt;, including setting up alternative memory allocators appropriate for safety-critical real-time embedded systems and application-defined memory allocators.</source>
          <target state="translated">SQLiteが&lt;a href=&quot;malloc&quot;&gt;メモリ割り当てを行う&lt;/a&gt;方法を調整します。これには、安全性が重要なリアルタイム組み込みシステムおよびアプリケーション定義のメモリアロケータに適した代替メモリアロケータの設定が含まれます。</target>
        </trans-unit>
        <trans-unit id="6b033ae4a69004f4620434e4722184d64e21543d" translate="yes" xml:space="preserve">
          <source>Adjust the &lt;a href=&quot;c3ref/column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt; API so it more often returns the same values for &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements as it did in prior releases, to minimize disruption to applications that might be using that interface in unexpected ways.</source>
          <target state="translated">&lt;a href=&quot;c3ref/column_count&quot;&gt;sqlite3_column_count（）&lt;/a&gt; APIを調整して、&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;ステートメントに対して以前のリリースと同じ値を返すことが多くなり、そのインターフェースを予期しない方法で使用している可能性のあるアプリケーションの中断を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="af76f40123a61e61c36534a28bc6944e29327620" translate="yes" xml:space="preserve">
          <source>Adjust the unix driver to avoid unnecessary calls to fchown().</source>
          <target state="translated">fchown()の不要な呼び出しを避けるために unix ドライバを調整。</target>
        </trans-unit>
        <trans-unit id="8d239da6b2ab732b6958736d4e5cb3d6007246c9" translate="yes" xml:space="preserve">
          <source>Adjust the use of mutexes so that they are appropriate for various &lt;a href=&quot;threadsafe&quot;&gt;threading models&lt;/a&gt;, or substitute an application-defined mutex system.</source>
          <target state="translated">mutexの使用を調整して、さまざまな&lt;a href=&quot;threadsafe&quot;&gt;スレッドモデルに&lt;/a&gt;適するようにするか、アプリケーション定義のmutexシステムに置き換えます。</target>
        </trans-unit>
        <trans-unit id="94f5fc3d9b3cb240294c036969ed03df2f640df3" translate="yes" xml:space="preserve">
          <source>Adjusting SQLite To Use 8+3 Filenames</source>
          <target state="translated">8+3ファイル名を使用するようにSQLiteを調整する</target>
        </trans-unit>
        <trans-unit id="42bff9e6720c99e5345613da344a0c1afa8b6dd4" translate="yes" xml:space="preserve">
          <source>Advance A Changeset Iterator</source>
          <target state="translated">前進 A チェンジセット イテレータ</target>
        </trans-unit>
        <trans-unit id="5e8ccba8f1392a8bc7c3e697913930b9040f8c60" translate="yes" xml:space="preserve">
          <source>Advance cursor P1 so that it points to the next key/data pair in its table or index. If there are no more key/value pairs then fall through to the following instruction. But if the cursor advance was successful, jump immediately to P2.</source>
          <target state="translated">カーソルP1は、テーブルまたはインデックスの次のキー/データペアを指すように進みます。これ以上のキー/値のペアがない場合は、次の命令に進みます。しかし、カーソルの移動が成功した場合、すぐにP2にジャンプします。</target>
        </trans-unit>
        <trans-unit id="26c9571278da3b45a7da23cbb5f3d294d51fc11e" translate="yes" xml:space="preserve">
          <source>Advance virtual table P1 to the next row in its result set and jump to instruction P2. Or, if the virtual table has reached the end of its result set, then fall through to the next instruction.</source>
          <target state="translated">仮想テーブルP1を結果セットの次の行まで進め、命令P2にジャンプします。または、仮想テーブルが結果セットの最後に到達した場合は、次の命令にフォールスルーします。</target>
        </trans-unit>
        <trans-unit id="e75e53f7ef6befbc2ec9555564b368fec377a5b4" translate="yes" xml:space="preserve">
          <source>Advantages of WAL-mode</source>
          <target state="translated">WALモードのメリット</target>
        </trans-unit>
        <trans-unit id="b8c612cc4e584be10a59711cc94c098821d2bdc6" translate="yes" xml:space="preserve">
          <source>Advocacy</source>
          <target state="translated">Advocacy</target>
        </trans-unit>
        <trans-unit id="2d3ad1756a210c3ecab852144ac9d98890b977fa" translate="yes" xml:space="preserve">
          <source>Affinity</source>
          <target state="translated">Affinity</target>
        </trans-unit>
        <trans-unit id="3b044120cd8e868bafac52b1f7cf9fb9852b7110" translate="yes" xml:space="preserve">
          <source>Affinity is applied to operands of a comparison operator prior to the comparison according to the following rules in the order shown:</source>
          <target state="translated">比較前の比較演算子のオペランドには、以下のルールに従って、示された順序でアフィニティが適用されます。</target>
        </trans-unit>
        <trans-unit id="4f72807708b980eccee8200e07c7d36460820a43" translate="yes" xml:space="preserve">
          <source>Affinity of</source>
          <target state="translated">親和性</target>
        </trans-unit>
        <trans-unit id="79ba5e1b3f99abfd54ef8d839ba12bd2ac4d79cb" translate="yes" xml:space="preserve">
          <source>After</source>
          <target state="translated">After</target>
        </trans-unit>
        <trans-unit id="23fd162046b3edf8ebd248698454f109bfd31f63" translate="yes" xml:space="preserve">
          <source>After ADD COLUMN has been run on a database, that database will not be readable by SQLite version 3.1.3 (2005-02-20) and earlier.</source>
          <target state="translated">データベース上でADD COLUMNを実行した後、そのデータベースはSQLiteバージョン3.1.3 (2005-02-20)以前のバージョンでは読めなくなります。</target>
        </trans-unit>
        <trans-unit id="027a417d23e6a18069001a7c19ad2bf39267a70e" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; has been prepared using any of &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v2()&lt;/a&gt;, or &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; or one of the legacy interfaces &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16()&lt;/a&gt;, this function must be called one or more times to evaluate the statement.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v2（）&lt;/a&gt;、または&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16_v3（）の&lt;/a&gt;いずれか、または従来のインターフェース&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;または&lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare16（）の&lt;/a&gt;いずれかを呼び出す必要がある&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備済みステートメント&lt;/a&gt;を準備した後、この関数を1回以上呼び出す必要がありますステートメントを評価します。</target>
        </trans-unit>
        <trans-unit id="b4eec0463aaa1bd6eacaf86174eef649dd73f26c" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; has been evaluated by one or more calls to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;, it can be reset in order to be evaluated again by a call to &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt;. Think of &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt; as rewinding the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; program back to the beginning. Using &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt; on an existing &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; rather than creating a new &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; avoids unnecessary calls to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;. For many SQL statements, the time needed to run &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; equals or exceeds the time needed by &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;. So avoiding calls to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; can give a significant performance improvement.</source>
          <target state="translated">&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;は、&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;への1つ以上の呼び出しによって評価された後、&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;への呼び出しによって再度評価するためにリセットできます。&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;は、&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;プログラムを最初に巻き戻すと考えてください。新しい&lt;a href=&quot;c3ref/stmt&quot;&gt;準備済みステートメント&lt;/a&gt;を作成するのではなく、既存の&lt;a href=&quot;c3ref/stmt&quot;&gt;準備済みステートメント&lt;/a&gt;で&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;を使用すると、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;への不要な呼び出しを回避できます。多くのSQLステートメントでは、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）の&lt;/a&gt;実行に必要な時間は、&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）に&lt;/a&gt;必要な時間と同じかそれ以上です。したがって、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;は、パフォーマンスを大幅に改善できます。</target>
        </trans-unit>
        <trans-unit id="794711e92b4cb710edd2459f0377567195dd4b41" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; has been prepared using any of &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;, &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt;, &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v2()&lt;/a&gt;, or &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v3()&lt;/a&gt; or one of the legacy interfaces &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16()&lt;/a&gt;, this function must be called one or more times to evaluate the statement.</source>
          <target state="translated">&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;、&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3（）&lt;/a&gt;、&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v2（）&lt;/a&gt;、または&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16_v3（）の&lt;/a&gt;いずれか、または従来のインターフェース&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;または&lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare16（）の&lt;/a&gt;いずれかを呼び出す必要がある&lt;a href=&quot;stmt&quot;&gt;準備済みステートメント&lt;/a&gt;を準備した後、この関数を1回以上呼び出す必要がありますステートメントを評価します。</target>
        </trans-unit>
        <trans-unit id="610a52e97ff3ecd7651d2bc9d61eca8fe0a8d8a9" translate="yes" xml:space="preserve">
          <source>After a call to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; returns SQLITE_LOCKED, the &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; API may be invoked to register for an unlock-notify callback. The unlock-notify callback is invoked by SQLite after the database connection holding the table-lock that prevented the call to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; from succeeding has finished its transaction and released all locks. For example, if a call to sqlite3_step() is an attempt to read from table X, and some other connection Y is holding a write-lock on table X, then sqlite3_step() will return SQLITE_LOCKED. If &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; is then called, the unlock-notify callback will be invoked after connection Y's transaction is concluded. The connection that the unlock-notify callback is waiting on, in this case connection Y, is known as the &quot;blocking connection&quot;.</source>
          <target state="translated">&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;または&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）の&lt;/a&gt;呼び出しがSQLITE_LOCKEDを返した後、&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）&lt;/a&gt; APIを呼び出して、ロック解除通知コールバックを登録できます。 unlock-notifyコールバックは、&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;または&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;の呼び出しの成功を妨げたテーブルロックを保持するデータベース接続がトランザクションを完了し、すべてのロックを解放した後に、SQLiteによって呼び出されます。たとえば、sqlite3_step（）の呼び出しがテーブルXからの読み取りであり、他の接続YがテーブルXで書き込みロックを保持している場合、sqlite3_step（）はSQLITE_LOCKEDを返します。&lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify（）の&lt;/a&gt;場合次に呼び出され、ロック解除通知のコールバックは、接続Yのトランザクションが完了した後に呼び出されます。ロック解除通知コールバックが待機している接続（この場合は接続Y）は、「ブロッキング接続」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="4986de5057c6d05cb0ea3a0ad2727b5d055cdc6f" translate="yes" xml:space="preserve">
          <source>After a complete checkpoint, if no other connections are in transactions that use the WAL, then subsequent write transactions can overwrite the WAL file from the beginning. This is called &quot;resetting the WAL&quot;. At the start of the first new write transaction, the WAL header salt-1 value is incremented and the salt-2 value is randomized. These changes to the salts invalidate old frames in the WAL that have already been checkpointed but not yet overwritten, and prevent them from being checkpointed again.</source>
          <target state="translated">完全なチェックポイントの後、WALを使用するトランザクションに他の接続がない場合、後続の書き込みトランザクションは最初からWALファイルを上書きすることができます。これを「WALのリセット」と呼ぶ。最初の新規書き込みトランザクションの開始時に、WALヘッダーのsalt-1値がインクリメントされ、salt-2値がランダム化される。saltへのこれらの変更は、既にチェックポイントされているがまだ上書きされていないWAL内の古いフレームを無効にし、再びチェックポイントされることを防ぐ。</target>
        </trans-unit>
        <trans-unit id="6b922aacb69272f39bced66a3ebf0a3033c1514f" translate="yes" xml:space="preserve">
          <source>After a database is closed, swarmvtab runs the equivalent of:</source>
          <target state="translated">データベースが閉じられた後、swarmvtabは同等の処理を実行します。</target>
        </trans-unit>
        <trans-unit id="95563154fa733438ac343e5b67e301f468c45088" translate="yes" xml:space="preserve">
          <source>After a sequence of changes that define a single undo/redo step, invoke the undo::barrier command to define the limit of that step. In an interactive program, you can call undo::event after any change and undo::barrier will be called automatically as an idle callback.</source>
          <target state="translated">一連の変更で単一のアンドゥ/リドゥステップを定義した後、そのステップの限界を定義するために undo::barrier コマンドを呼び出します。対話型プログラムでは、変更後に undo::event を呼び出すと、アイドル コールバックとして undo::barrier が自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9ba37aebce03d74bebd4ab72ce08d7281954335c" translate="yes" xml:space="preserve">
          <source>After a session object has been configured, it begins monitoring for changes to its configured tables. However, it does not record an entire change each time a row within the database is modified. Instead, it records just the PRIMARY KEY fields for each inserted row, and just the PRIMARY KEY and all original row values for any updated or deleted rows. If a row is modified more than once by a single session, no new information is recorded.</source>
          <target state="translated">セッションオブジェクトが設定されると、設定されたテーブルへの変更の監視を開始します。しかし、データベース内の行が変更されるたびに変更全体を記録するわけではありません。その代わりに、挿入された各行のPRIMARY KEYフィールドのみを記録し、更新された行や削除された行のPRIMARY KEYとすべての元の行の値のみを記録します。1つのセッションで複数回行が変更された場合、新しい情報は記録されません。</target>
        </trans-unit>
        <trans-unit id="b9ec21719ff7b0d3ffa4e429b7905254f04d4e5c" translate="yes" xml:space="preserve">
          <source>After a virtual machine has been generated using &lt;b&gt;sqlite_compile&lt;/b&gt; it is executed by one or more calls to &lt;b&gt;sqlite_step&lt;/b&gt;. Each invocation of &lt;b&gt;sqlite_step&lt;/b&gt;, except the last one, returns a single row of the result. The number of columns in the result is stored in the integer that the 2nd parameter points to. The pointer specified by the 3rd parameter is made to point to an array of pointers to column values. The pointer in the 4th parameter is made to point to an array of pointers to column names and datatypes. The 2nd through 4th parameters to &lt;b&gt;sqlite_step&lt;/b&gt; convey the same information as the 2nd through 4th parameters of the &lt;b&gt;callback&lt;/b&gt; routine when using the &lt;b&gt;sqlite_exec&lt;/b&gt; interface. Except, with &lt;b&gt;sqlite_step&lt;/b&gt; the column datatype information is always included in the in the 4th parameter regardless of whether or not the &lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES&lt;/a&gt; pragma is on or off.</source>
          <target state="translated">&lt;b&gt;sqlite_compile&lt;/b&gt;を使用して仮想マシンが生成された後、それは&lt;b&gt;sqlite_step&lt;/b&gt;への1つ以上の呼び出しによって実行されます。&lt;b&gt;sqlite_stepを&lt;/b&gt;呼び出す&lt;b&gt;たび&lt;/b&gt;に、最後の呼び出しを除いて、結果の単一行が返されます。結果の列数は、2番目のパラメーターが指す整数に格納されます。 3番目のパラメーターで指定されたポインターは、列値へのポインターの配列を指すように作成されます。 4番目のパラメーターのポインターは、列名とデータ型へのポインターの配列を指すように作成されます。第4のパラメータを介して第2 &lt;b&gt;sqlite_stepは、&lt;/b&gt;第4のパラメータを介して第2のと同じ情報を伝える&lt;b&gt;コールバックの&lt;/b&gt;使用時ルーチン&lt;b&gt;sqlite_exec&lt;/b&gt;インタフェースを。を除いて、&lt;b&gt;sqlite_step&lt;/b&gt;列のデータ型情報は、&lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES&lt;/a&gt;プラグマがオンかオフかに関係なく、常に4番目のパラメーターのに含まれます。</target>
        </trans-unit>
        <trans-unit id="23265bf656595ac1bd3eabed0b381392ce07d2ae" translate="yes" xml:space="preserve">
          <source>After all information in the rollback journal has been played back into the database file (and flushed to disk in case we encounter yet another power failure), the hot rollback journal can be deleted.</source>
          <target state="translated">ロールバック・ジャーナル内のすべての情報がデータベース・ファイルに再生された後(また停電が発生した場合に備えてディスクにフラッシュされた後)、ホット・ロールバック・ジャーナルを削除することができます。</target>
        </trans-unit>
        <trans-unit id="b84435139a07c4a4055bb439605dbd8c9789e7d7" translate="yes" xml:space="preserve">
          <source>After all needed changes are completed, xWrite() is used to move the content back into the database file. Hence the use of memory mapped I/O does not significantly change the performance of database changes. Memory mapped I/O is mostly a benefit for queries.</source>
          <target state="translated">すべての必要な変更が完了した後、xWrite()を使用して内容をデータベースファイルに戻します。したがって、メモリマップドI/Oを使用しても、データベースの変更のパフォーマンスに大きな変化はありません。メモリマップされたI/Oは、ほとんどの場合、クエリのための利点です。</target>
        </trans-unit>
        <trans-unit id="260239065f2a92ea494a87b7cf4ba2a2d941420e" translate="yes" xml:space="preserve">
          <source>After all records have been inserted into the Sorter object identified by P1, invoke this opcode to actually do the sorting. &lt;a href=&quot;opcode#Jump&quot;&gt;Jump&lt;/a&gt; to P2 if there are no records to be sorted.</source>
          <target state="translated">P1で識別されるソーターオブジェクトにすべてのレコードが挿入されたら、このオペコードを呼び出して実際にソートを実行します。ソートするレコードがない場合は、P2に&lt;a href=&quot;opcode#Jump&quot;&gt;ジャンプ&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="1079dc3c758cc45d2f271e573db223c2cdb12648" translate="yes" xml:space="preserve">
          <source>After an SQL statement has been prepared (and optionally bound), it is executed using:</source>
          <target state="translated">SQL文が準備された後(オプションでバインドも可能)、SQL文を使用して実行します。</target>
        </trans-unit>
        <trans-unit id="19e517dcca2fb3c783a27c4dacd0285a95c871db" translate="yes" xml:space="preserve">
          <source>After any changes to the TEMP database schema, all prepared statements are invalidated and must be recreated using a new call to sqlite3_prepare()</source>
          <target state="translated">TEMPデータベーススキーマを変更した後、準備されたすべてのステートメントは無効となり、sqlite3_prepare()を新たに呼び出して再作成しなければなりません。</target>
        </trans-unit>
        <trans-unit id="ef8dfe7bdc91c90b1d784f46b505207e5b5bb9de" translate="yes" xml:space="preserve">
          <source>After duplicating the key, the next instruction, NotExists, pops the stack once and uses the value popped as a key to check the existence of a record in the database file. If there is no record for this key, it jumps back to the ListRead to get another key.</source>
          <target state="translated">キーを複製した後、次の命令であるNotExistsはスタックを一度ポップし、ポップした値をキーとしてデータベースファイル内のレコードの存在を確認します。このキーのレコードがない場合は、別のキーを取得するためにListReadにジャンプします。</target>
        </trans-unit>
        <trans-unit id="838513ea0f9681d04eb27d7879229c002b821a85" translate="yes" xml:space="preserve">
          <source>After each INSERT on ex1, the ex1_it trigger constructs text of a DELETE statement that will undo the INSERT. The ex1_ut trigger constructs an UPDATE statement that will undo the effects of an UPDATE. And the ex1_dt trigger constructs a statement that will undo the effects of a DELETE.</source>
          <target state="translated">ex1 の各 INSERT の後、ex1_it トリガは INSERT を元に戻す DELETE 文のテキストを構築します。ex1_utトリガは、UPDATEの効果を元に戻すUPDATE文を構築します。そして、ex1_dtトリガは、DELETEの効果を元に戻す文を構築します。</target>
        </trans-unit>
        <trans-unit id="126fa1adfbc14e51e51271a3d3ed7613c3632f33" translate="yes" xml:space="preserve">
          <source>After gcov has been run to verify 100% branch test coverage, then the test program is recompiled using delivery compiler options (without the special -fprofile-arcs and -ftest-coverage options) and the test program is rerun. This second run is the actual test of SQLite.</source>
          <target state="translated">gcov を実行して 100% のブランチテストカバレッジを確認した後、デリバリーコンパイラオプションを使用してテストプログラムを再コンパイルします (特別な -fprofile-arcs と -ftest-coverage オプションは使用しないでください)。この2回目の実行は、SQLiteの実際のテストです。</target>
        </trans-unit>
        <trans-unit id="db8afe929b966e405547381b33bfdc15bcc08124" translate="yes" xml:space="preserve">
          <source>After obtaining a RESERVED lock, the process that wants to write creates a rollback journal. The header of the journal is initialized with the original size of the database file. Space in the journal header is also reserved for a master journal name, though the master journal name is initially empty.</source>
          <target state="translated">RESERVEDロックを取得した後、書き込みたいプロセスはロールバック・ジャーナルを作成します。ジャーナルのヘッダは、データベース・ファイルの元のサイズで初期化されます。ジャーナル・ヘッダーのスペースは、マスター・ジャーナル名のためにも確保されていますが、マスター・ジャーナル名は最初は空です。</target>
        </trans-unit>
        <trans-unit id="6274aa024e5dcdb153f9792763e691d72ddb17d5" translate="yes" xml:space="preserve">
          <source>After obtaining a RESERVED lock, the process that wants to write creates a rollback journal. The header of the journal is initialized with the original size of the database file. Space in the journal header is also reserved for a super-journal name, though the super-journal name is initially empty.</source>
          <target state="translated">RESERVEDロックを取得した後、書き込みたいプロセスはロールバック・ジャーナルを作成します。ジャーナルのヘッダは、データベースファイルの元のサイズで初期化されます。ジャーナルヘッダのスペースはスーパージャーナル名のためにも確保されていますが、スーパージャーナル名は最初は空です。</target>
        </trans-unit>
        <trans-unit id="1634d30fc252b255d4609b96665517fdcea9fa73" translate="yes" xml:space="preserve">
          <source>After process-wide configuration is complete and &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; have been created, individual database connections can be configured using calls to &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;.</source>
          <target state="translated">プロセス全体の構成が完了し、&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;が作成され&lt;a href=&quot;c3ref/limit&quot;&gt;たら&lt;/a&gt;、sqlite3_limit（）および&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;への呼び出しを使用して、個々のデータベース接続を構成できます。</target>
        </trans-unit>
        <trans-unit id="3999670e271fa814391d216ed801ffd36e68c0e2" translate="yes" xml:space="preserve">
          <source>After reading the data for a database page, SQLite stores the raw page of data in the</source>
          <target state="translated">データベースページのデータを読み込んだ後、SQLiteは生のページのデータを</target>
        </trans-unit>
        <trans-unit id="f403207f2b4b981533796c7ad5f8378ebe08c950" translate="yes" xml:space="preserve">
          <source>After resolving conflicts, many users like to compile and test the new version before committing it to the repository. Or you can commit first and test later. Either way, run the &quot;&lt;code&gt;fossil commit&lt;/code&gt;&quot; command to check-in the circle (5) version.</source>
          <target state="translated">競合を解決した後、多くのユーザーは新しいバージョンをリポジトリにコミットする前にコンパイルしてテストすることを好みます。または、最初にコミットして後でテストすることもできます。どちらの方法でも、「 &lt;code&gt;fossil commit&lt;/code&gt; 」コマンドを実行して、サークル（5）バージョンをチェックインします。</target>
        </trans-unit>
        <trans-unit id="c63b949f4e88ad0a023a0bdd59afe48dabc17031" translate="yes" xml:space="preserve">
          <source>After running the CREATE TABLE statement, disable the imposter mechanism as follows:</source>
          <target state="translated">CREATE TABLE文を実行した後、以下のようにインポスター機構を無効にします。</target>
        </trans-unit>
        <trans-unit id="538eea92ccc130ef6b680c0e55263bee066d1733" translate="yes" xml:space="preserve">
          <source>After successfully opening a file-handle on a potentially hot journal file, SQLite shall query the file for its size in bytes using the xFileSize() method of the open file handle.</source>
          <target state="translated">ホットになる可能性のあるジャーナル・ファイルのファイルハンドルのオープンに成功した後、SQLite は、オープンしたファイルハンドルの xFileSize()メソッドを使用して、そのファイルのサイズをバイト単位で問い合わせるものとします。</target>
        </trans-unit>
        <trans-unit id="8fbe2d1674af788e8343a14ee7a4129b26ca4886" translate="yes" xml:space="preserve">
          <source>After the</source>
          <target state="translated">の後に</target>
        </trans-unit>
        <trans-unit id="f2360cfd6cf46af06ac709eb02497e9aff167465" translate="yes" xml:space="preserve">
          <source>After the algorithm above completes successfully, it is safe to read from the database file. Once all reading has completed, the SHARED lock is dropped.</source>
          <target state="translated">上記のアルゴリズムが正常に完了すると、データベースファイルからの読み込みが安全になります。すべての読み込みが完了すると、SHAREDロックが解除されます。</target>
        </trans-unit>
        <trans-unit id="157772fcdfe2470be92e77475005f7ac0b098542" translate="yes" xml:space="preserve">
          <source>After the application has finished with the result from sqlite3_get_table(), it must pass the result table pointer to sqlite3_free_table() in order to release the memory that was malloced. Because of the way the &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt; happens within sqlite3_get_table(), the calling function must not try to call &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; directly. Only &lt;a href=&quot;#sqlite3_free_table&quot;&gt;sqlite3_free_table()&lt;/a&gt; is able to release the memory properly and safely.</source>
          <target state="translated">アプリケーションがsqlite3_get_table（）からの結果で終了した後、割り当てられたメモリを解放するために、結果テーブルポインターをsqlite3_free_table（）に渡す必要があります。&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;がsqlite3_get_table（）内で発生する方法のため、呼び出し側の関数は&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free（）を&lt;/a&gt;直接呼び出そうとしてはなりません。&lt;a href=&quot;#sqlite3_free_table&quot;&gt;sqlite3_free_table（）&lt;/a&gt;だけがメモリを適切かつ安全に解放できます。</target>
        </trans-unit>
        <trans-unit id="9c64408a8164063ed860f68818eaa546c62a346e" translate="yes" xml:space="preserve">
          <source>After the application has finished with the result from sqlite3_get_table(), it must pass the result table pointer to sqlite3_free_table() in order to release the memory that was malloced. Because of the way the &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt; happens within sqlite3_get_table(), the calling function must not try to call &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; directly. Only &lt;a href=&quot;free_table&quot;&gt;sqlite3_free_table()&lt;/a&gt; is able to release the memory properly and safely.</source>
          <target state="translated">アプリケーションがsqlite3_get_table（）からの結果で終了した後、割り当てられたメモリを解放するために、結果テーブルポインターをsqlite3_free_table（）に渡す必要があります。&lt;a href=&quot;free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;がsqlite3_get_table（）内で発生する方法のため、呼び出し側の関数は&lt;a href=&quot;free&quot;&gt;sqlite3_free（）を&lt;/a&gt;直接呼び出そうとしてはなりません。&lt;a href=&quot;free_table&quot;&gt;sqlite3_free_table（）&lt;/a&gt;だけがメモリを適切かつ安全に解放できます。</target>
        </trans-unit>
        <trans-unit id="af39ba2343efa84bf5f79d3192cc7d9b779717a4" translate="yes" xml:space="preserve">
          <source>After the database changes are all safely on the mass storage device, the rollback journal file is deleted. This is the instant where the transaction commits. If a power failure or system crash occurs prior to this point, then recovery processes to be described later make it appear as if no changes were ever made to the database file. If a power failure or system crash occurs after the rollback journal is deleted, then it appears as if all changes have been written to disk. Thus, SQLite gives the appearance of having made no changes to the database file or having made the complete set of changes to the database file depending on whether or not the rollback journal file exists.</source>
          <target state="translated">データベースの変更がすべてマスストレージデバイス上で安全に行われた後、ロールバックジャーナルファイルが削除されます。これは、トランザクションがコミットされた瞬間です。この時点より前に停電やシステムクラッシュが発生した場合、後述するリカバリプロセスにより、データベースファイルに変更が加えられなかったかのように表示されます。ロールバックジャーナルが削除された後に停電やシステムクラッシュが発生した場合は、すべての変更がディスクに書き込まれたかのように表示されます。このように、SQLite は、ロールバック・ジャーナル・ファイルが存在するかどうかによって、データベース・ファイルに何も変更を加えていないか、またはデータベース・ファイルに完全な変更を加えたかのように見えます。</target>
        </trans-unit>
        <trans-unit id="8bb7688984c453ad2bc60e9833b1d02d648b8f95" translate="yes" xml:space="preserve">
          <source>After the header and zero padding are zero or more page records. Each page record stores a copy of the content of a page from the database file before it was changed. The same page may not appear more than once within a single rollback journal. To rollback an incomplete transaction, a process has merely to read the rollback journal from beginning to end and write pages found in the journal back into the database file at the appropriate location.</source>
          <target state="translated">ヘッダーとゼロパディングの後には、0個以上のページレコードがあります。各ページレコードには、変更される前のデータベースファイルのページの内容のコピーが格納されます。1つのロールバック・ジャーナル内では、同じページが複数回出現することはありません。不完全なトランザクションをロールバックするためには、プロセスはロールバック・ジャーナルを最初から最後まで読み、ジャーナルで見つけたページを適切な場所にデータベース・ファイルに書き戻すだけでよい。</target>
        </trans-unit>
        <trans-unit id="4bc35438aded45e22aeee0454d230e53ab207bab" translate="yes" xml:space="preserve">
          <source>After the imposter table is loaded into SQLite's internal schema as described above, the imposter table can be used as any other table. But the imposter table will only be visible to the one database connection that created it. No changes are made to the database file on disk. And the imposter table will disappear the next time the schema is loaded.</source>
          <target state="translated">上記のようにインポスターテーブルをSQLiteの内部スキーマにロードした後、インポスターテーブルは他のテーブルとして使用することができます。しかし、imposter テーブルは、そのテーブルを作成した 1 つのデータベース接続にのみ表示されます。ディスク上のデータベースファイルに変更は加えられません。そして、インポスターテーブルは、次にスキーマがロードされたときには消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="6fb2487148ee10be0a40ce759f7c45930d397db5" translate="yes" xml:space="preserve">
          <source>After the master journal is constructed, its content is flushed to disk before any further actions are taken. On Unix, the directory that contains the master journal is also synced in order to make sure the master journal file will appear in the directory following a power failure.</source>
          <target state="translated">マスター・ジャーナルが構築された後、それ以上のアクションが実行される前に、その内容がディスクにフラッシュされます。Unixでは、マスター・ジャーナルを含むディレクトリも同期され、停電の後にマスター・ジャーナル・ファイルがディレクトリに表示されることを確認します。</target>
        </trans-unit>
        <trans-unit id="93f402b283ab865f9a9eb59bcf905d302373fd8f" translate="yes" xml:space="preserve">
          <source>After the original page content has been saved in the rollback journal, the pages can be modified in user memory. Each database connection has its own private copy of user space, so the changes that are made in user space are only visible to the database connection that is making the changes. Other database connections still see the information in operating system disk cache buffers which have not yet been changed. And so even though one process is busy modifying the database, other processes can continue to read their own copies of the original database content.</source>
          <target state="translated">元のページ内容がロールバックジャーナルに保存された後、ページはユーザーメモリ内で変更することができます。各データベース接続は、ユーザースペースの独自のプライベートコピーを持っているため、ユーザースペースで行われた変更は、変更を行っているデータベース接続にのみ表示されます。他のデータベース接続は、まだ変更されていないオペレーティングシステムのディスクキャッシュバッファ内の情報をまだ見ています。そのため、あるプロセスがデータベースの変更に追われていても、他のプロセスは元のデータベースの内容の自分のコピーを読み続けることができます。</target>
        </trans-unit>
        <trans-unit id="b39bcb3162c3e5bf861268807e2f722487ba46f2" translate="yes" xml:space="preserve">
          <source>After the parser assembles tokens into a parse tree, the code generator runs to analyze the parser tree and generate &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; that performs the work of the SQL statement. The &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object is a container for this bytecode. There are many files in the code generator, including: &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;. In these files is where most of the serious magic happens. &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; handles code generation for expressions. &lt;b&gt;where*.c&lt;/b&gt; handles code generation for WHERE clauses on SELECT, UPDATE and DELETE statements. The files &lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;, &lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;, and &lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt; handle the code generation for SQL statements with the same names. (Each of these files calls routines in &lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt; and &lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt; as necessary.) All other SQL statements are coded out of &lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;. The &lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt; file implements the functionality of &lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer()&lt;/a&gt;.</source>
          <target state="translated">パーサーがトークンをパースツリーにアセンブルすると、コードジェネレーターが実行されてパーサーツリーが分析され、SQLステートメントの処理を実行する&lt;a href=&quot;opcode&quot;&gt;バイトコード&lt;/a&gt;が生成されます。&lt;a href=&quot;c3ref/stmt&quot;&gt;プリペアドステートメントの&lt;/a&gt;オブジェクトは、このバイトコードのコンテナです。 ：を含むコードジェネレータでは多くのファイルがある&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/pragma.c&quot;&gt;pragma.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.cは&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/wherecode.c&quot;&gt;wherecode.c&lt;/a&gt;、および&lt;a href=&quot;https://sqlite.org/src/file/src/whereexpr.c&quot;&gt;whereexpr.c&lt;/a&gt;。これらのファイルでは、深刻な魔法のほとんどが発生します。&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;は式のコード生成を処理します。&lt;b&gt;where * .c&lt;/b&gt;は、SELECT、UPDATE、DELETEステートメントのWHERE句のコード生成を処理します。ファイル&lt;a href=&quot;https://sqlite.org/src/file/src/attach.c&quot;&gt;attach.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/delete.c&quot;&gt;delete.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/insert.c&quot;&gt;insert.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/select.c&quot;&gt;select.c&lt;/a&gt;、&lt;a href=&quot;https://sqlite.org/src/file/src/trigger.c&quot;&gt;trigger.cの&lt;/a&gt;&lt;a href=&quot;https://sqlite.org/src/file/src/update.c&quot;&gt;update.c&lt;/a&gt;、および&lt;a href=&quot;https://sqlite.org/src/file/src/vacuum.c&quot;&gt;vacuum.c&lt;/a&gt;ハンドルと同じ名前を持つSQL文のコード生成。 （これらのファイルはそれぞれ、必要に応じて&lt;a href=&quot;https://sqlite.org/src/file/src/expr.c&quot;&gt;expr.c&lt;/a&gt;および&lt;a href=&quot;https://sqlite.org/src/file/src/where.c&quot;&gt;where.cの&lt;/a&gt;ルーチンを呼び出します。）他のすべてのSQLステートメントは、&lt;a href=&quot;https://sqlite.org/src/file/src/build.c&quot;&gt;build.c&lt;/a&gt;からコーディングされます。&lt;a href=&quot;https://sqlite.org/src/file/src/auth.c&quot;&gt;auth.cの&lt;/a&gt;ファイルは、の機能を実装します&lt;a href=&quot;c3ref/set_authorizer&quot;&gt;sqlite3_set_authorizer（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e1c3e7c8a391dcea0df2cfdb448d836a449fa44" translate="yes" xml:space="preserve">
          <source>After the query loop ends, the table being queried is closed at instruction 14. This is done early in order to allow other processes or threads to access that table, if desired. The list of records that was built up inside the query loop is sorted by the instruction at 15. Instructions 16 through 18 walk through the record list (which is now in sorted order) and invoke the callback once for each record. Finally, the sorter is closed at instruction 19.</source>
          <target state="translated">クエリループが終了した後、クエリーされているテーブルは命令14でクローズされる。これは、必要に応じて他のプロセスやスレッドがそのテーブルにアクセスできるようにするために早めに行われます。クエリループ内で構築されたレコードのリストは、15で命令によってソートされます。16から18までの命令は、レコードリスト(現在はソートされた順番になっています)の中を歩き、各レコードに対してコールバックを1回呼び出します。最後に、命令19でソーターを閉じます。</target>
        </trans-unit>
        <trans-unit id="f7a2e27dec51b31c6ed11a02889862c44fec50cf" translate="yes" xml:space="preserve">
          <source>After the query loop is finished, the table &quot;examp2&quot; is closed at instruction 23 so that its lock will be released and it can be used by other threads or processes. The next step is to loop over all aggregate buckets and output one row of the result for each bucket. This is done by the loop at instructions 24 through 30. The AggNext instruction at 24 brings the next bucket into focus, or jumps to the end of the loop if all buckets have been examined already. The 3 columns of the result are fetched from the aggregator bucket in order at instructions 25 through 27. Finally, the callback is invoked at instruction 29.</source>
          <target state="translated">クエリループが終了した後、テーブル &quot;examp2 &quot;は命令23で閉じられ、そのロックが解除されて他のスレッドやプロセスで使用できるようになる。次のステップは、すべての集約バケットをループし、各バケットについて結果の1行を出力することである。これは命令24から30までのループによって行われます。24番のAggNext命令は次のバケットにフォーカスを当てます。結果の3カラムは、25から27の命令でアグリゲータのバケットから順番に取得されます。最後に、コールバックは命令29で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="429426adc150c9c3ef8de6d6350a6529072871cf" translate="yes" xml:space="preserve">
          <source>After the shared lock is acquired, we can begin reading information from the database file. In this scenario, we are assuming a cold cache, so information must first be read from mass storage into the operating system cache then transferred from operating system cache into user space. On subsequent reads, some or all of the information might already be found in the operating system cache and so only the transfer to user space would be required.</source>
          <target state="translated">共有ロックを取得した後、データベースファイルから情報の読み込みを開始することができます。このシナリオではコールドキャッシュを想定しているので、情報は最初にマスストレージからオペレーティングシステムキャッシュに読み込まれ、オペレーティングシステムキャッシュからユーザ空間に転送されなければなりません。その後の読み取りでは、情報の一部または全部が既にオペレーティングシステムキャッシュにあるかもしれないので、ユーザスペースへの転送だけが必要になります。</target>
        </trans-unit>
        <trans-unit id="7dbb1609bfd1352286bb98fe2bf2342dc300ba85" translate="yes" xml:space="preserve">
          <source>After the sqlite3_test_control() call above, then run a &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement the defines the imposter table. With the imposter mechanism enabled, this CREATE TABLE statement does not create a real table but instead merely adds an entry in SQLite's internal symbol table. Note that the CREATE TABLE statement must be in the correct format for the index. If the imposter table has the wrong number of columns or is not a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table or is otherwise incompatible with the index b-tree, then &lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; errors will result when the imposter table is used.</source>
          <target state="translated">上記のsqlite3_test_control（）呼び出しの後、偽のテーブルを定義する&lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt;ステートメントを実行します。インポスターメカニズムを有効にすると、このCREATE TABLEステートメントは実際のテーブルを作成せず、SQLiteの内部シンボルテーブルにエントリを追加するだけです。CREATE TABLEステートメントは、インデックスに対して正しい形式でなければならないことに注意してください。偽造者テーブルの列数が間違っているか、&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;テーブルではないか、またはインデックスBツリーと互換性がない場合、&lt;a href=&quot;rescode#corrupt&quot;&gt;偽造&lt;/a&gt;者テーブルを使用するとSQLITE_CORRUPTエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="19b56f4a17eee54fbb6b1cf61515b7eba9136d01" translate="yes" xml:space="preserve">
          <source>After the super-journal is constructed, its content is flushed to disk before any further actions are taken. On Unix, the directory that contains the super-journal is also synced in order to make sure the super-journal file will appear in the directory following a power failure.</source>
          <target state="translated">スーパージャーナルが構築された後、それ以上のアクションが実行される前に、その内容はディスクにフラッシュされます。Unixでは、停電の後にスーパージャーナルファイルがディレクトリに表示されることを確認するために、スーパージャーナルを含むディレクトリも同期されます。</target>
        </trans-unit>
        <trans-unit id="fbbb0de8accee9d1365cb588f7fd022b3b5c2ef0" translate="yes" xml:space="preserve">
          <source>After the virtual table has been populated with items from multiple languages, specify the language of interest using a &quot;langid=N&quot; term in the WHERE clause of the query:</source>
          <target state="translated">仮想テーブルに複数の言語の項目が入力された後、クエリのWHERE句で &quot;langid=N &quot;という用語を使用して、興味のある言語を指定します。</target>
        </trans-unit>
        <trans-unit id="71df6ec7d17df1770a907c6872e525177a99e4ae" translate="yes" xml:space="preserve">
          <source>AggFinal</source>
          <target state="translated">AggFinal</target>
        </trans-unit>
        <trans-unit id="5429b1962421b3a7ef0110360651a4a4da33b0bd" translate="yes" xml:space="preserve">
          <source>AggInverse</source>
          <target state="translated">AggInverse</target>
        </trans-unit>
        <trans-unit id="d448b9ea9be90bab4fd06d12a2a56f0f2d29976a" translate="yes" xml:space="preserve">
          <source>AggStep</source>
          <target state="translated">AggStep</target>
        </trans-unit>
        <trans-unit id="cec3f9e0080e6fe913455f3060c1205f8c71a2e5" translate="yes" xml:space="preserve">
          <source>AggStep1</source>
          <target state="translated">AggStep1</target>
        </trans-unit>
        <trans-unit id="d64e85e2bbdea61d402b8d3446eb6ec6b1845b61" translate="yes" xml:space="preserve">
          <source>AggValue</source>
          <target state="translated">AggValue</target>
        </trans-unit>
        <trans-unit id="558d7aad6e94b62a3c3d222979b260b60b6db7d2" translate="yes" xml:space="preserve">
          <source>Aggregate Functions</source>
          <target state="translated">集計機能</target>
        </trans-unit>
        <trans-unit id="d7162a0d5ccbad3a77b64c735aa5b633485f7bdb" translate="yes" xml:space="preserve">
          <source>Aggregate Functions And The GROUP BY and HAVING Clauses</source>
          <target state="translated">集約関数とGROUP BY句とHAVING句</target>
        </trans-unit>
        <trans-unit id="67a5e493a395536162c8208afa9edceff4645801" translate="yes" xml:space="preserve">
          <source>Aggregate window functions</source>
          <target state="translated">集計ウィンドウ機能</target>
        </trans-unit>
        <trans-unit id="96017d1624d86e09bd79e2a89a0c2374923ae0bf" translate="yes" xml:space="preserve">
          <source>Aggregate-mode meaning</source>
          <target state="translated">アグリゲートモードの意味</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="37b83d77a9eb919bf1eed567f29546fa4dda4c46" translate="yes" xml:space="preserve">
          <source>All C-preprocessor macros used to control compile-time options now begin with the prefix &quot;SQLITE_&quot;. This may require changes to applications that compile SQLite using their own makefiles and with custom compile-time options, hence we mark this as a *** Potentially incompatible change ***</source>
          <target state="translated">コンパイル時オプションを制御するために使用されるすべての C プリプロセッサマクロは、接頭辞 &quot;SQLITE_&quot; で始まるようになりました。これは、独自の makefile を使用して SQLite をコンパイルしたり、カスタムのコンパイル時オプションを使用して SQLite をコンパイルするアプリケーションに変更を必要とする可能性があります。</target>
        </trans-unit>
        <trans-unit id="c755a70a5620bfbf08d2e74296f5e3952109420b" translate="yes" xml:space="preserve">
          <source>All FTS5 tables feature a special hidden column named &quot;rank&quot;. If the current query is not a full-text query (i.e. if it does not include a MATCH operator), the value of the &quot;rank&quot; column is always NULL. Otherwise, in a full-text query, column rank contains by default the same value as would be returned by executing the bm25() auxiliary function with no trailing arguments.</source>
          <target state="translated">すべてのFTS5テーブルは、&quot;rank &quot;という名前の特別な隠しカラムを特徴としている。現在のクエリがフルテキストクエリではない場合(つまり、MATCH演算子を含まない場合)、&quot;rank &quot;カラムの値は常にNULLとなります。そうでない場合は、フルテキストクエリの場合、 rank カラムの値は、デフォルトでは、末尾に引数を指定せずに bm25()補助関数を実行したときに返されるのと同じ値となります。</target>
        </trans-unit>
        <trans-unit id="1bb6feba3d971df2c155ebbf32ecf1aeefc50b98" translate="yes" xml:space="preserve">
          <source>All RBU updates use the &quot;OR ROLLBACK&quot; constraint handling mechanism.</source>
          <target state="translated">すべてのRBU更新は、「OR ROLLBACK」制約処理メカニズムを使用します。</target>
        </trans-unit>
        <trans-unit id="298c1a6a5b3113028f5781057322c183e5fb18cf" translate="yes" xml:space="preserve">
          <source>All SQLite database connections running within a single process share a single</source>
          <target state="translated">単一プロセス内で実行されているすべての SQLite データベース接続は、単一の</target>
        </trans-unit>
        <trans-unit id="68fd5c55fe4176eb0a40eb1e510440312024923d" translate="yes" xml:space="preserve">
          <source>All SQLite releases starting with 3.9.0 use a three-number &quot;&lt;a href=&quot;http://semver.org&quot;&gt;semantic version&lt;/a&gt;&quot; of the form X.Y.Z. The first number X is only increased when there is a change that breaks backward compatibility. The current value for X is 3, and the SQLite developers plan to support the current SQLite database file format, SQL syntax, and C interface through &lt;a href=&quot;lts&quot;&gt;at least the year 2050&lt;/a&gt;. Hence, one can expect that all future versions of SQLite for the next several decades will begin with &quot;3.&quot;.</source>
          <target state="translated">3.9.0以降のすべてのSQLiteリリースは、XYZ形式の3つの数字の「&lt;a href=&quot;http://semver.org&quot;&gt;セマンティックバージョン&lt;/a&gt;」を使用しています。最初の数字Xは、下位互換性を損なう変更があった場合にのみ増加します。 Xの現在の値は3であり、SQLite開発者は現在のSQLiteデータベースファイル形式、SQL構文、およびCインターフェースを&lt;a href=&quot;lts&quot;&gt;少なくとも2050年まで&lt;/a&gt;サポートする予定です。したがって、今後数十年間のSQLiteのすべての将来のバージョンは「3.」で始まると予想できます。</target>
        </trans-unit>
        <trans-unit id="cbf3befd42e47b2311a200fc6c4505d6d3e74ba2" translate="yes" xml:space="preserve">
          <source>All calls obtain an exclusive &quot;checkpoint&quot; lock on the database file. If any other process is running a checkpoint operation at the same time, the lock cannot be obtained and SQLITE_BUSY is returned. Even if there is a busy-handler configured, it will not be invoked in this case.</source>
          <target state="translated">すべての呼び出しは、データベースファイル上の排他的な「チェックポイント」ロックを取得します。他のプロセスが同時にチェックポイント操作を実行している場合、ロックは取得できず、SQLITE_BUSYが返されます。たとえビジーハンドラが設定されていても、この場合は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="34e057ca62b435caa749880050f6e16611809628" translate="yes" xml:space="preserve">
          <source>All changes made by these functions are enclosed in a savepoint transaction. If any other error (aside from a constraint failure when attempting to write to the target database) occurs, then the savepoint transaction is rolled back, restoring the target database to its original state, and an SQLite error code returned.</source>
          <target state="translated">これらの関数によって行われたすべての変更は、savepoint トランザクションの中に格納されます。その他のエラー(ターゲットデータベースへの書き込みを試みた際の制約の失敗は別として)が発生した場合、savepoint トランザクションはロールバックされ、ターゲットデータベースは元の状態に復元され、SQLite エラーコードが返されます。</target>
        </trans-unit>
        <trans-unit id="d1dddd8355c69e5dffb77af16e6ef1de6dd31f80" translate="yes" xml:space="preserve">
          <source>All changes to a virtual table are made using the xUpdate method. This one method can be used to insert, delete, or update.</source>
          <target state="translated">仮想テーブルへの変更はすべて xUpdate メソッドを使用して行われます。この1つのメソッドを使用して、挿入、削除、更新を行うことができます。</target>
        </trans-unit>
        <trans-unit id="d5f7c518c035d2e61b79e18649b848121cf76a11" translate="yes" xml:space="preserve">
          <source>All changes to be applied by RBU are stored in a separate SQLite database called the &quot;RBU database&quot;. The database that is to be modified is called the &quot;target database&quot;.</source>
          <target state="translated">RBUによって適用されるすべての変更は、「RBUデータベース」と呼ばれる別個のSQLiteデータベースに格納される。変更の対象となるデータベースは、「ターゲットデータベース」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="99a33b875d90f9fced8d63e555c38a8d47436549" translate="yes" xml:space="preserve">
          <source>All code is archived on three separate machines: &lt;a href=&quot;https://www.sqlite.org&quot;&gt;https://www.sqlite.org&lt;/a&gt;, &lt;a href=&quot;https://www2.sqlite.org&quot;&gt;https://www2.sqlite.org&lt;/a&gt;, &lt;a href=&quot;https://www3.sqlite.org&quot;&gt;https://www3.sqlite.org&lt;/a&gt;. These machines are located in different cities (Dallas, Newark, and San Francisco, respectively) and managed by two different hosting companies (&lt;a href=&quot;https://linode.com&quot;&gt;Linode&lt;/a&gt; for the first two and &lt;a href=&quot;https://digitalocean.com&quot;&gt;Digital Ocean&lt;/a&gt; for the third). This diversity is intended to avoid a single point of failure.</source>
          <target state="translated">：すべてのコードは、3台の別々のマシンにアーカイブされている&lt;a href=&quot;https://www.sqlite.org&quot;&gt;https://www.sqlite.org&lt;/a&gt;、&lt;a href=&quot;https://www2.sqlite.org&quot;&gt;https://www2.sqlite.org&lt;/a&gt;、&lt;a href=&quot;https://www3.sqlite.org&quot;&gt;https://www3.sqlite.org&lt;/a&gt;。これらのマシンは異なる都市（それぞれダラス、ニューアーク、サンフランシスコ）にあり、2つの異なるホスティング会社（最初の2つは&lt;a href=&quot;https://linode.com&quot;&gt;Linode&lt;/a&gt;、3つ目は&lt;a href=&quot;https://digitalocean.com&quot;&gt;Digital Ocean&lt;/a&gt;）によって管理されています。この多様性は、単一障害点を回避することを目的としています。</target>
        </trans-unit>
        <trans-unit id="d9708b5aef2e3a29e2a2fbfcf884786831700182" translate="yes" xml:space="preserve">
          <source>All common table expressions (ordinary and recursive) are created by prepending a WITH clause in front of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;, or &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; statement. A single WITH clause can specify one or more common table expressions, some of which are ordinary and some of which are recursive.</source>
          <target state="translated">すべての共通テーブル式（通常および再帰的）は、&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;、&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;、&lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;、または&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;ステートメントの前にWITH句を付加することによって作成されます。単一のWITH句では、1つ以上の共通テーブル式を指定できます。その一部は通常のもので、一部は再帰的です。</target>
        </trans-unit>
        <trans-unit id="202e588a0b168a0b374436adc14ca3f0090beda4" translate="yes" xml:space="preserve">
          <source>All component tables must have the same PRIMARY KEY declaration (if any).</source>
          <target state="translated">すべてのコンポーネントテーブルは、同じPRIMARY KEY宣言を持っていなければなりません(ある場合)。</target>
        </trans-unit>
        <trans-unit id="daa2fa17b60e175765b75266a7e677f096a5be75" translate="yes" xml:space="preserve">
          <source>All component tables must have the same set of columns, in the same order.</source>
          <target state="translated">すべてのコンポーネントテーブルは、同じ順序で同じ列のセットを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="220fd2211d0e90275b8fb6a6e680abc0805ee11c" translate="yes" xml:space="preserve">
          <source>All connections hold SQLITE_LOCK_SHARED continuously while attached to a WAL-mode database. This is true for both read/write connections and read-only connections. The SQLITE_LOCK_SHARED lock is held even by connections that are not within transaction. This is different from rollback mode, where the SQLITE_LOCK_SHARED is released at the end of each transaction.</source>
          <target state="translated">すべての接続は、WAL モードのデータベースに接続されている間、SQLITE_LOCK_SHARED を継続的に保持します。これは、読み取り/書き込み接続と読み取り専用接続の両方に当てはまります。SQLITE_LOCK_SHAREDロックは、トランザクション内にない接続でも保持されます。これは、各トランザクションの終了時にSQLITE_LOCK_SHAREDが解放されるロールバックモードとは異なります。</target>
        </trans-unit>
        <trans-unit id="277f01faa8ef768e5f765984b4b0ad448802a74a" translate="yes" xml:space="preserve">
          <source>All database files to be modified by an UPDATE, INSERT or DELETE are now locked before any changes are made to any files. This makes it safe (I think) to access the same database simultaneously from multiple processes.</source>
          <target state="translated">UPDATE、INSERT、DELETEで変更されるデータベースファイルはすべて、どのファイルに変更が加えられる前にロックされるようになりました。これにより、複数のプロセスから同時に同じデータベースにアクセスすることが安全になりました(と私は考えています)。</target>
        </trans-unit>
        <trans-unit id="bbad06084491f62976cce387f8ad55cb93120cd9" translate="yes" xml:space="preserve">
          <source>All existing versions of SQLite do a full table scan for ANALYZE. This can be slow for multi-gigabyte and larger databases. Future versions of SQLite might use random sampling rather than a full table scan to obtain estimates for the database shape, especially on larger tables. The results would approximate, but will be close enough for query planning purposes. As of 2017-03-20, this concept has been tested in experimental branches and appears to work well, but has not been folded into an official release.</source>
          <target state="translated">既存のすべてのバージョンの SQLite は、ANALYZE のテーブルのフルスキャンを行います。これは、複数ギガバイト以上のデータベースでは時間がかかる場合があります。将来のバージョンのSQLiteでは、データベースの形状の推定値を得るために、テーブルのフルスキャンではなくランダムサンプリングを使用する可能性があります。結果はおおよそのものになりますが、クエリ計画の目的には十分に近いものになるでしょう。2017-03-20現在、このコンセプトは実験的なブランチでテストされており、うまく動作するように見えますが、公式リリースには折り込まれていません。</target>
        </trans-unit>
        <trans-unit id="57093dee5c757a1ceefead7158318b61ace62d82" translate="yes" xml:space="preserve">
          <source>All extended result codes are also error codes. Hence the terms &quot;extended result code&quot; and &quot;extended error code&quot; are interchangeable.</source>
          <target state="translated">すべての拡張結果コードはエラーコードでもある。したがって、&quot;拡張結果コード &quot;と &quot;拡張エラーコード &quot;という用語は互換性があります。</target>
        </trans-unit>
        <trans-unit id="1c7deb3a8cda47ee51b4f2643f421866ddf4e49e" translate="yes" xml:space="preserve">
          <source>All five date and time functions take a time string as an argument. The time string is followed by zero or more modifiers. The strftime() function also takes a format string as its first argument.</source>
          <target state="translated">5つの日付および時刻関数はすべて、引数として時刻文字列を受け取ります。時刻文字列の後には、0個以上の修飾子が続きます。strftime()関数もまた、フォーマット文字列を第一引数に取ります。</target>
        </trans-unit>
        <trans-unit id="53a08b0d87542a21311bc53db7ff7fe3705579a9" translate="yes" xml:space="preserve">
          <source>All incompatibilities are on obscure interfaces and hence should have zero impact on most applications.</source>
          <target state="translated">すべての非互換性は曖昧なインターフェース上にあるため、ほとんどのアプリケーションには影響がないはずです。</target>
        </trans-unit>
        <trans-unit id="7142a85dafa0005cc3ffdfca6d520d8fb0b49b9b" translate="yes" xml:space="preserve">
          <source>All internal computations assume the &lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;Gregorian calendar&lt;/a&gt; system. It is also assumed that every day is exactly 86400 seconds in duration.</source>
          <target state="translated">すべての内部計算は、&lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar&quot;&gt;グレゴリオ暦&lt;/a&gt;システムを前提としています。また、毎日の期間は正確に86400秒であると想定されています。</target>
        </trans-unit>
        <trans-unit id="04348814491f3fa4a3cfd08b8932122a12a20fd2" translate="yes" xml:space="preserve">
          <source>All joins in SQLite are &lt;a href=&quot;optoverview#table_order&quot;&gt;implemented using nested scans&lt;/a&gt;. When a SELECT query that features a join is analyzed using EXPLAIN QUERY PLAN, one SCAN or SEARCH record is output for each nested loop. For example:</source>
          <target state="translated">SQLiteのすべての結合は、&lt;a href=&quot;optoverview#table_order&quot;&gt;ネストされたスキャンを使用し&lt;/a&gt;て実装されます。EXPLAIN QUERY PLANを使用して結合を特徴とするSELECTクエリを分析すると、ネストされたループごとに1つのSCANまたはSEARCHレコードが出力されます。例えば：</target>
        </trans-unit>
        <trans-unit id="f65525e42bafddb791aaf9fce17e894639d4b9bf" translate="yes" xml:space="preserve">
          <source>All joins in SQLite are based on the cartesian product of the left and right-hand datasets. The columns of the cartesian product dataset are, in order, all the columns of the left-hand dataset followed by all the columns of the right-hand dataset. There is a row in the cartesian product dataset formed by combining each unique combination of a row from the left-hand and right-hand datasets. In other words, if the left-hand dataset consists of</source>
          <target state="translated">SQLiteにおけるすべての結合は、左手と右手のデータセットの直交積に基づいています。カルテシアン積データセットの列は、左手のデータセットのすべての列の後に右手のデータセットのすべての列が続く順になっています。直交積データセットには,左手データセットと右手データセットの行のユニークな組み合わせをそれぞれ組み合わせてできた行がある.言い換えれば,左手のデータセットが</target>
        </trans-unit>
        <trans-unit id="71cb3ce79e6a6e92d559b23cf8ac04406011b307" translate="yes" xml:space="preserve">
          <source>All machines use SSD except Win7 which has a hard-drive. The test database is 100K blobs with sizes uniformly distributed between 8K and 12K, for a total of about 1 gigabyte of content. The database page size is 4KiB. The -DSQLITE_DIRECT_OVERFLOW_READ compile-time option was used for all of these tests. Tests were run multiple times. The first run was used to warm up the cache and its timings were discarded.</source>
          <target state="translated">ハードドライブを搭載したWin7を除き、すべてのマシンでSSDを使用しています。テストデータベースは100Kのブロブで、サイズは8Kから12Kの間で一様に分散されており、合計で約1ギガバイトのコンテンツが含まれています。データベースのページサイズは4KiBです。これらのテストはすべて、-DSQLITE_DIRECT_OVERFLOW_READ コンパイル時オプションが使用されました。テストは複数回実行されました。最初の実行はキャッシュのウォームアップに使用され、そのタイミングは破棄されました。</target>
        </trans-unit>
        <trans-unit id="1ffd5cbd04736788f9ab581e918b3089cbebbd40" translate="yes" xml:space="preserve">
          <source>All non-ASCII characters (those with codepoints greater than 127) are always considered token characters. If any non-ASCII characters are specified as part of the separators option, they are ignored.</source>
          <target state="translated">すべての非 ASCII キ ャ ラ ク タ(コ ー ド ポ イ ン ト が 127 より大きいキ ャ ラ ク タ)はつねに ト ー ク ン キ ャ ラ ク タ と 見な さ れます。separators オプシ ョ ンの一部 と し て非 ASCII キ ャ ラ ク タ を指定 し た場合、 それは無視 さ れます。</target>
        </trans-unit>
        <trans-unit id="b254312215697943ca788556e0d6b9c9450b8abd" translate="yes" xml:space="preserve">
          <source>All non-hidden columns (i.e. all columns matched by &quot;SELECT *&quot;) of the target table must be present in the input table. For virtual tables, hidden columns are optional - they are updated by RBU if present in the input table, or not otherwise. For example, to write to an fts4 table with a hidden languageid column such as:</source>
          <target state="translated">ターゲット・テーブルの非隠蔽列(すなわち、&quot;SELECT *&quot;でマッチしたすべての列)は、入力テーブルに存在していなければならない。仮想テーブルの場合、非表示の列はオプションです-入力テーブルに存在する場合はRBUによって更新され、そうでない場合は更新されません。例えば、次のような隠されたlanguageidカラムを持つfts4テーブルに書き込むには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="a8f660b04140a9109b926733d1d15823285d0d8f" translate="yes" xml:space="preserve">
          <source>All of SQLite's &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate functions&lt;/a&gt; may be used as aggregate window functions. It is also possible to &lt;a href=&quot;windowfunctions#udfwinfunc&quot;&gt;create user-defined aggregate window functions&lt;/a&gt;.</source>
          <target state="translated">SQLiteのすべての&lt;a href=&quot;lang_aggfunc&quot;&gt;集計関数&lt;/a&gt;は、集計ウィンドウ関数として使用できます。&lt;a href=&quot;windowfunctions#udfwinfunc&quot;&gt;ユーザー定義の集計ウィンドウ関数&lt;/a&gt;を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ceaa2e316a20fa6709117f30bf44efbc7dbbc8c3" translate="yes" xml:space="preserve">
          <source>All of the WAL-index locks, except for WAL_READ_LOCK(0), are held exclusively while reconstructing the global shared WAL-index during &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt;.</source>
          <target state="translated">WAL_READ_LOCK（0）を除くすべてのWALインデックスロックは、&lt;a href=&quot;walformat#recovery&quot;&gt;リカバリ&lt;/a&gt;中にグローバル共有WALインデックスを再構築している間、排他的に保持されます。</target>
        </trans-unit>
        <trans-unit id="d0d3bdb37117516e584fc85e1c08d9757cba475e" translate="yes" xml:space="preserve">
          <source>All of the _printf() routines above are built around the following two functions:</source>
          <target state="translated">上記のすべての _printf()ルーチンは、以下の 2 つの関数を中心に構築されています。</target>
        </trans-unit>
        <trans-unit id="8b4e36a69bec3556f94aa311ae03a74097503a22" translate="yes" xml:space="preserve">
          <source>All of the above conditions must be false in order for problems to occur. And even if all of the conditiona above are false, most things will still operator correctly. Only the &lt;a href=&quot;#integcheck&quot;&gt;integrity-check&lt;/a&gt; command and the &lt;a href=&quot;#snippet&quot;&gt;auxiliary functions&lt;/a&gt; might given unexpected results.</source>
          <target state="translated">問題が発生するためには、上記のすべての条件が偽である必要があります。また、上記のすべての条件が偽であっても、ほとんどのものは正しく動作します。唯一の&lt;a href=&quot;#integcheck&quot;&gt;整合性チェックの&lt;/a&gt;コマンドおよび&lt;a href=&quot;#snippet&quot;&gt;補助機能は、&lt;/a&gt;予期しない結果を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="99f6322b342eb9d2dc214ced37e7517990352762" translate="yes" xml:space="preserve">
          <source>All of the above definitions are included in the &quot;sqlite.h&quot; header file that comes in the source tree.</source>
          <target state="translated">上記のすべての定義は、ソースツリーにある &quot;sqlite.h &quot;ヘッダファイルに含まれています。</target>
        </trans-unit>
        <trans-unit id="693deb1c0ebd6029cb9d2f1f239c3bb4c352f744" translate="yes" xml:space="preserve">
          <source>All of the above is possible with Git, given the right extensions and tools and using the right commands. But it is not easy to do, and so it rarely gets done. Consequently, developers have less awareness of what is happening in the code.</source>
          <target state="translated">適切な拡張機能とツールを使い、適切なコマンドを使えば、上記のことはすべてGitで可能です。しかし、それを実行するのは簡単ではありません。その結果、開発者はコードの中で何が起こっているのかをあまり意識することができなくなってしまいます。</target>
        </trans-unit>
        <trans-unit id="ae8b16657892b5f01e3b5c073bd55f99b7c4acd2" translate="yes" xml:space="preserve">
          <source>All of the built-in SQL functions of SQLite are created using exactly these same interfaces. Refer to the SQLite source code, and in particular the &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt; and &lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt; source files for examples.</source>
          <target state="translated">SQLiteのすべての組み込みSQL関数は、まったく同じインターフェイスを使用して作成されます。例については、SQLiteソースコード、特に&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/date.c&quot;&gt;date.c&lt;/a&gt;および&lt;a href=&quot;http://www.sqlite.org/src/doc/trunk/src/func.c&quot;&gt;func.c&lt;/a&gt;ソースファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="fc1d5a95c4233b63280d0f7d11d256d9ad3780ef" translate="yes" xml:space="preserve">
          <source>All of the complications above (and others not mentioned here) arise from the need to preserve backwards compatibility for the hundreds of billions of SQLite database files in circulation. In a perfect world, there would be no such thing as a &quot;rowid&quot; and all tables would following the standard semantics implemented as &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; tables, only without the extra &quot;WITHOUT ROWID&quot; keywords. Unfortunately, life is messy. The designer of SQLite offers his sincere apology for the current mess.</source>
          <target state="translated">上記（およびここで言及されていないその他）のすべての複雑さは、流通している何千億ものSQLiteデータベースファイルの下位互換性を維持する必要性から生じます。完全な世界では、「ROWID」などはなく、すべてのテーブルは、&lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt;テーブルとして実装された標準のセマンティクスに従いますが、「WITHOUT ROWID」キーワードはありません。残念ながら、人生は乱雑です。SQLiteの設計者は、現在の混乱に心からお詫びします。</target>
        </trans-unit>
        <trans-unit id="778689296bb157e74a14076a42a4ee37798df0eb" translate="yes" xml:space="preserve">
          <source>All of the existing safe languages are new. The developers of SQLite applaud the efforts of computer language researchers in trying to develop languages that are easier to program safely. We encourage these efforts to continue. Be we ourselves are more interested in old and boring languages when it comes to implementing SQLite.</source>
          <target state="translated">既存の安全な言語はすべて新しいものです。SQLite の開発者は、安全にプログラミングしやすい言語を開発しようとするコンピュータ言語研究者の努力に拍手を送ります。私たちはこれらの努力を継続することを奨励します。私たち自身、SQLiteの実装に関しては、古くて退屈な言語に興味を持っています。</target>
        </trans-unit>
        <trans-unit id="7375d32a78c6b8f51d450c556f25932bdf217bf1" translate="yes" xml:space="preserve">
          <source>All of the experiments that follow operate the same with either &quot;test1.dir&quot; or &quot;test1.tree&quot;. Very little performance difference is measured in either case, regardless of operating system.</source>
          <target state="translated">以下の実験では、&quot;test1.dir &quot;と &quot;test1.tree &quot;のどちらでも同じ動作をします。どちらの場合も、オペレーティングシステムに関係なく、性能の差はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="643d0c9cb63fb8635827200eced1089f9e88183c" translate="yes" xml:space="preserve">
          <source>All of the result in the example are the same if the comparisons are commuted - if expressions of the form &quot;a&amp;lt;40&quot; are rewritten as &quot;40&amp;gt;a&quot;.</source>
          <target state="translated">例の結果はすべて、比較が交換された場合、つまり「a &amp;lt;40」という形式の式が「40&amp;gt; a」に書き換えられた場合と同じです。</target>
        </trans-unit>
        <trans-unit id="cc0e885150a13c9c4803941a5f8336469ed747f0" translate="yes" xml:space="preserve">
          <source>All of the tests above must run successfully, on multiple platforms and under multiple compile-time configurations, before each release of SQLite.</source>
          <target state="translated">上記のすべてのテストは、SQLite の各リリース前に、複数のプラットフォームで、複数のコンパイル時の設定で正常に実行されなければなりません。</target>
        </trans-unit>
        <trans-unit id="7efae1cd770ea6fe5f2bf4478750e0f4cc942ea9" translate="yes" xml:space="preserve">
          <source>All of these commands work the same way if the filename argument is is a ZIP Archive instead of an SQLite database.</source>
          <target state="translated">ファイル名の引数が SQLite データベースの代わりに ZIP アーカイブである場合、これらのコマンドはすべて同じように動作します。</target>
        </trans-unit>
        <trans-unit id="bf4dfc2a775cfce09d4f8b1860eec11883d0cac7" translate="yes" xml:space="preserve">
          <source>All of these factors combine to make SQLite a very trouble-free software library.</source>
          <target state="translated">これらすべての要素が組み合わさって、SQLiteは非常にトラブルの少ないソフトウェア・ライブラリとなっています。</target>
        </trans-unit>
        <trans-unit id="7683c6e8ad5efd15af0f1da2349a585dbe4001cb" translate="yes" xml:space="preserve">
          <source>All of these things can be provided in a single auxiliary C code file and then linked with the stock &quot;sqlite3.c&quot; code file to generate a working SQLite build for the target operating system. In addition to the alternative mutex and memory allocation subsystems and the new VFS, the auxiliary C code file should contain implementations for the following two routines:</source>
          <target state="translated">これらはすべて単一の補助Cコードファイルで提供され、標準の &quot;sqlite3.c &quot;コードファイルとリンクして、ターゲットOS用のSQLiteビルドを生成することができます。代替のミューテックスとメモリ割り当てサブシステムと新しいVFSに加えて、補助Cコードファイルには以下の2つのルーチンの実装が含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="690aa8cfa4b8586b89a0a9eedc4d3f3b13222c70" translate="yes" xml:space="preserve">
          <source>All other bytes of the database file header are reserved for future expansion and must be set to zero.</source>
          <target state="translated">データベースファイルヘッダーの他のすべてのバイトは、将来の展開のために予約されており、ゼロに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="74f932ce0ba425204c0c4c7e4d764d13c207d60d" translate="yes" xml:space="preserve">
          <source>All processes using a database must be on the same host computer; WAL does not work over a network filesystem.</source>
          <target state="translated">データベースを使用するすべてのプロセスは、同じホストコンピュータ上になければなりません。</target>
        </trans-unit>
        <trans-unit id="78a418c8d3a0ce039842b297ad3c3dfb42d51a90" translate="yes" xml:space="preserve">
          <source>All queries on the table must be full-text queries. In other words, they must use the MATCH or = operator with the table-name column as the left-hand operand, or else use the table-valued function syntax. Any query that is not a full-text query results in an error.</source>
          <target state="translated">テーブルに対するすべてのクエリは、フル・テキスト・クエリでなければなりません。言い換えれば、テーブル名カラムを左手のオペランドとしてMATCHまたは=演算子を使用するか、テーブル値関数構文を使用しなければなりません。フルテキストクエリでないクエリはエラーになります。</target>
        </trans-unit>
        <trans-unit id="38351d4546ab4ff59382ce23bdac471def2ad5d5" translate="yes" xml:space="preserve">
          <source>All reads from and writes to the main database file begin at a page boundary and all writes are an integer number of pages in size. Reads are also usually an integer number of pages in size, with the one exception that when the database is first opened, the first 100 bytes of the database file (the database file header) are read as a sub-page size unit.</source>
          <target state="translated">メインデータベースファイルからの読み込みと書き込みはすべてページ境界から始まり、書き込みはすべて整数のページサイズです。読み取りも通常は整数のページ数のサイズですが、データベースが最初に開かれたときに、データベースファイルの最初の100バイト(データベースファイルヘッダ)がサブページサイズの単位として読み込まれます。</target>
        </trans-unit>
        <trans-unit id="d450d3a75d9f08311a07a29768bf79cccc1c19d2" translate="yes" xml:space="preserve">
          <source>All result codes are integers. Symbolic names for all result codes are created using &quot;#define&quot; macros in the sqlite3.h header file. There are separate sections in the sqlite3.h header file for the &lt;a href=&quot;c3ref/c_abort&quot;&gt;result code definitions&lt;/a&gt; and the &lt;a href=&quot;c3ref/c_abort_rollback&quot;&gt;extended result code definitions&lt;/a&gt;.</source>
          <target state="translated">すべての結果コードは整数です。すべての結果コードのシンボル名は、sqlite3.hヘッダーファイルの「#define」マクロを使用して作成されます。sqlite3.hヘッダーファイルには、&lt;a href=&quot;c3ref/c_abort&quot;&gt;結果コードの定義&lt;/a&gt;と&lt;a href=&quot;c3ref/c_abort_rollback&quot;&gt;拡張さ&lt;/a&gt;れた結果コードの定義のための個別のセクションがあります。</target>
        </trans-unit>
        <trans-unit id="4028b4aa3d3e24115d72e2f624df2443ac4d4652" translate="yes" xml:space="preserve">
          <source>All spaces following the first two keywords are converted into a single space.</source>
          <target state="translated">最初の2つのキーワードに続くスペースはすべて1つのスペースに変換されます。</target>
        </trans-unit>
        <trans-unit id="e86f24edc76db2b20a12087f5cf419af602faa95" translate="yes" xml:space="preserve">
          <source>All string values at the SQL level in SQLite are dynamic strings. Requiring type strings to be static makes it difficult to create an application-defined SQL function that can synthesize a pointer of an arbitrary type. We do not want users to create such SQL functions, since such functions would compromise the security of the system. Thus, the requirement to use static strings helps to defend that the integrity of the pointer-passing interfaces against ill-designed SQL functions. The static string requirement is not a perfect defense, since a sophisticated programmer can code around it, and a novice program can simply take the memory leak. But by stating that the pointer type string must be static, we hope to encourage developers who might otherwise use a dynamic string for the pointer type to think more carefully about the problem and avoid introducing security issues.</source>
          <target state="translated">SQLite の SQL レベルでの文字列値はすべて動的な文字列です。型文字列を静的なものにする必要があるため、任意の型のポインタを合成するアプリケーション定義のSQL関数を作成することが困難になります。このようなSQL関数はシステムのセキュリティを脅かすことになるので、ユーザには作成してほしくありません。このように、静的文字列を使用するという要件は、不正に設計されたSQL関数からポインタを渡すインタフェースの完全性を守るのに役立ちます。なぜなら、洗練されたプログラマはそれを回避してコーディングすることができ、初心者のプログラムは単にメモリリークを取ることができるからです。しかし、ポインタ型の文字列は静的でなければならないと規定することで、そうでなければポインタ型に動的な文字列を使うかもしれない開発者が、この問題についてより慎重に考え、セキュリティ問題の導入を避けることができるようになることを期待しています。</target>
        </trans-unit>
        <trans-unit id="9a460cfc406da09ab8128bfc4445d97c56d406f1" translate="yes" xml:space="preserve">
          <source>All subsequent command line words are command arguments, not options.</source>
          <target state="translated">それ以降のコマンドラインの単語はすべてコマンド引数であり、オプションではありません。</target>
        </trans-unit>
        <trans-unit id="1ed156deca85bc9a5dd9088fbd94f8a842f1f33c" translate="yes" xml:space="preserve">
          <source>All substitutions begin with a single &quot;%&quot; and end with a single type character. The other elements of the substitution are optional.</source>
          <target state="translated">すべての置換は、1つの&quot;%&quot;で始まり、1つの型文字で終わります。置換の他の要素は任意です。</target>
        </trans-unit>
        <trans-unit id="6c42d2b7071c7a3c388400fdb8f6ee7f3109b7cf" translate="yes" xml:space="preserve">
          <source>All tables that participate in a union-vtab must be &lt;a href=&quot;rowidtable&quot;&gt;rowid tables&lt;/a&gt;.</source>
          <target state="translated">union-vtabに参加するすべてのテーブルは、&lt;a href=&quot;rowidtable&quot;&gt;ROWIDテーブルである&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="a31bee81e9b968bc240c90d0ddec46a1b51435a7" translate="yes" xml:space="preserve">
          <source>All tables that participate in a union-vtab must have identical CREATE TABLE definitions, except that the names of the tables can be different.</source>
          <target state="translated">union-vtabに参加するすべてのテーブルは、テーブル名が異なる可能性があることを除いて、同一のCREATE TABLE定義を持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="567093004d4bf6708c2d16ff16df1498f9ca4cec" translate="yes" xml:space="preserve">
          <source>All terms of the WHERE clause are analyzed to see if they can be satisfied using indices. To be usable by an index a term must be of one of the following forms:</source>
          <target state="translated">WHERE句のすべての項は、インデックスを使用して満たすことができるかどうか分析されます。インデックスを使用できるようにするには、用語は以下の形式のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="cbf993933e40301457f333ff6f1f8a23481fc0a6" translate="yes" xml:space="preserve">
          <source>All tests are conducted on an otherwise quiescent machine. A simple Tcl script was used to generate and run all the tests. A copy of this Tcl script can be found in the SQLite source tree in the file &lt;b&gt;tools/speedtest.tcl&lt;/b&gt;.</source>
          <target state="translated">すべてのテストは、それ以外は休止しているマシンで行われます。簡単なTclスクリプトを使用して、すべてのテストを生成および実行しました。このTclスクリプトのコピーは、SQLiteソースツリーの&lt;b&gt;tools / speedtest.tcl&lt;/b&gt;ファイルにあります。</target>
        </trans-unit>
        <trans-unit id="b130e54f0f69ef3abad26bc072b0470f6263286a" translate="yes" xml:space="preserve">
          <source>All tests must give the same answer in all three builds. See the &lt;a href=&quot;testing&quot;&gt;&quot;How SQLite Is Tested&quot;&lt;/a&gt; document for more detail.</source>
          <target state="translated">すべてのテストは、3つのビルドすべてで同じ答えを与える必要があります。詳細については、&lt;a href=&quot;testing&quot;&gt;「SQLiteのテスト方法」&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f132159b2587371da6eaa867ee955aed59cbbd60" translate="yes" xml:space="preserve">
          <source>All text strings are insert using one of the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text()&lt;/a&gt; family of functions.</source>
          <target state="translated">すべてのテキスト文字列は、&lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text（）&lt;/a&gt;ファミリーの関数の1つを使用して挿入されます。</target>
        </trans-unit>
        <trans-unit id="67d8d36777ef2e501af7ab9b2e6ef786e48ae2b6" translate="yes" xml:space="preserve">
          <source>All that said, it is possible that SQLite might one day be recoded in Rust. Recoding SQLite in Go is unlikely since Go hates assert(). But Rust is a possibility. Some preconditions that must occur before SQLite is recoded in Rust include:</source>
          <target state="translated">そうは言っても、いつかSQLiteがRustで再コード化される可能性はあります。Go は assert()を嫌うので、SQLite を Go で再コード化することは考えにくいです。しかし、Rustは可能性があります。SQLiteをRustで再コード化する前に発生しなければならないいくつかの前提条件は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="707caca3d9bbd176531f568662a7102a40b5f6fd" translate="yes" xml:space="preserve">
          <source>All the example queries above return the ten most relevant query results. By modifying the values used with the OFFSET and LIMIT clauses, a query to return (say) the next ten most relevant results is easy to construct. This may be used to obtain the data required for a search applications second and subsequent pages of results.</source>
          <target state="translated">上記のすべての例のクエリは、最も関連性の高い10個のクエリ結果を返します。OFFSET句とLIMIT句で使用される値を変更することで、次の最も関連性の高い10の結果を返すクエリを簡単に構築することができます。これは、検索アプリケーションの2ページ目以降の結果ページに必要なデータを取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="470143461be606a45aab0f210d1498edb2c84368" translate="yes" xml:space="preserve">
          <source>All things considered, applications should normally be able to hold their maximum memory allocation size below 2K or 4K. This gives a value for log&lt;sub&gt;2&lt;/sub&gt;(&lt;b&gt;n&lt;/b&gt;) of 2 or 3. This will limit &lt;b&gt;N&lt;/b&gt; to between 2 and 2.5 times &lt;b&gt;M&lt;/b&gt;.</source>
          <target state="translated">すべてを考慮すると、アプリケーションは通常、最大メモリ割り当てサイズを2Kまたは4K未満に保つことができるはずです。これにより、log &lt;sub&gt;2&lt;/sub&gt;（&lt;b&gt;n&lt;/b&gt;）の値が2または3になります。これにより、&lt;b&gt;N&lt;/b&gt;が&lt;b&gt;Mの&lt;/b&gt; 2〜2.5倍に制限されます。</target>
        </trans-unit>
        <trans-unit id="635a64a808a6eed58043c45da38b8c4ec5742ac1" translate="yes" xml:space="preserve">
          <source>All three auxiliary functions extract a set of &quot;matchable phrases&quot; from the FTS query expression to work with. The set of matchable phrases for a given query consists of all phrases (including unquoted tokens and token prefixes) in the expression except those that are prefixed with a unary &quot;-&quot; operator (standard syntax) or are part of a sub-expression that is used as the right-hand operand of a NOT operator.</source>
          <target state="translated">3つの補助関数はすべて、FTS問い合わせ式から「一致可能なフレーズ」のセットを抽出して使用します。指定されたクエリにマッチするフレーズのセットは、単項演算子&quot;-&quot;がプレフィックスされているもの(標準構文)、またはNOT演算子の右手オペランドとして使用される部分式の一部であるものを除いて、式に含まれるすべてのフレーズ(引用符で囲まれていないトークンとトークンプレフィックスを含む)で構成されます。</target>
        </trans-unit>
        <trans-unit id="e856a97cf9fae10a8a385ba08b2985c87e16aaf1" translate="yes" xml:space="preserve">
          <source>All three database engines run faster when they have indices to work with. But SQLite is still the fastest.</source>
          <target state="translated">3つのデータベースエンジンはすべて、インデックスがあれば高速に動作します。しかし、SQLiteはまだ最速です。</target>
        </trans-unit>
        <trans-unit id="6baeeca7bdbd41abd15a40b8b926de6f745b8bb0" translate="yes" xml:space="preserve">
          <source>All three of the above source files are contained in the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;amalgamation tarball&lt;/a&gt; available on the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;download page&lt;/a&gt;.</source>
          <target state="translated">上記の3つのソースファイルはすべて、&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;ダウンロードページで&lt;/a&gt;入手できる&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;amalgamation tarballに&lt;/a&gt;含まれています。</target>
        </trans-unit>
        <trans-unit id="bf60184a7e675d81f6bedcfe7ca27f21750f46d0" translate="yes" xml:space="preserve">
          <source>All type information or constraint specifications must be removed from column definitions. FTS3/4 ignores everything following the column name in a column definition, FTS5 attempts to parse it (and will report an error if it fails to).</source>
          <target state="translated">すべての型情報や制約指定は、列定義から削除しなければなりません。FTS3/4は列定義の列名に続くすべてを無視し、FTS5はそれを解析しようとします(解析に失敗した場合はエラーを報告します)。</target>
        </trans-unit>
        <trans-unit id="a1de722aadb01564eff9284d3ae40b05c75cdc11" translate="yes" xml:space="preserve">
          <source>All uppercase characters within the ASCII range (Unicode codepoints less than 128), are transformed to their lowercase equivalents as part of the tokenization process. Thus, full-text queries are case-insensitive when using the simple tokenizer.</source>
          <target state="translated">ASCII 範囲内のすべての大文字 (128 未満の Unicode コードポイント)は、トークン化処理の一環として小文字に変換されます。したがって、シンプルなトークン化機能を使用している場合、フルテキストクエリは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="230a993ba607de10c8e04d67e19e0d8357f45f60" translate="yes" xml:space="preserve">
          <source>All values in SQL statements, whether they are literals embedded in SQL statement text or &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameters&lt;/a&gt; bound to &lt;a href=&quot;c3ref/stmt&quot;&gt;precompiled SQL statements&lt;/a&gt; have an implicit storage class. Under circumstances described below, the database engine may convert values between numeric storage classes (INTEGER and REAL) and TEXT during query execution.</source>
          <target state="translated">SQLステートメントのテキストに埋め込まれたリテラルであれ、&lt;a href=&quot;c3ref/stmt&quot;&gt;プリコンパイルされたSQLステートメントに&lt;/a&gt;バインドされた&lt;a href=&quot;lang_expr#varparam&quot;&gt;パラメーター&lt;/a&gt;であれ、SQLステートメントのすべての値には、暗黙的なストレージクラスがあります。以下で説明する状況では、データベースエンジンは、クエリ実行中に数値ストレージクラス（INTEGERおよびREAL）とTEXTの間で値を変換する場合があります。</target>
        </trans-unit>
        <trans-unit id="d2db63f1dd84225eeca5b66732ebeb7dfeca7e9c" translate="yes" xml:space="preserve">
          <source>All versions of SQLite since 3.3.0 (2006-01-10) can read and write any schema format between 1 and 4. But older versions of SQLite might not be able to read formats greater than 1. So that older versions of SQLite will be able to read and write database files created by newer versions of SQLite, the default schema format was set to 1 for SQLite versions through 3.7.9 (2011-11-01). Beginning with &lt;a href=&quot;https://sqlite.org/releaselog/3_7_10.html&quot;&gt;version 3.7.10&lt;/a&gt; (2012-01-16), the default schema format is 4.</source>
          <target state="translated">3.3.0（2006-01-10）以降のすべてのバージョンのSQLiteは、1から4までの任意のスキーマ形式を読み書きできます。ただし、古いバージョンのSQLiteは、1を超える形式を読み取ることができない場合があります。そのため、古いバージョンのSQLiteは新しいバージョンのSQLiteで作成されたデータベースファイルを読み書きできるようになりました。デフォルトのスキーマ形式は、SQLiteバージョン3.7.9までは1に設定されていました（2011-11-01）。始まる&lt;a href=&quot;https://sqlite.org/releaselog/3_7_10.html&quot;&gt;バージョン3.7.10&lt;/a&gt;（2012-01-16）、デフォルトのスキーマの形式は4です。</target>
        </trans-unit>
        <trans-unit id="a315e152418f974223f0caef4a38a40619deaba9" translate="yes" xml:space="preserve">
          <source>All versions of SQLite up to and including &lt;a href=&quot;https://sqlite.org/releaselog/3_7_9.html&quot;&gt;version 3.7.9&lt;/a&gt; (2011-11-01) assume that the filesystem does &lt;u&gt;not&lt;/u&gt; provide powersafe overwrite. SQLite has traditionally assumed that when any one byte of a file changes, all other bytes within the same sector of that byte have the potential of being corrupted on a power loss. When writing, SQLite has made sure to journal all bytes in the same sector of any modifications and it pads journal files out to the next sector boundary so that subsequent appends to that journal cannot damage prior records. SQLite understands the sector size to be the value returned by the xSectorSize method in the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;. The SQLite team has often referred to the value returned by xSectorSize as the &quot;blast radius&quot; of a write, since it expresses the range of bytes that might be damaged if a power loss occurs during the write. The default &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; for unix and windows have always returned 512 as the sector size (or blast radius) for all versions of SQLite up to and including version 3.7.9.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/releaselog/3_7_9.html&quot;&gt;バージョン3.7.9&lt;/a&gt;（2011-11-01）を含むSQLiteのすべてのバージョンは、ファイルシステムがパワーセーフな上書きを提供し&lt;u&gt;ない&lt;/u&gt;ことを前提としています。 SQLiteは伝統的に、ファイルのいずれかの1バイトが変更されると、そのバイトの同じセクター内の他のすべてのバイトは停電時に破損する可能性があると想定していました。書き込み時に、SQLiteは変更の同じセクター内のすべてのバイトをジャーナルすることを確認し、ジャーナルファイルを次のセクター境界にパディングして、そのジャーナルへの後続の追加が以前のレコードに損傷を与えないようにします。 SQLiteはセクターサイズを&lt;a href=&quot;vfs&quot;&gt;VFSの&lt;/a&gt; xSectorSizeメソッドによって返される値であると理解します。SQLiteチームは、xSectorSizeによって返される値を書き込みの「ブラスト半径」と呼ぶことがよくあります。これは、書き込み中に停電が発生した場合に破損する可能性があるバイトの範囲を表すためです。UNIXおよびWindows のデフォルトの&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;は、バージョン3.7.9までのSQLiteのすべてのバージョンのセクターサイズ（または爆発半径）として常に512を返していました。</target>
        </trans-unit>
        <trans-unit id="3ff80c8a340db91dd8a4375abd89d32aa974509b" translate="yes" xml:space="preserve">
          <source>All versions of SQLite up to and including version 3.5.9 have mishandled NULL values on the right-hand side of IN and NOT IN operators. Specifically, SQLite has previously ignored NULLs on the right-hand side of IN and NOT IN.</source>
          <target state="translated">バージョン 3.5.9 までのすべてのバージョンの SQLite では、IN および NOT IN 演算子の右辺の NULL 値が誤って扱われていました。特に、SQLite は以前、IN および NOT IN の右側の NULL を無視していました。</target>
        </trans-unit>
        <trans-unit id="f103276ac70c09043aecb18573124bfe2497c24b" translate="yes" xml:space="preserve">
          <source>Allocate a new b-tree in the main database file if P1==0 or in the TEMP database file if P1==1 or in an attached database if P1&amp;gt;1. The P3 argument must be 1 (BTREE_INTKEY) for a rowid table it must be 2 (BTREE_BLOBKEY) for an index or WITHOUT ROWID table. The root page number of the new b-tree is stored in register P2.</source>
          <target state="translated">P1 == 0の場合はメインデータベースファイルに、P1 == 1の場合はTEMPデータベースファイルに、P1&amp;gt; 1の場合は接続されたデータベースに新しいbツリーを割り当てます。P3引数は、ROWIDテーブルの場合は1（BTREE_INTKEY）でなければならず、インデックスまたはWITHOUT ROWIDテーブルの場合は2（BTREE_BLOBKEY）でなければなりません。新しいbツリーのルートページ番号は、レジスタP2に格納されます。</target>
        </trans-unit>
        <trans-unit id="98c7e4f88a0a3613dabebb78baaf9f796e649934" translate="yes" xml:space="preserve">
          <source>Allocate a new changeset rebaser object. If successful, set (*ppNew) to point to the new object and return SQLITE_OK. Otherwise, if an error occurs, return an SQLite error code (e.g. SQLITE_NOMEM) and set (*ppNew) to NULL.</source>
          <target state="translated">新しいチェンジセット・リベイザー・オブジェクトを割り当てます。成功した場合は、(*ppNew)を新しいオブジェクトを指すように設定し、SQLITE_OK を返します。そうでなければ、エラーが発生した場合は、SQLiteエラーコード(例:SQLITE_NOMEM)を返し、(*ppNew)をNULLに設定します。</target>
        </trans-unit>
        <trans-unit id="890d83377e0f9622417e6019e12893679bb2c728" translate="yes" xml:space="preserve">
          <source>Allocate a new page if it easy and convenient to do so. Otherwise return NULL.</source>
          <target state="translated">簡単で便利な場合は、新しいページを割り当てます。それ以外の場合は NULL を返します。</target>
        </trans-unit>
        <trans-unit id="0b563fc1e21cbbe40e2fcd69876f3f214fc04c0f" translate="yes" xml:space="preserve">
          <source>Allow &quot;&amp;lt;expr&amp;gt; IN &amp;lt;table&amp;gt;&quot; as a shorthand for &quot;&amp;lt;expr&amp;gt; IN (SELECT * FROM &amp;lt;table&amp;gt;&quot;.</source>
          <target state="translated">「&amp;lt;expr&amp;gt; IN（SELECT * FROM &amp;lt;table&amp;gt;」の省略形として「&amp;lt;expr&amp;gt; IN &amp;lt;table&amp;gt;」を許可します。</target>
        </trans-unit>
        <trans-unit id="06d0f1303155aabcd4262ede8a9d90bfb68ed8f4" translate="yes" xml:space="preserve">
          <source>Allow &quot;?&quot; parameters in the LIMIT clause.</source>
          <target state="translated">LIMIT 節で &quot;?&quot; パラメータを許可する。</target>
        </trans-unit>
        <trans-unit id="cd8e51f439edbc4cbc973e08ee46366e6e096d45" translate="yes" xml:space="preserve">
          <source>Allow &quot;VIEW&quot; to be a column name</source>
          <target state="translated">VIEW」をカラム名にできるようにする</target>
        </trans-unit>
        <trans-unit id="377c13da16b3a423a23503b52be9d946eb79c0be" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;deterministic&quot;&gt;deterministic SQL functions&lt;/a&gt; in the WHERE clause of a &lt;a href=&quot;partialindex&quot;&gt;partial index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;partialindex&quot;&gt;部分インデックスの&lt;/a&gt; WHERE句で&lt;a href=&quot;deterministic&quot;&gt;確定的なSQL関数&lt;/a&gt;を許可します。</target>
        </trans-unit>
        <trans-unit id="d9a09844684ca2e04e8580f1dc89f5d23c5aed0e" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; and &lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt; commands to work inside of a transaction.</source>
          <target state="translated">&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;および&lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt;コマンドがトランザクション内で機能することを許可します。</target>
        </trans-unit>
        <trans-unit id="e9aa4176f2699ab1a840e5917668b064b3516ba4" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; to appear on the right-hand side of an &lt;a href=&quot;lang_expr#in_op&quot;&gt;IN operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;vtab#tabfunc2&quot;&gt;テーブル値関数&lt;/a&gt;を&lt;a href=&quot;lang_expr#in_op&quot;&gt;IN演算子の&lt;/a&gt;右側に表示できるようにします。</target>
        </trans-unit>
        <trans-unit id="48d9b4c29aa05f94ecb72a287ad5d41af03effad" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID virtual tables&lt;/a&gt; to be writable if the PRIMARY KEY contains exactly one column.</source>
          <target state="translated">許可&lt;a href=&quot;vtab#worid&quot;&gt;ROWID仮想テーブルなし&lt;/a&gt; PRIMARY KEYは、正確に1つの列が含まれている場合は書き込み可能に。</target>
        </trans-unit>
        <trans-unit id="269070c3e8d911c8236d5f897186b3e1ab6e4e31" translate="yes" xml:space="preserve">
          <source>Allow &lt;a href=&quot;wal&quot;&gt;WAL-mode&lt;/a&gt; databases to be opened read-only as long as there is an existing read/write connection.</source>
          <target state="translated">既存の読み取り/書き込み接続がある限り、&lt;a href=&quot;wal&quot;&gt;WALモードの&lt;/a&gt;データベースを読み取り専用で開くことを許可します。</target>
        </trans-unit>
        <trans-unit id="ef741e84d49fdcc8210ba15eda342eea0faf46a9" translate="yes" xml:space="preserve">
          <source>Allow GLOB and LIKE operators to work as functions.</source>
          <target state="translated">GLOBやLIKE演算子が関数として動作するようにする。</target>
        </trans-unit>
        <trans-unit id="7d8d8f395445a63807721ea16945b2777fb51092" translate="yes" xml:space="preserve">
          <source>Allow NULL arguments in sqlite_compile() and sqlite_step().</source>
          <target state="translated">sqlite_compile()とsqlite_step()でNULL引数を許可。</target>
        </trans-unit>
        <trans-unit id="186268005d1a02f259dbb9958233b56b69668278" translate="yes" xml:space="preserve">
          <source>Allow WHERE clause terms on the left table of a LEFT OUTER JOIN to contain aggregate subqueries.</source>
          <target state="translated">LEFT OUTER JOINの左テーブルのWHERE句の項に集約サブクエリを含めることを許可します。</target>
        </trans-unit>
        <trans-unit id="38079f81b0c869a35e192a7c7ee51456917575b5" translate="yes" xml:space="preserve">
          <source>Allow a &lt;a href=&quot;lang_select#values&quot;&gt;VALUES clause&lt;/a&gt; to be used anywhere a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement is valid.</source>
          <target state="translated">許可&lt;a href=&quot;lang_select#values&quot;&gt;VALUES句は、&lt;/a&gt;どこでも使用する&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;文が有効です。</target>
        </trans-unit>
        <trans-unit id="b29c570354c3dc76b997275a38b4804dd30d724a" translate="yes" xml:space="preserve">
          <source>Allow arbitrary expressions, including function calls and subqueries, in the filename argument to &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_attach&quot;&gt;ATTACHの&lt;/a&gt;ファイル名引数で、関数呼び出しやサブクエリを含む任意の式を許可します。</target>
        </trans-unit>
        <trans-unit id="087d2618f268406853ee3cd79209ec421c2d288d" translate="yes" xml:space="preserve">
          <source>Allow collating sequence names to be quoted.</source>
          <target state="translated">照合シーケンス名の引用を許可します。</target>
        </trans-unit>
        <trans-unit id="026b30b967a2b6589a1cfbc782a3c2b403048beb" translate="yes" xml:space="preserve">
          <source>Allow constraint names on the DEFAULT clause in a table definition</source>
          <target state="translated">テーブル定義のDEFAULT句で制約名を許可する</target>
        </trans-unit>
        <trans-unit id="6215a826c022df62b341a6590cb9e2024e5f7525" translate="yes" xml:space="preserve">
          <source>Allow floating point literals to begin or end with a decimal point.</source>
          <target state="translated">浮動小数点リテラルが小数点で始まるか終わることを許可します。</target>
        </trans-unit>
        <trans-unit id="25c2ba2fe3b0e6c9a56edf6ddf62886b17854fb2" translate="yes" xml:space="preserve">
          <source>Allow identifiers to be quoted in square brackets, for compatibility with MS-Access.</source>
          <target state="translated">MS-Accessとの互換性のために、識別子を角括弧で引用できるようにしました。</target>
        </trans-unit>
        <trans-unit id="5a61cbdfe59167766b82b62a24a23f799327821d" translate="yes" xml:space="preserve">
          <source>Allow indices to be used for sorting even if prior terms of the index are constrained by IN operators in the WHERE clause.</source>
          <target state="translated">インデックスの前の項がWHERE句のIN演算子によって制約されている場合でも、ソートにインデックスを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="7ef34a12d16effc2a1e0c0a26a046cc6b9ba4f95" translate="yes" xml:space="preserve">
          <source>Allow more system calls to be overridden in the unix VFS - to provide better support for chromium sandboxes.</source>
          <target state="translated">unix VFS でより多くのシステムコールをオーバーライドできるようにしました。</target>
        </trans-unit>
        <trans-unit id="e5d47c202ac74ad6be5e5952c7d032a0006fd10e" translate="yes" xml:space="preserve">
          <source>Allow multiple simultaneous readers under Windows by simulating the reader/writers locks that are missing from Win95/98/ME.</source>
          <target state="translated">Win95/98/MEにはないリーダー/ライターロックをシミュレートすることで、Windows上で複数の同時リーダーを許可します。</target>
        </trans-unit>
        <trans-unit id="aec002f75566ff8ab7f2b3337c8366c012290ae9" translate="yes" xml:space="preserve">
          <source>Allow new user-defined functions to be created when there are already one or more precompiled SQL statements.</source>
          <target state="translated">既にコンパイル済みのSQL文が1つ以上ある場合に、新しいユーザー定義関数を作成できるようにします。</target>
        </trans-unit>
        <trans-unit id="c1acd99d1b7ffc9d5267e039032ab7559c12120f" translate="yes" xml:space="preserve">
          <source>Allow read transactions to be freely opened and closed by SQL statements run from within the implementation of &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; if the function is called by a SELECT statement that does not access any database table.</source>
          <target state="translated">関数がデータベーステーブルにアクセスしないSELECTステートメントによって呼び出された場合、&lt;a href=&quot;appfunc&quot;&gt;アプリケーション定義のSQL関数の&lt;/a&gt;実装内から実行されるSQLステートメントによって、読み取りトランザクションを自由に開いたり閉じたりできるようにします。</target>
        </trans-unit>
        <trans-unit id="331932f674e6d859e399fb8d0775ada55921d45e" translate="yes" xml:space="preserve">
          <source>Allow read transactions to be freely opened and closed by SQL statements run from within the implementation of &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; if the function is called by a SELECT statement that does not access any database table.</source>
          <target state="translated">関数がデータベーステーブルにアクセスしないSELECTステートメントによって呼び出された場合、&lt;a href=&quot;c3ref/create_function&quot;&gt;アプリケーション定義のSQL関数の&lt;/a&gt;実装内から実行されるSQLステートメントによって、読み取りトランザクションを自由に開いたり閉じたりできるようにします。</target>
        </trans-unit>
        <trans-unit id="16104cba6ed4e5c5fd3de40cb546c3fb1bc3c957" translate="yes" xml:space="preserve">
          <source>Allow sqlite_exec() to be called from within user-defined SQL functions.</source>
          <target state="translated">sqlite_exec()がユーザ定義のSQL関数の中から呼ばれることを許可するようにしました。</target>
        </trans-unit>
        <trans-unit id="b9296631111fc0993d0527ddffb1b74601f16736" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command to change the page size of a database file.</source>
          <target state="translated">&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;コマンドでデータベースファイルのページサイズを変更できるようにします。</target>
        </trans-unit>
        <trans-unit id="aac64bf7a32177d90d0452da0d0056ea1b87de06" translate="yes" xml:space="preserve">
          <source>Allow the &lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex()&lt;/a&gt; method of &lt;a href=&quot;vtab&quot;&gt;virtual table&lt;/a&gt; implementations to return &lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT&lt;/a&gt; to indicate that the proposed query plan is unusable and should not be given further consideration.</source>
          <target state="translated">&lt;a href=&quot;vtab&quot;&gt;仮想テーブル&lt;/a&gt;実装の&lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex（）&lt;/a&gt;メソッドが&lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT&lt;/a&gt;を返すことを許可して、提案されたクエリプランが使用不可能であり、これ以上検討する必要がないことを示します。</target>
        </trans-unit>
        <trans-unit id="6424ee4a8785aaef1a25b07cf3555293853c9183" translate="yes" xml:space="preserve">
          <source>Allow the DEFAULT value of a column to call functions that have constant operands</source>
          <target state="translated">定数のオペランドを持つ関数を呼び出すために、カラムのDEFAULT値を許可します。</target>
        </trans-unit>
        <trans-unit id="6b663434ab971b5c50c2b931e627bcf32963ce5d" translate="yes" xml:space="preserve">
          <source>Allow the error message from &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; to be longer than 20000 bytes.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integer_check&lt;/a&gt;からのエラーメッセージが20000バイトより長くなるようにします。</target>
        </trans-unit>
        <trans-unit id="acb3e6f837b7598e3baf15397c889298e8fd1c4d" translate="yes" xml:space="preserve">
          <source>Allow the name of a database to be prefixed by the driver type. For now, the only driver type is &quot;gdbm:&quot;.</source>
          <target state="translated">データベースの名前の前にドライバタイプを付けられるようにしました。今のところ、ドライバタイプは &quot;gdbm:&quot;のみです。</target>
        </trans-unit>
        <trans-unit id="dfc00039aaf898d163afc8dbd0e94542ba8ecc28" translate="yes" xml:space="preserve">
          <source>Allow the value -9223372036854775808 as an integer literal in SQL statements.</source>
          <target state="translated">SQL 文の整数リテラルとして値 -9223372036854775808 を許可します。</target>
        </trans-unit>
        <trans-unit id="dee90ceb52dbab56bc4990303982723135b728d9" translate="yes" xml:space="preserve">
          <source>Allow transactions to span Linux Threads</source>
          <target state="translated">Linuxスレッドにまたがるトランザクションを許可する</target>
        </trans-unit>
        <trans-unit id="5ffa48f8c38520d1cf8de848950d598b10eb8e45" translate="yes" xml:space="preserve">
          <source>Allow up to 64 tables in a join - the old limit was 32.</source>
          <target state="translated">最大64テーブルまでのジョインを許可します。</target>
        </trans-unit>
        <trans-unit id="d2fef18fe97d9b603d8ce243c65accbdab4d874a" translate="yes" xml:space="preserve">
          <source>Allow virtual table constructors to be invoked recursively.</source>
          <target state="translated">仮想テーブルのコンストラクタを再帰的に呼び出すことができるようにします。</target>
        </trans-unit>
        <trans-unit id="90e23d564e7f297c7a2b5ceff9d8f6ef229ac9a5" translate="yes" xml:space="preserve">
          <source>Allowed P5 bits:</source>
          <target state="translated">許可されたP5ビット。</target>
        </trans-unit>
        <trans-unit id="1287cd665e8d2234952aeb1f2ae2c3398192c7b9" translate="yes" xml:space="preserve">
          <source>Allowing extension components to pass private information to one another securely and without introducing pointer leaks requires new interfaces:</source>
          <target state="translated">拡張コンポーネントがプライベートな情報を互いに安全に、かつポインタリークを起こさずに受け渡すことができるようにするには、新しいインターフェースが必要です。</target>
        </trans-unit>
        <trans-unit id="0d20875a194118243c2bc48398fc9e50e653168b" translate="yes" xml:space="preserve">
          <source>Alphabetical Listing Of All Documents</source>
          <target state="translated">すべての文書のアルファベット順リスト</target>
        </trans-unit>
        <trans-unit id="fc6ed234869c2180894bb5c831639c8bf2a71c3a" translate="yes" xml:space="preserve">
          <source>Also available is the similar but more mature &lt;a href=&quot;fts3&quot;&gt;FTS3/4&lt;/a&gt; module. FTS5 is a new version of FTS4 that includes various fixes and solutions for problems that could not be fixed in FTS4 without sacrificing backwards compatibility. Some of these problems are &lt;a href=&quot;fts5#_summary_of_technical_differences_&quot;&gt;described below&lt;/a&gt;.</source>
          <target state="translated">また、似ていますがより成熟した&lt;a href=&quot;fts3&quot;&gt;FTS3 / 4&lt;/a&gt;モジュールも利用できます。FTS5はFTS4の新しいバージョンであり、後方互換性を犠牲にすることなくFTS4で修正できなかった問題に対するさまざまな修正と解決策が含まれています。これらの問題のいくつかを&lt;a href=&quot;fts5#_summary_of_technical_differences_&quot;&gt;以下に説明します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdc4b8824c8f732ab94ebdcfb7669cd9ac01bcf0" translate="yes" xml:space="preserve">
          <source>Also available: &lt;a href=&quot;../rescode&quot;&gt;list of error codes&lt;/a&gt;</source>
          <target state="translated">また利用可能：&lt;a href=&quot;../rescode&quot;&gt;エラーコードのリスト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f04534899f708d46ebaa30f16a02cbe243e196ae" translate="yes" xml:space="preserve">
          <source>Also available: &lt;a href=&quot;rescode&quot;&gt;list of error codes&lt;/a&gt;</source>
          <target state="translated">また利用可能：&lt;a href=&quot;rescode&quot;&gt;エラーコードのリスト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="861a9e2d67fe5f61973dab8932f2db2e113ce546" translate="yes" xml:space="preserve">
          <source>Also, whether or not P4 is set, check that this is not being called from within a callback to a virtual table xSync() method. If it is, the error code will be set to SQLITE_LOCKED.</source>
          <target state="translated">また、P4が設定されているかどうかは別として、仮想テーブルのxSync()メソッドのコールバック内から呼び出されていないかどうかを確認してください。呼び出されている場合は、エラーコードが SQLITE_LOCKED に設定されます。</target>
        </trans-unit>
        <trans-unit id="087d1b6052e351518f2d15a60b3d4e94a4ca524e" translate="yes" xml:space="preserve">
          <source>Alternatively, FTS5 may be built as a loadable extension.</source>
          <target state="translated">あるいは、FTS5は、ロード可能な拡張として構築されてもよい。</target>
        </trans-unit>
        <trans-unit id="b0c1c99f2707eb260cd81c76dc0cd3c1b0734ce4" translate="yes" xml:space="preserve">
          <source>Alternatively, the first argument following to &quot;.ar&quot; may be the concatenation of the short form of all required options (without the &quot;-&quot; characters). In this case arguments for options requiring them are read from the command line next, and any remaining words are considered command arguments. For example:</source>
          <target state="translated">あるいは、&quot;.ar &quot;に続く最初の引数は、(「-」文字を除いた)すべての必須オプションの短縮形を連結したものであってもよい。この場合、それらを必要とするオプションの引数は次にコマンドラインから読み出され、残りの単語はコマンド引数とみなされます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="5abd2d3f1bfc69f474a1675b744197ff1ab504ae" translate="yes" xml:space="preserve">
          <source>Alternatively, the unionvtab.c file may be compiled into the application. In this case, the following function should be invoked to register the extension with each new database connection:</source>
          <target state="translated">あるいは、 unionvtab.c ファイルをアプリケーションにコンパイルすることもできます。この場合、次の関数を呼び出して、新しいデータベース接続ごとに拡張子を登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee75d1aa4e172f68779a1484c212e21f3e9f3faf" translate="yes" xml:space="preserve">
          <source>Alternatively, the zipfile.c file may be compiled into the application. In this case, the following function should be invoked to register the extension with each new database connection:</source>
          <target state="translated">あるいは、zipfile.cファイルをアプリケーションにコンパイルすることもできます。この場合、次の関数を呼び出して、新しいデータベース接続ごとに拡張子を登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="5944ffdf9815956de892051d5dd5e1fe60e1a9e4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create a new database using the default temporary storage, then save that database into a disk file using the &quot;.save&quot; command:</source>
          <target state="translated">あるいは、デフォルトの一時記憶装置を使用して新しいデータベースを作成し、そのデータベースを「.save」コマンドを使用してディスクファイルに保存することもできます。</target>
        </trans-unit>
        <trans-unit id="5b777ccc0b549914aaf4c953fa2687953baa7c2b" translate="yes" xml:space="preserve">
          <source>Although FTS3 and FTS4 are included with the SQLite core source code, they are not enabled by default. To build SQLite with FTS functionality enabled, define the preprocessor macro &lt;a href=&quot;compile#enable_fts3&quot;&gt;SQLITE_ENABLE_FTS3&lt;/a&gt; when compiling. New applications should also define the &lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt; macro to enable the &lt;a href=&quot;fts3#_set_operations_using_the_enhanced_query_syntax&quot;&gt;enhanced query syntax&lt;/a&gt; (see below). Usually, this is done by adding the following two switches to the compiler command line:</source>
          <target state="translated">FTS3およびFTS4はSQLiteコアソースコードに含まれていますが、デフォルトでは有効になっていません。 FTS機能を有効にしてSQLiteをビルドするには、コンパイル時にプリプロセッサマクロ&lt;a href=&quot;compile#enable_fts3&quot;&gt;SQLITE_ENABLE_FTS3を&lt;/a&gt;定義します。新しいアプリケーションでは、&lt;a href=&quot;compile#enable_fts3_parenthesis&quot;&gt;SQLITE_ENABLE_FTS3_PARENTHESIS&lt;/a&gt;マクロも定義して、&lt;a href=&quot;fts3#_set_operations_using_the_enhanced_query_syntax&quot;&gt;拡張クエリ構文&lt;/a&gt;を有効にする必要があります（以下を参照）。通常、これは、次の2つのスイッチをコンパイラのコマンドラインに追加することによって行われます。</target>
        </trans-unit>
        <trans-unit id="695189fbab565d10c4e5c26d8849228747eb7d89" translate="yes" xml:space="preserve">
          <source>Although it is less common, a call to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; may also return SQLITE_LOCKED if it cannot obtain a read-lock on the &lt;a href=&quot;schematab&quot;&gt;sqlite_schema table&lt;/a&gt; of each attached database. These APIs need to read the schema data contained in the sqlite_schema table in order to compile SQL statements to &lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt*&lt;/a&gt; objects.</source>
          <target state="translated">あまり一般的ではありませんが、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;または&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）を&lt;/a&gt;呼び出しても、&lt;a href=&quot;schematab&quot;&gt;接続さ&lt;/a&gt;れている各データベースのsqlite_schemaテーブルで読み取りロックを取得できない場合はSQLITE_LOCKEDが返されることがあります。これらのAPIは、SQLステートメントを&lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt *&lt;/a&gt;オブジェクトにコンパイルするために、sqlite_schemaテーブルに含まれるスキーマデータを読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="024fe1545f30cb8dee088c5ad188ae320d8b4ae9" translate="yes" xml:space="preserve">
          <source>Although it is less common, a call to &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; may also return SQLITE_LOCKED if it cannot obtain a read-lock on the sqlite_master table of each attached database. These APIs need to read the schema data contained in the sqlite_master table in order to compile SQL statements to &lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt*&lt;/a&gt; objects.</source>
          <target state="translated">あまり一般的ではありませんが、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;または&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）を&lt;/a&gt;呼び出しても、接続されている各データベースのsqlite_masterテーブルで読み取りロックを取得できない場合、SQLITE_LOCKEDが返されます。これらのAPIは、SQLステートメントを&lt;a href=&quot;c3ref/stmt&quot;&gt;sqlite3_stmt *&lt;/a&gt;オブジェクトにコンパイルするために、sqlite_masterテーブルに含まれているスキーマデータを読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="f535c18aa59fdbaaceb49a43b9f2ac5c4e156d04" translate="yes" xml:space="preserve">
          <source>Although it would be easy to design a system that uses the</source>
          <target state="translated">を利用したシステムを設計することは容易であろうが</target>
        </trans-unit>
        <trans-unit id="38350322f36d3cb7eee20f2334360ada16ffdbe4" translate="yes" xml:space="preserve">
          <source>Always NULL</source>
          <target state="translated">常にNULL</target>
        </trans-unit>
        <trans-unit id="6556666b4b860beb62beea54857b52422d71a07f" translate="yes" xml:space="preserve">
          <source>Always convert IEEE floating point NaN values into NULL during processing. (Ticket #3060)</source>
          <target state="translated">処理中は常にIEEE浮動小数点NaN値をNULLに変換するようにしました。(チケット#3060)</target>
        </trans-unit>
        <trans-unit id="87b27942fc2ef02de9cc71a49d6d11d937c022cb" translate="yes" xml:space="preserve">
          <source>Always interpret non-zero floating-point values as TRUE, even if the integer part is zero. Ticket &lt;a href=&quot;https://www.sqlite.org/src/info/36fae083b450e3a&quot;&gt;36fae083b450e3a&lt;/a&gt;</source>
          <target state="translated">整数部分がゼロであっても、常にゼロ以外の浮動小数点値をTRUEとして解釈します。チケット&lt;a href=&quot;https://www.sqlite.org/src/info/36fae083b450e3a&quot;&gt;36fae083b450e3a&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01c848b30df81d8f55cf3c7d1f8d1d01a761b810" translate="yes" xml:space="preserve">
          <source>Always open files using FILE_FLAG_RANDOM_ACCESS under Windows.</source>
          <target state="translated">Windowsでは常にFILE_FLAG_RANDOM_ACCESSを使用してファイルを開くようにしてください。</target>
        </trans-unit>
        <trans-unit id="f8d9e60c4d2bfefb9734ff11e252389b5ad3e363" translate="yes" xml:space="preserve">
          <source>Always stores polygons using the binary format, which is faster and uses less space.</source>
          <target state="translated">常にバイナリ形式でポリゴンを保存します。</target>
        </trans-unit>
        <trans-unit id="c0cacbdc1960d533261c8055f23aacbc49821e24" translate="yes" xml:space="preserve">
          <source>Always use &quot;.&quot; instead of &quot;,&quot; as the decimal point even if the locale requests &quot;,&quot;.</source>
          <target state="translated">ロケールが &quot;,&quot; を要求している場合でも、小数点は常に &quot;,&quot; の代わりに &quot;.&quot; を使用してください。</target>
        </trans-unit>
        <trans-unit id="584a08c96e54122403ed19c82a813d569f28232d" translate="yes" xml:space="preserve">
          <source>Always use memory</source>
          <target state="translated">常にメモリを使用する</target>
        </trans-unit>
        <trans-unit id="c823a3478b423d7cd3fa93f63e415cd1f8284276" translate="yes" xml:space="preserve">
          <source>Always use temporary files</source>
          <target state="translated">常に一時ファイルを使用する</target>
        </trans-unit>
        <trans-unit id="57bd289a4480abf71228980bc961a3a7a81bab14" translate="yes" xml:space="preserve">
          <source>Ambiguity resolved using a WHERE clause:</source>
          <target state="translated">曖昧さはWHERE句を使用して解決しました。</target>
        </trans-unit>
        <trans-unit id="977cc4fa3c5b3e0d768448bc0910909b0cd480d9" translate="yes" xml:space="preserve">
          <source>Ambiguous use of ON:</source>
          <target state="translated">ONの曖昧な使い方。</target>
        </trans-unit>
        <trans-unit id="7e0cddb45b39e592335cd66056d26b1854d76f94" translate="yes" xml:space="preserve">
          <source>Among other things, sqlite3_initialize() will invoke sqlite3_os_init(). Similarly, sqlite3_shutdown() will invoke sqlite3_os_end().</source>
          <target state="translated">とりわけ、sqlite3_initialize()はsqlite3_os_init()を呼び出します。同様に、sqlite3_shutdown()はsqlite3_os_end()を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6a0ecb85fd4a2b4dd0713046f9744fe6177cf89e" translate="yes" xml:space="preserve">
          <source>An &quot;SQLite Archive&quot; is a file container similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_(file_format)&quot;&gt;ZIP archive&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;Tarball&lt;/a&gt; but based on an SQLite database.</source>
          <target state="translated">「SQLiteアーカイブ」は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_(file_format)&quot;&gt;ZIPアーカイブ&lt;/a&gt;または&lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;Tarballに&lt;/a&gt;似たファイルコンテナーですが、SQLiteデータベースに基づいています。</target>
        </trans-unit>
        <trans-unit id="348f5f09abc7f6ee023e124686a6cf3527b1dbca" translate="yes" xml:space="preserve">
          <source>An &quot;application file format&quot; is the file format used to persist application state to disk or to exchange information between programs. There are thousands of application file formats in use today. Here are just a few examples:</source>
          <target state="translated">アプリケーションファイル形式」とは、アプリケーションの状態をディスクに保持したり、プログラム間で情報を交換したりするために使用されるファイル形式のことです。今日、何千ものアプリケーションファイルフォーマットが使用されています。ここでは、いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="b8d82aa19e1738a25aad29a6b9a73b1ca57ba1dc" translate="yes" xml:space="preserve">
          <source>An &quot;external content&quot; FTS4 table is similar to a contentless table, except that if evaluation of a query requires the value of a column other than docid, FTS4 attempts to retrieve that value from a table (or view, or virtual table) nominated by the user (hereafter referred to as the &quot;content table&quot;). The FTS4 module never writes to the content table, and writing to the content table does not affect the full-text index. It is the responsibility of the user to ensure that the content table and the full-text index are consistent.</source>
          <target state="translated">外部コンテンツ」FTS4テーブルは、クエリの評価がdocid以外の列の値を必要とする場合、FTS4は、ユーザによって指名されたテーブル(またはビュー、または仮想テーブル)からその値を取得しようとする(以下、「コンテンツテーブル」と呼ぶ)ことを除いて、コンテンツレステーブルに似ています。FTS4モジュールは決してコンテンツテーブルに書き込みを行わず、コンテンツテーブルへの書き込みはフルテキストインデックスに影響を与えません。コンテンツテーブルと全文インデックスの整合性を確保するのは利用者の責任である。</target>
        </trans-unit>
        <trans-unit id="3ec1d3e19881ca421cb7ef0c70026b7ad57adf0c" translate="yes" xml:space="preserve">
          <source>An &quot;int&quot; or &quot;unsigned int&quot;. 32-bits on all modern systems.</source>
          <target state="translated">int」または「unsigned int」。最新のシステムでは32ビット。</target>
        </trans-unit>
        <trans-unit id="8ca7e1d1ee9bc38ef78e0ad004ec09a25f38b015" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file&lt;/a&gt; object represents an open file in the &lt;a href=&quot;#sqlite3_vfs&quot;&gt;OS interface layer&lt;/a&gt;. Individual OS interface implementations will want to subclass this object by appending additional fields for their own use. The pMethods entry is a pointer to an &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object that defines methods for performing I/O operations on the open file.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file&lt;/a&gt;オブジェクトは、で開いているファイルを表し&lt;a href=&quot;#sqlite3_vfs&quot;&gt;OS界面層を&lt;/a&gt;。個々のOSインターフェース実装は、独自の使用のために追加のフィールドを追加することにより、このオブジェクトをサブクラス化する必要があります。 pMethodsエントリは、開いているファイルでI / O操作を実行するためのメソッドを定義する&lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;オブジェクトへのポインタです。</target>
        </trans-unit>
        <trans-unit id="04381375841e88bf037fe1e6179f30d5aff3be33" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt; that fails due to a constraint violation is not a successful &lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt; and does not change the value returned by this routine. Thus INSERT OR FAIL, INSERT OR IGNORE, INSERT OR ROLLBACK, and INSERT OR ABORT make no changes to the return value of this routine when their insertion fails. When INSERT OR REPLACE encounters a constraint violation, it does not fail. The INSERT continues to completion after deleting rows that caused the constraint problem so INSERT OR REPLACE will always change the return value of this interface.</source>
          <target state="translated">アン&lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt;制約違反が原因で失敗した失敗した&lt;a href=&quot;../lang_insert&quot;&gt;INSERT&lt;/a&gt;、このルーチンから返された値を変更しません。したがって、挿入が失敗しても、INSERT OR FAIL、INSERT OR IGNORE、INSERT OR ROLLBACK、およびINSERT OR ABORTは、このルーチンの戻り値に変更を加えません。 INSERT OR REPLACEが制約違反に遭遇しても、失敗しません。 INSERTは、制約の問題の原因となった行を削除した後も引き続き完了します。そのため、INSERT OR REPLACEは常にこのインターフェイスの戻り値を変更します。</target>
        </trans-unit>
        <trans-unit id="b7085e9237366e0a877aba7cfe87f1fe93d5ad83" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object defines the name of the VFS and the core methods that implement the interface to the operating system, such as checking for existence of files, deleting files, creating files and opening and for reading and/or writing, converting filenames into their canonical form. The &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object also contains methods for obtaining randomness from the operating system, for suspending a process (sleeping) and for finding the current date and time.</source>
          <target state="translated">AN &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;オブジェクトは、それらの正規にファイル名を変換し、VFSなど、ファイルの存在をチェックするファイルを削除し、ファイルや開口部を作成し、読み出し及び/又は書き込みのようなオペレーティングシステムにインタフェースを実装するコアメソッドの名前を定義し形。&lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfsは&lt;/a&gt;、プロセス（睡眠）を懸架すると現在の日付と時刻を見つけるため、オペレーティング・システムから乱数を取得するためのメソッドを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1f60bd7f87def89c1a6337dcd5b5e2b9262a189b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;file&quot;&gt;sqlite3_file&lt;/a&gt; object represents an open file in the &lt;a href=&quot;vfs&quot;&gt;OS interface layer&lt;/a&gt;. Individual OS interface implementations will want to subclass this object by appending additional fields for their own use. The pMethods entry is a pointer to an &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object that defines methods for performing I/O operations on the open file.</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt;sqlite3_file&lt;/a&gt;オブジェクトは、で開いているファイルを表し&lt;a href=&quot;vfs&quot;&gt;OS界面層を&lt;/a&gt;。個々のOSインターフェース実装は、独自の使用のために追加のフィールドを追加することにより、このオブジェクトをサブクラス化する必要があります。 pMethodsエントリは、開いているファイルでI / O操作を実行するためのメソッドを定義する&lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;オブジェクトへのポインタです。</target>
        </trans-unit>
        <trans-unit id="7a08f9e5c908a78454f64ebfc15b9347529f0e74" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/R-tree&quot;&gt;R-Tree&lt;/a&gt; is a special index that is designed for doing range queries. R-Trees are most commonly used in geospatial systems where each entry is a rectangle with minimum and maximum X and Y coordinates. Given a query rectangle, an R-Tree is able to quickly find all entries that are contained within the query rectangle or which overlap the query rectangle. This idea is easily extended to three dimensions for use in CAD systems. R-Trees also find use in time-domain range look-ups. For example, suppose a database records the starting and ending times for a large number of events. A R-Tree is able to quickly find all events that were active at any time during a given time interval, or all events that started during a particular time interval, or all events that both started and ended within a given time interval. And so forth.</source>
          <target state="translated">アン&lt;a href=&quot;http://en.wikipedia.org/wiki/R-tree&quot;&gt;Rツリー&lt;/a&gt;範囲クエリを実行するために設計された特別なインデックスです。 Rツリーは、各エントリが最小および最大XおよびY座標を持つ長方形である地理空間システムで最も一般的に使用されます。クエリ四角形を指定すると、Rツリーは、クエリ四角形内に含まれている、またはクエリ四角形と重複するすべてのエントリをすばやく見つけることができます。このアイデアは、CADシステムで使用するために3次元に簡単に拡張できます。 Rツリーは、時間領域の範囲ルックアップにも使用できます。たとえば、データベースが多数のイベントの開始時間と終了時間を記録するとします。 Rツリーは、特定の時間間隔中にいつでもアクティブだったすべてのイベント、特定の時間間隔中に開始されたすべてのイベント、または特定の時間間隔内に開始および終了したすべてのイベントをすばやく見つけることができます。などなど。</target>
        </trans-unit>
        <trans-unit id="db689d4a40dd989536fc477e73ac5f455ae9b267" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause may be specified as part of an &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; or &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; action within the body of the trigger. However if an &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause is specified as part of the statement causing the trigger to fire, then conflict handling policy of the outer statement is used instead.</source>
          <target state="translated">&lt;a href=&quot;lang_conflict&quot;&gt;ON競合&lt;/a&gt;句はの一部として指定することができる&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;または&lt;a href=&quot;lang_insert&quot;&gt;INSERTの&lt;/a&gt;トリガーの本体内作用。ただし、トリガーを起動させるステートメントの一部として&lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt;句が指定されている場合は、代わりに外側のステートメントの競合処理ポリシーが使用されます。</target>
        </trans-unit>
        <trans-unit id="5e711e9ab5f059bf81635cdaabe4f6f12406ca0c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement with multiple values in the VALUES clause is implemented internally as a compound SELECT. Hence, this option also disables the ability to insert more than a single row using an INSERT INTO ... VALUES ... statement.</source>
          <target state="translated">&lt;a href=&quot;lang_insert&quot;&gt;INSERTの&lt;/a&gt; VALUES句に複数の値を持つ文は、化合物SELECTとして内部的に実装されます。したがって、このオプションは、INSERT INTO ... VALUES ...ステートメントを使用して複数の行を挿入する機能も無効にします。</target>
        </trans-unit>
        <trans-unit id="c72576d10f0db6ca1b372a30155a9969a36efce9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; that fails due to a constraint violation is not a successful &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; and does not change the value returned by this routine. Thus INSERT OR FAIL, INSERT OR IGNORE, INSERT OR ROLLBACK, and INSERT OR ABORT make no changes to the return value of this routine when their insertion fails. When INSERT OR REPLACE encounters a constraint violation, it does not fail. The INSERT continues to completion after deleting rows that caused the constraint problem so INSERT OR REPLACE will always change the return value of this interface.</source>
          <target state="translated">アン&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;制約違反が原因で失敗した失敗した&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;、このルーチンから返された値を変更しません。したがって、挿入が失敗しても、INSERT OR FAIL、INSERT OR IGNORE、INSERT OR ROLLBACK、およびINSERT OR ABORTは、このルーチンの戻り値に変更を加えません。 INSERT OR REPLACEが制約違反に遭遇しても、失敗しません。 INSERTは、制約の問題の原因となった行を削除した後も引き続き完了します。そのため、INSERT OR REPLACEは常にこのインターフェイスの戻り値を変更します。</target>
        </trans-unit>
        <trans-unit id="233c7df9e2b5c5b148e9cdae3dbfbdc38ff611a4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; error is returned when SQLite detects an error in the structure, format, or other control elements of the database file.</source>
          <target state="translated">&lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; SQLiteの構造、形式、またはデータベース・ファイルの他の制御要素内のエラーを検出した場合、エラーが返されます。</target>
        </trans-unit>
        <trans-unit id="9dfcb5b52a759e3eac1cc34a332a837f3610b881" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt; error is returned when a prepared SQL statement is no longer valid and cannot be executed. When this occurs, the statement must be recompiled from SQL using the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; API. An SQLITE_SCHEMA error can only occur when using the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;, and &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; interfaces to run SQL. You will never receive an &lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMA&lt;/a&gt; error from &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt;. Nor will you receive an error if you prepare statements using &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; instead of &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMAの&lt;/a&gt;準備されたSQL文は、もはや有効であり、実行できないときにエラーが返されません。これが発生した場合、ステートメントは&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt; API を使用してSQLから再コンパイルする必要があります。 SQLITE_SCHEMAエラーは、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;および&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;インターフェースを使用してSQLを実行する場合にのみ発生します。あなたが受け取ることはありません&lt;a href=&quot;rescode#schema&quot;&gt;SQLITE_SCHEMAの&lt;/a&gt;からのエラー&lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_execを（） &lt;/a&gt;。また、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）の&lt;/a&gt;代わりに&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;を使用してステートメントを準備しても、エラーを受け取りません。</target>
        </trans-unit>
        <trans-unit id="ceb0be389d3467046061e0e60795dd9c8924c2d5" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;INSERT&lt;/b&gt;. An INSERT change contains a single row to add to a database table. The payload of the INSERT change consists of the values for each field of the new row.</source>
          <target state="translated">アン&lt;b&gt;INSERT&lt;/b&gt;。INSERTの変更には、データベーステーブルに追加する単一の行が含まれます。INSERT変更のペイロードは、新しい行の各フィールドの値で構成されています。</target>
        </trans-unit>
        <trans-unit id="83cdb736e009dffced879294068506baa8e9d683" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;UPDATE&lt;/b&gt;. An UPDATE change represents the modification of one or more non-PRIMARY KEY fields of a single row within a database table, identified by its PRIMARY KEY fields. The payload for an UPDATE change consists of:</source>
          <target state="translated">&lt;b&gt;UPDATE&lt;/b&gt;。UPDATEの変更は、データベーステーブル内の1つの行の1つ以上の非PRIMARY KEYフィールドの変更を表し、PRIMARY KEYフィールドで識別されます。UPDATE変更のペイロードは、次のもので構成されます。</target>
        </trans-unit>
        <trans-unit id="a5dfc23afaff11afa8f689dfc92f096e1d0dd0f7" translate="yes" xml:space="preserve">
          <source>An ALWAYS(X) or NEVER(X) sometimes verifies pre-conditions that are subject to change if other parts of the code are modified in subtle ways. At &lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&lt;/a&gt; we have a test for two pre-conditions that are true only because of the limited scope of use of the sqlite3BtreeRowCountEst() function. Future enhancements to SQLite might use sqlite3BtreeRowCountEst() in new ways where those preconditions no longer hold, and the NEVER() macros will quickly alert the developers to that fact when the situation arises. But if, for some reason, the pre-conditions are not satisfied in a release build, the program will still behave sanely and will not do an undefined memory access.</source>
          <target state="translated">ALWAYS（X）またはNEVER（X）は、コードの他の部分が微妙に変更された場合に、変更される可能性のある前提条件を検証することがあります。&lt;a href=&quot;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&quot;&gt;https://sqlite.org/src/artifact/18a53540aa3?ln=5512-5516&lt;/a&gt;では、sqlite3BtreeRowCountEst（）関数の使用範囲が限定されているためにのみtrueとなる2つの前提条件のテストがあります。 SQLiteの将来の機能拡張では、sqlite3BtreeRowCountEst（）を、これらの前提条件が満たされない新しい方法で使用する可能性があります。NEVER（）マクロは、状況が発生したときにその事実を開発者にすばやく通知します。しかし、何らかの理由で、リリースビルドで前提条件が満たされていない場合でも、プログラムは正常に動作し、未定義のメモリアクセスを行いません。</target>
        </trans-unit>
        <trans-unit id="62094908e44ce569763e84accf72b5b81ec10e3e" translate="yes" xml:space="preserve">
          <source>An Abort is safe if either there have been no writes, or if there is an active statement journal.</source>
          <target state="translated">書き込みがなかった場合、またはアクティブなステートメント・ジャーナルがある場合は、アボートが安全です。</target>
        </trans-unit>
        <trans-unit id="86d4a08053c797c7b22cbaba83f05ba798cb81a9" translate="yes" xml:space="preserve">
          <source>An Asynchronous I/O Module For SQLite</source>
          <target state="translated">SQLite用の非同期I/Oモジュール</target>
        </trans-unit>
        <trans-unit id="313cb43d54770c72c9e9a5b634de9c9d8807284f" translate="yes" xml:space="preserve">
          <source>An EXCLUDE clause.</source>
          <target state="translated">EXCLUDE句。</target>
        </trans-unit>
        <trans-unit id="0a3ccdd1b90a20f1709a032dfb49632f1706153c" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_CKPT_LOCK is held by any connection that is running a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt;. The &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; field of the WAL-index header may be increased while holding this exclusive lock, but it may not be decreased.</source>
          <target state="translated">EXCLUSIVE WAL_CKPT_LOCKは、&lt;a href=&quot;wal#ckpt&quot;&gt;チェックポイントを&lt;/a&gt;実行しているすべての接続によって保持されます。この排他的ロックを保持している間、WAL-indexヘッダーの&lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt;フィールドを増やすことができますが、減らすことはできません。</target>
        </trans-unit>
        <trans-unit id="42a19836854f508f748dd9a22070d5c210f0d520" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_RECOVER_LOCK is held by any connection that is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; to reconstruct the shared WAL-index.</source>
          <target state="translated">EXCLUSIVE WAL_RECOVER_LOCKは、共有WALインデックスを再構築するために&lt;a href=&quot;walformat#recovery&quot;&gt;リカバリ&lt;/a&gt;を実行している接続によって保持されます。</target>
        </trans-unit>
        <trans-unit id="d163a00e9e60a29df0fd7690728f45560ff5f27b" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE WAL_WRITE_LOCK is held by any connection that is appending content to the end of the WAL. Hence, only a single process at a time can append content to the WAL. If a &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL reset&lt;/a&gt; occurs as a consequence of a write, then the &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; field of the WAL-index header is reset to zero while holding this lock.</source>
          <target state="translated">EXCLUSIVE WAL_WRITE_LOCKは、WALの最後にコンテンツを追加するすべての接続によって保持されます。したがって、一度に1つのプロセスだけがコンテンツをWALに追加できます。書き込みの結果として&lt;a href=&quot;fileformat2#walreset&quot;&gt;WALリセット&lt;/a&gt;が発生した場合、このロックを保持している間、WALインデックスヘッダーの&lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt;フィールドはゼロにリセットされます。</target>
        </trans-unit>
        <trans-unit id="b57abe13c7006fd13b284a30313d8dda20eaf017" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE is also held WAL_CKPT_LOCK, and on several other locking bytes, when a connection is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; on the shared WAL-index.</source>
          <target state="translated">接続が共有WALインデックスで&lt;a href=&quot;walformat#recovery&quot;&gt;リカバリ&lt;/a&gt;を実行している場合、EXCLUSIVEもWAL_CKPT_LOCKと他のいくつかのロックバイトで保持されます。</target>
        </trans-unit>
        <trans-unit id="88b81d585355ad5a271ae62aa21273cf7062ea05" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE is also held WAL_WRITE_LOCK, and on several other locking bytes, when a connection is running &lt;a href=&quot;walformat#recovery&quot;&gt;recovery&lt;/a&gt; on the shared WAL-index.</source>
          <target state="translated">接続が共有WALインデックスで&lt;a href=&quot;walformat#recovery&quot;&gt;リカバリ&lt;/a&gt;を実行しているとき、EXCLUSIVEはWAL_WRITE_LOCKと他のいくつかのロックバイトでも保持されます。</target>
        </trans-unit>
        <trans-unit id="f52310ba827cb9fe23894a867314c3a13854ff87" translate="yes" xml:space="preserve">
          <source>An EXCLUSIVE lock is needed in order to write to the database file. Only one EXCLUSIVE lock is allowed on the file and no other locks of any kind are allowed to coexist with an EXCLUSIVE lock. In order to maximize concurrency, SQLite works to minimize the amount of time that EXCLUSIVE locks are held.</source>
          <target state="translated">データベースファイルに書き込むには、EXCLUSIVEロックが必要です。ファイルには1つのEXCLUSIVEロックのみが許可されており、他のどのような種類のロックもEXCLUSIVEロックと共存することはできません。同時実行性を最大化するために、SQLite は EXCLUSIVE ロックが保持されている時間を最小限に抑えるように動作します。</target>
        </trans-unit>
        <trans-unit id="fe2062deb028f6de38ba9c3021c202a7b43810db" translate="yes" xml:space="preserve">
          <source>An FTS tokenizer is a set of rules for extracting terms from a document or basic FTS full-text query.</source>
          <target state="translated">FTSトークン化とは、文書または基本的なFTSフルテキストクエリから用語を抽出するためのルールのセットです。</target>
        </trans-unit>
        <trans-unit id="818fc889442be27af5d1325013f400680296296c" translate="yes" xml:space="preserve">
          <source>An I/O error on a memory-mapped file cannot be caught and dealt with by SQLite. Instead, the I/O error causes a signal which, if not caught by the application, results in a program crash.</source>
          <target state="translated">メモリマップされたファイルのI/Oエラーは、SQLiteでは捕捉して対処することができません。その代わりに、I/O エラーはシグナルを発生させ、アプリケーションがキャッチしなければプログラムがクラッシュしてしまいます。</target>
        </trans-unit>
        <trans-unit id="1c82d6c0937081333b2317419d2ebad443727010" translate="yes" xml:space="preserve">
          <source>An IEEE double-precision (64-bit) floating point number</source>
          <target state="translated">IEEE倍精度(64ビット)浮動小数点数</target>
        </trans-unit>
        <trans-unit id="4cd5420d6298ed92154e0329258defd31fd25a74" translate="yes" xml:space="preserve">
          <source>An INTEGER or REAL value is less than any TEXT or BLOB value. When an INTEGER or REAL is compared to another INTEGER or REAL, a numerical comparison is performed.</source>
          <target state="translated">INTEGERまたはREALの値は、任意のTEXTまたはBLOBの値よりも小さい値です。INTEGERまたはREALが他のINTEGERまたはREALと比較されると、数値比較が行われます。</target>
        </trans-unit>
        <trans-unit id="fb3433c2fda29528c66dead93e3becaa2d64f147" translate="yes" xml:space="preserve">
          <source>An Introduction To The SQLite C/C++ Interface</source>
          <target state="translated">SQLite C/C++インターフェイスの紹介</target>
        </trans-unit>
        <trans-unit id="1217ba99243b6eebb93b7b8b51f28f6be4f9d08a" translate="yes" xml:space="preserve">
          <source>An ORDER BY clause on the recursive-select can be used to control whether the search of a tree is depth-first or breadth-first. To illustrate, we will use a variation on the &quot;org&quot; table from an example above, without the &quot;height&quot; column, and with some real data inserted:</source>
          <target state="translated">再帰的選択のORDER BY句は、ツリーの検索が深さ優先か幅優先かを制御するために使用することができます。説明のために、上の例の &quot;org &quot;テーブルに、&quot;height &quot;カラムがなく、実際のデータが挿入されているものを使ってみましょう。</target>
        </trans-unit>
        <trans-unit id="23032a9cac30263b1d8146df43c99d82099810f2" translate="yes" xml:space="preserve">
          <source>An ORDER BY or GROUP BY clause</source>
          <target state="translated">ORDER BYまたはGROUP BY句</target>
        </trans-unit>
        <trans-unit id="6b7badb7ceeef79983e30969dff232619460ee2c" translate="yes" xml:space="preserve">
          <source>An OpenDocument Presentation or &quot;ODP&quot; file is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP archive&lt;/a&gt; containing XML files describing presentation slides and separate image files for the various images that are included as part of the presentation. (OpenDocument word processor and spreadsheet files are similarly structured but are not considered by this article.) The reader can easily see the content of an ODP file by using the &quot;zip -l&quot; command. For example, the following is the &quot;zip -l&quot; output from a 49-slide presentation about SQLite from the 2014 &lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;SouthEast LinuxFest&lt;/a&gt; conference:</source>
          <target state="translated">OpenDocumentプレゼンテーションまたは「ODP」ファイルは、プレゼンテーションスライドを説明するXMLファイルと、プレゼンテーションの一部として含まれるさまざまな画像の個別の画像ファイルを含む&lt;a href=&quot;http://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIPアーカイブ&lt;/a&gt;です。 （OpenDocumentワードプロセッサとスプレッドシートファイルは同様に構造化されていますが、この記事では考慮されていません。）読者は、「zip -l」コマンドを使用してODPファイルの内容を簡単に確認できます。たとえば、2014 &lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;SouthEast LinuxFest&lt;/a&gt;カンファレンスのSQLiteに関する49スライドのプレゼンテーションからの「zip -l」出力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3cc6b47353bce3b91e074154d427c28b96c16d62" translate="yes" xml:space="preserve">
          <source>An R*Tree query is initialized by making the root node the only entry in a priority queue sorted by rScore. The query proceeds by extracting the entry from the priority queue that has the lowest score. If that entry is a leaf (meaning that it is an actual R*Tree entry and not a subtree) then that entry is returned as one row of the query result. If the extracted priority queue entry is a node (a subtree), then sub-subtrees or leaves contained within that entry are passed to the xQueryFunc callback, one by one. Those subelements for which the xQueryFunc callback sets eWithin to PARTLY_WITHIN or FULLY_WITHIN are added to the priority queue using the score supplied by the callback. Subelements that return NOT_WITHIN are discarded. The query runs until the priority queue is empty.</source>
          <target state="translated">R*Treeクエリは、ルートノードを、rScoreでソートされた優先度キューの唯一のエントリにすることで初期化されます。クエリは、優先度キューの中から最も低いスコアを持つエントリを抽出することで進行します。そのエントリがリーフ (サブツリーではなく実際の R*Tree エントリであることを意味します)である場合、そのエントリはクエリ結果の 1 行として返されます。抽出された優先度キューのエントリがノード(サブツリー)である場合、そのエントリに含まれるサブサブツリーやリーフは、一つずつ xQueryFunc コールバックに渡されます。xQueryFunc コールバックが eWithin を PARTLY_WITHIN または FULLY_WITHIN に設定したサブエレメントは、コールバックによって与えられたスコアを使用して優先度キューに追加されます。NOT_WITHIN を返すサブ要素は破棄されます。このクエリは、優先度キューが空になるまで実行されます。</target>
        </trans-unit>
        <trans-unit id="4c36503645997aef3b66492ffa49c5737331ae5b" translate="yes" xml:space="preserve">
          <source>An RBU Vacuum operation requires less temporary disk space and writes less data to disk than an SQLite VACUUM. An SQLite VACUUM requires roughly twice the size of the final database file in temporary disk space to run. The total amount of data written is around three times the size of the final database file. By contrast, an RBU Vacuum requires roughly the size of the final database file in temporary disk space and writes a total of twice that to disk.</source>
          <target state="translated">RBUバキューム操作では、SQLite VACUUMよりも一時的なディスクスペースが少なく、ディスクへのデータの書き込みも少なくなります。SQLite VACUUMの実行には、最終的なデータベースファイルのサイズの約2倍の一時ディスクスペースが必要です。書き込まれるデータの総量は、最終的なデータベースファイルのサイズの約3倍です。対照的に、RBU VACUは、一時的なディスクスペースにある最終的なデータベースファイルのサイズの約2倍のデータを必要とし、ディスクへの書き込みはその2倍になります。</target>
        </trans-unit>
        <trans-unit id="b402488c545650e7a0466693ac0992d5dced3759" translate="yes" xml:space="preserve">
          <source>An RBU handle is created by calling sqlite3rbu_vacuum(T, S).</source>
          <target state="translated">sqlite3rbu_vacuum(T,S)を呼び出すことでRBUハンドルが作成されます。</target>
        </trans-unit>
        <trans-unit id="c7d98c92ed51948506a67c9bcda80cc97f4fcfe4" translate="yes" xml:space="preserve">
          <source>An SQL aggregate function, which can be used to create new archives in memory.</source>
          <target state="translated">メモリ上に新しいアーカイブを作成するために使用できるSQL集約関数。</target>
        </trans-unit>
        <trans-unit id="9bd314dc55feb99e9480fcbcc4eb53b163d23b23" translate="yes" xml:space="preserve">
          <source>An SQL operation that is interrupted will return &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;. If the interrupted SQL operation is an INSERT, UPDATE, or DELETE that is inside an explicit transaction, then the entire transaction will be rolled back automatically.</source>
          <target state="translated">中断されたSQL操作は&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;を返します。中断されたSQL操作が、明示的なトランザクション内にあるINSERT、UPDATE、またはDELETEの場合、トランザクション全体が自動的にロールバックされます。</target>
        </trans-unit>
        <trans-unit id="bb8b61384d0c44a2e614c579b268363eaa1fc909" translate="yes" xml:space="preserve">
          <source>An SQL operation that is interrupted will return &lt;a href=&quot;../rescode#interrupt&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;. If the interrupted SQL operation is an INSERT, UPDATE, or DELETE that is inside an explicit transaction, then the entire transaction will be rolled back automatically.</source>
          <target state="translated">中断されたSQL操作は&lt;a href=&quot;../rescode#interrupt&quot;&gt;SQLITE_INTERRUPT&lt;/a&gt;を返します。中断されたSQL操作が、明示的なトランザクション内にあるINSERT、UPDATE、またはDELETEの場合、トランザクション全体が自動的にロールバックされます。</target>
        </trans-unit>
        <trans-unit id="3de39c28f7d860e2f20cf499f83a1ecd516190b8" translate="yes" xml:space="preserve">
          <source>An SQL statement can be preceded by the keyword &quot;EXPLAIN&quot; or by the phrase &quot;EXPLAIN QUERY PLAN&quot;. Either modification causes the SQL statement to behave as a query and to return information about how the SQL statement would have operated if the EXPLAIN keyword or phrase had been omitted.</source>
          <target state="translated">SQL文の前には、キーワード &quot;EXPLAIN &quot;またはフレーズ &quot;EXPLAIN QUERY PLAN &quot;を付けることができます。いずれの変更も、SQL文をクエリとして動作させ、EXPLAINキーワードまたはフレーズが省略されていた場合にSQL文がどのように動作したかについての情報を返します。</target>
        </trans-unit>
        <trans-unit id="5abd7dabfe02360ec2bf6a05e3dfaa3cf5654f08" translate="yes" xml:space="preserve">
          <source>An SQLITE_BUSY error can occur at any point in a transaction: when the transaction is first started, during any write or update operations, or when the transaction commits. To avoid encountering SQLITE_BUSY errors in the middle of a transaction, the application can use &lt;a href=&quot;lang_transaction#immediate&quot;&gt;BEGIN IMMEDIATE&lt;/a&gt; instead of just &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt; to start a transaction. The &lt;a href=&quot;lang_transaction#immediate&quot;&gt;BEGIN IMMEDIATE&lt;/a&gt; command might itself return SQLITE_BUSY, but if it succeeds, then SQLite guarantees that no subsequent operations on the same database through the next &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; will return SQLITE_BUSY.</source>
          <target state="translated">SQLITE_BUSYエラーは、トランザクションの任意の時点で発生する可能性があります。トランザクションが最初に開始されたとき、書き込み操作または更新操作中に、またはトランザクションがコミットしたときです。トランザクションの途中でSQLITE_BUSYエラーに遭遇しないようにするには、アプリケーションが使用することができます&lt;a href=&quot;lang_transaction#immediate&quot;&gt;IMMEDIATE BEGIN&lt;/a&gt;の代わりにはちょうど&lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;トランザクションを開始します。&lt;a href=&quot;lang_transaction#immediate&quot;&gt;IMMEDIATE BEGIN&lt;/a&gt;自体がSQLITE_BUSYを返すことがありますコマンドを、それが成功した場合、その後、SQLiteの保証は次の経由同じデータベースには後続の操作という&lt;a href=&quot;lang_transaction&quot;&gt;COMMITは&lt;/a&gt; SQLITE_BUSYを返しません。</target>
        </trans-unit>
        <trans-unit id="ac700efdf9da65c96e524e1f874e4322c772698e" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_CLOSE callback is invoked when a database connection closes. The P argument is a pointer to the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; object and the X argument is unused.</source>
          <target state="translated">SQLITE_TRACE_CLOSEコールバックは、データベース接続が閉じたときに呼び出されます。P引数は&lt;a href=&quot;#sqlite3&quot;&gt;データベース接続&lt;/a&gt;オブジェクトへのポインタであり、X引数は使用されません。</target>
        </trans-unit>
        <trans-unit id="90dda83d19d5a0e9440a66a5153d6f08cfb8e791" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_CLOSE callback is invoked when a database connection closes. The P argument is a pointer to the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; object and the X argument is unused.</source>
          <target state="translated">SQLITE_TRACE_CLOSEコールバックは、データベース接続が閉じたときに呼び出されます。P引数は&lt;a href=&quot;sqlite3&quot;&gt;データベース接続&lt;/a&gt;オブジェクトへのポインタであり、X引数は使用されません。</target>
        </trans-unit>
        <trans-unit id="6463d38e5743fc7b60a45c0dd4edf8e6196b2c76" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_PROFILE callback provides approximately the same information as is provided by the &lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_profile()&lt;/a&gt; callback. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument points to a 64-bit integer which is the estimated of the number of nanosecond that the prepared statement took to run. The SQLITE_TRACE_PROFILE callback is invoked when the statement finishes.</source>
          <target state="translated">SQLITE_TRACE_PROFILEコールバックは、&lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;コールバックによって提供されるものとほぼ同じ情報を提供します。P引数は&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備済みステートメント&lt;/a&gt;へのポインターであり、X引数は準備済みステートメントの実行にかかったナノ秒数の見積もりである64ビット整数を指します。SQLITE_TRACE_PROFILEコールバックは、ステートメントが終了すると呼び出されます。</target>
        </trans-unit>
        <trans-unit id="51f65212fb2842387dde50749c6891ed068f1d2c" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_PROFILE callback provides approximately the same information as is provided by the &lt;a href=&quot;profile&quot;&gt;sqlite3_profile()&lt;/a&gt; callback. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument points to a 64-bit integer which is the estimated of the number of nanosecond that the prepared statement took to run. The SQLITE_TRACE_PROFILE callback is invoked when the statement finishes.</source>
          <target state="translated">SQLITE_TRACE_PROFILEコールバックは、&lt;a href=&quot;profile&quot;&gt;sqlite3_profile（）&lt;/a&gt;コールバックによって提供されるものとほぼ同じ情報を提供します。P引数は&lt;a href=&quot;stmt&quot;&gt;準備済みステートメント&lt;/a&gt;へのポインターであり、X引数は準備済みステートメントの実行にかかったナノ秒数の見積もりである64ビット整数を指します。SQLITE_TRACE_PROFILEコールバックは、ステートメントが終了すると呼び出されます。</target>
        </trans-unit>
        <trans-unit id="959b99495fe9f93bfe60c0c8dc39f940a8cc7107" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_ROW callback is invoked whenever a prepared statement generates a single row of result. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument is unused.</source>
          <target state="translated">SQLITE_TRACE_ROWコールバックは、準備されたステートメントが結果の単一行を生成するたびに呼び出されます。P引数は&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備済みステートメント&lt;/a&gt;へのポインターであり、X引数は使用されません。</target>
        </trans-unit>
        <trans-unit id="f2c23282009e34d356e10ef768fd5d27fe9242d7" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_ROW callback is invoked whenever a prepared statement generates a single row of result. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; and the X argument is unused.</source>
          <target state="translated">SQLITE_TRACE_ROWコールバックは、準備されたステートメントが結果の単一行を生成するたびに呼び出されます。P引数は&lt;a href=&quot;stmt&quot;&gt;準備済みステートメント&lt;/a&gt;へのポインターであり、X引数は使用されません。</target>
        </trans-unit>
        <trans-unit id="d87f64da2cd54c09ca013ca90ee9edc2e86b39e0" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_STMT callback is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. The P argument is a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt;. The X argument is a pointer to a string which is the unexpanded SQL text of the prepared statement or an SQL comment that indicates the invocation of a trigger. The callback can compute the same text that would have been returned by the legacy &lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_trace()&lt;/a&gt; interface by using the X argument when X begins with &quot;--&quot; and invoking &lt;a href=&quot;#sqlite3_expanded_sql&quot;&gt;sqlite3_expanded_sql(P)&lt;/a&gt; otherwise.</source>
          <target state="translated">SQLITE_TRACE_STMTコールバックは、準備されたステートメントが最初に実行を開始したとき、およびおそらく各トリガーサブプログラムの開始時など、準備されたステートメントの実行中に別のときに呼び出されます。 P引数は、&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備されたステートメント&lt;/a&gt;へのポインタです。 X引数は、準備されたステートメントの展開されていないSQLテキストである文字列へのポインター、またはトリガーの呼び出しを示すSQLコメントです。コールバックは、Xが「-」で始まる場合にX引数を使用し、それ以外の場合は&lt;a href=&quot;#sqlite3_expanded_sql&quot;&gt;sqlite3_expanded_sql（P）&lt;/a&gt;を呼び出すことにより、従来の&lt;a href=&quot;#sqlite3_profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;インターフェースによって返されたものと同じテキストを計算できます。</target>
        </trans-unit>
        <trans-unit id="67e19a52fd0823eafed0ed156581e34f2ae1fb9a" translate="yes" xml:space="preserve">
          <source>An SQLITE_TRACE_STMT callback is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. The P argument is a pointer to the &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt;. The X argument is a pointer to a string which is the unexpanded SQL text of the prepared statement or an SQL comment that indicates the invocation of a trigger. The callback can compute the same text that would have been returned by the legacy &lt;a href=&quot;profile&quot;&gt;sqlite3_trace()&lt;/a&gt; interface by using the X argument when X begins with &quot;--&quot; and invoking &lt;a href=&quot;expanded_sql&quot;&gt;sqlite3_expanded_sql(P)&lt;/a&gt; otherwise.</source>
          <target state="translated">SQLITE_TRACE_STMTコールバックは、準備されたステートメントが最初に実行を開始したとき、およびおそらく各トリガーサブプログラムの開始時など、準備されたステートメントの実行中に別のときに呼び出されます。 P引数は、&lt;a href=&quot;stmt&quot;&gt;準備されたステートメント&lt;/a&gt;へのポインタです。 X引数は、準備されたステートメントの展開されていないSQLテキストである文字列へのポインター、またはトリガーの呼び出しを示すSQLコメントです。コールバックは、Xが「-」で始まる場合にX引数を使用し、それ以外の場合は&lt;a href=&quot;expanded_sql&quot;&gt;sqlite3_expanded_sql（P）&lt;/a&gt;を呼び出すことにより、従来の&lt;a href=&quot;profile&quot;&gt;sqlite3_trace（）&lt;/a&gt;インターフェースによって返されたものと同じテキストを計算できます。</target>
        </trans-unit>
        <trans-unit id="40dcdd5a240705c4bdfc3ba184015a22602dc143" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can be queried using a high-level query language (SQL). Some examples:</source>
          <target state="translated">SQLite アーカイブは、高レベルのクエリ言語 (SQL)を使用して問い合わせることができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="b242257f9fcf2e3e2eac957dac8e90b190c245bb" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can be updated incrementally. Individual files can be added or removed or replaced without having to rewrite the entire archive.</source>
          <target state="translated">SQLite アーカイブは、インクリメンタルに更新することができます。アーカイブ全体を書き換えることなく、個々のファイルを追加・削除・置換することができます。</target>
        </trans-unit>
        <trans-unit id="6a576b713a86af9234a7a7f85c2bf0090d4320d5" translate="yes" xml:space="preserve">
          <source>An SQLite Archive can work around firewall-imposed censorship. For example, certain file types that are considered &quot;dangerous&quot; (examples: DLLs) will be &lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;blocked by Gmail&lt;/a&gt; and probably many other email services and firewall, even if those files are wrapped inside a ZIP Archive or Tarball. But these firewall usually do not care about SQLite Archives and so content can be put inside an SQLite Archive to evade censorship.</source>
          <target state="translated">SQLiteアーカイブは、ファイアウォールによる強制検閲を回避できます。たとえば、「危険」と見なされる特定のファイルタイプ（例：DLL）は、ZIPアーカイブまたはTarballでラップされている場合でも、&lt;a href=&quot;https://support.google.com/mail/answer/6590&quot;&gt;Gmail&lt;/a&gt;およびおそらく他の多くのメールサービスとファイアウォールによってブロックされます。しかし、これらのファイアウォールは通常SQLiteアーカイブを気にしないため、コンテンツをSQLiteアーカイブ内に配置して検閲を回避できます。</target>
        </trans-unit>
        <trans-unit id="4118c0f7a6f81cb74480ccc9fa50eb744542f589" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is an ordinary SQLite database file that contains the following table as part of its schema:</source>
          <target state="translated">SQLite アーカイブは、スキーマの一部として以下のテーブルを含む通常の SQLite データベースファイルです。</target>
        </trans-unit>
        <trans-unit id="dc6cbe656d1d7ad99c40dcbbe2f8824b11660a4b" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is flexible. ZIP Archives and Tarballs are limited to storing only files. An SQLite Archive stores files plus whatever other tabular and/or relational data seems useful to the application.</source>
          <target state="translated">SQLiteアーカイブは柔軟性があります。ZIP アーカイブや Tarballs はファイルのみの保存に限定されています。SQLite アーカイブは、ファイルに加えて、アプリケーションにとって有用と思われる他の表やリレーショナルデータを保存します。</target>
        </trans-unit>
        <trans-unit id="b26644641a5c080b143bed71ae376b8f86f40091" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is one example of a more general idea that an SQLite database can behave as a container object holding lots of smaller data components.</source>
          <target state="translated">SQLiteアーカイブは、SQLiteデータベースがより小さなデータコンポーネントをたくさん保持するコンテナオブジェクトとして振る舞うことができるという、より一般的な考え方の一例です。</target>
        </trans-unit>
        <trans-unit id="5d177845e7556bf44c101aaef7f85cf75f9d1c63" translate="yes" xml:space="preserve">
          <source>An SQLite Archive is transactional. Updates are atomic and durable, even if there are crashes or power losses in the middle of the update. Readers see a consistent and unchanging version of the content even is some other process is simultaneously updating the archive.</source>
          <target state="translated">SQLite アーカイブはトランザクション型です。更新は原子的で耐久性があり、たとえ更新中にクラッシュや停電が発生したとしても、それを防ぐことができます。他のプロセスが同時にアーカイブを更新していても、読者は一貫性のある不変のバージョンのコンテンツを見ることができます。</target>
        </trans-unit>
        <trans-unit id="3312ff278a713e75002ecfaa844a5076353ef655" translate="yes" xml:space="preserve">
          <source>An SQLite Archive supports only the &lt;a href=&quot;https://zlib.net/&quot;&gt;Deflate&lt;/a&gt; compression method. Tarballs and ZIP Archive support a wider assortment of compression methods.</source>
          <target state="translated">SQLiteアーカイブは、&lt;a href=&quot;https://zlib.net/&quot;&gt;Deflate&lt;/a&gt;圧縮方式のみをサポートしています。TarballsとZIP Archiveは、幅広い圧縮方法をサポートしています。</target>
        </trans-unit>
        <trans-unit id="8fd49e13abc11c533a20ccc6b5f7798ff20c6616" translate="yes" xml:space="preserve">
          <source>An SQLite Database File</source>
          <target state="translated">SQLite データベースファイル</target>
        </trans-unit>
        <trans-unit id="b000f5fd9df31bd42422b2ef21f81528c08cea1a" translate="yes" xml:space="preserve">
          <source>An SQLite application file format is a great choice in cases where there is a collection or &quot;federation&quot; of separate programs, often written in different languages and by different development teams. This comes up commonly in research or laboratory environments where one team is responsible for data acquisition and other teams are responsible for various stages of analysis. Each team can use whatever hardware, operating system, programming language and development methodology that they are most comfortable with, and as long as all programs use an SQLite database with a common schema, they can all interoperate.</source>
          <target state="translated">SQLiteアプリケーションファイル形式は、異なる言語で書かれ、異なる開発チームによって書かれた別個のプログラムの集合体や「連合体」が存在する場合に最適です。これは、あるチームがデータ収集を担当し、他のチームが分析の様々な段階を担当しているような研究環境やラボ環境でよく見られることです。各チームは自分たちが最も快適に使えるハードウェア、オペレーティングシステム、プログラミング言語、開発方法論を使用することができ、すべてのプログラムが共通のスキーマを持つSQLiteデータベースを使用している限り、すべてのプログラムを相互運用することができます。</target>
        </trans-unit>
        <trans-unit id="5bcad71b941086fc8d3676a58f2f663381ad6019" translate="yes" xml:space="preserve">
          <source>An SQLite database can become corrupt if the file content changes due to a disk drive or flash memory failure. It is very rare, but disks will occasionally flip a bit in the middle of a sector.</source>
          <target state="translated">SQLite データベースは、ディスクドライブやフラッシュメモリの故障によりファイルの内容が変化した場合に破損する可能性があります。非常に稀ですが、ディスクがセクタの途中で少し反転することがあります。</target>
        </trans-unit>
        <trans-unit id="caa981e15b39eb75edaa6ff0d13de7391ec0f911" translate="yes" xml:space="preserve">
          <source>An SQLite database connection defaults to &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode=DELETE&lt;/a&gt;. To convert to WAL mode, use the following pragma:</source>
          <target state="translated">SQLiteデータベース接続のデフォルトは、&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode = DELETE&lt;/a&gt;です。WALモードに変換するには、次のプラグマを使用します。</target>
        </trans-unit>
        <trans-unit id="dfa9719008b383e9c69cd74a19a5c395ef612cf2" translate="yes" xml:space="preserve">
          <source>An SQLite database facilitates data transfer between systems even when the endpoints have different word sizes and/or byte orders. The data can be a complex mix of large binary blobs, text, and small numeric or boolean values. The data format can be easily extended by adding new tables and/or columns, without breaking legacy receivers. The SQL query language means that receivers are not required to parse the entire transfer all at once, but can instead query the received content as needed. The data format is &quot;transparent&quot; in the sense that it is easily decoded for human viewing using a variety of universally available, open-source tools, from multiple vendors.</source>
          <target state="translated">SQLite データベースは、エンドポイントのワードサイズやバイトオーダーが異なる場合でも、システム間のデータ転送を容易にします。データは、大きなバイナリ・ブロブ、テキスト、小さな数値やブール値の複雑な組み合わせにすることができます。データ形式は、レガシーなレシーバを壊すことなく、新しいテーブルやカラムを追加することで簡単に拡張することができます。SQL クエリ言語は、受信機が転送全体を一度に解析する必要がなく、必要に応じて受信したコンテンツをクエリすることができることを意味します。このデータ形式は、複数のベンダーが提供している普遍的に利用可能なオープンソースの様々なツールを使用して、人間が見るために簡単にデコードできるという意味で「透過的」です。</target>
        </trans-unit>
        <trans-unit id="982d7ceede2aaf5d861f9c36536e7099da9073ca" translate="yes" xml:space="preserve">
          <source>An SQLite database file consists of one or more &quot;pages&quot;. For a single database file, all pages are the same size, though for different database files, the page size can any power of two between 512 and 65536, inclusive.</source>
          <target state="translated">SQLiteデータベースファイルは、1つ以上の「ページ」で構成されています。1つのデータベースファイルの場合、すべてのページは同じサイズですが、異なるデータベースファイルの場合、ページサイズは512から65536の間の2乗のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="b1d2c158eb6a0a9552493d7c89540c3e0f9e893f" translate="yes" xml:space="preserve">
          <source>An SQLite database file is approximately the same size, and in some cases smaller, than a ZIP archive holding the same information.</source>
          <target state="translated">SQLiteデータベースファイルは、同じ情報を保持するZIPアーカイブとほぼ同じサイズで、場合によってはそれよりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="2c4396f52519eb130b5dd0375bda350b47a433fb" translate="yes" xml:space="preserve">
          <source>An SQLite database file is divided into pages. The first page is 1, the second page is 2, and so forth. There is no page 0. Every page is the same size. The size of every page is a power of 2 between 512 and 65536. See the &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; documentation for further details.</source>
          <target state="translated">SQLiteデータベースファイルはページに分割されます。最初のページは1、2番目のページは2、以下同様です。ページ0はありません。すべてのページは同じサイズです。すべてのページのサイズは、512から65536の間の2の累乗です。詳細については、&lt;a href=&quot;fileformat2&quot;&gt;ファイル形式の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4f8b304d710aae6886e59c81e1a985cd1cd70645" translate="yes" xml:space="preserve">
          <source>An SQLite database file with a defined schema often makes an excellent application file format. Here are a dozen reasons why this is so:</source>
          <target state="translated">定義されたスキーマを持つSQLiteデータベースファイルは、しばしば優れたアプリケーションファイル形式になります。ここでは、その理由をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="89ebdfe9c0e4c8eb0d11614911caf8938817b53f" translate="yes" xml:space="preserve">
          <source>An SQLite database has a lot of capability, which this essay has only begun to touch upon. But hopefully this quick glimpse has convinced some readers that using an SQL database as an application file format is worth a second look.</source>
          <target state="translated">SQLiteデータベースには多くの機能がありますが、このエッセイではまだ触れたばかりです。しかし、この簡単な紹介で、一部の読者がSQLデータベースをアプリケーションファイルフォーマットとして使用することが、もう一度見る価値があることを納得してくれたのではないかと期待しています。</target>
        </trans-unit>
        <trans-unit id="69541d5b92ee6eb3e8f9d53bc6a238b7db778bec" translate="yes" xml:space="preserve">
          <source>An SQLite database is a &lt;a href=&quot;fileformat2&quot;&gt;well-defined and well-documented&lt;/a&gt; file format that is in widespread use by literally millions of applications and is backwards compatible to its inception in 2004 and which promises to continue to be compatible in decades to come. The longevity of SQLite database files is particularly important to bespoke applications, since it allows the document content to be accessed far in the future, long after all traces of the original application have been lost. Data lives longer than code. SQLite databases are &lt;a href=&quot;locrsf&quot;&gt;recommended by the US Library of Congress&lt;/a&gt; as a storage format for long-term preservation of digital content.</source>
          <target state="translated">SQLiteデータベースは、&lt;a href=&quot;fileformat2&quot;&gt;明確に文書化された&lt;/a&gt;ファイル形式であり、文字通り数百万のアプリケーションで広く使用されており、2004年の当初との下位互換性があり、今後数十年にわたって互換性が維持されることが約束されています。 SQLiteデータベースファイルの寿命は、カスタムアプリケーションにとって特に重要です。これにより、元のアプリケーションのすべてのトレースが失われた後もずっと、ドキュメントコンテンツに遠くからアクセスできます。データはコードよりも長く存続します。 SQLiteデータベースは&lt;a href=&quot;locrsf&quot;&gt;、米国議会図書館&lt;/a&gt;がデジタルコンテンツを長期保存するためのストレージフォーマットとして推奨されています。</target>
        </trans-unit>
        <trans-unit id="1414bb1ca0b7308fabbbb0231f95883cdfb55f17" translate="yes" xml:space="preserve">
          <source>An SQLite database is a single ordinary disk file that can be located anywhere in the directory hierarchy. If SQLite can read the disk file then it can read anything in the database. If the disk file and its directory are writable, then SQLite can change anything in the database. Database files can easily be copied onto a USB memory stick or emailed for sharing.</source>
          <target state="translated">SQLite データベースは、ディレクトリ階層のどこにでもある単一の普通のディスクファイルです。SQLite がディスクファイルを読み取ることができれば、データベース内のあらゆるものを読み取ることができます。ディスクファイルとそのディレクトリが書き込み可能であれば、SQLite はデータベース内の何でも変更することができます。データベースファイルは USB メモリスティックにコピーしたり、電子メールで送信して共有することができます。</target>
        </trans-unit>
        <trans-unit id="26fb41c051ef1c4cae3e65d019499aa1d3715a71" translate="yes" xml:space="preserve">
          <source>An SQLite database is highly resistant to corruption. If an application crash, or an operating-system crash, or even a power failure occurs in the middle of a transaction, the partially written transaction should be automatically rolled back the next time the database file is accessed. The recovery process is fully automatic and does not require any action on the part of the user or the application.</source>
          <target state="translated">SQLite データベースは破損に対して非常に強い耐性を持っています。トランザクションの途中でアプリケーションのクラッシュやオペレーティングシステムのクラッシュ、さらには電源障害が発生した場合、部分的に書き込まれたトランザクションは、次回データベースファイルにアクセスしたときに自動的にロールバックされなければなりません。リカバリプロセスは完全に自動化されており、ユーザーやアプリケーション側でのアクションは必要ありません。</target>
        </trans-unit>
        <trans-unit id="a3b90e2f3f651754fcb6451ab34aac384e7a5fbe" translate="yes" xml:space="preserve">
          <source>An SQLite database is limited in size to 140 terabytes (2&lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt; bytes, 128 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.</source>
          <target state="translated">SQLiteデータベースのサイズは140テラバイト（2 &lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt;バイト、128ティバイト）に制限されています。また、より大きなデータベースを処理できる場合でも、SQLiteはデータベース全体を単一のディスクファイルに格納し、多くのファイルシステムはファイルの最大サイズをこれよりも小さいものに制限しています。したがって、この規模のデータベースを検討している場合は、そのコンテンツを複数のディスクファイルに、そしておそらく複数のボリュームに分散するクライアント/サーバーデータベースエンジンの使用を検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="558b75a72d8c6499c78323d65dfdffa7599a1498" translate="yes" xml:space="preserve">
          <source>An SQLite database is limited in size to 281 terabytes (2&lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt; bytes, 128 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.</source>
          <target state="translated">SQLiteデータベースのサイズは281テラバイト（2 &lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt;バイト、128ティビバイト）に制限されています。また、より大きなデータベースを処理できる場合でも、SQLiteはデータベース全体を単一のディスクファイルに保存し、多くのファイルシステムはファイルの最大サイズをこれよりも小さいサイズに制限します。したがって、この規模のデータベースを検討している場合は、コンテンツを複数のディスクファイル、場合によっては複数のボリュームに分散するクライアント/サーバーデータベースエンジンの使用を検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8efcb5c5b5fbf0d6f174a7bd1fdafd17d5d08348" translate="yes" xml:space="preserve">
          <source>An SQLite database is maintained on disk using a B-tree implementation found in the &lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt; source file. A separate B-tree is used for each table and index in the database. All B-trees are stored in the same disk file. The &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; details are stable and well-defined and are guaranteed to be compatible moving forward.</source>
          <target state="translated">SQLiteデータベースは、&lt;a href=&quot;https://sqlite.org/src/file/src/btree.c&quot;&gt;btree.c&lt;/a&gt;ソースファイルにあるBツリー実装を使用してディスク上に保持されます。データベース内のテーブルとインデックスごとに個別のBツリーが使用されます。すべてのBツリーは同じディスクファイルに格納されます。&lt;a href=&quot;fileformat2&quot;&gt;ファイル形式の&lt;/a&gt;詳細は安定しており、明確に定義されたとの互換性前進されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="25bf5d553881678b34da8985ef757fc5ffe38cac" translate="yes" xml:space="preserve">
          <source>An SQLite database is normally stored in a single ordinary disk file. However, in certain circumstances, the database might be stored in memory.</source>
          <target state="translated">SQLiteデータベースは、通常は1つの通常のディスクファイルに格納されています。しかし、特定の状況下では、データベースはメモリに格納されることがあります。</target>
        </trans-unit>
        <trans-unit id="ffcfbe0c6736b628bac17f2c3fd76a08f4a70298" translate="yes" xml:space="preserve">
          <source>An SQLite extension is a shared library or DLL. To load it, you need to supply SQLite with the name of the file containing the shared library or DLL and an entry point to initialize the extension. In C code, this information is supplied using the &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; API. See the documentation on that routine for additional information.</source>
          <target state="translated">SQLite拡張機能は、共有ライブラリまたはDLLです。これをロードするには、共有ライブラリまたはDLLを含むファイルの名前と、拡張機能を初期化するエントリポイントをSQLiteに提供する必要があります。Cコードでは、この情報は&lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt; API を使用して提供されます。追加情報については、そのルーチンに関するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="741d402ffb5729c1f12f8583e23c058762a2645f" translate="yes" xml:space="preserve">
          <source>An SQLite file associates a key with some data. For an SQLite table, the database file is set up so that the key is an integer and the data is the information for one row of the table. Indices in SQLite reverse this arrangement. The index key is (some of) the information being stored and the index data is an integer. To access a table row that has some particular content, we first look up the content in the index table to find its integer index, then we use that integer to look up the complete record in the table.</source>
          <target state="translated">SQLiteファイルは、キーとデータを関連付けます。SQLite テーブルの場合、データベースファイルはキーが整数で、データがテーブルの 1 行分の情報となるように設定されています。SQLiteのインデックスは、この配置を逆にしています。インデックスのキーは(一部の)格納されている情報であり、インデックスデータは整数です。ある特定の内容を持つテーブルの行にアクセスするには、まずインデックステーブルの内容を調べてその整数インデックスを見つけ、その整数を使ってテーブル内の完全なレコードを調べます。</target>
        </trans-unit>
        <trans-unit id="aa48e9ca1a9afbd598f5c369c282c95ae280985d" translate="yes" xml:space="preserve">
          <source>An UPDATE change does not contain any information regarding non-PRIMARY KEY fields that are not modified by the change. It is not possible for an UPDATE change to specify modifications to PRIMARY KEY fields.</source>
          <target state="translated">UPDATE変更には、変更によって変更されないPRIMARY KEY以外のフィールドに関する情報は含まれません。UPDATE変更でPRIMARY KEYフィールドの変更を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="a8453636ce12faf3a7d30b3604973de7e92b03be" translate="yes" xml:space="preserve">
          <source>An UPDATE statement is used to modify a subset of the values stored in zero or more rows of the database table identified by the &lt;a href=&quot;syntax/qualified-table-name&quot;&gt;qualified-table-name&lt;/a&gt; specified as part of the UPDATE statement.</source>
          <target state="translated">UPDATEステートメントは、UPDATEステートメントの一部として指定された&lt;a href=&quot;syntax/qualified-table-name&quot;&gt;qualified-table-name&lt;/a&gt;によって識別されるデータベーステーブルのゼロ以上の行に格納されている値のサブセットを変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c4f3409a0b0e68f9dad8c3ad576c7434229cfe7d" translate="yes" xml:space="preserve">
          <source>An UPSERT is an ordinary &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement that is followed by the special ON CONFLICT clause shown above.</source>
          <target state="translated">UPSERTは、上記の特別なON CONFLICT句が後に続く通常の&lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;ステートメントです。</target>
        </trans-unit>
        <trans-unit id="69182763d75d3decbdc8b998206e5e9e0abdd4fa" translate="yes" xml:space="preserve">
          <source>An administrator might be cleaning up after an OS crash or power failure, see the journal file, think it is junk, and delete it.</source>
          <target state="translated">管理者がOSのクラッシュや停電の後の片付けをしていて、ジャーナルファイルを見て、ジャンクだと思って削除してしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="3394246ad7fb8330c70e24b0e7ea728a29ef0f38" translate="yes" xml:space="preserve">
          <source>An advanced &lt;a href=&quot;optoverview&quot;&gt;query planner&lt;/a&gt;</source>
          <target state="translated">高度な&lt;a href=&quot;optoverview&quot;&gt;クエリプランナー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911df1dfdba68c60884217edf88c5ceef73757d1" translate="yes" xml:space="preserve">
          <source>An aggregate window function is similar to an &lt;a href=&quot;lang_aggfunc&quot;&gt;ordinary aggregate function&lt;/a&gt;, except adding it to a query does not change the number of rows returned. Instead, for each row the result of the aggregate window function is as if the corresponding aggregate were run over all rows in the &quot;window frame&quot; specified by the OVER clause.</source>
          <target state="translated">集計ウィンドウ関数は、クエリに追加しても返される行数が変更されないことを除いて、&lt;a href=&quot;lang_aggfunc&quot;&gt;通常の集計&lt;/a&gt;関数と似ています。代わりに、各行の集計ウィンドウ関数の結果は、対応する集計がOVER句で指定された「ウィンドウフレーム」のすべての行に対して実行されたかのようになります。</target>
        </trans-unit>
        <trans-unit id="322176e856e37076d444f90d3c6a55c34f3890cf" translate="yes" xml:space="preserve">
          <source>An alternate VFS can also be specified as the 4th parameter to the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; function. For example:</source>
          <target state="translated">&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;関数の4番目のパラメーターとして、代替VFSを指定することもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="41672a8dda2c83a2c98fffccfd2de6f45dfd99a9" translate="yes" xml:space="preserve">
          <source>An alternative page cache implementation is specified using &lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;,...).</source>
          <target state="translated">代替のページキャッシュ実装は、&lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;、...）を使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="947c7106a30016236017e10a97e39cd6cd0c6560" translate="yes" xml:space="preserve">
          <source>An alternative page cache implementation is specified using &lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;,...).</source>
          <target state="translated">代替のページキャッシュ実装は、&lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpcache2&quot;&gt;SQLITE_CONFIG_PCACHE2&lt;/a&gt;、...）を使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="7a5b04203def7bb645f2fb1f011d7be6cb15aa11" translate="yes" xml:space="preserve">
          <source>An alternative to using the VACUUM command is auto-vacuum mode, enabled using the &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum pragma&lt;/a&gt;.</source>
          <target state="translated">VACUUMコマンドを使用する代わりに、&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuumプラグマ&lt;/a&gt;を使用して有効にする自動バキュームモードがあります。</target>
        </trans-unit>
        <trans-unit id="ad7c395d93d8f14379a00c98e2d82d0ba28b9997" translate="yes" xml:space="preserve">
          <source>An alternative to using the VACUUM command to reclaim space after data has been deleted is auto-vacuum mode, enabled using the &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; pragma. When &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; is enabled for a database free pages may be reclaimed after deleting data, causing the file to shrink, without rebuilding the entire database using VACUUM. However, using &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; can lead to extra database file fragmentation. And &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; does not compact partially filled pages of the database as VACUUM does.</source>
          <target state="translated">削除されたデータの後に再利用スペースにVACUUMコマンドを使用する代わりに、自動真空モードで、使用して有効&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuumの&lt;/a&gt;プラグマを。とき&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuumが&lt;/a&gt;データベースで有効になっている空きページはVACUUMを使用して、データベース全体を再構築することなく、縮小するファイルを引き起こして、データを削除した後に再利用することができます。ただし、&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;を使用すると、データベースファイルが余分に断片化する可能性があります。また、&lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt;は、VACUUMのように部分的に埋められたデータベースのページを圧縮しません。</target>
        </trans-unit>
        <trans-unit id="553a75a5f14c49499d0ac2492bac151d7f6d24ab" translate="yes" xml:space="preserve">
          <source>An application can initiate a checkpoint using any writable database connection on the database simply by invoking &lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint()&lt;/a&gt; or &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt;. There are three subtypes of checkpoints that vary in their aggressiveness: PASSIVE, FULL, and RESTART. The default checkpoint style is PASSIVE, which does as much work as it can without interfering with other database connections, and which might not run to completion if there are concurrent readers or writers. All checkpoints initiated by &lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint()&lt;/a&gt; and by the automatic checkpoint mechanism are PASSIVE. FULL and RESTART checkpoints try harder to run the checkpoint to completion and can only be initiated by a call to &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt;. See the &lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2()&lt;/a&gt; documentation for additional information on FULL and RESET checkpoints.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint（）&lt;/a&gt;または&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）&lt;/a&gt;を呼び出すだけで、データベース上の書き込み可能なデータベース接続を使用してチェックポイントを開始できます。チェックポイントには、積極性が異なる3つのサブタイプがあります。パッシブ、フル、リスタートです。デフォルトのチェックポイントスタイルはパッシブです。これは、他のデータベース接続に干渉することなく、可能な限り多くの作業を行い、同時にリーダーまたはライターが存在する場合、実行が完了しない可能性があります。&lt;a href=&quot;c3ref/wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint（）&lt;/a&gt;と自動チェックポイントメカニズムによって開始されたすべてのチェックポイントはパッシブです。 FULLおよびRESTARTチェックポイントは、チェックポイントを&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;最後&lt;/a&gt;まで実行しようとしますが、sqlite3_wal_checkpoint_v2（）の呼び出しによってのみ開始できます。FULLおよびRESETチェックポイントの詳細については、&lt;a href=&quot;c3ref/wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2（）の&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b67ba81a9225f9986e5d6153b64db41fca122a2b" translate="yes" xml:space="preserve">
          <source>An application can insert layers or &quot;overlays&quot; in between the SQLite core and the underlying memory allocator. For example, the &lt;a href=&quot;#oomtesting&quot;&gt;out-of-memory test logic&lt;/a&gt; for SQLite uses an overlay that can simulate memory allocation failures.</source>
          <target state="translated">アプリケーションは、SQLiteコアと基になるメモリアロケータの間にレイヤーまたは「オーバーレイ」を挿入できます。たとえば、SQLiteの&lt;a href=&quot;#oomtesting&quot;&gt;メモリ不足テストロジック&lt;/a&gt;は、メモリ割り当ての失敗をシミュレートできるオーバーレイを使用します。</target>
        </trans-unit>
        <trans-unit id="c388b93196430467345107651fd79645679ae7e0" translate="yes" xml:space="preserve">
          <source>An application can register additional collating functions using the &lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collation()&lt;/a&gt; interface.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;c3ref/create_collation&quot;&gt;sqlite3_create_collat​​ion（）&lt;/a&gt;インターフェースを使用して追加の照合関数を登録できます。</target>
        </trans-unit>
        <trans-unit id="83af746376d0381ac294352b72f5044bc5a90aa4" translate="yes" xml:space="preserve">
          <source>An application is allowed to prepare multiple SQL statements in advance and evaluate them as needed. There is no arbitrary limit to the number of outstanding &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;. Some applications call &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; multiple times at start-up to create all of the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; they will ever need. Other applications keep a cache of the most recently used &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; and then reuse &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; out of the cache when available. Another approach is to only reuse &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; when they are inside of a loop.</source>
          <target state="translated">アプリケーションでは、事前に複数のSQLステートメントを準備し、必要に応じてそれらを評価できます。未処理の&lt;a href=&quot;c3ref/stmt&quot;&gt;準備済みステートメントの&lt;/a&gt;数に任意の制限はありません。一部のアプリケーションでは、起動時に&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）を&lt;/a&gt;複数回呼び出して、必要になる&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;をすべて作成します。他のアプリケーションは、最近使用&lt;a href=&quot;c3ref/stmt&quot;&gt;された準備済みステートメントの&lt;/a&gt;キャッシュを保持し、&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;が利用可能な場合はキャッシュから再利用します。別のアプローチは、&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;がループ内にある場合にのみ再利用することです。</target>
        </trans-unit>
        <trans-unit id="c0f92c3ae91ceb152b4ca7b440a380181cc47f0d" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; to create a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; during initialization. Note that &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; can be used to either open existing database files or to create and open new database files. While many applications use only a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;, there is no reason why an application cannot call &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; multiple times in order to open multiple &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; - either to the same database or to different databases. Sometimes a multi-threaded application will create separate &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; for each thread. Note that a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; can access two or more databases using the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; SQL command, so it is not necessary to have a separate database connection for each database file.</source>
          <target state="translated">アプリケーションは通常、初期化中に&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;を使用して単一の&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;を作成します。ことを注意&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;のいずれかのオープン既存のデータベースファイルに使用することができたり、新しいデータベースファイルを作成し、オープンします。多くのアプリケーションは単一の&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;のみを使用しますが、同じデータベースまたは異なるデータベースへの複数の&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;を開くために、アプリケーションが&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）を&lt;/a&gt;複数回呼び出すことができない理由はありません。マルチスレッドアプリケーションでは、スレッドごとに個別の&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;が作成されることがあります。単一の&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続に&lt;/a&gt;注意してください&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; SQLコマンドを使用して2つ以上のデータベースにアクセスできるため、データベースファイルごとに個別のデータベース接続を確立する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ad0ed6ebbb2c20729bbba2c61a375d2fc0e59a68" translate="yes" xml:space="preserve">
          <source>An application-defined function is permitted to call other SQLite interfaces. However, such calls must not close the database connection nor finalize or reset the prepared statement in which the function is running.</source>
          <target state="translated">アプリケーション定義関数は、他のSQLiteインターフェースを呼び出すことができます。しかし、そのような呼び出しは、データベース接続を閉じたり、関数が実行されている準備された文を確定したり、リセットしたりしてはなりません。</target>
        </trans-unit>
        <trans-unit id="368a116479c83bd78621f71906b14ee39f5af37e" translate="yes" xml:space="preserve">
          <source>An arbitrary length BLOB</source>
          <target state="translated">任意の長さのBLOB</target>
        </trans-unit>
        <trans-unit id="f821dc4d7f9c71f0ab35cc4c36d94a5e6e1a02bc" translate="yes" xml:space="preserve">
          <source>An arbitrary length strings</source>
          <target state="translated">任意の長さの文字列</target>
        </trans-unit>
        <trans-unit id="232575a5b7dcf96eebb74b1c36e1cd9952456a1f" translate="yes" xml:space="preserve">
          <source>An argument with SQL type TEXT it is normally converted into a quoted JSON string even if the input text is well-formed JSON. However, if the argument is the direct result from another json1 function, then it is treated as JSON and all of its JSON type information and substructure is preserved. This allows calls to json_object() and &lt;a href=&quot;json1#jarray&quot;&gt;json_array()&lt;/a&gt; to be nested. The &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.</source>
          <target state="translated">SQLタイプがTEXTの引数は、入力テキストが整形式のJSONであっても、通常は引用符で囲まれたJSON文字列に変換されます。ただし、引数が別のjson1関数からの直接の結果である場合、JSONとして扱われ、そのJSONタイプ情報と部分構造はすべて保持されます。これにより、json_object（）および&lt;a href=&quot;json1#jarray&quot;&gt;json_array（）の&lt;/a&gt;呼び出しをネストできます。&lt;a href=&quot;json1#jmini&quot;&gt;JSON（）&lt;/a&gt;関数はまた、JSONとして認識される文字列を強制するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ba3098d8640bbb6ff43023d4a4dc7ae39f23e7f1" translate="yes" xml:space="preserve">
          <source>An argument with SQL type TEXT it is normally converted into a quoted JSON string. However, if the argument is the output from another json1 function, then it is stored as JSON. This allows calls to json_array() and &lt;a href=&quot;json1#jobj&quot;&gt;json_object()&lt;/a&gt; to be nested. The &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.</source>
          <target state="translated">SQLタイプTEXTの引数は、通常、引用符で囲まれたJSON文字列に変換されます。ただし、引数が別のjson1関数からの出力である場合、JSONとして格納されます。これにより、json_array（）および&lt;a href=&quot;json1#jobj&quot;&gt;json_object（）の&lt;/a&gt;呼び出しをネストできます。&lt;a href=&quot;json1#jmini&quot;&gt;JSON（）&lt;/a&gt;関数はまた、JSONとして認識される文字列を強制するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="c4806a509e481529fa2b28682facfc05b551794d" translate="yes" xml:space="preserve">
          <source>An assert() statement is often used to validate pre-conditions on internal functions and methods. Example: &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&lt;/a&gt;. This is deemed better than simply stating the pre-condition in a header comment, since the assert() is actually executed. In a highly tested program like SQLite, the reader knows that the pre-condition is true for all of the hundreds of millions of test cases run against SQLite, since it has been verified by the assert(). In contrast, a text pre-condition statement in a header comment is untested. It might have been true when the code was written, but who is to say that it is still true now?</source>
          <target state="translated">assert（）ステートメントは、内部関数とメソッドの事前条件を検証するためによく使用されます。例：&lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=1048&quot;&gt;https&lt;/a&gt; : //sqlite.org/src/artifact/c1e97e4c6f?ln=1048。これは、assert（）が実際に実行されるため、ヘッダーコメントで前提条件を単に記述するよりも優れていると見なされます。 SQLiteのような高度にテストされたプログラムでは、assert（）によって検証されているため、SQLiteに対して実行される何億ものテストケースのすべてに前提条件が当てはまることが読者にわかります。対照的に、ヘッダーコメントのテキスト前提条件ステートメントはテストされていません。コードが書かれたときにはそれは本当だったかもしれませんが、今でも本当だと誰が言うのでしょうか？</target>
        </trans-unit>
        <trans-unit id="734aa331fcaf7e910bbd2120afae3cf5a122f2fd" translate="yes" xml:space="preserve">
          <source>An assertion fails if P2 is not an integer.</source>
          <target state="translated">P2 が整数でない場合、アサーションは失敗します。</target>
        </trans-unit>
        <trans-unit id="f4d9c6c8e0b518f22e195d912f6aa5b7d1dd73a5" translate="yes" xml:space="preserve">
          <source>An atomic commit is supposed to happen instantaneously. But the processing described above clearly takes a finite amount of time. Suppose the power to the computer were cut part way through the commit operation described above. In order to maintain the illusion that the changes were instantaneous, we have to &quot;rollback&quot; any partial changes and restore the database to the state it was in prior to the beginning of the transaction.</source>
          <target state="translated">アトミックコミットは瞬時に行われるはずです。しかし,上述の処理には明らかに有限の時間がかかります.上で説明したコミット処理の途中で、コンピュータの電源が切れたとします。変更が瞬時に行われたかのように見せるためには、部分的な変更を「ロールバック」して、データベースをトランザクション開始前の状態に復元しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e11c0c4803807d87c78fdeba64f0dde4ba44fbdd" translate="yes" xml:space="preserve">
          <source>An attempt is made to upgrade to an</source>
          <target state="translated">にアップグレードしようとすると</target>
        </trans-unit>
        <trans-unit id="404254ba0f2702898e820a78567011f727d4bb51" translate="yes" xml:space="preserve">
          <source>An attempt to execute COMMIT might also result in an &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; return code if an another thread or process has an open read connection. When COMMIT fails in this way, the transaction remains active and the COMMIT can be retried later after the reader has had a chance to clear.</source>
          <target state="translated">COMMITを実行しようとすると、別のスレッドまたはプロセスに読み取り接続が開かれている場合、&lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt;戻りコードが返される場合もあります。COMMITがこの方法で失敗した場合、トランザクションはアクティブなままであり、リーダーがクリアする機会を得た後でCOMMITを再試行できます。</target>
        </trans-unit>
        <trans-unit id="3979550223b90497821c0aba7295ef97c7b65e0d" translate="yes" xml:space="preserve">
          <source>An attempt to read from an expired &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;.</source>
          <target state="translated">期限切れの&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;から読み取ろうとすると、エラーコード&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORTで&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="79d2f9e7d226af948b651170c9b5bffda6c6a847" translate="yes" xml:space="preserve">
          <source>An attempt to read from an expired &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;.</source>
          <target state="translated">期限切れの&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;から読み取ろうとすると、エラーコード&lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORTで&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="c063fe576f329d251937e5f31d7607dcdb3d3ae3" translate="yes" xml:space="preserve">
          <source>An attempt to write to an expired &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORT&lt;/a&gt;. Writes to the BLOB that occurred before the &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handle&lt;/a&gt; expired are not rolled back by the expiration of the handle, though of course those changes might have been overwritten by the statement that expired the BLOB handle or by other independent statements.</source>
          <target state="translated">期限切れの&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;に書き込もうとすると、エラーコード&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ABORTで&lt;/a&gt;失敗します。&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;が期限切れになる前に発生したBLOBへの書き込みは、ハンドルの期限切れによってロールバックされませんが、BLOBハンドルを期限切れにしたステートメントまたは他の独立したステートメントによってこれらの変更が上書きされた可能性があります。</target>
        </trans-unit>
        <trans-unit id="75bfad8795848d7c6435b7cbd7f5aec468cc1527" translate="yes" xml:space="preserve">
          <source>An attempt to write to an expired &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; fails with an error code of &lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORT&lt;/a&gt;. Writes to the BLOB that occurred before the &lt;a href=&quot;blob&quot;&gt;BLOB handle&lt;/a&gt; expired are not rolled back by the expiration of the handle, though of course those changes might have been overwritten by the statement that expired the BLOB handle or by other independent statements.</source>
          <target state="translated">期限切れの&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;に書き込もうとすると、エラーコード&lt;a href=&quot;../rescode#abort&quot;&gt;SQLITE_ABORTで&lt;/a&gt;失敗します。&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;が期限切れになる前に発生したBLOBへの書き込みは、ハンドルの期限切れによってロールバックされませんが、BLOBハンドルを期限切れにしたステートメントまたは他の独立したステートメントによってこれらの変更が上書きされた可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ad76d49804b0b58fd84332ca5a84e267894c91f" translate="yes" xml:space="preserve">
          <source>An authorizer is used when &lt;a href=&quot;#sqlite3_prepare&quot;&gt;preparing&lt;/a&gt; SQL statements from an untrusted source, to ensure that the SQL statements do not try to access data they are not allowed to see, or that they do not try to execute malicious statements that damage the database. For example, an application may allow a user to enter arbitrary SQL queries for evaluation by a database. But the application does not want the user to be able to make arbitrary changes to the database. An authorizer could then be put in place while the user-entered SQL is being &lt;a href=&quot;#sqlite3_prepare&quot;&gt;prepared&lt;/a&gt; that disallows everything except &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statements.</source>
          <target state="translated">承認者は、信頼できないソースからSQLステートメントを&lt;a href=&quot;#sqlite3_prepare&quot;&gt;準備する&lt;/a&gt;ときに使用され、SQLステートメントが表示を許可されていないデータにアクセスしたり、データベースに損傷を与える悪意のあるステートメントを実行したりしないようにします。たとえば、アプリケーションでは、ユーザーがデータベースによる評価のために任意のSQLクエリを入力できるようにする場合があります。しかし、アプリケーションは、ユーザーがデータベースに任意の変更を加えることができることを望んでいません。次に、ユーザーが入力したSQLの&lt;a href=&quot;#sqlite3_prepare&quot;&gt;準備中に&lt;/a&gt;、&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメント以外のすべてを許可しないオーソライザーを配置できます。</target>
        </trans-unit>
        <trans-unit id="f1e075e878ae45a376fd2939c290edbd89e855bf" translate="yes" xml:space="preserve">
          <source>An authorizer is used when &lt;a href=&quot;prepare&quot;&gt;preparing&lt;/a&gt; SQL statements from an untrusted source, to ensure that the SQL statements do not try to access data they are not allowed to see, or that they do not try to execute malicious statements that damage the database. For example, an application may allow a user to enter arbitrary SQL queries for evaluation by a database. But the application does not want the user to be able to make arbitrary changes to the database. An authorizer could then be put in place while the user-entered SQL is being &lt;a href=&quot;prepare&quot;&gt;prepared&lt;/a&gt; that disallows everything except &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; statements.</source>
          <target state="translated">承認者は、信頼できないソースからSQLステートメントを&lt;a href=&quot;prepare&quot;&gt;準備する&lt;/a&gt;ときに使用され、SQLステートメントが表示を許可されていないデータにアクセスしたり、データベースに損傷を与える悪意のあるステートメントを実行したりしないようにします。たとえば、アプリケーションでは、ユーザーがデータベースによる評価のために任意のSQLクエリを入力できるようにする場合があります。しかし、アプリケーションは、ユーザーがデータベースに任意の変更を加えることができることを望んでいません。次に、ユーザーが入力したSQLの&lt;a href=&quot;prepare&quot;&gt;準備中に&lt;/a&gt;、&lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメント以外のすべてを許可しないオーソライザーを配置できます。</target>
        </trans-unit>
        <trans-unit id="1c5a8d89ce83a2b735008709c97144e7c8447c49" translate="yes" xml:space="preserve">
          <source>An automatic index might also be used for a subquery:</source>
          <target state="translated">自動インデックスは副問い合わせにも使用されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8a27a69d5289ec3895fe5350ae755b86c8341fcb" translate="yes" xml:space="preserve">
          <source>An encoded FTS varint consumes between one and ten bytes of space. The number of bytes required is determined by the sign and magnitude of the integer value encoded. More accurately, the number of bytes used to store the encoded integer depends on the position of the most significant set bit in the 64-bit twos-complement representation of the integer value. Negative values always have the most significant bit set (the sign bit), and so are always stored using the full ten bytes. Positive integer values may be stored using less space.</source>
          <target state="translated">エンコードされた FTS varint は 1 バイトから 10 バイトのスペースを消費します。必要なバイト数は、エンコードされた整数値の符号と大きさによって決まります。より正確には、エンコードされた整数値を格納するために使用されるバイト数は、整数値の 64 ビットの二相補表現における最上位のセットビットの位置に依存します。負の値は常に最上位ビット (符号ビット)がセットされているため、常に 10 バイト分のバイト数を使用して格納されます。正の整数値は、より少ないスペースで格納することができます。</target>
        </trans-unit>
        <trans-unit id="23566adaf44732949e813db81dd7b604df6839d5" translate="yes" xml:space="preserve">
          <source>An ending frame boundary,</source>
          <target state="translated">エンディング枠の境界線。</target>
        </trans-unit>
        <trans-unit id="9b7f16750f7735a9bc64b3d85d026914564b32de" translate="yes" xml:space="preserve">
          <source>An error is now returned when trying to start a transaction if another transaction is already active.</source>
          <target state="translated">別のトランザクションがすでにアクティブな場合にトランザクションを開始しようとすると、エラーが返されるようになりました。</target>
        </trans-unit>
        <trans-unit id="a6742ab14c7e1b0f89ab6e50a3f4d9ccb4760cbd" translate="yes" xml:space="preserve">
          <source>An error logger callback is invoked on SQLITE_MISUSE errors. This is useful in detecting application design issues when return codes are not consistently checked in the application code.</source>
          <target state="translated">エラーロガーのコールバックは、SQLITE_MISUSE エラーで呼び出されます。これは、アプリケーションコードの中でリターンコードが一貫してチェックされていない場合に、 アプリケーションの設計上の問題を検出するのに便利です。</target>
        </trans-unit>
        <trans-unit id="e57ea0e26c7c063563f7c480ba3dfeaecea3cb15" translate="yes" xml:space="preserve">
          <source>An error. &quot;darkstar&quot; is not a recognized authority.</source>
          <target state="translated">エラーです。&quot;darkstar &quot;は認められた権威ではありません。</target>
        </trans-unit>
        <trans-unit id="a9d782005fc023f48e522001d78e4867344c8d47" translate="yes" xml:space="preserve">
          <source>An error. &quot;readonly&quot; is not a valid option for the &quot;mode&quot; parameter.</source>
          <target state="translated">エラーが発生しました。&quot;readonly&quot; は &quot;mode&quot; パラメータの有効なオプションではありません。</target>
        </trans-unit>
        <trans-unit id="c1dc1f3ba0806333fcf879ed6122522e9f542e04" translate="yes" xml:space="preserve">
          <source>An example of an eponymous virtual table is the &lt;a href=&quot;dbstat&quot;&gt;dbstat virtual table&lt;/a&gt;. To use the dbstat virtual table as an eponymous virtual table, simply query against the &quot;dbstat&quot; module name, as if it were an ordinary table. (Note that SQLite must be compiled with the &lt;a href=&quot;compile#enable_dbstat_vtab&quot;&gt;SQLITE_ENABLE_DBSTAT_VTAB&lt;/a&gt; option to include the dbstat virtual table in the build.)</source>
          <target state="translated">&lt;a href=&quot;dbstat&quot;&gt;代名詞の仮想テーブル&lt;/a&gt;の例は、dbstat仮想テーブルです。dbstat仮想テーブルを代名詞の仮想テーブルとして使用するには、通常のテーブルであるかのように、「dbstat」モジュール名に対してクエリを実行します。（ビルドにdbstat仮想テーブルを含めるには、SQLiteを&lt;a href=&quot;compile#enable_dbstat_vtab&quot;&gt;SQLITE_ENABLE_DBSTAT_VTAB&lt;/a&gt;オプションでコンパイルする必要があることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="d551629b2a32e687e6920a81c2f515bee137ebdf" translate="yes" xml:space="preserve">
          <source>An example use of hidden columns can be seen in the &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; virtual table implementation, where every FTS virtual table contains an &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt; that is used to pass information from the virtual table into &lt;a href=&quot;fts3#snippet&quot;&gt;FTS auxiliary functions&lt;/a&gt; and to the &lt;a href=&quot;fts3#full_text_index_queries&quot;&gt;FTS MATCH&lt;/a&gt; operator.</source>
          <target state="translated">非表示列の使用例は、&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;仮想テーブル実装で確認できます。すべてのFTS仮想テーブルには、仮想テーブルから&lt;a href=&quot;fts3#snippet&quot;&gt;FTS補助関数&lt;/a&gt;および&lt;a href=&quot;fts3#full_text_index_queries&quot;&gt;FTS MATCH&lt;/a&gt;演算子に情報を渡すために使用される&lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS非表示列&lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="9e17bf1221a1fb0282388819bb91b8a5c6ed013a" translate="yes" xml:space="preserve">
          <source>An example will help to clarify this concept. Consider the following query:</source>
          <target state="translated">この概念を明確にするには、例が役立ちます。次のクエリを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="0b97feb4054b223de8848c552e7e62e2eeabb327" translate="yes" xml:space="preserve">
          <source>An example: Suppose there are two database connections X and Y. X starts a read transaction using &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt; followed by one or more &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statements. Then Y comes along and runs an &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; statement to modify the database. X can subsequently do a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; against the records that Y modified but X will see the older unmodified entries because Y's changes are all invisible to X while X is holding a read transaction. If X wants to see the changes that Y made, then X must ends its read transaction and start a new one (by running &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; followed by another &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;.)</source>
          <target state="translated">例：2つのデータベース接続XとYがあるとします。Xは、&lt;a href=&quot;lang_transaction&quot;&gt;BEGINに&lt;/a&gt;続いて1つ以上の&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメントを使用して、読み取りトランザクションを開始します。次にYが来て、&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;ステートメントを実行してデータベースを変更します。 Xはその後、Yが変更したレコードに対して&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;を実行できますが、Xが読み取りトランザクションを保持している間、Yの変更はすべてXから見えないため、Xは古い未変更のエントリを参照します。 XがYが行った変更を確認したい場合、Xはその読み取りトランザクションを終了し、新しいトランザクションを開始する必要があります（&lt;a href=&quot;lang_transaction&quot;&gt;COMMITに&lt;/a&gt;続けて別の&lt;a href=&quot;lang_transaction&quot;&gt;BEGINを&lt;/a&gt;実行することにより）。</target>
        </trans-unit>
        <trans-unit id="8b6e6d373bf06dd9c8c05c43eca6f2690b8f93a5" translate="yes" xml:space="preserve">
          <source>An exclusive lock is held on WAL_WRITE_LOCK while adding new frame onto the end of a WAL file.</source>
          <target state="translated">WAL_WRITE_LOCKは、WALファイルの末尾に新しいフレームを追加している間、WAL_WRITE_LOCKに排他的なロックが保持されます。</target>
        </trans-unit>
        <trans-unit id="472410dd7fa81690261e9f1011036ea0cbeb522e" translate="yes" xml:space="preserve">
          <source>An experimental module providing on-demand read-only access to multiple tables spread across multiple databases, via a single virtual table abstraction.</source>
          <target state="translated">複数のデータベースに分散している複数のテーブルに、単一の仮想テーブル抽象化を介して、オンデマンドで読み取り専用のアクセスを提供する実験的なモジュールです。</target>
        </trans-unit>
        <trans-unit id="667c5b4834a03d379059f491edab75c439a88d3e" translate="yes" xml:space="preserve">
          <source>An expression of the form &quot;CAST(</source>
          <target state="translated">CAST(</target>
        </trans-unit>
        <trans-unit id="818ecb03985da596f3eae278c34f7853ab10690e" translate="yes" xml:space="preserve">
          <source>An external content FTS4 table is created by setting the content option to the name of a table (or view, or virtual table) that may be queried by FTS4 to retrieve column values when required. If the nominated table does not exist, then an external content table behaves in the same way as a contentless table. For example:</source>
          <target state="translated">外部コンテンツFTS4テーブルは、必要に応じてカラム値を取得するためにFTS4によって照会される可能性のあるテーブル(またはビュー、または仮想テーブル)の名前にcontentオプションを設定することによって作成されます。指名されたテーブルが存在しない場合、外部コンテンツテーブルは、コンテンツレステーブルと同じように動作します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2af47edb4534251424ba986a5ead5c83306505ff" translate="yes" xml:space="preserve">
          <source>An external content FTS5 table is created by setting the content option to the name of a table, virtual table or view (hereafter the &quot;content table&quot;) within the same database. Whenever column values are required by FTS5, it queries the content table as follows, with the rowid of the row for which values are required bound to the SQL variable:</source>
          <target state="translated">外部コンテンツFTS5テーブルは、contentオプションを同じデータベース内のテーブル、仮想テーブル、またはビュー(以下、「コンテンツテーブル」という)の名前に設定することで作成されます。FTS5は、列の値が要求されるたびに、値が要求される行の行IDをSQL変数にバインドして、以下のようにコンテンツテーブルに問い合わせを行います。</target>
        </trans-unit>
        <trans-unit id="d52b102f266b0f6f1ccf383a15555d761fab3f49" translate="yes" xml:space="preserve">
          <source>An fts4aux virtual table is constructed with one or two arguments. When used with a single argument, that argument is the unqualified name of the FTS table that it will be used to access. To access a table in a different database (for example, to create a TEMP fts4aux table that will access an FTS3 table in the MAIN database) use the two-argument form and give the name of the target database (ex: &quot;main&quot;) in the first argument and the name of the FTS3/4 table as the second argument. (The two-argument form of fts4aux was added for SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_17.html&quot;&gt;version 3.7.17&lt;/a&gt; (2013-05-20) and will throw an error in prior releases.) For example:</source>
          <target state="translated">fts4aux仮想テーブルは、1つまたは2つの引数で構成されます。単一の引数とともに使用される場合、その引数は、アクセスに使用されるFTSテーブルの非修飾名です。別のデータベースのテーブルにアクセスするには（たとえば、MAINデータベースのFTS3テーブルにアクセスするTEMP fts4auxテーブルを作成するには）、2つの引数のフォームを使用して、ターゲットデータベースの名前を指定します（例： &quot;main&quot;）最初の引数にFTS3 / 4テーブルの名前を2番目の引数として。 （fts4auxの2つの引数の形式は、SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_17.html&quot;&gt;バージョン3.7.17&lt;/a&gt;（2013-05-20）に追加され、以前のリリースではエラーをスローします。）例：</target>
        </trans-unit>
        <trans-unit id="8c25046031c36326ccd0fd6dd82951cf50be0673" translate="yes" xml:space="preserve">
          <source>An fts5vocab table of type &quot;col&quot; contains one row for each distinct term/column combination in the associated FTS5 table. Table columns are as follows:</source>
          <target state="translated">col &quot;タイプのfts5vocabテーブルには、関連するFTS5テーブル内の異なるタームとカラムの組み合わせごとに1つの行が含まれる。テーブルのカラムは以下の通りである。</target>
        </trans-unit>
        <trans-unit id="7f04198cf656fcfcd60de51b84883a5a273fb8d3" translate="yes" xml:space="preserve">
          <source>An fts5vocab table of type &quot;instance&quot; contains one row for each term instance stored in the associated FTS index. Assuming the FTS5 table is created with the 'detail' option set to 'full', table columns are as follows:</source>
          <target state="translated">instance」タイプのfts5vocabテーブルには、関連するFTSインデックスに格納されている各タームインスタンスに対して1行が含まれます。FTS5 テーブルが 'detail' オプションを 'full' に設定して作成されたと仮定すると、テーブルの列は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e4f46cd06dd0edb512dbfe5bb420f25b92508728" translate="yes" xml:space="preserve">
          <source>An fts5vocab table of type &quot;row&quot; contains one row for each distinct term in the associated FTS5 table. The table columns are as follows:</source>
          <target state="translated">row &quot;型のfts5vocabテーブルは、関連するFTS5テーブル内の個別の用語ごとに1つの行を含む。テーブルの列は以下の通りである。</target>
        </trans-unit>
        <trans-unit id="0e5d44e56062277710f5511afeab18594a8851fc" translate="yes" xml:space="preserve">
          <source>An implementation of the Guttmann R*Tree spatial index idea.</source>
          <target state="translated">グットマンR*Tree空間インデックスのアイデアの実装。</target>
        </trans-unit>
        <trans-unit id="4bd28b3c3d3e6a39cb2320865c316342a20f3142" translate="yes" xml:space="preserve">
          <source>An implicit transaction (a transaction that is started automatically, not a transaction started by BEGIN) is committed automatically when the last active statement finishes. A statement finishes when its last cursor closes, which is guaranteed to happen when the prepared statement is &lt;a href=&quot;c3ref/reset&quot;&gt;reset&lt;/a&gt; or &lt;a href=&quot;c3ref/finalize&quot;&gt;finalized&lt;/a&gt;. Some statements might &quot;finish&quot; for the purpose of transaction control prior to being reset or finalized, but there is no guarantee of this. The only way to ensure that a statement has &quot;finished&quot; is to invoke &lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset()&lt;/a&gt; or &lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize()&lt;/a&gt; on that statement. An open &lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt; used for incremental BLOB I/O also counts as an unfinished statement. The &lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt; finishes when it is &lt;a href=&quot;c3ref/blob_close&quot;&gt;closed&lt;/a&gt;.</source>
          <target state="translated">暗黙のトランザクション（BEGINによって開始されたトランザクションではなく、自動的に開始されるトランザクション）は、最後のアクティブなステートメントが終了すると自動的にコミットされます。ステートメントは最後のカーソルが閉じたときに終了します。これは、準備されたステートメントが&lt;a href=&quot;c3ref/reset&quot;&gt;リセット&lt;/a&gt;または&lt;a href=&quot;c3ref/finalize&quot;&gt;ファイナライズ&lt;/a&gt;されたときに発生することが保証されています。一部のステートメントは、リセットまたはファイナライズされる前にトランザクション制御の目的で「終了」する場合がありますが、これは保証されていません。ステートメントが「終了」したことを確認する唯一の方法は、そのステートメントで&lt;a href=&quot;c3ref/reset&quot;&gt;sqlite3_reset（）&lt;/a&gt;または&lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize（）&lt;/a&gt;を呼び出すことです。増分BLOB I / Oに使用される開いている&lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt;も、未完了のステートメントとしてカウントされます。&lt;a href=&quot;c3ref/blob&quot;&gt;sqlite3_blob&lt;/a&gt;&lt;a href=&quot;c3ref/blob_close&quot;&gt;閉まる&lt;/a&gt;と終了します。</target>
        </trans-unit>
        <trans-unit id="79074d6687b22dc4e17257f4e6cee62c251811c4" translate="yes" xml:space="preserve">
          <source>An important feature of transactional databases like SQLite is &quot;atomic commit&quot;. Atomic commit means that either all database changes within a single transaction occur or none of them occur. With atomic commit, it is as if many different writes to different sections of the database file occur instantaneously and simultaneously. Real hardware serializes writes to mass storage, and writing a single sector takes a finite amount of time. So it is impossible to truly write many different sectors of a database file simultaneously and/or instantaneously. But the atomic commit logic within SQLite makes it appear as if the changes for a transaction are all written instantaneously and simultaneously.</source>
          <target state="translated">SQLiteのようなトランザクションデータベースの重要な機能は、「アトミックコミット」です。アトミックコミットとは、1つのトランザクション内のすべてのデータベース変更が発生するか、または発生しないことを意味します。アトミックコミットでは、データベースファイルの異なるセクションへの多くの異なる書き込みが瞬時に同時に発生しているかのようになります。実際のハードウェアは大容量ストレージへの書き込みをシリアル化しており、1つのセクタへの書き込みには有限の時間がかかります。したがって、データベースファイルの多くの異なるセクタへの書き込みを同時に、あるいは瞬時に行うことは不可能です。しかし、SQLiteのアトミックコミットロジックは、あるトランザクションの変更がすべて瞬時に同時に書き込まれているかのように見せかけます。</target>
        </trans-unit>
        <trans-unit id="52bb5c1058e3b07cc3eb83a0aae8a367e19c8fb8" translate="yes" xml:space="preserve">
          <source>An imposter table is a table that is attached to the same &lt;a href=&quot;fileformat2#btree&quot;&gt;b-tree&lt;/a&gt; as an index. An imposter table allows the content of an index to be queried or modified as if the index were an ordinary table.</source>
          <target state="translated">詐称者テーブルは、インデックスと同じ&lt;a href=&quot;fileformat2#btree&quot;&gt;bツリーに&lt;/a&gt;アタッチされているテーブルです。偽装テーブルを使用すると、インデックスが通常のテーブルであるかのように、インデックスの内容をクエリまたは変更できます。</target>
        </trans-unit>
        <trans-unit id="548d97f9737c13966b0384ddf7c4f5316897fe64" translate="yes" xml:space="preserve">
          <source>An index b-tree interior page</source>
          <target state="translated">インデックスb-treeのインテリアページ</target>
        </trans-unit>
        <trans-unit id="75b00cd2ffa8d152bd911781465eeda8179c5b9f" translate="yes" xml:space="preserve">
          <source>An index b-tree leaf page</source>
          <target state="translated">インデックスb-treeの葉のページ</target>
        </trans-unit>
        <trans-unit id="a23b6e554c4c927f47667a50d9e483703c1ef47e" translate="yes" xml:space="preserve">
          <source>An index is another table similar to the original &quot;fruitsforsale&quot; table but with the content (the fruit column in this case) stored in front of the rowid and with all rows in content order. &lt;a href=&quot;#fig4&quot;&gt;Figure 4&lt;/a&gt; gives a logical view of the Idx1 index. The &quot;fruit&quot; column is the primary key used to order the elements of the table and the &quot;rowid&quot; is the secondary key used to break the tie when two or more rows have the same &quot;fruit&quot;. In the example, the rowid has to be used as a tie-breaker for the &quot;Orange&quot; rows. Notice that since the rowid is always unique over all elements of the original table, the composite key of &quot;fruit&quot; followed by &quot;rowid&quot; will be unique over all elements of the index.</source>
          <target state="translated">インデックスは、元の &quot;fruitsforsale&quot;テーブルと同様の別のテーブルですが、コンテンツ（この場合はフルーツ列）がROWIDの前に格納され、すべての行がコンテンツ順に配置されています。&lt;a href=&quot;#fig4&quot;&gt;図4&lt;/a&gt;に、Idx1インデックスの論理ビューを示します。 「フルーツ」列は、テーブルの要素を並べ替えるために使用される主キーであり、「ROWID」は、2つ以上の行が同じ「フルーツ」を持っている場合に同点を解除するために使用される二次キーです。この例では、ROWIDを「オレンジ」行のタイブレーカーとして使用する必要があります。 ROWIDは常に元のテーブルのすべての要素で一意であるため、「フルーツ」の後に「ROWID」が続く複合キーは、インデックスのすべての要素で一意になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3002819a06b87f2b28823dffe3c0b248534f6bf1" translate="yes" xml:space="preserve">
          <source>An instance of the snapshot object records the state of a &lt;a href=&quot;../wal&quot;&gt;WAL mode&lt;/a&gt; database for some specific point in history.</source>
          <target state="translated">スナップショットオブジェクトのインスタンスは、履歴の特定のポイントに対する&lt;a href=&quot;../wal&quot;&gt;WALモード&lt;/a&gt;データベースの状態を記録します。</target>
        </trans-unit>
        <trans-unit id="ddc9cd2833d461982fd05cbb236027102f78db05" translate="yes" xml:space="preserve">
          <source>An instance of the snapshot object records the state of a &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; database for some specific point in history.</source>
          <target state="translated">スナップショットオブジェクトのインスタンスは、履歴の特定のポイントに対する&lt;a href=&quot;wal&quot;&gt;WALモード&lt;/a&gt;データベースの状態を記録します。</target>
        </trans-unit>
        <trans-unit id="0ad16796bc17d538460c93b836ae5c8477d8c7e2" translate="yes" xml:space="preserve">
          <source>An instance of the sqlite3_str object contains a dynamically-sized string under construction.</source>
          <target state="translated">sqlite3_strオブジェクトのインスタンスは、構築中の動的サイズの文字列を含みます。</target>
        </trans-unit>
        <trans-unit id="8f02269b16b7995873f0e98891ae8060c34bc231" translate="yes" xml:space="preserve">
          <source>An instance of the sqlite3_vfs object defines the interface between the SQLite core and the underlying operating system. The &quot;vfs&quot; in the name of the object stands for &quot;virtual file system&quot;. See the &lt;a href=&quot;../vfs&quot;&gt;VFS documentation&lt;/a&gt; for further information.</source>
          <target state="translated">sqlite3_vfsオブジェクトのインスタンスは、SQLiteコアと基盤となるオペレーティングシステム間のインターフェイスを定義します。オブジェクト名の「vfs」は「仮想ファイルシステム」を表します。詳細については、&lt;a href=&quot;../vfs&quot;&gt;VFSのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="986d34aa72070b33f262aa39aa661f9a7021ae8a" translate="yes" xml:space="preserve">
          <source>An instance of the sqlite3_vfs object defines the interface between the SQLite core and the underlying operating system. The &quot;vfs&quot; in the name of the object stands for &quot;virtual file system&quot;. See the &lt;a href=&quot;vfs&quot;&gt;VFS documentation&lt;/a&gt; for further information.</source>
          <target state="translated">sqlite3_vfsオブジェクトのインスタンスは、SQLiteコアと基盤となるオペレーティングシステム間のインターフェイスを定義します。オブジェクト名の「vfs」は「仮想ファイルシステム」を表します。詳細については、&lt;a href=&quot;vfs&quot;&gt;VFSのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f45b93bef69dcf39c21d4d46704ba221d046f871" translate="yes" xml:space="preserve">
          <source>An instance of this object acts as a cursor for iterating over the elements of a &lt;a href=&quot;../sessionintro#changeset&quot;&gt;changeset&lt;/a&gt; or &lt;a href=&quot;../sessionintro#changeset&quot;&gt;patchset&lt;/a&gt;.</source>
          <target state="translated">このオブジェクトのインスタンスは、&lt;a href=&quot;../sessionintro#changeset&quot;&gt;チェンジセット&lt;/a&gt;または&lt;a href=&quot;../sessionintro#changeset&quot;&gt;パッチセットの&lt;/a&gt;要素を反復するためのカーソルとして機能します。</target>
        </trans-unit>
        <trans-unit id="bf71b1083943f3e5851ab7a42bcd920407783dbc" translate="yes" xml:space="preserve">
          <source>An instance of this object acts as a cursor for iterating over the elements of a &lt;a href=&quot;sessionintro#changeset&quot;&gt;changeset&lt;/a&gt; or &lt;a href=&quot;sessionintro#changeset&quot;&gt;patchset&lt;/a&gt;.</source>
          <target state="translated">このオブジェクトのインスタンスは、&lt;a href=&quot;sessionintro#changeset&quot;&gt;チェンジセット&lt;/a&gt;または&lt;a href=&quot;sessionintro#changeset&quot;&gt;パッチセットの&lt;/a&gt;要素を反復するためのカーソルとして機能します。</target>
        </trans-unit>
        <trans-unit id="ab7e618ccd27967f90c1e650a28d3404240080d5" translate="yes" xml:space="preserve">
          <source>An instance of this object defines the interface between SQLite and low-level memory allocation routines.</source>
          <target state="translated">このオブジェクトのインスタンスは、SQLite と低レベルのメモリ割り当てルーチンの間のインターフェースを定義します。</target>
        </trans-unit>
        <trans-unit id="a3b65debab7d2bc5f3be01481bf018b30e5f1a63" translate="yes" xml:space="preserve">
          <source>An instance of this object is a &lt;a href=&quot;../sessionintro&quot;&gt;session&lt;/a&gt; that can be used to record changes to a database.</source>
          <target state="translated">このオブジェクトのインスタンスは、データベースへの変更を記録するために使用できる&lt;a href=&quot;../sessionintro&quot;&gt;セッション&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d288e209f1c35236167d79cd8408a6e6645c8dfe" translate="yes" xml:space="preserve">
          <source>An instance of this object is a &lt;a href=&quot;sessionintro&quot;&gt;session&lt;/a&gt; that can be used to record changes to a database.</source>
          <target state="translated">このオブジェクトのインスタンスは、データベースへの変更を記録するために使用できる&lt;a href=&quot;sessionintro&quot;&gt;セッション&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1a8cd868b7a8f02ee212f8081b22f84902c700f2" translate="yes" xml:space="preserve">
          <source>An instance of this object represents a single SQL statement that has been compiled into binary form and is ready to be evaluated.</source>
          <target state="translated">このオブジェクトのインスタンスは、バイナリ形式にコンパイルされ、評価する準備ができている単一のSQL文を表します。</target>
        </trans-unit>
        <trans-unit id="6ac15740a5e0d955ec96459bba2b236546957815" translate="yes" xml:space="preserve">
          <source>An instance of this object represents an open BLOB on which &lt;a href=&quot;#sqlite3_blob_open&quot;&gt;incremental BLOB I/O&lt;/a&gt; can be performed. Objects of this type are created by &lt;a href=&quot;#sqlite3_blob_open&quot;&gt;sqlite3_blob_open()&lt;/a&gt; and destroyed by &lt;a href=&quot;#sqlite3_blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;. The &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt; interfaces can be used to read or write small subsections of the BLOB. The &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt; interface returns the size of the BLOB in bytes.</source>
          <target state="translated">このオブジェクトのインスタンスは、&lt;a href=&quot;#sqlite3_blob_open&quot;&gt;増分BLOB I / O&lt;/a&gt;を実行できる開いているBLOBを表します。このタイプのオブジェクトがによって作成される&lt;a href=&quot;#sqlite3_blob_open&quot;&gt;（sqlite3_blob_open）&lt;/a&gt;とによって破壊&lt;a href=&quot;#sqlite3_blob_close&quot;&gt;）（sqlite3_blob_close&lt;/a&gt;。&lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;と&lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;インターフェースは、BLOBの小さなサブセクションを読み書きするために使用することができます。&lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes（）&lt;/a&gt;インターフェースは、バイト単位でBLOBのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="f3e12c7941ae7ce9acfd3af6cea2f4a94a2e0d5a" translate="yes" xml:space="preserve">
          <source>An instance of this object represents an open BLOB on which &lt;a href=&quot;blob_open&quot;&gt;incremental BLOB I/O&lt;/a&gt; can be performed. Objects of this type are created by &lt;a href=&quot;blob_open&quot;&gt;sqlite3_blob_open()&lt;/a&gt; and destroyed by &lt;a href=&quot;blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;. The &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt; and &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt; interfaces can be used to read or write small subsections of the BLOB. The &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt; interface returns the size of the BLOB in bytes.</source>
          <target state="translated">このオブジェクトのインスタンスは、&lt;a href=&quot;blob_open&quot;&gt;増分BLOB I / O&lt;/a&gt;を実行できる開いているBLOBを表します。このタイプのオブジェクトがによって作成される&lt;a href=&quot;blob_open&quot;&gt;（sqlite3_blob_open）&lt;/a&gt;とによって破壊&lt;a href=&quot;blob_close&quot;&gt;）（sqlite3_blob_close&lt;/a&gt;。&lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;と&lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;インターフェースは、BLOBの小さなサブセクションを読み書きするために使用することができます。&lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes（）&lt;/a&gt;インターフェースは、バイト単位でBLOBのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="d9c5d268a10fe06a59e3c7e963d5ed29fc68438c" translate="yes" xml:space="preserve">
          <source>An instance of this structure defines the low-level routines used to allocate and use mutexes.</source>
          <target state="translated">この構造体のインスタンスは、ミューテックスの割り当てと使用に使用される低レベルのルーチンを定義します。</target>
        </trans-unit>
        <trans-unit id="7b02932da3aaeca2f83c028e321d42447d0835b5" translate="yes" xml:space="preserve">
          <source>An integer indicating the index of the FTS table column to read the text from. Columns are numbered from left to right starting at zero.</source>
          <target state="translated">テキストを読み込む FTS テーブルの列のインデックスを示す整数。カラムは、ゼロから始まる左から右に番号が付けられています。</target>
        </trans-unit>
        <trans-unit id="c23d5e6e7614ceb92ef3b6de48759bd54ba26b48" translate="yes" xml:space="preserve">
          <source>An integer indicating the index of the FTS table column to select the returned text from. Columns are numbered from left to right starting at zero. A negative value indicates that the column should be automatically selected.</source>
          <target state="translated">返されたテキストを選択する FTS テーブルの列のインデックスを示す整数。カラムは、左から順にゼロから始まる番号が付けられています。負の値は、その列が自動的に選択されることを示します。</target>
        </trans-unit>
        <trans-unit id="c886c068ec97375a0540464685cf9e1ef166d731" translate="yes" xml:space="preserve">
          <source>An intensively used low-level library like SQLite needs to be fast. (And SQLite is fast, see &lt;a href=&quot;intern-v-extern-blob&quot;&gt;Internal Versus External BLOBs&lt;/a&gt; and &lt;a href=&quot;fasterthanfs&quot;&gt;35% Faster Than The Filesystem&lt;/a&gt; for example.)</source>
          <target state="translated">SQLiteのように集中的に使用される低レベルのライブラリは高速である必要があります。（SQLiteは高速です。たとえば、&lt;a href=&quot;intern-v-extern-blob&quot;&gt;内部BLOB&lt;/a&gt;と外部BLOBを比較し、&lt;a href=&quot;fasterthanfs&quot;&gt;ファイルシステムより35％高速&lt;/a&gt;です。）</target>
        </trans-unit>
        <trans-unit id="02b10fc85927484bbd1851b4c4f858fb308385eb" translate="yes" xml:space="preserve">
          <source>An iterator is deleted using a call to the &lt;a href=&quot;session/sqlite3changeset_finalize&quot;&gt;sqlite3changeset_finalize()&lt;/a&gt; API. If an error occured while iterating, an SQLite error code is returned (even if the same error code has already been returned by sqlite3changeset_next()). Or, if no error has occurred, SQLITE_OK is returned.</source>
          <target state="translated">イテレータは&lt;a href=&quot;session/sqlite3changeset_finalize&quot;&gt;sqlite3changeset_finalize（）&lt;/a&gt; APIの呼び出しを使用して削除されます。反復中にエラーが発生した場合、SQLiteエラーコードが返されます（同じエラーコードがsqlite3changeset_next（）によって既に返されている場合でも）。または、エラーが発生しなかった場合、SQLITE_OKが返されます。</target>
        </trans-unit>
        <trans-unit id="dd92a7436e987265ed18e3cd262b66e57b47ffd2" translate="yes" xml:space="preserve">
          <source>An ongoing RBU operation (either an update or a vacuum) does not interfere with read access to the database file.</source>
          <target state="translated">進行中のRBU操作(更新またはバキューム)は、データベースファイルへの読み取りアクセスを妨害しません。</target>
        </trans-unit>
        <trans-unit id="98e9fb11f12f8a43c4c89d92d48bc4d12fa12b04" translate="yes" xml:space="preserve">
          <source>An operand of a comparison is considered to have an explicit collating function assignment (rule 1 above) if any subexpression of the operand uses the postfix &lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE operator&lt;/a&gt;. Thus, if a &lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE operator&lt;/a&gt; is used anywhere in a comparision expression, the collating function defined by that operator is used for string comparison regardless of what table columns might be a part of that expression. If two or more &lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE operator&lt;/a&gt; subexpressions appear anywhere in a comparison, the left most explicit collating function is used regardless of how deeply the COLLATE operators are nested in the expression and regardless of how the expression is parenthesized.</source>
          <target state="translated">オペランドの部分式で後&lt;a href=&quot;lang_expr#collateop&quot;&gt;置COLLATE演算子が&lt;/a&gt;使用されている場合、比較のオペランドは、明示的な照合関数の割り当て（上記の規則1）があると見なされます。したがって、&lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE演算子&lt;/a&gt;が比較式の任意の場所で使用されている場合、その演算子で定義されている照合関数は、どのテーブル列がその式の一部であるかに関係なく、文字列比較に使用されます。 2つ以上の&lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE演算子の&lt;/a&gt;部分式が比較のどこかにある場合、式内でCOLLATE演算子がネストされている深さに関係なく、また式が括弧で囲まれている方法に関係なく、左端の明示的な照合関数が使用されます。</target>
        </trans-unit>
        <trans-unit id="1841b8b7007b74c92e11286f08f070e4631c39a7" translate="yes" xml:space="preserve">
          <source>An ordinary common table expression works as if it were a &lt;a href=&quot;lang_createview&quot;&gt;view&lt;/a&gt; that exists for the duration of a single statement. Ordinary common table expressions are useful for factoring out subqueries and making the overall SQL statement easier to read and understand.</source>
          <target state="translated">通常の共通テーブル式は、1つのステートメントの期間中に存在する&lt;a href=&quot;lang_createview&quot;&gt;ビューで&lt;/a&gt;あるかのように機能します。通常の共通テーブル式は、サブクエリを取り除き、SQLステートメント全体を読みやすく理解するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c64f3df3f6dbd2c4ab332d741a98dc5f74fa4c01" translate="yes" xml:space="preserve">
          <source>An ordinary filename can usually be converted into an equivalent URI by the steps shown below. The one exception is that a relative windows pathname with a drive letter cannot be converted directly into a URI; it must be changed into an absolute pathname first.</source>
          <target state="translated">通常のファイル名は通常、以下の手順で等価な URI に変換することができます。1 つの例外は、ドライブ文字を持つ相対的なウィンドウズパス名を直接 URI に変換することができないことです。</target>
        </trans-unit>
        <trans-unit id="76f1c5c7c31ea92a8b28f97d519413325cc7abf4" translate="yes" xml:space="preserve">
          <source>An overlay can be created by using the</source>
          <target state="translated">オーバーレイは</target>
        </trans-unit>
        <trans-unit id="ace2a17ee0ffadfade85b391c6417dbd59dcd570" translate="yes" xml:space="preserve">
          <source>An rtree_i32 stores coordinates as 32-bit signed integers. But it still using floating point computations internally as part of the r-tree algorithm.</source>
          <target state="translated">rtree_i32 は 32 ビット符号付き整数として座標を格納します。しかし、r-treeアルゴリズムの一部として内部的に浮動小数点演算を使用しています。</target>
        </trans-unit>
        <trans-unit id="07cb8663d689220c5b11e75bcc91e43df5ab2f40" translate="yes" xml:space="preserve">
          <source>An sqlite3_changegroup object is used to combine two or more changesets (or patchsets) into a single changeset (or patchset). A single changegroup object may combine changesets or patchsets, but not both. The output is always in the same format as the input.</source>
          <target state="translated">sqlite3_changegroupオブジェクトは、2つ以上のチェンジセット(またはパッチセット)を1つのチェンジセット(またはパッチセット)に結合するために使用されます。単一のchangegroupオブジェクトはチェンジセットやパッチセットを結合することができますが、両方を結合することはできません。出力は常に入力と同じ形式です。</target>
        </trans-unit>
        <trans-unit id="caf5ebeb61b12b4ca95cabbbacfd2a52d1e22645" translate="yes" xml:space="preserve">
          <source>An sqlite3_rebaser object is created by calling sqlite3rebaser_create().</source>
          <target state="translated">sqlite3_rebaserオブジェクトはsqlite3rebaser_create()を呼び出すことで作成されます。</target>
        </trans-unit>
        <trans-unit id="2af9897fcfc348b6ea18f42888797de74b915c33" translate="yes" xml:space="preserve">
          <source>An sqlite3_value object may be either &quot;protected&quot; or &quot;unprotected&quot;. Some interfaces require a protected sqlite3_value. Other interfaces will accept either a protected or an unprotected sqlite3_value. Every interface that accepts sqlite3_value arguments specifies whether or not it requires a protected sqlite3_value. The &lt;a href=&quot;#sqlite3_value_dup&quot;&gt;sqlite3_value_dup()&lt;/a&gt; interface can be used to construct a new protected sqlite3_value from an unprotected sqlite3_value.</source>
          <target state="translated">sqlite3_valueオブジェクトは、「保護されている」または「保護されていない」のいずれかです。一部のインターフェイスでは、保護されたsqlite3_valueが必要です。他のインターフェースは、保護された、または保護されていないsqlite3_valueを受け入れます。sqlite3_value引数を受け入れるすべてのインターフェースは、保護されたsqlite3_valueが必要かどうかを指定します。&lt;a href=&quot;#sqlite3_value_dup&quot;&gt;sqlite3_value_dup（）&lt;/a&gt;インターフェースは、保護されていないsqlite3_valueから新しい保護sqlite3_valueを構築するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7bf10bfa8716c343b3bd7ed7af7b661d4bbe7281" translate="yes" xml:space="preserve">
          <source>An sqlite3_value object may be either &quot;protected&quot; or &quot;unprotected&quot;. Some interfaces require a protected sqlite3_value. Other interfaces will accept either a protected or an unprotected sqlite3_value. Every interface that accepts sqlite3_value arguments specifies whether or not it requires a protected sqlite3_value. The &lt;a href=&quot;value_dup&quot;&gt;sqlite3_value_dup()&lt;/a&gt; interface can be used to construct a new protected sqlite3_value from an unprotected sqlite3_value.</source>
          <target state="translated">sqlite3_valueオブジェクトは、「保護されている」または「保護されていない」のいずれかです。一部のインターフェイスでは、保護されたsqlite3_valueが必要です。他のインターフェースは、保護された、または保護されていないsqlite3_valueを受け入れます。sqlite3_value引数を受け入れるすべてのインターフェースは、保護されたsqlite3_valueが必要かどうかを指定します。&lt;a href=&quot;value_dup&quot;&gt;sqlite3_value_dup（）&lt;/a&gt;インターフェースは、保護されていないsqlite3_valueから新しい保護sqlite3_valueを構築するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9e4dafbd07992ae7ef4dffddcd1b4a5c5cb76207" translate="yes" xml:space="preserve">
          <source>An unconditional jump to address P2. The next instruction executed will be the one at index P2 from the beginning of the program.</source>
          <target state="translated">アドレスP2への無条件ジャンプ。次に実行される命令は、プログラムの先頭からインデックスP2にある命令になります。</target>
        </trans-unit>
        <trans-unit id="0ec2f338946c19a5c8db3e1991942cfffb1ac767" translate="yes" xml:space="preserve">
          <source>An unrelated (and minor) bug from Mark Muranwski fixed. The algorithm for figuring out where to put temporary files for a &quot;memory:&quot; database was not working quite right.</source>
          <target state="translated">Mark Muranwski からの無関係な (そしてマイナーな)バグが修正されました。memory:&quot; データベースの一時ファイルをどこに置くかを考えるアルゴリズムが正しく動作していなかった。</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="24a1091048c98405fcc66da02f4798476c96d7b9" translate="yes" xml:space="preserve">
          <source>And So Forth...</source>
          <target state="translated">And So Forth...</target>
        </trans-unit>
        <trans-unit id="6d62766f3bc1a62b7bc2195312ea71e091c76d3c" translate="yes" xml:space="preserve">
          <source>And if there is an entry in that table where the key column exactly matches the name of parameter (including the initial &quot;?&quot;, &quot;$&quot;, &quot;:&quot;, or &quot;@&quot; character) then the parameter is assigned the value of the value column. If no entry exists, the parameter defaults to NULL.</source>
          <target state="translated">そして、そのテーブル内にキーカラムがパラメータの名前と正確に一致するエントリがある場合 (最初の&quot;?&quot;,&quot;$&quot;,&quot;:&quot;,または &quot;@&quot; 文字を含む)、パラメータには値カラムの値が割り当てられます。エントリが存在しない場合、パラメータのデフォルトは NULL です。</target>
        </trans-unit>
        <trans-unit id="1613947ae46cd2f84a12cf24acc0820e1f9d0a46" translate="yes" xml:space="preserve">
          <source>And it is not really about just finding the descendents of a check-in from time to time. The fact that descendents are readily available in Fossil means that the information pervades the web pages provided by Fossil. One example: Every Fossil check-in information page (&lt;a href=&quot;https://www.sqlite.org/src/info/ec7addc87f97bcff&quot;&gt;example&lt;/a&gt;) shows a small &quot;Context&quot; graph of the immediate predecessor and successors to that check-in. This helps the user maintain better situational awareness, and it provides useful capabilities, such as the ability click forward to the next check-in in sequence. Another example: Fossil easily shows the context around a specific check-in (&lt;a href=&quot;https://www.sqlite.org/src/timeline?c=2018-03-16&amp;amp;n=10&quot;&gt;example&lt;/a&gt;) which again helps to promote situational awareness and a deeper understanding of what is happening in the code.</source>
          <target state="translated">また、チェックインの子孫を時々見つけるだけではありません。 Fossilで子孫がすぐに利用できるという事実は、Fossilが提供するWebページに情報が浸透していることを意味します。 1つの例：すべてのFossilチェックイン情報ページ（&lt;a href=&quot;https://www.sqlite.org/src/info/ec7addc87f97bcff&quot;&gt;例&lt;/a&gt;）には、そのチェックインの直前および後続の小さな「コンテキスト」グラフが表示されます。これにより、ユーザーは状況認識を維持しやすくなり、クリックして次のチェックインに順番に進むなどの便利な機能が提供されます。別の例：Fossilは特定のチェックイン（&lt;a href=&quot;https://www.sqlite.org/src/timeline?c=2018-03-16&amp;amp;n=10&quot;&gt;例&lt;/a&gt;）の前後のコンテキストを簡単に表示します。これは、状況認識を促進し、コードで何が起こっているかをより深く理解するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c2283cc542d600a5581e49e759263651d3636f77" translate="yes" xml:space="preserve">
          <source>And let the query be:</source>
          <target state="translated">そして、クエリを</target>
        </trans-unit>
        <trans-unit id="9f762e3b5086b03457eac0a8ca5ae39d999e5440" translate="yes" xml:space="preserve">
          <source>And many, many bug fixes...</source>
          <target state="translated">そして、たくさんの、たくさんのバグ修正...。</target>
        </trans-unit>
        <trans-unit id="f247637664b32ff61f9705cffde6b438321ac676" translate="yes" xml:space="preserve">
          <source>And populated as if the target table were an ordinary SQLite table with no explicit PRIMARY KEY columns.</source>
          <target state="translated">そして、ターゲットテーブルが明示的なPRIMARY KEYカラムを持たない通常のSQLiteテーブルであるかのように入力されます。</target>
        </trans-unit>
        <trans-unit id="f9380c403c5923e40740011085ed6c0ba26458c2" translate="yes" xml:space="preserve">
          <source>And so forth. Basically any sequence of names optionally followed by one or two signed integers in parentheses will do.</source>
          <target state="translated">といった具合です。基本的には、オプションで1つまたは2つの符号付き整数を括弧で囲んだ名前のシーケンスであれば、どのようなものでも構いません。</target>
        </trans-unit>
        <trans-unit id="b0959960067ae4919fa2e1ea2e691b5f145968c7" translate="yes" xml:space="preserve">
          <source>And so forth. For ZIP archives and SQLite Archives, simply change the &quot;/tarball/&quot; element into either &quot;/zip/&quot; or &quot;/sqlar/&quot;, and maybe also change the name of the download file to have a &quot;.zip&quot; or &quot;.sqlar&quot; suffix.</source>
          <target state="translated">といった具合です。ZIPアーカイブやSQLiteアーカイブの場合は、&quot;/tarball/&quot;要素を&quot;/zip/&quot;か&quot;/sqlar/&quot;に変更し、ダウンロードファイルの名前の接尾辞を&quot;.zip &quot;か&quot;.sqlar &quot;に変更するだけです。</target>
        </trans-unit>
        <trans-unit id="ba8077732ad2502900dddf709f29aa73b1a0f6b4" translate="yes" xml:space="preserve">
          <source>And so forth. There are 8 nodes in the TPC-H Q8 query, so this process repeats a total of 8 times. In the general case of a K-way join, the storage requirement is O(N) and the computation time is O(K*N), which is significantly faster than the O(2&lt;small&gt;&lt;sup&gt;K&lt;/sup&gt;&lt;/small&gt;) exact solution.</source>
          <target state="translated">などなど。TPC-H Q8クエリには8つのノードがあるため、このプロセスは合計8回繰り返されます。K方向結合の一般的なケースでは、ストレージ要件はO（N）で、計算時間はO（K * N）です。これは、O（2 &lt;small&gt;&lt;sup&gt;K&lt;/sup&gt;&lt;/small&gt;）の厳密解よりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="060f19a1ad677f74cc92295a75b3f1b018b239ae" translate="yes" xml:space="preserve">
          <source>And so forth....</source>
          <target state="translated">などなど........................。</target>
        </trans-unit>
        <trans-unit id="5207dcf07042e825e2caf9ab6e9995854377e2d5" translate="yes" xml:space="preserve">
          <source>And the generated code looks like this:</source>
          <target state="translated">そして生成されたコードは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2e512a9542a2e3dfd52435fac1d439e588ebcee9" translate="yes" xml:space="preserve">
          <source>And then you run the query:</source>
          <target state="translated">そして、クエリを実行します。</target>
        </trans-unit>
        <trans-unit id="9ffeb8471359e0755ff7942bbfbee2106c5c7ff7" translate="yes" xml:space="preserve">
          <source>And, many more minor bug fixes and performance enhancements....</source>
          <target state="translated">そして、その他にも細かなバグ修正やパフォーマンスの向上など......。</target>
        </trans-unit>
        <trans-unit id="a7e85233665c7566a60532bc230bb5ff92b64c2f" translate="yes" xml:space="preserve">
          <source>Anomaly tests are tests designed to verify the correct behavior of SQLite when something goes wrong. It is (relatively) easy to build an SQL database engine that behaves correctly on well-formed inputs on a fully functional computer. It is more difficult to build a system that responds sanely to invalid inputs and continues to function following system malfunctions. The anomaly tests are designed to verify the latter behavior.</source>
          <target state="translated">アノマリーテストは、何か問題が発生したときにSQLiteの正しい動作を検証するために設計されたテストです。完全に機能しているコンピュータ上で、適切な形式の入力に対して正しく動作する SQL データベースエンジンを構築することは(比較的)簡単です。しかし、無効な入力に対して正しく応答し、システムの誤動作の後も機能し続けるシステムを構築することは、より困難です。異常テストは後者の動作を検証するために設計されています。</target>
        </trans-unit>
        <trans-unit id="6f7ee88b419e1339ccb20dd6c8b4d7e9833eca0b" translate="yes" xml:space="preserve">
          <source>Another (safer) approach to creating an imposter table is to add an entry for the imposter table to SQLite's internal symbol table without updating the &quot;sqlite_master&quot; table on disk. That way, the imposter table exists in only a single database connection and is automatically removed whenever the schema is reloaded.</source>
          <target state="translated">インポスターテーブルを作成するもう一つの(より安全な)アプローチは、ディスク上の &quot;sqlite_master &quot;テーブルを更新せずに、インポスターテーブルのエントリをSQLiteの内部シンボルテーブルに追加することです。この方法では、インポスターテーブルは単一のデータベース接続にのみ存在し、スキーマがリロードされるたびに自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="213aaebee52481a980f7e74b2089b3f6c24d4183" translate="yes" xml:space="preserve">
          <source>Another (safer) approach to creating an imposter table is to add an entry for the imposter table to SQLite's internal symbol table without updating the &quot;sqlite_schema&quot; table on disk. That way, the imposter table exists in only a single database connection and is automatically removed whenever the schema is reloaded.</source>
          <target state="translated">もう一つの(より安全な)インポスターテーブルを作成する方法は、ディスク上の &quot;sqlite_schema &quot;テーブルを更新せずに、インポスターテーブルのエントリをSQLiteの内部シンボルテーブルに追加することです。この方法では、インポスターテーブルは単一のデータベース接続にのみ存在し、スキーマがリロードされるたびに自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="0a256db65f829282a102ced1041e5c60bd3b39bb" translate="yes" xml:space="preserve">
          <source>Another approach is to initially disable the lookaside memory allocator:</source>
          <target state="translated">別のアプローチは、最初にルックサイドメモリアロケータを無効にすることです。</target>
        </trans-unit>
        <trans-unit id="1f9265574f7b534649a1277b85f4934a02129bee" translate="yes" xml:space="preserve">
          <source>Another example is a virtual table that implements a full-text index. The xCreate method must create and initialize data structures to hold the dictionary and posting lists for that index. The xConnect method, on the other hand, only has to locate and use an existing dictionary and posting lists that were created by a prior xCreate call.</source>
          <target state="translated">別の例として、フルテキストインデックスを実装した仮想テーブルがあります。xCreate メソッドは、そのインデックス用の辞書と投稿リストを保持するデータ構造を作成して初期化する必要があります。一方、xConnect メソッドは、前の xCreate 呼び出しによって作成された既存のディクショナリと投稿リストを検索して使用する必要があるだけです。</target>
        </trans-unit>
        <trans-unit id="303e110b30c7b4642bb575628bce75a8b23bc25d" translate="yes" xml:space="preserve">
          <source>Another example of corruption caused by using a closed file descriptor was &lt;a href=&quot;https://code.facebook.com/posts/313033472212144/debugging-file-corruption-on-ios/&quot;&gt;reported by facebook engineers&lt;/a&gt; in a blog post on 2014-08-12.</source>
          <target state="translated">閉じたファイル記述子を使用したことによる破損の別の例は、2014-08-12のブログ投稿で&lt;a href=&quot;https://code.facebook.com/posts/313033472212144/debugging-file-corruption-on-ios/&quot;&gt;Facebookのエンジニアによって報告され&lt;/a&gt;ました。</target>
        </trans-unit>
        <trans-unit id="505afcae9498bd12848d3ae36d382e63fe35606f" translate="yes" xml:space="preserve">
          <source>Another example of this error was reported against &lt;a href=&quot;https://fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; on 2019-07-11. A file descriptor would be opened for debugging output, but then closed and reopened by SQLite. But the debugging logic continued to write into the original file descriptor. See the &lt;a href=&quot;https://fossil-scm.org/forum/forumpost/c51b9a1169&quot;&gt;forum discussion&lt;/a&gt; for the bug report and a link to the fix.</source>
          <target state="translated">このエラーの別の例は、2019-07-11に&lt;a href=&quot;https://fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt;に対して報告されました。ファイル記述子は、デバッグ出力のために開かれますが、SQLiteによって閉じられ、再度開かれます。ただし、デバッグロジックは引き続き元のファイル記述子に書き込みます。バグレポートと修正へのリンクについては、&lt;a href=&quot;https://fossil-scm.org/forum/forumpost/c51b9a1169&quot;&gt;フォーラムのディスカッション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8183751698c287cb27407f9ba084d293db7c55bd" translate="yes" xml:space="preserve">
          <source>Another example: X starts a read transaction using &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt; and &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;, then Y makes a changes to the database using &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;. Then X tries to make a change to the database using &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;. The attempt by X to escalate its transaction from a read transaction to a write transaction fails with an &lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt; error because the snapshot of the database being viewed by X is no longer the latest version of the database. If X were allowed to write, it would fork the history of the database file, which is something SQLite does not support. In order for X to write to the database, it must first release its snapshot (using &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt; for example) then start a new transaction with a subsequent &lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;.</source>
          <target state="translated">別の例：Xは&lt;a href=&quot;lang_transaction&quot;&gt;BEGIN&lt;/a&gt;および&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;を使用して読み取りトランザクションを開始し、次にYは&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;を使用してデータベースに変更を加えます。次に、Xは&lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;を使用してデータベースに変更を加えようとします。Xが表示しているデータベースのスナップショットがデータベースの最新バージョンではなくなったため、Xがトランザクションを読み取りトランザクションから書き込みトランザクションにエスカレーションしようとすると、&lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt;エラーで失敗します。 Xが書き込みを許可された場合、SQLiteがサポートしていないデータベースファイルの履歴をフォークします。 Xがデータベースに書き込むためには、まずスナップショットを（たとえば&lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt;を使用して）解放し、次に新しいトランザクションを開始して、&lt;a href=&quot;lang_transaction&quot;&gt;はじめる&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a1c30e5a209f39b6a21d890471cf09df8606ebc" translate="yes" xml:space="preserve">
          <source>Another flush must occur to make sure that all the database changes are written into nonvolatile storage. This is a critical step to ensure that the database will survive a power loss without damage. However, because of the inherent slowness of writing to disk or flash memory, this step together with the rollback journal file flush in section 3.7 above takes up most of the time required to complete a transaction commit in SQLite.</source>
          <target state="translated">データベースのすべての変更が不揮発性ストレージに書き込まれることを確認するために、別のフラッシュを実行する必要があります。これは、データベースが損傷を受けずに停電に耐えられるようにするための重要なステップです。しかし、ディスクやフラッシュメモリへの書き込みには固有の遅さがあるため、このステップは上記の3.7節で説明したロールバックジャーナルファイルのフラッシュと合わせて、SQLiteでのトランザクションコミットを完了させるのに必要な時間の大半を占めています。</target>
        </trans-unit>
        <trans-unit id="6c301063883293bdf468d0623b6a6911c6d2293c" translate="yes" xml:space="preserve">
          <source>Another limitation of the histogram data is that it only applies to the left-most column on an index. Consider this scenario:</source>
          <target state="translated">ヒストグラムデータのもう一つの限界は、インデックスの左端の列にしか適用されないことです。このシナリオを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="f21c319ab2ff434679be56b445eba4fa1aa43f87" translate="yes" xml:space="preserve">
          <source>Another macro used in conjunction with test coverage measurement is the &lt;code&gt;testcase()&lt;/code&gt; macro. The argument is a condition for which we want test cases that evaluate to both true and false. In non-coverage builds (that is to say, in release builds) the &lt;code&gt;testcase()&lt;/code&gt; macro is a no-op:</source>
          <target state="translated">テストカバレッジ測定と組み合わせて使用​​される別のマクロは、 &lt;code&gt;testcase()&lt;/code&gt; マクロです。引数は、trueとfalseの両方に評価されるテストケースが必要な条件です。カバレッジ以外のビルド（つまり、リリースビルド）では、 &lt;code&gt;testcase()&lt;/code&gt; マクロは何もしません。</target>
        </trans-unit>
        <trans-unit id="c493a994000d99e73cbc3f60d51dfc6589078021" translate="yes" xml:space="preserve">
          <source>Another manifestation of this problem is &lt;a href=&quot;shortnames#db83corrupt&quot;&gt;database corruption caused by inconsistent use of 8+3 filenames&lt;/a&gt;.</source>
          <target state="translated">この問題のもう1つの兆候は&lt;a href=&quot;shortnames#db83corrupt&quot;&gt;、8 + 3のファイル名の一貫性のない使用によって引き起こされるデータベースの破損&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="05b9d783d5cb2f59bb8b6ca5914b9575e677009e" translate="yes" xml:space="preserve">
          <source>Another optimization introduced in SQLite version 3.5.0 makes use of &quot;safe append&quot; behavior of the underlying disk. Recall that SQLite assumes that when data is appended to a file (specifically to the rollback journal) that the size of the file is increased first and that the content is written second. So if power is lost after the file size is increased but before the content is written, the file is left containing invalid &quot;garbage&quot; data. The xDeviceCharacteristics method of the VFS might, however, indicate that the filesystem implements &quot;safe append&quot; semantics. This means that the content is written before the file size is increased so that it is impossible for garbage to be introduced into the rollback journal by a power loss or system crash.</source>
          <target state="translated">SQLite バージョン 3.5.0 で導入されたもう一つの最適化では、基盤となるディスクの「安全な追加」動作を利用しています。SQLiteでは、データをファイル(特にロールバック・ジャーナル)に追加する際に、ファイルのサイズが最初に大きくなり、内容が次に書き込まれることを前提としています。そのため、ファイルのサイズが大きくなった後で内容が書き込まれる前に電源が切れてしまうと、ファイルには無効な「ゴミ」データが残ってしまいます。しかし、VFS の xDeviceCharacteristics メソッドは、ファイルシステムが「安全な追加」セマンティクスを実装していることを示しているかもしれません。これは、電源喪失やシステムクラッシュによってロールバックジャーナルにガベージが持ち込まれないように、ファイルサイズが大きくなる前に内容が書き込まれることを意味しています。</target>
        </trans-unit>
        <trans-unit id="7dad2e6d1e9648b82626f473ea27ecce5bb27928" translate="yes" xml:space="preserve">
          <source>Another option is to run &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=OFF&lt;/a&gt;. This command will cause SQLite to not wait on data to reach the disk surface, which will make write operations appear to be much faster. But if you lose power in the middle of a transaction, your database file might go corrupt.</source>
          <target state="translated">別のオプションは、&lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA Synchronization = OFF&lt;/a&gt;を実行することです。このコマンドは、SQLiteがデータがディスク表面に到達するのを待たないようにし、書き込み操作がはるかに高速に見えるようにします。ただし、トランザクションの途中で電源が切れると、データベースファイルが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0728346ee0767219b30d3313656a41918770666a" translate="yes" xml:space="preserve">
          <source>Another useful output mode is &quot;insert&quot;. In insert mode, the output is formatted to look like SQL INSERT statements. Use insert mode to generate text that can later be used to input data into a different database.</source>
          <target state="translated">もう一つの便利な出力モードは「insert」です。挿入モードでは、出力は SQL INSERT 文のようにフォーマットされます。挿入モードを使用して、後で別のデータベースにデータを入力するために使用できるテキストを生成します。</target>
        </trans-unit>
        <trans-unit id="603f11343da9306fc8345afa2052a80114bf6240" translate="yes" xml:space="preserve">
          <source>Another view of RELEASE is that it merges a named transaction into its parent transaction, so that the named transaction and its parent become the same transaction. After RELEASE, the named transaction and its parent will commit or rollback together, whatever their fate may be.</source>
          <target state="translated">RELEASE の別の見方は、指定されたトランザクションをその親トランザクションにマージし、指定されたトランザクショ ンとその親が同じトランザクションになるようにすることである。RELEASE の後、指定されたトランザクションとその親は、その運命がどうであれ、一緒にコミットするかロールバックする。</target>
        </trans-unit>
        <trans-unit id="e8c0bf8ab4584514edb8368d18ba85e753fa2a2d" translate="yes" xml:space="preserve">
          <source>Another way to get the row change counts is to use the &lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes()&lt;/a&gt; or &lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes()&lt;/a&gt; interfaces. There is a subtle different, though. When an INSERT, UPDATE, or DELETE is run against a view using an &lt;a href=&quot;lang_createtrigger#instead_of_trigger&quot;&gt;INSTEAD OF trigger&lt;/a&gt;, the count_changes pragma reports the number of rows in the view that fired the trigger, whereas &lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes()&lt;/a&gt; and &lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes()&lt;/a&gt; do not.</source>
          <target state="translated">行変更カウントを取得する別の方法は、&lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes（）&lt;/a&gt;または&lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes（）&lt;/a&gt;インターフェースを使用することです。ただし、微妙な違いがあります。 INSERT、UPDATE、またはDELETEが&lt;a href=&quot;lang_createtrigger#instead_of_trigger&quot;&gt;INSTEAD OFトリガー&lt;/a&gt;を使用してビューに対して実行されると、count_changesプラグマはトリガーを起動したビューの行数を報告しますが、&lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes（）&lt;/a&gt;および&lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes（）&lt;/a&gt;は報告しません。</target>
        </trans-unit>
        <trans-unit id="2d30986ae4eff5648d38ebb9d01b585109e2411f" translate="yes" xml:space="preserve">
          <source>Another way to think about the difference between rollback and write-ahead log is that in the rollback-journal approach, there are two primitive operations, reading and writing, whereas with a write-ahead log there are now three primitive operations: reading, writing, and checkpointing.</source>
          <target state="translated">もう一つの考え方としては、ロールバックとライトアヘッドログの違いは、ロールバックジャーナルのアプローチでは、読み込みと書き込みの2つの原始的な操作があるのに対し、ライトアヘッドログでは、読み込み、書き込み、チェックポイントの3つの原始的な操作があるということです。</target>
        </trans-unit>
        <trans-unit id="76c08af7521af2a346bb889060bcedbdd23dc992" translate="yes" xml:space="preserve">
          <source>Anticipated Future Enhancements</source>
          <target state="translated">将来的な機能強化の予定</target>
        </trans-unit>
        <trans-unit id="03cbea0705f9805750be00c459dd237de0396772" translate="yes" xml:space="preserve">
          <source>Any UTF-8 character or ISO8859 character can be used as part of an identifier.</source>
          <target state="translated">任意のUTF-8文字またはISO8859文字を識別子の一部として使用することができます。</target>
        </trans-unit>
        <trans-unit id="17ff5b973797aa52493296af8db3d0915fb38ed0" translate="yes" xml:space="preserve">
          <source>Any application can run an &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; query to get output similar to the above. However, indentation to show the loop structure is not generated by the SQLite core. The &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; contains extra logic for indenting loops. Also, the &quot;comment&quot; column in the &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; output is only provided if SQLite is compiled with the &lt;a href=&quot;compile#enable_explain_comments&quot;&gt;-DSQLITE_ENABLE_EXPLAIN_COMMENTS&lt;/a&gt; options.</source>
          <target state="translated">どのアプリケーションでも、&lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;クエリを実行して上記と同様の出力を取得できます。ただし、ループ構造を示すインデントはSQLiteコアによって生成されません。&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルは&lt;/a&gt;ループをインデントのための余分なロジックが含まれています。また、&lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt;出力の「コメント」列は、SQLiteが&lt;a href=&quot;compile#enable_explain_comments&quot;&gt;-DSQLITE_ENABLE_EXPLAIN_COMMENTS&lt;/a&gt;オプションを使用してコンパイルされている場合にのみ提供されます。</target>
        </trans-unit>
        <trans-unit id="5a8e347554cfc99745cad972098b020b8602be14" translate="yes" xml:space="preserve">
          <source>Any application state that can be recorded in a pile-of-files can also be recorded in an SQLite database with a simple key/value schema like this:</source>
          <target state="translated">pile-of-filesに記録できるアプリケーションの状態はすべて、このようなシンプルなキー/値スキーマでSQLiteデータベースに記録することもできます。</target>
        </trans-unit>
        <trans-unit id="c1ed6ff66cc7fc9ffd4cafbde2a3c28f229641fd" translate="yes" xml:space="preserve">
          <source>Any arguments following &quot;unicode61&quot; in the token specification are treated as a list of alternating option names and values. Unicode61 supports the following options:</source>
          <target state="translated">トークン仕様の中で 「unicode61」 に続く引数はすべて、 オプシ ョ ン名 と 値を交互に並べたリスト と し て扱われます。Unicode61は以下のオプションをサポートしています。</target>
        </trans-unit>
        <trans-unit id="81df847e2da7c111d58995774268025f599b0ab5" translate="yes" xml:space="preserve">
          <source>Any column in an SQLite version 3 database, except an &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt; column, may be used to store a value of any storage class.</source>
          <target state="translated">&lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt;列を除くSQLiteバージョン3データベースの列は、任意のストレージクラスの値を格納するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d12d25e97784fac279be1123d4fbe17792ad0403" translate="yes" xml:space="preserve">
          <source>Any custom collation sequences used by indexes within the database being vacuumed are registered with both of the database handles returned by the sqlite3rbu_db() function.</source>
          <target state="translated">バキュームされるデータベース内のインデックスで使用されるカスタム照合シーケンスは、sqlite3rbu_db()関数によって返される両方のデータベースハンドルに登録されます。</target>
        </trans-unit>
        <trans-unit id="151750db2f16a0f1a6b9b810158ada7a043bfbe4" translate="yes" xml:space="preserve">
          <source>Any database clients wishing to write to the database file while a backup is being created must wait until the shared lock is relinquished.</source>
          <target state="translated">バックアップが作成されている間にデータベースファイルへの書き込みを希望するデータベースクライアントは、共有ロックが放棄されるまで待たなければなりません。</target>
        </trans-unit>
        <trans-unit id="3870d6d9202c275acd1d8b0e06d905fc8afb745c" translate="yes" xml:space="preserve">
          <source>Any database name qualifier that occurs prior to the name of the object being created is removed.</source>
          <target state="translated">作成されるオブジェクトの名前の前にあるデータベース名の修飾子はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="4255994cd14e9b872cd99b88c74cbf406ff9482f" translate="yes" xml:space="preserve">
          <source>Any index that includes the WHERE clause at the end is considered to be a partial index. Indexes that omit the WHERE clause (or indexes that are created by UNIQUE or PRIMARY KEY constraints inside of CREATE TABLE statements) are ordinary full indexes.</source>
          <target state="translated">WHERE句を最後に含むインデックスは部分インデックスとみなされます。WHERE句を省略したインデックス(またはCREATE TABLE文の中のUNIQUEまたはPRIMARY KEY制約によって作成されたインデックス)は、通常のフルインデックスです。</target>
        </trans-unit>
        <trans-unit id="b43d049b602d1fd2bf9a7b5bea3350eedf1f0673" translate="yes" xml:space="preserve">
          <source>Any number of calls to add() and output() may be made between the calls to new() and delete(), and in any order.</source>
          <target state="translated">add()と output()の呼び出しは、new()と delete()の呼び出しの間に何度でも、任意の順序で行うことができます。</target>
        </trans-unit>
        <trans-unit id="bdc7645ee06bfe979513e08246b74910b770d144" translate="yes" xml:space="preserve">
          <source>Any of the row values in the previous example could be replace by a subquery that returns three columns and the same answer would result. For example:</source>
          <target state="translated">前の例の行の値は、3つの列を返す副問い合わせに置き換えることができ、同じ答えが得られます。例えば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="9ffe3efbd83a6aa86da6ab4b6abaf0209d6a58e2" translate="yes" xml:space="preserve">
          <source>Any one of the above test cases would provide 100% statement coverage but all three are required for 100% branch coverage. Generally speaking, 100% branch coverage implies 100% statement coverage, but the converse is not true. To reemphasize, the &lt;a href=&quot;th3&quot;&gt;TH3&lt;/a&gt; test harness for SQLite provides the stronger form of test coverage - 100% branch test coverage.</source>
          <target state="translated">上記のテストケースはいずれも100％のステートメントカバレッジを提供しますが、3つすべてが100％のブランチカバレッジに必要です。一般的に言って、100％ブランチカバレッジは100％ステートメントカバレッジを意味しますが、その逆は当てはまりません。再度強調すると、SQLiteの&lt;a href=&quot;th3&quot;&gt;TH3&lt;/a&gt;テストハーネスは、より強力な形式のテストカバレッジ（100％ブランチテストカバレッジ）を提供します。</target>
        </trans-unit>
        <trans-unit id="82138b97f6d9555464cfec51a14a23b82edbc037" translate="yes" xml:space="preserve">
          <source>Any operators applied to column names, including the no-op unary &quot;+&quot; operator, convert the column name into an expression which always has no affinity. Hence even if X and Y.Z are column names, the expressions +X and +Y.Z are not column names and have no affinity.</source>
          <target state="translated">ノーオペの単項演算子 &quot;+&quot;を含む、列名に適用される演算子は、列名を常に親和性を持たない式に変換します。したがって、XとY.Zが列名であっても、+Xと+Y.Zという式は列名ではなく、親和性を持ちません。</target>
        </trans-unit>
        <trans-unit id="7fd223421c2a13bbb89b12c2862d7c77ef4b363f" translate="yes" xml:space="preserve">
          <source>Any other value for the b-tree page type is an error.</source>
          <target state="translated">b-treeページタイプにそれ以外の値を指定した場合はエラーとなります。</target>
        </trans-unit>
        <trans-unit id="784db6f9216a4d895c7e958df2f8f40ae24919c7" translate="yes" xml:space="preserve">
          <source>Any scalar expression may be used in the LIMIT clause, so long as it evaluates to an integer or a value that can be losslessly converted to an integer. If the expression evaluates to a NULL value or any other value that cannot be losslessly converted to an integer, an error is returned. If the LIMIT expression evaluates to a negative value, then there is no upper bound on the number of rows returned. Otherwise, the SELECT returns the first N rows of its result set only, where N is the value that the LIMIT expression evaluates to. Or, if the SELECT statement would return less than N rows without a LIMIT clause, then the entire result set is returned.</source>
          <target state="translated">LIMIT句では、整数または可逆的に整数に変換できる値として評価される限り、任意のスカラ式を使用することができます。式がNULL値または可逆的に整数に変換できないその他の値で評価された場合、エラーが返されます。LIMIT式が負の値として評価された場合、返される行数に上限はありません。そうでない場合、SELECTは結果セットの最初のN行のみを返します。あるいは、SELECT文がLIMIT句なしでN行よりも少ない行を返す場合、結果セット全体が返されます。</target>
        </trans-unit>
        <trans-unit id="680384b496ab63e99e152271be6ec34547a5e90a" translate="yes" xml:space="preserve">
          <source>Any time there is an error either compiling an SQL statement (using &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or its siblings) or running an SQL statement (using &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;) that error is logged.</source>
          <target state="translated">エラーがある場合は&lt;a href=&quot;c3ref/prepare&quot;&gt;常に&lt;/a&gt;、SQLステートメントのコンパイル（sqlite3_prepare_v2（）またはその兄弟を使用）またはSQLステートメントの実行（&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;を使用）のいずれかが行われ、そのエラーがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="b0e18824fe4a70b0f37b9e0cb34aa95b757ca28e" translate="yes" xml:space="preserve">
          <source>Any valid query will work against an R*Tree index. But the R*Tree implementation is designed to make two kinds of queries especially efficient. First, queries against the primary key are efficient:</source>
          <target state="translated">どのような有効なクエリもR*Treeインデックスに対して動作します。しかし、R*Treeの実装は、2種類のクエリが特に効率的になるように設計されています。まず、主キーに対するクエリが効率的です。</target>
        </trans-unit>
        <trans-unit id="dafef79386ae39cfa702a14aae7666f057897932" translate="yes" xml:space="preserve">
          <source>Any value returned by the openclose function is ignored. If an invocation made before opening a database returns an error, then the database file is not opened and the error returned to the user. This is the only scenario in which swarmvtab will issue an &quot;open&quot; invocation without also eventually issuing a corresponding &quot;close&quot; call. If there are still databases open, &quot;close&quot; calls may be issued from within the eventual sqlite3_close() call on the applications database that deletes the temp schema in which the swarmvtab table resides.</source>
          <target state="translated">openclose関数が返す値はすべて無視されます。データベースを開く前に行われた呼び出しがエラーを返した場合、データベースファイルは開かれず、エラーはユーザに返されます。これは、swarmvtabが最終的に対応する &quot;close &quot;呼び出しを発行せずに &quot;open &quot;呼び出しを発行する唯一のシナリオです。まだデータベースが開いている場合は、アプリケーション・データベース上の最終的なsqlite3_close()呼び出しの中から &quot;close &quot;呼び出しが発行され、swarmvtabテーブルが存在する一時スキーマが削除されます。</target>
        </trans-unit>
        <trans-unit id="cdf9bbefc76982e17471539cdea1217f5e1e0119" translate="yes" xml:space="preserve">
          <source>Anywhere</source>
          <target state="translated">Anywhere</target>
        </trans-unit>
        <trans-unit id="e511dd65bb11704e83c08777789bf5ec195f3d28" translate="yes" xml:space="preserve">
          <source>Apart from the root node, the nodes that make up a single segment b-tree are always stored using a contiguous sequence of blockids. Furthermore, the nodes that make up a single level of the b-tree are themselves stored as a contiguous block, in b-tree order. The contiguous sequence of blockids used to store the b-tree leaves are allocated starting with the blockid value stored in the &quot;start_block&quot; column of the corresponding %_segdir row, and finishing at the blockid value stored in the &quot;leaves_end_block&quot; field of the same row. It is therefore possible to iterate through all the leaves of a segment b-tree, in key order, by traversing the %_segments table in blockid order from &quot;start_block&quot; to &quot;leaves_end_block&quot;.</source>
          <target state="translated">ルートノードとは別に、1つのセグメントb-treeを構成するノードは、常に連続したブロックIDのシーケンスを使用して格納されます。さらに、b-treeの単一レベルを構成するノードは、それ自体が連続するブロックとして、b-treeの順序で格納されます。b-tree の葉を格納するために使用されるブロック ID の連続したシーケンスは、対応する %_segdir 行の &quot;start_block&quot; 列に格納されているブロック ID 値から始まり、同じ行の &quot;leaves_end_block&quot; フィールドに格納されているブロック ID 値で終了するように割り当てられます。したがって、%_segments テーブルを &quot;start_block&quot; から &quot;leaves_end_block&quot; へとブロック ID 順に移動することで、セグメント b-tree のすべての葉をキー順に反復処理することができます。</target>
        </trans-unit>
        <trans-unit id="f6f3127b3255a243139304b57a2de9b375a5b278" translate="yes" xml:space="preserve">
          <source>Appears in...</source>
          <target state="translated">登場するのは...</target>
        </trans-unit>
        <trans-unit id="cddd694c6980e8f63fe16956f1fed6f2e36dd876" translate="yes" xml:space="preserve">
          <source>Appending a new</source>
          <target state="translated">新規追加</target>
        </trans-unit>
        <trans-unit id="939a673334c7c748561f23a3fd21e4918a1efbc3" translate="yes" xml:space="preserve">
          <source>Appending a new page to the database file.</source>
          <target state="translated">データベースファイルに新しいページを追加します。</target>
        </trans-unit>
        <trans-unit id="dff26bc78571c36fbf9a79d63221a8d63c4781c9" translate="yes" xml:space="preserve">
          <source>Appendix A: Comparison with FTS3/4</source>
          <target state="translated">付録A:FTS3/4との比較</target>
        </trans-unit>
        <trans-unit id="2f62ea77455407c6d86c7651d5f030af0222ec84" translate="yes" xml:space="preserve">
          <source>Appendix A: Search Application Tips</source>
          <target state="translated">付録A:検索アプリケーションのヒント</target>
        </trans-unit>
        <trans-unit id="f9f1d1188ea485eedb2325535cccc6c2b70da6fd" translate="yes" xml:space="preserve">
          <source>Appendix B: Shadow tables created by FTS5</source>
          <target state="translated">付録B:FTS5で作成されたシャドウテーブル</target>
        </trans-unit>
        <trans-unit id="24139aab1ccfea9a0794fea103821cef5044dd2c" translate="yes" xml:space="preserve">
          <source>Application Defined Page Cache</source>
          <target state="translated">アプリケーション定義ページキャッシュ</target>
        </trans-unit>
        <trans-unit id="8c42705eec7c415a6997bd8c9d3dc65da77e4f55" translate="yes" xml:space="preserve">
          <source>Application Defined Page Cache.</source>
          <target state="translated">アプリケーション定義ページキャッシュ。</target>
        </trans-unit>
        <trans-unit id="557031cad0f1b2b54264afc9d96a7aba19827147" translate="yes" xml:space="preserve">
          <source>Application ID</source>
          <target state="translated">アプリケーションID</target>
        </trans-unit>
        <trans-unit id="871e1857983850d1454dd7c60ae50af733931a7a" translate="yes" xml:space="preserve">
          <source>Application Interface</source>
          <target state="translated">アプリケーションインタフェース</target>
        </trans-unit>
        <trans-unit id="a6c10e408404322943e578d89c2bff7889c626f3" translate="yes" xml:space="preserve">
          <source>Application Porting Guide</source>
          <target state="translated">アプリケーションポーティングガイド</target>
        </trans-unit>
        <trans-unit id="a768f98624703793f6acc4a427b7a53a61477bff" translate="yes" xml:space="preserve">
          <source>Application can invoke the &lt;a href=&quot;#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt; file-control to have SQLite generate a temporary filename using the same algorithm that is followed to generate temporary filenames for TEMP tables and other internal uses. The argument should be a char** which will be filled with the filename written into memory obtained from &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The caller should invoke &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; on the result to avoid a memory leak.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt;ファイルコントロールを呼び出して、TEMPテーブルやその他の内部使用のための一時ファイル名を生成するのと同じアルゴリズムを使用して、SQLiteに一時ファイル名を生成させることができます。引数はchar **である必要があり、これは&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;から取得したメモリに書き込まれたファイル名で埋められます。呼び出し側は、メモリリークを回避するために、結果に対して&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="3350dbe5c54d126511b6c09afcd8f51bea6a199c" translate="yes" xml:space="preserve">
          <source>Application can invoke the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt; file-control to have SQLite generate a temporary filename using the same algorithm that is followed to generate temporary filenames for TEMP tables and other internal uses. The argument should be a char** which will be filled with the filename written into memory obtained from &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The caller should invoke &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; on the result to avoid a memory leak.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt;ファイルコントロールを呼び出して、TEMPテーブルやその他の内部使用のための一時ファイル名を生成するのと同じアルゴリズムを使用して、SQLiteに一時ファイル名を生成させることができます。引数はchar **である必要があり、これは&lt;a href=&quot;free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;から取得したメモリに書き込まれたファイル名で埋められます。呼び出し側は、メモリリークを回避するために、結果に対して&lt;a href=&quot;free&quot;&gt;sqlite3_free（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4f4e99a2282eb2e1c855827ddf5f64dd418ab8c7" translate="yes" xml:space="preserve">
          <source>Application code is allowed to modify the sqlite_sequence table, to add new rows, to delete rows, or to modify existing rows. However, application code cannot create the sqlite_sequence table if it does not already exist. Application code can delete all entries from the sqlite_sequence table, but application code cannot drop the sqlite_sequence table.</source>
          <target state="translated">アプリケーション・コードは、sqlite_sequenceテーブルを変更したり、新しい行を追加したり、行を削除したり、既存の行を変更したりすることができます。しかし、アプリケーション・コードはsqlite_sequenceテーブルがまだ存在しない場合、sqlite_sequenceテーブルを作成することはできません。アプリケーション・コードはsqlite_sequenceテーブルからすべてのエントリを削除することができますが、アプリケーション・コードはsqlite_sequenceテーブルを削除することはできません。</target>
        </trans-unit>
        <trans-unit id="263c551ee583a68f5c9b570a6b7af2da5afc58f1" translate="yes" xml:space="preserve">
          <source>Application-defined collating functions</source>
          <target state="translated">アプリケーション定義の照合機能</target>
        </trans-unit>
        <trans-unit id="25d0ad5ca7051d2b57b94a5f5601d3d125282b43" translate="yes" xml:space="preserve">
          <source>Applications are not required to use either of these standard memory allocators. If SQLite is compiled with &lt;a href=&quot;compile#omitfeatures&quot;&gt;SQLITE_OMIT_MEMORY_ALLOCATION&lt;/a&gt; then no implementation for the &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc()&lt;/a&gt;, and &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free()&lt;/a&gt; functions is provided. Instead, the application that links against SQLite must provide its own implementation of these functions. The application provided memory allocator is not required to use the malloc()/free() implementation in the standard C library. An embedded application might provide an alternative memory allocator that uses memory for a fixed memory pool set aside for the exclusive use of SQLite, for example.</source>
          <target state="translated">アプリケーションは、これらの標準メモリアロケータを使用する必要はありません。 SQLiteが&lt;a href=&quot;compile#omitfeatures&quot;&gt;SQLITE_OMIT_MEMORY_ALLOCATION&lt;/a&gt;でコンパイルされている場合、&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;、&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc（）&lt;/a&gt;、および&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free（）&lt;/a&gt;関数の実装は提供されません。代わりに、SQLiteにリンクするアプリケーションは、これらの関数の独自の実装を提供する必要があります。アプリケーションが提供するメモリアロケータは、標準Cライブラリのmalloc（）/ free（）実装を使用する必要はありません。組み込みアプリケーションは、たとえば、SQLite専用に確保されている固定メモリプール用のメモリを使用する代替メモリアロケータを提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="38446a7215f8f42cf45502d1b63067076b840788" translate="yes" xml:space="preserve">
          <source>Applications are strongly discouraged from using this global variable. It is required to set a temporary folder on Windows Runtime (WinRT). But for all other platforms, it is highly recommended that applications neither read nor write this variable. This global variable is a relic that exists for backwards compatibility of legacy applications and should be avoided in new projects.</source>
          <target state="translated">アプリケーションがこのグローバル変数を使用することは強くお勧めしません。Windowsランタイム(WinRT)上で一時的なフォルダを設定するために必要です。しかし、他のすべてのプラットフォームでは、アプリケーションがこの変数を読み書きしないことを強く推奨します。このグローバル変数は、レガシーアプリケーションの下位互換性のために存在する遺物であり、新しいプロジェクトでは使用しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="180a26d65b478f96354579f1533f98cb44ab9c69" translate="yes" xml:space="preserve">
          <source>Applications can activate foreign key enforcement at run-time using the &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys&lt;/a&gt; statement. Or, foreign key enforcement can be activated at compile-time using the &lt;a href=&quot;compile#default_foreign_keys&quot;&gt;-DSQLITE_DEFAULT_FOREIGN_KEYS=1&lt;/a&gt; compile-time option.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys&lt;/a&gt;ステートメントを使用して、実行時に外部キーの適用をアクティブ化できます。または、&lt;a href=&quot;compile#default_foreign_keys&quot;&gt;-DSQLITE_DEFAULT_FOREIGN_KEYS = 1&lt;/a&gt;コンパイル時オプションを使用して、コンパイル時に外部キーの適用をアクティブ化できます。</target>
        </trans-unit>
        <trans-unit id="fa39f6b2c61405c17ac04b8c804d6f91045049fb" translate="yes" xml:space="preserve">
          <source>Applications can call sqlite3_vfs_register() at any time, though of course a VFS needs to be registered before it can be used. The first argument is a pointer to a customized VFS object that the application has prepared. The second argument is true to make the new VFS the default VFS so that it will be used by the legacy &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; and &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16()&lt;/a&gt; APIs. If the new VFS is not the default, then you will probably have to use the new &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; API to use it. Note, however, that if a new VFS is the only VFS known to SQLite (if SQLite was compiled without its usual default VFS or if the precompiled default VFS was removed using &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_unregister()&lt;/a&gt;) then the new VFS automatically becomes the default VFS regardless of the makeDflt argument to &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt;.</source>
          <target state="translated">アプリケーションはいつでもsqlite3_vfs_register（）を呼び出すことができますが、もちろんVFSを使用する前に登録する必要があります。最初の引数は、アプリケーションが準備したカスタマイズされたVFSオブジェクトへのポインターです。 2番目の引数はtrueで、新しいVFSをデフォルトのVFSにして、レガシー&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;および&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16（）&lt;/a&gt; API で使用されるようにします。新しいVFSがデフォルトではない場合、おそらく新しい&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt; APIを使用してそれを使用する必要があります。ただし、新しいVFSがSQLiteで認識される唯一のVFSである場合（SQLiteが通常のデフォルトVFSなしでコンパイルされた場合、またはプリコンパイルされたデフォルトVFSが&lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_unregister（）&lt;/a&gt;を使用して削除された場合））その後、&lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register（）の&lt;/a&gt; makeDflt引数に関係なく、新しいVFSが自動的にデフォルトのVFSになります。</target>
        </trans-unit>
        <trans-unit id="b2aaaa457f07aa308713a42a915ad2852c0b39a0" translate="yes" xml:space="preserve">
          <source>Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in &lt;a href=&quot;lang_datefunc&quot;&gt;date and time functions&lt;/a&gt;.</source>
          <target state="translated">アプリケーションは、日付と時刻をこれらの形式で保存し、組み込みの&lt;a href=&quot;lang_datefunc&quot;&gt;日付と時刻関数&lt;/a&gt;を使用して形式間を自由に変換することを選択できます。</target>
        </trans-unit>
        <trans-unit id="ec145e5678c1f6c0fcbe32fd22a6afa6e15334a5" translate="yes" xml:space="preserve">
          <source>Applications can easily read or write SQLite Archives by linking against SQLite and including the &lt;a href=&quot;https://sqlite.org/src/file/ext/misc/sqlar.c&quot;&gt;ext/misc/sqlar.c&lt;/a&gt; extension to handle the compression and decompression. The sqlar.c extension creates two new SQL functions.</source>
          <target state="translated">アプリケーションは、SQLiteにリンクし、&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/sqlar.c&quot;&gt;ext / misc / sqlar.c&lt;/a&gt;拡張機能を組み込んで圧縮と解凍を処理することにより、SQLiteアーカイブを簡単に読み書きできます。sqlar.c拡張は、2つの新しいSQL関数を作成します。</target>
        </trans-unit>
        <trans-unit id="1918677709e2695b409a42649a05c8c68141d7b8" translate="yes" xml:space="preserve">
          <source>Applications can invoke the &lt;a href=&quot;#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt; file-control to have SQLite generate a temporary filename using the same algorithm that is followed to generate temporary filenames for TEMP tables and other internal uses. The argument should be a char** which will be filled with the filename written into memory obtained from &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The caller should invoke &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; on the result to avoid a memory leak.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt;ファイルコントロールを呼び出して、TEMPテーブルやその他の内部使用のための一時ファイル名を生成するのと同じアルゴリズムを使用してSQLiteに一時ファイル名を生成させることができます。引数は、&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;から取得したメモリに書き込まれるファイル名で埋められるchar **である必要があります。呼び出し元は、メモリリークを回避するために、結果に対して&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8946e0c0b189dd677211bd451c25bb7e538671e1" translate="yes" xml:space="preserve">
          <source>Applications can invoke the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt; file-control to have SQLite generate a temporary filename using the same algorithm that is followed to generate temporary filenames for TEMP tables and other internal uses. The argument should be a char** which will be filled with the filename written into memory obtained from &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The caller should invoke &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; on the result to avoid a memory leak.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntltempfilename&quot; id=&quot;sqlitefcntltempfilename&quot;&gt;SQLITE_FCNTL_TEMPFILENAME&lt;/a&gt;ファイルコントロールを呼び出して、TEMPテーブルやその他の内部使用のための一時ファイル名を生成するのと同じアルゴリズムを使用してSQLiteに一時ファイル名を生成させることができます。引数は、&lt;a href=&quot;free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;から取得したメモリに書き込まれるファイル名で埋められるchar **である必要があります。呼び出し元は、メモリリークを回避するために、結果に対して&lt;a href=&quot;free&quot;&gt;sqlite3_free（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="10c37b1dc4c015883a2357b3c09de919e0c79e2e" translate="yes" xml:space="preserve">
          <source>Applications can leverage the &lt;a href=&quot;fts3&quot;&gt;full-text search&lt;/a&gt; and &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt; indexes and use triggers to implement an &lt;a href=&quot;undoredo&quot;&gt;automated undo/redo stack&lt;/a&gt;.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;fts3&quot;&gt;フルテキスト検索&lt;/a&gt;と&lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt;インデックスを活用し、トリガーを使用して、&lt;a href=&quot;undoredo&quot;&gt;自動化された元に戻す/やり直しスタック&lt;/a&gt;を実装できます。</target>
        </trans-unit>
        <trans-unit id="42c37342832f86fc16406f3d6f977afed5099fdf" translate="yes" xml:space="preserve">
          <source>Applications can use the &lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log(E,F,..)&lt;/a&gt; API to send new messages to the log, if desired, but this is discouraged. The &lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log()&lt;/a&gt; interface is intended for use by extensions only, not by applications.</source>
          <target state="translated">アプリケーションは、必要に&lt;a href=&quot;c3ref/log&quot;&gt;応じてsqlite3_log（E、F、..）&lt;/a&gt; APIを使用して新しいメッセージをログに送信できますが、これはお勧めできません。&lt;a href=&quot;c3ref/log&quot;&gt;sqlite3_log（）&lt;/a&gt;インタフェースだけではなく、アプリケーションによって拡張で使用するためのものです。</target>
        </trans-unit>
        <trans-unit id="5b11300864c54770f7c5f526b6116f644fe6e616" translate="yes" xml:space="preserve">
          <source>Applications need to receive a pointer to the &quot;fts5_api&quot; object in order to add extensions, such as custom tokenizers, to the &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; extension.</source>
          <target state="translated">アプリケーションは、&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;拡張にカスタムトークナイザーなどの拡張を追加するために、「fts5_api」オブジェクトへのポインターを受け取る必要があります。</target>
        </trans-unit>
        <trans-unit id="c62d5c6028bfae4c8b01799ff1a016b8e43ca22c" translate="yes" xml:space="preserve">
          <source>Applications should &lt;a href=&quot;#sqlite3_finalize&quot;&gt;finalize&lt;/a&gt; all &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_close&quot;&gt;close&lt;/a&gt; all &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handles&lt;/a&gt;, and &lt;a href=&quot;#sqlite3backupfinish&quot;&gt;finish&lt;/a&gt; all &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects associated with the &lt;a href=&quot;#sqlite3&quot;&gt;sqlite3&lt;/a&gt; object prior to attempting to close the object. If sqlite3_close_v2() is called on a &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; that still has outstanding &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handles&lt;/a&gt;, and/or &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects then it returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; and the deallocation of resources is deferred until all &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOB handles&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects are also destroyed.</source>
          <target state="translated">アプリケーションは、必要がある&lt;a href=&quot;#sqlite3_finalize&quot;&gt;ファイナライズ&lt;/a&gt;すべて&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備された文を&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob_close&quot;&gt;近くに&lt;/a&gt;すべての&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および&lt;a href=&quot;#sqlite3backupfinish&quot;&gt;終了し&lt;/a&gt;、すべての&lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt;に関連付けられているオブジェクト&lt;a href=&quot;#sqlite3&quot;&gt;sqlite3の&lt;/a&gt;前にオブジェクトを閉じようとするオブジェクトを。 sqlite3_close_v2（）が呼び出された場合&lt;a href=&quot;#sqlite3&quot;&gt;、データベース接続&lt;/a&gt;未解決持っていることを&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備された文&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および/または&lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt;それが返すオブジェクトを&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OKを&lt;/a&gt;し、リソースの割り当て解除が全てまで延期されて&lt;a href=&quot;#sqlite3_stmt&quot;&gt;準備された文&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および&lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt;オブジェクトも破棄されます。</target>
        </trans-unit>
        <trans-unit id="370f3cced4e036aaca81af4fa9e5c1fe46910ebe" translate="yes" xml:space="preserve">
          <source>Applications should &lt;a href=&quot;finalize&quot;&gt;finalize&lt;/a&gt; all &lt;a href=&quot;stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;blob_close&quot;&gt;close&lt;/a&gt; all &lt;a href=&quot;blob&quot;&gt;BLOB handles&lt;/a&gt;, and &lt;a href=&quot;backup_finish#sqlite3backupfinish&quot;&gt;finish&lt;/a&gt; all &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects associated with the &lt;a href=&quot;sqlite3&quot;&gt;sqlite3&lt;/a&gt; object prior to attempting to close the object. If sqlite3_close_v2() is called on a &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; that still has outstanding &lt;a href=&quot;stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;blob&quot;&gt;BLOB handles&lt;/a&gt;, and/or &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects then it returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; and the deallocation of resources is deferred until all &lt;a href=&quot;stmt&quot;&gt;prepared statements&lt;/a&gt;, &lt;a href=&quot;blob&quot;&gt;BLOB handles&lt;/a&gt;, and &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; objects are also destroyed.</source>
          <target state="translated">アプリケーションは、必要がある&lt;a href=&quot;finalize&quot;&gt;ファイナライズ&lt;/a&gt;すべて&lt;a href=&quot;stmt&quot;&gt;準備された文を&lt;/a&gt;、&lt;a href=&quot;blob_close&quot;&gt;近くに&lt;/a&gt;すべての&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および&lt;a href=&quot;backup_finish#sqlite3backupfinish&quot;&gt;終了し&lt;/a&gt;、すべての&lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt;に関連付けられているオブジェクト&lt;a href=&quot;sqlite3&quot;&gt;sqlite3の&lt;/a&gt;前にオブジェクトを閉じようとするオブジェクトを。 sqlite3_close_v2（）が呼び出された場合&lt;a href=&quot;sqlite3&quot;&gt;、データベース接続&lt;/a&gt;未解決持っていることを&lt;a href=&quot;stmt&quot;&gt;準備された文&lt;/a&gt;、&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および/または&lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt;それが返すオブジェクトを&lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OKを&lt;/a&gt;し、リソースの割り当て解除が全てまで延期されて&lt;a href=&quot;stmt&quot;&gt;準備された文&lt;/a&gt;、&lt;a href=&quot;blob&quot;&gt;BLOBハンドル&lt;/a&gt;、および&lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt;オブジェクトも破棄されます。</target>
        </trans-unit>
        <trans-unit id="11da7d835aa708827d0f44dfb12fe45f22493e9a" translate="yes" xml:space="preserve">
          <source>Applications that accept untrusted SQL inputs should take the following precautions:</source>
          <target state="translated">信頼されていない SQL 入力を受け入れるアプリケーションは、次のような注意を払う必要があります。</target>
        </trans-unit>
        <trans-unit id="f32733159fe9563d84f7da23f8a179d0a799e2a5" translate="yes" xml:space="preserve">
          <source>Applications that accept untrusted database files should do the following:</source>
          <target state="translated">信頼されていないデータベースファイルを受け入れるアプリケーションは、次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="e886a51fcb81bff62e2c48396e856865668d639c" translate="yes" xml:space="preserve">
          <source>Applications that already use SQLite for other purposes can easily add support for SQLite Archives using a small extension (&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/sqlar.c&quot;&gt;https://sqlite.org/src/file/ext/misc/sqlar.c&lt;/a&gt;) to handle the compression and decompression of content. Even this tiny extension can be omitted if the files in the archive are uncompressed. In contrast, supporting ZIP Archives and/or Tarballs requires either separate libraries or lots of extra custom code, or sometimes both.</source>
          <target state="translated">SQLiteを既に他の目的で使用しているアプリケーションは、小さな拡張機能（&lt;a href=&quot;https://sqlite.org/src/file/ext/misc/sqlar.c&quot;&gt;https://sqlite.org/src/file/ext/misc/sqlar.c&lt;/a&gt;）を使用してSQLiteアーカイブのサポートを簡単に追加し、コンテンツの圧縮と解凍を処理できます。アーカイブ内のファイルが圧縮されていない場合、この小さな拡張子でさえ省略できます。対照的に、ZIPアーカイブやTarballをサポートするには、個別のライブラリまたは多数の追加のカスタムコード、あるいはその両方が必要です。</target>
        </trans-unit>
        <trans-unit id="77baa4279beeeafb725407d72ddb6fda70fe7b8a" translate="yes" xml:space="preserve">
          <source>Applications that desire more control can run &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize(0x03)&lt;/a&gt; to obtain a list of ANALYZE commands that SQLite thinks are appropriate to run, but without actually running those commands. If the returned set is non-empty, the application can then make a decision about whether or not to run the suggested ANALYZE commands, perhaps after prompting the user for guidance.</source>
          <target state="translated">さらに制御を必要とするアプリケーションは、&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize（0x03）&lt;/a&gt;を実行して、SQLiteが実行に適していると考えるANALYZEコマンドのリストを取得できますが、実際にはこれらのコマンドを実行する必要はありません。返されたセットが空でない場合、アプリケーションは、おそらくユーザーにガイダンスを求めた後に、提案されたANALYZEコマンドを実行するかどうかを決定できます。</target>
        </trans-unit>
        <trans-unit id="9bb5bae5e54c915160fb76cb9810521459a0328b" translate="yes" xml:space="preserve">
          <source>Applications that implement their own memory allocator must provide implementation for the usual three allocation functions &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc()&lt;/a&gt;, and &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free()&lt;/a&gt;. And they must also implement a fourth function:</source>
          <target state="translated">独自のメモリアロケータを実装するアプリケーションは、通常の3つの割り当て関数&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;、&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc（）&lt;/a&gt;、および&lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free（）の&lt;/a&gt;実装を提供する必要があります。また、4番目の関数も実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="3276d7f69778b6a6958211df873305e75fc12066" translate="yes" xml:space="preserve">
          <source>Applications that need to process SQL from untrusted sources might also consider lowering resource limits using &lt;a href=&quot;#sqlite3_limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and limiting database size using the &lt;a href=&quot;pragma#pragma_max_page_count&quot;&gt;max_page_count&lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; in addition to using an authorizer.</source>
          <target state="translated">信頼できないソースからのSQLを処理する必要のあるアプリケーションでは、&lt;a href=&quot;pragma#pragma_max_page_count&quot;&gt;オーソライザーの&lt;/a&gt;使用に加えて、sqlite3_limit &lt;a href=&quot;#sqlite3_limit&quot;&gt;（）&lt;/a&gt;を使用してリソース制限を下げ、max_page_count &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;を使用してデータベースサイズを制限することも検討します。</target>
        </trans-unit>
        <trans-unit id="354d6571e51ed32448c014f215aad54793f93f19" translate="yes" xml:space="preserve">
          <source>Applications that need to process SQL from untrusted sources might also consider lowering resource limits using &lt;a href=&quot;limit&quot;&gt;sqlite3_limit()&lt;/a&gt; and limiting database size using the &lt;a href=&quot;../pragma#pragma_max_page_count&quot;&gt;max_page_count&lt;/a&gt;&lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; in addition to using an authorizer.</source>
          <target state="translated">信頼できないソースからのSQLを処理する必要のあるアプリケーションでは、&lt;a href=&quot;../pragma#pragma_max_page_count&quot;&gt;オーソライザーの&lt;/a&gt;使用に加えて、sqlite3_limit &lt;a href=&quot;limit&quot;&gt;（）&lt;/a&gt;を使用してリソース制限を下げ、max_page_count &lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;を使用してデータベースサイズを制限することも検討します。</target>
        </trans-unit>
        <trans-unit id="a8e172472dcda9eeff06e1a92573e0211e5da692" translate="yes" xml:space="preserve">
          <source>Applications that read or write SQLite database files of uncertain provenance should take precautions enumerated below.</source>
          <target state="translated">出所が不明なSQLiteデータベースファイルを読み書きするアプリケーションでは、以下に列挙されている注意事項を遵守する必要があります。</target>
        </trans-unit>
        <trans-unit id="56219a273baff8fb63d4f640239c5a3823587f98" translate="yes" xml:space="preserve">
          <source>Applications using the split amalgamation simply compile against &quot;sqlite3-all.c&quot; instead of &quot;sqlite3.c&quot;. The two files work exactly the same. But with &quot;sqlite3-all.c&quot;, no single source file contains more than 32,767 lines of code, and so it is more convenient to use some debuggers. The downside of the split amalgamation is that it consists of 6 C source code files instead of just 1.</source>
          <target state="translated">スプリットアマルガムを使ったアプリケーションは、&quot;sqlite3.c &quot;の代わりに &quot;sqlite3-all.c &quot;に対してコンパイルするだけです。2つのファイルは全く同じように動作します。しかし、&quot;sqlite3-all.c &quot;では、どのソースファイルも32,767行以上のコードを含んでいないので、いくつかのデバッガを使った方が便利です。分割アマルガムの欠点は、1つのソースファイルではなく、6つのCソースコードファイルで構成されていることです。</target>
        </trans-unit>
        <trans-unit id="1d0b5bb7dc63af158df007b2dc9a7b8099c0d304" translate="yes" xml:space="preserve">
          <source>Applications with long-lived databases that use complex queries should consider running the following commands just prior to closing each database connection:</source>
          <target state="translated">複雑なクエリを使用する長寿命のデータベースを持つアプリケーションは、各データベース接続を閉じる直前に以下のコマンドを実行することを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="514f9d7fb93d92d6765510a1359338148e757312" translate="yes" xml:space="preserve">
          <source>Apply A Changeset To A Database</source>
          <target state="translated">チェンジセットをデータベースに適用する</target>
        </trans-unit>
        <trans-unit id="0f306fb05632f0f4db7dd5e5ff03c213825dd25d" translate="yes" xml:space="preserve">
          <source>Apply a changeset or patchset to a database. These functions attempt to update the &quot;main&quot; database attached to handle db with the changes found in the changeset passed via the second and third arguments.</source>
          <target state="translated">チェンジセットまたはパッチセットをデータベースに適用します。これらの関数は、2番目と3番目の引数で渡されたチェンジセットで見つかった変更で、ハンドルdbにアタッチされた &quot;メイン &quot;データベースを更新しようとします。</target>
        </trans-unit>
        <trans-unit id="a7bf4a5600a606d3a4f075dab8912ba1aa9d1deb" translate="yes" xml:space="preserve">
          <source>Apply affinities to a range of P2 registers starting with P1.</source>
          <target state="translated">P1から始まるP2レジスタの範囲にアフィニティを適用します。</target>
        </trans-unit>
        <trans-unit id="d9053b57f5f861486073c17aece29454b87cf37a" translate="yes" xml:space="preserve">
          <source>Applying a changeset to a database is simpler than capturing a changeset. Usually, a single call to &lt;a href=&quot;session/sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, as depicted in the example code below, suffices.</source>
          <target state="translated">チェンジセットをデータベースに適用する方が、チェンジセットをキャプチャするよりも簡単です。通常、以下のサンプルコードに示すように、&lt;a href=&quot;session/sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply（）&lt;/a&gt;を1回呼び出すだけで十分です。</target>
        </trans-unit>
        <trans-unit id="9d64c94c92e46add367d8f8d91e1e8dd6a71ae2e" translate="yes" xml:space="preserve">
          <source>Appropriate Uses For SQLite</source>
          <target state="translated">SQLite の適切な用途</target>
        </trans-unit>
        <trans-unit id="7db317caf72bb7c9dbfdfdc313cade8bdb182e98" translate="yes" xml:space="preserve">
          <source>Approx. Date</source>
          <target state="translated">おおよその日付</target>
        </trans-unit>
        <trans-unit id="63a877b9c97333a0f773b586cf9b6ea0abe4710d" translate="yes" xml:space="preserve">
          <source>Approximately 25% better performance from the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rtree&quot;&gt;R-Tree拡張&lt;/a&gt;により、パフォーマンスが約25％向上しました。</target>
        </trans-unit>
        <trans-unit id="1acd094f8de42870eb88cfeea3ebc197767f3b95" translate="yes" xml:space="preserve">
          <source>Architecture of SQLite</source>
          <target state="translated">SQLiteのアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="f076fb02f05c0b3b0347a8ec181af332464b574d" translate="yes" xml:space="preserve">
          <source>Are there any known size limits to SQLite databases?</source>
          <target state="translated">SQLiteデータベースのサイズ制限は知られていますか?</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="c4d2bb6ff9ec16533c1c379a0a3c41d194bcc183" translate="yes" xml:space="preserve">
          <source>Argument T is the name of the database file to vacuum. Argument S is the name of a database in which the RBU module will save its state if the vacuum operation is suspended.</source>
          <target state="translated">引数 T は、バキュームするデータベース・ファイルの名前です。引数 S は、バキューム操作が中断された場合に RBU モジュールがその状態を保存するデータベースの名前です。</target>
        </trans-unit>
        <trans-unit id="0059fb3429a6e57de6b5c01cc5ac92570ab99c32" translate="yes" xml:space="preserve">
          <source>Argument iVal must be greater than or equal to 0, and less than the number of columns in the table affected by the current change. Otherwise, &lt;a href=&quot;../rescode#range&quot;&gt;SQLITE_RANGE&lt;/a&gt; is returned and *ppValue is set to NULL.</source>
          <target state="translated">引数iValは、0以上で、現在の変更の影響を受けるテーブル内の列数未満でなければなりません。それ以外の場合、&lt;a href=&quot;../rescode#range&quot;&gt;SQLITE_RANGE&lt;/a&gt;が返され、* ppValueがNULLに設定されます。</target>
        </trans-unit>
        <trans-unit id="12689143ab00ad889ba38fb7f63c86273b0da663" translate="yes" xml:space="preserve">
          <source>Argument iVal must be greater than or equal to 0, and less than the number of columns in the table affected by the current change. Otherwise, &lt;a href=&quot;rescode#range&quot;&gt;SQLITE_RANGE&lt;/a&gt; is returned and *ppValue is set to NULL.</source>
          <target state="translated">引数iValは、0以上で、現在の変更の影響を受けるテーブル内の列数未満でなければなりません。それ以外の場合、&lt;a href=&quot;rescode#range&quot;&gt;SQLITE_RANGE&lt;/a&gt;が返され、* ppValueがNULLに設定されます。</target>
        </trans-unit>
        <trans-unit id="71b5b8ce6122da2fb2f466eddd7275074f8cc26d" translate="yes" xml:space="preserve">
          <source>Argument pIn must point to a buffer containing a changeset nIn bytes in size. This function allocates and populates a buffer with a copy of the changeset rebased according to the configuration of the rebaser object passed as the first argument. If successful, (*ppOut) is set to point to the new buffer containing the rebased changeset and (*pnOut) to its size in bytes and SQLITE_OK returned. It is the responsibility of the caller to eventually free the new buffer using sqlite3_free(). Otherwise, if an error occurs, (*ppOut) and (*pnOut) are set to zero and an SQLite error code returned.</source>
          <target state="translated">引数 pIn は、サイズ nIn バイトのチェンジセットを含むバッファを指す必要があります。この関数は、最初の引数として渡されたリベーザオブジェクトの設定に従って、リベースされたチェンジセットのコピーを含むバッファを割り当て、生成します。成功した場合、(*ppOut)はリベースされたチェンジセットを含む新しいバッファを指すように設定され、(*pnOut)はバイト単位のサイズに設定され、SQLITE_OKが返されます。最終的にsqlite3_free()を使って新しいバッファを解放するのは呼び出し元の責任です。そうでなければ、エラーが発生した場合、(*ppOut)と(*pnOut)はゼロに設定され、SQLiteエラーコードが返されます。</target>
        </trans-unit>
        <trans-unit id="1502f4d9bcf958ec2d3f9df8d5434c6f3fb95622" translate="yes" xml:space="preserve">
          <source>Argument pIn must point to a buffer containing a changeset nIn bytes in size. This function allocates and populates a buffer with a copy of the changeset rebased rebased according to the configuration of the rebaser object passed as the first argument. If successful, (*ppOut) is set to point to the new buffer containing the rebased changeset and (*pnOut) to its size in bytes and SQLITE_OK returned. It is the responsibility of the caller to eventually free the new buffer using sqlite3_free(). Otherwise, if an error occurs, (*ppOut) and (*pnOut) are set to zero and an SQLite error code returned.</source>
          <target state="translated">引数 pIn は、サイズが nIn バイトのチェンジセットを含むバッファを指す必要があります。この関数は、第1引数として渡されたリベーザオブジェクトの設定に従って、リベースされたチェンジセットのコピーを含むバッファを割り当て、ポップします。成功した場合、(*ppOut)はリベースされたチェンジセットを含む新しいバッファを指すように設定され、(*pnOut)はバイト単位のサイズに設定され、SQLITE_OKが返されます。最終的にsqlite3_free()を使って新しいバッファを解放するのは呼び出し元の責任です。そうでなければ、エラーが発生した場合、(*ppOut)と(*pnOut)はゼロに設定され、SQLiteエラーコードが返されます。</target>
        </trans-unit>
        <trans-unit id="3273cfe93e49705347b0b90c1dbaf9e32a834424" translate="yes" xml:space="preserve">
          <source>Argument zFromDb must be the name of a database (&quot;main&quot;, &quot;temp&quot; etc.) attached to the same database handle as the session object that contains a table compatible with the table attached to the session by this function. A table is considered compatible if it:</source>
          <target state="translated">引数 zFromDb は、セッションオブジェクトと同じデータベースハンドルに接続されたデータベース (&quot;main&quot;,&quot;temp&quot; など)の名前でなければなりません。テーブルが互換性のあるものであれば互換性があるとみなされます。</target>
        </trans-unit>
        <trans-unit id="c2dd08aa3192624f9fd5e4d0f584709c36b430c5" translate="yes" xml:space="preserve">
          <source>Arguments on the virtual table name are matched to &lt;a href=&quot;vtab#hiddencol&quot;&gt;hidden columns&lt;/a&gt; in order. The number of arguments can be less than the number of hidden columns, in which case the latter hidden columns are unconstrained. However, an error results if there are more arguments than there are hidden columns in the virtual table.</source>
          <target state="translated">仮想テーブル名の引数は、&lt;a href=&quot;vtab#hiddencol&quot;&gt;非表示の列&lt;/a&gt;と順番に照合されます。引数の数は非表示の列の数より少なくすることができます。その場合、後者の非表示の列は制約されません。ただし、仮想テーブルに非表示の列よりも引数が多い場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="90539d8182e17636548ae12105ee212ec9b16743" translate="yes" xml:space="preserve">
          <source>As SQLite developers edit the SQLite source code, they run the &lt;a href=&quot;https://sqlite.org/src/file/tool/speed-check.sh&quot;&gt;speed-check.sh&lt;/a&gt; shell script to track the performance impact of changes. This script compiles the speedtest1.c program, runs it under cachegrind, processes the cachegrind output using the &lt;a href=&quot;https://sqlite.org/src/file/tool/cg_anno.tcl&quot;&gt;cg_anno.tcl&lt;/a&gt; TCL script, then saves the results in a series of text files. Typical output from the speed-check.sh script looks like this:</source>
          <target state="translated">SQLite開発者は、SQLiteソースコードを編集するときに、&lt;a href=&quot;https://sqlite.org/src/file/tool/speed-check.sh&quot;&gt;speed-check.sh&lt;/a&gt;シェルスクリプトを実行して、変更によるパフォーマンスへの影響を追跡します。このスクリプトは、speedtest1.cプログラムをコンパイルし、cachegrindの下で実行し、&lt;a href=&quot;https://sqlite.org/src/file/tool/cg_anno.tcl&quot;&gt;cg_anno.tcl&lt;/a&gt; TCLスクリプトを使用してcachegrind出力を処理し、結果を一連のテキストファイルに保存します。speed-check.shスクリプトの一般的な出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="7ed7acd0a6e6b88f39315ac5d476eef951a2dd64" translate="yes" xml:space="preserve">
          <source>As a REAL value that is the fractional &lt;a href=&quot;https://en.wikipedia.org/wiki/Julian_day&quot;&gt;Julian day number&lt;/a&gt;.</source>
          <target state="translated">分数の&lt;a href=&quot;https://en.wikipedia.org/wiki/Julian_day&quot;&gt;ユリウス日で&lt;/a&gt;あるREAL値として。</target>
        </trans-unit>
        <trans-unit id="a4eeeee2e0c94cffee5c99d0db2b5529b4ec1659" translate="yes" xml:space="preserve">
          <source>As a TEXT string in the ISO-8601 format. Example: '2018-04-02 12:13:46'.</source>
          <target state="translated">ISO-8601形式のTEXT文字列として。例:'2018-04-02 12:13:46'。</target>
        </trans-unit>
        <trans-unit id="e71c00fe61fb07ca9e09493bb8ec226ec4260341" translate="yes" xml:space="preserve">
          <source>As a TEXT string in the ISO-8610 format. Example: '2018-04-02 12:13:46'.</source>
          <target state="translated">ISO-8610形式のTEXT文字列として。例:'2018-04-02 12:13:46'。</target>
        </trans-unit>
        <trans-unit id="1f5eb53c0fa9975ea0940d4a4405ff35765d1d45" translate="yes" xml:space="preserve">
          <source>As a performance optimization, reduce actions in the Lemon input grammar are allowed to contain comments of the form &quot;/*A-overwrites-Z*/&quot; to indicate that the semantic value &quot;A&quot; on the right-hand side of the rule is allowed to directly overwrite the semantic value &quot;Z&quot; on the left-hand side. This simple optimization reduces the number of stack operations in the push-down automaton used to parse the input grammar, and thus improve performance of the parser. It also makes the generated code a little smaller.</source>
          <target state="translated">パフォーマンスの最適化として、Lemonの入力文法のリデュースアクションは、ルールの右側の意味値 &quot;A &quot;が左側の意味値 &quot;Z &quot;を直接上書きすることを示すために、&quot;/*A-overwrites-Z*/&quot;という形式のコメントを含むことが許可されています。この単純な最適化により、入力文法を解析するために使用されるプッシュダウンオートマトンのスタック操作の数が減り、パーサの性能が向上します。また、生成されるコードも少し小さくなります。</target>
        </trans-unit>
        <trans-unit id="7bcc1829db91ffdb7536f92aca2feacdc8bcb274" translate="yes" xml:space="preserve">
          <source>As an FTS5 bareword that is not &quot;AND&quot;, &quot;OR&quot; or &quot;NOT&quot; (case sensitive). An FTS5 bareword is a string of one or more consecutive characters that are all either:</source>
          <target state="translated">AND」、「OR」または「NOT」(大文字小文字を区別する)ではないFTS5ベアワードとして。FTS5のベアワードは、1つ以上の連続した文字の文字列で、すべてがどちらかである。</target>
        </trans-unit>
        <trans-unit id="3f6cab6c41155dd3c9ab5be0d8403065e3d7dbaf" translate="yes" xml:space="preserve">
          <source>As an INTEGER number of seconds since 1970 (also known as &quot;unix time&quot;).</source>
          <target state="translated">1970年以降のINTEGER秒数として(「ユニックスタイム」としても知られています)。</target>
        </trans-unit>
        <trans-unit id="32bbd071581bca01328b9dfe1b573f6b34f404d8" translate="yes" xml:space="preserve">
          <source>As an alternative to step 3 above, the transaction may be rolled back. Transaction rollback is described in section</source>
          <target state="translated">前記ステップ3の代替として、トランザクションをロールバックしてもよい。トランザクションのロールバックについては</target>
        </trans-unit>
        <trans-unit id="71c1a7847b731be97050a398f7845485ca21aaa1" translate="yes" xml:space="preserve">
          <source>As an example of how UPDATE-FROM can be useful, suppose you have a point-of-sale application that accumulates purchases in the SALES table. At the end of the day, you want to adjust the INVENTORY table according to the daily sales. To do this, you can run an UPDATE against the INVENTORY table that adjusts the quantity by the aggregated sales for the day. The statement would look like this:</source>
          <target state="translated">UPDATE-ROMがどのように役立つかの例として、SALESテーブルに購入品を蓄積するPOSアプリケーションがあるとします。一日の終わりに、毎日の売上に応じてINVENTORYテーブルを調整したいとします。これを行うには、INVENTORYテーブルに対してUPDATEを実行して、その日の集計された売上によって数量を調整します。ステートメントは次のようになります。</target>
        </trans-unit>
        <trans-unit id="131746c3b1aff392f599c85628677c24f8811860" translate="yes" xml:space="preserve">
          <source>As an example of the result table format, suppose a query result is as follows:</source>
          <target state="translated">結果テーブルの形式の例として、クエリ結果が以下のようになっているとします。</target>
        </trans-unit>
        <trans-unit id="592d95d98cfd4f715eed1be5091215e09168934a" translate="yes" xml:space="preserve">
          <source>As an example, consider a virtual table implementation that provides read-only access to existing comma-separated-value (CSV) files on disk. There is no backing store that needs to be created or initialized for such a virtual table (since the CSV files already exist on disk) so the xCreate and xConnect methods will be identical for that module.</source>
          <target state="translated">例として、ディスク上の既存のカンマ区切り値(CSV)ファイルへの読み取り専用アクセスを提供する仮想テーブルの実装を考えてみましょう。このような仮想テーブルのために作成または初期化する必要のあるバッキングストアはありません(CSV ファイルはすでにディスク上に存在するため)。</target>
        </trans-unit>
        <trans-unit id="0e3486a0e62ced4a8499838d1b8b7393bbcb9f1f" translate="yes" xml:space="preserve">
          <source>As an example, consider creating a two-dimensional R*Tree index for use in spatial queries:</source>
          <target state="translated">例として、空間クエリで使用するための 2 次元 R*Tree インデックスを作成することを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="1f3a827b13a126faa4b33b0ce651746d14a8fc48" translate="yes" xml:space="preserve">
          <source>As an example, consider the following query:</source>
          <target state="translated">例として、次のようなクエリを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="22e02419a6c1aa60126918f747f9d30c0add3ddc" translate="yes" xml:space="preserve">
          <source>As an example, consider the following table that tracks dollar-amount changes on various &quot;accounts&quot;:</source>
          <target state="translated">例として、さまざまな「口座」のドル円の変化を追跡する次の表を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="9685f258b372a754415995a52cb6b9f9c3a80f7a" translate="yes" xml:space="preserve">
          <source>As an example, suppose someone (perhaps a customer) asks you: &quot;What ever became of that 'prefer-coroutine-sort-subquery' branch from two years ago?&quot; You might try to answer the query by consulting the history in your version control system, thusly:</source>
          <target state="translated">例として、誰か(おそらく顧客)があなたに尋ねるとします。&quot;これまでに2年前からその'prefer-coroutin-sort-subquery'ブランチの何になったのですか?&quot; あなたは、このように、バージョン管理システムの履歴を参照してクエリに答えようとするかもしれません。</target>
        </trans-unit>
        <trans-unit id="34ff54cf6acce621207ec9ac9f6485fedf9ef893" translate="yes" xml:space="preserve">
          <source>As an example, the following graphic:</source>
          <target state="translated">例として、以下のようなグラフィックがあります。</target>
        </trans-unit>
        <trans-unit id="d8a7709446ce5823dd6ac2917092a6664f0dbd82" translate="yes" xml:space="preserve">
          <source>As an example, the following setup causes TCL to throw an error if an SQL statement contains an parameter that does not match any global TCL variable:</source>
          <target state="translated">例として、以下の設定では、SQL文にグローバル変数と一致しないパラメータが含まれている場合、TCLはエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="0ed757795f16facadb1fc50b83304333bb04670f" translate="yes" xml:space="preserve">
          <source>As an example, the following table show the relative sizes for an SQLite Archive, a ZIP Archive, and a Tarball of the 1,743 files in the SQLite 3.22.0 source tree:</source>
          <target state="translated">例として、次の表は、SQLite 3.22.0 のソースツリーにある 1,743 個のファイルのうち、SQLite アーカイブ、ZIP アーカイブ、および Tarball の相対的なサイズを示しています。</target>
        </trans-unit>
        <trans-unit id="9d15dfd61e0635160b8312b26c2789af818a9391" translate="yes" xml:space="preserve">
          <source>As an ordinary SQLite table, &quot;wordcount&quot; is implemented as two separate B-Trees. The main table uses the hidden rowid value as the key and stores the &quot;word&quot; and &quot;cnt&quot; columns as data. The &quot;TEXT PRIMARY KEY&quot; phrase of the CREATE TABLE statement causes the creation of an &lt;a href=&quot;lang_createindex#uniqueidx&quot;&gt;unique index&lt;/a&gt; on the &quot;word&quot; column. This index is a separate B-Tree that uses &quot;word&quot; and the &quot;rowid&quot; as the key and stores no data at all. Note that the complete text of every &quot;word&quot; is stored twice: once in the main table and again in the index.</source>
          <target state="translated">通常のSQLiteテーブルと同様に、「wordcount」は2つの個別のBツリーとして実装されます。メインテーブルは、非表示のROWID値をキーとして使用し、「word」列と「cnt」列をデータとして格納します。 CREATE TABLEステートメントの「TEXT PRIMARY KEY」句を使用すると、「word」列に&lt;a href=&quot;lang_createindex#uniqueidx&quot;&gt;一意のインデックスが作成さ&lt;/a&gt;れます。このインデックスは、「単語」と「ROWID」をキーとして使用し、データをまったく格納しない別個のBツリーです。すべての「単語」の完全なテキストは2回保存されます。1回はメインテーブルに、もう1回はインデックスに保存されます。</target>
        </trans-unit>
        <trans-unit id="8276f7702973f7730b88b6137faf5d630b77f015" translate="yes" xml:space="preserve">
          <source>As before, SQLite does single binary search for the range of rows in the covering index that satisfy the WHERE clause, the scans that range from top to bottom to get the desired results. The rows that satisfy the WHERE clause are guaranteed to be adjacent since the WHERE clause is an equality constraint on the left-most column of the index. And by scanning the matching index rows from top to bottom, the output is guaranteed to be ordered by state since the state column is the very next column to the right of the fruit column. And so the resulting query is very efficient.</source>
          <target state="translated">以前と同様に、SQLite は、WHERE 節を満たすカバーリング・インデックス内の行の範囲をシングル・バイナリー検索し、目的の結果を得るために上から下までの範囲をスキャンします。WHERE 句を満たす行は、WHERE 句がインデックスの左端の列に対する等質性制約であるため、隣接していることが保証されます。そして、一致するインデックスの行を上から下へとスキャンすることで、出力は状態順であることが保証されます。そのため、結果として得られるクエリは非常に効率的です。</target>
        </trans-unit>
        <trans-unit id="15882cefbefb220ce1658791117147edd8cba359" translate="yes" xml:space="preserve">
          <source>As before, the Column instruction uses cursor P1 and pushes the data record in column P2 (1, column &quot;two&quot;) onto the stack. The Integer instruction pushes the value 50 onto the top of the stack. After these two instructions the stack looks like:</source>
          <target state="translated">前と同様に、Column命令はカーソルP1を使用して、P2列目(1、列 &quot;2&quot;)のデータレコードをスタックにプッシュします。整数命令は、値50をスタックの先頭に押し出します。この2つの命令の後のスタックは次のようになります。</target>
        </trans-unit>
        <trans-unit id="6c0707574912e68bc0443d44af5e83d6ee57452b" translate="yes" xml:space="preserve">
          <source>As before, the second insert on the left will fail because the comparison will convert both strings into floating-point number first and the only difference in the strings is in the 20-th digit which exceeds the resolution of a 64-bit float. In contrast, the second insert on the right will work because in that case, the numbers being inserted are strings and are compared using memcmp().</source>
          <target state="translated">前述のように、左の 2 番目の挿入は失敗します。なぜなら、比較は最初に両方の文字列を浮動小数点数に変換し、文字列の違いは 20 番目の桁だけで、これは 64 ビットの float の解像度を超えているからです。これに対して、右の2回目の挿入では、挿入されている数値は文字列であり、memcmp()を使用して比較されるため、うまくいきます。</target>
        </trans-unit>
        <trans-unit id="021a9e62497cd6d1534e29c131c8485644cff8ee" translate="yes" xml:space="preserve">
          <source>As can be seen above, a single run of multitest.tcl invokes th3make dozens of times and takes between 12 and 24 CPU hours. The middle section of the output shows the arguments to each individual th3make run and the result and elapse time for that th3make. All build products and output for the separate th3make runs are captures in subdirectories for post-test analysis. The two-line summary at the bottom shows the total number of errors and tests over all th3make runs and the total elapse time, together with the &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt; information for the version of SQLite that was tested. This summary information is recorded in the &lt;a href=&quot;https://www.sqlite.org/checklists&quot;&gt;release checklist&lt;/a&gt; during final testing.</source>
          <target state="translated">上記からわかるように、multitest.tclを1回実行すると、th3makeが数十回呼び出され、CPU時間は12〜24時間かかります。出力の中央セクションには、個々のth3makeの実行に対する引数と、そのth3makeの結果と経過時間が表示されます。すべてのビルド製品と個別のth3make実行の出力は、テスト後の分析のためにサブディレクトリにキャプチャされます。下部の2行の概要には、th3makeのすべての実行におけるエラーとテストの合計数、および合計経過時間が、テストされたバージョンのSQLiteの&lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt;情報とともに表示されます。この概要情報は、最終テスト中に&lt;a href=&quot;https://www.sqlite.org/checklists&quot;&gt;リリースチェックリスト&lt;/a&gt;に記録されます。</target>
        </trans-unit>
        <trans-unit id="a57eec57195e396346032e284f403497e2a6ca2c" translate="yes" xml:space="preserve">
          <source>As far as we can tell, the SQL language specification allows the use of manifest typing. Nevertheless, most other SQL database engines are statically typed and so some people feel that the use of manifest typing is a bug in SQLite. But the authors of SQLite feel very strongly that this is a feature. The use of manifest typing in SQLite is a deliberate design decision which has proven in practice to make SQLite more reliable and easier to use, especially when used in combination with dynamically typed programming languages such as Tcl and Python.</source>
          <target state="translated">私たちが知る限りでは、SQL言語の仕様ではマニフェスト型付けを使用することができます。それにもかかわらず、他のほとんどのSQLデータベースエンジンは静的型付けを行っているため、マニフェスト型付けの使用はSQLiteのバグだと感じる人もいます。しかし、SQLite の作者は、これは機能であると強く感じています。SQLiteでのマニフェスト型付けの使用は意図的な設計上の決定であり、特にTclやPythonのような動的型付けされたプログラミング言語と組み合わせて使用する場合には、SQLiteの信頼性と使いやすさを向上させることが実際に証明されています。</target>
        </trans-unit>
        <trans-unit id="fc29e0fdbff3d25477a8e029f9259bac6f50556e" translate="yes" xml:space="preserve">
          <source>As for all other SQLite tables, virtual or otherwise, data is retrieved from FTS tables using a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement.</source>
          <target state="translated">他のすべてのSQLiteテーブルと同様に、仮想またはその他のデータは、&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメントを使用してFTSテーブルから取得されます。</target>
        </trans-unit>
        <trans-unit id="e10a21db398e4cbe3920a0271ec03a17da9374a2" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;#section_3_11&quot;&gt;section 3.11&lt;/a&gt;, the journal file might be truncated to zero length or its header might be overwritten with zeros as an optimization on systems where deleting a file is expensive. Either way, the journal is no longer hot after this step.</source>
          <target state="translated">&lt;a href=&quot;#section_3_11&quot;&gt;セクション3.11&lt;/a&gt;と同様に、ファイルの削除にコストがかかるシステムでの最適化として、ジャーナルファイルは長さがゼロに切り捨てられるか、そのヘッダーがゼロで上書きされる可能性があります。いずれにせよ、このステップの後、ジャーナルはもはやホットではありません。</target>
        </trans-unit>
        <trans-unit id="4a052665302d7ed15dacb760a0e1d99f7e61c18a" translate="yes" xml:space="preserve">
          <source>As in the INSERT example, we push the database number P1 (0, the main database) onto the stack and use OpenWrite to open the cursor P1 on table P2 (base page 3, &quot;examp&quot;) for modification.</source>
          <target state="translated">INSERTの例のように、データベース番号P1(0、メインデータベース)をスタックにプッシュし、OpenWriteを使用してテーブルP2(ベースページ3、&quot;examp&quot;)のカーソルP1を変更のために開きます。</target>
        </trans-unit>
        <trans-unit id="493b86f021b95461d337801ffc16a105b55e8b55" translate="yes" xml:space="preserve">
          <source>As in the SELECT example, the &lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind&lt;/a&gt; instruction rewinds the cursor to the beginning of the table, readying it for use in the loop body.</source>
          <target state="translated">SELECTの例と同様に、&lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind&lt;/a&gt;命令は、カーソルをテーブルの先頭に巻き戻し、ループ本体で使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="164cc333da63b4862e96f8a93857b770263a0e06" translate="yes" xml:space="preserve">
          <source>As is the case for a</source>
          <target state="translated">の場合と同じように</target>
        </trans-unit>
        <trans-unit id="ed24902923099bb89f817d03e0f964e2ddf3fe73" translate="yes" xml:space="preserve">
          <source>As its name implies, an R*Tree is organized as a tree. Each node of the tree is a bounding box. The root of the tree is a bounding box that encapsulates all elements of the tree. Beneath the root are a number of subtrees (typically 20 or more) each with their own smaller bounding boxes and each containing some subset of the R*Tree entries. The subtrees may have sub-subtrees, and so forth until finally one reaches the leaves of the tree which are the actual R*Tree entries.</source>
          <target state="translated">その名の通り、R*Treeは木として構成されています。ツリーの各ノードはバウンディングボックスです。ツリーのルートは、ツリーのすべての要素を包み込む外接箱です。ルートの下には、いくつかのサブツリー(通常は20個以上)があり、それぞれが小さな外接箱を持ち、それぞれがR*Treeのエントリのサブセットを含んでいます。サブツリーはサブサブツリーを持つことができ、最終的には実際の R*Tree エントリであるツリーの葉に到達します。</target>
        </trans-unit>
        <trans-unit id="1329f3ec0fa61448c27dc490e807fec1b74fd581" translate="yes" xml:space="preserve">
          <source>As its name suggests, the &quot;close&quot; method to an SQLite database just closes the database. This has the side-effect of deleting the</source>
          <target state="translated">その名が示すように、SQLiteデータベースの &quot;close &quot;メソッドはデータベースを閉じるだけです。これは、データベースの</target>
        </trans-unit>
        <trans-unit id="3b9e6df535e040569dafb3fcef3111ff226a3e67" translate="yes" xml:space="preserve">
          <source>As long as the buffer size is greater than zero, sqlite3_snprintf() guarantees that the buffer is always zero-terminated. The first parameter &quot;n&quot; is the total size of the buffer, including space for the zero terminator. So the longest string that can be completely written will be n-1 characters.</source>
          <target state="translated">バッファサイズがゼロより大きい限り、sqlite3_snprintf()はバッファが常にゼロ終端であることを保証します。最初のパラメータ &quot;n &quot;は、ゼロ終端のためのスペースを含むバッファの合計サイズです。したがって、完全に書き込める最長の文字列はn-1文字になります。</target>
        </trans-unit>
        <trans-unit id="26ea5ee053d47ffa17dd452debb3d0d447e3ffce" translate="yes" xml:space="preserve">
          <source>As long as the input parameter is correct, these routines can only fail if an out-of-memory error occurs during a format conversion. Only the following subset of interfaces are subject to out-of-memory errors:</source>
          <target state="translated">入力パラメータが正しい限り、これらのルーチンは、フォーマット変換中にメモリ外エラーが発生した場合にのみ失敗します。メモリ切れエラーが発生するのは、以下のインタフェースのサブセットだけです。</target>
        </trans-unit>
        <trans-unit id="bc7938d9d029402b8371ec96dc41a03cdd95d8f8" translate="yes" xml:space="preserve">
          <source>As long as the input parameters are correct, these routines will only fail if an out-of-memory error occurs during a format conversion. Only the following subset of interfaces are subject to out-of-memory errors:</source>
          <target state="translated">入力パラメータが正しい限り、これらのルーチンは、フォーマット変換中にメモリ切れエラーが発生した場合にのみ失敗します。メモリ切れエラーが発生するのは、以下のインタフェースのサブセットだけです。</target>
        </trans-unit>
        <trans-unit id="af3758ac84a3f79558343e605f45f43dad96f8ef" translate="yes" xml:space="preserve">
          <source>As new versions of SQLite are released, repeat steps 3.6 and 3.7 to add changes in the new release to the private branch. Additional private changes can be made on the private branch in between releases if desired.</source>
          <target state="translated">SQLite の新しいバージョンがリリースされたら、手順 3.6 と 3.7 を繰り返して、新しいリリースの変更をプライベートブランチに追加します。必要に応じて、リリースの間にプライベートブランチに追加の変更を加えることができます。</target>
        </trans-unit>
        <trans-unit id="e442983efbc639e95659cc425a72881ca75f93d3" translate="yes" xml:space="preserve">
          <source>As noted above, there really is no such thing as a &quot;sqlite3_column()&quot; function in the SQLite API. Instead, what we here call &quot;sqlite3_column()&quot; is a place-holder for an entire family of functions that return a value from the result set in various data types. There are also routines in this family that return the size of the result (if it is a string or BLOB) and the number of columns in the result set.</source>
          <target state="translated">上で述べたように、SQLite APIには &quot;sqlite3_column()&quot;関数のようなものはありません。代わりに、ここで &quot;sqlite3_column()&quot;と呼ぶものは、様々なデータ型の結果セットから値を返す関数ファミリ全体のプレースホルダです。このファミリーには、結果のサイズ(文字列やBLOBの場合)や結果セットのカラム数を返すルーチンもあります。</target>
        </trans-unit>
        <trans-unit id="f7f8a41bee17850d3fdbafd1837635d4f3b48596" translate="yes" xml:space="preserve">
          <source>As of 2017-03-12, you must use Fossil version 2.0 or later for the following instructions to work. The SQLite repository started using artifacts named using SHA3 hashes instead of SHA1 hashes on that date, and Fossil 2.0 or later is needed in order to understand the new SHA3 hashes. To find out what version of Fossil you are running, type &quot;fossil -v&quot;.</source>
          <target state="translated">2017-03-12現在、以下の指示が機能するためにはFossilのバージョン2.0以降を使用する必要があります。SQLite リポジトリでは、その日付から SHA1 ハッシュではなく SHA3 ハッシュを使用して命名されたアーティファクトを使用するようになり、新しい SHA3 ハッシュを理解するためには Fossil 2.0 以降が必要になりました。お使いのFossilのバージョンを調べるには、&quot;fossil -v &quot;と入力してください。</target>
        </trans-unit>
        <trans-unit id="46e28b72fbe9e739630682b02359c85a23e23fe2" translate="yes" xml:space="preserve">
          <source>As of 2018-05-19, the TH3 source tree consists and well over 500,000 lines of source code in 1709 separate files.</source>
          <target state="translated">2018-05-19現在、TH3のソースツリーは1709個の別ファイルで50万行以上のソースコードで構成されています。</target>
        </trans-unit>
        <trans-unit id="32045934e18d7d7235684ae81bb4ad3e112f0c5b" translate="yes" xml:space="preserve">
          <source>As of 2019-03-20, there is now an &lt;a href=&quot;https://github.com/sqlite/sqlite&quot;&gt;official Git mirror&lt;/a&gt; of the SQLite sources on GitHub.</source>
          <target state="translated">2019-03-20現在、SQLiteソースの&lt;a href=&quot;https://github.com/sqlite/sqlite&quot;&gt;公式Gitミラー&lt;/a&gt;がGitHubにあります。</target>
        </trans-unit>
        <trans-unit id="3e28505b65fc1d015c678e6ae0f3c3ddff268608" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_29_0.html&quot;&gt;version 3.29.0&lt;/a&gt; (2019-07-10), the SQLite library consists of approximately 138.9 KSLOC of C code. (KSLOC means thousands of &quot;Source Lines Of Code&quot; or, in other words, lines of code excluding blank lines and comments.) By comparison, the project has 662 times as much test code and test scripts - 91946.2 KSLOC.</source>
          <target state="translated">以下のように&lt;a href=&quot;https://sqlite.org/releaselog/3_29_0.html&quot;&gt;バージョン3.29.0&lt;/a&gt;（2019年7月10日）、SQLiteのライブラリは、Cコードの約138.9 KSLOCから成ります。（KSLOCは、何千もの「ソース行のコード」、つまり、空白行とコメントを除くコード行を意味します。）比較すると、プロジェクトには、662倍のテストコードとテストスクリプト（91946.2 KSLOC）があります。</target>
        </trans-unit>
        <trans-unit id="2f1c2b6d73cf26867292aed34f667ddc2bada8a1" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_33_0.html&quot;&gt;version 3.33.0&lt;/a&gt; (2020-08-14), the SQLite library consists of approximately 143.4 KSLOC of C code. (KSLOC means thousands of &quot;Source Lines Of Code&quot; or, in other words, lines of code excluding blank lines and comments.) By comparison, the project has 640 times as much test code and test scripts - 91911.0 KSLOC.</source>
          <target state="translated">以下のように&lt;a href=&quot;https://sqlite.org/releaselog/3_33_0.html&quot;&gt;バージョン3.33.0&lt;/a&gt;（2020年8月14日）、SQLiteのライブラリは、Cコードの約143.4 KSLOCから成ります。（KSLOCは、数千の「ソースコード行」、つまり、空白行とコメントを除くコード行を意味します。）比較すると、プロジェクトには640倍のテストコードとテストスクリプト（91911.0 KSLOC）があります。</target>
        </trans-unit>
        <trans-unit id="a53c8d218bf20b0261060ea362ee56f13c07c935" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;version 3.6.19&lt;/a&gt; (2009-10-14), SQLite supports &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraints&lt;/a&gt;. But enforcement of foreign key constraints is turned off by default (for backwards compatibility). To enable foreign key constraint enforcement, run &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys=ON&lt;/a&gt; or compile with &lt;a href=&quot;compile#default_foreign_keys&quot;&gt;-DSQLITE_DEFAULT_FOREIGN_KEYS=1&lt;/a&gt;.</source>
          <target state="translated">とおり&lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;、バージョン3.6.19&lt;/a&gt;（2009年10月14日）、SQLiteはサポート&lt;a href=&quot;foreignkeys&quot;&gt;外部キー制約を&lt;/a&gt;。ただし、外部キー制約の適用はデフォルトでオフになっています（後方互換性のため）。外部キー制約の強制を有効にするには、&lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys = ONを&lt;/a&gt;実行するか、&lt;a href=&quot;compile#default_foreign_keys&quot;&gt;-DSQLITE_DEFAULT_FOREIGN_KEYS = 1&lt;/a&gt;を指定してコンパイルします。</target>
        </trans-unit>
        <trans-unit id="836b2728d9d516fbe942ba314e801009ae9980b0" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_7_6.html&quot;&gt;version 3.7.6&lt;/a&gt; (2011-04-12), SQLite includes a new virtual table module called &quot;fts4aux&quot;, which can be used to inspect the full-text index of an existing FTS table directly. Despite its name, fts4aux works just as well with FTS3 tables as it does with FTS4 tables. Fts4aux tables are read-only. The only way to modify the contents of an fts4aux table is by modifying the contents of the associated FTS table. The fts4aux module is automatically included in all &lt;a href=&quot;fts3#compiling_and_enabling_fts3_and_fts4&quot;&gt;builds that include FTS&lt;/a&gt;.</source>
          <target state="translated">以下のように&lt;a href=&quot;https://sqlite.org/releaselog/3_7_6.html&quot;&gt;バージョン3.7.6&lt;/a&gt;（2011-04-12）、SQLiteは直接既存のFTSテーブルのフルテキストインデックスを検査するために使用することができる「fts4aux」と呼ばれる新しい仮想テーブルモジュールを含みます。その名前にもかかわらず、fts4auxはFTS4テーブルと同様にFTS3テーブルでも同様に機能します。 Fts4auxテーブルは読み取り専用です。 fts4auxテーブルの内容を変更する唯一の方法は、関連するFTSテーブルの内容を変更することです。 fts4auxモジュールは&lt;a href=&quot;fts3#compiling_and_enabling_fts3_and_fts4&quot;&gt;、FTSを含む&lt;/a&gt;すべてのビルドに自動的に含まれます。</target>
        </trans-unit>
        <trans-unit id="9d225f240bc36e795cb50632150d857ce4c4d78e" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;version 3.9.0&lt;/a&gt; (2015-10-14), FTS5 is included as part of the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;. If using one of the two autoconf build system, FTS5 is enabled by specifying the &quot;--enable-fts5&quot; option when running the configure script. (FTS5 is currently disabled by default for the source-tree configure script and enabled by default for the amalgamation configure script, but these defaults might change in the future.)</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;バージョン3.9.0&lt;/a&gt;（2015-10-14）の時点で、FTS5はSQLite&lt;a href=&quot;amalgamation&quot;&gt;統合の&lt;/a&gt;一部として含まれています。2つのautoconfビルドシステムのいずれかを使用している場合、configureスクリプトの実行時に「--enable-fts5」オプションを指定することでFTS5を有効にします。（FTS5は現在、ソースツリー構成スクリプトではデフォルトで無効になっており、統合構成スクリプトではデフォルトで有効になっていますが、これらのデフォルトは将来変更される可能性があります。）</target>
        </trans-unit>
        <trans-unit id="03eb89fc06866a1260f6276654306363ba727d94" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;version 3.9.0&lt;/a&gt; (2015-10-14), FTS5 is included as part of the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;. It is disabled by default. If using the two autoconf build system, it is enabled by specifying the &quot;--enable-fts5&quot; option when running the configure script.</source>
          <target state="translated">以下のように&lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;バージョン3.9.0&lt;/a&gt;（2015年10月14日）、FTS5はSQLiteのの一部として含まれている&lt;a href=&quot;amalgamation&quot;&gt;合併&lt;/a&gt;。デフォルトでは無効になっています。2つのautoconfビルドシステムを使用している場合は、構成スクリプトの実行時に「--enable-fts5」オプションを指定することで有効になります。</target>
        </trans-unit>
        <trans-unit id="0cba18acfc338d803dd183b86646f960bc3ebd65" translate="yes" xml:space="preserve">
          <source>As of SQLite 3.16.0 (2017-01-02), the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; contains a dot-command &quot;.imposter&quot; that does all of the work of setting up a transient imposter table. Instead of making multiple calls to sqlite3_test_control() and figuring out and invoking a compatible CREATE TABLE statement, a transient imposter table can be constructed as follows:</source>
          <target state="translated">SQLite 3.16.0（2017-01-02）以降、&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルに&lt;/a&gt;は、一時的な詐称者テーブルを設定するすべての作業を行うドットコマンド「.imposter」が含まれています。sqlite3_test_control（）を複数回呼び出して互換性のあるCREATE TABLEステートメントを見つけて呼び出す代わりに、一時的な詐称者テーブルを次のように作成できます。</target>
        </trans-unit>
        <trans-unit id="98a2e1c87379924c2c171b5738373e64a2f944b7" translate="yes" xml:space="preserve">
          <source>As of SQLite 3.27.0 (2019-02-07) the use of a double-quoted string literal causes a warning message to be sent to the &lt;a href=&quot;errlog&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">SQLite 3.27.0（2019-02-07）以降、二重引用符で囲まれた文字列リテラルを使用すると、警告メッセージが&lt;a href=&quot;errlog&quot;&gt;エラーログに&lt;/a&gt;送信されます。</target>
        </trans-unit>
        <trans-unit id="477279c68e157e3c69007f56a275a12b81ee766f" translate="yes" xml:space="preserve">
          <source>As of SQLite 3.29.0 (2019-07-10) the use of double-quoted string literals can be disabled at run-time using the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;SQLITE_DBCONFIG_DQS_DDL&lt;/a&gt; and &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt; actions to &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;. The default settings can be altered at compile-time using the &lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS=&lt;i&gt;N&lt;/i&gt;&lt;/a&gt; compile-time option. Application developers are encouraged to compile using -DSQLITE_DQS=0 in order to disable the double-quoted string literal misfeature by default. If that is not possible, then disable double-quoted string literals for individual database connections using C-code like this:</source>
          <target state="translated">SQLite 3.29.0（2019-07-10）&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsddl&quot;&gt;以降&lt;/a&gt;、SQLITE_DBCONFIG_DQS_DDLおよび&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdqsdml&quot;&gt;SQLITE_DBCONFIG_DQS_DML&lt;/a&gt;アクションを&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）に&lt;/a&gt;使用することで、実行時に二重引用符で囲まれた文字列リテラルの使用を無効にできます。デフォルト設定は、コンパイル時に&lt;a href=&quot;compile#dqs&quot;&gt;-DSQLITE_DQS = &lt;i&gt;N&lt;/i&gt;&lt;/a&gt;コンパイル時オプションを使用して変更できます。アプリケーション開発者は、デフォルトで二重引用符付きの文字列リテラルの誤った機能を無効にするために、-DSQLITE_DQS = 0を使用してコンパイルすることをお勧めします。それが不可能な場合は、次のようなCコードを使用して、個々のデータベース接続の二重引用符で囲まれた文字列リテラルを無効にします。</target>
        </trans-unit>
        <trans-unit id="27ccd6edc0578e2c50724724d1f7e72fc2202881" translate="yes" xml:space="preserve">
          <source>As of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_11_0.html&quot;&gt;version 3.11.0&lt;/a&gt; (2016-02-15), the WAL file for a single transaction should be proportional in size to the transaction itself. Pages that are changed by the transaction should only be written into the WAL file once. However, with older versions of SQLite, the same page might be written into the WAL file multiple times if the transaction grows larger than the page cache.</source>
          <target state="translated">SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_11_0.html&quot;&gt;バージョン3.11.0&lt;/a&gt;（2016-02-15）以降、単一のトランザクションのWALファイルは、トランザクション自体のサイズに比例する必要があります。トランザクションによって変更されたページは、WALファイルに1回だけ書き込む必要があります。ただし、SQLiteの古いバージョンでは、トランザクションがページキャッシュより大きくなると、同じページがWALファイルに複数回書き込まれる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9002d4afcf5621573059e14d645945f49cc82521" translate="yes" xml:space="preserve">
          <source>As of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_1.html&quot;&gt;version 3.6.1&lt;/a&gt; (2008-08-06), the soft heap limit only applies to the general-purpose memory allocator. The soft heap limit does not know about or interact with the &lt;a href=&quot;malloc#pagecache&quot;&gt;pagecache memory allocator&lt;/a&gt; or the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt;. This deficiency will likely be addressed in a future release.</source>
          <target state="translated">SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_1.html&quot;&gt;バージョン3.6.1&lt;/a&gt;（2008-08-06）以降、ソフトヒープ制限は汎用メモリアロケータにのみ適用されます。ソフトヒープの制限は、&lt;a href=&quot;malloc#pagecache&quot;&gt;ページキャッシュメモリアロケータ&lt;/a&gt;または&lt;a href=&quot;malloc#lookaside&quot;&gt;ルックアサイドメモリアロケータを&lt;/a&gt;認識していないか、相互作用しません。この欠陥は、将来のリリースで対処される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b175c36534eb0163084a39638e664737aba3d613" translate="yes" xml:space="preserve">
          <source>As of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;version 3.6.19&lt;/a&gt;, the default setting for foreign key enforcement is OFF. However, that might change in a future release of SQLite. The default setting for foreign key enforcement can be specified at compile-time using the &lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt; preprocessor macro. To minimize future problems, applications should set the foreign key enforcement flag as required by the application and not depend on the default setting.</source>
          <target state="translated">SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;バージョン3.6.19&lt;/a&gt;以降、外部キー強制のデフォルト設定はOFFです。ただし、SQLiteの将来のリリースで変更される可能性があります。外部キー強制のデフォルト設定は、&lt;a href=&quot;compile#default_foreign_keys&quot;&gt;SQLITE_DEFAULT_FOREIGN_KEYS&lt;/a&gt;プリプロセッサマクロを使用してコンパイル時に指定できます。将来の問題を最小限に抑えるために、アプリケーションは、アプリケーションの必要に応じて外部キー実施フラグを設定し、デフォルト設定に依存しないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="0e6461cc943c138056429ef3ecea61d0043a0402" translate="yes" xml:space="preserve">
          <source>As of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;version 3.9.0&lt;/a&gt; (2015-10-14), the &lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt; utility is able to generate RBU databases representing the difference between two databases with identical schemas. For example, the following command:</source>
          <target state="translated">SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_9_0.html&quot;&gt;バージョン3.9.0&lt;/a&gt;（2015-10-14）以降、&lt;a href=&quot;sqldiff&quot;&gt;sqldiff&lt;/a&gt;ユーティリティは、同じスキーマを持つ2つのデータベースの違いを表すRBUデータベースを生成できます。たとえば、次のコマンド：</target>
        </trans-unit>
        <trans-unit id="dfbf6fd8aef52e316e037404ed7145e5b99ccf6d" translate="yes" xml:space="preserve">
          <source>As of SQLite version 3.21.0 (2017-10-24), the query planner will always prefer to use a co-routine to implement FROM-clause subqueries that contains an ORDER BY clause and that are not part of a join when the result set of the outer query is &quot;complex&quot;. This feature allows applications to shift expensive computations from before the sorter until after the sorter, which can result in faster operation. For example, consider this query:</source>
          <target state="translated">SQLite バージョン 3.21.0 (2017-10-24)の時点では、クエリプランナーは、外側のクエリの結果セットが「複雑」である場合に、ORDER BY 節を含み、結合の一部ではない FROM 節のサブクエリを実装するために、常にコ・ルーティンを使用することを好むようになりました。この機能により、アプリケーションは高価な計算をソータの前からソータの後までシフトさせることができ、結果としてより高速な処理を実現することができます。例えば、次のようなクエリを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="242b46186535aea87c089fafc2bda700b6f5e078" translate="yes" xml:space="preserve">
          <source>As of SQLite version 3.22.0, the &quot;sqlite_stat1&quot; table is an exception to some of the rules above. In SQLite, the schema of sqlite_stat1 is:</source>
          <target state="translated">SQLiteバージョン3.22.0では、&quot;sqlite_stat1 &quot;テーブルは上記のルールのいくつかの例外となっています。SQLiteでは、sqlite_stat1のスキーマは</target>
        </trans-unit>
        <trans-unit id="5ddb98490083a7f2dc1ca2a3b26fa7d781b747ca" translate="yes" xml:space="preserve">
          <source>As of this writing (2017-07-13), the completion virtual table only looks for SQL keywords, and schema, table, and column names. The context contained in $wholeline is completely ignored. Future enhancements will try to return new completions taken from function and pragma names and other sources, as well as consider more context. The completion table should be considered a work-in-progress.</source>
          <target state="translated">この記事を書いている時点(2017-07-13)では、補完仮想テーブルはSQLキーワードとスキーマ名、テーブル名、カラム名のみを探しています。wholelineに含まれるコンテキストは完全に無視されます。今後の拡張機能では、関数名やプラグマ名などから取られた新しい補完を返すようにするとともに、より多くのコンテキストを考慮しようとします。補完テーブルは作業中のものと考えてください。</target>
        </trans-unit>
        <trans-unit id="b289cb5373e1ff5a5a0c905eb902dc91bdb7b556" translate="yes" xml:space="preserve">
          <source>As of this writing (2018-05-29) the only other recommended storage formats for datasets are XML, JSON, and CSV.</source>
          <target state="translated">この記事を書いている時点(2018-05-29)では、データセットの他の推奨ストレージ形式はXML、JSON、CSVのみです。</target>
        </trans-unit>
        <trans-unit id="f2ad4e776d39a3ec2c252f71f4dae40cd1708a1c" translate="yes" xml:space="preserve">
          <source>As of this writing (2019-07-16), the SQLite developers have stopped using AFL for routine testing and instead are focused on running dbsqlfuzz. At least one instance of dbsqlfuzz is running on the latest SQLite source code at all times, in order to catch any new problems that might be introduced into the source tree as features are added and routine maintenance is performed.</source>
          <target state="translated">この記事を書いている時点(2019-07-16)で、SQLiteの開発者はルーチンテストにAFLを使用することをやめ、代わりにdbsqlfuzzを実行することに専念しています。機能が追加されたり、定期的なメンテナンスが行われたりする中で、ソースツリーに新たな問題が発生する可能性がある場合、それをキャッチするために、常に最新の SQLite ソースコード上で dbsqlfuzz の少なくとも 1 つのインスタンスが実行されています。</target>
        </trans-unit>
        <trans-unit id="c36686a25a23f2cfaee766f9bfb5607ad00a8413" translate="yes" xml:space="preserve">
          <source>As one might expect, the amount of data read from the database file is minimized by caching portions of the database file in main memory. Additionally, multiple updates to the database file that are part of the same</source>
          <target state="translated">期待通り、データベースファイルの一部をメインメモリにキャッシュすることで、データベースファイルから読み込まれるデータ量を最小限に抑えることができます。さらに、データベースファイルへの複数の更新は、同じ</target>
        </trans-unit>
        <trans-unit id="972efc3fd6678a6e105ba1a8f1aac17c41abd523" translate="yes" xml:space="preserve">
          <source>As part of opening a new</source>
          <target state="translated">新規開設の一環として</target>
        </trans-unit>
        <trans-unit id="9b40d60a44eca2b862c669b4ece8404effe70c95" translate="yes" xml:space="preserve">
          <source>As part of the query planning process, SQLite enumerates all usable combinations of indexes and WHERE-clause constraints. For certain pathological queries, the number of these index-and-constraint combinations can be very large, resulting in slow performance by the query planner. The SQLITE_QUERY_PLANNER_LIMIT value (in conjunction with the related &lt;a href=&quot;compile#query_planner_limit_incr&quot;&gt;SQLITE_QUERY_PLANNER_LIMIT_INCR&lt;/a&gt; setting) limits the number of index-and-constraint combinations that the query planner will consider, in order to prevent the query planner from using excess CPU time. The default value for SQLITE_QUERY_PLANNER_LIMIT is set high enough so that is never reached for real-world queries. The query planner search limit only applies to queries that are deliberately crafted to use excess planning time.</source>
          <target state="translated">クエリ計画プロセスの一部として、SQLiteはインデックスとWHERE句の制約のすべての使用可能な組み合わせを列挙します。特定の病理学的クエリでは、これらのインデックスと制約の組み合わせの数が非常に多くなり、クエリプランナーのパフォーマンスが低下する可能性があります。 SQLITE_QUERY_PLANNER_LIMIT値（および関連する&lt;a href=&quot;compile#query_planner_limit_incr&quot;&gt;SQLITE_QUERY_PLANNER_LIMIT_INCR&lt;/a&gt;設定と組み合わせて）は、クエリプランナーが過剰なCPU時間を使用しないようにするために、クエリプランナーが考慮するインデックスと制約の組み合わせの数を制限します。 SQLITE_QUERY_PLANNER_LIMITのデフォルト値は、実際のクエリでは到達しないように十分に高く設定されています。クエリプランナーの検索制限は、余分な計画時間を使用するように意図的に作成されたクエリにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="69ee480d16c703172bf696c37d4bed26f84974f4" translate="yes" xml:space="preserve">
          <source>As part of the task of creating a new &lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab&lt;/a&gt; structure, this method &lt;u&gt;must&lt;/u&gt; invoke &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab()&lt;/a&gt; to tell the SQLite core about the columns and datatypes in the virtual table. The &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab()&lt;/a&gt; API has the following prototype:</source>
          <target state="translated">新しい&lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab&lt;/a&gt;構造を作成するタスクの一部として、このメソッド&lt;u&gt;は&lt;/u&gt;&lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab（）&lt;/a&gt;を呼び出して、仮想テーブルの列とデータ型についてSQLiteコアに通知する&lt;u&gt;必要があり&lt;/u&gt;ます。&lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab（）&lt;/a&gt; APIは、次のプロトタイプがあります。</target>
        </trans-unit>
        <trans-unit id="c00876adc6de8fc473fb32b80195d17d4fda9f03" translate="yes" xml:space="preserve">
          <source>As pointed out in the previous paragraph, SQLite takes steps to work around the quirks of POSIX advisory locking. Part of that work-around involves keeping a global list (mutex protected) of open SQLite database files. But, if multiple copies of SQLite are linked into the same application, then there will be multiple instances of this global list. Database connections opened using one copy of the SQLite library will be unaware of database connections opened using the other copy, and will be unable to work around the POSIX advisory locking quirks. A &lt;code&gt;close()&lt;/code&gt; operation on one connection might unknowingly clear the locks on a different database connection, leading to database corruption.</source>
          <target state="translated">前の段落で指摘したように、SQLiteはPOSIXアドバイザリロックの癖を回避する手順を実行します。その回避策の一部には、開いているSQLiteデータベースファイルのグローバルリスト（mutex保護）を保持することが含まれます。ただし、SQLiteの複数のコピーが同じアプリケーションにリンクされている場合、このグローバルリストの複数のインスタンスが存在します。 SQLiteライブラリの1つのコピーを使用して開かれたデータベース接続は、他のコピーを使用して開かれたデータベース接続を認識せず、POSIXアドバイザリロックの癖を回避できません。 &lt;code&gt;close()&lt;/code&gt; 1つの接続での操作は、無意識のうちにデータベースの破損につながる、異なるデータベース接続のロックを解除することがあります。</target>
        </trans-unit>
        <trans-unit id="d6d67b507fa18e45da7b000070cada26cbc7cde7" translate="yes" xml:space="preserve">
          <source>As recently as version 2.7.0, SQLite ran at about the same speed as MySQL on this test. But recent optimizations to SQLite have more than doubled speed of UPDATEs.</source>
          <target state="translated">最近のバージョン2.7.0では、SQLiteはこのテストではMySQLとほぼ同じ速度で動作しました。しかし、最近の SQLite への最適化により、UPDATE の速度が 2 倍以上になりました。</target>
        </trans-unit>
        <trans-unit id="9a13d6d8189152816b2ae81d060e78c812a6905c" translate="yes" xml:space="preserve">
          <source>As soon as the PENDING lock is released from the database file, other processes can begin reading the database again. In the current implementation, the RESERVED lock is also released, but that is not essential for correct operation.</source>
          <target state="translated">pendingロックがデータベースファイルから解放されるとすぐに、他のプロセスは再びデータベースの読み込みを開始することができる。現在の実装では、RESERVEDEDロックも解放されていますが、それは正しい操作のためには必須ではありません。</target>
        </trans-unit>
        <trans-unit id="555c3a9cda5a4b25e0cdbc43fe5e7c8c0b690222" translate="yes" xml:space="preserve">
          <source>As the last step in opening a</source>
          <target state="translated">開設の最後のステップとして</target>
        </trans-unit>
        <trans-unit id="de5e740293d719649dc267008b44fcf5aaa20455" translate="yes" xml:space="preserve">
          <source>As we enter the interior of the second loop (at instruction 17) the stack contains a single integer which is the key of the record we want to modify. We are going to need to use this key twice: once to fetch the old value of the record and a second time to write back the revised record. So the first instruction is a Dup to make a duplicate of the key on the top of the stack. The Dup instruction will duplicate any element of the stack, not just the top element. You specify which element to duplication using the P1 operand. When P1 is 0, the top of the stack is duplicated. When P1 is 1, the next element down on the stack duplication. And so forth.</source>
          <target state="translated">2 番目のループの内部に入ると(命令 17 で)、スタックには修正したいレコードのキーである 1 つの整数が含まれています。1回目はレコードの古い値を取得し、2回目は修正したレコードを書き戻すためです。そこで、最初の命令は、スタックの先頭にあるキーの複製を作るためのDupです。Dup命令は、スタックの先頭の要素だけでなく、スタックのどの要素も複製します。どの要素を複製するかは、P1オペランドを使って指定します。P1が0の場合、スタックの先頭が複製されます。P1が1の場合、スタックの次の下の要素が複製されます。といった具合です。</target>
        </trans-unit>
        <trans-unit id="cf4c617d0371eb7d2e50bdeaba7f0656cfa12c47" translate="yes" xml:space="preserve">
          <source>As well as a list of columns, the module arguments passed to a CREATE VIRTUAL TABLE statement used to create an FTS table may be used to specify a &lt;a href=&quot;fts3#tokenizer&quot;&gt;tokenizer&lt;/a&gt;. This is done by specifying a string of the form &quot;tokenize=&amp;lt;tokenizer name&amp;gt; &amp;lt;tokenizer args&amp;gt;&quot; in place of a column name, where &amp;lt;tokenizer name&amp;gt; is the name of the tokenizer to use and &amp;lt;tokenizer args&amp;gt; is an optional list of whitespace separated qualifiers to pass to the tokenizer implementation. A tokenizer specification may be placed anywhere in the column list, but at most one tokenizer declaration is allowed for each CREATE VIRTUAL TABLE statement. &lt;a href=&quot;fts3#tokenizer&quot;&gt;See below&lt;/a&gt; for a detailed description of using (and, if necessary, implementing) a tokenizer.</source>
          <target state="translated">列のリストだけでなく、FTSテーブルの作成に使用されるCREATE VIRTUAL TABLEステートメントに渡されるモジュール引数を使用して、&lt;a href=&quot;fts3#tokenizer&quot;&gt;トークナイザー&lt;/a&gt;を指定できます。これは、列名の代わりに &quot;tokenize = &amp;lt;tokenizer name&amp;gt; &amp;lt;tokenizer args&amp;gt;&quot;という形式の文字列を指定することで行われます。&amp;lt;tokenizer name&amp;gt;は使用するトークナイザーの名前で、&amp;lt;tokenizer args&amp;gt;はオプションですトークナイザー実装に渡す、空白で区切られた修飾子のリスト。トークナイザーの指定は列リストのどこにでも配置できますが、各CREATE VIRTUAL TABLEステートメントで許可されるトークナイザー宣言は1つだけです。トークナイザーの使用（および必要に応じて実装）の詳細については、&lt;a href=&quot;fts3#tokenizer&quot;&gt;以下&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="aba6435071ee404f8eb600e0af17ad3d0179b00e" translate="yes" xml:space="preserve">
          <source>As well as aggregate window functions, SQLite features a set of built-in window functions based on &lt;a href=&quot;https://www.postgresql.org/docs/10/static/functions-window.html&quot;&gt; those supported by PostgreSQL&lt;/a&gt;.</source>
          <target state="translated">SQLiteは、集約ウィンドウ関数だけでなく&lt;a href=&quot;https://www.postgresql.org/docs/10/static/functions-window.html&quot;&gt;、PostgreSQLでサポートさ&lt;/a&gt;れているものに基づいた一連の組み込みウィンドウ関数を備えています。</target>
        </trans-unit>
        <trans-unit id="4c2adc03d8772b0c49ef19569e284dd9591a16b0" translate="yes" xml:space="preserve">
          <source>As well as being set automatically as rows are inserted into database tables, the value returned by this function may be set explicitly by &lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt;</source>
          <target state="translated">行がデータベーステーブルに挿入されると自動的に設定されるだけでなく、この関数によって返される値は&lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;によって明示的に設定できます</target>
        </trans-unit>
        <trans-unit id="6da8075b78c1059d6422bee1d474218e1b6600d9" translate="yes" xml:space="preserve">
          <source>As well as being set automatically as rows are inserted into database tables, the value returned by this function may be set explicitly by &lt;a href=&quot;set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt;</source>
          <target state="translated">行がデータベーステーブルに挿入されると自動的に設定されるだけでなく、この関数によって返される値は&lt;a href=&quot;set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;によって明示的に設定できます</target>
        </trans-unit>
        <trans-unit id="0a715526e2153a56ee0a3cbcb2c8454333e9e1d8" translate="yes" xml:space="preserve">
          <source>As well as searching for all rows that contain a term, FTS5 allows the user to search for rows that contain:</source>
          <target state="translated">FTS5では、用語を含むすべての行を検索するだけでなく、用語を含む行を検索することができます。</target>
        </trans-unit>
        <trans-unit id="19f6e18c709ce14d58e4401d523e835813272b3a" translate="yes" xml:space="preserve">
          <source>As well as the &quot;simple&quot; tokenizer, the FTS source code features a tokenizer that uses the &lt;a href=&quot;http://tartarus.org/~martin/PorterStemmer/&quot;&gt;Porter Stemming algorithm&lt;/a&gt;. This tokenizer uses the same rules to separate the input document into terms including folding all terms into lower case, but also uses the Porter Stemming algorithm to reduce related English language words to a common root. For example, using the same input document as in the paragraph above, the porter tokenizer extracts the following tokens: &quot;right now thei veri frustrat&quot;. Even though some of these terms are not even English words, in some cases using them to build the full-text index is more useful than the more intelligible output produced by the simple tokenizer. Using the porter tokenizer, the document not only matches full-text queries such as &quot;MATCH 'Frustrated'&quot;, but also queries such as &quot;MATCH 'Frustration'&quot;, as the term &quot;Frustration&quot; is reduced by the Porter stemmer algorithm to &quot;frustrat&quot; - just as &quot;Frustrated&quot; is. So, when using the porter tokenizer, FTS is able to find not just exact matches for queried terms, but matches against similar English language terms. For more information on the Porter Stemmer algorithm, please refer to the page linked above.</source>
          <target state="translated">「シンプルな」トークナイザーと同様に、FTSソースコードは&lt;a href=&quot;http://tartarus.org/~martin/PorterStemmer/&quot;&gt;ポーターステミングアルゴリズム&lt;/a&gt;を使用するトークナイザーを備えています。このトークナイザーは、同じルールを使用して、入力ドキュメントをすべての用語を小文字に変換するなどの用語に分割しますが、Porter Stemmingアルゴリズムを使用して、関連する英語の単語を共通のルートに減らします。たとえば、上記の段落と同じ入力ドキュメントを使用して、ポータートークナイザーは次のトークンを抽出します： &quot;right now thei veri frustrat&quot;。これらの用語の一部は英語の単語でさえない場合でも、単純なトークナイザによって生成されるよりわかりやすい出力よりも、それらを使用してフルテキストインデックスを構築する方が便利な場合があります。ポータートークナイザーを使用すると、ドキュメントは「MATCH 'Frustrated'」などの全文クエリだけでなく、「MATCH 'Frustration'」などのクエリも「Frustration」という用語として照合します。ポーターステマーアルゴリズムによって「フラストラット」に削減されます-「フラストレーション」と同じです。したがって、ポータートークナイザーを使用すると、FTSはクエリされた用語の完全一致だけでなく、類似の英語の用語との一致も検出できます。 Porter Stemmerアルゴリズムの詳細については、上記のリンク先のページを参照してください。</target>
        </trans-unit>
        <trans-unit id="03b7b3d7c7af14aee8c40f5a5eff47a557f13b7f" translate="yes" xml:space="preserve">
          <source>As well as the column values and rowid of a matching row, an application may use &lt;a href=&quot;fts5#_auxiliary_functions_&quot;&gt;FTS5 auxiliary functions&lt;/a&gt; to retrieve extra information regarding the matched row. For example, an auxiliary function may be used to retrieve a copy of a column value for a matched row with all instances of the matched term surrounded by html &amp;lt;b&amp;gt;&amp;lt;/b&amp;gt; tags. Auxiliary functions are invoked in the same way as SQLite &lt;a href=&quot;lang_corefunc&quot;&gt;scalar functions&lt;/a&gt;, except that the name of the FTS5 table is specified as the first argument. For example:</source>
          <target state="translated">一致する行の列値と行IDだけでなく、アプリケーションは&lt;a href=&quot;fts5#_auxiliary_functions_&quot;&gt;FTS5補助関数&lt;/a&gt;を使用して、一致した行に関する追加情報を取得できます。たとえば、補助関数を使用して、html &amp;lt;b&amp;gt; &amp;lt;/ b&amp;gt;タグで囲まれた一致する用語のすべてのインスタンスを含む、一致する行の列値のコピーを取得できます。FTS5テーブルの名前が最初の引数として指定されることを除いて、補助関数はSQLite &lt;a href=&quot;lang_corefunc&quot;&gt;スカラー関数&lt;/a&gt;と同じ方法で呼び出されます。例えば：</target>
        </trans-unit>
        <trans-unit id="5f0b425505ed4df313764b933ddda058638fd396" translate="yes" xml:space="preserve">
          <source>As well as the columns named by the user (or the &quot;content&quot; column if no module arguments were specified as part of the &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; statement), each FTS table has a &quot;rowid&quot; column. The rowid of an FTS table behaves in the same way as the rowid column of an ordinary SQLite table, except that the values stored in the rowid column of an FTS table remain unchanged if the database is rebuilt using the &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command. For FTS tables, &quot;docid&quot; is allowed as an alias along with the usual &quot;rowid&quot;, &quot;oid&quot; and &quot;_oid_&quot; identifiers. Attempting to insert or update a row with a docid value that already exists in the table is an error, just as it would be with an ordinary SQLite table.</source>
          <target state="translated">ユーザーが指定した列（または、&lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt;ステートメントの一部としてモジュール引数が指定されていない場合は「コンテンツ」列）と同様に、各FTSテーブルには「行ID」列があります。 FTSテーブルのROWIDは、通常のSQLiteテーブルのROWID列と同じように動作しますが、データベースが&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;コマンドを使用して再構築された場合、FTSテーブルのROWID列に格納された値は変更されません。 FTSテーブルの場合、「docid」は、通常の「rowid」、「oid」、および「_oid_」識別子とともにエイリアスとして許可されます。テーブルに既に存在するdocid値で行を挿入または更新しようとすると、通常のSQLiteテーブルの場合と同様にエラーになります。</target>
        </trans-unit>
        <trans-unit id="8231b142308216452ffa1a9e5faf9c8e3f6c4c97" translate="yes" xml:space="preserve">
          <source>As well as the command option, each invocation of &quot;.ar&quot; may specify one or more modifier options. Some modifier options require an argument, some do not. The following modifier options are available:</source>
          <target state="translated">コマンドオプションと同様に、&quot;.ar&quot; の各呼び出しは、1つ以上の修飾オプションを指定することができます。修飾オプションの中には引数を必要とするものとそうでないものがあります。以下の修飾オプションが利用可能です。</target>
        </trans-unit>
        <trans-unit id="11a7e6bcced1d592a4403e3d9c67fd5b0f5481cf" translate="yes" xml:space="preserve">
          <source>As well as the regular sqlite3changegroup_add() and sqlite3changegroup_output() functions, also available are the streaming versions sqlite3changegroup_add_strm() and sqlite3changegroup_output_strm().</source>
          <target state="translated">通常のsqlite3changegroup_add()とsqlite3changegroup_output()関数の他に、ストリーミング版のsqlite3changegroup_add_strm()とsqlite3changegroup_output_strm()も利用可能です。</target>
        </trans-unit>
        <trans-unit id="c79aa6a7ac9fe81930f35128aa127b04b14a76a2" translate="yes" xml:space="preserve">
          <source>As with &quot;.tables&quot;, the &quot;.schema&quot; command shows the schema for all &lt;a href=&quot;lang_attach&quot;&gt;attached&lt;/a&gt; databases. If you only want to see the schema for a single database (perhaps &quot;main&quot;) then you can add an argument to &quot;.schema&quot; to restrict its output:</source>
          <target state="translated">「.tables」と同様に、「。schema」コマンドは、&lt;a href=&quot;lang_attach&quot;&gt;接続さ&lt;/a&gt;れているすべてのデータベースのスキーマを表示します。単一のデータベース（おそらく「main」）のスキーマのみを表示したい場合は、「。schema」に引数を追加して、その出力を制限できます。</target>
        </trans-unit>
        <trans-unit id="ea1906458c679a89c4cf89131d2ffd0b8ce0439a" translate="yes" xml:space="preserve">
          <source>As with all SQL syntax, the case of the keywords does not matter. One can write &quot;WITHOUT rowid&quot; or &quot;without rowid&quot; or &quot;WiThOuT rOwId&quot; and it will mean the same thing.</source>
          <target state="translated">すべての SQL 構文と同様に、キーワードの大文字小文字は問題ではありません。WITHOUT rowid &quot;や &quot;without rowid &quot;や &quot;WiThOuT rOwId &quot;と書いても同じ意味になります。</target>
        </trans-unit>
        <trans-unit id="08e240ecd7ad7f6958c55717608dff9d30301be2" translate="yes" xml:space="preserve">
          <source>As with all other SQLite APIs, those whose names end with &quot;16&quot; return UTF-16 encoded strings and the other functions return UTF-8.</source>
          <target state="translated">他のすべてのSQLite APIと同様に、名前が &quot;16 &quot;で終わる関数はUTF-16でエンコードされた文字列を返し、その他の関数はUTF-8を返します。</target>
        </trans-unit>
        <trans-unit id="dad941d012cf3c0fecce4040017740b92b3cab9e" translate="yes" xml:space="preserve">
          <source>As with all virtual table types, it is not possible to create indices or triggers attached to FTS tables. Nor is it possible to use the ALTER TABLE command to add extra columns to FTS tables (although it is possible to use ALTER TABLE to rename an FTS table).</source>
          <target state="translated">すべての仮想テーブル・タイプと同様に、FTSテーブルに添付されたインデックスやトリガーを作成することはできません。また、FTSテーブルに追加の列を追加するためにALTER TABLEコマンドを使用することはできません(FTSテーブルの名前を変更するためにALTER TABLEを使用することは可能ですが)。</target>
        </trans-unit>
        <trans-unit id="2c9244ac5b5d0550aa0d1fc8ca3aa52ca8dfaf6c" translate="yes" xml:space="preserve">
          <source>As with custom file formats, and unlike pure pile-of-file formats, a wrapped pile-of-files format is not as easy to edit, since usually the entire file must be rewritten in order to change any component part.</source>
          <target state="translated">カスタムファイルフォーマットと同様に、また純粋な pile-of-file フォーマットとは異なり、ラップされた pile-of-files フォーマットは編集が容易ではありません。</target>
        </trans-unit>
        <trans-unit id="236d7f982d31124f4b94b3c6bc8e43ed33b0fc4b" translate="yes" xml:space="preserve">
          <source>As with the output of the sqlite3session_changeset() and sqlite3session_patchset() functions, all changes related to a single table are grouped together in the output of this function. Tables appear in the same order as for the very first changeset added to the changegroup. If the second or subsequent changesets added to the changegroup contain changes for tables that do not appear in the first changeset, they are appended onto the end of the output changeset, again in the order in which they are first encountered.</source>
          <target state="translated">sqlite3session_changeset()関数とsqlite3session_patchset()関数の出力と同様に、単一のテーブルに関連するすべての変更はこの関数の出力でまとめられます。テーブルは、変更グループに追加された最初の変更セットと同じ順番で表示されます。changegroup に追加された 2 番目以降のチェンジセットに、最初のチェンジセットにはないテーブルの変更が含まれている場合、それらは出力されたチェンジセットの最後に追加され、再び最初に遭遇した順番で表示されます。</target>
        </trans-unit>
        <trans-unit id="38abe488c2a235f79f98488263f0f24db0790ef4" translate="yes" xml:space="preserve">
          <source>As with unix, most of the code for the various Windows VFSes is shared.</source>
          <target state="translated">unix と同様に、様々な Windows VFS のコードのほとんどが共有されています。</target>
        </trans-unit>
        <trans-unit id="ae23c67b5810fa3b2f8c5dc0de91ee63f46fa321" translate="yes" xml:space="preserve">
          <source>As you can see above, our simple insert statement is implemented in 12 instructions. The first 3 and last 2 instructions are a standard prologue and epilogue, so the real work is done in the middle 7 instructions. There are no jumps, so the program executes once through from top to bottom. Let's now look at each instruction in detail.</source>
          <target state="translated">上で見たように、私たちの単純な挿入文は12の命令で実装されています。最初の3命令と最後の2命令は標準的なプロローグとエピローグなので、実際の作業は中間の7命令で行われます。ジャンプがないので、プログラムは上から下へ一度だけ実行されます。それでは、それぞれの命令を詳しく見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="5e7f8dc6fe3c7e8373b6401e629567228cb8e775" translate="yes" xml:space="preserve">
          <source>As you would expect, it is not possible to manipulate the database to a state that violates the foreign key constraint by deleting or updating rows in the</source>
          <target state="translated">の行を削除したり更新したりすることで、外部キー制約に違反する状態にデータベースを操作することはできません。</target>
        </trans-unit>
        <trans-unit id="d60ffe4ee5253e97c8077a55a44490538dd90ceb" translate="yes" xml:space="preserve">
          <source>Aside from those read operations described by H35070 and H21XXX, SQLite shall read data from the database file in aligned blocks of</source>
          <target state="translated">H35070及びH21XXXで記述されている読み込み操作を除き、SQLiteはデータベースファイルからデータを</target>
        </trans-unit>
        <trans-unit id="42e2846af72fd7f80a66045f0952619fc82cc85d" translate="yes" xml:space="preserve">
          <source>Assert() macros are disabled by compiling with the NDEBUG macro defined. In most systems, asserts are enabled by default. But in SQLite, the asserts are so numerous and are in such performance critical places, that the database engine runs about three times slower when asserts are enabled. Hence, the default (production) build of SQLite disables asserts. Assert statements are only enabled when SQLite is compiled with the SQLITE_DEBUG preprocessor macro defined.</source>
          <target state="translated">Assert()マクロは、NDEBUGマクロを定義してコンパイルすることで無効になります。ほとんどのシステムでは、デフォルトでアサートは有効になっています。しかし、SQLiteでは、アサートが非常に多く、パフォーマンスが重要な場所にあるため、アサートを有効にした場合、データベースエンジンの動作が約3倍遅くなります。そのため、SQLiteのデフォルト(本番環境)のビルドでは、アサートは無効になっています。アサート文が有効になるのは、SQLite が SQLITE_DEBUG プリプロセッサマクロを定義してコンパイルされている場合のみです。</target>
        </trans-unit>
        <trans-unit id="c350f30044b71a607c57f6c34de0b1ed5d9089b9" translate="yes" xml:space="preserve">
          <source>Assertion fault in FTS4. Ticket &lt;a href=&quot;https://www.sqlite.org/src/info/d6ec09eccf68cfc&quot;&gt;d6ec09eccf68cfc&lt;/a&gt;</source>
          <target state="translated">FTS4のアサーションエラー。チケット&lt;a href=&quot;https://www.sqlite.org/src/info/d6ec09eccf68cfc&quot;&gt;d6ec09eccf68cfc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebc26a866ddd19c561f95f02b90e42c3048bf831" translate="yes" xml:space="preserve">
          <source>Assertion fault on queries involving expressions of the form &quot;x IN (?)&quot;. Ticket &lt;a href=&quot;http://www.sqlite.org/src/info/e39d032577&quot;&gt;e39d032577&lt;/a&gt;.</source>
          <target state="translated">「x IN（？）」の形式の式を含むクエリのアサーションフォールト。チケット&lt;a href=&quot;http://www.sqlite.org/src/info/e39d032577&quot;&gt;e39d032577&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c84e5f05e8b60b78b6a824b91605a18f1523027" translate="yes" xml:space="preserve">
          <source>Assertion fault when doing REPLACE on an index on an expression. Ticket &lt;a href=&quot;https://sqlite.org/src/info/dc3f932f5a147771&quot;&gt;dc3f932f5a147771&lt;/a&gt;</source>
          <target state="translated">式のインデックスでREPLACEを実行すると、アサーションエラーが発生します。チケット&lt;a href=&quot;https://sqlite.org/src/info/dc3f932f5a147771&quot;&gt;dc3f932f5a147771&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14462bb4d8840870eeb8b473a0f255cc7e22e056" translate="yes" xml:space="preserve">
          <source>Assertion fault when doing an IN operator on a constant index. Ticket &lt;a href=&quot;https://sqlite.org/src/info/aa98619ad08ddcab&quot;&gt;aa98619ad08ddcab&lt;/a&gt;</source>
          <target state="translated">定数インデックスでIN演算子を実行すると、アサーションエラーが発生します。チケット&lt;a href=&quot;https://sqlite.org/src/info/aa98619ad08ddcab&quot;&gt;aa98619ad08ddcab&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cea6f6a832fd7bbb6517d045402e777f939a795" translate="yes" xml:space="preserve">
          <source>Assigned the integer at offset 68 in the &lt;a href=&quot;fileformat2#database_header&quot;&gt;database header&lt;/a&gt; as the &lt;a href=&quot;fileformat2#appid&quot;&gt;Application ID&lt;/a&gt; for when SQLite is used as an &lt;a href=&quot;appfileformat&quot;&gt;application file-format&lt;/a&gt;. Added the &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;PRAGMA application_id&lt;/a&gt; command to query and set the Application ID.</source>
          <target state="translated">SQLiteを&lt;a href=&quot;appfileformat&quot;&gt;アプリケーションファイル形式&lt;/a&gt;として使用する場合の&lt;a href=&quot;fileformat2#appid&quot;&gt;アプリケーションID&lt;/a&gt;として、&lt;a href=&quot;fileformat2#database_header&quot;&gt;データベースヘッダーの&lt;/a&gt;オフセット68にある整数を割り当てました。アプリケーションIDを照会および設定するための&lt;a href=&quot;pragma#pragma_application_id&quot;&gt;PRAGMA application_id&lt;/a&gt;コマンドを追加しました。</target>
        </trans-unit>
        <trans-unit id="2dc2100f672c34160990cbf608240b0f61030c73" translate="yes" xml:space="preserve">
          <source>Assuming</source>
          <target state="translated">Assuming</target>
        </trans-unit>
        <trans-unit id="ea6dcdcecbe15c6b4677215943bc88e69426e6db" translate="yes" xml:space="preserve">
          <source>Assuming no errors have occurred, then after attempting to detect and roll back a</source>
          <target state="translated">エラーが発生していないと仮定して、検出とロールバックを試みた後に</target>
        </trans-unit>
        <trans-unit id="2d3766c3aab2fade58e514ea17fb6dc49420a581" translate="yes" xml:space="preserve">
          <source>Assuming statistics are enabled, the following routine can be used to access them:</source>
          <target state="translated">統計情報が有効になっていると仮定すると、以下のルーチンを使用して統計情報にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="836ad82865d510ff9a297c7660cf9d810b0b4728" translate="yes" xml:space="preserve">
          <source>Assuming that after registering for an unlock-notify callback a database waits for the callback to be issued before taking any further action (a reasonable assumption), then using this API may cause the application to deadlock. For example, if connection X is waiting for connection Y's transaction to be concluded, and similarly connection Y is waiting on connection X's transaction, then neither connection will proceed and the system may remain deadlocked indefinitely.</source>
          <target state="translated">unlock-notifyコールバックに登録した後、データベースがそれ以上のアクションを取る前にコールバックの発行を待つと仮定すると(合理的な仮定です)、このAPIを使用するとアプリケーションがデッドロックする可能性があります。例えば、接続 X が接続 Y のトランザクションが終了するのを待っていて、同様に接続 Y が接続 X のトランザクションを待っている場合、どちらの接続も処理が進まず、システムは無期限にデッドロックのままになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ba1c75f29bb0c1b541e404f389344df8b7d3190" translate="yes" xml:space="preserve">
          <source>Assuming that any and all sectors in the transient state may be corrupted following a power or system failure is a very pessimistic approach. Some modern systems provide more sophisticated guarantees than this. SQLite allows the VFS implementation to specify at runtime that the current platform supports zero or more of the following properties:</source>
          <target state="translated">過渡状態にあるすべてのセクタが、電源またはシステム障害の後に破損する可能性があると仮定することは、非常に悲観的なアプローチである。最近のシステムの中には、これよりも洗練された保証を提供しているものもあります。SQLite では、VFS の実装で、現在のプラットフォームが以下のプロパティのうちゼロ以上をサポートしていることを実行時に指定することができます。</target>
        </trans-unit>
        <trans-unit id="22e7a33261340b9207abc7f6240781daed2437d8" translate="yes" xml:space="preserve">
          <source>Assuming that customer records are stored in the &quot;customers&quot; table, and that order records are stored in the &quot;orders&quot; table, the following UPDATE trigger ensures that all associated orders are redirected when a customer changes his or her address:</source>
          <target state="translated">顧客レコードが &quot;customers &quot;テーブルに格納され、注文レコードが &quot;order &quot;テーブルに格納されていると仮定すると、以下のUPDATEトリガは、顧客が彼または彼女のアドレスを変更したときに、すべての関連する注文がリダイレクトされることを保証します。</target>
        </trans-unit>
        <trans-unit id="ff40c2070ad237bff82bd7bce4ef0b45898889d0" translate="yes" xml:space="preserve">
          <source>Assuming that the compile-time threading mode is not single-thread, then the threading mode can be changed during initialization using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface. The &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigsinglethread&quot;&gt;SQLITE_CONFIG_SINGLETHREAD&lt;/a&gt; verb puts SQLite into single-thread mode, the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmultithread&quot;&gt;SQLITE_CONFIG_MULTITHREAD&lt;/a&gt; verb sets multi-thread mode, and the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigserialized&quot;&gt;SQLITE_CONFIG_SERIALIZED&lt;/a&gt; verb sets serialized mode.</source>
          <target state="translated">コンパイル時のスレッドモードがシングルスレッドでない場合、スレッド化モードは&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;インターフェイスを使用して初期化中に変更できます。&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigsinglethread&quot;&gt;SQLITE_CONFIG_SINGLETHREAD&lt;/a&gt;シングルスレッドモードに入れSQLiteの動詞&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmultithread&quot;&gt;SQLITE_CONFIG_MULTITHREAD&lt;/a&gt;設定マルチスレッドモード動詞、及び&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigserialized&quot;&gt;SQLITE_CONFIG_SERIALIZED&lt;/a&gt;モードをシリアライズ動詞セット。</target>
        </trans-unit>
        <trans-unit id="5e4099134714457b667c5a0d0c91727935a69b43" translate="yes" xml:space="preserve">
          <source>Assuming that the first hidden column of &quot;tablevaluedfunc&quot; is &quot;param1&quot;, the query above is semantically equivalent to this:</source>
          <target state="translated">tablevaluedfunc」の最初の隠しカラムが「param1」であると仮定すると、上のクエリは意味的にはこれと等価です。</target>
        </trans-unit>
        <trans-unit id="a392f90a65c67ef3276bb011e52cf4659579c18e" translate="yes" xml:space="preserve">
          <source>Assuming the changeset blob was created by one of the &lt;a href=&quot;#sqlite3session_changeset&quot;&gt;sqlite3session_changeset()&lt;/a&gt;, &lt;a href=&quot;#sqlite3changeset_concat&quot;&gt;sqlite3changeset_concat()&lt;/a&gt; or &lt;a href=&quot;#sqlite3changeset_invert&quot;&gt;sqlite3changeset_invert()&lt;/a&gt; functions, all changes within the changeset that apply to a single table are grouped together. This means that when an application iterates through a changeset using an iterator created by this function, all changes that relate to a single table are visited consecutively. There is no chance that the iterator will visit a change the applies to table X, then one for table Y, and then later on visit another change for table X.</source>
          <target state="translated">チェンジセットblobが&lt;a href=&quot;#sqlite3session_changeset&quot;&gt;sqlite3session_changeset（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3changeset_concat&quot;&gt;sqlite3changeset_concat（）、&lt;/a&gt;または&lt;a href=&quot;#sqlite3changeset_invert&quot;&gt;sqlite3changeset_invert（）&lt;/a&gt;関数のいずれかによって作成されたと仮定すると、単一のテーブルに適用されるチェンジセット内のすべての変更はグループ化されます。つまり、アプリケーションがこの関数によって作成されたイテレーターを使用してチェンジセットを反復処理すると、単一のテーブルに関連するすべての変更が連続してアクセスされます。イテレータがテーブルXに適用される変更にアクセスし、次にテーブルYに適用する変更にアクセスし、その後、テーブルXに別の変更にアクセスする可能性はありません。</target>
        </trans-unit>
        <trans-unit id="ae768e26e15e53e036c5e372149bd64f61fe40d5" translate="yes" xml:space="preserve">
          <source>Assuming the changeset blob was created by one of the &lt;a href=&quot;sqlite3session_changeset&quot;&gt;sqlite3session_changeset()&lt;/a&gt;, &lt;a href=&quot;sqlite3changeset_concat&quot;&gt;sqlite3changeset_concat()&lt;/a&gt; or &lt;a href=&quot;sqlite3changeset_invert&quot;&gt;sqlite3changeset_invert()&lt;/a&gt; functions, all changes within the changeset that apply to a single table are grouped together. This means that when an application iterates through a changeset using an iterator created by this function, all changes that relate to a single table are visited consecutively. There is no chance that the iterator will visit a change the applies to table X, then one for table Y, and then later on visit another change for table X.</source>
          <target state="translated">チェンジセットblobが&lt;a href=&quot;sqlite3session_changeset&quot;&gt;sqlite3session_changeset（）&lt;/a&gt;、&lt;a href=&quot;sqlite3changeset_concat&quot;&gt;sqlite3changeset_concat（）、&lt;/a&gt;または&lt;a href=&quot;sqlite3changeset_invert&quot;&gt;sqlite3changeset_invert（）&lt;/a&gt;関数のいずれかによって作成されたと仮定すると、単一のテーブルに適用されるチェンジセット内のすべての変更はグループ化されます。つまり、アプリケーションがこの関数によって作成されたイテレーターを使用してチェンジセットを反復処理すると、単一のテーブルに関連するすべての変更が連続してアクセスされます。イテレータがテーブルXに適用される変更にアクセスし、次にテーブルYに適用する変更にアクセスし、その後、テーブルXに別の変更にアクセスする可能性はありません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
