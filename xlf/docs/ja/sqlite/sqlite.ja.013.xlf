<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="6746f394557b9dabd8af972d9d23d7f801fedd98" translate="yes" xml:space="preserve">
          <source>SQLite is built using a &lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178B&lt;/a&gt;-inspired process. The &lt;a href=&quot;testing&quot;&gt;testing standards&lt;/a&gt; for SQLite are among the highest for commercial software.</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178Bに&lt;/a&gt;ヒントを得たプロセスを使用して構築されています。SQLite の&lt;a href=&quot;testing&quot;&gt;テスト標準&lt;/a&gt;は、商用ソフトウェアの最高水準にあります。</target>
        </trans-unit>
        <trans-unit id="875a9efc25bbb30b8f5d1660336c59da880170b4" translate="yes" xml:space="preserve">
          <source>SQLite is competitive with, and usually faster than, blobs stored in separate files on disk, for both reading and writing.</source>
          <target state="translated">SQLite は、ディスク上の別々のファイルに格納された blob と競合し、通常はそれよりも高速です。</target>
        </trans-unit>
        <trans-unit id="53b3a565f93669221f3865969fe660536421aef7" translate="yes" xml:space="preserve">
          <source>SQLite is designed to meet most developer's needs without any changes or customization. When changes are needed, they can normally be accomplished using start-time &lt;a href=&quot;c3ref/config&quot;&gt;(1)&lt;/a&gt; or runtime &lt;a href=&quot;c3ref/db_config&quot;&gt;(2)&lt;/a&gt;&lt;a href=&quot;c3ref/limit&quot;&gt;(3)&lt;/a&gt;&lt;a href=&quot;c3ref/vfs_find&quot;&gt;(4)&lt;/a&gt; configuration methods or via &lt;a href=&quot;compile&quot;&gt;compile-time options&lt;/a&gt;. It is very rare that an application developer will need to edit the SQLite source code in order to incorporate SQLite into a product.</source>
          <target state="translated">SQLiteは、変更やカスタマイズを行うことなく、ほとんどの開発者のニーズを満たすように設計されています。変更が必要な場合は、通常、開始時&lt;a href=&quot;c3ref/config&quot;&gt;（1）&lt;/a&gt;または実行時&lt;a href=&quot;c3ref/db_config&quot;&gt;（2）&lt;/a&gt;&lt;a href=&quot;c3ref/limit&quot;&gt;（3）&lt;/a&gt;&lt;a href=&quot;c3ref/vfs_find&quot;&gt;（4）の&lt;/a&gt;構成方法を使用するか、&lt;a href=&quot;compile&quot;&gt;コンパイル時オプションを使用して変更できます&lt;/a&gt;。アプリケーション開発者がSQLiteを製品に組み込むためにSQLiteソースコードを編集する必要があることは非常にまれです。</target>
        </trans-unit>
        <trans-unit id="2b810dc63ad4381febba6bfa7d0698c8944220e9" translate="yes" xml:space="preserve">
          <source>SQLite is different in that it stores the schema in the &lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt; table as the original text of the CREATE statements that define the schema. Hence ALTER TABLE needs to revise the text of the CREATE statement. Doing so can be tricky for certain &quot;creative&quot; schema designs.</source>
          <target state="translated">SQLiteは、スキーマを定義するCREATEステートメントの元のテキストとして&lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt;テーブルにスキーマを格納する点が異なります。したがって、ALTER TABLEはCREATEステートメントのテキストを修正する必要があります。これを行うのは、特定の「クリエイティブ」スキーマ設計では扱いにくい場合があります。</target>
        </trans-unit>
        <trans-unit id="3ba0a35d8001d8dc075689278c2e501182c6877e" translate="yes" xml:space="preserve">
          <source>SQLite is different in that it stores the schema in the &lt;a href=&quot;schematab&quot;&gt;sqlite_schema&lt;/a&gt; table as the original text of the CREATE statements that define the schema. Hence ALTER TABLE needs to revise the text of the CREATE statement. Doing so can be tricky for certain &quot;creative&quot; schema designs.</source>
          <target state="translated">SQLiteは、スキーマを定義するCREATEステートメントの元のテキストとしてスキーマを&lt;a href=&quot;schematab&quot;&gt;sqlite_schema&lt;/a&gt;テーブルに格納するという点で異なります。したがって、ALTERTABLEはCREATEステートメントのテキストを修正する必要があります。これを行うことは、特定の「創造的な」スキーマ設計では注意が必要な場合があります。</target>
        </trans-unit>
        <trans-unit id="c4d9fd1ad4a17767c9b0eeee58f6c4cef761ec22" translate="yes" xml:space="preserve">
          <source>SQLite is expected to operate the same, and use exactly the same &lt;a href=&quot;fileformat2&quot;&gt;on-disk format&lt;/a&gt;, on all modern operating systems, on all modern computer architectures, and using all modern C compilers. The developers are constantly testing SQLite on as many diverse platforms as they can get their hands on.</source>
          <target state="translated">SQLiteは、すべての最新のオペレーティングシステム、すべての最新のコンピューターアーキテクチャ、およびすべての最新のCコンパイラを使用して、同じように動作し、まったく同じ&lt;a href=&quot;fileformat2&quot;&gt;オンディスク形式&lt;/a&gt;を使用することが期待されています。開発者は、手に入る限りの数の多様なプラットフォームでSQLiteを常にテストしています。</target>
        </trans-unit>
        <trans-unit id="0ae04c54b68c60010dff08d4f306e294deee8ba8" translate="yes" xml:space="preserve">
          <source>SQLite is in the Public Domain.</source>
          <target state="translated">SQLiteはパブリックドメインです。</target>
        </trans-unit>
        <trans-unit id="41978015003a28658fac35ad1aebf308a1d4bdc1" translate="yes" xml:space="preserve">
          <source>SQLite is much faster than direct writes to disk on Windows when anti-virus protection is turned on. Since anti-virus software is and should be on by default in Windows, that means that SQLite is generally much faster than direct disk writes on Windows.</source>
          <target state="translated">ウイルス対策がオンになっているWindowsでは、SQLiteはディスクへの直接書き込みよりもはるかに高速です。Windowsではウィルス対策ソフトがデフォルトでオンになっているので、WindowsではSQLiteの方が一般的にディスクへの直接書き込みよりもはるかに速いということになります。</target>
        </trans-unit>
        <trans-unit id="d2117a2a67d4eee0f3af565533d9cac9c29e3ebe" translate="yes" xml:space="preserve">
          <source>SQLite is normally very forgiving about mismatches between the type of a value and the declared type of the container in which that value is to be stored. For example, SQLite allows the application to store a large BLOB in a column with a declared type of BOOLEAN. But in a few cases, SQLite is strict about types. The SQLITE_MISMATCH error is returned in those few cases when the types do not match.</source>
          <target state="translated">SQLite は通常、値の型と、その値が格納されるコンテナの宣言された型との間の不一致について非常に寛容です。例えば、SQLite では、アプリケーションは大きな BLOB を BOOLEAN という宣言された型のカラムに格納することができます。しかし、いくつかのケースでは、SQLite は型について厳格です。型が一致しない場合、SQLITE_MISMATCH エラーが返されます。</target>
        </trans-unit>
        <trans-unit id="90d38f0f8852e6f3bc8f54ade94a7ff4da3d7a52" translate="yes" xml:space="preserve">
          <source>SQLite is not directly comparable to client/server SQL database engines such as MySQL, Oracle, PostgreSQL, or SQL Server since SQLite is trying to solve a different problem.</source>
          <target state="translated">SQLiteは別の問題を解決しようとしているので、MySQL、Oracle、PostgreSQL、SQL Serverなどのクライアント/サーバ型SQLデータベースエンジンとは直接比較できません。</target>
        </trans-unit>
        <trans-unit id="1435c0d28bf1363ba8e34333297e06f59701df95" translate="yes" xml:space="preserve">
          <source>SQLite is not particular about the text it receives and is more than happy to process text strings that are not normalized or even well-formed UTF-8 or UTF-16. Thus, programmers who want to store IS08859 data can do so using the UTF-8 interfaces. As long as no attempts are made to use a UTF-16 collating sequence or SQL function, the byte sequence of the text will not be modified in any way.</source>
          <target state="translated">SQLite は、受信するテキストにこだわりはなく、正規化されていないテキスト文字列や、UTF-8 や UTF-16 ですら整形されていないテキスト文字列を喜んで処理します。したがって、IS08859 データを保存したいプログラマは、UTF-8 インターフェイスを使用して処理することができます。UTF-16照合シーケンスやSQL関数を使用しようとしない限り、テキストのバイト列はいかなる方法でも変更されません。</target>
        </trans-unit>
        <trans-unit id="79f629ab8f652eed86f8d0cea408ad231ec0a7de" translate="yes" xml:space="preserve">
          <source>SQLite is not particular about the text it receives and is more than happy to process text strings that are not normalized or even well-formed UTF-8 or UTF-16. Thus, programmers who want to store ISO8859 data can do so using the UTF-8 interfaces. As long as no attempts are made to use a UTF-16 collating sequence or SQL function, the byte sequence of the text will not be modified in any way.</source>
          <target state="translated">SQLite は受信するテキストにこだわりはなく、正規化されていないテキスト文字列や、UTF-8 や UTF-16 ですら整形されていないテキスト文字列を喜んで処理します。したがって、ISO8859 データを保存したいプログラマは、UTF-8 インタフェースを使用して処理することができます。UTF-16 照合シーケンスや SQL 関数を使用しようとしない限り、テキストのバイト列はいかなる方法でも変更されません。</target>
        </trans-unit>
        <trans-unit id="c1f069bbbe7e83bd0e5742fa278486eb680133a8" translate="yes" xml:space="preserve">
          <source>SQLite is not the perfect application file format for every situation. But in many cases, SQLite is a far better choice than either a custom file format, a pile-of-files, or a wrapped pile-of-files. SQLite is a high-level, stable, reliable, cross-platform, widely-deployed, extensible, performant, accessible, concurrent file format. It deserves your consideration as the standard file format on your next application design.</source>
          <target state="translated">SQLite はあらゆる状況に対応する完璧なアプリケーションファイル形式ではありません。しかし、多くの場合、SQLiteはカスタムファイルフォーマットやファイルの山、ラップされたファイルの山よりもはるかに良い選択です。SQLite は、高レベルで、安定しており、信頼性が高く、クロスプラットフォームで、広く展開されており、拡張性があり、パフォーマンスが高く、アクセス可能で、同時実行可能なファイルフォーマットです。SQLiteは、次のアプリケーション設計では標準ファイル形式として考慮されるに値するものです。</target>
        </trans-unit>
        <trans-unit id="e9638ccd4cc256f849e2db07526c184593398229" translate="yes" xml:space="preserve">
          <source>SQLite is often used as the on-disk file format for desktop applications such as version control systems, financial analysis tools, media cataloging and editing suites, CAD packages, record keeping programs, and so forth. The traditional File/Open operation calls sqlite3_open() to attach to the database file. Updates happen automatically as application content is revised so the File/Save menu option becomes superfluous. The File/Save_As menu option can be implemented using the &lt;a href=&quot;backup&quot;&gt;backup API&lt;/a&gt;.</source>
          <target state="translated">SQLiteは、バージョン管理システム、財務分析ツール、メディアのカタログ化および編集スイート、CADパッケージ、記録管理プログラムなどのデスクトップアプリケーションのディスク上のファイル形式としてよく使用されます。従来のFile / Open操作では、sqlite3_open（）を呼び出してデータベースファイルにアタッチします。アプリケーションの内容が変更されると更新が自動的に行われるため、[ファイル]メニューの[保存]オプションは不要になります。File / Save_Asメニューオプションは、&lt;a href=&quot;backup&quot;&gt;バックアップAPI&lt;/a&gt;を使用して実装できます。</target>
        </trans-unit>
        <trans-unit id="f01574bffbe492a08f6a39612436763f1dce6eab" translate="yes" xml:space="preserve">
          <source>SQLite is one of many open-source projects that OSS Fuzz tests. The &lt;a href=&quot;https://www.sqlite.org/src/file/test/ossfuzz.c&quot;&gt;test/ossfuzz.c&lt;/a&gt; source file in the SQLite repository is SQLite's interface to OSS fuzz.</source>
          <target state="translated">SQLiteは、OSS Fuzzがテストする多くのオープンソースプロジェクトの1つです。SQLiteリポジトリ内の&lt;a href=&quot;https://www.sqlite.org/src/file/test/ossfuzz.c&quot;&gt;test / ossfuzz.c&lt;/a&gt;ソースファイルは、OSSファズへのSQLiteのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="bf60766f31de04598304b77a31a30aab178aeaf9" translate="yes" xml:space="preserve">
          <source>SQLite is one of the &lt;a href=&quot;https://sqlite.org/mostdeployed.html&quot;&gt;most used&lt;/a&gt; software libraries in the world. There are literally tens of billions of SQLite database files in use daily, on smartphones and gadgets and in desktop applications. SQLite is &lt;a href=&quot;testing&quot;&gt;carefully tested&lt;/a&gt; and proven reliable. It is not a component that needs much tuning or debugging, allowing developers to stay focused on application logic.</source>
          <target state="translated">SQLiteは、世界で&lt;a href=&quot;https://sqlite.org/mostdeployed.html&quot;&gt;最も使用されている&lt;/a&gt;ソフトウェアライブラリの1つです。スマートフォンやガジェット、デスクトップアプリケーションでは、文字通り数百億ものSQLiteデータベースファイルが毎日使用されています。SQLiteは&lt;a href=&quot;testing&quot;&gt;慎重にテストされ&lt;/a&gt;、信頼性が証明されています。多くの調整やデバッグを必要とするコンポーネントではないため、開発者はアプリケーションロジックに集中できます。</target>
        </trans-unit>
        <trans-unit id="b472863a9267f026cee0ca0b35a15991ef89b036" translate="yes" xml:space="preserve">
          <source>SQLite is open source. This gives many people the idea that it is not well tested as commercial software and is perhaps unreliable. But that impression is false. SQLite has exhibited very high reliability in the field and a very low defect rate, especially considering how rapidly it is evolving. The quality of SQLite is achieved in part by careful code design and implementation. But extensive testing also plays a vital role in maintaining and improving the quality of SQLite. This document has summarized the testing procedures that every release of SQLite undergoes with the hope of inspiring confidence that SQLite is suitable for use in mission-critical applications.</source>
          <target state="translated">SQLiteはオープンソースです。そのため、多くの人は、商用ソフトウェアのように十分にテストされておらず、信頼性が低いのではないかという考えを持っています。しかし、そのような印象は間違っています。SQLite は現場では非常に高い信頼性を示しており、欠陥率は非常に低く、特に急速に進化していることを考慮すると、非常に低いものです。SQLite の品質は、慎重なコード設計と実装によって部分的に達成されています。しかし、SQLiteの品質を維持・向上させるためには、広範なテストも重要な役割を果たしています。このドキュメントでは、SQLite がミッションクリティカルなアプリケーションでの使用に適しているという確信を与えることを目的として、SQLite の各リリースで行われるテスト手順をまとめました。</target>
        </trans-unit>
        <trans-unit id="dbc3c1fb569cecbb959acf32375d7a9409c9e7db" translate="yes" xml:space="preserve">
          <source>SQLite is required to &lt;b&gt;implement atomic and durable transactions&lt;/b&gt; (the 'A' and 'D' from the ACID acronym), even if an application, operating system or power failure occurs midway through or shortly after updating a database file.</source>
          <target state="translated">SQLiteは、アプリケーション、オペレーティングシステム、または電源障害がデータベースファイルの途中または直後に発生した場合でも、&lt;b&gt;アトミックで永続的なトランザクション&lt;/b&gt;（ACIDの頭字語の「A」および「D」）を&lt;b&gt;実装する&lt;/b&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="362f767a2655b7418135c488c8146a1c344658d9" translate="yes" xml:space="preserve">
          <source>SQLite is required to &lt;b&gt;implement isolated transactions&lt;/b&gt; (the 'I' from the ACID acronym).</source>
          <target state="translated">SQLiteは、&lt;b&gt;分離されたトランザクション&lt;/b&gt;（ACIDの頭字語の「I」）を&lt;b&gt;実装する&lt;/b&gt;ために必要です。</target>
        </trans-unit>
        <trans-unit id="b642e02aa031422407ba1e2eb9a921d7af9484d1" translate="yes" xml:space="preserve">
          <source>SQLite is resilient in the face of corrupt inputs, including maliciously designed database files and SQL strings. Extensive fuzz-testing ensures that corrupt inputs will not lead to crashes or undefined behavior, but will instead cause sensible errors to be reported back to the application.</source>
          <target state="translated">SQLite は、悪意を持って設計されたデータベースファイルや SQL 文字列などの破損した入力に対しても耐性を持っています。広範なファズテストにより、破損した入力がクラッシュや定義されていない動作を引き起こすことはなく、代わりにアプリケーションに報告される賢明なエラーを引き起こすことが保証されています。</target>
        </trans-unit>
        <trans-unit id="80231535020620422bab08d0c25caafae2be3ab2" translate="yes" xml:space="preserve">
          <source>SQLite is resilient in the face of corrupt inputs, including maliciously designed database files and SQL strings. Extensive fuzz-testing ensures that corrupt inputs will not lead to crashes or undefined behavior, but will instead cause sensible errors to be reported back to the application. (&lt;a href=&quot;security&quot;&gt;More...&lt;/a&gt;)</source>
          <target state="translated">SQLiteは、悪意を持って設計されたデータベースファイルやSQL文字列など、破損した入力に直面しても回復力があります。広範なファズテストにより、破損した入力がクラッシュや未定義の動作を引き起こさないことが保証されますが、代わりに、適切なエラーがアプリケーションに報告されます。（&lt;a href=&quot;security&quot;&gt;もっと...&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f5423cc6a7fa9f9530e2a51fe8a881bbb932c031" translate="yes" xml:space="preserve">
          <source>SQLite is slower at creating new indices. This is not a huge problem (since new indices are not created very often) but it is something that is being worked on. Hopefully, future versions of SQLite will do better here.</source>
          <target state="translated">SQLite は新しいインデックスの作成が遅いです。これは大きな問題ではありませんが(新しいインデックスはあまり頻繁に作成されないので)、現在取り組んでいるところです。願わくば、将来のバージョンの SQLite がこの点を改善してくれることを期待しています。</target>
        </trans-unit>
        <trans-unit id="54a5009f6cdb462eb942bac870b07db8a1670fab" translate="yes" xml:space="preserve">
          <source>SQLite is slower than the other databases when it comes to dropping tables. This probably is because when SQLite drops a table, it has to go through and erase the records in the database file that deal with that table. MySQL and PostgreSQL, on the other hand, use separate files to represent each table so they can drop a table simply by deleting a file, which is much faster.</source>
          <target state="translated">SQLiteはテーブルの削除に関しては、他のデータベースよりも遅いです。これは、SQLiteがテーブルを削除するときに、そのテーブルを扱うデータベースファイル内のレコードを消去しなければならないからだと思われます。一方、MySQLやPostgreSQLは、各テーブルを表すために別々のファイルを使用しているため、ファイルを削除するだけでテーブルを削除することができ、これははるかに高速です。</target>
        </trans-unit>
        <trans-unit id="d7366e08ffe20946fd76e62d62945bcc30d399f9" translate="yes" xml:space="preserve">
          <source>SQLite is threadsafe because it uses mutexes to serialize access to common data structures. However, the work of acquiring and releasing these mutexes will slow SQLite down slightly. Hence, if you do not need SQLite to be threadsafe, you should disable the mutexes for maximum performance. See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">SQLiteはミューテックスを使用して一般的なデータ構造へのアクセスをシリアル化するため、スレッドセーフです。ただし、これらのミューテックスを取得および解放する作業により、SQLiteの速度が若干低下します。したがって、SQLiteをスレッドセーフにする必要がない場合は、ミューテックスを無効にしてパフォーマンスを最大化する必要があります。詳細については、&lt;a href=&quot;threadsafe&quot;&gt;スレッドモードの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8cd3013ad5660f204f66ad31e2c31dd8240e6bb5" translate="yes" xml:space="preserve">
          <source>SQLite is threadsafe. We make this concession since many users choose to ignore the advice given in the previous paragraph. But in order to be thread-safe, SQLite must be compiled with the SQLITE_THREADSAFE preprocessor macro set to 1. Both the Windows and Linux precompiled binaries in the distribution are compiled this way. If you are unsure if the SQLite library you are linking against is compiled to be threadsafe you can call the &lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe()&lt;/a&gt; interface to find out.</source>
          <target state="translated">SQLiteはスレッドセーフです。多くのユーザーが前の段落で与えられたアドバイスを無視することを選択するので、私たちはこの譲歩をします。ただし、スレッドセーフにするためには、SQLiteをSQLITE_THREADSAFEプリプロセッサマクロを1に設定してコンパイルする必要があります。ディストリビューションのWindowsおよびLinuxのプリコンパイル済みバイナリは、この方法でコンパイルされます。リンク先のSQLiteライブラリがスレッドセーフであるようにコンパイルされているかどうか不明な場合は、&lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe（）&lt;/a&gt;インターフェイスを呼び出して調べることができます。</target>
        </trans-unit>
        <trans-unit id="39eff500cd7ce6dc1730207961cc564613eaac4f" translate="yes" xml:space="preserve">
          <source>SQLite is transactional, meaning that multiple changes can be grouped together such that either all or none of them occur, and so that the changes can be rolled back if a problem is found prior to commit. This allows an application to make a change incrementally, then run various sanity and consistency checks on the resulting data prior to committing the changes to disk. The &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; DVCS &lt;a href=&quot;http://www.fossil-scm.org/fossil/doc/tip/www/selfcheck.wiki&quot;&gt;uses this technique&lt;/a&gt; to verify that no repository history has been lost prior to each change.</source>
          <target state="translated">SQLiteはトランザクション対応です。つまり、複数の変更をグループ化して、すべてまたはまったく発生しないようにし、コミット前に問題が見つかった場合に変更をロールバックできるようにします。これにより、アプリケーションは変更を段階的に行い、変更をディスクにコミットする前に、結果のデータに対してさまざまな健全性および整合性チェックを実行できます。&lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;化石&lt;/a&gt; DVCSは、&lt;a href=&quot;http://www.fossil-scm.org/fossil/doc/tip/www/selfcheck.wiki&quot;&gt;この技術を使用しています&lt;/a&gt;何のリポジトリ履歴がそれぞれ変更する前に失われていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="431631b26b413c56876cd9120450d97fb29610b5" translate="yes" xml:space="preserve">
          <source>SQLite is typeless for the purpose of deciding what data is allowed to be stored in a column. But some notion of type comes into play when sorting and comparing data. For these purposes, a column or an expression can be one of two types: &lt;b&gt;numeric&lt;/b&gt; and &lt;b&gt;text&lt;/b&gt;. The sort or comparison may give different results depending on which type of data is being sorted or compared.</source>
          <target state="translated">SQLiteは、列に格納できるデータを決定するために型なしです。しかし、データの並べ替えや比較を行う際には、タイプに関する何らかの概念が作用します。これらの目的のために、列または式は、&lt;b&gt;数値&lt;/b&gt;と&lt;b&gt;テキストの&lt;/b&gt; 2つのタイプのいずれかになり&lt;b&gt;ます&lt;/b&gt;。並べ替えまたは比較では、並べ替えまたは比較されるデータの種類に応じて、異なる結果が得られる場合があります。</target>
        </trans-unit>
        <trans-unit id="4a51a3f7b3710595af5efe3e3c4508040aaab8c5" translate="yes" xml:space="preserve">
          <source>SQLite is very flexible with regard to datatypes.</source>
          <target state="translated">SQLiteはデータ型に関して非常に柔軟性があります。</target>
        </trans-unit>
        <trans-unit id="09d4e4b5b66b8b33e92f1d4cdf491ca8f18b646b" translate="yes" xml:space="preserve">
          <source>SQLite is very good at doing INSERTs within a transaction, which probably explains why it is so much faster than the other databases at this test.</source>
          <target state="translated">SQLiteはトランザクション内でINSERTを行うのが非常に得意なので、このテストでは他のデータベースよりも高速な理由が説明できます。</target>
        </trans-unit>
        <trans-unit id="f9422ec4c9c62f3dc785dbb76b2bd0e31c1307c2" translate="yes" xml:space="preserve">
          <source>SQLite is written in portable C code. Development work occurs on a mix of Linux, Mac, and Windows workstations. The developers use command-line tools and eschew integrated development environments (IDEs) whenever possible. All developers are expected to be fluent with the unix command-line.</source>
          <target state="translated">SQLite はポータブルな C コードで書かれています。開発作業は、Linux、Mac、Windowsのワークステーションで行われています。開発者はコマンドラインツールを使用し、可能な限り統合開発環境 (IDE)を使用しません。すべての開発者は unix コマンドラインに精通していることが期待されています。</target>
        </trans-unit>
        <trans-unit id="8e1e2d740adcf0319f2b64ec4840724790f32367" translate="yes" xml:space="preserve">
          <source>SQLite itself does not pay any attention to environment variables in this case, though presumably the GetTempPath() system call does. The search algorithm is different for CYGWIN builds. Check the source code for details.</source>
          <target state="translated">SQLite 自体はこの場合、環境変数には注意を払っていませんが、おそらく GetTempPath()システムコールでは注意を払っています。検索アルゴリズムはCYGWINビルドでは異なります。詳細はソースコードを確認してください。</target>
        </trans-unit>
        <trans-unit id="04e08b220ef652d98be99d5e0babd01a982e4f55" translate="yes" xml:space="preserve">
          <source>SQLite itself is in the &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;public domain&lt;/a&gt; and can be used for any purpose. But TH3 is proprietary and requires a license.</source>
          <target state="translated">SQLite自体は&lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;パブリックドメインに&lt;/a&gt;あり、あらゆる目的に使用できます。ただし、TH3は独自仕様であり、ライセンスが必要です。</target>
        </trans-unit>
        <trans-unit id="d3d3e9abb52e314e484928a8bc96db9c3ff377a7" translate="yes" xml:space="preserve">
          <source>SQLite just works.</source>
          <target state="translated">SQLiteはただ動くだけです。</target>
        </trans-unit>
        <trans-unit id="721ec90166a13c1e4ac7e7556c93fcbe5d07f6e2" translate="yes" xml:space="preserve">
          <source>SQLite keeps track of the largest ROWID using an &lt;a href=&quot;fileformat2#intschema&quot;&gt;internal table&lt;/a&gt; named &quot;&lt;a href=&quot;fileformat2#seqtab&quot;&gt;sqlite_sequence&lt;/a&gt;&quot;. The sqlite_sequence table is created and initialized automatically whenever a normal table that contains an AUTOINCREMENT column is created. The content of the sqlite_sequence table can be modified using ordinary UPDATE, INSERT, and DELETE statements. But making modifications to this table will likely perturb the AUTOINCREMENT key generation algorithm. Make sure you know what you are doing before you undertake such changes. The sqlite_sequence table does not track ROWID changes associated with UPDATE statement, only INSERT statements.</source>
          <target state="translated">SQLiteは、「&lt;a href=&quot;fileformat2#seqtab&quot;&gt;sqlite_sequence&lt;/a&gt;」という名前の&lt;a href=&quot;fileformat2#intschema&quot;&gt;内部テーブル&lt;/a&gt;を使用して最大のROWIDを追跡します。 sqlite_sequenceテーブルは、AUTOINCREMENT列を含む通常のテーブルが作成されるたびに、自動的に作成および初期化されます。 sqlite_sequenceテーブルの内容は、通常のUPDATE、INSERT、DELETEステートメントを使用して変更できます。ただし、このテーブルを変更すると、AUTOINCREMENTキー生成アルゴリズムが混乱する可能性があります。このような変更を行う前に、自分が何をしているかを確認してください。 sqlite_sequenceテーブルは、UPDATEステートメントに関連付けられたROWIDの変更を追跡せず、INSERTステートメントのみを追跡します。</target>
        </trans-unit>
        <trans-unit id="1fdbbf49537d5896499e4f580d89d3d977843a76" translate="yes" xml:space="preserve">
          <source>SQLite lets me insert a string into a database column of type integer!</source>
          <target state="translated">SQLiteを使うと、integer型のデータベースのカラムに文字列を挿入することができます。</target>
        </trans-unit>
        <trans-unit id="e525cc6d45550b4b1a265dd25df50cc71c4474b0" translate="yes" xml:space="preserve">
          <source>SQLite limits the depth of recursion of triggers in order to prevent a statement involving recursive triggers from using an unbounded amount of memory.</source>
          <target state="translated">SQLite では、再帰的なトリガーを含むステートメントが無制限のメモリ量を使用するのを防ぐために、トリガーの再帰の深さを制限しています。</target>
        </trans-unit>
        <trans-unit id="bb5977c1cc25afeb2b0e4bd5a50680da96bdd766" translate="yes" xml:space="preserve">
          <source>SQLite makes a copy of the content of the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object so the object can be modified after the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; call returns.</source>
          <target state="translated">SQLiteは&lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt;オブジェクトの内容のコピーを作成するため、&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;呼び出しが戻った後にオブジェクトを変更できます。</target>
        </trans-unit>
        <trans-unit id="b1791cae0a6c7259639f6781e55e553d509ec456" translate="yes" xml:space="preserve">
          <source>SQLite makes no guarantees about the order of results if a SELECT omits the ORDER BY clause. Even so, the order of results does not change from one run to the next, and so many applications mistakenly come to depend on the arbitrary output order whatever that order happens to be. However, sometimes new versions of SQLite will contain optimizer enhancements that will cause the output order of queries without ORDER BY clauses to shift. When that happens, applications that depend on a certain output order might malfunction. By running the application multiple times with this pragma both disabled and enabled, cases where the application makes faulty assumptions about output order can be identified and fixed early, reducing problems that might be caused by linking against a different version of SQLite.</source>
          <target state="translated">SQLite は、SELECT が ORDER BY 節を省略した場合の結果の順序を保証しません。そのため、多くのアプリケーションでは、結果の順序がどのようなものであろうと、誤って任意の出力順序に依存してしまうことがあります。しかし、SQLiteの新しいバージョンではオプティマイザの機能強化が行われており、ORDER BY句のないクエリの出力順序がずれることがあります。このような場合、特定の出力順に依存するアプリケーションが誤動作する可能性があります。このプラグマを無効にしたり有効にしたりしてアプリケーションを何度も実行することで、アプリケーションが出力順について誤った仮定をしているケースを早期に特定して修正することができ、異なるバージョンのSQLiteにリンクすることで発生する可能性のある問題を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="e0ac4bc4025ad0a187612fd2738f58e087756b50" translate="yes" xml:space="preserve">
          <source>SQLite manipulates the contents of the file-system using a combination of the following four types of operation:</source>
          <target state="translated">SQLiteは、以下の4種類の操作を組み合わせてファイルシステムの内容を操作します。</target>
        </trans-unit>
        <trans-unit id="cd796a8c085bea850ea98c0f816e6ce6c1055032" translate="yes" xml:space="preserve">
          <source>SQLite may attempt to convert values between the storage classes INTEGER, REAL, and/or TEXT before performing a comparison. Whether or not any conversions are attempted before the comparison takes place depends on the type affinity of the operands.</source>
          <target state="translated">SQLiteは、比較を実行する前に、ストレージ・クラスのINTEGER、REAL、および/またはTEXT間で値の変換を試みることがあります。比較が行われる前に変換が試みられるかどうかは、オペランドの型の親和性に依存します。</target>
        </trans-unit>
        <trans-unit id="86322113b50354d8e93e1a8d65dbbd7e579ef951" translate="yes" xml:space="preserve">
          <source>SQLite may make use of transient indices to implement SQL language features such as:</source>
          <target state="translated">SQLite は、以下のような SQL 言語の機能を実装するために、過渡的なインデックスを使用することがあります。</target>
        </trans-unit>
        <trans-unit id="692bd1d4aef60fc758b11851675895cb10aedde7" translate="yes" xml:space="preserve">
          <source>SQLite might also add one of the following flags to the xOpen method:</source>
          <target state="translated">SQLite は、以下のフラグのいずれかを xOpen メソッドに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="945af510f90e6578c1019b41a7ec0b83b8498700" translate="yes" xml:space="preserve">
          <source>SQLite might use a skip-scan on an index if it knows that the first one or more columns contain many duplication values. If there are too few duplicates in the left-most columns of the index, then it would be faster to simply step ahead to the next value, and thus do a full table scan, than to do a binary search on an index to locate the next left-column value.</source>
          <target state="translated">SQLite は、最初の 1 つ以上の列に多くの重複値が含まれていることを知っている場合、インデックスのスキップスキャンを使用することがあります。インデックスの左端の列に重複する値が少なすぎる場合は、次の左列の値を見つけるためにインデックスのバイナリ検索を行うよりも、単純に次の値に進んでテーブル全体のスキャンを行った方が早いでしょう。</target>
        </trans-unit>
        <trans-unit id="ae7f6237fc49c4f40b5f79296508bbf096f1c300" translate="yes" xml:space="preserve">
          <source>SQLite must see the journal files in order to recover from a crash or power failure. If the &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;hot journal files&lt;/a&gt; are moved, deleted, or renamed after a crash or power failure, then automatic recovery will not work and the database may go corrupt.</source>
          <target state="translated">SQLiteは、クラッシュまたは電源障害から回復するために、ジャーナルファイルを確認する必要があります。場合は&lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;、ホットジャーナルファイルは&lt;/a&gt;、移動、削除、またはクラッシュや停電の後に名前が変更され、その後、自動復旧作業やデータベースが破損して行くかもしれません。</target>
        </trans-unit>
        <trans-unit id="5e833260d531c8e2e412472ff105b04979b5cf7c" translate="yes" xml:space="preserve">
          <source>SQLite mutexes can also be disabled at run-time using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface. To completely disable all mutexing, the application can invoke:</source>
          <target state="translated">SQLite mutexは、実行時に&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;インターフェースを使用して無効にすることもできます。すべてのミューテックスを完全に無効にするために、アプリケーションは以下を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="17328ec696bc91982c93295b65652b033f2ec296" translate="yes" xml:space="preserve">
          <source>SQLite needs to know if the native byte order of the target CPU is big-endian or little-ending. The SQLITE_BYTEORDER preprocessor is set to 4321 for big-endian machines and 1234 for little-endian machines, or it can be 0 to mean that the byte order must be determined at run-time. There are #ifdefs in the code that set SQLITE_BYTEORDER automatically for all common platforms and compilers. However, it may be advantageous to set SQLITE_BYTEORDER appropriately when compiling SQLite for obscure targets. If the target byte order cannot be determined at compile-time, then SQLite falls back to doing run-time checks, which always work, though with a small performance penalty.</source>
          <target state="translated">SQLite は、ターゲット CPU のネイティブバイトオーダーがビッグエンディアンなのかリトルエンディアンなのかを知る必要があります。SQLITE_BYTEORDER プリプロセッサは、ビッグエンディアンのマシンでは 4321、リトルエンディアンのマシンでは 1234 に設定されています。コードの中には、すべての一般的なプラットフォームとコンパイラに対してSQLITE_BYTEORDERを自動的に設定する#ifdefsがあります。しかし、曖昧なターゲットのためにSQLiteをコンパイルする場合は、SQLITE_BYTEORDERを適切に設定した方が有利な場合があります。コンパイル時にターゲットのバイトオーダーを決定できない場合、SQLite はランタイムチェックを行うことになります。</target>
        </trans-unit>
        <trans-unit id="eec4b7f1b229092638c755d579865f53adc26ae9" translate="yes" xml:space="preserve">
          <source>SQLite never assumes atomic page writes &lt;em&gt;in its default configurations&lt;/em&gt;. But a custom &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; can set one of the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_ATOMIC&lt;/a&gt; bits in the result of the xDeviceCharacteristic() method and then SQLite will assume that page writes are atomic. The application must supply a custom VFS to accomplish this, however, since none of the standard VFSes will ever set any of the atomic bits in the xDeviceCharacteristics() vector.</source>
          <target state="translated">SQLiteは&lt;em&gt;、デフォルトの構成で&lt;/em&gt;アトミックページ書き込み&lt;em&gt;を&lt;/em&gt;想定していません。しかし、カスタム&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;は、xDeviceCharacteristic（）メソッドの結果で&lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_ATOMIC&lt;/a&gt;ビットの1つを設定でき、SQLiteはページ書き込みがアトミックであると想定します。ただし、標準VFSはxDeviceCharacteristics（）ベクトルにアトミックビットを設定しないため、アプリケーションはこれを実現するためにカスタムVFSを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e50c611c2a64f7dc9dc711887d5a6dcc24f10de" translate="yes" xml:space="preserve">
          <source>SQLite never assumes that database page writes are atomic, regardless of the PSOW setting.&lt;sup&gt;(1)&lt;/sup&gt; And hence SQLite is always able to automatically recover from torn pages induced by a crash. Enabling PSOW does not decrease SQLite's ability to recover from a torn page.</source>
          <target state="translated">SQLiteは、PSOWの設定に関係なく、データベースページの書き込みがアトミックであるとは想定していません。&lt;sup&gt;（1）&lt;/sup&gt;したがって、SQLiteは常に、クラッシュによって引き起こされた破損したページから自動的に回復できます。PSOWを有効にしても、破損したページから回復するSQLiteの機能は低下しません。</target>
        </trans-unit>
        <trans-unit id="a73150dbd46d3caaecfb727306a8488e11089c46" translate="yes" xml:space="preserve">
          <source>SQLite normally stores all content in a single disk file. However, while performing a transaction, information necessary to recover the database following a crash or power failure is stored in auxiliary journal files. Such journal files are described as &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;&quot;hot&quot;&lt;/a&gt;. The journal files have the same name as the original database file with the addition of &lt;code&gt;-journal&lt;/code&gt; or &lt;code&gt;-wal&lt;/code&gt; suffix.</source>
          <target state="translated">SQLiteは通常、すべてのコンテンツを単一のディスクファイルに格納します。ただし、トランザクションの実行中、クラッシュまたは停電後にデータベースを回復するために必要な情報は、補助ジャーナルファイルに保存されます。このようなジャーナルファイルは&lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;&quot;ホット&quot;と&lt;/a&gt;記述されます。ジャーナルファイルは、元のデータベースファイルと同じ名前に &lt;code&gt;-journal&lt;/code&gt; または &lt;code&gt;-wal&lt;/code&gt; サフィックスが追加されています。</target>
        </trans-unit>
        <trans-unit id="7c2764b7ab8c8fe2115410e837d5a49ba37682ad" translate="yes" xml:space="preserve">
          <source>SQLite now honors the UNIQUE keyword in CREATE UNIQUE INDEX. Primary keys are required to be unique.</source>
          <target state="translated">SQLiteはCREATE UNIQUE INDEXのUNIQUEキーワードを重視するようになりました。主キーは一意であることが要求されます。</target>
        </trans-unit>
        <trans-unit id="b528bcd272bd4532c5fdb40cce96437b126ffc1d" translate="yes" xml:space="preserve">
          <source>SQLite now implements all of its built-in functions using this interface. For additional information and examples on how to create new SQL functions, review the SQLite source code in the file &lt;b&gt;func.c&lt;/b&gt;.</source>
          <target state="translated">SQLiteは、このインターフェースを使用して組み込み関数をすべて実装しています。新しいSQL関数の作成方法に関する追加情報と例については、ファイル&lt;b&gt;func.cの&lt;/b&gt; SQLiteソースコードを確認して&lt;b&gt;ください&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="741c17c0aae3a15bc76f9c3b0feb23ceb419b07b" translate="yes" xml:space="preserve">
          <source>SQLite only supports one writer at a time per database file. But in most cases, a write transaction only takes milliseconds and so multiple writers can simply take turns. SQLite will handle more write concurrency that many people suspect. Nevertheless, client/server database systems, because they have a long-running server process at hand to coordinate access, can usually handle far more write concurrency than SQLite ever will.</source>
          <target state="translated">SQLiteはデータベースファイルごとに一度に1つのライターしかサポートしていません。しかし、ほとんどの場合、書き込みトランザクションはミリ秒で済むため、複数のライターが交代で実行することができます。SQLite は、多くの人が疑っているよりも多くの書き込み同時実行を処理します。しかし、クライアント/サーバー型データベースシステムでは、アクセスを調整するために長時間稼働するサーバープロセスが手元にあるため、通常はSQLiteよりもはるかに多くの書き込み同時実行を処理することができます。</target>
        </trans-unit>
        <trans-unit id="5cbe82e83c540bf7ce2e1eadb8c5b0e3352775de" translate="yes" xml:space="preserve">
          <source>SQLite parses MATCH clauses (i.e. does not report a syntax error if you specify one), but does not enforce them. All foreign key constraints in SQLite are handled as if MATCH SIMPLE were specified.</source>
          <target state="translated">SQLiteはMATCH句を解析しますが(つまり、指定しても構文エラーは報告しません)、強制はしません。SQLite のすべての外部キー制約は、MATCH SIMPLE が指定された場合と同様に処理されます。</target>
        </trans-unit>
        <trans-unit id="c52abe2b4224c19357e2fb51b9983ebbf48e0915" translate="yes" xml:space="preserve">
          <source>SQLite parses expressions into a tree for processing. During code generation, SQLite walks this tree recursively. The depth of expression trees is therefore limited in order to avoid using too much stack space.</source>
          <target state="translated">SQLite は式を解析して処理用のツリーを作成します。コード生成時には、SQLite はこのツリーを再帰的に歩きます。そのため、スタックスペースの使いすぎを避けるために、式ツリーの深さは制限されています。</target>
        </trans-unit>
        <trans-unit id="52651f8e847f0d13fb28fbf85a29bff92a837a41" translate="yes" xml:space="preserve">
          <source>SQLite processes this by gathering all the output of query and then running that output through a sorter.</source>
          <target state="translated">SQLiteは、クエリのすべての出力を収集し、その出力をソーターを通して実行することでこれを処理します。</target>
        </trans-unit>
        <trans-unit id="fe52b85233b043a411af65af0db61d939caa292e" translate="yes" xml:space="preserve">
          <source>SQLite provides a number of enhancements to the SQL language not normally found in other database engines. The EXPLAIN keyword and manifest typing have already been mentioned above. SQLite also provides statements such as &lt;a href=&quot;lang_replace&quot;&gt;REPLACE&lt;/a&gt; and the &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause that allow for added control over the resolution of constraint conflicts. SQLite supports &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; and &lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt; commands that allow multiple independent databases to be used together in the same query. And SQLite defines APIs that allows the user to add new &lt;a href=&quot;c3ref/create_function&quot;&gt;SQL functions&lt;/a&gt; and &lt;a href=&quot;c3ref/create_collation&quot;&gt;collating sequences&lt;/a&gt;.</source>
          <target state="translated">SQLiteは、他のデータベースエンジンには通常見られないSQL言語に多くの拡張機能を提供します。 EXPLAINキーワードとマニフェストのタイプについては、すでに上記で説明しています。 SQLiteは、&lt;a href=&quot;lang_replace&quot;&gt;REPLACE&lt;/a&gt;や&lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt;句などのステートメントも提供し、制約の競合の解決をさらに制御できます。 SQLiteは、複数の独立したデータベースを同じクエリで一緒に使用できるようにする&lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;コマンドと&lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt;コマンドをサポートしています。 SQLiteは、ユーザーが新しい&lt;a href=&quot;c3ref/create_function&quot;&gt;SQL関数&lt;/a&gt;と&lt;a href=&quot;c3ref/create_collation&quot;&gt;照合シーケンス&lt;/a&gt;を追加できるAPIを定義しています。</target>
        </trans-unit>
        <trans-unit id="75b33c10e4ae0dc9caa69a9b718ca24a25cbfeba" translate="yes" xml:space="preserve">
          <source>SQLite provides isolation between operations in separate database connections. However, there is no isolation between operations that occur within the same database connection.</source>
          <target state="translated">SQLite は、別々のデータベース接続内での操作間の分離を提供します。しかし、同じデータベース接続内で発生する操作間の分離はありません。</target>
        </trans-unit>
        <trans-unit id="2a19562eb5d14931c391924201db74f2b2170510" translate="yes" xml:space="preserve">
          <source>SQLite provides the ability for advanced programmers to exercise control over the query plan chosen by the optimizer. One method for doing this is to fudge the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; results in the &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1&lt;/a&gt;, &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt;, and/or &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; tables. That approach is not recommended except for the one scenario described in the next paragraph.</source>
          <target state="translated">SQLiteは、上級プログラマーがオプティマイザが選択したクエリプランを制御する機能を提供します。これを行う1つの方法は、&lt;a href=&quot;lang_analyze&quot;&gt;ANALYZEの&lt;/a&gt;結果を&lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1&lt;/a&gt;、&lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt;、または&lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4の&lt;/a&gt;テーブルに変換することです。次の段落で説明する1つのシナリオを除いて、そのアプローチはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="069bcc6cce5ca3be769be9d7d5d38ef69d29560b" translate="yes" xml:space="preserve">
          <source>SQLite provides these two interfaces for reporting on the status of the &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc()&lt;/a&gt; routines, which form the built-in memory allocation subsystem.</source>
          <target state="translated">SQLiteは、組み込みのメモリ割り当てサブシステムを形成する&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free（）&lt;/a&gt;、および&lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc（）&lt;/a&gt;ルーチンのステータスをレポートするためのこれら2つのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="5be5efeb16b0a34b3e2605cf2967c7a9f9f4502b" translate="yes" xml:space="preserve">
          <source>SQLite provides these two interfaces for reporting on the status of the &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt;, and &lt;a href=&quot;free&quot;&gt;sqlite3_realloc()&lt;/a&gt; routines, which form the built-in memory allocation subsystem.</source>
          <target state="translated">SQLiteは、組み込みのメモリ割り当てサブシステムを形成する&lt;a href=&quot;free&quot;&gt;sqlite3_malloc（）&lt;/a&gt;、&lt;a href=&quot;free&quot;&gt;sqlite3_free（）&lt;/a&gt;、および&lt;a href=&quot;free&quot;&gt;sqlite3_realloc（）&lt;/a&gt;ルーチンのステータスをレポートするためのこれら2つのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="796f29585c117f2d84f8816579b3c6eeec799286" translate="yes" xml:space="preserve">
          <source>SQLite queries an implementation for file-system characteristics using the xDeviceCharacteristics() and xSectorSize() methods of the database file file-handle. These two methods are only ever called on file-handles open on database files. They are not called for</source>
          <target state="translated">SQLite は、データベースファイルのファイルハンドルの xDeviceCharacteristics()メソッドと xSectorSize()メソッドを使用して、ファイルシステムの特性を調べるための実装をクエリします。これらの二つのメソッドは、データベースファイル上で開かれているファイルハンドルに対してのみ呼び出されます。これらのメソッドは</target>
        </trans-unit>
        <trans-unit id="1001eecb9650b8452d3fe909aaa11b4544423e7e" translate="yes" xml:space="preserve">
          <source>SQLite reads and writes small blobs (for example, thumbnail images) &lt;a href=&quot;#approx&quot;&gt;35% faster&amp;sup1;&lt;/a&gt; than the same blobs can be read from or written to individual files on disk using fread() or fwrite().</source>
          <target state="translated">SQLite は、&lt;a href=&quot;#approx&quot;&gt;flob&lt;/a&gt;（）またはfwrite（）を使用してディスク上の個々のファイルから同じBlobを読み取ったり書き込んだりするよりも35％高速に小さなBlob（たとえば、サムネイル画像）を読み書きします。</target>
        </trans-unit>
        <trans-unit id="35d70ea0800f08a06761cd47e896b93495f4c9c9" translate="yes" xml:space="preserve">
          <source>SQLite responds gracefully to system errors. Obscure out-of-memory and I/O errors are reported back up to the application. These error reporting paths are all carefully tested to ensure they will always work.</source>
          <target state="translated">SQLite はシステムエラーにも優雅に応答します。曖昧なメモリ切れやI/Oエラーは、アプリケーションに報告されます。これらのエラー報告パスは、常に動作するように慎重にテストされています。</target>
        </trans-unit>
        <trans-unit id="23423829c41e2a290e377832f71a840c666910a0" translate="yes" xml:space="preserve">
          <source>SQLite seems to be a popular target for third-parties to fuzz. The developers hear about many attempts to fuzz SQLite and they do occasionally get bug reports found by independent fuzzers. All such reports are promptly fixed, so the product is improved and that the entire SQLite user community benefits. This mechanism of having many independent testers is similar to &lt;a href=&quot;https://en.wikipedia.org/wiki/Linus%27s_law&quot;&gt;Linus's law&lt;/a&gt;: &quot;given enough eyeballs, all bugs are shallow&quot;.</source>
          <target state="translated">SQLiteは、サードパーティがファズする人気のあるターゲットのようです。開発者はSQLiteをファジングしようとする多くの試みについて耳にし、独立したファザーによってバグレポートが見つかることがあります。このようなレポートはすべて迅速に修正されるため、製品が改善され、SQLiteユーザーコミュニティ全体にメリットがあります。多くの独立したテスターを持つこのメカニズムは、「十分な眼球があれば、すべてのバグは浅い」という&lt;a href=&quot;https://en.wikipedia.org/wiki/Linus%27s_law&quot;&gt;リーナスの法則に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="7c0c283f7e4e05e8236569bff26a222a275bf7f9" translate="yes" xml:space="preserve">
          <source>SQLite shall attempt to obtain an</source>
          <target state="translated">SQLite は</target>
        </trans-unit>
        <trans-unit id="fc4b26fb3a3dbd3635c28a9c88ca506e8fda6086" translate="yes" xml:space="preserve">
          <source>SQLite shall ensure that a</source>
          <target state="translated">SQLiteは</target>
        </trans-unit>
        <trans-unit id="68cdf5c9c482135a76a154ad68cc4116ae97dcc7" translate="yes" xml:space="preserve">
          <source>SQLite shall write the page data into the database file, using a single call to the xWrite method of the</source>
          <target state="translated">SQLiteは、ページデータをデータベースファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="740a9f7c5b70a08a25f10f9d2fba2d5ac406ba97" translate="yes" xml:space="preserve">
          <source>SQLite should never crash, overflow a buffer, leak memory, or exhibit any other harmful behavior, even when presented with maliciously malformed SQL inputs or database files. SQLite should always detect erroneous inputs and raise an error, not crash or corrupt memory. Any malfunction caused by an SQL input or database file is considered a serious bug and will be promptly addressed when brought to the attention of the SQLite developers. SQLite is extensively fuzz-tested to help ensure that it is resistant to these kinds of errors.</source>
          <target state="translated">SQLite は、悪意のある不正な SQL 入力やデータベースファイルが提示された場合でも、クラッシュしたり、バッファをオーバーフローさせたり、メモリを漏洩させたり、その他の有害な挙動を示すことがあってはなりません。SQLite は常に誤った入力を検出してエラーを発生させ、クラッシュしたりメモリを破損させたりしないようにしなければなりません。SQL 入力やデータベースファイルによる誤動作は深刻なバグとみなされ、SQLite 開発者の注意を喚起した場合には速やかに対処されます。SQLite は、これらの種類のエラーに対する耐性があることを確認するために、広範囲にファズテストが行われています。</target>
        </trans-unit>
        <trans-unit id="8394c39a29a6c802cb3baaa5a9c23f7e97f8a73c" translate="yes" xml:space="preserve">
          <source>SQLite solves this problem by using a</source>
          <target state="translated">SQLiteはこの問題を</target>
        </trans-unit>
        <trans-unit id="a17840ca9490a98d4558d4de1067d407ae4f9392" translate="yes" xml:space="preserve">
          <source>SQLite source code is managed using the &lt;a href=&quot;https://fossil-scm.org&quot;&gt;Fossil&lt;/a&gt; version control system. Fossil was written specifically to support SQLite development. Fossil provides both distributed version control and issue tracking.</source>
          <target state="translated">SQLiteのソースコードは、&lt;a href=&quot;https://fossil-scm.org&quot;&gt;Fossil&lt;/a&gt;バージョン管理システムを使用して管理されます。Fossilは、SQLite開発をサポートするために特別に作成されました。Fossilは、分散バージョン管理と問題追跡の両方を提供します。</target>
        </trans-unit>
        <trans-unit id="fa87de437d401b498b7d8eb223dcf3f87cf0893d" translate="yes" xml:space="preserve">
          <source>SQLite sources are maintained on three geographically dispersed servers:</source>
          <target state="translated">SQLiteソースは、地理的に分散した3つのサーバーで管理されています。</target>
        </trans-unit>
        <trans-unit id="e02e50c5282bb5b0a3a678ffe1050ddfbc21a817" translate="yes" xml:space="preserve">
          <source>SQLite stores an entire database within a single file, the format of which is described in the</source>
          <target state="translated">SQLite はデータベース全体を単一のファイルに格納します。</target>
        </trans-unit>
        <trans-unit id="1a0b29ed9ca13970622475438234a3b6eb2529a8" translate="yes" xml:space="preserve">
          <source>SQLite strives to implement ORDER BY clauses using a preexisting index. If an appropriate index already exists, SQLite will walk the index, rather than the underlying table, to extract the requested information, and thus cause the rows to come out in the desired order. But if SQLite cannot find an appropriate index it will evaluate the query and store each row in a transient index whose data is the row data and whose key is the ORDER BY terms. After the query is evaluated, SQLite goes back and walks the transient index from beginning to end in order to output the rows in the desired order.</source>
          <target state="translated">SQLite は、既存のインデックスを使用して ORDER BY 句を実装するように努めています。適切なインデックスが既に存在する場合、SQLite は基になるテーブルではなくインデックスをウォークして要求された情報を抽出します。しかし、SQLite が適切なインデックスを見つけられなかった場合、SQLite はクエリを評価し、各行をデータが行データで、キーが ORDER BY 用語である一時的なインデックスに格納します。クエリが評価された後、SQLiteは戻り、希望する順序で行を出力するために、トランジェントインデックスを最初から最後まで歩きます。</target>
        </trans-unit>
        <trans-unit id="79801eb3ee90b8531950935fcb700e5d7936b51b" translate="yes" xml:space="preserve">
          <source>SQLite strives to keep error logger traffic low and only send messages to the error logger when there really is something wrong. Applications might further cull the error message traffic by deliberately ignore certain classes of error messages that they do not care about. For example, an application that makes frequent database schema changes might want to ignore all SQLITE_SCHEMA errors.</source>
          <target state="translated">SQLite はエラーロガーのトラフィックを少なくし、本当に何か問題がある場合にのみエラーロガーにメッセージを送信するように努めています。アプリケーションは、気にしない特定のクラスのエラーメッセージを意図的に無視することで、エラーメッセージのトラフィックをさらに減らすことができます。例えば、頻繁にデータベーススキーマを変更するアプリケーションは、すべての SQLITE_SCHEMA エラーを無視したいかもしれません。</target>
        </trans-unit>
        <trans-unit id="76b7bc709cc1bfb344641faff586e57a6d874b11" translate="yes" xml:space="preserve">
          <source>SQLite strives to verify that every branch instruction makes a difference using &lt;a href=&quot;https://en.wikipedia.org/wiki/Mutation_testing&quot;&gt;mutation testing&lt;/a&gt;. &lt;a href=&quot;th3#muttest&quot;&gt;A script&lt;/a&gt; first compiles the SQLite source code into assembly language (using, for example, the -S option to gcc). Then the script steps through the generated assembly language and, one by one, changes each branch instruction into either an unconditional jump or a no-op, compiles the result, and verifies that the test suite catches the mutation.</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Mutation_testing&quot;&gt;ミューテーションテスト&lt;/a&gt;を使用して、すべての分岐命令が違いをもたらすことを確認するよう努めています。&lt;a href=&quot;th3#muttest&quot;&gt;スクリプトは、&lt;/a&gt;最初にSQLiteソースコードをアセンブリ言語にコンパイルします（たとえば、gccの-Sオプションを使用）。次に、スクリプトは生成されたアセンブリ言語を1つずつステップ実行し、各分岐命令を無条件ジャンプまたはno-opに変更し、結果をコンパイルして、テストスイートがミューテーションをキャッチすることを確認します。</target>
        </trans-unit>
        <trans-unit id="61116c736ec15bc5b4fb2fc6a87d1890ff944be5" translate="yes" xml:space="preserve">
          <source>SQLite supports a limited subset of ALTER TABLE. The ALTER TABLE command in SQLite allows the user to rename a table, to rename a column within a table, or to add a new column to an existing table.</source>
          <target state="translated">SQLite は ALTER TABLE の限られたサブセットをサポートしています。SQLite の ALTER TABLE コマンドでは、テーブルの名前を変更したり、テーブル内の列の名前を変更したり、既存のテーブルに新しい列を追加したりすることができます。</target>
        </trans-unit>
        <trans-unit id="9fa3301d9a603d43c374c933699b5b685c255796" translate="yes" xml:space="preserve">
          <source>SQLite supports an unlimited number of simultaneous readers, but it will only allow one writer at any instant in time. For many situations, this is not a problem. Writers queue up. Each application does its database work quickly and moves on, and no lock lasts for more than a few dozen milliseconds. But there are some applications that require more concurrency, and those applications may need to seek a different solution.</source>
          <target state="translated">SQLiteでは、同時読込数は無制限にサポートしていますが、ライターは瞬間的に1人しかできません。多くの状況では、これは問題ではありません。ライターは待ち行列を作ります。各アプリケーションはデータベースの作業を素早く行って次の作業に移り、ロックが数十ミリ秒以上続くことはありません。しかし、より多くの同時実行性を必要とするアプリケーションもあり、そのようなアプリケーションは別のソリューションを求める必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="362a3fd555302c4f1eaf77cb8e7f778518efb28e" translate="yes" xml:space="preserve">
          <source>SQLite supports five date and time functions as follows:</source>
          <target state="translated">SQLiteは以下の5つの日付と時間の関数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="91957f75e3d4e0fd1006ddb7500b87cbbf67b068" translate="yes" xml:space="preserve">
          <source>SQLite supports many &lt;a href=&quot;lang_corefunc&quot;&gt;simple&lt;/a&gt;, &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate&lt;/a&gt;, and &lt;a href=&quot;windowfunctions&quot;&gt;window&lt;/a&gt; SQL functions. For presentation purposes, simple functions are further subdivided into &lt;a href=&quot;lang_corefunc&quot;&gt;core functions&lt;/a&gt;, &lt;a href=&quot;lang_datefunc&quot;&gt;date-time functions&lt;/a&gt;, and &lt;a href=&quot;json1&quot;&gt;JSON functions&lt;/a&gt;. Applications can add new functions, written in C/C++, using the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; interface.</source>
          <target state="translated">SQLiteは、多くの&lt;a href=&quot;lang_corefunc&quot;&gt;単純な&lt;/a&gt;、&lt;a href=&quot;lang_aggfunc&quot;&gt;集約&lt;/a&gt;、および&lt;a href=&quot;windowfunctions&quot;&gt;ウィンドウ&lt;/a&gt; SQL関数をサポートしています。プレゼンテーションのために、単純な関数はさらに&lt;a href=&quot;lang_corefunc&quot;&gt;コア関数&lt;/a&gt;、&lt;a href=&quot;lang_datefunc&quot;&gt;日時関数&lt;/a&gt;、&lt;a href=&quot;json1&quot;&gt;JSON関数に&lt;/a&gt;細分されます。アプリケーションは、&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;インターフェイスを使用して、C / C ++で記述された新しい関数を追加できます。</target>
        </trans-unit>
        <trans-unit id="8df117e71ae2eb15e7237b9f17e42a408d843570" translate="yes" xml:space="preserve">
          <source>SQLite supports multiple simultaneous read transactions coming from separate database connections, possibly in separate threads or processes, but only one simultaneous write transaction.</source>
          <target state="translated">SQLite は、別々のデータベース接続からの複数の同時読み込みトランザクションをサポートしています。</target>
        </trans-unit>
        <trans-unit id="bb2625e03f106cbbdee7f3db77e634d01593acaa" translate="yes" xml:space="preserve">
          <source>SQLite supports the ability of an application to specify an alternative memory allocator at run-time by filling in an instance of the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object with pointers to the routines of the alternative implementation then registering the new alternative implementation using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface. For example:</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt;オブジェクトのインスタンスに代替実装のルーチンへのポインターを入力し、&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config（）&lt;/a&gt;インターフェースを使用して新しい代替実装を登録することにより、実行時に代替メモリアロケーターを指定するアプリケーションの機能をサポートします。例えば：</target>
        </trans-unit>
        <trans-unit id="017fb6b291ff89e609d155a096555bd5bbe2c94f" translate="yes" xml:space="preserve">
          <source>SQLite supports the following 11 built-in window functions:</source>
          <target state="translated">SQLite は以下の 11 の組み込みウィンドウ関数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="a02f0bb2b069910c39ea479587454cc5f38daf81" translate="yes" xml:space="preserve">
          <source>SQLite supports three different threading modes:</source>
          <target state="translated">SQLiteは3つの異なるスレッドモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="4014b7a930ff3b73114947a465a719ff6e29de6d" translate="yes" xml:space="preserve">
          <source>SQLite tries to detect misuse and report the misuse using this result code. However, there is no guarantee that the detection of misuse will be successful. Misuse detection is probabilistic. Applications should never depend on an SQLITE_MISUSE return value.</source>
          <target state="translated">SQLiteは、この結果コードを使って不正使用を検出し、不正使用を報告しようとします。しかし、誤用の検出が成功する保証はありません。誤用の検出は確率的なものです。アプリケーションは決して SQLITE_MISUSE の戻り値に依存してはいけません。</target>
        </trans-unit>
        <trans-unit id="84db0173921e2cbe9f6c615710bf66e073f79708" translate="yes" xml:space="preserve">
          <source>SQLite understands a real table to be a shadow table if all of the following are true:</source>
          <target state="translated">SQLite は、以下のすべてが真であれば、本物のテーブルをシャドウテーブルと理解します。</target>
        </trans-unit>
        <trans-unit id="89cbe958d74b15f24f6e6b8bc29bafc1643a7f0d" translate="yes" xml:space="preserve">
          <source>SQLite understands most of the standard SQL language. But it does &lt;a href=&quot;omitted&quot;&gt;omit some features&lt;/a&gt; while at the same time adding a few features of its own. This document attempts to describe precisely what parts of the SQL language SQLite does and does not support. A list of &lt;a href=&quot;lang_keywords&quot;&gt;SQL keywords&lt;/a&gt; is also provided. The SQL language syntax is described by &lt;a href=&quot;syntaxdiagrams&quot;&gt;syntax diagrams&lt;/a&gt;.</source>
          <target state="translated">SQLiteは、ほとんどの標準SQL言語を理解しています。ただし、&lt;a href=&quot;omitted&quot;&gt;一部の機能&lt;/a&gt;は省略されていますが、独自の機能がいくつか追加されています。このドキュメントでは、SQLiteがSQLiteでサポートする部分とサポートしない部分を正確に説明します。&lt;a href=&quot;lang_keywords&quot;&gt;SQLキーワードの&lt;/a&gt;リストも提供されます。SQL言語の構文は、&lt;a href=&quot;syntaxdiagrams&quot;&gt;構文図で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="76a4b937d814efc3107985206c3839b75a40d5c0" translate="yes" xml:space="preserve">
          <source>SQLite understands the following binary operators, in order from highest to lowest precedence:</source>
          <target state="translated">SQLite は以下のバイナリ演算子を、優先順位の高い順に理解します。</target>
        </trans-unit>
        <trans-unit id="de40d61f7018c5b48e3c644cbaef8bf7d8b66fd1" translate="yes" xml:space="preserve">
          <source>SQLite uses &lt;a href=&quot;datatype3&quot;&gt;dynamic typing&lt;/a&gt;. Content can be stored as INTEGER, REAL, TEXT, BLOB, or as NULL.</source>
          <target state="translated">SQLiteは&lt;a href=&quot;datatype3&quot;&gt;動的型付けを&lt;/a&gt;使用します。コンテンツは、INTEGER、REAL、TEXT、BLOB、またはNULLとして格納できます。</target>
        </trans-unit>
        <trans-unit id="2d9e9446caa946736bd5a01f0671ef69ec6cbe7e" translate="yes" xml:space="preserve">
          <source>SQLite uses &lt;code&gt;testcase()&lt;/code&gt; macros as described in the previous subsection to make sure that every condition in a bit-vector decision takes on every possible outcome. In this way, SQLite also achieves 100% MC/DC in addition to 100% branch coverage.</source>
          <target state="translated">SQLiteは、前のサブセクションで説明したように &lt;code&gt;testcase()&lt;/code&gt; マクロを使用して、ビットベクトル決定のすべての条件がすべての可能な結果を​​確実に実行するようにします。このように、SQLiteは100％のブランチカバレッジに加えて、100％のMC / DCも実現します。</target>
        </trans-unit>
        <trans-unit id="d2c828337726f1245db87b3b8499d82386b0261e" translate="yes" xml:space="preserve">
          <source>SQLite uses POSIX advisory locks to implement locking on Unix. On Windows it uses the LockFile(), LockFileEx(), and UnlockFile() system calls. SQLite assumes that these system calls all work as advertised. If that is not the case, then database corruption can result. One should note that POSIX advisory locking is known to be buggy or even unimplemented on many NFS implementations (including recent versions of Mac OS X) and that there are reports of locking problems for network filesystems under Windows. Your best defense is to not use SQLite for files on a network filesystem.</source>
          <target state="translated">SQLite は POSIX 勧告ロックを使用して Unix でロックを実装しています。Windows では LockFile()、LockFileEx()、UnlockFile()システムコールを使用します。SQLite は、これらのシステムコールがすべて広告どおりに動作することを前提としています。もしそうでない場合は、データベースが破損する可能性があります。POSIXのアドバイザリロックは、多くのNFS実装(Mac OS Xの最近のバージョンを含む)ではバグが多いか、実装されていないことが知られており、Windowsではネットワークファイルシステムのロックの問題が報告されていることに注意しなければなりません。最善の防御策は、ネットワークファイルシステム上のファイルに SQLite を使用しないことです。</target>
        </trans-unit>
        <trans-unit id="419f5d6983bf4618f2a5dc1a95258ff9924a25c1" translate="yes" xml:space="preserve">
          <source>SQLite uses a continuous integration process. The software is under constant enhancement and refinement. The latest trunk check-ins are frequently used internally for mission-critical operations.</source>
          <target state="translated">SQLite は継続的な統合プロセスを採用しています。ソフトウェアは常に強化と改良が行われています。最新のトランクチェックインは、ミッションクリティカルな運用のために内部で頻繁に使用されています。</target>
        </trans-unit>
        <trans-unit id="1a0520919cdd7c57c0662d504d1dbd0da4f6ed1c" translate="yes" xml:space="preserve">
          <source>SQLite uses a cost-based query planner. When there are two or more ways of solving the same query, SQLite tries to estimate the total amount of time needed to run the query using each plan, and then uses the plan with the lowest estimated cost. A cost is computed mostly from the estimated time, and so this case could go either way depending on the table size and what WHERE clause constraints were available, and so forth. But generally speaking, the indexed sort would probably be chosen, if for no other reason, because it does not need to accumulate the entire result set in temporary storage before sorting and thus uses much less temporary storage.</source>
          <target state="translated">SQLite はコストベースのクエリプランナーを使用します。同じクエリを解く方法が2つ以上ある場合、SQLiteはそれぞれのプランを使用してクエリを実行するのに必要な総時間を見積もろうとし、見積コストが最も低いプランを使用します。コストはほとんどが推定時間から計算されますので、テーブルのサイズやWHERE句の制約がどのようなものかなどによって、この場合はどちらかの方法になる可能性があります。しかし、一般的に言えば、他の理由がなければ、インデックス付きソートが選択されるでしょう。</target>
        </trans-unit>
        <trans-unit id="db9d581a988a96a28e53beca39811ace9da326e2" translate="yes" xml:space="preserve">
          <source>SQLite uses a more general dynamic type system. In SQLite, the datatype of a value is associated with the value itself, not with its container. The dynamic type system of SQLite is backwards compatible with the more common static type systems of other database engines in the sense that SQL statements that work on statically typed databases should work the same way in SQLite. However, the dynamic typing in SQLite allows it to do things which are not possible in traditional rigidly typed databases.</source>
          <target state="translated">SQLite では、より一般的な動的型システムを使用しています。SQLiteでは、値のデータ型はコンテナではなく値自体に関連付けられます。SQLiteの動的型付けシステムは、静的型付けされたデータベースで動作するSQL文はSQLiteでも同じように動作するはずです。しかし、SQLite の動的型付けにより、従来の厳密に型付けされたデータベースでは不可能だったことが可能になります。</target>
        </trans-unit>
        <trans-unit id="5e1b55e0fd7f9c8ac0ebdd30cf39af20d7f2d3b7" translate="yes" xml:space="preserve">
          <source>SQLite uses a page cache of recently read and written database pages. This page cache is used not just for the main database file but also for transient indices and tables stored in temporary files. If SQLite needs to use a temporary index or table and the &lt;a href=&quot;compile#temp_store&quot;&gt;SQLITE_TEMP_STORE&lt;/a&gt; compile-time parameter and the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt; are set to store temporary tables and index on disk, the information is still initially stored in memory in the page cache. The temporary file is not opened and the information is not truly written to disk until the page cache is full.</source>
          <target state="translated">SQLiteは、最近読み書きされたデータベースページのページキャッシュを使用します。このページキャッシュは、メインデータベースファイルだけでなく、一時ファイルに格納された一時的なインデックスやテーブルにも使用されます。SQLiteが一時インデックスまたはテーブルを使用する必要があり、&lt;a href=&quot;compile#temp_store&quot;&gt;SQLITE_TEMP_STORE&lt;/a&gt;コンパイル時パラメーターと&lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_storeプラグマ&lt;/a&gt;が一時テーブルとインデックスをディスクに格納するように設定されている場合でも、情報は最初はページキャッシュのメモリに格納されます。一時ファイルは開かれず、ページキャッシュがいっぱいになるまで、情報は本当にディスクに書き込まれません。</target>
        </trans-unit>
        <trans-unit id="b12c1b1b8cc61e32991a698cfd1267c2d0f89edd" translate="yes" xml:space="preserve">
          <source>SQLite uses an efficient &lt;a href=&quot;queryplanner-ng&quot;&gt;query planner algorithm&lt;/a&gt; and so even a large join can be &lt;a href=&quot;c3ref/prepare&quot;&gt;prepared&lt;/a&gt; quickly. Hence, there is no mechanism to raise or lower the limit on the number of tables in a join.</source>
          <target state="translated">SQLiteは効率的な&lt;a href=&quot;queryplanner-ng&quot;&gt;クエリプランナーアルゴリズム&lt;/a&gt;を使用しているため、大規模な結合でもすばやく&lt;a href=&quot;c3ref/prepare&quot;&gt;準備&lt;/a&gt;できます。したがって、結合のテーブル数の制限を増減するメカニズムはありません。</target>
        </trans-unit>
        <trans-unit id="2c5e93f52d20c084674804c93cc58302ab86f180" translate="yes" xml:space="preserve">
          <source>SQLite uses binary arithmetic and in binary, there is no way to write 9.95 in a finite number of bits. The closest to you can get to 9.95 in a 64-bit IEEE float (which is what SQLite uses) is 9.949999999999999289457264239899814128875732421875. So when you type &quot;9.95&quot;, SQLite really understands the number to be the much longer value shown above. And that value rounds down.</source>
          <target state="translated">SQLite はバイナリ演算を使用しており、バイナリでは有限のビット数で 9.95 を書く方法はありません。64ビットのIEEEフロート(SQLiteが使用しているもの)で9.95に最も近い数値は9.9499999999999289457264239899814128875732421875です。つまり、&quot;9.95 &quot;と入力すると、SQLiteはこの数値を上記のようなずっと長い値として理解します。そして、その値は四捨五入されます。</target>
        </trans-unit>
        <trans-unit id="100c32205d77668106f751ddb49a630f21e7c164" translate="yes" xml:space="preserve">
          <source>SQLite uses dynamic memory allocation to obtain memory for storing various objects (ex: &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; and &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;) and to build a memory cache of the database file and to hold the results of queries. Much effort has gone into making the dynamic memory allocation subsystem of SQLite reliable, predictable, robust, secure, and efficient.</source>
          <target state="translated">SQLiteは、動的メモリ割り当てを使用して、さまざまなオブジェクト（&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;や&lt;a href=&quot;c3ref/stmt&quot;&gt;準備済みステートメントなど&lt;/a&gt;）を格納するためのメモリを取得し、データベースファイルのメモリキャッシュを構築して、クエリの結果を保持します。SQLiteの動的メモリ割り当てサブシステムを、信頼性が高く、予測可能で、堅牢で、安全で、効率的なものにするために多くの努力が払われています。</target>
        </trans-unit>
        <trans-unit id="00d6ed4ddbc792f962a9c15a9bfff1ed56a12c03" translate="yes" xml:space="preserve">
          <source>SQLite uses dynamic run-time typing. So just because a column is declared to contain a particular type does not mean that the data stored in that column is of the declared type. SQLite is strongly typed, but the typing is dynamic not static. Type is associated with individual values, not with the containers used to hold those values.</source>
          <target state="translated">SQLite は動的なランタイム型付けを使用します。つまり、あるカラムが特定の型を含むと宣言されているからといって、そのカラムに格納されているデータが宣言された型のものであるとは限りません。SQLite は強力な型付けを行っていますが、型付けは静的なものではなく動的なものです。型付けは個々の値に関連付けられており、それらの値を保持するために使用されるコンテナには関連付けられていません。</target>
        </trans-unit>
        <trans-unit id="e9c675b439e8b045a5761d6f6f634a6e3c87b0d8" translate="yes" xml:space="preserve">
          <source>SQLite uses file locks on the database file, and on the &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt; or &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; file, to coordinate access between concurrent processes. Without coordination, two threads or processes might try to make incompatible changes to a database file at the same time, resulting in database corruption.</source>
          <target state="translated">SQLiteは、データベースファイル、および&lt;a href=&quot;wal&quot;&gt;先行書き込みログ&lt;/a&gt;または&lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt;ファイルのファイルロックを使用して、同時プロセス間のアクセスを調整します。調整を行わないと、2つのスレッドまたはプロセスがデータベースファイルに互換性のない変更を同時に加えようとする可能性があり、データベースが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="cfc489b7d0364b55c420255bebe8164eaf3143ec" translate="yes" xml:space="preserve">
          <source>SQLite uses filesystem locks to make sure that only one process and database connection is trying to modify the database at a time. The filesystem locking mechanism is implemented in the VFS layer and is different for every operating system. SQLite depends on this implementation being correct. If something goes wrong and two or more processes are able to write the same database file at the same time, severe damage can result.</source>
          <target state="translated">SQLiteはファイルシステムロックを使用して、一度に1つのプロセスとデータベース接続だけがデータベースを変更しようとすることを確実にします。ファイルシステムロックの仕組みは VFS 層に実装されており、オペレーティングシステムごとに異なります。SQLite はこの実装が正しいかどうかに依存しています。何かがうまくいかず、2つ以上のプロセスが同時に同じデータベースファイルを書き込めるようになった場合、深刻なダメージを受ける可能性があります。</target>
        </trans-unit>
        <trans-unit id="7c5d3144ca7b57a8fe6bfa7c95d8cd76ffe8cc05" translate="yes" xml:space="preserve">
          <source>SQLite uses one of these integer values as the second argument to calls it makes to the xLock() and xUnlock() methods of an &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">SQLiteは、これらの整数値の1つを2番目の引数として使用して、&lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;オブジェクトのxLock（）およびxUnlock（）メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="06c37dcfbf68e2c7d0288d36eee6b01629eff86a" translate="yes" xml:space="preserve">
          <source>SQLite uses one of these integer values as the second argument to calls it makes to the xLock() and xUnlock() methods of an &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">SQLiteは、これらの整数値の1つを2番目の引数として使用して、&lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt;オブジェクトのxLock（）およびxUnlock（）メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="f6149cc0b8adc5f4defc7a195f4b03b55ce3c135" translate="yes" xml:space="preserve">
          <source>SQLite uses pthreads for its mutex implementation on Unix and SQLite requires a recursive mutex. Most modern pthread implementations support recursive mutexes, but not all do. For systems that do not support recursive mutexes, it is recommended that applications operate in single-threaded mode only. If this is not possible, SQLite provides an alternative recursive mutex implementation built on top of the standard &quot;fast&quot; mutexes of pthreads. This alternative implementation should work correctly as long as pthread_equal() is atomic and the processor has a coherent data cache. The alternative recursive mutex implementation is enabled by the following compiler command-line switch:</source>
          <target state="translated">SQLiteではUnix上のミューテックスの実装にpthreadを使用しており、SQLiteでは再帰的ミューテックスを必要とします。最近のほとんどの pthread の実装は再帰的ミューテックスをサポートしていますが、すべての実装に対応しているわけではありません。再帰的ミューテックスをサポートしていないシステムでは、アプリケーションをシングルスレッドモードでのみ動作させることをお勧めします。それが不可能な場合、SQLite は pthreads の標準的な「高速」ミューテックスの上に構築された代替的な再帰的ミューテックス実装を提供しています。この代替実装は、pthread_equal()がアトミックであり、プロセッサにコヒーレントなデータキャッシュがある限り、正しく動作するはずです。代替の再帰的ミューテックス実装は、以下のコンパイラコマンドラインスイッチで有効になります。</target>
        </trans-unit>
        <trans-unit id="b9e2e6b108a44c0d3f75ca74e3d41c51203f95b5" translate="yes" xml:space="preserve">
          <source>SQLite uses reader/writer locks to control access to the database. (Under Win95/98/ME which lacks support for reader/writer locks, a probabilistic simulation is used instead.) But use caution: this locking mechanism might not work correctly if the database file is kept on an NFS filesystem. This is because fcntl() file locking is broken on many NFS implementations. You should avoid putting SQLite database files on NFS if multiple processes might try to access the file at the same time. On Windows, Microsoft's documentation says that locking may not work under FAT filesystems if you are not running the Share.exe daemon. People who have a lot of experience with Windows tell me that file locking of network files is very buggy and is not dependable. If what they say is true, sharing an SQLite database between two or more Windows machines might cause unexpected problems.</source>
          <target state="translated">SQLiteでは、データベースへのアクセスを制御するためにリーダライタロックを使用します(Win95/98/MEがサポートされていない環境では、代わりに確率的なシミュレーションが使用されます)。(リーダー/ライターロックをサポートしていないWin95/98/MEでは、代わりに確率的なシミュレーションが使用されます)。しかし、注意が必要です:データベースファイルがNFSファイルシステム上に保存されている場合、このロック機構は正しく動作しないかもしれません。これは、多くのNFS実装ではfcntl()ファイルロックが壊れているためです。複数のプロセスが同時にファイルにアクセスしようとする可能性がある場合は、SQLite データベースファイルを NFS 上に置くのは避けるべきです。Windowsでは、Microsoftのドキュメントによると、Share.exeデーモンを実行していない場合、FATファイルシステムではロックが機能しないことがあります。Windowsの経験が豊富な人によると、ネットワークファイルのファイルロックは非常にバグが多く、頼りにならないと言われています。もし彼らの言うことが本当なら、2台以上のWindowsマシン間でSQLiteデータベースを共有すると、予期せぬ問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="88bb033eaf6e37670d2db7d84f333ca9cade029c" translate="yes" xml:space="preserve">
          <source>SQLite uses the &quot;&lt;code&gt;file:&lt;/code&gt;&quot; URI syntax to identify database files. SQLite strives to interpret file: URIs in exactly the same way as popular web-browsers such as &lt;a href=&quot;http://www.mozilla.com/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;http://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt;, &lt;a href=&quot;http://windows.microsoft.com/en-US/internet-explorer/products/ie/home&quot;&gt;Internet Explorer&lt;/a&gt;, and &lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera&lt;/a&gt;, and command-line programs such as &lt;a href=&quot;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/start.mspx&quot;&gt;Windows &quot;start&quot;&lt;/a&gt; and the Mac OS-X &lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/open.1.html&quot;&gt;&quot;open&quot;&lt;/a&gt; command. A succinct summary of the URI parsing rules follows:</source>
          <target state="translated">SQLiteは &quot; &lt;code&gt;file:&lt;/code&gt; &quot; URI構文を使用してデータベースファイルを識別します。SQLiteは、ファイルを解釈するように努めています：URIは、&lt;a href=&quot;http://www.mozilla.com/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;、&lt;a href=&quot;http://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;、&lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt;、&lt;a href=&quot;http://windows.microsoft.com/en-US/internet-explorer/products/ie/home&quot;&gt;Internet Explorer&lt;/a&gt;、&lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera&lt;/a&gt;などの一般的なWebブラウザーや、&lt;a href=&quot;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/start.mspx&quot;&gt;Windowsの「start」&lt;/a&gt;やMac OS-Xの&lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/open.1.html&quot;&gt;「open &lt;/a&gt;」などのコマンドラインプログラムとまったく同じです。&quot;コマンド。URI解析ルールの簡単な要約は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="69d5ac42573f581392e9517041d99daa76b38636" translate="yes" xml:space="preserve">
          <source>SQLite uses the assumptions in this section to try to speed up reading from and writing to the database file.</source>
          <target state="translated">SQLiteは、データベースファイルからの読み込みと書き込みを高速化しようと、このセクションの前提条件を使用しています。</target>
        </trans-unit>
        <trans-unit id="d55089274731f4bfb9ebd084387b8f1d1faf31f7" translate="yes" xml:space="preserve">
          <source>SQLite uses the following terminology:</source>
          <target state="translated">SQLiteでは以下のような用語を使用しています。</target>
        </trans-unit>
        <trans-unit id="0ee4041bd18f2412c9c45cca33a698969a142e88" translate="yes" xml:space="preserve">
          <source>SQLite uses the fsync() system call on Unix and the FlushFileBuffers() system call on w32 in order to sync the file system buffers onto disk oxide as shown in &lt;a href=&quot;#section_3_7&quot;&gt;step 3.7&lt;/a&gt; and &lt;a href=&quot;#section_3_10&quot;&gt;step 3.10&lt;/a&gt;. Unfortunately, we have received reports that neither of these interfaces works as advertised on many systems. We hear that FlushFileBuffers() can be completely disabled using registry settings on some Windows versions. Some historical versions of Linux contain versions of fsync() which are no-ops on some filesystems, we are told. Even on systems where FlushFileBuffers() and fsync() are said to be working, often the IDE disk control lies and says that data has reached oxide while it is still held only in the volatile control cache.</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;#section_3_7&quot;&gt;ステップ3.7&lt;/a&gt;と&lt;a href=&quot;#section_3_10&quot;&gt;ステップ3.10に&lt;/a&gt;示すように、Unixではfsync（）システムコールを、w32ではFlushFileBuffers（）システムコールを使用して、ファイルシステムバッファをディスクオキサイドに同期します。残念ながら、これらのインターフェースのどちらも多くのシステムでアドバタイズされたように機能しないという報告を受けました。一部のWindowsバージョンでは、レジストリ設定を使用してFlushFileBuffers（）を完全に無効にできると聞いています。 Linuxのいくつかの歴史的なバージョンには、一部のファイルシステムでは機能しないfsync（）のバージョンが含まれていると言われています。 FlushFileBuffers（）とfsync（）が機能していると言われているシステムでも、IDEのディスクコントロールは、データが揮発性のコントロールキャッシュにのみ保持されている間に、データが酸化物に達したと嘘をつきます。</target>
        </trans-unit>
        <trans-unit id="6362e589dd1fe9de49e118297201339e71a38ea0" translate="yes" xml:space="preserve">
          <source>SQLite uses the fsync() system call to flush data to the disk under Unix and it uses the FlushFileBuffers() to do the same under Windows. Once again, SQLite assumes that these operating system services function as advertised. But it has been reported that fsync() and FlushFileBuffers() do not always work correctly, especially with inexpensive IDE disks. Apparently some manufactures of IDE disks have controller chips that report that data has reached the disk surface when in fact the data is still in volatile cache memory in the disk drive electronics. There are also reports that Windows sometimes chooses to ignore FlushFileBuffers() for unspecified reasons. The author cannot verify any of these reports. But if they are true, it means that database corruption is a possibility following an unexpected power loss. These are hardware and/or operating system bugs that SQLite is unable to defend against.</source>
          <target state="translated">SQLite は、Unix の場合は fsync()システムコールを使用してデータをディスクにフラッシュし、Windows の場合は FlushFileBuffers()を使用して同じことを行います。繰り返しになりますが、SQLite はこれらのオペレーティングシステムサービスが宣伝どおりに機能することを前提としています。しかし、特に安価な IDE ディスクでは fsync()と FlushFileBuffers()が常に正しく動作するとは限らないことが報告されています。IDE ディスクのいくつかのメーカーは、データがディスク表面に到達したと報告するコントローラチップを持っているようですが、実際にはデータはディスクドライブの電子機器の揮発性キャッシュメモリに残っています。また、Windows が特定できない理由で FlushFileBuffers()を無視することがあるという報告もあります。筆者はこれらの報告を検証することはできません。しかし、もしこれらの報告が本当であれば、予期せぬ停電の後にデータベースが破損する可能性があることを意味します。これらは、SQLite が防御できないハードウェアやオペレーティングシステムのバグです。</target>
        </trans-unit>
        <trans-unit id="32280f4c0ca13b9e9b050e36d2463beacf57a438" translate="yes" xml:space="preserve">
          <source>SQLite uses the path component of the URI as the name of the disk file which contains the database. If the path begins with a '/' character, then it is interpreted as an absolute path. If the path does not begin with a '/' (meaning that the authority section is omitted from the URI) then the path is interpreted as a relative path. On windows, the first component of an absolute path is a drive specification (e.g. &quot;C:&quot;).</source>
          <target state="translated">SQLite は、データベースを格納しているディスクファイルの名前として URI の path コンポーネントを使用します。パスが '/' 文字で始まる場合、それは絶対パスとして解釈されます。パスが '/' で始まらない場合(URI から権限セクションが省略されていることを意味します)、パスは相対パスとして解釈されます。Windows では、絶対パスの最初の構成要素はドライブ指定 (例:&quot;C:&quot;)です。</target>
        </trans-unit>
        <trans-unit id="b4d974786d3ead21fc22643249354066187d79d8" translate="yes" xml:space="preserve">
          <source>SQLite uses the sqlite3_value object to represent all values that can be stored in a database table. SQLite uses dynamic typing for the values it stores. Values stored in sqlite3_value objects can be integers, floating point values, strings, BLOBs, or NULL.</source>
          <target state="translated">SQLiteは、データベーステーブルに格納できるすべての値を表現するためにsqlite3_valueオブジェクトを使用します。SQLiteは格納される値に動的な型付けを使用します。sqlite3_valueオブジェクトに格納される値は、整数、浮動小数点値、文字列、BLOB、またはNULLです。</target>
        </trans-unit>
        <trans-unit id="3216e45fcb6dfe91aace5bfc00370029ab1bdf71" translate="yes" xml:space="preserve">
          <source>SQLite uses the xBestIndex method of a virtual table module to determine the best way to access the virtual table. The xBestIndex method has a prototype like this:</source>
          <target state="translated">SQLite は、仮想テーブルモジュールの xBestIndex メソッドを使用して、仮想テーブルへのアクセスに最適な方法を決定します。xBestIndex メソッドには、このようなプロトタイプがあります。</target>
        </trans-unit>
        <trans-unit id="a0489776d40de65aee092fe1c30e018ce2c473df" translate="yes" xml:space="preserve">
          <source>SQLite uses two defenses against this problem. In the first place, SQLite records the number of pages in the rollback journal in the header of the rollback journal. This number is initially zero. So during an attempt to rollback an incomplete (and possibly corrupt) rollback journal, the process doing the rollback will see that the journal contains zero pages and will thus make no changes to the database. Prior to a commit, the rollback journal is flushed to disk to ensure that all content has been synced to disk and there is no &quot;garbage&quot; left in the file, and only then is the page count in the header changed from zero to true number of pages in the rollback journal. The rollback journal header is always kept in a separate sector from any page data so that it can be overwritten and flushed without risking damage to a data page if a power outage occurs. Notice that the rollback journal is flushed to disk twice: once to write the page content and a second time to write the page count in the header.</source>
          <target state="translated">SQLite はこの問題に対して 2 つの防御策を使用しています。まず第一に、SQLite はロールバックジャーナルのヘッダーにロールバックジャーナルのページ数を記録します。この数は最初はゼロです。そのため、不完全な(そして破損している可能性のある)ロールバックジャーナルをロールバックしようとすると、ロールバックを行うプロセスはジャーナルのページ数がゼロであることを確認し、データベースに何も変更を加えません。コミットの前に、ロールバックジャーナルはディスクにフラッシュされ、すべてのコンテンツがディスクに同期され、ファイルに &quot;ゴミ &quot;が残っていないことを確認します。ロールバックジャーナルのヘッダは、停電が発生した場合にデータページにダメージを与える危険性がないように、常にページデータとは別のセクタに保存されています。ロールバックジャーナルは2回ディスクにフラッシュされます。1回目はページの内容を書き込むため、2回目はヘッダーのページ数を書き込むためです。</target>
        </trans-unit>
        <trans-unit id="d42ec8c41ede991363e3c5f0bdd1b5f73c156509" translate="yes" xml:space="preserve">
          <source>SQLite version</source>
          <target state="translated">エスエスキューライトバージョン</target>
        </trans-unit>
        <trans-unit id="6c1b4a4dcbf2aebc5bc149eaa5647521eb4221db" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 allowed multiple simultaneous readers or a single writer but not both. SQLite version 3.0 allows one process to begin writing the database while other processes continue to read. The writer must still obtain an exclusive lock on the database for a brief interval in order to commit its changes, but the exclusive lock is no longer required for the entire write operation. A &lt;a href=&quot;lockingv3&quot;&gt;more detailed report&lt;/a&gt; on the locking behavior of SQLite version 3.0 is available separately.</source>
          <target state="translated">SQLiteバージョン2.8では、複数の同時リーダーまたは単一のライターが許可されていましたが、両方は許可されていませんでした。SQLiteバージョン3.0では、1つのプロセスがデータベースの書き込みを開始し、他のプロセスが引き続き読み取りを行うことができます。ライターは、変更をコミットするために、データベースの排他ロックを短い間隔で取得する必要がありますが、書き込み操作全体に排他ロックは必要なくなりました。&lt;a href=&quot;lockingv3&quot;&gt;詳細なレポート&lt;/a&gt; SQLiteバージョン3.0のロック動作には、別途提供されています。</target>
        </trans-unit>
        <trans-unit id="d94b9491c8be74ea2c30ca7aa647aa4aa14bb93b" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 had the feature that any type of data could be stored in any table column regardless of the declared type of that column. This feature is retained in version 3.0, though in a slightly modified form. Each table column will store any type of data, though columns have an affinity for the format of data defined by their declared datatype. When data is inserted into a column, that column will make an attempt to convert the data format into the column's declared type. All SQL database engines do this. The difference is that SQLite 3.0 will still store the data even if a format conversion is not possible.</source>
          <target state="translated">SQLite バージョン 2.8 では、どのテーブルのカラムにも、そのカラムの宣言された型に関係なく、任意の型のデータを格納することができるという機能がありました。この機能はバージョン3.0でも若干変更された形ではありますが、保持されています。各テーブルのカラムは任意のタイプのデータを格納しますが、カラムは宣言されたデータ型によって定義されたデータの形式と親和性があります。データがカラムに挿入されると、そのカラムはデータ形式をそのカラムの宣言された型に変換しようとします。すべての SQL データベースエンジンはこれを行います。SQLite 3.0の違いは、フォーマット変換ができなくてもデータを保存することです。</target>
        </trans-unit>
        <trans-unit id="cc60006fcf0499f5d27e14e08e37966af30b84e4" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 will continue to be supported with bug fixes for the foreseeable future. In order to allow SQLite version 2.8 and SQLite version 3.0 to peacefully coexist, the names of key files and APIs in SQLite version 3.0 have been changed to include the character &quot;3&quot;. For example, the include file used by C programs has been changed from &quot;sqlite.h&quot; to &quot;sqlite3.h&quot;. And the name of the shell program used to interact with databases has been changed from &quot;sqlite.exe&quot; to &quot;sqlite3.exe&quot;. With these changes, it is possible to have both SQLite 2.8 and SQLite 3.0 installed on the same system at the same time. And it is possible for the same C program to link against both SQLite 2.8 and SQLite 3.0 at the same time and to use both libraries at the same time.</source>
          <target state="translated">SQLite バージョン 2.8 は、当面の間、バグフィックスを含めてサポートを継続します。SQLiteバージョン2.8とSQLiteバージョン3.0を共存させるために、SQLiteバージョン3.0のキーファイルとAPIの名前が &quot;3 &quot;を含むように変更されました。例えば、C言語のプログラムが使用するインクルードファイルは、&quot;sqlite.h &quot;から &quot;sqlite3.h &quot;に変更されています。また、データベースと対話するためのシェルプログラムの名前が &quot;sqlite.exe &quot;から &quot;sqlite3.exe &quot;に変更されました。これらの変更により、SQLite 2.8とSQLite 3.0を同時に同じシステムにインストールすることが可能になりました。また、同じCプログラムでSQLite 2.8とSQLite 3.0を同時にリンクし、両方のライブラリを同時に使用することも可能です。</target>
        </trans-unit>
        <trans-unit id="9294985ea2869d413fc8305361b7fbc4273dc106" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 will deal with data in various formats internally, but when writing to the disk or interacting through its API, SQLite 2.8 always converts data into ASCII text. SQLite 3.0, in contrast, exposes its internal data representations to the user and stores binary representations to disk when appropriate. The exposing of non-ASCII representations was added in order to support BLOBs.</source>
          <target state="translated">SQLite バージョン 2.8 は内部的に様々な形式のデータを扱いますが、ディスクへの書き込みや API を通してのやり取りの際には、SQLite 2.8 は常にデータを ASCII テキストに変換します。対照的に SQLite 3.0 は内部のデータ表現をユーザーに公開し、適切な場合にはバイナリ表現をディスクに保存します。非 ASCII 表現の公開は BLOB をサポートするために追加されました。</target>
        </trans-unit>
        <trans-unit id="4aa319379218f233cb1b56ac0f70d481e776d1c7" translate="yes" xml:space="preserve">
          <source>SQLite version 3 has the usual set of SQL comparison operators including &quot;=&quot;, &quot;==&quot;, &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot;, &quot;&amp;gt;=&quot;, &quot;!=&quot;, &quot;&quot;, &quot;IN&quot;, &quot;NOT IN&quot;, &quot;BETWEEN&quot;, &quot;IS&quot;, and &quot;IS NOT&quot;, .</source>
          <target state="translated">SQLiteバージョン3には、「=」、「==」、「&amp;lt;」、「&amp;lt;=」、「&amp;gt;」、「&amp;gt; =」、「！=」、「！」、「IN」などの通常のSQL比較演算子のセットがあります。 、「NOT IN」、「BETWEEN」、「IS」、および「IS NOT」、</target>
        </trans-unit>
        <trans-unit id="a76401a1eda6f0ec422be63e7c58c505ecee397a" translate="yes" xml:space="preserve">
          <source>SQLite version 3 seeks to avoid writer starvation through the use of the PENDING lock. The PENDING lock allows existing readers to continue but prevents new readers from connecting to the database. So when a process wants to write a busy database, it can set a PENDING lock which will prevent new readers from coming in. Assuming existing readers do eventually complete, all SHARED locks will eventually clear and the writer will be given a chance to make its changes.</source>
          <target state="translated">SQLite バージョン 3 では、PENDING ロックを使用してライターの飢餓を回避しようとしています。PENDING ロックは、既存のリーダの継続を許可しますが、新しいリーダがデータベースに接続するのを防ぎます。そのため、あるプロセスがビジーなデータベースを書き込もうとしたときには、新しいリーダが入ってこないようにPENDINGロックを設定することができます。既存のリーダが最終的に完了すると仮定すると、すべてのSHAREDロックは最終的にクリアされ、ライタには変更を行う機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="eae91dc769edea8eecdb43451d72cf217325ea89" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 introduces important changes to the library, including:</source>
          <target state="translated">SQLite バージョン 3.0 では、ライブラリに以下のような重要な変更が加えられています。</target>
        </trans-unit>
        <trans-unit id="3f72a15b94cfd255cf997707c03d82c9e9918a44" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 is a new version of SQLite, derived from the SQLite 2.8.13 code base, but with an incompatible file format and API. SQLite version 3.0 was created to answer demand for the following features:</source>
          <target state="translated">SQLite バージョン 3.0 は SQLite の新バージョンで、SQLite 2.8.13 のコードベースから派生したものですが、互換性のないファイル形式と API を備えています。SQLite バージョン 3.0 は、以下の機能に対する要望に応えるために作成されました。</target>
        </trans-unit>
        <trans-unit id="ccb4f474cdcf4df9f87f4000dec5a3f14ed4609b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 is made possible in part by AOL developers supporting and embracing great Open-Source Software.</source>
          <target state="translated">SQLiteバージョン3.0は、AOLの開発者がサポートし、優れたオープンソースソフトウェアを受け入れることで実現しています。</target>
        </trans-unit>
        <trans-unit id="ef6b4fa665bce97a58d8cad0238042778638e4ea" translate="yes" xml:space="preserve">
          <source>SQLite version 3.22.0 (2018-01-22) contains 5290 assert() macros, 839 testcase() macros, 88 ALWAYS() macros, and 63 NEVER() macros.</source>
          <target state="translated">SQLite バージョン 3.22.0 (2018-01-22)には、5290 の assert()マクロ、839 の testcase()マクロ、88 の ALWAYS()マクロ、63 の NEVER()マクロが含まれています。</target>
        </trans-unit>
        <trans-unit id="c307004a0921076eb49a52bd8a91c6b52b2a1b6b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.3.14 adds the concept of &quot;Exclusive Access Mode&quot;. In exclusive access mode, SQLite retains the exclusive database lock at the conclusion of each transaction. This prevents other processes from accessing the database, but in many deployments only a single process is using a database so this is not a serious problem. The advantage of exclusive access mode is that disk I/O can be reduced in three ways:</source>
          <target state="translated">SQLite バージョン 3.3.14 では、「排他的アクセスモード」という概念が追加されました。排他的アクセスモードでは、SQLiteは各トランザクションの終了時に排他的なデータベースロックを保持します。これにより、他のプロセスがデータベースにアクセスすることができなくなりますが、多くの導入では単一のプロセスがデータベースを使用しているだけなので、これは深刻な問題ではありません。排他的アクセスモードの利点は、ディスクI/Oを3つの方法で削減できることです。</target>
        </trans-unit>
        <trans-unit id="fbb503554e7c282aedc13f070027736e1a10fc7b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.5.0 (2007-09-04) introduces a new OS interface layer that is incompatible with all prior versions of SQLite. In addition, a few existing interfaces have been generalized to work across all database connections within a process rather than just all connections within a thread. The purpose of this article is to describe the changes to 3.5.0 in detail so that users of prior versions of SQLite can judge what, if any, effort will be required to upgrade to newer versions.</source>
          <target state="translated">SQLite バージョン 3.5.0 (2007-09-04)では、以前のバージョンの SQLite と互換性のない新しい OS インターフェイス層が導入されました。さらに、いくつかの既存のインターフェースは、スレッド内のすべての接続ではなく、プロセス内のすべてのデータベース接続にまたがって動作するように一般化されました。この記事の目的は、3.5.0 への変更点を詳細に説明することで、以前のバージョンの SQLite のユーザーが、新しいバージョンにアップグレードするのに必要な労力があるかどうかを判断できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="70942f1687fac3fdda946d021fc48ca1143963c7" translate="yes" xml:space="preserve">
          <source>SQLite version 3.6.0 (2008-07-16) contains many changes. As is the custom with the SQLite project, most changes are fully backwards compatible. However, a few of the changes in version 3.6.0 are incompatible and might require modifications to application code and/or makefiles. This document is a briefing on the changes in SQLite 3.6.0 with special attention to the incompatible changes.</source>
          <target state="translated">SQLite バージョン 3.6.0 (2008-07-16)には多くの変更が含まれています。SQLite プロジェクトの慣習として、ほとんどの変更点は完全な下位互換性を持っています。しかし、バージョン3.6.0の変更点のうちいくつかは互換性がなく、アプリケーションコードやmakefileの修正が必要になるかもしれません。このドキュメントは SQLite 3.6.0 での変更点について、互換性のない変更点に特別な注意を払って説明したものです。</target>
        </trans-unit>
        <trans-unit id="da041872c2ed2b85c83a9be5e4c3422e0d89ff87" translate="yes" xml:space="preserve">
          <source>SQLite version 3.7.0 introduced a number of new enhancements to the SQLite database file format (such as but not limited to &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt;). The 3.7.0 release was a shake-out release for these new features. We expected to find problems and were not disappointed.</source>
          <target state="translated">SQLiteバージョン3.7.0では、SQLiteデータベースファイル形式（&lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt;などに限定されません）にいくつかの新しい拡張機能が導入されました。3.7.0リリースは、これらの新機能の全面的なリリースでした。私たちは問題を見つけることを期待し、失望しませんでした。</target>
        </trans-unit>
        <trans-unit id="31e4e9d6b69cabc107d20e4736663f7980b134d1" translate="yes" xml:space="preserve">
          <source>SQLite version 3.7.16.2 fixes a subtle race condition in the locking logic on Windows systems. When a database file is in need of recovery because the previous process writing to it crashed in the middle of a transaction and two or more processes try to open the that database at the same time, then the race condition might cause one of those processes to get a false indication that the recovery has already completed, allowing that process to continue using the database file without running recovery first. If that process writes to the file, then the file might go corrupt. This race condition had apparently existed in all prior versions of SQLite for Windows going back to 2004. But the race was very tight. Practically speaking, you need a fast multi-core machine in which you launch two processes to run recovery at the same moment on two separate cores. This defect was on Windows systems only and did not affect the posix OS interface.</source>
          <target state="translated">SQLiteバージョン3.7.16.2では、Windowsシステム上のロックロジックにおける微妙な競合状態が修正されました。データベースファイルに書き込む前のプロセスがトランザクションの途中でクラッシュしたために、データベースファイルのリカバリが必要な場合に、2つ以上のプロセスが同時にそのデータベースを開こうとすると、競合状態により、そのうちの1つのプロセスがリカバリがすでに完了したという誤った表示を取得し、そのプロセスが最初にリカバリを実行せずにデータベースファイルを使用し続けられるようになることがあります。そのプロセスがファイルに書き込みを行うと、ファイルが破損する可能性があります。このような競合状態は、2004年に遡る以前のバージョンのWindows用SQLiteにも明らかに存在していました。しかし、この競合状態は非常に厳しいものでした。実際には、2つの別々のコアで同時にリカバリを実行するためには、2つのプロセスを起動する高速なマルチコアマシンが必要です。この欠陥は Windows システムのみにあり、posix OS インターフェイスには影響しませんでした。</target>
        </trans-unit>
        <trans-unit id="06c5d06f2767343fefb84004cfe2451c3fbeba78" translate="yes" xml:space="preserve">
          <source>SQLite was originally coded in such a way that the answer to all questions in the chart below would be &quot;Yes&quot;. But the experiments run on other SQL engines showed that none of them worked this way. So SQLite was modified to work the same as Oracle, PostgreSQL, and DB2. This involved making NULLs indistinct for the purposes of the SELECT DISTINCT statement and for the UNION operator in a SELECT. NULLs are still distinct in a UNIQUE column. This seems somewhat arbitrary, but the desire to be compatible with other engines outweighed that objection.</source>
          <target state="translated">SQLiteは元々、下の表のすべての質問に対する答えが「Yes」になるようにコード化されていました。しかし、他のSQLエンジンで実行された実験では、どれもこのように動作しないことがわかりました。そこで、SQLiteはOracle、PostgreSQL、DB2と同じように動作するように修正されました。これには、SELECT DISTINCT文とSELECTのUNION演算子のためにNULLを区別できないようにすることが含まれていました。NULLはUNIQUE列の中ではまだ区別されています。これはやや恣意的に見えますが、他のエンジンとの互換性を求める気持ちがその反対を上回りました。</target>
        </trans-unit>
        <trans-unit id="cc2cc08c1f222d49bc97f5f39c7b9c91ad3731d6" translate="yes" xml:space="preserve">
          <source>SQLite was originally designed with a policy of avoiding arbitrary limits. Of course, every program that runs on a machine with finite memory and disk space has limits of some kind. But in SQLite, those limits were not well defined. The policy was that if it would fit in memory and you could count it with a 32-bit integer, then it should work.</source>
          <target state="translated">SQLite は元々、任意の制限を避けるためのポリシーで設計されました。もちろん、有限のメモリとディスク容量を持つマシン上で実行されるすべてのプログラムには、何らかの制限があります。しかし、SQLiteでは、それらの制限は十分に定義されていませんでした。メモリに収まり、32ビット整数で数えることができれば、それはうまくいくはずだという方針でした。</target>
        </trans-unit>
        <trans-unit id="769cb93a3fb24f4ad929e24b9c4fe55eeec4efe2" translate="yes" xml:space="preserve">
          <source>SQLite was tested in the same configuration that it appears on the website. It was compiled with -O6 optimization and with the -DNDEBUG=1 switch which disables the many &quot;assert()&quot; statements in the SQLite code. The -DNDEBUG=1 compiler option roughly doubles the speed of SQLite.</source>
          <target state="translated">SQLite は、ウェブサイトに表示されているのと同じ構成でテストされました。これは -O6 最適化と -DNDEBUG=1 スイッチでコンパイルされ、SQLite コードの多くの &quot;assert()&quot; ステートメントを無効にしています。DNDEBUG=1 コンパイラオプションは、SQLite の速度を約 2 倍にします。</target>
        </trans-unit>
        <trans-unit id="864e2447d8a13ac7ee35b071674f4476208c7306" translate="yes" xml:space="preserve">
          <source>SQLite will also add one of the following flags to the xOpen() call, depending on the object being opened:</source>
          <target state="translated">SQLite は、オープンされるオブジェクトに応じて以下のフラグのいずれかを xOpen()の呼び出しに追加します。</target>
        </trans-unit>
        <trans-unit id="131d0be5dd7e4aa0858930ddc9451eb1f3423fe0" translate="yes" xml:space="preserve">
          <source>SQLite will also attempt to use indices to help satisfy GROUP BY clauses and the DISTINCT keyword. If the nested loops of the join can be arranged such that rows that are equivalent for the GROUP BY or for the DISTINCT are consecutive, then the GROUP BY or DISTINCT logic can determine if the current row is part of the same group or if the current row is distinct simply by comparing the current row to the previous row. This can be much faster than the alternative of comparing each row to all prior rows.</source>
          <target state="translated">SQLiteは、GROUP BY句やDISTINCTキーワードを満たすためにインデックスを使用しようとします。GROUP BYやDISTINCTと同等の行が連続しているように結合の入れ子ループを配置することができれば、GROUP BYやDISTINCTロジックは、現在の行を前の行と比較するだけで、現在の行が同じグループに属しているか、または現在の行が異なるかを判断することができます。この方法は、各行を前の行と比較する方法よりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="03ac5706e55e0f1ceba6bf4ddd17b581fa34f6ca" translate="yes" xml:space="preserve">
          <source>SQLite will always allocate at least mxPathname+1 bytes for the output buffer xFullPathname. The exact size of the output buffer is also passed as a parameter to both methods. If the output buffer is not large enough, &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; should be returned. Since this is handled as a fatal error by SQLite, vfs implementations should endeavor to prevent this by setting mxPathname to a sufficiently large value.</source>
          <target state="translated">SQLiteは常に、出力バッファーxFullPathnameに少なくともmxPathname + 1バイトを割り当てます。出力バッファーの正確なサイズも、パラメーターとして両方のメソッドに渡されます。出力バッファが十分に大きくない場合、&lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt;が返されます。これはSQLiteによって致命的なエラーとして処理されるため、vfs実装はmxPathnameを十分に大きな値に設定することでこれを防止するよう努めるべきです。</target>
        </trans-unit>
        <trans-unit id="a98d8800d0c61913767afcbc8c0b3400cddf5e5e" translate="yes" xml:space="preserve">
          <source>SQLite will always allocate at least mxPathname+1 bytes for the output buffer xFullPathname. The exact size of the output buffer is also passed as a parameter to both methods. If the output buffer is not large enough, &lt;a href=&quot;../rescode#cantopen&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; should be returned. Since this is handled as a fatal error by SQLite, vfs implementations should endeavor to prevent this by setting mxPathname to a sufficiently large value.</source>
          <target state="translated">SQLiteは常に、出力バッファーxFullPathnameに少なくともmxPathname + 1バイトを割り当てます。出力バッファーの正確なサイズも、パラメーターとして両方のメソッドに渡されます。出力バッファが十分に大きくない場合、&lt;a href=&quot;../rescode#cantopen&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt;が返されます。これはSQLiteによって致命的なエラーとして処理されるため、vfs実装はmxPathnameを十分に大きな値に設定することでこれを防止するよう努めるべきです。</target>
        </trans-unit>
        <trans-unit id="1e33e35f6dabafac608ead478729b44348c338ef" translate="yes" xml:space="preserve">
          <source>SQLite will invoke the xMutexEnd() method when &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; is called, but only if the prior call to xMutexInit returned SQLITE_OK. If xMutexInit fails in any way, it is expected to clean up after itself prior to returning.</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown（）&lt;/a&gt;が呼び出されたときにxMutexEnd（）メソッドを呼び出しますが、それは、xMutexInitへの以前の呼び出しがSQLITE_OKを返した場合のみです。 xMutexInitが何らかの方法で失敗した場合は、戻る前にそれ自体がクリーンアップされることが期待されます。</target>
        </trans-unit>
        <trans-unit id="3e7a5d17c455846b0ec61394b33dc86a1c9321c1" translate="yes" xml:space="preserve">
          <source>SQLite will invoke the xMutexEnd() method when &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; is called, but only if the prior call to xMutexInit returned SQLITE_OK. If xMutexInit fails in any way, it is expected to clean up after itself prior to returning.</source>
          <target state="translated">SQLiteは、&lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown（）&lt;/a&gt;が呼び出されたときにxMutexEnd（）メソッドを呼び出しますが、それは、xMutexInitへの以前の呼び出しがSQLITE_OKを返した場合のみです。 xMutexInitが何らかの方法で失敗した場合は、戻る前にそれ自体がクリーンアップされることが期待されます。</target>
        </trans-unit>
        <trans-unit id="2f8ba8da1a2e441af20b1b20244a8ec294fc1a9c" translate="yes" xml:space="preserve">
          <source>SQLite will make this determination, but only if it has been compiled with &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; or &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt;. The &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; and &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt; options causes the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command to collect a histogram of column content in the &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt; or &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; tables and to use this histogram to make a better guess at the best query to use for range constraints such as the above. The main difference between STAT3 and STAT4 is that STAT3 records histogram data for only the left-most column of an index whereas STAT4 records histogram data for all columns of an index. For single-column indexes, STAT3 and STAT4 work the same.</source>
          <target state="translated">SQLiteはこの決定を行いますが、&lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt;または&lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4で&lt;/a&gt;コンパイルされている場合のみです。&lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt;と&lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt;オプションが原因&lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;で列の内容のヒストグラムを収集するためのコマンドを&lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt;または&lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt;テーブルと上記のような範囲の制約のための使用に最適なクエリでより良い推測を行うために、このヒストグラムを使用します。 STAT3とSTAT4の主な違いは、STAT3はインデックスの左端の列のみのヒストグラムデータを記録するのに対し、STAT4はインデックスのすべての列のヒストグラムデータを記録することです。単一列インデックスの場合、STAT3とSTAT4は同じように機能します。</target>
        </trans-unit>
        <trans-unit id="0feeafe3441c848d4df17e7ab2118b3ce654ef9a" translate="yes" xml:space="preserve">
          <source>SQLite will never invoke xInit() more than once without an intervening call to xShutdown().</source>
          <target state="translated">SQLite は、xShutdown()への呼び出しを介さずに xInit()を二度以上呼び出すことはありません。</target>
        </trans-unit>
        <trans-unit id="8141933bded4b0433c5458cd8dc4b6c9aa50dccc" translate="yes" xml:space="preserve">
          <source>SQLite will normally invoke xFetch() with a createFlag of 0 or 1. SQLite will only use a createFlag of 2 after a prior call with a createFlag of 1 failed. In between the to xFetch() calls, SQLite may attempt to unpin one or more cache pages by spilling the content of pinned pages to disk and synching the operating system disk cache.</source>
          <target state="translated">SQLite は通常、createFlag を 0 または 1 にして xFetch()を呼び出します。SQLite は createFlag が 1 の前の呼び出しが失敗した後、createFlag が 2 の場合のみ使用します。to xFetch()コールの間に、SQLite は、固定されたページの内容をディスクにこぼし、オペレーティングシステムのディスクキャッシュを同期させることで、1 つ以上のキャッシュページの固定を解除しようとするかもしれません。</target>
        </trans-unit>
        <trans-unit id="8a0c63958ff91d6ac8d167ebbeb5d529f639eed1" translate="yes" xml:space="preserve">
          <source>SQLite will normally invoke xFetch() with a createFlag of 0 or 1. SQLite will only use a createFlag of 2 after a prior call with a createFlag of 1 failed. In between the xFetch() calls, SQLite may attempt to unpin one or more cache pages by spilling the content of pinned pages to disk and synching the operating system disk cache.</source>
          <target state="translated">SQLite は通常、createFlag を 0 または 1 にして xFetch()を呼び出します。SQLite は createFlag が 1 の前の呼び出しが失敗した後にのみ createFlag が 2 のものを使用します。xFetch()の呼び出しの間に、SQLite は、固定されたページの内容をディスクにこぼし、オペレーティングシステムのディスクキャッシュを同期させることで、1 つ以上のキャッシュページの固定を解除しようとするかもしれません。</target>
        </trans-unit>
        <trans-unit id="26bbe6f761c35b13c9b3c740596c8f4fafbb74f1" translate="yes" xml:space="preserve">
          <source>SQLite will normally work fine as the database backend to a website. But if the website is write-intensive or is so busy that it requires multiple servers, then consider using an enterprise-class client/server database engine instead of SQLite.</source>
          <target state="translated">SQLiteは通常、ウェブサイトのデータベースバックエンドとしては問題なく動作します。しかし、ウェブサイトの書き込みが多い場合や、複数のサーバーを必要とするほど忙しい場合は、SQLiteの代わりにエンタープライズクラスのクライアント/サーバーデータベースエンジンを使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="11d8b5641b8ccc13250b43f6ec693456aaae006d" translate="yes" xml:space="preserve">
          <source>SQLite will still omit the sorting step. But in order for output to appear in the correct order, SQLite will do the table scan starting at the end and working toward the beginning, rather than starting at the beginning and working toward the end as shown in &lt;a href=&quot;#fig17&quot;&gt;figure 17&lt;/a&gt;.</source>
          <target state="translated">SQLiteはソートのステップを省略します。しかし、出力を正しい順序で表示するために、SQLiteは、&lt;a href=&quot;#fig17&quot;&gt;図17に&lt;/a&gt;示すように、最初から最後に向かって作業するのではなく、最初から最後に向かって作業してテーブルスキャンを実行します。</target>
        </trans-unit>
        <trans-unit id="db0bee01e01c7f06f53ced4aa077d1b69e3e443d" translate="yes" xml:space="preserve">
          <source>SQLite works best if you group multiple operations together into a single transaction.</source>
          <target state="translated">SQLiteは、複数の操作を1つのトランザクションにまとめて処理する場合に最適です。</target>
        </trans-unit>
        <trans-unit id="5a4570a64a559f2380207d7ac2eae2dd4a188a0c" translate="yes" xml:space="preserve">
          <source>SQLite works by compiling SQL text into &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt;, then running that bytecode using a virtual machine.</source>
          <target state="translated">SQLiteは、SQLテキストを&lt;a href=&quot;opcode&quot;&gt;バイトコード&lt;/a&gt;にコンパイルしてから、仮想マシンを使用してそのバイトコードを実行します。</target>
        </trans-unit>
        <trans-unit id="1c47334be07eef6e2c6868c4937b4803add8d7d3" translate="yes" xml:space="preserve">
          <source>SQLite works by translating SQL statements into bytecode and then running that bytecode in a virtual machine. This document describes how how the bytecode engine works.</source>
          <target state="translated">SQLite は SQL 文をバイトコードに変換し、そのバイトコードを仮想マシンで実行することで動作します。このドキュメントでは、バイトコードエンジンがどのように動作するかを説明します。</target>
        </trans-unit>
        <trans-unit id="1ebaf35d34ab3b907a64e57112416a9de1a568a2" translate="yes" xml:space="preserve">
          <source>SQLite works by translating each SQL statement into bytecode and then running that bytecode. A &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; in SQLite is mostly just the bytecode needed to implement the corresponding SQL. The &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; interface is a compiler that translates SQL into bytecode. The &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; interface is the virtual machine that runs the bytecode contained within the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt;.</source>
          <target state="translated">SQLiteは、各SQLステートメントをバイトコードに変換してから、そのバイトコードを実行します。&lt;a href=&quot;c3ref/stmt&quot;&gt;プリペアドステートメント&lt;/a&gt;のSQLiteでは、主に対応するSQLを実装するために必要なだけのバイトコードです。&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;インタフェースは、バイトコードにSQLを変換するコンパイラです。&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;インタフェースは、内に含まれるバイトコード実行する仮想マシンで&lt;a href=&quot;c3ref/stmt&quot;&gt;プリペアドステートメントを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="535be0580b8710df785d98333c6a0024a79e6b52" translate="yes" xml:space="preserve">
          <source>SQLite works great as the database engine for most low to medium traffic websites (which is to say, most websites). The amount of web traffic that SQLite can handle depends on how heavily the website uses its database. Generally speaking, any site that gets fewer than 100K hits/day should work fine with SQLite. The 100K hits/day figure is a conservative estimate, not a hard upper bound. SQLite has been demonstrated to work with 10 times that amount of traffic.</source>
          <target state="translated">SQLite は、ほとんどの低~中程度のトラフィックのウェブサイト(つまり、ほとんどのウェブサイト)のデータベースエンジンとして優れた働きをします。SQLite が扱うことができるウェブトラフィックの量は、ウェブサイトがどれだけデータベースを多用するかに依存します。一般的に言えば、1日のヒット数が10万ヒット未満のサイトであれば、SQLiteでも問題なく動作するはずです。100Kヒット/日という数字は保守的な見積もりであり、ハードな上限値ではありません。SQLite はその 10 倍のトラフィック量でも動作することが実証されています。</target>
        </trans-unit>
        <trans-unit id="878697a779b4f555e31be3e87a76fb2ec64adcb9" translate="yes" xml:space="preserve">
          <source>SQLite&amp;#x27;s Built-in printf()</source>
          <target state="translated">SQLiteの組み込みprintf（）</target>
        </trans-unit>
        <trans-unit id="d809358342217ac1c9798a4536e992e30b5c1bbd" translate="yes" xml:space="preserve">
          <source>SQLite's Built-in printf()</source>
          <target state="translated">SQLite の組み込み printf()</target>
        </trans-unit>
        <trans-unit id="77bf8cb88e1c9ff7655bff7a5cbb97288c41b450" translate="yes" xml:space="preserve">
          <source>SQLite, in contrast, stores all content in a &lt;a href=&quot;fileformat2&quot;&gt;single file on disk&lt;/a&gt;. That single file is something you can point to and say &quot;this is the database&quot;. It behaves as an object. An SQLite database file can be copied, renamed, sent as an email attachment, passed as the argument a POST HTTP request, or otherwise treated as other data object such as an image, document, or media file.</source>
          <target state="translated">対照的に、SQLiteはすべてのコンテンツ&lt;a href=&quot;fileformat2&quot;&gt;をディスク上の単一のファイルに格納し&lt;/a&gt;ます。その単一のファイルは、「これがデータベースです」と指して言うことができるものです。オブジェクトとして動作します。 SQLiteデータベースファイルは、コピー、名前変更、電子メールの添付ファイルとしての送信、POST HTTPリクエストの引数としての受け渡し、またはその他の方法で画像、ドキュメント、メディアファイルなどの他のデータオブジェクトとして扱うことができます。</target>
        </trans-unit>
        <trans-unit id="1d5e7b501f4c23aeddb2e1d173f4fc5a56622fde" translate="yes" xml:space="preserve">
          <source>SQLite, in contrast, use only the amount of disk space actually needed to store the information in a row. If you store a single character in a VARCHAR(100) column, then only a single byte of disk space is consumed. (Actually two bytes - there is some overhead at the beginning of each column to record its datatype and length.)</source>
          <target state="translated">これに対してSQLiteは、行内の情報を格納するために実際に必要なディスク容量のみを使用します。VARCHAR(100)カラムに 1 文字を格納する場合、1 バイトのディスク容量しか消費されません (実際には 2 バイト-各カラムの先頭にデータ型と長さを記録するためのオーバーヘッドがあります)。(実際には2バイトですが、各列の先頭にデータ型と長さを記録するためのオーバーヘッドがあります)。</target>
        </trans-unit>
        <trans-unit id="90a2c30d411105b1866a2fb7534e120d54c087c8" translate="yes" xml:space="preserve">
          <source>SQLite, like all SQL database engines, makes extensive use of malloc() (See the separate report on &lt;a href=&quot;malloc&quot;&gt;dynamic memory allocation in SQLite&lt;/a&gt; for additional detail.) On servers and workstations, malloc() never fails in practice and so correct handling of out-of-memory (OOM) errors is not particularly important. But on embedded devices, OOM errors are frighteningly common and since SQLite is frequently used on embedded devices, it is important that SQLite be able to gracefully handle OOM errors.</source>
          <target state="translated">SQLiteは、すべてのSQLデータベースエンジンと同様に、malloc（）を多用します（詳細については&lt;a href=&quot;malloc&quot;&gt;、SQLiteの動的メモリ割り当て&lt;/a&gt;に関する別のレポートを参照してください）。サーバーとワークステーションでは、malloc（）は実際には失敗しないので、out-メモリ不足（OOM）エラーは特に重要ではありません。しかし、組み込みデバイスでは、OOMエラーは恐ろしく一般的であり、SQLiteは組み込みデバイスで頻繁に使用されるため、SQLiteがOOMエラーを適切に処理できることが重要です。</target>
        </trans-unit>
        <trans-unit id="b8aba37dd603a24e82fd4f1820189539d3d0a566" translate="yes" xml:space="preserve">
          <source>SQLite: Single File Database</source>
          <target state="translated">SQLite:シングルファイルデータベース</target>
        </trans-unit>
        <trans-unit id="8317c0736d9e6aaddc008372c034f2f63ca423a2" translate="yes" xml:space="preserve">
          <source>Safe languages are often touted for helping to prevent security vulnerabilities. True enough, but SQLite is not a particularly security-sensitive library. If an application is running untrusted and unverified SQL, then it already has much bigger security issues (SQL injection) that no &quot;safe&quot; language will fix.</source>
          <target state="translated">安全な言語は、セキュリティの脆弱性を防ぐのに役立つとよく言われています。その通りですが、SQLiteは特にセキュリティに敏感なライブラリではありません。アプリケーションが信頼されておらず、検証されていないSQLを実行している場合、「安全な」言語では修正できない、より大きなセキュリティ問題(SQLインジェクション)をすでに抱えていることになります。</target>
        </trans-unit>
        <trans-unit id="371ba39228ab4a1c3c189b797c7120e98ace4662" translate="yes" xml:space="preserve">
          <source>Safe languages insert additional machine branches to do things like verify that array accesses are in-bounds. In correct code, those branches are never taken. That means that the machine code cannot be 100% branch tested, which is an important component of SQLite's quality strategy.</source>
          <target state="translated">安全な言語では、配列アクセスがインバウンドであるかどうかの検証などを行うために、追加のマシンブランチを挿入します。正しいコードでは、これらのブランチは決して取られません。これはつまり、マシンコードを 100% ブランチテストすることができないことを意味します。</target>
        </trans-unit>
        <trans-unit id="fcacd9319f45f058826102f8fd4d08b85a39ed32" translate="yes" xml:space="preserve">
          <source>Safe languages usually want to abort if they encounter an out-of-memory (OOM) situation. SQLite is designed to recover gracefully from an OOM. It is unclear how this could be accomplished in the current crop of safe languages.</source>
          <target state="translated">安全な言語は通常、メモリ不足(OOM)の状況に遭遇した場合にアボートしたくなります。SQLite は、OOM からの回復が可能なように設計されています。現在の安全な言語では、どのようにしてこれを実現できるかは不明です。</target>
        </trans-unit>
        <trans-unit id="3c6da187258d5af2ebae1cdb3cc862f47c52557f" translate="yes" xml:space="preserve">
          <source>Safe languages usually want to abort if they encounter an out-of-memory (OOM) situation. SQLite is designed to recovery gracefully from an OOM. It is unclear how this could be accomplished in the current crop of safe languages.</source>
          <target state="translated">安全な言語は通常、OOM (out-of-memory)の状況に遭遇した場合には中止したいと考えます。SQLite は、OOM からの回復を優雅に行うように設計されています。現在の安全な言語では、どのようにしてこれを実現できるかは不明です。</target>
        </trans-unit>
        <trans-unit id="cb8901e65be4e894ae11ab1d95f963f276b64fd4" translate="yes" xml:space="preserve">
          <source>Safe programming languages solve the easy problems: memory leaks, use-after-free errors, array overruns, etc. Safe languages provide no help beyond ordinary C code in solving the rather more difficult problem of computing a correct answer to an SQL statement.</source>
          <target state="translated">安全なプログラミング言語は、メモリリーク、使用後フリーエラー、配列のオーバーランなどの簡単な問題を解決します。安全な言語は、SQL文に対する正解を計算するという、より困難な問題を解決するために、通常のCコード以上の助けを提供しません。</target>
        </trans-unit>
        <trans-unit id="4c0b98b770b73c58eadb8af8b218e45dc7ebebbf" translate="yes" xml:space="preserve">
          <source>Safety-critical applications will usually want to modify the default lookaside memory configuration so that when the initial lookaside memory buffer is allocated during &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; the resulting memory allocation is not so large as to force the &lt;b&gt;n&lt;/b&gt; parameter to be too large. In order to keep &lt;b&gt;n&lt;/b&gt; under control, it is best to try to keep the largest memory allocation below 2 or 4 kilobytes. Hence, a reasonable default setup for the lookaside memory allocator might any one of the following:</source>
          <target state="translated">安全性が重要なアプリケーションは通常、デフォルトのルックアサイドメモリ構成を変更して、&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;中に初期ルックアサイドメモリバッファが割り当てられると、&lt;b&gt;n&lt;/b&gt;パラメータが強制的に大きくなるほどメモリ割り当てが大きくならないようにします。保つために&lt;b&gt;n個の&lt;/b&gt;制御の下で、それは2または4キロバイト以下の最大メモリ割り当てを維持しようとするのがベストです。したがって、lookasideメモリアロケータの適切なデフォルト設定は、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="eb272988295a04bfacb652f9f425c9751c1efcff" translate="yes" xml:space="preserve">
          <source>Salt-1 copied from the WAL header</source>
          <target state="translated">WALヘッダーからコピーしたSalt-1</target>
        </trans-unit>
        <trans-unit id="8f07478edf0a13be2b8353393ce58be98c5cb042" translate="yes" xml:space="preserve">
          <source>Salt-1: random integer incremented with each checkpoint</source>
          <target state="translated">Salt-1:チェックポイントごとにインクリメントされるランダムな整数</target>
        </trans-unit>
        <trans-unit id="fd8becc82bf3034e486b52e348505de06703eadf" translate="yes" xml:space="preserve">
          <source>Salt-2 copied from the WAL header</source>
          <target state="translated">WALヘッダーからコピーしたソルト-2</target>
        </trans-unit>
        <trans-unit id="2251457c30eb39ac4f98ca1b3b449998bdfb08bd" translate="yes" xml:space="preserve">
          <source>Salt-2: a different random number for each checkpoint</source>
          <target state="translated">ソルト-2:チェックポイントごとに異なる乱数</target>
        </trans-unit>
        <trans-unit id="2802d3bf84d06bd601abc4160930ee13b4ba8886" translate="yes" xml:space="preserve">
          <source>Same as INTEGER-&amp;gt;TEXT</source>
          <target state="translated">INTEGER-&amp;gt; TEXTと同じ</target>
        </trans-unit>
        <trans-unit id="64fe7599a1466f63ea9b7dc136b08e0468a7bcfe" translate="yes" xml:space="preserve">
          <source>Save the pointer passed as the second argument as the extension function's &quot;auxiliary data&quot;. The pointer may then be retrieved by the current or any future invocation of the same fts5 extension function made as part of the same MATCH query using the xGetAuxdata() API.</source>
          <target state="translated">第2引数として渡されたポインタを、拡張関数の &quot;補助データ &quot;として保存します。このポインタは、現在または将来、同じ MATCH クエリの一部として xGetAuxdata()API を使用して同じ fts5 拡張関数を呼び出すことで取得することができます。</target>
        </trans-unit>
        <trans-unit id="e164ee3e19bc05538690fe1a5205fe5b7956a433" translate="yes" xml:space="preserve">
          <source>Save the pointer passed as the second argument as the extension functions &quot;auxiliary data&quot;. The pointer may then be retrieved by the current or any future invocation of the same fts5 extension function made as part of the same MATCH query using the xGetAuxdata() API.</source>
          <target state="translated">第2引数として渡されたポインタを、拡張関数の &quot;補助データ &quot;として保存します。このポインタは、現在または将来、xGetAuxdata()API を使用して同じ MATCH クエリの一部として作成された同じ fts5 拡張関数を呼び出すことで取得することができます。</target>
        </trans-unit>
        <trans-unit id="c739de5dc59a519ecc88e91c12cee776ddb9f8ec" translate="yes" xml:space="preserve">
          <source>Savepoint</source>
          <target state="translated">Savepoint</target>
        </trans-unit>
        <trans-unit id="e74ed8e87da0851118fc159806fbe103dac70bbe" translate="yes" xml:space="preserve">
          <source>Savepoints</source>
          <target state="translated">Savepoints</target>
        </trans-unit>
        <trans-unit id="dae2c6197cf9bbcd1ad8c12e21c2553a379969bd" translate="yes" xml:space="preserve">
          <source>Scan all rows of realtab and for each row, find rows in tablevaluedfunc where param1 is equal to realtab.x</source>
          <target state="translated">realtabのすべての行をスキャンし、各行について、param1がrealtab.xと等しいtablevaluedfuncの行を見つけます。</target>
        </trans-unit>
        <trans-unit id="81b10ed131cb8283236308eac51fe1690aaceea4" translate="yes" xml:space="preserve">
          <source>Scan all rows of tablevalued func and for each row find rows in realtab where x is equal to tablevaluedfunc.param1.</source>
          <target state="translated">tablevalued funcのすべての行をスキャンし、各行について、xがtablevaluedfunc.param1と等しいrealtabの行を見つけます。</target>
        </trans-unit>
        <trans-unit id="54a7124a44e1230cb0e0f19e93fb0a0d583d3126" translate="yes" xml:space="preserve">
          <source>Schema S of &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; D must be a &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; database.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3&quot;&gt;データベース接続&lt;/a&gt; DのスキーマSは、&lt;a href=&quot;wal&quot;&gt;WALモードの&lt;/a&gt;データベースでなければなりません。</target>
        </trans-unit>
        <trans-unit id="4938e6644f0ad52bc0448849639259b7608261fb" translate="yes" xml:space="preserve">
          <source>Schema S of &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; D must be a &lt;a href=&quot;../wal&quot;&gt;WAL mode&lt;/a&gt; database.</source>
          <target state="translated">&lt;a href=&quot;sqlite3&quot;&gt;データベース接続&lt;/a&gt; DのスキーマSは、&lt;a href=&quot;../wal&quot;&gt;WALモードの&lt;/a&gt;データベースでなければなりません。</target>
        </trans-unit>
        <trans-unit id="783379b4d6a04cfdb7223b86944f535ee34f305b" translate="yes" xml:space="preserve">
          <source>Schema format number</source>
          <target state="translated">スキーマフォーマット番号</target>
        </trans-unit>
        <trans-unit id="3818a04cadbc7e36a69fd1fddf0ec427879c13a3" translate="yes" xml:space="preserve">
          <source>Search application tips</source>
          <target state="translated">検索アプリケーションのヒント</target>
        </trans-unit>
        <trans-unit id="8f58d07a782f28f0be6c5eba33589bc58551ce12" translate="yes" xml:space="preserve">
          <source>Second Improvement: Split content into smaller pieces</source>
          <target state="translated">2回目の改善。コンテンツを細分化する</target>
        </trans-unit>
        <trans-unit id="ec79d2ea1a314df8f0b27d40fa827558108d418f" translate="yes" xml:space="preserve">
          <source>Second copy of the WAL Index Information</source>
          <target state="translated">WALインデックス情報の2枚目</target>
        </trans-unit>
        <trans-unit id="f2c6b564bd8119e16a3e573a6f9e7c6d1ac7820f" translate="yes" xml:space="preserve">
          <source>Section</source>
          <target state="translated">Section</target>
        </trans-unit>
        <trans-unit id="abbdc2b8f6673a1b63bbd1262eceea1c936362ed" translate="yes" xml:space="preserve">
          <source>Sections of the database that are used more than once, or not at all</source>
          <target state="translated">複数回使用されているデータベースのセクション、または全く使用されていないセクション</target>
        </trans-unit>
        <trans-unit id="bbd835e731943b498ec1909cabc1e38a99b94296" translate="yes" xml:space="preserve">
          <source>Security and compatibilities enhancements to &lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer()&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer（）の&lt;/a&gt;セキュリティと互換性の強化：</target>
        </trans-unit>
        <trans-unit id="8229f87bed66ece3cde105695968321f8308f48e" translate="yes" xml:space="preserve">
          <source>See &quot;&lt;a href=&quot;queryplanner-ng#fossilcasestudy&quot;&gt;The Fossil NGQP Upgrade Case Study&lt;/a&gt;&quot; for another real-world example of using CROSS JOIN to manually control the nesting order of a join. The &lt;a href=&quot;queryplanner-ng#howtofix&quot;&gt;query planner checklist&lt;/a&gt; found later in the same document provides further guidance on manual control of the query planner.</source>
          <target state="translated">CROSS JOINを使用して結合のネスト順序を手動で制御する別の実際の例については、「&lt;a href=&quot;queryplanner-ng#fossilcasestudy&quot;&gt;Fossil NGQPアップグレードケーススタディ&lt;/a&gt;」を参照してください。&lt;a href=&quot;queryplanner-ng#howtofix&quot;&gt;問い合わせプランナのチェックリスト&lt;/a&gt;と同じ文書の後半たクエリプランナの手動制御に関する更なるガイダンスを提供します。</target>
        </trans-unit>
        <trans-unit id="c132fc8253da62def423dbfbc9e5cc8f879698fd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dbstatpath&quot;&gt;description above&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dbstatpath&quot;&gt;上記の説明を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="cc1406da130a4d62c75c39d9868f5406eb3bf35f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#sqlite3_pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt; for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#sqlite3_pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b6719884b2a74c479ea6999c99dbf311d703b384" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://sqlite.org/'about.html'&quot;&gt;About SQLite&lt;/a&gt; for an overview of the SQLite software and what it does and how it is different.</source>
          <target state="translated">SQLiteソフトウェアの概要とその機能、およびその違いについては、SQLite &lt;a href=&quot;https://sqlite.org/'about.html'&quot;&gt;についてを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4a83862c5e73732d34809bc526149b8874a0b009" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;limits&quot;&gt;limits.html&lt;/a&gt; for a full discussion of the limits of SQLite.</source>
          <target state="translated">SQLiteの制限の詳細については、&lt;a href=&quot;limits&quot;&gt;limits.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5702be68fafd67a2aafc342a3e205c709913ea24" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt; for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="67c5fd71325238ec1a4341afb9b6cba9315dbef4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt; for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;sharedcache&quot;&gt;SQLite共有キャッシュモード&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="61a08f389a25b863d0fca5015a2885ff6fd5c8cd" translate="yes" xml:space="preserve">
          <source>See Also:</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="93901f63e20a4a7a74fbfdbc37b4075a185c71c6" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../backup&quot;&gt;Using the SQLite Online Backup API&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../backup&quot;&gt;SQLiteオンラインバックアップAPIの使用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3af600b61585b909b60b4a99e040268e0c2a856f" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../sharedcache&quot;&gt;SQLite共有キャッシュモード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c1b1d19f5868cf4d3018fb518dcfa6d87cc98cd" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../unlock_notify&quot;&gt;Using the SQLite Unlock Notification Feature&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;../unlock_notify&quot;&gt;SQLiteロック解除通知機能の使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7616c5088158f54a825d33709957167b8a16116d" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;backup&quot;&gt;Using the SQLite Online Backup API&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;backup&quot;&gt;SQLiteオンラインバックアップAPIの使用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f41977d4fff20685334fca06b182777534d39401" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;sharedcache&quot;&gt;SQLite共有キャッシュモード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f9e82ef52e9fb93669665e75ad01f2483ef4742" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;unlock_notify&quot;&gt;Using the SQLite Unlock Notification Feature&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;unlock_notify&quot;&gt;SQLiteロック解除通知機能の使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="432cb254f15763b7805bdd86025f5f8cf43aec8f" translate="yes" xml:space="preserve">
          <source>See above.</source>
          <target state="translated">上記を参照してください。</target>
        </trans-unit>
        <trans-unit id="383b0d124cc39b4f92b719a490622adb9db1929b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="588a701bb21ea6498fe1cee5a08846f3a6f8999b" translate="yes" xml:space="preserve">
          <source>See also lists of &lt;a href=&quot;objlist&quot;&gt;Objects&lt;/a&gt;, &lt;a href=&quot;constlist&quot;&gt;Constants&lt;/a&gt;, and &lt;a href=&quot;funclist&quot;&gt;Functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;objlist&quot;&gt;オブジェクト&lt;/a&gt;、&lt;a href=&quot;constlist&quot;&gt;定数&lt;/a&gt;、&lt;a href=&quot;funclist&quot;&gt;関数の&lt;/a&gt;リストも参照してください。</target>
        </trans-unit>
        <trans-unit id="4c2ab778a085857c109eb7e8e5a5333d9b57f676" translate="yes" xml:space="preserve">
          <source>See also requirements H35180 and H35210 above.</source>
          <target state="translated">上記のH35180およびH35210の要件も参照してください。</target>
        </trans-unit>
        <trans-unit id="a69045200fe6eb4eefb6543d32d1c3986dee3e7a" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_rollback_hook()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_hook()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_rollback_hook（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_hook（）&lt;/a&gt;インターフェースもご覧ください。</target>
        </trans-unit>
        <trans-unit id="5ee912df6c5ce3441a9860f1d9730f7218ccc4b5" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook（）&lt;/a&gt;インターフェースも参照してください。</target>
        </trans-unit>
        <trans-unit id="26d056bc4928cd96df481ba3bb3da36ee6f31042" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../lang_corefunc#load_extension&quot;&gt;load_extension() SQL function&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../lang_corefunc#load_extension&quot;&gt;load_extension（）SQL関数&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="db4a83343835929e5d813cffa0b4f2b9793757ab" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;cintro&quot;&gt;Introduction To The SQLite C/C++ Interface&lt;/a&gt; for an introductory overview and roadmap to the dozens of SQLite interface functions.</source>
          <target state="translated">多数のSQLiteインターフェイス関数の概要とロードマップについては、&lt;a href=&quot;cintro&quot;&gt;SQLite C / C ++インターフェイスの&lt;/a&gt;概要も参照してください。</target>
        </trans-unit>
        <trans-unit id="339862dc13bc1d57d7288f6688c75379763064fe" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_commit_hook()&lt;/a&gt;, &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_rollback_hook()&lt;/a&gt;, and &lt;a href=&quot;preupdate_count&quot;&gt;sqlite3_preupdate_hook()&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;commit_hook&quot;&gt;sqlite3_commit_hook（）&lt;/a&gt;、&lt;a href=&quot;commit_hook&quot;&gt;sqlite3_rollback_hook（）&lt;/a&gt;、&lt;a href=&quot;preupdate_count&quot;&gt;sqlite3_preupdate_hook（）&lt;/a&gt;インターフェースもご覧ください。</target>
        </trans-unit>
        <trans-unit id="a86c99c5bddb628e2b84fed31d31db9e2daeedae" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension() SQL function&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension（）SQL関数&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="9551bbf4b06565a29addd67ff920566d10532258" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id pragma&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_schema_version&quot;&gt;schema_version pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_idプラグマ&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_schema_version&quot;&gt;schema_versionプラグマ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="b61abea4b86316c9bf1e59bfa90fae500f63cc2b" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id pragma&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_version pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_idプラグマ&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_versionプラグマ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="2e8ceb2d0a12e5d383c6c33d1d4332e5b5c058b2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_fullfsync&quot;&gt;fullfsync&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt; pragmas.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_fullfsync&quot;&gt;fullfsync&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt;プラグマも参照してください。</target>
        </trans-unit>
        <trans-unit id="2ff63025923714eccfd1fedacdb3cbe9372c3a93" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;hard_heap_limit pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;hard_heap_limitプラグマ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="303adc506bf547b9de95bc776aebd335c64bd8fc" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA quick_check&lt;/a&gt; command which does most of the checking of PRAGMA integrity_check but runs much faster.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA integer_checkの&lt;/a&gt;ほとんどのチェックを実行しますが、はるかに高速に実行されるPRAGMA quick_checkコマンドも参照してください。</target>
        </trans-unit>
        <trans-unit id="48f81b34f529fa4aeb1d561e1f3508b8413b778f" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limit pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limitプラグマ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="a25a2daadf8d2856a4719203849a4c0af3fabe6d" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_version pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_versionプラグマ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="2c007784e950bb7f56540883b26bce1ca576b693" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;quirks&quot;&gt;Quirks, Caveats, and Gotchas&lt;/a&gt; of SQLite.</source>
          <target state="translated">SQLiteの&lt;a href=&quot;quirks&quot;&gt;癖、警告、および注意点&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="94811ce2c3eb27494bcc158d862a7722c04a876e" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook（）&lt;/a&gt;インターフェースも参照してください。</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="22db3f40cf05b62413d309725844e929dbbe0d0d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#SQLITE_ABORT_ROLLBACK&quot;&gt;extended result code definitions&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#SQLITE_ABORT_ROLLBACK&quot;&gt;拡張結果コード定義&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5824dbe2a36217f98b17445aa829e98c24d78c0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#SQLITE_FCNTL_BEGIN_ATOMIC_WRITE&quot;&gt;file control opcodes&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#SQLITE_FCNTL_BEGIN_ATOMIC_WRITE&quot;&gt;ファイル制御オペコード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a888d72c2aa71ea4f9e6a712bc7addf37488e84a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e55f94f79f49c504145ad61691b8c42ba593cff9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6713e8fdaa1ea389a2f09e3a9c9374683ab6d6b0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11dc488cf1e9db5102b28629a96e4392dc29104c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c6912b2b4045c6f070e0edaa93c0875be5fd821" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_blob_close&quot;&gt;sqlite3_blob_close（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a3f665ed626f2acf9c339d54e23c6812da36531" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c57adf1e621a68c73c17c8b0ecd787edffeb3799" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e289aacb066a0de1940f21ad59b6642609ced4a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed16()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collat​​ion_needed（）&lt;/a&gt;および&lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collat​​ion_needed16（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="513ba9fc0134937d2763a01c62173350a81c3bde" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_column_count&quot;&gt;sqlite3_column_count（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf131b5c38b078229e14995e1d46c942918a4628" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="389c907363aca1a027a67a5b885a2319a4ec35ed" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_data_count&quot;&gt;sqlite3_data_count()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_data_count&quot;&gt;sqlite3_data_count（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0afc966be42fd6b30d673383499cb0059d1ed149" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81c3b36cbd377bb3ed1664b49ec3d43a5bc80371" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10a7701e6ed3e748294878d5accec5c9e67c8652" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_drop_modules&quot;&gt;sqlite3_drop_modules()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_drop_modules&quot;&gt;sqlite3_drop_modules（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c38544cc50a3f638d9d29eb83eea228ba0b685b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion_number()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion_number（）&lt;/a&gt;、&lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_sourceid（）&lt;/a&gt;、&lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version（）&lt;/a&gt;、&lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58d0868f2357d36a8bd2095b2af1bb408179b89d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_notheld()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held（）&lt;/a&gt;および&lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_notheld（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a95fa8aab0e3bfa1d373ea225784189d0d07162" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_release_memory&quot;&gt;sqlite3_release_memory()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_release_memory&quot;&gt;sqlite3_release_memory（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="894a2c673c7c3998c0146ab1462bd48997eeefeb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension（）&lt;/a&gt;および&lt;a href=&quot;#sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c349eaf02fbc75040833b27273fe78ce351a8517" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status（）&lt;/a&gt;および&lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="c4abfc13135b30c5ca35737473e62ae50fbba518" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status（）&lt;/a&gt;および&lt;a href=&quot;#sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74b0b0a73811f9aef63fb1988c2a0ccf696926fc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b2c6cde7a64226fbe2ef3634045cd57dde9aaa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_strglob&quot;&gt;sqlite3_strglob()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_strglob&quot;&gt;sqlite3_strglob（）&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="20e4f725a3076fc6b2bb57f870226dcb7c2cd741" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_strlike&quot;&gt;sqlite3_strlike（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="435b8c7f1343e259185da08da01ab1604658c57c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de67037e66e6bc2405fafd89b02748ccb563c8f4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="577203775c48a36ecdbe0e166cc73a6f94c49525" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../gencol&quot;&gt;gencol.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../gencol&quot;&gt;gencol.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81cf66782a01b719b906500422d08c6d8d672682" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c778a0f903e6e7a229a74dcc043ab7ce222f8e91" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;&lt;a href=&quot;../lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang&quot;&gt;lang.html &lt;/a&gt;&lt;a href=&quot;../lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a1623c388195369765189e361912596c2725840" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cca5d37155aa556de6dfac0b27a0e25fc7f06d7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;プラグマ。 html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a6be53babfb0698dca91e0931b8046114c3258d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52bb34faf16293e7bf50504a84a6781db371ee0f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a14f661ac8c092f4fc1d99fc6d9d99e0d8ec786" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_conflict&quot;&gt;lang_conflict.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_conflict&quot;&gt;lang_conflict.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c07322809e26e45be23a95893f749e03af5c5ed5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="938b9621b107714962482883b255c3d80c08b6e7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15598ecd618474aabf3591017c513af8de8a6a3b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0485f89bf00139a21000442b6a6990659cb64b16" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66948fd5b0afaf1cdc01aa29ecea4c1bfedab9de" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version（）&lt;/a&gt;および&lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ee139ad90928eace8c30779bd5b6becd4f09c01d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79cd4e2359b15e6acab9aede873d664f2ede5a75" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2dfcbfb2abe59925659cc429708c6aec7eb406e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="658fb74ef352e297b395f96f857ceb7d3c615e2b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d94bc3fd2a819178c3e4749e7aa371e596de86" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f527f9debd0e925c5e233506e62bf945cd29ee28" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_indexedby&quot;&gt;lang_indexedby.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_indexedby&quot;&gt;lang_indexedby.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21b664cff26300df1357262d6ec594fb9ee3555c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91b6c24c68f47aa751a5b5b8df600dcca07d313d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1033e8985d4463e32f19095fed06fce8ea5476c1" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9218f7d1d52e1191bd9b8fb6db8d70bf8dc438f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="466d46beb84c6c8963a2f748f70f326309fffab5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4aef55367a00e308dff9639c75772858c63ff83" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56e9b6723fb1585f18d7b60fce22ac17b792e417" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d13d914d08b8f92116b29032480e38cbe265479" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdd1d8b761b061d5aeaf839bfb496966e3e11c8e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="716c85dad4326320b2465878481f19b320bc4abf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9246cf2807990b095780ac9e1b0dd561919984" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f43b3a3c761c07b37c7c96d59a19f91da1c40c6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59cd8724dea12b8ea965ab667c74e2d1d4fb024b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f03712d7de35eafa06ad69d4f67d162931ceee8e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="344cad8b96fcafcf74d42ebb4e8917a07994e94e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cafbbb26b01fe4aad5518dd3d8329918a47b638c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="194bd03307aa26e18f55046fce3dc35e20b6f469" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;&lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html &lt;/a&gt;&lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bbc01924ed08271e9d7d2fafae0daf0758d4c29" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90a9a8514c72ec12bafb541c92e76fe75343369a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e20ee80f88a596c72e3b5175803d94c62b49d45" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="487a9f7edcc9acbd36e71269b10f3dabc3570792" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb4119b7d69b4e6da177cbf6ff9c4d155ae67444" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html &lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;プラグマ。 html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="695ecd24fe66b529919da4afdf535e5125baa96e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0014eee39d17cd320cfc0ffbaab392f9f613f85" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29fadfcd5bcddd556613ead0e99dda8fc7fba83b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92b532e0d0d9df2c59df298af30c18a7e1da5dfe" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c013a0edc28859aa3e70e3276bdce16a070ed083" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a7eea93b457a57fc7fe1137ef59827626192c5a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4c2bc470b47131356a55eedacd462eb96e84418" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fe4145cb7c50a0d418d258d06542a1f8cb0dd39" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../printf&quot;&gt;built-in printf()&lt;/a&gt;, &lt;a href=&quot;../lang_corefunc#printf&quot;&gt;printf() SQL function&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;../printf&quot;&gt;組み込みのprintf（）&lt;/a&gt;、&lt;a href=&quot;../lang_corefunc#printf&quot;&gt;printf（）SQL関数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53567bfae3ebbf8bd0c18510f50128b0fee6e144" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="907bef21249483a496207cb807a74d758d2d3c63" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c1aadec23594d958a843556680b17a72abac74b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f45be66a2c5bcb3bc142d2c447ea57f0f20e31c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name（）&lt;/a&gt;、&lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37c010f71fba70b74109bbdc2b1ce08d14015c48" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;, &lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt;, &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt;, &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;blob_close&quot;&gt;sqlite3_blob_close（）&lt;/a&gt;、&lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen（）&lt;/a&gt;、&lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;、&lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes（）&lt;/a&gt;、&lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3dbeda6bcc23b238fd884c3cfaafcc8fb5f1870" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34c05c2c7478ddfc9595328b9ea47d96e84f4152" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b21a0b7337431e9ee24e69d231fe8302762a853" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;c_abort_rollback&quot;&gt;extended result code definitions&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;c_abort_rollback&quot;&gt;拡張結果コード定義&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfe354170b5e869c7270b91ade687416a54c0183" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;c_fcntl_begin_atomic_write&quot;&gt;file control opcodes&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;c_fcntl_begin_atomic_write&quot;&gt;ファイル制御オペコード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37196415e76fa9d675c871c64b90e815741d0f92" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed()&lt;/a&gt; and &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed16()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collat​​ion_needed（）&lt;/a&gt;および&lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collat​​ion_needed16（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="879f7e7ea46313e2ea71652b9ca7565db57df9c6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;column_count&quot;&gt;sqlite3_column_count（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="319399ff5f7d4c689210338dddef1fb99518d24d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;compile#omit_automatic_index&quot;&gt;SQLITE_OMIT_AUTOMATIC_INDEX&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;compile#omit_automatic_index&quot;&gt;SQLITE_OMIT_AUTOMATIC_INDEX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b23baf151295ad1d1fe5328bd71961f497879ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8661ec8b737499d91726c5f2f8d9c2e2296d1bc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;data_count&quot;&gt;sqlite3_data_count()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;data_count&quot;&gt;sqlite3_data_count（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e1099949ad00bb15eb69a605f4b4b3bbfd1aff7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;db_release_memory&quot;&gt;sqlite3_db_release_memory（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bda4dfc70b5f71949880b44f021fef0f7b01aa87" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb201238a04d02eb3cb27c3d4ccc509df3614a14" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;drop_modules&quot;&gt;sqlite3_drop_modules()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;drop_modules&quot;&gt;sqlite3_drop_modules（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2366873b192e78c89709e7d18ff2db2dcc967a55" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;gencol&quot;&gt;gencol.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;gencol&quot;&gt;gencol.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html＃tablecoldef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="524073d1a4577e6b594022dd278f36bd2dba0d4a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bc17dac7d9752b7811c2a93ab58e831060d9b9d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;&lt;a href=&quot;lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang&quot;&gt;lang.html &lt;/a&gt;&lt;a href=&quot;lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e55f6b8a291e9bc6872ef07f19648c06a63c7f96" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html#raise&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html＃昇給&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃化合物&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.htmlの＃ simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3094ad1d98461c25d851d9b58614f8484829a717" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html#fromclause&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃化合物&lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html＃fromclause &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃ simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a742de555ecf28aa329a8d657a04db2888df41b9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃化合物&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html＃recursivecte &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85abca3267512af73ec8afacb8584e803d672ab2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃化合物&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14529eb0437c823ab68b15a8cd5ba3d6d655b2d3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃化合物&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html &lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html＃の構文&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="199a3a4fc6414fdf6ed7493a3c4733ad2cdbdb41" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html#booleanexpr&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html＃booleanexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caee65c71137c00f3261816c349b1186b87ab07f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d5357ce486345b38e495fdd052bc12b972eb613" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html#altertabaddcol&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html＃altertabaddcol &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df7e64b5e3be337fc1f98f552de8d797b4c2b99a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html#altertabaddcol&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html＃altertabaddcol &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html＃tablecoldef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83a5b6f8bb5171cdb36ccd5c1ba734c2c233150b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_conflict&quot;&gt;lang_conflict.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;lang_createtable.html#notnullconst&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_conflict&quot;&gt;lang_conflict.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;lang_createtable.html＃notnullconst&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6fcd1bfb338ad16eab298ffc4c9d868843b9b21" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html＃tablecoldef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a36b3fb23e6333db428ab6ad00263be2d938abe" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6b9466ba508d0dbec4f6c657f9fbfd7e620fc37" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a54b9974971120efa52636fcabe0715b49415a8" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cb6c7d068dfff53d11c81dd36fe7afde23d11e5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version（）&lt;/a&gt;および&lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0913f10eba8984cde458a594e9723dae1e7b43d4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html＃primkeyconst &lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html＃uniqueconst &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c7d4103ad522f08124a6ecef11b7bef6bb05216" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e9835eae374451ebfe2dabdb26ce73fec9a591b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d81d89904dc49fa50fb5551880967e2b9a7226cb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html＃primkeyconst &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html＃tablecoldef &lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html＃uniqueconst&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aed25ab420fb0098c44d0bf5304a4aa707b088f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c514627329ad2c33195dc084716f51f489e5370e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e08547629c50834603a3c7451218441b495de5f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_indexedby&quot;&gt;lang_indexedby.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_indexedby&quot;&gt;lang_indexedby.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cba534e77f5dd456a33da03494144a81d39264cc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfa4d667a255f0c6828f6b1f4d098bfa8323d6e2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html＃recursivecte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9614960e8904f53093287bbe50e05a997ac3824b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9b4f140896556a1fc2adbe8ac95c3f7dc29ba8a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eef9b3d74c59deea364b6f6ac6f20759d658b7f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c39b25e28ca93d32b847b9c1af840e472af33477" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a07a8a7f1e0538e7658544150917395127562b6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6d60ea259f137afddc03af15fbdb1094689ece4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="724cccf74d74960b6796259fcacc12e153ae3f1a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f80c5c57cfc045f570327a845f8127410c55f865" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76e8ddefbc493145192fc193cef9e039c65a902e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="863b8e5b897ce238b67c5c8556989e2766293313" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf4b794db9d56879de07eb5f16a8bc2477ca90d4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="702f2b35823dcfd93d045f7d778af2c45120abe7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62511da10fbf7f958f155307ba6d4d102f35f3be" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html#booleanexpr&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html＃booleanexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="450581ca6e9de72c74dcb192b37f5747276658f1" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_expr#litvalue&quot;&gt;lang_expr.html#litvalue&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_expr#litvalue&quot;&gt;lang_expr.html＃litvalue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae501b11617c0c13b2d3f762254b4ff760b36123" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d27e4055359a8aeac2ce66818352ec73c032ea4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bb5ce5fe2a8f6a8de65bf4e7bd8b65d204d6093" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;&lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html &lt;/a&gt;&lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="076fe51a7e12da80f3c9d8927a2ca4548526aa30" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9f5995b5a48f0fca91e5e282ac6950660e6528d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃compound &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃simpleselect&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d233e7ebdff319d51e7bd5e01dba623d32fa9ca0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html＃compound&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbbded1021d4435d1532c9af272fa7bccfd9c1d0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html＃simpleselect&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e964459d5f1a2e61a2e2cf50351a352d90c8e8f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="600ef78a6f3fb8794c7d469e740f494486a2ac18" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7f048f330189613480493245819630da7093938" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_update#upfrom&quot;&gt;lang_update.html#upfrom&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_update#upfrom&quot;&gt;lang_update.html＃upfrom&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ea152fe6b3f2ae351dd12abd4e8bbd78773fa59" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html#raise&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html＃raise &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_select.lang &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;select.lang &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;select.lang &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;select.html &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html lang_insert.html .htmlを＃simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b469ebdf9c6c7fd0d09e8c5ea21cd29a3c4e951" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html#fromclause&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.comp &lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.com &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html &lt;/a&gt;lang_select.html lang_select.html .htmlを＃simpleselect &lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb12fe633d07848eb5eb066e9d5b752ffef1d5c2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">次も参照してください：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.comp &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.comp &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_select.html lang_select.html .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html＃recursivecte &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bed845bd614c9a71113bf4e2612d286c51c5869c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_select.html lang_select.html .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e12f9a6f89dbcc84809953e2fd797afd11b684ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_select.html lang_select.html .htmlを&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html &lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html＃の構文&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a66f16d59067e2dbd5b05e42ceffc5ed1382738" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html＃primkeyconst &lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html＃uniqueconst &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10943101e04a10c530372cbdc34663b3698984dc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9086346182d6b8670bc03f1e0367b327298a39af" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73bb61ec2320cac51957bb5504dbbbfced735f05" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d881dae8fea8469aae36dd2ee790aadd7154e19f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11284ab305581840484673ba82b0814730899f19" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html＃recursivecte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eb5bc217d7c409f9004989bbcff9c4c5cf371c2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html＃recursivecte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa9202aad9353cf3bd304d5cebf941f8826269aa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion()&lt;/a&gt;, &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion_number()&lt;/a&gt;, &lt;a href=&quot;libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion（）&lt;/a&gt;、&lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion_number（）&lt;/a&gt;、&lt;a href=&quot;libversion&quot;&gt;sqlite3_sourceid（）&lt;/a&gt;、&lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version（）&lt;/a&gt;、&lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59473a97c323cc840c551bb609b5c7d0085ba6eb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_held()&lt;/a&gt; and &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_notheld()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_held（）&lt;/a&gt;および&lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_notheld（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="630f877a63f0639718e0dd30c5ba43ed3ce847e4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;, &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;、&lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;、&lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e32027cc4318d132c8299361aadd44d5d68a5d39" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;, &lt;a href=&quot;opcode#PureFunc&quot;&gt;PureFunc&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;、&lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;、&lt;a href=&quot;opcode#PureFunc&quot;&gt;PureFunc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4db38cc313bd0bbfdf49c1b12a83a1dee3351e3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Clear&quot;&gt;Clear&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#Clear&quot;&gt;クリア&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5545504df0c88112cd5943b39942072e292d1b27" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Destroy&quot;&gt;Destroy&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#Destroy&quot;&gt;破棄&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c38d168152c392bc03b5b47997e5daa1c0d099" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#EndCoroutine&quot;&gt;EndCoroutine&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#EndCoroutine&quot;&gt;EndCoroutine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08083583312e5bf15079e8c8852f8fa2944302ac" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;、&lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;、&lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="728b62ca2d8ad20f62ae93f93571e44c2d32c79b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#SeekRowid&quot;&gt;SeekRowid&lt;/a&gt;</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、&lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;、&lt;a href=&quot;opcode#SeekRowid&quot;&gt;SeekRowid&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fd951d3cf17be16c77767dc1e177d397520dea6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekGt, SeekGe, SeekLe</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、SeekGt、SeekGe、SeekLe</target>
        </trans-unit>
        <trans-unit id="d6d2c334da88e15e756581a4f59c5b04ba796944" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekGt, SeekGe, SeekLt</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、SeekGt、SeekGe、SeekLt</target>
        </trans-unit>
        <trans-unit id="463d18a76e981873861ffff7fe5e29e0c6efda87" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekLt, SeekGe, SeekLe</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、SeekLt、SeekGe、SeekLe</target>
        </trans-unit>
        <trans-unit id="5e40d5e71843bb61f4bcfed5badcd97abfd6de6d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekLt, SeekGt, SeekLe</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、SeekLt、SeekGt、SeekLe</target>
        </trans-unit>
        <trans-unit id="a7f677a2db2a47580eeed83b42a807730b2d65e8" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt;, &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</source>
          <target state="translated">次も参照：「&lt;a href=&quot;opcode#Function&quot;&gt;関数」&lt;/a&gt;、「&lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep」&lt;/a&gt;、「&lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal」&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3e78d904f537e5ecc229d2e4161074c489fc983" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Function0&quot;&gt;Function0&lt;/a&gt;, &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</source>
          <target state="translated">次も参照：「&lt;a href=&quot;opcode#Function0&quot;&gt;Function0」&lt;/a&gt;、「&lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep」&lt;/a&gt;、「&lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal」&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27fe557b8f91eb0f3354ec57fe69933ee8436f35" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#InitCoroutine&quot;&gt;InitCoroutine&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#InitCoroutine&quot;&gt;InitCoroutine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cea6a531330c212ca3ca25d87fa43558d171705c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、&lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;、&lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab8929f50dfeea96d663b01dc70be8c6ea741b4c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;. SeekGe</source>
          <target state="translated">次も参照してください：&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、&lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;、&lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;。シークゲ</target>
        </trans-unit>
        <trans-unit id="df9b249fadb76a9e89f33c8e160d939f3e2edb65" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#SeekHit&quot;&gt;SeekHit&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;、&lt;a href=&quot;opcode#SeekHit&quot;&gt;SeekHit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77125e42082bd4063983bc366f2a58ec8989ce3d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;, &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;、&lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42804456c026cdba0e420c9f8f25e7f6180f2cc2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;, &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;、&lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="585491e299c7017859c50fd2fe8c2f25dc1e9732" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;, &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</source>
          <target state="translated">次も参照：&lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;、&lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4168a3bf16312be37846589fb27785a113af6811" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Prev&quot;&gt;Prev&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#Prev&quot;&gt;前へ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c516f46aa712315eea6584868cd627c02de7056" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Rowid&quot;&gt;Rowid&lt;/a&gt;, &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;opcode#Rowid&quot;&gt;ROWIDの&lt;/a&gt;、&lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecordを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f01472d4da0f8e936c195c67175f791d08d0adbf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d54723288e675ac0abb24e0dd779375fca23df6b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfa2363ed594f2b2eede2b270349dfc67d7ebc18" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html＃syntax&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a4951221a904acb6ba86986765efc2037a09378" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;printf&quot;&gt;built-in printf()&lt;/a&gt;, &lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf() SQL function&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;printf&quot;&gt;組み込みのprintf（）&lt;/a&gt;、&lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf（）SQL関数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99bd38c265a6fb23dc830f7fe8c080eded5d7a07" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;release_memory&quot;&gt;sqlite3_release_memory()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;release_memory&quot;&gt;sqlite3_release_memory（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98b434bc0d8b8d185283486c42d9be672854146f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;rescode#busy_recovery&quot;&gt;SQLITE_BUSY_RECOVERY&lt;/a&gt; and &lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rescode#busy_recovery&quot;&gt;SQLITE_BUSY_RECOVERY&lt;/a&gt;および&lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="7299f9082103db8b34938e68ec91bd133f202916" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension()&lt;/a&gt; and &lt;a href=&quot;cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension（）&lt;/a&gt;および&lt;a href=&quot;cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3c9ecf5456096c4af70cc1a45db8215c53ecad" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;status&quot;&gt;sqlite3_status（）&lt;/a&gt;および&lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status（）&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="81c9581d614ee93295a05913a13ce83a1c537800" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;status&quot;&gt;sqlite3_status（）&lt;/a&gt;および&lt;a href=&quot;stmt_status&quot;&gt;sqlite3_stmt_status（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51bddd2f47aedb88c82ed00196f1d5f18d63b931" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5f9c8eaf62fde3d86c43f634a7ab02bd2fa6122" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;strglob&quot;&gt;sqlite3_strglob()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;strglob&quot;&gt;sqlite3_strglob（）&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="0933bf0a406419507f269f3297ab20733c0130b5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;strlike&quot;&gt;sqlite3_strlike（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="673270029c9264ee605b8c3d4c2fd772ac5ed2ec" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7a6a573f1a49c137144c2c0c0b973878be6af5b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b9de33ebd0cee270413e31ceb4bf9982bf25845" translate="yes" xml:space="preserve">
          <source>See also: SQL functions &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; and the &lt;a href=&quot;../pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt;.</source>
          <target state="translated">参照：SQL関数&lt;a href=&quot;../lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used（）&lt;/a&gt;および&lt;a href=&quot;../lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get（）&lt;/a&gt;と&lt;a href=&quot;../pragma#pragma_compile_options&quot;&gt;compile_optionsプラグマ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83dccf87582bc1362c408c238feac4693c82e492" translate="yes" xml:space="preserve">
          <source>See also: SQL functions &lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; and the &lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt;.</source>
          <target state="translated">参照：SQL関数&lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used（）&lt;/a&gt;および&lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get（）&lt;/a&gt;と&lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_optionsプラグマ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61cca4e5d339d369ec47f24cb61df5080a8fe143" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../threadsafe&quot;&gt;スレッドモードの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6f095aa19ffa800ceddf0ec91e83f4521ad7e3e5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../uri&quot;&gt;URI filename&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../uri&quot;&gt;URIファイル名の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="14bd56e01493d3e179ad29ee876d123ae68f7d39" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;assert&quot;&gt;Use Of assert in SQLite&lt;/a&gt; document for additional information about how SQLite uses assert().</source>
          <target state="translated">SQLiteがassert（）を使用する方法の詳細について&lt;a href=&quot;assert&quot;&gt;は、SQLite&lt;/a&gt;ドキュメントのUse Of assertを参照してください。</target>
        </trans-unit>
        <trans-unit id="b7c31bb847b7fb9dd4bac9cc5dd5dc1c96846800" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;autoinc&quot;&gt;SQLite AUTOINCREMENT documentation&lt;/a&gt; for detailed instructions on what AUTOINCREMENT does and does not do in SQLite.</source>
          <target state="translated">&lt;a href=&quot;autoinc&quot;&gt;SQLiteでのAUTOINCREMENTの&lt;/a&gt;機能と機能の詳細については、SQLite AUTOINCREMENTのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="53b783989abda8014ea3d71299fadcaac3ac76a4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;datatype3&quot;&gt;Datatypes in SQLite Version 3&lt;/a&gt; document for a detailed discussion of the type system in SQLite.</source>
          <target state="translated">&lt;a href=&quot;datatype3&quot;&gt;SQLite&lt;/a&gt;の型システムの詳細については、SQLiteバージョン3ドキュメントのデータ型を参照してください。</target>
        </trans-unit>
        <trans-unit id="b929f22f98901beb9b1139bf55e5ff321f37875f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;howtocompile&quot;&gt;How To Compile SQLite&lt;/a&gt; document for instructions and hints on how to compile the program shown above.</source>
          <target state="translated">上記のプログラムをコンパイルする手順とヒントについては、&lt;a href=&quot;howtocompile&quot;&gt;SQLiteのコンパイル方法の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d23d8904a4dd8b2f59b61ec1f1d5eb8f80e47737" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information on aspects of using SQLite in a multithreaded environment.</source>
          <target state="translated">マルチスレッド環境でSQLiteを使用する場合の詳細については、&lt;a href=&quot;threadsafe&quot;&gt;スレッドモードの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a87fd9fe2045f5442c46fbc8912602fdbac0e8ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;threadsafe&quot;&gt;スレッドモードの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="30f1bf85315b67413bef1d018f3d407e1c5b8c20" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;uri&quot;&gt;URI filename&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;uri&quot;&gt;URIファイル名の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="86902a781e00345ab7ead57f5c2f261448269986" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;vtablist&quot;&gt;list of virtual tables&lt;/a&gt; page for a longer list of actual virtual table implementations.</source>
          <target state="translated">実際の仮想テーブル実装のより長いリストについては、&lt;a href=&quot;vtablist&quot;&gt;仮想テーブル&lt;/a&gt;のリストのページを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd6efac597cb0708970fe4961b56a3edc46475fe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;whentouse&quot;&gt;Appropriate Uses For SQLite&lt;/a&gt; document for additional information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;whentouse&quot;&gt;SQLite&lt;/a&gt;の適切な使用に関するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="07ba693c1bca5dde244a27275e6109ebcc9602e4" translate="yes" xml:space="preserve">
          <source>See the separate &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt; documentation for the additional trailing syntax that can cause an INSERT to behave as an UPDATE if the INSERT would otherwise violate a uniqueness constraint. The &lt;a href=&quot;lang_upsert&quot;&gt;upsert clause&lt;/a&gt; is not allowed on an &quot;INSERT ... DEFAULT VALUES&quot;.</source>
          <target state="translated">INSERTが一意性の制約に違反する場合にINSERTがUPDATEとして動作する原因となる可能性のある追加の構文については、別の&lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt;ドキュメントを参照してください。&lt;a href=&quot;lang_upsert&quot;&gt;UPSERT句は&lt;/a&gt;、「INSERT ...デフォルト値」に許可されていません。</target>
        </trans-unit>
        <trans-unit id="939683e9d52824a9f73508cf71bd83e60abff90a" translate="yes" xml:space="preserve">
          <source>See xPhraseFirst above.</source>
          <target state="translated">上記の xPhraseFirst を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a932238dbfaf0b21024ff5809159c0de781840d" translate="yes" xml:space="preserve">
          <source>See xPhraseFirstColumn above.</source>
          <target state="translated">上記の xPhraseFirstColumn を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f853fa8d7ff147b89090825d00dc78b2f44a321" translate="yes" xml:space="preserve">
          <source>SeekEnd</source>
          <target state="translated">SeekEnd</target>
        </trans-unit>
        <trans-unit id="9fadfc9b512132149df920b10f206da2333bd9fa" translate="yes" xml:space="preserve">
          <source>SeekGE</source>
          <target state="translated">SeekGE</target>
        </trans-unit>
        <trans-unit id="1087f36e7b18281af36dad7cdbb8cd08b7115d15" translate="yes" xml:space="preserve">
          <source>SeekGT</source>
          <target state="translated">SeekGT</target>
        </trans-unit>
        <trans-unit id="460ea4a32fd1274da2db98168e01568ac9ce63a6" translate="yes" xml:space="preserve">
          <source>SeekHit</source>
          <target state="translated">SeekHit</target>
        </trans-unit>
        <trans-unit id="0b4f0d008f842f314db6efb3fa8c1e4f9ad7e37b" translate="yes" xml:space="preserve">
          <source>SeekLE</source>
          <target state="translated">SeekLE</target>
        </trans-unit>
        <trans-unit id="5c9e6758b219b2706a95d7da88c60ef0eba6fe03" translate="yes" xml:space="preserve">
          <source>SeekLT</source>
          <target state="translated">SeekLT</target>
        </trans-unit>
        <trans-unit id="141e7ed653901b0f647fda720472fc6667150f0c" translate="yes" xml:space="preserve">
          <source>SeekRowid</source>
          <target state="translated">SeekRowid</target>
        </trans-unit>
        <trans-unit id="c6ed6b18512dd3401d381c337b03a01488f90762" translate="yes" xml:space="preserve">
          <source>Segment B-Tree Interior Node Format</source>
          <target state="translated">セグメントB-ツリー内部ノードフォーマット</target>
        </trans-unit>
        <trans-unit id="cc806c94f6fb1d331e8fb663d9d4f7e22793356b" translate="yes" xml:space="preserve">
          <source>Segment B-Tree Leaf Node Format</source>
          <target state="translated">セグメント B-Tree リーフノード形式</target>
        </trans-unit>
        <trans-unit id="fe4aff672a9c860addca0cf569e240d57055e4c7" translate="yes" xml:space="preserve">
          <source>Segment b-trees are prefix-compressed b+-trees. There is one segment b-tree for each row in the %_segdir table (see above). The root node of the segment b-tree is stored as a blob in the &quot;root&quot; field of the corresponding row of the %_segdir table. All other nodes (if any exist) are stored in the &quot;blob&quot; column of the %_segments table. Nodes within the %_segments table are identified by the integer value in the blockid field of the corresponding row. The following table describes the fields of the %_segdir table:</source>
          <target state="translated">セグメント b-木は、接頭辞圧縮された b+木です。segdir テーブル内の各行には、1 つのセグメント b ツリーがあります (上記参照)。セグメント b ツリーのルート・ノードは、%_segdir テーブルの対応する行の &quot;root&quot; フィールドにブロブとして格納されます。他のすべてのノード (存在する場合)は、%_segments テーブルの &quot;blob&quot; 列に格納されます。segments テーブル内のノードは、対応する行の blockid フィールドの整数値で識別されます。以下の表は、%_segdir テーブルのフィールドを説明しています。</target>
        </trans-unit>
        <trans-unit id="982d848bdbaf7ffda27f7d8aca752c82359ccf6f" translate="yes" xml:space="preserve">
          <source>Segment btree</source>
          <target state="translated">セグメント木</target>
        </trans-unit>
        <trans-unit id="40bf8b12088788ad70716eb1793e4cf249c09782" translate="yes" xml:space="preserve">
          <source>Separate INTEGER and REAL affinity</source>
          <target state="translated">INTEGERとREALの親和性を分ける</target>
        </trans-unit>
        <trans-unit id="ba899678ef1e0fdd6b5eb799ee7abdd42cf175bf" translate="yes" xml:space="preserve">
          <source>Separating a database from its journal</source>
          <target state="translated">データベースとジャーナルを分離する</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="841936f1610c7b00e43fa53fbf75fb9b11abf32f" translate="yes" xml:space="preserve">
          <source>SequenceTest</source>
          <target state="translated">SequenceTest</target>
        </trans-unit>
        <trans-unit id="e12fccff7a8e896ad7cfa282736ffc4187cd7eaa" translate="yes" xml:space="preserve">
          <source>Serial Type</source>
          <target state="translated">シリアルタイプ</target>
        </trans-unit>
        <trans-unit id="307ffd15fed4aa8193a8701f2970a48ccbc74bb4" translate="yes" xml:space="preserve">
          <source>Serial Type Codes Of The Record Format</source>
          <target state="translated">レコードフォーマットのシリアルタイプコード</target>
        </trans-unit>
        <trans-unit id="b61faef97a33774dc6199c619a4461fc18672af3" translate="yes" xml:space="preserve">
          <source>Serial type</source>
          <target state="translated">シリアルタイプ</target>
        </trans-unit>
        <trans-unit id="44bc81d8890afcfb324491bf1c0f95cb6563d3cc" translate="yes" xml:space="preserve">
          <source>Serialize a database</source>
          <target state="translated">データベースをシリアライズする</target>
        </trans-unit>
        <trans-unit id="90c4f08f792523112df74bc852026385bd4f8127" translate="yes" xml:space="preserve">
          <source>Session Object Handle</source>
          <target state="translated">セッションオブジェクトハンドル</target>
        </trans-unit>
        <trans-unit id="67e2e54aa75dbe4ba2529dc4e44d334d5c33427e" translate="yes" xml:space="preserve">
          <source>Session objects created using this function should be deleted using the &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; function before the database handle that they are attached to is itself closed. If the database handle is closed before the session object is deleted, then the results of calling any session module function, including &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; on the session object are undefined.</source>
          <target state="translated">この関数を使用して作成されたセッションオブジェクトは、それらがアタッチされているデータベースハンドル自体が閉じる前に、&lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete（）&lt;/a&gt;関数を使用して削除する必要があります。セッションオブジェクトが削除される前にデータベースハンドルが閉じられると、セッションオブジェクトでの&lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete（）&lt;/a&gt;を含むセッションモジュール関数の呼び出し結果は未定義になります。</target>
        </trans-unit>
        <trans-unit id="36d7089db75a5bb06f2dd690097a4896b0ce0449" translate="yes" xml:space="preserve">
          <source>Session objects created using this function should be deleted using the &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; function before the database handle that they are attached to is itself closed. If the database handle is closed before the session object is deleted, then the results of calling any session module function, including &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; on the session object are undefined.</source>
          <target state="translated">この関数を使用して作成されたセッションオブジェクトは、それらがアタッチされているデータベースハンドル自体が閉じる前に、&lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete（）&lt;/a&gt;関数を使用して削除する必要があります。セッションオブジェクトが削除される前にデータベースハンドルが閉じられると、セッションオブジェクトでの&lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete（）&lt;/a&gt;を含むセッションモジュール関数の呼び出し結果は未定義になります。</target>
        </trans-unit>
        <trans-unit id="ea1b131b3c13e62fbcb2b7e1d8113240624fdfe2" translate="yes" xml:space="preserve">
          <source>Session objects must be deleted before the database handle to which they are attached is closed. Refer to the documentation for &lt;a href=&quot;#sqlite3session_create&quot;&gt;sqlite3session_create()&lt;/a&gt; for details.</source>
          <target state="translated">セッションオブジェクトは、それらがアタッチされているデータベースハンドルを閉じる前に削除する必要があります。詳細については、&lt;a href=&quot;#sqlite3session_create&quot;&gt;sqlite3session_create（）の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0df1e5a24e2b0c00b060a82e0a73f3246a4f51" translate="yes" xml:space="preserve">
          <source>Session objects must be deleted before the database handle to which they are attached is closed. Refer to the documentation for &lt;a href=&quot;sqlite3session_create&quot;&gt;sqlite3session_create()&lt;/a&gt; for details.</source>
          <target state="translated">セッションオブジェクトは、それらがアタッチされているデータベースハンドルを閉じる前に削除する必要があります。詳細については、&lt;a href=&quot;sqlite3session_create&quot;&gt;sqlite3session_create（）の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6adb93a894674d02e091209977b242c152440ac9" translate="yes" xml:space="preserve">
          <source>Set *pnInst to the total number of occurrences of all phrases within the query within the current row. Return SQLITE_OK if successful, or an error code (i.e. SQLITE_NOMEM) if an error occurs.</source>
          <target state="translated">現在の行内のクエリ内のすべてのフレーズの出現回数の合計を *pnInst に設定します。成功した場合は SQLITE_OK を、エラーが発生した場合はエラーコード (例:SQLITE_NOMEM)を返します。</target>
        </trans-unit>
        <trans-unit id="efdec671fc0ce8bcb4bdb00d3f437085821cf12c" translate="yes" xml:space="preserve">
          <source>Set A Busy Timeout</source>
          <target state="translated">ビジータイムアウトの設定</target>
        </trans-unit>
        <trans-unit id="b1a0dded912756ecf2b97f232c897007421fbf5d" translate="yes" xml:space="preserve">
          <source>Set Or Clear the Indirect Change Flag</source>
          <target state="translated">間接変更フラグの設定またはクリア</target>
        </trans-unit>
        <trans-unit id="3a493136e0eeea58ea401cab071add271017a5ae" translate="yes" xml:space="preserve">
          <source>Set a table filter on a Session Object</source>
          <target state="translated">セッションオブジェクトにテーブルフィルタを設定する</target>
        </trans-unit>
        <trans-unit id="732b690730c3e6587386dab945ec7951b556c520" translate="yes" xml:space="preserve">
          <source>Set a table filter on a Session Object.</source>
          <target state="translated">セッションオブジェクトにテーブルフィルタを設定します。</target>
        </trans-unit>
        <trans-unit id="1ac264a53518ed313b058a0a099912f2a35d826a" translate="yes" xml:space="preserve">
          <source>Set an upper bound on the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt;,N) setting that determines the maximum number of auxiliary threads that a single &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; will use to aid with CPU-intensive computations (mostly sorting). See also the &lt;a href=&quot;compile#default_worker_threads&quot;&gt;SQLITE_DEFAULT_WORKER_THREADS&lt;/a&gt; options.</source>
          <target state="translated">上部に結合されたセット&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;（DB、&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt;単一ことを補助スレッドの最大数の決定、N）の設定&lt;a href=&quot;c3ref/stmt&quot;&gt;準備文は&lt;/a&gt;（ほとんどソーティング）CPU集約型の計算を支援するために使用するが。&lt;a href=&quot;compile#default_worker_threads&quot;&gt;SQLITE_DEFAULT_WORKER_THREADS&lt;/a&gt;オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="92f46b19209e84ffdca742022b56dfdca2dfb583" translate="yes" xml:space="preserve">
          <source>Set register P1 to have the value NULL as seen by the &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; instruction, but do not free any string or blob memory associated with the register, so that if the value was a string or blob that was previously copied using &lt;a href=&quot;opcode#SCopy&quot;&gt;SCopy&lt;/a&gt;, the copies will continue to be valid.</source>
          <target state="translated">&lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt;命令からわかるように、レジスタP1の値をNULLに設定しますが、レジスタに関連付けられている文字列またはblobメモリを解放しないでください。値が以前に&lt;a href=&quot;opcode#SCopy&quot;&gt;SCopy&lt;/a&gt;を使用してコピーされた文字列またはblobであった場合、コピーは続行されます。有効です。</target>
        </trans-unit>
        <trans-unit id="cd7e5b09719a46bb1ffbc4c18faade6d76d5478d" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag. This prevents ordinary SQL statements from deliberately corrupting the database file. SQLite should be proof against attacks that involve both malicious SQL inputs and a maliciously corrupted database file at the same time. Nevertheless, denying a script-only attacker access to corrupt database inputs provides an extra layer of defense.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;フラグを設定します。これにより、通常のSQLステートメントが故意にデータベースファイルを破損するのを防ぎます。SQLiteは、悪意のあるSQL入力と、悪意を持って破損したデータベースファイルの両方を同時に含む攻撃に対する証拠となる必要があります。それでも、スクリプトのみの攻撃者による破損したデータベース入力へのアクセスを拒否することで、追加の防御層が提供されます。</target>
        </trans-unit>
        <trans-unit id="241b76cbed3f5655045e8aff832d7f03205ef4fe" translate="yes" xml:space="preserve">
          <source>Set the Last Insert Rowid value</source>
          <target state="translated">最後の挿入行の値を設定します。</target>
        </trans-unit>
        <trans-unit id="3a9eaa4fc5302f500031c0b5a5700811aa0eb0fe" translate="yes" xml:space="preserve">
          <source>Set the Last Insert Rowid value.</source>
          <target state="translated">Last Insert Rowid の値を設定します。</target>
        </trans-unit>
        <trans-unit id="5a5c894fd85a90ba517e62438c5aff9b40ab8cb2" translate="yes" xml:space="preserve">
          <source>Set the SQLITE_DBCONFIG_RESET_DATABASE flag and then run &lt;a href=&quot;../lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; in order to reset a database back to an empty database with no schema and no content. The following process works even for a badly corrupted database file:</source>
          <target state="translated">SQLITE_DBCONFIG_RESET_DATABASEフラグを設定し、&lt;a href=&quot;../lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;を実行して、スキーマとコンテンツのない空のデータベースにデータベースをリセットします。次のプロセスは、ひどく破損したデータベースファイルでも機能します。</target>
        </trans-unit>
        <trans-unit id="5453fe3bee790f9b36f9a933f54e5899bdab502e" translate="yes" xml:space="preserve">
          <source>Set the SQLITE_DBCONFIG_RESET_DATABASE flag and then run &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; in order to reset a database back to an empty database with no schema and no content. The following process works even for a badly corrupted database file:</source>
          <target state="translated">SQLITE_DBCONFIG_RESET_DATABASEフラグを設定し、&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;を実行して、スキーマとコンテンツのない空のデータベースにデータベースをリセットします。次のプロセスは、ひどく破損したデータベースファイルでも機能します。</target>
        </trans-unit>
        <trans-unit id="61c4c40f9a1bb5c18ccdd11c74e4b4fffa0d66f4" translate="yes" xml:space="preserve">
          <source>Set the database auto-commit flag to P1 (1 or 0). If P2 is true, roll back any currently active btree transactions. If there are any active VMs (apart from this one), then a ROLLBACK fails. A COMMIT fails if there are active writing VMs or active VMs that use shared cache.</source>
          <target state="translated">データベース自動コミットフラグを P1 (1 または 0)に設定します。P2 が真の場合、現在アクティブな btree トランザクションをすべてロールバックします。アクティブな VM がある場合 (この VM 以外)、rollback は失敗します。アクティブな書き込み VM や共有キャッシュを使用するアクティブな VM がある場合、commit は失敗します。</target>
        </trans-unit>
        <trans-unit id="d6cb86bbec6abe009ef2b13054a8bf71fb971e51" translate="yes" xml:space="preserve">
          <source>Set the default size limit (in bytes) for in-memory databases created using &lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize()&lt;/a&gt;. This is just the default. The limit can be changed at start-time using &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt;,N) or at run-time for individual databases using the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;SQLITE_FCNTL_SIZE_LIMIT&lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;file-control&lt;/a&gt;. If no default is specified, 1073741824 is used.</source>
          <target state="translated">&lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize（）&lt;/a&gt;を使用して作成されたメモリ内データベースのデフォルトのサイズ制限（バイト単位）を設定します。これは単なるデフォルトです。制限は、開始時に&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt;、N）を使用して、または実行時に&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;SQLITE_FCNTL_SIZE_LIMIT &lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;file-control&lt;/a&gt;を使用して個々のデータベースに対して変更できます。デフォルトが指定されていない場合は、1073741824が使用されます。</target>
        </trans-unit>
        <trans-unit id="866d8eaf3728a827f036375926469bd93bf88bea" translate="yes" xml:space="preserve">
          <source>Set the permutation used by the &lt;a href=&quot;opcode#Compare&quot;&gt;Compare&lt;/a&gt; operator in the next instruction. The permutation is stored in the P4 operand.</source>
          <target state="translated">次の命令で&lt;a href=&quot;opcode#Compare&quot;&gt;比較&lt;/a&gt;演算子によって使用される順列を設定します。順列はP4オペランドに格納されます。</target>
        </trans-unit>
        <trans-unit id="ffc497dd2e0254996f63fed1801e825a18a0d70e" translate="yes" xml:space="preserve">
          <source>Set the seekHit flag on cursor P1 to the value in P2. The seekHit flag is used by the &lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt; opcode.</source>
          <target state="translated">カーソルP1のseekHitフラグをP2の値に設定します。seekHitフラグは、&lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt;オペコードによって使用されます。</target>
        </trans-unit>
        <trans-unit id="f917c903736a886e2bae7dda91eb93f9fc5b88f2" translate="yes" xml:space="preserve">
          <source>Set up a process-wide &lt;a href=&quot;errlog&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">プロセス全体の&lt;a href=&quot;errlog&quot;&gt;エラーログを&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="f899229bce65615b9a9aafe730afb3055fc1d664" translate="yes" xml:space="preserve">
          <source>Set up register P1 so that it will &lt;a href=&quot;opcode#Yield&quot;&gt;Yield&lt;/a&gt; to the coroutine located at address P3.</source>
          <target state="translated">レジスターP1をセットアップして、アドレスP3にあるコルーチンにそれが&lt;a href=&quot;opcode#Yield&quot;&gt;渡さ&lt;/a&gt;れるようにします。</target>
        </trans-unit>
        <trans-unit id="c422fe10a5573aa6ba7e50d9c77e20ca08878af0" translate="yes" xml:space="preserve">
          <source>SetCookie</source>
          <target state="translated">SetCookie</target>
        </trans-unit>
        <trans-unit id="01b3682b02999bc0d6273ad2e8a1ce7b60079442" translate="yes" xml:space="preserve">
          <source>Sets the &quot;fired&quot; flag to true.</source>
          <target state="translated">fired&quot; フラグを true に設定します。</target>
        </trans-unit>
        <trans-unit id="5f1906e535428a6ef107759522f33ae96d47ce23" translate="yes" xml:space="preserve">
          <source>Sets the default size of the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; memory pool to N entries of SZ bytes each. This setting can be modified at start-time using &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt;) and/or as each &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; is opened using &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;(db, &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglookaside&quot;&gt;SQLITE_DBCONFIG_LOOKASIDE&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;malloc#lookaside&quot;&gt;ルックアサイドメモリアロケータ&lt;/a&gt;メモリプールのデフォルトサイズを、それぞれSZバイトのNエントリに設定します。この設定は、開始時に&lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;（&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt;）を使用して、または各&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;が&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;（db、&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglookaside&quot;&gt;SQLITE_DBCONFIG_LOOKASIDE&lt;/a&gt;）を使用して開かれるときに変更できます。</target>
        </trans-unit>
        <trans-unit id="f8f949c67297579c935535017d3f831289e19ac6" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=OFF&lt;/a&gt; can cause the database to go corrupt if there is an operating-system crash or power failure, though this setting is safe from damage due to application crashes.</source>
          <target state="translated">オペレーティングシステムのクラッシュや電源障害が発生した場合、&lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA Synchronization = OFFを&lt;/a&gt;設定するとデータベースが破損する可能性がありますが、この設定はアプリケーションのクラッシュによる損傷から安全です。</target>
        </trans-unit>
        <trans-unit id="aefdd1b85748c7d4a0d551399e2edc72cd30afa6" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema=ON&lt;/a&gt; and then changing the database schema using DML statements can render the database completely unreadable, if not done carefully.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema = ON&lt;/a&gt;を設定し、DMLステートメントを使用してデータベーススキーマを変更すると、慎重に行わないと、データベースが完全に読み取り不能になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3fa000f3c0976d971f291c1208857c79532870ca" translate="yes" xml:space="preserve">
          <source>Setting The Result Of An SQL Function</source>
          <target state="translated">SQL関数の結果を設定する</target>
        </trans-unit>
        <trans-unit id="1d4603c6597b76da3d906d68cccdecf5180cbe08" translate="yes" xml:space="preserve">
          <source>Setting The Subtype Of An SQL Function</source>
          <target state="translated">SQL関数のサブタイプの設定</target>
        </trans-unit>
        <trans-unit id="16955fa7b436cf8874edb738f171a4d0ef509182" translate="yes" xml:space="preserve">
          <source>Setting fullfsync on a Mac will guarantee that data really does get pushed out to the disk platter on a flush. But the implementation of fullfsync involves resetting the disk controller. And so not only is it profoundly slow, it also slows down other unrelated disk I/O. So its use is not recommended.</source>
          <target state="translated">Mac で fullfsync を設定すると、データが本当にフラッシュでディスクプラッタに押し出されることが保証されます。しかし、fullfsync の実装にはディスクコントローラのリセットが含まれます。そのため、非常に遅いだけでなく、他の無関係なディスク I/O も遅くなります。ですから、その使用は推奨されません。</target>
        </trans-unit>
        <trans-unit id="3eaa36d1b6e824ce1fa2d9dd603bd95da85fa485" translate="yes" xml:space="preserve">
          <source>Setting the automerge parameter to a non-zero value enables automatic incremental merging. This causes SQLite to do a small amount of inverted index merging after every INSERT operation. The amount of merging performed is designed so that the FTS3/4 table never reaches a point where it has 16 segments at the same level and hence has to do a large merge in order to complete an insert. In other words, automatic incremental merging is designed to prevent spiky INSERT performance.</source>
          <target state="translated">automerge パラメータを 0 以外の値に設定すると、自動増分マージが可能になります。これにより、SQLite は INSERT 操作のたびに少量の転置インデックスのマージを行います。実行されるマージの量は、FTS3/4テーブルが同じレベルで16個のセグメントを持つ時点に達することがないように設計されているため、挿入を完了させるために大きなマージを行う必要があります。言い換えれば、自動増分マージは、INSERTのパフォーマンスが急上昇するのを防ぐために設計されています。</target>
        </trans-unit>
        <trans-unit id="56f5ba775f4860afdbeef1efdf08d68cd3228bad" translate="yes" xml:space="preserve">
          <source>Setting the heap limits to zero disables the heap limiter mechanism.</source>
          <target state="translated">ヒープリミットをゼロに設定すると、ヒープリミッター機構が無効になります。</target>
        </trans-unit>
        <trans-unit id="d964c814943dd4cc633ef0ee8d21d48eb3735ca0" translate="yes" xml:space="preserve">
          <source>Setting this compile-time option prevents SQLite from being fully testable. Branch test coverage drops from 100% down to about 95%.</source>
          <target state="translated">このコンパイル時オプションを設定すると、SQLite を完全にテスト可能な状態にすることができなくなります。ブランチテストのカバレッジは100%から約95%に低下します。</target>
        </trans-unit>
        <trans-unit id="00f0e8d6420ed50a38c6973317964bc318233512" translate="yes" xml:space="preserve">
          <source>Several new C-level objects are used by the virtual table implementation:</source>
          <target state="translated">仮想テーブルの実装では、いくつかの新しいCレベルオブジェクトが使用されます。</target>
        </trans-unit>
        <trans-unit id="1b7d1cf980e975f4a1d8be50f6af0bb46a6caa32" translate="yes" xml:space="preserve">
          <source>Several obscure, unrelated bugs were found and fixed while implemented the integer primary key change of the previous bullet.</source>
          <target state="translated">前弾の整数主キーの変更を実装しながら、いくつかの不明瞭で無関係なバグを発見し、修正しました。</target>
        </trans-unit>
        <trans-unit id="659f95a669a94f909d4f9c9e95d9d907e1cbadfa" translate="yes" xml:space="preserve">
          <source>Shadow tables are read/write by default. Shadow tables only become read-only when the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag is set using &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;. Shadow tables need to be read/write by default in order to maintain backwards compatibility. For example, the SQL text generated by the &lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt; command of the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; writes directly into shadow tables.</source>
          <target state="translated">シャドウテーブルはデフォルトで読み取り/書き込みです。シャドウテーブルは、&lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config（）&lt;/a&gt;を使用して&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt;フラグが設定されている場合にのみ読み取り専用になります。下位互換性を維持するために、シャドウテーブルはデフォルトで読み取り/書き込み可能である必要があります。たとえば、&lt;a href=&quot;cli&quot;&gt;CLIの&lt;/a&gt;&lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt;コマンドによって生成されたSQLテキストは、シャドウテーブルに直接書き込みます。</target>
        </trans-unit>
        <trans-unit id="19452421c69c545e0b50fcc00a18251f53c4e9f4" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. But this might change in future releases of SQLite. Applications that care about shared cache setting should set it explicitly.</source>
          <target state="translated">共有キャッシュはデフォルトでは無効になっています。しかし、これは将来のSQLiteのリリースで変更される可能性があります。共有キャッシュの設定を気にするアプリケーションは、明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8e41d50ebd1af2b3254810c6333341257c85989e" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. It is recommended that it stay that way. In other words, do not use this routine. This interface continues to be provided for historical compatibility, but its use is discouraged. Any use of shared cache is discouraged. If shared cache must be used, it is recommended that shared cache only be enabled for individual database connections using the &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface with the &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; flag.</source>
          <target state="translated">共有キャッシュはデフォルトで無効になっています。そのままにしておくことをお勧めします。つまり、このルーチンは使用しないでください。このインターフェースは、歴史的な互換性のために引き続き提供されていますが、その使用は推奨されていません。共有キャッシュの使用はお勧めしません。共有キャッシュを使用する必要がある場合は、&lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt;フラグを指定した&lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;インターフェイスを使用して、個々のデータベース接続に対してのみ共有キャッシュを有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="016f63b1afdc35c75766700d01c855e2a30457a4" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. It is recommended that it stay that way. In other words, do not use this routine. This interface continues to be provided for historical compatibility, but its use is discouraged. Any use of shared cache is discouraged. If shared cache must be used, it is recommended that shared cache only be enabled for individual database connections using the &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface with the &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; flag.</source>
          <target state="translated">共有キャッシュはデフォルトで無効になっています。そのままにしておくことをお勧めします。つまり、このルーチンは使用しないでください。このインターフェースは、歴史的な互換性のために引き続き提供されていますが、その使用は推奨されていません。共有キャッシュの使用はお勧めしません。共有キャッシュを使用する必要がある場合は、&lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt;フラグを指定した&lt;a href=&quot;open&quot;&gt;sqlite3_open_v2（）&lt;/a&gt;インターフェイスを使用して、個々のデータベース接続に対してのみ共有キャッシュを有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f477f800bdd5ba8c256608dea929d26bc988f65b" translate="yes" xml:space="preserve">
          <source>Shared libraries or DLLs can be used as &lt;a href=&quot;loadext&quot;&gt;loadable extensions&lt;/a&gt; to SQLite.</source>
          <target state="translated">共有ライブラリまたはDLLは、SQLiteの&lt;a href=&quot;loadext&quot;&gt;ロード可能な拡張機能&lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="b6f715dc89839324b877f33d62ebb39393f6ca50" translate="yes" xml:space="preserve">
          <source>Shared-cache locks are released when a database connection concludes its current transaction, either by committing it or rolling it back.</source>
          <target state="translated">共有キャッシュロックは、データベース接続が現在のトランザクションをコミットまたはロールバックすることで終了したときに解放されます。</target>
        </trans-unit>
        <trans-unit id="1a3aca3d24b83cc38a4313e0315e88bcb9c21c92" translate="yes" xml:space="preserve">
          <source>Shared-cache mode changes the semantics of the locking model in some cases. The details are described by this document. A basic understanding of the normal SQLite locking model (see &lt;a href=&quot;lockingv3&quot;&gt;File Locking And Concurrency In SQLite Version 3&lt;/a&gt; for details) is assumed.</source>
          <target state="translated">共有キャッシュモードでは、ロックモデルのセマンティクスが変更される場合があります。詳細はこのドキュメントで説明されています。通常のSQLiteロックモデルの基本的な理解（詳細については、&lt;a href=&quot;lockingv3&quot;&gt;SQLiteバージョン3のファイルロックと同時実行性&lt;/a&gt;を参照）を前提としています。</target>
        </trans-unit>
        <trans-unit id="0a3f80e6eca574b532dbb5d0c3d9a7766e7bf84a" translate="yes" xml:space="preserve">
          <source>Shared-cache mode is enabled on a per-process basis. Using the C interface, the following API can be used to globally enable or disable shared-cache mode:</source>
          <target state="translated">共有キャッシュモードはプロセス単位で有効になります。C インターフェースを使用して、以下の API を使用してグローバルに共有キャッシュモードを有効または無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="f42662308d376fb67628511d59d090985566d2ae" translate="yes" xml:space="preserve">
          <source>Shared-memory files</source>
          <target state="translated">共有メモリファイル</target>
        </trans-unit>
        <trans-unit id="c7114e495e770e3a02bbb164bf55e1f96da4aecc" translate="yes" xml:space="preserve">
          <source>Shift the integer value in register P2 to the left by the number of bits specified by the integer in register P1. Store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP2の整数値をレジスタP1の整数で指定されたビット数だけ左にシフトします。結果をレジスタ P3 に格納する。どちらかの入力がNULLの場合、結果はNULLとなる。</target>
        </trans-unit>
        <trans-unit id="1886429e3c21f6dfa5e69e0091250e86426fb4f9" translate="yes" xml:space="preserve">
          <source>Shift the integer value in register P2 to the right by the number of bits specified by the integer in register P1. Store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP2の整数値をレジスタP1の整数で指定されたビット数だけ右にシフトします。結果をレジスタ P3 に格納する。どちらかの入力がNULLの場合、結果はNULLとなる。</target>
        </trans-unit>
        <trans-unit id="62341f589b9d3a0d923d18a2b4e7f7f2edda894e" translate="yes" xml:space="preserve">
          <source>ShiftLeft</source>
          <target state="translated">ShiftLeft</target>
        </trans-unit>
        <trans-unit id="2310b475647d9a4e74a4f5d5a47bfb27340ee08b" translate="yes" xml:space="preserve">
          <source>ShiftRight</source>
          <target state="translated">ShiftRight</target>
        </trans-unit>
        <trans-unit id="c8723bf8dd0f924a9f0d00bc2ddb22a9562a76b1" translate="yes" xml:space="preserve">
          <source>Shifting a negative number.</source>
          <target state="translated">マイナスの数をシフトします。</target>
        </trans-unit>
        <trans-unit id="8f0ca083402d5eb462b696e15e581aaadbeb113a" translate="yes" xml:space="preserve">
          <source>Shifting an N-bit integer by more than N bits.</source>
          <target state="translated">Nビットの整数をNビット以上シフトします。</target>
        </trans-unit>
        <trans-unit id="37dcc04149816924636682bd712a1a49f1dcb38f" translate="yes" xml:space="preserve">
          <source>Shifting by a negative amount.</source>
          <target state="translated">マイナス分だけシフト。</target>
        </trans-unit>
        <trans-unit id="d224675e61816beeffff3a83b33b759da2cf9109" translate="yes" xml:space="preserve">
          <source>Short answer: A column declared &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt; will autoincrement.</source>
          <target state="translated">短い答え：&lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt;と宣言された列は自動インクリメントされます。</target>
        </trans-unit>
        <trans-unit id="66f7bc664b9d82f0b84142732a02328bc0cdf8d0" translate="yes" xml:space="preserve">
          <source>Show ASCII-art abstract syntax tree diagrams using the &quot;.selecttrace&quot; and &quot;.wheretrace&quot; commands in the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; when compiled with &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt;, SQLITE_ENABLE_SELECTTRACE, and SQLITE_ENABLE_WHERETRACE. Also provide the sqlite3TreeViewExpr() and sqlite3TreeViewSelect() entry points that can be invoked from with the debugger to show the parse tree when stopped at a breakpoint.</source>
          <target state="translated">&lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt;、SQLITE_ENABLE_SELECTTRACE、およびSQLITE_ENABLE_WHERETRACEでコンパイルした場合、&lt;a href=&quot;cli&quot;&gt;コマンドラインシェルで&lt;/a&gt; &quot;.selecttrace&quot;および &quot;.wheretrace&quot;コマンドを使用して、ASCIIアートの抽象構文ツリー図を表示します。また、ブレークポイントで停止したときに解析ツリーを表示するためにデバッガーから呼び出すことができるsqlite3TreeViewExpr（）およびsqlite3TreeViewSelect（）エントリーポイントを提供します。</target>
        </trans-unit>
        <trans-unit id="29bd1b65a367359ac801580f0f164ea797beea79" translate="yes" xml:space="preserve">
          <source>Show how many rows have changed on each table, but do not show the actual changes</source>
          <target state="translated">各テーブルで変更された行数を表示しますが、実際の変更は表示しません。</target>
        </trans-unit>
        <trans-unit id="45c704a81c82ee8bb0729ae9984ab0b0befba88f" translate="yes" xml:space="preserve">
          <source>Show me your flowcharts and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won't usually need your flowcharts; they'll be obvious.</source>
          <target state="translated">フローチャートを見せて表を隠せば、私は謎に包まれ続けるだろう。表を見せてくれれば、通常フローチャートは必要ありません。</target>
        </trans-unit>
        <trans-unit id="eadcf1db0ff39fb6bc0246ade4beb9b3e9027520" translate="yes" xml:space="preserve">
          <source>Show only differences in the schema not the table content</source>
          <target state="translated">テーブルの内容ではなく、スキーマの違いのみを表示する</target>
        </trans-unit>
        <trans-unit id="584527d924d04a23c5c08d9fd085c97f73f6da07" translate="yes" xml:space="preserve">
          <source>Show only the differences in content for TABLE, not for the entire database</source>
          <target state="translated">データベース全体ではなく、TABLEの内容の違いだけを表示します。</target>
        </trans-unit>
        <trans-unit id="c2688d3833edc37bfcee14b5515c2bff49005d0c" translate="yes" xml:space="preserve">
          <source>Show the SQL that would be run to carry out the archive operation, but do not actually change anything.</source>
          <target state="translated">アーカイブ操作を実行するために実行されるSQLを表示しますが、実際には何も変更しません。</target>
        </trans-unit>
        <trans-unit id="f2d6599ba5b081fd8b2869046769b3cd08250edc" translate="yes" xml:space="preserve">
          <source>Shun arrogance.</source>
          <target state="translated">傲慢な態度を慎め</target>
        </trans-unit>
        <trans-unit id="df3f4b6cc3b45148ff40b29aba7af47fbd10c1fd" translate="yes" xml:space="preserve">
          <source>Signed integer overflow. (Signed integer overflow does &lt;u&gt;not&lt;/u&gt; necessarily wrap around, as most people expect.)</source>
          <target state="translated">符号付き整数オーバーフロー。（ほとんどの人が期待するように、符号付き整数オーバーフローは必ずしもラップアラウンドではありませ&lt;u&gt;ん&lt;/u&gt;。）</target>
        </trans-unit>
        <trans-unit id="2e226f8ddc66c1a463dcf0a7c345c529980f966b" translate="yes" xml:space="preserve">
          <source>Silent &quot;d&quot; in words beginning with &quot;dj&quot;: djinn, Djikarta</source>
          <target state="translated">djで始まる単語の無声の「d」:djinn,Djikarta</target>
        </trans-unit>
        <trans-unit id="aada0dd0ffeee0e21804c55732d58986c7fd3694" translate="yes" xml:space="preserve">
          <source>Silent &quot;g&quot; in words beginning with &quot;gn&quot;: gnarly, gnome, gnat</source>
          <target state="translated">gnで始まる単語の無声の「g」:gnarly、gnome、gnat</target>
        </trans-unit>
        <trans-unit id="fbaa2ec88597d6e84d9f667ee669d561de7dec36" translate="yes" xml:space="preserve">
          <source>Silent &quot;k&quot; in words beginning with &quot;kn&quot;: knight, Knuthson</source>
          <target state="translated">knで始まる単語の無音の「k」:ナイト、クヌートソン</target>
        </trans-unit>
        <trans-unit id="0f8ddc119a87ce25d1a07a2270fa7ab759fe3699" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;pn&quot;: pneumonia, pneumatic</source>
          <target state="translated">pn」で始まる言葉のサイレント「p」:肺炎、ニューマチック</target>
        </trans-unit>
        <trans-unit id="9fea8d13746b11fa947fbc609fcc6f58d06a7902" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;ps&quot;: psalm, psyche</source>
          <target state="translated">psで始まる単語の無音の「p」:psalm、psyche</target>
        </trans-unit>
        <trans-unit id="f17200036eeba29904ebeaabba7f7630872e60fd" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;pt&quot;: pterodactyl, ptolemaic</source>
          <target state="translated">pt」で始まる言葉の無声の「p」:プテロダクチル、プトレマイック</target>
        </trans-unit>
        <trans-unit id="9d3bc03d8343d400c82a4a71a8abb03ff87c2249" translate="yes" xml:space="preserve">
          <source>Similarly, SQLite allows you to store a 2000-character string into a column of type VARCHAR(50). Other SQL implementations would either throw an error or truncate the string. SQLite stores the entire 2000-character string with no loss of information and without complaint.</source>
          <target state="translated">同様に、SQLiteでは2000文字の文字列をVARCHAR(50)型のカラムに格納することができます。他のSQL実装では、エラーが発生するか、文字列が切り捨てられてしまいます。SQLiteでは、2000文字の文字列全体を、情報を失うことなく、文句なしに格納します。</target>
        </trans-unit>
        <trans-unit id="8b91c3fa499f0d4214317846c7c43d756cfd2b0a" translate="yes" xml:space="preserve">
          <source>Similarly, a</source>
          <target state="translated">同様に</target>
        </trans-unit>
        <trans-unit id="5bca9444f10a42e6ae3d406bbcd7ca872ce4cd02" translate="yes" xml:space="preserve">
          <source>Similarly, in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;, the write-ahead log file is not truncated following a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt;. Instead, SQLite reuses the existing file for subsequent WAL entries since overwriting is faster than appending.</source>
          <target state="translated">同様に、&lt;a href=&quot;wal&quot;&gt;WALモード&lt;/a&gt;では、先行書き込みログファイルは&lt;a href=&quot;wal#ckpt&quot;&gt;チェックポイント&lt;/a&gt;後に切り捨てられません。代わりに、上書きは追加よりも高速なので、SQLiteは既存のファイルを後続のWALエントリに再利用します。</target>
        </trans-unit>
        <trans-unit id="bac336a356dc6f108086c2da32cf914ab388438e" translate="yes" xml:space="preserve">
          <source>Similarly, streaming API functions that return changesets (or patchsets) return them in chunks by way of a callback function instead of via a pointer to a single large buffer. In this case, a pair of parameters such as:</source>
          <target state="translated">同様に、チェンジセット(またはパッチセット)を返すストリーミングAPI関数は、単一の大きなバッファへのポインタを経由するのではなく、コールバック関数を使ってチャンク単位で返します。この場合、次のようなパラメータのペアが必要になります。</target>
        </trans-unit>
        <trans-unit id="7d579b15000cacebe667c23c91900124e0021ffe" translate="yes" xml:space="preserve">
          <source>Similarly, the following expressions have historically evaluated to TRUE when in fact NULL is also the correct answer here:</source>
          <target state="translated">同様に、以下の式は歴史的に TRUE と評価されてきましたが、実際には NULL が正解となっています。</target>
        </trans-unit>
        <trans-unit id="8de10619f1c2dbf3cc29b124beee52534207f387" translate="yes" xml:space="preserve">
          <source>Simple Queries</source>
          <target state="translated">簡単なクエリ</target>
        </trans-unit>
        <trans-unit id="c820f89b614c85cd10dd51d0186cb9a23cd537b4" translate="yes" xml:space="preserve">
          <source>Simple SELECT</source>
          <target state="translated">シンプルなSELECT</target>
        </trans-unit>
        <trans-unit id="2b5e01ecfaf01cf9d6fed2afce17a1e2ec85faaa" translate="yes" xml:space="preserve">
          <source>Simple Select Processing</source>
          <target state="translated">簡易セレクト処理</target>
        </trans-unit>
        <trans-unit id="25bc3effd8fab2177bf75bccfaba476dd31d7e03" translate="yes" xml:space="preserve">
          <source>Simple fts queries</source>
          <target state="translated">シンプルなftsクエリ</target>
        </trans-unit>
        <trans-unit id="d21c97069116b510ca5fd5d37452e567c518b5ee" translate="yes" xml:space="preserve">
          <source>Simple, easy to use &lt;a href=&quot;cintro&quot;&gt;API&lt;/a&gt;.</source>
          <target state="translated">シンプルで使いやすい&lt;a href=&quot;cintro&quot;&gt;API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20a696ed001fc7792dc03669a107ef6867be06cf" translate="yes" xml:space="preserve">
          <source>Simplified Application Development</source>
          <target state="translated">簡易アプリケーション開発</target>
        </trans-unit>
        <trans-unit id="75e092657cf7286e756d1dede51480e5230b9edf" translate="yes" xml:space="preserve">
          <source>Simplify the design of the VDBE by restricting the number of sorters and lists to 1. In practice, no more than one sorter and one list was ever used anyhow.</source>
          <target state="translated">ソータとリストの数を1に制限することで、VDBEの設計を簡素化する。 実際には、ソータとリストが1つ以上使われることはなかった。</target>
        </trans-unit>
        <trans-unit id="89151b192ec38384818e48383b1951487fe9cb56" translate="yes" xml:space="preserve">
          <source>Simply replace</source>
          <target state="translated">単純に置き換える</target>
        </trans-unit>
        <trans-unit id="de0928c2b632719ec80087729ff90db61c097100" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_13_0.html&quot;&gt;version 3.13.0&lt;/a&gt; (2016-05-18), the session extension has been included in the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; source distribution. By default, the session extension is disabled. To enable it, build with the following compiler switches:</source>
          <target state="translated">以来、&lt;a href=&quot;https://sqlite.org/releaselog/3_13_0.html&quot;&gt;バージョン3.13.0&lt;/a&gt;（2016年5月18日）、セッション延長は、SQLiteの中に含まれている&lt;a href=&quot;amalgamation&quot;&gt;合併の&lt;/a&gt;ソース配布。デフォルトでは、セッション拡張は無効になっています。これを有効にするには、次のコンパイラスイッチを使用してビルドします。</target>
        </trans-unit>
        <trans-unit id="eaa37de22579abc7084228906dd483ab965aacfb" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_5_0.html&quot;&gt;version 3.5.0&lt;/a&gt; (2007-09-04), SQLite has supported an interface called the &lt;a href=&quot;c3ref/vfs&quot;&gt;virtual file system&lt;/a&gt; or &quot;VFS&quot;. This object is somewhat misnamed since it is really an interface to the whole underlying operating system, not just the filesystem.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/releaselog/3_5_0.html&quot;&gt;バージョン3.5.0&lt;/a&gt;（2007-09-04）以降、SQLiteは&lt;a href=&quot;c3ref/vfs&quot;&gt;仮想ファイルシステム&lt;/a&gt;または「VFS」と呼ばれるインターフェイスをサポートしています。このオブジェクトは、ファイルシステムだけでなく、基盤となるオペレーティングシステム全体へのインターフェイスであるため、多少誤解されています。</target>
        </trans-unit>
        <trans-unit id="c659e6cde59a26a5cc98604eaf1a60217b6d7297" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_6_18.html&quot;&gt;version 3.6.18&lt;/a&gt; (2009-09-11), SQLite source code has been stored in the &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil configuration management system&lt;/a&gt;. The SQLITE_SOURCE_ID macro evaluates to a string which identifies a particular check-in of SQLite within its configuration management system. The SQLITE_SOURCE_ID string contains the date and time of the check-in (UTC) and a SHA1 or SHA3-256 hash of the entire source tree. If the source code has been edited in any way since it was last checked in, then the last four hexadecimal digits of the hash may be modified.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/releaselog/3_6_18.html&quot;&gt;バージョン3.6.18&lt;/a&gt;（2009-09-11）以降、SQLiteソースコードは&lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil構成管理システムに&lt;/a&gt;格納されています。 SQLITE_SOURCE_IDマクロは、構成管理システム内のSQLiteの特定のチェックインを識別する文字列に評価されます。 SQLITE_SOURCE_ID文字列には、チェックイン（UTC）の日時と、ソースツリー全体のSHA1またはSHA3-256ハッシュが含まれます。ソースコードが最後にチェックインされてから何らかの方法で編集されている場合、ハッシュの最後の4桁の16進数が変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6ef82de3319be0d75e458ab4416694f2f8299790" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;version 3.7.0&lt;/a&gt; (2010-07-21), SQLite also supports &quot;&lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;&quot;. In WAL mode, changes are not written to the original database file. Instead, changes go into a separate &quot;write-ahead log&quot; or &quot;WAL&quot; file. Later, after the transaction commits, those changes will be moved from the WAL file back into the original database in an operation called &quot;checkpoint&quot;. WAL mode is enabled by running &quot;&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode=WAL&lt;/a&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;バージョン3.7.0&lt;/a&gt;（2010-07-21）以降、SQLiteは「&lt;a href=&quot;wal&quot;&gt;WALモード&lt;/a&gt;」もサポートします。 WALモードでは、変更は元のデータベースファイルに書き込まれません。代わりに、変更は個別の「先行書き込みログ」または「WAL」ファイルに入れられます。その後、トランザクションがコミットした後、「チェックポイント」と呼ばれる操作で、これらの変更がWALファイルから元のデータベースに戻されます。 「&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode = WAL&lt;/a&gt;」を実行すると、WALモードが有効になります。</target>
        </trans-unit>
        <trans-unit id="974a12d011bbc97d586f22e505d00eff41958058" translate="yes" xml:space="preserve">
          <source>Since SQLite always interprets any filename that does not begin with &quot;&lt;code&gt;file:&lt;/code&gt;&quot; as an ordinary filename regardless of the URI setting, and because it is very unusual to have an actual file begin with &quot;&lt;code&gt;file:&lt;/code&gt;&quot;, it is safe for most applications to enable URI processing even if URI filenames are not currently being used.</source>
          <target state="translated">SQLite は、URIの設定に関係なく、常に「 &lt;code&gt;file:&lt;/code&gt; 」で始まらないファイル名を通常のファイル名として解釈するため、実際のファイルが「 &lt;code&gt;file:&lt;/code&gt; 」で始まることは非常にまれであるため、ほとんどのアプリケーションで安全です。 URIファイル名が現在使用されていない場合でも、URI処理を有効にします。</target>
        </trans-unit>
        <trans-unit id="6787bde414a9d9d049df11f55e9b93b41be95c03" translate="yes" xml:space="preserve">
          <source>Since SQLite databases are ordinary disk files, any malfunction in the filesystem can corrupt the database. Filesystems in modern operating systems are very reliable, but errors do still occur. For example, on 2013-10-01 the SQLite database that holds the &lt;a href=&quot;http://wiki.tcl-lang.org/&quot;&gt;Wiki for Tcl/Tk&lt;/a&gt; went corrupt a few days after the host computer was moved to a dodgy build of the (linux) kernel that had issues in the filesystem layer. In that event, the filesystem eventually became so badly corrupted that the machine was unusable, but the earliest symptom of trouble was the corrupted SQLite database.</source>
          <target state="translated">SQLiteデータベースは通常のディスクファイルであるため、ファイルシステムに異常が発生するとデータベースが破損する可能性があります。最新のオペレーティングシステムのファイルシステムは非常に信頼性が高いですが、それでもエラーは発生します。たとえば、2013-10-01に、&lt;a href=&quot;http://wiki.tcl-lang.org/&quot;&gt;Tcl / TkのWikiを&lt;/a&gt;保持するSQLiteデータベースは、ホストコンピューターがファイルシステムレイヤーに問題のある（Linux）カーネルの危険なビルドに移動された数日後に破損しました。その場合、ファイルシステムは最終的にひどく破損し、マシンは使用できなくなりましたが、問題の最も早い症状は破損したSQLiteデータベースでした。</target>
        </trans-unit>
        <trans-unit id="c695a2f51c4b24da3c2784ee7cd9c9755809b7df" translate="yes" xml:space="preserve">
          <source>Since SQLite reads and writes an ordinary disk file, the only access permissions that can be applied are the normal file access permissions of the underlying operating system. The GRANT and REVOKE commands commonly found on client/server RDBMSes are not implemented because they would be meaningless for an embedded database engine.</source>
          <target state="translated">SQLiteは通常のディスクファイルを読み書きするので、適用できるアクセス権限は、基礎となるオペレーティングシステムの通常のファイルアクセス権限のみです。クライアント/サーバRDBMSで一般的に見られるGRANTコマンドとREVOKEコマンドは、組み込みデータベースエンジンでは意味がないので実装されていません。</target>
        </trans-unit>
        <trans-unit id="59abdbce3144e8f85a07a8dfceb62a241d9b0167" translate="yes" xml:space="preserve">
          <source>Since an SQLite database is a more general format (it is designed to do much more than simply store a bunch of files) it is not as compact as either the ZIP Archive or Tarball formats. An SQLite Archive is usually about 1% larger than the equivalent ZIP Archive. Tarballs are compressed as a single unit rather than compressing each file separately as is done by both SQLite and ZIP Archives. For these reason, Tarballs tend to be smaller than either ZIP or SQLite Archives.</source>
          <target state="translated">SQLite データベースはより一般的なフォーマットであるため(ファイルの束を単に保存するよりもはるかに多くのことを行うように設計されています)、ZIP アーカイブや Tarball フォーマットほどコンパクトではありません。SQLite アーカイブは通常、同等の ZIP アーカイブよりも約 1% 大きくなります。Tarballs は、SQLite アーカイブと ZIP アーカイブの両方で行われているように、各ファイルを個別に圧縮するのではなく、1 つのユニットとして圧縮されます。このような理由から、Tarballs は ZIP アーカイブや SQLite アーカイブよりも小さくなる傾向があります。</target>
        </trans-unit>
        <trans-unit id="4194b98c5f98c8eb76bc03b04a9e6fbf66db418a" translate="yes" xml:space="preserve">
          <source>Since database zFilename is a file on disk, then it may be accessed externally by another process. This means that when the call to sqlite3_backup_step() attempts to read from or write data to it, it may fail to obtain the required file lock. If this happens, this implementation will fail, returning SQLITE_BUSY immediately. The solution would be to register a busy-handler callback or timeout with &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; pFile using &lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler()&lt;/a&gt; or &lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout()&lt;/a&gt; as soon as it is opened. If it fails to obtain a required lock immediately, &lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step()&lt;/a&gt; uses any registered busy-handler callback or timeout in the same way as &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt; does.</source>
          <target state="translated">データベースzFilenameはディスク上のファイルであるため、別のプロセスによって外部からアクセスされる可能性があります。これは、sqlite3_backup_step（）への呼び出しがデータの読み取りまたは書き込みを試みると、必要なファイルロックの取得に失敗する可能性があることを意味します。これが発生すると、この実装は失敗し、SQLITE_BUSYがすぐに返されます。解決策は、&lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler（）&lt;/a&gt;または&lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout（）&lt;/a&gt;を開いたらすぐに、&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt; pFileでビジーハンドラーコールバックまたはタイムアウトを登録することです。必要なロックをすぐに取得できない場合、&lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step（）&lt;/a&gt;は、&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;または&lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec（）&lt;/a&gt;と同じ方法で、登録済みのビジーハンドラーコールバックまたはタイムアウトを使用します。</target>
        </trans-unit>
        <trans-unit id="689371fa0cc7aa87af9ab6ee0314efa8f5ddaa1a" translate="yes" xml:space="preserve">
          <source>Since its inception on 2000-05-29, SQLite has been implemented in generic C. C was and continues to be the best language for implementing a software library like SQLite. There are no plans to recode SQLite in any other programming language at this time.</source>
          <target state="translated">2000-05-29の発足以来、SQLiteはジェネリックCで実装されてきました。CはSQLiteのようなソフトウェアライブラリを実装するための最良の言語であり、今後も継続していきます。現在のところ、SQLite を他のプログラミング言語で再コード化する計画はありません。</target>
        </trans-unit>
        <trans-unit id="e237e23641bdbe1625752d920a811e88f9bea9fa" translate="yes" xml:space="preserve">
          <source>Since the &quot;t2&quot; imposter table is a form of database corruption, the manual approach to creating imposter tables is not recommended. Actually, any use of imposter tables is discouraged for all but expert developers, but manually created imposter tables are especially discouraged because they are permanent.</source>
          <target state="translated">t2 &quot;インポスターテーブルはデータベースの破損の一形態であるため、インポスターテーブルを作成するための手動のアプローチは推奨されない。実際には、熟練した開発者以外はインポスターテーブルの使用は推奨されませんが、手動で作成されたインポスターテーブルは永久的なものであるため、特に推奨されません。</target>
        </trans-unit>
        <trans-unit id="0cc48f0c85bdbc88acc6ded1a2b33b3cefbcc949" translate="yes" xml:space="preserve">
          <source>Since the SQLite database file format was designed (in 2003) the default &lt;a href=&quot;pragma#pragma_page_size&quot;&gt;page size&lt;/a&gt; for new databases has been 1024 bytes. This was a reasonable choice in 2003. But on modern hardware, a 4096 byte page is a faster and better choice. So, beginning with SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;version 3.12.0&lt;/a&gt; (2016-03-29)) the default page size for new database files has been increased to 4096 bytes.</source>
          <target state="translated">SQLiteデータベースファイル形式は（2003年に）設計&lt;a href=&quot;pragma#pragma_page_size&quot;&gt;さ&lt;/a&gt;れたため、新しいデータベースのデフォルトのページサイズは1024バイトです。これは2003年には妥当な選択でした。しかし、最新のハードウェアでは、4096バイトのページがより高速で優れた選択です。そのため、SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;バージョン3.12.0&lt;/a&gt;（2016-03-29）以降、新しいデータベースファイルのデフォルトのページサイズは4096バイトに増えました。</target>
        </trans-unit>
        <trans-unit id="054ac08de64845448b2fb9281541e1391100a214" translate="yes" xml:space="preserve">
          <source>Since the actions of &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; are determined to some extent by prior queries that have been evaluated on the same database connection, it is recommended that &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; be deferred until the database connection is closing and has thus had an opportunity to accumulate as much usage information as possible. It is also reasonable to set a timer to run &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; every few hours, or every few days, for database connections that stay open for a long time.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA最適化&lt;/a&gt;のアクションは、同じデータベース接続で評価された以前のクエリによってある程度決定されるため、データベース接続が閉じられ、使用量に関する情報を蓄積する機会が得られるまで、&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA最適化&lt;/a&gt;を延期することをお勧めしますできるだけ。長時間開いたままのデータベース接続に対して、数時間ごとまたは数日ごとに&lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA最適化&lt;/a&gt;を実行するようにタイマーを設定することも妥当です。</target>
        </trans-unit>
        <trans-unit id="a35c2dbd798622212a3da41545074117af9096bd" translate="yes" xml:space="preserve">
          <source>Since the index is used to look up values in the table, it is important that the index and table be kept consistent. Now that there is an index on the examp table, we will have to update that index whenever data is inserted, deleted, or changed in the examp table. Remember the first example above where we were able to insert a new row into the &quot;examp&quot; table using 12 VDBE instructions. Now that this table is indexed, 19 instructions are required. The SQL statement is this:</source>
          <target state="translated">インデックスはテーブル内の値を調べるために使用されるので、インデックスとテーブルの整合性を保つことが重要です。exampテーブルにインデックスがあるので、exampテーブルにデータが挿入されたり、削除されたり、変更されたりするたびに、そのインデックスを更新しなければなりません。上の最初の例で、12個のVDBE命令を使用して &quot;examp &quot;テーブルに新しい行を挿入することができたことを覚えています。このテーブルがインデックス化されたので、19の命令が必要になります。SQL文は次のようになります。</target>
        </trans-unit>
        <trans-unit id="792d86f988c7b4533a9df91cbaad2f47d8254db5" translate="yes" xml:space="preserve">
          <source>Since the information is stored in the table in rowid order, SQLite can find the correct row using a binary search. If the table contains N element, the time required to look up the desired row is proportional to logN rather than being proportional to N as in a full table scan. If the table contains 10 million elements, that means the query will be on the order of N/logN or about 1 million times faster.</source>
          <target state="translated">情報は行番号順にテーブルに格納されているため、SQLite はバイナリ検索を使用して正しい行を見つけることができます。テーブルにN個の要素が含まれている場合、目的の行を検索するのに必要な時間は、テーブルのフルスキャンのようにNに比例するのではなく、logNに比例します。テーブルに1000万個の要素が含まれている場合、クエリはN/logNのオーダー、または約100万倍速くなることを意味します。</target>
        </trans-unit>
        <trans-unit id="f5b0a5f9338e5d6f0eb6749a38c57ac37eadf9c5" translate="yes" xml:space="preserve">
          <source>Since the information is stored in the table in rowid order, SQLite can find the correct row using a binary search. If the table contains N elements, the time required to look up the desired row is proportional to logN rather than being proportional to N as in a full table scan. If the table contains 10 million elements, that means the query will be on the order of N/logN or about 1 million times faster.</source>
          <target state="translated">情報は行番号順にテーブルに格納されているため、SQLite はバイナリ検索を使用して正しい行を見つけることができます。テーブルにN個の要素が含まれている場合、目的の行を検索するのに必要な時間は、テーブルのフルスキャンのようにNに比例するのではなく、logNに比例します。テーブルに1000万の要素が含まれている場合、クエリはN/logNのオーダー、または約100万倍速くなることを意味します。</target>
        </trans-unit>
        <trans-unit id="94ff8f1fdae75cff7dbf44bfb613a96fb3fe71f5" translate="yes" xml:space="preserve">
          <source>Since this document was first written, the canonical SQLite source code has been moved from the venerable CVS system into a Fossil repository at &lt;a href=&quot;http://www.sqlite.org/src&quot;&gt;http://www.sqlite.org/src&lt;/a&gt;. This means that if you are working with canonical SQLite source code (as opposed to the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; source code files, sqlite3.c and sqlite3.h) then you can create a private repository simply by cloning the official repository:</source>
          <target state="translated">このドキュメントが最初に作成されて以来、正規のSQLiteソースコードは、由緒あるCVSシステムから&lt;a href=&quot;http://www.sqlite.org/src&quot;&gt;http://www.sqlite.org/srcの&lt;/a&gt; Fossilリポジトリに移動されました。これは、正規のSQLiteソースコード（&lt;a href=&quot;amalgamation&quot;&gt;統合&lt;/a&gt;ソースコードファイルsqlite3.cおよびsqlite3.hではなく）を使用している場合、公式リポジトリを複製するだけでプライベートリポジトリを作成できることを意味します。</target>
        </trans-unit>
        <trans-unit id="8b7c178a22b32f8642c754bb0ef6c8c8f9f96539" translate="yes" xml:space="preserve">
          <source>Since this document was originally written some of the database engines tested have been updated and users have been kind enough to send in corrections to the chart below. The original data showed a wide variety of behaviors, but over time the range of behaviors has converged toward the PostgreSQL/Oracle model. The only significant difference is that Informix and MS-SQL both treat NULLs as indistinct in a UNIQUE column.</source>
          <target state="translated">この文書が最初に書かれて以来、テストされたデータベースエンジンのいくつかが更新され、ユーザは親切にも下のグラフの修正を送ってくれました。元のデータでは様々な挙動を示していましたが、時間の経過とともに挙動の範囲はPostgreSQL/Oracleモデルに収束してきました。唯一の重要な違いは、InformixとMS-SQLの両方がUNIQUE列でNULLを不明瞭として扱うことです。</target>
        </trans-unit>
        <trans-unit id="a988ba929d7a7d98790e14aa91b1b4ee801c28ea" translate="yes" xml:space="preserve">
          <source>Since this interface is expected to be rarely used, it is only available if SQLite is compiled using the &lt;a href=&quot;../compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt; compile-time option.</source>
          <target state="translated">このインターフェースはめったに使用されないと予想されるため、&lt;a href=&quot;../compile#enable_stmt_scanstatus&quot;&gt;SQLITEがSQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt;コンパイル時オプションを使用してコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="fc8856dbc189b149adcf35c14f2c019d6ca39cd2" translate="yes" xml:space="preserve">
          <source>Since this interface is expected to be rarely used, it is only available if SQLite is compiled using the &lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt; compile-time option.</source>
          <target state="translated">このインターフェースはめったに使用されないと予想されるため、&lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITEがSQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt;コンパイル時オプションを使用してコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="69653584b18a40e580d58b62294b4d01dca91c5b" translate="yes" xml:space="preserve">
          <source>Since undefined and implementation-defined behavior is non-portable and can easily lead to incorrect answers, SQLite works very hard to avoid it. For example, when adding two integer column values together as part of an SQL statement, SQLite does not simply add them together using the C-language &quot;+&quot; operator. Instead, it first checks to make sure the addition will not overflow, and if it will, it does the addition using floating point instead.</source>
          <target state="translated">定義されていない、実装で定義された動作は移植性がなく、不正確な答えを導きやすいので、SQLiteはそれを避けるために懸命に働いています。例えば、SQL文の一部として2つの整数列の値を追加する場合、SQLiteはC言語の &quot;+&quot;演算子を使用して単純に追加することはありません。その代わりに、まず足し算がオーバーフローしないかどうかをチェックし、オーバーフローした場合は浮動小数点演算子を使用して足し算を行います。</target>
        </trans-unit>
        <trans-unit id="9a1c7258f48d87f5562218d2ba5ba3886293704d" translate="yes" xml:space="preserve">
          <source>Single-File Documents</source>
          <target state="translated">シングルファイル文書</target>
        </trans-unit>
        <trans-unit id="7fd14cfbad52780046ab174d1c92328e62738415" translate="yes" xml:space="preserve">
          <source>Single-file Cross-platform Database</source>
          <target state="translated">シングルファイル・クロスプラットフォーム・データベース</target>
        </trans-unit>
        <trans-unit id="71d9f86ea2562e67aa07344919bbe26526606087" translate="yes" xml:space="preserve">
          <source>Situations Where A Client/Server RDBMS May Work Better</source>
          <target state="translated">クライアント/サーバ型 RDBMS の方がうまくいく可能性がある状況</target>
        </trans-unit>
        <trans-unit id="7606f77965da29221827e7ce60dd2a6316522a70" translate="yes" xml:space="preserve">
          <source>Situations Where SQLite Works Well</source>
          <target state="translated">SQLite がうまく機能する状況</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="23dd62e305cc04b400ea8b167918d45e391e1599" translate="yes" xml:space="preserve">
          <source>Size Of The SQLite Library</source>
          <target state="translated">SQLite ライブラリのサイズ</target>
        </trans-unit>
        <trans-unit id="23aa6e811d60088ebfe23efb308861aa99dcc44c" translate="yes" xml:space="preserve">
          <source>Size in bytes</source>
          <target state="translated">サイズ(バイト数</target>
        </trans-unit>
        <trans-unit id="866e161f09886804ed95702c5f38517afa748243" translate="yes" xml:space="preserve">
          <source>Size of a disk sector assumed by the process that wrote this journal.</source>
          <target state="translated">このジャーナルを書いたプロセスが想定するディスクセクタのサイズ。</target>
        </trans-unit>
        <trans-unit id="d67d90ae080b2ba6443535a1ba1538cce623c7a0" translate="yes" xml:space="preserve">
          <source>Size of associated data in bytes after it has been uncompressed (an integer).</source>
          <target state="translated">圧縮を解除した後の関連データのサイズをバイト単位で指定します(整数)。</target>
        </trans-unit>
        <trans-unit id="af19d643ee98cb7aaa5189e1e80bb15629e35fe6" translate="yes" xml:space="preserve">
          <source>Size of pages in this journal.</source>
          <target state="translated">本誌のページサイズ。</target>
        </trans-unit>
        <trans-unit id="594a08e2bfa114e1b1b2dd2a2473b57fc253e650" translate="yes" xml:space="preserve">
          <source>Size of the database file in pages.</source>
          <target state="translated">データベースファイルのサイズをページ単位で指定します。</target>
        </trans-unit>
        <trans-unit id="57e816514d2bd056545721fc5901b1263c953939" translate="yes" xml:space="preserve">
          <source>Size of the database file in pages. The &quot;in-header database size&quot;.</source>
          <target state="translated">データベースファイルのサイズをページ単位で指定します。ヘッダー内のデータベースのサイズ」です。</target>
        </trans-unit>
        <trans-unit id="80dfcf68ced67397f8e69446b796772d4e573bd1" translate="yes" xml:space="preserve">
          <source>Skip NULL entries on range queries in &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt;. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/tktview/4baa46491212947&quot;&gt;4baa46491212947&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;expridx&quot;&gt;式のインデックスの&lt;/a&gt;範囲クエリでNULLエントリをスキップします。チケット&lt;a href=&quot;https://www.sqlite.org/src/tktview/4baa46491212947&quot;&gt;4baa46491212947の&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8597bf03434e274cab90656bf57bce61497b541d" translate="yes" xml:space="preserve">
          <source>Skip over leading spaces in text to numeric conversions.</source>
          <target state="translated">テキスト内の先頭のスペースをスキップして数値変換します。</target>
        </trans-unit>
        <trans-unit id="44c1dff190859dd795700849185006cec261ef11" translate="yes" xml:space="preserve">
          <source>Small code &lt;a href=&quot;footprint&quot;&gt;footprint&lt;/a&gt;: less than 600KiB fully configured or much less with optional features omitted.</source>
          <target state="translated">小さなコード&lt;a href=&quot;footprint&quot;&gt;フットプリント&lt;/a&gt;：完全に構成された600KiB未満、またはオプション機能を省略してはるかに少ない</target>
        </trans-unit>
        <trans-unit id="2d43535873c35c636399ec243f6c8a56398f45fc" translate="yes" xml:space="preserve">
          <source>Small edits only overwrite the parts of the file that change, reducing write time and wear on SSD drives.</source>
          <target state="translated">小規模な編集は、変更されたファイルの部分を上書きするだけで、SSDドライブへの書き込み時間と摩耗を軽減します。</target>
        </trans-unit>
        <trans-unit id="15cb3011196ef5ecfa387e72a64b6b9858775898" translate="yes" xml:space="preserve">
          <source>Smaller documents</source>
          <target state="translated">ドキュメントを小さくする</target>
        </trans-unit>
        <trans-unit id="6085ef2b0d377636644056b25b8388fdb9315be1" translate="yes" xml:space="preserve">
          <source>Snapshots of official releases of SQLite source code can often be obtained directly from the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;download page&lt;/a&gt; of the SQLite website. Even if the specific version desired is not listed on the download page, the naming conventions are fairly clear and so programmers can often guess the name of an historical release and download it that way.</source>
          <target state="translated">SQLiteソースコードの公式リリースのスナップショットは、多くの場合、SQLite Webサイトの&lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;ダウンロードページ&lt;/a&gt;から直接入手できます。必要な特定のバージョンがダウンロードページにリストされていなくても、命名規則はかなり明確であるため、プログラマーは多くの場合、履歴リリースの名前を推測し、そのようにダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="7745ac392b119ee893e25a699e3cdf853f08cced" translate="yes" xml:space="preserve">
          <source>So as not to open security holes in older applications that are unprepared to deal with &lt;a href=&quot;../loadext&quot;&gt;extension loading&lt;/a&gt;, and as a means of disabling &lt;a href=&quot;../loadext&quot;&gt;extension loading&lt;/a&gt; while evaluating user-entered SQL, the following API is provided to turn the &lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; mechanism on and off.</source>
          <target state="translated">&lt;a href=&quot;../loadext&quot;&gt;拡張機能の読み込み&lt;/a&gt;を処理する準備ができていない古いアプリケーションでセキュリティホールを開かないようにするため、およびユーザーが入力したSQLの評価中に&lt;a href=&quot;../loadext&quot;&gt;拡張機能の読み込み&lt;/a&gt;を無効にする手段として、&lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt;メカニズムのオンとオフを切り替えるために次のAPIが提供されています。</target>
        </trans-unit>
        <trans-unit id="38b1dd3b3f9a942c8b562e364d61d2076822b07d" translate="yes" xml:space="preserve">
          <source>So as not to open security holes in older applications that are unprepared to deal with &lt;a href=&quot;loadext&quot;&gt;extension loading&lt;/a&gt;, and as a means of disabling &lt;a href=&quot;loadext&quot;&gt;extension loading&lt;/a&gt; while evaluating user-entered SQL, the following API is provided to turn the &lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; mechanism on and off.</source>
          <target state="translated">&lt;a href=&quot;loadext&quot;&gt;拡張機能の読み込み&lt;/a&gt;を処理する準備ができていない古いアプリケーションでセキュリティホールを開かないようにするため、およびユーザーが入力したSQLの評価中に&lt;a href=&quot;loadext&quot;&gt;拡張機能の読み込み&lt;/a&gt;を無効にする手段として、&lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension（）&lt;/a&gt;メカニズムのオンとオフを切り替えるために次のAPIが提供されています。</target>
        </trans-unit>
        <trans-unit id="16d0e08c9c27f821bc14542d2dfda5e1d13ecd69" translate="yes" xml:space="preserve">
          <source>So in the vast majority of cases, applications need not worry about the WAL file at all. SQLite will automatically take care of it. But it is possible to get SQLite into a state where the WAL file will grow without bound, causing excess disk space usage and slow queries speeds. The following bullets enumerate some of the ways that this can happen and how to avoid them.</source>
          <target state="translated">そのため、大多数の場合、アプリケーションはWALファイルを全く気にする必要はありません。SQLiteが自動的に処理してくれます。しかし、SQLiteがWALファイルを無制限に成長させ、過剰なディスクスペースの使用やクエリの速度低下を引き起こす状態に陥る可能性があります。以下の箇条書きでは、このようなことが起こる可能性のある方法と、それを回避する方法を列挙しています。</target>
        </trans-unit>
        <trans-unit id="e294517ccb0b92866adadbcc46dbbe368da638fb" translate="yes" xml:space="preserve">
          <source>So instead of going by the standards documents, various popular SQL engines were tested to see how they handle NULLs. The idea was to make SQLite work like all the other engines. An SQL test script was developed and run by volunteers on various SQL RDBMSes and the results of those tests were used to deduce how each engine processed NULL values. The original tests were run in May of 2002. A copy of the test script is found at the end of this document.</source>
          <target state="translated">そこで、標準ドキュメントに従うのではなく、様々な人気のあるSQLエンジンがNULLをどのように扱うかをテストしました。このアイデアは、SQLiteを他のすべてのエンジンと同じように動作させることでした。有志によってSQLテストスクリプトが開発され、様々なSQL RDBMS上で実行され、その結果から各エンジンがどのようにNULL値を処理したかを推測するために使用されました。オリジナルのテストは2002年5月に実行されました。テストスクリプトのコピーはこの文書の最後にあります。</target>
        </trans-unit>
        <trans-unit id="cb3fd38b2086ae5409a50744fd4fc4e629f9ceb9" translate="yes" xml:space="preserve">
          <source>So let your take-away be this: read/write latency for SQLite is competitive with read/write latency of individual files on disk. Often SQLite is faster. Sometimes SQLite is almost as fast. Either way, this article disproves the common assumption that a relational database must be slower than direct filesystem I/O.</source>
          <target state="translated">SQLite の読み書きのレイテンシは、ディスク上の個々のファイルの読み書きのレイテンシと競合します。多くの場合、SQLite の方が速いです。SQLite の方が速いこともあれば、ほぼ同じくらい速いこともあります。いずれにせよ、この記事は、リレーショナルデータベースはファイルシステムの直接I/Oよりも遅くなければならないという一般的な思い込みを反証しています。</target>
        </trans-unit>
        <trans-unit id="4e14f136c4639ca69349a007ce6b5be7651832a1" translate="yes" xml:space="preserve">
          <source>So that</source>
          <target state="translated">そうすると</target>
        </trans-unit>
        <trans-unit id="ed811e71ef3d05d3652d347ba0eec5bc9cfd6daf" translate="yes" xml:space="preserve">
          <source>So the implementation of DELETE is really in two loops. The first loop (instructions 5 through 11) locates the records that are to be deleted and saves their keys onto a temporary list, and the second loop (instructions 16 through 19) uses the key list to delete the records one by one.</source>
          <target state="translated">つまり、DELETEの実装は2つのループに分かれています。最初のループ (命令 5 から 11)は削除するレコードを見つけ、そのキーを一時的なリストに保存します。</target>
        </trans-unit>
        <trans-unit id="c4f70ed30e8ca5ddd05ca39e32d9f73108273525" translate="yes" xml:space="preserve">
          <source>So then, instead of storing all content for all slides in a single oversized XML file (&quot;content.xml&quot;), suppose there was a separate table for storing the content of each slide separately. The table schema might look something like this:</source>
          <target state="translated">そこで、すべてのスライドのすべてのコンテンツを1つの特大XMLファイル(「content.xml」)に格納する代わりに、各スライドのコンテンツを個別に格納するための別のテーブルがあったとします。テーブルスキーマは次のようになります。</target>
        </trans-unit>
        <trans-unit id="21a527776b915968f528d88d96579bf0b2cfc459" translate="yes" xml:space="preserve">
          <source>So which query plan is better? It turns out that the answer depends on what kind of data is found in the node and edge tables.</source>
          <target state="translated">では、どのクエリプランが良いのでしょうか?答えは、ノードテーブルとエッジテーブルにどのようなデータが含まれているかに依存することがわかります。</target>
        </trans-unit>
        <trans-unit id="15a7d8b50c8c0de15e18cf6f21d9c00564463215" translate="yes" xml:space="preserve">
          <source>So with this simple change, the ODP file now stores not just the most recent edit to the presentation, but a history of all historic edits. The user would normally want to see just the most recent edition of the presentation, but if desired, the user can now go backwards in time to see historical versions of the same presentation.</source>
          <target state="translated">この簡単な変更で、ODPファイルには、プレゼンテーションの最新の編集だけでなく、すべての歴史的な編集の履歴が保存されます。ユーザーは通常、プレゼンテーションの最新版だけを見たいと思うでしょうが、必要に応じて、ユーザーは同じプレゼンテーションの歴史的なバージョンを見るために時間をさかのぼって行くことができます。</target>
        </trans-unit>
        <trans-unit id="1b3d75a6fea634203c91a87ee6d0199704a76d2e" translate="yes" xml:space="preserve">
          <source>So you can see that depending on how the data is structured in the table, either query plan 1 or query plan 2 might be better. Which plan does SQLite choose by default? As of version 3.6.18, without running &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;, SQLite will choose option 2. But if the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command is run in order to gather statistics, a different choice might be made if the statistics indicate that the alternative is likely to run faster.</source>
          <target state="translated">したがって、テーブル内のデータの構造に応じて、クエリプラン1またはクエリプラン2の方が適切な場合があります。SQLiteはデフォルトでどのプランを選択しますか？&lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;を実行せずにバージョン3.6.18以降では、SQLiteはオプション2を選択します。ただし、統計を収集するために&lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;コマンドを実行する場合、代替がより高速に実行される可能性が高いと統計が示す場合、別の選択が行われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ae83e266982fd9b4e55366971516ab44ce25fd32" translate="yes" xml:space="preserve">
          <source>So, SQLite is able to do one or two large and complex queries, or it can do many smaller and simpler queries. Both are efficient. An application can use either or both techniques, depending on what works best for the situation at hand.</source>
          <target state="translated">つまり、SQLiteは1つまたは2つの大規模で複雑なクエリを実行することができますが、もっと小さくてシンプルなクエリをたくさん実行することもできます。どちらも効率的です。アプリケーションは、手元の状況に応じて、どちらかのテクニックを使用することができます。</target>
        </trans-unit>
        <trans-unit id="bac7c0c462d374d0c622ef9a876ba7c2814954d0" translate="yes" xml:space="preserve">
          <source>So, for example, Android applications written in Java are able to invoke SQLite (through an adaptor). Maybe it would have been more convenient for Android if SQLite had been coded in Java as that would make the interface simpler. However, on iPhone applications are coded in Objective-C or Swift, neither of which have the ability to call libraries written in Java. Thus, SQLite would be unusable on iPhones had it been written in Java.</source>
          <target state="translated">つまり、例えばJavaで書かれたAndroidアプリケーションは、(アダプタを介して)SQLiteを呼び出すことができるということです。SQLiteがJavaでコーディングされていれば、インターフェイスがよりシンプルになるので、Androidにとってはもっと便利だったかもしれません。しかし、iPhoneのアプリケーションはObjective-CやSwiftでコーディングされており、どちらもJavaで書かれたライブラリを呼び出す機能はありません。したがって、もしSQLiteがJavaで書かれていたら、iPhoneでは使えなくなっていたでしょう。</target>
        </trans-unit>
        <trans-unit id="2a08fae7d5439605099534f2303acb989c7de8df" translate="yes" xml:space="preserve">
          <source>So, for example, if you wanted to see the compression efficiency (expressed as the size of the compressed content relative to the original uncompressed file size) for all files in the ZIP archive, sorted from most compressed to least compressed, you could run a query like this:</source>
          <target state="translated">そのため、例えば、ZIP アーカイブ内のすべてのファイルの圧縮効率 (元の非圧縮ファイルサイズに対する圧縮コンテンツのサイズで表される)を、最も圧縮されているものから最も圧縮されていないものまで順に表示したい場合は、次のようなクエリを実行できます。</target>
        </trans-unit>
        <trans-unit id="181a0af408b7a72e62f37951390087a73f4bc42a" translate="yes" xml:space="preserve">
          <source>So, for example, suppose a multi-thread process has two or more threads with separate SQLite database connections to the same database file. Then a third thread comes along and wants to read something out of that same database file on its own, without using the SQLite library. The third thread does an &lt;code&gt;open()&lt;/code&gt;, a &lt;code&gt;read()&lt;/code&gt; and then a &lt;code&gt;close()&lt;/code&gt;. One would think this would be harmless. But the &lt;code&gt;close()&lt;/code&gt; system call caused the locks held on the database by all the other threads to be dropped. Those other threads have no way of knowing that their locks have just been trashed (POSIX does not provide any mechanism to determine this) and so they keep on running under the assumption that their locks are still valid. This can lead to two or more threads or processes trying to write to the database at the same time, resulting in database corruption.</source>
          <target state="translated">したがって、たとえば、マルチスレッドプロセスに、同じデータベースファイルへのSQLiteデータベース接続が別々の2つ以上のスレッドがあるとします。次に、3番目のスレッドがやって来て、SQLiteライブラリを使用せずに、同じデータベースファイルから何かを独自に読み取ろうとしています。 3番目のスレッドは &lt;code&gt;open()&lt;/code&gt; 、 &lt;code&gt;read()&lt;/code&gt; 、次に &lt;code&gt;close()&lt;/code&gt; を実行します。これは無害であると考えるでしょう。しかし、 &lt;code&gt;close()&lt;/code&gt; システムコールにより、他のすべてのスレッドによってデータベースに保持されているロックが削除されました。これらの他のスレッドは、ロックが破棄されただけであることを知る方法がなく（POSIXはこれを判別するメカニズムを提供していません）、ロックはまだ有効であるという前提の下で実行を続けます。これにより、2つ以上のスレッドまたはプロセスが同時にデータベースに書き込もうとすると、データベースが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e67704da7c1255179aaf24e0803cc78b548dbe91" translate="yes" xml:space="preserve">
          <source>So, for example, suppose an application runs one query against an R-Tree like this:</source>
          <target state="translated">そのため、例えば、アプリケーションが以下のようなR-Treeに対して1つのクエリを実行したとします。</target>
        </trans-unit>
        <trans-unit id="7734444a7a6faac12d5a5f4324148513ca147ad7" translate="yes" xml:space="preserve">
          <source>So, for example, to move a polygon by some amount DX, DY without changing its shape, use:</source>
          <target state="translated">そのため、例えば、ポリゴンの形状を変えずにDX,DYをある程度移動させるには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="e378604952476e70a532691c0957173825ab1905" translate="yes" xml:space="preserve">
          <source>So, in most real systems, an index should be created on the child key columns of each foreign key constraint. The child key index does not have to be (and usually will not be) a UNIQUE index. Returning again to the example in section 1, the complete database schema for efficient implementation of the foreign key constraint might be:</source>
          <target state="translated">ですから、ほとんどの実際のシステムでは、各外部キー制約の子キー列にインデックスを作成しなければなりません。子キーインデックスはUNIQUEインデックスである必要はありません(通常はありません)。セクション1の例に戻りますが、外部キー制約を効率的に実装するための完全なデータベーススキーマは次のようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a3db788b7daff3a78000d452682744db386479ec" translate="yes" xml:space="preserve">
          <source>SoftNull</source>
          <target state="translated">SoftNull</target>
        </trans-unit>
        <trans-unit id="36455d32e1724499e8736ccea81ccd08b26881c3" translate="yes" xml:space="preserve">
          <source>Solve Sudoku puzzles</source>
          <target state="translated">数独を解く</target>
        </trans-unit>
        <trans-unit id="ea9361715e601f0c6bb314bde2f85f47f8bc5402" translate="yes" xml:space="preserve">
          <source>Some &quot;safe&quot; languages (ex: Go) dislike the use of assert(). But the use of assert() is a vital part of keeping SQLite maintainable. The lack of assert() in Go is a show-stopper as far as the developers of SQLite are concerned. See the &lt;a href=&quot;assert&quot;&gt;The Use Of assert() In SQLite&lt;/a&gt; article for additional information.</source>
          <target state="translated">一部の「安全な」言語（例：Go）は、assert（）の使用を嫌います。しかし、assert（）の使用は、SQLiteを保守可能に保つための重要な部分です。Goにassert（）がないことは、SQLiteの開発者が懸念している限り、大きな問題です。詳細については、&lt;a href=&quot;assert&quot;&gt;SQLiteでのassert（）の使用&lt;/a&gt;に関する記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="82877b639e06578b26b7b6487eda6b76c0a0e3c6" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements do their work during sqlite3_prepare() rather than during sqlite3_step(). Those PRAGMA statements are unaffected by EXPLAIN. They operate the same with or without the EXPLAIN prefix. The set of PRAGMA statements that are unaffected by EXPLAIN can vary from one release to the next. Some PRAGMA statements operate during sqlite3_prepare() depending on their arguments. For consistent results, avoid using EXPLAIN on PRAGMA statements.</source>
          <target state="translated">一部の&lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt;ステートメントは、sqlite3_step（）中ではなく、sqlite3_prepare（）中に機能します。これらのPRAGMAステートメントはEXPLAINの影響を受けません。 EXPLAINプレフィックスがあってもなくても同じように動作します。 EXPLAINの影響を受けない一連のPRAGMAステートメントは、リリースごとに異なる場合があります。一部のPRAGMAステートメントは、引数に応じてsqlite3_prepare（）の間に動作します。一貫した結果を得るには、PRAGMAステートメントでEXPLAINを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="5732042dba5cf74de37a47838012719f36ee8111" translate="yes" xml:space="preserve">
          <source>Some Example Triggers</source>
          <target state="translated">トリガーの例</target>
        </trans-unit>
        <trans-unit id="e2da6518510111d1ca6bc33d2d1e98dff9548bb8" translate="yes" xml:space="preserve">
          <source>Some SQL database engines provide non-standard &quot;hint&quot; mechanisms which can be used to give the query optimizer clues about what indices it should use for a particular statement. The INDEX BY clause of SQLite is &lt;em&gt;not&lt;/em&gt; a hinting mechanism and it should not be used as such. The INDEXED BY clause does not give the optimizer hints about which index to use; it gives the optimizer a requirement of which index to use. If the query optimizer is unable to use the index specified by the INDEX BY clause, then the query will fail with an error.</source>
          <target state="translated">一部のSQLデータベースエンジンは、非標準の「ヒント」メカニズムを提供します。これを使用して、クエリオプティマイザが特定のステートメントに使用するインデックスについての手掛かりを得ることができます。 SQLiteのの句BY INDEXは&lt;em&gt;ない&lt;/em&gt;ヒンティング機構及びそれがそのようなものとして使用されるべきではありません。 INDEXED BY句は、使用するインデックスに関するオプティマイザヒントを提供しません。オプティマイザに使用するインデックスの要件を与えます。クエリオプティマイザーがINDEX BY句で指定されたインデックスを使用できない場合、クエリはエラーで失敗します。</target>
        </trans-unit>
        <trans-unit id="fbf443b96f0d9f6eac4bc80a9c5c544e6d64bd31" translate="yes" xml:space="preserve">
          <source>Some commentators say that SQLite is &quot;weakly typed&quot; and that other SQL databases are &quot;strongly typed&quot;. We consider these terms to be inaccurate and pejorative. We prefer to say that SQLite is &quot;flexibly typed&quot; and that other SQL databases are &quot;rigidly typed&quot;.</source>
          <target state="translated">一部のコメンテーターは、SQLiteは「型付けが弱い」と言い、他のSQLデータベースは「型付けが強い」と言っています。私たちは、これらの用語は不正確で蔑称的なものだと考えています。私たちは、SQLiteは「柔軟に型付けされている」と言い、他のSQLデータベースは「厳密に型付けされている」と言いたいのです。</target>
        </trans-unit>
        <trans-unit id="ffa0bb5b46a56bce712735328de2ecfd7898dd9a" translate="yes" xml:space="preserve">
          <source>Some devices are compelled to use an older filesystem with 8+3 filename restrictions for backwards compatibility, or due to other non-technical factors. In such situations, SQLite can be coerced into using auxiliary files that fit the 8+3 pattern as follows:</source>
          <target state="translated">一部のデバイスでは、下位互換性のために、あるいはその他の非技術的な要因のために、8+3のファイル名の制限がある古いファイルシステムを使用することを余儀なくされることがあります。このような状況では、SQLite は以下のように 8+3 パターンに適合する補助ファイルを強制的に使用することができます。</target>
        </trans-unit>
        <trans-unit id="a1a4bdb9a86e43ef62782dbb2803e2ef7fef0a7a" translate="yes" xml:space="preserve">
          <source>Some example, cost table entries:</source>
          <target state="translated">いくつかの例では、コストテーブルのエントリ。</target>
        </trans-unit>
        <trans-unit id="9234854e8f0cb7e3b23fa0273a95bcc8f4a8eaf9" translate="yes" xml:space="preserve">
          <source>Some examples will help illustrate the difference:</source>
          <target state="translated">いくつかの例は、その違いを説明するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="31941b285d3264077d66c50c29fee18d7a8c1f66" translate="yes" xml:space="preserve">
          <source>Some freelist pages contain critical data; specifically the locations of other freelist pages. But most freelist pages contain nothing useful. These latter freelist pages are called &quot;leaf&quot; pages. We are free to modify the content of a leaf freelist page in the database without changing the meaning of the database in any way.</source>
          <target state="translated">いくつかのフリーリストページには、重要なデータが含まれています。しかし、ほとんどのフリーリストページは何も有用なものを含んでいません。これらの後者のフリーリストページは「リーフ」ページと呼ばれています。私たちは、データベースの意味を変更することなく、データベース内のリーフフリーリストページの内容を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="6d4f98671a50a0a922d51c622597741cdfcd893a" translate="yes" xml:space="preserve">
          <source>Some future versions of SQLite may change to enable this feature by default.</source>
          <target state="translated">SQLite の将来のバージョンによっては、デフォルトでこの機能を有効にするように変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2f4d80fea07d79c2b9292b009b4bc9dc70c5c271" translate="yes" xml:space="preserve">
          <source>Some heightened security settings (&lt;a href=&quot;#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema=OFF&lt;/a&gt;) disable the use of SQL functions inside views and triggers and in schema structures such as &lt;a href=&quot;lang_createtable#ckconst&quot;&gt;CHECK constraints&lt;/a&gt;, &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;DEFAULT clauses&lt;/a&gt;, &lt;a href=&quot;expridx&quot;&gt;expression indexes&lt;/a&gt;, &lt;a href=&quot;partialindex&quot;&gt;partial indexes&lt;/a&gt;, and &lt;a href=&quot;gencol&quot;&gt;generated columns&lt;/a&gt; unless the function is tagged with SQLITE_INNOCUOUS. Most built-in functions are innocuous. Developers are advised to avoid using the SQLITE_INNOCUOUS flag for application-defined functions unless the function has been carefully audited and found to be free of potentially security-adverse side-effects and information-leaks.</source>
          <target state="translated">一部の強化されたセキュリティ設定（&lt;a href=&quot;#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt;および&lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema = OFF&lt;/a&gt;）は、関数がSQLITE_INNOCUOUSでタグ付け&lt;a href=&quot;gencol&quot;&gt;されてい&lt;/a&gt;ない限り、ビューとトリガー内、および&lt;a href=&quot;lang_createtable#ckconst&quot;&gt;CHECK制約&lt;/a&gt;、&lt;a href=&quot;lang_createtable#dfltval&quot;&gt;DEFAULT句&lt;/a&gt;、&lt;a href=&quot;expridx&quot;&gt;式インデックス&lt;/a&gt;、&lt;a href=&quot;partialindex&quot;&gt;部分インデックス&lt;/a&gt;、生成された列などのスキーマ構造でのSQL関数の使用を無効にします。。ほとんどの組み込み関数は無害です。開発者は、関数が注意深く監査され、潜在的にセキュリティに悪影響を与える副作用や情報漏えいがないことが判明しない限り、アプリケーション定義関数にSQLITE_INNOCUOUSフラグを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="94760af1d8102735e05f237c89411fff0859308d" translate="yes" xml:space="preserve">
          <source>Some heightened security settings (&lt;a href=&quot;c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; and &lt;a href=&quot;../pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema=OFF&lt;/a&gt;) disable the use of SQL functions inside views and triggers and in schema structures such as &lt;a href=&quot;../lang_createtable#ckconst&quot;&gt;CHECK constraints&lt;/a&gt;, &lt;a href=&quot;../lang_createtable#dfltval&quot;&gt;DEFAULT clauses&lt;/a&gt;, &lt;a href=&quot;../expridx&quot;&gt;expression indexes&lt;/a&gt;, &lt;a href=&quot;../partialindex&quot;&gt;partial indexes&lt;/a&gt;, and &lt;a href=&quot;../gencol&quot;&gt;generated columns&lt;/a&gt; unless the function is tagged with SQLITE_INNOCUOUS. Most built-in functions are innocuous. Developers are advised to avoid using the SQLITE_INNOCUOUS flag for application-defined functions unless the function has been carefully audited and found to be free of potentially security-adverse side-effects and information-leaks.</source>
          <target state="translated">一部の強化されたセキュリティ設定（&lt;a href=&quot;c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt;および&lt;a href=&quot;../pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema = OFF&lt;/a&gt;）は、関数がSQLITE_INNOCUOUSでタグ付け&lt;a href=&quot;../gencol&quot;&gt;されてい&lt;/a&gt;ない限り、ビューとトリガー内、および&lt;a href=&quot;../lang_createtable#ckconst&quot;&gt;CHECK制約&lt;/a&gt;、&lt;a href=&quot;../lang_createtable#dfltval&quot;&gt;DEFAULT句&lt;/a&gt;、&lt;a href=&quot;../expridx&quot;&gt;式インデックス&lt;/a&gt;、&lt;a href=&quot;../partialindex&quot;&gt;部分インデックス&lt;/a&gt;、生成された列などのスキーマ構造でのSQL関数の使用を無効にします。。ほとんどの組み込み関数は無害です。開発者は、関数が注意深く監査され、潜在的にセキュリティに悪影響を与える副作用や情報漏えいがないことが判明しない限り、アプリケーション定義関数にSQLITE_INNOCUOUSフラグを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1bc7150370b1275da7b22e0b3c0daa34955ce5a3" translate="yes" xml:space="preserve">
          <source>Some limits can be changed at run-time on a per-connection basis using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; interface with one of the &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;limit categories&lt;/a&gt; defined for that interface. Run-time limits are designed for applications that have multiple databases, some of which are for internal use only and others which can be influenced or controlled by potentially hostile external agents. For example, a web browser application might use an internal database to track historical page views but have one or more separate databases that are created and controlled by javascript applications that are downloaded from the internet. The &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; interface allows internal databases managed by trusted code to be unconstrained while simultaneously placing tight limitations on databases created or controlled by untrusted external code in order to help prevent a denial of service attack.</source>
          <target state="translated">一部の制限は、&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit（）&lt;/a&gt;インターフェイスを使用して接続ごとに実行時に変更でき、そのインターフェイスに定義された&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;制限カテゴリの&lt;/a&gt; 1つを使用できます。実行時の制限は、複数のデータベースを持つアプリケーション用に設計されており、その一部は内部でのみ使用されるものであり、他のものは潜在的に敵意のある外部エージェントによって影響または制御される可能性があります。たとえば、Webブラウザアプリケーションは、内部データベースを使用して履歴ページビューを追跡しますが、インターネットからダウンロードされるJavaScriptアプリケーションによって作成および制御される1つ以上の個別のデータベースを持っている場合があります。&lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit（）&lt;/a&gt;インターフェースにより、信頼できるコードによって管理される内部データベースの制約がなくなり、同時に信頼できない外部コードによって作成または制御されるデータベースに厳しい制限を課して、サービス拒否攻撃を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="27f0f8e3878344df85d2a4246c11bee1e47d7640" translate="yes" xml:space="preserve">
          <source>Some older versions of Linux used the LinuxThreads library for thread support. LinuxThreads is similar to Pthreads, but is subtly different with respect to handling of POSIX advisory locks. SQLite versions 2.2.3 through 3.6.23 recognized that LinuxThreads were being used at runtime and took appropriate action to work around the non-standard behavior of LinuxThreads. But most modern Linux implementations make use of the newer, and correct, NPTL implementation of Pthreads. Beginning with SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;version 3.7.0&lt;/a&gt; (2010-07-21), the use of NPTL is assumed. No checks are made. Hence, recent versions of SQLite will subtly malfunction and may corrupt database files if used in multi-threaded application that run on older linux systems that make use of LinuxThreads.</source>
          <target state="translated">一部の古いバージョンのLinuxでは、スレッドサポートにLinuxThreadsライブラリを使用していました。 LinuxThreadsはPthreadsに似ていますが、POSIXアドバイザリロックの処理に関して微妙に異なります。 SQLiteバージョン2.2.3から3.6.23は、実行時にLinuxThreadsが使用されていることを認識し、LinuxThreadsの非標準の動作を回避するために適切なアクションを実行しました。しかし、最近のほとんどのLinux実装は、Pthreadのより新しくて正しいNPTL実装を利用しています。 SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;バージョン3.7.0&lt;/a&gt;（2010-07-21）以降、NPTLの使用が想定されています。チェックは行われません。したがって、最近のバージョンのSQLiteは微妙に誤動作し、LinuxThreadsを使用する古いLinuxシステムで実行されるマルチスレッドアプリケーションで使用すると、データベースファイルが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0bef87b7bc572b2934b8ea6d4c58c70ed7dd3633" translate="yes" xml:space="preserve">
          <source>Some older versions of SQLite (prior to version 2.4.0) would show decreasing performance after a sequence of DELETEs followed by new INSERTs. As this test shows, the problem has now been resolved.</source>
          <target state="translated">一部の古いバージョンのSQLite(バージョン2.4.0以前)では、一連のDELETEの後に新しいINSERTを行うと、パフォーマンスが低下することがありました。このテストが示すように、この問題は現在解決されています。</target>
        </trans-unit>
        <trans-unit id="4b536a604954c308bdf6df6ee3bb8ed7c841aa8c" translate="yes" xml:space="preserve">
          <source>Some opcodes are self-altering. For example, the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode (which is always the first opcode in every bytecode program) increments its P1 operand. Subsequent &lt;a href=&quot;opcode#Once&quot;&gt;Once&lt;/a&gt; opcodes compare their P1 operands to the P1 value for the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode in order to determine if the one-time initialization code that follows should be skipped. Another example is the &lt;a href=&quot;opcode#String8&quot;&gt;String8&lt;/a&gt; opcode which converts its P4 operand from UTF-8 into the correct database string encoding, then converts itself into a &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; opcode.</source>
          <target state="translated">一部のオペコードは自己変更型です。たとえば、&lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt;オペコード（常にすべてのバイトコードプログラムの最初のオペコード）は、そのP1オペランドをインクリメントします。後続の&lt;a href=&quot;opcode#Once&quot;&gt;Once&lt;/a&gt;オペコードは、P1オペランドを&lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt;オペコードのP1値と比較して、後続の1回限りの初期化コードをスキップする必要があるかどうかを判断します。別の例は、&lt;a href=&quot;opcode#String8&quot;&gt;String8の&lt;/a&gt;その後に自身を変換し、正しいデータベース文字列のエンコーディングにUTF-8から、そのP4オペランドを変換オペコード&lt;a href=&quot;opcode#String&quot;&gt;文字列&lt;/a&gt;オペコード。</target>
        </trans-unit>
        <trans-unit id="52125a8361f282383783887e4dc2c4cfed4a215d" translate="yes" xml:space="preserve">
          <source>Some opcodes are self-altering. For example, the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode (which is always the first opcode run a bytecode program) increments its P1 operand. Subsequent &lt;a href=&quot;opcode#Once&quot;&gt;Once&lt;/a&gt; opcodes compare their P1 operands to the P1 value for the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode in order to determine if the one-time initialization code that follows should be skipped. Another example is the &lt;a href=&quot;opcode#String8&quot;&gt;String8&lt;/a&gt; opcode which converts its P4 operand from UTF-8 into the correct database string encoding, then converts itself into a &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; opcode.</source>
          <target state="translated">一部のオペコードは自動変更されます。たとえば、&lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt;オペコード（常に最初のオペコードがバイトコードプログラムを実行する）は、P1オペランドをインクリメントします。その後の&lt;a href=&quot;opcode#Once&quot;&gt;1回の&lt;/a&gt;オペコードは、それに続く1回限りの初期化コードをスキップする必要があるかどうかを判断するために、P1オペランドを&lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt;オペコードのP1値と比較します。別の例は、&lt;a href=&quot;opcode#String8&quot;&gt;String8の&lt;/a&gt;その後に自身を変換し、正しいデータベース文字列のエンコーディングにUTF-8から、そのP4オペランドを変換オペコード&lt;a href=&quot;opcode#String&quot;&gt;文字列&lt;/a&gt;オペコード。</target>
        </trans-unit>
        <trans-unit id="426e64b4a66f4f7807aa6667039b81573979fe2a" translate="yes" xml:space="preserve">
          <source>Some opcodes use all five operands. Some opcodes use one or two. Some opcodes use none of the operands.</source>
          <target state="translated">いくつかのオペコードは、5つのオペランドすべてを使用します。いくつかのオペコードは、1つまたは2つのオペランドを使用します。いくつかのオペコードは、オペランドのいずれも使用しません。</target>
        </trans-unit>
        <trans-unit id="18b335ac36fb2d38cd00024b326c89df9316f364" translate="yes" xml:space="preserve">
          <source>Some or all of these restrictions may be removed in the future.</source>
          <target state="translated">これらの制限の一部または全部が将来的に削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b476a9e69a79b5371957fc7b1a40c95e375aeff4" translate="yes" xml:space="preserve">
          <source>Some other SQL database engines advise developers to store blobs in separate files and then store the filename in the database. In that case, where the database must first be consulted to find the filename before opening and reading the file, simply storing the entire blob in the database gives much faster read and write performance with SQLite. See the &lt;a href=&quot;intern-v-extern-blob&quot;&gt;Internal Versus External BLOBs&lt;/a&gt; article for more information.</source>
          <target state="translated">他のいくつかのSQLデータベースエンジンは、BLOBを個別のファイルに保存してから、ファイル名をデータベースに保存するように開発者にアドバイスしています。その場合、ファイルを開いて読み取る前にまずデータベースを調べてファイル名を見つける必要がありますが、Blob全体をデータベースに格納するだけで、SQLiteの読み取りおよび書き込みパフォーマンスが大幅に向上します。詳細については、&lt;a href=&quot;intern-v-extern-blob&quot;&gt;内部と外部のBLOBの&lt;/a&gt;記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="e94448e3ce0b80c02ec3cf58a3a89e81bfc4e794" translate="yes" xml:space="preserve">
          <source>Some other database constraint, for example a UNIQUE or CHECK constraint, may be violated when the new row is inserted.</source>
          <target state="translated">新しい行が挿入されたときに、他のデータベース制約、例えばUNIQUE制約やCHECK制約が違反している可能性があります。</target>
        </trans-unit>
        <trans-unit id="d87a22bd6e23f0cc806f999949a67d71c38a0517" translate="yes" xml:space="preserve">
          <source>Some other database constraint, for example a UNIQUE or CHECK constraint, may be violated when the row is updated.</source>
          <target state="translated">行が更新されたときに、他のデータベース制約、例えばUNIQUE制約やCHECK制約が違反している可能性があります。</target>
        </trans-unit>
        <trans-unit id="a803eb726af2b55f4a3a45a5ec6b4038451fda8a" translate="yes" xml:space="preserve">
          <source>Some other ways in which FTS5 differs from FTS3/4 are:</source>
          <target state="translated">FTS5がFTS3/4と異なる点は他にもいくつかあります。</target>
        </trans-unit>
        <trans-unit id="e2d6bed42aa0aeee6bb3a36da7e69907ed2fed99" translate="yes" xml:space="preserve">
          <source>Some people say that we should eliminate all warnings because benign warnings mask real warnings that might arise in future changes. This is true enough. But in reply, the developers observe that all warnings have already been fixed in the builds used for SQLite development (various versions of GCC, MSVC, and clang). Compiler warnings usually only arise from compilers or compile-time options that the SQLite developers do not use themselves.</source>
          <target state="translated">良性の警告は、将来の変更で発生するかもしれない本当の警告を覆い隠してしまうので、すべての警告を排除すべきだと言う人もいます。これは十分に真実です。しかし、それに対して開発者は、SQLite の開発に使われているビルド (GCC、MSVC、clang の様々なバージョン)では、すべての警告がすでに修正されていることを観察しています。コンパイラの警告は通常、SQLite 開発者自身が使用していないコンパイラやコンパイル時のオプションからのみ発生します。</target>
        </trans-unit>
        <trans-unit id="8711937cd8478cc6ecffffaffa9bef747431485f" translate="yes" xml:space="preserve">
          <source>Some people view RELEASE as the equivalent of COMMIT for a SAVEPOINT. This is an acceptable point of view as long as one remembers that the changes committed by an inner transaction might later be undone by a rollback in an outer transaction.</source>
          <target state="translated">RELEASEをSAVEPOINTのCOMMITと同等と考える人もいる。これは、内側のトランザクションによってコミットされた変更が、外側のトランザクションのロールバックによって後で元に戻されるかもしれないことを覚えている限り、許容できる視点です。</target>
        </trans-unit>
        <trans-unit id="0c7ab5e876e4a01802f6862f91dcb4e0c53f5563" translate="yes" xml:space="preserve">
          <source>Some pragmas take effect during the SQL compilation stage, not the execution stage. This means if using the C-language &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;, &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;, &lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize()&lt;/a&gt; API (or similar in a wrapper interface), the pragma may run during the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; call, not during the &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; call as normal SQL statements do. Or the pragma might run during sqlite3_step() just like normal SQL statements. Whether or not the pragma runs during sqlite3_prepare() or sqlite3_step() depends on the pragma and on the specific release of SQLite.</source>
          <target state="translated">一部のプラグマは、実行段階ではなく、SQLコンパイル段階で有効になります。 C言語を使用している場合、この手段&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（） &lt;/a&gt;、&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（） &lt;/a&gt;、&lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize（）&lt;/a&gt; API（またはラッパーインタフェースの同様の）を、プラグマは、中に実行することができる&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare（）&lt;/a&gt;呼び出しではなく、中&lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step（）&lt;/a&gt;通常のSQLとしてコールステートメントが行います。または、プラグマは通常のSQLステートメントと同じようにsqlite3_step（）の間に実行される場合があります。プラグマがsqlite3_prepare（）またはsqlite3_step（）の実行中に実行されるかどうかは、プラグマとSQLiteの特定のリリースに依存します。</target>
        </trans-unit>
        <trans-unit id="16b35f88ff5fdb19b220d3f1fb964fe543a7595b" translate="yes" xml:space="preserve">
          <source>Some programmers cannot imagine developing a complex system like SQLite in a language that is not &quot;object oriented&quot;. So why is SQLite not coded in C++ or Java?</source>
          <target state="translated">プログラマーの中には、SQLite のような複雑なシステムを「オブジェクト指向」ではない言語で開発することを想像できない人もいます。ではなぜSQLiteはC++やJavaでコーディングされていないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="b34c6a5bd79eb90989f1ccbc7f5ec2a47398a0d5" translate="yes" xml:space="preserve">
          <source>Some query parameters are interpreted by the SQLite core and used to modify the characteristics of the new connection. All query parameters are always passed through into the xOpen method of the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; even if they are previously read and interpreted by the SQLite core.</source>
          <target state="translated">一部のクエリパラメータはSQLiteコアによって解釈され、新しい接続の特性を変更するために使用されます。SQLiteコアによって以前に読み取られて解釈された場合でも、すべてのクエリパラメーターは常に&lt;a href=&quot;vfs&quot;&gt;VFSの&lt;/a&gt; xOpenメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="dfe466f14dd2cc6407106f618ec85911c7fcc3f4" translate="yes" xml:space="preserve">
          <source>Some readers might be reluctant to consider SQLite as an application file format because they have been inculcated with the idea that all SQL database schemas must be factored into third normal form and store only small primitive data types such as strings and integers. Certainly relational theory is important and designers should strive to understand it. But, as demonstrated above, it is often quite acceptable to store complex information as XML or JSON in text fields of a database. Do what works, not what your database professor said you ought to do.</source>
          <target state="translated">読者の中には、すべてのSQLデータベーススキーマは第3の通常形式に組み込まれ、文字列や整数のような小さな原始的なデータ型のみを格納しなければならないという考えが植え付けられているため、SQLiteをアプリケーションのファイル形式として検討することに消極的な人もいるかもしれません。確かにリレーショナル理論は重要であり、設計者はそれを理解するように努力すべきです。しかし、上で実証されたように、複雑な情報をXMLやJSONとしてデータベースのテキストフィールドに格納することは、かなり許容できることが多いのです。データベースの教授に言われたことをするのではなく、うまくいくことをしましょう。</target>
        </trans-unit>
        <trans-unit id="da24c123adee2fd8a84517f276f1059ec16db37d" translate="yes" xml:space="preserve">
          <source>Some readers might resist using SQLite as an application file format due to prior exposure to enterprise SQL databases and the caveats and limitations of those other systems. For example, many enterprise database engines advise against storing large strings or BLOBs in the database and instead suggest that large strings and BLOBs be stored as separate files and the filename stored in the database. But SQLite is not like that. Any column of an SQLite database can hold a string or BLOB up to about a gigabyte in size. And for strings and BLOBs of 100 kilobytes or less, &lt;a href=&quot;intern-v-extern-blob&quot;&gt;I/O performance is better&lt;/a&gt; than using separate files.</source>
          <target state="translated">一部の読者は、エンタープライズSQLデータベースへの以前の暴露と他のシステムの警告と制限のために、SQLiteをアプリケーションファイル形式として使用することに抵抗するかもしれません。たとえば、多くのエンタープライズデータベースエンジンは、データベースに大きな文字列またはBLOBを格納しないようにアドバイスしており、代わりに大きな文字列とBLOBを別々のファイルとして格納し、ファイル名をデータベースに格納することを推奨しています。しかし、SQLiteはそうではありません。 SQLiteデータベースの任意の列は、最大で約1ギガバイトの文字列またはBLOBを保持できます。また、100キロバイト以下の文字列とBLOBの場合、個別のファイルを使用する&lt;a href=&quot;intern-v-extern-blob&quot;&gt;より&lt;/a&gt;もI / Oパフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="4623126273e781b93958cb9c59802c9b42b20a62" translate="yes" xml:space="preserve">
          <source>Some sanity checking code was removed from the inner loop of vdbe.c to help the library to run a little faster. The code is only removed if you compile with -DNDEBUG.</source>
          <target state="translated">ライブラリの動作を少し速くするために、いくつかのサニティチェックコードを vdbe.c の内部ループから削除しました。このコードが削除されるのは、-DNDEBUG でコンパイルした場合のみです。</target>
        </trans-unit>
        <trans-unit id="fdb2b13b24f119a63e7d35aeab7a0a13260e1127" translate="yes" xml:space="preserve">
          <source>Some systems (for example, Windows 95) do not support the operation implemented by sqlite3_mutex_try(). On those systems, sqlite3_mutex_try() will always return SQLITE_BUSY. The SQLite core only ever uses sqlite3_mutex_try() as an optimization so this is acceptable behavior.</source>
          <target state="translated">いくつかのシステム(例えばWindows 95)はsqlite3_mutex_try()で実装された操作をサポートしていません。そのようなシステムでは、sqlite3_mutex_try()は常にSQLITE_BUSYを返します。SQLiteコアは最適化としてsqlite3_mutex_try()を使用するだけなので、これは許容できる動作です。</target>
        </trans-unit>
        <trans-unit id="3594c70c212410200cff937ed0dc1d8804fee77c" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations (ex: &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;, and &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt;) make use of real (non-virtual) database tables to store content. For example, when content is inserted into the FTS3 virtual table, the data is ultimately stored in real tables named &quot;%_content&quot;, &quot;%_segdir&quot;, &quot;%_segments&quot;, &quot;%_stat&quot;, and &quot;%_docsize&quot; where &quot;%&quot; is the name of the original virtual table. This auxiliary real tables that store content for a virtual table are called &quot;shadow tables&quot;. See (&lt;a href=&quot;fts3#*shadowtab&quot;&gt;1&lt;/a&gt;), (&lt;a href=&quot;fts5#appendix_b&quot;&gt;2&lt;/a&gt;), and (&lt;a href=&quot;rtree#xshadow&quot;&gt;3&lt;/a&gt;) for additional information.</source>
          <target state="translated">一部の仮想テーブルの実装（例：&lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;、&lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;、および&lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt;）は、コンテンツを格納するために実際の（非仮想）データベーステーブルを利用します。たとえば、コンテンツがFTS3仮想テーブルに挿入されると、データは最終的に「％_content」、「％_ segdir」、「％_ segments」、「％_ stat」、「％_ docsize」という名前の実際のテーブルに保存されます。 &quot;は、元の仮想テーブルの名前です。仮想テーブルのコンテンツを格納するこの補助的な実テーブルは、「シャドウテーブル」と呼ばれます。詳細については、（&lt;a href=&quot;fts3#*shadowtab&quot;&gt;1&lt;/a&gt;）、（&lt;a href=&quot;fts5#appendix_b&quot;&gt;2&lt;/a&gt;）、（&lt;a href=&quot;rtree#xshadow&quot;&gt;3&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac3c1999dd15ec935e4c05fd2cbb35a8f0236c55" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations may INSERT rows into rowid tables as part of committing a transaction (e.g. to flush data accumulated in memory to disk). In this case subsequent calls to this function return the rowid associated with these internal INSERT operations, which leads to unintuitive results. Virtual table implementations that do write to rowid tables in this way can avoid this problem by restoring the original rowid value using &lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; before returning control to the user.</source>
          <target state="translated">一部の仮想テーブルの実装では、トランザクションのコミットの一部として行をROWIDテーブルに挿入する場合があります（たとえば、メモリに蓄積されたデータをディスクにフラッシュするため）。この場合、この関数を次に呼び出すと、これらの内部INSERT操作に関連付けられたROWIDが返されるため、直感に反する結果になります。この方法でROWIDテーブルに書き込む仮想テーブルの実装では、ユーザーに制御を返す前に&lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;を使用して元のROWID値を復元することにより、この問題を回避できます。</target>
        </trans-unit>
        <trans-unit id="bf0309e04b01e09dca18924e050475fbb9284235" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations may INSERT rows into rowid tables as part of committing a transaction (e.g. to flush data accumulated in memory to disk). In this case subsequent calls to this function return the rowid associated with these internal INSERT operations, which leads to unintuitive results. Virtual table implementations that do write to rowid tables in this way can avoid this problem by restoring the original rowid value using &lt;a href=&quot;set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; before returning control to the user.</source>
          <target state="translated">一部の仮想テーブルの実装では、トランザクションのコミットの一部として行をROWIDテーブルに挿入する場合があります（たとえば、メモリに蓄積されたデータをディスクにフラッシュするため）。この場合、この関数を次に呼び出すと、これらの内部INSERT操作に関連付けられたROWIDが返されるため、直感に反する結果になります。この方法でROWIDテーブルに書き込む仮想テーブルの実装では、ユーザーに制御を返す前に&lt;a href=&quot;set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid（）&lt;/a&gt;を使用して元のROWID値を復元することにより、この問題を回避できます。</target>
        </trans-unit>
        <trans-unit id="37863aa03861c512ad1c77afb4b6689cfad7493b" translate="yes" xml:space="preserve">
          <source>Some virtual tables exist automatically in the &quot;main&quot; schema of every database connection in which their module is registered, even without a &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; statement. Such virtual tables are called &quot;eponymous virtual tables&quot;. To use an eponymous virtual table, simply use the module name as if it were a table. Eponymous virtual tables exist in the &quot;main&quot; schema only, so they will not work if prefixed with a different schema name.</source>
          <target state="translated">一部の仮想テーブルは、&lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt;ステートメントがなくても、モジュールが登録されているすべてのデータベース接続の「メイン」スキーマに自動的に存在します。このような仮想テーブルは「匿名仮想テーブル」と呼ばれます。代名詞の仮想テーブルを使用するには、モジュール名をテーブルのように使用するだけです。匿名の仮想テーブルは「メイン」スキーマにのみ存在するため、異なるスキーマ名をプレフィックスとして使用すると機能しません。</target>
        </trans-unit>
        <trans-unit id="0235dde661a1106f01332ba53a569381817a7286" translate="yes" xml:space="preserve">
          <source>Someone (or some process) might rename the database file but fail to also rename its associated journal.</source>
          <target state="translated">誰か(またはいくつかのプロセス)がデータベースファイルの名前を変更しても、関連するジャーナルの名前を変更できない場合があります。</target>
        </trans-unit>
        <trans-unit id="4532d3d7be4feca574a6f6430b43e863945ec230" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;b&gt;sqlite_exec()&lt;/b&gt; would return SQLITE_PROTOCOL when it should have returned SQLITE_BUSY.</source>
          <target state="translated">場合によっては、&lt;b&gt;sqlite_exec（）&lt;/b&gt;がSQLITE_BUSYを返すべきであるときにSQLITE_PROTOCOLを返すことがありました。</target>
        </trans-unit>
        <trans-unit id="dc0c06ae51aa05a33354304329c9c25f09e5959c" translate="yes" xml:space="preserve">
          <source>Sometimes SQLite uses compile-time evaluatable assert() statements. Consider the code at &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&lt;/a&gt;. Four assert() statements verify the values for compile-time constants so that the reader can quickly check the validity of the if-statement that follows, without having to look up the constant values in a separate header file.</source>
          <target state="translated">SQLiteは、コンパイル時に評価可能なassert（）ステートメントを使用する場合があります。&lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&lt;/a&gt;のコードを検討してください。4つのassert（）ステートメントはコンパイル時の定数の値を検証するため、別のヘッダーファイルで定数値を調べる必要なく、後続のifステートメントの有効性をすばやく確認できます。</target>
        </trans-unit>
        <trans-unit id="e72dc8159e740969eabd99a1be0aa498a87e7c0f" translate="yes" xml:space="preserve">
          <source>Sometimes a LEFT JOIN can be completely omitted from a query without changing the result. This can happen if all of the following are true:</source>
          <target state="translated">LEFT JOINが結果を変更することなく、クエリから完全に省略されることがあります。これは、以下のすべてが真である場合に起こりえます。</target>
        </trans-unit>
        <trans-unit id="3f8fa5c7b1abe4111bb41632dd1fff37e6c00e99" translate="yes" xml:space="preserve">
          <source>Sometimes a LEFT JOIN can be converted into an ordinary JOIN, if there are terms in the WHERE clause that guarantee that the two joins will give identical results. In particular, if any column in the right-hand table of the LEFT JOIN must be non-NULL in order for the WHERE clause to be true, then the LEFT JOIN is demoted to an ordinary JOIN.</source>
          <target state="translated">WHERE句の中に、二つのJOINが同じ結果をもたらすことを保証する条件がある場合、LEFT JOINが通常のJOINに変換されることがあります。特に、WHERE句が真であるためにLEFT JOINの右手のテーブルの列がNULL以外でなければならない場合、LEFT JOINは通常のJOINに降格します。</target>
        </trans-unit>
        <trans-unit id="f090235439a288798f47de0b5a65b1ea028dc3f6" translate="yes" xml:space="preserve">
          <source>Sometimes a power failure will cause a filesystem to be corrupted such that recently changed filenames are forgotten and the file is moved into a &quot;/lost+found&quot; directory. When that happens, the hot journal will not be found and recovery will not occur. SQLite tries to prevent this by opening and syncing the directory containing the rollback journal at the same time it syncs the journal file itself. However, the movement of files into /lost+found can be caused by unrelated processes creating unrelated files in the same directory as the main database file. And since this is out from under the control of SQLite, there is nothing that SQLite can do to prevent it. If you are running on a system that is vulnerable to this kind of filesystem namespace corruption (most modern journalling filesystems are immune, we believe) then you might want to consider putting each SQLite database file in its own private subdirectory.</source>
          <target state="translated">停電により、最近変更されたファイル名が忘れ去られ、ファイルが「/lost+found」ディレクトリに移動するようなファイルシステムの破損が発生することがあります。そのような場合、ホットジャーナルが見つからず、リカバリが発生しません。SQLiteは、ジャーナルファイル自体を同期すると同時に、ロールバックジャーナルを含むディレクトリを開いて同期することで、これを防ごうとします。しかし、/lost+foundへのファイルの移動は、メインのデータベースファイルと同じディレクトリに無関係なプロセスが無関係なファイルを作成することで発生する可能性があります。そして、これはSQLiteの制御下から外に出ているため、SQLiteがこれを防ぐためにできることは何もありません。もしあなたがこの種のファイルシステムの名前空間の破損に対して脆弱なシステム上で実行しているのであれば (最新のジャーナルファイルシステムのほとんどは免疫があると私たちは信じています)、それぞれの SQLite データベースファイルをそれぞれのプライベートサブディレクトリに置くことを検討してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="3f9f858786d7c98364aee861ef2804edc03f7313" translate="yes" xml:space="preserve">
          <source>Sometimes applications encounter this error even though there is an abundance of primary disk space because the error occurs when writing into &lt;a href=&quot;tempfiles&quot;&gt;temporary disk files&lt;/a&gt; on a system where temporary files are stored on a separate partition with much less space that the primary disk.</source>
          <target state="translated">一時ファイルがプライマリディスクよりもはるかに少ないスペースの別のパーティションに格納されているシステムで一時&lt;a href=&quot;tempfiles&quot;&gt;ディスクファイル&lt;/a&gt;に書き込むときにエラーが発生するため、プライマリディスクスペースが豊富であっても、アプリケーションでこのエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="fff8b7e3376a922064133232ffd6552acd46f238" translate="yes" xml:space="preserve">
          <source>Sometimes compile-time assert() statements are used to verify that SQLite has been correctly compiled. For example, the code at &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&lt;/a&gt; verifies that the SQLITE_PTRSIZE preprocessor macro is set correctly for the target architecture.</source>
          <target state="translated">SQLiteが正しくコンパイルされたことを確認するために、コンパイル時のassert（）ステートメントが使用されることがあります。たとえば、&lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&quot;&gt;https：&lt;/a&gt; //sqlite.org/src/artifact/c1e97e4c6f？ln = 157 のコードは、SQLITE_PTRSIZEプリプロセッサマクロがターゲットアーキテクチャに対して正しく設定されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="d7e0873ee1e2576915056da7a06e2b494b2dd17f" translate="yes" xml:space="preserve">
          <source>Sometimes only part of an ORDER BY clause can be satisfied using indexes. Consider, for example, the following query:</source>
          <target state="translated">インデックスを使用して、ORDER BY句の一部だけを満たすことができることがあります。例えば、次のようなクエリを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="08e9765fc44bda2fdb0012e4541cc28a30458938" translate="yes" xml:space="preserve">
          <source>Sometimes operating systems will exhibit non-standard behavior which can lead to problems. Sometimes this non-standard behavior is deliberate, and sometimes it is a mistake in the implementation. But in any event, if the operating performs differently from they way SQLite expects it to perform, the possibility of database corruption exists.</source>
          <target state="translated">オペレーティングシステムは、問題を引き起こす可能性のある非標準的な動作を示すことがあります。この非標準的な動作は意図的なものであることもあれば、実装上のミスであることもあります。しかし、どのような場合でも、動作がSQLiteが期待する動作と異なる場合、データベースが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="60f1e4ae24175645a79034bd7c885a1e7d0f09d3" translate="yes" xml:space="preserve">
          <source>Sometimes the use of row values just makes the SQL easier to read and write. Consider the following two UPDATE statements:</source>
          <target state="translated">行の値を使用することで、SQLの読み書きが簡単になることがあります。次の2つのUPDATE文を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="24e2bab9e04a22b3a6d58f84b00743d3fb69e859" translate="yes" xml:space="preserve">
          <source>Sometimes when this error code is encountered, the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; routine will convert the error into &lt;a href=&quot;rescode#error_retry&quot;&gt;SQLITE_ERROR_RETRY&lt;/a&gt; and try again to prepare the SQL statement using a different query plan that does not require the use of the unknown collating sequence.</source>
          <target state="translated">このエラーコードが発生すると、&lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2（）&lt;/a&gt;ルーチンがエラーを&lt;a href=&quot;rescode#error_retry&quot;&gt;SQLITE_ERROR_RETRYに&lt;/a&gt;変換し、不明な照合シーケンスを使用する必要のない別のクエリプランを使用してSQLステートメントの準備を再試行します。</target>
        </trans-unit>
        <trans-unit id="adc4e96a478be02a8147b100bd68113f38b89f80" translate="yes" xml:space="preserve">
          <source>Sort</source>
          <target state="translated">Sort</target>
        </trans-unit>
        <trans-unit id="5601af90fba7fe38466b58c08c018711849b8855" translate="yes" xml:space="preserve">
          <source>Sort order</source>
          <target state="translated">ソート順</target>
        </trans-unit>
        <trans-unit id="74ab25d1e3d8ae1cb528685baf2d71b92460809e" translate="yes" xml:space="preserve">
          <source>SorterCompare</source>
          <target state="translated">SorterCompare</target>
        </trans-unit>
        <trans-unit id="e274ec5d63c6eab4a322b40fa92da953e269dcf5" translate="yes" xml:space="preserve">
          <source>SorterData</source>
          <target state="translated">SorterData</target>
        </trans-unit>
        <trans-unit id="84dc5b8de2832faa332b637acd50721fb4db3efe" translate="yes" xml:space="preserve">
          <source>SorterInsert</source>
          <target state="translated">SorterInsert</target>
        </trans-unit>
        <trans-unit id="2737748d72de05dcf6eba2817820522a4badd0ec" translate="yes" xml:space="preserve">
          <source>SorterNext</source>
          <target state="translated">SorterNext</target>
        </trans-unit>
        <trans-unit id="efe2a2f235ed328025a0db49a289c00d154bb3ba" translate="yes" xml:space="preserve">
          <source>SorterOpen</source>
          <target state="translated">SorterOpen</target>
        </trans-unit>
        <trans-unit id="58a2d7ee050bba205b0d21e366ed8ecfcceedf59" translate="yes" xml:space="preserve">
          <source>SorterSort</source>
          <target state="translated">SorterSort</target>
        </trans-unit>
        <trans-unit id="7dadfa55de2cffb43bdf1a8f139a4a743a9af71b" translate="yes" xml:space="preserve">
          <source>Sorting is accomplished by writing records into a sorting index, then rewinding that index and playing it back from beginning to end. We use the &lt;a href=&quot;opcode#Sort&quot;&gt;Sort&lt;/a&gt; opcode instead of &lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind&lt;/a&gt; to do the rewinding so that the global variable will be incremented and regression tests can determine whether or not the optimizer is correctly optimizing out sorts.</source>
          <target state="translated">ソートは、レコードをソートインデックスに書き込み、そのインデックスを巻き戻し、最初から最後まで再生することによって行われます。&lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind&lt;/a&gt;ではなく&lt;a href=&quot;opcode#Sort&quot;&gt;Sort&lt;/a&gt;オペコードを使用して巻き戻しを行うため、グローバル変数がインクリメントされ、オプティマイザがソートを正しく最適化しているかどうかを回帰テストで判別できます。</target>
        </trans-unit>
        <trans-unit id="94c08b606385251adc6f9a4723f760124243a4d3" translate="yes" xml:space="preserve">
          <source>Sorting subsets of the result</source>
          <target state="translated">結果のサブセットのソート</target>
        </trans-unit>
        <trans-unit id="516e89309d994acf5d94c4a4907b3ff4a8e53a80" translate="yes" xml:space="preserve">
          <source>Source Of Data In A Query Result</source>
          <target state="translated">クエリ結果のデータソース</target>
        </trans-unit>
        <trans-unit id="cfbc658da4e64bd6eef7ec70eab5adab3d14a41a" translate="yes" xml:space="preserve">
          <source>Source code for several useful extensions can be found in the &lt;a href=&quot;http://www.sqlite.org/src/tree?name=ext/misc&amp;amp;ci=trunk&quot;&gt;ext/misc&lt;/a&gt; subdirectory of the SQLite source tree. You can use these extensions as-is, or as a basis for creating your own custom extensions to address your own particular needs.</source>
          <target state="translated">いくつかの便利な拡張機能のソースコードは、SQLiteソースツリーの&lt;a href=&quot;http://www.sqlite.org/src/tree?name=ext/misc&amp;amp;ci=trunk&quot;&gt;ext / misc&lt;/a&gt;サブディレクトリにあります。これらの拡張機能をそのまま使用することも、独自のカスタム拡張機能を作成して特定のニーズに対応するための基礎として使用することもできます。</target>
        </trans-unit>
        <trans-unit id="64243b8fe27d8786b74ebe9ad360b0c831315629" translate="yes" xml:space="preserve">
          <source>Sources are in the &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;public domain&lt;/a&gt;. Use for any purpose.</source>
          <target state="translated">ソースは&lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;パブリックドメインにあります&lt;/a&gt;。どんな目的にも使用できます。</target>
        </trans-unit>
        <trans-unit id="bdb7e396773f80244c6756a8ac8a3ba107260e6f" translate="yes" xml:space="preserve">
          <source>Spatial indices using &lt;a href=&quot;rtree&quot;&gt;R-Trees&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rtree&quot;&gt;Rツリー&lt;/a&gt;を使用した空間インデックス</target>
        </trans-unit>
        <trans-unit id="7f329318e826b6123bdadb48df921310c8b500b7" translate="yes" xml:space="preserve">
          <source>Speak no useless words or words that move to laughter.</source>
          <target state="translated">笑いに移るような無駄な言葉や言葉を口にしないこと。</target>
        </trans-unit>
        <trans-unit id="9cda32c171792b8ebd4697561ad451beebb8dd76" translate="yes" xml:space="preserve">
          <source>Special INSERT operates can be used to issue commands to FTS3 and FTS4 tables. Every FTS3 and FTS4 has a hidden, read-only column which is the same name as the table itself. INSERTs into this hidden column are interpreted as commands to the FTS3/4 table. For a table with the name &quot;xyz&quot; the following commands are supported:</source>
          <target state="translated">特別なINSERT操作を使用して、FTS3およびFTS4テーブルにコマンドを発行することができます。すべてのFTS3およびFTS4には、テーブル自体と同じ名前の、隠された読み取り専用の列があります。この隠された列へのINSERTは、FTS3/4テーブルへのコマンドとして解釈されます。名前が &quot;xyz&quot; のテーブルでは、以下のコマンドがサポートされています。</target>
        </trans-unit>
        <trans-unit id="5c62a06b3206449dc4ac80333e6db0c204db7ba5" translate="yes" xml:space="preserve">
          <source>Special processing occurs when the aggregate function is either &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min()&lt;/a&gt; or &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max()&lt;/a&gt;. Example:</source>
          <target state="translated">集計関数が&lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min（）&lt;/a&gt;または&lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max（）の&lt;/a&gt;場合、特別な処理が発生します。例：</target>
        </trans-unit>
        <trans-unit id="6937900c4a39aa0fb125a152dfd5d62be4f8822d" translate="yes" xml:space="preserve">
          <source>Special sqlite_stat1 Handling</source>
          <target state="translated">sqlite_stat1の特殊な処理</target>
        </trans-unit>
        <trans-unit id="1e4c6816e6235fac1910f655a4449098f3bab054" translate="yes" xml:space="preserve">
          <source>Special versions of the SQLite amalgamation that do work with a predetermined set of SQLITE_OMIT_* options can be generated. To do so, make a copy of the Makefile.linux-gcc makefile template in the canonical source code distribution. Change the name of your copy to simply &quot;Makefile&quot;. Then edit &quot;Makefile&quot; to set up appropriate compile-time options. Then type:</source>
          <target state="translated">SQLITE_OMIT_*オプションのセットで動作する SQLite アマルガムの特別バージョンを生成することができます。そのためには、正規のソースコード配布物にある Makefile.linux-gcc makefile テンプレートのコピーを作成してください。コピーの名前を単に &quot;Makefile&quot; に変更してください。それから &quot;Makefile&quot; を編集して、適切なコンパイル時オプションを設定してください。それから次のようにタイプしてください。</target>
        </trans-unit>
        <trans-unit id="348842ed415067bf469c3c07cbca8231199b183f" translate="yes" xml:space="preserve">
          <source>Specialized applications for which the default implementation of shared memory is unacceptable can devise alternative methods via a custom &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;. For example, if it is known that a particular database will only be accessed by threads within a single process, the wal-index can be implemented using heap memory instead of true shared memory.</source>
          <target state="translated">共有メモリのデフォルト実装が受け入れられない特殊なアプリケーションは、カスタム&lt;a href=&quot;vfs&quot;&gt;VFSを&lt;/a&gt;介して代替方法を考案できます。たとえば、特定のデータベースが単一のプロセス内のスレッドによってのみアクセスされることがわかっている場合、wal-indexは、実際の共有メモリではなくヒープメモリを使用して実装できます。</target>
        </trans-unit>
        <trans-unit id="a647b0621c3756491eb85db442ab54ae4811cd09" translate="yes" xml:space="preserve">
          <source>Specific pragma statements may be removed and others added in future releases of SQLite. There is no guarantee of backwards compatibility.</source>
          <target state="translated">特定のpragma文はSQLiteの将来のリリースで削除されたり、他の文が追加されたりするかもしれません。後方互換性を保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="32a894085a5589da14805f40b5e5ec42d34bdb30" translate="yes" xml:space="preserve">
          <source>Specify an alternative malloc implementation using the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt; verb with the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt;オブジェクトで&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt;動詞を使用して、代替のmalloc実装を指定します。</target>
        </trans-unit>
        <trans-unit id="7969816e7b05b7f6c6da58d9c3d55a797859dc5f" translate="yes" xml:space="preserve">
          <source>Specify an alternative mutex implementation using the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmutex&quot;&gt;SQLITE_CONFIG_MUTEX&lt;/a&gt; verb with the &lt;a href=&quot;c3ref/mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmutex&quot;&gt;SQLITE_CONFIG_MUTEX&lt;/a&gt;動詞と&lt;a href=&quot;c3ref/mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/a&gt;オブジェクトを使用して、代替のmutex実装を指定します。</target>
        </trans-unit>
        <trans-unit id="e7d9e8c303af8fa2eba928e74e37e3e2d5b8ccc2" translate="yes" xml:space="preserve">
          <source>Specify an application-defined page cache.</source>
          <target state="translated">アプリケーション定義のページキャッシュを指定します。</target>
        </trans-unit>
        <trans-unit id="675036f344331d67d2ac3929e1284013b1817b31" translate="yes" xml:space="preserve">
          <source>Specifying a new page size does not change the page size immediately. Instead, the new page size is remembered and is used to set the page size when the database is first created, if it does not already exist when the page_size pragma is issued, or at the next &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command that is run on the same database connection while not in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;.</source>
          <target state="translated">新しいページサイズを指定しても、ページサイズはすぐには変更されません。代わりに、新しいページサイズが記憶され、データベースが最初に作成されたときにページサイズを設定するために使用されます（page_sizeプラグマが発行されたとき、または同じデータベース接続で実行される次の&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;コマンドでまだ存在しない場合）。&lt;a href=&quot;wal&quot;&gt;WALモードで&lt;/a&gt;ないとき。</target>
        </trans-unit>
        <trans-unit id="dfdc7dcd44b7642ef54261a530f0a8d271e92800" translate="yes" xml:space="preserve">
          <source>Specifying an explicit value for the rowid field as part of an INSERT statement is not supported. Any value supplied is ignored.</source>
          <target state="translated">INSERT 文の一部として rowid フィールドに明示的な値を指定することはサポートされていません。指定された値は無視されます。</target>
        </trans-unit>
        <trans-unit id="ff83e10cd15a3b1a3684d12025d600161e1e03fe" translate="yes" xml:space="preserve">
          <source>Specifying an unknown parameter in the query component of a URI is not an error. Future versions of SQLite might understand additional query parameters. See &quot;&lt;a href=&quot;../uri#coreqp&quot;&gt;query parameters with special meaning to SQLite&lt;/a&gt;&quot; for additional information.</source>
          <target state="translated">URIのクエリコンポーネントで不明なパラメーターを指定してもエラーにはなりません。SQLiteの将来のバージョンでは、追加のクエリパラメータが認識される可能性があります。詳細については、「&lt;a href=&quot;../uri#coreqp&quot;&gt;SQLite&lt;/a&gt;にとって特別な意味を持つクエリパラメータ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ca08c5f93bc177c41e9e1cbac8bb1b05f691f402" translate="yes" xml:space="preserve">
          <source>Specifying an unknown parameter in the query component of a URI is not an error. Future versions of SQLite might understand additional query parameters. See &quot;&lt;a href=&quot;uri#coreqp&quot;&gt;query parameters with special meaning to SQLite&lt;/a&gt;&quot; for additional information.</source>
          <target state="translated">URIのクエリコンポーネントで不明なパラメーターを指定してもエラーにはなりません。SQLiteの将来のバージョンでは、追加のクエリパラメータが認識される可能性があります。詳細については、「&lt;a href=&quot;uri#coreqp&quot;&gt;SQLite&lt;/a&gt;にとって特別な意味を持つクエリパラメータ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5466deac546a32beeffc729c74a6e5fd300f895" translate="yes" xml:space="preserve">
          <source>Specifying three arguments when creating an fts5vocab table in any database other than &quot;temp&quot; results in an error.</source>
          <target state="translated">temp &quot;以外のデータベースにfts5vocabテーブルを作成する際に3つの引数を指定するとエラーになります。</target>
        </trans-unit>
        <trans-unit id="076b62c1c3d09beab9691ee6f442faa2e62ef7a7" translate="yes" xml:space="preserve">
          <source>Speed improvements</source>
          <target state="translated">スピードの向上</target>
        </trans-unit>
        <trans-unit id="65d5a13bd4511e6816f18d10b6fcf53288c30d62" translate="yes" xml:space="preserve">
          <source>Speed improvements and library footprint reductions.</source>
          <target state="translated">スピード向上と図書館のフットプリント削減</target>
        </trans-unit>
        <trans-unit id="886fdbf5bb356c1170f6be819f95ecf4cc1461e3" translate="yes" xml:space="preserve">
          <source>Speed improvements in the VDBE.</source>
          <target state="translated">VDBEの速度向上。</target>
        </trans-unit>
        <trans-unit id="67d42db811b80e228f8d1a0a01dc2cacac3b1009" translate="yes" xml:space="preserve">
          <source>Speed improvements in the btree and pager layers.</source>
          <target state="translated">btree およびページャーレイヤーの速度向上。</target>
        </trans-unit>
        <trans-unit id="0da1385bd95c04e2cef432911cc39014873cc087" translate="yes" xml:space="preserve">
          <source>Speed improvements: Do not do synchronous updates on TEMP tables.</source>
          <target state="translated">速度の改善。TEMPテーブルの同期更新を行わないようにしました。</target>
        </trans-unit>
        <trans-unit id="77d342a78b198923e433b8a1315c81a6ffbf9833" translate="yes" xml:space="preserve">
          <source>Split amalgamation</source>
          <target state="translated">分割アマルガム</target>
        </trans-unit>
        <trans-unit id="1dac9d1634f1fa754c9cb08212550ad68bf6b1f7" translate="yes" xml:space="preserve">
          <source>Split the pager subsystem into separate pager and pcache subsystems.</source>
          <target state="translated">ページャーサブシステムをページャーサブシステムとpcacheサブシステムに分割します。</target>
        </trans-unit>
        <trans-unit id="1bb46447f9362d79f903651b48710b55ec51dd8a" translate="yes" xml:space="preserve">
          <source>Splitting content into smaller pieces also helps File/Save operations to go faster. Instead of having to write back the content of all pages when doing a File/Save, the application only has to write back those pages that have actually changed.</source>
          <target state="translated">コンテンツをより小さな断片に分割することは、ファイル/保存操作の高速化にも役立ちます。ファイル/保存を行う際に、すべてのページの内容を書き戻す必要がない代わりに、アプリケーションは実際に変更されたページのみを書き戻す必要があります。</target>
        </trans-unit>
        <trans-unit id="f0b1c55ba41f5df4c296b1603dd8662a874ad05f" translate="yes" xml:space="preserve">
          <source>SqlExec</source>
          <target state="translated">SqlExec</target>
        </trans-unit>
        <trans-unit id="21ba7365f757b4f24cbf08b5870a91de5cd965d8" translate="yes" xml:space="preserve">
          <source>Sqldiff --rbu</source>
          <target state="translated">Sqldiff --rbu</target>
        </trans-unit>
        <trans-unit id="785ca9526809c90e3417966be7d5844fd2a0c5c8" translate="yes" xml:space="preserve">
          <source>Stability</source>
          <target state="translated">Stability</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="ed9cb8071fd38e38b556df67e342f21ef7bd62db" translate="yes" xml:space="preserve">
          <source>Stable interfaces will be maintained indefinitely in a backwards compatible way. An application that uses only stable interfaces should always be able to relink against a newer version of SQLite without any changes.</source>
          <target state="translated">安定したインターフェイスは、後方互換性のある方法で無期限に維持されます。安定したインターフェイスのみを使用しているアプリケーションは、常に新しいバージョンの SQLite に変更を加えることなく再リンクできるようになっていなければなりません。</target>
        </trans-unit>
        <trans-unit id="9d69ca23f60003536eb90ef7c1a45510967cd2a5" translate="yes" xml:space="preserve">
          <source>Stale file descriptor</source>
          <target state="translated">古いファイル記述子</target>
        </trans-unit>
        <trans-unit id="aaf4ee63c814f2ac7a90ca00e168f99ba47070e5" translate="yes" xml:space="preserve">
          <source>Standard File Control Opcodes</source>
          <target state="translated">標準ファイル制御オペコード</target>
        </trans-unit>
        <trans-unit id="0271f691eaa2014cfdc1f8a7ed1187c67c1f03ee" translate="yes" xml:space="preserve">
          <source>Standard Query Syntax Precedence</source>
          <target state="translated">標準クエリ構文の優先順位</target>
        </trans-unit>
        <trans-unit id="62af2c2f7d7a242deb88ffff88441215850f0cf0" translate="yes" xml:space="preserve">
          <source>Standard builds include the default &quot;unix&quot; or &quot;win32&quot; VFSes. But if you use the -DOS_OTHER=1 compile-time option, then SQLite is built without a default VFS. In that case, the application must register at least one VFS prior to calling &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt;. This is the approach that embedded applications should use. Rather than modifying the SQLite source to insert an alternative OS layer as was done in prior releases of SQLite, instead compile an unmodified SQLite source file (preferably the amalgamation) with the -DOS_OTHER=1 option, then invoke &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt; to define the interface to the underlying filesystem prior to creating any database connections.</source>
          <target state="translated">標準ビルドには、デフォルトの「unix」または「win32」VFSが含まれています。ただし、-DOS_OTHER = 1コンパイル時オプションを使用すると、SQLiteはデフォルトのVFSなしでビルドされます。その場合、アプリケーションは&lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open（）&lt;/a&gt;を呼び出す前に少なくとも1つのVFSを登録する必要があります。これは、組み込みアプリケーションが使用するアプローチです。以前のリリースのSQLiteで行われたようにSQLiteソースを変更して代替OSレイヤーを挿入するのではなく、変更されていないSQLiteソースファイル（できれば融合）を-DOS_OTHER = 1オプションでコンパイルしてから、&lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register（）&lt;/a&gt;を呼び出してインターフェースを定義します。データベース接続を作成する前に、基礎となるファイルシステムに。</target>
        </trans-unit>
        <trans-unit id="f4bb77fea34e91bf036ddd54845284d1cf9ef7e7" translate="yes" xml:space="preserve">
          <source>Standard builds of SQLite for Unix or Windows come with a single VFS named &quot;unix&quot; or &quot;win32&quot;, as appropriate. This one VFS is also the default. So if you are using the legacy open functions, everything will continue to operate as it has before. The change is that an application now has the flexibility of adding new VFS modules to implement a customized OS layer. The &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt; API can be used to tell SQLite about one or more application-defined VFS modules:</source>
          <target state="translated">SQLite for UnixまたはWindowsの標準ビルドには、必要に応じて「unix」または「win32」という名前の単一のVFSが付属しています。この1つのVFSもデフォルトです。したがって、レガシーオープン関数を使用している場合、すべてが以前と同じように動作し続けます。変更点は、アプリケーションに新しいVFSモジュールを追加して、カスタマイズされたOSレイヤーを実装する柔軟性があることです。&lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register（）&lt;/a&gt; APIは、一つ以上のアプリケーションで定義されたVFSモジュールについてのSQLiteを伝えるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d9cadaed061bc7503c3155b4851296844f6b19b6" translate="yes" xml:space="preserve">
          <source>Start a read transaction on an historical snapshot</source>
          <target state="translated">履歴スナップショットの読み取りトランザクションを開始する</target>
        </trans-unit>
        <trans-unit id="789445bbe2e230b404b0877611cb047ff79a2a8a" translate="yes" xml:space="preserve">
          <source>Start a transaction.</source>
          <target state="translated">取引を開始します。</target>
        </trans-unit>
        <trans-unit id="5ad3ad0c5dcdfd16f6c5507085aa11afef993658" translate="yes" xml:space="preserve">
          <source>Start the &lt;b&gt;sqlite3&lt;/b&gt; program by typing &quot;sqlite3&quot; at the command prompt, optionally followed by the name the file that holds the SQLite database (or &lt;a href=&quot;#zipdb&quot;&gt;ZIP archive&lt;/a&gt;). If the named file does not exist, a new database file with the given name will be created automatically. If no database file is specified on the command-line, a temporary database is created, then deleted when the &quot;sqlite3&quot; program exits.</source>
          <target state="translated">コマンドプロンプトで「sqlite3」と入力し、オプションでSQLiteデータベース（または&lt;a href=&quot;#zipdb&quot;&gt;ZIPアーカイブ&lt;/a&gt;）を保持するファイルの名前を入力して、&lt;b&gt;sqlite3&lt;/b&gt;プログラムを起動します。指定されたファイルが存在しない場合、指定された名前の新しいデータベースファイルが自動的に作成されます。コマンドラインでデータベースファイルが指定されていない場合、一時データベースが作成され、「sqlite3」プログラムが終了すると削除されます。</target>
        </trans-unit>
        <trans-unit id="b65d3b5410040822706753355b83a262ca2b3805" translate="yes" xml:space="preserve">
          <source>Start the &lt;b&gt;sqlite3&lt;/b&gt; program by typing &quot;sqlite3&quot; at the command prompt, optionally followed by the name the file that holds the SQLite database. If the named file does not exist, a new database file with the given name will be created automatically. If no database file is specified on the command-line, a temporary database is created, then deleted when the &quot;sqlite3&quot; program exits.</source>
          <target state="translated">コマンドプロンプトで「sqlite3」と入力し、オプションでSQLiteデータベースを保持するファイルの名前を入力して、&lt;b&gt;sqlite3&lt;/b&gt;プログラムを起動します。指定したファイルが存在しない場合は、指定した名前の新しいデータベースファイルが自動的に作成されます。コマンドラインでデータベースファイルが指定されていない場合、一時データベースが作成され、「sqlite3」プログラムの終了時に削除されます。</target>
        </trans-unit>
        <trans-unit id="9eb60319509fec567263f40a7e8bf18c02dfd219" translate="yes" xml:space="preserve">
          <source>Starting with &lt;a href=&quot;https://sqlite.org/releaselog/3_3_0.html&quot;&gt;version 3.3.0&lt;/a&gt; (2006-01-11), SQLite includes a special &quot;shared-cache&quot; mode (disabled by default) intended for use in embedded servers. If shared-cache mode is enabled and a thread establishes multiple connections to the same database, the connections share a single data and schema cache. This can significantly reduce the quantity of memory and IO required by the system.</source>
          <target state="translated">以降では&lt;a href=&quot;https://sqlite.org/releaselog/3_3_0.html&quot;&gt;、バージョン3.3.0&lt;/a&gt;（2006-01-11）、SQLiteは（デフォルトでは無効）特殊な「共有キャッシュ」モードが埋め込まれたサーバでの使用を意図しています。共有キャッシュモードが有効で、スレッドが同じデータベースへの複数の接続を確立する場合、接続は単一のデータおよびスキーマキャッシュを共有します。これにより、システムに必要なメモリとIOの量を大幅に削減できます。</target>
        </trans-unit>
        <trans-unit id="023a31bfb8ddab03b504852064e49a20e7d9d830" translate="yes" xml:space="preserve">
          <source>Startup time is reduced by allowing the application to read in only the content shown for the initial screen. This largely eliminates the need to show a progress bar when opening a new document. The document just pops up immediately, further enhancing the user experience.</source>
          <target state="translated">最初の画面に表示されている内容だけをアプリケーションに読み込ませることで、起動時間が短縮されます。これにより、新しい文書を開くときにプログレスバーを表示する必要が大幅になくなりました。ドキュメントはすぐにポップアップ表示されるので、ユーザーエクスペリエンスがさらに向上します。</target>
        </trans-unit>
        <trans-unit id="ec7c6f024748b0b4ca685edf7c9c36a22ff2bd48" translate="yes" xml:space="preserve">
          <source>Statement Rollback</source>
          <target state="translated">ステートメントロールバック</target>
        </trans-unit>
        <trans-unit id="b1c7b81be5c9efcc042ff8389d0cd187913125cb" translate="yes" xml:space="preserve">
          <source>Statement Transactions</source>
          <target state="translated">ステートメント取引</target>
        </trans-unit>
        <trans-unit id="a90f613a0e148cacdfc6a3c9d8b61b95e2acb93e" translate="yes" xml:space="preserve">
          <source>Statement journal</source>
          <target state="translated">ステートメントジャーナル</target>
        </trans-unit>
        <trans-unit id="eb1040e934c3b0c196798a9d1961f27355d86e45" translate="yes" xml:space="preserve">
          <source>Statement journals</source>
          <target state="translated">ステートメントジャーナル</target>
        </trans-unit>
        <trans-unit id="ff8ba443e0e2998259e771cf2ecb0604dd034de1" translate="yes" xml:space="preserve">
          <source>Static analysis has not been helpful in finding bugs in SQLite. Static analysis has found a few bugs in SQLite, but those are the exceptions. More bugs have been introduced into SQLite while trying to get it to compile without warnings than have been found by static analysis.</source>
          <target state="translated">静的解析はSQLiteのバグを見つけるのに役立っていません。静的解析はSQLiteのバグをいくつか発見しましたが、それは例外です。SQLite を警告なしでコンパイルできるようにしようとしている間に、静的解析で見つかったバグよりも多くのバグが SQLite に導入されています。</target>
        </trans-unit>
        <trans-unit id="680999abb1389f8c322acbd6c1aa5dbe84be6521" translate="yes" xml:space="preserve">
          <source>Static analysis means analyzing source code at compile-time to check for correctness. Static analysis includes compiler warning messages and more in-depth analysis engines such as the &lt;a href=&quot;http://clang-analyzer.llvm.org/&quot;&gt;Clang Static Analyzer&lt;/a&gt;. SQLite compiles without warnings on GCC and Clang using the -Wall and -Wextra flags on Linux and Mac and on MSVC on Windows. No valid warnings are generated by the Clang Static Analyzer tool &quot;scan-build&quot; either (though recent versions of clang seem to generate many false-positives.) Nevertheless, some warnings might be generated by other static analyzers. Users are encouraged not to stress over these warnings and to instead take solace in the intense testing of SQLite described above.</source>
          <target state="translated">静的分析とは、コンパイル時にソースコードを分析して、正当性をチェックすることを意味します。静的分析には、コンパイラ警告メッセージと、&lt;a href=&quot;http://clang-analyzer.llvm.org/&quot;&gt;Clang Static Analyzer&lt;/a&gt;などの詳細分析エンジンが含まれます。 SQLiteは、LinuxとMac、およびWindowsのMSVCで-Wallフラグと-Wextraフラグを使用して、GCCとClangで警告なしにコンパイルされます。 Clang Static Analyzerツールの &quot;scan-build&quot;でも有効な警告は生成されません（最近のバージョンのclangは多くの誤検知を生成しているようですが）。ユーザーはこれらの警告を強調しないで、代わりに上記のSQLiteの集中的なテストに安心してください。</target>
        </trans-unit>
        <trans-unit id="5e49731cc0b88e4893c23ef28a83ddda3bfb212a" translate="yes" xml:space="preserve">
          <source>Statistics gathered by ANALYZE are not automatically updated as the content of the database changes. If the content of the database changes significantly, or if the database schema changes, then one should consider rerunning the ANALYZE command in order to update the statistics.</source>
          <target state="translated">ANALYZEによって収集された統計は、データベースの内容が変更されても自動的に更新されません。データベースの内容が大幅に変更されたり、データベースのスキーマが変更されたりした場合は、統計情報を更新するためにANALYZEコマンドを再実行することを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="06d77b9bb2436857be2774ccf495a6735714ef3f" translate="yes" xml:space="preserve">
          <source>Statistics might not be available for all loops in all statements. In cases where there exist loops with no available statistics, this function behaves as if the loop did not exist - it returns non-zero and leave the variable that pOut points to unchanged.</source>
          <target state="translated">すべてのステートメントのすべてのループで統計情報が利用できない場合があります。統計情報が利用できないループが存在する場合、この関数はループが存在しなかったかのように振る舞います。</target>
        </trans-unit>
        <trans-unit id="bc97dbd639562aa95bfaa677d2f8dc3487a559db" translate="yes" xml:space="preserve">
          <source>Stats pragma</source>
          <target state="translated">統計プラグマ</target>
        </trans-unit>
        <trans-unit id="df542e628beff2a0b73ed1e479f1091511d9cd6a" translate="yes" xml:space="preserve">
          <source>Status Of A Dynamic String</source>
          <target state="translated">動的文字列の状態</target>
        </trans-unit>
        <trans-unit id="6872312ea81433049bd70deac565b5d633fd6998" translate="yes" xml:space="preserve">
          <source>Status Parameters</source>
          <target state="translated">ステータスパラメータ</target>
        </trans-unit>
        <trans-unit id="2adc22e7dbafa333d0e47ced61c20bab368c7387" translate="yes" xml:space="preserve">
          <source>Status Parameters for database connections</source>
          <target state="translated">データベース接続のステータスパラメータ</target>
        </trans-unit>
        <trans-unit id="8499ef2845b7984472eeaa5eec92eef3c3ddc5e1" translate="yes" xml:space="preserve">
          <source>Status Parameters for prepared statements</source>
          <target state="translated">準備されたステートメントのステータスパラメータ</target>
        </trans-unit>
        <trans-unit id="f04daddc4070fdc058ac9e443c8962cff2f5d578" translate="yes" xml:space="preserve">
          <source>Sticky &lt;a href=&quot;rescode#full&quot;&gt;SQLITE_FULL&lt;/a&gt; or &lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt; errors in the pager are reset when a new transaction is started.</source>
          <target state="translated">新しいトランザクションが開始されると、ポケットベルのスティッキー&lt;a href=&quot;rescode#full&quot;&gt;SQLITE_FULL&lt;/a&gt;または&lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt;エラーがリセットされます。</target>
        </trans-unit>
        <trans-unit id="dd4fde80455d82361972cd992928272cdd38d544" translate="yes" xml:space="preserve">
          <source>Storage class</source>
          <target state="translated">ストレージクラス</target>
        </trans-unit>
        <trans-unit id="0adf951cb70d6bfcdd293ee933bb14acec2e8923" translate="yes" xml:space="preserve">
          <source>Storage space for &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;オブジェクトのストレージスペース。</target>
        </trans-unit>
        <trans-unit id="fbf3f676fb55796ce1a966642440eafe303dfddd" translate="yes" xml:space="preserve">
          <source>Storage used for</source>
          <target state="translated">使用しているストレージ</target>
        </trans-unit>
        <trans-unit id="7a5447c3e2de40c5c68aa31375241b98a076167c" translate="yes" xml:space="preserve">
          <source>Store an &lt;a href=&quot;undoredo&quot;&gt;automated undo/redo stack&lt;/a&gt; in a database table so that Undo could go back into prior edit sessions.</source>
          <target state="translated">保管&lt;a href=&quot;undoredo&quot;&gt;アンドゥ/リドゥスタック自動化された&lt;/a&gt;データベーステーブル内の[元に戻すには前編集セッションに戻って行くことができるようにということ。</target>
        </trans-unit>
        <trans-unit id="a49a369d4dc034b2ddab0ef35e3bc0a19be08a8f" translate="yes" xml:space="preserve">
          <source>Store in register P2 an integer which is the key of the table entry that P1 is currently point to.</source>
          <target state="translated">レジスタP2に、P1が現在ポイントしているテーブルエントリのキーである整数を格納します。</target>
        </trans-unit>
        <trans-unit id="867b15696e9fa5010d6dcd54eb51b1ee5a1a7a9e" translate="yes" xml:space="preserve">
          <source>Store in register P3 the value of the P2-th column of the current row of the virtual-table of cursor P1.</source>
          <target state="translated">カーソルP1の仮想テーブルの現在の行のP2列目の値をレジスタP3に格納する。</target>
        </trans-unit>
        <trans-unit id="c36766981b9139e0da225001d40b99095efc88b9" translate="yes" xml:space="preserve">
          <source>Store in register r[P3] the byte offset into the database file that is the start of the payload for the record at which that cursor P1 is currently pointing.</source>
          <target state="translated">レジスタr[P3]に、カーソルP1が現在指しているレコードのペイロードの開始バイトオフセットをデータベースファイルに格納する。</target>
        </trans-unit>
        <trans-unit id="30c620766d52d9f14ee6085868bffd5fb7f16c25" translate="yes" xml:space="preserve">
          <source>Store new polygons in the table using ordinary INSERT statements:</source>
          <target state="translated">通常のINSERT文を使用してテーブルに新しいポリゴンを格納します。</target>
        </trans-unit>
        <trans-unit id="e312586c7080f660b8a13dd56528c07ac821e623" translate="yes" xml:space="preserve">
          <source>Store the maximum page count after the change in register P2.</source>
          <target state="translated">レジスタP2の変更後の最大ページ数を格納します。</target>
        </trans-unit>
        <trans-unit id="4a03a2e19022832dfb9661ede226d69d6b142a41" translate="yes" xml:space="preserve">
          <source>Store the number of entries (an integer value) in the table or index opened by cursor P1 in register P2</source>
          <target state="translated">カーソルP1で開いたテーブルまたはインデックスのエントリ数(整数値)をレジスタP2に格納します。</target>
        </trans-unit>
        <trans-unit id="8f97ad7b80660d239651ee854a82a3871ca04288" translate="yes" xml:space="preserve">
          <source>Store the number of entries (an integer value) in the table or index opened by cursor P1 in register P2.</source>
          <target state="translated">カーソルP1が開いたテーブルまたはインデックスのエントリ数(整数値)をレジスタP2に格納する。</target>
        </trans-unit>
        <trans-unit id="640b00f8e936acd9d22458864812f703b6f037f6" translate="yes" xml:space="preserve">
          <source>Store the statement journal in the temporary file directory instead of collocated with the database file.</source>
          <target state="translated">ステートメント・ジャーナルをデータベース・ファイルとコロケーションするのではなく、一時ファイル・ディレクトリに格納します。</target>
        </trans-unit>
        <trans-unit id="25a1d24f343a9c4193ce3147697d66befd80ac3b" translate="yes" xml:space="preserve">
          <source>Storing the schema a text also makes the &lt;a href=&quot;fileformat2&quot;&gt;SQLite database file format&lt;/a&gt; easier to define, document, and understand. This helps make SQLite database files a &lt;a href=&quot;locrsf&quot;&gt;recommended storage format&lt;/a&gt; for long-term archiving of data.</source>
          <target state="translated">スキーマをテキストで保存すると、&lt;a href=&quot;fileformat2&quot;&gt;SQLiteデータベースファイル形式の&lt;/a&gt;定義、文書化、理解が容易になります。これにより、SQLiteデータベースファイルをデータの長期アーカイブに&lt;a href=&quot;locrsf&quot;&gt;推奨されるストレージ形式&lt;/a&gt;にすることができます。</target>
        </trans-unit>
        <trans-unit id="6734d41851e3e8e6c6cbda317484954f124d2cf8" translate="yes" xml:space="preserve">
          <source>Storing the schema as text also makes the &lt;a href=&quot;fileformat2&quot;&gt;SQLite database file format&lt;/a&gt; easier to define, document, and understand. This helps make SQLite database files a &lt;a href=&quot;locrsf&quot;&gt;recommended storage format&lt;/a&gt; for long-term archiving of data.</source>
          <target state="translated">スキーマをテキストとして保存すると、&lt;a href=&quot;fileformat2&quot;&gt;SQLiteデータベースファイル形式の&lt;/a&gt;定義、文書化、および理解も容易になります。これは、SQLiteデータベースファイルをデータの長期アーカイブに&lt;a href=&quot;locrsf&quot;&gt;推奨されるストレージ形式&lt;/a&gt;にするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="9347ad87d0fbebdfc89e77280c0ab0e8462e84d1" translate="yes" xml:space="preserve">
          <source>Storing the schema as text rather than as parsed tables also give flexibility to the implementation. Since the internal parse of the schema is regenerated each time the database is opened, the internal representation of the schema can change from one release to the next. This is important, as sometimes new features require enhancements to the internal schema representation. Changing the internal schema representation would be much more difficult if the schema representation was exposed in the database file. So, in other words, storing the schema as text helps maintain backwards compatibility, and helps ensure that older database files can be read and written by newer versions of SQLite.</source>
          <target state="translated">スキーマを解析されたテーブルではなくテキストとして保存することで、実装に柔軟性を持たせることができます。スキーマの内部構文解析はデータベースを開くたびに再生成されるので、スキーマの内部表現はリリースごとに変わる可能性があります。これは重要なことで、新機能が内部スキーマ表現の強化を必要とすることがあるからです。スキーマ表現がデータベースファイル内で公開されている場合、内部スキーマ表現を変更することははるかに困難です。つまり、スキーマをテキストとして保存することで下位互換性を維持し、古いデータベースファイルを新しいバージョンの SQLite で読み書きできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="275b8884950b47fafacc5239216411e5afbdc454" translate="yes" xml:space="preserve">
          <source>Streaming Versions of API functions</source>
          <target state="translated">API機能のストリーミング版</target>
        </trans-unit>
        <trans-unit id="1cda8a5c429d321cd55319d79be9050795d95668" translate="yes" xml:space="preserve">
          <source>Streaming Versions of API functions.</source>
          <target state="translated">API関数のストリーミングバージョン。</target>
        </trans-unit>
        <trans-unit id="41b71513a74ee80684014356a0159868598a4ea7" translate="yes" xml:space="preserve">
          <source>Streaming function</source>
          <target state="translated">ストリーミング機能</target>
        </trans-unit>
        <trans-unit id="c76c18624ee750ab230cd2529398af4c90203056" translate="yes" xml:space="preserve">
          <source>Strengthen defenses against deliberately corrupted database files.</source>
          <target state="translated">意図的に破損したデータベースファイルに対する防御を強化します。</target>
        </trans-unit>
        <trans-unit id="70d422bf6680eb42d320cae6dd4ad922e3705a6b" translate="yes" xml:space="preserve">
          <source>Strictly speaking, the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object is not required since the convenience wrapper interfaces, &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec&lt;/a&gt; or &lt;a href=&quot;c3ref/free_table&quot;&gt;sqlite3_get_table&lt;/a&gt;, can be used and these convenience wrappers encapsulate and hide the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object. Nevertheless, an understanding of &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; is needed to make full use of SQLite.</source>
          <target state="translated">厳密に言うと、便利なラッパーインターフェイスである&lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec&lt;/a&gt;または&lt;a href=&quot;c3ref/free_table&quot;&gt;sqlite3_get_tableを&lt;/a&gt;使用でき、これらの便利なラッパーが&lt;a href=&quot;c3ref/stmt&quot;&gt;準備されたステートメント&lt;/a&gt;オブジェクトをカプセル化して非表示にするため、準備さ&lt;a href=&quot;c3ref/stmt&quot;&gt;れたステートメント&lt;/a&gt;オブジェクトは必要ありません。それでも、SQLiteを十分に活用するには、&lt;a href=&quot;c3ref/stmt&quot;&gt;準備済みステートメントを&lt;/a&gt;理解する必要があります。</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="f631842398197770725f42465ce9be3bb217fe7f" translate="yes" xml:space="preserve">
          <source>String Comparison</source>
          <target state="translated">文字列比較</target>
        </trans-unit>
        <trans-unit id="bca91d4c03b6524119c1475d05b8b5503e052ba2" translate="yes" xml:space="preserve">
          <source>String Globbing</source>
          <target state="translated">ストリンググロービング</target>
        </trans-unit>
        <trans-unit id="d8c2dabd43b3a0fa081659375ff18075de8cb9f3" translate="yes" xml:space="preserve">
          <source>String LIKE Matching</source>
          <target state="translated">文字列 LIKE マッチング</target>
        </trans-unit>
        <trans-unit id="dfab1bcbfa804d1a74a7282da9ab4ff5c5353c70" translate="yes" xml:space="preserve">
          <source>String8</source>
          <target state="translated">String8</target>
        </trans-unit>
        <trans-unit id="add2080ddbdcd32891495b46eb567565fc93baa2" translate="yes" xml:space="preserve">
          <source>Strings returned by sqlite3_column_text() and sqlite3_column_text16(), even empty strings, are always zero-terminated. The return value from sqlite3_column_blob() for a zero-length BLOB is a NULL pointer.</source>
          <target state="translated">sqlite3_column_text()とsqlite3_column_text16()によって返される文字列は、空の文字列であっても常にゼロ終端です。長さ0のBLOBに対するsqlite3_column_blob()の戻り値はNULLポインタです。</target>
        </trans-unit>
        <trans-unit id="109fcef442d10303df5f7d59d40936a03977dfcb" translate="yes" xml:space="preserve">
          <source>Strings that include any other characters must be quoted. Characters that are not currently allowed in barewords, are not quote characters and do not currently serve any special purpose in FTS5 query expressions may at some point in the future be allowed in barewords or used to implement new query functionality. This means that queries that are currently syntax errors because they include such a character outside of a quoted string may be interpreted differently by some future version of FTS5.</source>
          <target state="translated">その他の文字を含む文字列は引用符で囲む必要があります。現在のところベアワードでは許可されておらず、引用符ではなく、FTS5の問い合わせ式で特別な目的を果たしていない文字は、将来のある時点でベアワードで許可されたり、新しい問い合わせ機能を実装するために使用されたりするかもしれません。これは、引用文字列の外にそのような文字を含むために現在は構文エラーとなっているクエリが、将来のバージョンのFTS5では異なる解釈をされる可能性があることを意味しています。</target>
        </trans-unit>
        <trans-unit id="0b6945b8df636a6d934a512accf12a8b76fc6265" translate="yes" xml:space="preserve">
          <source>Studies show that many applications already use SQLite as a container object. For example, &lt;a href=&quot;https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf&quot;&gt;Kennedy&lt;/a&gt; (no relation to the &lt;a href=&quot;https://sqlite.org/crew.html#dan&quot;&gt;SQLite developer&lt;/a&gt;) reports that 14% of Android applications never write to their SQLite databases. It is believed that these applications are downloading entire databases from the cloud and then using the information locally as needed. In other words, the applications are using SQLite not so much as a database but as a queryable wire-transfer format.</source>
          <target state="translated">調査によると、多くのアプリケーションがSQLiteをコンテナオブジェクトとして既に使用しています。たとえば、&lt;a href=&quot;https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf&quot;&gt;ケネディ&lt;/a&gt;（&lt;a href=&quot;https://sqlite.org/crew.html#dan&quot;&gt;SQLite開発者&lt;/a&gt;とは関係ありません）は、Androidアプリケーションの14％がSQLiteデータベースに書き込みを行わないことを報告しています。これらのアプリケーションはクラウドからデータベース全体をダウンロードし、必要に応じてローカルで情報を使用していると考えられています。つまり、アプリケーションはSQLiteをデータベースとしてではなく、クエリ可能な電信転送フォーマットとして使用しています。</target>
        </trans-unit>
        <trans-unit id="bbd17ca7716d1959474368eb0c63e1ad9ad957be" translate="yes" xml:space="preserve">
          <source>Subqueries</source>
          <target state="translated">Subqueries</target>
        </trans-unit>
        <trans-unit id="9a235eb288a64671965312f5d0ad9f1b72cd84b6" translate="yes" xml:space="preserve">
          <source>Subqueries might also need to be materialized when they appear in the FROM clause of a SELECT statement. For example:</source>
          <target state="translated">サブクエリは、SELECT文のFROM句に現れた場合にも実体化する必要があるかもしれません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="79095639cf2544d3073712b3f47816fbf8b20418" translate="yes" xml:space="preserve">
          <source>Subquery Expressions</source>
          <target state="translated">副問い合わせ式</target>
        </trans-unit>
        <trans-unit id="14de4f03d3cdec3c98a5016002bc81eb0292385c" translate="yes" xml:space="preserve">
          <source>Subquery co-routines</source>
          <target state="translated">サクエリのサブルーチン</target>
        </trans-unit>
        <trans-unit id="1d0025e26a750eaf886e5b666d451246677ab333" translate="yes" xml:space="preserve">
          <source>Substitution Type</source>
          <target state="translated">置換タイプ</target>
        </trans-unit>
        <trans-unit id="ae5f61e523ef194692c08eae320b323a03f8bb9b" translate="yes" xml:space="preserve">
          <source>Subtract</source>
          <target state="translated">Subtract</target>
        </trans-unit>
        <trans-unit id="b2b6c0ca0db2f38dd797d319d2f786a2af93e034" translate="yes" xml:space="preserve">
          <source>Subtract 200 from X.</source>
          <target state="translated">Xから200を引く。</target>
        </trans-unit>
        <trans-unit id="351c38b73ce6b309921bfd5c87f12ea777d4a4ac" translate="yes" xml:space="preserve">
          <source>Subtract the value in register P1 from the value in register P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP1の値をレジスタP2の値から減算し、その結果をレジスタP3に格納します。どちらかの入力がNULLの場合、結果はNULLになります。</target>
        </trans-unit>
        <trans-unit id="b3ad01aa557050dded853fc788b3484598298d39" translate="yes" xml:space="preserve">
          <source>Such a line of C code might generate a dozen separate machine code instructions. If any one of those instructions is ever evaluated, then we say that the statement has been tested. So, for example, it might be the case that the conditional expression is always false and the &quot;d&quot; variable is never incremented. Even so, statement coverage counts this line of code as having been tested.</source>
          <target state="translated">このようなC言語のコードは、十数個のマシンコード命令を生成することがあります。これらの命令のどれかが評価された場合、その文がテストされたことになります。例えば、条件式が常にfalseで、変数 &quot;d &quot;がインクリメントされない場合があります。そうであっても、文のカバレッジは、この行のコードをテストされたものとしてカウントします。</target>
        </trans-unit>
        <trans-unit id="a042ce9ca13e4d4ddb750a0fe77ea337b1cdceb1" translate="yes" xml:space="preserve">
          <source>Such a virtual table has the same columns as the table-valued function described in the previous section. It may be read from using a SELECT statement in the same way as the table-valued function can.</source>
          <target state="translated">このような仮想テーブルは、前項で説明したテーブル値関数と同じ列を持ちます。これは、テーブル値関数と同じようにSELECT文を使用して読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="da045363c8fb916c7bdb60bedab8cb85e2f1f5a1" translate="yes" xml:space="preserve">
          <source>Such advanced searches are requested by providing a more complicated FTS5 query string as the text to the right of the MATCH operator (or = operator, or as the first argument to a table-valued function syntax). The full query syntax is &lt;a href=&quot;fts5#full_text_query_syntax&quot;&gt;described here&lt;/a&gt;.</source>
          <target state="translated">このような高度な検索は、MATCH演算子の右側のテキスト（または=演算子、またはテーブル値関数構文の最初の引数）として、より複雑なFTS5クエリ文字列を提供することで要求されます。ここでは、完全なクエリ構文&lt;a href=&quot;fts5#full_text_query_syntax&quot;&gt;について説明します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0936ee6227b30512f2222702e2254d11d72a242" translate="yes" xml:space="preserve">
          <source>Such criticism would be well-founded for a traditional client/server database engine, such as MySQL, PostgreSQL, or SQL Server. In a client/server database, each SQL statement requires a message round-trip from the application to the database server and back to the application. Doing over 200 round-trip messages, sequentially, can be a serious performance drag. This is sometimes called the &quot;N+1 Query Problem&quot; or the &quot;N+1 Select Problem&quot; and it is an anti-pattern.</source>
          <target state="translated">このような批判は、MySQL、PostgreSQL、SQL Serverなどの伝統的なクライアント/サーバデータベースエンジンに対しては、十分に根拠のあるものでしょう。クライアント/サーバデータベースでは、各SQL文はアプリケーションからデータベースサーバへ、そしてアプリケーションへとメッセージを往復させる必要があります。200以上のラウンドトリップメッセージを連続して実行することは、深刻なパフォーマンスの低下を招く可能性があります。これは「N+1 クエリ問題」や「N+1 セレクト問題」と呼ばれることもあり、アンチパターンです。</target>
        </trans-unit>
        <trans-unit id="f834acdfa0c7dab757f2bc4e26b1966eff963a52" translate="yes" xml:space="preserve">
          <source>Suggested Uses For SQLite:</source>
          <target state="translated">SQLite の推奨される使用法。</target>
        </trans-unit>
        <trans-unit id="f08f43d3c61d6c426d33128ee0c38e51fb6aad20" translate="yes" xml:space="preserve">
          <source>Suggested compile-time options include:</source>
          <target state="translated">提案されているコンパイル時のオプションには、以下のものがあります。</target>
        </trans-unit>
        <trans-unit id="3d1a384ea1042be63f3032ea726e70fc4a04f311" translate="yes" xml:space="preserve">
          <source>Suggests completions for partially-entered words during interactive SQL input. Used by the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; to help implement tab-completion.</source>
          <target state="translated">対話型SQL入力中に部分的に入力された単語の補完を提案します。&lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;がタブ補完の実装を支援するために使用します。</target>
        </trans-unit>
        <trans-unit id="adca4d21f8bf7900f73ede68196274afd881f1d7" translate="yes" xml:space="preserve">
          <source>Sum() will throw an &quot;integer overflow&quot; exception if all inputs are integers or NULL and an integer overflow occurs at any point during the computation. Total() never throws an integer overflow.</source>
          <target state="translated">Sum()は、すべての入力が整数または NULL であり、計算中に整数オーバーフローが発生した場合に &quot;integer overflow&quot; 例外をスローします。Total()は整数オーバーフローをスローしません。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="1a7bd9ebcad37a0dd711dfc793fa96bb5022047c" translate="yes" xml:space="preserve">
          <source>Summary of Technical Differences</source>
          <target state="translated">技術的な違いのまとめ</target>
        </trans-unit>
        <trans-unit id="4c599c4f8f2ffb798c4263cf7f6e473784c4d396" translate="yes" xml:space="preserve">
          <source>Super-journals</source>
          <target state="translated">Super-journals</target>
        </trans-unit>
        <trans-unit id="ab2e3b9850b401306a39a3a804f43e7d4f55c01f" translate="yes" xml:space="preserve">
          <source>Support for &quot;:AAA&quot; style bind parameter names.</source>
          <target state="translated">AAA&quot; スタイルのバインドパラメータ名をサポートしました。</target>
        </trans-unit>
        <trans-unit id="8b45bd25a3b604a0eccba69e7087834ecb582853" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;lang_update#upfrom&quot;&gt;UPDATE FROM&lt;/a&gt; following the PostgreSQL syntax.</source>
          <target state="translated">サポート&lt;a href=&quot;lang_update#upfrom&quot;&gt;FROM UPDATE&lt;/a&gt; PostgreSQLの構文を以下に示します。</target>
        </trans-unit>
        <trans-unit id="e333e85b28ab7b57a0a5c9131f54f806015a6221" translate="yes" xml:space="preserve">
          <source>Support for ALTER TABLE ... RENAME TABLE ... added</source>
          <target state="translated">ALTER TABLEのサポート ...RENAME TABLE ...追加</target>
        </trans-unit>
        <trans-unit id="3251d36ace39f64a5ddca9143a5668b65028289f" translate="yes" xml:space="preserve">
          <source>Support for TCL variable names embedded in SQL statements in the TCL bindings.</source>
          <target state="translated">SQL文に埋め込まれたTCL変数名をTCLバインディングでサポート。</target>
        </trans-unit>
        <trans-unit id="4c4e649b2faf6e7dd28f3f288044f754a9767c05" translate="yes" xml:space="preserve">
          <source>Support for UTF-16.</source>
          <target state="translated">UTF-16に対応しています。</target>
        </trans-unit>
        <trans-unit id="49ef276ba874be88caa55a5b3e4a37db519f9394" translate="yes" xml:space="preserve">
          <source>Support for UTF-8 and ISO8859 characters in column and table names.</source>
          <target state="translated">列名および表名でのUTF-8およびISO8859文字をサポートします。</target>
        </trans-unit>
        <trans-unit id="78dc81c2a8faafa4c84493782b19c441e17956a6" translate="yes" xml:space="preserve">
          <source>Support for UTF-8 and UTF-16</source>
          <target state="translated">UTF-8およびUTF-16をサポート</target>
        </trans-unit>
        <trans-unit id="1e1164bc2160d30de5ee08ec06fc2a323f2028fc" translate="yes" xml:space="preserve">
          <source>Support for both UTF-8 and UTF-16 text.</source>
          <target state="translated">UTF-8とUTF-16の両方のテキストに対応しています。</target>
        </trans-unit>
        <trans-unit id="bf37e2ec021b62a6c46ffa2eb125d86eb07ffbc5" translate="yes" xml:space="preserve">
          <source>Support for correlated subqueries added.</source>
          <target state="translated">相関性のある副問い合わせのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="ec9173b8e288c70be66cdbfa81d0ba7ad6705c9c" translate="yes" xml:space="preserve">
          <source>Support for full text search using the FTS1 module (beta)</source>
          <target state="translated">FTS1モジュールを用いた全文検索に対応(ベータ版</target>
        </trans-unit>
        <trans-unit id="09344ff56160150e5ec18eb5a71ba2f29a6312fc" translate="yes" xml:space="preserve">
          <source>Support for internationalization including UTF-8, UTF-16, and user defined collating sequences.</source>
          <target state="translated">UTF-8、UTF-16、ユーザー定義の照合シーケンスを含む国際化をサポートします。</target>
        </trans-unit>
        <trans-unit id="091e86f3d19a27b9089ddce8c418dcc49fd9c304" translate="yes" xml:space="preserve">
          <source>Support for non-ASCII characters in win95 filenames</source>
          <target state="translated">win95 ファイル名での非 ASCII 文字のサポート</target>
        </trans-unit>
        <trans-unit id="cfddf0106ec96c94ef54d4e7b75188870573ef30" translate="yes" xml:space="preserve">
          <source>Support for the EXISTS clause added.</source>
          <target state="translated">EXISTS句のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="21d1badc676c125ad5e671e3ae8383a4753e9f6c" translate="yes" xml:space="preserve">
          <source>Support for the diagnostic functions sqlite3_compileoption_used() and sqlite3_compileoption_get() may be omitted by specifying the &lt;a href=&quot;../compile#omit_compileoption_diags&quot;&gt;SQLITE_OMIT_COMPILEOPTION_DIAGS&lt;/a&gt; option at compile time.</source>
          <target state="translated">診断関数sqlite3_compileoption_used（）およびsqlite3_compileoption_get（）のサポートは、コンパイル時に&lt;a href=&quot;../compile#omit_compileoption_diags&quot;&gt;SQLITE_OMIT_COMPILEOPTION_DIAGS&lt;/a&gt;オプションを指定することで省略できます。</target>
        </trans-unit>
        <trans-unit id="ceaebbe4250e5e44fc85c0a7be72215c2fc6b3df" translate="yes" xml:space="preserve">
          <source>Support for the diagnostic functions sqlite3_compileoption_used() and sqlite3_compileoption_get() may be omitted by specifying the &lt;a href=&quot;compile#omit_compileoption_diags&quot;&gt;SQLITE_OMIT_COMPILEOPTION_DIAGS&lt;/a&gt; option at compile time.</source>
          <target state="translated">診断関数sqlite3_compileoption_used（）およびsqlite3_compileoption_get（）のサポートは、コンパイル時に&lt;a href=&quot;compile#omit_compileoption_diags&quot;&gt;SQLITE_OMIT_COMPILEOPTION_DIAGS&lt;/a&gt;オプションを指定することで省略できます。</target>
        </trans-unit>
        <trans-unit id="e227243100baec383101a5e3e5550db71fb48de1" translate="yes" xml:space="preserve">
          <source>Support operators IS TRUE, IS FALSE, IS NOT TRUE, and IS NOT FALSE.</source>
          <target state="translated">サポートオペレータは、IS TRUE、IS FALSE、IS NOT TRUE、IS NOT FALSEです。</target>
        </trans-unit>
        <trans-unit id="8b76c3512f29a884a102a942cd3b81fe8d384ace" translate="yes" xml:space="preserve">
          <source>Supported unary prefix operators are these:</source>
          <target state="translated">サポートされている単項接頭辞演算子は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="14453b6f0216ab7b03129623da62580288e5db4c" translate="yes" xml:space="preserve">
          <source>Supports terabyte-sized databases and gigabyte-sized strings and blobs. (See &lt;a href=&quot;limits&quot;&gt;limits.html&lt;/a&gt;.)</source>
          <target state="translated">テラバイトサイズのデータ​​ベースとギガバイトサイズの文字列とブロブをサポートします。（&lt;a href=&quot;limits&quot;&gt;limits.htmlを&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="f2a1709933364d69e93326e81a6775d317d15202" translate="yes" xml:space="preserve">
          <source>Suppose N=4. Then for the TPC-H Q8 graph, the first step finds the four shortest paths to visit any single node in the graph:</source>
          <target state="translated">N=4とする.次に、TPC-H Q8グラフについて、最初のステップでは、グラフ内の任意の1つのノードを訪問するための4つの最短パスを見つけます。</target>
        </trans-unit>
        <trans-unit id="61fbb5bff735b0969304e1938310f741780fb8bb" translate="yes" xml:space="preserve">
          <source>Suppose SQLite is used as the &lt;a href=&quot;appfileformat&quot;&gt;application file format&lt;/a&gt; for a particular design application. Two users, Alice and Bob, each start with a baseline design that is about a gigabyte in size. They work all day, in parallel, each making their own customizations and tweaks to the design. At the end of the day, they would like to merge their changes together into a single unified design.</source>
          <target state="translated">SQLiteが特定の設計アプリケーションの&lt;a href=&quot;appfileformat&quot;&gt;アプリケーションファイル形式&lt;/a&gt;として使用されているとします。AliceとBobの2人のユーザーはそれぞれ、サイズが約1ギガバイトのベースライン設計から始めます。彼らは1日中、並行して作業し、それぞれが独自のカスタマイズを行い、デザインを微調整します。最終的には、変更を1つの統合されたデザインにマージしたいと考えています。</target>
        </trans-unit>
        <trans-unit id="ef94f961eb3bb04314c719aa5da9edd146e885d3" translate="yes" xml:space="preserve">
          <source>Suppose an application wants to display a list of contacts in alphabetical order by lastname, firstname, in a scrolling window that can only show 7 contacts at a time. Initialize the scrolling window to the first 7 entries is easy:</source>
          <target state="translated">あるアプリケーションが、一度に7つの連絡先しか表示できないスクロールウィンドウに、姓、名、アルファベット順に連絡先のリストを表示したいとします。スクロールウィンドウを最初の7つのエントリに初期化するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="56904d3ea47369b0068186e8a39203c8a5f870c3" translate="yes" xml:space="preserve">
          <source>Suppose each entry in the BIG table is a JSON object with a '$.id' field that is a unique identifier and a '$.partlist' field that can be a deeply nested object. You want to find the id of every entry that contains one or more references to uuid '6fa5181e-5721-11e5-a04e-57f3d7b32808' anywhere in its '$.partlist'.</source>
          <target state="translated">BIG テーブルの各エントリが JSON オブジェクトで、一意の識別子である '$.id' フィールドと、深い入れ子になる可能性のある '$.partlist' フィールドを持つとします。uuid '6fa5181e-5721-11e5-a04e-57f3d7b32808' への参照を 1 つ以上含むすべてのエントリの ID を、その '$.partlist' のどこかで見つけたいとします。</target>
        </trans-unit>
        <trans-unit id="01636cb9299568d887d10674105e44b34b08d5bf" translate="yes" xml:space="preserve">
          <source>Suppose that after a while (about a month, usually) a new version of SQLite is released: 3.6.16. You will want to incorporate this new public version of SQLite into your repository in the public branch (the trunk). To do this, first change your repository over to the trunk:</source>
          <target state="translated">しばらくして(通常は1ヶ月程度)新しいバージョンのSQLiteがリリースされたとします。3.6.16.この新しいパブリックバージョンのSQLiteをパブリックブランチ(トランク)のリポジトリに組み込みたいとします。これを行うには、まず、リポジトリをトランクに変更します。</target>
        </trans-unit>
        <trans-unit id="cede4c6f59f784278daddf56ee62d38bbe080c9a" translate="yes" xml:space="preserve">
          <source>Suppose that in addition to the index on &quot;fruit&quot; there was also an index on &quot;state&quot;.</source>
          <target state="translated">果物」のインデックスに加えて「状態」のインデックスがあったとします。</target>
        </trans-unit>
        <trans-unit id="66f9ffa5f1e3c7efa56791a73580d03426c293ab" translate="yes" xml:space="preserve">
          <source>Suppose the &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenDocument&quot;&gt;OpenDocument&lt;/a&gt; file format, and specifically the &quot;ODP&quot; OpenDocument Presentation format, were built around SQLite. Benefits would include:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/OpenDocument&quot;&gt;OpenDocument&lt;/a&gt;ファイル形式、特に「ODP」OpenDocumentプレゼンテーション形式がSQLiteを中心に構築されていると仮定します。メリットは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5a6796b2c9a16b027d38641aa802a501818a470f" translate="yes" xml:space="preserve">
          <source>Suppose the SQLite source tree is stored in a directory named &quot;sqlite&quot;. Plan to construct the amalgamation in a parallel directory named (for example) &quot;bld&quot;. First construct an appropriate Makefile by either running the configure script at the top of the SQLite source tree, or by making a copy of one of the template Makefiles at the top of the source tree. Then hand edit this Makefile to include the desired compile-time options. Finally run:</source>
          <target state="translated">SQLiteのソースツリーが &quot;sqlite &quot;という名前のディレクトリに格納されているとします。アマルガムを(例えば)&quot;bld &quot;という名前の並列ディレクトリに構築することを計画してください。まず、SQLiteソースツリーの一番上にあるconfigureスクリプトを実行するか、ソースツリーの一番上にあるテンプレートMakefileのコピーを作成して、適切なMakefileを作成します。次に、このMakefileを手で編集して、必要なコンパイル時のオプションを含めます。最後に実行します。</target>
        </trans-unit>
        <trans-unit id="3af5f7045e9a9cbdbcc9c95551ce4e94ea5602be" translate="yes" xml:space="preserve">
          <source>Suppose the demo_data.boundary field holds some proprietary data description of a complex two-dimensional boundary for an object and suppose that the application has used the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; interface to created application-defined functions &quot;contained_in&quot; and &quot;overlaps&quot; accepting two demo_data.boundary objects and return true or false. One may assume that &quot;contained_in&quot; and &quot;overlaps&quot; are relatively slow functions that we do not want to invoke too frequently. Then an efficient way to find the name of all objects located within the North Carolina 12th District, one may be to run a query like this:</source>
          <target state="translated">demo_data.boundaryフィールドがオブジェクトの複雑な2次元境界の独自のデータ記述を保持し、アプリケーションが&lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function（）&lt;/a&gt;インターフェースを使用して、2つのdemo_dataを受け入れるアプリケーション定義関数「contained_in」と「overlaps」を作成したとします。境界オブジェクト。trueまたはfalseを返します。 「contained_in」と「overlaps」は、あまり頻繁に呼び出したくない比較的遅い関数であると考える人もいます。次に、ノースカロライナ12区内にあるすべてのオブジェクトの名前を見つける効率的な方法は、次のようなクエリを実行することです。</target>
        </trans-unit>
        <trans-unit id="be9cbf4654b2bfbdcf1b2bf833bfb8cf7cccef29" translate="yes" xml:space="preserve">
          <source>Suppose the initial sequence of non-wildcard characters on the right-hand side of the LIKE or GLOB operator is</source>
          <target state="translated">LIKEやGLOB演算子の右側にあるワイルドカード以外の文字の初期配列が</target>
        </trans-unit>
        <trans-unit id="15341cf73e257c233d78d57ae1e295622b133b68" translate="yes" xml:space="preserve">
          <source>Suppose the power loss occurred during &lt;a href=&quot;#section_3_10&quot;&gt;step 3.10&lt;/a&gt; above, while the database changes were being written to disk. After power is restored, the situation might be something like what is shown to the right. We were trying to change three pages of the database file but only one page was successfully written. Another page was partially written and a third page was not written at all.</source>
          <target state="translated">データベースの変更がディスクに書き込まれているときに、上記の&lt;a href=&quot;#section_3_10&quot;&gt;ステップ3.10&lt;/a&gt;中に停電が発生したとします。電源が回復した後、状況は右に示されるもののようになる場合があります。データベースファイルの3ページを変更しようとしましたが、1ページしか正常に書き込まれませんでした。別のページが部分的に書き込まれ、3番目のページはまったく書き込まれませんでした。</target>
        </trans-unit>
        <trans-unit id="502f7a3363de6f918e427baeeb23c0fbeb554eda" translate="yes" xml:space="preserve">
          <source>Suppose the table &quot;CREATE TABLE user(name,phone)&quot; stores zero or more phone numbers as a JSON array object in the user.phone field. To find all users who have any phone number with a 704 area code:</source>
          <target state="translated">テーブル &quot;CREATE TABLE user(name,phone)&quot;が、0個以上の電話番号をuser.phoneフィールドにJSON配列オブジェクトとして格納しているとします。市外局番が704の電話番号を持つすべてのユーザーを見つけるには</target>
        </trans-unit>
        <trans-unit id="d5297ab1e192fe178acfe6ab94a19f582b117e15" translate="yes" xml:space="preserve">
          <source>Suppose the term that is being spell-corrected is X. To limit the search space, X is converted to a k2-like key using the equivalent of:</source>
          <target state="translated">誤字脱字の対象となっている用語がXだとします。</target>
        </trans-unit>
        <trans-unit id="b244116e469acf86fbb0e19b53f1d8598b689446" translate="yes" xml:space="preserve">
          <source>Suppose there is a site hosting a database in state S0. And that modifications are made that move that database to state S1 and a changeset recorded (the &quot;local&quot; changeset). Then, a changeset based on S0 is received from another site (the &quot;remote&quot; changeset) and applied to the database. The database is then in state (S1+&quot;remote&quot;), where the exact state depends on any conflict resolution decisions (OMIT or REPLACE) made while applying &quot;remote&quot;. Rebasing a changeset is to update it to take those conflict resolution decisions into account, so that the same conflicts do not have to be resolved elsewhere in the network.</source>
          <target state="translated">状態S0でデータベースをホストしているサイトがあるとします。そして、そのデータベースを状態S1に移動させる変更が行われ、変更セットが記録されたとします(「ローカル」変更セット)。そして、S0に基づくチェンジセットが別のサイトから受信され(&quot;リモート &quot;チェンジセット)、データベースに適用されます。データベースはその後、状態(S1+&quot;リモート&quot;)になりますが、正確な状態は &quot;リモート &quot;を適用している間に行われた競合解決の決定(OMITまたはREPLACE)に依存します。チェンジセットをリベースすることは、ネットワーク内の他の場所で同じ競合を解決する必要がないように、それらの競合解決の決定を考慮に入れてチェンジセットを更新することです。</target>
        </trans-unit>
        <trans-unit id="7ead91310400eb3c0d2b88fd20fde2e0225bdf31" translate="yes" xml:space="preserve">
          <source>Suppose we have a table X1 defined as follows:</source>
          <target state="translated">以下のように定義されたテーブルX1があるとします。</target>
        </trans-unit>
        <trans-unit id="538e32b0b37a9243b789f735088e6724ac330912" translate="yes" xml:space="preserve">
          <source>Suppose we want to find the prices of all kinds of oranges sorted in order of the state where they are grown. The query is this:</source>
          <target state="translated">例えば、オレンジの全種類の価格を、栽培されている州の順に並べ替えて検索したいとします。クエリはこれです。</target>
        </trans-unit>
        <trans-unit id="064cebf29367ccdae2597fb8c1cb7630379e90ac" translate="yes" xml:space="preserve">
          <source>Suppose we want to know the order number, product number, and quantity for any item in which the product number and quantity match the product number and quantity of any item in order number 365:</source>
          <target state="translated">注文番号365の中で、商品番号と数量が一致する商品の注文番号、商品番号、数量を知りたいとします。</target>
        </trans-unit>
        <trans-unit id="465043a8fd6b7a4a4148ce99421e90822984188c" translate="yes" xml:space="preserve">
          <source>Suppose you want to look up the price of peaches. The query would be as follows:</source>
          <target state="translated">桃の価格を調べたいとします。クエリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="5cde9a11c3caa7425e0b0c2c0bc60b2a242f9c61" translate="yes" xml:space="preserve">
          <source>Surprisingly, using SQLite in place of ZIP makes the presentation file smaller. Really. One would think that a relational database file would be larger than a ZIP archive, but at least in the case of NeoOffice that is not so. The following is an actual screen-scrape showing the sizes of the same NeoOffice presentation, both in its original ZIP archive format as generated by NeoOffice (self2014.odp), and as repacked as an SQLite database using the &lt;a href=&quot;http://www.sqlite.org/sqlar/doc/trunk/README.md&quot;&gt;SQLAR&lt;/a&gt; utility:</source>
          <target state="translated">驚いたことに、ZIPの代わりにSQLiteを使用すると、プレゼンテーションファイルが小さくなります。本当に。リレーショナルデータベースファイルはZIPアーカイブよりも大きくなると思いますが、少なくともNeoOfficeの場合はそうではありません。以下は、NeoOffice（self2014.odp）によって生成された元のZIPアーカイブ形式と、&lt;a href=&quot;http://www.sqlite.org/sqlar/doc/trunk/README.md&quot;&gt;SQLAR&lt;/a&gt;ユーティリティを使用してSQLiteデータベースとして再パックされた同じNeoOfficeプレゼンテーションのサイズを示す実際の画面の断片です。</target>
        </trans-unit>
        <trans-unit id="055c319b3692b1bab785599b3ba80b0068542bb5" translate="yes" xml:space="preserve">
          <source>Suspend Execution For A Short Time</source>
          <target state="translated">短時間で実行を一時停止</target>
        </trans-unit>
        <trans-unit id="7bdfc376d6f876239b6de7abf665805218ef476e" translate="yes" xml:space="preserve">
          <source>Swap the program counter with the value in register P1. This has the effect of yielding to a coroutine.</source>
          <target state="translated">プログラムカウンタをレジスタP1の値とスワップします。これは、コルーチンを降伏させる効果があります。</target>
        </trans-unit>
        <trans-unit id="6cb264ae88f7fbec3546350312b9af582b1fc481" translate="yes" xml:space="preserve">
          <source>Swapping journal files between two different databases.</source>
          <target state="translated">2つの異なるデータベース間でジャーナルファイルをスワップします。</target>
        </trans-unit>
        <trans-unit id="e8485294b019aa85fdb1a929771cba23d5593c45" translate="yes" xml:space="preserve">
          <source>Swarmvtab Virtual Table</source>
          <target state="translated">Swarmvtab 仮想テーブル</target>
        </trans-unit>
        <trans-unit id="01d32f35e7401403e071bd64f5c3b26a4e4dc5be" translate="yes" xml:space="preserve">
          <source>Swarmvtab context</source>
          <target state="translated">Swarmvtab コンテキスト</target>
        </trans-unit>
        <trans-unit id="875cb081d7d2e461450da0199489f1266311e3ff" translate="yes" xml:space="preserve">
          <source>Swarmvtab efficiently handles range and equality constraints on the rowid (or other INTEGER PRIMARY KEY) field only. If a query does not contain such a constraint, then swarmvtab finds the results by opening each database in turn and linearly scanning the component table. Which generates a correct result, but is often slow.</source>
          <target state="translated">Swarmvtabは、rowid(または他のINTEGER PRIMARY KEY)フィールドのみの範囲制約と等質性制約を効率的に処理します。クエリにそのような制約が含まれていない場合、Swarmvtabは各データベースを順番に開き、コンポーネントテーブルをリニアにスキャンすることで結果を見つけます。これは正しい結果を生成しますが、時間がかかることが多いです。</target>
        </trans-unit>
        <trans-unit id="85aa4db2e47035bd4c2140f56e8799ea09c7ae90" translate="yes" xml:space="preserve">
          <source>Swarmvtab virtual tables must be created in the temp schema. Attempting to create a swarmvtab in the main or an attached database is an error.</source>
          <target state="translated">Swarmvtab 仮想テーブルは、一時スキーマに作成する必要があります。メインまたはアタッチされたデータベースで Swarmvtab を作成しようとするとエラーになります。</target>
        </trans-unit>
        <trans-unit id="d0d92527f493460a8c4ce6ccbbd585c5ead2d11f" translate="yes" xml:space="preserve">
          <source>Synchronization Type Flags</source>
          <target state="translated">同期タイプフラグ</target>
        </trans-unit>
        <trans-unit id="a7e6b31b20f1d4434bcadd521f6861e2f3378f97" translate="yes" xml:space="preserve">
          <source>Synchronous pragma</source>
          <target state="translated">同期プラグマ</target>
        </trans-unit>
        <trans-unit id="4ae6fa22bc9918cf39eb8d8cef197a88e78982e8" translate="yes" xml:space="preserve">
          <source>Syncing</source>
          <target state="translated">Syncing</target>
        </trans-unit>
        <trans-unit id="c66891a446af4f02e4055198cbfa371561a78fd4" translate="yes" xml:space="preserve">
          <source>Syncing the Journal File</source>
          <target state="translated">ジャーナルファイルの同期</target>
        </trans-unit>
        <trans-unit id="17aba038fa3266b07efa450a91b91b1e792d66c5" translate="yes" xml:space="preserve">
          <source>Syntax Diagrams</source>
          <target state="translated">構文図</target>
        </trans-unit>
        <trans-unit id="33bbfae733b0f97c3ea72475efb5dfbb61ebe1e1" translate="yes" xml:space="preserve">
          <source>Syntax Diagrams For SQLite</source>
          <target state="translated">SQLite の構文図</target>
        </trans-unit>
        <trans-unit id="70a8fcc6fa01af0d580c320ddb0e42484905e68e" translate="yes" xml:space="preserve">
          <source>Syntax Restrictions On UPDATE, DELETE, and INSERT Statements Within Triggers</source>
          <target state="translated">トリガ内の UPDATE、DELETE、および INSERT ステートメントの構文制限</target>
        </trans-unit>
        <trans-unit id="34b408d97f8998a54cd64e9461c53dd4d1067b38" translate="yes" xml:space="preserve">
          <source>System Failure Related Assumptions</source>
          <target state="translated">システム障害関連の前提条件</target>
        </trans-unit>
        <trans-unit id="ba2da263deb1258b36edfe6f11f1b761d86b8d6d" translate="yes" xml:space="preserve">
          <source>Systems designers report success using SQLite as a data store on server applications running in the datacenter, or in other words, using SQLite as the underlying storage engine for an application-specific database server.</source>
          <target state="translated">システム設計者は、データセンターで実行されているサーバーアプリケーションのデータストアとして SQLite を使用すること、言い換えれば、アプリケーション固有のデータベースサーバーの基礎となるストレージエンジンとして SQLite を使用することに成功したと報告しています。</target>
        </trans-unit>
        <trans-unit id="7244bff04e9f7001cbde5e129092d3ed31f1946c" translate="yes" xml:space="preserve">
          <source>Systems that run automatic backups in the background might try to make a backup copy of an SQLite database file while it is in the middle of a transaction. The backup copy then might contain some old and some new content, and thus be corrupt.</source>
          <target state="translated">バックグラウンドで自動バックアップを実行しているシステムは、トランザクションの途中でSQLiteデータベースファイルのバックアップコピーを作成しようとするかもしれません。その場合、バックアップコピーには古いコンテンツと新しいコンテンツが含まれている可能性があり、破損している可能性があります。</target>
        </trans-unit>
        <trans-unit id="a4394edb00669dc4429b903f672c10ae13c95e90" translate="yes" xml:space="preserve">
          <source>TABLE</source>
          <target state="translated">TABLE</target>
        </trans-unit>
        <trans-unit id="2ba83e39946a4ce4cedf8d25757aa5972284aa54" translate="yes" xml:space="preserve">
          <source>TABLENAME</source>
          <target state="translated">TABLENAME</target>
        </trans-unit>
        <trans-unit id="4ff4bacb6a130128f6603752138b57217ef9b6fa" translate="yes" xml:space="preserve">
          <source>TBD...</source>
          <target state="translated">TBD...</target>
        </trans-unit>
        <trans-unit id="e44916ac43724313d53ca25dbe2f20ee993ff6ec" translate="yes" xml:space="preserve">
          <source>TBD: More information about the header</source>
          <target state="translated">TBD:ヘッダーの詳細情報</target>
        </trans-unit>
        <trans-unit id="cdd060df603a64a7bee550bbc1c098580b231ab0" translate="yes" xml:space="preserve">
          <source>TCL interface authorizer method</source>
          <target state="translated">TCLインタフェースオーソライズ方式</target>
        </trans-unit>
        <trans-unit id="aa517168bae4e2e388a6074b5a96fe2e5afc293f" translate="yes" xml:space="preserve">
          <source>TCL interface backup method</source>
          <target state="translated">TCLインタフェースバックアップ方式</target>
        </trans-unit>
        <trans-unit id="a29047291bb3d39d19d4b03699cb7f433f5736f2" translate="yes" xml:space="preserve">
          <source>TCL interface bind_fallback method</source>
          <target state="translated">TCL インタフェース bind_fallback メソッド</target>
        </trans-unit>
        <trans-unit id="1c5ad56544d8041c9b02f88d11a25782f14e4c9f" translate="yes" xml:space="preserve">
          <source>TCL interface busy method</source>
          <target state="translated">TCLインタフェースビジー方式</target>
        </trans-unit>
        <trans-unit id="6e4d989bf3b3b512cc61d500b0cb58cfc259ca59" translate="yes" xml:space="preserve">
          <source>TCL interface cache method</source>
          <target state="translated">TCLインタフェースキャッシュ方式</target>
        </trans-unit>
        <trans-unit id="f25b192d00bf0645e7eae602ec160016f797e6ac" translate="yes" xml:space="preserve">
          <source>TCL interface changes method</source>
          <target state="translated">TCL インタフェースの変更方法</target>
        </trans-unit>
        <trans-unit id="33f884ed1b8425d04cb3811d2ea16b66af480340" translate="yes" xml:space="preserve">
          <source>TCL interface close method</source>
          <target state="translated">TCLインターフェースクローズメソッド</target>
        </trans-unit>
        <trans-unit id="96c5f46c7769b7e1d49b804ecba806907889a771" translate="yes" xml:space="preserve">
          <source>TCL interface collate method</source>
          <target state="translated">TCLインタフェース照合法</target>
        </trans-unit>
        <trans-unit id="2332befec61c50669cde60f3b1533591736f6a66" translate="yes" xml:space="preserve">
          <source>TCL interface collation_needed method</source>
          <target state="translated">TCL インタフェース collation_needed メソッド</target>
        </trans-unit>
        <trans-unit id="8cd4b4c1ed1732eb767f776cef0372d6c6cd1054" translate="yes" xml:space="preserve">
          <source>TCL interface commit_hook method</source>
          <target state="translated">TCL インタフェース commit_hook メソッド</target>
        </trans-unit>
        <trans-unit id="0157c2d923f1a0bec3d0245febd3f5035181a5aa" translate="yes" xml:space="preserve">
          <source>TCL interface complete method</source>
          <target state="translated">TCLインタフェース完全方式</target>
        </trans-unit>
        <trans-unit id="c09e584a42654f26d29ff74df19ed9ca909905e4" translate="yes" xml:space="preserve">
          <source>TCL interface config method</source>
          <target state="translated">TCLインタフェース構成法</target>
        </trans-unit>
        <trans-unit id="b70df1b7dc237a292692ace288ac2eb93a3bcef2" translate="yes" xml:space="preserve">
          <source>TCL interface copy method</source>
          <target state="translated">TCLインタフェースコピー方式</target>
        </trans-unit>
        <trans-unit id="347f513a80d88ab334df317b8f83092d3ee26571" translate="yes" xml:space="preserve">
          <source>TCL interface deserialize method</source>
          <target state="translated">TCL インタフェース デシリアライズメソッド</target>
        </trans-unit>
        <trans-unit id="0aa7225f1cfbaa7982110594b19739c6dbdfb9ac" translate="yes" xml:space="preserve">
          <source>TCL interface enable_load_extension method</source>
          <target state="translated">TCL インタフェース enable_load_extension メソッド</target>
        </trans-unit>
        <trans-unit id="64987beca677d7a4b95b820f3bed800e413b8cde" translate="yes" xml:space="preserve">
          <source>TCL interface errorcode method</source>
          <target state="translated">TCLインタフェースエラーコード方式</target>
        </trans-unit>
        <trans-unit id="2189980d19fa911ed2ea4bb8d946cfdc55a53bc7" translate="yes" xml:space="preserve">
          <source>TCL interface eval method</source>
          <target state="translated">TCL インタフェース eval メソッド</target>
        </trans-unit>
        <trans-unit id="f1bf6449a26eb7b025248f0b61a91066e3c39b49" translate="yes" xml:space="preserve">
          <source>TCL interface exists method</source>
          <target state="translated">TCL インタフェースが存在するメソッド</target>
        </trans-unit>
        <trans-unit id="648b3c74c3afc3cad32dadd0965691c51538573c" translate="yes" xml:space="preserve">
          <source>TCL interface function method</source>
          <target state="translated">TCLインタフェース関数法</target>
        </trans-unit>
        <trans-unit id="4d842678586502cd1c46097c8ca3621079c38b98" translate="yes" xml:space="preserve">
          <source>TCL interface incrblob method</source>
          <target state="translated">TCL インタフェース incrblob メソッド</target>
        </trans-unit>
        <trans-unit id="066821d02e0db49a10a7937ff6d8bc5c5b5055c7" translate="yes" xml:space="preserve">
          <source>TCL interface interrupt method</source>
          <target state="translated">TCLインタフェース割り込み方式</target>
        </trans-unit>
        <trans-unit id="f2e3158832088a3ccb54fc358c6461aace750451" translate="yes" xml:space="preserve">
          <source>TCL interface last_insert_rowid method</source>
          <target state="translated">TCL インタフェース last_insert_rowid メソッド</target>
        </trans-unit>
        <trans-unit id="50f8a5afc729daeaa27f3e057a6884d99bd7f622" translate="yes" xml:space="preserve">
          <source>TCL interface nullvalue method</source>
          <target state="translated">TCLインタフェースヌル値メソッド</target>
        </trans-unit>
        <trans-unit id="e0711044ae2edb8698df1518d744c5b6309e1ba0" translate="yes" xml:space="preserve">
          <source>TCL interface onecolumn method</source>
          <target state="translated">TCLインタフェース1カラムメソッド</target>
        </trans-unit>
        <trans-unit id="7eb062b4a3cda7b5c21d07e42888d6f537605587" translate="yes" xml:space="preserve">
          <source>TCL interface profile method</source>
          <target state="translated">TCLインタフェースプロファイル方式</target>
        </trans-unit>
        <trans-unit id="4bd65df2fc14e08847cf659f886e3675b02fd603" translate="yes" xml:space="preserve">
          <source>TCL interface progress method</source>
          <target state="translated">TCLインタフェースプログレス方式</target>
        </trans-unit>
        <trans-unit id="24560fa957755f945fd0a996100a7a50130fe691" translate="yes" xml:space="preserve">
          <source>TCL interface restore method</source>
          <target state="translated">TCLインタフェースリストア方式</target>
        </trans-unit>
        <trans-unit id="2c81f806023d5b1efa791fd568b8a71993cb3fc8" translate="yes" xml:space="preserve">
          <source>TCL interface rollback_hook method</source>
          <target state="translated">TCL インタフェース rollback_hook メソッド</target>
        </trans-unit>
        <trans-unit id="5d16200e0392f874424c9d693d564e213809df7d" translate="yes" xml:space="preserve">
          <source>TCL interface serialize method</source>
          <target state="translated">TCLインタフェースシリアライズメソッド</target>
        </trans-unit>
        <trans-unit id="8ad2308cc6d8c87dd4d39e3a54c207bf26684239" translate="yes" xml:space="preserve">
          <source>TCL interface status method</source>
          <target state="translated">TCLインタフェース状態法</target>
        </trans-unit>
        <trans-unit id="149cac088a8935337f35ceed17575a182fb384dd" translate="yes" xml:space="preserve">
          <source>TCL variable substitution</source>
          <target state="translated">TCL変数置換</target>
        </trans-unit>
        <trans-unit id="def1cac8277b55b62d6889e51352a77e3186587b" translate="yes" xml:space="preserve">
          <source>TEMP</source>
          <target state="translated">TEMP</target>
        </trans-unit>
        <trans-unit id="c02f25e228aca3bb6f42e48160b40dd55194b2cc" translate="yes" xml:space="preserve">
          <source>TEMP Triggers on Non-TEMP Tables</source>
          <target state="translated">非TEMPテーブルのTEMPトリガー</target>
        </trans-unit>
        <trans-unit id="8d43ca29f9403615d1a5c8f0da40adcdae819802" translate="yes" xml:space="preserve">
          <source>TEMP databases</source>
          <target state="translated">TEMPデータベース</target>
        </trans-unit>
        <trans-unit id="0c21d62a74809c85ca0475d94b6c298ee066de4e" translate="yes" xml:space="preserve">
          <source>TEMP tables and indices</source>
          <target state="translated">TEMPテーブルとインデックス</target>
        </trans-unit>
        <trans-unit id="df7db63622b3659c5ca6d357417169e72078f0bc" translate="yes" xml:space="preserve">
          <source>TEMP triggers on non-TEMP tables</source>
          <target state="translated">非TEMPテーブルのTEMPトリガー</target>
        </trans-unit>
        <trans-unit id="2ec4186ff6dd054f66dc48342664cc916e7cee64" translate="yes" xml:space="preserve">
          <source>TEMPORARY</source>
          <target state="translated">TEMPORARY</target>
        </trans-unit>
        <trans-unit id="7d4e42ef9d04a046b5679f952cb0b6b5c498c73c" translate="yes" xml:space="preserve">
          <source>TEXT</source>
          <target state="translated">TEXT</target>
        </trans-unit>
        <trans-unit id="6e2d2a0b927ccbcb0059d0c7ba90d9609187d08f" translate="yes" xml:space="preserve">
          <source>TH3</source>
          <target state="translated">TH3</target>
        </trans-unit>
        <trans-unit id="f0b11e9a80109508da2e3cbd3b7a0a8827845799" translate="yes" xml:space="preserve">
          <source>TH3 achieves 100% branch test coverage (and 100% &lt;a href=&quot;https://en.wikipedia.org/wiki/Modified_condition/decision_coverage&quot;&gt;MC/DC&lt;/a&gt;) over the SQLite core. (Test coverage of extensions such as FTS and RTREE is less than 100%).</source>
          <target state="translated">TH3 は、SQLiteコア全体で100％のブランチテストカバレッジ（および100％&lt;a href=&quot;https://en.wikipedia.org/wiki/Modified_condition/decision_coverage&quot;&gt;MC / DC&lt;/a&gt;）を達成します。（FTSやRTREEなどの拡張のテストカバレッジは100％未満です）。</target>
        </trans-unit>
        <trans-unit id="b39ec8bc0fe82988bb1da1f05fc2de8eb41887fa" translate="yes" xml:space="preserve">
          <source>TH3 checks SQLite's response to out-of-memory errors, disk I/O errors, and power loss during transaction commit.</source>
          <target state="translated">TH3は、トランザクションのコミット時に、メモリ切れエラー、ディスクI/Oエラー、パワーロスに対するSQLiteの応答をチェックします。</target>
        </trans-unit>
        <trans-unit id="055f71da54f782f8f65239fd4fb6b9c021760b69" translate="yes" xml:space="preserve">
          <source>TH3 comes with additional TCL scripts that help automate the testing process on workstations. The &quot;th3make&quot; script automatically runs &quot;mkth3.tcl&quot; and &quot;gcc&quot; and then runs the resulting test program and checks the results. Arguments to th3make include all of the &quot;*.test&quot; test modules and &quot;*.cfg&quot; configurations that are to be included in the test. Additional options to th3make can cause the test program to be compiled using different compilers (GCC, Clang, MSVC), to use different output verbosity levels, to run the test program under valgrind, to check the output for coverage using gcov, and so forth. The th3make script also accepts &quot;*.rc&quot; filenames as arguments. These *.rc files are just collections of other arguments that are commonly used together for a single purpose. For example, the &quot;quick.rc&quot; file contains a set of eight arguments to th3make that run a fast (3-minute) full-coverage test. This allows the operator to type &quot;./th3make quick.rc&quot; as a short-cut to typing out all of the required command-line options. The following are a few of the more than 40 available *.rc files:</source>
          <target state="translated">TH3 には、ワークステーション上でのテストプロセスを自動化するのに役立つ TCL スクリプトが追加で付属しています。th3make&quot; スクリプトは自動的に &quot;mkth3.tcl&quot; と &quot;gcc&quot; を実行し、結果のテストプログラムを実行して結果をチェックします。th3make の引数には、テストに含まれる &quot;*.test&quot; テストモジュールと &quot;*.cfg&quot; コンフィギュレーションが含まれます。th3make への追加オプションとして、異なるコンパイラ (GCC,Clang,MSVC)を使用してテストプログラムをコンパイルしたり、異なる出力冗長度レベルを使用したり、valgrind の下でテストプログラムを実行したり、gcov を使用して出力のカバレッジをチェックしたりすることができます。th3make スクリプトは、引数として &quot;*.rc&quot; ファイル名も受け付けます。これらの *.rc ファイルは、一つの目的のために一般的に使用される他の引数の集合体です。例えば、&quot;quick.rc &quot;ファイルには、高速(3分)フルカバレッジテストを実行するth3makeへの8つの引数のセットが含まれています。これにより、オペレータは &quot;./th3make quick.rc&quot; と入力することで、必要なコマンドラインオプションをすべて入力するショートカットとして使用することができます。以下は、40以上の利用可能な *.rc ファイルの一部です。</target>
        </trans-unit>
        <trans-unit id="a2a05ad4acef3c330bf37c9357e657e9ed2af845" translate="yes" xml:space="preserve">
          <source>TH3 exercises SQLite in a variety of run-time configurations (UTF8 vs UTF16, different pages sizes, varying journal modes, etc.)</source>
          <target state="translated">TH3では、様々なランタイム構成(UTF8とUTF16、ページサイズの違い、ジャーナルモードの違いなど)でSQLiteを演習しています。</target>
        </trans-unit>
        <trans-unit id="f8e21da8c02749a044b3aef819f8092fd00ef786" translate="yes" xml:space="preserve">
          <source>TH3 is a test program generator. The output of TH3 is a program implemented in C-code and intended to be linked against the SQLite library under test. The generated test program is compiled and run on the target platform in order to verify correct operation of SQLite on that platform.</source>
          <target state="translated">TH3 はテストプログラム生成ツールです。TH3 の出力は C コードで実装されたプログラムで、テスト対象の SQLite ライブラリとリンクすることを目的としています。生成されたテストプログラムはコンパイルされ、ターゲットプラットフォーム上で実行され、そのプラットフォーム上でのSQLiteの正しい動作を検証します。</target>
        </trans-unit>
        <trans-unit id="35be3734cb33090a9156032bab76a3246a8875be" translate="yes" xml:space="preserve">
          <source>TH3 is able to run on embedded platforms that lack the support infrastructure of workstations.</source>
          <target state="translated">TH3は、ワークステーションのサポートインフラが不足している組み込みプラットフォームでも動作するようになっています。</target>
        </trans-unit>
        <trans-unit id="924274e45e00b2de29022bcd422e62f257c51552" translate="yes" xml:space="preserve">
          <source>TH3 originated from an effort to test SQLite on &lt;a href=&quot;https://en.wikipedia.org/wiki/Symbian&quot;&gt;SymbianOS&lt;/a&gt;. Prior to TH3, all SQLite tests were run using the &lt;a href=&quot;http://www.tcl.tk/&quot;&gt;TCL&lt;/a&gt; script language, but TCL would not (easily) compile on SymbianOS which made testing difficult. The first attempt to remedy this problem was the &quot;TH1&quot; (Test Harness #1) scripting language - a reimplementation of parts of the TCL language in a more portable form that would compile and run on SymbianOS, and that was sufficient to run the SQLite tests. TH1 did not survive as a standard testing tool for SQLite, but it did find continued service as a scripting language used to customize the &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; version control system. There was also a &quot;Test Harness #2&quot; which was an attempt to create a simple scripting language using operator prefix notation to drive tests. TH3 was the third attempt.</source>
          <target state="translated">TH3は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Symbian&quot;&gt;SymbianOSで&lt;/a&gt; SQLiteをテストする取り組みから生まれました。 TH3以前は、すべてのSQLiteテストは&lt;a href=&quot;http://www.tcl.tk/&quot;&gt;TCL&lt;/a&gt;スクリプト言語を使用して実行されていましたが、TCLはSymbianOSで（簡単に）コンパイルできなかったため、テストが困難でした。この問題を修正する最初の試みは、「TH1」（テストハーネス＃1）スクリプト言語でした。これは、TCL言語の一部を、SymbianOSでコンパイルして実行できる移植性の高い形式で再実装したもので、SQLiteを実行するのに十分でした。テスト。 TH1はSQLiteの標準的なテストツールとしては存続しませんでしたが、&lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossilの&lt;/a&gt;カスタマイズに使用されるスクリプト言語として継続的なサービスを見つけましたバージョン管理システム。「テストハーネス＃2」もありました。これは、オペレータープレフィックス表記を使用してテストを実行する単純なスクリプト言語を作成する試みです。TH3は3回目の試みでした。</target>
        </trans-unit>
        <trans-unit id="2607d86f3f95561abb29b75d3920751195896dbd" translate="yes" xml:space="preserve">
          <source>TH3 tests SQLite in an as-deployed configuration using only published and documented interfaces. In other words, TH3 tests the compiled object code, not the source code, thus verifying that no problems were introduced by compiler bugs. &quot;Test what you fly and fly what you test.&quot;</source>
          <target state="translated">TH3 は、公開されている文書化されたインターフェイスのみを使用して、SQLite をデプロイ時の設定でテストします。つまり、TH3はソースコードではなくコンパイルされたオブジェクトコードをテストするため、コンパイラのバグによって問題が発生しなかったことを検証します。&quot;Test what you fly and fly what you test.&quot;</target>
        </trans-unit>
        <trans-unit id="c87cfbcfb0ff68ef8b8fa0759657744ff88b88af" translate="yes" xml:space="preserve">
          <source>TH3 was originally written for validation testing only, but has subsequently been used for development testing and debugging as well, and has proven very helpful in those roles. A full-coverage test takes less than five minutes on a workstation and hence serves as a fast regression test during day-to-day maintenance of the SQLite code base.</source>
          <target state="translated">TH3 はもともと検証テスト用に書かれたものでしたが、その後開発テストやデバッグにも使用され、これらの役割に非常に役立つことが証明されています。フルカバレッジテストはワークステーションで5分もかからないので、SQLiteコードベースの日々のメンテナンス時の高速なリグレッションテストとしての役割を果たします。</target>
        </trans-unit>
        <trans-unit id="bd7f8a83e07337beedb291a476a0abdb89ed6b4f" translate="yes" xml:space="preserve">
          <source>THEN</source>
          <target state="translated">THEN</target>
        </trans-unit>
        <trans-unit id="2c1d90a10bc6577f471f3c2c8cd6836385b31b82" translate="yes" xml:space="preserve">
          <source>TIES</source>
          <target state="translated">TIES</target>
        </trans-unit>
        <trans-unit id="4fe5a3682f8029783789ec9b3abba10f67f03ffa" translate="yes" xml:space="preserve">
          <source>TINYINT</source>
          <target state="translated">TINYINT</target>
        </trans-unit>
        <trans-unit id="15f51444be75bc88e935c57ef2ee7477dc73a64e" translate="yes" xml:space="preserve">
          <source>TO</source>
          <target state="translated">TO</target>
        </trans-unit>
        <trans-unit id="cd4fd03fe967437fff9a9133b579cdd5421577a6" translate="yes" xml:space="preserve">
          <source>TODO:  Add something about checking the page-cache first etc.</source>
          <target state="translated">TODO:最初にページキャッシュをチェックすることについての何かを追加します。</target>
        </trans-unit>
        <trans-unit id="7fb66aab7e490b4f8a5b13b306c51e116175236a" translate="yes" xml:space="preserve">
          <source>TODO:  After sections 4 and 5 are finished, come back here and see if we can add a list of state items associated with each database connection to make things easier to understand. i.e each database connection has a file handle, a set of entries in the page cache, an expected page size etc.</source>
          <target state="translated">TODO:セクション4と5が終わったら、ここに戻ってきて、各データベース接続に関連付けられた状態項目のリストを追加して、物事を理解しやすくすることができるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="4dc847eb4b63db6446f6040c4f09bb7ba16604ab" translate="yes" xml:space="preserve">
          <source>TODO:  After this document is ready, make the vocabulary consistent and then add a glossary here.</source>
          <target state="translated">TODO:この文書の準備ができたら、語彙を一貫性のあるものにしてから、ここに用語集を追加してください。</target>
        </trans-unit>
        <trans-unit id="f4e2201a943d83ad82ae3edd3d70f87d9d34b73f" translate="yes" xml:space="preserve">
          <source>TODO:  Describe the parameters set to configure the page cache limits.</source>
          <target state="translated">TODO:ページキャッシュの制限を設定するために設定されたパラメータを記述します。</target>
        </trans-unit>
        <trans-unit id="30bb6265750b23e36fff26fba218f095577396da" translate="yes" xml:space="preserve">
          <source>TODO:  Expand on and explain the above a bit.</source>
          <target state="translated">TODO:上記を少し拡大して説明する。</target>
        </trans-unit>
        <trans-unit id="55f19663a5c44b6305b426b72aadfc9a70eb894d" translate="yes" xml:space="preserve">
          <source>TODO:  Introduce the following sub-sections.</source>
          <target state="translated">TODO:以下のサブセクションを紹介します。</target>
        </trans-unit>
        <trans-unit id="593039ec1c1939952bb9949b2bcbe1140a495e60" translate="yes" xml:space="preserve">
          <source>TODO:  Is the shared lock held after committing a</source>
          <target state="translated">TODO:共有ロックをコミットした後、共有ロックは保持されていますか?</target>
        </trans-unit>
        <trans-unit id="c4a151926d0634538ee91af79c910ea2132025f5" translate="yes" xml:space="preserve">
          <source>TODO:  Master journal file pointers?</source>
          <target state="translated">TODO:マスタージャーナルファイルのポインタ?</target>
        </trans-unit>
        <trans-unit id="2c459077da83b75d52b821b2b77b9e73be290e1e" translate="yes" xml:space="preserve">
          <source>TODO:  Requirements describing the way in which the configuration parameters are used. About LRU etc.</source>
          <target state="translated">TODO.設定パラメータの使用方法を記述した要件 LRUなどについて。</target>
        </trans-unit>
        <trans-unit id="f7e945f52e85f69c533b2d7abf6ea281ed104013" translate="yes" xml:space="preserve">
          <source>TODO:  System requirement references for the above points.</source>
          <target state="translated">TODO:上記の点について、システム要件の参照を行います。</target>
        </trans-unit>
        <trans-unit id="840394002935b6f4d9da99212e26895929cd86d7" translate="yes" xml:space="preserve">
          <source>TODO:  What happens if the exclusive lock cannot be obtained? It is not possible for the attempt to upgrade from a reserved to a pending lock to fail.</source>
          <target state="translated">TODO:排他的ロックが取得できない場合はどうなりますか?予約されたロックから保留中のロックへのアップグレードの試みが失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="6714ad8471919f57bc47d379c3524d08542a02be" translate="yes" xml:space="preserve">
          <source>TODO:  Why a 16 byte block? Why not 4? (something to do with encrypted databases).</source>
          <target state="translated">TODO:なぜ16バイトブロックなのか?なぜ4ではないのか?(暗号化されたデータベースに関係するもの)。</target>
        </trans-unit>
        <trans-unit id="2e614c97a332a0295344a53ea5da2a36633b1954" translate="yes" xml:space="preserve">
          <source>TPC-H Q8 is an eight-way join. As observed above, the main task of the query planner is to figure out the best nesting order of the eight loops in order to minimize the work needed to complete the join. A simplified model of this problem for the case of TPC-H Q8 is shown by the following diagram:</source>
          <target state="translated">TPC-H Q8は8方向結合です。上で見たように、クエリプランナの主なタスクは、結合を完了するのに必要な作業を最小化するために、8つのループの最適な入れ子順序を見つけることです。TPC-H Q8の場合のこの問題の簡易モデルを以下の図に示します。</target>
        </trans-unit>
        <trans-unit id="bac722ed74faff65da62171d3c4183479a271d1f" translate="yes" xml:space="preserve">
          <source>TRANSACTION</source>
          <target state="translated">TRANSACTION</target>
        </trans-unit>
        <trans-unit id="c162c076dc07a546449be9e07aa7a5c312ecbfe1" translate="yes" xml:space="preserve">
          <source>TRIGGER</source>
          <target state="translated">TRIGGER</target>
        </trans-unit>
        <trans-unit id="74303786eb95ccd75228db361d37b804576e18e6" translate="yes" xml:space="preserve">
          <source>TRUNCATE</source>
          <target state="translated">TRUNCATE</target>
        </trans-unit>
        <trans-unit id="dc45fdb7de43a003177f8df9ee10d01f58f57a58" translate="yes" xml:space="preserve">
          <source>Table B-Tree Interior Cell (header 0x05):</source>
          <target state="translated">表B-ツリー内部セル(ヘッダ0x05)。</target>
        </trans-unit>
        <trans-unit id="984abe18431413aca60298750d5de10b6d8716c4" translate="yes" xml:space="preserve">
          <source>Table B-Tree Interior Cell:</source>
          <target state="translated">表B-ツリー内部のセル。</target>
        </trans-unit>
        <trans-unit id="94d19a21f457eb5da8f03166c4dbc3a6ef641531" translate="yes" xml:space="preserve">
          <source>Table B-Tree Leaf Cell (header 0x0d):</source>
          <target state="translated">表 B-Tree リーフセル(ヘッダ 0x0d)。</target>
        </trans-unit>
        <trans-unit id="31beedcdbc76a09dd63a101eacf4e15dc87e80c5" translate="yes" xml:space="preserve">
          <source>Table B-Tree Leaf Cell:</source>
          <target state="translated">表B-木の葉のセル。</target>
        </trans-unit>
        <trans-unit id="cdad59a82a2e26e2fc2225d0629f7733aef385c4" translate="yes" xml:space="preserve">
          <source>Table Column Names</source>
          <target state="translated">テーブルカラム名</target>
        </trans-unit>
        <trans-unit id="1225362d8c3c05de317acf9684ffe2e1a7649c08" translate="yes" xml:space="preserve">
          <source>Table Interior (0x05)</source>
          <target state="translated">テーブル内部 (0x05)</target>
        </trans-unit>
        <trans-unit id="de156b09866349ad52b0a535e8144a86d129a154" translate="yes" xml:space="preserve">
          <source>Table Leaf (0x0d)</source>
          <target state="translated">テーブルリーフ(0x0d</target>
        </trans-unit>
        <trans-unit id="c27c7c360e130231f97ba874c98e3448dd648d35" translate="yes" xml:space="preserve">
          <source>Table Name</source>
          <target state="translated">テーブル名</target>
        </trans-unit>
        <trans-unit id="6a975d3ec2f404cfb761b1314fc6745ca72f942e" translate="yes" xml:space="preserve">
          <source>Table b-tree</source>
          <target state="translated">表b-木</target>
        </trans-unit>
        <trans-unit id="92db13efcb630c92ecf1220fd763e9d0e237c97e" translate="yes" xml:space="preserve">
          <source>Table name</source>
          <target state="translated">テーブル名</target>
        </trans-unit>
        <trans-unit id="cf3467c6281e0ea2be2b55952d6893e3fbba049d" translate="yes" xml:space="preserve">
          <source>Table or index entries that are out of sequence</source>
          <target state="translated">順序から外れたテーブルまたはインデックスエントリ</target>
        </trans-unit>
        <trans-unit id="70aee3388a925e7cbb0852fe8dcdd4c402a95fd1" translate="yes" xml:space="preserve">
          <source>Table zTable does not exist within database zDb,</source>
          <target state="translated">テーブル zTable がデータベース zDb 内に存在しません。</target>
        </trans-unit>
        <trans-unit id="8886ec4df0da407409b6e2c6457e09d78592c0c0" translate="yes" xml:space="preserve">
          <source>Table zTable is a WITHOUT ROWID table,</source>
          <target state="translated">テーブル zTable は、WITHOUT ROWID テーブルです。</target>
        </trans-unit>
        <trans-unit id="053f4c073c904977c9ac1e40ab060f8397a0907f" translate="yes" xml:space="preserve">
          <source>Table-name must already exists as a table. File-name must exist, and each row must contain the same number of columns as defined in the table. If a line in the file contains more or less than the number of columns defined, the copy method rollbacks any inserts, and returns an error.</source>
          <target state="translated">テーブル名は、テーブルとして既に存在している必要があります。ファイル名が存在し、各行にはテーブルで定義されているのと同じ数の列が含まれていなければなりません。ファイル内の行に定義されている列数よりも多い、または少ない列数が含まれている場合、コピーメソッドは挿入をロールバックし、エラーを返します。</target>
        </trans-unit>
        <trans-unit id="aea731c8e5cbf2292cf08d50a7760fa0d709eb35" translate="yes" xml:space="preserve">
          <source>Table-valued Functions In The FROM Clause</source>
          <target state="translated">FROM句でのテーブル値関数</target>
        </trans-unit>
        <trans-unit id="fc3ba8bea68a8b6f73ff90024cfd6082eaf4a791" translate="yes" xml:space="preserve">
          <source>Table-valued functions</source>
          <target state="translated">テーブル値関数</target>
        </trans-unit>
        <trans-unit id="b503117e6dd30a0beff0cc1ab7fb7d005000dd03" translate="yes" xml:space="preserve">
          <source>Table-valued functions exist only for PRAGMAs that return results and that have no side-effects.</source>
          <target state="translated">テーブル値関数は、結果を返し、副作用のないPRAGMAに対してのみ存在します。</target>
        </trans-unit>
        <trans-unit id="f155ed85208e2d25c37ff0660af9e88e0ce41331" translate="yes" xml:space="preserve">
          <source>Table-valued functions exist only for built-in PRAGMAs, not for PRAGMAs defined using the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control.</source>
          <target state="translated">テーブル値関数は、組み込みのPRAGMAにのみ存在し、&lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt;ファイルコントロールを使用して定義されたPRAGMAには存在しません。</target>
        </trans-unit>
        <trans-unit id="81ea5c3f4a86eb9511e7fd13ab5c2a7a105f6e9f" translate="yes" xml:space="preserve">
          <source>TableLock</source>
          <target state="translated">TableLock</target>
        </trans-unit>
        <trans-unit id="c52e87aa9f54904a290a1ea1125feb8f0b12b884" translate="yes" xml:space="preserve">
          <source>Tables are removed using the &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; statement.</source>
          <target state="translated">テーブルは、&lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt;ステートメントを使用して削除されます。</target>
        </trans-unit>
        <trans-unit id="5bee9f4ba2588a4abe8a5e77c961e698fb909d93" translate="yes" xml:space="preserve">
          <source>Tables created using CREATE TABLE AS are initially populated with the rows of data returned by the SELECT statement. Rows are assigned contiguously ascending &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; values, starting with 1, in the &lt;a href=&quot;lang_select#orderby&quot;&gt;order&lt;/a&gt; that they are returned by the SELECT statement.</source>
          <target state="translated">CREATE TABLE ASを使用して作成されたテーブルには、最初にSELECTステートメントによって返されたデータの行が入力されます。行には、SELECTステートメントによって返される&lt;a href=&quot;lang_select#orderby&quot;&gt;順序&lt;/a&gt;で、1から始まる連続した昇順の&lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="0b08405f06556bfc4a2cd40880fee5d5df353fe5" translate="yes" xml:space="preserve">
          <source>Tables created using the &quot;CREATE TEMP TABLE&quot; syntax are only visible to the &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; in which the &quot;CREATE TEMP TABLE&quot; statement is originally evaluated. These TEMP tables, together with any associated indices, triggers, and views, are collectively stored in a separate temporary database file that is created as soon as the first &quot;CREATE TEMP TABLE&quot; statement is seen. This separate temporary database file also has an associated rollback journal. The temporary database file used to store TEMP tables is deleted automatically when the &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; is closed using &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close()&lt;/a&gt;.</source>
          <target state="translated">「CREATE TEMP TABLE」構文を使用して作成されたテーブルは、「CREATE TEMP TABLE」ステートメントが最初に評価された&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;でのみ表示されます。これらのTEMPテーブルは、関連するインデックス、トリガー、およびビューとともに、最初の &quot;CREATE TEMP TABLE&quot;ステートメントが表示されるとすぐに作成される別の一時データベースファイルにまとめて保存されます。この個別の一時データベースファイルには、関連するロールバックジャーナルもあります。 TEMPテーブルの格納に使用される一時データベースファイルは、&lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close（）&lt;/a&gt;を使用して&lt;a href=&quot;c3ref/sqlite3&quot;&gt;データベース接続&lt;/a&gt;が閉じられると自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="398c675fc2fa417398cf9f153388d4a182136954" translate="yes" xml:space="preserve">
          <source>Tables in an attached database can be referred to using the syntax</source>
          <target state="translated">アタッチされたデータベースのテーブルは、以下の構文を使用して参照することができます。</target>
        </trans-unit>
        <trans-unit id="230baa2e574ece0e6ffe7c574dcbbb9cd18fff76" translate="yes" xml:space="preserve">
          <source>Tables with names of the form &quot;sqlite_statN&quot; where N is an integer. Such tables store database statistics gathered by the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command and used by the query planner to help determine the best algorithm to use for each query.</source>
          <target state="translated">&quot;sqlite_statN&quot;という形式の名前を持つテーブル。Nは整数です。このようなテーブルは、&lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;コマンドによって収集され、クエリプランナーが各クエリに使用する最適なアルゴリズムを決定するのに役立つデータベース統計を格納します。</target>
        </trans-unit>
        <trans-unit id="6dbeddaf590f294decd7c12cd9b3ac14168d3997" translate="yes" xml:space="preserve">
          <source>Take advantage of the atomic-write capabilities in the &lt;a href=&quot;https://en.wikipedia.org/wiki/F2FS&quot;&gt;F2FS filesystem&lt;/a&gt; when available, for greatly reduced transaction overhead. This currently requires the &lt;a href=&quot;compile#enable_batch_atomic_write&quot;&gt;SQLITE_ENABLE_BATCH_ATOMIC_WRITE&lt;/a&gt; compile-time option.</source>
          <target state="translated">トランザクションのオーバーヘッドを大幅に削減するために、&lt;a href=&quot;https://en.wikipedia.org/wiki/F2FS&quot;&gt;F2FSファイルシステム&lt;/a&gt;のアトミック書き込み機能を利用できる場合はそれを利用してください。これには現在、&lt;a href=&quot;compile#enable_batch_atomic_write&quot;&gt;SQLITE_ENABLE_BATCH_ATOMIC_WRITE&lt;/a&gt;コンパイル時オプションが必要です。</target>
        </trans-unit>
        <trans-unit id="acf997da6bf4365bf440bc3ad9c07d7d7925e743" translate="yes" xml:space="preserve">
          <source>Take into account the fact WHERE clause terms that cannot be used with indices still probably reduce the number of output rows.</source>
          <target state="translated">インデックスを使用できないWHERE句の用語は、おそらく出力行の数を減らすという事実を考慮に入れてください。</target>
        </trans-unit>
        <trans-unit id="c2975a6466c6b11f1519a6c8652f37b3cef0c265" translate="yes" xml:space="preserve">
          <source>Take the bit-wise AND of the values in register P1 and P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP1とP2の値をビット単位でANDし、その結果をレジスタP3に格納します。どちらかの入力がNULLの場合、結果はNULLになります。</target>
        </trans-unit>
        <trans-unit id="23882df60c1b18a8b147b1926280887dfe7acb8a" translate="yes" xml:space="preserve">
          <source>Take the bit-wise OR of the values in register P1 and P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">レジスタP1とP2の値をビット単位でORし、その結果をレジスタP3に格納します。どちらかの入力がNULLの場合、結果はNULLになります。</target>
        </trans-unit>
        <trans-unit id="6a0b05dea29609663a6574c364045bd831c5b261" translate="yes" xml:space="preserve">
          <source>Take the logical AND of the values in registers P1 and P2 and write the result into register P3.</source>
          <target state="translated">レジスタP1とP2の値の論理ANDを取り、その結果をレジスタP3に書き込む。</target>
        </trans-unit>
        <trans-unit id="9fe2090d6b7e599d38b33eca83b4b2c09d8a131d" translate="yes" xml:space="preserve">
          <source>Take the logical OR of the values in register P1 and P2 and store the answer in register P3.</source>
          <target state="translated">レジスタP1とP2の値の論理和を取り、その答えをレジスタP3に格納します。</target>
        </trans-unit>
        <trans-unit id="86743ec77172a00f99a2bc089314b61779948598" translate="yes" xml:space="preserve">
          <source>Taking into consideration all of the above, the SQLite developers recommend compiling SQLite using GCC-7 with the -Os optimization setting.</source>
          <target state="translated">以上のことを考慮して、SQLite開発者は、GCC-7を使用してSQLiteをコンパイルする際に、-Osの最適化設定を行うことを推奨しています。</target>
        </trans-unit>
        <trans-unit id="76c9ad6f3798c330d93462b6d6a9dc1c1bbb0620" translate="yes" xml:space="preserve">
          <source>Tarball</source>
          <target state="translated">Tarball</target>
        </trans-unit>
        <trans-unit id="81919e9867e82f4145f1c83ee343766917076a71" translate="yes" xml:space="preserve">
          <source>Tcl Interface</source>
          <target state="translated">Tcl インタフェース</target>
        </trans-unit>
        <trans-unit id="5962096d8eee555590e081b0968ff7c28d5fa0d8" translate="yes" xml:space="preserve">
          <source>Tcl command. Here is an example of opening and then immediately closing a database:</source>
          <target state="translated">Tclコマンドです。データベースを開いてすぐに閉じる例を示します。</target>
        </trans-unit>
        <trans-unit id="30d70929c5f61502f6c778af83fbc14057a6c36d" translate="yes" xml:space="preserve">
          <source>Tcl interface allows BLOB values to be transferred to user-defined functions</source>
          <target state="translated">Tcl インタフェースにより、BLOB 値をユーザー定義関数に転送することができます。</target>
        </trans-unit>
        <trans-unit id="82fe9aa4119c1f18902f153a0d50a82f529e5cfb" translate="yes" xml:space="preserve">
          <source>Tcl variable names can appear in the SQL statement of the second argument in any position where it is legal to put a string or number literal. The value of the variable is substituted for the variable name. If the variable does not exist a NULL values is used. For example:</source>
          <target state="translated">Tclの変数名は、第2引数のSQL文の中で、文字列や数値リテラルを置くことが適法である任意の位置に出現させることができます。変数の値が変数名に置き換えられます。変数が存在しない場合は、NULL値が使用されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2087e1ec9a4eee3edea091cbf4ce24dad9709230" translate="yes" xml:space="preserve">
          <source>Technical and Design Documentation</source>
          <target state="translated">技術資料と設計資料</target>
        </trans-unit>
        <trans-unit id="b6d6d722a0223fd3e9343b1f4796db6a665b091d" translate="yes" xml:space="preserve">
          <source>Temporary Databases</source>
          <target state="translated">テンポラリーデータベース</target>
        </trans-unit>
        <trans-unit id="6035a1db7f899a29bfadee59c52d9c07fdd98c4f" translate="yes" xml:space="preserve">
          <source>Temporary Files Used By SQLite</source>
          <target state="translated">SQLite で使用される一時ファイル</target>
        </trans-unit>
        <trans-unit id="9fb2a1ec0fce944f3e17c8ab4b4f05b81d7ac8a9" translate="yes" xml:space="preserve">
          <source>Temporary directory search algorithm</source>
          <target state="translated">テンポラリーディレクトリ検索アルゴリズム</target>
        </trans-unit>
        <trans-unit id="72f84f0ca9f1ad9f151e46cd589374308dcbfc81" translate="yes" xml:space="preserve">
          <source>Temporary files are always stored in memory regardless of the setting of the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_storeプラグマの&lt;/a&gt;設定に関係なく、一時ファイルは常にメモリに保存されます。</target>
        </trans-unit>
        <trans-unit id="92a5156680aa1ea2c11db1f65a26abbd9db39a63" translate="yes" xml:space="preserve">
          <source>Temporary files are always stored on disk regardless of the setting of the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_storeプラグマの&lt;/a&gt;設定に関係なく、一時ファイルは常にディスクに保存されます。</target>
        </trans-unit>
        <trans-unit id="7777ca8353568841ffb0454d79b2cf5d09f1f51b" translate="yes" xml:space="preserve">
          <source>Temporary files are now automatically deleted by the operating system when closed. There are no more dangling temporary files on a program crash. (If the OS crashes, fsck will delete the file after reboot under Unix. I do not know what happens under Windows.)</source>
          <target state="translated">一時ファイルは、閉じたときにオペレーティングシステムによって自動的に削除されるようになりました。プログラムクラッシュ時に一時ファイルがぶら下がることがなくなりました。(OSがクラッシュした場合、Unixでは再起動後にfsckがファイルを削除します。Windowsではどうなるのかは知りません)。</target>
        </trans-unit>
        <trans-unit id="96da9e1a1910e6d40a0e879229d60b3a31a1bf7a" translate="yes" xml:space="preserve">
          <source>Temporary files are stored in memory by default but this can be overridden by the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt;.</source>
          <target state="translated">一時ファイルはデフォルトでメモリに保存されますが、これは&lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_storeプラグマ&lt;/a&gt;によってオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="11e15117ca75e55537b6f5f3dded721aee297def" translate="yes" xml:space="preserve">
          <source>Temporary files are stored on disk by default but this can be overridden by the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt;.</source>
          <target state="translated">一時ファイルはデフォルトでディスクに保存されますが、これは&lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_storeプラグマ&lt;/a&gt;によってオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="7500f7d38f84089cbb32d6695814260f35c022d2" translate="yes" xml:space="preserve">
          <source>Temporary journal files are created as part of transaction control, but those extra files are not part of the steady-state database.</source>
          <target state="translated">一時的なジャーナル・ファイルはトランザクション制御の一部として作成されますが、これらの余分なファイルは定常状態データベースの一部ではありません。</target>
        </trans-unit>
        <trans-unit id="455a1e08ff236bc4fc37f10c45a4f1a9d962e921" translate="yes" xml:space="preserve">
          <source>Temporary tables</source>
          <target state="translated">仮設テーブル</target>
        </trans-unit>
        <trans-unit id="4dff3aa4061b74df07e184cd766c027d8d0851b5" translate="yes" xml:space="preserve">
          <source>Terminate the sqlite3 program by typing your system End-Of-File character (usually a Control-D). Use the interrupt character (usually a Control-C) to stop a long-running SQL statement.</source>
          <target state="translated">システムのEnd-Of-File文字(通常はControl-D)を入力してsqlite3プログラムを終了させてください。割り込み文字(通常はControl-C)を使用して、実行中のSQL文を停止させます。</target>
        </trans-unit>
        <trans-unit id="f859f91a5306999f44ef0e2194daef49cbdeb611" translate="yes" xml:space="preserve">
          <source>Terminating a read-only transaction.</source>
          <target state="translated">読み取り専用のトランザクションを終了します。</target>
        </trans-unit>
        <trans-unit id="46428866c7ab286d2c6ac557b2373b6b72377ee3" translate="yes" xml:space="preserve">
          <source>Terms of the ORDER BY clause that is part of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement may be assigned a collating sequence using the &lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE operator&lt;/a&gt;, in which case the specified collating function is used for sorting. Otherwise, if the expression sorted by an ORDER BY clause is a column, then the collating sequence of the column is used to determine sort order. If the expression is not a column and has no COLLATE clause, then the BINARY collating sequence is used.</source>
          <target state="translated">&lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt;ステートメントの一部であるORDER BY句の条件には、&lt;a href=&quot;lang_expr#collateop&quot;&gt;COLLATE演算子&lt;/a&gt;を使用して照合シーケンスを割り当てることができます。その場合、指定された照合関数がソートに使用されます。それ以外の場合、ORDER BY句で並べ替えられた式が列の場合、列の照合シーケンスを使用して並べ替え順序が決定されます。式が列ではなく、COLLATE句がない場合、BINARY照合シーケンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="1cb252ee8cea482226d27c4a24f04af58befef27" translate="yes" xml:space="preserve">
          <source>Terms of the WHERE clause can be manually disqualified for use with indices by prepending a unary *+* operator to the column name. The unary *+* is a no-op and will not generate any byte code in the prepared statement. But the unary *+* operator will prevent the term from constraining an index. So, in the example above, if the query were rewritten as:</source>
          <target state="translated">WHERE句の用語は、列名の前に単項演算子*+*を付加することで、インデックスでの使用を手動で無効にすることができます。単項演算子 *+*は無効であり、準備された文の中にバイトコードを生成しません。しかし、単項演算子 *+*は、項がインデックスを制約することを防ぎます。そこで、上の例では、クエリが次のように書き換えられていたとします。</target>
        </trans-unit>
        <trans-unit id="db8a7aee242ffd686d07e20367e523410ddf047e" translate="yes" xml:space="preserve">
          <source>Test 10: 25000 text UPDATEs with an index</source>
          <target state="translated">テスト10:インデックスを持つ25000テキストのUPDATE</target>
        </trans-unit>
        <trans-unit id="aacbc05d861c7b90deae327687214123e261d5d7" translate="yes" xml:space="preserve">
          <source>Test 11: INSERTs from a SELECT</source>
          <target state="translated">テスト11:SELECTからのINSERT</target>
        </trans-unit>
        <trans-unit id="aca64bdf90089bb1a7f070072ce5ba7eb929e0ca" translate="yes" xml:space="preserve">
          <source>Test 12: DELETE without an index</source>
          <target state="translated">テスト12:インデックスなしのDELETE</target>
        </trans-unit>
        <trans-unit id="24752c37e60c377f791b489053904e7999992109" translate="yes" xml:space="preserve">
          <source>Test 13: DELETE with an index</source>
          <target state="translated">テスト13:インデックスを使ったDELETE</target>
        </trans-unit>
        <trans-unit id="00cb0edebe54a9c5c407d066d9fcba0da202194b" translate="yes" xml:space="preserve">
          <source>Test 14: A big INSERT after a big DELETE</source>
          <target state="translated">テスト14:大きなDELETEの後の大きなINSERT</target>
        </trans-unit>
        <trans-unit id="8033466c1d65a1a2a0c68dc77e0e42697e35f88b" translate="yes" xml:space="preserve">
          <source>Test 15: A big DELETE followed by many small INSERTs</source>
          <target state="translated">テスト15:多くの小さなINSERTが続く大きなDELETE</target>
        </trans-unit>
        <trans-unit id="391b748d4bf30ad6ba35b1537b20fb9263b9be11" translate="yes" xml:space="preserve">
          <source>Test 16: DROP TABLE</source>
          <target state="translated">テスト16:DROP TABLE</target>
        </trans-unit>
        <trans-unit id="700f1cfb18cec62b7bd8f4bd15b16b69774b094a" translate="yes" xml:space="preserve">
          <source>Test 1: 1000 INSERTs</source>
          <target state="translated">テスト1:1000個のINSERT</target>
        </trans-unit>
        <trans-unit id="a74380705222d36f436d75c90099251831b68c6d" translate="yes" xml:space="preserve">
          <source>Test 2: 25000 INSERTs in a transaction</source>
          <target state="translated">テスト2:トランザクション内の25000 INSERT</target>
        </trans-unit>
        <trans-unit id="d01c89b36c5ea1e456013c3cc10174d42005deaa" translate="yes" xml:space="preserve">
          <source>Test 3: 25000 INSERTs into an indexed table</source>
          <target state="translated">テスト3:インデックス付きテーブルへの25000 INSERT</target>
        </trans-unit>
        <trans-unit id="5150380a9467a7720fe9216afc4866b3aea9f992" translate="yes" xml:space="preserve">
          <source>Test 4: 100 SELECTs without an index</source>
          <target state="translated">テスト4:インデックスのないSELECTを100個</target>
        </trans-unit>
        <trans-unit id="2d07089542c5b6e56dea3631a868016dd2267c55" translate="yes" xml:space="preserve">
          <source>Test 5: 100 SELECTs on a string comparison</source>
          <target state="translated">テスト5:文字列の比較で100のSELECTを行う</target>
        </trans-unit>
        <trans-unit id="1ee313e9981650c288efefb71dc3528b68b2a91a" translate="yes" xml:space="preserve">
          <source>Test 6: Creating an index</source>
          <target state="translated">テスト6:インデックスの作成</target>
        </trans-unit>
        <trans-unit id="e0797e7844f18b5e63c9d2f6207a7266e87d829e" translate="yes" xml:space="preserve">
          <source>Test 7: 5000 SELECTs with an index</source>
          <target state="translated">テスト7:インデックスを持つ5000個のSELECT</target>
        </trans-unit>
        <trans-unit id="fccbfc70f55db2b38d057e5e2decb47d90df070e" translate="yes" xml:space="preserve">
          <source>Test 8: 1000 UPDATEs without an index</source>
          <target state="translated">テスト8:インデックスなしの1000 UPDATE</target>
        </trans-unit>
        <trans-unit id="47ad12d810778d98e72de67605dc988105d4b09b" translate="yes" xml:space="preserve">
          <source>Test 9: 25000 UPDATEs with an index</source>
          <target state="translated">テスト9:インデックスを持つ25000回のUPDATE</target>
        </trans-unit>
        <trans-unit id="18a302ee283ea042f30ca2cb852a2846f97c9413" translate="yes" xml:space="preserve">
          <source>Test Code</source>
          <target state="translated">テストコード</target>
        </trans-unit>
        <trans-unit id="fbcf57d6160711801ae44b031c459127add7faaa" translate="yes" xml:space="preserve">
          <source>Test Environment</source>
          <target state="translated">テスト環境</target>
        </trans-unit>
        <trans-unit id="a76dd0a3dd495aa45fe2a39614c44782afcb01ca" translate="yes" xml:space="preserve">
          <source>Test For Auto-Commit Mode</source>
          <target state="translated">自動コミットモードのテスト</target>
        </trans-unit>
        <trans-unit id="c05597ed0dba53dda21d6b294858039879f34b2b" translate="yes" xml:space="preserve">
          <source>Test To See If The Library Is Threadsafe</source>
          <target state="translated">ライブラリがスレッドセーフかどうかのテスト</target>
        </trans-unit>
        <trans-unit id="02446da6bfd0c0c261b870c2d7a5bfb426f2969d" translate="yes" xml:space="preserve">
          <source>Test data unavailable.</source>
          <target state="translated">テストデータが利用できません。</target>
        </trans-unit>
        <trans-unit id="a364e52356a7ca07cff67161e3755ffa1a5b6b19" translate="yes" xml:space="preserve">
          <source>Test if a changeset has recorded any changes</source>
          <target state="translated">チェンジセットに変更が記録されているかどうかをテストする</target>
        </trans-unit>
        <trans-unit id="0687fd76855654ace6e8592132670b232e8466bb" translate="yes" xml:space="preserve">
          <source>Test if a changeset has recorded any changes.</source>
          <target state="translated">チェンジセットに変更が記録されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="975278e4cf4ae85f07454f0bd57ddce6fc5bd9a5" translate="yes" xml:space="preserve">
          <source>Testcase macros are also used when two or more cases of a switch statement go to the same block of code, to make sure that the code was reached for all cases:</source>
          <target state="translated">テストケースマクロは、switch文の2つ以上のケースが同じコードブロックに行く場合にも使用され、すべてのケースでコードが到達したことを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c5d38ba7cbc400f9b209719e16e540214a64776c" translate="yes" xml:space="preserve">
          <source>Testing Interface</source>
          <target state="translated">テストインタフェース</target>
        </trans-unit>
        <trans-unit id="8adc754de4730d9303e4e9dfdc04c11250d45d3c" translate="yes" xml:space="preserve">
          <source>Testing Interface Operation Codes</source>
          <target state="translated">テストインタフェース操作コード</target>
        </trans-unit>
        <trans-unit id="61b27896db003bc4e45807f83422aff3b0ba8af9" translate="yes" xml:space="preserve">
          <source>Testing of both source code and object code</source>
          <target state="translated">ソースコードとオブジェクトコードの両方のテスト</target>
        </trans-unit>
        <trans-unit id="e1859263f675753d24029e449e12bbca3196f641" translate="yes" xml:space="preserve">
          <source>Testing on multiple platforms and with multiple compilers</source>
          <target state="translated">複数のプラットフォームと複数のコンパイラでのテスト</target>
        </trans-unit>
        <trans-unit id="c9efb9d787a1a844d9d75c706c96b2d104de210f" translate="yes" xml:space="preserve">
          <source>Text Encodings</source>
          <target state="translated">テキストエンコーディング</target>
        </trans-unit>
        <trans-unit id="104683d616e58eaef10d6dc4873ecdc3df7b2908" translate="yes" xml:space="preserve">
          <source>Text encoding</source>
          <target state="translated">テキストエンコーディング</target>
        </trans-unit>
        <trans-unit id="e12c4eeb80ad1f4c53769014c35b62416e040202" translate="yes" xml:space="preserve">
          <source>Text files read by the COPY command can now have line terminators of LF, CRLF, or CR.</source>
          <target state="translated">COPYコマンドで読み込まれたテキストファイルにLF、CRLF、CRの行終端文字を付けることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="cc9a8c0f2eca40d02a98349a624352ec809c4662" translate="yes" xml:space="preserve">
          <source>Text is appended to the sqlite3_str object using various methods, such as &lt;a href=&quot;#sqlite3_str_append&quot;&gt;sqlite3_str_appendf()&lt;/a&gt;.</source>
          <target state="translated">テキストは、&lt;a href=&quot;#sqlite3_str_append&quot;&gt;sqlite3_str_appendf（）&lt;/a&gt;などのさまざまなメソッドを使用してsqlite3_strオブジェクトに追加されます。</target>
        </trans-unit>
        <trans-unit id="3f06b000ef5df2cf2524013049769bc8b85cadef" translate="yes" xml:space="preserve">
          <source>Text is appended to the sqlite3_str object using various methods, such as &lt;a href=&quot;str_append&quot;&gt;sqlite3_str_appendf()&lt;/a&gt;.</source>
          <target state="translated">テキストは、&lt;a href=&quot;str_append&quot;&gt;sqlite3_str_appendf（）&lt;/a&gt;などのさまざまなメソッドを使用してsqlite3_strオブジェクトに追加されます。</target>
        </trans-unit>
        <trans-unit id="65ebd99ce12ebe199710e41e33f5f3620f55ed7a" translate="yes" xml:space="preserve">
          <source>Text values (odd serial types 13 and larger) sort after numeric values in the order determined by the columns &lt;a href=&quot;datatype3#collation&quot;&gt;collating function&lt;/a&gt;.</source>
          <target state="translated">テキスト値（奇数シリアルタイプ13以上）は、列&lt;a href=&quot;datatype3#collation&quot;&gt;照合関数&lt;/a&gt;によって決定された順序で数値の後にソートされます。</target>
        </trans-unit>
        <trans-unit id="beca9771feb98f615524a1df72482f4458f93607" translate="yes" xml:space="preserve">
          <source>Text values come after numerics</source>
          <target state="translated">テキスト値は数値の後に来る</target>
        </trans-unit>
        <trans-unit id="938716cf9d2d773dc94de020d7864e49e44b2b9d" translate="yes" xml:space="preserve">
          <source>Th functionality described in this section may be integrated into other applications or tools using the &lt;a href=&quot;http://www.sqlite.org/src/dir?ci=trunk&amp;amp;name=ext/expert&quot;&gt; SQLite expert extension&lt;/a&gt; code.</source>
          <target state="translated">このセクションで説明する機能は、&lt;a href=&quot;http://www.sqlite.org/src/dir?ci=trunk&amp;amp;name=ext/expert&quot;&gt;SQLiteエキスパート拡張&lt;/a&gt;コードを使用して他のアプリケーションまたはツールに統合できます。</target>
        </trans-unit>
        <trans-unit id="5401c7212b5c2e26aee89d6b33a167be2b97f64d" translate="yes" xml:space="preserve">
          <source>That command only works as written on Windows. The equivalent line on a Mac would be:</source>
          <target state="translated">このコマンドは Windows 上でしか動作しません。Macでは、これに相当する行は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5b3c3c06cd257877a1f47703881aa426e835ba23" translate="yes" xml:space="preserve">
          <source>That last command is the same &quot;ui&quot; command that we ran before. It starts a mini-webserver running and points your web browser at it. But this time we didn't have to specify the repository file because we are located inside a checkout and so fossil can figure out the repository for itself. If you want to type in the repository filename as the second argument, you can. But it is optional.</source>
          <target state="translated">最後のコマンドは、前に実行したのと同じ &quot;ui&quot; コマンドです。ミニウエブサーバを起動して、そこにウェブブラウザを向けます。しかし、今回はリポジトリファイルを指定する必要はありませんでした。第二引数にリポジトリファイル名を入力したい場合は、入力しても構いません。しかし、これは任意です。</target>
        </trans-unit>
        <trans-unit id="3ec5cf39a76e0d09154e1a51128f437190f411ce" translate="yes" xml:space="preserve">
          <source>That said, there are a number of things that external programs or bugs in your hardware or OS can do to corrupt a database file. See &lt;a href=&quot;howtocorrupt&quot;&gt;How To Corrupt An SQLite Database File&lt;/a&gt; for further information.</source>
          <target state="translated">そうは言っても、ハードウェアやOSの外部プログラムやバグがデータベースファイルを破壊するためにできることはたくさんあります。詳細については、&lt;a href=&quot;howtocorrupt&quot;&gt;SQLiteデータベースファイルを破損する方法を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ac09579911e9129dbe219b67c0bf67a294beccfa" translate="yes" xml:space="preserve">
          <source>That statement is ambiguous, having at least two possible interpretations:</source>
          <target state="translated">その文は曖昧で、少なくとも2つの解釈が考えられます。</target>
        </trans-unit>
        <trans-unit id="c679c2a5140d95b7fe5e7a9c937890448e4790a5" translate="yes" xml:space="preserve">
          <source>That there are the same number of entries in the %_parent table as there are non-leaf cells in the r-tree structure, and that there is a non-leaf cell that corresponds to each entry in the %_parent table.</source>
          <target state="translated">r-tree 構造内に非リーフ・セルがあるのと同じ数の %_parent テーブル内のエントリがあり、%_parent テーブル内の各エントリに対応する非リーフ・セルがあること。</target>
        </trans-unit>
        <trans-unit id="9bc14fa3c4653db3dfe511c9da292c9e32677da7" translate="yes" xml:space="preserve">
          <source>That there are the same number of entries in the %_rowid table as there are leaf cells in the r-tree structure, and that there is a leaf cell that corresponds to each entry in the %_rowid table.</source>
          <target state="translated">r-tree 構造内にリーフ・セルがあるのと同じ数の %_rowid テーブル内のエントリがあり、%_rowid テーブル内の各エントリに対応するリーフ・セルがあること。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="c3fcc1dd87de9c9ad15a933b970c62ff1decbfcb" translate="yes" xml:space="preserve">
          <source>The &quot;%&quot; in the name of each shadow table is replaced by the name of the R*Tree virtual table. So, if the name of the R*Tree table is &quot;xyz&quot; then the three shadow tables would be &quot;xyz_node&quot;, &quot;xyz_parent&quot;, and &quot;xyz_rowid&quot;.</source>
          <target state="translated">各シャドウ・テーブルの名前の「%」は、R*Tree仮想テーブルの名前に置き換えられます。つまり、R*Tree テーブルの名前が &quot;xyz&quot; である場合、3 つのシャドウ・テーブルは &quot;xyz_node&quot;、&quot;xyz_parent&quot;、および &quot;xyz_rowid&quot; となります。</target>
        </trans-unit>
        <trans-unit id="c0ac1d4dc22d0f78dbeef0512926462de5ac6f42" translate="yes" xml:space="preserve">
          <source>The &quot;-1&quot; term at the start of the formula is not found in most implementations of the BM25 algorithm. Without it, a better match is assigned a numerically higher BM25 score. Since the default sorting order is &quot;ascending&quot;, this means that appending &quot;ORDER BY bm25(fts)&quot; to a query would cause results to be returned in order from worst to best. The &quot;DESC&quot; keyword would be required in order to return the best matches first. In order to avoid this pitfall, the FTS5 implementation of BM25 multiplies the result by -1 before returning it, ensuring that better matches are assigned numerically lower scores.</source>
          <target state="translated">式の最初にある「-1」という用語は、BM25 アルゴリズムのほとんどの実装では見られません。この項がない場合、より良いマッチは数値的に高いBM25スコアが割り当てられます。デフォルトのソート順は &quot;昇順 &quot;なので、クエリに &quot;ORDER BY bm25(fts)&quot;を追加すると、結果が悪い順から良い順に返されることになります。ベストマッチを最初に返すためには、&quot;DESC &quot;キーワードが必要になります。この落とし穴を回避するために、FTS5のBM25の実装では、結果を返す前に結果に-1を乗算し、より良いマッチの方がより低いスコアが数値的に割り当てられるようにしています。</target>
        </trans-unit>
        <trans-unit id="e8a8a21328c61527fb3df55781ac56d188f8d80f" translate="yes" xml:space="preserve">
          <source>The &quot;.archive&quot; dot-command and the &quot;-A&quot; command-line option provide built-in support for the &lt;a href=&quot;sqlar&quot;&gt;SQLite Archive format&lt;/a&gt;. The interface is similar to that of the &quot;tar&quot; command on unix systems. Each invocation of the &quot;.ar&quot; command must specify a single command option. The following commands are available for &quot;.archive&quot;:</source>
          <target state="translated">「.archive」ドットコマンドと「-A」コマンドラインオプションは、&lt;a href=&quot;sqlar&quot;&gt;SQLiteアーカイブ形式の&lt;/a&gt;組み込みサポートを提供します。インターフェースは、UNIXシステムの「tar」コマンドのインターフェースに似ています。「.ar」コマンドを呼び出すたびに、単一のコマンドオプションを指定する必要があります。「.archive」では次のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="83487a27f6e8c5a3e4b3ee1c0c3210033e4ad993" translate="yes" xml:space="preserve">
          <source>The &quot;.breakpoint&quot; command in the CLI does nothing but invoke the procedure named &quot;test_breakpoint()&quot;, which is a no-op.</source>
          <target state="translated">CLIの&quot;.breakpoint &quot;コマンドは、&quot;test_breakpoint()&quot;という名前のプロシージャを呼び出すだけで、何もしません。</target>
        </trans-unit>
        <trans-unit id="469a3442411a65b2a429f963b79791f612ed7d6e" translate="yes" xml:space="preserve">
          <source>The &quot;.databases&quot; command shows a list of all databases open in the current connection. There will always be at least 2. The first one is &quot;main&quot;, the original database opened. The second is &quot;temp&quot;, the database used for temporary tables. There may be additional databases listed for databases attached using the ATTACH statement. The first output column is the name the database is attached with, and the second column is the filename of the external file.</source>
          <target state="translated">.databases &quot;コマンドは、現在の接続で開いているすべてのデータベースのリストを表示します。最初のものは &quot;main &quot;で、元のデータベースが開かれています。2つ目は &quot;temp &quot;で、一時的なテーブルに使用されるデータベースです。ATTACH文を使用してアタッチされたデータベースのために、追加のデータベースがリストアップされている場合があります。最初の出力カラムはデータベースがアタッチされた名前で、2番目のカラムは外部ファイルのファイル名です。</target>
        </trans-unit>
        <trans-unit id="ee926b57bed300f9a7e5c92f6be433c508e9bcc7" translate="yes" xml:space="preserve">
          <source>The &quot;.dump&quot; output from the shell does not work if there are embedded newlines anywhere in the data. This is an old bug that was carried forward from version 1.0. To fix it, the &quot;.dump&quot; output no longer uses the COPY command. It instead generates INSERT statements.</source>
          <target state="translated">データのどこかに改行が埋め込まれていると、シェルから出力される &quot;.dump&quot; が動作しない。これはバージョン1.0から引き継がれた古いバグです。これを修正するために、&quot;.dump &quot;出力ではCOPYコマンドを使用しなくなりました。代わりにINSERT文を生成します。</target>
        </trans-unit>
        <trans-unit id="1b85291d31b07e89b01fbd9925959d88473c2a10" translate="yes" xml:space="preserve">
          <source>The &quot;.excel&quot; command is an alias for &quot;.once -x&quot;. It does exactly the same thing.</source>
          <target state="translated">.excel」コマンドは「.once -x」の別名です。これは全く同じことをします。</target>
        </trans-unit>
        <trans-unit id="9686c64857b56634cf1d980b549835b7a48ecb3c" translate="yes" xml:space="preserve">
          <source>The &quot;.excel&quot; command is really an alias for &quot;.once -x&quot;. The -x option to .once causes it to writes results as CSV into a temporary file that is named with a &quot;.csv&quot; suffix, then invoke the systems default handler for CSV files.</source>
          <target state="translated">.excel &quot;コマンドは、実際には&quot;.once -x &quot;のエイリアスです。.onceに-xオプションを付けると、結果をCSVとして&quot;.csv &quot;という名前の一時ファイルに書き出し、CSVファイルのためのシステムのデフォルトハンドラを起動します。</target>
        </trans-unit>
        <trans-unit id="a0ea244938baaf074aedf53e702eadce70d483bf" translate="yes" xml:space="preserve">
          <source>The &quot;.expert&quot; command accepts the following options:</source>
          <target state="translated">.expert」コマンドは、以下のオプションを受け付けます。</target>
        </trans-unit>
        <trans-unit id="62869dd914f2d45ca628931082045505cc0aa98c" translate="yes" xml:space="preserve">
          <source>The &quot;.expert&quot; command is issued first, followed by the SQL query on a separate line. For example, consider the following session:</source>
          <target state="translated">最初に&quot;.expert &quot;コマンドが発行され、SQLクエリが別の行に続いて発行されます。例えば、次のようなセッションを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="bf73e6ae296e826f7923e0357132694890491637" translate="yes" xml:space="preserve">
          <source>The &quot;.fullschema&quot; dot-command works like the &quot;.schema&quot; command in that it displays the entire database schema. But &quot;.fullschema&quot; also includes dumps of the statistics tables &quot;sqlite_stat1&quot;, &quot;sqlite_stat3&quot;, and &quot;sqlite_stat4&quot;, if they exist. The &quot;.fullschema&quot; command normally provides all of the information needed to exactly recreate a query plan for a specific query. When reporting suspected problems with the SQLite query planner to the SQLite development team, developers are requested to provide the complete &quot;.fullschema&quot; output as part of the trouble report. Note that the sqlite_stat3 and sqlite_stat4 tables contain samples of index entries and so might contain sensitive data, so do not send the &quot;.fullschema&quot; output of a proprietary database over a public channel.</source>
          <target state="translated">.fullschema &quot;ドットコマンドは、データベース全体のスキーマを表示するという点で、&quot;.schema &quot;コマンドと同じように動作します。しかし、&quot;.fullschema &quot;は統計テーブル &quot;sqlite_stat1&quot;,&quot;sqlite_stat3&quot;,&quot;sqlite_stat4 &quot;が存在する場合、そのダンプも含みます。通常、&quot;.fullschema &quot;コマンドは、特定の問い合わせの問い合わせ計画を正確に再現するために必要なすべての情報を提供します。SQLite クエリプランナの問題が疑われる場合、SQLite開発チームに報告する際には、開発者はトラブルレポートの一部として&quot;.fulllschema &quot;の出力を提供するように要求されます。sqlite_stat3とsqlite_stat4テーブルにはインデックスエントリのサンプルが含まれており、機密データが含まれている可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8c41f773b4bec069e65cdeb1f84472339fd67927" translate="yes" xml:space="preserve">
          <source>The &quot;.genfkey&quot; operator has been removed from the &lt;a href=&quot;cli&quot;&gt;Command Line Interface&lt;/a&gt;.</source>
          <target state="translated">「.genfkey」演算子は、&lt;a href=&quot;cli&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;から削除されました。</target>
        </trans-unit>
        <trans-unit id="6da1e8e52719870c46e4714e803817bbb945c7a2" translate="yes" xml:space="preserve">
          <source>The &quot;.indexes&quot; command works in a similar way to list all of the indexes. If the &quot;.indexes&quot; command is given an argument which is the name of a table, then it shows just indexes on that table.</source>
          <target state="translated">.indexes &quot;コマンドは、すべてのインデックスを一覧表示するために同様の方法で動作します。もし &quot;.indexes&quot; コマンドにテーブル名を引数に与えた場合、そのテーブルのインデックスだけを表示します。</target>
        </trans-unit>
        <trans-unit id="332e81eb83bf30c51e9f2eb4830d160fd5e91b60" translate="yes" xml:space="preserve">
          <source>The &quot;.load&quot; command with one argument invokes sqlite3_load_extension() with the zProc parameter set to NULL, causing SQLite to first look for an entry point named &quot;sqlite3_extension_init&quot; and then &quot;sqlite3_X_init&quot; where &quot;X&quot; is derived from the filename. If your extension has an entry point with a different name, simply supply that name as the second argument. For example:</source>
          <target state="translated">1つの引数を持つ&quot;.load &quot;コマンドは、zProcパラメータをNULLに設定してsqlite3_load_extension()を起動し、SQLiteは最初に &quot;sqlite3_extension_init &quot;という名前のエントリポイントを探し、次に &quot;sqlite3_X_init &quot;という名前のエントリポイントを探し、ここで &quot;X &quot;はファイル名から派生したものです。拡張機能に別の名前のエントリポイントがある場合は、第二引数にその名前を与えるだけです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7e0f642688db88c440c3786a62b2e62ab2274b87" translate="yes" xml:space="preserve">
          <source>The &quot;.parameter&quot; command exists to simplify managing this table. The &quot;.parameter init&quot; command (often abbreviated as just &quot;.param init&quot;) creates the temp.sqlite_parameters table if it does not already exist. The &quot;.param list&quot; command shows all entries in the temp.sqlite_parameters table. The &quot;.param clear&quot; command drops the temp.sqlite_parameters table. The &quot;.param set KEY VALUE&quot; and &quot;.param unset KEY&quot; commands create or delete entries from the temp.sqlite_parameters table.</source>
          <target state="translated">.parameter &quot;コマンドは、このテーブルの管理を簡単にするために存在します。temp.sqlite_parametersテーブルがまだ存在しない場合、&quot;.parameter init &quot;コマンド(しばしば&quot;.param init &quot;と略されます)はtemp.sqlite_parametersテーブルを作成します。.param list &quot;コマンドは、temp.sqlite_parametersテーブル内の全てのエントリを表示します。.param clear &quot;コマンドはtemp.sqlite_parametersテーブルを削除します。.param set KEY VALUE &quot;と&quot;.param unset KEY &quot;コマンドは、 temp.sqlite_parametersテーブルからエントリを作成または削除します。</target>
        </trans-unit>
        <trans-unit id="789a156efc523de5bfce09730a51219cae2ec0c9" translate="yes" xml:space="preserve">
          <source>The &quot;.schema&quot; command can be augmented with the &quot;--indent&quot; option, in which case it tries to reformat the various CREATE statements of the schema so that they are more easily readable by humans.</source>
          <target state="translated">.schema &quot;コマンドは&quot;--indent &quot;オプションで拡張することができ、その場合、スキーマの様々なCREATE文を人間が読みやすいように再フォーマットしようとします。</target>
        </trans-unit>
        <trans-unit id="754968254f462d66877df03c1c7cd51953693cab" translate="yes" xml:space="preserve">
          <source>The &quot;.schema&quot; command is roughly the same as setting list mode, then entering the following query:</source>
          <target state="translated">.schema」コマンドは、リストモードを設定して、以下のクエリを入力するのとほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="7428559526f83a5c56d268af9889807faae2685e" translate="yes" xml:space="preserve">
          <source>The &quot;.schema&quot; command shows the complete schema for the database, or for a single table if an optional tablename argument is provided:</source>
          <target state="translated">.schema&quot; コマンドは、データベースの完全なスキーマを表示します。</target>
        </trans-unit>
        <trans-unit id="52ace065300c40138c37799338bd3ec51aca18df" translate="yes" xml:space="preserve">
          <source>The &quot;.schema&quot; command shows the structure of virtual tables.</source>
          <target state="translated">.schema」コマンドは、仮想テーブルの構造を表示します。</target>
        </trans-unit>
        <trans-unit id="73bcba8970e82dc921d7f4ec8db20bb33cbfb0a3" translate="yes" xml:space="preserve">
          <source>The &quot;.selftest --init&quot; command creates the selftest table if it does not already exists, then appends entries that check the SHA3 hash of the content of all tables. Subsequent runs of &quot;.selftest&quot; will verify that the database has not been changed in any way. To generates tests to verify that a subset of the tables are unchanged, simply run &quot;.selftest --init&quot; then &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; the selftest rows that refer to tables that are not constant.</source>
          <target state="translated">「.selftest --init」コマンドは、セルフテストテーブルがまだ存在しない場合は作成し、すべてのテーブルの内容のSHA3ハッシュをチェックするエントリを追加します。その後の「.selftest」の実行では、データベースが変更されていないことを確認します。テーブルのサブセットが変更されていないことを確認するテストを生成するには、「。selftest --init」を実行してから、定数でないテーブルを参照するセルフテスト行を&lt;a href=&quot;lang_delete&quot;&gt;削除&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="b23d6efbb796b87124747de656b1313433a59a58" translate="yes" xml:space="preserve">
          <source>The &quot;.selftest&quot; command attempts to verify that a database is intact and is not corrupt. The .selftest command looks for a table in schema named &quot;selftest&quot; and defined as follows:</source>
          <target state="translated">.selftest &quot;コマンドは、データベースが無傷であり、破損していないことを検証しようとします。.selftest コマンドは、&quot;selftest&quot; という名前のスキーマ内のテーブルを探し、以下のように定義します。</target>
        </trans-unit>
        <trans-unit id="da3394cbf6e430093bb273dc53c5c24290fb42a2" translate="yes" xml:space="preserve">
          <source>The &quot;.sha3sum&quot; command is implemented with the help of the &lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/shathree.c&quot;&gt;extension function &quot;sha3_query()&quot;&lt;/a&gt; that is included with the command-line shell.</source>
          <target state="translated">「.sha3sum」コマンドは、コマンドラインシェルに含まれている&lt;a href=&quot;https://www.sqlite.org/src/file/ext/misc/shathree.c&quot;&gt;拡張関数「sha3_query（）」&lt;/a&gt;を使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="49607863a0b317eaa9e0bb0334b35c6b17a96a09" translate="yes" xml:space="preserve">
          <source>The &quot;.sha3sum&quot; command supports options &quot;--sha3-224&quot;, &quot;--sha3-256&quot;, &quot;--sha3-384&quot;, and &quot;--sha3-512&quot; to define which variety of SHA3 to use for the hash. The default is SHA3-256.</source>
          <target state="translated">.sha3sum&quot; コマンドは、ハッシュに使用する SHA3 の種類を定義するためのオプション &quot;-sha3-224&quot;,&quot;-sha3-256&quot;,&quot;-sha3-384&quot;,および &quot;-sha3-512&quot; をサポートしています。デフォルトはSHA3-256です。</target>
        </trans-unit>
        <trans-unit id="e496b68fde3cba7a6d3e4d071d1b64676cd89817" translate="yes" xml:space="preserve">
          <source>The &quot;.sha3sum&quot; command takes a single optional argument which is a &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; pattern. If this option is present, only tables whose names match the &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; pattern will be hashed.</source>
          <target state="translated">「.sha3sum」コマンドは、&lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;パターンである単一のオプションの引数を取ります。このオプションが存在する場合、名前が&lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt;パターンに一致するテーブルのみがハッシュされます。</target>
        </trans-unit>
        <trans-unit id="b0e55e4c460c47133735d47238f402c87368287c" translate="yes" xml:space="preserve">
          <source>The &quot;.sha3sum&quot; dot-command computes a &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-3&quot;&gt;SHA3&lt;/a&gt; hash of the &lt;em&gt;content&lt;/em&gt; of the database. To be clear, the hash is computed over the database content, not its representation on disk. This means, for example, that a &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; or similar data-preserving transformation does not change the hash.</source>
          <target state="translated">「.sha3sum」ドットコマンドは、データベースの&lt;em&gt;コンテンツの&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-3&quot;&gt;SHA3&lt;/a&gt;ハッシュを計算します。明確にするために、ハッシュはディスク上の表現ではなく、データベースのコンテンツに対して計算されます。これは、たとえば、&lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;または同様のデータ保持変換によってハッシュが変更されないことを意味します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2252b9e19709b03f7ab086b59b1a77291173bd1" translate="yes" xml:space="preserve">
          <source>The &quot;.tables&quot; command is similar to setting list mode then executing the following query:</source>
          <target state="translated">.tables &quot;コマンドは、リストモードを設定して以下のクエリを実行するのと似ています。</target>
        </trans-unit>
        <trans-unit id="9eda9619ee5cbc80757e21696103e58ade470ff1" translate="yes" xml:space="preserve">
          <source>The &quot;.width&quot; command in the example above sets the width of the first column to 12 and the width of the second column to 6. All other column widths were unaltered. You can give as many arguments to &quot;.width&quot; as necessary to specify the widths of as many columns as are in your query results.</source>
          <target state="translated">上の例の「.width」コマンドは、1列目の幅を12に、2列目の幅を6に設定しています。他のすべての列の幅は変更されていません。.width &quot;に必要な数だけ引数を与えて、クエリ結果のカラムの幅を指定することができます。</target>
        </trans-unit>
        <trans-unit id="8d28508cd52964017863df7d9bff1bae6f7b1b73" translate="yes" xml:space="preserve">
          <source>The &quot;1&quot; at the end of the name for the json1 extension is deliberate. The designers anticipate that there will be future incompatible JSON extensions building upon the lessons learned from json1. Once sufficient experience is gained, some kind of JSON extension might be folded into the SQLite core. For now, JSON support remains an extension.</source>
          <target state="translated">json1 拡張モジュールの名前の最後の &quot;1 &quot;は意図的なものです。設計者は、将来的に互換性のないJSON拡張機能が、json1から学んだ教訓をもとに構築されることを予想しています。十分な経験が積めば、何らかのJSON拡張機能がSQLiteコアに組み込まれるかもしれません。今のところ、JSON のサポートは拡張機能のままです。</target>
        </trans-unit>
        <trans-unit id="ec1a7b1bff513b8dc885dad8096593de50c679b9" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;a href=&quot;cli#csv&quot;&gt;.import&lt;/a&gt;&quot; command ignores an initial UTF-8 BOM.</source>
          <target state="translated">「&lt;a href=&quot;cli#csv&quot;&gt;.import&lt;/a&gt;」コマンドは、最初のUTF-8 BOMを無視します。</target>
        </trans-unit>
        <trans-unit id="39a3b12173588647fa6bbe9bfdec68cffc6ff3a2" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;a href=&quot;syntax/select-stmt&quot;&gt;select-stmt&lt;/a&gt;&quot; must be a &lt;a href=&quot;lang_select#compound&quot;&gt;compound select&lt;/a&gt; where the right-most &lt;a href=&quot;syntax/compound-operator&quot;&gt;compound-operator&lt;/a&gt; is either UNION or UNION ALL.</source>
          <target state="translated">「&lt;a href=&quot;syntax/select-stmt&quot;&gt;select-stmt&lt;/a&gt;」は、最も右側の&lt;a href=&quot;syntax/compound-operator&quot;&gt;複合演算子&lt;/a&gt;がUNIONまたはUNION ALLのいずれかである&lt;a href=&quot;lang_select#compound&quot;&gt;複合選択&lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6e1ee86a4eb35dd217941c49a4c1f826afe5d0c7" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;a href=&quot;syntax/select-stmt&quot;&gt;select-stmt&lt;/a&gt;&quot; syntax diagram above attempts to show as much of the SELECT statement syntax as possible in a single diagram, because some readers find that helpful. The following &quot;&lt;a href=&quot;syntax/factored-select-stmt&quot;&gt;factored-select-stmt&lt;/a&gt;&quot; is an alternative syntax diagrams that expresses the same syntax but tries to break the syntax down into smaller chunks.</source>
          <target state="translated">上の「&lt;a href=&quot;syntax/select-stmt&quot;&gt;select-stmt&lt;/a&gt;」構文図では、単一の図でSELECTステートメントの構文をできるだけ多く表示しようとしています。次の「&lt;a href=&quot;syntax/factored-select-stmt&quot;&gt;factored-select-stmt&lt;/a&gt;」は、同じ構文を表すが、構文を小さなチャンクに分解しようとする代替構文図です。</target>
        </trans-unit>
        <trans-unit id="9f631ef63bea49256ea8a2d7bafc4554c3faedfb" translate="yes" xml:space="preserve">
          <source>The &quot;Application ID&quot; set by &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;PRAGMA application_id&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pragma#pragma_application_id&quot;&gt;PRAGMA application_id&lt;/a&gt;によって設定された「アプリケーションID」。</target>
        </trans-unit>
        <trans-unit id="f7f5d1070df133cbc828d184fa205995550d45fd" translate="yes" xml:space="preserve">
          <source>The &quot;CREATE TABLE&quot; command is used to create a new table in an SQLite database. A CREATE TABLE command specifies the following attributes of the new table:</source>
          <target state="translated">CREATE TABLE&quot; コマンドは、SQLite データベースに新しいテーブルを作成するために使用されます。CREATE TABLE コマンドは、新しいテーブルの以下の属性を指定します。</target>
        </trans-unit>
        <trans-unit id="5736b1f20cbfd4541c75d144c2bb263b3a789707" translate="yes" xml:space="preserve">
          <source>The &quot;INDEXED BY index-name&quot; phrase specifies that the named index must be used in order to look up values on the preceding table. If index-name does not exist or cannot be used for the query, then the preparation of the SQL statement fails. The &quot;NOT INDEXED&quot; clause specifies that no index shall be used when accessing the preceding table, including implied indices create by UNIQUE and PRIMARY KEY constraints. However, the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; can still be used to look up entries even when &quot;NOT INDEXED&quot; is specified.</source>
          <target state="translated">「INDEXED BY index-name」句は、前の表で値を検索するために名前付きインデックスを使用する必要があることを指定します。 index-nameが存在しないか、クエリに使用できない場合、SQLステートメントの準備は失敗します。 &quot;NOT INDEXED&quot;句は、UNIQUEおよびPRIMARY KEY制約によって作成された暗黙のインデックスを含め、前述のテーブルにアクセスするときにインデックスを使用しないことを指定します。ただし、「NOT INDEXED」が指定されている場合でも、&lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;を使用してエントリを検索できます。</target>
        </trans-unit>
        <trans-unit id="21fa27bc6e581b8fb060c98b51ebafd394898e71" translate="yes" xml:space="preserve">
          <source>The &quot;INSERT INTO</source>
          <target state="translated">の「INSERT INTO</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
