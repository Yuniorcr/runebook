<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="8756a987e4626cbc150ea90cde893c53ad4cc39d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxThreads&lt;/code&gt; directive sets the desired maximum number worker threads allowable. The default value is also the compiled in hard limit. Therefore it can only be lowered, for example:</source>
          <target state="translated">&lt;code&gt;MaxThreads&lt;/code&gt; のディレクティブセットは、最大数のワーカースレッドが許容たいです。デフォルト値もハードリミットでコンパイルされています。したがって、たとえば、次のように下げるだけです。</target>
        </trans-unit>
        <trans-unit id="bd6d119b3a51a6f6abe14d4bbff1d67e47275c10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MimeMagicFile&lt;/code&gt; directive can be used to enable this module, the default file is distributed at &lt;code&gt;conf/magic&lt;/code&gt;. Non-rooted paths are relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. Virtual hosts will use the same file as the main server unless a more specific setting is used, in which case the more specific setting overrides the main server's file.</source>
          <target state="translated">&lt;code&gt;MimeMagicFile&lt;/code&gt; のディレクティブは、このモジュールを有効にするために使用することができ、デフォルトのファイルがで配布される &lt;code&gt;conf/magic&lt;/code&gt; 。ルート化されていないパスは、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; を基準にしています。より具体的な設定が使用されない限り、仮想ホストはメインサーバーと同じファイルを使用します。この場合、より具体的な設定がメインサーバーのファイルを上書きします。</target>
        </trans-unit>
        <trans-unit id="37a63ef02527eb11f7ba2607d3309dc21ca0e8b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MinSpareServers&lt;/code&gt; directive sets the desired minimum number of &lt;em&gt;idle&lt;/em&gt; child server processes. An idle process is one which is not handling a request. If there are fewer than &lt;code&gt;MinSpareServers&lt;/code&gt; idle, then the parent process creates new children: It will spawn one, wait a second, then spawn two, wait a second, then spawn four, and it will continue exponentially until it is spawning 32 children per second. It will stop whenever it satisfies the &lt;code&gt;MinSpareServers&lt;/code&gt; setting.</source>
          <target state="translated">&lt;code&gt;MinSpareServers&lt;/code&gt; ディレクティブセットの所望の最小数&lt;em&gt;のアイドル&lt;/em&gt;の子サーバプロセス。アイドルプロセスは、要求を処理していないプロセスです。アイドル状態の &lt;code&gt;MinSpareServers&lt;/code&gt; が少ない場合、親プロセスは新しい子を作成します。これは、1つを生成し、1秒待機してから、2つ生成し、1秒待機してから4つ生成し、1秒あたり32個の子を生成するまで指数関数的に続行します。 。 &lt;code&gt;MinSpareServers&lt;/code&gt; 設定を満足するたびに停止します。</target>
        </trans-unit>
        <trans-unit id="a39d9126c94dbac6b8178b32fe80bb04df2be254" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; directive is used to combine the filename with the &lt;code&gt;path_info&lt;/code&gt; URL component to apply &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt;'s directives to the request. The default value is &lt;code&gt;Off&lt;/code&gt; - therefore, the &lt;code&gt;path_info&lt;/code&gt; component is ignored.</source>
          <target state="translated">&lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; のディレクティブは、ファイル名とを組み合わせるために使用された &lt;code&gt;path_info&lt;/code&gt; 適用するURLコンポーネント &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; により要求へのディレクティブを。デフォルト値は &lt;code&gt;Off&lt;/code&gt; -したがって、 &lt;code&gt;path_info&lt;/code&gt; コンポーネントは無視されます。</target>
        </trans-unit>
        <trans-unit id="a242de3e43bd169a351b111ef9110c5d893663cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive can be used to change the underlying implementation used for mutexes, in order to relieve functional or performance problems with &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;'s default choice.</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; ディレクティブが有する機能や性能の問題軽減するために、ミューテックスのために使用される、基礎となる実装を変更するために使用することができます&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;4月&lt;/a&gt;のデフォルトの選択を。</target>
        </trans-unit>
        <trans-unit id="df8b98e4bb74d6c8ceef3f4e236769ff929b7720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive is typically used in the following exceptional situations:</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; ディレクティブは、通常、次の例外的な状況で使用されます。</target>
        </trans-unit>
        <trans-unit id="855ba960702ac258fb09fad1f9a712de86e138e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive sets the mechanism, and optionally the lock file location, that httpd and modules use to serialize access to resources. Specify &lt;code&gt;default&lt;/code&gt; as the second argument to change the settings for all mutexes; specify a mutex name (see table below) as the second argument to override defaults only for that mutex.</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; ディレクティブはHTTPDとモジュールがリソースへのアクセスをシリアライズするために使用する、機構を設定し、必要に応じてロックファイルの場所。すべてのmutexの設定を変更するには、2番目の引数として &lt;code&gt;default&lt;/code&gt; を指定します。2番目の引数としてミューテックス名（下の表を参照）を指定して、そのミューテックスのデフォルトのみをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="b8a82757b936b82a2fb81837eacdd53a7d36d784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameWidth&lt;/code&gt; keyword allows you to specify the width of the filename column in bytes.</source>
          <target state="translated">&lt;code&gt;NameWidth&lt;/code&gt; のキーワードを使用すると、バイト単位で、ファイル名の列の幅を指定することができます。</target>
        </trans-unit>
        <trans-unit id="bf652253d2658dc6dd02d33373dbf346ecd67732" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NegotiatedOnly&lt;/code&gt; option provides that every extension following the base name must correlate to a recognized &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; extension for content negotiation, &lt;em&gt;e.g.&lt;/em&gt; Charset, Content-Type, Language, or Encoding. This is the strictest implementation with the fewest unexpected side effects, and is the default behavior.</source>
          <target state="translated">&lt;code&gt;NegotiatedOnly&lt;/code&gt; のオプションは、ベース名を以下のすべての拡張子が認識さに相関しなければならないことを提供 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; によりのコンテンツネゴシエーションのための拡張、&lt;em&gt;例えば&lt;/em&gt;コンテントタイプ、言語、またはエンコーディング。これは、予期しない副作用が最も少ない最も厳密な実装であり、デフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="52c9993765ba5c194ab54d2997f26f486ae5425d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Off&lt;/code&gt; setting, which is the default, suppresses the footer line (and is therefore compatible with the behavior of Apache-1.2 and below). The &lt;code&gt;On&lt;/code&gt; setting simply adds a line with the server version number and &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the serving virtual host, and the &lt;code&gt;EMail&lt;/code&gt; setting additionally creates a &quot;mailto:&quot; reference to the &lt;code&gt;&lt;a href=&quot;#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; of the referenced document.</source>
          <target state="translated">デフォルトの &lt;code&gt;Off&lt;/code&gt; 設定は、フッター行を抑制します（したがって、Apache-1.2以前の動作と互換性があります）。 &lt;code&gt;On&lt;/code&gt; 単に設定は、サーバのバージョン番号とを有するライン追加 &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; なる仮想ホストの、および &lt;code&gt;EMail&lt;/code&gt; 設定がさらに作成「のmailto：」を参照 &lt;code&gt;&lt;a href=&quot;#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; 参照文書のを。</target>
        </trans-unit>
        <trans-unit id="58b2be23f10b16e376a727a7d3c19c27b51c0641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OmitPID&lt;/code&gt; keyword suppresses the addition of the httpd parent process id from the lock file name.</source>
          <target state="translated">&lt;code&gt;OmitPID&lt;/code&gt; のキーワードは、ロックファイル名からのhttpd親プロセスIDの追加を抑制することができます。</target>
        </trans-unit>
        <trans-unit id="469b774a02b89cab7e30f3a204c7b32e7dd8bd2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Options&lt;/code&gt; directive controls which server features are available in a particular directory.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; のサーバ機能は、特定のディレクトリで使用可能なディレクティブを制御します。</target>
        </trans-unit>
        <trans-unit id="f5c740835079b24daee0cfc6b038cae6ce5fd04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive controls the order of access directive processing only within each phase of the server's configuration processing. This implies, for example, that an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section will always be evaluated after an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section or &lt;code&gt;.htaccess&lt;/code&gt; file, regardless of the setting of the &lt;code&gt;Order&lt;/code&gt; directive. For details on the merging of configuration sections, see the documentation on &lt;a href=&quot;../sections&quot;&gt;How Directory, Location and Files sections work&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; ディレクティブのみを制御し、サーバの設定処理の各段階で処理するアクセスディレクティブの順。これがあること、例えば、暗示 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブで発生した &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; は常に後に評価されるセクションを &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブで発生した &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションや &lt;code&gt;.htaccess&lt;/code&gt; ファイルの設定に関わらず、ファイルを &lt;code&gt;Order&lt;/code&gt; ディレクティブ。構成セクションのマージの詳細については、&lt;a href=&quot;../sections&quot;&gt;ディレクトリ、場所、ファイルのセクションの仕組み&lt;/a&gt;に関するドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="207bc357beb72a07c77745f5ab04464adf46ad23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive, along with the &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, controls a three-pass access control system. The first pass processes either all &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or all &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, as specified by the &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directive. The second pass parses the rest of the directives (&lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;). The third pass applies to all requests which do not match either of the first two.</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; と一緒にディレクティブは、 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブを、3パスのアクセス制御システムを制御します。最初のパスは、 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されているように、すべての &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; またはすべての &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブを処理します。2番目のパスは、残りのディレクティブ（ &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; ）を解析します。3番目のパスは、最初の2つのいずれにも一致しないすべてのリクエストに適用されます。</target>
        </trans-unit>
        <trans-unit id="48927642bad1dbcb462ae859bef010c13854f2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OutputSed&lt;/code&gt; directive specifies the &lt;code&gt;sed&lt;/code&gt; command to execute on the response.</source>
          <target state="translated">&lt;code&gt;OutputSed&lt;/code&gt; ディレクティブ指定に &lt;code&gt;sed&lt;/code&gt; の応答に実行するコマンドを。</target>
        </trans-unit>
        <trans-unit id="94c2978780147c4c5795aee4fb3e08caa7fd6f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PT&lt;/code&gt; flag implies the &lt;code&gt;L&lt;/code&gt; flag: rewriting will be stopped in order to pass the request to the next phase of processing.</source>
          <target state="translated">&lt;code&gt;PT&lt;/code&gt; のフラグが意味 &lt;code&gt;L&lt;/code&gt; の書き換え処理の次のフェーズに要求を渡すために停止される：フラグ。</target>
        </trans-unit>
        <trans-unit id="a0ff01d8e7ff8ac6f2fa074f205ba57883b34783" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PeerExtList(&lt;em&gt;object-ID&lt;/em&gt;)&lt;/code&gt; function expects to find zero or more instances of the X.509 certificate extension identified by the given &lt;em&gt;object ID&lt;/em&gt; (OID) in the client certificate. The expression evaluates to true if the left-hand side string matches exactly against the value of an extension identified with this OID. (If multiple extensions with the same OID are present, at least one extension must match).</source>
          <target state="translated">&lt;code&gt;PeerExtList(&lt;em&gt;object-ID&lt;/em&gt;)&lt;/code&gt; 関数は、指定によって識別されるX.509証明書拡張のゼロ以上のインスタンスを見つけることを期待&lt;em&gt;オブジェクトID&lt;/em&gt;クライアント証明書に（OID）を。左側の文字列がこのOIDで識別される拡張の値と正確に一致する場合、式はtrueと評価されます。（同じOIDを持つ複数の拡張子が存在する場合、少なくとも1つの拡張子が一致する必要があります）。</target>
        </trans-unit>
        <trans-unit id="ddd965d7691e70338d0469f9a3625debed77cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; directive sets the file to which the server records the process id of the daemon. If the filename is not absolute then it is assumed to be relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PidFile&lt;/code&gt; オプションのディレクティブは、サーバーがデーモンのプロセスIDを記録するファイルを設定します。ファイル名が絶対ではない場合、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; に関連していると見なされます。</target>
        </trans-unit>
        <trans-unit id="76e7b1a8f3e7d0d92481816fc797a410cebd477a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; is subject to the same warnings about log file placement and &lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;security&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PidFile&lt;/code&gt; には、ログ・ファイルの配置とほぼ同じ警告の対象となる&lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;セキュリティ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de06118d58b504228b24c69c4f2a18979f822cc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreservesContentLength&lt;/code&gt; keyword specifies that the filter preserves the content length. This is not the default, as most filters change the content length. In the event that the filter doesn't modify the length, this keyword should be specified.</source>
          <target state="translated">&lt;code&gt;PreservesContentLength&lt;/code&gt; フィルタは、コンテンツの長さを維持することのキーワードを指定します。ほとんどのフィルターはコンテンツの長さを変更するため、これはデフォルトではありません。フィルターが長さを変更しない場合は、このキーワードを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6baacdfe63b6eb368df66a9386a7d5d560891d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrivilegesMode&lt;/code&gt; directive allows you to select either &lt;var&gt;FAST&lt;/var&gt; or &lt;var&gt;SECURE&lt;/var&gt; mode. You can mix modes, using &lt;var&gt;FAST&lt;/var&gt; mode for trusted users and fully-audited code paths, while imposing SECURE mode where an untrusted user has scope to introduce code.</source>
          <target state="translated">&lt;code&gt;PrivilegesMode&lt;/code&gt; のディレクティブを使用すると、いずれかを選択することができます &lt;var&gt;FAST&lt;/var&gt; または &lt;var&gt;SECURE&lt;/var&gt; モード。信頼できるユーザーと完全に監査されたコードパスには &lt;var&gt;FAST&lt;/var&gt; モードを使用し、信頼できないユーザーにコードを導入するスコープがあるSECUREモードを強制しながら、モードを混在させることができます。</target>
        </trans-unit>
        <trans-unit id="e1527722f657eab31d1b2106ccc0badb4ec20789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProtocolEcho&lt;/code&gt; directive enables or disables the echo server.</source>
          <target state="translated">&lt;code&gt;ProtocolEcho&lt;/code&gt; のディレクティブは、エコーサーバを有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="4045ad0738598223f1baf290cc56f16213c2475b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBadHeader&lt;/code&gt; directive determines the behavior of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; if it receives syntactically invalid response header lines (&lt;em&gt;i.e.&lt;/em&gt; containing no colon) from the origin server. The following arguments are possible:</source>
          <target state="translated">&lt;code&gt;ProxyBadHeader&lt;/code&gt; のディレクティブは、の挙動を判定する &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; のをそれが構文的に無効な応答ヘッダー行を受信した場合（&lt;em&gt;すなわち、&lt;/em&gt;オリジンサーバからのコロンを含みません）。次の引数が可能です。</target>
        </trans-unit>
        <trans-unit id="978f50a7a4d11fa6ec90c37f8fd99f34f41c888f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBlock&lt;/code&gt; directive specifies a list of words, hosts and/or domains, separated by spaces. HTTP, HTTPS, and FTP document requests to sites whose names contain matched words, hosts or domains are &lt;em&gt;blocked&lt;/em&gt; by the proxy server. The proxy module will also attempt to determine IP addresses of list items which may be hostnames during startup, and cache them for match test as well. That may slow down the startup time of the server.</source>
          <target state="translated">&lt;code&gt;ProxyBlock&lt;/code&gt; のディレクティブは、スペースで区切られた単語、ホストおよび/またはドメインのリストを指定します。名前に一致する単語、ホスト、またはドメインが含まれているサイトへのHTTP、HTTPS、およびFTPドキュメント要求は、プロキシサーバーによって&lt;em&gt;ブロックさ&lt;/em&gt;れます。プロキシモジュールは、起動時にホスト名である可能性のあるリストアイテムのIPアドレスを特定し、それらを一致テスト用にキャッシュすることも試みます。サーバーの起動時間が遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1bd6cb629e4911e631c6079eb55a93088666f26f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMFile&lt;/code&gt; directive points to the location of the Express map DBM file. This file serves to map the incoming server name, obtained from the Host: header, to a backend URL.</source>
          <target state="translated">&lt;code&gt;ProxyExpressDBMFile&lt;/code&gt; エクスプレスマップDBMファイルの場所を指示ポイント。このファイルは、Host：ヘッダーから取得した受信サーバー名をバックエンドURLにマップするために使用されます。</target>
        </trans-unit>
        <trans-unit id="df4a3563619867849bac584e307099d96cefe2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMType&lt;/code&gt; directive controls the DBM type expected by the module. The default is the default DBM type created with &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyExpressDBMType&lt;/code&gt; のディレクティブは、モジュールが期待するDBMのタイプを制御します。デフォルトは、 &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; で作成されたデフォルトのDBMタイプです。</target>
        </trans-unit>
        <trans-unit id="92eb7ee34a93af990ddb39d906088f81afd5aa79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressEnable&lt;/code&gt; directive controls whether the module will be active.</source>
          <target state="translated">&lt;code&gt;ProxyExpressEnable&lt;/code&gt; モジュールがアクティブになるかどうかのディレクティブを制御します。</target>
        </trans-unit>
        <trans-unit id="446053fbb2d7ac3ddbdf68da7e1968d31ed35b5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpDirCharset&lt;/code&gt; directive defines the character set to be set for FTP directory listings in HTML generated by &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyFtpDirCharset&lt;/code&gt; のディレクティブは、によって生成されたHTMLでのFTPのディレクトリリストに設定する文字セットを定義 &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="6ce78758313c9b35047cac1c0ee77244969e2a65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpEscapeWildcards&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames are escaped with backslash before sending them to the FTP server. That is the default behavior, but many FTP servers don't know about the escaping and try to serve the literal filenames they were sent, including the backslashes in the names.</source>
          <target state="translated">&lt;code&gt;ProxyFtpEscapeWildcards&lt;/code&gt; 要求されたファイル名にワイルドカード文字が（「*？[{〜」）FTPサーバーに送信する前にバックスラッシュでエスケープされているかどうかを指示制御します。これがデフォルトの動作ですが、多くのFTPサーバーはエスケープを認識せず、送信されたリテラルファイル名（名前のバックスラッシュを含む）を提供しようとします。</target>
        </trans-unit>
        <trans-unit id="aa80f7a5601790221401e6771c57ddc89a5c598e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpListOnWildcard&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames cause &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; to return a listing of files instead of downloading a file. By default (value on), they do.</source>
          <target state="translated">&lt;code&gt;ProxyFtpListOnWildcard&lt;/code&gt; のワイルドカード文字は（「*？[{〜」）原因要求されたファイル名にするかどうかを指示する制御 &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; ファイルのリストの代わりに、ファイルのダウンロードを返します。デフォルト（値オン）では、そうします。</target>
        </trans-unit>
        <trans-unit id="34d810ef116b0d8d9ad66887ba204114c4c98dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCExpr&lt;/code&gt; directive allows for creating a named condition expression that checks the response headers of the backend server to determine its health. This named condition can then be assigned to balancer members via the &lt;code&gt;hcexpr&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;ProxyHCExpr&lt;/code&gt; のディレクティブは、バックエンドサーバの応答ヘッダがその状態を判断するためにチェックすることを指定した条件式を作成することができます。この名前付き条件は、 &lt;code&gt;hcexpr&lt;/code&gt; パラメーターを介してバランサーメンバーに割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="5ce318cb530bc0f759078bf0660069da794da5b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCTemplate&lt;/code&gt; directive allows for creating a named set (template) of health check parameters that can then be assigned to balancer members via the &lt;code&gt;hctemplate&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;ProxyHCTemplate&lt;/code&gt; のディレクティブは、その後経由バランサメンバーに割り当てることができるヘルスチェックのパラメータの名前付きセット（テンプレート）を作成することができます &lt;code&gt;hctemplate&lt;/code&gt; のパラメータを。</target>
        </trans-unit>
        <trans-unit id="b33a2b8a7be08fcbaf30aeb0d102ca567ff4c2e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyIOBufferSize&lt;/code&gt; directive adjusts the size of the internal buffer which is used as a scratchpad for the data between input and output. The size must be at least &lt;code&gt;512&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyIOBufferSize&lt;/code&gt; のディレクティブは、入力と出力の間でデータのスクラッチパッドとして使用される内部バッファのサイズを調整します。サイズは &lt;code&gt;512&lt;/code&gt; 以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e185b02916358aeff4d52556a1d270bd9f7cd480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyMaxForwards&lt;/code&gt; directive specifies the maximum number of proxies through which a request may pass if there's no &lt;code&gt;Max-Forwards&lt;/code&gt; header supplied with the request. This may be set to prevent infinite proxy loops or a DoS attack.</source>
          <target state="translated">&lt;code&gt;ProxyMaxForwards&lt;/code&gt; 指令指定何がない場合、要求が通過するプロキシの最大数の &lt;code&gt;Max-Forwards&lt;/code&gt; ヘッダ要求が供給に。これは、無限プロキシループまたはDoS攻撃を防ぐために設定できます。</target>
        </trans-unit>
        <trans-unit id="146b8f5c5b583a1efc65e9fa44b07bbf6178f8a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; directive specifies an explicit (TCP/IP) network buffer size for proxied HTTP and FTP connections, for increased throughput. It has to be greater than &lt;code&gt;512&lt;/code&gt; or set to &lt;code&gt;0&lt;/code&gt; to indicate that the system's default buffer size should be used.</source>
          <target state="translated">&lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; ディレクティブを指定スループットの向上のために、プロキシHTTPおよびFTP接続の明示的な（TCP / IP）ネットワークバッファサイズ、。システムのデフォルトのバッファーサイズを使用する必要があることを示すには、 &lt;code&gt;512&lt;/code&gt; より大きいか &lt;code&gt;0&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="edb4e4ae64a5d1c78dfd7ed938a960715054ca65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyRemoteMatch&lt;/code&gt; is identical to the &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; directive, except that the first argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; match against the requested URL.</source>
          <target state="translated">&lt;code&gt;ProxyRemoteMatch&lt;/code&gt; は同じです &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; の最初の引数があることを除いて、ディレクティブ&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現の&lt;/a&gt;要求されたURL戦。</target>
        </trans-unit>
        <trans-unit id="aa084d8828ecacafedd572f431e2fb8ab5a2f6cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGIInternalRedirect&lt;/code&gt; enables the backend to internally redirect the gateway to a different URL. This feature originates in &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, which internally redirects the response if the response status is &lt;code&gt;OK&lt;/code&gt; (&lt;code&gt;200&lt;/code&gt;) and the response contains a &lt;code&gt;Location&lt;/code&gt; (or configured alternate header) and its value starts with a slash (&lt;code&gt;/&lt;/code&gt;). This value is interpreted as a new local URL that Apache httpd internally redirects to.</source>
          <target state="translated">&lt;code&gt;ProxySCGIInternalRedirect&lt;/code&gt; は、内部で別のURLへのゲートウェイをリダイレクトするようにバックエンドを可能にします。この機能は &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; に由来し、応答ステータスが &lt;code&gt;OK&lt;/code&gt; （ &lt;code&gt;200&lt;/code&gt; ）で、応答に &lt;code&gt;Location&lt;/code&gt; （または構成済みの代替ヘッダー）が含まれ、その値がスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で始まる場合、応答を内部的にリダイレクトします。この値は、Apache httpdが内部的にリダイレクトする新しいローカルURLとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="741a9d147882b9d7d924ecb1b6e46913b2896731" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; argument determines the gateway behaviour:</source>
          <target state="translated">&lt;code&gt;ProxySCGISendfile&lt;/code&gt; の引数は、ゲートウェイの動作を決定します。</target>
        </trans-unit>
        <trans-unit id="49882af03eb55d05451faea7724ab17b01657e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; directive enables the SCGI backend to let files be served directly by the gateway. This is useful for performance purposes &amp;mdash; httpd can use &lt;code&gt;sendfile&lt;/code&gt; or other optimizations, which are not possible if the file comes over the backend socket. Additionally, the file contents are not transmitted twice.</source>
          <target state="translated">&lt;code&gt;ProxySCGISendfile&lt;/code&gt; のディレクティブは、ファイルがゲートウェイによって直接提供させるSCGIのバックエンドを可能にします。これはパフォーマンスの目的で役立ちます&amp;mdash; httpdは &lt;code&gt;sendfile&lt;/code&gt; または他の最適化を使用できますが、ファイルがバックエンドソケットを経由する場合は不可能です。また、ファイルの内容は2回送信されません。</target>
        </trans-unit>
        <trans-unit id="f163e8e6321eac0a97541af0a8c72e8206d8319c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RLimit&lt;/code&gt;* directives are used to limit the amount of resources which can be used by processes forked off from the httpd children. In particular, this will control resources used by CGI scripts and SSI exec commands.</source>
          <target state="translated">&lt;code&gt;RLimit&lt;/code&gt; *ディレクティブはのhttpd子プロセスからforkされたプロセスで使用できるリソースの量を制限するために使用されています。特に、これはCGIスクリプトとSSI execコマンドによって使用されるリソースを制御します。</target>
        </trans-unit>
        <trans-unit id="831e0c0010b9edcb4e8f63f1bf1b21cad9c7bcaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReadmeName&lt;/code&gt; directive sets the name of the file that will be appended to the end of the index listing. &lt;var&gt;Filename&lt;/var&gt; is the name of the file to include, and is taken to be relative to the location being indexed. If &lt;var&gt;Filename&lt;/var&gt; begins with a slash, as in example 2, it will be taken to be relative to the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ReadmeName&lt;/code&gt; とのディレクティブは、上場インデックスの最後に追加されるファイルの名前を設定します。 &lt;var&gt;Filename&lt;/var&gt; はインクルードするファイルの名前であり、インデックスが作成される場所を基準にして解釈されます。例2のように &lt;var&gt;Filename&lt;/var&gt; がスラッシュで始まる場合、 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; からの相対と見なされます。</target>
        </trans-unit>
        <trans-unit id="469f0f35ec8e6ed0f301d1bef84b93e1cbbabdb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Redirect&lt;/code&gt; directive maps an old URL into a new one by asking the client to refetch the resource at the new location.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; ディレクティブは、新しい場所でリソースを再フェッチするためにクライアントを尋ねることによって新しいものに古いURLをマッピングします。</target>
        </trans-unit>
        <trans-unit id="5fe78c451560ba9010d052d464d137d0b8399929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegisteredMethods&lt;/code&gt; option should &lt;strong&gt;not&lt;/strong&gt; be toggled for forward proxy hosts, as the methods supported by the origin servers are unknown to the proxy server.</source>
          <target state="translated">オリジンサーバーでサポートされているメソッドはプロキシサーバーに認識され&lt;strong&gt;ない&lt;/strong&gt;ため、 &lt;code&gt;RegisteredMethods&lt;/code&gt; オプションはフォワードプロキシホストでは切り替え&lt;strong&gt;ない&lt;/strong&gt;でください。</target>
        </trans-unit>
        <trans-unit id="64350918c017f0e3bdc4ce615f7af67e0515a3b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. If enabled with the &lt;code&gt;On&lt;/code&gt; flag, the upstream client &lt;em&gt;must&lt;/em&gt; send the header every time it opens a connection or the connection will be aborted unless it is in the list of disabled hosts provided by the &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocolexceptions&quot;&gt;RemoteIPProxyProtocolExceptions&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; のディレクティブは、有効または無効読み取りをプロキシプロトコル接続ヘッダの扱い。 &lt;code&gt;On&lt;/code&gt; フラグで有効にした場合、アップストリームクライアント&lt;em&gt;は&lt;/em&gt;接続を開くたびにヘッダーを送信する&lt;em&gt;必要があり&lt;/em&gt;ます。そうしないと、 &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocolexceptions&quot;&gt;RemoteIPProxyProtocolExceptions&lt;/a&gt;&lt;/code&gt; ディレクティブによって提供される無効なホストのリストにない限り、接続は中止されます。</target>
        </trans-unit>
        <trans-unit id="c8ffa9c340f19c6199a33dac5ce42f70acfa99dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. Sometimes it is desirable to require clients to provide the PROXY header, but permit other clients to connect without it. This directive allows a server administrator to configure a single host or CIDR range of hosts that may do so. This is generally useful for monitoring and administrative traffic to a virtual host direct to the server behind the upstream load balancer.</source>
          <target state="translated">&lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; のディレクティブは、有効または無効読み取りをプロキシプロトコル接続ヘッダの扱い。場合によっては、クライアントにPROXYヘッダーの提供を要求し、それなしで他のクライアントが接続できるようにすることが望ましいです。このディレクティブを使用すると、サーバー管理者は単一のホストまたはCIDR範囲のホストを構成できます。これは一般に、上流のロードバランサーの背後にあるサーバーに直接送信される仮想ホストへのトラフィックの監視と管理に役立ちます。</target>
        </trans-unit>
        <trans-unit id="ae5d227503f00da08ff20e2a9939e4b54fa74c76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveCharset&lt;/code&gt; directive removes any character set associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveCharset&lt;/code&gt; のディレクティブは、指定した拡張子を持つファイルを任意の文字セットの関連付けを削除します。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="69b4a1cd54a7542b44670f3215ca2d5fa8e67e5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveEncoding&lt;/code&gt; directive removes any encoding associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveEncoding&lt;/code&gt; ディレクティブは、指定した拡張子に関連付けられたエンコーディングを削除します。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。その使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e4a5e8dc4cd1086dc1762f4e655ce6973e61a7c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveHandler&lt;/code&gt; directive removes any handler associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveHandler&lt;/code&gt; ディレクティブは与えられた拡張子に関連付けられたハンドラを削除します。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。その使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c964cbda619d88084dcbcced8fc7ebed80dd896d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveInputFilter&lt;/code&gt; directive removes any input &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveInputFilter&lt;/code&gt; のディレクティブは、任意の入力取り除く&lt;a href=&quot;../filter&quot;&gt;フィルタ&lt;/a&gt;与えられた拡張子を持つファイルの関連を。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="067e40d40a9add74d02e5617c937a640845971cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveLanguage&lt;/code&gt; directive removes any language associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveLanguage&lt;/code&gt; のディレクティブは、指定した拡張子を持つファイルを任意の言語の関連付けを削除します。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="f82c512d1dab46f2925e480a7738a3c60032ee37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveOutputFilter&lt;/code&gt; directive removes any output &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveOutputFilter&lt;/code&gt; のディレクティブは、任意の出力取り除く&lt;a href=&quot;../filter&quot;&gt;フィルタ&lt;/a&gt;与えられた拡張子を持つファイルの関連を。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="92c60cbfeb10085f7e085f9dd8dbe9195a913a0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveType&lt;/code&gt; directive removes any &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media type&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveType&lt;/code&gt; のディレクティブは、任意の削除&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;メディアタイプの&lt;/a&gt;指定した拡張子を持つファイルの関連付けを。これにより、サブディレクトリ内の &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、親ディレクトリまたはサーバー構成ファイルから継承された関連付けを元に戻すことができます。その使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="713f70c6e6443a921374045e32b3edfa3e60722d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RequestHeader&lt;/code&gt; directive may be followed by an additional argument, which may be any of:</source>
          <target state="translated">&lt;code&gt;RequestHeader&lt;/code&gt; のディレクティブは、のいずれであってもよい追加の引数が続くことができます。</target>
        </trans-unit>
        <trans-unit id="243b03130625c7468a074d3de07b183ccca5169a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-attribute&lt;/code&gt; directive allows the administrator to grant access based on attributes of the authenticated user in the LDAP directory. If the attribute in the directory matches the value given in the configuration, access is granted.</source>
          <target state="translated">&lt;code&gt;Require ldap-attribute&lt;/code&gt; ディレクティブは、管理者がLDAPディレクトリで認証されたユーザの属性に基づいてアクセス権を付与することができます。ディレクトリ内の属性が構成で指定された値と一致する場合、アクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="4d236ee0f6eb912cb62f3c598015f64c66860c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-dn&lt;/code&gt; directive allows the administrator to grant access based on distinguished names. It specifies a DN that must match for access to be granted. If the distinguished name that was retrieved from the directory server matches the distinguished name in the &lt;code&gt;Require ldap-dn&lt;/code&gt;, then authorization is granted. Note: do not surround the distinguished name with quotes.</source>
          <target state="translated">&lt;code&gt;Require ldap-dn&lt;/code&gt; ディレクティブは、管理者が識別名に基づいてアクセス権を付与することができます。アクセスを許可するために一致する必要があるDNを指定します。ディレクトリー・サーバーから取得された識別名が &lt;code&gt;Require ldap-dn&lt;/code&gt; 識別名と一致する場合、許可が付与されます。注：識別名を引用符で囲まないでください。</target>
        </trans-unit>
        <trans-unit id="fbe9021e5c8640a0e4e3bd2ec557717967ae7bb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-filter&lt;/code&gt; directive allows the administrator to grant access based on a complex LDAP search filter. If the dn returned by the filter search matches the authenticated user dn, access is granted.</source>
          <target state="translated">&lt;code&gt;Require ldap-filter&lt;/code&gt; 指令を、管理者は、複雑なLDAP検索フィルタに基づいてアクセス権を付与することができます。フィルター検索によって返されたdnが認証済みユーザーのdnと一致する場合、アクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="5ef88e5123b08953dd5e184d8f555ee39fb22c40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-user&lt;/code&gt; directive specifies what usernames can access the resource. Once &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; has retrieved a unique DN from the directory, it does an LDAP compare operation using the username specified in the &lt;code&gt;Require ldap-user&lt;/code&gt; to see if that username is part of the just-fetched LDAP entry. Multiple users can be granted access by putting multiple usernames on the line, separated with spaces. If a username has a space in it, then it must be surrounded with double quotes. Multiple users can also be granted access by using multiple &lt;code&gt;Require ldap-user&lt;/code&gt; directives, with one user per line. For example, with a &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;ldap://ldap/o=Example?cn&lt;/code&gt; (i.e., &lt;code&gt;cn&lt;/code&gt; is used for searches), the following Require directives could be used to restrict access:</source>
          <target state="translated">&lt;code&gt;Require ldap-user&lt;/code&gt; のユーザー名がリソースにアクセスすることができますどのようなディレクティブを指定します。いったん &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; がディレクトリからユニークなDNを取得した、それはユーザー名を使用してLDAP比較操作を行うに指定され &lt;code&gt;Require ldap-user&lt;/code&gt; ユーザ名はちょうどフェッチLDAPエントリの一部であるかどうかを確認します。行に複数のユーザー名をスペースで区切って入力することにより、複数のユーザーにアクセスを許可できます。ユーザー名にスペースが含まれている場合は、二重引用符で囲む必要があります。1行に1人のユーザーを指定して、複数の &lt;code&gt;Require ldap-user&lt;/code&gt; ディレクティブを使用して、複数のユーザーにアクセス権を付与することもできます。たとえば、 &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;ldap://ldap/o=Example?cn&lt;/code&gt; （つまり、 &lt;code&gt;cn&lt;/code&gt; が検索に使用されます）、次のRequireディレクティブを使用してアクセスを制限できます。</target>
        </trans-unit>
        <trans-unit id="8ce414fb159ae14c3d70b751923bf486df3ea44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteBase&lt;/code&gt; directive specifies the URL prefix to be used for per-directory (htaccess) &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives that substitute a relative path.</source>
          <target state="translated">&lt;code&gt;RewriteBase&lt;/code&gt; ディレクティブを指定ディレクトリ単位（htaccessファイル）に使用するURL接頭辞 &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 代替相対パスというディレクティブ。</target>
        </trans-unit>
        <trans-unit id="d0f0d14bdb86ea947f4f38920ee65518563161b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteCond&lt;/code&gt; directive defines a rule condition. One or more &lt;code&gt;RewriteCond&lt;/code&gt; can precede a &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive. The following rule is then only used if both the current state of the URI matches its pattern, &lt;strong&gt;and&lt;/strong&gt; if these conditions are met.</source>
          <target state="translated">&lt;code&gt;RewriteCond&lt;/code&gt; ディレクティブは、ルール条件を定義します。1つ以上の &lt;code&gt;RewriteCond&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ディレクティブの前に置くことができます。以下の規則は、URIの現在の状態の両方は、そのパターンに一致する場合にのみ使用され、&lt;strong&gt;そして&lt;/strong&gt;これらの条件が満たされた場合。</target>
        </trans-unit>
        <trans-unit id="56a552381de520bf80bb3e059c66a9bc2921f095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteEngine&lt;/code&gt; directive enables or disables the runtime rewriting engine. If it is set to &lt;code&gt;off&lt;/code&gt; this module does no runtime processing at all. It does not even update the &lt;code&gt;SCRIPT_URx&lt;/code&gt; environment variables.</source>
          <target state="translated">&lt;code&gt;RewriteEngine&lt;/code&gt; のディレクティブは、エンジンを書き換えランタイムを有効または無効にします。 &lt;code&gt;off&lt;/code&gt; に設定されている場合、このモジュールはランタイム処理をまったく行いません。 &lt;code&gt;SCRIPT_URx&lt;/code&gt; 環境変数も更新されません。</target>
        </trans-unit>
        <trans-unit id="1b9670cd0760982afc3779130c37c8069f52beff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteMap&lt;/code&gt; directive defines a &lt;em&gt;Rewriting Map&lt;/em&gt; which can be used inside rule substitution strings by the mapping-functions to insert/substitute fields through a key lookup. The source of this lookup can be of various types.</source>
          <target state="translated">&lt;code&gt;RewriteMap&lt;/code&gt; 命令ディレクティブは定義されて&lt;em&gt;書き換え地図&lt;/em&gt;キーのルックアップを通じて/代替フィールドを挿入するマッピング機能により、ルールの置換文字列内で使用することができます。このルックアップのソースには、さまざまなタイプがあります。</target>
        </trans-unit>
        <trans-unit id="1c92685ac24c0b2506efe1e5934f88cc414f2b08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteOptions&lt;/code&gt; directive sets some special options for the current per-server or per-directory configuration. The &lt;em&gt;Option&lt;/em&gt; string can currently only be one of the following:</source>
          <target state="translated">&lt;code&gt;RewriteOptions&lt;/code&gt; ディレクティブセットに現在のサーバーごと、ディレクトリ構成のためのいくつかの特別なオプション。現在、&lt;em&gt;オプション&lt;/em&gt;文字列は次のいずれか1つのみです。</target>
        </trans-unit>
        <trans-unit id="85f960d06e41d2fd8dcd316784d2939f44322000" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteRule&lt;/code&gt; directive is the real rewriting workhorse. The directive can occur more than once, with each instance defining a single rewrite rule. The order in which these rules are defined is important - this is the order in which they will be applied at run-time.</source>
          <target state="translated">&lt;code&gt;RewriteRule&lt;/code&gt; ディレクティブは、実際の書き換えの主力です。ディレクティブは複数回発生する可能性があり、各インスタンスは単一の書き換えルールを定義します。これらのルールが定義される順序は重要です-これは、実行時に適用される順序です。</target>
        </trans-unit>
        <trans-unit id="8fc59b3abfd7475187e5c82df250cf88faf15383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIETag&lt;/code&gt; directive suppresses this behaviour, and allows the server to generate an &lt;code&gt;ETag&lt;/code&gt; header. This can be used to enable caching of the output. Note that a backend server or dynamic content generator may generate an ETag of its own, ignoring &lt;code&gt;no-etag&lt;/code&gt;, and this ETag will be passed by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; regardless of the value of this setting. &lt;code&gt;SSIETag&lt;/code&gt; can take on the following values:</source>
          <target state="translated">&lt;code&gt;SSIETag&lt;/code&gt; のディレクティブは、この動作を抑制し、サーバが生成することを可能にする &lt;code&gt;ETag&lt;/code&gt; ヘッダを。これは、出力のキャッシュを有効にするために使用できます。バックエンドサーバーまたは動的コンテンツジェネレーターは独自のETagを生成し、 &lt;code&gt;no-etag&lt;/code&gt; を無視する場合があります。このETagは、この設定の値に関係なく &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; によって渡されます。 &lt;code&gt;SSIETag&lt;/code&gt; は次の値をとることができます。</target>
        </trans-unit>
        <trans-unit id="c62153d56a94e14cb5ba8d7b8e86f764b4e3df10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIErrorMsg&lt;/code&gt; directive changes the error message displayed when &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; encounters an error. For production servers you may consider changing the default error message to &lt;code&gt;&quot;&amp;lt;!-- Error --&amp;gt;&quot;&lt;/code&gt; so that the message is not presented to the user.</source>
          <target state="translated">&lt;code&gt;SSIErrorMsg&lt;/code&gt; のディレクティブは、ときにエラーメッセージが表示された変更 &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; エラーに遭遇しました。本番サーバーの場合、デフォルトのエラーメッセージを &lt;code&gt;&quot;&amp;lt;!-- Error --&amp;gt;&quot;&lt;/code&gt; して、メッセージがユーザーに表示されないようにすることを検討してください。</target>
        </trans-unit>
        <trans-unit id="07c745a2589d38b38daaaef30a33dc9acbc14e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSILastModified&lt;/code&gt; directive overrides this behaviour, and allows the &lt;code&gt;Last-Modified&lt;/code&gt; header to be respected if already present, or set if the header is not already present. This can be used to enable caching of the output. &lt;code&gt;SSILastModified&lt;/code&gt; can take on the following values:</source>
          <target state="translated">&lt;code&gt;SSILastModified&lt;/code&gt; のディレクティブは、この動作をオーバーライドし、可能に &lt;code&gt;Last-Modified&lt;/code&gt; の既に存在している、またはセットならば、ヘッダーが存在しない場合、ヘッダーが尊重されます。これは、出力のキャッシュを有効にするために使用できます。 &lt;code&gt;SSILastModified&lt;/code&gt; は、次の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="d46109fbeaeda0f4b6a7bee26de973ddc50665e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSL_SECURE_RENEG&lt;/code&gt; environment variable can be used from an SSI or CGI script to determine whether secure renegotiation is supported for a given SSL connection.</source>
          <target state="translated">&lt;code&gt;SSL_SECURE_RENEG&lt;/code&gt; の環境変数は、安全な再交渉は、指定されたSSL接続用にサポートされているかどうかを判断するためにSSIやCGIスクリプトから使用することができます。</target>
        </trans-unit>
        <trans-unit id="de9234e34e039cbd2cce88e7045d4de005c36c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptAlias&lt;/code&gt; directive has the same behavior as the &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive, except that in addition it marks the target directory as containing CGI scripts that will be processed by &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;'s cgi-script handler. URLs with a case-sensitive (%-decoded) path beginning with &lt;var&gt;URL-path&lt;/var&gt; will be mapped to scripts beginning with the second argument, which is a full pathname in the local filesystem.</source>
          <target state="translated">&lt;code&gt;ScriptAlias&lt;/code&gt; とのディレクティブは同じ行動持ち &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 、ディレクティブを除き、そのほかにもマークによって処理されるCGIスクリプトを含むようにターゲットディレクトリ &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; ののcgi-scriptハンドラを。URL-pathで始まる大文字と小文字が区別される（％デコードされた）パスを持つ &lt;var&gt;URL-path&lt;/var&gt; は、2番目の引数で始まるスクリプトにマップされます。これは、ローカルファイルシステムの完全パス名です。</target>
        </trans-unit>
        <trans-unit id="68acc0d42490bf582d6f9e6753ece18e1a299f88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptLog&lt;/code&gt; directive sets the CGI script error logfile. If no &lt;code&gt;ScriptLog&lt;/code&gt; is given, no error log is created. If given, any CGI errors are logged into the filename given as argument. If this is a relative file or path it is taken relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptLog&lt;/code&gt; ディレクティブはCGIスクリプトのエラーログファイルを設定します。 &lt;code&gt;ScriptLog&lt;/code&gt; が指定されていない場合、エラーログは作成されません。指定した場合、CGIエラーは引数として指定したファイル名に記録されます。これが相対ファイルまたは相対パスの場合は、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; からの相対パスになります。</target>
        </trans-unit>
        <trans-unit id="b85563f489b494dd0649c84db9666544afbc5ab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAdmin&lt;/code&gt; sets the contact address that the server includes in any error messages it returns to the client. If the &lt;code&gt;httpd&lt;/code&gt; doesn't recognize the supplied argument as an URL, it assumes, that it's an &lt;var&gt;email-address&lt;/var&gt; and prepends it with &lt;code&gt;mailto:&lt;/code&gt; in hyperlink targets. However, it's recommended to actually use an email address, since there are a lot of CGI scripts that make that assumption. If you want to use an URL, it should point to another server under your control. Otherwise users may not be able to contact you in case of errors.</source>
          <target state="translated">&lt;code&gt;ServerAdmin&lt;/code&gt; サーバがクライアントに返すさまざまなエラーメッセージ中に含まれていることを連絡先アドレスを設定します。 &lt;code&gt;httpd&lt;/code&gt; が指定された引数をURLとして認識しない場合は、それが &lt;var&gt;email-address&lt;/var&gt; と見なし、ハイパーリンクターゲットの &lt;code&gt;mailto:&lt;/code&gt; を先頭に付加します。ただし、電子メールアドレスを実際に使用することをお勧めします。これは、その仮定を行うCGIスクリプトが多数あるためです。 URLを使用する場合は、制御下にある別のサーバーを指す必要があります。そうしないと、エラーが発生した場合にユーザーがあなたに連絡できない場合があります。</target>
        </trans-unit>
        <trans-unit id="4a79115a05069fe02e06b3b78b6c9f833777341e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAlias&lt;/code&gt; directive sets the alternate names for a host, for use with &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;. The &lt;code&gt;ServerAlias&lt;/code&gt; may include wildcards, if appropriate.</source>
          <target state="translated">&lt;code&gt;ServerAlias&lt;/code&gt; ディレクティブはで使用するために、ホストの代替名を設定し、&lt;a href=&quot;../vhosts/name-based&quot;&gt;名前ベースのバーチャルホスト&lt;/a&gt;。 &lt;code&gt;ServerAlias&lt;/code&gt; は、適切な場合には、ワイルドカードを含めることができます。</target>
        </trans-unit>
        <trans-unit id="2d6ec5a2eeab9c9f2e0aaa9be5377be801378073" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive may appear anywhere within the definition of a server. However, each appearance overrides the previous appearance (within that server).</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; ディレクティブは、どこかのサーバーの定義内に表示されることがあります。ただし、各外観は、そのサーバー内の以前の外観をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="b4496b84e94af2335c447b8949ed7b550d61558c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive sets the request scheme, hostname and port that the server uses to identify itself.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; ディレクティブは、サーバが使用する自身を識別することを要求スキーム、ホスト名とポートを設定します。</target>
        </trans-unit>
        <trans-unit id="9d3122af841d6fb35cea31c44dc05186784ba6e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerPath&lt;/code&gt; directive sets the legacy URL pathname for a host, for use with &lt;a href=&quot;../vhosts/index&quot;&gt;name-based virtual hosts&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ServerPath&lt;/code&gt; のディレクティブはで使用するために、ホストのレガシーURLパス名を設定し、&lt;a href=&quot;../vhosts/index&quot;&gt;名前ベースのバーチャルホスト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="447c006b438923833d051bdf3e7f7c92a8d7c7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerRoot&lt;/code&gt; directive sets the directory in which the server lives. Typically it will contain the subdirectories &lt;code&gt;conf/&lt;/code&gt; and &lt;code&gt;logs/&lt;/code&gt;. Relative paths in other configuration directives (such as &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;, for example) are taken as relative to this directory.</source>
          <target state="translated">&lt;code&gt;ServerRoot&lt;/code&gt; ディレクティブは、サーバが住んでいるディレクトリを設定します。通常、サブディレクトリ &lt;code&gt;conf/&lt;/code&gt; および &lt;code&gt;logs/&lt;/code&gt; が含まれます。他の構成ディレクティブ（ &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; など）の相対パスは、このディレクトリからの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="9419ead675b5023fb59e852cbdbfda02581ade73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerSignature&lt;/code&gt; directive allows the configuration of a trailing footer line under server-generated documents (error messages, &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; ftp directory listings, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; output, ...). The reason why you would want to enable such a footer line is that in a chain of proxies, the user often has no possibility to tell which of the chained servers actually produced a returned error message.</source>
          <target state="translated">&lt;code&gt;ServerSignature&lt;/code&gt; のディレクティブは、サーバが生成するドキュメント（エラーメッセージ、下の末尾にフッタ行の構成を可能に &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; の FTPディレクトリリスト、 &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; の出力を、...）。このようなフッター行を有効にする理由は、プロキシのチェーンでは、ユーザーが実際に返されたエラーメッセージを生成したチェーンサーバーを特定できない可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="87d7a656dfbfa8f77cfc60799ae0419051b12b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Session&lt;/code&gt; directive enables a session for the directory or location container. Further directives control where the session will be stored and how privacy is maintained.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; ディレクティブは、ディレクトリや場所コンテナのセッションを可能にします。その他のディレクティブは、セッションの保存場所とプライバシーの維持方法を制御します。</target>
        </trans-unit>
        <trans-unit id="3581218c8006dba78b105a8a57fa59c1d26a7efe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName2&lt;/code&gt; directive specifies the name and optional attributes of an RFC2965 compliant cookie inside which the session will be stored. RFC2965 cookies are set using the &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionCookieName2&lt;/code&gt; のディレクティブは、名前と、セッションが保存されますRFC2965準拠したクッキーの内側の任意の属性を指定します。RFC2965 Cookieは、 &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTPヘッダーを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="73eb531e517f03332ca3f819a512afe742aa0c25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName&lt;/code&gt; directive specifies the name and optional attributes of an RFC2109 compliant cookie inside which the session will be stored. RFC2109 cookies are set using the &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionCookieName&lt;/code&gt; のディレクティブは、名前と、セッションが保存されますRFC2109準拠したクッキーの内側の任意の属性を指定します。RFC2109 Cookieは、 &lt;code&gt;Set-Cookie&lt;/code&gt; HTTPヘッダーを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="3ceda7bf6c33969658896de8929697901b953a46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieRemove&lt;/code&gt; flag controls whether the cookies containing the session will be removed from the headers during request processing.</source>
          <target state="translated">&lt;code&gt;SessionCookieRemove&lt;/code&gt; セッションを含有するクッキーが要求処理中のヘッダから削除されるかどうかのフラグを制御します。</target>
        </trans-unit>
        <trans-unit id="7f386d77442a21c2f57fef72d7ac2d54f295033f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoCipher&lt;/code&gt; directive allows the cipher to be used during encryption. If not specified, the cipher defaults to &lt;code&gt;aes256&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SessionCryptoCipher&lt;/code&gt; のディレクティブは、暗号は、暗号化の際に使用することができます。指定しない場合、暗号はデフォルトで &lt;code&gt;aes256&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="6da9fa22befc785c4869ea1efda287df125572b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoDriver&lt;/code&gt; directive specifies the name of the crypto driver to be used for encryption. If not specified, the driver defaults to the recommended driver compiled into APR-util.</source>
          <target state="translated">&lt;code&gt;SessionCryptoDriver&lt;/code&gt; のディレクティブは、暗号化に使用する暗号化ドライバの名前を指定します。指定しない場合、ドライバーはデフォルトでAPR-utilにコンパイルされた推奨ドライバーになります。</target>
        </trans-unit>
        <trans-unit id="eacedf2736a086ef64645b67445cd7b94e720876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoPassphrase&lt;/code&gt; directive specifies the keys to be used to enable symmetrical encryption on the contents of the session before writing the session, or decrypting the contents of the session after reading the session.</source>
          <target state="translated">&lt;code&gt;SessionCryptoPassphrase&lt;/code&gt; のディレクティブは、セッションを書く、またはセッションを読んだ後、セッションの内容を解読する前に、セッションの内容で対称暗号化を有効にするために使用するキーを指定します。</target>
        </trans-unit>
        <trans-unit id="4e1365726ee510c6c8b0715f63fd9a6629d6d3a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoPassphraseFile&lt;/code&gt; directive specifies the name of a configuration file containing the keys to use for encrypting or decrypting the session, specified one per line. The file is read on server start, and a graceful restart will be necessary for httpd to pick up changes to the keys.</source>
          <target state="translated">&lt;code&gt;SessionCryptoPassphraseFile&lt;/code&gt; のディレクティブは、セッションの暗号化や復号化に使用するキーを含む設定ファイルの名前は、1行に1つずつ指定指定します。ファイルはサーバーの起動時に読み取られ、httpdがキーへの変更を取得するには、適切な再起動が必要になります。</target>
        </trans-unit>
        <trans-unit id="a2f2de4030d06bf6501cad515273c56a046ac703" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieName2&lt;/code&gt; directive specifies the name and optional attributes of an RFC2965 compliant cookie inside which the session ID will be stored. RFC2965 cookies are set using the &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieName2&lt;/code&gt; のディレクティブは、名前とセッションIDを保存するRFC2965準拠したクッキーの内部のオプションの属性を指定します。RFC2965 Cookieは、 &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTPヘッダーを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="df076efb5147f0c9a9a0d07415109a24d70cf925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieName&lt;/code&gt; directive specifies the name and optional attributes of an RFC2109 compliant cookie inside which the session ID will be stored. RFC2109 cookies are set using the &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieName&lt;/code&gt; のディレクティブは、名前とセッションIDを保存するRFC2109準拠したクッキーの内側の任意の属性を指定します。RFC2109 Cookieは、 &lt;code&gt;Set-Cookie&lt;/code&gt; HTTPヘッダーを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="59b5061d2deeeb9851a128bdb9758d76ec212bc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieRemove&lt;/code&gt; flag controls whether the cookies containing the session ID will be removed from the headers during request processing.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieRemove&lt;/code&gt; セッションIDを含むクッキーが要求処理中のヘッダから削除されるかどうかのフラグを制御します。</target>
        </trans-unit>
        <trans-unit id="d618abcad6d8f9e99317882843d38c6240234b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDDeleteLabel&lt;/code&gt; directive sets the default delete query label to be used to delete an expired or empty session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDDeleteLabel&lt;/code&gt; 期限切れのか、空のセッションを削除するために使用されるデフォルト削除クエリのラベルディレクティブセット。このラベルは、 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して事前に定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="88f5fa1c9f370c76bcbf56ab96591328a94314d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDInsertLabel&lt;/code&gt; directive sets the default insert query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDInsertLabel&lt;/code&gt; のディレクティブは、セッション中にロードするために使用されるクエリのラベル挿入デフォルト値を設定します。このラベルは、 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して事前に定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="2276874a805b84a42841912972186fca2c4c03d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDPerUser&lt;/code&gt; flag enables a per user session keyed against the user's login name. If the user is not logged in, this directive will be ignored.</source>
          <target state="translated">&lt;code&gt;SessionDBDPerUser&lt;/code&gt; のフラグは、ユーザーのログイン名に対してキーユーザーごとにセッションを可能にします。ユーザーがログインしていない場合、このディレクティブは無視されます。</target>
        </trans-unit>
        <trans-unit id="52cb411b91e422c41dded13fba7d4deb2153925e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDSelectLabel&lt;/code&gt; directive sets the default select query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDSelectLabel&lt;/code&gt; のディレクティブは、セッション中にロードするために使用されるデフォルト選択クエリのラベルを設定します。このラベルは、 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して事前に定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="a4997676098abf3160f0788257f8f906c801e2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDUpdateLabel&lt;/code&gt; directive sets the default update query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDUpdateLabel&lt;/code&gt; のディレクティブは、セッション中にロードするために使用されるデフォルト更新クエリのラベルを設定します。このラベルは、 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して事前に定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="5c0368dbeb1bb238dd385f5257dd009e5d79134d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionExclude&lt;/code&gt; directive allows sessions to be disabled relative to URL prefixes only. This can be used to make a website more efficient, by targeting a more precise URL space for which a session should be maintained. By default, all URLs within the directory or location are included in the session. The &lt;code&gt;&lt;a href=&quot;#sessionexclude&quot;&gt;SessionExclude&lt;/a&gt;&lt;/code&gt; directive takes precedence over the &lt;code&gt;&lt;a href=&quot;#sessioninclude&quot;&gt;SessionInclude&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionExclude&lt;/code&gt; のディレクティブは、セッションのみURLプレフィックスに無効に相対することができます。これは、セッションを維持する必要があるより正確なURLスペースをターゲットにすることにより、Webサイトをより効率的にするために使用できます。デフォルトでは、ディレクトリまたは場所内のすべてのURLがセッションに含まれます。 &lt;code&gt;&lt;a href=&quot;#sessionexclude&quot;&gt;SessionExclude&lt;/a&gt;&lt;/code&gt; のディレクティブはよりも優先されます &lt;code&gt;&lt;a href=&quot;#sessioninclude&quot;&gt;SessionInclude&lt;/a&gt;&lt;/code&gt; のディレクティブ。</target>
        </trans-unit>
        <trans-unit id="3aadee58f7c07ff41f0f07eee0270b335fc3445a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionHeader&lt;/code&gt; directive defines the name of an HTTP response header which, if present, will be parsed and written to the current session.</source>
          <target state="translated">&lt;code&gt;SessionHeader&lt;/code&gt; の指令は存在する場合、構文解析され、現在のセッションに書き込まれ、HTTP応答ヘッダーの名前を定義します。</target>
        </trans-unit>
        <trans-unit id="92795b37001c7cacc90951227203b7f52b278ef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionInclude&lt;/code&gt; directive allows sessions to be made valid for specific URL prefixes only. This can be used to make a website more efficient, by targeting a more precise URL space for which a session should be maintained. By default, all URLs within the directory or location are included in the session.</source>
          <target state="translated">&lt;code&gt;SessionInclude&lt;/code&gt; のディレクティブは、セッションは、特定のURLプレフィックスのみ有効行うことを可能にします。これは、セッションを維持する必要があるより正確なURLスペースをターゲットにすることにより、Webサイトをより効率的にするために使用できます。デフォルトでは、ディレクトリまたは場所内のすべてのURLがセッションに含まれます。</target>
        </trans-unit>
        <trans-unit id="77662fb79cca01c16b4f2859ca89b5ac1c8155cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionMaxAge&lt;/code&gt; directive defines a time limit for which a session will remain valid. When a session is saved, this time limit is reset and an existing session can be continued. If a session becomes older than this limit without a request to the server to refresh the session, the session will time out and be removed. Where a session is used to stored user login details, this has the effect of logging the user out automatically after the given time.</source>
          <target state="translated">&lt;code&gt;SessionMaxAge&lt;/code&gt; のディレクティブは、セッションが有効のままになりますそのために時間制限を定義します。セッションが保存されると、この制限時間はリセットされ、既存のセッションを続行できます。セッションを更新するサーバーへのリクエストなしにセッションがこの制限よりも古くなると、セッションはタイムアウトし、削除されます。ユーザーのログイン詳細を保存するためにセッションが使用されている場合、これは、指定された時間が経過すると自動的にユーザーをログアウトさせる効果があります。</target>
        </trans-unit>
        <trans-unit id="cb229e01799a21ddfb26be466fea2d9da76ec618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIf&lt;/code&gt; directive defines environment variables based on attributes of the request. The &lt;em&gt;attribute&lt;/em&gt; specified in the first argument can be one of four things:</source>
          <target state="translated">&lt;code&gt;SetEnvIf&lt;/code&gt; ディレクティブのディレクティブは、リクエストの属性に基づいて環境変数を定義します。&lt;em&gt;属性&lt;/em&gt;の最初の引数に指定され、4つの事柄のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="9653913b74053d6c1d36afd5624fb12e581fa730" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIfExpr&lt;/code&gt; directive defines environment variables based on an &lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ap_expr&lt;/code&gt;. These expressions will be evaluated at runtime, and applied &lt;em&gt;env-variable&lt;/em&gt; in the same fashion as &lt;code&gt;SetEnvIf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetEnvIfExpr&lt;/code&gt; に基づく指示を定義する環境変数 &lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ap_expr&lt;/code&gt; 。これらの式は実行時に評価され、 &lt;code&gt;SetEnvIf&lt;/code&gt; と同じ方法で&lt;em&gt;env-variable&lt;/em&gt;が適用されます。</target>
        </trans-unit>
        <trans-unit id="9d6a82718219864af7c49b35d37f6a5e548b0c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIfNoCase&lt;/code&gt; is semantically identical to the &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; directive, and differs only in that the regular expression matching is performed in a case-insensitive manner. For example:</source>
          <target state="translated">&lt;code&gt;SetEnvIfNoCase&lt;/code&gt; は、意味的に同一である &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; ディレクティブの指令、およびのみ正規表現マッチングは大文字と小文字を区別しない方法で行われる点が異なります。例えば：</target>
        </trans-unit>
        <trans-unit id="30501663822b7f60c3d56e77f606e280985e0275" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetInputFilter&lt;/code&gt; directive sets the filter or filters which will process client requests and POST input when they are received by the server. This is in addition to any filters defined elsewhere, including the &lt;code&gt;&lt;a href=&quot;mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SetInputFilter&lt;/code&gt; のディレクティブはサーバが受け取ったとき、クライアントのリクエストやPOSTの入力を処理するフィルタまたはフィルタを設定します。これは、 &lt;code&gt;&lt;a href=&quot;mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; ディレクティブを含む、他の場所で定義されたフィルターに追加されます。</target>
        </trans-unit>
        <trans-unit id="d6d50a18f8631909e728134cf29089f64db65f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetOutputFilter&lt;/code&gt; directive sets the filters which will process responses from the server before they are sent to the client. This is in addition to any filters defined elsewhere, including the &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SetOutputFilter&lt;/code&gt; をするディレクティブは、それらがクライアントに送信される前に、サーバからの応答を処理するフィルタを設定します。これは、 &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; ディレクティブを含む、他の場所で定義されたフィルターに追加されます。</target>
        </trans-unit>
        <trans-unit id="f7bc3db80fe7a2dfced2969c73c74f359580ad9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StartServers&lt;/code&gt; directive sets the number of child server processes created on startup. As the number of processes is dynamically controlled depending on the load, (see &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt;) there is usually little reason to adjust this parameter.</source>
          <target state="translated">&lt;code&gt;StartServers&lt;/code&gt; ディレクティブを設定、起動時に作成した子サーバプロセスの数。プロセスの数は負荷に応じて動的に制御されるため（ &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;prefork#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt; を参照）、通常、このパラメーターを調整する理由はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="661d82065fc50618737a34b6fe73d080f7b53cae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Substitute&lt;/code&gt; directive specifies a search and replace pattern to apply to the response body.</source>
          <target state="translated">&lt;code&gt;Substitute&lt;/code&gt; ディレクティブはレスポンスボディに適用する検索と置換パターンを指定します。</target>
        </trans-unit>
        <trans-unit id="7070a45fcfc396c8a4641ed990917fda5fb4ccec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SuexecUserGroup&lt;/code&gt; directive allows you to specify a user and group for CGI programs to run as. Non-CGI requests are still processed with the user specified in the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SuexecUserGroup&lt;/code&gt; ディレクティブのディレクティブを使用すると、CGIプログラムとして実行するためのユーザーとグループを指定することができます。CGI以外の要求は引き続き、 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたユーザーで処理されます。</target>
        </trans-unit>
        <trans-unit id="af6f75080721e51d30caea97364b7e7395f62cb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadStackSize&lt;/code&gt; directive sets the size of the stack (for autodata) of threads which handle client connections and call modules to help process those connections. In most cases the operating system default for stack size is reasonable, but there are some conditions where it may need to be adjusted:</source>
          <target state="translated">&lt;code&gt;ThreadStackSize&lt;/code&gt; はのディレクティブは、ヘルププロセスにこれらの接続をハンドルクライアント接続およびコール・モジュールのスレッド（autodata用）スタックのサイズを設定します。ほとんどの場合、スタックサイズのオペレーティングシステムのデフォルトは妥当ですが、調整が必要になる場合があるいくつかの条件があります。</target>
        </trans-unit>
        <trans-unit id="395884148f1c8dc6d263b01b713cf222216c6842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeOut&lt;/code&gt; directive defines the length of time Apache httpd will wait for I/O in various circumstances:</source>
          <target state="translated">&lt;code&gt;TimeOut&lt;/code&gt; ディレクティブは、httpdのは、さまざまな状況でI / Oを待つことになるApacheの時間の長さを定義します。</target>
        </trans-unit>
        <trans-unit id="dffb7a859d8f5c1753551bbd087b8f3753f39d66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Type&lt;/code&gt; keyword allows you to specify the MIME content-type of the generated page. The default is &lt;var&gt;text/html&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; キーワードを使用すると、生成されたページのMIMEコンテンツタイプを指定することができます。デフォルトは &lt;var&gt;text/html&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="fe74dadd13532eba738a1017a1451a723e874bd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypesConfig&lt;/code&gt; directive sets the location of the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media types&lt;/a&gt; configuration file. &lt;var&gt;File-path&lt;/var&gt; is relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. This file sets the default list of mappings from filename extensions to content types. Most administrators use the &lt;code&gt;mime.types&lt;/code&gt; file provided by their OS, which associates common filename extensions with the official list of IANA registered media types maintained at &lt;a href=&quot;http://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt; as well as a large number of unofficial types. This simplifies the &lt;code&gt;httpd.conf&lt;/code&gt; file by providing the majority of media-type definitions, and may be overridden by &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives as needed. You should not edit the &lt;code&gt;mime.types&lt;/code&gt; file, because it may be replaced when you upgrade your server.</source>
          <target state="translated">&lt;code&gt;TypesConfig&lt;/code&gt; はのディレクティブはの場所に設定&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;メディアタイプの&lt;/a&gt;設定ファイルを。 &lt;var&gt;File-path&lt;/var&gt; は &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; を基準にしています。このファイルは、ファイル名拡張子からコンテンツタイプへのマッピングのデフォルトリストを設定します。ほとんどの管理者は、使用 &lt;code&gt;mime.types&lt;/code&gt; に維持メディアタイプIANAの公式リストと共通のファイル名の拡張子を関連付け、そのOSが提供するファイルを登録し&lt;a href=&quot;http://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt;うまくように多数の非公式タイプとして。これにより、メディアタイプ定義の大部分が提供され、 &lt;code&gt;httpd.conf&lt;/code&gt; ファイルが簡略化されます。また、 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; によってオーバーライドされる場合があります。必要に応じてディレクティブ。サーバーをアップグレードすると &lt;code&gt;mime.types&lt;/code&gt; ファイルは置き換えられる可能性があるため、編集しないでください。</target>
        </trans-unit>
        <trans-unit id="2dd7003f19d2654f2242b05fc894ff130176dcec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypesConfig&lt;/code&gt; directive sets the location of the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media types&lt;/a&gt; configuration file. &lt;var&gt;File-path&lt;/var&gt; is relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. This file sets the default list of mappings from filename extensions to content types. Most administrators use the &lt;code&gt;mime.types&lt;/code&gt; file provided by their OS, which associates common filename extensions with the official list of IANA registered media types maintained at &lt;a href=&quot;https://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt; as well as a large number of unofficial types. This simplifies the &lt;code&gt;httpd.conf&lt;/code&gt; file by providing the majority of media-type definitions, and may be overridden by &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives as needed. You should not edit the &lt;code&gt;mime.types&lt;/code&gt; file, because it may be replaced when you upgrade your server.</source>
          <target state="translated">&lt;code&gt;TypesConfig&lt;/code&gt; はのディレクティブはの場所に設定&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;メディアタイプの&lt;/a&gt;設定ファイルを。 &lt;var&gt;File-path&lt;/var&gt; は &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; からの相対パスです。このファイルは、ファイル名拡張子からコンテンツタイプへのマッピングのデフォルトリストを設定します。ほとんどの管理者は、使用 &lt;code&gt;mime.types&lt;/code&gt; に維持メディアタイプIANAの公式リストと共通のファイル名の拡張子を関連付け、そのOSが提供するファイルを登録し&lt;a href=&quot;https://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt;うまくように多数の非公式タイプとして。これにより、メディアタイプ定義の大部分が提供されるため、 &lt;code&gt;httpd.conf&lt;/code&gt; ファイルが簡素化され、 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; によってオーバーライドされる可能性があります。必要に応じてディレクティブ。 &lt;code&gt;mime.types&lt;/code&gt; ファイルは、サーバーのアップグレード時に置き換えられる可能性があるため、編集しないでください。</target>
        </trans-unit>
        <trans-unit id="3d58d4fdb1e17ba09081eb178e2fca0f198d20d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNIQUE_ID&lt;/code&gt; environment variable is constructed by encoding the 144-bit (32-bit IP address, 32 bit pid, 32 bit time stamp, 16 bit counter, 32 bit thread index) quadruple using the alphabet &lt;code&gt;[A-Za-z0-9@-]&lt;/code&gt; in a manner similar to MIME base64 encoding, producing 24 characters. The MIME base64 alphabet is actually &lt;code&gt;[A-Za-z0-9+/]&lt;/code&gt; however &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; need to be specially encoded in URLs, which makes them less desirable. All values are encoded in network byte ordering so that the encoding is comparable across architectures of different byte ordering. The actual ordering of the encoding is: time stamp, IP address, pid, counter. This ordering has a purpose, but it should be emphasized that applications should not dissect the encoding. Applications should treat the entire encoded &lt;code&gt;UNIQUE_ID&lt;/code&gt; as an opaque token, which can be compared against other &lt;code&gt;UNIQUE_ID&lt;/code&gt;s for equality only.</source>
          <target state="translated">&lt;code&gt;UNIQUE_ID&lt;/code&gt; の環境変数は、アルファベットを使用して144ビット（32ビットIPアドレス、32ビットのPID、32ビットのタイムスタンプ、16ビットカウンタ、32ビットのスレッドインデックス）四重極を符号化することによって構築される &lt;code&gt;[A-Za-z0-9@-]&lt;/code&gt; MIME base64エンコーディングと同様の方法で、24文字を生成します。MIME base64アルファベットは実際には &lt;code&gt;[A-Za-z0-9+/]&lt;/code&gt; ですが、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; URLで特別にエンコードする必要があるため、URLはあまり望ましくありません。すべての値はネットワークのバイト順でエンコードされているため、異なるバイト順のアーキテクチャ間でエンコードを比較できます。エンコーディングの実際の順序は、タイムスタンプ、IPアドレス、pid、カウンターです。この順序付けには目的がありますが、アプリケーションがエンコードを分析してはならないことを強調してください。アプリケーションは、エンコードされた &lt;code&gt;UNIQUE_ID&lt;/code&gt; 全体を不透明なトークンとして処理する必要があります。これは、他の &lt;code&gt;UNIQUE_ID&lt;/code&gt; と比較して同等かどうかを確認するだけです。</target>
        </trans-unit>
        <trans-unit id="9e4551453abddb502bb59e340697e4eb6102d571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USR1&lt;/code&gt; or &lt;code&gt;graceful&lt;/code&gt; signal causes the parent process to &lt;em&gt;advise&lt;/em&gt; the children to exit after their current request (or to exit immediately if they're not serving anything). The parent re-reads its configuration files and re-opens its log files. As each child dies off the parent replaces it with a child from the new &lt;em&gt;generation&lt;/em&gt; of the configuration, which begins serving new requests immediately.</source>
          <target state="translated">&lt;code&gt;USR1&lt;/code&gt; あるいは &lt;code&gt;graceful&lt;/code&gt; 信号は、親プロセスの原因となる&lt;em&gt;助言&lt;/em&gt;彼らの現在のリクエスト（あるいは何もしていない場合はすぐに終了する）の後、出口に子供たちを。親は構成ファイルを再度読み取り、ログファイルを再度開きます。各子が消滅すると、親は新しい&lt;em&gt;世代&lt;/em&gt;の構成の子に置き換えられ、新しい要求の処理がすぐに開始されます。</target>
        </trans-unit>
        <trans-unit id="eab3f96b1dceb7f15371b26b82413db8ecea1174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndefMacro&lt;/code&gt; directive undefines a macro which has been defined before hand.</source>
          <target state="translated">&lt;code&gt;UndefMacro&lt;/code&gt; ディレクティブは手の前に定義されているマクロを未定義。</target>
        </trans-unit>
        <trans-unit id="8751e152a533d0f2a265bd4dab53c0f1fc3b709f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Use&lt;/code&gt; directive controls the use of a macro. The specified macro is expanded. It must be given the same number of arguments as in the macro definition. The provided values are associated to their corresponding initial parameters and are substituted before processing.</source>
          <target state="translated">&lt;code&gt;Use&lt;/code&gt; ディレクティブは、マクロの使用を制御します。指定したマクロが展開されます。マクロ定義と同じ数の引数を指定する必要があります。提供された値は、対応する初期パラメーターに関連付けられ、処理前に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="2336db4488ca47fcd3b9530b19a07a8aac9879e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;User&lt;/code&gt; directive sets the user ID as which the server will answer requests. In order to use this directive, the server must be run initially as &lt;code&gt;root&lt;/code&gt;. If you start the server as a non-root user, it will fail to change to the lesser privileged user, and will instead continue to run as that original user. If you do start the server as &lt;code&gt;root&lt;/code&gt;, then it is normal for the parent process to remain running as root. &lt;var&gt;Unix-userid&lt;/var&gt; is one of:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; ディレクティブはサーバがリクエストに応答するように、ユーザIDを設定します。このディレクティブを使用するには、サーバーを最初に &lt;code&gt;root&lt;/code&gt; として実行する必要があります。root以外のユーザーとしてサーバーを起動すると、権限の低いユーザーへの変更に失敗し、代わりに元のユーザーとして実行を続けます。サーバーを &lt;code&gt;root&lt;/code&gt; として起動する場合、通常、親プロセスはrootとして実行されたままです。 &lt;var&gt;Unix-userid&lt;/var&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="b14c4cb9943a8831d01b690a2705edc11edab234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserDir&lt;/code&gt; directive sets the real directory in a user's home directory to use when a request for a document for a user is received. &lt;em&gt;Directory-filename&lt;/em&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;UserDir&lt;/code&gt; のはユーザーのドキュメントへのリクエストを受けたときディレクティブは、使用するユーザーのホームディレクトリにある実際のディレクトリを設定します。&lt;em&gt;Directory-filename&lt;/em&gt;は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="7c5d5edcc599540d9f89a552f1c424981843aaa4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VHostGroup&lt;/code&gt; directive sets the Unix group under which the server will process requests to a virtualhost. The group is set before the request is processed and reset afterwards using &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;. Since the setting applies to the &lt;em&gt;process&lt;/em&gt;, this is not compatible with threaded MPMs.</source>
          <target state="translated">&lt;code&gt;VHostGroup&lt;/code&gt; のディレクティブは、サーバーがバーチャルホストへのリクエストを処理するUNIXグループを設定します。グループは要求が処理される前に設定され、後で&lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;を使用してリセットされます。設定は&lt;em&gt;プロセス&lt;/em&gt;に適用されるため、これはスレッド化されたMPMと互換性がありません。</target>
        </trans-unit>
        <trans-unit id="fae1a6f48441fbe2b6013040d031d75b85df7781" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VHostUser&lt;/code&gt; directive sets the Unix userid under which the server will process requests to a virtualhost. The userid is set before the request is processed and reset afterwards using &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;. Since the setting applies to the &lt;em&gt;process&lt;/em&gt;, this is not compatible with threaded MPMs.</source>
          <target state="translated">&lt;code&gt;VHostUser&lt;/code&gt; のディレクティブは、サーバーがバーチャルホストへのリクエストを処理するUNIXユーザーIDを設定します。useridは、要求が処理される前に設定され、後で&lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;を使用してリセットされます。設定は&lt;em&gt;プロセス&lt;/em&gt;に適用されるため、これはスレッド化されたMPMと互換性がありません。</target>
        </trans-unit>
        <trans-unit id="4c9e075f2dbe3fea86c0f1a92c0e9de4e56ca7b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VersionSort&lt;/code&gt; keyword causes files containing version numbers to sort in a natural way. Strings are sorted as usual, except that substrings of digits in the name and description are compared according to their numeric value.</source>
          <target state="translated">&lt;code&gt;VersionSort&lt;/code&gt; のキーワードは、自然な方法でソートにバージョン番号を含むファイルの原因となります。文字列は通常どおりにソートされますが、名前と説明の数字の部分文字列は数値に従って比較されます。</target>
        </trans-unit>
        <trans-unit id="444ede4b5731332d9079d33327f1eebe36ba4fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; directive allows you to determine where Apache HTTP Server will find your documents based on the value of the server name. The result of expanding &lt;em&gt;interpolated-directory&lt;/em&gt; is used as the root of the document tree in a similar manner to the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive's argument. If &lt;em&gt;interpolated-directory&lt;/em&gt; is &lt;code&gt;none&lt;/code&gt; then &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; is turned off. This directive cannot be used in the same context as &lt;code&gt;&lt;a href=&quot;#virtualdocumentrootip&quot;&gt;VirtualDocumentRootIP&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VirtualDocumentRoot&lt;/code&gt; のディレクティブは、Apache HTTP Serverは、サーバー名の値に基づいてドキュメントを検索できます、あなたが決定することができます。&lt;em&gt;Interpolated-Directory&lt;/em&gt;を展開した結果は、 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; ディレクティブの引数と同様の方法で、ドキュメントツリーのルートとして使用されます。場合は&lt;em&gt;補間-ディレクトリは&lt;/em&gt;ありません &lt;code&gt;none&lt;/code&gt; 、その後 &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; がオフになっています。このディレクティブは &lt;code&gt;&lt;a href=&quot;#virtualdocumentrootip&quot;&gt;VirtualDocumentRootIP&lt;/a&gt;&lt;/code&gt; と同じコンテキストでは使用できません。</target>
        </trans-unit>
        <trans-unit id="917afe268f9c520c1fa0671a469c4bb372d1b62d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualDocumentRootIP&lt;/code&gt; directive is like the &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; directive, except that it uses the IP address of the server end of the connection for directory interpolation instead of the server name.</source>
          <target state="translated">&lt;code&gt;VirtualDocumentRootIP&lt;/code&gt; のディレクティブはのようなものです &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; のではなく、サーバー名のディレクトリ補間のための接続のサーバ側のIPアドレスを使用することを除いて、ディレクティブ。</target>
        </trans-unit>
        <trans-unit id="da97c50277fc450af2d3ac974a7d672263c1a759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualScriptAlias&lt;/code&gt; directive allows you to determine where Apache httpd will find CGI scripts in a similar manner to &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; does for other documents. It matches requests for URIs starting &lt;code&gt;/cgi-bin/&lt;/code&gt;, much like &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt;&lt;code&gt;/cgi-bin/&lt;/code&gt; would.</source>
          <target state="translated">&lt;code&gt;VirtualScriptAlias&lt;/code&gt; のディレクティブは、あなたは、Apache HTTPDのと同様の方法でCGIスクリプトを見つける場所を決定することができます &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; 他の文書のために行います。 &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; &lt;code&gt;/cgi-bin/&lt;/code&gt; と同様に、 &lt;code&gt;/cgi-bin/&lt;/code&gt; で始まるURIのリクエストに一致します。</target>
        </trans-unit>
        <trans-unit id="6e1606072017371433371432f98aead2ec403356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualScriptAliasIP&lt;/code&gt; directive is like the &lt;code&gt;&lt;a href=&quot;#virtualscriptalias&quot;&gt;VirtualScriptAlias&lt;/a&gt;&lt;/code&gt; directive, except that it uses the IP address of the server end of the connection for directory interpolation instead of the server name.</source>
          <target state="translated">&lt;code&gt;VirtualScriptAliasIP&lt;/code&gt; のディレクティブはのようなものです &lt;code&gt;&lt;a href=&quot;#virtualscriptalias&quot;&gt;VirtualScriptAlias&lt;/a&gt;&lt;/code&gt; のではなく、サーバー名のディレクトリ補間のための接続のサーバ側のIPアドレスを使用することを除いて、ディレクティブ。</target>
        </trans-unit>
        <trans-unit id="734b3fb50208490ea0e8adaf520c427f34439803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WINCH&lt;/code&gt; or &lt;code&gt;graceful-stop&lt;/code&gt; signal causes the parent process to &lt;em&gt;advise&lt;/em&gt; the children to exit after their current request (or to exit immediately if they're not serving anything). The parent will then remove its &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; and cease listening on all ports. The parent will continue to run, and monitor children which are handling requests. Once all children have finalised and exited or the timeout specified by the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#gracefulshutdowntimeout&quot;&gt;GracefulShutdownTimeout&lt;/a&gt;&lt;/code&gt; has been reached, the parent will also exit. If the timeout is reached, any remaining children will be sent the &lt;code&gt;TERM&lt;/code&gt; signal to force them to exit.</source>
          <target state="translated">&lt;code&gt;WINCH&lt;/code&gt; あるいは &lt;code&gt;graceful-stop&lt;/code&gt; 信号は、親プロセスの原因となる&lt;em&gt;助言&lt;/em&gt;彼らの現在のリクエスト（あるいは何もしていない場合はすぐに終了する）の後、出口に子供たちを。その後、親は &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; を削除し、すべてのポートでのリッスンを中止します。親は引き続き実行し、リクエストを処理している子を監視します。すべての子がファイナライズして終了するか、 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#gracefulshutdowntimeout&quot;&gt;GracefulShutdownTimeout&lt;/a&gt;&lt;/code&gt; で指定されたタイムアウトに達すると、親も終了します。タイムアウトに達すると、残りの子には &lt;code&gt;TERM&lt;/code&gt; シグナルが送信され、強制的に終了します。</target>
        </trans-unit>
        <trans-unit id="c03f2bbc0779bd2e9065d3bd33c20444c3a88d0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XBitHack&lt;/code&gt; directive controls the parsing of ordinary html documents. This directive only affects files associated with the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIME-type&lt;/a&gt;&lt;code&gt;text/html&lt;/code&gt;. &lt;code&gt;XBitHack&lt;/code&gt; can take on the following values:</source>
          <target state="translated">&lt;code&gt;XBitHack&lt;/code&gt; のディレクティブは、通常のHTML文書の構文解析を制御します。このディレクティブは、&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIMEタイプ&lt;/a&gt; &lt;code&gt;text/html&lt;/code&gt; に関連付けられたファイルにのみ影響します。 &lt;code&gt;XBitHack&lt;/code&gt; は次の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="c01566797ac73afcd10f2302cf0d94fbce4187a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XHTML&lt;/code&gt; keyword forces &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to emit XHTML 1.0 code instead of HTML 3.2. &lt;strong&gt;This option only has an effect if &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt; is also enabled.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;XHTML&lt;/code&gt; キーワード軍は &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; の代わりにHTML 3.2のXHTML 1.0のコードを放出します。&lt;strong&gt;このオプションは、&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt; &lt;code&gt;FancyIndexing&lt;/code&gt; &lt;/a&gt;も有効になっている場合にのみ効果があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a35c73a1ef64c13f1bc627aa47c5b884acbc2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[F]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; flag causes a 403 Forbidden response to be sent. Using this, you can deny access to a resource based on arbitrary criteria.</source>
          <target state="translated">&lt;code&gt;[F]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; フラグ403禁止応答を送信させます。これを使用すると、任意の基準に基づいてリソースへのアクセスを拒否できます。</target>
        </trans-unit>
        <trans-unit id="2bd0333c0ee0046fa6c1cda8f702dbf34d032136" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all&lt;/code&gt; provider mimics the functionality that was previously provided by the 'Allow from all' and 'Deny from all' directives. This provider can take one of two arguments which are 'granted' or 'denied'. The following examples will grant or deny access to all requests.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; のプロバイダを模倣以前に「すべてから許可」と指令「すべてから拒否」によって提供された機能を提供します。このプロバイダーは、「許可」または「拒否」される2つの引数の1つを取ることができます。次の例では、すべてのリクエストへのアクセスを許可または拒否します。</target>
        </trans-unit>
        <trans-unit id="bd0b79b0079949c892c972fa3ebc1cead05f6e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apachectl&lt;/code&gt; script can operate in two modes. First, it can act as a simple front-end to the &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command that simply sets any necessary environment variables and then invokes &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;, passing through any command line arguments. Second, &lt;code&gt;apachectl&lt;/code&gt; can act as a SysV init script, taking simple one-word arguments like &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, and &lt;code&gt;stop&lt;/code&gt;, and translating them into appropriate signals to &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apachectl&lt;/code&gt; スクリプトは、2つのモードで動作することができます。まず、それはへのシンプルなフロントエンドとして機能することができ &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 単に任意の必要な環境変数を設定し、呼び出すことコマンド &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; コマンドライン引数を通過し、。次に、 &lt;code&gt;apachectl&lt;/code&gt; はSysV initスクリプトとして機能し、 &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;restart&lt;/code&gt; 、および &lt;code&gt;stop&lt;/code&gt; などの単純な1ワードの引数を取り、それらを適切な信号に &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="a99f4d6f5915d4c4c7f69951d653f85ca77a86dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apachectl&lt;/code&gt; script returns a 0 exit value on success, and &amp;gt;0 if an error occurs. For more details, view the comments in the script.</source>
          <target state="translated">&lt;code&gt;apachectl&lt;/code&gt; のエラーが発生した場合、スクリプトは、成功すると0終了値を返し、&amp;gt; 0。詳細については、スクリプトのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4220cb5bca1d9c24b575c682310eb73f1c8db4be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; are optional and have the following structure:</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; オプションであり、以下の構造を持っています：</target>
        </trans-unit>
        <trans-unit id="a0828c6b1804f3d34408417d028b717ea554f273" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;balancer://&lt;/code&gt; scheme is what tells httpd that we are creating a balancer set, with the name &lt;em&gt;myset&lt;/em&gt;. It includes 2 backend servers, which httpd calls &lt;em&gt;BalancerMembers&lt;/em&gt;. In this case, any requests for &lt;code&gt;/images&lt;/code&gt; will be proxied to &lt;em&gt;one&lt;/em&gt; of the 2 backends. The &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; directive specifies that the &lt;em&gt;myset&lt;/em&gt; Balancer use a load balancing algorithm that balances based on I/O bytes.</source>
          <target state="translated">&lt;code&gt;balancer://&lt;/code&gt; スキームは、我々は名前と、バランサセットを作成していることにhttpdを告げるものです&lt;em&gt;MYSET&lt;/em&gt;。これには、httpdが&lt;em&gt;BalancerMembersを&lt;/em&gt;呼び出す2つのバックエンドサーバーが含まれます。この場合、 &lt;code&gt;/images&lt;/code&gt; に対するリクエストは2 &lt;em&gt;つ&lt;/em&gt;のバックエンドの&lt;em&gt;いずれか&lt;/em&gt;にプロキシされます。 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; ことディレクティブを指定&lt;em&gt;MYSET&lt;/em&gt; BalancerはI / Oに基づく残高はバイトというロードバランシングアルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="d63d27e77d3a712de9a0bb56620d0a03af45f238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brk(2)&lt;/code&gt; calls allocate memory from the heap. It is rare to see these in a system call trace, because the httpd uses custom memory allocators (&lt;code&gt;apr_pool&lt;/code&gt; and &lt;code&gt;apr_bucket_alloc&lt;/code&gt;) for most request processing. In this trace, the httpd has just been started, so it must call &lt;code&gt;malloc(3)&lt;/code&gt; to get the blocks of raw memory with which to create the custom memory allocators.</source>
          <target state="translated">&lt;code&gt;brk(2)&lt;/code&gt; コールは、ヒープからメモリを割り当てます。httpdはほとんどの要求処理にカスタムメモリアロケータ（ &lt;code&gt;apr_pool&lt;/code&gt; および &lt;code&gt;apr_bucket_alloc&lt;/code&gt; ）を使用するため、システムコールトレースでこれらを確認することはまれです。このトレースでは、httpdが開始されたばかりなので、 &lt;code&gt;malloc(3)&lt;/code&gt; を呼び出して、カスタムメモリアロケータを作成するためのrawメモリのブロックを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="c225021d791963e9c8d4e3984033a3d5a33c8b5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_forensic&lt;/code&gt; script takes as its argument the name of the logfile. It looks for those &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt; ID pairs and complains if a request was not completed.</source>
          <target state="translated">&lt;code&gt;check_forensic&lt;/code&gt; スクリプトは、引数としてログファイルの名前を取ります。これは、それらの探し &lt;code&gt;+&lt;/code&gt; / &lt;code&gt;-&lt;/code&gt; IDのペアと要求が完了しなかった場合は文句を言います。</target>
        </trans-unit>
        <trans-unit id="517fd8345fddc43d0a96b2c95bcf594db5bdae2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_forensic&lt;/code&gt; script, which can be found in the distribution's support directory, may be helpful in evaluating the forensic log output.</source>
          <target state="translated">&lt;code&gt;check_forensic&lt;/code&gt; ディストリビューションのサポートディレクトリで見つけることができますスクリプトは、法医学ログ出力を評価するのに役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="c30a9b0597bd0bc03d77d8ab64e3a2be6211833a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmd=&lt;/code&gt; keyword allows you to specify the external command to run. If there are arguments after the program name, the command line should be surrounded in quotation marks (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;cmd=&quot;/bin/mypgm arg1 arg2&quot;&lt;/code&gt;.) Normal shell quoting is not necessary since the program is run directly, bypassing the shell. Program arguments are blank-delimited. A backslash can be used to escape blanks which should be part of a program argument. Any backslashes which are part of the argument must be escaped with backslash themselves. In addition to the standard CGI environment variables, DOCUMENT_URI, DOCUMENT_PATH_INFO, and QUERY_STRING_UNESCAPED will also be set for the program.</source>
          <target state="translated">&lt;code&gt;cmd=&lt;/code&gt; キーワードは実行する外部コマンドを指定することができます。プログラム名の後に引数がある場合は、コマンドラインを引用符で囲む必要があります（&lt;em&gt;例えば&lt;/em&gt;、 &lt;code&gt;cmd=&quot;/bin/mypgm arg1 arg2&quot;&lt;/code&gt; 。）プログラムはシェルをバイパスし、直接実行されているので引用通常のシェルは必要ありませんが。プログラムの引数は空白区切りです。バックスラッシュは、プログラムの引数の一部であるはずの空白をエスケープするために使用できます。引数の一部であるバックスラッシュは、バックスラッシュ自体でエスケープする必要があります。標準のCGI環境変数に加えて、DOCUMENT_URI、DOCUMENT_PATH_INFO、およびQUERY_STRING_UNESCAPEDもプログラムに設定されます。</target>
        </trans-unit>
        <trans-unit id="b0c4e063dffd8cd18c84ddf8b6f43f39803a69e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; script configures the source tree for compiling and installing the Apache HTTP Server on your particular platform. Various options allow the compilation of a server corresponding to your personal requirements.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; スクリプトは、特定のプラットフォーム上でApache HTTPサーバをコンパイルしてインストールするためのソースツリーを設定します。さまざまなオプションを使用して、個人の要件に対応するサーバーをコンパイルできます。</target>
        </trans-unit>
        <trans-unit id="6c6f2beb1809646b94763ccdf31aab0e8ac9a625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; script is run normally but does not create output files. This is useful to check the test results before generating makefiles for compilation.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; スクリプトが正常に実行されますが、出力ファイルを作成しません。これは、コンパイル用のメイクファイルを生成する前にテスト結果を確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0dcdc1ff3efae35adbb8d3b18d2ff20ab30b5724" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content-length&lt;/code&gt; header is extremely important. If it is present and non-zero, the container assumes that the request has a body (a POST request, for example), and immediately reads a separate packet off the input stream to get that body.</source>
          <target state="translated">&lt;code&gt;content-length&lt;/code&gt; ヘッダが極めて重要です。存在し、ゼロ以外の場合、コンテナーは要求に本文（POST要求など）があると想定し、すぐに入力ストリームから別のパケットを読み取ってその本文を取得します。</target>
        </trans-unit>
        <trans-unit id="c0d8a6c49e42f57c893847a8cde57153acfbec80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;servlet_path&lt;/code&gt; are not currently set by the C code, and most of the Java code completely ignores whatever is sent over for those fields (and some of it will actually break if a string is sent along after one of those codes). I don't know if this is a bug or an unimplemented feature or just vestigial code, but it's missing from both sides of the connection.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; と &lt;code&gt;servlet_path&lt;/code&gt; 現在、Cのコードで設定されていない、とJavaコードのほとんどのこれらのフィールドが送信されて何でも完全に無視（および文字列は、それらのコードのいずれかの後に沿って送信された場合、それのいくつかは、実際に解除されます）。これがバグなのか、実装されていない機能なのか、単なる痕跡コードなのかはわかりませんが、接続の両側にありません。</target>
        </trans-unit>
        <trans-unit id="91dde60dc9fc4e6193d0fa157a264990acdd2fa9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective.</source>
          <target state="translated">&lt;code&gt;decoding&lt;/code&gt; 属性がなければなりません&lt;em&gt;先立つ&lt;/em&gt;対応 &lt;code&gt;var&lt;/code&gt; 有効であると属性を。</target>
        </trans-unit>
        <trans-unit id="c44af2f4ceeb2eceb930dad21f49aa27871a4408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disabled&lt;/code&gt; argument is available in version 2.4.4 and later</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; 引数は、以降のバージョン2.4.4で利用可能で、</target>
        </trans-unit>
        <trans-unit id="9d7df019108123d0423c259fe0b6fcc986c7f8e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;echo&lt;/code&gt; function just spits out the value of a variable. There are a number of standard variables, which include the whole set of environment variables that are available to CGI programs. Also, you can define your own variables with the &lt;code&gt;set&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; 機能は、単に変数の値を出してくれる。CGIプログラムで使用できる環境変数のセット全体を含む、いくつかの標準変数があります。また、関数 &lt;code&gt;set&lt;/code&gt; を使用して独自の変数を定義できます。</target>
        </trans-unit>
        <trans-unit id="600ef0db97a7c5a2c3ce893884083d04c2328908" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elif&lt;/code&gt; or &lt;code&gt;else&lt;/code&gt; statements are used to put text into the output stream if the original &lt;var&gt;test_condition&lt;/var&gt; was false. These elements are optional.</source>
          <target state="translated">&lt;code&gt;elif&lt;/code&gt; のか、 &lt;code&gt;else&lt;/code&gt; 文は、元の場合は、出力ストリームにテキストを配置するために使用されている &lt;var&gt;test_condition&lt;/var&gt; が偽でした。これらの要素はオプションです。</target>
        </trans-unit>
        <trans-unit id="bbf5dd2b990a3662f2dbdbdd1d3ba0c365c97507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; 属性がなければなりません&lt;em&gt;先立つ&lt;/em&gt;対応 &lt;code&gt;var&lt;/code&gt; 有効であると属性を。</target>
        </trans-unit>
        <trans-unit id="ba9cdd8b1f37a7503adddf9b4e109212d894410c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endif&lt;/code&gt; element ends the &lt;code&gt;if&lt;/code&gt; element and is required.</source>
          <target state="translated">&lt;code&gt;endif&lt;/code&gt; 要素は終了 &lt;code&gt;if&lt;/code&gt; 要素を、必要です。</target>
        </trans-unit>
        <trans-unit id="6e9c20e7e3d615209388db5d7ad9e239c075ac1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; provider allows access to the server to be controlled based on the existence of an &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;. When &lt;code&gt;Require env env-variable&lt;/code&gt; is specified, then the request is allowed access if the environment variable &lt;var&gt;env-variable&lt;/var&gt; exists. The server provides the ability to set environment variables in a flexible way based on characteristics of the client request using the directives provided by &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt;. Therefore, this directive can be used to allow access based on such factors as the clients &lt;code&gt;User-Agent&lt;/code&gt; (browser type), &lt;code&gt;Referer&lt;/code&gt;, or other HTTP request header fields.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; プロバイダは、サーバーへのアクセスがの有無に基づいて制御することを可能にする&lt;a href=&quot;../env&quot;&gt;環境変数&lt;/a&gt;。ときに &lt;code&gt;Require env env-variable&lt;/code&gt; 指定されている環境変数の場合、その要求はアクセス許可され &lt;var&gt;env-variable&lt;/var&gt; 存在します。サーバーは、 &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; によって提供されるディレクティブを使用して、クライアント要求の特性に基づいて柔軟な方法で環境変数を設定する機能を提供します。したがって、このディレクティブを使用して、クライアントの &lt;code&gt;User-Agent&lt;/code&gt; （ブラウザタイプ）、 &lt;code&gt;Referer&lt;/code&gt; 、またはその他のHTTPリクエストヘッダーフィールドなどの要素に基づいてアクセスを許可できます。</target>
        </trans-unit>
        <trans-unit id="1d5d02467532d68463fe512d3c1476fa1342f6bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exec&lt;/code&gt; command executes a given shell command or CGI script. It requires &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; to be present in the server. If &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;IncludesNOEXEC&lt;/code&gt; is set, this command is completely disabled. The valid attributes are:</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; コマンドは、指定されたシェルコマンドやCGIスクリプトを実行します。 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; がサーバーに存在する必要があります。 &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; &lt;code&gt;IncludesNOEXEC&lt;/code&gt; が設定されている場合、このコマンドは完全に無効になります。有効な属性は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6b9f0f2278bf82c467b635f441d7b549c32db75b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expr&lt;/code&gt; provider allows basing authorization decisions on arbitrary expressions.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; プロバイダは、任意の式の認可決定を基づかことができます。</target>
        </trans-unit>
        <trans-unit id="519ffa7460ce3877670103f04a4f0d801bd2abe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;f&lt;/code&gt; flag causes &lt;code&gt;mod_substitute&lt;/code&gt; to flatten the result of a substitution allowing for later substitutions to take place on the boundary of this one. This is the default.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt;フラグは、&lt;code&gt;mod_substitute&lt;/code&gt;が置換の結果を平坦化し、後の置換がこの置換の境界線上で行われるようにします。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="9ed8659d7321a3dcffdd6b1b98528d5b91f49d3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider allows access to the server to be controlled based on simple host names. When &lt;code&gt;Require forward-dns host-name&lt;/code&gt; is specified, all IP addresses corresponding to &lt;code&gt;host-name&lt;/code&gt; are allowed access.</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; プロバイダは、サーバーへのアクセスが簡単なホスト名に基づいて制御することを可能にします。ときに &lt;code&gt;Require forward-dns host-name&lt;/code&gt; 指定され、対応するすべてのIPアドレス &lt;code&gt;host-name&lt;/code&gt; アクセス許可されています。</target>
        </trans-unit>
        <trans-unit id="287683b88d48a7fc90a3507327b921f2d5d2b377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider was addded in 2.4.19</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; プロバイダは2.4.19でadddedました</target>
        </trans-unit>
        <trans-unit id="0d08c53d2de1bb3e380909571012bd962aa736d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider was added in 2.4.19.</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; プロバイダは2.4.19で追加されました。</target>
        </trans-unit>
        <trans-unit id="bad9c009b00fbfad81fcb426a6001dfa6bea37d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;graceful-stop&lt;/code&gt; signal allows you to run multiple identically configured instances of &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; at the same time. This is a powerful feature when performing graceful upgrades of httpd, however it can also cause deadlocks and race conditions with some configurations.</source>
          <target state="translated">&lt;code&gt;graceful-stop&lt;/code&gt; 信号を使用すると、複数の同一構成のインスタンスを実行することを可能にする &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 同時に。これは、httpdの適切なアップグレードを実行する場合の強力な機能ですが、一部の構成ではデッドロックや競合状態を引き起こす可能性もあります。</target>
        </trans-unit>
        <trans-unit id="dee12235896af424f5a5b8b7bffbf0d894bc79b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gzip&lt;/code&gt; encoding is the only one supported to ensure complete compatibility with old browser implementations. The &lt;code&gt;deflate&lt;/code&gt; encoding is not supported, please check the &lt;a href=&quot;http://www.gzip.org/zlib/zlib_faq.html#faq38&quot;&gt;zlib's documentation&lt;/a&gt; for a complete explanation.</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; エンコーディングは、古いブラウザの実装との完全な互換性を確保するために、サポートされている唯一のものです。 &lt;code&gt;deflate&lt;/code&gt; エンコーディングがサポートされていないか確認してください&lt;a href=&quot;http://www.gzip.org/zlib/zlib_faq.html#faq38&quot;&gt;zlibのドキュメントの&lt;/a&gt;完全な説明のために。</target>
        </trans-unit>
        <trans-unit id="36768e72ac001f70728fbb40249dfe916f2b77fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host&lt;/code&gt; provider allows access to the server to be controlled based on the host name of the remote client. When &lt;code&gt;Require host host-name&lt;/code&gt; is specified, then the request is allowed access if the host name matches.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; プロバイダは、リモートクライアントのホスト名に基づいて制御されるように、サーバーへのアクセスを許可します。ときに &lt;code&gt;Require host host-name&lt;/code&gt; 指定されたホスト名が一致する場合、その要求はアクセス許可されています。</target>
        </trans-unit>
        <trans-unit id="f760aefdaec17a0b57d8dac3c5afc75a969f21c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpd.conf&lt;/code&gt; should contain the following:</source>
          <target state="translated">&lt;code&gt;httpd.conf&lt;/code&gt; には、以下が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0e5f9eb28c2d13d76a9ee5f25314e3118737ccd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpd&lt;/code&gt; RPM is the only RPM necessary to get a basic server to run. Install it as follows:</source>
          <target state="translated">&lt;code&gt;httpd&lt;/code&gt; RPMを実行するための基本的なサーバーを取得するために必要な唯一のRPMです。次のようにインストールします。</target>
        </trans-unit>
        <trans-unit id="e6647b85dccf2c127f8f4ea48d03ed4614f09367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpready&lt;/code&gt; accept filter buffers entire HTTP requests at the kernel level. Once an entire request is received, the kernel then sends it to the server. See the &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt; accf_http(9)&lt;/a&gt; man page for more details. Since HTTPS requests are encrypted, only the &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt; accf_data(9)&lt;/a&gt; filter is used.</source>
          <target state="translated">&lt;code&gt;httpready&lt;/code&gt; フィルタバッファにカーネルレベルで全体のHTTP要求を受け入れます。リクエスト全体が受信されると、カーネルはそれをサーバーに送信します。詳細については、&lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt;accf_http（9）の&lt;/a&gt;マニュアルページを参照してください。HTTPS要求は暗号化されているため、&lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt;accf_data（9）&lt;/a&gt;フィルターのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="d9b575ff20e5cc20e80db3e1a6ee787f275c29bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpready&lt;/code&gt; accept filter buffers entire HTTP requests at the kernel level. Once an entire request is received, the kernel then sends it to the server. See the &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt; accf_http(9)&lt;/a&gt; man page for more details. Since HTTPS requests are encrypted, only the &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt; accf_data(9)&lt;/a&gt; filter is used.</source>
          <target state="translated">&lt;code&gt;httpready&lt;/code&gt; フィルタバッファにカーネルレベルで全体のHTTP要求を受け入れます。リクエスト全体が受信されると、カーネルはそれをサーバーに送信します。詳細については、&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt;accf_http（9）の&lt;/a&gt;マニュアルページを参照してください。HTTPSリクエストは暗号化されているため、&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt;accf_data（9）&lt;/a&gt;フィルターのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="417f65e59a3fa1d74a869960621e550a319b5ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; element works like an if statement in a programming language. The test condition is evaluated and if the result is true, then the text until the next &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; or &lt;code&gt;endif&lt;/code&gt; element is included in the output stream.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 要素は、プログラミング言語のif文のように動作します。テスト条件が評価され、結果がtrueの場合、次の &lt;code&gt;elif&lt;/code&gt; 、 &lt;code&gt;else&lt;/code&gt; または &lt;code&gt;endif&lt;/code&gt; 要素までのテキストが出力ストリームに含まれます。</target>
        </trans-unit>
        <trans-unit id="ffa2a51a5df563dabf521d45298f54768d41470c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip&lt;/code&gt; provider allows access to the server to be controlled based on the IP address of the remote client. When &lt;code&gt;Require ip ip-address&lt;/code&gt; is specified, then the request is allowed access if the IP address matches.</source>
          <target state="translated">&lt;code&gt;ip&lt;/code&gt; プロバイダは、リモートクライアントのIPアドレスに基づいて制御されるように、サーバーへのアクセスを許可します。ときに &lt;code&gt;Require ip ip-address&lt;/code&gt; 指定され、その要求は、IPアドレスが一致した場合にアクセスを許可されています。</target>
        </trans-unit>
        <trans-unit id="b39040b0e170c28feb000270a626b492afe4b569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jvm_route&lt;/code&gt;, is used to support sticky sessions -- associating a user's sesson with a particular Tomcat instance in the presence of multiple, load-balancing servers.</source>
          <target state="translated">&lt;code&gt;jvm_route&lt;/code&gt; は、複数の、ロード・バランシング・サーバの存在下で、特定のTomcatインスタンスで、ユーザーの雪村を関連付ける- 、スティッキーセッションをサポートするために使用されます。</target>
        </trans-unit>
        <trans-unit id="ad730cd9c16042cbd2cffd586d8c8fa3c0a6746d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local&lt;/code&gt; provider allows access to the server if any of the following conditions is true:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 以下の条件のいずれかに該当する場合、プロバイダは、サーバーへのアクセスを許可します：</target>
        </trans-unit>
        <trans-unit id="706675c546c2f0db644ce1fb2529aab5cf637d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; provider allows using the HTTP method in authorization decisions. The GET and HEAD methods are treated as equivalent. The TRACE method is not available to this provider, use &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; プロバイダは、認可の決定におけるHTTPメソッドを使用できます。GETメソッドとHEADメソッドは同等として扱われます。このプロバイダーではTRACEメソッドを使用できません。代わりに &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="69db8b7e947cc6b392579214b9e173880f9f1332" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;monitor&lt;/code&gt; and &lt;code&gt;fatal_exception&lt;/code&gt; hooks are not currently implemented.</source>
          <target state="translated">現在、 &lt;code&gt;monitor&lt;/code&gt; および &lt;code&gt;fatal_exception&lt;/code&gt; フックは実装されていません。</target>
        </trans-unit>
        <trans-unit id="e4ba792e9efba5f926a7e5deaea1e31ae52e5e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;no-cache&lt;/code&gt; environment variable can be set to disable caching on a finer grained set of resources in versions 2.2.12 and later.</source>
          <target state="translated">&lt;code&gt;no-cache&lt;/code&gt; 環境変数は、バージョン2.2.12以降で資源のより細かい粒度のセットでキャッシュを無効に設定することができます。</target>
        </trans-unit>
        <trans-unit id="706c2f9ab497081a825579c8400d01f21dd4bae6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;none&lt;/code&gt; keyword resets any already set options.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; キーワードリセットはどんなすでにオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="eecb89ed75e26637ed01710db8949895927b7470" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plus&lt;/code&gt; keyword is optional. &lt;var&gt;num&lt;/var&gt; should be an integer value [acceptable to &lt;code&gt;atoi()&lt;/code&gt;], and &lt;var&gt;type&lt;/var&gt; is one of:</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; キーワードはオプションです。 &lt;var&gt;num&lt;/var&gt; は整数値でなければならず[ &lt;code&gt;atoi()&lt;/code&gt; に受け入れ可能]、 &lt;var&gt;type&lt;/var&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a2ad6ca23580371aebffe259759e6ff5adc299d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;q&lt;/code&gt; flag causes &lt;code&gt;mod_substitute&lt;/code&gt; to not flatten the buckets after each substitution. This can result in much faster response and a decrease in memory utilization, but should only be used if there is no possibility that the result of one substitution will ever match a pattern or regex of a subsequent one.</source>
          <target state="translated">&lt;code&gt;q&lt;/code&gt;フラグは、&lt;code&gt;mod_substitute&lt;/code&gt;が各置換後にバケットを平坦化しないようにします。これは、レスポンスの高速化とメモリ使用量を減少させることができますが、ある置換の結果が後続のパターンや正規表現と一致する可能性がない場合にのみ使用すべきです。</target>
        </trans-unit>
        <trans-unit id="5721ac1905e9cd28438ea0eba7811e35672cbe4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_string&lt;/code&gt;, &lt;code&gt;ssl_cert&lt;/code&gt;, &lt;code&gt;ssl_cipher&lt;/code&gt;, and &lt;code&gt;ssl_session&lt;/code&gt; refer to the corresponding pieces of HTTP and HTTPS.</source>
          <target state="translated">&lt;code&gt;query_string&lt;/code&gt; 、 &lt;code&gt;ssl_cert&lt;/code&gt; 、 &lt;code&gt;ssl_cipher&lt;/code&gt; 、及び &lt;code&gt;ssl_session&lt;/code&gt; はは HTTPやHTTPSの対応片を指します。</target>
        </trans-unit>
        <trans-unit id="999a58bfee7a645cbfa15db71fb1835185812f02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote_user&lt;/code&gt; and &lt;code&gt;auth_type&lt;/code&gt; presumably refer to HTTP-level authentication, and communicate the remote user's username and the type of authentication used to establish their identity (e.g. Basic, Digest).</source>
          <target state="translated">&lt;code&gt;remote_user&lt;/code&gt; と &lt;code&gt;auth_type&lt;/code&gt; おそらくHTTPレベルの認証を参照して、リモートユーザのユーザ名と自分のアイデンティティ（例えば基本、ダイジェスト）を確立するために使用する認証の種類を伝えます。</target>
        </trans-unit>
        <trans-unit id="56e382f0fa2baa2c97ff152fbc56b983a8113d6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;req_novary&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt; is available for versions 2.4.4 and later.</source>
          <target state="translated">&lt;code&gt;req_novary&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;機能は&lt;/a&gt;バージョン2.4.4以降で利用可能です。</target>
        </trans-unit>
        <trans-unit id="a6628c6c034fad21ad9e625b988f60a87703c38f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request_headers&lt;/code&gt; have the following structure:</source>
          <target state="translated">&lt;code&gt;request_headers&lt;/code&gt; は、以下の構造を有します：</target>
        </trans-unit>
        <trans-unit id="455b85eb8eaf542606e802f14c49dc6b9d32653a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;server-status&lt;/code&gt; page may be used as a starting place for troubleshooting a situation where your server is consuming all available resources (CPU or memory), and you wish to identify which requests or clients are causing the problem.</source>
          <target state="translated">&lt;code&gt;server-status&lt;/code&gt; ページでは、サーバーが使用可能なすべてのリソース（CPUやメモリ）を消費している状況をトラブルシューティングするための出発点として使用することができ、あなたは、問題の原因となっているリクエストやクライアントを識別したいです。</target>
        </trans-unit>
        <trans-unit id="fb0c0d84617e2c992cdbb35f909b653ad4455497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;server.csr&lt;/code&gt; file is no longer needed.</source>
          <target state="translated">&lt;code&gt;server.csr&lt;/code&gt; のファイルは不要になります。</target>
        </trans-unit>
        <trans-unit id="f016567432e419f64d52ebea75592fdc18d6a77a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setrlimit(RLIMIT_NOFILE)&lt;/code&gt; call does not function on your system (such as Solaris 2.3)</source>
          <target state="translated">&lt;code&gt;setrlimit(RLIMIT_NOFILE)&lt;/code&gt; コールは、あなたのシステム上では機能しません（たとえば、Solarisの2.3など）</target>
        </trans-unit>
        <trans-unit id="4e66e077f88db0dae4140d62240bb756cf358a86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl-cache&lt;/code&gt; mutex is used to serialize access to the session cache to prevent corruption. This mutex can be configured using the &lt;code&gt;&lt;a href=&quot;core#mutex&quot;&gt;Mutex&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ssl-cache&lt;/code&gt; ミューテックスは、破損を防ぐために、セッション・キャッシュにシリアル化へのアクセスに使用されています。このmutexは、 &lt;code&gt;&lt;a href=&quot;core#mutex&quot;&gt;Mutex&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して構成できます。</target>
        </trans-unit>
        <trans-unit id="79cc764fefff45c747b4faa9c805f20ba277eeed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; provider allows access if the user is authenticated with a valid client certificate. This is only useful if &lt;code&gt;SSLVerifyClient optional&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 利用者が有効なクライアント証明書で認証された場合、プロバイダは、アクセスを許可します。これは、 &lt;code&gt;SSLVerifyClient optional&lt;/code&gt; が有効な場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="ea8f99064b946aeb7bcabd7d6d6e5fe53dd5e843" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; provider denies access if a connection is not encrypted with SSL. This is similar to the &lt;code&gt;SSLRequireSSL&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 接続はSSLで暗号化されていない場合、プロバイダがアクセスを拒否します。これは、 &lt;code&gt;SSLRequireSSL&lt;/code&gt; ディレクティブに似ています。</target>
        </trans-unit>
        <trans-unit id="525b5915e105c2ff61d3e7687af46610b61db10d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vhost.map&lt;/code&gt; file should look something like this:</source>
          <target state="translated">&lt;code&gt;vhost.map&lt;/code&gt; のファイルには、次のようになります。</target>
        </trans-unit>
        <trans-unit id="9bbbc6c26883b9b91bd55d94e69575c2083d04b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;virtual&lt;/code&gt; modifier and handler passing were introduced in Apache 2.1</source>
          <target state="translated">&lt;code&gt;virtual&lt;/code&gt; 修飾子とハンドラ渡しは、Apache 2.1で導入されました</target>
        </trans-unit>
        <trans-unit id="20f0deb611dfc8e62e2f027e493c80c19e17c460" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;IP lookup&lt;/em&gt; described above is only done &lt;em&gt;once&lt;/em&gt; for a particular TCP/IP session while the &lt;em&gt;name lookup&lt;/em&gt; is done on &lt;em&gt;every&lt;/em&gt; request during a KeepAlive/persistent connection. In other words, a client may request pages from different name-based vhosts during a single persistent connection.</source>
          <target state="translated">上記の&lt;em&gt;IPルックアップ&lt;/em&gt;は、特定のTCP / IPセッションに対して&lt;em&gt;1回&lt;/em&gt;だけ実行され&lt;em&gt;ます&lt;/em&gt;が、&lt;em&gt;名前のルックアップ&lt;/em&gt;は、KeepAlive /永続接続中の&lt;em&gt;すべての&lt;/em&gt;リクエストで実行されます。言い換えると、クライアントは、単一の永続的な接続中に、異なる名前ベースの仮想ホストにページを要求する場合があります。</target>
        </trans-unit>
        <trans-unit id="fb425937891118904ccde0916208ad803ca0c49f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically greater than or equal to the &lt;em&gt;CondPattern&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。場合はTrue &lt;em&gt;たTestStringは&lt;/em&gt;数値以上に等しい&lt;em&gt;CondPatternの&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="50e5480fb38241d8dd3d5b454cafc92275040b9c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically greater than the &lt;em&gt;CondPattern&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。場合はTrue &lt;em&gt;たTestStringが&lt;/em&gt;より大きい数値である&lt;em&gt;CondPatternの&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eea6a176750d95890ee1193974ac2146b1fb86f2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically less than or equal to the &lt;em&gt;CondPattern&lt;/em&gt;. Avoid confusion with the &lt;strong&gt;-l&lt;/strong&gt; by using the &lt;strong&gt;-L&lt;/strong&gt; or &lt;strong&gt;-h&lt;/strong&gt; variant.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。場合はTrue &lt;em&gt;たTestStringが&lt;/em&gt;数値未満かに等しい&lt;em&gt;CondPatternの&lt;/em&gt;。&lt;strong&gt;-L&lt;/strong&gt;または&lt;strong&gt;-h&lt;/strong&gt;バリアントを使用して、&lt;strong&gt;-l&lt;/strong&gt;との混同を避けてください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1a3c3278373d068bcbd4d99f70ef3714f3a6a2c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically less than the &lt;em&gt;CondPattern&lt;/em&gt;. Avoid confusion with the &lt;strong&gt;-l&lt;/strong&gt; by using the &lt;strong&gt;-L&lt;/strong&gt; or &lt;strong&gt;-h&lt;/strong&gt; variant.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。場合はTrue &lt;em&gt;たTestStringが&lt;/em&gt;数値未満である&lt;em&gt;CondPatternの&lt;/em&gt;。&lt;strong&gt;-L&lt;/strong&gt;または&lt;strong&gt;-h&lt;/strong&gt;バリアントを使用して、&lt;strong&gt;-l&lt;/strong&gt;との混同を避けてください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8d2a29e95c0e2bf5a1738e21928b19a648f1291" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the two are numerically different. This is equivalent to &lt;code&gt;!-eq&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。2つが数値的に異なる場合はTrue。これは &lt;code&gt;!-eq&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="a29932a5887bb1e6fa4f11eac74a59329683d0f1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the two are numerically equal.</source>
          <target state="translated">&lt;em&gt;たTestStringは&lt;/em&gt;整数として扱われ、数値的に比較される&lt;em&gt;CondPatternの&lt;/em&gt;。2つが数値的に等しい場合はtrue。</target>
        </trans-unit>
        <trans-unit id="b104f058235232ed464d9c9e50bb33150918d09a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ap_expr&lt;/em&gt; expression is intended to replace most other expression variants in HTTPD. For example, the deprecated &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; expressions can be replaced by &lt;a href=&quot;mod/mod_authz_core#reqexpr&quot;&gt;Require expr&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ap_exprの&lt;/em&gt;表現は、他のほとんどの式はHTTPDでバリアント置き換えることを意図しています。たとえば、非推奨の &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; 式は、&lt;a href=&quot;mod/mod_authz_core#reqexpr&quot;&gt;Require exprに&lt;/a&gt;置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="afee8b0c0d99cb5425b2aa3abed9966b361760c7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ap_expr&lt;/em&gt; syntax is mostly a superset of the syntax of the deprecated &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; directive. The differences are described in &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt;'s documentation.</source>
          <target state="translated">&lt;em&gt;ap_exprの&lt;/em&gt;構文は、主に非推奨の構文のスーパーセットで &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; ディレクティブ。違いは &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; のドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="50684dc8361d08dc442328f3a3c00fd209914a84" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dir&lt;/em&gt; argument to &lt;code&gt;INSTDIR&lt;/code&gt; provides the installation directory; it can be omitted if Apache is to be installed into &lt;code&gt;\Apache22&lt;/code&gt; (of the current drive).</source>
          <target state="translated">&lt;code&gt;INSTDIR&lt;/code&gt; の&lt;em&gt;dir&lt;/em&gt;引数は、インストールディレクトリを提供します。Apacheを（現在のドライブの） &lt;code&gt;\Apache22&lt;/code&gt; インストールする場合は省略できます。</target>
        </trans-unit>
        <trans-unit id="2e9a20a01b6c5c55f1638681a3a804ef4fb4e3b3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; is parsed into an internal machine representation when the configuration is loaded, and then evaluated during request processing. In .htaccess context, the &lt;em&gt;expression&lt;/em&gt; is both parsed and executed each time the .htaccess file is encountered during request processing.</source>
          <target state="translated">&lt;em&gt;発現は、&lt;/em&gt;構成がロードされ、その後、要求処理中に評価されたときに内部機械表現に解析されます。.htaccessコンテキストでは、要求処理中に.htaccessファイルが検出されるたびに、&lt;em&gt;式&lt;/em&gt;が解析されて実行されます。</target>
        </trans-unit>
        <trans-unit id="35a9034e28d47656397b9564f477fabfacdd1831" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; must match the following syntax (given as a BNF grammar notation):</source>
          <target state="translated">&lt;em&gt;式は、&lt;/em&gt;次の構文を（BNF文法表記として与えられる）と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="31287d76b4fe769d9569a255b0b5f36ae1b5e719" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filesystem&lt;/em&gt; path to the directory containing the &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;, suffixed by the relative substitution is also valid as a URL path on the server (this is rare).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; が含まれているディレクトリへの&lt;em&gt;ファイルシステム&lt;/em&gt;パスは、相対置換によって接尾辞が付けられ、サーバー上のURLパスとしても有効です（これはまれです）。</target>
        </trans-unit>
        <trans-unit id="f9733ceb8bb33cd6697076e3a378731d07f5f0d5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flag&lt;/em&gt;&lt;code&gt;no_crl_for_cert_ok&lt;/code&gt; allows to restore previous behaviour.</source>
          <target state="translated">&lt;em&gt;フラグ&lt;/em&gt; &lt;code&gt;no_crl_for_cert_ok&lt;/code&gt; は、以前の動作を復元することができます。</target>
        </trans-unit>
        <trans-unit id="3e7d72685a5d824b8baa2b6f9335254ddf0af646" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ldap-attribute&lt;/em&gt;, &lt;em&gt;ldap-user&lt;/em&gt;, and &lt;em&gt;ldap-group&lt;/em&gt; (single-level only) authorization checks use comparisons.</source>
          <target state="translated">&lt;em&gt;LDAP属性&lt;/em&gt;、&lt;em&gt;LDAPユーザ&lt;/em&gt;、および&lt;em&gt;LDAPグループ&lt;/em&gt;（単一レベルのみ）認証チェックは、比較を使用します。</target>
        </trans-unit>
        <trans-unit id="e432aeaa54add6211e15a36a282f1ef780f87609" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ldap-filter&lt;/em&gt; and &lt;em&gt;ldap-dn&lt;/em&gt; authorization checks use searches.</source>
          <target state="translated">&lt;em&gt;LDAPフィルタ&lt;/em&gt;および&lt;em&gt;LDAP-DN&lt;/em&gt;認証チェックは、検索を使用しています。</target>
        </trans-unit>
        <trans-unit id="09c4ba4c5210f411757f7908935454d7f4377e09" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;suEXEC&lt;/strong&gt; feature provides users of the Apache HTTP Server the ability to run &lt;strong&gt;CGI&lt;/strong&gt; and &lt;strong&gt;SSI&lt;/strong&gt; programs under user IDs different from the user ID of the calling web server. Normally, when a CGI or SSI program executes, it runs as the same user who is running the web server.</source>
          <target state="translated">&lt;strong&gt;suEXECのの&lt;/strong&gt;機能は、Apache HTTPサーバーのユーザーが実行する機能を提供&lt;strong&gt;CGI&lt;/strong&gt;や&lt;strong&gt;SSIの&lt;/strong&gt;呼び出し、WebサーバのユーザIDと異なるユーザーIDの下でプログラムを。通常、CGIまたはSSIプログラムを実行すると、Webサーバーを実行しているのと同じユーザーとして実行されます。</target>
        </trans-unit>
        <trans-unit id="1190636d6f3f165590ba4f82e4f1f3bebcd90b2d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Headername&lt;/var&gt; feature is available in version 2.4.13 and later</source>
          <target state="translated">&lt;var&gt;Headername&lt;/var&gt; 機能は、バージョン2.4.13以降で利用可能です</target>
        </trans-unit>
        <trans-unit id="56289106c13855859e77142a4d1b5ae5561a43d0" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;NSS&lt;/var&gt; crypto driver might have already been configured by another part of the server, for example from &lt;code&gt;mod_nss&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt;. If found to have already been configured, a warning will be logged, and the existing configuration will have taken affect. To avoid this warning, use the noinit parameter as follows.</source>
          <target state="translated">&lt;var&gt;NSS&lt;/var&gt; 暗号ドライバはすでにから、たとえば、サーバーの別の部分で構成されている場合があります &lt;code&gt;mod_nss&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; の。すでに構成されていることが判明した場合、警告がログに記録され、既存の構成が有効になります。この警告を回避するには、次のようにnoinitパラメータを使用します。</target>
        </trans-unit>
        <trans-unit id="5614ad834b87f53e611597a1206c6cf64dcc2f06" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;NSS&lt;/var&gt; crypto driver requires some parameters for configuration, which are specified as parameters with optional values after the driver name.</source>
          <target state="translated">&lt;var&gt;NSS&lt;/var&gt; 暗号ドライバは、ドライバ名の後にオプションの値をパラメータとして指定された構成のためのいくつかのパラメータを必要とします。</target>
        </trans-unit>
        <trans-unit id="c042d741e011f962cd0cadb2733abdabfa3cd93b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Pattern&lt;/var&gt; is a &lt;a href=&quot;#regex&quot;&gt;regular expression&lt;/a&gt;. It is initially (for the first rewrite rule or until a substitution occurs) matched against the URL-path of the incoming request (the part after the hostname but before any question mark indicating the beginning of a query string) or, in per-directory context, against the request's path relative to the directory for which the rule is defined. Once a substitution has occurred, the rules that follow are matched against the substituted value.</source>
          <target state="translated">&lt;var&gt;Pattern&lt;/var&gt; ある&lt;a href=&quot;#regex&quot;&gt;正規表現&lt;/a&gt;。最初に（最初の書き換えルールの場合、または置換が発生するまで）、着信要求のURLパス（ホスト名の後、クエリ文字列の始まりを示す疑問符の前の部分）と一致するか、ディレクトリごとに一致します。コンテキストは、ルールが定義されているディレクトリに対する相対パスのリクエストのパスに対して。置換が行われると、後続のルールが置換された値と照合されます。</target>
        </trans-unit>
        <trans-unit id="60ebf2061929b183010fcad3e8d44ac3fd676181" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Substitution&lt;/var&gt; can also contain &lt;em&gt;back-references&lt;/em&gt; to parts of the incoming URL-path matched by the &lt;var&gt;Pattern&lt;/var&gt;. Consider the following:</source>
          <target state="translated">&lt;var&gt;Substitution&lt;/var&gt; また含むことができます&lt;em&gt;後方参照&lt;/em&gt;にマッチした、着信URLパスの部分に &lt;var&gt;Pattern&lt;/var&gt; 。以下を検討してください。</target>
        </trans-unit>
        <trans-unit id="73151aa90edaa1dec8868d77f6937cb5b6ca58ea" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Substitution&lt;/var&gt; can itself be one of three things:</source>
          <target state="translated">&lt;var&gt;Substitution&lt;/var&gt; 、それ自体は、3つのうちのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="d641c04db8bff7a4a0c16dd44b3e4c220fae3776" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;balancerurl&lt;/var&gt; is only needed when not within a &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; container directive. It corresponds to the url of a balancer defined in &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;var&gt;balancerurl&lt;/var&gt; がのみ必要とされないときは、内 &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; コンテナ・ディレクティブ。これは、 &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ディレクティブで定義されたバランサーのURLに対応しています。</target>
        </trans-unit>
        <trans-unit id="ffa49ddbb5ce04477d8c4ac2da0faf9b93d98198" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;default&lt;/var&gt; parameter is available in Apache 2.4.7 and later</source>
          <target state="translated">&lt;var&gt;default&lt;/var&gt; パラメータは、Apache 2.4.7以降で利用できます</target>
        </trans-unit>
        <trans-unit id="e2312641e3e9d0a9dd7eeb7753bb292f7b570c43" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;directive-type&lt;/var&gt; can be one of the following groupings of directives. (See the &lt;a href=&quot;overrides&quot;&gt;override class index&lt;/a&gt; for an up-to-date listing of which directives are enabled by each &lt;var&gt;directive-type&lt;/var&gt;.)</source>
          <target state="translated">&lt;var&gt;directive-type&lt;/var&gt; ディレクティブの次のグループのいずれかになります。（各 &lt;var&gt;directive-type&lt;/var&gt; によって有効になるディレクティブの最新のリストについては、&lt;a href=&quot;overrides&quot;&gt;オーバーライドクラスインデックス&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="ac08bb650b9dfca355f8fe2ff6da49e90415d33e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;extension&lt;/var&gt; argument is case-insensitive and can be specified with or without a leading dot.</source>
          <target state="translated">&lt;var&gt;extension&lt;/var&gt; 引数は、大文字と小文字を区別しないで、または主要ドットなしで指定することができます。</target>
        </trans-unit>
        <trans-unit id="f56ea56e4b2763d85e041fce41ef7f0ee3f0ed5b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;extension&lt;/var&gt; argument is case-insensitive and can be specified with or without a leading dot. Filenames may have &lt;a href=&quot;#multipleext&quot;&gt;multiple extensions&lt;/a&gt; and the &lt;var&gt;extension&lt;/var&gt; argument will be compared against each of them.</source>
          <target state="translated">&lt;var&gt;extension&lt;/var&gt; 引数は、大文字と小文字を区別しないで、または主要ドットなしで指定することができます。ファイル名には&lt;a href=&quot;#multipleext&quot;&gt;複数の拡張子&lt;/a&gt;が付いている場合があり、 &lt;var&gt;extension&lt;/var&gt; 引数はそれぞれに対して比較されます。</target>
        </trans-unit>
        <trans-unit id="bf155597f02581a7268c136737947f5f20f95078" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;filename&lt;/var&gt; argument should include a filename, or a wild-card string, where &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; 引数は、ファイル名、またはワイルドカード文字列を含める必要がありますか &lt;code&gt;?&lt;/code&gt; 任意の1文字に一致し、 &lt;code&gt;*&lt;/code&gt; は任意の文字シーケンスに一致します。</target>
        </trans-unit>
        <trans-unit id="0d5dd061ffb6bc4dc25c31eab0fda4a5315d6aa6" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;filename&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfFile&amp;gt;&lt;/code&gt; section directive can take the same forms as the &lt;var&gt;test&lt;/var&gt; variable in the &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; section, i.e. the test can be negated if the &lt;code&gt;!&lt;/code&gt; character is placed directly before &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; で &lt;code&gt;&amp;lt;IfFile&amp;gt;&lt;/code&gt; セクションディレクティブは、同じ形態を取ることができ &lt;var&gt;test&lt;/var&gt; 中の変数 &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション、すなわちテストがあれば否定することができます &lt;code&gt;!&lt;/code&gt; 文字は &lt;var&gt;filename&lt;/var&gt; の直前に置かれます。</target>
        </trans-unit>
        <trans-unit id="f554d0be8de47cf813f829e75dde171a8d2900e9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;host&lt;/var&gt; arguments to the &lt;code&gt;NoProxy&lt;/code&gt; directive are one of the following type list:</source>
          <target state="translated">&lt;code&gt;NoProxy&lt;/code&gt; ディレクティブの &lt;var&gt;host&lt;/var&gt; 引数は、次のタイプリストのいずれかです。</target>
        </trans-unit>
        <trans-unit id="658945b859793a6e07bb969a0fcf33d0e5245cc8" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;module&lt;/var&gt; argument can be either the module identifier or the file name of the module, at the time it was compiled. For example, &lt;code&gt;rewrite_module&lt;/code&gt; is the identifier and &lt;code&gt;mod_rewrite.c&lt;/code&gt; is the file name. If a module consists of several source files, use the name of the file containing the string &lt;code&gt;STANDARD20_MODULE_STUFF&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;module&lt;/var&gt; 引数は、それがコンパイルされた時点で、モジュール識別子またはモジュールのファイル名のいずれかになります。たとえば、 &lt;code&gt;rewrite_module&lt;/code&gt; は識別子で、 &lt;code&gt;mod_rewrite.c&lt;/code&gt; はファイル名です。モジュールが複数のソースファイルで構成されている場合は、文字列 &lt;code&gt;STANDARD20_MODULE_STUFF&lt;/code&gt; を含むファイルの名前を使用します。</target>
        </trans-unit>
        <trans-unit id="c323ba3489be1bd450dc8a53d15c2e661c1def1d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;name&lt;/var&gt; of the Apache httpd service to signal.</source>
          <target state="translated">通知するApache httpdサービスの &lt;var&gt;name&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c347869fc32f7a414dfe8e83464a76f4d71f56fc" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;openssl&lt;/var&gt; crypto driver supports an optional parameter to specify the engine to be used for encryption.</source>
          <target state="translated">&lt;var&gt;openssl&lt;/var&gt; 暗号ドライバーは、暗号化に使用するエンジンを指定するには、オプションのパラメータをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e2a7edacbbdfcbed6a366555f4f58552f9e33603" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;parameter-name&lt;/var&gt; argument is a define as given on the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command line via &lt;code&gt;-Dparameter&lt;/code&gt; at the time the server was started or by the &lt;code&gt;&lt;a href=&quot;#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;var&gt;parameter-name&lt;/var&gt; 引数は、上与えられたとして定義している &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; を介してコマンドライン &lt;code&gt;-Dparameter&lt;/code&gt; サーバーが開始された時点で、またはによって &lt;code&gt;&lt;a href=&quot;#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; ディレクティブ。</target>
        </trans-unit>
        <trans-unit id="b87037d66a9d1a9a54ba5b38e3a742170c6c8172" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;protocol&lt;/var&gt; argument was added in 2.1.5</source>
          <target state="translated">&lt;var&gt;protocol&lt;/var&gt; 引数は2.1.5で追加されました</target>
        </trans-unit>
        <trans-unit id="b4a703a2f4600f87205d2e17dc65c89a21230bba" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;section-name&lt;/var&gt; must be specified without either the leading &quot;&amp;lt;&quot; or closing &quot;&amp;gt;&quot;. The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; section can be one of two forms:</source>
          <target state="translated">&lt;var&gt;section-name&lt;/var&gt; 先頭に「&amp;lt;」またはクロージング「&amp;gt;」のいずれかなしで指定する必要があります。 &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; セクションの &lt;var&gt;test&lt;/var&gt; は、次の2つの形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="98caf9ffc77345b5bb46fce970043fbbe1c0e717" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;size&lt;/var&gt; is normally expressed in Bytes, but you may follow the number with a &lt;code&gt;K&lt;/code&gt; or an &lt;code&gt;M&lt;/code&gt; to express your value as KBytes or MBytes. For example, the following directives are all equivalent:</source>
          <target state="translated">&lt;var&gt;size&lt;/var&gt; 、通常、バイトで表現されますが、あなたが数に従うことができる &lt;code&gt;K&lt;/code&gt; または &lt;code&gt;M&lt;/code&gt; キロバイトまたはメガバイトとしてあなたの価値を表現します。たとえば、次のディレクティブはすべて同等です。</target>
        </trans-unit>
        <trans-unit id="ebc5ca39afe179371cddd079aa7dc1f7cb91847a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;substitution&lt;/var&gt; is may contain literal text and regular expression backreferences</source>
          <target state="translated">&lt;var&gt;substitution&lt;/var&gt; リテラルテキストや正規表現の後方参照を含むことがあります</target>
        </trans-unit>
        <trans-unit id="e4a1067db932f3c75ff55cd098d7d2444aec8c49" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; section directive can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; セクションディレクティブの &lt;var&gt;test&lt;/var&gt; は、次の2つの形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="c3264307b3f5b778b34966268bfc42f734c660e3" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfDirective&amp;gt;&lt;/code&gt; section can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfDirective&amp;gt;&lt;/code&gt; セクションの &lt;var&gt;test&lt;/var&gt; は、次の2つの形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="fbcadaa8accd5a1658d1c782fe32c2264c9f3e49" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; section directive can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; セクションディレクティブの &lt;var&gt;test&lt;/var&gt; は、次の2つの形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="06309a0760876c6c1f1dcb9dd94d113422b60b48" translate="yes" xml:space="preserve">
          <source>The ACME protocol provides two methods to verify domain ownership: one that uses port 80 and one for port 443. If your server is not reachable by at least one of the two, ACME will not work for you.</source>
          <target state="translated">ACMEプロトコルは、ドメインの所有権を確認するために、80番ポートを使用する方法と443番ポートを使用する方法の2つの方法を提供しています。お使いのサーバがこの2つのうちの少なくとも1つに到達できない場合、ACMEは機能しません。</target>
        </trans-unit>
        <trans-unit id="4e9af6a977653747ab3837daf773ebad55d36590" translate="yes" xml:space="preserve">
          <source>The API provides the following functions:</source>
          <target state="translated">APIでは以下の機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="1d6490296a8fbbadc4d124c92849e789245c68f8" translate="yes" xml:space="preserve">
          <source>The AllowOverride options applied to the current request.</source>
          <target state="translated">現在のリクエストに適用される AllowOverride オプション。</target>
        </trans-unit>
        <trans-unit id="cb00dc6d0173a55603a62be8fb56eb20f09f864e" translate="yes" xml:space="preserve">
          <source>The Apache EBCDIC Port</source>
          <target state="translated">Apache EBCDIC ポート</target>
        </trans-unit>
        <trans-unit id="e4630eec6dbc65014e39c02273cab7774ae82e3e" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server Project itself does not provide binary releases of software, only source code. Individual committers &lt;em&gt;may&lt;/em&gt; provide binary packages as a convenience, but it is not a release deliverable.</source>
          <target state="translated">Apache HTTP Serverプロジェクト自体は、ソフトウェアのバイナリリリースを提供せず、ソースコードのみを提供します。個々のコミッター&lt;em&gt;は&lt;/em&gt;便宜的にバイナリパッケージを提供する&lt;em&gt;場合があり&lt;/em&gt;ますが、リリースの成果物ではありません。</target>
        </trans-unit>
        <trans-unit id="41a3d5e0b4ebf90aedacb5c5488f3f548fa7e636" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server can be downloaded from the &lt;a href=&quot;http://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Server download site&lt;/a&gt;, which lists several mirrors. Most users of Apache on unix-like systems will be better off downloading and compiling a source version. The build process (described below) is easy, and it allows you to customize your server to suit your needs. In addition, binary releases are often not up to date with the latest source releases. If you do download a binary, follow the instructions in the &lt;code&gt;INSTALL.bindist&lt;/code&gt; file inside the distribution.</source>
          <target state="translated">Apache HTTP Serverは、いくつかのミラーがリストされている&lt;a href=&quot;http://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Serverダウンロードサイト&lt;/a&gt;からダウンロードできます。 UNIXライクなシステムでのApacheのほとんどのユーザーは、ソースバージョンをダウンロードしてコンパイルしたほうがよいでしょう。ビルドプロセス（以下で説明）は簡単で、ニーズに合わせてサーバーをカスタマイズできます。さらに、バイナリリリースは、最新のソースリリースでは最新でないことがよくあります。バイナリをダウンロードする場合は、ディストリビューション内の &lt;code&gt;INSTALL.bindist&lt;/code&gt; ファイルの指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="e778f8b3db5fa8ec6587a2c2b66af88b2eac7e9b" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server can be downloaded from the &lt;a href=&quot;https://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Server download site&lt;/a&gt;, which lists several mirrors. Most users of Apache on unix-like systems will be better off downloading and compiling a source version. The build process (described below) is easy, and it allows you to customize your server to suit your needs. In addition, binary releases are often not up to date with the latest source releases. If you do download a binary, follow the instructions in the &lt;code&gt;INSTALL.bindist&lt;/code&gt; file inside the distribution.</source>
          <target state="translated">Apache HTTPサーバーは、いくつかのミラーがリストされているApacheHTTP&lt;a href=&quot;https://httpd.apache.org/download.cgi&quot;&gt;サーバーのダウンロードサイト&lt;/a&gt;からダウンロードできます。 UNIXライクなシステムでApacheを使用するほとんどのユーザーは、ソースバージョンをダウンロードしてコンパイルすることをお勧めします。ビルドプロセス（以下で説明）は簡単で、ニーズに合わせてサーバーをカスタマイズできます。さらに、バイナリリリースは、最新のソースリリースで最新ではないことがよくあります。バイナリをダウンロードする場合は、ディストリビューション内の &lt;code&gt;INSTALL.bindist&lt;/code&gt; ファイルの指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="ae744855f68fe9af0b4aae155c1f9223dc127338" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server handles requests in several phases. At each of these phases, one or more modules may be called upon to handle that portion of the request lifecycle. Phases include things like URL-to-filename translation, authentication, authorization, content, and logging. (This is not an exhaustive list.)</source>
          <target state="translated">Apache HTTP サーバはいくつかの段階でリクエストを扱います。それぞれの段階で、リクエストのライフサイクルのその部分を処理するために 一つ以上のモジュールが呼ばれることがあります。段階には、URL からファイル名への変換、認証、認証、認可、コンテンツ、ロギングのようなものがあります。(これは完全なリストではありません)。</target>
        </trans-unit>
        <trans-unit id="72d11b98a27b8f5a18fb0d8d9703303074e0841c" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server has a good record for security and a developer community highly concerned about security issues. But it is inevitable that some problems -- small or large -- will be discovered in software after it is released. For this reason, it is crucial to keep aware of updates to the software. If you have obtained your version of the HTTP Server directly from Apache, we highly recommend you subscribe to the &lt;a href=&quot;http://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTP Server Announcements List&lt;/a&gt; where you can keep informed of new releases and security updates. Similar services are available from most third-party distributors of Apache software.</source>
          <target state="translated">Apache HTTP Serverはセキュリティに関して優れた実績があり、開発者コミュニティはセキュリティの問題について非常に懸念しています。しかし、ソフトウェアのリリース後に、小規模または大規模な問題がソフトウェアで発見されることは避けられません。このため、ソフトウェアの更新を常に把握しておくことが重要です。 Apacheから直接HTTPサーバーのバージョンを入手した場合は、&lt;a href=&quot;http://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTPサーバーのお知らせリスト&lt;/a&gt;を購読することを強くお勧めします。このリストでは、新しいリリースとセキュリティ更新を常に把握できます。 Apacheソフトウェアのほとんどのサードパーティディストリビューターから同様のサービスを利用できます。</target>
        </trans-unit>
        <trans-unit id="ceed4ccb4fa3fd8e62e647a9bc57d09d486a555b" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server has a good record for security and a developer community highly concerned about security issues. But it is inevitable that some problems -- small or large -- will be discovered in software after it is released. For this reason, it is crucial to keep aware of updates to the software. If you have obtained your version of the HTTP Server directly from Apache, we highly recommend you subscribe to the &lt;a href=&quot;https://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTP Server Announcements List&lt;/a&gt; where you can keep informed of new releases and security updates. Similar services are available from most third-party distributors of Apache software.</source>
          <target state="translated">Apache HTTPサーバーは、セキュリティに関して優れた記録を持っており、開発者コミュニティはセキュリティの問題について非常に懸念しています。しかし、リリース後にソフトウェアでいくつかの問題（小規模または大規模）が発見されることは避けられません。このため、ソフトウェアの更新を常に把握しておくことが重要です。ご使用のバージョンのHTTPサーバーをApacheから直接入手した場合は、&lt;a href=&quot;https://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTPサーバーアナウンスリスト&lt;/a&gt;に登録して、新しいリリースやセキュリティアップデートの情報を入手することを強くお勧めします。同様のサービスは、Apacheソフトウェアのほとんどのサードパーティディストリビューターから入手できます。</target>
        </trans-unit>
        <trans-unit id="7d8561937672c7fc208b74f206a4c6acb32b80ef" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is a modular program where the administrator can choose the functionality to include in the server by selecting a set of modules. Modules will be compiled as Dynamic Shared Objects (DSOs) that exist separately from the main &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary file. DSO modules may be compiled at the time the server is built, or they may be compiled and added at a later time using the Apache Extension Tool (&lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Apache HTTP Serverはモジュラープログラムであり、管理者は一連のモジュールを選択することにより、サーバーに含める機能を選択できます。モジュールは、メインの &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; バイナリファイルとは別に存在する動的共有オブジェクト（DSO）としてコンパイルされます。 DSOモジュールは、サーバーの構築時にコンパイルすることも、Apache拡張ツール（ &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; ）を使用して後でコンパイルして追加することもできます。</target>
        </trans-unit>
        <trans-unit id="02af53dd04c928451a0f060ffada735846b62ce2" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is configured via simple text files. These files may be located any of a variety of places, depending on how exactly you installed the server. Common locations for these files may be found &lt;a href=&quot;http://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;in the httpd wiki&lt;/a&gt;. If you installed httpd from source, the default location of the configuration files is &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt;. The default configuration file is usually called &lt;code&gt;httpd.conf&lt;/code&gt;. This, too, can vary in third-party distributions of the server.</source>
          <target state="translated">Apache HTTP Serverは、単純なテキストファイルを介して構成されます。これらのファイルは、サーバーのインストール方法に応じて、さまざまな場所に配置されます。これらのファイルの一般的な場所&lt;a href=&quot;http://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;は、httpd wikiにあります&lt;/a&gt;。ソースからhttpdをインストールした場合、構成ファイルのデフォルトの場所は &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt; です。デフォルトの構成ファイルは通常 &lt;code&gt;httpd.conf&lt;/code&gt; と呼ばれます。これも、サーバーのサードパーティディストリビューションによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="388034618a49f209c113afeb13a0ead6fb0ae027" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is configured via simple text files. These files may be located any of a variety of places, depending on how exactly you installed the server. Common locations for these files may be found &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;in the httpd wiki&lt;/a&gt;. If you installed httpd from source, the default location of the configuration files is &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt;. The default configuration file is usually called &lt;code&gt;httpd.conf&lt;/code&gt;. This, too, can vary in third-party distributions of the server.</source>
          <target state="translated">Apache HTTPサーバーは、単純なテキストファイルを介して構成されます。これらのファイルは、サーバーをどの程度正確にインストールしたかに応じて、さまざまな場所に配置される可能性があります。これらのファイルの一般的な場所&lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;は、httpdwikiにあります&lt;/a&gt;。ソースからhttpdをインストールした場合、構成ファイルのデフォルトの場所は &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt; です。デフォルトの設定ファイルは通常 &lt;code&gt;httpd.conf&lt;/code&gt; と呼ばれます。これも、サーバーのサードパーティのディストリビューションによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="aa2a087c2e36e51d0222ac85bd926ca9588b6e8d" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is designed to be a powerful and flexible web server that can work on a very wide variety of platforms in a range of different environments. Different platforms and different environments often require different features, or may have different ways of implementing the same feature most efficiently. Apache httpd has always accommodated a wide variety of environments through its modular design. This design allows the webmaster to choose which features will be included in the server by selecting which modules to load either at compile-time or at run-time.</source>
          <target state="translated">Apache HTTP サーバは強力で柔軟性のあるウェブサーバとして設計されており、 さまざまな環境でさまざまなプラットフォームで動作することができます。異なるプラットフォームや異なる環境では、しばしば異なる機能を必要としたり、 同じ機能を最も効率的に実装するための異なる方法を持っていたりします。Apache httpd はモジュラー設計によって、常に様々な環境に対応してきました。この設計により、ウェブマスターはコンパイル時か実行時に読み込むモジュールを選択することで、 どの機能をサーバに含めるかを選択することができます。</target>
        </trans-unit>
        <trans-unit id="a6bebc5af4cb9a1982a6b85f9b90bbb9c9e96841" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server module &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides an interface to the &lt;a href=&quot;http://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; library, which provides Strong Encryption using the Secure Sockets Layer and Transport Layer Security protocols.</source>
          <target state="translated">Apache HTTPサーバーモジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; は、&lt;a href=&quot;http://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt;ライブラリへのインターフェースを提供します。これは、Secure Sockets LayerおよびTransport Layer Securityプロトコルを使用して強力な暗号化を提供します。</target>
        </trans-unit>
        <trans-unit id="5c07d008a28b492f116e62ba1c3de5301fd1949d" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server module &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides an interface to the &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; library, which provides Strong Encryption using the Secure Sockets Layer and Transport Layer Security protocols.</source>
          <target state="translated">Apache HTTPサーバーモジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; は、&lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt;ライブラリへのインターフェイスを提供します。これは、Secure SocketsLayerおよびTransportLayerSecurityプロトコルを使用した強力な暗号化を提供します。</target>
        </trans-unit>
        <trans-unit id="78e3842edffd98561dbb16d4d15d5f114f561545" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server provides a variety of different mechanisms for logging everything that happens on your server, from the initial request, through the URL mapping process, to the final resolution of the connection, including any errors that may have occurred in the process. In addition to this, third-party modules may provide logging capabilities, or inject entries into the existing log files, and applications such as CGI programs, or PHP scripts, or other handlers, may send messages to the server error log.</source>
          <target state="translated">Apache HTTP サーバは、最初のリクエストから URL マッピングプロセスを経て、 接続の最終的な解決に至るまで、プロセス中に発生した可能性のあるエラーを含めて、 サーバ上で起こるすべてのことをログに記録するための様々なメカニズムを提供しています。これに加えて、サードパーティのモジュールがロギング機能を提供したり、 既存のログファイルにエントリを注入したり、CGI プログラムや PHP スクリプト、その他のハンドラのようなアプリケーションが サーバのエラーログにメッセージを送ることがあります。</target>
        </trans-unit>
        <trans-unit id="28bfe1d22a687a0e4091133d9a65ac14236d9a4f" translate="yes" xml:space="preserve">
          <source>The Apache HTTP server offers a low level shared object cache for caching information such as SSL sessions, or authentication credentials, within the &lt;a href=&quot;socache&quot;&gt;socache&lt;/a&gt; interface.</source>
          <target state="translated">Apache HTTPサーバーは、SSLセッションや認証資格情報などの情報を&lt;a href=&quot;socache&quot;&gt;socache&lt;/a&gt;インターフェース内にキャッシュするための低レベルの共有オブジェクトキャッシュを提供します。</target>
        </trans-unit>
        <trans-unit id="66e8e0ab068b6948e06d34f17bae641447cc0175" translate="yes" xml:space="preserve">
          <source>The Apache HTTP server offers a range of caching features that are designed to improve the performance of the server in various ways.</source>
          <target state="translated">Apache HTTP サーバは、様々な方法でサーバのパフォーマンスを向上させるために設計されたキャッシング機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="3d11b0b1aed33055e3466ecef36252f403d7b53b" translate="yes" xml:space="preserve">
          <source>The Apache Portable Runtime Utilities (APU) are part of the httpd source distribution and will automatically be build together with the HTTP server. If you want to use an already installed APU instead you have to tell &lt;code&gt;configure&lt;/code&gt; the path to the &lt;code&gt;apu-config&lt;/code&gt; script. You may set the absolute path and name or the directory to the installed APU. &lt;code&gt;apu-config&lt;/code&gt; must exist within this directory or the subdirectory &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="translated">Apache Portable Runtime Utilities（APU）はhttpdソース配布の一部であり、HTTPサーバーと共に自動的にビルドされます。すでにインストールされているAPUを使用する場合は、代わりに &lt;code&gt;apu-config&lt;/code&gt; スクリプトへのパスを &lt;code&gt;configure&lt;/code&gt; するように指示する必要があります。インストールされているAPUへの絶対パスと名前またはディレクトリを設定できます。 &lt;code&gt;apu-config&lt;/code&gt; は、このディレクトリまたはサブディレクトリ &lt;code&gt;bin&lt;/code&gt; 内に存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="566eb6e42b5e922dec31f0614d8720ddd0d4dc6b" translate="yes" xml:space="preserve">
          <source>The Apache httpd API &lt;em&gt;access check&lt;/em&gt; phase is a separate phase from authentication and authorization. Some other FastCGI implementations implement this phase, which is denoted by the setting of &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; to &lt;code&gt;ACCESS_CHECKER&lt;/code&gt;.</source>
          <target state="translated">Apache httpd API &lt;em&gt;アクセスチェック&lt;/em&gt;フェーズは、認証および承認とは別のフェーズです。他のいくつかのFastCGI実装は、このフェーズを実装します。このフェーズは、 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; を &lt;code&gt;ACCESS_CHECKER&lt;/code&gt; に設定することで示されます。</target>
        </trans-unit>
        <trans-unit id="f0d3e1ae21a53235a9db172241760ba0f179d3b2" translate="yes" xml:space="preserve">
          <source>The Apache httpd module API is unchanged between the Unix and Windows versions. Many modules will run on Windows with no or little change from Unix, although others rely on aspects of the Unix architecture which are not present in Windows, and will not work.</source>
          <target state="translated">Apache httpd モジュールの API は Unix と Windows の間で変更されていません。多くのモジュールは Unix からの変更なしに、あるいはほとんど変更せずに Windows 上で動作しますが、他のモジュールは Windows には存在しない Unix アーキテクチャの側面に依存しており、動作しません。</target>
        </trans-unit>
        <trans-unit id="7347bfb267faea6f5971f414529bff0875e81dbc" translate="yes" xml:space="preserve">
          <source>The Apache httpd source tarball can be converted into an SRPM as follows:</source>
          <target state="translated">Apache httpd ソースの tarball は以下のように SRPM に変換することができます。</target>
        </trans-unit>
        <trans-unit id="b58b1efdf94fdaae364208365b8b359e3651428b" translate="yes" xml:space="preserve">
          <source>The Apache module &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; is a very powerful and sophisticated module which provides a way to do URL manipulations. With it, you can do nearly all types of URL rewriting that you may need. It is, however, somewhat complex, and may be intimidating to the beginner. There is also a tendency to treat rewrite rules as magic incantation, using them without actually understanding what they do.</source>
          <target state="translated">Apacheモジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; は、URL操作を行う方法を提供する非常に強力で洗練されたモジュールです。これにより、必要となる可能性のあるほぼすべてのタイプのURL書き換えを行うことができます。しかし、それはやや複雑で、初心者には怖いかもしれません。また、書き換え規則を魔法の呪文として扱い、実際にそれらが何をしているかを理解せずにそれらを使用する傾向もあります。</target>
        </trans-unit>
        <trans-unit id="234587086a228e246e0dcb7c8fbe7adc2e5a1861" translate="yes" xml:space="preserve">
          <source>The Apache version can be determined by running &lt;code&gt;httpd -v&lt;/code&gt;. The OpenSSL version can be determined by running &lt;code&gt;openssl version&lt;/code&gt;. Alternatively, if you have Lynx installed, you can run the command &lt;code&gt;lynx -mime_header http://localhost/ | grep Server&lt;/code&gt; to gather this information in a single step.</source>
          <target state="translated">Apacheのバージョンは、 &lt;code&gt;httpd -v&lt;/code&gt; を実行して確認できます。OpenSSLのバージョンは、 &lt;code&gt;openssl version&lt;/code&gt; を実行して確認できます。または、Lynxがインストールされている場合は、 &lt;code&gt;lynx -mime_header http://localhost/ | grep Server&lt;/code&gt; コマンドを実行できます。grepサーバーを使用して、この情報を1つのステップで収集します。</target>
        </trans-unit>
        <trans-unit id="364421115b5b28ed6ad149daedfc99c9f98e0715" translate="yes" xml:space="preserve">
          <source>The Authentication Phase</source>
          <target state="translated">認証フェーズ</target>
        </trans-unit>
        <trans-unit id="60e5e68517ee451fe8079abbe65472084e7bb940" translate="yes" xml:space="preserve">
          <source>The Authorization Phase</source>
          <target state="translated">認可フェーズ</target>
        </trans-unit>
        <trans-unit id="3a255b7325372c1e2151c4cdae4296d5e2004d00" translate="yes" xml:space="preserve">
          <source>The CGI (Common Gateway Interface) defines a way for a web server to interact with external content-generating programs, which are often referred to as CGI programs or CGI scripts. It is a simple way to put dynamic content on your web site, using whatever programming language you're most familiar with. This document will be an introduction to setting up CGI on your Apache web server, and getting started writing CGI programs.</source>
          <target state="translated">CGI (Common Gateway Interface)は、ウェブサーバが外部のコンテンツ生成プログラムと対話するための方法を定義しています。これは、あなたが最もよく知っているプログラミング言語を使って、 動的なコンテンツをウェブサイトに配置するための簡単な方法です。この文書は Apache ウェブサーバ上で CGI を設定し、CGI プログラムを書き始めるための入門書です。</target>
        </trans-unit>
        <trans-unit id="c64912fc759de36fc9a7bb46f67c92c20a09c48c" translate="yes" xml:space="preserve">
          <source>The CGI script is given the &lt;code&gt;PATH_INFO&lt;/code&gt; and query string (&lt;code&gt;QUERY_STRING&lt;/code&gt;) of the original request from the client; these &lt;em&gt;cannot&lt;/em&gt; be specified in the URL path. The include variables will be available to the script in addition to the standard &lt;a href=&quot;mod_cgi&quot;&gt;CGI&lt;/a&gt; environment.</source>
          <target state="translated">CGIスクリプトには、クライアントからの元の要求の &lt;code&gt;PATH_INFO&lt;/code&gt; およびクエリ文字列（ &lt;code&gt;QUERY_STRING&lt;/code&gt; ）が与えられます。これらはURLパスでは指定&lt;em&gt;できません&lt;/em&gt;。インクルード変数は、標準の&lt;a href=&quot;mod_cgi&quot;&gt;CGI&lt;/a&gt;環境に加えて、スクリプトで使用できます。</target>
        </trans-unit>
        <trans-unit id="20d15b61eb3e970e02b1dcfa9e5848fe1f8c5872" translate="yes" xml:space="preserve">
          <source>The CGI/1.1 specification &lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;does not distinguish&lt;/a&gt; between a variable with an empty value and a variable that does not exist. However, many CGI and FastCGI implementations distinguish (or allow scripts to distinguish) between the two. The choice of which to use is dependent upon your implementation and your reason for modifying the variable.</source>
          <target state="translated">CGI / 1.1仕様で&lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;は&lt;/a&gt;、値が空の変数と存在しない変数を区別していません。ただし、多くのCGIおよびFastCGI実装では、2つを区別（またはスクリプトで区別）できます。どちらを使用するかは、実装と変数を変更する理由によって異なります。</target>
        </trans-unit>
        <trans-unit id="927230031170944f752e915d7c1990bf1e63ea21" translate="yes" xml:space="preserve">
          <source>The Content-Encoding entity-header field is used as a modifier to the media-type. When present, its value indicates what additional content codings have been applied to the entity-body, and thus what decoding mechanisms must be applied in order to obtain the media-type referenced by the Content-Type header field. Content-Encoding is primarily used to allow a document to be compressed without losing the identity of its underlying media type.</source>
          <target state="translated">Content-Encoding entity-header フィールドは、media-type の修飾子として使用される。存在する場合、その値は、どのような追加のコンテンツ符号化が実体本体に適用されたかを示し、Content-Typeヘッダーフィールドによって参照されるメディアタイプを得るためにどのようなデコード機構が適用されなければならないかを示します。Content-Encodingは、主に、基礎となるメディアタイプの同一性を失うことなく文書を圧縮できるようにするために使用される。</target>
        </trans-unit>
        <trans-unit id="fad2edd501b0969b3c59910b4843467fad7030af" translate="yes" xml:space="preserve">
          <source>The Content-Type header is a special use case since there might be the chance that its value have been determined but the header is not part of the response when &lt;code&gt;setifempty&lt;/code&gt; is evaluated. It is safer to use &lt;code&gt;set&lt;/code&gt; for this use case like in the following example:</source>
          <target state="translated">Content-Typeヘッダーは、その値が決定されている可能性があるため特別な使用例ですが、 &lt;code&gt;setifempty&lt;/code&gt; が評価されるときにヘッダーは応答の一部ではありません。次の例のように、この使用例では &lt;code&gt;set&lt;/code&gt; を使用する方が安全です。</target>
        </trans-unit>
        <trans-unit id="ae7507f0b3a3c5cc2259e82fad110093d0e4b2b8" translate="yes" xml:space="preserve">
          <source>The DBM options are provided by the APU and passed through to its configuration script. They are useless when using an already installed APU defined by &lt;code&gt;--with-apr-util&lt;/code&gt;.</source>
          <target state="translated">DBMオプションはAPUによって提供され、その構成スクリプトに渡されます。 &lt;code&gt;--with-apr-util&lt;/code&gt; で定義された、すでにインストールされているAPUを使用する場合、これらは役に立ちません。</target>
        </trans-unit>
        <trans-unit id="5bcd5e57c66be30bb5837844fb41a525cd38da3d" translate="yes" xml:space="preserve">
          <source>The DN of the branch of the directory where all searches should start from. At the very least, this must be the top of your directory tree, but could also specify a subtree in the directory.</source>
          <target state="translated">すべての検索を開始するディレクトリのブランチの DN。少なくとも、これはディレクトリツリーの先頭でなければなりませんが、 ディレクトリ内のサブツリーを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="17ec61aff7751de6857b12c89f9056e81c67e1b7" translate="yes" xml:space="preserve">
          <source>The DNS or IP address given on the command line</source>
          <target state="translated">コマンドラインで与えられた DNS または IP アドレス</target>
        </trans-unit>
        <trans-unit id="dc05d785915fce960661f50470b938b6cd2c31a2" translate="yes" xml:space="preserve">
          <source>The DPI flag causes the PATH_INFO portion of the rewritten URI to be discarded.</source>
          <target state="translated">DPI フラグにより、書き換えられた URI の PATH_INFO 部分が破棄されます。</target>
        </trans-unit>
        <trans-unit id="82637c1502a0b4bcfe4e863ffb1d76886a55b53e" translate="yes" xml:space="preserve">
          <source>The DSO builds for individual modules can be disabled via &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;--enable-mods-static&lt;/code&gt; option as discussed in the &lt;a href=&quot;install&quot;&gt;install documentation&lt;/a&gt;.</source>
          <target state="translated">個々のモジュールのDSOビルドは、&lt;a href=&quot;install&quot;&gt;インストールドキュメントで&lt;/a&gt;説明されているように、 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;--enable-mods-static&lt;/code&gt; オプションで無効にできます。</target>
        </trans-unit>
        <trans-unit id="14f4f6f304359e38bff11ea3cf5549a00af560d2" translate="yes" xml:space="preserve">
          <source>The DSO support for loading individual Apache httpd modules is based on a module named &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; which must be statically compiled into the Apache httpd core. It is the only module besides &lt;code&gt;&lt;a href=&quot;mod/core&quot;&gt;core&lt;/a&gt;&lt;/code&gt; which cannot be put into a DSO itself. Practically all other distributed Apache httpd modules will then be placed into a DSO. After a module is compiled into a DSO named &lt;code&gt;mod_foo.so&lt;/code&gt; you can use &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive in your &lt;code&gt;httpd.conf&lt;/code&gt; file to load this module at server startup or restart.</source>
          <target state="translated">個々のApache httpdモジュールをロードするためのDSOサポートは、Apache httpdコアに静的にコンパイルする必要がある &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; という名前のモジュールに基づいています。これは、DSO自体に配置できない &lt;code&gt;&lt;a href=&quot;mod/core&quot;&gt;core&lt;/a&gt;&lt;/code&gt; 以外の唯一のモジュールです。実際には、他のすべての分散Apache httpdモジュールはDSOに配置されます。モジュールは、名前のDSOにコンパイルされた後 &lt;code&gt;mod_foo.so&lt;/code&gt; のあなたが使用することができます &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; がさん &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; あなたにディレクティブ &lt;code&gt;httpd.conf&lt;/code&gt; サーバの起動や再起動時にこのモジュールをロードするためのファイル。</target>
        </trans-unit>
        <trans-unit id="66e562403aa49c8a6f03b5634d6831a6f2c09daa" translate="yes" xml:space="preserve">
          <source>The Dynamic Way enables both static and flexible, dynamic configuration of output filters, as discussed in the &lt;code&gt;&lt;a href=&quot;mod/mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; page. Relevant directives are &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">動的な方法では、 &lt;code&gt;&lt;a href=&quot;mod/mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; ページで説明されているように、出力フィルターの静的構成と柔軟な動的構成の両方が可能です。関連するディレクティブは &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="71564e18a55ca6e09f5cd21e9775c8e3ff4f471a" translate="yes" xml:space="preserve">
          <source>The Filter Chain is available in Apache 2.0 and higher, and enables applications to process incoming and outgoing data in a highly flexible and configurable manner, regardless of where the data comes from. We can pre-process incoming data, and post-process outgoing data, at will. This is basically independent of the traditional request processing phases.</source>
          <target state="translated">Filter ChainはApache 2.0以上で利用可能で、データがどこから来たかに関係なく、アプリケーションが非常に柔軟で設定可能な方法で受信データと送信データを処理できるようにします。受信データの前処理と、送信データの後処理を自由に行うことができます。これは基本的に従来のリクエスト処理のフェーズとは独立しています。</target>
        </trans-unit>
        <trans-unit id="efc34f18a84f03a44ecb363c600a30daa2c8f6f0" translate="yes" xml:space="preserve">
          <source>The HTTP cookie mechanism also offers privacy features, such as the ability to restrict cookie transport to SSL protected pages only, or to prevent browser based javascript from gaining access to the contents of the cookie.</source>
          <target state="translated">HTTPクッキーの仕組みは、クッキーの転送をSSLで保護されたページのみに制限したり、ブラウザベースのjavascriptがクッキーの内容にアクセスできないようにするなどのプライバシー機能も提供しています。</target>
        </trans-unit>
        <trans-unit id="f91864f5585b2dbe36c1fb1a916ccde1b6f6e385" translate="yes" xml:space="preserve">
          <source>The HTTP error status of the request (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">リクエストのHTTPエラーステータス（ &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; の間は使用できません）</target>
        </trans-unit>
        <trans-unit id="46a3a855250301b84029ec9976b3e74a3126fe1c" translate="yes" xml:space="preserve">
          <source>The HTTP method of the incoming request (e.g. &lt;code&gt;GET&lt;/code&gt;)</source>
          <target state="translated">着信要求のHTTPメソッド（例： &lt;code&gt;GET&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="901893eb6b1a1525ac8ce36615d6c3387ac5b9af" translate="yes" xml:space="preserve">
          <source>The HTTP method, encoded as a single byte:</source>
          <target state="translated">シングルバイトでエンコードされたHTTPメソッド。</target>
        </trans-unit>
        <trans-unit id="5d9c418d51ba979194f654ecf47c771b02641ddf" translate="yes" xml:space="preserve">
          <source>The HTTP protocol contains built in support for an in-line caching mechanism &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt; described by section 13 of RFC2616&lt;/a&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module can be used to take advantage of this.</source>
          <target state="translated">HTTPプロトコルには&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt;、RFC2616のセクション13で説明されている&lt;/a&gt;インラインキャッシングメカニズムのサポートが組み込まれており、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; モジュールを使用してこれを利用できます。</target>
        </trans-unit>
        <trans-unit id="58093a7e000708eb45c9fc06a30c965fa6d6ca4a" translate="yes" xml:space="preserve">
          <source>The HTTP protocol contains built in support for an in-line caching mechanism &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt; described by section 13 of RFC2616&lt;/a&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module can be used to take advantage of this.</source>
          <target state="translated">HTTPプロトコルには&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt;、RFC2616のセクション13で説明されている&lt;/a&gt;インラインキャッシュメカニズムのサポートが組み込まれており、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; モジュールを使用してこれを利用できます。</target>
        </trans-unit>
        <trans-unit id="58d0c5112d3b9a6ef6a8fd8b917680b89376f4c5" translate="yes" xml:space="preserve">
          <source>The HTTP protocol does allow the cache to serve stale data under certain circumstances, such as when an attempt to freshen the data with an origin server has failed with a 5xx error, or when another request is already in the process of freshening the given entry. In these cases a &lt;code&gt;Warning&lt;/code&gt; header is added to the response.</source>
          <target state="translated">HTTPプロトコルでは、オリジンサーバーでデータを更新する試みが5xxエラーで失敗した場合や、別の要求が指定されたエントリを更新している場合など、特定の状況下でキャッシュが古いデータを処理できるようにします。これらの場合、 &lt;code&gt;Warning&lt;/code&gt; ヘッダーが応答に追加されます。</target>
        </trans-unit>
        <trans-unit id="189d6933ca4f411f3ed3600f955d222761b935a3" translate="yes" xml:space="preserve">
          <source>The HTTP status received from the backend server.</source>
          <target state="translated">バックエンドサーバから受信したHTTPステータス。</target>
        </trans-unit>
        <trans-unit id="c87f5138a9b8ddfde1b27f6d65e652d68e68f8de" translate="yes" xml:space="preserve">
          <source>The HTTP-methods are case sensitive and are generally, as per RFC, given in upper case. The GET and HEAD methods are treated as equivalent. The &lt;code&gt;reset&lt;/code&gt; keyword can be used to turn off &lt;code&gt;&lt;a href=&quot;mod_allowmethods&quot;&gt;mod_allowmethods&lt;/a&gt;&lt;/code&gt; in a deeper nested context:</source>
          <target state="translated">HTTPメソッドは大文字と小文字を区別し、一般にRFCに従って大文字で示されます。GETメソッドとHEADメソッドは同等として扱われます。 &lt;code&gt;reset&lt;/code&gt; キーワードはオフにするために使用することができます &lt;code&gt;&lt;a href=&quot;mod_allowmethods&quot;&gt;mod_allowmethods&lt;/a&gt;&lt;/code&gt; をより深くネストされたコンテキストで：</target>
        </trans-unit>
        <trans-unit id="2f84fbd5cb8d2201e26ea9f7865c8ca2caa95a9e" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol</source>
          <target state="translated">HTTP/2 プロトコル</target>
        </trans-unit>
        <trans-unit id="3ec6048abf88960d625cc9c16664127bfa141063" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol allows the server to PUSH responses to a client it never asked for. The tone of the conversation is: &quot;here is a request that you never sent and the response to it will arrive soon...&quot;</source>
          <target state="translated">HTTP/2プロトコルでは、サーバは一度も依頼していないクライアントに応答をPUSHすることができます。会話のトーンは &quot;There is a request that you never sent it and the response will arrive soon to it...&quot;です。</target>
        </trans-unit>
        <trans-unit id="27f86740c58b63752f1451823d33d7ad22150681" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol allows the server to push other resources to a client when it asked for a particular one. This is helpful if those resources are connected in some way and the client can be expected to ask for it anyway. The pushing then saves the time it takes the client to ask for the resources itself. On the other hand, pushing resources the client never needs or already has is a waste of bandwidth.</source>
          <target state="translated">HTTP/2 プロトコルは、サーバが特定のリソースを要求したときに、他のリソースをクライアントにプッシュすることを可能にします。これは、それらのリソースが何らかの方法で接続されていて、クライアントがいずれにせよそれを要求することが予想される場合に便利です。プッシュすることで、クライアントがリソースを要求する時間を節約することができます。一方で、クライアントが決して必要としていない、あるいはすでに持っているリソースをプッシュするのは、帯域幅の無駄です。</target>
        </trans-unit>
        <trans-unit id="74cc9075e9a23eeb67cd4e9b56312362d6bce3c2" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol is implemented by its own httpd module, aptly named &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt;. It implements the complete set of features described by RFC 7540 and supports HTTP/2 over cleartext (http:), as well as secure (https:) connections. The cleartext variant is named '&lt;code&gt;h2c&lt;/code&gt;', the secure one '&lt;code&gt;h2&lt;/code&gt;'. For &lt;code&gt;h2c&lt;/code&gt; it allows the &lt;em&gt;direct&lt;/em&gt; mode and the &lt;code&gt;Upgrade:&lt;/code&gt; via an initial HTTP/1 request.</source>
          <target state="translated">HTTP / 2プロトコルは、適切に &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; という名前の独自のhttpdモジュールによって実装されます。これは、RFC 7540で説明されている機能の完全なセットを実装し、クリアテキスト（http :)上のHTTP / 2と、安全な（https :)接続をサポートします。平文のバリアントは「 &lt;code&gt;h2c&lt;/code&gt; 」、セキュアなものは「 &lt;code&gt;h2&lt;/code&gt; 」という名前です。 &lt;code&gt;h2c&lt;/code&gt; それが可能に&lt;em&gt;ダイレクト&lt;/em&gt;モードと &lt;code&gt;Upgrade:&lt;/code&gt; 初期HTTP / 1リクエスト経由し。</target>
        </trans-unit>
        <trans-unit id="0a57954c9b96169d1a30dd67df7cf94dbe4f336b" translate="yes" xml:space="preserve">
          <source>The HTTP/2 status received from the backend server.</source>
          <target state="translated">バックエンドサーバから受信したHTTP/2のステータス。</target>
        </trans-unit>
        <trans-unit id="b1dca06f67e2a4085df6a93ee4836ad4c03c7f6f" translate="yes" xml:space="preserve">
          <source>The HyperText Markup Language (HTML) is a simple markup language used to create hypertext documents that are portable from one platform to another. HTML documents are SGML documents.</source>
          <target state="translated">ハイパーテキスト・マークアップ言語(HTML)は、あるプラットフォームから別のプラットフォームに移植可能なハイパーテキスト文書を作成するために使用されるシンプルなマークアップ言語です。HTML文書はSGML文書である。</target>
        </trans-unit>
        <trans-unit id="e93ae6b0581a56762067e5bc85be23d709f4c84e" translate="yes" xml:space="preserve">
          <source>The Hypertext Transfer Protocol (HTTP) is an application-level protocol for distributed, collaborative, hypermedia information systems. This documents HTTP/1.1.</source>
          <target state="translated">ハイパーテキスト転送プロトコル (HTTP)は、分散型、協調型、ハイパーメディア情報システムのためのアプリケーションレベルのプロトコルです。このドキュメントでは、HTTP/1.1について説明しています。</target>
        </trans-unit>
        <trans-unit id="c9f01d749c58976193d6b5091f84be071e8099d2" translate="yes" xml:space="preserve">
          <source>The Hypertext Transfer Protocol (HTTP) is an application-level protocol with the lightness and speed necessary for distributed, collaborative, hypermedia information systems. This documents HTTP/1.0.</source>
          <target state="translated">ハイパーテキスト転送プロトコル(HTTP)は、分散型、共同作業型、ハイパーメディア情報システムに必要な軽さと速度を備えたアプリケーションレベルのプロトコルです。このドキュメントでは、HTTP/1.0について説明しています。</target>
        </trans-unit>
        <trans-unit id="d51a0148d780fe50fda94f0c66e0ff5b90d1cf77" translate="yes" xml:space="preserve">
          <source>The ID to identify request in access and error log.</source>
          <target state="translated">アクセスログやエラーログでリクエストを識別するためのID。</target>
        </trans-unit>
        <trans-unit id="a2606918a9a0cd4c331804a22b234cdcc58a595d" translate="yes" xml:space="preserve">
          <source>The IP address of the Virtual Host serving the request.</source>
          <target state="translated">要求を処理する仮想ホストの IP アドレス。</target>
        </trans-unit>
        <trans-unit id="d3fc261360a76b743e82f1c59ab21837cd1b4510" translate="yes" xml:space="preserve">
          <source>The IP address of the client.</source>
          <target state="translated">クライアントのIPアドレスです。</target>
        </trans-unit>
        <trans-unit id="44278b30662031328096aacd4d0d314c557ed1a7" translate="yes" xml:space="preserve">
          <source>The IP address of the remote host</source>
          <target state="translated">リモートホストのIPアドレス</target>
        </trans-unit>
        <trans-unit id="6859a2d0f684a0bc387ca3c4c8b8a8e160d1fd62" translate="yes" xml:space="preserve">
          <source>The IP address of the remote host (see the &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; module).</source>
          <target state="translated">リモートホストのIPアドレス（ &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; モジュールを参照）。</target>
        </trans-unit>
        <trans-unit id="09ea9f7f73faac3fad9f64997c059ff0423cc3fc" translate="yes" xml:space="preserve">
          <source>The IP address of the virtual host;</source>
          <target state="translated">バーチャルホストのIPアドレスです。</target>
        </trans-unit>
        <trans-unit id="429126465977cda3c526f99d846a401b875971cb" translate="yes" xml:space="preserve">
          <source>The IP of the user agent making the request</source>
          <target state="translated">リクエストを行うユーザエージェントのIP</target>
        </trans-unit>
        <trans-unit id="1b79da969a362a66f020c46983124ed18949cb59" translate="yes" xml:space="preserve">
          <source>The Java code that reads this grabs the first two-byte integer and if it sees an &lt;code&gt;'0xA0'&lt;/code&gt; in the most significant byte, it uses the integer in the second byte as an index into an array of header names. If the first byte is not &lt;code&gt;0xA0&lt;/code&gt;, it assumes that the two-byte integer is the length of a string, which is then read in.</source>
          <target state="translated">これを読み取るJavaコードは、最初の2バイトの整数を &lt;code&gt;'0xA0'&lt;/code&gt; し、最上位バイトに「0xA0」が見つかった場合、2番目のバイトの整数をヘッダー名の配列へのインデックスとして使用します。最初のバイトが &lt;code&gt;0xA0&lt;/code&gt; でない場合、2バイトの整数は文字列の長さであると想定され、それが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="434ab60f09c9f325749a307483f5b10be172d5b3" translate="yes" xml:space="preserve">
          <source>The Java standards implement URL encoding slightly different. They use a path info appended to the URL using a semicolon (&lt;code&gt;;&lt;/code&gt;) as the separator and add the session id behind. As in the cookie case, Apache Tomcat can include the configured &lt;code&gt;jvmRoute&lt;/code&gt; in this path info. To let Apache find this sort of path info, you neet to set &lt;code&gt;scolonpathdelim&lt;/code&gt; to &lt;code&gt;On&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Java標準では、URLエンコーディングの実装が少し異なります。セミコロン（ &lt;code&gt;;&lt;/code&gt; ）をセパレーターとして使用してURLに追加されたパス情報を使用し、後ろにセッションIDを追加します。 cookieの場合と同様に、Apache Tomcatはこのパス情報に構成 &lt;code&gt;jvmRoute&lt;/code&gt; を含めることができます。 Apacheにこの種のパス情報を見つけさせるには、 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; またはProxySetで &lt;code&gt;scolonpathdelim&lt;/code&gt; を &lt;code&gt;On&lt;/code&gt; に &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="ae0358e0a2f7e0669d1e001c32bd9611d879b0ce" translate="yes" xml:space="preserve">
          <source>The Keep-Alive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long-lived HTTP sessions which allow multiple requests to be sent over the same TCP connection. In some cases this has been shown to result in an almost 50% speedup in latency times for HTML documents with many images. To enable Keep-Alive connections, set &lt;code&gt;KeepAlive On&lt;/code&gt;.</source>
          <target state="translated">HTTP / 1.0のキープアライブ拡張機能とHTTP / 1.1の永続的な接続機能により、存続期間の長いHTTPセッションが提供され、同じTCP接続を介して複数の要求を送信できます。これにより、多くの画像を含むHTMLドキュメントの待ち時間が約50％短縮される場合があります。KeepAlive接続を有効にするには、設定 &lt;code&gt;KeepAlive On&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9510a83e3106549d2bcc97cb0e3ee306905f53e6" translate="yes" xml:space="preserve">
          <source>The Load balancing scheduler algorithm is not provided by this module but from other ones such as:</source>
          <target state="translated">負荷分散スケジューラのアルゴリズムは、このモジュールではなく、他のモジュールから提供されています。</target>
        </trans-unit>
        <trans-unit id="9c7ff06d9fef75c58e417cf1932186c037f0d873" translate="yes" xml:space="preserve">
          <source>The MD5 algorithm used by &lt;code&gt;htdbm&lt;/code&gt; is specific to the Apache software; passwords encrypted using it will not be usable with other Web servers.</source>
          <target state="translated">&lt;code&gt;htdbm&lt;/code&gt; で使用されるMD5アルゴリズムは、Apacheソフトウェアに固有のものです。それを使用して暗号化されたパスワードは、他のWebサーバーでは使用できません。</target>
        </trans-unit>
        <trans-unit id="272390d44c776562290e5e450e962c4dea323bda" translate="yes" xml:space="preserve">
          <source>The MD5 algorithm used by &lt;code&gt;htpasswd&lt;/code&gt; is specific to the Apache software; passwords encrypted using it will not be usable with other Web servers.</source>
          <target state="translated">&lt;code&gt;htpasswd&lt;/code&gt; が使用するMD5アルゴリズムは、Apacheソフトウェアに固有のものです。それを使用して暗号化されたパスワードは、他のWebサーバーでは使用できません。</target>
        </trans-unit>
        <trans-unit id="93e9aee4219e7df47ac56df9a65ff266be3e5894" translate="yes" xml:space="preserve">
          <source>The MPM assumes that the underlying &lt;code&gt;apr_pollset&lt;/code&gt; implementation is reasonably threadsafe. This enables the MPM to avoid excessive high level locking, or having to wake up the listener thread in order to send it a keep-alive socket. This is currently only compatible with KQueue and EPoll.</source>
          <target state="translated">MPMは、基になる &lt;code&gt;apr_pollset&lt;/code&gt; 実装が合理的にスレッドセーフであることを前提としています。これにより、MPMは過度の高レベルのロックを回避したり、キープアライブソケットを送信するためにリスナースレッドをウェイクアップする必要がなくなります。これは現在、KQueueおよびEPollとのみ互換性があります。</target>
        </trans-unit>
        <trans-unit id="3dd3710386d1274acc7b53f51f9d3db59a360338" translate="yes" xml:space="preserve">
          <source>The MPM falls back to a safer implementation, but some client requests were not processed correctly. In order to avoid this error, use &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; with accept filter &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">MPMはより安全な実装にフォールバックしますが、一部のクライアント要求は正しく処理されませんでした。このエラーを回避するには、 &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; をAccept Filter &lt;code&gt;none&lt;/code&gt; で使用します。</target>
        </trans-unit>
        <trans-unit id="d0cd92e4b6eb75063fc3a0091b215834ef651b3e" translate="yes" xml:space="preserve">
          <source>The Negotiation Methods</source>
          <target state="translated">交渉の方法</target>
        </trans-unit>
        <trans-unit id="ccc4ef1da1f5f05269befbe474b84abd307f6037" translate="yes" xml:space="preserve">
          <source>The OCSP responder used is either extracted from the certificate itself, or derived by configuration; see the &lt;code&gt;&lt;a href=&quot;#sslocspdefaultresponder&quot;&gt;SSLOCSPDefaultResponder&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sslocspoverrideresponder&quot;&gt;SSLOCSPOverrideResponder&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">使用されるOCSPレスポンダは、証明書自体から抽出されるか、構成によって導出されます。 &lt;code&gt;&lt;a href=&quot;#sslocspdefaultresponder&quot;&gt;SSLOCSPDefaultResponder&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#sslocspoverrideresponder&quot;&gt;SSLOCSPOverrideResponder&lt;/a&gt;&lt;/code&gt; ディレクティブを参照してください。</target>
        </trans-unit>
        <trans-unit id="6016270d3693ea563dcf99cd71a8bd9a3ba4c4f7" translate="yes" xml:space="preserve">
          <source>The Online Certificate Status Protocol (OCSP) is a mechanism for determining whether or not a server certificate has been revoked, and OCSP Stapling is a special form of this in which the server, such as httpd and mod_ssl, maintains current OCSP responses for its certificates and sends them to clients which communicate with the server. Most certificates contain the address of an OCSP responder maintained by the issuing Certificate Authority, and mod_ssl can communicate with that responder to obtain a signed response that can be sent to clients communicating with the server.</source>
          <target state="translated">オンライン証明書ステータスプロトコル (OCSP)はサーバの証明書が失効したかどうかを 判断するための仕組みで、OCSP Stapling はこれの特別な形で、 httpd や mod_ssl のようなサーバが証明書のために現在の OCSP レスポンダを維持し、 サーバと通信するクライアントにそれを送信するというものです。ほとんどの証明書には、発行された証明書局が管理する OCSP レスポンダのアドレスが含まれており、 mod_ssl はそのレスポンダと通信して、サーバと通信するクライアントに送ることができる 署名付きの応答を取得することができます。</target>
        </trans-unit>
        <trans-unit id="b9cdbb7ae797604c5bfa15afeea9fa100693886b" translate="yes" xml:space="preserve">
          <source>The OpenSSL library is cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.</source>
          <target state="translated">OpenSSLライブラリは暗号化ソフトウェアです。現在お住まいの国では、暗号化ソフトウェアの輸入、所持、使用、および/または別の国への再輸出が制限されている場合があります。暗号化ソフトウェアを使用する前に、それが許可されているかどうかを確認するために、暗号化ソフトウェアの輸入、所有、使用、および再輸出に関する国の法律、規制、およびポリシーを確認してください。詳細については、&lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http：//www.wassenaar.org/&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8453e2ab232b9f40dfdd1d572106f50ba767c3f1" translate="yes" xml:space="preserve">
          <source>The OpenSSL program version</source>
          <target state="translated">OpenSSL プログラムのバージョン</target>
        </trans-unit>
        <trans-unit id="fda571a6044efa55473bb7304a99d11684cedf5c" translate="yes" xml:space="preserve">
          <source>The Options directive applied to the current request.</source>
          <target state="translated">現在のリクエストに適用される Options ディレクティブ。</target>
        </trans-unit>
        <trans-unit id="e17cb003861879abb6d9e3f170b6559debbf754a" translate="yes" xml:space="preserve">
          <source>The PATH_INFO extracted from this request.</source>
          <target state="translated">このリクエストから抽出したPATH_INFO。</target>
        </trans-unit>
        <trans-unit id="99e44d0cf2be10d375830ae80f6bd9fd364f29b1" translate="yes" xml:space="preserve">
          <source>The Prerequisites</source>
          <target state="translated">前提条件</target>
        </trans-unit>
        <trans-unit id="098cf49fe8da0339fd834f24627c394f95a576c4" translate="yes" xml:space="preserve">
          <source>The Request headers, Response headers and Environment variables are now interpreted from syntax &lt;var&gt;%{req:foo}&lt;/var&gt;, &lt;var&gt;%{resp:foo}&lt;/var&gt; and &lt;var&gt;%{env:foo}&lt;/var&gt; respectively. The variables &lt;var&gt;%{HANDLER}&lt;/var&gt; and &lt;var&gt;%{CONTENT_TYPE}&lt;/var&gt; are also supported.</source>
          <target state="translated">リクエストヘッダー、レスポンスヘッダー、および環境変数は、構文 &lt;var&gt;%{req:foo}&lt;/var&gt; 、 &lt;var&gt;%{resp:foo}&lt;/var&gt; および &lt;var&gt;%{env:foo}&lt;/var&gt; からそれぞれ解釈されるようになりました。変数 &lt;var&gt;%{HANDLER}&lt;/var&gt; および &lt;var&gt;%{CONTENT_TYPE}&lt;/var&gt; もサポートされています。</target>
        </trans-unit>
        <trans-unit id="05b93a74f3c5c680fb939852f057c049d6b820ab" translate="yes" xml:space="preserve">
          <source>The Require Directives</source>
          <target state="translated">Require ディレクティブ</target>
        </trans-unit>
        <trans-unit id="b944c98361c15903f5c451a5072884024da2f9af" translate="yes" xml:space="preserve">
          <source>The SDK supports SSL only. An attempt to use STARTTLS will cause an error when an attempt is made to contact the LDAP server at runtime.</source>
          <target state="translated">SDKはSSLのみをサポートしています。STARTTLSを使用しようとすると、実行時にLDAPサーバーに連絡しようとするとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="5f9ce00571b539be9eb61d9fd433bbf07a7352e9" translate="yes" xml:space="preserve">
          <source>The SDK supports both SSL and STARTTLS, set using the LDAPTrustedMode parameter. If an ldaps:// URL is specified, SSL mode is forced, override this directive.</source>
          <target state="translated">SDKはSSLとSTARTTLSの両方をサポートしており、LDAPTrustedModeパラメータを使用して設定します。ldaps://URLを指定した場合、SSLモードを強制的に使用するため、このディレクティブをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="8a480bdd60f7632cec4591edf73bd8eb28f9fea6" translate="yes" xml:space="preserve">
          <source>The SHA and &lt;code&gt;crypt()&lt;/code&gt; formats are insecure by today's standards.</source>
          <target state="translated">SHAおよび &lt;code&gt;crypt()&lt;/code&gt; 形式は、今日の標準では安全ではありません。</target>
        </trans-unit>
        <trans-unit id="042045eb86bc446d4efe4ba72d6df85a45ff023b" translate="yes" xml:space="preserve">
          <source>The SHA encryption format does not use salting: for a given password, there is only one encrypted representation. The &lt;code&gt;crypt()&lt;/code&gt; and MD5 formats permute the representation by prepending a random salt string, to make dictionary attacks against the passwords more difficult.</source>
          <target state="translated">SHA暗号化形式はソルティングを使用しません。特定のパスワードに対して、暗号化表現は1つだけです。 &lt;code&gt;crypt()&lt;/code&gt; とMD5形式は、パスワードに対する辞書攻撃をより困難にするために、ランダムなsalt文字列を付加することで表現を並べ替えます。</target>
        </trans-unit>
        <trans-unit id="4002dc5ac1d56a7f9b15c0cf71a6b0f34d6b2ca7" translate="yes" xml:space="preserve">
          <source>The SHA1 variant is probably the most useful format for DBD authentication. Since the SHA1 and Base64 functions are commonly available, other software can populate a database with encrypted passwords that are usable by Apache basic authentication.</source>
          <target state="translated">SHA1 バリアントは、おそらく DBD 認証に最も有用な形式です。SHA1 と Base64 の機能は一般的に利用可能なので、他のソフトウェアは Apache の基本認証で使用可能な暗号化されたパスワードをデータベースに入力することができます。</target>
        </trans-unit>
        <trans-unit id="d459da433a00e50375ff7f0d840b6322a4fa7077" translate="yes" xml:space="preserve">
          <source>The SQL query to use to insert sessions into the database</source>
          <target state="translated">データベースにセッションを挿入するために使用するSQLクエリ</target>
        </trans-unit>
        <trans-unit id="673ca5987b9cb422f43f011fef6c39aa5c0d45fc" translate="yes" xml:space="preserve">
          <source>The SQL query to use to remove sessions from the database</source>
          <target state="translated">データベースからセッションを削除するために使用するSQLクエリ</target>
        </trans-unit>
        <trans-unit id="b695959e3e0c35faffb34dd6dfd4033337a2fd4d" translate="yes" xml:space="preserve">
          <source>The SQL query to use to select sessions from the database</source>
          <target state="translated">データベースからセッションを選択するために使用するSQLクエリ</target>
        </trans-unit>
        <trans-unit id="e09158fae5249c4ef66b09e302a85de15c269558" translate="yes" xml:space="preserve">
          <source>The SQL query to use to update existing sessions in the database</source>
          <target state="translated">データベース内の既存のセッションを更新するために使用するSQLクエリ</target>
        </trans-unit>
        <trans-unit id="890d8dc0e56d33e4d47391bd02deb85b1189c6f3" translate="yes" xml:space="preserve">
          <source>The SSI variables set with the &lt;code&gt;var&lt;/code&gt; element are exported into the request environment and can be accessed with the &lt;code&gt;reqenv&lt;/code&gt; function. As a short-cut, the function name &lt;code&gt;v&lt;/code&gt; is also available inside &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 要素で設定されたSSI変数はリクエスト環境にエクスポートされ、 &lt;code&gt;reqenv&lt;/code&gt; 関数でアクセスできます。ショートカットとして、関数名 &lt;code&gt;v&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 内でも使用できます。</target>
        </trans-unit>
        <trans-unit id="5a61e796fab3850dda99452898507666117db003" translate="yes" xml:space="preserve">
          <source>The SSL Protocol</source>
          <target state="translated">SSLプロトコル</target>
        </trans-unit>
        <trans-unit id="c6c61f78b59c838e1aa1e433a78c82b90b2996fc" translate="yes" xml:space="preserve">
          <source>The SSL Record Protocol, shown in &lt;a href=&quot;#figure3&quot;&gt;Figure 3&lt;/a&gt;, is used to transfer application and SSL Control data between the client and server, where necessary fragmenting this data into smaller units, or combining multiple higher level protocol data messages into single units. It may compress, attach digest signatures, and encrypt these units before transmitting them using the underlying reliable transport protocol (Note: currently, no major SSL implementations include support for compression).</source>
          <target state="translated">&lt;a href=&quot;#figure3&quot;&gt;図3&lt;/a&gt;に示すSSLレコードプロトコルは、クライアントとサーバー間でアプリケーションとSSL制御データを転送するために使用されます。必要に応じて、このデータを小さな単位にフラグメント化するか、複数の高レベルのプロトコルデータメッセージを単一の単位に結合します。基礎となる信頼できるトランスポートプロトコルを使用して送信する前に、これらのユニットを圧縮、ダイジェスト署名を添付、暗号化する場合があります（注：現在、主要なSSL実装には圧縮のサポートが含まれていません）。</target>
        </trans-unit>
        <trans-unit id="44a9f6d8a4c703bd5057c40265f10ce157d32d27" translate="yes" xml:space="preserve">
          <source>The SSL protocol version (SSLv3, TLSv1, TLSv1.1, TLSv1.2)</source>
          <target state="translated">SSLプロトコルのバージョン(SSLv3、TLSv1、TLSv1.1、TLSv1.2</target>
        </trans-unit>
        <trans-unit id="1ac93b445518ee79caa0e99b0e4143a6229f3fdc" translate="yes" xml:space="preserve">
          <source>The SSL session is established by following a handshake sequence between client and server, as shown in &lt;a href=&quot;#figure1&quot;&gt;Figure 1&lt;/a&gt;. This sequence may vary, depending on whether the server is configured to provide a server certificate or request a client certificate. Although cases exist where additional handshake steps are required for management of cipher information, this article summarizes one common scenario. See the SSL specification for the full range of possibilities.</source>
          <target state="translated">&lt;a href=&quot;#figure1&quot;&gt;図1に&lt;/a&gt;示すように、SSLセッションは、クライアントとサーバー間のハンドシェイクシーケンスに従って確立されます。このシーケンスは、サーバーがサーバー証明書を提供するように構成されているか、クライアント証明書を要求するように構成されているかによって異なります。暗号情報を管理するために追加のハンドシェイク手順が必要になる場合がありますが、この記事では、1つの一般的なシナリオをまとめています。すべての可能性については、SSL仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="a54c5272ff150e3d5df945113bb435a79d592c23" translate="yes" xml:space="preserve">
          <source>The Search/Bind Cache</source>
          <target state="translated">検索/バインドキャッシュ</target>
        </trans-unit>
        <trans-unit id="49310bf29aad8332e770f8ead213931578070175" translate="yes" xml:space="preserve">
          <source>The Secure Sockets Layer protocol is a protocol layer which may be placed between a reliable connection-oriented network layer protocol (e.g. TCP/IP) and the application protocol layer (e.g. HTTP). SSL provides for secure communication between client and server by allowing mutual authentication, the use of digital signatures for integrity and encryption for privacy.</source>
          <target state="translated">セキュアソケットレイヤープロトコルは、信頼性の高い接続指向のネットワークレイヤープロトコル(例:TCP/IP)とアプリケーションプロトコルレイヤー(例:HTTP)の間に配置されるプロトコルレイヤーです。SSLは、クライアントとサーバ間の相互認証、完全性のためのデジタル署名の使用、プライバシーのための暗号化を可能にすることで、クライアントとサーバ間の安全な通信を提供します。</target>
        </trans-unit>
        <trans-unit id="4365c6f60029eb0d318514f7ec1af31248f5c125" translate="yes" xml:space="preserve">
          <source>The Server consists of a main, parent process and a small, static number of child processes.</source>
          <target state="translated">サーバーは、メインプロセス、親プロセス、少数の静的な子プロセスで構成されています。</target>
        </trans-unit>
        <trans-unit id="dcae11cd5d68e586863b4eedfce1b931151aa715" translate="yes" xml:space="preserve">
          <source>The Shared Object Cache provides a means to share simple data across all a server's workers, regardless of &lt;a href=&quot;mpm&quot;&gt;thread and process models&lt;/a&gt;. It is used where the advantages of sharing data across processes outweigh the performance overhead of inter-process communication.</source>
          <target state="translated">共有オブジェクトキャッシュは、&lt;a href=&quot;mpm&quot;&gt;スレッドやプロセスモデルに&lt;/a&gt;関係なく、すべてのサーバーのワーカー間で単純なデータを共有する手段を提供します。プロセス間でデータを共有する利点がプロセス間通信のパフォーマンスオーバーヘッドを上回る場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="1abad07e3d1aa8bd1c8451feaeeb7559587ff9ed" translate="yes" xml:space="preserve">
          <source>The Simple Way is the only way to configure input filters, and is sufficient for output filters where you need a static filter chain. Relevant directives are &lt;code&gt;&lt;a href=&quot;mod/core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeinputfilter&quot;&gt;RemoveInputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeoutputfilter&quot;&gt;RemoveOutputFilter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">シンプルな方法は、入力フィルターを構成する唯一の方法であり、静的フィルターチェーンが必要な出力フィルターには十分です。関連するディレクティブは、 &lt;code&gt;&lt;a href=&quot;mod/core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeinputfilter&quot;&gt;RemoveInputFilter&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeoutputfilter&quot;&gt;RemoveOutputFilter&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f3d7f75401c4ec0ef7b3b30438232a225ca29900" translate="yes" xml:space="preserve">
          <source>The Status module allows a server administrator to find out how well their server is performing. A HTML page is presented that gives the current server statistics in an easily readable form. If required this page can be made to automatically refresh (given a compatible browser). Another page gives a simple machine-readable list of the current server state.</source>
          <target state="translated">ステータスモジュールは、サーバー管理者が自分のサーバーがどの程度のパフォーマンスを発揮しているかを知ることができます。現在のサーバーの統計情報を読みやすい形で提供する HTML ページが表示されます。必要に応じて、このページを自動的に更新することができます (互換性のあるブラウザがあれば)。別のページでは、現在のサーバの状態を機械で読みやすい形で一覧表示しています。</target>
        </trans-unit>
        <trans-unit id="f3ab4bf7b234aa6c4a48c2175aea4c28a6af9697" translate="yes" xml:space="preserve">
          <source>The TLS protocol provides communications security over the Internet. It provides encryption, and is designed to prevent eavesdropping, tampering, and message forgery.</source>
          <target state="translated">TLS プロトコルは、インターネット上で通信のセキュリティを提供します。暗号化を提供し、盗聴、改ざん、メッセージの偽造を防ぐように設計されています。</target>
        </trans-unit>
        <trans-unit id="9e3e7604d74be6d87d20256b917c3159243d7c73" translate="yes" xml:space="preserve">
          <source>The TRACE method cannot be denied by this module; use &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">このモジュールではTRACEメソッドを拒否できません。代わりに &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="15d0dbfba819ad64380939f38dd5fddc487de715" translate="yes" xml:space="preserve">
          <source>The URI after it has been parsed by httpd</source>
          <target state="translated">httpd によって解析された後の URI</target>
        </trans-unit>
        <trans-unit id="ddaa65440c33cb529bc3125069237860ae391671" translate="yes" xml:space="preserve">
          <source>The URIs specified can also point to different servers, in which case clients (which understand this) will then share username/password info across multiple servers without prompting the user each time.</source>
          <target state="translated">指定された URI は異なるサーバを指すこともできます。その場合、(これを理解している)クライアントは、ユーザに毎回プロンプトを出すことなく、複数のサーバ間でユーザ名/パスワード情報を共有します。</target>
        </trans-unit>
        <trans-unit id="b870aac38888b075c470a1c9e7600b18df118feb" translate="yes" xml:space="preserve">
          <source>The URL argument must be parsable as a URL &lt;em&gt;before&lt;/em&gt; regexp substitutions (as well as after). This limits the matches you can use. For instance, if we had used</source>
          <target state="translated">URL引数は、正規表現置換の&lt;em&gt;前&lt;/em&gt;（および後）にURLとして解析可能でなければなりません。これにより、使用できる一致が制限されます。たとえば、使用した場合</target>
        </trans-unit>
        <trans-unit id="6f0cf55202f8c8db86fcb5273eee1f6b03b7f61b" translate="yes" xml:space="preserve">
          <source>The URL can be relative or absolute URL. Relative URLs can contain '..' syntax and will be resolved relative to the &lt;code&gt;base&lt;/code&gt; value.</source>
          <target state="translated">URLは相対URLでも絶対URLでもかまいません。相対URLには「..」構文を含めることができ、 &lt;code&gt;base&lt;/code&gt; 値に関連して解決されます。</target>
        </trans-unit>
        <trans-unit id="7f12a418ba0489eb420b0fbec0de24af139518cd" translate="yes" xml:space="preserve">
          <source>The URL identifying a direct worker is the URL of its origin server including any path components given:</source>
          <target state="translated">ダイレクトワーカーを識別する URL は、与えられたパスコンポーネントを含むオリジンサーバの URL です。</target>
        </trans-unit>
        <trans-unit id="4237b79810ef3dee203442075a65f37b237103b6" translate="yes" xml:space="preserve">
          <source>The URL may use wildcards. In a wild-card string, &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters. Neither wildcard character matches a / in the URL-path.</source>
          <target state="translated">URLではワイルドカードを使用できます。ワイルドカード文字列では、 &lt;code&gt;?&lt;/code&gt; 任意の1文字に一致し、 &lt;code&gt;*&lt;/code&gt; は任意の文字シーケンスに一致します。どちらのワイルドカード文字も、URLパスの/と一致しません。</target>
        </trans-unit>
        <trans-unit id="4d5047a93b1393f0662ecf15d103a6efe30285d6" translate="yes" xml:space="preserve">
          <source>The URL of the ACME Certificate Authority service.</source>
          <target state="translated">ACME 認証局サービスの URL。</target>
        </trans-unit>
        <trans-unit id="0aa183fe62551e431226f8ee5d6d6c953c64ec12" translate="yes" xml:space="preserve">
          <source>The URL of the Terms-of-Service document, that the CA server requires you to accept.</source>
          <target state="translated">CAサーバーがお客様に承諾を要求するサービス規約文書のURL。</target>
        </trans-unit>
        <trans-unit id="a1df0be4f7d12389a1d1a863200c2c0d27802ee7" translate="yes" xml:space="preserve">
          <source>The URL of the entry.</source>
          <target state="translated">エントリーのURLです。</target>
        </trans-unit>
        <trans-unit id="01c96e6345815d45bddf4031ba34ef0899135813" translate="yes" xml:space="preserve">
          <source>The URL of the page to be redirected to should login be required</source>
          <target state="translated">リダイレクト先のページのURLはログインが必要です。</target>
        </trans-unit>
        <trans-unit id="97186df97d5c2b68117ff19786a75088524ff92c" translate="yes" xml:space="preserve">
          <source>The URL of the page to be redirected to should login be successful</source>
          <target state="translated">リダイレクト先のページのURLは、ログインが成功している必要があります。</target>
        </trans-unit>
        <trans-unit id="d50852b923efbc41e749b48a4327fe04b6b08b0c" translate="yes" xml:space="preserve">
          <source>The URL path requested, not including any query string.</source>
          <target state="translated">要求された URL パス。</target>
        </trans-unit>
        <trans-unit id="30da3a448d0d77fd926aa78b3710b53b71ce1a8b" translate="yes" xml:space="preserve">
          <source>The URL to redirect to after a user has logged out</source>
          <target state="translated">ユーザーがログアウトした後にリダイレクトするURL</target>
        </trans-unit>
        <trans-unit id="114b7b90dba857c46ce1e6e4b108df48327fd8d0" translate="yes" xml:space="preserve">
          <source>The URL where the CA offers its service.</source>
          <target state="translated">CAがサービスを提供しているURL。</target>
        </trans-unit>
        <trans-unit id="9dadce27d5acaac2e145205bbb4cc805ec54612a" translate="yes" xml:space="preserve">
          <source>The URL-path may represent any number of things on the server. It may be a file (like &lt;code&gt;getting-started.html&lt;/code&gt;) a handler (like &lt;a href=&quot;mod/mod_status&quot;&gt;server-status&lt;/a&gt;) or some kind of program file (like &lt;code&gt;index.php&lt;/code&gt;). We'll discuss this more below in the &lt;a href=&quot;#content&quot;&gt;Web Site Content&lt;/a&gt; section.</source>
          <target state="translated">URLパスは、サーバー上の任意の数のものを表すことができます。これは、ファイル（ &lt;code&gt;getting-started.html&lt;/code&gt; など）、ハンドラ（&lt;a href=&quot;mod/mod_status&quot;&gt;server-statusなど&lt;/a&gt;）、または何らかのプログラムファイル（ &lt;code&gt;index.php&lt;/code&gt; など）の場合があります。これについては、以下の「&lt;a href=&quot;#content&quot;&gt;Webサイトのコンテンツ」&lt;/a&gt;セクションで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="230a18269d71cf6d2fdb092faf9f45f1917f947f" translate="yes" xml:space="preserve">
          <source>The URLs specified by the &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive will typically point to a page explaining to the user that their login attempt was unsuccessful, and they should try again. The &lt;code&gt;&lt;a href=&quot;#authformloginsuccesslocation&quot;&gt;AuthFormLoginSuccessLocation&lt;/a&gt;&lt;/code&gt; directive specifies the URL the user should be redirected to upon successful login.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたURL は、通常、ログイン試行が失敗したことをユーザーに説明するページを指し、ユーザーは再試行する必要があります。 &lt;code&gt;&lt;a href=&quot;#authformloginsuccesslocation&quot;&gt;AuthFormLoginSuccessLocation&lt;/a&gt;&lt;/code&gt; のディレクティブは、ユーザーがログイン成功時にリダイレクトされるURLを指定します。</target>
        </trans-unit>
        <trans-unit id="4c27a54935962689e4aa570f2dd823a559acde9d" translate="yes" xml:space="preserve">
          <source>The User-Agent HTTP request header. This is the identifying information that the client browser reports about itself.</source>
          <target state="translated">User-Agent HTTP リクエストヘッダ。これはクライアントブラウザが自分自身について報告する識別情報です。</target>
        </trans-unit>
        <trans-unit id="16ba92f492d0a9cfcf637022df04292fdc1785b4" translate="yes" xml:space="preserve">
          <source>The Vary mechanism allows multiple variants of the same URL to be cached side by side. Depending on header values provided by the client, the cache will select the correct variant to return to the client. This mechanism can become a problem when an attempt is made to vary on a header that is known to contain a wide range of possible values under normal use, for example the &lt;code&gt;User-Agent&lt;/code&gt; header. Depending on the popularity of the particular web site thousands or millions of duplicate cache entries could be created for the same URL, crowding out other entries in the cache.</source>
          <target state="translated">Varyメカニズムを使用すると、同じURLの複数のバリアントを並べてキャッシュできます。クライアントが提供するヘッダー値に応じて、キャッシュは正しいバリアントを選択してクライアントに返します。このメカニズムは、たとえば &lt;code&gt;User-Agent&lt;/code&gt; ヘッダーなど、通常の使用ではさまざまな値が含まれていることがわかっているヘッダーを変更しようとすると問題になることがあります。特定のWebサイトの人気に応じて、同じURLに対して数千または数百万の重複したキャッシュエントリが作成され、キャッシュ内の他のエントリが混雑する可能性があります。</target>
        </trans-unit>
        <trans-unit id="afa41ac3e6e03beaf158a1bfe39288e874cb95cf" translate="yes" xml:space="preserve">
          <source>The Visual Studio IDE will only find &lt;code&gt;awk.exe&lt;/code&gt; from the PATH, or executable path specified in the menu option Tools -&amp;gt; Options -&amp;gt; (Projects -&amp;gt;) Directories. Ensure awk.exe is in your system path.</source>
          <target state="translated">Visual Studio IDEは、PATHから &lt;code&gt;awk.exe&lt;/code&gt; 、またはメニューオプションの[ツール]-&amp;gt; [オプション]-&amp;gt;（[プロジェクト]-&amp;gt;）[ディレクトリ]で指定された実行可能パスのみを検索します。awk.exeがシステムパスにあることを確認します。</target>
        </trans-unit>
        <trans-unit id="a3a90432965dd3c4b1971fb50a8552c6e3cd32ba" translate="yes" xml:space="preserve">
          <source>The WinNT MPM differs from the Unix MPMs such as worker and event in several areas:</source>
          <target state="translated">WinNT MPMは、ワーカーやイベントなど、いくつかの分野でUnix MPMとは異なります。</target>
        </trans-unit>
        <trans-unit id="3cd3318d1ef1eb4cd75851e159ad8e4789f65d91" translate="yes" xml:space="preserve">
          <source>The [BNP] flag instructs &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; to escape the space character in a backreference to %20 rather than '+'. Useful when the backreference will be used in the path component rather than the query string.</source>
          <target state="translated">[BNP]フラグは、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; に、「+」ではなく％20への後方参照でスペース文字をエスケープするように指示します。クエリ文字列ではなくパスコンポーネントで後方参照が使用される場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="03215c2239d3786a72605e10369a3c279126dc28" translate="yes" xml:space="preserve">
          <source>The [B] flag instructs &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; to escape non-alphanumeric characters before applying the transformation.</source>
          <target state="translated">[B]フラグは、変換を適用する前に英数字以外の文字をエスケープするように &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="a2b48b0dd7886a378616398df3a4f4e73809ba04" translate="yes" xml:space="preserve">
          <source>The [CO], or [cookie] flag, allows you to set a cookie when a particular &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; matches. The argument consists of three required fields and four optional fields.</source>
          <target state="translated">[CO]または[cookie]フラグを使用すると、特定の &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; が一致したときにCookieを設定できます。引数は、3つの必須フィールドと4つのオプションフィールドで構成されます。</target>
        </trans-unit>
        <trans-unit id="ff19eb0b90ca3eaa9e6810b3b7ea42f1faf25a56" translate="yes" xml:space="preserve">
          <source>The [C] or [chain] flag indicates that the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; is chained to the next rule. That is, if the rule matches, then it is processed as usual and control moves on to the next rule. However, if it does not match, then the next rule, and any other rules that are chained together, are skipped.</source>
          <target state="translated">[C]または[chain]フラグは、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; が次のルールにチェーンされることを示します。つまり、ルールが一致すると、通常どおりに処理され、制御は次のルールに移ります。ただし、一致しない場合、次のルール、およびチェーンされているその他のルールはスキップされます。</target>
        </trans-unit>
        <trans-unit id="aded4925d03194b4a2ddefbffd2e251762983f04" translate="yes" xml:space="preserve">
          <source>The [G] flag forces the server to return a 410 Gone status with the response. This indicates that a resource used to be available, but is no longer available.</source>
          <target state="translated">G]フラグは、サーバが応答と共に410 Goneステータスを返すように強制する。これは、リソースが利用可能であったが、利用できなくなったことを示しています。</target>
        </trans-unit>
        <trans-unit id="37645a9a72c1a820de6cbffbe9ddfb38dfec71ac" translate="yes" xml:space="preserve">
          <source>The [L] flag causes &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; to stop processing the rule set. In most contexts, this means that if the rule matches, no further rules will be processed. This corresponds to the &lt;code&gt;last&lt;/code&gt; command in Perl, or the &lt;code&gt;break&lt;/code&gt; command in C. Use this flag to indicate that the current rule should be applied immediately without considering further rules.</source>
          <target state="translated">[L]フラグを指定すると、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; はルールセットの処理を停止します。ほとんどのコンテキストでは、これは、ルールが一致した場合、それ以上のルールは処理されないことを意味します。これは、Perl の &lt;code&gt;last&lt;/code&gt; コマンド、またはC の &lt;code&gt;break&lt;/code&gt; コマンドに対応します。このフラグを使用して、現在のルールをさらにルールを考慮せずにすぐに適用する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="d6c62c0e97eb5deaaa49d377d4a68d3bdeb1ec83" translate="yes" xml:space="preserve">
          <source>The [N] flag causes the ruleset to start over again from the top, using the result of the ruleset so far as a starting point. Use with extreme caution, as it may result in loop.</source>
          <target state="translated">N]フラグは、これまでのルールセットの結果を出発点として、ルールセットを最初からやり直します。ループになる可能性があるので、細心の注意を払って使用してください。</target>
        </trans-unit>
        <trans-unit id="2a44dfda83f823b5995793c2208d66dcbdcefb80" translate="yes" xml:space="preserve">
          <source>The [Next] flag could be used, for example, if you wished to replace a certain string or letter repeatedly in a request. The example shown here will replace A with B everywhere in a request, and will continue doing so until there are no more As to be replaced.</source>
          <target state="translated">Next]フラグは、例えば、ある文字列や文字をリクエストの中で繰り返し置き換えたい場合に使うことができます。ここで示されている例では、リクエスト中のすべての場所でAをBに置き換え、 置き換えるべきAsがなくなるまでこれを続けます。</target>
        </trans-unit>
        <trans-unit id="83768fc99ab829e988fb5a3864af8724a71644ae" translate="yes" xml:space="preserve">
          <source>The [S] flag is used to skip rules that you don't want to run. The syntax of the skip flag is [S=&lt;em&gt;N&lt;/em&gt;], where &lt;em&gt;N&lt;/em&gt; signifies the number of rules to skip (provided the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt; RewriteRule&lt;/a&gt;&lt;/code&gt; matches). This can be thought of as a &lt;code&gt;goto&lt;/code&gt; statement in your rewrite ruleset. In the following example, we only want to run the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; if the requested URI doesn't correspond with an actual file.</source>
          <target state="translated">[S]フラグは、実行したくないルールをスキップするために使用されます。スキップフラグの構文は[S = &lt;em&gt;N&lt;/em&gt; ]です&lt;em&gt;。N&lt;/em&gt;はスキップするルールの数を示します（ &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt; RewriteRule&lt;/a&gt;&lt;/code&gt; が一致する場合）。これは、書き換えルールセットの &lt;code&gt;goto&lt;/code&gt; ステートメントと考えることができます。次の例では、リクエストされたURIが実際のファイルに対応していない場合にのみ &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="c34bfbc0efd3c011075c6d1daa7135019e735d00" translate="yes" xml:space="preserve">
          <source>The `modulus' and the `public exponent' portions in the key and the Certificate must match. As the public exponent is usually 65537 and it's difficult to visually check that the long modulus numbers are the same, you can use the following approach:</source>
          <target state="translated">鍵と証明書の `modulus' と `public exponent' の部分は一致しなければならない。公開指数は通常65537であり、長いモジュラスの数値が同じであることを目視で確認するのは難しいため、以下のようなアプローチを用いることができます。</target>
        </trans-unit>
        <trans-unit id="2b46d737bcf90ef3ccc73123a6d988321f76c6c5" translate="yes" xml:space="preserve">
          <source>The ability to create an SSL and TLS connections to an LDAP server is defined by the directives &lt;code&gt;&lt;a href=&quot;#ldaptrustedglobalcert&quot;&gt;LDAPTrustedGlobalCert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ldaptrustedclientcert&quot;&gt;LDAPTrustedClientCert&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldaptrustedmode&quot;&gt;LDAPTrustedMode&lt;/a&gt;&lt;/code&gt;. These directives specify the CA and optional client certificates to be used, as well as the type of encryption to be used on the connection (none, SSL or TLS/STARTTLS).</source>
          <target state="translated">LDAPサーバーへのSSLおよびTLS接続を作成する機能は、ディレクティブ &lt;code&gt;&lt;a href=&quot;#ldaptrustedglobalcert&quot;&gt;LDAPTrustedGlobalCert&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#ldaptrustedclientcert&quot;&gt;LDAPTrustedClientCert&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#ldaptrustedmode&quot;&gt;LDAPTrustedMode&lt;/a&gt;&lt;/code&gt; によって定義されます。これらのディレクティブは、使用するCAとオプションのクライアント証明書、および接続で使用する暗号化のタイプ（なし、SSLまたはTLS / STARTTLS）を指定します。</target>
        </trans-unit>
        <trans-unit id="7c7d9d7e4e052bb32aae186bae858e750129be67" translate="yes" xml:space="preserve">
          <source>The above DSO based features have the following advantages:</source>
          <target state="translated">上記のDSOに基づく機能には、以下のような利点がある。</target>
        </trans-unit>
        <trans-unit id="71411e20e5d4f37e84e0540295615272edcb3a34" translate="yes" xml:space="preserve">
          <source>The above behavior can be changed by adding modifiers to the format string item. A &lt;code&gt;-&lt;/code&gt; (minus) modifier causes a minus to be logged if the respective item does not produce any output. In once-per-connection/request formats, it is also possible to use the &lt;code&gt;+&lt;/code&gt; (plus) modifier. If an item with the plus modifier does not produce any output, the whole line is omitted.</source>
          <target state="translated">上記の動作は、フォーマット文字列アイテムに修飾子を追加することで変更できます。A &lt;code&gt;-&lt;/code&gt; （マイナス）修飾子は、それぞれの項目は、任意の出力を生成しない場合はマイナスが記録させます。接続/要求ごとに1回の形式では、 &lt;code&gt;+&lt;/code&gt; （プラス）修飾子を使用することもできます。プラス修飾子を含むアイテムが出力を生成しない場合、行全体が省略されます。</target>
        </trans-unit>
        <trans-unit id="4901b67447affa4057bbca48c61eab51c66f3535" translate="yes" xml:space="preserve">
          <source>The above configuration is what you will want to use in almost all name-based virtual hosting situations. The only thing that this configuration will not work for, in fact, is when you are serving different content based on differing IP addresses or ports.</source>
          <target state="translated">上記の設定は、ほとんどすべての名前ベースのバーチャルホスティングの状況で使用したいものです。この設定がうまくいかないのは、異なる IP アドレスやポートに基づいて異なるコンテンツを提供している場合だけです。</target>
        </trans-unit>
        <trans-unit id="dcbaf840199bd9ed4f8e65713e8286fa33677fc1" translate="yes" xml:space="preserve">
          <source>The above configuration will write log entries in a format known as the Common Log Format (CLF). This standard format can be produced by many different web servers and read by many log analysis programs. The log file entries produced in CLF will look something like this:</source>
          <target state="translated">上記の設定では、Common Log Format (CLF)として知られている形式でログエントリを書き込みます。この標準フォーマットは、多くの異なるウェブサーバーで作成され、多くのログ解析プログラムで読み取ることができます。CLF で生成されたログファイルエントリは、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="333804848401753116812f9184b2838e86500131" translate="yes" xml:space="preserve">
          <source>The above directive tells Apache to permit the execution of CGI files. You will also need to tell the server what files are CGI files. The following &lt;code&gt;&lt;a href=&quot;../mod/mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive tells the server to treat all files with the &lt;code&gt;cgi&lt;/code&gt; or &lt;code&gt;pl&lt;/code&gt; extension as CGI programs:</source>
          <target state="translated">上記のディレクティブは、CGIファイルの実行を許可するようにApacheに指示します。また、どのファイルがCGIファイルであるかをサーバーに通知する必要があります。次の &lt;code&gt;&lt;a href=&quot;../mod/mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; ディレクティブは、 &lt;code&gt;cgi&lt;/code&gt; または &lt;code&gt;pl&lt;/code&gt; 拡張子を持つすべてのファイルをCGIプログラムとして扱うようサーバーに指示します。</target>
        </trans-unit>
        <trans-unit id="543ba16d058224f6302049ec0232bc29fcf0538d" translate="yes" xml:space="preserve">
          <source>The above directive would cause times to be displayed in the format &quot;22:26, June 14, 2002&quot;.</source>
          <target state="translated">上記のディレクティブを使うと、「2002年6月14日22:26」という形式で時刻が表示されます。</target>
        </trans-unit>
        <trans-unit id="72f849d7471e39cd45a5cf3d855dd8ecd8affbd3" translate="yes" xml:space="preserve">
          <source>The above directives build components of a smart filter chain, but do not configure it to run. The &lt;code&gt;&lt;a href=&quot;#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; directive builds a filter chain from smart filters declared, offering the flexibility to insert filters at the beginning or end of the chain, remove a filter, or clear the chain.</source>
          <target state="translated">上記のディレクティブは、スマートフィルターチェーンのコンポーネントを構築しますが、実行するように構成しません。 &lt;code&gt;&lt;a href=&quot;#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; ディレクティブは、スマートフィルタからのフィルタ・チェーンは、チェーンの最初や最後にフィルタを挿入してフィルタを削除、またはチェーンをクリアするための柔軟性を提供し、宣言したビルドします。</target>
        </trans-unit>
        <trans-unit id="3c517390571a4c8182d4e151866edbd32c5b5b77" translate="yes" xml:space="preserve">
          <source>The above example will redirect &lt;code&gt;/anchor/xyz&lt;/code&gt; to &lt;code&gt;/bigpage.html#xyz&lt;/code&gt;. Omitting the [NE] will result in the # being converted to its hexcode equivalent, &lt;code&gt;%23&lt;/code&gt;, which will then result in a 404 Not Found error condition.</source>
          <target state="translated">上記の例では、 &lt;code&gt;/anchor/xyz&lt;/code&gt; を &lt;code&gt;/bigpage.html#xyz&lt;/code&gt; にリダイレクトします。[NE]を省略すると、＃は対応する16進コード &lt;code&gt;%23&lt;/code&gt; に変換され、404 Not Foundエラー状態になります。</target>
        </trans-unit>
        <trans-unit id="38ce81c915423a889137f15830e594ec8b86065a" translate="yes" xml:space="preserve">
          <source>The above example will redirect a request for &lt;code&gt;http://example.com/~bob/abc.html&lt;/code&gt; to &lt;code&gt;http://example.org/users/bob/abc.html&lt;/code&gt;.</source>
          <target state="translated">上記の例では、要求リダイレクトする &lt;code&gt;http://example.com/~bob/abc.html&lt;/code&gt; に &lt;code&gt;http://example.org/users/bob/abc.html&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="1d609694b0e4a4be5b8133ba1424a05c8176e6e9" translate="yes" xml:space="preserve">
          <source>The above is fine and dandy for multiple socket servers, but what about single socket servers? In theory they shouldn't experience any of these same problems because all the children can just block in &lt;code&gt;accept(2)&lt;/code&gt; until a connection arrives, and no starvation results. In practice this hides almost the same &quot;spinning&quot; behavior discussed above in the non-blocking solution. The way that most TCP stacks are implemented, the kernel actually wakes up all processes blocked in &lt;code&gt;accept&lt;/code&gt; when a single connection arrives. One of those processes gets the connection and returns to user-space. The rest spin in the kernel and go back to sleep when they discover there's no connection for them. This spinning is hidden from the user-land code, but it's there nonetheless. This can result in the same load-spiking wasteful behavior that a non-blocking solution to the multiple sockets case can.</source>
          <target state="translated">上記は複数のソケットサーバーには問題ありませんが、単一のソケットサーバーはどうですか？理論的には、接続が到着するまですべての子が &lt;code&gt;accept(2)&lt;/code&gt; をブロックするだけで、飢餓が発生しないため、これらの同じ問題は発生しないはずです。実際には、これにより、前述の非ブロッキングソリューションとほぼ同じ「スピン」動作が隠されます。ほとんどのTCPスタックが実装されている方法で、カーネルは実際に &lt;code&gt;accept&lt;/code&gt; ブロックされたすべてのプロセスを起動します単一の接続が到着したとき。それらのプロセスの1つが接続を取得し、ユーザー空間に戻ります。残りはカーネルでスピンし、接続がないことに気づくとスリープ状態に戻ります。この回転はユーザーランドコードから隠されていますが、それでも存在します。これにより、複数ソケットの場合の非ブロッキングソリューションと同じ負荷急上昇の無駄な動作が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a9b9a8096786c1d6ec3a1ca1494016009edbd4bb" translate="yes" xml:space="preserve">
          <source>The above search will only succeed if &lt;em&gt;fuser&lt;/em&gt; has a pager. When Joe Manager connects as &lt;em&gt;jmanager&lt;/em&gt;, the filter looks like</source>
          <target state="translated">上記の検索は、&lt;em&gt;フューザー&lt;/em&gt;にページャーがある場合にのみ成功します。Joe Managerが&lt;em&gt;jmanager&lt;/em&gt;として接続すると、フィルターは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7a4646ee0b36b1666c32591e239cefcb69ef631e" translate="yes" xml:space="preserve">
          <source>The above search will succeed whether &lt;em&gt;jmanager&lt;/em&gt; has a pager or not.</source>
          <target state="translated">上記の検索は、&lt;em&gt;jmanager&lt;/em&gt;にポケットベルがあるかどうかに&lt;em&gt;関係&lt;/em&gt;なく成功します。</target>
        </trans-unit>
        <trans-unit id="b22bfba8586aead96262a6ab679da9a67644d36e" translate="yes" xml:space="preserve">
          <source>The act of opening a file can itself be a source of delay, particularly on network filesystems. By maintaining a cache of open file descriptors for commonly served files, httpd can avoid this delay. Currently httpd provides one implementation of File-Handle Caching.</source>
          <target state="translated">ファイルを開くという行為自体が遅延の原因になることがあります。一般的に提供されるファイルのオープンファイルディスクリプタの キャッシュを維持することで、httpd はこの遅延を回避することができます。現在のところ、httpd はファイルハンドルキャッシュの実装を一つ提供しています。</target>
        </trans-unit>
        <trans-unit id="c796f9ddf1e63a9e1c50b103a242b26dfd541767" translate="yes" xml:space="preserve">
          <source>The action it performs is determined by the first argument (second argument if a &lt;var&gt;condition&lt;/var&gt; is specified). This can be one of the following values:</source>
          <target state="translated">実行するアクションは、最初の引数（ &lt;var&gt;condition&lt;/var&gt; が指定されている場合は2番目の引数）によって決まります。これは、次のいずれかの値になります。</target>
        </trans-unit>
        <trans-unit id="c8b5b3cac20aa503c0b7a12d46983ddbfcb2e696" translate="yes" xml:space="preserve">
          <source>The action taken if the coordinates given do not fit any of the &lt;code&gt;poly&lt;/code&gt;, &lt;code&gt;circle&lt;/code&gt; or &lt;code&gt;rect&lt;/code&gt; directives, and there are no &lt;code&gt;point&lt;/code&gt; directives. Defaults to &lt;code&gt;nocontent&lt;/code&gt; in the absence of an &lt;code&gt;&lt;a href=&quot;#imapdefault&quot;&gt;ImapDefault&lt;/a&gt;&lt;/code&gt; configuration setting, causing a status code of &lt;code&gt;204 No Content&lt;/code&gt; to be returned. The client should keep the same page displayed.</source>
          <target state="translated">指定された座標が &lt;code&gt;poly&lt;/code&gt; 、 &lt;code&gt;circle&lt;/code&gt; 、 &lt;code&gt;rect&lt;/code&gt; ディレクティブのいずれにも適合せず、 &lt;code&gt;point&lt;/code&gt; ディレクティブがない場合に実行されるアクション。 &lt;code&gt;&lt;a href=&quot;#imapdefault&quot;&gt;ImapDefault&lt;/a&gt;&lt;/code&gt; 構成設定がない場合、デフォルトは &lt;code&gt;nocontent&lt;/code&gt; であり、ステータスコード &lt;code&gt;204 No Content&lt;/code&gt; が返されます。クライアントは同じページを表示したままにする必要があります。</target>
        </trans-unit>
        <trans-unit id="f4dea928f71c0ea01e9f4c4345ad5d47ef58db64" translate="yes" xml:space="preserve">
          <source>The actual content of the resource may be included in the type-map file using the Body header. This header must contain a string that designates a delimiter for the body content. Then all following lines in the type map file will be considered part of the resource body until the delimiter string is found.</source>
          <target state="translated">リソースの実際の内容は、Bodyヘッダーを使ってタイプマップファイルに含めることができます。このヘッダには,ボディ内容の区切り文字を指定する文字列を含まなければならない。そうすると、デリミタ文字列が見つかるまで、タイプマップファイル内の後続のすべての行は、リソースのボディの一部とみなされます。</target>
        </trans-unit>
        <trans-unit id="a6a8914caab4a95180f5af4c9363aeec1e6dacdb" translate="yes" xml:space="preserve">
          <source>The actual log message</source>
          <target state="translated">実際のログメッセージ</target>
        </trans-unit>
        <trans-unit id="be13b45692973e85d3dfe0868fc9c1c4315960e0" translate="yes" xml:space="preserve">
          <source>The addition of the incremental syntax (&lt;em&gt;i.e.&lt;/em&gt;, prefixing keywords with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">インクリメンタル構文の追加（&lt;em&gt;つまり&lt;/em&gt;、キーワードの前に &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; を付けます）。</target>
        </trans-unit>
        <trans-unit id="c6681ec984ad578b2d70dc932c293e3a693c7d53" translate="yes" xml:space="preserve">
          <source>The additional fields are:</source>
          <target state="translated">追加されたフィールドは</target>
        </trans-unit>
        <trans-unit id="98978e88f1892d69567ff75d1446271b5972daf4" translate="yes" xml:space="preserve">
          <source>The address appearing in the &lt;code&gt;VirtualHost&lt;/code&gt; directive can have an optional port. If the port is unspecified, it is treated as a wildcard port, which can also be indicated explicitly using &lt;code&gt;*&lt;/code&gt;. The wildcard port matches any port.</source>
          <target state="translated">&lt;code&gt;VirtualHost&lt;/code&gt; ディレクティブに現れるアドレスは、オプションのポートを持つことができます。ポートが指定されていない場合は、ワイルドカードポートとして扱われ、 &lt;code&gt;*&lt;/code&gt; を使用して明示的に示すこともできます。ワイルドカードポートは任意のポートと一致します。</target>
        </trans-unit>
        <trans-unit id="a774e03d9e32a2b9fd4732c59cbeab1e82f01568" translate="yes" xml:space="preserve">
          <source>The address can be specified as &lt;code&gt;*&lt;/code&gt;, which will match a request if no other vhost has the explicit address on which the request was received.</source>
          <target state="translated">アドレスは &lt;code&gt;*&lt;/code&gt; として指定できます。これは、要求が受信された明示的なアドレスが他の仮想ホストにない場合に、要求と一致します。</target>
        </trans-unit>
        <trans-unit id="1b9be8fd7afd8b0d4d8698610df1ea181b06bd95" translate="yes" xml:space="preserve">
          <source>The administrator will need to set up an external process via cron to clean out expired sessions.</source>
          <target state="translated">管理者は、期限切れのセッションをクリーンアウトするために、cron経由で外部プロセスを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7eb1d0c0f5d921e01dc82e5deeb61879356c9540" translate="yes" xml:space="preserve">
          <source>The advantage for the client is that it saves the time to send the request which may range from a few milliseconds to half a second, depending on where on the globe both are located. The disadvantage is that the client may get sent things it already has in its cache. Sure, HTTP/2 allows for the early cancellation of such requests, but still there are resources wasted.</source>
          <target state="translated">クライアントにとっての利点は、地球上のどこに位置しているかに応じて、数ミリ秒から半秒までの範囲でリクエストを送信する時間を節約できることです。不利な点は、クライアントがすでにキャッシュに入っているものを送信される可能性があることです。確かに、HTTP/2は、そのような要求の早期キャンセルを可能にしますが、まだリソースを無駄にしています。</target>
        </trans-unit>
        <trans-unit id="c1794b6924a1eb704f0d11effba115176c6320fb" translate="yes" xml:space="preserve">
          <source>The algorithm has now selected one 'best' variant, so return it as the response. The HTTP response header &lt;code&gt;Vary&lt;/code&gt; is set to indicate the dimensions of negotiation (browsers and caches can use this information when caching the resource). End.</source>
          <target state="translated">アルゴリズムは「最良の」バリアントを1つ選択したので、それを応答として返します。HTTP応答ヘッダー &lt;code&gt;Vary&lt;/code&gt; は、ネゴシエーションの次元を示すように設定されています（ブラウザーとキャッシュは、リソースをキャッシュするときにこの情報を使用できます）。終わり。</target>
        </trans-unit>
        <trans-unit id="2176708f0d26badf315e3a50bb052093bb670a63" translate="yes" xml:space="preserve">
          <source>The allowed elements are listed in the following table:</source>
          <target state="translated">許可されている要素を以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="93b2b644d727592df9da5ef91ddbf6fad2152a92" translate="yes" xml:space="preserve">
          <source>The amount of shared memory to allocate for keeping track of clients</source>
          <target state="translated">クライアントを追跡するために割り当てる共有メモリの量</target>
        </trans-unit>
        <trans-unit id="c355168172b5cdcd515aed016fc00b9f11e1181c" translate="yes" xml:space="preserve">
          <source>The apr-util library exposes dbm (keyed database) and dbd (query oriented database) client functionality to the httpd server and its modules, such as authentication and authorization. The sdbm dbm and odbc dbd providers are compiled unconditionally.</source>
          <target state="translated">apr-util ライブラリは dbm (keyed database)と dbd (query oriented database)のクライアント機能を httpd サーバとそのモジュールに公開します。sdbm dbm と odbc dbd プロバイダは無条件にコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="7b602441925e5290a4c5154016669a778be106a2" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;none&lt;/code&gt; is available in Apache httpd 2.2.7 and later. All other choices are DISABLED for 2.3.x and later.</source>
          <target state="translated">引数 &lt;code&gt;none&lt;/code&gt; は、Apache httpd 2.2.7以降では使用できません。他のすべての選択は、2.3.x以降では無効になっています。</target>
        </trans-unit>
        <trans-unit id="32122831418b7ed613dae09d25a99091dea7cfef" translate="yes" xml:space="preserve">
          <source>The argument can be:</source>
          <target state="translated">議論になることがあります。</target>
        </trans-unit>
        <trans-unit id="1a2ba978c232d6034fe3e8d3ab6df7ddf7e85584" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file (or dir or special) exists</source>
          <target state="translated">引数はファイル名として扱われます。ファイル(またはディレクトリや特別なもの)が存在する場合に真。</target>
        </trans-unit>
        <trans-unit id="b16c1712ddddbbc91231d0ff6ea7977881968149" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is a directory</source>
          <target state="translated">引数はファイル名として扱われます。ファイルが存在し、ディレクトリであれば真</target>
        </trans-unit>
        <trans-unit id="07a9eaa3029c87eef52daa2e50dce8e8bd2fc4f3" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is not empty</source>
          <target state="translated">引数はファイル名として扱われます。ファイルが存在し、空でなければ真</target>
        </trans-unit>
        <trans-unit id="0500fbfddf2ac8fe582d74b53170e6f0d7f0ad92" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is regular file</source>
          <target state="translated">引数はファイル名として扱われます。ファイルが存在し、通常のファイルであれば真</target>
        </trans-unit>
        <trans-unit id="da76c01217b02553e603f6bccd637ba43a4aeb62" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is symlink</source>
          <target state="translated">引数はファイル名として扱われます。ファイルが存在し、シンボリックリンクであれば真。</target>
        </trans-unit>
        <trans-unit id="716206725bbf8993104bfa7e40a7aa6e82415389" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is symlink (same as &lt;code&gt;-L&lt;/code&gt;)</source>
          <target state="translated">引数はファイル名として扱われます。ファイルが存在し、シンボリックリンクである場合はtrue（ &lt;code&gt;-L&lt;/code&gt; と同じ）</target>
        </trans-unit>
        <trans-unit id="32b2702b4335c4e2044986196810a3b0f3dfc816" translate="yes" xml:space="preserve">
          <source>The argument, which specifies the location to which the logs will be written, can take one of the following two types of values:</source>
          <target state="translated">引数は、ログが書き込まれる場所を指定するもので、以下の2種類の値のうちの1つを取ることができます。</target>
        </trans-unit>
        <trans-unit id="0e5b9718ba1b39daccb0f98d265bcfe9f379f715" translate="yes" xml:space="preserve">
          <source>The arguments &lt;var&gt;files&lt;/var&gt; can be any C source file (.c), a object file (.o) or even a library archive (.a). The &lt;code&gt;apxs&lt;/code&gt; tool automatically recognizes these extensions and automatically used the C source files for compilation while just using the object and archive files for the linking phase. But when using such pre-compiled objects make sure they are compiled for position independent code (PIC) to be able to use them for a dynamically loaded shared object. For instance with GCC you always just have to use &lt;code&gt;-fpic&lt;/code&gt;. For other C compilers consult its manual page or at watch for the flags &lt;code&gt;apxs&lt;/code&gt; uses to compile the object files.</source>
          <target state="translated">引数 &lt;var&gt;files&lt;/var&gt; は、Cソースファイル（.c）、オブジェクトファイル（.o）、またはライブラリアーカイブ（.a）を使用できます。 &lt;code&gt;apxs&lt;/code&gt; のツールが自動的にこれらの拡張機能を認識し、ちょうどリンク相のオブジェクトやアーカイブファイルを使用している間に自動的にコンパイルするためにCのソースファイルを使用していました。ただし、このような事前コンパイルされたオブジェクトを使用する場合は、動的に読み込まれる共有オブジェクトに使用できるように、それらが位置独立コード（PIC）用にコンパイルされていることを確認してください。たとえばGCCでは、常に &lt;code&gt;-fpic&lt;/code&gt; を使用する必要があります。他のCコンパイラについては、そのマニュアルページを参照するか、 &lt;code&gt;apxs&lt;/code&gt; がオブジェクトファイルのコンパイルに使用するフラグを確認してください。</target>
        </trans-unit>
        <trans-unit id="6734bb8b6f63153817e71de5c94275ae744a55ad" translate="yes" xml:space="preserve">
          <source>The asterisks match all addresses, so the main server serves no requests. Due to the fact that the virtual host with &lt;code&gt;ServerName www.example.com&lt;/code&gt; is first in the configuration file, it has the highest priority and can be seen as the</source>
          <target state="translated">アスタリスクはすべてのアドレスに一致するため、メインサーバーは要求を処理しません。 &lt;code&gt;ServerName www.example.com&lt;/code&gt; 仮想ホストは構成ファイルの最初にあるため、優先順位が最も高く、</target>
        </trans-unit>
        <trans-unit id="f3b79ccefef2cc60cd5424b43ac0b4b52de5b64a" translate="yes" xml:space="preserve">
          <source>The attribute specified in the URL is used in compare operations for the &lt;code&gt;Require ldap-user&lt;/code&gt; operation.</source>
          <target state="translated">URLで指定された属性は、 &lt;code&gt;Require ldap-user&lt;/code&gt; 操作の比較操作で使用されます。</target>
        </trans-unit>
        <trans-unit id="275c294bacee4cbea1813866667b1fec4732e183" translate="yes" xml:space="preserve">
          <source>The attribute to search for. Although RFC 2255 allows a comma-separated list of attributes, only the first attribute will be used, no matter how many are provided. If no attributes are provided, the default is to use &lt;code&gt;uid&lt;/code&gt;. It's a good idea to choose an attribute that will be unique across all entries in the subtree you will be using. All attributes listed will be put into the environment with an AUTHENTICATE_ prefix for use by other modules.</source>
          <target state="translated">検索する属性。 RFC 2255ではカンマ区切りの属性リストを使用できますが、指定された属性の数に関係なく、最初の属性のみが使用されます。属性が指定されていない場合、デフォルトでは &lt;code&gt;uid&lt;/code&gt; が使用されます。使用するサブツリーのすべてのエントリで一意になる属性を選択することをお勧めします。リストされたすべての属性は、他のモジュールで使用するためにAUTHENTICATE_プレフィックスを付けて環境に入れられます。</target>
        </trans-unit>
        <trans-unit id="7b65086f82f5353a7e0699235872f0524210cf78" translate="yes" xml:space="preserve">
          <source>The attributes prefixed with a &lt;code&gt;?&lt;/code&gt; (e.g. &lt;code&gt;?context&lt;/code&gt;) are all optional. For each, there is a single byte code to indicate the type of attribute, and then its value (string or integer). They can be sent in any order (though the C code always sends them in the order listed below). A special terminating code is sent to signal the end of the list of optional attributes. The list of byte codes is:</source>
          <target state="translated">接頭辞が &lt;code&gt;?&lt;/code&gt; の属性（例 &lt;code&gt;?context&lt;/code&gt; ）はすべてオプションです。それぞれに、属性のタイプとその値（文字列または整数）を示す1バイトのコードがあります。それらは任意の順序で送信できます（ただし、Cコードは常に以下にリストされている順序で送信します）。特別な終了コードが送信され、オプション属性のリストの終わりを示します。バイトコードのリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9e7273bc7956fa4caae233ea4d05f7e05ce9ba74" translate="yes" xml:space="preserve">
          <source>The authentication cache should be used where authentication lookups impose a significant load on the server, or a backend or network. Authentication by file (&lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt;) or dbm (&lt;code&gt;&lt;a href=&quot;mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt;) are unlikely to benefit, as these are fast and lightweight in their own right (though in some cases, such as a network-mounted file, cacheing may be worthwhile). Other providers such as SQL or LDAP based authentication are more likely to benefit, particularly where there is an observed performance issue. Amongst the standard modules, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; manages its own cache, so only &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; will usually benefit from this cache.</source>
          <target state="translated">認証キャッシュは、認証ルックアップがサーバー、バックエンド、またはネットワークに大きな負荷をかける場合に使用する必要があります。ファイル（ &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; ）またはdbm（ &lt;code&gt;&lt;a href=&quot;mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; ）による認証は、それ自体が高速で軽量であるため、メリットが得られる可能性は低いです（ネットワークマウントされたファイルなど、場合によっては、キャッシュする価値があります）。 SQLやLDAPベースの認証などの他のプロバイダーは、特にパフォーマンスの問題が観察される場合に、より多くのメリットをもたらします。標準モジュールの中で、 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; は独自のキャッシュを管理するため、通常、このキャッシュを利用できるのは &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; だけです。</target>
        </trans-unit>
        <trans-unit id="7237322ecd1b0dba8b74a859a03db44dc0605161" translate="yes" xml:space="preserve">
          <source>The authentication type &lt;code&gt;None&lt;/code&gt; disables authentication. When authentication is enabled, it is normally inherited by each subsequent &lt;a href=&quot;../sections#mergin&quot;&gt;configuration section&lt;/a&gt;, unless a different authentication type is specified. If no authentication is desired for a subsection of an authenticated section, the authentication type &lt;code&gt;None&lt;/code&gt; may be used; in the following example, clients may access the &lt;code&gt;/www/docs/public&lt;/code&gt; directory without authenticating:</source>
          <target state="translated">認証タイプ &lt;code&gt;None&lt;/code&gt; は認証を無効にします。認証が有効になっている場合、別の認証タイプが指定されていない限り、通常、後続の各&lt;a href=&quot;../sections#mergin&quot;&gt;設定セクションに&lt;/a&gt;継承されます。認証済みセクションのサブセクションで認証が必要ない場合は、認証タイプ &lt;code&gt;None&lt;/code&gt; を使用できます。次の例では、クライアントは認証なしで &lt;code&gt;/www/docs/public&lt;/code&gt; ディレクトリにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9b135ba72d706ed5023449763c3197752e9e9f22" translate="yes" xml:space="preserve">
          <source>The author is not responsible for the consequences of use of this software, no matter how awful, even if they arise from flaws in it.</source>
          <target state="translated">作者はこのソフトウェアを使用した結果については、たとえそれが欠陥から生じたとしても、どんなにひどいものであっても責任を負いません。</target>
        </trans-unit>
        <trans-unit id="4cb829f51b117bee249b30913943f5bc3c39771a" translate="yes" xml:space="preserve">
          <source>The authorization container directives &lt;code&gt;&lt;a href=&quot;#requireall&quot;&gt;&amp;lt;RequireAll&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#requireany&quot;&gt;&amp;lt;RequireAny&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#requirenone&quot;&gt;&amp;lt;RequireNone&amp;gt;&lt;/a&gt;&lt;/code&gt; may be combined with each other and with the &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive to express complex authorization logic.</source>
          <target state="translated">承認コンテナディレクティブ &lt;code&gt;&lt;a href=&quot;#requireall&quot;&gt;&amp;lt;RequireAll&amp;gt;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#requireany&quot;&gt;&amp;lt;RequireAny&amp;gt;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#requirenone&quot;&gt;&amp;lt;RequireNone&amp;gt;&lt;/a&gt;&lt;/code&gt; を相互に組み合わせたり、 &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; ディレクティブと組み合わせたりして、複雑な承認ロジックを表現できます。</target>
        </trans-unit>
        <trans-unit id="c6216b68aa7a8eed0f6bd7a88f356e7cf38d00c3" translate="yes" xml:space="preserve">
          <source>The authorization providers &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;ip&lt;/code&gt; let you allow or deny access based on other host based criteria such as host name or ip address of the machine requesting a document.</source>
          <target state="translated">承認プロバイダー &lt;code&gt;all&lt;/code&gt; 、 &lt;code&gt;env&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; および &lt;code&gt;ip&lt;/code&gt; を使用すると、ドキュメントを要求するマシンのホスト名やIPアドレスなど、他のホストベースの基準に基づいてアクセスを許可または拒否できます。</target>
        </trans-unit>
        <trans-unit id="ba31806e2d0b652eedb0365fa898417b114645df" translate="yes" xml:space="preserve">
          <source>The authorization providers implemented by &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; are registered using the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive. The directive can be referenced within a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section as well as &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; files to control access to particular parts of the server. Access can be controlled based on the client hostname or IP address.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; によって実装された許可プロバイダーは、 &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して登録されます。このディレクティブは、 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内で参照でき、サーバーの特定の部分へのアクセスを制御する &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; ファイルも参照できます。アクセスは、クライアントのホスト名またはIPアドレスに基づいて制御できます。</target>
        </trans-unit>
        <trans-unit id="fa5318c99eb92c2874f86858223320d9d5845330" translate="yes" xml:space="preserve">
          <source>The authz provider is normally called before authentication. If it needs to know the authenticated user name (or if the user will be authenticated at all), the provider must return &lt;code&gt;apache2.AUTHZ_DENIED_NO_USER&lt;/code&gt;. This will cause authentication to proceed and the authz provider to be called a second time.</source>
          <target state="translated">authzプロバイダーは通常、認証の前に呼び出されます。認証されたユーザー名を知る必要がある場合（またはユーザーが認証される場合）、プロバイダーは &lt;code&gt;apache2.AUTHZ_DENIED_NO_USER&lt;/code&gt; を返す必要があります。これにより認証が続行され、authzプロバイダーが2回目に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c64da7cdb7a59acd81fc8f2b032080ce86c4e8ac" translate="yes" xml:space="preserve">
          <source>The available (case-insensitive) &lt;em&gt;protocol&lt;/em&gt;s are:</source>
          <target state="translated">使用可能な（大文字と小文字を区別しない）&lt;em&gt;プロトコル&lt;/em&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0962afd40b81bb0bc94de13549ce4ef5f932492a" translate="yes" xml:space="preserve">
          <source>The available &lt;em&gt;flag&lt;/em&gt;s are:</source>
          <target state="translated">使用可能な&lt;em&gt;フラグ&lt;/em&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="99d7d1b80f0c9a27d9871126cc009132bb9df1d4" translate="yes" xml:space="preserve">
          <source>The available &lt;em&gt;option&lt;/em&gt;s are:</source>
          <target state="translated">使用可能な&lt;em&gt;オプション&lt;/em&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4ee29c189128f2c6ea27aee8d2c40e005fe5b187" translate="yes" xml:space="preserve">
          <source>The average time spent per request. The first value is calculated with the formula &lt;code&gt;concurrency * timetaken * 1000 / done&lt;/code&gt; while the second value is calculated with the formula &lt;code&gt;timetaken * 1000 / done&lt;/code&gt;</source>
          <target state="translated">リクエストごとに費やされた平均時間。最初の値は、式の &lt;code&gt;concurrency * timetaken * 1000 / done&lt;/code&gt; で計算され、2番目の値は、式 &lt;code&gt;timetaken * 1000 / done&lt;/code&gt; 計算されます</target>
        </trans-unit>
        <trans-unit id="a32029690c2678ad704a590e1cdd607394be0e62" translate="yes" xml:space="preserve">
          <source>The back-reference flow through a rule.</source>
          <target state="translated">ルールを通した逆参照の流れ。</target>
        </trans-unit>
        <trans-unit id="25acdf59848da0c33097bb22d874b319d6afec63" translate="yes" xml:space="preserve">
          <source>The balanced gateway needs &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; and at least one load balancer algorithm module, such as &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;, in addition to the proxy modules listed above. &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; is the default, and will be used for this example configuration.</source>
          <target state="translated">バランスゲートウェイには、上記のプロキシモジュールに加えて、 &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; と、少なくとも1つのロードバランサーアルゴリズムモジュール（ &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; など）が必要です。 &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; がデフォルトであり、この設定例で使用されます。</target>
        </trans-unit>
        <trans-unit id="54be4d9ff512a0745beb6046d09b1ccc4d03378c" translate="yes" xml:space="preserve">
          <source>The balancer also logs detailed information about handling stickyness to the error log, if the log level is set to &lt;code&gt;debug&lt;/code&gt; or higher. This is an easy way to troubleshoot stickyness problems, but the log volume might be to high for production servers under high load.</source>
          <target state="translated">ログレベルが &lt;code&gt;debug&lt;/code&gt; 以上に設定されている場合、バランサーはスティッキネスの処理に関する詳細情報もエラーログに記録します。これは、スティッキ性の問題をトラブルシューティングする簡単な方法ですが、高負荷の運用サーバーではログの量が多くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="aed2af3e81d85f7b0b5e5ecb98bc694c19dfaa44" translate="yes" xml:space="preserve">
          <source>The balancer supports stickyness. When a request is proxied to some back-end, then all following requests from the same user should be proxied to the same back-end. Many load balancers implement this feature via a table that maps client IP addresses to back-ends. This approach is transparent to clients and back-ends, but suffers from some problems: unequal load distribution if clients are themselves hidden behind proxies, stickyness errors when a client uses a dynamic IP address that changes during a session and loss of stickyness, if the mapping table overflows.</source>
          <target state="translated">バランサーはスティッキネスをサポートしています。リクエストがあるバックエンドにプロキシされている場合、 同じユーザーからの後続のリクエストはすべて同じバックエンドにプロキシされなければなりません。多くのロードバランサは、クライアントの IP アドレスをバックエンドにマッピングする テーブルを使ってこの機能を実装しています。このアプローチはクライアントとバックエンドからは透過的ですが、いくつかの問題に悩まされます:クライアント自身がプロキシの後ろに隠れている場合の負荷分散の不均一さ、 クライアントがセッション中に変更される動的なIPアドレスを使用している場合のスティッキネスエラー、 マッピングテーブルがオーバーフローした場合のスティッキネスの損失です。</target>
        </trans-unit>
        <trans-unit id="0a0792c9554d8f38940202ea0b403e3270f1baff" translate="yes" xml:space="preserve">
          <source>The base time is either the last modification time of the file, or the time of the client's access to the document. Which should be used is specified by the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; field; &lt;code&gt;M&lt;/code&gt; means that the file's last modification time should be used as the base time, and &lt;code&gt;A&lt;/code&gt; means the client's access time should be used.</source>
          <target state="translated">基準時刻は、ファイルの最終変更時刻、またはクライアントがドキュメントにアクセスした時刻です。どちらを使用するかは &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; フィールドで指定します。 &lt;code&gt;M&lt;/code&gt; はファイルの最終変更時刻を基準時刻として使用する必要があることを意味し、 &lt;code&gt;A&lt;/code&gt; はクライアントのアクセス時刻を使用する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="90c16bf26feb50d7bc819d7d88a476a00a3c8c14" translate="yes" xml:space="preserve">
          <source>The basic auth password sent with this request, if any</source>
          <target state="translated">このリクエストで送信された基本的な認証パスワード(もしあれば</target>
        </trans-unit>
        <trans-unit id="bc81f0281b412c05ab5a00630112ba6a1f667e3d" translate="yes" xml:space="preserve">
          <source>The basic flow control elements are:</source>
          <target state="translated">基本的なフロー制御要素は</target>
        </trans-unit>
        <trans-unit id="a874b9f319e11a5b4db9ae9f46997e5491b656c6" translate="yes" xml:space="preserve">
          <source>The basic module loading directive is</source>
          <target state="translated">基本的なモジュール読み込みディレクティブは</target>
        </trans-unit>
        <trans-unit id="c75ffefba5b8f833444effbd934544629ce6e2c4" translate="yes" xml:space="preserve">
          <source>The basic rules to cache for a provider are:</source>
          <target state="translated">プロバイダのキャッシングの基本的なルールは</target>
        </trans-unit>
        <trans-unit id="e3095573eff222e54c0b6949060216f7a293a8a4" translate="yes" xml:space="preserve">
          <source>The basic security concerns with mod_privileges are:</source>
          <target state="translated">mod_privileges での基本的なセキュリティ上の懸念事項は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="36bf612bb9c1138de5eba6b9763345a08547d046" translate="yes" xml:space="preserve">
          <source>The behavior described in the last point is completely observable via &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; in the connection summary table through two new columns: &quot;Slot&quot; and &quot;Stopping&quot;. The former indicates the PID and the latter if the process is stopping or not; the extra state &quot;Yes (old gen)&quot; indicates a process still running after a graceful restart.</source>
          <target state="translated">最後のポイントで説明した動作は、「Slot」と「Stopping」という2つの新しい列を通じて、接続サマリーテーブルの &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; を介して完全に観察できます。前者はPIDを示し、後者はプロセスが停止しているかどうかを示します。「Yes（old gen）」という追加の状態は、正常な再起動後もプロセスがまだ実行中であることを示します。</target>
        </trans-unit>
        <trans-unit id="07f12d96dd4cd863f9118e6c1d5d80d4e7c6d5eb" translate="yes" xml:space="preserve">
          <source>The behavior of a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; can be modified by the application of one or more flags to the end of the rule. For example, the matching behavior of a rule can be made case-insensitive by the application of the &lt;code&gt;[NC]&lt;/code&gt; flag:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; の動作は、ルールの最後に1つ以上のフラグを適用することで変更できます。たとえば、 &lt;code&gt;[NC]&lt;/code&gt; フラグを適用することで、ルールの一致動作を大文字と小文字を区別しないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="34387e084f815ac3778e38b098521f4a3f66611f" translate="yes" xml:space="preserve">
          <source>The behavior of both of these caches is controlled with the &lt;code&gt;&lt;a href=&quot;#ldapopcacheentries&quot;&gt;LDAPOpCacheEntries&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldapopcachettl&quot;&gt;LDAPOpCacheTTL&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">これらのキャッシュの両方の動作は、 &lt;code&gt;&lt;a href=&quot;#ldapopcacheentries&quot;&gt;LDAPOpCacheEntries&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#ldapopcachettl&quot;&gt;LDAPOpCacheTTL&lt;/a&gt;&lt;/code&gt; ディレクティブで制御されます。</target>
        </trans-unit>
        <trans-unit id="050885ef3265a118fbe1be040e695135edc76158" translate="yes" xml:space="preserve">
          <source>The below example will print &quot;foo is bar&quot; if the variable &lt;code&gt;foo&lt;/code&gt; is set to the value &quot;bar&quot;.</source>
          <target state="translated">次の例では、変数 &lt;code&gt;foo&lt;/code&gt; の値が「bar」に設定されている場合、「foo is bar」が出力されます。</target>
        </trans-unit>
        <trans-unit id="164c14e8f8fda732858de5c8346d88919224fac0" translate="yes" xml:space="preserve">
          <source>The below example will print &quot;from local net&quot; if client IP address belongs to the 10.0.0.0/8 subnet.</source>
          <target state="translated">以下の例では、クライアントのIPアドレスが10.0.0.0.0/8サブネットに属している場合、「from local net」と表示されます。</target>
        </trans-unit>
        <trans-unit id="36d56496207f97e0e1531f2cecf47cdb73bd7901" translate="yes" xml:space="preserve">
          <source>The binary format of a certificate is defined using the ASN.1 notation [&lt;a href=&quot;#ASN1&quot;&gt;ASN1&lt;/a&gt;] [&lt;a href=&quot;#PKCS&quot;&gt;PKCS&lt;/a&gt;]. This notation defines how to specify the contents and encoding rules define how this information is translated into binary form. The binary encoding of the certificate is defined using Distinguished Encoding Rules (DER), which are based on the more general Basic Encoding Rules (BER). For those transmissions which cannot handle binary, the binary form may be translated into an ASCII form by using Base64 encoding [&lt;a href=&quot;#MIME&quot;&gt;MIME&lt;/a&gt;]. When placed between begin and end delimiter lines (as below), this encoded version is called a PEM (&quot;Privacy Enhanced Mail&quot;) encoded certificate.</source>
          <target state="translated">証明書のバイナリ形式は、ASN.1表記[ &lt;a href=&quot;#ASN1&quot;&gt;ASN1&lt;/a&gt; ] [ &lt;a href=&quot;#PKCS&quot;&gt;PKCS&lt;/a&gt; ] を使用して定義されます。この表記はコンテンツの指定方法を定義し、エンコーディングルールはこの情報をバイナリ形式に変換する方法を定義します。証明書のバイナリエンコーディングは、より一般的なBasic Encoding Rules（BER）に基づくDistinguished Encoding Rules（DER）を使用して定義されます。バイナリを処理できない送信の場合、バイナリ形式は、Base64エンコーディング[ &lt;a href=&quot;#MIME&quot;&gt;MIME&lt;/a&gt; ] を使用してASCII形式に変換できます。開始区切り文字と終了区切り文字の間に配置すると（以下のように）、このエンコードされたバージョンはPEM（「プライバシー強化メール」）エンコードされた証明書と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="88eba4c9f8a0b4faefa71c10a8df3061a7d046f9" translate="yes" xml:space="preserve">
          <source>The boolean operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; share the same priority. So if you want to bind such an operator more tightly, you should use parentheses.</source>
          <target state="translated">ブール演算子 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; および &lt;code&gt;||&lt;/code&gt; 同じ優先順位を共有します。したがって、そのような演算子をより強くバインドしたい場合は、括弧を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b2f3ebd776cd911e2fdf7d109b756820c7ba0c3" translate="yes" xml:space="preserve">
          <source>The buffer filter may be added to either the input or the output filter stacks, as appropriate, using the &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">バッファーフィルターは、 &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、必要に応じて入力または出力フィルタースタックに追加できます。</target>
        </trans-unit>
        <trans-unit id="323a7353377c46ce782fbe038d71048821209357" translate="yes" xml:space="preserve">
          <source>The buffer filters read the request/response into RAM and then repack the request/response into the fewest memory buckets possible, at the cost of CPU time. When the request/response is already efficiently packed, buffering the request/response could cause the request/response to be slower than not using a buffer at all. These filters should be used with care, and only where necessary.</source>
          <target state="translated">バッファフィルタは、CPU時間を犠牲にして、リクエスト/レスポンスをRAMに読み込んで、可能な限り少ないメモリバケットにリパックします。リクエスト/レスポンスが既に効率的にパックされている場合、リクエスト/レスポンスをバッファリングすると、バッファを全く使わない場合よりもリクエスト/レスポンスが遅くなる可能性があります。これらのフィルタは注意して使用し、必要な場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="c8d7b81dd91cf79c4ae9600f0644c3e3887fc651" translate="yes" xml:space="preserve">
          <source>The bug reporting page and dev-httpd mailing list are &lt;em&gt;not&lt;/em&gt; provided to answer questions about configuration or running Apache. Before you submit a bug report or request, first consult this document, the &lt;a href=&quot;http://wiki.apache.org/httpd/FAQ&quot;&gt;Frequently Asked Questions&lt;/a&gt; page and the other relevant documentation topics. If you still have a question or problem, post it to the &lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt; novell.devsup.webserver&lt;/a&gt; newsgroup, where many Apache users are more than willing to answer new and obscure questions about using Apache on NetWare.</source>
          <target state="translated">バグ報告ページとdev-httpdメーリングリストは、Apacheの設定や実行に関する質問に答える&lt;em&gt;ために&lt;/em&gt;提供されて&lt;em&gt;いません&lt;/em&gt;。バグレポートまたはリクエストを送信する前に、まずこのドキュメント、&lt;a href=&quot;http://wiki.apache.org/httpd/FAQ&quot;&gt;よくある質問の&lt;/a&gt;ページ、およびその他の関連ドキュメントのトピックを参照してください。それでも質問や問題がある場合は、&lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt;novell.devsup.webserver&lt;/a&gt;ニュースグループに投稿してください。このグループでは、多くのApacheユーザーが、NetWareでのApacheの使用に関する新しい不明な質問に喜んで答えています。</target>
        </trans-unit>
        <trans-unit id="b09b050cdb686538f55bcc5b63fca3c44ba9342c" translate="yes" xml:space="preserve">
          <source>The bug reporting page and dev-httpd mailing list are &lt;em&gt;not&lt;/em&gt; provided to answer questions about configuration or running Apache. Before you submit a bug report or request, first consult this document, the &lt;a href=&quot;https://wiki.apache.org/httpd/FAQ&quot;&gt;Frequently Asked Questions&lt;/a&gt; page and the other relevant documentation topics. If you still have a question or problem, post it to the &lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt; novell.devsup.webserver&lt;/a&gt; newsgroup, where many Apache users are more than willing to answer new and obscure questions about using Apache on NetWare.</source>
          <target state="translated">バグ報告ページとdev-httpdメーリングリストは、Apacheの設定や実行に関する質問に答える&lt;em&gt;ために&lt;/em&gt;提供されて&lt;em&gt;いません&lt;/em&gt;。バグレポートまたはリクエストを送信する前に、まずこのドキュメント、&lt;a href=&quot;https://wiki.apache.org/httpd/FAQ&quot;&gt;よくある質問の&lt;/a&gt;ページ、およびその他の関連するドキュメントのトピックを参照してください。それでも質問や問題がある場合は、&lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt;novel.devsup.webserver&lt;/a&gt;ニュースグループに投稿してください。多くのApacheユーザーは、NetWareでのApacheの使用に関する新しいあいまいな質問に喜んで答えます。</target>
        </trans-unit>
        <trans-unit id="dfb0e30e59534bcc5c446bff0e7caca4112bea40" translate="yes" xml:space="preserve">
          <source>The cached entity was invalidated by a request method other than GET or HEAD.</source>
          <target state="translated">キャッシュされたエンティティは、GET または HEAD 以外の要求メソッドによって無効になりました。</target>
        </trans-unit>
        <trans-unit id="deda91fa1421efd95d86069b84e0d079972b4d5a" translate="yes" xml:space="preserve">
          <source>The canonical &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the current server.</source>
          <target state="translated">現在のサーバーの正規の &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1725f98fc14054d83f7c343f9e9d4d0e59525bb7" translate="yes" xml:space="preserve">
          <source>The canonical &lt;code&gt;&lt;a href=&quot;core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the server serving the request.</source>
          <target state="translated">リクエストを処理するサーバーの正規の &lt;code&gt;&lt;a href=&quot;core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b8ca322a021c4a5a4d7b3bfc77d37d9a02e338b" translate="yes" xml:space="preserve">
          <source>The canonical filename of the request</source>
          <target state="translated">リクエストの正式なファイル名</target>
        </trans-unit>
        <trans-unit id="fd09904db3cb97408c70bca5b29e37f0bd2f9124" translate="yes" xml:space="preserve">
          <source>The canonical port of the server serving the request, or the server's actual port, or the client's actual port. Valid formats are &lt;code&gt;canonical&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;, or &lt;code&gt;remote&lt;/code&gt;.</source>
          <target state="translated">リクエストを処理するサーバーの正規のポート、サーバーの実際のポート、またはクライアントの実際のポート。有効な形式は、 &lt;code&gt;canonical&lt;/code&gt; 、 &lt;code&gt;local&lt;/code&gt; 、または &lt;code&gt;remote&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d49898ce34e20e31602a7ad684f3df2aa394961c" translate="yes" xml:space="preserve">
          <source>The canonical port of the server serving the request.</source>
          <target state="translated">リクエストを提供するサーバーの正規ポート。</target>
        </trans-unit>
        <trans-unit id="09dc6cdc44983c76f6a02c071a35bd222dfd7eb2" translate="yes" xml:space="preserve">
          <source>The case of the extension does not matter. Blank lines, and lines beginning with a hash character (&lt;code&gt;#&lt;/code&gt;) are ignored.</source>
          <target state="translated">拡張の場合は問題ではありません。空白行、およびハッシュ文字（ &lt;code&gt;#&lt;/code&gt; ）で始まる行は無視されます。</target>
        </trans-unit>
        <trans-unit id="4875079b27ababb0cf0554bb561da42a66a109f6" translate="yes" xml:space="preserve">
          <source>The case of the extension does not matter. Blank lines, and lines beginning with a hash character (&lt;code&gt;#&lt;/code&gt;) are ignored. Empty lines are there for completeness (of the mime.types file). Apache httpd can still determine these types with &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">拡張の場合は問題ではありません。空白行、およびハッシュ文字（ &lt;code&gt;#&lt;/code&gt; ）で始まる行は無視されます。（mime.typesファイルの）完全性のために空の行があります。Apache httpdは、 &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; を使用してこれらのタイプを判別できます。</target>
        </trans-unit>
        <trans-unit id="89ab215b66230a75f24a0de8e69b7529999cd3fd" translate="yes" xml:space="preserve">
          <source>The character &lt;code&gt;*&lt;/code&gt;, which acts as a wildcard and matches any IP address.</source>
          <target state="translated">ワイルドカードとして機能し、任意のIPアドレスと一致する文字 &lt;code&gt;*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a77e255c83fbac472bec915109bd92565d16365" translate="yes" xml:space="preserve">
          <source>The character set name parameters of &lt;code&gt;&lt;a href=&quot;#charsetsourceenc&quot;&gt;CharsetSourceEnc&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#charsetdefault&quot;&gt;CharsetDefault&lt;/a&gt;&lt;/code&gt; must be acceptable to the translation mechanism used by &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; on the system where &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; is deployed. These character set names are not standardized and are usually not the same as the corresponding values used in http headers. Currently, APR can only use iconv(3), so you can easily test your character set names using the iconv(1) program, as follows:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#charsetsourceenc&quot;&gt;CharsetSourceEnc&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#charsetdefault&quot;&gt;CharsetDefault&lt;/a&gt;&lt;/code&gt; の文字セット名パラメーターは、 &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; がデプロイされているシステムで&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;が使用する変換メカニズムに受け入れられる必要があります。これらの文字セット名は標準化されておらず、通常、httpヘッダーで使用される対応する値と同じではありません。現在、APRはiconv（3）しか使用できないため、次のように、iconv（1）プログラムを使用して簡単に文字セット名をテストできます。</target>
        </trans-unit>
        <trans-unit id="1ad6e95ba44284d42b0954b20fa953b4e1ea26e4" translate="yes" xml:space="preserve">
          <source>The character set names in this example work with the iconv translation support in Solaris 8.</source>
          <target state="translated">この例の文字セット名は、Solaris 8 の iconv 変換サポートで動作します。</target>
        </trans-unit>
        <trans-unit id="27cdf0b17dd2468c6609b6980a09eaf9f652adbd" translate="yes" xml:space="preserve">
          <source>The character set, language, encoding and mime type are all used in the process of content negotiation (See &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt;) to determine which document to give to the client, when there are alternative documents in more than one character set, language, encoding or mime type. All filename extensions associations created with &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives (and extensions listed in the &lt;code&gt;&lt;a href=&quot;mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt;) participate in this select process. Filename extensions that are only associated using the &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directives may be included or excluded from matching by using the &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">文字セット、言語、エンコーディング、およびMIMEタイプはすべて、コンテンツネゴシエーション（ &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; を参照）のプロセスで使用され、複数の文字セット、言語、エンコーディング、またはMIMEの代替ドキュメントがある場合に、クライアントに提供するドキュメントを決定します。タイプ。 &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; ディレクティブで作成されたすべてのファイル名拡張子の関連付け（および &lt;code&gt;&lt;a href=&quot;mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; にリストされている拡張子）は、この選択プロセスに参加します。 &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; を使用してのみ関連付けられるファイル名拡張子ディレクティブは、 &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、一致に含めたり除外したりできます。</target>
        </trans-unit>
        <trans-unit id="9e5a110e555303fdf801999adddaeb4c5ed141f8" translate="yes" xml:space="preserve">
          <source>The character which is used to separate (or &quot;delimit&quot;) the various parts of the substituion string is referred to as the &quot;delimiter&quot;, and it is most common to use a slash for this purpose.</source>
          <target state="translated">代入文字列の様々な部分を区切る(または &quot;区切り &quot;する)ために使われる文字を &quot;区切り文字 &quot;と呼び、この目的のためにスラッシュを使うのが最も一般的です。</target>
        </trans-unit>
        <trans-unit id="efd620e0efe79435301524ed7fa36dccef58736e" translate="yes" xml:space="preserve">
          <source>The characteristics of the request itself are logged by placing &quot;&lt;code&gt;%&lt;/code&gt;&quot; directives in the format string, which are replaced in the log file by the values as follows:</source>
          <target state="translated">リクエスト自体の特性は、フォーマット文字列に「 &lt;code&gt;%&lt;/code&gt; 」ディレクティブを配置することでログに記録されます。これは、ログファイルで次のような値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="75831956b2354f8986002d8377655090045c7568" translate="yes" xml:space="preserve">
          <source>The choice of digest function determines how a digest is created from a record unit. SSL supports the following:</source>
          <target state="translated">ダイジェスト機能の選択は、レコード単位からどのようにダイジェストを作成するかを決定します。SSLは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="9b4cb970400149009a8c0869cc9a9a035ca9abfd" translate="yes" xml:space="preserve">
          <source>The chunk is basically binary data, and is sent directly back to the browser.</source>
          <target state="translated">チャンクは基本的にはバイナリデータで、ブラウザに直接送り返されます。</target>
        </trans-unit>
        <trans-unit id="d7769fea813c85e6f6c7c9cf7e84f321ffff5749" translate="yes" xml:space="preserve">
          <source>The cipher specification name</source>
          <target state="translated">暗号仕様名</target>
        </trans-unit>
        <trans-unit id="ad2280d72cac406d22e7015d7984ac301a720dba" translate="yes" xml:space="preserve">
          <source>The cmake build for the APR-util subproject does not support most of the optional DBM and DBD libraries supported by the included Visual Studio project files. This limits the database backends supported by a number of bundled and third-party modules.</source>
          <target state="translated">APR-util サブプロジェクトの cmake ビルドは、付属の Visual Studio プロジェクト・ファイルでサポートされているオプションの DBM および DBD ライブラリのほとんどをサポートしていません。これにより、多くのバンドルされたモジュールやサードパーティ製モジュールでサポートされるデータベースバックエンドが制限されます。</target>
        </trans-unit>
        <trans-unit id="e35939a2ceeac5b3eb0c3fccf0ac44a14e6377ad" translate="yes" xml:space="preserve">
          <source>The codes for common headers are:</source>
          <target state="translated">一般的なヘッダのコードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2a86aa1aae4ab5a7b4013d0cc4bdf15c40132f9b" translate="yes" xml:space="preserve">
          <source>The column sorting headers themselves are self-referencing hyperlinks that add the sort query options shown below. Any option below may be added to any request for the directory resource.</source>
          <target state="translated">列のソートヘッダ自体は、以下に示すソートクエリのオプションを追加する自己参照型のハイパーリンクです。以下のオプションは、ディレクトリリソースに対するリクエストに追加することができます。</target>
        </trans-unit>
        <trans-unit id="c5deb185ab8a595dae78735e4b37b591b08bf637" translate="yes" xml:space="preserve">
          <source>The combined log file is read from stdin. Records read will be appended to any existing log files.</source>
          <target state="translated">結合されたログファイルは標準入力から読み込まれます。読み込んだレコードは既存のログファイルに追加されます。</target>
        </trans-unit>
        <trans-unit id="ea491e80627d46babe59f109eb19076ad3505a5a" translate="yes" xml:space="preserve">
          <source>The comment Element</source>
          <target state="translated">コメント要素</target>
        </trans-unit>
        <trans-unit id="f36703a5ef610aa92c2602f5359c8ec6ee28162d" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;ServerAlias&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; ディレクティブの名前の完全なリストは、（ワイルドカードではない） &lt;code&gt;ServerAlias&lt;/code&gt; と同様に扱われます。</target>
        </trans-unit>
        <trans-unit id="92a8111c1dbd199d5aaadd714e78f35622961ce5" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; ディレクティブ内の名前の完全なリストは、（ワイルドカードではない） &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; のように扱われます。</target>
        </trans-unit>
        <trans-unit id="3b35d1ebe358a4b00360ae2d03d7b8af34917032" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;VirtualHost&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;ServerAlias&lt;/code&gt; (but are not overridden by any &lt;code&gt;ServerAlias&lt;/code&gt; statement).</source>
          <target state="translated">&lt;code&gt;VirtualHost&lt;/code&gt; ディレクティブ内の名前の完全なリストは、（ワイルドカードではない） &lt;code&gt;ServerAlias&lt;/code&gt; と同様に扱われます（ただし、 &lt;code&gt;ServerAlias&lt;/code&gt; ステートメントによって上書きされることはありません）。</target>
        </trans-unit>
        <trans-unit id="01c7a87890041b39b42a5f4166e8b588dbd8b888" translate="yes" xml:space="preserve">
          <source>The complete list of particular RSA &amp;amp; DH ciphers for SSL is given in &lt;a href=&quot;#table2&quot;&gt;Table 2&lt;/a&gt;.</source>
          <target state="translated">SSLの特定のRSAおよびDH暗号の完全なリストを&lt;a href=&quot;#table2&quot;&gt;表2に示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c2f156737a33938dc7f393853b0f7baf62ad170e" translate="yes" xml:space="preserve">
          <source>The complete request line (e.g., &quot;&lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt;&quot;)</source>
          <target state="translated">完全なリクエスト行（例：「 &lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt; 」）</target>
        </trans-unit>
        <trans-unit id="499478bf24a7bf1ef724a7f296ad5cea67ed80c7" translate="yes" xml:space="preserve">
          <source>The config Element</source>
          <target state="translated">設定要素</target>
        </trans-unit>
        <trans-unit id="70773e0a0d4816436d91f6950f73a5923988f520" translate="yes" xml:space="preserve">
          <source>The configuration above will enable the feature for all users except for those listed in the &lt;code&gt;disabled&lt;/code&gt; statement. You can, likewise, disable the feature for all but a few users by using a configuration like the following:</source>
          <target state="translated">上記の設定により、 &lt;code&gt;disabled&lt;/code&gt; ステートメントにリストされているユーザーを除くすべてのユーザーに対して機能が有効になります。同様に、次のような構成を使用して、一部のユーザーを除くすべてのユーザーに対して機能を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="e274e985cebc7a58bef7cc2fc96eeeb0bce2d7b8" translate="yes" xml:space="preserve">
          <source>The configuration below causes all script output labeled as &lt;code&gt;text/html&lt;/code&gt; to be processed at first by the &lt;code&gt;INCLUDES&lt;/code&gt; filter and then by the &lt;code&gt;DEFLATE&lt;/code&gt; filter.</source>
          <target state="translated">以下の構成では、 &lt;code&gt;text/html&lt;/code&gt; というラベルの付いたすべてのスクリプト出力が最初に &lt;code&gt;INCLUDES&lt;/code&gt; フィルターによって処理され、次に &lt;code&gt;DEFLATE&lt;/code&gt; フィルターによって処理されます。</target>
        </trans-unit>
        <trans-unit id="6404ae0663ee296857339b6973d03f93528f8690" translate="yes" xml:space="preserve">
          <source>The configuration changes suggested to turn &lt;a href=&quot;#simple&quot;&gt;the first example&lt;/a&gt; into an IP-based virtual hosting setup result in a rather inefficient setup. A new DNS lookup is required for every request. To avoid this overhead, the filesystem can be arranged to correspond to the IP addresses, instead of to the host names, thereby negating the need for a DNS lookup. Logging will also have to be adjusted to fit this system.</source>
          <target state="translated">&lt;a href=&quot;#simple&quot;&gt;最初の例&lt;/a&gt;をIPベースの仮想ホスティングセットアップに変えるよう提案された構成変更により、セットアップはかなり非効率的になります。リクエストごとに新しいDNSルックアップが必要です。このオーバーヘッドを回避するために、ホスト名ではなくIPアドレスに対応するようにファイルシステムを調整することで、DNSルックアップの必要性をなくすことができます。ロギングもこのシステムに合うように調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="7bc1ac236bcbb647a0200b5ed4d9b88a1b93fc3f" translate="yes" xml:space="preserve">
          <source>The configuration directives discussed in the above sections tell httpd to get content from a specific place in the filesystem and return it to the client. Sometimes, it is desirable instead to inform the client that the requested content is located at a different URL, and instruct the client to make a new request with the new URL. This is called &lt;em&gt;redirection&lt;/em&gt; and is implemented by the &lt;code&gt;&lt;a href=&quot;mod/mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; directive. For example, if the contents of the directory &lt;code&gt;/foo/&lt;/code&gt; under the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; are moved to the new directory &lt;code&gt;/bar/&lt;/code&gt;, you can instruct clients to request the content at the new location as follows:</source>
          <target state="translated">上記のセクションで説明した設定ディレクティブは、httpdにファイルシステムの特定の場所からコンテンツを取得してクライアントに返すように指示します。代わりに、要求されたコンテンツが別のURLにあることをクライアントに通知し、新しいURLで新しい要求を行うようにクライアントに指示することが望ましい場合があります。これは&lt;em&gt;リダイレクト&lt;/em&gt;と呼ばれ、 &lt;code&gt;&lt;a href=&quot;mod/mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; ディレクティブによって実装されます。たとえば、 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の下のディレクトリ &lt;code&gt;/foo/&lt;/code&gt; のコンテンツが新しいディレクトリ &lt;code&gt;/bar/&lt;/code&gt; に移動された場合、次のように新しい場所でコンテンツをリクエストするようにクライアントに指示できます。</target>
        </trans-unit>
        <trans-unit id="6f85708ea4a94c38eab517b89926fe3d63801ea5" translate="yes" xml:space="preserve">
          <source>The configuration directives found in a &lt;code&gt;.htaccess&lt;/code&gt; file are applied to the directory in which the &lt;code&gt;.htaccess&lt;/code&gt; file is found, and to all subdirectories thereof. However, it is important to also remember that there may have been &lt;code&gt;.htaccess&lt;/code&gt; files in directories higher up. Directives are applied in the order that they are found. Therefore, a &lt;code&gt;.htaccess&lt;/code&gt; file in a particular directory may override directives found in &lt;code&gt;.htaccess&lt;/code&gt; files found higher up in the directory tree. And those, in turn, may have overridden directives found yet higher up, or in the main server configuration file itself.</source>
          <target state="translated">見つかった設定ディレクティブ &lt;code&gt;.htaccess&lt;/code&gt; ファイルがされているディレクトリに適用されている &lt;code&gt;.htaccess&lt;/code&gt; ファイルが発見され、そしてそのすべてのサブディレクトリに。ただし、上のディレクトリに &lt;code&gt;.htaccess&lt;/code&gt; ファイルがあった可能性があることも覚えておくことが重要です。ディレクティブは、見つかった順に適用されます。したがって、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルで見つかったディレクティブオーバーライドすることができ、特定のディレクトリ内のファイル &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、ディレクトリツリー内のアップ高かったです。そして、それらは、さらに上位にある、またはメインのサーバー構成ファイル自体に見つかったオーバーライドされたディレクティブを持っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="da8ccf5f1d773d7edf0cdb0d67e50ffc245936d0" translate="yes" xml:space="preserve">
          <source>The configuration is frequently broken into multiple smaller files, for ease of management. These files are loaded via the &lt;code&gt;&lt;a href=&quot;mod/core#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; directive. The names or locations of these sub-files are not magical, and may vary greatly from one installation to another. Arrange and subdivide these files as makes the most sense to &lt;strong&gt;you&lt;/strong&gt;. If the file arrangement you have by default doesn't make sense to you, feel free to rearrange it.</source>
          <target state="translated">管理を容易にするために、構成は複数の小さなファイルに分割されることがよくあります。これらのファイルは、 &lt;code&gt;&lt;a href=&quot;mod/core#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; ディレクティブを介してロードされます。これらのサブファイルの名前や場所は不思議ではなく、インストールごとに大きく異なる場合があります。これらのファイルの配置と細分割は、最もわかりやすいものにして&lt;strong&gt;ください&lt;/strong&gt;。デフォルトのファイル配置が意味をなさない場合は、自由に並べ替えてください。</target>
        </trans-unit>
        <trans-unit id="2211eb6760923073bba0835c69a409feeff8aa02" translate="yes" xml:space="preserve">
          <source>The configuration sections are applied in a very particular order. Since this can have important effects on how configuration directives are interpreted, it is important to understand how this works.</source>
          <target state="translated">設定セクションは非常に特殊な順序で適用されます。これは設定ディレクティブがどのように解釈されるかに重要な影響を与える可能性があるので、 これがどのように機能するかを理解することが重要です。</target>
        </trans-unit>
        <trans-unit id="824749533548122e5dae26194e8deb4007c347e1" translate="yes" xml:space="preserve">
          <source>The configured &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#proxypassmatch&quot;&gt;ProxyPassMatch&lt;/a&gt;&lt;/code&gt; rules are checked in the order of configuration. The first rule that matches wins. So usually you should sort conflicting &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; rules starting with the longest URLs first. Otherwise, later rules for longer URLS will be hidden by any earlier rule which uses a leading substring of the URL. Note that there is some relation with worker sharing.</source>
          <target state="translated">構成された &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#proxypassmatch&quot;&gt;ProxyPassMatch&lt;/a&gt;&lt;/code&gt; ルールは、構成順にチェックされます。一致する最初のルールが優先されます。したがって、通常は、最も長いURLから始めて、競合する &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ルールを最初にソートする必要があります。それ以外の場合、長いURLに対する後のルールは、URLの先行部分文字列を使用する前のルールによって非表示になります。ワーカーの共有にはある程度の関係があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="655efcbacbae5d91632c354c0f249159a7d739e3" translate="yes" xml:space="preserve">
          <source>The configured &lt;code&gt;&lt;a href=&quot;mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; (e.g. &quot;&lt;code&gt;basic&lt;/code&gt;&quot;)</source>
          <target state="translated">構成された &lt;code&gt;&lt;a href=&quot;mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; （例： &quot; &lt;code&gt;basic&lt;/code&gt; &quot;）</target>
        </trans-unit>
        <trans-unit id="31451cf07bec9471f59e471253e0d5d53d95b8a8" translate="yes" xml:space="preserve">
          <source>The configured executable is run when Managed Domains have signed up or renewed their certificates. It is given the names of the processed MDs as additional arguments (after the parameters specified here). It should return status code 0 to indicate that it has run successfully.</source>
          <target state="translated">構成された実行ファイルは、マネージドドメインが証明書にサインアップまたは更新したときに実行されます。追加の引数として、処理された MD の名前が与えられます(ここで指定されたパラメータの後)。正常に実行されたことを示すステータスコード 0 を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="436f20f3d3dbc7f52d7044985b2bea3a730d178f" translate="yes" xml:space="preserve">
          <source>The connection is handling a specific request.</source>
          <target state="translated">接続は特定のリクエストを処理しています。</target>
        </trans-unit>
        <trans-unit id="bd2f9f471dca3b937c84f682bf3e92805bbc6dd2" translate="yes" xml:space="preserve">
          <source>The connection string is passed straight through to &lt;code&gt;PQconnectdb&lt;/code&gt;</source>
          <target state="translated">接続文字列はそのまま &lt;code&gt;PQconnectdb&lt;/code&gt; に渡されます</target>
        </trans-unit>
        <trans-unit id="011de7e909e56b9f5bf36cd7b28aa86ff539ca92" translate="yes" xml:space="preserve">
          <source>The connection string is passed straight through to &lt;code&gt;sqlite3_open&lt;/code&gt;</source>
          <target state="translated">接続文字列は &lt;code&gt;sqlite3_open&lt;/code&gt; に直接渡されます</target>
        </trans-unit>
        <trans-unit id="a2dbf56b415d04ba8a60db7b48f030e35970137d" translate="yes" xml:space="preserve">
          <source>The connection string is split on a colon, and &lt;code&gt;part1:part2&lt;/code&gt; is used as &lt;code&gt;sqlite_open(part1, atoi(part2), NULL)&lt;/code&gt;</source>
          <target state="translated">接続文字列はコロンで分割され、 &lt;code&gt;sqlite_open(part1, atoi(part2), NULL)&lt;/code&gt; &lt;code&gt;part1:part2&lt;/code&gt; part2はsqlite_open（part1、atoi（part2）、NULL）として使用されます</target>
        </trans-unit>
        <trans-unit id="11f1cab620a315a90c62767b2e9135f28de1920e" translate="yes" xml:space="preserve">
          <source>The considerations related to the difference between &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; also apply to the difference between &lt;code&gt;&lt;a href=&quot;#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; の違いに関する考慮事項は、 &lt;code&gt;&lt;a href=&quot;#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt; の違いにも適用されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9e188434cca484ed2a38fe7fd2474f53b8bc905" translate="yes" xml:space="preserve">
          <source>The considerations related to the difference between &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; also apply to the difference between &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#scriptaliasmatch&quot;&gt;ScriptAliasMatch&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; の違いに関する考慮事項は、 &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#scriptaliasmatch&quot;&gt;ScriptAliasMatch&lt;/a&gt;&lt;/code&gt; の違いにも適用されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="8fd527bd31a8eac529055c4747705bb2ebc0ef3f" translate="yes" xml:space="preserve">
          <source>The container asks for more data from the request (If the body was too large to fit in the first packet sent over or when the request is chunked). The server will send a body packet back with an amount of data which is the minimum of the &lt;code&gt;request_length&lt;/code&gt;, the maximum send body size &lt;code&gt;(8186 (8 Kbytes - 6))&lt;/code&gt;, and the number of bytes actually left to send from the request body.</source>
          <target state="translated">コンテナはリクエストからさらにデータを要求します（ボディが大きすぎて送信された最初のパケットに収まらない場合、またはリクエストがチャンク化されている場合）。サーバーは、最小の &lt;code&gt;request_length&lt;/code&gt; 、最大の送信本体サイズ &lt;code&gt;(8186 (8 Kbytes - 6))&lt;/code&gt; 、および実際に要求本体から送信するために残されたバイト数であるデータ量で本体パケットを送り返します。</target>
        </trans-unit>
        <trans-unit id="cc7d2bdf54118a9421ed265ef0281cb3b143cf57" translate="yes" xml:space="preserve">
          <source>The content encoding of the current request</source>
          <target state="translated">現在のリクエストのコンテンツエンコーディング</target>
        </trans-unit>
        <trans-unit id="83153d774120162336443b56bda2dc96d2c3c4b5" translate="yes" xml:space="preserve">
          <source>The content type of the current request, as determined in the type_check phase (f.x. &lt;code&gt;image/gif&lt;/code&gt; or &lt;code&gt;text/html&lt;/code&gt;)</source>
          <target state="translated">type_checkフェーズで決定された現在のリクエストのコンテンツタイプ（fx &lt;code&gt;image/gif&lt;/code&gt; または &lt;code&gt;text/html&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5fe9592740fb54b8798c3416429767aaf470aab7" translate="yes" xml:space="preserve">
          <source>The content type of the response (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">応答のコンテンツタイプ（ &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; の間は使用できません）</target>
        </trans-unit>
        <trans-unit id="a0f208770e2957c635a5cbc66454ffde20db5ef8" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; header line(s) in the reply.</source>
          <target state="translated">応答の &lt;code&gt;VARNAME:&lt;/code&gt; ヘッダー行の内容。</target>
        </trans-unit>
        <trans-unit id="0f79c3198e21dcf85d0bb1b0b0d633437a3d45cd" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; header line(s) in the request sent to the server. Changes made by other modules (e.g. &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;) affect this. If you're interested in what the request header was prior to when most modules would have modified it, use &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; to copy the header into an internal environment variable and log that value with the &lt;code&gt;%{VARNAME}e&lt;/code&gt; described above.</source>
          <target state="translated">サーバーに送信されたリクエストの &lt;code&gt;VARNAME:&lt;/code&gt; ヘッダー行の内容。他のモジュール（たとえば &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; ）によって行われた変更は、これに影響します。ほとんどのモジュールがリクエストヘッダーを変更する前のリクエストヘッダーに興味がある場合は、 &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; を使用してヘッダーを内部環境変数にコピーし、上記の &lt;code&gt;%{VARNAME}e&lt;/code&gt; でその値を記録します。</target>
        </trans-unit>
        <trans-unit id="cd0970d511bafc871ee6e5ca3490d125a808fac4" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; trailer line(s) in the request sent to the server.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; の内容：サーバーに送信されたリクエストのトレーラー行。</target>
        </trans-unit>
        <trans-unit id="9d8261fec891f9f0da88f2c07d033391a678aaec" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; trailer line(s) in the response sent from the server.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; の内容：サーバーから送信された応答のトレーラー行。</target>
        </trans-unit>
        <trans-unit id="48491431e1ca64c41cdc2364fd0d53bcf0ae8165" translate="yes" xml:space="preserve">
          <source>The contents of any file with a &lt;code&gt;.asis&lt;/code&gt; extension will then be sent by Apache httpd to the client with almost no changes. In particular, HTTP headers are derived from the file itself according to &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; rules, so an asis file must include valid headers, and may also use the CGI &lt;code&gt;Status:&lt;/code&gt; header to determine the HTTP response code. The &lt;code&gt;Content-Length:&lt;/code&gt; header will automatically be inserted or, if included, corrected by httpd.</source>
          <target state="translated">拡張子が &lt;code&gt;.asis&lt;/code&gt; のファイルのコンテンツは、ほとんど変更されずにApache httpdによってクライアントに送信されます。特に、HTTPヘッダーは &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; ルールに従ってファイル自体から派生するため、asisファイルには有効なヘッダーを含める必要があり、CGI &lt;code&gt;Status:&lt;/code&gt; ヘッダーを使用してHTTP応答コードを特定することもできます。 &lt;code&gt;Content-Length:&lt;/code&gt; 含まれている場合、ヘッダーは自動的に挿入またはされ、httpdのにより補正。</target>
        </trans-unit>
        <trans-unit id="a5fd344b671188e2d1315687e89c72eaecc245e7" translate="yes" xml:space="preserve">
          <source>The contents of cookie &lt;var&gt;VARNAME&lt;/var&gt; in the request sent to the server. Only version 0 cookies are fully supported.</source>
          <target state="translated">サーバーに送信されたリクエストのCookie &lt;var&gt;VARNAME&lt;/var&gt; の内容。バージョン0のCookieのみが完全にサポートされています。</target>
        </trans-unit>
        <trans-unit id="24cebdb1e166903518e535fe3e8149440210a6c8" translate="yes" xml:space="preserve">
          <source>The contents of note &lt;var&gt;VARNAME&lt;/var&gt; from another module.</source>
          <target state="translated">別のモジュールからのノート &lt;var&gt;VARNAME&lt;/var&gt; の内容。</target>
        </trans-unit>
        <trans-unit id="e0ff6bd87005dbae29c021b65ce1aaf750cd3f31" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;VARNAME&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../env&quot;&gt;環境変数&lt;/a&gt; &lt;code&gt;VARNAME&lt;/code&gt; の内容。</target>
        </trans-unit>
        <trans-unit id="d4bdf0b283724381b114fb7fbfaaf31c6b434bc8" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL environment variable&lt;/a&gt;&lt;code&gt;VARNAME&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL環境変数&lt;/a&gt; &lt;code&gt;VARNAME&lt;/code&gt; の内容（ &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; が有効な場合）。</target>
        </trans-unit>
        <trans-unit id="3e4d835df15f64fdebb7ff936f38f3b57fe510fe" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;Range:&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;Range:&lt;/code&gt; ヘッダーの内容。</target>
        </trans-unit>
        <trans-unit id="528d2deca221c596de822b2902ca23c3ac85a9c2" translate="yes" xml:space="preserve">
          <source>The contents of the environment variable &lt;var&gt;VARNAME&lt;/var&gt;.</source>
          <target state="translated">環境変数 &lt;var&gt;VARNAME&lt;/var&gt; の内容。</target>
        </trans-unit>
        <trans-unit id="8ccddd86c86360971f43c51252b3312b65791d85" translate="yes" xml:space="preserve">
          <source>The contents of the file are plain ASCII text in 4-5 columns. Blank lines are allowed but ignored. Commented lines use a hash mark (&lt;code&gt;#&lt;/code&gt;). The remaining lines are parsed for the following columns:</source>
          <target state="translated">ファイルの内容は、4〜5列のプレーンASCIIテキストです。空白行は許可されますが無視されます。コメント行にはハッシュ記号（ &lt;code&gt;#&lt;/code&gt; ）が使用されています。残りの行は、次の列について解析されます。</target>
        </trans-unit>
        <trans-unit id="017dbb02a23baccb0a17b5c953e3ed90a4f0a81e" translate="yes" xml:space="preserve">
          <source>The contents of the session can be optionally encrypted before being placed on the browser using the &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">セッションの内容は、オプションで &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; モジュールを使用してブラウザーに配置する前に暗号化できます。</target>
        </trans-unit>
        <trans-unit id="f010653f7d7a2a0d33fb7fbea9e995f28bb5e621" translate="yes" xml:space="preserve">
          <source>The contents of the session however are exposed to the client, with a corresponding risk of a loss of privacy. The &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module can be configured to encrypt the contents of the session before writing the session to the client.</source>
          <target state="translated">ただし、セッションの内容はクライアントに公開され、それに対応してプライバシーが失われるリスクがあります。 &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; モジュールは、クライアントとのセッションを書き込む前に、セッションの内容を暗号化するように構成することができます。</target>
        </trans-unit>
        <trans-unit id="34989dd0e27ee893abb2c58c2eb441c084017b4a" translate="yes" xml:space="preserve">
          <source>The control flow through the rewriting ruleset</source>
          <target state="translated">書き換えルールセットを介した制御フロー</target>
        </trans-unit>
        <trans-unit id="259a36c9f1bd92c1258dc12fa2324f2ecb4d4357" translate="yes" xml:space="preserve">
          <source>The core server and basic module set.</source>
          <target state="translated">コアサーバーと基本モジュールのセットです。</target>
        </trans-unit>
        <trans-unit id="07afc7180b103d27182fdb7e6a68576fbc5608aa" translate="yes" xml:space="preserve">
          <source>The corresponding module will be build as DSO module. By default enabled modules are linked dynamically.</source>
          <target state="translated">対応するモジュールはDSOモジュールとしてビルドされます。デフォルトでは、有効なモジュールは動的にリンクされます。</target>
        </trans-unit>
        <trans-unit id="a42ffc24a4c70c890d42536a46d5608616db2c58" translate="yes" xml:space="preserve">
          <source>The corresponding module will be linked statically.</source>
          <target state="translated">対応するモジュールは静的にリンクされます。</target>
        </trans-unit>
        <trans-unit id="2ffb6d101ecf4cf89db777a6d83456625582f8db" translate="yes" xml:space="preserve">
          <source>The crypto cipher to be used to encrypt the session</source>
          <target state="translated">セッションの暗号化に使用する暗号化方式</target>
        </trans-unit>
        <trans-unit id="ee6366bbd88ff4a27ec21f3f7be33fdc4df89478" translate="yes" xml:space="preserve">
          <source>The crypto driver to be used to encrypt the session</source>
          <target state="translated">セッションの暗号化に使用する暗号化ドライバ</target>
        </trans-unit>
        <trans-unit id="77844e8d8484d9525863c1824b23ea19048e9171" translate="yes" xml:space="preserve">
          <source>The current (2017) recommendation is at least 2048 bits and a smaller number is not accepted here. Higher numbers offer longer security, but are computationally more expensive, e.g. increase the load on your server. That might or might not be an issue for you.</source>
          <target state="translated">現在(2017年)の推奨は最低でも2048ビットであり、これより小さい数字はここでは認められません。これよりも高い数値は、より長いセキュリティを提供しますが、計算コストが高くなり、例えばサーバの負荷が高くなります。それが問題になるかもしれませんし、ならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="9699c1573eb42b2a9eee43711e092b0d32014ea3" translate="yes" xml:space="preserve">
          <source>The current CGI specification is available in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFC&lt;/a&gt;.</source>
          <target state="translated">現在のCGI仕様は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFCで&lt;/a&gt;利用できます。</target>
        </trans-unit>
        <trans-unit id="86a9b494939cfbdd391a01e87daf478e35f0f002" translate="yes" xml:space="preserve">
          <source>The current CGI specification is available in the &lt;a href=&quot;https://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFC&lt;/a&gt;.</source>
          <target state="translated">現在のCGI仕様は、&lt;a href=&quot;https://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway InterfaceRFCで&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="a767a2e65f4be15af5619cdd15ab67afa77554e7" translate="yes" xml:space="preserve">
          <source>The current URI can be the initial URI as requested by the client, the result of a previous round of mod_rewrite processing, or the result of a prior rule in the current round of mod_rewrite processing.</source>
          <target state="translated">現在の URI は、クライアントからリクエストされた最初の URI、 以前の mod_rewrite 処理のラウンドの結果、または現在の mod_rewrite 処理のラウンドの前のルールの結果のどれかになります。</target>
        </trans-unit>
        <trans-unit id="874e09835254921d7f99c305e55a109ac02b384b" translate="yes" xml:space="preserve">
          <source>The current busy percentage of httpd (0 to 100) based on available processes and threads. The value is preceded by &lt;code&gt;b=&lt;/code&gt;.</source>
          <target state="translated">使用可能なプロセスとスレッドに基づく、httpdの現在のビジー率（0〜100）。値の前には &lt;code&gt;b=&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="dbfd6fd3fed21ce907bc8b828461ac9493922504" translate="yes" xml:space="preserve">
          <source>The current date in Greenwich Mean Time.</source>
          <target state="translated">グリニッジ標準時の現在の日付。</target>
        </trans-unit>
        <trans-unit id="b682b90b568979faba5714d6606ed86516b550ef" translate="yes" xml:space="preserve">
          <source>The current date in the local time zone.</source>
          <target state="translated">ローカルタイムゾーンの現在の日付。</target>
        </trans-unit>
        <trans-unit id="1ba4f07d267ed9dfb2e2afbd3dd8014cf809f7d4" translate="yes" xml:space="preserve">
          <source>The current day of the month (&lt;code&gt;01&lt;/code&gt;, ...)</source>
          <target state="translated">月の現在の日（ &lt;code&gt;01&lt;/code&gt; 、...）</target>
        </trans-unit>
        <trans-unit id="3140c1773d75fa618b88c5cbdf7e794c25d72ff5" translate="yes" xml:space="preserve">
          <source>The current hosts and requests being processed (*)</source>
          <target state="translated">現在処理中のホストとリクエスト (*)</target>
        </trans-unit>
        <trans-unit id="2ef2b4ace2a9c7f2e9700003303979ffbce3c845" translate="yes" xml:space="preserve">
          <source>The current idle percentage of httpd (0 to 100) based on available processes and threads. The value is preceded by &lt;code&gt;i=&lt;/code&gt;.</source>
          <target state="translated">使用可能なプロセスとスレッドに基づく、httpdの現在のアイドル率（0〜100）。値の前には &lt;code&gt;i=&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ca7577c05a7ce35fef7197f5d214912b349a8330" translate="yes" xml:space="preserve">
          <source>The current load averages of the actual server itself. It is designed to expose the values obtained by &lt;code&gt;getloadavg()&lt;/code&gt; and this represents the current load average, the 5 minute average, and the 15 minute average. The value is preceded by &lt;code&gt;l=&lt;/code&gt; with each average separated by &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">実際のサーバー自体の現在の負荷平均。これは、 &lt;code&gt;getloadavg()&lt;/code&gt; によって取得された値を公開するように設計されており、現在の負荷平均、5分間の平均、および15分間の平均を表します。値の前には &lt;code&gt;l=&lt;/code&gt; 、各平均は &lt;code&gt;/&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="c28ad541f5740f8ccc73d2a80d47d593e534859b" translate="yes" xml:space="preserve">
          <source>The current month (&lt;code&gt;01&lt;/code&gt;, ..., &lt;code&gt;12&lt;/code&gt;)</source>
          <target state="translated">今月（ &lt;code&gt;01&lt;/code&gt; 、...、 &lt;code&gt;12&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d889cb33c58403aabe20281a2b4d977958c6d566" translate="yes" xml:space="preserve">
          <source>The current percentage CPU used by each worker and in total by all workers combined (*)</source>
          <target state="translated">各ワーカーが使用しているCPUの現在の割合、および全ワーカーを合わせた合計の割合 (*)</target>
        </trans-unit>
        <trans-unit id="1fe93e88c7c604f62592727169164cd951ed1415" translate="yes" xml:space="preserve">
          <source>The current time</source>
          <target state="translated">現在の時刻</target>
        </trans-unit>
        <trans-unit id="011361fa653a39b8fd91e2b9d99aecd3b711e56f" translate="yes" xml:space="preserve">
          <source>The current time in compact ISO 8601 format, including micro-seconds</source>
          <target state="translated">マイクロ秒を含むコンパクトなISO 8601形式の現在時刻</target>
        </trans-unit>
        <trans-unit id="acceb6b1da2ed54a531896b6873a35580d899f74" translate="yes" xml:space="preserve">
          <source>The current time including micro-seconds</source>
          <target state="translated">マイクロ秒を含む現在時刻</target>
        </trans-unit>
        <trans-unit id="f54c84bede9e785b6c229135b14eafeec3f5e5a6" translate="yes" xml:space="preserve">
          <source>The current year (e.g. &lt;code&gt;2010&lt;/code&gt;)</source>
          <target state="translated">現在の年（例： &lt;code&gt;2010&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b8296c939be08a210bc3ab8547b7b9bce2c483c3" translate="yes" xml:space="preserve">
          <source>The data logging is done right after SSL decoding (for input) and right before SSL encoding (for output). As can be expected, this can produce extreme volumes of data, and should only be used when debugging problems.</source>
          <target state="translated">データロギングはSSLデコード(入力用)の直後とSSLエンコード(出力用)の直前に行われます。予想されるように、これは非常に大量のデータを生成することができるので、問題をデバッグするときにのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="e2316d0c1bc8244f9b20d61718a77185bef07282" translate="yes" xml:space="preserve">
          <source>The database object returned by &lt;code&gt;dbacquire&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;dbacquire&lt;/code&gt; によって返されるデータベースオブジェクトには、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="995e7490d4ceb8fcd60792fc7fdc6061692dc8fc" translate="yes" xml:space="preserve">
          <source>The date and time in the format &lt;code&gt;20101231235959&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;20101231235959&lt;/code&gt; 形式の日付と時刻</target>
        </trans-unit>
        <trans-unit id="f1e1b6859e4f41f459125d6b2e70642f57b8c05d" translate="yes" xml:space="preserve">
          <source>The date and time of last modification of the file in the format &lt;code&gt;20101231235959&lt;/code&gt;, if this has already been determined by the server at the time &lt;code&gt;LAST_MODIFIED&lt;/code&gt; is referenced.</source>
          <target state="translated">&lt;code&gt;LAST_MODIFIED&lt;/code&gt; が参照されたときにサーバーによってすでに決定されている場合は、 &lt;code&gt;20101231235959&lt;/code&gt; 形式のファイルの最終変更日時。</target>
        </trans-unit>
        <trans-unit id="c3b157cd9f148513085e947cd4b11d32876f4d7a" translate="yes" xml:space="preserve">
          <source>The date and time the file was last modified will be included</source>
          <target state="translated">ファイルが最終的に修正された日時が含まれます。</target>
        </trans-unit>
        <trans-unit id="b45db2b1fdc8b29ed5597bed0028317de7b450c4" translate="yes" xml:space="preserve">
          <source>The date format used for the &lt;code&gt;Last Modified&lt;/code&gt; field was inadvertently changed to &lt;code&gt;&quot;%Y-%m-%d %H:%M&quot;&lt;/code&gt; from &lt;code&gt;&quot;%d-%b-%Y %H:%M&quot;&lt;/code&gt; in 2.4.0. Setting this option restores the date format from 2.2 and earlier.</source>
          <target state="translated">使用される日付形式 &lt;code&gt;Last Modified&lt;/code&gt; フィールドが不用意に変更されました &lt;code&gt;&quot;%Y-%m-%d %H:%M&quot;&lt;/code&gt; から &lt;code&gt;&quot;%d-%b-%Y %H:%M&quot;&lt;/code&gt; 2.4.0です。このオプションを設定すると、日付形式が2.2以前から復元されます。</target>
        </trans-unit>
        <trans-unit id="4dea95061277e4dbc1727c90a35907f424a6fde8" translate="yes" xml:space="preserve">
          <source>The date of the API version (module magic number)</source>
          <target state="translated">APIのバージョンの日付(モジュールマジックナンバー</target>
        </trans-unit>
        <trans-unit id="f4449a0a8b61922004a943a7244af5d3cfc092af" translate="yes" xml:space="preserve">
          <source>The day of the week (starting with &lt;code&gt;0&lt;/code&gt; for Sunday)</source>
          <target state="translated">曜日（日曜日は &lt;code&gt;0&lt;/code&gt; から始まる）</target>
        </trans-unit>
        <trans-unit id="441f15a5c163b4c9c9a41ddbedd415faced2b017" translate="yes" xml:space="preserve">
          <source>The dbd support includes the Oracle instantclient package, MySQL, PostgreSQL and sqlite. To build these all, for example, set up the LIB to include the library path, INCLUDE to include the headers path, and PATH to include the dll bin path of all four SDK's, and set the DBD_LIST environment variable to inform the build which client driver SDKs are installed correctly, e.g.;</source>
          <target state="translated">dbdのサポートには、Oracle instantclientパッケージ、MySQL、PostgreSQL、sqliteが含まれています。これらすべてをビルドするには、例えば、LIBにライブラリパスを、INCLUDEにヘッダパスを、PATHに4つのSDKすべてのdll binパスを、DBD_LISTに環境変数を設定して、どのクライアントドライバSDKが正しくインストールされているかをビルド時に知らせるように設定します。</target>
        </trans-unit>
        <trans-unit id="22452de99919391746df3928f2c85a05eb698e83" translate="yes" xml:space="preserve">
          <source>The debug output depends on the &lt;var&gt;level&lt;/var&gt; set:</source>
          <target state="translated">デバッグ出力は、設定された &lt;var&gt;level&lt;/var&gt; によって異なります。</target>
        </trans-unit>
        <trans-unit id="3365dc272341f84ed05fd14dc729c54a6f52ec44" translate="yes" xml:space="preserve">
          <source>The decision of when to use SSI, and when to have your page entirely generated by some program, is usually a matter of how much of the page is static, and how much needs to be recalculated every time the page is served. SSI is a great way to add small pieces of information, such as the current time - shown above. But if a majority of your page is being generated at the time that it is served, you need to look for some other solution.</source>
          <target state="translated">いつSSIを使用するか、あるいはページ全体を何らかのプログラムで生成するかの決定は、通常、ページがどれだけ静的で、ページが提供されるたびにどれだけ再計算する必要があるかの問題です。SSIは、上に示した現在時刻などの小さな情報を追加するのに最適な方法です。しかし、ページの大部分が配信時に生成されている場合は、他のソリューションを探す必要があります。</target>
        </trans-unit>
        <trans-unit id="a8ea8f7d1d2e6600f717839985e77d8848948b8e" translate="yes" xml:space="preserve">
          <source>The default MPM, either selected automatically or specified with the &lt;code&gt;--with-mpm&lt;/code&gt; option of the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script, will be loaded in the generated server configuration file. Edit the &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive to select a different MPM.</source>
          <target state="translated">デフォルトのMPM、自動的に選択されたかで指定されたいずれか &lt;code&gt;--with-mpm&lt;/code&gt; のオプション &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; スクリプトは、生成されたサーバーの設定ファイルにロードされます。 &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; ディレクティブを編集して、別のMPMを選択します。</target>
        </trans-unit>
        <trans-unit id="f4e7d7bc3f800838ba845e533893a61b8c9fdecf" translate="yes" xml:space="preserve">
          <source>The default assumption of the server is that Text Files (&lt;em&gt;i.e.&lt;/em&gt;, all files whose &lt;code&gt;Content-Type:&lt;/code&gt; starts with &lt;code&gt;text/&lt;/code&gt;) are stored in the native character set of the host, EBCDIC.</source>
          <target state="translated">サーバーのデフォルトの想定では、テキストファイル（&lt;em&gt;つまり&lt;/em&gt;、 &lt;code&gt;Content-Type:&lt;/code&gt; が &lt;code&gt;text/&lt;/code&gt; 始まるすべてのファイル）はホストのネイティブ文字セットEBCDICに格納されます。</target>
        </trans-unit>
        <trans-unit id="9549277fd7b808f7cc03bd89435255da412098a2" translate="yes" xml:space="preserve">
          <source>The default certificate format for OpenSSL is PEM, which is simply Base64 encoded DER, with header and footer lines. For some applications (e.g. Microsoft Internet Explorer) you need the certificate in plain DER format. You can convert a PEM file &lt;code&gt;cert.pem&lt;/code&gt; into the corresponding DER file &lt;code&gt;cert.der&lt;/code&gt; using the following command: &lt;code&gt;$ openssl x509 -in cert.pem -out cert.der -outform DER&lt;/code&gt;</source>
          <target state="translated">OpenSSLのデフォルトの証明書形式はPEMで、これは単純にBase64でエンコードされたDERで、ヘッダー行とフッター行があります。一部のアプリケーション（Microsoft Internet Explorerなど）では、プレーンDER形式の証明書が必要です。次のコマンドを使用して、PEMファイル &lt;code&gt;cert.pem&lt;/code&gt; を対応するDERファイル &lt;code&gt;cert.der&lt;/code&gt; に変換できます。 &lt;code&gt;$ openssl x509 -in cert.pem -out cert.der -outform DER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48edfe99f7685e3315f4faecb6850cb6692795fd" translate="yes" xml:space="preserve">
          <source>The default configuration for the server is installed by default beneath the &lt;code&gt;/etc/httpd&lt;/code&gt; directory, with logs written by default to &lt;code&gt;/var/log/httpd&lt;/code&gt;. The environment for the webserver is set by default within the optional &lt;code&gt;/etc/sysconfig/httpd&lt;/code&gt; file.</source>
          <target state="translated">サーバーのデフォルト設定は、デフォルトで &lt;code&gt;/etc/httpd&lt;/code&gt; ディレクトリの下にインストールされ、ログはデフォルトで &lt;code&gt;/var/log/httpd&lt;/code&gt; に書き込まれます。ウェブサーバーの環境は、デフォルトでオプションの &lt;code&gt;/etc/sysconfig/httpd&lt;/code&gt; ファイル内に設定されています。</target>
        </trans-unit>
        <trans-unit id="e9c716425fbe3e4d167f40506126cff4e5b1f79c" translate="yes" xml:space="preserve">
          <source>The default dependency is 'After'.</source>
          <target state="translated">デフォルトの依存関係は'After'です。</target>
        </trans-unit>
        <trans-unit id="5ceb6bf27b67afd3796272afeb1607a434cb93b5" translate="yes" xml:space="preserve">
          <source>The default duration to cache a document when no expiry date is specified.</source>
          <target state="translated">有効期限が指定されていない場合にドキュメントをキャッシュするためのデフォルトの期間。</target>
        </trans-unit>
        <trans-unit id="54a81f7ded06377d6eba0042dd0e12d957adf7c0" translate="yes" xml:space="preserve">
          <source>The default in the absence of any other settings is &lt;code&gt;FollowSymlinks&lt;/code&gt;.</source>
          <target state="translated">他の設定がない場合のデフォルトは &lt;code&gt;FollowSymlinks&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e98760d5c5915ac91bc90dfc96af14f0dabb2739" translate="yes" xml:space="preserve">
          <source>The default is 10 seconds, if the LDAP client library linked with the server supports the LDAP_OPT_NETWORK_TIMEOUT option.</source>
          <target state="translated">サーバーにリンクされたLDAPクライアントライブラリがLDAP_OPT_NETWORK_TIMEOUTオプションをサポートしている場合、デフォルトは10秒です。</target>
        </trans-unit>
        <trans-unit id="e997f18abf18a2113f6ceb7622f35da192ebfe92" translate="yes" xml:space="preserve">
          <source>The default is 8192, and will work well for almost all pages. However, if you know you're proxying pages containing stylesheets and/or scripts bigger than 8K (that is, for a single script or stylesheet, NOT in total), it will be more efficient to set a larger buffer size and avoid the need to resize the buffer dynamically during a request.</source>
          <target state="translated">デフォルトは 8192 で、ほとんどすべてのページでうまく動作します。しかし、8K よりも大きなスタイルシートやスクリプトを含むページを プロキシしていることがわかっているのであれば (つまり、一つのスクリプトやスタイルシートに対してであって、 全体ではない)、より大きなバッファサイズを設定して、 リクエスト中に動的にバッファサイズを変更する必要性を避ける方が効率的でしょう。</target>
        </trans-unit>
        <trans-unit id="22ab4dadca9fad8b3b34e2bcc71fd37c6bc24609" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Off&lt;/code&gt; in order to save the network traffic for those sites that don't truly need the reverse lookups done. It is also better for the end users because they don't have to suffer the extra latency that a lookup entails. Heavily loaded sites should leave this directive &lt;code&gt;Off&lt;/code&gt;, since DNS lookups can take considerable amounts of time. The utility &lt;code&gt;&lt;a href=&quot;../programs/logresolve&quot;&gt;logresolve&lt;/a&gt;&lt;/code&gt;, compiled by default to the &lt;code&gt;bin&lt;/code&gt; subdirectory of your installation directory, can be used to look up host names from logged IP addresses offline.</source>
          <target state="translated">デフォルトでは &lt;code&gt;Off&lt;/code&gt; になっているため、逆引き参照を本当に必要としないサイトのネットワークトラフィックを節約できます。また、ルックアップに伴う余分な遅延に悩まされる必要がないため、エンドユーザーにとっても優れています。DNSルックアップにはかなりの時間がかかる場合があるため、負荷の高いサイトではこのディレクティブを &lt;code&gt;Off&lt;/code&gt; のままにしておく必要があります。デフォルトでインストールディレクトリの &lt;code&gt;bin&lt;/code&gt; サブディレクトリにコンパイルされたユーティリティ &lt;code&gt;&lt;a href=&quot;../programs/logresolve&quot;&gt;logresolve&lt;/a&gt;&lt;/code&gt; を使用して、ログに記録されたIPアドレスからオフラインでホスト名を検索できます。</target>
        </trans-unit>
        <trans-unit id="41ca4f5b3570cc0b2c7072495c602e195d508b64" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;log_transaction&lt;/code&gt;. The special value &lt;code&gt;all&lt;/code&gt; is also supported, causing a message to be logged at each phase. Not all hooks are executed for every request.</source>
          <target state="translated">デフォルトは &lt;code&gt;log_transaction&lt;/code&gt; です。特別な値 &lt;code&gt;all&lt;/code&gt; もサポートされているため、各フェーズでメッセージがログに記録されます。すべてのフックがすべての要求に対して実行されるわけではありません。</target>
        </trans-unit>
        <trans-unit id="a47b8f11201323e27ad18cd73c0cd6a1caafa9b6" translate="yes" xml:space="preserve">
          <source>The default is &lt;var&gt;directory&lt;/var&gt;, which is also the most conservative setting. This is likely to be less than optimal, as it (for example) causes &lt;var&gt;$app-base&lt;/var&gt;, &lt;var&gt;$app-base/images&lt;/var&gt;, &lt;var&gt;$app-base/scripts&lt;/var&gt; and &lt;var&gt;$app-base/media&lt;/var&gt; each to have its own separate cache key. A better policy is to name the &lt;code&gt;AuthnCacheContext&lt;/code&gt; for the password provider: for example a &lt;var&gt;htpasswd&lt;/var&gt; file or database table.</source>
          <target state="translated">デフォルトは &lt;var&gt;directory&lt;/var&gt; で、これは最も保守的な設定でもあります。（たとえば） &lt;var&gt;$app-base&lt;/var&gt; 、 &lt;var&gt;$app-base/images&lt;/var&gt; 、 &lt;var&gt;$app-base/scripts&lt;/var&gt; 、および &lt;var&gt;$app-base/media&lt;/var&gt; それぞれ独自の個別のキャッシュキーを持つため、これは最適ではない可能性があります。より良いポリシーは、パスワードプロバイダーの &lt;code&gt;AuthnCacheContext&lt;/code&gt; に名前を付けることです。たとえば、 &lt;var&gt;htpasswd&lt;/var&gt; ファイルやデータベーステーブルです。</target>
        </trans-unit>
        <trans-unit id="bb9ea35a8dfa8c57a5684179cea2bdfd0c2cbc1b" translate="yes" xml:space="preserve">
          <source>The default is changed to omitting any FPI, on the grounds that no FPI is better than a bogus one. If your backend generates decent HTML or XHTML, set it accordingly.</source>
          <target state="translated">デフォルトはFPIを省略するように変更されていますが、FPIがない方が偽物よりも良いという理由からです。バックエンドがまともなHTMLやXHTMLを生成する場合は、それに応じて設定してください。</target>
        </trans-unit>
        <trans-unit id="04a47d1e780cf2e3a08ba471b157b8a7be9f37b0" translate="yes" xml:space="preserve">
          <source>The default is to enable a pool of persistent connections (or a single LAMP-style persistent connection in the case of a non-threaded server), and should almost always be used in operation.</source>
          <target state="translated">デフォルトでは、持続的接続のプールを有効にする(スレッド化されていないサーバの場合は単一のLAMPスタイルの持続的接続を有効にする)ように設定されており、運用上はほぼ常に使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="d461ad9a1e0cd9c65c22b304065495de75531f7a" translate="yes" xml:space="preserve">
          <source>The default location of &lt;code&gt;DefaultRuntimeDir&lt;/code&gt; may be modified by changing the &lt;code&gt;DEFAULT_REL_RUNTIMEDIR&lt;/code&gt; #define at build time.</source>
          <target state="translated">&lt;code&gt;DefaultRuntimeDir&lt;/code&gt; のデフォルトの場所は、ビルド時に &lt;code&gt;DEFAULT_REL_RUNTIMEDIR&lt;/code&gt; #defineを変更することで変更できます。</target>
        </trans-unit>
        <trans-unit id="3cb5c2d8ddae3a66fea7b5ec9fae1e235be87688" translate="yes" xml:space="preserve">
          <source>The default location of &lt;code&gt;ServerRoot&lt;/code&gt; may be modified by using the &lt;code&gt;--prefix&lt;/code&gt; argument to &lt;a href=&quot;../programs/configure&quot;&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt;, and most third-party distributions of the server have a different default location from the one listed above.</source>
          <target state="translated">デフォルトの場所 &lt;code&gt;ServerRoot&lt;/code&gt; 使用して変更することができる &lt;code&gt;--prefix&lt;/code&gt; に引数を&lt;a href=&quot;../programs/configure&quot;&gt; &lt;code&gt;configure&lt;/code&gt; &lt;/a&gt;し、サーバのほとんどのサードパーティの分布は、上記のものとは異なるデフォルトの場所を持っています。</target>
        </trans-unit>
        <trans-unit id="a8eafcaed1759f7ccade7154604e7ebdcb96f039" translate="yes" xml:space="preserve">
          <source>The default log_transaction hook is not executed for sub-requests, therefore we have to use a different hook.</source>
          <target state="translated">デフォルトの log_transaction フックはサブリクエストに対しては実行されないので、別のフックを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="7abf95ace4f3c41e72821fcb4940e391013ec49a" translate="yes" xml:space="preserve">
          <source>The default name-based vhost for an IP and port combination</source>
          <target state="translated">IP とポートの組み合わせのデフォルトの名前ベースの vhost</target>
        </trans-unit>
        <trans-unit id="3ce7b60531e68f934992d39f7c19f41e1e67324a" translate="yes" xml:space="preserve">
          <source>The default of zero disables this option.</source>
          <target state="translated">デフォルトのゼロは、このオプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="033889af4648da1de00e398571a3dddfd43cff74" translate="yes" xml:space="preserve">
          <source>The default priority rule is:</source>
          <target state="translated">デフォルトの優先度ルールは</target>
        </trans-unit>
        <trans-unit id="4507233934500c99efde706a87553bdea162fe47" translate="yes" xml:space="preserve">
          <source>The default protocol names are &lt;code&gt;https&lt;/code&gt; for port 443 and &lt;code&gt;http&lt;/code&gt; for all other ports. To specify that another protocol is being used with a listening port, add the &lt;var&gt;protocol&lt;/var&gt; argument to the &lt;code&gt;&lt;a href=&quot;mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">デフォルトのプロトコル名は、ポート443の場合は &lt;code&gt;https&lt;/code&gt; 、その他のすべてのポートの場合は &lt;code&gt;http&lt;/code&gt; です。別のプロトコルがリスニングポートで使用されていることを指定するには、 &lt;code&gt;&lt;a href=&quot;mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; ディレクティブに &lt;var&gt;protocol&lt;/var&gt; 引数を追加します。</target>
        </trans-unit>
        <trans-unit id="588d09d0639669f3152771fc1f8be1c315bd88cd" translate="yes" xml:space="preserve">
          <source>The default set is &lt;code&gt;most&lt;/code&gt;.</source>
          <target state="translated">デフォルトのセットは &lt;code&gt;most&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d35b7ad82c268aeefcfe9226ff1b0b58c13bf777" translate="yes" xml:space="preserve">
          <source>The default used to be &quot;INode MTime Size&quot; in 2.3.14 and earlier.</source>
          <target state="translated">2.3.14以前のバージョンでは、デフォルトは &quot;INode MTime Size &quot;でした。</target>
        </trans-unit>
        <trans-unit id="c18c6c61257644ddcd36073e998434abbd118b25" translate="yes" xml:space="preserve">
          <source>The default value differs from MPM to MPM. &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; default to &lt;code&gt;StartServers 3&lt;/code&gt;; &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt; prefork&lt;/a&gt;&lt;/code&gt; defaults to &lt;code&gt;5&lt;/code&gt;; &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; defaults to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">デフォルト値はMPMごとに異なります。 &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; デフォルトは &lt;code&gt;StartServers 3&lt;/code&gt; です。 &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt; prefork&lt;/a&gt;&lt;/code&gt; のデフォルトは &lt;code&gt;5&lt;/code&gt; です。 &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; のデフォルトは &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1aa2fa20406d15bb099058125ca6697f8501f77c" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;ThreadLimit&lt;/code&gt; is &lt;code&gt;1920&lt;/code&gt; when used with &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;64&lt;/code&gt; when used with the others.</source>
          <target state="translated">&lt;code&gt;ThreadLimit&lt;/code&gt; のデフォルト値は、 &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; と一緒に使用した場合は &lt;code&gt;1920&lt;/code&gt; で、他のものと一緒に使用した場合は &lt;code&gt;64&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="80dc03670f929a8245ed3b0ba0242d860f78a9b1" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;ThreadsPerChild&lt;/code&gt; is &lt;code&gt;64&lt;/code&gt; when used with &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;25&lt;/code&gt; when used with the others.</source>
          <target state="translated">デフォルト値 &lt;code&gt;ThreadsPerChild&lt;/code&gt; のはある &lt;code&gt;64&lt;/code&gt; と共に使用した場合 &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; でおよび &lt;code&gt;25&lt;/code&gt; を他のユーザーと使用した場合。</target>
        </trans-unit>
        <trans-unit id="45b901f187ff4345953056377dc675b4ef868f13" translate="yes" xml:space="preserve">
          <source>The default values on FreeBSD are:</source>
          <target state="translated">FreeBSDでのデフォルト値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fce0f73fb7e1320d16c0b0fd74029a2d512e8b64" translate="yes" xml:space="preserve">
          <source>The default values on Linux are:</source>
          <target state="translated">Linuxでのデフォルト値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8bb481ece192be39e3b36e750b45192595e4d8c9" translate="yes" xml:space="preserve">
          <source>The default values on Windows are:</source>
          <target state="translated">Windowsのデフォルト値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e7059b8ee37257adca125d4cf4f8faa17f2a793d" translate="yes" xml:space="preserve">
          <source>The default vhost for port 80 (which &lt;em&gt;must&lt;/em&gt; appear before any default vhost with a wildcard port) catches all requests that were sent to an unspecified IP address. The main server is never used to serve a request.</source>
          <target state="translated">ポート80のデフォルトの仮想ホスト（ワイルドカードポートを持つデフォルトの仮想ホストの前に表示される&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます）は、指定されていないIPアドレスに送信されたすべての要求をキャッチします。メインサーバーは、要求を処理するために使用されることはありません。</target>
        </trans-unit>
        <trans-unit id="b1c3812029e159e5670f090bebcd64976926861c" translate="yes" xml:space="preserve">
          <source>The default was changed from All to FollowSymlinks in 2.3.11</source>
          <target state="translated">2.3.11でデフォルトがAllからFollowSymlinksに変更されました。</target>
        </trans-unit>
        <trans-unit id="b888a05501c6b37eee37271334284c6b722baf32" translate="yes" xml:space="preserve">
          <source>The depth actually is the maximum number of intermediate certificate issuers, i.e. the number of CA certificates which are max allowed to be followed while verifying the client certificate. A depth of 0 means that self-signed client certificates are accepted only, the default depth of 1 means the client certificate can be self-signed or has to be signed by a CA which is directly known to the server (i.e. the CA's certificate is under &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt;), etc.</source>
          <target state="translated">深さは、実際には、中間証明書発行者の最大数です。つまり、クライアント証明書の検証中に最大で許可されるCA証明書の数です。深さ0は、自己署名クライアント証明書のみが受け入れられることを意味します。デフォルトの深さ1は、クライアント証明書が自己署名できるか、サーバーに直接知られているCAによって署名される必要があることを意味します（つまり、CAの証明書は &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; の下など）</target>
        </trans-unit>
        <trans-unit id="46e97a5ea9eaae6b3f6d8c42f3db564f8160eba3" translate="yes" xml:space="preserve">
          <source>The depth actually is the maximum number of intermediate certificate issuers, i.e. the number of CA certificates which are max allowed to be followed while verifying the remote server certificate. A depth of 0 means that self-signed remote server certificates are accepted only, the default depth of 1 means the remote server certificate can be self-signed or has to be signed by a CA which is directly known to the server (i.e. the CA's certificate is under &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatepath&quot;&gt;SSLProxyCACertificatePath&lt;/a&gt;&lt;/code&gt;), etc.</source>
          <target state="translated">深さは、実際には中間証明書発行者の最大数です。つまり、リモートサーバー証明書の検証中に最大で許可されるCA証明書の数です。深さ0は、自己署名リモートサーバー証明書のみが受け入れられることを意味します。デフォルトの深さ1は、リモートサーバー証明書が自己署名できるか、サーバーに直接知られているCA（つまり、CAのCA）によって署名される必要があることを意味します証明書が &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatepath&quot;&gt;SSLProxyCACertificatePath&lt;/a&gt;&lt;/code&gt; の下にあるなど）</target>
        </trans-unit>
        <trans-unit id="5be7956bdac0711b798163b6003817eb8f2e72f7" translate="yes" xml:space="preserve">
          <source>The details given are:</source>
          <target state="translated">与えられた詳細は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="97ce6b20d67d621fe43dbf9fa860e1289bf763a2" translate="yes" xml:space="preserve">
          <source>The details on how you built and installed Apache httpd and OpenSSL</source>
          <target state="translated">Apache httpd と OpenSSL をどのように構築し、インストールしたかの詳細</target>
        </trans-unit>
        <trans-unit id="62c6db014aeb25f8e01437f99aec4794651e9139" translate="yes" xml:space="preserve">
          <source>The difference between the &lt;code&gt;Require ldap-filter&lt;/code&gt; directive and the &lt;code&gt;Require ldap-attribute&lt;/code&gt; directive is that &lt;code&gt;ldap-filter&lt;/code&gt; performs a search operation on the LDAP directory using the specified search filter rather than a simple attribute comparison. If a simple attribute comparison is all that is required, the comparison operation performed by &lt;code&gt;ldap-attribute&lt;/code&gt; will be faster than the search operation used by &lt;code&gt;ldap-filter&lt;/code&gt; especially within a large directory.</source>
          <target state="translated">&lt;code&gt;Require ldap-filter&lt;/code&gt; ディレクティブと &lt;code&gt;Require ldap-attribute&lt;/code&gt; ディレクティブの違いは、 &lt;code&gt;ldap-filter&lt;/code&gt; が単純な属性比較ではなく、指定された検索フィルターを使用してLDAPディレクトリで検索操作を実行することです。単純な属性比較だけで十分な場合、 &lt;code&gt;ldap-attribute&lt;/code&gt; が実行する比較操作は、特に大きなディレクトリ内で &lt;code&gt;ldap-filter&lt;/code&gt; が使用する検索操作よりも高速になります。</target>
        </trans-unit>
        <trans-unit id="1ad3212714f998f65cb1ff3d6e67f6e97347ef10" translate="yes" xml:space="preserve">
          <source>The difference in effect is subtle. If &lt;code&gt;M&lt;/code&gt; is used, all current copies of the document in all caches will expire at the same time, which can be good for something like a weekly notice that's always found at the same URL. If &lt;code&gt;A&lt;/code&gt; is used, the date of expiration is different for each client; this can be good for image files that don't change very often, particularly for a set of related documents that all refer to the same images (&lt;em&gt;i.e.&lt;/em&gt;, the images will be accessed repeatedly within a relatively short timespan).</source>
          <target state="translated">効果の違いは微妙です。場合は &lt;code&gt;M&lt;/code&gt; が使用されている、すべてのキャッシュ内のドキュメントの現在のすべてのコピーが常に同じURLで見つかった毎週の予告のようなもののために良いことができ、同時に失効します。 &lt;code&gt;A&lt;/code&gt; を使用する場合、有効期限の日付はクライアントごとに異なります。これは、頻繁に変更されない画像ファイル、特にすべてが同じ画像を参照する関連ドキュメントのセット（&lt;em&gt;つまり&lt;/em&gt;、画像が比較的短い時間内に繰り返しアクセスされる）に適しています。</target>
        </trans-unit>
        <trans-unit id="cf9c3066a8fece5e5578cdc30f8203745cef3611" translate="yes" xml:space="preserve">
          <source>The different LDAP SDKs have widely different methods of setting and handling both CA and client side certificates.</source>
          <target state="translated">LDAP SDK は、CA とクライアント側の証明書の両方を設定して処理する方法が大きく異なります。</target>
        </trans-unit>
        <trans-unit id="6212af10d307a69ec950c1575b5cc27d14ab38d2" translate="yes" xml:space="preserve">
          <source>The directive &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; will enable the &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; authentication when set to the value &lt;var&gt;form&lt;/var&gt;. The directives &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; specify that usernames and passwords should be checked against the chosen file.</source>
          <target state="translated">ディレクティブ &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; ディレクティブは有効になります &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; の値に設定したときに認証を &lt;var&gt;form&lt;/var&gt; 。ディレクティブ &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; は、選択したファイルに対してユーザー名とパスワードをチェックする必要があることを指定します。</target>
        </trans-unit>
        <trans-unit id="8dbeb8bc0977de1b60f6b78206f2e422bc5888fe" translate="yes" xml:space="preserve">
          <source>The directive &lt;code&gt;LDAPReferralHopLimit&lt;/code&gt; works in conjunction with this directive to limit the number of referral hops to follow before terminating the LDAP query. When referral processing is enabled by a value of &quot;On&quot;, client credentials will be provided, via a rebind callback, for any LDAP server requiring them.</source>
          <target state="translated">ディレクティブ &lt;code&gt;LDAPReferralHopLimit&lt;/code&gt; はこのディレクティブと連動して、LDAPクエリを終了する前に実行する参照ホップの数を制限します。&quot;On&quot;の値で紹介処理が有効になっている場合、クライアント資格情報は、それらを必要とするすべてのLDAPサーバーに対して、再バインドコールバックを介して提供されます。</target>
        </trans-unit>
        <trans-unit id="9aa1340ce96c58b1f5c75b1caf3c49b7ee13c773" translate="yes" xml:space="preserve">
          <source>The directive accepts three parameters from the following list of choices, applying the default to the ones not specified:</source>
          <target state="translated">このディレクティブは、以下の選択肢の中から3つのパラメータを受け付け、 指定されていないものにはデフォルトを適用します。</target>
        </trans-unit>
        <trans-unit id="6380b1700090f31ca28b1f1860d649030a984eba" translate="yes" xml:space="preserve">
          <source>The directive can be used multiple times (referencing different filenames) to support multiple algorithms for server authentication. For each &lt;code&gt;&lt;a href=&quot;#sslcertificatekeyfile&quot;&gt;SSLCertificateKeyFile&lt;/a&gt;&lt;/code&gt; directive, there must be a matching &lt;code&gt;SSLCertificateFile&lt;/code&gt; directive.</source>
          <target state="translated">ディレクティブを複数回使用して（異なるファイル名を参照）、サーバー認証の複数のアルゴリズムをサポートできます。 &lt;code&gt;&lt;a href=&quot;#sslcertificatekeyfile&quot;&gt;SSLCertificateKeyFile&lt;/a&gt;&lt;/code&gt; ディレクティブごとに、対応する &lt;code&gt;SSLCertificateFile&lt;/code&gt; ディレクティブが必要です。</target>
        </trans-unit>
        <trans-unit id="8c9be7b6fc5b49d471673ce33df75202a2ae245a" translate="yes" xml:space="preserve">
          <source>The directive is applied if and only if &lt;var&gt;expression&lt;/var&gt; evaluates to true. Details of expression syntax and evaluation are documented in the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; documentation.</source>
          <target state="translated">ディレクティブは、 &lt;var&gt;expression&lt;/var&gt; がtrueと評価された場合にのみ適用されます。式の構文と評価の詳細は、&lt;a href=&quot;../expr&quot;&gt;ap_exprの&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="4e689afd9ce968db9a5b59663d71a74b14447b4f" translate="yes" xml:space="preserve">
          <source>The directive is applied if and only if the &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;varname&lt;/code&gt; exists. A &lt;code&gt;!&lt;/code&gt; in front of &lt;code&gt;varname&lt;/code&gt; reverses the test, so the directive applies only if &lt;code&gt;varname&lt;/code&gt; is unset.</source>
          <target state="translated">ディレクティブは、&lt;a href=&quot;../env&quot;&gt;環境変数&lt;/a&gt; &lt;code&gt;varname&lt;/code&gt; が存在する場合にのみ適用されます。A &lt;code&gt;!&lt;/code&gt; &lt;code&gt;varname&lt;/code&gt; の前でテストを逆にするので、ディレクティブは &lt;code&gt;varname&lt;/code&gt; が設定されていない場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="b86f9735927a850d7bb37491b6c4c353b618c037" translate="yes" xml:space="preserve">
          <source>The directive is one of &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;poly&lt;/code&gt;, &lt;code&gt;circle&lt;/code&gt;, &lt;code&gt;rect&lt;/code&gt;, or &lt;code&gt;point&lt;/code&gt;. The value is an absolute or relative URL, or one of the special values listed below. The coordinates are &lt;code&gt;x,y&lt;/code&gt; pairs separated by whitespace. The quoted text is used as the text of the link if a imagemap menu is generated. Lines beginning with '#' are comments.</source>
          <target state="translated">ディレクティブは、 &lt;code&gt;base&lt;/code&gt; 、 &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;poly&lt;/code&gt; 、 &lt;code&gt;circle&lt;/code&gt; 、 &lt;code&gt;rect&lt;/code&gt; 、 &lt;code&gt;point&lt;/code&gt; のいずれかです。値は、絶対URLまたは相対URL、または以下に示す特別な値のいずれかです。座標は &lt;code&gt;x,y&lt;/code&gt; 空白で区切られたx、yのペアです。画像マップメニューが生成される場合、引用されたテキストがリンクのテキストとして使用されます。 「＃」で始まる行はコメントです。</target>
        </trans-unit>
        <trans-unit id="334e6b643a7a6d86fbd99aa9a70bc580e9a9f28a" translate="yes" xml:space="preserve">
          <source>The directive stores two different limits, which are evaluated on per-request basis. The first &lt;var&gt;number&lt;/var&gt; is the maximum number of internal redirects that may follow each other. The second &lt;var&gt;number&lt;/var&gt; determines how deeply subrequests may be nested. If you specify only one &lt;var&gt;number&lt;/var&gt;, it will be assigned to both limits.</source>
          <target state="translated">ディレクティブには、リクエストごとに評価される2つの異なる制限が格納されます。最初の &lt;var&gt;number&lt;/var&gt; は、相互に続く可能性のある内部リダイレクトの最大数です。 2番目の &lt;var&gt;number&lt;/var&gt; は、サブリクエストをネストする深さを決定します。 &lt;var&gt;number&lt;/var&gt; 1つだけ指定すると、両方の制限に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="8a7495de630b15bf915dd27b26fdaaadf0fff955" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; are all used to map file extensions onto the metadata for that file. Respectively they set the character set, content-encoding, content-language, and &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media-type&lt;/a&gt; (content-type) of documents. The directive &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; is used to specify a file which also maps extensions onto media types.</source>
          <target state="translated">ディレクティブ &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; はすべて、ファイル拡張子をそのファイルのメタデータにマッピングするために使用されます。それぞれ、ドキュメントの文字セット、コンテンツエンコーディング、コンテンツ言語、および&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;メディアタイプ&lt;/a&gt;（コンテンツタイプ）を設定します。ディレクティブ &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; は、拡張子をメディアタイプにマッピングするファイルを指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="28f68e60df4afd9e02f46532a433694039fe50b7" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfields&quot;&gt;LimitRequestFields&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfieldsize&quot;&gt;LimitRequestFieldSize&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestline&quot;&gt;LimitRequestLine&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/core#limitxmlrequestbody&quot;&gt;LimitXMLRequestBody&lt;/a&gt;&lt;/code&gt; should be carefully configured to limit resource consumption triggered by client input.</source>
          <target state="translated">ディレクティブ &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfields&quot;&gt;LimitRequestFields&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfieldsize&quot;&gt;LimitRequestFieldSize&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestline&quot;&gt;LimitRequestLine&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;../mod/core#limitxmlrequestbody&quot;&gt;LimitXMLRequestBody&lt;/a&gt;&lt;/code&gt; は、クライアント入力によってトリガーされるリソース消費を制限するように注意深く構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2d66ef8bdf1c30e4f3fbb83aeb9a47e08edbdc4e" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;mod_session#session&quot;&gt;Session&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookiename&quot;&gt;SessionCookieName&lt;/a&gt;&lt;/code&gt; session stored within an HTTP cookie on the browser. For more information on the different options for configuring a session, read the documentation for &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ブラウザのHTTP Cookie内に保存されたディレクティブ &lt;code&gt;&lt;a href=&quot;mod_session#session&quot;&gt;Session&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookiename&quot;&gt;SessionCookieName&lt;/a&gt;&lt;/code&gt; セッション。セッションを構成するためのさまざまなオプションの詳細については、 &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="51d653289fc5139b35c225f9827a2609f86a342d" translate="yes" xml:space="preserve">
          <source>The directives above only let one person (specifically someone with a username of &lt;code&gt;rbowen&lt;/code&gt;) into the directory. In most cases, you'll want to let more than one person in. This is where the &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; comes in.</source>
          <target state="translated">上記のディレクティブでは、1人のユーザー（特に、ユーザー名が &lt;code&gt;rbowen&lt;/code&gt; のユーザー）のみがディレクトリにアクセスできます。ほとんどの場合、複数のユーザーを許可する &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; があります。ここでAuthGroupFileを使用します。</target>
        </trans-unit>
        <trans-unit id="b4f192b5ba7c199f37a4ae10695c008d73c4fc5a" translate="yes" xml:space="preserve">
          <source>The directives are considered in the order they appear in the configuration files. So more complex sequences can be used, such as this example, which sets &lt;code&gt;netscape&lt;/code&gt; if the browser is mozilla but not MSIE.</source>
          <target state="translated">ディレクティブは、構成ファイルに出現する順序で考慮されます。したがって、この例のように、ブラウザがmozillaであるがMSIEではない場合に &lt;code&gt;netscape&lt;/code&gt; を設定する、より複雑なシーケンスを使用できます。</target>
        </trans-unit>
        <trans-unit id="7fa0f23c203d4e2690046ef0ad1397b18450241f" translate="yes" xml:space="preserve">
          <source>The directives contained in this module allow for manipulation and control of URLs as requests arrive at the server. The &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directives are used to map between URLs and filesystem paths. This allows for content which is not directly under the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; served as part of the web document tree. The &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive has the additional effect of marking the target directory as containing only CGI scripts.</source>
          <target state="translated">このモジュールに含まれるディレクティブを使用すると、リクエストがサーバーに到着したときにURLを操作および制御できます。 &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; のディレクティブはURLとファイルシステムのパスの間のマッピングに使用されます。これにより、Webドキュメントツリーの一部として提供される &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の直下にないコンテンツが可能になります。 &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; とのディレクティブはCGIスクリプトを含むように、ターゲットディレクトリをマークの追加効果があります。</target>
        </trans-unit>
        <trans-unit id="6d7d39e3b2b802292577646f58c8a388f058527a" translate="yes" xml:space="preserve">
          <source>The directives discussed in this article will need to go either in your main server configuration file (typically in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section), or in per-directory configuration files (&lt;code&gt;.htaccess&lt;/code&gt; files).</source>
          <target state="translated">この記事で説明するディレクティブは、メインサーバー構成ファイル（通常は &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション）またはディレクトリごとの構成ファイル（ &lt;code&gt;.htaccess&lt;/code&gt; ファイル）のいずれかに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7b45d8fbef18be1052a8bc967954bb5f5ecd606" translate="yes" xml:space="preserve">
          <source>The directives must be put in the &lt;code&gt;.htaccess&lt;/code&gt; files. Attempting to put them inside &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directives won't work. This is because &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; has to be able to grab the &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; directive that is found in FrontPage &lt;code&gt;.htaccess&lt;/code&gt; files so that it knows where to look for the valid user list. If the &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; directives aren't in the same &lt;code&gt;.htaccess&lt;/code&gt; file as the FrontPage directives, then the hack won't work, because &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will never get a chance to process the &lt;code&gt;.htaccess&lt;/code&gt; file, and won't be able to find the FrontPage-managed user file.</source>
          <target state="translated">ディレクティブは &lt;code&gt;.htaccess&lt;/code&gt; ファイルに配置する必要があります。それらを &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; ディレクティブ内に配置しようとしても機能しません。これは、 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; が、FrontPage &lt;code&gt;.htaccess&lt;/code&gt; ファイルにある &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; ディレクティブを取得して、有効なユーザーリストを探す場所を認識できるようにする必要があるためです。場合 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; のディレクティブは同じではない &lt;code&gt;.htaccess&lt;/code&gt; のFrontPageディレクティブとしてファイル、そしてハックは動作しません、ので &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; が処理する機会を得ることは決してありません &lt;code&gt;.htaccess&lt;/code&gt; ファイルを、およびFrontPageを見つけることができません管理対象のユーザーファイル。</target>
        </trans-unit>
        <trans-unit id="2480f43631a2af78bda0830780d2d78c7302df7c" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; have been deprecated by &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;. Mixing old directives like &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; with new ones like &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; is technically possible but discouraged. The &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; module was created to support configurations containing only old directives to facilitate the 2.4 upgrade. Please check the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;upgrading&lt;/a&gt; guide for more information.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; によって提供されるディレクティブは、 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; によって非推奨になりました。 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; などの古いディレクティブを &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; などの新しいディレクティブと混在させることは技術的には可能ですが、お勧めしません。 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; モジュールは、2.4アップグレードを容易にするための唯一の古いディレクティブを含む構成をサポートするために作成されました。詳細については、&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;アップグレード&lt;/a&gt;ガイドを確認してください。</target>
        </trans-unit>
        <trans-unit id="82c8f5d3749c77465c0f6236e3b459067632989c" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; are used in &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; sections as well as &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; files to control access to particular parts of the server. Access can be controlled based on the client hostname, IP address, or other characteristics of the client request, as captured in &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt;. The &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives are used to specify which clients are or are not allowed access to the server, while the &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directive sets the default access state, and configures how the &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives interact with each other.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; によって提供されるディレクティブは、 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションと &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; ファイルで使用され、サーバーの特定の部分へのアクセスを制御します。アクセスは、クライアントのホスト名、IPアドレス、またはクライアント要求のその他の特性に基づいて制御でき、&lt;a href=&quot;../env&quot;&gt;環境変数で&lt;/a&gt;取得されます。 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブがあるか、一方で、サーバーへのアクセスを許可されていないクライアントを指定するために使用されている &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 方法ディレクティブはデフォルトのアクセス状態を設定し、設定し &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブは互いに相互作用します。</target>
        </trans-unit>
        <trans-unit id="701b884823a50f8a4b342e75468e7c140652bb0f" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; have been deprecated by &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;. Mixing old directives like &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; with new ones like &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; is technically possible but discouraged. This module was created to support configurations containing only old directives to facilitate the 2.4 upgrade. Please check the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;upgrading&lt;/a&gt; guide for more information.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; によって提供されるディレクティブは、 &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; によって非推奨になりました。 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; などの古いディレクティブを &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; などの新しいディレクティブと混在させることは技術的には可能ですが、お勧めしません。このモジュールは、2.4アップグレードを容易にするために古いディレクティブのみを含む構成をサポートするために作成されました。詳細については、&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;アップグレード&lt;/a&gt;ガイドを確認してください。</target>
        </trans-unit>
        <trans-unit id="e0ecbb534e9959c4e43af80a38be3657e113855b" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; can occur almost anywhere within the server configuration, and can be limited in scope by enclosing them in &lt;a href=&quot;../sections&quot;&gt;configuration sections&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; によって提供されるディレクティブは、サーバー構成内のほぼすべての場所で発生する可能性があり、&lt;a href=&quot;../sections&quot;&gt;構成セクションで&lt;/a&gt;囲むことにより範囲を制限できます。</target>
        </trans-unit>
        <trans-unit id="36b792a603d5cb5ee6b088de0850fa134900f6bb" translate="yes" xml:space="preserve">
          <source>The directives that accept filenames as arguments must use NetWare filenames instead of Unix names. However, because Apache uses Unix-style names internally, forward slashes must be used rather than backslashes. It is recommended that all rooted file paths begin with a volume name. If omitted, Apache will assume the &lt;code&gt;SYS:&lt;/code&gt; volume which may not be correct.</source>
          <target state="translated">ファイル名を引数として受け入れるディレクティブは、Unix名ではなくNetWareファイル名を使用する必要があります。ただし、Apacheは内部的にUnixスタイルの名前を使用しているため、バックスラッシュではなくスラッシュを使用する必要があります。ルート化されたすべてのファイルパスは、ボリューム名で始めることをお勧めします。省略した場合、Apacheは、正しくない可能性がある &lt;code&gt;SYS:&lt;/code&gt; ボリュームを想定します。</target>
        </trans-unit>
        <trans-unit id="73c68b68ad3475438ac7559624f7123c865d9391" translate="yes" xml:space="preserve">
          <source>The directives that accept filenames as arguments must use Windows filenames instead of Unix ones. However, because Apache may interpret backslashes as an &quot;escape character&quot; sequence, you should consistently use forward slashes in path names, not backslashes.</source>
          <target state="translated">ファイル名を引数として受け取るディレクティブは Unix のファイル名ではなく Windows のファイル名を使わなければなりません。しかし、Apache はバックスラッシュを &quot;エスケープ文字&quot; の羅列と解釈するかもしれませんので、パス名には一貫してバックスラッシュではなくフォワードスラッシュを使うべきです。</target>
        </trans-unit>
        <trans-unit id="5fa124549483465f1587f841c2fed23092407de4" translate="yes" xml:space="preserve">
          <source>The directives within an &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; section are only processed if the &lt;var&gt;test&lt;/var&gt; is true. If &lt;var&gt;test&lt;/var&gt; is false, everything between the start and end markers is ignored.</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; セクション内のディレクティブは、 &lt;var&gt;test&lt;/var&gt; が真の場合にのみ処理されます。 &lt;var&gt;test&lt;/var&gt; がfalseの場合、開始マーカーと終了マーカーの間のすべてが無視されます。</target>
        </trans-unit>
        <trans-unit id="b7bdfd5e9871fd71f3923defaf5b7b7d207c5e3e" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running.</source>
          <target state="translated">ロックデータベースファイルを含むディレクトリは、Apacheが実行されている &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 書き込み可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3f935eef1cce260221839f1678ce0b63d3ee0a05" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. For security reasons, you should create a directory for this purpose rather than changing the permissions on an existing directory. In the above example, Apache will create files in the &lt;code&gt;var/&lt;/code&gt; directory under the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; with the base filename &lt;code&gt;DavLock&lt;/code&gt; and an extension added by the server.</source>
          <target state="translated">ロックデータベースファイルを含むディレクトリは、Apacheが実行されている &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 書き込み可能でなければなりません。セキュリティ上の理由から、既存のディレクトリの権限を変更するのではなく、この目的のためにディレクトリを作成する必要があります。上記の例では、Apacheは、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; の下の &lt;code&gt;var/&lt;/code&gt; ディレクトリに、基本ファイル名 &lt;code&gt;DavLock&lt;/code&gt; とサーバーによって追加された拡張子を持つファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="118b6e61c114ab8754115835f37e2769bb1b5116" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. For security reasons, you should create a directory for this purpose rather than changing the permissions on an existing directory. In the above example, Apache will create files in the &lt;code&gt;var/&lt;/code&gt; directory under the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; with the base filename &lt;code&gt;DavLock&lt;/code&gt; and extension name chosen by the server.</source>
          <target state="translated">ロックデータベースファイルを含むディレクトリは、Apacheが実行されている &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 書き込み可能でなければなりません。セキュリティ上の理由から、既存のディレクトリの権限を変更するのではなく、この目的のためにディレクトリを作成する必要があります。上記の例では、Apacheは、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; の下の &lt;code&gt;var/&lt;/code&gt; ディレクトリに、サーバーによって選択された基本ファイル名 &lt;code&gt;DavLock&lt;/code&gt; および拡張子名を使用してファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="36fb83321ef6aef990ac3bd68f787f121a8846f6" translate="yes" xml:space="preserve">
          <source>The directory path where the rule is defined is stripped from the currently mapped filesystem path before comparison (up to and including a trailing slash). The net result of this per-directory prefix stripping is that rules in this context only match against the portion of the currently mapped filesystem path &quot;below&quot; where the rule is defined.</source>
          <target state="translated">ルールが定義されているディレクトリパスは、比較の前に現在マップされているファイルシステムパスから取り除かれます (最後のスラッシュまで)。このようにディレクトリごとにプレフィックスを取り除くことで、このコンテキストのルールは、 現在マップされているファイルシステムパスのうち、ルールが定義されている 「下」の部分にのみマッチするようになります。</target>
        </trans-unit>
        <trans-unit id="82d107c99868b2aa7f351be29e410963d15a7f68" translate="yes" xml:space="preserve">
          <source>The directory root under which cache files are stored</source>
          <target state="translated">キャッシュファイルが格納されているディレクトリルート</target>
        </trans-unit>
        <trans-unit id="cbb1442aee583624a17bda0ae67de1ea6bda2ab5" translate="yes" xml:space="preserve">
          <source>The directory sections occur in the &lt;code&gt;httpd.conf&lt;/code&gt; file. &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; directives cannot nest, and cannot appear in a &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">ディレクトリセクションは、 &lt;code&gt;httpd.conf&lt;/code&gt; ファイルにあります。 &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; ディレクティブはネストできません。また、 &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションに表示できません。</target>
        </trans-unit>
        <trans-unit id="765f21ee5bdf65fc8218aa97f29b021d23b8425e" translate="yes" xml:space="preserve">
          <source>The document is parsed as an HTML document, with special commands embedded as SGML comments. A command has the syntax:</source>
          <target state="translated">文書は HTML 文書として解析され、特別なコマンドは SGML のコメントとして埋め込まれます。コマンドには構文があります。</target>
        </trans-unit>
        <trans-unit id="4b8e2c377c16ae471bd76f7bf407d07f007f0428" translate="yes" xml:space="preserve">
          <source>The document root of the host</source>
          <target state="translated">ホストのドキュメントルート</target>
        </trans-unit>
        <trans-unit id="eff3653a94f248205f1b007f4472de5478704628" translate="yes" xml:space="preserve">
          <source>The documentation for the SDK claims to support both SSL and STARTTLS, however STARTTLS does not seem to work on all versions of the SDK. The SSL/TLS mode can be set using the LDAPTrustedMode parameter. If an ldaps:// URL is specified, SSL mode is forced. The OpenLDAP documentation notes that SSL (ldaps://) support has been deprecated to be replaced with TLS, although the SSL functionality still works.</source>
          <target state="translated">SDKのドキュメントでは、SSLとSTARTTLSの両方をサポートしていると謳っていますが、STARTTLSはSDKのすべてのバージョンでは動作しないようです。SSL/TLSモードはLDAPTrustedModeパラメータを使用して設定することができます。ldaps://URL を指定すると、SSL モードが強制的に設定されます。OpenLDAP のドキュメントによると、SSL (ldaps://)のサポートは廃止され、TLS に置き換えられたとのことですが、SSL 機能はまだ動作します。</target>
        </trans-unit>
        <trans-unit id="a1a5cadf1c2ef3c5a218bb1335e0c749b37129bf" translate="yes" xml:space="preserve">
          <source>The documents below have not been fully updated to take into account changes made in the 2.1 version of the Apache HTTP Server. Some of the information may still be relevant, but please use it with care.</source>
          <target state="translated">以下のドキュメントは、Apache HTTP サーバのバージョン 2.1 での変更を考慮して完全には更新されていません。いくつかの情報はまだ関連性があるかもしれませんが、注意して使ってください。</target>
        </trans-unit>
        <trans-unit id="8f500d7af9fac861941287ba1c2924d3aa1720fb" translate="yes" xml:space="preserve">
          <source>The domain for which you want the cookie to be valid. This may be a hostname, such as &lt;code&gt;www.example.com&lt;/code&gt;, or it may be a domain, such as &lt;code&gt;.example.com&lt;/code&gt;. It must be at least two parts separated by a dot. That is, it may not be merely &lt;code&gt;.com&lt;/code&gt; or &lt;code&gt;.net&lt;/code&gt;. Cookies of that kind are forbidden by the cookie security model.</source>
          <target state="translated">Cookieを有効にするドメイン。これは、 &lt;code&gt;www.example.com&lt;/code&gt; などのホスト名でも、 &lt;code&gt;.example.com&lt;/code&gt; などのドメインでもかまいません。それは、ドットで区切られた少なくとも2つの部分でなければなりません。つまり、単に &lt;code&gt;.com&lt;/code&gt; や &lt;code&gt;.net&lt;/code&gt; であるとは限りません。この種のCookieは、Cookieセキュリティモデルによって禁止されています。</target>
        </trans-unit>
        <trans-unit id="c08c816d72a4c6167f2712061219b9329127a1f2" translate="yes" xml:space="preserve">
          <source>The domain string &lt;strong&gt;must&lt;/strong&gt; begin with a dot, and &lt;strong&gt;must&lt;/strong&gt; include at least one embedded dot. That is, &lt;code&gt;.example.com&lt;/code&gt; is legal, but &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;.com&lt;/code&gt; are not.</source>
          <target state="translated">ドメイン文字列&lt;strong&gt;は&lt;/strong&gt;、ドットで始まり、少なくとも1つのドットが埋め込まれている&lt;strong&gt;必要があり&lt;/strong&gt;ます。つまり、 &lt;code&gt;.example.com&lt;/code&gt; は有効ですが、 &lt;code&gt;www.example.com&lt;/code&gt; と &lt;code&gt;.com&lt;/code&gt; は無効です。</target>
        </trans-unit>
        <trans-unit id="7c60efc7c02b8eb06349d5f312dbd6ae402b21eb" translate="yes" xml:space="preserve">
          <source>The domain to which the tracking cookie applies</source>
          <target state="translated">トラッキングクッキーが適用されるドメイン</target>
        </trans-unit>
        <trans-unit id="708b2ff197602576e334a5c0d0436a33aeedeef2" translate="yes" xml:space="preserve">
          <source>The echo Element</source>
          <target state="translated">エコー要素</target>
        </trans-unit>
        <trans-unit id="2579ab03b6f085572e95708c613faa12d9b02a0c" translate="yes" xml:space="preserve">
          <source>The effect of &lt;code&gt;MultiViews&lt;/code&gt; is as follows: if the server receives a request for &lt;code&gt;/some/dir/foo&lt;/code&gt;, if &lt;code&gt;/some/dir&lt;/code&gt; has &lt;code&gt;MultiViews&lt;/code&gt; enabled, and &lt;code&gt;/some/dir/foo&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; exist, then the server reads the directory looking for files named foo.*, and effectively fakes up a type map which names all those files, assigning them the same media types and content-encodings it would have if the client had asked for one of them by name. It then chooses the best match to the client's requirements.</source>
          <target state="translated">効果 &lt;code&gt;MultiViews&lt;/code&gt; 次の通りれる：サーバーが要求を受信した場合 &lt;code&gt;/some/dir/foo&lt;/code&gt; 場合など &lt;code&gt;/some/dir&lt;/code&gt; た &lt;code&gt;MultiViews&lt;/code&gt; 有効になって、および &lt;code&gt;/some/dir/foo&lt;/code&gt; がない&lt;em&gt;ではない&lt;/em&gt;が存在し、その後、サーバーを探してディレクトリを読み込み、 foo。*という名前のファイルであり、これらのファイルすべてに名前を付けるタイプマップを事実上偽装し、クライアントが名前でファイルの1つを要求した場合と同じメディアタイプとコンテンツエンコーディングを割り当てます。次に、クライアントの要件に最適なものを選択します。</target>
        </trans-unit>
        <trans-unit id="e7d295ebcdbd8b94fe5c7f91b9a7475ce21d02b2" translate="yes" xml:space="preserve">
          <source>The elements of the handshake sequence, as used by the client and server, are listed below:</source>
          <target state="translated">クライアントとサーバが使用するハンドシェイクシーケンスの要素を以下に示す。</target>
        </trans-unit>
        <trans-unit id="1675d7367557763ce7b7830ce7ff59ec8a4c23f6" translate="yes" xml:space="preserve">
          <source>The encapsulation of SSL control protocols by the record protocol means that if an active session is renegotiated the control protocols will be transmitted securely. If there was no previous session, the Null cipher suite is used, which means there will be no encryption and messages will have no integrity digests, until the session has been established.</source>
          <target state="translated">レコードプロトコルによる SSL 制御プロトコルのカプセル化は、 アクティブなセッションが再ネゴシエーションされた場合に制御プロトコルが安全に送信されることを意味します。前のセッションがなかった場合、Null 暗号スイートが使われます。これは、セッションが確立されるまで暗号化が行われず、 メッセージは完全性ダイジェストを持ちません。</target>
        </trans-unit>
        <trans-unit id="4ed4e2f380fe2dbefc82a38bb811ccacf9529e92" translate="yes" xml:space="preserve">
          <source>The enclosed directives will be applied to the request if the path component of the URL meets &lt;em&gt;any&lt;/em&gt; of the following criteria:</source>
          <target state="translated">囲まれたディレクティブは、URLのパスコンポーネントが次の基準の&lt;em&gt;いずれか&lt;/em&gt;を満たす場合にリクエストに適用されます。</target>
        </trans-unit>
        <trans-unit id="3e652a899bbece92e4a631fa9c2f4690a2816464" translate="yes" xml:space="preserve">
          <source>The encoding of the file. Apache only recognizes encodings that are defined by an &lt;code&gt;&lt;a href=&quot;mod_mime#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; directive. This normally includes the encodings &lt;code&gt;x-compress&lt;/code&gt; for compress'd files, and &lt;code&gt;x-gzip&lt;/code&gt; for gzip'd files. The &lt;code&gt;x-&lt;/code&gt; prefix is ignored for encoding comparisons.</source>
          <target state="translated">ファイルのエンコーディング。Apacheは &lt;code&gt;&lt;a href=&quot;mod_mime#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; ディレクティブで定義されたエンコーディングのみを認識します。これには通常、 &lt;code&gt;x-compress&lt;/code&gt; されたファイルのエンコーディングx-compress、および &lt;code&gt;x-gzip&lt;/code&gt; れたファイルのx-gzipが含まれます。エンコード比較では、 &lt;code&gt;x-&lt;/code&gt; 接頭辞は無視されます。</target>
        </trans-unit>
        <trans-unit id="98c3dd9af004c8cc3df7f180c9d516227b75d3d6" translate="yes" xml:space="preserve">
          <source>The encrypted password format depends on which authentication frontend (e.g. &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt;) is being used. See &lt;a href=&quot;../misc/password_encryptions&quot;&gt;Password Formats&lt;/a&gt; for more information.</source>
          <target state="translated">暗号化されたパスワード形式は、使用されている認証フロントエンド（たとえば、 &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; ）によって異なります。詳細については、&lt;a href=&quot;../misc/password_encryptions&quot;&gt;パスワードの形式&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="332d07b4960135bbcc51439bc69a5d6b6c32ae1a" translate="yes" xml:space="preserve">
          <source>The entity was fetched from the upstream server and was not served from cache.</source>
          <target state="translated">エンティティはアップストリーム・サーバーからフェッチされ、キャッシュからは提供されませんでした。</target>
        </trans-unit>
        <trans-unit id="7902192ee5bf4f51a508650439e73e9bb50d9c0f" translate="yes" xml:space="preserve">
          <source>The entity was fresh, and was served from cache.</source>
          <target state="translated">実体は新鮮で、キャッシュから提供されていました。</target>
        </trans-unit>
        <trans-unit id="9259ed13b76bdb0273d4057f1aab8639efb6be5f" translate="yes" xml:space="preserve">
          <source>The entity was stale, was successfully revalidated and was served from cache.</source>
          <target state="translated">実体は陳腐で、再検証に成功し、キャッシュから提供されました。</target>
        </trans-unit>
        <trans-unit id="4547550e4aa50307062d34932a847e84874e6ee9" translate="yes" xml:space="preserve">
          <source>The environment variables set for this request.</source>
          <target state="translated">このリクエストに設定されている環境変数です。</target>
        </trans-unit>
        <trans-unit id="38751550b99026c479058acabc37c0e67014e005" translate="yes" xml:space="preserve">
          <source>The error document page should contain a login form with an empty action property, as per the example below. This has the effect of submitting the form to the original protected URL, without the page having to know what that URL is.</source>
          <target state="translated">エラードキュメントページは、以下の例のように、空のアクションプロパティを持つログインフォームを含むべきです。これはフォームを元の保護されたURLに送信する効果があり、ページはそのURLが何であるかを知る必要がありません。</target>
        </trans-unit>
        <trans-unit id="adf66c658c9e099a2a48ac2c601832fb9da07c04" translate="yes" xml:space="preserve">
          <source>The error log id of the connection (see &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">接続のエラーログID（ &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; を参照）</target>
        </trans-unit>
        <trans-unit id="b78c4b54720aa0ddf6a945ea388c9ce35a7fc52d" translate="yes" xml:space="preserve">
          <source>The error log id of the request (see &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">リクエストのエラーログID（ &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; を参照）</target>
        </trans-unit>
        <trans-unit id="548f44848e466643474c05dd73966a5797fc4c0d" translate="yes" xml:space="preserve">
          <source>The error log is usually written to a file (typically &lt;code&gt;error_log&lt;/code&gt; on Unix systems and &lt;code&gt;error.log&lt;/code&gt; on Windows and OS/2). On Unix systems it is also possible to have the server send errors to &lt;code&gt;syslog&lt;/code&gt; or &lt;a href=&quot;#piped&quot;&gt;pipe them to a program&lt;/a&gt;.</source>
          <target state="translated">エラーログは通常ファイルに書き込まれます（通常、UNIXシステムでは &lt;code&gt;error_log&lt;/code&gt; 、WindowsおよびOS / 2では &lt;code&gt;error.log&lt;/code&gt; ）。 Unixシステムでは、サーバーにエラーを &lt;code&gt;syslog&lt;/code&gt; に送信さ&lt;a href=&quot;#piped&quot;&gt;せ&lt;/a&gt;たり、パイプでプログラムに送ったりすることもできます。</target>
        </trans-unit>
        <trans-unit id="d129fe418069f71cd1cace39c17f7ab32d07ff1d" translate="yes" xml:space="preserve">
          <source>The error logs are your friend. Anything that goes wrong generates message in the error log. You should always look there first. If the place where you are hosting your web site does not permit you access to the error log, you should probably host your site somewhere else. Learn to read the error logs, and you'll find that almost all of your problems are quickly identified, and quickly solved.</source>
          <target state="translated">エラーログはあなたの味方です。うまくいかないことがあれば、エラーログにメッセージが表示されます。あなたは常に最初にそこを見る必要があります。あなたのウェブサイトをホストしている場所がエラーログへのアクセスを許可していない場合は、おそらくどこか他の場所であなたのサイトをホストする必要があります。エラーログを読むことを学べば、ほとんどすべての問題が迅速に特定され、迅速に解決されることに気づくでしょう。</target>
        </trans-unit>
        <trans-unit id="0bde537d58abbeadc1a7af64fede6817ef0bd19c" translate="yes" xml:space="preserve">
          <source>The event MPM handles some connections in an asynchronous way, where request worker threads are only allocated for short periods of time as needed, and other connections with one request worker thread reserved per connection. This can lead to situations where all workers are tied up and no worker thread is available to handle new work on established async connections.</source>
          <target state="translated">イベント MPM はいくつかの接続を非同期的に処理し、リクエストワーカースレッドは必要に応じて短時間だけ割り当てられ、その他の接続では接続ごとに 1 つのリクエストワーカースレッドが予約されています。これは、すべてのワーカーが縛られ、確立された非同期接続で新しい作業を処理するためのワーカースレッドが利用できないという状況を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="e56dd7b3214b718b487e23ff9b5c8affd1f134a2" translate="yes" xml:space="preserve">
          <source>The event model was made possible by the introduction of new APIs into the supported operating systems:</source>
          <target state="translated">イベントモデルは、サポートされているOSに新しいAPIを導入することで実現しました。</target>
        </trans-unit>
        <trans-unit id="c902bf9b614fe120a8e7f75712739785bd9c0cbe" translate="yes" xml:space="preserve">
          <source>The example below creates two different ldap authentication provider aliases based on the ldap provider. This allows a single authenticated location to be serviced by multiple ldap hosts:</source>
          <target state="translated">以下の例では、LDAPプロバイダに基づいて2つの異なるLDAP認証プロバイダエイリアスを作成しています。これにより、単一の認証された場所を複数のldapホストがサービスすることができます。</target>
        </trans-unit>
        <trans-unit id="a21459035c31369ca3be0279e14dd6ec95491c9a" translate="yes" xml:space="preserve">
          <source>The example below creates two different ldap authorization provider aliases based on the ldap-group authorization provider. This example allows a single authorization location to check group membership within multiple ldap hosts:</source>
          <target state="translated">以下の例では、ldap-group認可プロバイダに基づいて2つの異なるldap認可プロバイダ・エイリアスを作成しています。この例では、単一の認可場所で複数のldapホスト内のグループ・メンバーシップを確認することができます。</target>
        </trans-unit>
        <trans-unit id="03b852b9388d5eccfc2c3234bd4919bdaddb40c8" translate="yes" xml:space="preserve">
          <source>The example below expresses the following authorization logic. In order to access the resource, the user must either be the &lt;code&gt;superadmin&lt;/code&gt; user, or belong to both the &lt;code&gt;admins&lt;/code&gt; group and the &lt;code&gt;Administrators&lt;/code&gt; LDAP group and either belong to the &lt;code&gt;sales&lt;/code&gt; group or have the LDAP &lt;code&gt;dept&lt;/code&gt; attribute &lt;code&gt;sales&lt;/code&gt;. Furthermore, in order to access the resource, the user must not belong to either the &lt;code&gt;temps&lt;/code&gt; group or the LDAP group &lt;code&gt;Temporary Employees&lt;/code&gt;.</source>
          <target state="translated">次の例は、次の承認ロジックを表しています。リソースにアクセスするには、ユーザーは &lt;code&gt;superadmin&lt;/code&gt; ユーザーであるか、 &lt;code&gt;admins&lt;/code&gt; グループと &lt;code&gt;Administrators&lt;/code&gt; LDAPグループの両方に属し、 &lt;code&gt;sales&lt;/code&gt; グループに属しているか、LDAP &lt;code&gt;dept&lt;/code&gt; 属性 &lt;code&gt;sales&lt;/code&gt; を持っている必要があります。さらに、リソースにアクセスするには、ユーザーは &lt;code&gt;temps&lt;/code&gt; グループにもLDAPグループ &lt;code&gt;Temporary Employees&lt;/code&gt; にも属していない必要があります。</target>
        </trans-unit>
        <trans-unit id="e3cf01d539e252da09b865513aefab728040114f" translate="yes" xml:space="preserve">
          <source>The example below is combined with &quot;normal&quot; htpasswd-file based authentication and allows users in additionally as 'guests' with the following properties:</source>
          <target state="translated">以下の例は、&quot;通常の&quot; htpasswd-file ベースの認証と組み合わせて、以下のプロパティを持つ 'guests' としてユーザを追加で入れるようにしています。</target>
        </trans-unit>
        <trans-unit id="84ab68254d1d2a52d8bf85f2723a4505c54b26b0" translate="yes" xml:space="preserve">
          <source>The example below shows how to acquire a database handle and return information from a table:</source>
          <target state="translated">以下の例では、データベースのハンドルを取得してテーブルから情報を返す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9385a193c99368e0caec5e14f405061084ed1929" translate="yes" xml:space="preserve">
          <source>The example given above, which also specifies a matching &lt;code&gt;&lt;a href=&quot;#ssiendtag&quot;&gt;SSIEndTag&lt;/a&gt;&lt;/code&gt;, will allow you to use SSI directives as shown in the example below:</source>
          <target state="translated">上記の例では、一致する &lt;code&gt;&lt;a href=&quot;#ssiendtag&quot;&gt;SSIEndTag&lt;/a&gt;&lt;/code&gt; も指定されているため、次の例に示すように、SSIディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="3dedbfc409676aceafed622aa7bb80cf5ea739fe" translate="yes" xml:space="preserve">
          <source>The example given here will rewrite any request to &lt;code&gt;index.php&lt;/code&gt;, giving the original request as a query string argument to &lt;code&gt;index.php&lt;/code&gt;, however, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; ensures that if the request is already for &lt;code&gt;index.php&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; will be skipped.</source>
          <target state="translated">ここに示す例では、 &lt;code&gt;index.php&lt;/code&gt; へのすべてのリクエストをリライトし、元のリクエストを &lt;code&gt;index.php&lt;/code&gt; へのクエリ文字列引数として指定しますが、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; は、リクエストが既に &lt;code&gt;index.php&lt;/code&gt; に対するものである場合、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; がスキップされることを保証します。</target>
        </trans-unit>
        <trans-unit id="5d1b18e86b0def724cdbff86a7333f6f7cc48a3d" translate="yes" xml:space="preserve">
          <source>The example given is crafted to be used in server or virtualhost scope. If you're planning to use this in a &lt;code&gt;.htaccess&lt;/code&gt; file, you'll need to remove the leading slash from the rewrite pattern in order for it to match anything:</source>
          <target state="translated">与えられた例は、サーバーまたはvirtualhostスコープで使用されるように作成されています。これを &lt;code&gt;.htaccess&lt;/code&gt; ファイルで使用する場合は、書き換えパターンから先頭のスラッシュを削除して、何とでも一致させる必要があります。</target>
        </trans-unit>
        <trans-unit id="554347093a7e2ac68869e08f5dce384bf64df1bb" translate="yes" xml:space="preserve">
          <source>The example module is an actual working module. If you link it into your server, enable the &quot;example-hooks-handler&quot; handler for a location, and then browse to that location, you will see a display of some of the tracing the example module did as the various callbacks were made.</source>
          <target state="translated">example モジュールは実際に動作するモジュールです。サーバにリンクして、&quot;example-hooks-handler&quot; ハンドラをある場所で有効にして、その場所を参照すると、様々なコールバックが行われたときに example モジュールが行ったトレースのいくつかが表示されます。</target>
        </trans-unit>
        <trans-unit id="7f22bf6f641e0992432c45ff7e81238f2244acb3" translate="yes" xml:space="preserve">
          <source>The example request would come from &lt;code&gt;/usr/local/apache/vhosts/example.com/d/o/m/ain/directory/file.html&lt;/code&gt;.</source>
          <target state="translated">サンプルのリクエストは &lt;code&gt;/usr/local/apache/vhosts/example.com/d/o/m/ain/directory/file.html&lt;/code&gt; から送られます。</target>
        </trans-unit>
        <trans-unit id="330457936868b53ebf4b5338b6b66da1c3499f60" translate="yes" xml:space="preserve">
          <source>The example request would come from &lt;code&gt;/usr/local/apache/vhosts/example.com/n/i/a/domain/directory/file.html&lt;/code&gt;.</source>
          <target state="translated">サンプルのリクエストは &lt;code&gt;/usr/local/apache/vhosts/example.com/n/i/a/domain/directory/file.html&lt;/code&gt; から送られます。</target>
        </trans-unit>
        <trans-unit id="1392c8da2d3d25f50b92f5174e0ee9857ad699b5" translate="yes" xml:space="preserve">
          <source>The example shown is from your default &lt;code&gt;httpd.conf&lt;/code&gt; configuration file, if you installed Apache in the default location. The &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive is much like the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive, which defines a URL prefix that is to mapped to a particular directory. &lt;code&gt;Alias&lt;/code&gt; and &lt;code&gt;ScriptAlias&lt;/code&gt; are usually used for directories that are outside of the &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directory. The difference between &lt;code&gt;Alias&lt;/code&gt; and &lt;code&gt;ScriptAlias&lt;/code&gt; is that &lt;code&gt;ScriptAlias&lt;/code&gt; has the added meaning that everything under that URL prefix will be considered a CGI program. So, the example above tells Apache that any request for a resource beginning with &lt;code&gt;/cgi-bin/&lt;/code&gt; should be served from the directory &lt;code&gt;/usr/local/apache2/cgi-bin/&lt;/code&gt;, and should be treated as a CGI program.</source>
          <target state="translated">示されている例は、デフォルトの場所にApacheをインストールした場合のデフォルトの &lt;code&gt;httpd.conf&lt;/code&gt; 構成ファイルからのものです。 &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; とのディレクティブは非常に似ている &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 特定のディレクトリにマップされたのであるURL接頭辞を定義するディレクティブ、。 &lt;code&gt;Alias&lt;/code&gt; と &lt;code&gt;ScriptAlias&lt;/code&gt; は通常、 &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; ディレクトリの外部にあるディレクトリに使用されます。 &lt;code&gt;Alias&lt;/code&gt; と &lt;code&gt;ScriptAlias&lt;/code&gt; の違いは、 &lt;code&gt;ScriptAlias&lt;/code&gt; には、そのURLプレフィックスの下のすべてがCGIプログラムと見なされるという意味が追加されていることです。したがって、上記の例は、Apacheに、リソースのリクエストが &lt;code&gt;/cgi-bin/&lt;/code&gt; は、ディレクトリ &lt;code&gt;/usr/local/apache2/cgi-bin/&lt;/code&gt; から提供され、CGIプログラムとして扱われる必要があります。</target>
        </trans-unit>
        <trans-unit id="d9d5de4fafd9484d7eb41dad2c7eae30076b6ef2" translate="yes" xml:space="preserve">
          <source>The examples below are only a very basic idea to help you get started. Please read the documentation on the individual directives.</source>
          <target state="translated">以下の例は、あなたが始められるようにするための非常に基本的なアイデアに過ぎません。個々のディレクティブのドキュメントを読んでください。</target>
        </trans-unit>
        <trans-unit id="446ba0823444c3f7de7bdc84f4cc0c431059da11" translate="yes" xml:space="preserve">
          <source>The examples below demonstrate how to configure HTTP/2 for backend connections for a reverse proxy.</source>
          <target state="translated">以下の例は、リバースプロキシのバックエンド接続用に HTTP/2 を設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c27f602a7b41ee92c47fec2920336f02c13b2630" translate="yes" xml:space="preserve">
          <source>The exec Element</source>
          <target state="translated">exec 要素</target>
        </trans-unit>
        <trans-unit id="ef238a3bf07c64a37b252489331b6a72b1dc9519" translate="yes" xml:space="preserve">
          <source>The expiry time can be fine-tuned by adding several '&lt;var&gt;num&lt;/var&gt;&lt;var&gt;type&lt;/var&gt;' clauses:</source>
          <target state="translated">有効期限は、いくつかの「 &lt;var&gt;num&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; 」句を追加することで微調整できます。</target>
        </trans-unit>
        <trans-unit id="f293622fa4fe21416c173e20a2b11951cb5e802e" translate="yes" xml:space="preserve">
          <source>The explicit types have no quality factor, so they default to a preference of 1.0 (the highest). The wildcard */* is given a low preference of 0.01, so other types will only be returned if no variant matches an explicitly listed type.</source>
          <target state="translated">明示的な型は品質係数を持たないので、デフォルトではプリファレンスは 1.0 (最も高い)になります。ワイルドカード */*には 0.01 の低い優先度が与えられているため、他の型は明示的にリストされた型にマッチする variant がない場合にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="c124e00bea83e7c2cada641fbd72b723cdf7e044" translate="yes" xml:space="preserve">
          <source>The expression parser provides a number of variables of the form &lt;code&gt;%{HTTP_HOST}&lt;/code&gt;. Note that the value of a variable may depend on the phase of the request processing in which it is evaluated. For example, an expression used in an &lt;code&gt;&amp;lt;If &amp;gt;&lt;/code&gt; directive is evaluated before authentication is done. Therefore, &lt;code&gt;%{REMOTE_USER}&lt;/code&gt; will not be set in this case.</source>
          <target state="translated">式パーサーは、 &lt;code&gt;%{HTTP_HOST}&lt;/code&gt; という形式の多数の変数を提供します。変数の値は、それが評価される要求処理のフェーズに依存する場合があることに注意してください。たとえば、 &lt;code&gt;&amp;lt;If &amp;gt;&lt;/code&gt; ディレクティブで使用される式は、認証が行われる前に評価されます。したがって、この場合、 &lt;code&gt;%{REMOTE_USER}&lt;/code&gt; は設定されません。</target>
        </trans-unit>
        <trans-unit id="50ac8787dcb552724f2db8b91c2b99d9ff33c1e4" translate="yes" xml:space="preserve">
          <source>The factor used to compute an expiry date based on the LastModified date.</source>
          <target state="translated">LastModified日付に基づいて有効期限を計算するために使用される係数。</target>
        </trans-unit>
        <trans-unit id="6180b474e57965adbb8b571c65ff0907607596f2" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;/etc/apache2/productmap.txt&lt;/code&gt; then contains the following:</source>
          <target state="translated">ファイル &lt;code&gt;/etc/apache2/productmap.txt&lt;/code&gt; には、次のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="9ead42fcf2ee9757567c9aee8562d8df2b694396" translate="yes" xml:space="preserve">
          <source>The file contains lines in the following format:</source>
          <target state="translated">ファイルには以下の形式の行が含まれています。</target>
        </trans-unit>
        <trans-unit id="6a733e7b8acf1f8d16b6505cee36ea17e388d4b4" translate="yes" xml:space="preserve">
          <source>The file contains lines in the format of the arguments to an &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">ファイルには、 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; ディレクティブへの引数の形式の行が含まれています。</target>
        </trans-unit>
        <trans-unit id="c5966d6285339f181c9a0c88619b5c76d015f532" translate="yes" xml:space="preserve">
          <source>The file is constructed from a plain text file format using the &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; utility.</source>
          <target state="translated">ファイルは、 &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; ユーティリティを使用してプレーンテキストファイル形式から作成されます。</target>
        </trans-unit>
        <trans-unit id="47494a91a04a2be6894ff1b2ce4ba220bbe67996" translate="yes" xml:space="preserve">
          <source>The file name that the request maps to, f.x. /www/example.com/foo.txt. This can be changed in the translate-name or map-to-storage phases of a request to allow the default handler (or script handlers) to serve a different file than what was requested.</source>
          <target state="translated">リクエストがマップされるファイル名。/www/example.com/foo.txt となります。これは、リクエストの translate-name あるいは map-to-storage の段階で変更することができ、 デフォルトのハンドラ (あるいはスクリプトハンドラ)がリクエストされたものとは異なるファイルを提供できるようにします。</target>
        </trans-unit>
        <trans-unit id="6eaac7c1184a34a3487c15f919396e8da3ce4d30" translate="yes" xml:space="preserve">
          <source>The file path specified may be an absolute path, or may be relative to the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">指定されたファイルパスは、絶対パスでも、 &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; ディレクトリからの相対パスでもかまいません。</target>
        </trans-unit>
        <trans-unit id="5047164e45cdf64b0945f3bd1ab5a88e39d97f1a" translate="yes" xml:space="preserve">
          <source>The file's i-node number will be included in the calculation</source>
          <target state="translated">ファイルのi-node番号は計算に含まれます。</target>
        </trans-unit>
        <trans-unit id="43626d29683d32819cdca50a6774e50358a8793d" translate="yes" xml:space="preserve">
          <source>The filename (excluding directories) of the document requested by the user.</source>
          <target state="translated">ユーザーが要求した文書のファイル名(ディレクトリを除く)。</target>
        </trans-unit>
        <trans-unit id="95ec4d991866b16747e3bb2049e13d416571070e" translate="yes" xml:space="preserve">
          <source>The filename of the DBM format file. Usually without the extension &lt;code&gt;.db&lt;/code&gt;, &lt;code&gt;.pag&lt;/code&gt;, or &lt;code&gt;.dir&lt;/code&gt;.</source>
          <target state="translated">DBM形式ファイルのファイル名。通常、拡張子 &lt;code&gt;.db&lt;/code&gt; 、 &lt;code&gt;.pag&lt;/code&gt; 、または &lt;code&gt;.dir&lt;/code&gt; なし。</target>
        </trans-unit>
        <trans-unit id="c88f71cc0c4c462408054277d6f114a5f078402b" translate="yes" xml:space="preserve">
          <source>The filename of the DBM format file. Usually without the extension &lt;code&gt;.db&lt;/code&gt;, &lt;code&gt;.pag&lt;/code&gt;, or &lt;code&gt;.dir&lt;/code&gt;. If &lt;code&gt;-c&lt;/code&gt; is given, the DBM file is created if it does not already exist, or updated if it does exist.</source>
          <target state="translated">DBM形式ファイルのファイル名。通常、拡張子 &lt;code&gt;.db&lt;/code&gt; 、 &lt;code&gt;.pag&lt;/code&gt; 、または &lt;code&gt;.dir&lt;/code&gt; なし。場合は &lt;code&gt;-c&lt;/code&gt; が与えられ、それが存在しない場合、それはすでに存在している、または更新されていない場合は、DBMファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="fe5b8aa7b8c10305cd35951e45318739870c71f3" translate="yes" xml:space="preserve">
          <source>The filename prefix of the socket to use for communication with the cgi daemon</source>
          <target state="translated">cgi デーモンとの通信に使用するソケットのファイル名のプレフィックス</target>
        </trans-unit>
        <trans-unit id="cadf20c508308ce10cfb4e1327ab640f97714c42" translate="yes" xml:space="preserve">
          <source>The files in the &lt;code&gt;modules/examples&lt;/code&gt; directory under the Apache distribution directory tree are provided as an example to those that wish to write modules that use the Apache API.</source>
          <target state="translated">Apache配布ディレクトリツリーの下の &lt;code&gt;modules/examples&lt;/code&gt; ディレクトリにあるファイルは、Apache APIを使用するモジュールを記述したい人への例として提供されています。</target>
        </trans-unit>
        <trans-unit id="0aac3c856b2670553ad178db632945b48051f2ec" translate="yes" xml:space="preserve">
          <source>The files in this directory have to be PEM-encoded and are accessed through hash filenames. So usually you can't just place the Certificate files there: you also have to create symbolic links named &lt;em&gt;hash-value&lt;/em&gt;&lt;code&gt;.N&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">このディレクトリ内のファイルはPEMエンコードされている必要があり、ハッシュファイル名を介してアクセスされます。そのため、通常は証明書ファイルをそこに置くだけではなく、&lt;em&gt;hash-value &lt;/em&gt; &lt;code&gt;.N&lt;/code&gt; という名前のシンボリックリンクを作成する必要があります。また、このディレクトリに適切なシンボリックリンクが含まれていることを常に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf87efe5f6a2fc3fba471cf2cc1a217803ea641a" translate="yes" xml:space="preserve">
          <source>The files in this directory have to be PEM-encoded and are accessed through hash filenames. So usually you have not only to place the CRL files there. Additionally you have to create symbolic links named &lt;em&gt;hash-value&lt;/em&gt;&lt;code&gt;.rN&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">このディレクトリ内のファイルはPEMエンコードされている必要があり、ハッシュファイル名を介してアクセスされます。そのため、通常はそこにCRLファイルを配置するだけではありません。さらに、&lt;em&gt;hash-value &lt;/em&gt; &lt;code&gt;.rN&lt;/code&gt; という名前のシンボリックリンクを作成する必要があります。また、このディレクトリに適切なシンボリックリンクが含まれていることを常に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="c5b24c8ab47a37726d2733534568af7f7d02e0c1" translate="yes" xml:space="preserve">
          <source>The files in this directory must be PEM-encoded and are accessed through hash filenames. Additionally, you must create symbolic links named &lt;code&gt;&lt;em&gt;hash-value&lt;/em&gt;.N&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">このディレクトリ内のファイルはPEMエンコードされている必要があり、ハッシュファイル名を介してアクセスされます。さらに、 &lt;code&gt;&lt;em&gt;hash-value&lt;/em&gt;.N&lt;/code&gt; という名前のシンボリックリンクを作成する必要があります。また、このディレクトリに適切なシンボリックリンクが含まれていることを常に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="bbd70c3be1f7b3e9d1de2ebd7672ed49dd46c786" translate="yes" xml:space="preserve">
          <source>The files may also include intermediate CA certificates, sorted from leaf to root. This is supported with version 2.4.8 and later, and obsoletes &lt;code&gt;&lt;a href=&quot;#sslcertificatechainfile&quot;&gt;SSLCertificateChainFile&lt;/a&gt;&lt;/code&gt;. When running with OpenSSL 1.0.2 or later, this allows to configure the intermediate CA chain on a per-certificate basis.</source>
          <target state="translated">ファイルには、リーフからルートにソートされた中間CA証明書も含まれる場合があります。これはバージョン &lt;code&gt;&lt;a href=&quot;#sslcertificatechainfile&quot;&gt;SSLCertificateChainFile&lt;/a&gt;&lt;/code&gt; 以降でサポートされており、SSLCertificateChainFileを廃止します。OpenSSL 1.0.2以降で実行すると、証明書ごとに中間CAチェーンを構成できます。</target>
        </trans-unit>
        <trans-unit id="d2c5184b15e7869027df2b5aa39127db3e0b435e" translate="yes" xml:space="preserve">
          <source>The filter cannot work on byteranges and requires complete input</source>
          <target state="translated">このフィルタは範囲内では動作せず、完全な入力を必要とします。</target>
        </trans-unit>
        <trans-unit id="24429a17e1c77ce4894a9f8ce0255bd27a1ef0cc" translate="yes" xml:space="preserve">
          <source>The filter changes the content, but will not change the content length</source>
          <target state="translated">このフィルタは内容を変更しますが、内容の長さは変更しません。</target>
        </trans-unit>
        <trans-unit id="e55d303826a4228da4391f744a83be4abb0b394c" translate="yes" xml:space="preserve">
          <source>The filter renders the output uncacheable (eg by introducing randomised content changes)</source>
          <target state="translated">フィルタは出力をキャッシュ不可能な状態にします (ランダムな内容の変更を導入するなど)。</target>
        </trans-unit>
        <trans-unit id="101c835d992113b0c73e1468184c406bedbe6d86" translate="yes" xml:space="preserve">
          <source>The filter should not run in a proxy context</source>
          <target state="translated">フィルタはプロキシコンテキストで実行されるべきではありません</target>
        </trans-unit>
        <trans-unit id="3e263e083bba97624c6b0babbc68f0f0a6ce32f9" translate="yes" xml:space="preserve">
          <source>The filter takes no parameters, and can be added to the filter stack using the &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; directive, or any of the directives supported by the &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">フィルターはパラメーターを取りません &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; ディレクティブ、または &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; モジュールでサポートされている任意のディレクティブを使用してフィルタースタックに追加できます。</target>
        </trans-unit>
        <trans-unit id="d1855cf5afe80bf22b3dff00861a7a6506638069" translate="yes" xml:space="preserve">
          <source>The filter transforms the response in a manner incompatible with the HTTP &lt;code&gt;Cache-Control: no-transform&lt;/code&gt; header.</source>
          <target state="translated">フィルターは、HTTP &lt;code&gt;Cache-Control: no-transform&lt;/code&gt; ヘッダーと互換性のない方法で応答を変換します。</target>
        </trans-unit>
        <trans-unit id="c781bc4a7740f1c90532f1408b736abf2be7f54f" translate="yes" xml:space="preserve">
          <source>The final (optional) argument is the type of filter, and takes values of &lt;code&gt;ap_filter_type&lt;/code&gt; - namely &lt;code&gt;RESOURCE&lt;/code&gt; (the default), &lt;code&gt;CONTENT_SET&lt;/code&gt;, &lt;code&gt;PROTOCOL&lt;/code&gt;, &lt;code&gt;TRANSCODE&lt;/code&gt;, &lt;code&gt;CONNECTION&lt;/code&gt; or &lt;code&gt;NETWORK&lt;/code&gt;.</source>
          <target state="translated">最後の（オプションの）引数はフィルターのタイプであり、 &lt;code&gt;ap_filter_type&lt;/code&gt; の値、つまり &lt;code&gt;RESOURCE&lt;/code&gt; （デフォルト）、 &lt;code&gt;CONTENT_SET&lt;/code&gt; 、 &lt;code&gt;PROTOCOL&lt;/code&gt; 、 &lt;code&gt;TRANSCODE&lt;/code&gt; 、 &lt;code&gt;CONNECTION&lt;/code&gt; または &lt;code&gt;NETWORK&lt;/code&gt; の値を取ります。</target>
        </trans-unit>
        <trans-unit id="3e4c3140f70cf7dde3f30824b0604cbd056effd0" translate="yes" xml:space="preserve">
          <source>The first 1 to 3 bytes of an IP address, for subnet restriction.</source>
          <target state="translated">サブネット制限のためのIPアドレスの最初の1~3バイト。</target>
        </trans-unit>
        <trans-unit id="7ac972ce57fb2f5670c2bd9f6002db4fe390545d" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;Data&lt;/code&gt; packet is send immediately after the &lt;code&gt;Forward Request&lt;/code&gt; by the web server.</source>
          <target state="translated">最初の &lt;code&gt;Data&lt;/code&gt; パケットは、Webサーバーによる &lt;code&gt;Forward Request&lt;/code&gt; 直後に送信されます。</target>
        </trans-unit>
        <trans-unit id="30f0b8a0dc7eab486eb48e1f35e8fe934f8f02d7" translate="yes" xml:space="preserve">
          <source>The first argument to this directive is always &lt;code&gt;from&lt;/code&gt;. The subsequent arguments can take three different forms. If &lt;code&gt;Allow from all&lt;/code&gt; is specified, then all hosts are allowed access, subject to the configuration of the &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directives as discussed below. To allow only particular hosts or groups of hosts to access the server, the &lt;em&gt;host&lt;/em&gt; can be specified in any of the following formats:</source>
          <target state="translated">このディレクティブの最初の引数は常に &lt;code&gt;from&lt;/code&gt; です。後続の引数は、3つの異なる形式をとることができます。場合は &lt;code&gt;Allow from all&lt;/code&gt; の構成には、すべてのホストのアクセスが許可され、対象指定されて &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; し、 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; ディレクティブを以下に説明するように。特定のホストまたはホストのグループのみがサーバーにアクセスできるようにするには、&lt;em&gt;ホスト&lt;/em&gt;を次のいずれかの形式で指定できます。</target>
        </trans-unit>
        <trans-unit id="5fc3086875477762bc3dc00cd14f470c5394e9a9" translate="yes" xml:space="preserve">
          <source>The first argument, which specifies the location to which the logs will be written, can take one of the following two types of values:</source>
          <target state="translated">最初の引数は、ログが書き込まれる場所を指定するもので、以下の2種類の値のうちの1つを取ることができます。</target>
        </trans-unit>
        <trans-unit id="6157c08a86fbf50f075792ad4a81ee1c178d09cc" translate="yes" xml:space="preserve">
          <source>The first column value of the first row returned by the query statement should be a string containing a URL to which to redirect the client. Subsequent rows will be ignored. If no rows are returned, the client will not be redirected.</source>
          <target state="translated">クエリ文が返す最初の行の最初の列の値は、クライアントをリダイレクトするURLを含む文字列でなければなりません。それ以降の行は無視されます。返された行がない場合、クライアントはリダイレクトされません。</target>
        </trans-unit>
        <trans-unit id="d41bf8571ac14b078676654d3a32d2bd5997044f" translate="yes" xml:space="preserve">
          <source>The first column value of the first row returned by the query statement should be a string containing the encrypted password. Subsequent rows will be ignored. If no rows are returned, the user will not be authenticated through &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">クエリステートメントによって返される最初の行の最初の列の値は、暗号化されたパスワードを含む文字列である必要があります。後続の行は無視されます。行が返されない場合、ユーザーは &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; を介して認証されません。</target>
        </trans-unit>
        <trans-unit id="aec63ac2b6c8e76c613606bed4e6e99a9612d9da" translate="yes" xml:space="preserve">
          <source>The first example will list the number of attacks trying to exploit the &lt;a href=&quot;http://online.securityfocus.com/bid/4876/info/&quot;&gt;Apache Tomcat Source.JSP Malformed Request Information Disclosure Vulnerability&lt;/a&gt;, the second example will list the ten last denied clients, for example:</source>
          <target state="translated">最初の例は、&lt;a href=&quot;http://online.securityfocus.com/bid/4876/info/&quot;&gt;Apache Tomcat Source.JSPの不正な形式のリクエスト情報開示の脆弱性&lt;/a&gt;を悪用しようとする攻撃の数を一覧表示し、2番目の例は、最後に拒否されたクライアントの一覧を10件表示します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b7d1a374c6a9f0d209ecf22a05b0088b646197aa" translate="yes" xml:space="preserve">
          <source>The first item in the log entry is the date and time of the message. The next is the module producing the message (core, in this case) and the severity level of that message. This is followed by the process ID and, if appropriate, the thread ID, of the process that experienced the condition. Next, we have the client address that made the request. And finally is the detailed error message, which in this case indicates a request for a file that did not exist.</source>
          <target state="translated">ログエントリの最初の項目は、メッセージの日時です。次に、メッセージを生成したモジュール (この場合は core)と、そのメッセージの深刻度レベルです。これに続いて、その状態を経験したプロセスのプロセス ID と、必要であればスレッド ID が続きます。次に、リクエストを行ったクライアントアドレスがあります。最後に、詳細なエラーメッセージが続きます。この例では、存在しないファイルへのリクエストを示しています。</target>
        </trans-unit>
        <trans-unit id="68d54322f28d5bf48ee344f8b3df3f64b04ebb4e" translate="yes" xml:space="preserve">
          <source>The first line logs the forensic ID, the request line and all received headers, separated by pipe characters (&lt;code&gt;|&lt;/code&gt;). A sample line looks like the following (all on one line):</source>
          <target state="translated">1行目は、フォレンジックID、要求行、および受信したすべてのヘッダーをパイプ文字（ &lt;code&gt;|&lt;/code&gt; ）で区切って記録します。サンプル行は次のようになります（すべて1行で）。</target>
        </trans-unit>
        <trans-unit id="0e7b158bb06bec31c0763bf0238ec3ab1a1d0e3e" translate="yes" xml:space="preserve">
          <source>The first name-based vhost in the configuration file for a given IP:port pair is significant because it is used for all requests received on that address and port for which no other vhost for that IP:port pair has a matching ServerName or ServerAlias. It is also used for all SSL connections if the server does not support &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;Server Name Indication&lt;/a&gt;.</source>
          <target state="translated">特定のIP：ポートペアの構成ファイルの最初の名前ベースの仮想ホストは、そのIP：ポートペアの他の仮想ホストが一致するServerNameまたはServerAliasを持たない、そのアドレスとポートで受信したすべての要求に使用されるため、重要です。サーバーが&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;サーバー名表示を&lt;/a&gt;サポートしていない場合は、すべてのSSL接続にも使用されます。</target>
        </trans-unit>
        <trans-unit id="9bfa2bd89fddb4c744d65cbd017c2d2ca1244cfa" translate="yes" xml:space="preserve">
          <source>The first noticeable thing after enabling HTTP/2 is that your server processes will start additional threads. The reason for this is that HTTP/2 gives all requests that it receives to its own &lt;em&gt;Worker&lt;/em&gt; threads for processing, collects the results and streams them out to the client.</source>
          <target state="translated">HTTP / 2を有効にした後の最初の注目すべきことは、サーバープロセスが追加のスレッドを開始することです。これは、HTTP / 2が受信したすべてのリクエストを独自の&lt;em&gt;ワーカー&lt;/em&gt;スレッドに渡して処理し、結果を収集してクライアントにストリーミングするためです。</target>
        </trans-unit>
        <trans-unit id="97700adcba07e04c42d1811b65ca8be4e6d022cc" translate="yes" xml:space="preserve">
          <source>The first of these is performance. When &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; is set to allow the use of &lt;code&gt;.htaccess&lt;/code&gt; files, httpd will look in every directory for &lt;code&gt;.htaccess&lt;/code&gt; files. Thus, permitting &lt;code&gt;.htaccess&lt;/code&gt; files causes a performance hit, whether or not you actually even use them! Also, the &lt;code&gt;.htaccess&lt;/code&gt; file is loaded every time a document is requested.</source>
          <target state="translated">これらの最初はパフォーマンスです。とき &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; ディレクティブが使用できるように設定されている &lt;code&gt;.htaccess&lt;/code&gt; ファイルを、httpdがために、すべてのディレクトリを検索します &lt;code&gt;.htaccess&lt;/code&gt; ファイル。したがって、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルを許可すると、実際にそれらを使用するかどうかに関係なく、パフォーマンスが低下します。また、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、ドキュメントが要求されるたびにロードされます。</target>
        </trans-unit>
        <trans-unit id="029c302dcd80aa48676cf7367958eef7953d357e" translate="yes" xml:space="preserve">
          <source>The first option is the default, while options 2-4 are configured using the &lt;code&gt;ErrorDocument&lt;/code&gt; directive, which is followed by the HTTP response code and a URL or a message. Apache httpd will sometimes offer additional information regarding the problem/error.</source>
          <target state="translated">最初のオプションはデフォルトですが、オプション2〜4は &lt;code&gt;ErrorDocument&lt;/code&gt; ディレクティブを使用して設定され、その後にHTTP応答コードとURLまたはメッセージが続きます。Apache httpdは問題/エラーに関する追加情報を提供することがあります。</target>
        </trans-unit>
        <trans-unit id="94f8a67cd37eb2850e164ab3ac25b42320a7fa87" translate="yes" xml:space="preserve">
          <source>The first option, the &lt;code&gt;%{isapi-parameter}n&lt;/code&gt; component, is always available and preferred.</source>
          <target state="translated">最初のオプションである &lt;code&gt;%{isapi-parameter}n&lt;/code&gt; コンポーネントは常に使用可能であり、推奨されます。</target>
        </trans-unit>
        <trans-unit id="5a7a32288b269ab2b4c1ebd4bb299a239650b2bc" translate="yes" xml:space="preserve">
          <source>The first reason is that the SSL implementation in some MSIE versions has some subtle bugs related to the HTTP keep-alive facility and the SSL close notify alerts on socket connection close. Additionally the interaction between SSL and HTTP/1.1 features are problematic in some MSIE versions. You can work around these problems by forcing Apache not to use HTTP/1.1, keep-alive connections or send the SSL close notify messages to MSIE clients. This can be done by using the following directive in your SSL-aware virtual host section:</source>
          <target state="translated">第一の理由は、MSIEのいくつかのバージョンのSSL実装には、HTTPキープアライブ機能とソケット接続終了時のSSL終了通知アラートに関連した微妙なバグがあることです。さらに、SSLとHTTP/1.1機能の間の相互作用には問題があります。これらの問題を回避するには、Apache が HTTP/1.1、キープアライブ接続を使わないようにしたり、MSIE クライアントに SSL 終了通知メッセージを送らないようにすることができます。これは SSL 対応のバーチャルホストセクションで以下のディレクティブを使うことで実現できます。</target>
        </trans-unit>
        <trans-unit id="a9d0156a3901ae81dd8de5afd846c26f2356bac7" translate="yes" xml:space="preserve">
          <source>The first risk is the increased load on the server. All SSI-enabled files have to be parsed by Apache, whether or not there are any SSI directives included within the files. While this load increase is minor, in a shared server environment it can become significant.</source>
          <target state="translated">最初のリスクはサーバの負荷の増加です。SSI を有効にしたファイルはすべて、ファイルに SSI ディレクティブが含まれているかどうかに関わらず、Apache によって解析されなければなりません。この負荷の増加は些細なものですが、共有サーバ環境では大きくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="f6b73aaef2cbd2a43fded172bb07ca854c5c1ece" translate="yes" xml:space="preserve">
          <source>The first step in upgrading is to read the release announcement and the file &lt;code&gt;CHANGES&lt;/code&gt; in the source distribution to find any changes that may affect your site. When changing between major releases (for example, from 2.0 to 2.2 or from 2.2 to 2.4), there will likely be major differences in the compile-time and run-time configuration that will require manual adjustments. All modules will also need to be upgraded to accommodate changes in the module API.</source>
          <target state="translated">アップグレードの最初のステップは、サイトに影響を与える可能性のある変更を見つけるために、ソースディストリビューションのリリースアナウンスとファイル &lt;code&gt;CHANGES&lt;/code&gt; を読むことです。メジャーリリース間で変更する場合（たとえば、2.0から2.2、または2.2から2.4）、コンパイル時とランタイムの構成に大きな違いがあり、手動で調整する必要があります。モジュールAPIの変更に対応するには、すべてのモジュールもアップグレードする必要があります。</target>
        </trans-unit>
        <trans-unit id="174fd266ae974fa3f20412a35787589c1b4fa011" translate="yes" xml:space="preserve">
          <source>The first step is to create a &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; block for each different host that you would like to serve. Inside each &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; block, you will need at minimum a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive to designate which host is served and a &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive to show where in the filesystem the content for that host lives.</source>
          <target state="translated">最初のステップは、サービスを提供する異なるホストごとに &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; ブロックを作成することです。各 &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; ブロック内には、提供されるホストを指定する &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; ディレクティブと、そのホストのコンテンツがファイルシステムのどこに存在するかを示す &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; ディレクティブが最低限必要です。</target>
        </trans-unit>
        <trans-unit id="cce3923408e3bdf8b23e6f53b7947dbc72be5092" translate="yes" xml:space="preserve">
          <source>The first step, Cipher Suite Negotiation, allows the client and server to choose a Cipher Suite supported by both of them. The SSL3.0 protocol specification defines 31 Cipher Suites. A Cipher Suite is defined by the following components:</source>
          <target state="translated">最初のステップである暗号化スイートのネゴシエーションでは、クライアントとサーバの両方がサポートする暗号化スイートを選択することができます。SSL3.0 プロトコル仕様では 31 の暗号スイートが定義されています。暗号スイートは以下のコンポーネントで定義されています。</target>
        </trans-unit>
        <trans-unit id="5e4076db35bf5f9a353ed8c8a7fcbf4949d31113" translate="yes" xml:space="preserve">
          <source>The first thing that &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; does when it is invoked is to locate and read the &lt;a href=&quot;configuring&quot;&gt;configuration file&lt;/a&gt;&lt;code&gt;httpd.conf&lt;/code&gt;. The location of this file is set at compile-time, but it is possible to specify its location at run time using the &lt;code&gt;-f&lt;/code&gt; command-line option as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; が呼び出されたときに最初に行うことは、&lt;a href=&quot;configuring&quot;&gt;構成ファイル&lt;/a&gt; &lt;code&gt;httpd.conf&lt;/code&gt; を見つけて読み取ることです。このファイルの場所はコンパイル時に設定されますが、次のように &lt;code&gt;-f&lt;/code&gt; コマンドラインオプションを使用して実行時にその場所を指定することができます。</target>
        </trans-unit>
        <trans-unit id="a3446f0974e5e98649916a2fa34c11e0c22e563c" translate="yes" xml:space="preserve">
          <source>The first thing you see written by your program should be a set of HTTP headers, including the &lt;code&gt;Content-Type&lt;/code&gt;, followed by a blank line. If you see anything else, Apache will return the &lt;code&gt;Premature end of script headers&lt;/code&gt; error if you try to run it through the server. See &lt;a href=&quot;#writing&quot;&gt;Writing a CGI program&lt;/a&gt; above for more details.</source>
          <target state="translated">プログラムによって最初に表示されるのは、 &lt;code&gt;Content-Type&lt;/code&gt; を含む一連のHTTPヘッダーで、その後に空白行が続くはずです。他に何かが表示された場合、サーバーを介して実行しようとすると、Apacheは &lt;code&gt;Premature end of script headers&lt;/code&gt; エラーを返します。詳細については&lt;a href=&quot;#writing&quot;&gt;、&lt;/a&gt;上記のCGIプログラムの作成を参照してください。</target>
        </trans-unit>
        <trans-unit id="c537a386088394bc14a860326ea0ea3976827ce8" translate="yes" xml:space="preserve">
          <source>The first three will set the environment variable &lt;code&gt;object_is_image&lt;/code&gt; if the request was for an image file, and the fourth sets &lt;code&gt;intra_site_referral&lt;/code&gt; if the referring page was somewhere on the &lt;code&gt;www.mydomain.example.com&lt;/code&gt; Web site.</source>
          <target state="translated">最初の3つは、リクエストが画像ファイルの場合、環境変数 &lt;code&gt;object_is_image&lt;/code&gt; を設定し、4番目は、参照ページが &lt;code&gt;www.mydomain.example.com&lt;/code&gt; Webサイトのどこかにある場合、 &lt;code&gt;intra_site_referral&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="7421920ec037506997ddec8865c41b16977011a0" translate="yes" xml:space="preserve">
          <source>The first time you're asked for a PEM pass-phrase, you should enter the old pass-phrase. After that, you'll be asked again to enter a pass-phrase - this time, use the new pass-phrase. If you are asked to verify the pass-phrase, you'll need to enter the new pass-phrase a second time.</source>
          <target state="translated">最初に PEM パスフレーズの入力を求められたときは、古いパスフレーズを入力してください。その後、再度パスフレーズの入力を求められますが、今回は新しいパスフレーズを使用してください。パスフレーズの確認を求められた場合は、新しいパスフレーズをもう一度入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="85bbf12629188ddd61e1a69ee6d5389210074dd2" translate="yes" xml:space="preserve">
          <source>The first tool to mention is of course &lt;a href=&quot;https://curl.haxx.se&quot;&gt;curl&lt;/a&gt;. Please make sure that your version supports HTTP/2 checking its &lt;code&gt;Features&lt;/code&gt;:</source>
          <target state="translated">言及する最初のツールはもちろん&lt;a href=&quot;https://curl.haxx.se&quot;&gt;curl&lt;/a&gt;です。お使いのバージョンがHTTP / 2の &lt;code&gt;Features&lt;/code&gt; チェックをサポートしていることを確認してください：</target>
        </trans-unit>
        <trans-unit id="98c4bf8eb47329190bb02fe91ca655dcc4d37eb1" translate="yes" xml:space="preserve">
          <source>The first vhost in the config file with the specified IP address has the highest priority and catches any request to an unknown server name, or a request without a &lt;code&gt;Host:&lt;/code&gt; header field (such as a HTTP/1.0 request).</source>
          <target state="translated">指定されたIPアドレスを持つ構成ファイルの最初の仮想ホストは最高の優先順位を持ち、不明なサーバー名への要求、または &lt;code&gt;Host:&lt;/code&gt; ヘッダーフィールドのない要求（HTTP / 1.0要求など）をキャッチします。</target>
        </trans-unit>
        <trans-unit id="defee8cfbb291b8c87eed3b856a2929e51e55d36" translate="yes" xml:space="preserve">
          <source>The flastmod Element</source>
          <target state="translated">flastmod 要素</target>
        </trans-unit>
        <trans-unit id="4bf6219f21126a479dd87d1fd5585ee39b3df2e1" translate="yes" xml:space="preserve">
          <source>The following &lt;em&gt;source&lt;/em&gt; variants are available:</source>
          <target state="translated">次の&lt;em&gt;ソース&lt;/em&gt;バリアントが利用可能です。</target>
        </trans-unit>
        <trans-unit id="1ebb4210ccb9ea52ca885e5f164cb82d28adce37" translate="yes" xml:space="preserve">
          <source>The following alternative syntax is possible; however, it can carry a performance penalty when present in very large numbers. The advantage of the below syntax is that it allows for dynamic control via the &lt;a href=&quot;mod_proxy_balancer#balancer_manager&quot;&gt;Balancer Manager&lt;/a&gt; interface:</source>
          <target state="translated">次の代替構文が可能です。ただし、非常に多く存在すると、パフォーマンスが低下する可能性があります。以下の構文の利点は、&lt;a href=&quot;mod_proxy_balancer#balancer_manager&quot;&gt;Balancer Manager&lt;/a&gt;インターフェースを介して動的に制御できることです。</target>
        </trans-unit>
        <trans-unit id="125892547d9e1f1a97e359fb0562091a5e9215b1" translate="yes" xml:space="preserve">
          <source>The following are potential features which are not currently implemented:</source>
          <target state="translated">現在実装されていない機能としては、以下のようなものが考えられます。</target>
        </trans-unit>
        <trans-unit id="513cb1d786d7d9a601e630075e820defd03d59db" translate="yes" xml:space="preserve">
          <source>The following are the minimal building blocks you will need, in order to write regular expressions and &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;s. They certainly do not represent a complete regular expression vocabulary, but they are a good place to start, and should help you read basic regular expressions, as well as write your own.</source>
          <target state="translated">以下は、正規表現と &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; を記述するために必要な最小限の構成要素です。これらは完全な正規表現の語彙を表すものではありませんが、始めるのに適した場所であり、基本的な正規表現を読んだり、独自の正規表現を記述したりするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="5db817bcf383ba7b1632947d3d07ce78160d42c8" translate="yes" xml:space="preserve">
          <source>The following arguments are available only on the &lt;a href=&quot;../platform/windows&quot;&gt;Windows platform&lt;/a&gt;:</source>
          <target state="translated">次の引数は、&lt;a href=&quot;../platform/windows&quot;&gt;Windowsプラットフォームで&lt;/a&gt;のみ使用できます。</target>
        </trans-unit>
        <trans-unit id="726d2115205ddfff92f646f82f0140ea5b6f6c97" translate="yes" xml:space="preserve">
          <source>The following asymmetric configuration works as one would expect:</source>
          <target state="translated">以下の非対称構成は、期待通りに動作します。</target>
        </trans-unit>
        <trans-unit id="07446e59eb635bfa9518391149f9eb0bc0737890" translate="yes" xml:space="preserve">
          <source>The following authz provider function takes two arguments, one ip address and one user name. It will allow access from the given ip address without authentication, or if the authenticated user matches the second argument:</source>
          <target state="translated">次の authz プロバイダ関数は二つの引数をとります。これは認証なしで与えられたIPアドレスからのアクセスを許可するか、認証されたユーザが第二引数にマッチした場合にアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="ed493f233dae242ff808b59efb48eb407811497b" translate="yes" xml:space="preserve">
          <source>The following combinations for &lt;em&gt;MapType&lt;/em&gt; and &lt;em&gt;MapSource&lt;/em&gt; can be used:</source>
          <target state="translated">&lt;em&gt;MapType&lt;/em&gt;と&lt;em&gt;MapSource&lt;/em&gt;の次の組み合わせを使用できます。</target>
        </trans-unit>
        <trans-unit id="dc8a3b6fe926010e0d55eb36519849a9a5f7d6ba" translate="yes" xml:space="preserve">
          <source>The following configuration registers this function as provider &lt;code&gt;foo&lt;/code&gt; and configures it for URL &lt;code&gt;/&lt;/code&gt;:</source>
          <target state="translated">次の構成では、この関数をプロバイダー &lt;code&gt;foo&lt;/code&gt; として登録し、URL &lt;code&gt;/&lt;/code&gt; に構成します。</target>
        </trans-unit>
        <trans-unit id="77c6aa3a0bd162cebfa46aecf9d3a67ca12dbc01" translate="yes" xml:space="preserve">
          <source>The following development tools are required to build Apache 2.0 for NetWare:</source>
          <target state="translated">Apache 2.0 for NetWareを構築するには、以下の開発ツールが必要です。</target>
        </trans-unit>
        <trans-unit id="db57499bb1048dcbef69acac28d3e2a16750f9d2" translate="yes" xml:space="preserve">
          <source>The following directive must be given for the directories containing the shtml files (typically in a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section, but this directive is also valid in &lt;code&gt;.htaccess&lt;/code&gt; files if &lt;code&gt;&lt;a href=&quot;core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Options&lt;/code&gt; is set):</source>
          <target state="translated">次のディレクティブは、shtmlファイルを含むディレクトリに指定する必要があります（通常は &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションにありますが、 &lt;code&gt;&lt;a href=&quot;core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Options&lt;/code&gt; が設定されている場合、このディレクティブは &lt;code&gt;.htaccess&lt;/code&gt; ファイルでも有効です）。</target>
        </trans-unit>
        <trans-unit id="d7dbbd072909d8992f4e3577ed393591a7dc1581" translate="yes" xml:space="preserve">
          <source>The following directive will activate files ending with &lt;code&gt;.map&lt;/code&gt; as imagemap files:</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;.map&lt;/code&gt; で終わるファイルをイメージマップファイルとしてアクティブにします。</target>
        </trans-unit>
        <trans-unit id="4406af64a2b45d500406e18c0afd6e2d6b245cd9" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to a specific DN:</source>
          <target state="translated">以下のディレクティブは、特定の DN へのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="f2b43fff348f8eb248434ef2d9228b63ae021737" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone having a cell phone and is in the marketing department</source>
          <target state="translated">次の指令は、携帯電話を持っていてマーケティング部門にいる人にアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="b90eedea2e5cc54f9702ae2f964290e3c7edcb0c" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone with the attribute employeeType = active</source>
          <target state="translated">以下のディレクティブは、属性が employeeType=active の人にアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="6d7a9a36086207e35d587ab2f30426642297e166" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone with the city attribute equal to &quot;San Jose&quot; or status equal to &quot;Active&quot;</source>
          <target state="translated">以下のディレクティブは、都市属性が &quot;San Jose&quot; またはステータスが &quot;Active&quot; の人にアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="042027bd558ecdd08ced5b3adf02c5dd2a6cff7a" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to both Fred and Barbara:</source>
          <target state="translated">次の指令は、フレッドとバーバラの両方に アクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="adf1d28c9a3ec86276742cfd3a24cd2d292d2737" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride AuthConfig&lt;/code&gt; is in effect. They give .htaccess users control over the authentication and authorization methods that are applied to their directory subtrees, including several related utility directives for session handling and TLS settings.</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;AllowOverride AuthConfig&lt;/code&gt; が有効な場合に.htaccessファイルで許可されます。.htaccessユーザーは、セッション処理やTLS設定に関連するいくつかのユーティリティディレクティブを含め、ディレクトリサブツリーに適用される認証および承認方法を制御できます。</target>
        </trans-unit>
        <trans-unit id="7140417e5279809f9cd94b2e2eb7663dad4d30e6" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride FileInfo&lt;/code&gt; is in effect. They give .htaccess users a wide range of control over the responses and metadata given by the server.</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;AllowOverride FileInfo&lt;/code&gt; が有効な場合に.htaccessファイルで許可されます。.htaccessユーザーは、サーバーから提供される応答とメタデータを広範囲に制御できます。</target>
        </trans-unit>
        <trans-unit id="edeabc0e823b54abc2b6fff0b58597cb371c1a1a" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Indexes&lt;/code&gt; is in effect. They allow .htaccess users to control aspects of the directory index pages provided by the server, including autoindex generation.</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;AllowOverride Indexes&lt;/code&gt; が有効な場合に.htaccessファイルで許可されます。.htaccessユーザーは、自動インデックスの生成など、サーバーが提供するディレクトリインデックスページの側面を制御できます。</target>
        </trans-unit>
        <trans-unit id="9554136127854e93ef63d2854d02d8731e1e9eb6" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Limit&lt;/code&gt; is in effect. This extremely narrow override type mostly allows the use of the legacy authorization directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;AllowOverride Limit&lt;/code&gt; が有効な場合に.htaccessファイルで許可されます。この非常に狭いオーバーライドタイプでは、ほとんどの場合、 &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; によって提供されるレガシー認証ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="e113b96d25ff7512bf58282d77358d8358448a2f" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Options&lt;/code&gt; is in effect. They give .htaccess users access to &lt;code&gt;Options&lt;/code&gt; and similar directives, as well as directives that control the filter chain.</source>
          <target state="translated">次のディレクティブは、 &lt;code&gt;AllowOverride Options&lt;/code&gt; が有効な場合に.htaccessファイルで許可されます。.htaccessユーザーは、 &lt;code&gt;Options&lt;/code&gt; や類似のディレクティブ、およびフィルターチェーンを制御するディレクティブにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9db760b0253bf0fb54c2dfaa46490159914264db" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in any .htaccess file, as long as overrides are enabled in the server configuration.</source>
          <target state="translated">以下のディレクティブは、サーバ設定でオーバーライドが有効になっている限り、 どの .htaccess ファイルでも許可されています。</target>
        </trans-unit>
        <trans-unit id="4ed8a1798466c82f879d348adb19370c08e3cb72" translate="yes" xml:space="preserve">
          <source>The following directives are used during the search/bind phase</source>
          <target state="translated">検索/バインドの段階では、以下のディレクティブが使用されます。</target>
        </trans-unit>
        <trans-unit id="4424dd417d314ba04529a8553907df155fce5761" translate="yes" xml:space="preserve">
          <source>The following directives will cause requests for files with the &lt;code&gt;html&lt;/code&gt; extension to trigger the launch of the &lt;code&gt;footer.pl&lt;/code&gt; CGI script.</source>
          <target state="translated">次のディレクティブを使用すると、 &lt;code&gt;html&lt;/code&gt; 拡張子が付いたファイルを要求すると、 &lt;code&gt;footer.pl&lt;/code&gt; CGIスクリプトが起動します。</target>
        </trans-unit>
        <trans-unit id="ddbec702687e0e14ba2126702bd2c74dc2377800" translate="yes" xml:space="preserve">
          <source>The following directives will enable the &lt;code&gt;send-as-is&lt;/code&gt; handler, which is used for files which contain their own HTTP headers. All files in the &lt;code&gt;/web/htdocs/asis/&lt;/code&gt; directory will be processed by the &lt;code&gt;send-as-is&lt;/code&gt; handler, regardless of their filename extensions.</source>
          <target state="translated">以下のディレクティブは、独自のHTTPヘッダーを含むファイルに使用される &lt;code&gt;send-as-is&lt;/code&gt; ハンドラーを有効にします。 &lt;code&gt;/web/htdocs/asis/&lt;/code&gt; ディレクトリ内のすべてのファイルは、ファイル名拡張子に関係なく、 &lt;code&gt;send-as-is&lt;/code&gt; ハンドラーによって処理されます。</target>
        </trans-unit>
        <trans-unit id="7bec93683c3565f3b25b04800ec2a50ac937ca3c" translate="yes" xml:space="preserve">
          <source>The following directives will send redirects to the client:</source>
          <target state="translated">以下のディレクティブはクライアントにリダイレクトを送信します。</target>
        </trans-unit>
        <trans-unit id="1d4c99bfa0ac86758e56268001df64eb4b8ff162" translate="yes" xml:space="preserve">
          <source>The following directives would allow access for Bob Ellis, Tom Jackson, Barbara Jenson, Fred User, Allan Jefferson, and Paul Tilley but would not allow access for Jim Swenson, or Elliot Rhodes (since they are at a sub-group depth of 2):</source>
          <target state="translated">以下のディレクティブは、Bob Ellis、Tom Jackson、Barbara Jenson、Fred User、Allan Jefferson、Paul Tilley にはアクセスを許可しますが、Jim Swenson、Elliot Rhodes にはアクセスを許可しません (彼らはサブグループの深さが 2 なので)。</target>
        </trans-unit>
        <trans-unit id="013645ff7e3343a02ddf3c2b114662d4bbe80b92" translate="yes" xml:space="preserve">
          <source>The following enables only the strongest ciphers:</source>
          <target state="translated">以下では、最強の暗号のみを可能にします。</target>
        </trans-unit>
        <trans-unit id="42994768ff17511f9ccd549fecda95f59da378c7" translate="yes" xml:space="preserve">
          <source>The following example allows a front-end machine to proxy a virtual host through to a server running on another machine. In the example, a virtual host of the same name is configured on a machine at &lt;code&gt;192.168.111.2&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypreservehost&quot;&gt;ProxyPreserveHost On&lt;/a&gt;&lt;/code&gt; directive is used so that the desired hostname is passed through, in case we are proxying multiple hostnames to a single machine.</source>
          <target state="translated">次の例では、フロントエンドマシンが別のマシンで実行されているサーバーに仮想ホストをプロキシできるようにします。この例では、同じ名前の仮想ホストが &lt;code&gt;192.168.111.2&lt;/code&gt; のマシンに構成されています。 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypreservehost&quot;&gt;ProxyPreserveHost On&lt;/a&gt;&lt;/code&gt; 希望するホスト名が通過しているように、ディレクティブは、ケースには、我々は、単一のマシンに複数のホスト名をプロキシする、使用されています。</target>
        </trans-unit>
        <trans-unit id="18bd0fe55eb29cb029dbc20ab5a44248327b3d0c" translate="yes" xml:space="preserve">
          <source>The following example grants access if the user is authenticated either with a client certificate or by username and password.</source>
          <target state="translated">次の例では、クライアント証明書またはユーザー名とパスワードで認証されたユーザーにアクセスを許可しています。</target>
        </trans-unit>
        <trans-unit id="5c10e5f4f2b54b3b5138e95bf49a07364db0f12d" translate="yes" xml:space="preserve">
          <source>The following example passes the request URI as a filesystem path for the PHP-FPM daemon to run. In this case, PHP-FPM is listening on a unix domain socket (UDS). Requires 2.4.9 or later. With this syntax, the hostname and optional port following fcgi:// are ignored.</source>
          <target state="translated">次の例では、PHP-FPM デーモンが実行するファイルシステムのパスとして リクエスト URI を渡しています。この例では、PHP-FPM は unix ドメインソケット (UDS)を使用しています。2.4.9 以降が必要です。この構文では、fcgi://に続くホスト名とオプションのポートは無視されます。</target>
        </trans-unit>
        <trans-unit id="bc71fac899d725e96aa6d4e6047eb8ef0a8e4fa3" translate="yes" xml:space="preserve">
          <source>The following example passes the request URI as a filesystem path for the PHP-FPM daemon to run. The request URL is implicitly added to the 2nd parameter. The hostname and port following fcgi:// are where PHP-FPM is listening. Connection pooling/reuse is enabled.</source>
          <target state="translated">次の例は、PHP-FPM デーモンを実行するためのファイルシステムのパスとして リクエスト URI を渡しています。リクエストURLは、暗黙のうちに2番目のパラメータに追加されます。fcgi://に続くホスト名とポートは、PHP-FPM がリッスンしている場所です。接続のプール/再利用が有効になっています。</target>
        </trans-unit>
        <trans-unit id="e0526be1decb7766bad445fc5b7f03fea745b689" translate="yes" xml:space="preserve">
          <source>The following example sets an environment variable called 'image' to a value of '1' if the requested URI is an image file. Then, that environment variable is used to exclude those requests from the access log.</source>
          <target state="translated">以下の例では、リクエストされた URI が画像ファイルである場合には、環境変数 image に値 1 を設定しています。そして、その環境変数はアクセスログからそれらのリクエストを除外するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2c8b30790665e5cb761744f31d05b57dbe8c4a91" translate="yes" xml:space="preserve">
          <source>The following example sets the seconds to zero, effectively disabling any cool down. Warmed up TLS connections stay on maximum record size.</source>
          <target state="translated">次の例では、秒数をゼロに設定し、効果的にクールダウンを無効にしています。ウォームアップされた TLS 接続は最大記録サイズのままです。</target>
        </trans-unit>
        <trans-unit id="74196874eaacf0eedd0915956e7b69aa7c0d53fa" translate="yes" xml:space="preserve">
          <source>The following example sets the size to zero, effectively disabling any warmup phase.</source>
          <target state="translated">次の例では、サイズをゼロに設定し、ウォームアップフェーズを効果的に無効にしています。</target>
        </trans-unit>
        <trans-unit id="98d97a4105fd6e0c7e97f01ef90b3b5a9c0eb37e" translate="yes" xml:space="preserve">
          <source>The following example shows how one might configured health checking for various backend servers:</source>
          <target state="translated">次の例は、さまざまなバックエンドサーバのヘルスチェックをどのように構成するかを示しています。</target>
        </trans-unit>
        <trans-unit id="60ebca75da8c56715c554ec84b522a2549d8773f" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;DEFLATE&lt;/code&gt; filter, which is provided by &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt;. It will compress all output (either static or dynamic) which is labeled as &lt;code&gt;text/html&lt;/code&gt; or &lt;code&gt;text/plain&lt;/code&gt; before it is sent to the client.</source>
          <target state="translated">次の例では、 &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; によって提供される &lt;code&gt;DEFLATE&lt;/code&gt; フィルターを使用しています。クライアントに送信される前に、 &lt;code&gt;text/html&lt;/code&gt; または &lt;code&gt;text/plain&lt;/code&gt; のラベルが付けられたすべての出力（静的または動的）を圧縮します。</target>
        </trans-unit>
        <trans-unit id="e67ea1e8e8886710e49766603e1cc3d5c61e8873" translate="yes" xml:space="preserve">
          <source>The following example will allow GET, HEAD, POST, and OPTIONS requests without authentication, and require a valid user for all other methods:</source>
          <target state="translated">次の例では、認証なしで GET、HEAD、POST、OPTIONS リクエストを許可し、他のすべてのメソッドに有効なユーザを要求します。</target>
        </trans-unit>
        <trans-unit id="b51148723c9afbe1d984d7476b03ae4ee7492927" translate="yes" xml:space="preserve">
          <source>The following example will only allow GET, HEAD, POST, and OPTIONS requests:</source>
          <target state="translated">次の例では、GET、HEAD、POST、OPTIONS リクエストのみを許可します。</target>
        </trans-unit>
        <trans-unit id="106f42678d875b0d90efec3375c67f27a81ca9a3" translate="yes" xml:space="preserve">
          <source>The following example will process all files in the &lt;code&gt;foo&lt;/code&gt; directory of &lt;code&gt;example.com&lt;/code&gt; through the &lt;code&gt;INCLUDES&lt;/code&gt; filter when they are sent through the proxy server:</source>
          <target state="translated">次の例は、 &lt;code&gt;example.com&lt;/code&gt; の &lt;code&gt;foo&lt;/code&gt; ディレクトリ内のすべてのファイルがプロキシサーバー経由で送信されるときに、 &lt;code&gt;INCLUDES&lt;/code&gt; フィルターを介して処理します。</target>
        </trans-unit>
        <trans-unit id="549e7dbf2128008ce03069f45eedd1e58d693cbe" translate="yes" xml:space="preserve">
          <source>The following examples show how expressions might be used to evaluate requests:</source>
          <target state="translated">以下の例は、リクエストを評価するために式を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5b4bd80624f35901b643afc11fbd55ae4264d714" translate="yes" xml:space="preserve">
          <source>The following five storage &lt;em&gt;type&lt;/em&gt;s are currently supported:</source>
          <target state="translated">現在、次の5つのストレージ&lt;em&gt;タイプ&lt;/em&gt;がサポートされています。</target>
        </trans-unit>
        <trans-unit id="4d2b4c46e4edc1869896e09c0a352be5a83f53da" translate="yes" xml:space="preserve">
          <source>The following format specifiers are supported in &lt;var&gt;value&lt;/var&gt;:</source>
          <target state="translated">次のフォーマット指定子が &lt;var&gt;value&lt;/var&gt; でサポートされています。</target>
        </trans-unit>
        <trans-unit id="d8e5fc07d45c58acc51e8ff9820b0ce73900a942" translate="yes" xml:space="preserve">
          <source>The following information resources are available. In case of problems you should search here first.</source>
          <target state="translated">以下のような情報資源があります。問題が発生した場合は、まずここを検索してみてください。</target>
        </trans-unit>
        <trans-unit id="adb3c8713f2dea15d9978ccc485c47fd4ea3db58" translate="yes" xml:space="preserve">
          <source>The following is an example CGI program that prints one line to your browser. Type in the following, save it to a file called &lt;code&gt;first.pl&lt;/code&gt;, and put it in your &lt;code&gt;cgi-bin&lt;/code&gt; directory.</source>
          <target state="translated">以下は、ブラウザに1行を出力するCGIプログラムの例です。次のように入力して &lt;code&gt;first.pl&lt;/code&gt; というファイルに保存し、 &lt;code&gt;cgi-bin&lt;/code&gt; ディレクトリに配置します。</target>
        </trans-unit>
        <trans-unit id="d8422804deb740c9182855ed9c2a51f3faac2497" translate="yes" xml:space="preserve">
          <source>The following is an example configuration that uses &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; to increase the performance of HTTP Basic authentication provided by &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以下は、 &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; を使用して、 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; によって提供されるHTTP基本認証のパフォーマンスを向上させる構成例です。</target>
        </trans-unit>
        <trans-unit id="90b80095645f5f25384dad57e34dbbb1ae17b819" translate="yes" xml:space="preserve">
          <source>The following levels are available for &lt;em&gt;level&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;levelに&lt;/em&gt;は次のレベルがあり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f359aca2578bc8e75290c707d006e1ae65020f4a" translate="yes" xml:space="preserve">
          <source>The following links document ISO and other language and country code information:</source>
          <target state="translated">以下のリンクは、ISOおよびその他の言語と国コードの情報を文書化したものです。</target>
        </trans-unit>
        <trans-unit id="8f45d965e388f5f0bbaea1338fb4083e93188da2" translate="yes" xml:space="preserve">
          <source>The following list describes the values returned by &lt;code&gt;ab&lt;/code&gt;:</source>
          <target state="translated">次のリストは、 &lt;code&gt;ab&lt;/code&gt; によって返される値について説明しています。</target>
        </trans-unit>
        <trans-unit id="5a9b84ad0f7e71bbd70409150e065ac42708d917" translate="yes" xml:space="preserve">
          <source>The following lists all support possibilities for mod_ssl, in order of preference. Please go through these possibilities &lt;em&gt;in this order&lt;/em&gt; - don't just pick the one you like the look of.</source>
          <target state="translated">以下は、mod_sslのすべてのサポートの可能性を優先順にリストしたものです。これらの可能性&lt;em&gt;をこの順序で&lt;/em&gt;検討&lt;em&gt;し&lt;/em&gt;てください。見た目が好きなものだけを選ぶのではありません。</target>
        </trans-unit>
        <trans-unit id="f0e6f355048740ff42e22844cd8500b7003ab6fe" translate="yes" xml:space="preserve">
          <source>The following logfile format string substitutions should be supported by all &lt;code&gt;strftime(3)&lt;/code&gt; implementations, see the &lt;code&gt;strftime(3)&lt;/code&gt; man page for library-specific extensions.</source>
          <target state="translated">次のログファイル形式の文字列置換は、すべての &lt;code&gt;strftime(3)&lt;/code&gt; 実装でサポートされているはずです。ライブラリ固有の拡張については、 &lt;code&gt;strftime(3)&lt;/code&gt; のマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="a7491d0605b31d7f00870e53b4417ad1c6e1f76e" translate="yes" xml:space="preserve">
          <source>The following modes are supported:</source>
          <target state="translated">以下のモードに対応しています。</target>
        </trans-unit>
        <trans-unit id="a23e7a9bc6b266d5518246a7355b0667379f5956" translate="yes" xml:space="preserve">
          <source>The following mutex &lt;em&gt;mechanisms&lt;/em&gt; are available:</source>
          <target state="translated">次のmutex &lt;em&gt;メカニズム&lt;/em&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="f1089c04352b5a3e70cc75fe08589cb9fa0fdb7b" translate="yes" xml:space="preserve">
          <source>The following notes apply to the &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; module and are included here for compliance with contributors' copyright restrictions that require their acknowledgment.</source>
          <target state="translated">以下の注意事項は &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; モジュールに適用され、承認を必要とする寄稿者の著作権制限に準拠するためにここに含まれています。</target>
        </trans-unit>
        <trans-unit id="fb40964ef9c06df2766f6108c520715c6a0a5739" translate="yes" xml:space="preserve">
          <source>The following option was available in earlier versions but has been removed.</source>
          <target state="translated">以下のオプションは以前のバージョンでは利用可能でしたが、削除されました。</target>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">以下のオプションがサポートされています。</target>
        </trans-unit>
        <trans-unit id="8b0a69d28de564f5b4f381fb8384e8fdd1457430" translate="yes" xml:space="preserve">
          <source>The following options are used to fine tune the behavior of &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;suexec#install&quot;&gt;Configuring and installing suEXEC&lt;/a&gt; for further information.</source>
          <target state="translated">次のオプションは、 &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; の動作を微調整するために使用されます。詳細については&lt;a href=&quot;suexec#install&quot;&gt;、suEXECの構成とインストールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca1c5ef052a454aea66f54d9e7f027a5a8f2429b" translate="yes" xml:space="preserve">
          <source>The following options influence the behavior of &lt;code&gt;configure&lt;/code&gt; itself.</source>
          <target state="translated">以下のオプションは、 &lt;code&gt;configure&lt;/code&gt; 自体の動作に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="a149f1cacd76355dfde9d46b676120789bea02be" translate="yes" xml:space="preserve">
          <source>The following requirements exist for building Apache httpd:</source>
          <target state="translated">Apache httpd を構築するためには、以下のような要件が存在します。</target>
        </trans-unit>
        <trans-unit id="c0ae1246d6043b9aace4d23260fa69668156a4a6" translate="yes" xml:space="preserve">
          <source>The following rule will forbid &lt;code&gt;.exe&lt;/code&gt; files from being downloaded from your server.</source>
          <target state="translated">次のルールは、 &lt;code&gt;.exe&lt;/code&gt; ファイルがサーバーからダウンロードされることを禁止します。</target>
        </trans-unit>
        <trans-unit id="99562ede6cd4220815f7177b678c630af38a4b7d" translate="yes" xml:space="preserve">
          <source>The following ruleset searches in two directories to find the resource, and, if not finding it in either place, will attempt to just serve it out of the location requested.</source>
          <target state="translated">以下のルールセットは、リソースを見つけるために2つのディレクトリを検索し、どちらの場所でも見つからない場合は、要求された場所から提供しようとします。</target>
        </trans-unit>
        <trans-unit id="22fe340e1c6bd77176101f95e6cea41744f27527" translate="yes" xml:space="preserve">
          <source>The following ruleset uses a map file to associate each Referer with a redirection target.</source>
          <target state="translated">以下のルールセットは、マップファイルを使用して各 Referer をリダイレクトターゲットに関連付けます。</target>
        </trans-unit>
        <trans-unit id="bbf3c999b26c6f1929816fd1b701d72f9fda4ca0" translate="yes" xml:space="preserve">
          <source>The following sections highlight the most common situations which require further modification to the configuration. Refer also to the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; reference manual.</source>
          <target state="translated">次のセクションでは、構成をさらに変更する必要がある最も一般的な状況を取り上げます。 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; リファレンスマニュアルも参照してください。</target>
        </trans-unit>
        <trans-unit id="fb0f973c0497718935d1d73b7be417ebb89ef347" translate="yes" xml:space="preserve">
          <source>The following table documents the names of mutexes used by httpd and bundled modules.</source>
          <target state="translated">以下の表は、httpd とバンドルされたモジュールで使用されるミューテックスの名前を示しています。</target>
        </trans-unit>
        <trans-unit id="55e43013498ea724c37ff6dcd20e76da80a60d52" translate="yes" xml:space="preserve">
          <source>The following table lists the default MPMs for various operating systems. This will be the MPM selected if you do not make another choice at compile-time.</source>
          <target state="translated">以下の表は、さまざまなオペレーティングシステムのデフォルト MPM の一覧です。コンパイル時に別の選択をしなかった場合は、これが選択されたMPMになります。</target>
        </trans-unit>
        <trans-unit id="954b386c65911fbfa2629cf7e29a60a668240e48" translate="yes" xml:space="preserve">
          <source>The following technique forbids the practice of other sites including your images inline in their pages. This practice is often referred to as &quot;hotlinking&quot;, and results in your bandwidth being used to serve content for someone else's site.</source>
          <target state="translated">以下のテクニックは、他のサイトがあなたの画像を自分のページにインラインで表示することを禁止するものです。この行為はしばしば「ホットリンク」と呼ばれ、その結果、あなたの帯域幅が他のサイトのコンテンツを提供するために使用されることになります。</target>
        </trans-unit>
        <trans-unit id="1538885e8bc924c831107fa5ed8c09c014015992" translate="yes" xml:space="preserve">
          <source>The following variables provide the values of the named HTTP request headers. The values of other headers can be obtained with the &lt;code&gt;req&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt;. Using these variables may cause the header name to be added to the Vary header of the HTTP response, except where otherwise noted for the directive accepting the expression. The &lt;code&gt;req_novary&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt; may be used to circumvent this behavior.</source>
          <target state="translated">次の変数は、名前付きHTTPリクエストヘッダーの値を提供します。他のヘッダーの値は、 &lt;code&gt;req&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;関数で&lt;/a&gt;取得できます。これらの変数を使用すると、ヘッダー式がHTTP応答のVaryヘッダーに追加される場合があります。ただし、式を受け入れるディレクティブで特に注記されている場合を除きます。 &lt;code&gt;req_novary&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;機能は&lt;/a&gt;、この動作を回避するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="393bdee4b63ae9d8e1a181bb97f863484b34e55b" translate="yes" xml:space="preserve">
          <source>The following will unset &lt;code&gt;VARIABLE&lt;/code&gt;, preventing it from being sent to the FastCGI server:</source>
          <target state="translated">以下は &lt;code&gt;VARIABLE&lt;/code&gt; の設定を解除し、FastCGIサーバーに送信されないようにします。</target>
        </trans-unit>
        <trans-unit id="af2cb037b897b34b24d5a23238cf877011ea082c" translate="yes" xml:space="preserve">
          <source>The form</source>
          <target state="translated">フォーム</target>
        </trans-unit>
        <trans-unit id="53971c9846d9e621cdcd7cad8c2290e41cd33c7b" translate="yes" xml:space="preserve">
          <source>The format argument to the &lt;code&gt;&lt;a href=&quot;#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; directives is a string. This string is used to log each request to the log file. It can contain literal characters copied into the log files and the C-style control characters &quot;\n&quot; and &quot;\t&quot; to represent new-lines and tabs. Literal quotes and backslashes should be escaped with backslashes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; ディレクティブと &lt;code&gt;&lt;a href=&quot;#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; ディレクティブのformat引数は文字列です。この文字列は、各リクエストをログファイルに記録するために使用されます。ログファイルにコピーされたリテラル文字と、改行およびタブを表すCスタイルの制御文字 &quot;\ n&quot;および &quot;\ t&quot;を含めることができます。リテラルの引用符とバックスラッシュは、バックスラッシュでエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="e8e886078c6af9dd775beca20caf9e54bc4aa086" translate="yes" xml:space="preserve">
          <source>The format is fixed. You cannot modify the logging format at runtime.</source>
          <target state="translated">フォーマットは固定されています。実行時にロギング形式を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="8347e3373bb77b744e9b2b6805790234b6cd08aa" translate="yes" xml:space="preserve">
          <source>The format of the &lt;em&gt;*_DN&lt;/em&gt; variables has changed in Apache HTTPD 2.3.11. See the &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; option for &lt;code&gt;&lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;em&gt;* _DN&lt;/em&gt;変数の形式は、Apache HTTPD 2.3.11で変更されました。詳細については、 &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; オプションを &lt;code&gt;&lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; してください。</target>
        </trans-unit>
        <trans-unit id="e9ad2256c2344c4063f0737d082af44c62a36332" translate="yes" xml:space="preserve">
          <source>The format of the access log is highly configurable. The format is specified using a format string that looks much like a C-style printf(1) format string. Some examples are presented in the next sections. For a complete list of the possible contents of the format string, see the &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;format strings&lt;/a&gt;.</source>
          <target state="translated">アクセスログのフォーマットは高度に設定可能です。形式は、Cスタイルのprintf（1）形式文字列によく似た形式文字列を使用して指定されます。次のセクションでいくつかの例を示します。フォーマット文字列の可能な内容の完全なリストについては、 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;フォーマット文字&lt;/a&gt;列を参照してください。</target>
        </trans-unit>
        <trans-unit id="123f05e6d50a7b28b3ee0fa6298254db5736fbcb" translate="yes" xml:space="preserve">
          <source>The format of the error log is defined by the &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; directive, with which you can customize what values are logged. A default is format defined if you don't specify one. A typical log message follows:</source>
          <target state="translated">エラーログの形式は、 &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; ディレクティブによって定義されます。これを使用して、ログに記録する値をカスタマイズできます。指定しない場合、デフォルトでフォーマットが定義されます。典型的なログメッセージは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fd16b0e5bc20a420bc55005349a333203709eeeb" translate="yes" xml:space="preserve">
          <source>The forward proxy is activated using the &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; directive. Because forward proxies allow clients to access arbitrary sites through your server and to hide their true origin, it is essential that you &lt;a href=&quot;#access&quot;&gt;secure your server&lt;/a&gt; so that only authorized clients can access the proxy before activating a forward proxy.</source>
          <target state="translated">フォワードプロキシは、 &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してアクティブ化されます。フォワードプロキシを使用すると、クライアントはサーバーを介して任意のサイトにアクセスし、真のオリジンを隠すことができるため、フォワードプロキシをアクティブにする前に、承認されたクライアントのみがプロキシにアクセスできるように&lt;a href=&quot;#access&quot;&gt;サーバー&lt;/a&gt;を保護することが重要です。</target>
        </trans-unit>
        <trans-unit id="baab634629b1f44a5a79e148eade00f40462b2d3" translate="yes" xml:space="preserve">
          <source>The frequency of initial and subsequent TCP keepalive probes depends on global OS settings, and may be as high as 2 hours. To be useful, the frequency configured in the OS must be smaller than the threshold used by the firewall.</source>
          <target state="translated">最初とそれ以降のTCPキープアライブプローブの頻度は、グローバルOSの設定に依存しており、2時間と高い場合もあります。有用にするためには、OS で設定された頻度は、ファイアウォールが使用する閾値よりも小さくなければなりません。</target>
        </trans-unit>
        <trans-unit id="cd9f11361ea3ddc53c3d8172696c5455dd4d1750" translate="yes" xml:space="preserve">
          <source>The fsize Element</source>
          <target state="translated">fsize要素</target>
        </trans-unit>
        <trans-unit id="1318a0cb4599745a8d4170f55c784d7e2e6e3351" translate="yes" xml:space="preserve">
          <source>The full HTTP request line sent by the browser to the server (e.g., &quot;&lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt;&quot;). This does not include any additional headers sent by the browser. This value has not been unescaped (decoded), unlike most other variables below.</source>
          <target state="translated">ブラウザからサーバーに送信される完全なHTTP要求行（例： &quot; &lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt; &quot;）。これには、ブラウザによって送信される追加のヘッダーは含まれません。この値は、以下の他のほとんどの変数とは異なり、エスケープ解除（デコード）されていません。</target>
        </trans-unit>
        <trans-unit id="95603852ed37df88c64ac24dd52451788d471a24" translate="yes" xml:space="preserve">
          <source>The full definition of which responses can be cached by an HTTP cache is defined in &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt; RFC2616 Section 13.4 Response Cacheability&lt;/a&gt;, and can be summed up as follows:</source>
          <target state="translated">HTTPキャッシュによってキャッシュできる応答の完全な定義は、&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt;RFC2616セクション13.4 Response Cacheability&lt;/a&gt;で定義されており、次のように要約できます。</target>
        </trans-unit>
        <trans-unit id="1a2a46983bcab9444e187963aaaa9f10a1b72ca0" translate="yes" xml:space="preserve">
          <source>The full definition of which responses can be cached by an HTTP cache is defined in &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt; RFC2616 Section 13.4 Response Cacheability&lt;/a&gt;, and can be summed up as follows:</source>
          <target state="translated">HTTPキャッシュによってキャッシュできる応答の完全な定義は、&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt;RFC2616セクション13.4応答&lt;/a&gt;キャッシュ可能性で定義されており、次のように要約できます。</target>
        </trans-unit>
        <trans-unit id="6f27a0246abbc256a2dc7a619dccd5a0000bcac7" translate="yes" xml:space="preserve">
          <source>The full list of headers recognized is available in the &lt;a href=&quot;mod/mod_negotiation#typemaps&quot;&gt;mod_negotiation typemap&lt;/a&gt; documentation.</source>
          <target state="translated">認識されるヘッダーの完全なリストは、&lt;a href=&quot;mod/mod_negotiation#typemaps&quot;&gt;mod_negotiationタイプマップの&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="46fc587a228ffa50908066f124ff10ad5d5f5cac" translate="yes" xml:space="preserve">
          <source>The full local filesystem path to the file or script matching the request, if this has already been determined by the server at the time &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; is referenced. Otherwise, such as when used in virtual host context, the same value as &lt;code&gt;REQUEST_URI&lt;/code&gt;</source>
          <target state="translated">リクエストに一致するファイルまたはスクリプトへの完全なローカルファイルシステムパス（ &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; の参照時にサーバーによって既に決定されている場合）。それ以外の場合（仮想ホストコンテキストで使用される場合など）、 &lt;code&gt;REQUEST_URI&lt;/code&gt; と同じ値</target>
        </trans-unit>
        <trans-unit id="cf7936c7a00d974e792eed940b615a52cc0068c4" translate="yes" xml:space="preserve">
          <source>The full local filesystem path to the file or script matching the request, if this has already been determined by the server at the time &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; is referenced. Otherwise, such as when used in virtual host context, the same value as &lt;code&gt;REQUEST_URI&lt;/code&gt;. Depending on the value of &lt;code&gt;&lt;a href=&quot;core#acceptpathinfo&quot;&gt;AcceptPathInfo&lt;/a&gt;&lt;/code&gt;, the server may have only used some leading components of the &lt;code&gt;REQUEST_URI&lt;/code&gt; to map the request to a file.</source>
          <target state="translated">リクエストに一致するファイルまたはスクリプトへの完全なローカルファイルシステムパス（ &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; の参照時にサーバーによって既に決定されている場合）。それ以外の場合（仮想ホストコンテキストで使用される場合など）、 &lt;code&gt;REQUEST_URI&lt;/code&gt; と同じ値。 &lt;code&gt;&lt;a href=&quot;core#acceptpathinfo&quot;&gt;AcceptPathInfo&lt;/a&gt;&lt;/code&gt; の値によっては、サーバーが &lt;code&gt;REQUEST_URI&lt;/code&gt; の一部の主要コンポーネントのみを使用して、リクエストをファイルにマップした可能性があります。</target>
        </trans-unit>
        <trans-unit id="9eebeeb584d3c4f57ad4ac860864e59d1383f4e9" translate="yes" xml:space="preserve">
          <source>The full range of &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; power is available. For example, it is possible to construct an alias with case-insensitive matching of the URL-path:</source>
          <target state="translated">&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現の&lt;/a&gt;力をフルに活用できます。たとえば、URLパスの大文字と小文字を区別しないマッチングでエイリアスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="486f78c415ace7500848e14d8cc1c8e3a9c8e34c" translate="yes" xml:space="preserve">
          <source>The full syntax for the flag, including all attributes, is as follows:</source>
          <target state="translated">すべての属性を含むフラグの完全な構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="32204d7946b4b2c640695926ac1972b5db3fcb25" translate="yes" xml:space="preserve">
          <source>The full syntax for this flag is:</source>
          <target state="translated">このフラグの完全な構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e057ef117e6d013346ce6f19e3dfee72b6fa5f5c" translate="yes" xml:space="preserve">
          <source>The fully qualified domain name related to the request.</source>
          <target state="translated">リクエストに関連する完全修飾ドメイン名。</target>
        </trans-unit>
        <trans-unit id="e3e84b7e9a55008c37655e58286cb6faa705cc24" translate="yes" xml:space="preserve">
          <source>The function can be one of a number of things, and we'll talk some more about most of these in the next installment of this series. For now, here are some examples of what you can do with SSI</source>
          <target state="translated">機能にはいくつかのものがありますが、これらのほとんどについては次回の連載でもう少し詳しくお話しします。とりあえず、SSI でできることの例をいくつか挙げてみましょう。</target>
        </trans-unit>
        <trans-unit id="bbb941f8c58411d33ac3d941ce1eceef9293482f" translate="yes" xml:space="preserve">
          <source>The functions marked as &quot;ordering&quot; in the final column require some consideration for the ordering of different components of the server, especially when the function is used within the &amp;lt;&lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;If&lt;/a&gt;&lt;/code&gt;&amp;gt; directive which is evaluated relatively early.</source>
          <target state="translated">最後の列で「順序付け」とマークされている関数は、特に比較的早く評価される&amp;lt; &lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;If&lt;/a&gt;&lt;/code&gt; &amp;gt;ディレクティブ内で関数が使用される場合、サーバーのさまざまなコンポーネントの順序付けについていくつかの考慮が必要です。</target>
        </trans-unit>
        <trans-unit id="1a9e8b11c347e428a99526800aff8c43db9683a5" translate="yes" xml:space="preserve">
          <source>The functions marked as &quot;restricted&quot; in the final column are not available in some modules like &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最後の列で「制限付き」とマークされている関数は、 &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; などの一部のモジュールでは使用できません。</target>
        </trans-unit>
        <trans-unit id="e4ea6b9d1730b158e565b8fba887c1e3d7e96f65" translate="yes" xml:space="preserve">
          <source>The gateway looks for a backend response header called &lt;code&gt;X-Sendfile&lt;/code&gt; and interprets the value as the filename to serve. The header is removed from the final response headers. This is equivalent to &lt;code&gt;ProxySCGISendfile X-Sendfile&lt;/code&gt;.</source>
          <target state="translated">ゲートウェイは &lt;code&gt;X-Sendfile&lt;/code&gt; と呼ばれるバックエンド応答ヘッダーを探し、その値を提供するファイル名として解釈します。ヘッダーは最終的な応答ヘッダーから削除されます。これは &lt;code&gt;ProxySCGISendfile X-Sendfile&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4068607ce0e75c192f016c9e31cb6a9e6f2ea363" translate="yes" xml:space="preserve">
          <source>The goal of this rule is to force the use of a particular hostname, in preference to other hostnames which may be used to reach the same site. For example, if you wish to force the use of &lt;strong&gt;www.example.com&lt;/strong&gt; instead of &lt;strong&gt;example.com&lt;/strong&gt;, you might use a variant of the following recipe.</source>
          <target state="translated">このルールの目的は、同じサイトに到達するために使用される可能性のある他のホスト名に優先して、特定のホスト名の使用を強制することです。たとえば、&lt;strong&gt;example.com&lt;/strong&gt;ではなく&lt;strong&gt;www.example.com&lt;/strong&gt;を強制的に使用したい場合は、次のレシピのバリアントを使用できます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99518a685572089b7b20231ca8d06f5cfdd2b02a" translate="yes" xml:space="preserve">
          <source>The group file is keyed on the username. The value for a user is a comma-separated list of the groups to which the users belongs. There must be no whitespace within the value, and it must never contain any colons.</source>
          <target state="translated">グループファイルは、ユーザー名がキーとなります。ユーザーの値は、そのユーザーが所属するグループのカンマ区切りのリストです。値の中には空白を入れてはいけませんし、コロンを含んではいけません。</target>
        </trans-unit>
        <trans-unit id="34aaea45ccfa14f6203fdd24b1037adb95a613f5" translate="yes" xml:space="preserve">
          <source>The group name of the group of the script.</source>
          <target state="translated">スクリプトのグループ名。</target>
        </trans-unit>
        <trans-unit id="ac2f81cb220ea8faaf93f46e3bdb1a45df24ac1a" translate="yes" xml:space="preserve">
          <source>The handler generating the response (if any).</source>
          <target state="translated">レスポンスを生成するハンドラ (もしあれば)。</target>
        </trans-unit>
        <trans-unit id="3233bc8bf7ede97f96728aeb02599bc82c3bf13c" translate="yes" xml:space="preserve">
          <source>The handshake sequence uses three protocols:</source>
          <target state="translated">握手シーケンスは3つのプロトコルを使用します。</target>
        </trans-unit>
        <trans-unit id="ba8a0b10b05a197d3862fb4cc9eb46f37e4aa37b" translate="yes" xml:space="preserve">
          <source>The header should contain name value pairs expressed in the same format as a query string in a URL, as in the example below. Setting a key to the empty string has the effect of removing that key from the session.</source>
          <target state="translated">ヘッダには、以下の例のように、URL内のクエリ文字列と同じ形式で表現された名前と値のペアを含める必要があります。キーを空の文字列に設定すると、そのキーをセッションから削除する効果があります。</target>
        </trans-unit>
        <trans-unit id="5eed010f24ab248fc23f973c5e2afe190b7b2504" translate="yes" xml:space="preserve">
          <source>The header value is expected to be in the URL query format, for example:</source>
          <target state="translated">ヘッダー値は、例えば、URL クエリ形式であることが予想されます。</target>
        </trans-unit>
        <trans-unit id="baf0cd8999623787d98ab628e0d4dd94a6669824" translate="yes" xml:space="preserve">
          <source>The headers and bodies of cached responses are combined, and stored underneath a single key in the shared object cache. A &lt;a href=&quot;../socache&quot;&gt;number of implementations&lt;/a&gt; of shared object caches are available to choose from.</source>
          <target state="translated">キャッシュされた応答のヘッダーと本文は結合され、共有オブジェクトキャッシュの単一のキーの下に格納されます。&lt;a href=&quot;../socache&quot;&gt;実装の数&lt;/a&gt;共有オブジェクト・キャッシュの中から選択するために利用可能です。</target>
        </trans-unit>
        <trans-unit id="8e2fae25c9620538439e7ed9df70671a7ca20a4d" translate="yes" xml:space="preserve">
          <source>The headers and bodies of cached responses are stored separately on disk, in a directory structure derived from the md5 hash of the cached URL.</source>
          <target state="translated">キャッシュされたレスポンスのヘッダと本文は、キャッシュされた URL の md5 ハッシュから派生したディレクトリ構造で、ディスク上に別々に保存されます。</target>
        </trans-unit>
        <trans-unit id="e3645379b005f01ebf1fe033edd6607c39568a52" translate="yes" xml:space="preserve">
          <source>The health check mechanism is enabled via the use of additional &lt;code&gt;&lt;a href=&quot;mod_proxy#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt; parameters, which are configured in the standard way via &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">ヘルスチェックメカニズムは、追加の &lt;code&gt;&lt;a href=&quot;mod_proxy#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt; パラメーターを使用して有効にします。これらのパラメーターは、標準的な方法で &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; を介して構成されます。</target>
        </trans-unit>
        <trans-unit id="7a01effeeedaf6bbd3b956cd1ae2a774e2e7d0ad" translate="yes" xml:space="preserve">
          <source>The hex-encoded SSL session id</source>
          <target state="translated">16進数のSSLセッションID</target>
        </trans-unit>
        <trans-unit id="b04cac95527ba51dd8992ee95f7afa1295b7db5f" translate="yes" xml:space="preserve">
          <source>The hook specifies before which phase of request processing the message will be logged. The following hooks are supported:</source>
          <target state="translated">フックはリクエスト処理のどのフェーズでメッセージがログに記録されるかを指定します。以下のフックがサポートされています。</target>
        </trans-unit>
        <trans-unit id="150c54f88d73b637a0a5c3ce1cd1e4a3dbba25c4" translate="yes" xml:space="preserve">
          <source>The host name of the remote host</source>
          <target state="translated">リモートホストのホスト名</target>
        </trans-unit>
        <trans-unit id="7684a9e8ff178ef2e3d4c857ef01b5a01fb366e3" translate="yes" xml:space="preserve">
          <source>The host name, as set by the &lt;code&gt;Host:&lt;/code&gt; header or by a full URI.</source>
          <target state="translated">&lt;code&gt;Host:&lt;/code&gt; ヘッダーまたは完全なURIによって設定されたホスト名。</target>
        </trans-unit>
        <trans-unit id="aa50ba6c65eb6c52c3bb195f715d486be49dd3f7" translate="yes" xml:space="preserve">
          <source>The hostname of the proxy server.</source>
          <target state="translated">プロキシサーバのホスト名。</target>
        </trans-unit>
        <trans-unit id="4485cbd54c910a39aa0b5fd6de0667b9645ad5d9" translate="yes" xml:space="preserve">
          <source>The hour part of the current time (&lt;code&gt;00&lt;/code&gt;, ..., &lt;code&gt;23&lt;/code&gt;)</source>
          <target state="translated">現在時刻の時間部分（ &lt;code&gt;00&lt;/code&gt; 、...、 &lt;code&gt;23&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="73797ddb1d26af7468d7719d11a6389877363cbc" translate="yes" xml:space="preserve">
          <source>The httpd binary is built with the help of several patches to third party packages, which ensure the released code is buildable and debuggable. These patches are available and distributed from &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt; and are recommended to be applied to obtain identical results as the &quot;official&quot; ASF distributed binaries.</source>
          <target state="translated">httpdバイナリは、サードパーティパッケージへのいくつかのパッチの助けを借りて構築されています。これにより、リリースされたコードがビルド可能でデバッグ可能になります。これらのパッチは&lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt;から入手および配布でき、「公式の」ASF分散バイナリと同じ結果を得るには、適用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="23eed5da5d7a0445c900a8b339abc3218a79767b" translate="yes" xml:space="preserve">
          <source>The httpd binary is built with the help of several patches to third party packages, which ensure the released code is buildable and debuggable. These patches are available and distributed from &lt;a href=&quot;https://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt; and are recommended to be applied to obtain identical results as the &quot;official&quot; ASF distributed binaries.</source>
          <target state="translated">httpdバイナリは、サードパーティパッケージへのいくつかのパッチの助けを借りて構築されており、リリースされたコードがビルド可能でデバッグ可能であることを保証します。これらのパッチは&lt;a href=&quot;https://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt;から入手および配布されており、「公式」ASF配布バイナリと同じ結果を得るために適用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="381367eafd54603791e9412433719381c33c0856" translate="yes" xml:space="preserve">
          <source>The imagemap module adds some new features that were not possible with previously distributed imagemap programs.</source>
          <target state="translated">イメージマップ・モジュールでは、これまで配布されていたイメージマップ・プログラムでは不可能だった新機能が追加されています。</target>
        </trans-unit>
        <trans-unit id="e817eec40ca760b1a190b322154607197c783956" translate="yes" xml:space="preserve">
          <source>The improved connection handling may not work for certain connection filters that have declared themselves as incompatible with event. In these cases, this MPM will fall back to the behavior of the &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM and reserve one worker thread per connection. All modules shipped with the server are compatible with the event MPM.</source>
          <target state="translated">改善された接続処理は、イベントと互換性がないと宣言されている特定の接続フィルターでは機能しない場合があります。これらの場合、このMPMは &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPMの動作にフォールバックし、接続ごとに1つのワーカースレッドを予約します。サーバーに付属するすべてのモジュールは、イベントMPMと互換性があります。</target>
        </trans-unit>
        <trans-unit id="eee415ccce84440111a476c30fec91a6ba6c1d0f" translate="yes" xml:space="preserve">
          <source>The include Element</source>
          <target state="translated">インクルードエレメント</target>
        </trans-unit>
        <trans-unit id="b55b277d92fce4369308ead0a35ff78e98f32b53" translate="yes" xml:space="preserve">
          <source>The index of a directory can come from one of two sources:</source>
          <target state="translated">ディレクトリのインデックスは、2つのソースのうちの1つに由来します。</target>
        </trans-unit>
        <trans-unit id="4e0d7a387209b56316d107dfc6f8a8786eb2c030" translate="yes" xml:space="preserve">
          <source>The information should not be trusted in any way except for rudimentary usage tracking.</source>
          <target state="translated">初歩的な利用状況の追跡以外では、情報を信用してはいけません。</target>
        </trans-unit>
        <trans-unit id="18ae3091f1a9c98cf8e11a978c804ecfd5b9868f" translate="yes" xml:space="preserve">
          <source>The input filter supports denying/skipping a filter if it is deemed unwanted:</source>
          <target state="translated">入力フィルタは、不要と判断された場合にフィルタを拒否したりスキップしたりすることをサポートします。</target>
        </trans-unit>
        <trans-unit id="8297f5977f99374c0c327983b1247d479fb0bcb5" translate="yes" xml:space="preserve">
          <source>The intention is to allow the server to send resources to the client that it will most likely need: a css or javascript resource that belongs to a html page the client requested. A set of images that is referenced by a css, etc.</source>
          <target state="translated">この意図は、サーバーが最も必要とする可能性の高いリソースをクライアントに送信できるようにすることです:クライアントが要求したhtmlページに属するcssやjavascriptのリソース。css などで参照される画像のセット。</target>
        </trans-unit>
        <trans-unit id="d6ea6e15ae3766269c0d5569106fe20132daab61" translate="yes" xml:space="preserve">
          <source>The intention of this is to indicate that the explicitly listed types are preferred, but if a different representation is available, that is ok too. Using explicit quality values, what the browser really wants is something like:</source>
          <target state="translated">この意図は、明示的にリストアップされた型が好ましいことを示すためですが、異なる表現が利用可能であれば、それも構いません。明示的な品質値を使うと、ブラウザが本当に欲しいのは次のようなものです。</target>
        </trans-unit>
        <trans-unit id="0e1597d99816540870dbf8970102b3783cc51f2a" translate="yes" xml:space="preserve">
          <source>The internal &lt;code&gt;tolower&lt;/code&gt; RewriteMap directive is used to ensure that the hostnames being used are all lowercase, so that there is no ambiguity in the directory structure which must be created.</source>
          <target state="translated">内部 &lt;code&gt;tolower&lt;/code&gt; RewriteMapディレクティブは、使用されるホスト名がすべて小文字であることを確認するために使用されます。これにより、作成する必要のあるディレクトリ構造にあいまいさがなくなります。</target>
        </trans-unit>
        <trans-unit id="c9a1469ea4fef43e1718c0eb5c8e0f7c8e35f573" translate="yes" xml:space="preserve">
          <source>The internal environment variables set by this directive are set &lt;em&gt;after&lt;/em&gt; most early request processing directives are run, such as access control and URI-to-filename mapping. If the environment variable you're setting is meant as input into this early phase of processing such as the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive, you should instead set the environment variable with &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このディレクティブによって設定される内部環境変数は、アクセス制御やURIからファイル名へのマッピングなど、ほとんどの要求処理ディレクティブが実行された&lt;em&gt;後に&lt;/em&gt;設定されます。設定する環境変数が &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ディレクティブなどのこの処理の初期段階への入力として意図されている場合は、代わりに &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; で環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3fcaacd99a8147f79661c142c2e367b3a87af007" translate="yes" xml:space="preserve">
          <source>The inverse process of switching from Basic to Digest Authentication without assigning new passwords is generally not possible. Only if the Basic Authentication passwords have been stored in plain text or with a reversable encryption scheme will it be possible to recover them and generate a new data store following the Digest Authentication password storage scheme.</source>
          <target state="translated">新しいパスワードを割り当てずに基本認証からダイジェスト認証に切り替えることは、一般的には不可能です。ベーシック認証のパスワードがプレーンテキストで保存されている場合や、逆引き可能な暗号化スキームで保存されている場合にのみ、ダイジェスト認証のパスワード保存スキームに従った新しいデータストアを生成して復元することが可能です。</target>
        </trans-unit>
        <trans-unit id="bdf9922b4116466964a75bfb19f3885fdabdf4ed" translate="yes" xml:space="preserve">
          <source>The invocation modes for FastCGI authorizers supported by this module are distinguished by two characteristics, &lt;em&gt;type&lt;/em&gt; and auth &lt;em&gt;mechanism&lt;/em&gt;.</source>
          <target state="translated">このモジュールでサポートされるFastCGIオーソライザーの呼び出しモードは、&lt;em&gt;タイプ&lt;/em&gt;と認証&lt;em&gt;メカニズムという&lt;/em&gt; 2つの特性によって区別されます。</target>
        </trans-unit>
        <trans-unit id="8a3a5637f421c3238f96d791246bed0306992f02" translate="yes" xml:space="preserve">
          <source>The kernel generates a pid for each process as it forks the process, and pids are allowed to roll over (they're 16-bits on many Unixes, but newer systems have expanded to 32-bits). So over time the same pid will be reused. However unless it is reused within the same second, it does not destroy the uniqueness of our quadruple. That is, we assume the system does not spawn 65536 processes in a one second interval (it may even be 32768 processes on some Unixes, but even this isn't likely to happen).</source>
          <target state="translated">カーネルはプロセスをフォークするときに各プロセスの pid を生成し、pid はロールオーバーすることができます (多くの Unix では 16 ビットですが、新しいシステムでは 32 ビットに拡張されています)。そのため、時間が経つにつれて同じ pid が再利用されることになります。しかし、同じ秒内に再利用されない限り、四重項の一意性が損なわれることはありません。つまり、システムが1秒間に65536プロセスを生成しないと仮定しています(Unixによっては32768プロセスになるかもしれませんが、それさえも起こりそうにありません)。</target>
        </trans-unit>
        <trans-unit id="cec77bff3ebe650acc77661d772d4f33d570953d" translate="yes" xml:space="preserve">
          <source>The key exchange method defines how the shared secret symmetric cryptography key used for application data transfer will be agreed upon by client and server. SSL 2.0 uses RSA key exchange only, while SSL 3.0 supports a choice of key exchange algorithms including RSA key exchange (when certificates are used), and Diffie-Hellman key exchange (for exchanging keys without certificates, or without prior communication between client and server).</source>
          <target state="translated">鍵交換の方法は、アプリケーションのデータ転送に使用される共有秘密の対称暗号鍵が、クライアントとサーバによってどのように合意されるかを定義します。SSL 2.0ではRSA鍵交換のみを使用していますが、SSL 3.0ではRSA鍵交換(証明書を使用する場合)やDiffie-Hellman鍵交換(証明書なしで鍵を交換する場合や、クライアントとサーバ間の事前の通信なしで鍵を交換する場合)を含む鍵交換アルゴリズムの選択をサポートしています。</target>
        </trans-unit>
        <trans-unit id="e905ba0e731ec08401c192a1333b2c5f986285f9" translate="yes" xml:space="preserve">
          <source>The key for the single DBM is the username. The value consists of</source>
          <target state="translated">単一DBMのキーはユーザ名である。値は</target>
        </trans-unit>
        <trans-unit id="6464c98d1b62248035330f435c5e30b1921b1802" translate="yes" xml:space="preserve">
          <source>The key to doing this is checking that part of the client certificate matches what you expect. Usually this means checking all or part of the Distinguished Name (DN), to see if it contains some known string. There are two ways to do this, using either &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これを行うための鍵は、クライアント証明書の一部が予期したものと一致することを確認することです。通常、これは識別名（DN）のすべてまたは一部をチェックして、既知の文字列が含まれているかどうかを確認することを意味します。これを行うには、 &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; を使用する2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="fa04099637664d961e688d058f089b004838129c" translate="yes" xml:space="preserve">
          <source>The key used to encrypt the session</source>
          <target state="translated">セッションを暗号化するためのキー</target>
        </trans-unit>
        <trans-unit id="127b0187a9ea97ae480d87176cb4601ef6c21c81" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;disabled&lt;/code&gt; followed by a space-delimited list of usernames. Usernames that appear in such a list will &lt;em&gt;never&lt;/em&gt; have directory translation performed, even if they appear in an &lt;code&gt;enabled&lt;/code&gt; clause.</source>
          <target state="translated">キーワード &lt;code&gt;disabled&lt;/code&gt; の後にスペースで区切られたユーザー名のリストが続きます。このようなリストに表示されるユーザー名は、たとえ &lt;code&gt;enabled&lt;/code&gt; 句に表示されていても、ディレクトリ変換が実行される&lt;em&gt;こと&lt;/em&gt;はあり&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="db03fb4dd4db0d48c01e0f648c9075310d9a47e5" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;disabled&lt;/code&gt;. This turns off &lt;em&gt;all&lt;/em&gt; username-to-directory translations except those explicitly named with the &lt;code&gt;enabled&lt;/code&gt; keyword (see below).</source>
          <target state="translated">キーワードは &lt;code&gt;disabled&lt;/code&gt; です。これにより、 &lt;code&gt;enabled&lt;/code&gt; キーワードで明示的に名前が付けられたものを除いて、&lt;em&gt;すべての&lt;/em&gt;ユーザー名からディレクトリへの変換がオフに&lt;em&gt;なり&lt;/em&gt;ます（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="c1de904748ff4a6b17c75cddff0082a22eb2f3eb" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;enabled&lt;/code&gt; followed by a space-delimited list of usernames. These usernames will have directory translation performed even if a global disable is in effect, but not if they also appear in a &lt;code&gt;disabled&lt;/code&gt; clause.</source>
          <target state="translated">キーワード &lt;code&gt;enabled&lt;/code&gt; の後に、スペースで区切られたユーザ名のリストが続きます。これらのユーザ名は、ディレクトリ翻訳がグローバル無効化が有効になっている場合にも行われていますが、彼らはまたに表示されていない場合は &lt;code&gt;disabled&lt;/code&gt; 句。</target>
        </trans-unit>
        <trans-unit id="8b52ea07c2c40cd344b2368d75ccf4d01b85bb7f" translate="yes" xml:space="preserve">
          <source>The language specification is the two-letter abbreviation for the language. The &lt;code&gt;charset&lt;/code&gt; is the name of the particular character set which should be used.</source>
          <target state="translated">言語仕様は、言語の2文字の略語です。 &lt;code&gt;charset&lt;/code&gt; が使用されるべき特定の文字セットの名前です。</target>
        </trans-unit>
        <trans-unit id="c4c3e5181b69415aeef0b9e92a181b7357a50307" translate="yes" xml:space="preserve">
          <source>The language(s) of the variant, as an Internet standard language tag (&lt;a href=&quot;http://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;). An example is &lt;code&gt;en&lt;/code&gt;, meaning English. If the variant contains more than one language, they are separated by a comma.</source>
          <target state="translated">バリアントの言語。インターネット標準言語タグ（&lt;a href=&quot;http://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;）として。たとえば、英語を意味する &lt;code&gt;en&lt;/code&gt; です。バリアントに複数の言語が含まれている場合は、コンマで区切られます。</target>
        </trans-unit>
        <trans-unit id="41a9e35b8cc8bf6dca2d24081323f6895c217806" translate="yes" xml:space="preserve">
          <source>The language(s) of the variant, as an Internet standard language tag (&lt;a href=&quot;https://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;). An example is &lt;code&gt;en&lt;/code&gt;, meaning English. If the variant contains more than one language, they are separated by a comma.</source>
          <target state="translated">インターネット標準言語タグとしてのバリアントの言語（&lt;a href=&quot;https://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;）。例は英語を意味する &lt;code&gt;en&lt;/code&gt; です。バリアントに複数の言語が含まれている場合、それらはコンマで区切られます。</target>
        </trans-unit>
        <trans-unit id="d706496109e8997da6167e7cda14333fceb60126" translate="yes" xml:space="preserve">
          <source>The largest size of the form in bytes that will be parsed for the login details</source>
          <target state="translated">ログイン詳細のために解析されるフォームの最大サイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="66dfffd36d3cde15ccacf6dbff4c245916115c07" translate="yes" xml:space="preserve">
          <source>The last example will set environment variable &lt;code&gt;HAVE_TS&lt;/code&gt; if the request contains any headers that begin with &quot;TS&quot; whose values begins with any character in the set [a-z].</source>
          <target state="translated">最後の例では、リクエストに「TS」で始まるヘッダーが含まれ、その値がセット[az]の任意の文字で始まる場合、環境変数 &lt;code&gt;HAVE_TS&lt;/code&gt; が設定されます。</target>
        </trans-unit>
        <trans-unit id="6301dead5bcc2b4a0b8465f6671ab0760b07ab3e" translate="yes" xml:space="preserve">
          <source>The last modification date of the document requested by the user.</source>
          <target state="translated">ユーザーが要求した文書の最終更新日。</target>
        </trans-unit>
        <trans-unit id="0fe076f2f620506ad9e6202e7bdc132356caebe9" translate="yes" xml:space="preserve">
          <source>The last part indicates the size of the object returned to the client, not including the response headers. If no content was returned to the client, this value will be &quot;&lt;code&gt;-&lt;/code&gt;&quot;. To log &quot;&lt;code&gt;0&lt;/code&gt;&quot; for no content, use &lt;code&gt;%B&lt;/code&gt; instead.</source>
          <target state="translated">最後の部分は、クライアントに返されるオブジェクトのサイズを示し、応答ヘッダーは含まれません。コンテンツがクライアントに返されなかった場合、この値は &quot; &lt;code&gt;-&lt;/code&gt; &quot;になります。コンテンツがない場合に「 &lt;code&gt;0&lt;/code&gt; 」をログに記録するには、代わりに &lt;code&gt;%B&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2e64c67bb15326b8a9cb4ae2eb9925424519b114" translate="yes" xml:space="preserve">
          <source>The length of the file, in bytes. If this header is not present, then the actual length of the file is used.</source>
          <target state="translated">ファイルの長さをバイト単位で指定します。このヘッダがない場合は、ファイルの実際の長さが使用されます。</target>
        </trans-unit>
        <trans-unit id="ebc898c20f3d90c5d2fd72d61d514deaef1e4ea3" translate="yes" xml:space="preserve">
          <source>The length of time to wait for more output from the CGI program</source>
          <target state="translated">CGI プログラムからの出力をさらに待つ時間の長さ</target>
        </trans-unit>
        <trans-unit id="e5e8e4fbc8a02da884a830eedbadeeaf26410e86" translate="yes" xml:space="preserve">
          <source>The lines in the imagemap files can have one of several formats:</source>
          <target state="translated">イメージマップファイルの行は、いくつかのフォーマットのうちの1つを持つことができます。</target>
        </trans-unit>
        <trans-unit id="ac85b229233663261798db34ad9fa703cf76d5a7" translate="yes" xml:space="preserve">
          <source>The lines marked &quot;(*)&quot; are only available if &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;On&lt;/code&gt;. In version 2.3.6, loading mod_status will toggle &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; On by default.</source>
          <target state="translated">「（*）」とマークされている行は、 &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;On&lt;/code&gt; の場合にのみ使用できます。バージョン2.3.6では、mod_statusをロードすると、デフォルトで &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; がオンに切り替わります。</target>
        </trans-unit>
        <trans-unit id="345b2b263679078fe6e029d88cba5b7e34f089bd" translate="yes" xml:space="preserve">
          <source>The local port used for the connection to the backend server.</source>
          <target state="translated">バックエンドサーバへの接続に使用するローカルポート。</target>
        </trans-unit>
        <trans-unit id="65c22a61422ccbaf973b5d5493b7713da12b767e" translate="yes" xml:space="preserve">
          <source>The location of the &lt;code&gt;mime.types&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;mime.types&lt;/code&gt; ファイルの場所</target>
        </trans-unit>
        <trans-unit id="15b5db158436beb5767363af97ec2aba6b5a25a9" translate="yes" xml:space="preserve">
          <source>The location of the error log is defined by the &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directive, which may be set globally, or per virtual host. Entries in the error log tell you what went wrong, and when. They often also tell you how to fix it. Each error log message contains an error code, which you can search for online for even more detailed descriptions of how to address the problem. You can also configure your error log to contain a log ID which you can then correlate to an access log entry, so that you can determine what request caused the error condition.</source>
          <target state="translated">エラーログの場所は、グローバルに、または仮想ホストごとに設定できる &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; ディレクティブによって定義されます。エラーログのエントリは、何がいつ問題を起こしたかを示します。彼らはしばしばそれを修正する方法も教えてくれます。各エラーログメッセージにはエラーコードが含まれています。このコードをオンラインで検索すると、問題に対処する方法のさらに詳しい説明が表示されます。エラーログにログIDを含めるように構成して、アクセスログエントリに関連付けることもできるので、どの要求がエラー状態の原因であるかを特定できます。</target>
        </trans-unit>
        <trans-unit id="9e5be5cf7253ad5a831ddaefed42d3f5f5f66dc0" translate="yes" xml:space="preserve">
          <source>The log ID format &lt;code&gt;%L&lt;/code&gt; produces a unique id for a connection or request. This can be used to correlate which log lines belong to the same connection or request, which request happens on which connection. A &lt;code&gt;%L&lt;/code&gt; format string is also available in &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; to allow to correlate access log entries with error log lines. If &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; is loaded, its unique id will be used as log ID for requests.</source>
          <target state="translated">ログID形式 &lt;code&gt;%L&lt;/code&gt; は、接続または要求の一意のIDを生成します。これは、どのログ行が同じ接続または要求に属しているか、どの要求がどの接続で発生するかを関連付けるために使用できます。 &lt;code&gt;%L&lt;/code&gt; の書式文字列は、以下でも入手可能である &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; のエラー・ログ・ラインと相関するアクセスログエントリを可能にします。場合 &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; がロードされ、そのユニークIDはリクエストのログIDとして使用されます。</target>
        </trans-unit>
        <trans-unit id="f553f9510b7797cdeb66277ec3ccf9d22a2fc2e5" translate="yes" xml:space="preserve">
          <source>The log files may contain sensitive data such as the contents of &lt;code&gt;Authorization:&lt;/code&gt; headers (which can contain passwords), so they should not be readable by anyone except the user that starts the server.</source>
          <target state="translated">ログファイルには、 &lt;code&gt;Authorization:&lt;/code&gt; ヘッダー（パスワードを含めることができる）の内容などの機密データが含まれている可能性があるため、サーバーを起動するユーザー以外は誰も読み取れないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="32773e1f3effb916a9ee46ef1ac7573a74f589e4" translate="yes" xml:space="preserve">
          <source>The logged information will likely contain plaintext credentials being used or validated by LDAP authentication, so care should be taken in protecting and purging the error log when this directive is used.</source>
          <target state="translated">ログに記録された情報には、LDAP 認証で使われたり検証されたりしている プレーンテキストの資格情報が含まれている可能性が高いので、このディレクティブが使われているときは エラーログを保護したり、パージしたりするように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="77cdd1becfd4d903cb7c30f0aa091d406a99b9d8" translate="yes" xml:space="preserve">
          <source>The login form can be hosted as a standalone page, or can be provided inline on the same page.</source>
          <target state="translated">ログインフォームは、スタンドアロンのページとしてホストすることも、同じページにインラインで提供することもできます。</target>
        </trans-unit>
        <trans-unit id="0489efd0367a4940a451a4f4a02dea41c9b9152b" translate="yes" xml:space="preserve">
          <source>The looked-up keys are cached by httpd until the &lt;code&gt;mtime&lt;/code&gt; (modified time) of the mapfile changes, or the httpd server is restarted. This ensures better performance on maps that are called by many requests.</source>
          <target state="translated">検索されたキーは、mapfileの &lt;code&gt;mtime&lt;/code&gt; （変更時刻）が変更されるか、httpdサーバーが再起動されるまで、httpdによってキャッシュされます。これにより、多くのリクエストによって呼び出されるマップのパフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="9feefa882b51187ba18ff2b453318c85c1952ea3" translate="yes" xml:space="preserve">
          <source>The machine services a large number of requests, and so the performance loss in running separate daemons may be significant.</source>
          <target state="translated">マシンは多数のリクエストに対応しているため、別個のデーモンを実行する際のパフォーマンスの低下が大きいかもしれません。</target>
        </trans-unit>
        <trans-unit id="6d4bc480a007f67fd1d86e26afe7081fa85afeb9" translate="yes" xml:space="preserve">
          <source>The machines in your cluster should satisfy these requirements. (Even if you have only one machine you should synchronize its clock with NTP.)</source>
          <target state="translated">クラスタ内のマシンはこれらの要件を満たしているはずです。(マシンが1台しかない場合でも、そのマシンのクロックをNTPで同期させる必要があります)。</target>
        </trans-unit>
        <trans-unit id="7430dab4318b7b44d5d83b6d1975f36325231749" translate="yes" xml:space="preserve">
          <source>The machines' hostnames all differ, such that the module can do a hostname lookup on the hostname and receive a different IP address for each machine in the cluster.</source>
          <target state="translated">マシンのホスト名はすべて異なるため、モジュールはホスト名のルックアップを行い、クラスタ内の各マシンの異なる IP アドレスを受信することができます。</target>
        </trans-unit>
        <trans-unit id="cb16755d4ff59a4898feb1ea44a296907d97fe2f" translate="yes" xml:space="preserve">
          <source>The machines' times are synchronized via NTP or other network time protocol.</source>
          <target state="translated">マシンの時間は、NTPまたは他のネットワークタイムプロトコルを介して同期されます。</target>
        </trans-unit>
        <trans-unit id="90feb257b8cf229942909918375d585e49b15167" translate="yes" xml:space="preserve">
          <source>The main difference with per-server rewrites is that the path prefix of the directory containing the &lt;code&gt;.htaccess&lt;/code&gt; file is stripped before matching in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;. In addition, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; should be used to assure the request is properly mapped.</source>
          <target state="translated">サーバーごとの書き換えとの主な違いは、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルを含むディレクトリのパス接頭辞が &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; で照合する前に削除されることです。さらに、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; を使用して、リクエストが適切にマッピングされていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="527d8cce5e41511a1d7d8e5a709c6ee2223c8ce2" translate="yes" xml:space="preserve">
          <source>The main differences in Apache for NetWare are:</source>
          <target state="translated">Apache for NetWareの主な違いは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7abf4c5229c52c53daff3a130159d24b410252df" translate="yes" xml:space="preserve">
          <source>The main differences in Apache for Windows are:</source>
          <target state="translated">Windows版Apacheの主な違いは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="db9910fced3043633ed628335df0824f8d31096c" translate="yes" xml:space="preserve">
          <source>The main disadvantage is that you cannot have a different log file for each virtual host; however, if you have many virtual hosts, doing this can be a bad idea anyway, because of the &lt;a href=&quot;fd-limits&quot;&gt;number of file descriptors needed&lt;/a&gt;. It is better to &lt;a href=&quot;../logs#piped&quot;&gt;log to a pipe or a fifo&lt;/a&gt;, and arrange for the process at the other end to split up the log files into one per virtual host. One example of such a process can be found in the &lt;a href=&quot;../programs/split-logfile&quot;&gt;split-logfile&lt;/a&gt; utility.</source>
          <target state="translated">主な欠点は、仮想ホストごとに異なるログファイルを作成できないことです。ただし、仮想ホストが多数ある場合は、&lt;a href=&quot;fd-limits&quot;&gt;必要なファイル記述子の数が多い&lt;/a&gt;ため、これを行うのは悪い考えです。&lt;a href=&quot;../logs#piped&quot;&gt;パイプまたはfifo&lt;/a&gt;にログを記録し、反対側のプロセスがログファイルを仮想ホストごとに1つに分割するように調整することをお勧めします。そのようなプロセスの一例は、&lt;a href=&quot;../programs/split-logfile&quot;&gt;split-logfile&lt;/a&gt;ユーティリティにあります。</target>
        </trans-unit>
        <trans-unit id="e6e4fae1a0a4fe51d542056762f1e1164b26fb95" translate="yes" xml:space="preserve">
          <source>The main exception is when the URL path on the proxy differs from that on the backend. In this case, a redirect header can be rewritten relative to the original host URL (not the backend &lt;code&gt;ajp://&lt;/code&gt; URL), for example:</source>
          <target state="translated">主な例外は、プロキシのURLパスがバックエンドのURLパスと異なる場合です。この場合、リダイレクトヘッダーは、元のホストURL（バックエンド &lt;code&gt;ajp://&lt;/code&gt; URLではなく）を基準にして書き換えることができます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="1b267a1e0c9259c597e20f196744af3e8cbaee00" translate="yes" xml:space="preserve">
          <source>The main file is &lt;code&gt;mod_example_hooks.c&lt;/code&gt;, which illustrates all the different callback mechanisms and call syntaxes. By no means does an add-on module need to include routines for all of the callbacks - quite the contrary!</source>
          <target state="translated">メインファイルは &lt;code&gt;mod_example_hooks.c&lt;/code&gt; で、さまざまなコールバックメカニズムと呼び出し構文をすべて示しています。決してアドオンモジュールがすべてのコールバックのルーチンを含める必要はありません-まったく逆です！</target>
        </trans-unit>
        <trans-unit id="41ae626b7a60833061db9b61c3b531877bad7302" translate="yes" xml:space="preserve">
          <source>The main server is only used to serve a request if the IP address and port number to which the client connected does not match any vhost (including a &lt;code&gt;*&lt;/code&gt; vhost). In other words, the main server only catches a request for an unspecified address/port combination (unless there is a &lt;code&gt;_default_&lt;/code&gt; vhost which matches that port).</source>
          <target state="translated">メインサーバーは、クライアントが接続しているIPアドレスとポート番号がvhost（ &lt;code&gt;*&lt;/code&gt; vhost を含む）と一致しない場合にのみ、要求を処理するために使用されます。つまり、メインサーバーは、指定されていないアドレスとポートの組み合わせに対する要求のみをキャッチします（そのポートに一致する &lt;code&gt;_default_&lt;/code&gt; vhost がない場合）。</target>
        </trans-unit>
        <trans-unit id="564add9bf0a070f361e490a714723ea161d8899e" translate="yes" xml:space="preserve">
          <source>The main thread is responsible for launching child worker threads which listen for connections and serve them when they arrive. Apache HTTP Server always tries to maintain several</source>
          <target state="translated">メインスレッドは子ワーカースレッドを起動する責任があり、子ワーカースレッドはコネクションを listen し、コネクションが到着したときにそれを処理します。Apache HTTP サーバは常にいくつかの</target>
        </trans-unit>
        <trans-unit id="48d6900510f87ad7946ee98ef0c072caaa6cc267" translate="yes" xml:space="preserve">
          <source>The major thing that influences the response being PUSHed is the request that was simulated. The request URL for a PUSH is given by the application, but where do the request headers come from? For example, will the PUSH request a &lt;code&gt;accept-language&lt;/code&gt; header and if yes with what value?</source>
          <target state="translated">PUSHされる応答に影響する主なものは、シミュレーションされた要求です。PUSHのリクエストURLはアプリケーションによって提供されますが、リクエストヘッダーはどこから取得されますか？たとえば、PUSHは &lt;code&gt;accept-language&lt;/code&gt; ヘッダーを要求しますか？はいの場合、どの値を使用しますか？</target>
        </trans-unit>
        <trans-unit id="2d3167940be95c368cdca2b50d02ff2d39dc719d" translate="yes" xml:space="preserve">
          <source>The map file lists redirection targets for each referer, or, if we just wish to redirect back to where they came from, a &quot;-&quot; is placed in the map:</source>
          <target state="translated">マップファイルには、各参照元のリダイレクト先がリストアップされていますが、元の場所にリダイレクトしたい場合は、マップに&quot;-&quot;が付けられています。</target>
        </trans-unit>
        <trans-unit id="d647f47a9192ab9f3b852a88453de8d4f12779ba" translate="yes" xml:space="preserve">
          <source>The mapping between configuration directives used by Apache-SSL 1.x and mod_ssl 2.0.x is given in &lt;a href=&quot;#table1&quot;&gt;Table 1&lt;/a&gt;. The mapping from Sioux 1.x and Stronghold 2.x is only partial because of special functionality in these interfaces which mod_ssl doesn't provide.</source>
          <target state="translated">&lt;a href=&quot;#table1&quot;&gt;表1に&lt;/a&gt;、Apache-SSL 1.xとmod_ssl 2.0.xで使用される構成ディレクティブ間のマッピングを示します。Sioux 1.xおよびStronghold 2.xからのマッピングは、mod_sslが提供しないこれらのインターフェースの特別な機能のために、部分的です。</target>
        </trans-unit>
        <trans-unit id="e68975c2c6183d96a489465accf446a62d8a9800" translate="yes" xml:space="preserve">
          <source>The mapping between environment variable names used by the older SSL solutions and the names used by mod_ssl is given in &lt;a href=&quot;#table2&quot;&gt;Table 2&lt;/a&gt;.</source>
          <target state="translated">古いSSLソリューションで使用されている環境変数名とmod_sslで使用されている名前の間のマッピングを&lt;a href=&quot;#table2&quot;&gt;表2に示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="eec725c7bf7d14b49447fecc135e55048e26d8e0" translate="yes" xml:space="preserve">
          <source>The maximum file size in followed by exactly one of the letters &lt;code&gt;B&lt;/code&gt; (Bytes), &lt;code&gt;K&lt;/code&gt; (KBytes), &lt;code&gt;M&lt;/code&gt; (MBytes) or &lt;code&gt;G&lt;/code&gt; (GBytes).</source>
          <target state="translated">最大ファイルサイズの後に、 &lt;code&gt;B&lt;/code&gt; （バイト）、 &lt;code&gt;K&lt;/code&gt; （キロバイト）、 &lt;code&gt;M&lt;/code&gt; （メガバイト）、 &lt;code&gt;G&lt;/code&gt; （ギガバイト）のいずれかの文字が正確に続きます。</target>
        </trans-unit>
        <trans-unit id="2162d2bcae692c1ee944afc01a33fa8a59f91ff4" translate="yes" xml:space="preserve">
          <source>The maximum freshness lifetime may also be controlled by using the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachemaxexpire&quot;&gt;CacheMaxExpire&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最大鮮度の有効期間は、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachemaxexpire&quot;&gt;CacheMaxExpire&lt;/a&gt;&lt;/code&gt; を使用して制御することもできます。</target>
        </trans-unit>
        <trans-unit id="929d38b62af775fc3b8d14243e321dd39ef9a867" translate="yes" xml:space="preserve">
          <source>The maximum length of a line in normal configuration files, after variable substitution and joining any continued lines, is approximately 16 MiB. In &lt;a href=&quot;configuring#htaccess&quot;&gt;.htaccess files&lt;/a&gt;, the maximum length is 8190 characters.</source>
          <target state="translated">通常の構成ファイルの行の最大長は、変数置換と継続行の結合後、約16 MiBです。では&lt;a href=&quot;configuring#htaccess&quot;&gt;.htaccessファイル&lt;/a&gt;、最大長は8190文字です。</target>
        </trans-unit>
        <trans-unit id="20c406746afcb464316717b9560a1561dcb93dd0" translate="yes" xml:space="preserve">
          <source>The maximum length of the queue of pending connections. Generally no tuning is needed or desired, however on some systems it is desirable to increase this when under a TCP SYN flood attack. See the backlog parameter to the &lt;code&gt;listen(2)&lt;/code&gt; system call.</source>
          <target state="translated">保留中の接続のキューの最大長。通常、チューニングは必要ありませんが、一部のシステムでは、TCP SYNフラッド攻撃を受けているときにこれを増やすことが望ましい場合があります。 &lt;code&gt;listen(2)&lt;/code&gt; システムコールのbacklogパラメータを参照してください。</target>
        </trans-unit>
        <trans-unit id="ba27e392fdbb1b4d4103c712230ccb90f5770ebc" translate="yes" xml:space="preserve">
          <source>The maximum line size handled by &lt;code&gt;&lt;a href=&quot;mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; is limited to restrict memory use. The limit can be configured using &lt;code&gt;SubstituteMaxLineLength&lt;/code&gt;. The value can be given as the number of bytes and can be suffixed with a single letter &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;K&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt; to provide the size in bytes, kilobytes, megabytes or gigabytes respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; によって処理される最大行サイズは、メモリの使用を制限するために制限されています。制限は &lt;code&gt;SubstituteMaxLineLength&lt;/code&gt; を使用して構成できます。値はバイト数で指定でき、単一の文字 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、 &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;K&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、 &lt;code&gt;M&lt;/code&gt; 、 &lt;code&gt;g&lt;/code&gt; 、 &lt;code&gt;G&lt;/code&gt; をサフィックスとして付けて、それぞれサイズをバイト、キロバイト、メガバイト、またはギガバイトで提供できます。</target>
        </trans-unit>
        <trans-unit id="98a21599e68cb6a3771a292622887f58dd596166" translate="yes" xml:space="preserve">
          <source>The maximum number of PHP-FPM worker processes needs to be configured wisely, since there is the chance that they will all end up &quot;busy&quot; handling idle persistent connections, without any room for new ones to be established, and the end user experience will be a pile of HTTP request timeouts.</source>
          <target state="translated">PHP-FPM ワーカープロセスの最大数は、賢明に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="adbb96ff17488c57f5bac37f9f5bae97a056f3ca" translate="yes" xml:space="preserve">
          <source>The maximum number of referral hops to chase before terminating an LDAP query.</source>
          <target state="translated">LDAP クエリを終了する前に追跡する参照ホップ数の最大値。</target>
        </trans-unit>
        <trans-unit id="158a86454a3151572f700538f72642ac10f36d37" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of a document to be placed in the cache</source>
          <target state="translated">キャッシュに配置されるドキュメントの最大サイズ (バイト単位)</target>
        </trans-unit>
        <trans-unit id="8d51bc350bd96555d7d992e4f08afa9dc8b2ca1c" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of an entry to be placed in the cache</source>
          <target state="translated">キャッシュに配置されるエントリの最大サイズ (バイト単位)</target>
        </trans-unit>
        <trans-unit id="f640ae73e4779a12a115056cd07efec329d58171" translate="yes" xml:space="preserve">
          <source>The maximum time (in seconds) for a document to be placed in the cache</source>
          <target state="translated">ドキュメントがキャッシュに配置されるまでの最大時間(秒単位)</target>
        </trans-unit>
        <trans-unit id="d4c3d7993c9fcf7b2aaf15f65fbbbd4bbfb38fed" translate="yes" xml:space="preserve">
          <source>The maximum time in seconds to cache a document</source>
          <target state="translated">ドキュメントをキャッシュする最大時間を秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="87d5195fac478003e0a9d0f41b7c0d46cff443f1" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;em&gt;MapTypeOptions&lt;/em&gt; argument depends on particular &lt;em&gt;MapType&lt;/em&gt;. See the &lt;a href=&quot;../rewrite/rewritemap&quot;&gt;Using RewriteMap&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;em&gt;MapTypeOptions&lt;/em&gt;引数の意味は、特定の&lt;em&gt;MapType&lt;/em&gt;によって異なります。詳細については、&lt;a href=&quot;../rewrite/rewritemap&quot;&gt;RewriteMap&lt;/a&gt;の使用を参照してください。</target>
        </trans-unit>
        <trans-unit id="f49a2e78f10dc518cbdeb1ee0a574e83ee6644c3" translate="yes" xml:space="preserve">
          <source>The meaning of the pattern can be modified by using any combination of these flags:</source>
          <target state="translated">パターンの意味は、これらのフラグの任意の組み合わせを使用して変更することができます。</target>
        </trans-unit>
        <trans-unit id="1b50916f3871d4aef6347dee7b92aac7fd6a199b" translate="yes" xml:space="preserve">
          <source>The merging of configuration sections is complicated and sometimes directive specific. Always test your changes when creating dependencies on how directives are merged.</source>
          <target state="translated">設定セクションのマージは複雑で、時にはディレクティブ固有のものもあります。ディレクティブがどのようにマージされるかについての依存関係を作成する際には、 常に変更点をテストしてください。</target>
        </trans-unit>
        <trans-unit id="bd6f48f8c22a11618875af7cc8d4aaec26375c11" translate="yes" xml:space="preserve">
          <source>The message digest is used to create a Message Authentication Code (MAC) which is encrypted with the message to verify integrity and to protect against replay attacks.</source>
          <target state="translated">メッセージダイジェストは、メッセージと共に暗号化されたメッセージ認証コード(MAC)を作成するために使用され、完全性を確認し、リプレイ攻撃から保護するために使用されます。</target>
        </trans-unit>
        <trans-unit id="196b06e120358e16a01cadf78351da9ffef06edf" translate="yes" xml:space="preserve">
          <source>The method names listed can be one or more of: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;CONNECT&lt;/code&gt;, &lt;code&gt;OPTIONS&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, and &lt;code&gt;UNLOCK&lt;/code&gt;. &lt;strong&gt;The method name is case-sensitive.&lt;/strong&gt; If &lt;code&gt;GET&lt;/code&gt; is used, it will also restrict &lt;code&gt;HEAD&lt;/code&gt; requests. The &lt;code&gt;TRACE&lt;/code&gt; method cannot be limited (see &lt;code&gt;&lt;a href=&quot;#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">リストされるメソッド名は、 &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、 &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;DELETE&lt;/code&gt; 、 &lt;code&gt;CONNECT&lt;/code&gt; 、 &lt;code&gt;OPTIONS&lt;/code&gt; 、 &lt;code&gt;PATCH&lt;/code&gt; 、 &lt;code&gt;PROPFIND&lt;/code&gt; 、 &lt;code&gt;PROPPATCH&lt;/code&gt; 、 &lt;code&gt;MKCOL&lt;/code&gt; 、 &lt;code&gt;COPY&lt;/code&gt; 、 &lt;code&gt;MOVE&lt;/code&gt; 、 &lt;code&gt;LOCK&lt;/code&gt; 、および &lt;code&gt;UNLOCK&lt;/code&gt; の 1つ以上です。&lt;strong&gt;メソッド名では大文字と小文字が区別されます。&lt;/strong&gt;場合は &lt;code&gt;GET&lt;/code&gt; が使用されている、それはまた、制限します &lt;code&gt;HEAD&lt;/code&gt; の要求を。 &lt;code&gt;TRACE&lt;/code&gt; の方法は、（参照制限することができない &lt;code&gt;&lt;a href=&quot;#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; を）。</target>
        </trans-unit>
        <trans-unit id="3609dbaf591cee1ce78eb65ea60fdcbf5556e19a" translate="yes" xml:space="preserve">
          <source>The minimum group ID number is specified during configuration. This allows you to set the lowest possible groupid that will be allowed to execute CGI/SSI programs. This is useful to block out &quot;system&quot; groups.</source>
          <target state="translated">設定時に最小のグループID番号を指定します。これにより、CGI/SSIプログラムの実行を許可する最小のグループIDを設定することができます。これは「システム」グループをブロックアウトするのに便利です。</target>
        </trans-unit>
        <trans-unit id="fcc5989ca64d2ff815975c06d2b10db55ee1c96f" translate="yes" xml:space="preserve">
          <source>The minimum size (in bytes) of a document to be placed in the cache</source>
          <target state="translated">キャッシュに配置されるドキュメントの最小サイズ (バイト単位)</target>
        </trans-unit>
        <trans-unit id="39756a012460e5e3f2c000adab6b0d114d363e59" translate="yes" xml:space="preserve">
          <source>The minimum size (in bytes) of the document to read and be cached before sending the data downstream</source>
          <target state="translated">下流にデータを送信する前に読み込んでキャッシュされるドキュメントの最小サイズ(バイト数)。</target>
        </trans-unit>
        <trans-unit id="b52d64b85934c4e74f65b4fa5e05c50eea4b801f" translate="yes" xml:space="preserve">
          <source>The minimum time (in milliseconds) that should elapse while reading before data is sent downstream</source>
          <target state="translated">データが下流に送信される前に、読み取り中に経過すべき最小時間(ミリ秒単位)。</target>
        </trans-unit>
        <trans-unit id="c31086f61d0258cb5f9e2da0c3d68ca802799234" translate="yes" xml:space="preserve">
          <source>The minimum time (in seconds) for a document to be placed in the cache</source>
          <target state="translated">ドキュメントがキャッシュに配置されるまでの最短時間(秒)。</target>
        </trans-unit>
        <trans-unit id="b48b4c075469c2f7baa07342ba48389dc7508703" translate="yes" xml:space="preserve">
          <source>The minimum time in seconds to cache a document</source>
          <target state="translated">ドキュメントをキャッシュするための最小時間を秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="f883394c3c6bf7ca7445039b7a619202460c54c0" translate="yes" xml:space="preserve">
          <source>The minimum user ID number is specified during configuration. This allows you to set the lowest possible userid that will be allowed to execute CGI/SSI programs. This is useful to block out &quot;system&quot; accounts.</source>
          <target state="translated">設定時に最小のユーザID番号を指定します。これにより、CGI/SSIプログラムの実行を許可する最小のユーザIDを設定することができます。これは「システム」アカウントをブロックアウトするのに便利です。</target>
        </trans-unit>
        <trans-unit id="fa99cbba5f520688fcb7ce78f500e4be872d52a9" translate="yes" xml:space="preserve">
          <source>The minute part of the current time</source>
          <target state="translated">現在の時刻の分の部分</target>
        </trans-unit>
        <trans-unit id="24167cb333cac931e3b41a4d490f84a7926e1946" translate="yes" xml:space="preserve">
          <source>The mod_ssl program version</source>
          <target state="translated">mod_ssl プログラムのバージョン</target>
        </trans-unit>
        <trans-unit id="a60a9ecdf3af0808439ff2fd9040d89af2de474c" translate="yes" xml:space="preserve">
          <source>The modifiers &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot; can be used for requests that have been internally redirected to choose whether the original or final (respectively) request should be consulted. By default, the &lt;code&gt;%&lt;/code&gt; directives &lt;code&gt;%s, %U, %T, %D,&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt; look at the original request while all others look at the final request. So for example, &lt;code&gt;%&amp;gt;s&lt;/code&gt; can be used to record the final status of the request and &lt;code&gt;%&amp;lt;u&lt;/code&gt; can be used to record the original authenticated user on a request that is internally redirected to an unauthenticated resource.</source>
          <target state="translated">修飾子「&amp;lt;」および「&amp;gt;」を使用して、内部的にリダイレクトされた要求に対して、元の要求と最終的な（それぞれの）要求のどちらを参照するかを選択できます。デフォルトでは、 &lt;code&gt;%&lt;/code&gt; ディレクティブ &lt;code&gt;%s, %U, %T, %D,&lt;/code&gt; および &lt;code&gt;%r&lt;/code&gt; は元のリクエストを参照し、他のすべては最終リクエストを参照します。したがって、たとえば、 &lt;code&gt;%&amp;gt;s&lt;/code&gt; を使用してリクエストの最終ステータスを記録し、 &lt;code&gt;%&amp;lt;u&lt;/code&gt; を使用して、認証されていないリソースに内部的にリダイレクトされるリクエストの元の認証済みユーザーを記録できます。</target>
        </trans-unit>
        <trans-unit id="8909e8427d2e358dc3d93e3f0fa1d0215524ee97" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;../mod/mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; is both an authentication and authorization provider. The module &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; provides authorization and access control based on hostname, IP address or characteristics of the request, but is not part of the authentication provider system. For backwards compatibility with the mod_access, there is a new module &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; は、認証と承認の両方のプロバイダーです。モジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; は、ホスト名、IPアドレス、またはリクエストの特性に基づいて承認とアクセス制御を提供しますが、認証プロバイダーシステムの一部ではありません。mod_accessとの下位互換性のために、新しいモジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="3463f5e402272a371df6ea65adb41ab0779733da" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; should be part of the displayed list. If these requirements are fulfilled you can easily extend your Apache server's functionality by installing your own modules with the DSO mechanism by the help of this &lt;code&gt;apxs&lt;/code&gt; tool:</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; は、表示されるリストの一部である必要があります。これらの要件が満たされている場合、この &lt;code&gt;apxs&lt;/code&gt; ツールを使用してDSOメカニズムで独自のモジュールをインストールすることにより、Apacheサーバーの機能を簡単に拡張できます。</target>
        </trans-unit>
        <trans-unit id="c9498bb1907a5f12658d00478dcd31e4bceb376b" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; implements stickyness on top of two alternative means: cookies and URL encoding. Providing the cookie can be either done by the back-end or by the Apache web server itself. The URL encoding is usually done on the back-end.</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; は、CookieとURLエンコーディングという2つの代替手段に加えてスティッキネスを実装します。Cookieの提供は、バックエンドまたはApache Webサーバー自体で行うことができます。URLエンコードは通常、バックエンドで行われます。</target>
        </trans-unit>
        <trans-unit id="6ee3fdc16499b3620cdf8eab8caada9357f09f09" translate="yes" xml:space="preserve">
          <source>The module has a &lt;code&gt;proxy_fdpass_flusher&lt;/code&gt; provider interface, which allows another module to optionally send the response headers, or even the start of the response body. The default &lt;code&gt;flush&lt;/code&gt; provider disables keep-alive, and sends the response headers, letting the external process just send a response body.</source>
          <target state="translated">モジュールには &lt;code&gt;proxy_fdpass_flusher&lt;/code&gt; プロバイダーインターフェイスがあり、別のモジュールがオプションで応答ヘッダーを送信したり、応答本文の先頭を送信したりできます。デフォルトの &lt;code&gt;flush&lt;/code&gt; プロバイダーは、キープアライブを無効にし、応答ヘッダーを送信して、外部プロセスが応答本文を送信できるようにします。</target>
        </trans-unit>
        <trans-unit id="bc6c1038b911f25e2d16cc91b4cf211c87c61171" translate="yes" xml:space="preserve">
          <source>The module overrides the client IP address for the connection with the useragent IP address reported in the request header configured with the &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">モジュールは、 &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; ディレクティブで構成された要求ヘッダーで報告されたuseragent IPアドレスを使用して、接続のクライアントIPアドレスをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="4202ab1be3dde6bdd03f3f83388148482b40ade7" translate="yes" xml:space="preserve">
          <source>The module will keep a diary of what has been PUSHed for each connection (hashes of URLs, basically) and will not PUSH the same resource twice. When the connection closes, this information is discarded.</source>
          <target state="translated">モジュールは、接続ごとに何がPUSHされたかを日記に残し(基本的にはURLのハッシュ)、同じリソースを2回PUSHすることはありません。接続が終了すると、この情報は破棄されます。</target>
        </trans-unit>
        <trans-unit id="852e902a68e9361d436e800a859edca04e11ce44" translate="yes" xml:space="preserve">
          <source>The module will select from the methods offered by Let's Encrypt. If LE decides at one point in the future, to re-enable it again, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will use it when suitable.</source>
          <target state="translated">モジュールは、Let's Encryptが提供する方法から選択します。LEが将来のある時点でそれを再度有効にすることを決定した場合、 &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; は適切なときにそれを使用します。</target>
        </trans-unit>
        <trans-unit id="22ec897ced5050f06f66fa46e2a4685229e19767" translate="yes" xml:space="preserve">
          <source>The most basic form of caching present in httpd is the file-handle caching provided by &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt;. Rather than caching file-contents, this cache maintains a table of open file descriptors. Files to be cached in this manner are specified in the configuration file using the &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">httpdに存在する最も基本的なキャッシング形式は、 &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; によって提供されるファイルハンドルキャッシングです。このキャッシュは、ファイルのコンテンツをキャッシュするのではなく、開いているファイル記述子のテーブルを保持します。この方法でキャッシュされるファイルは、 &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して構成ファイルで指定されます。</target>
        </trans-unit>
        <trans-unit id="d4764918a41e02be19715b306e1a274b3844db7e" translate="yes" xml:space="preserve">
          <source>The most basic way to set an environment variable in Apache is using the unconditional &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; directive. Variables may also be passed from the environment of the shell which started the server using the &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">Apacheで環境変数を設定する最も基本的な方法は、無条件の &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; ディレクティブを使用することです。変数は、 &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してサーバーを起動したシェルの環境から渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="ecbdd8dfdecf459528118f61751b51d5aa28f3d5" translate="yes" xml:space="preserve">
          <source>The most common situation in which &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; is the right tool is when the very best solution requires access to the server configuration files, and you don't have that access. Some configuration directives are only available in the server configuration file. So if you are in a hosting situation where you only have .htaccess files to work with, you may need to resort to &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; が適切なツールである最も一般的な状況は、最良のソリューションがサーバー構成ファイルへのアクセスを必要とし、そのアクセス権がない場合です。一部の構成ディレクティブは、サーバー構成ファイルでのみ使用できます。したがって、.htaccessファイルのみを操作するホスティング環境にいる場合は、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; に頼る必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="529edc310748634d844f97641e93aad60f10d6ff" translate="yes" xml:space="preserve">
          <source>The most commonly used configuration section containers are the ones that change the configuration of particular places in the filesystem or webspace. First, it is important to understand the difference between the two. The filesystem is the view of your disks as seen by your operating system. For example, in a default install, Apache httpd resides at &lt;code&gt;/usr/local/apache2&lt;/code&gt; in the Unix filesystem or &lt;code&gt;&quot;c:/Program Files/Apache Group/Apache2&quot;&lt;/code&gt; in the Windows filesystem. (Note that forward slashes should always be used as the path separator in Apache httpd configuration files, even for Windows.) In contrast, the webspace is the view of your site as delivered by the web server and seen by the client. So the path &lt;code&gt;/dir/&lt;/code&gt; in the webspace corresponds to the path &lt;code&gt;/usr/local/apache2/htdocs/dir/&lt;/code&gt; in the filesystem of a default Apache httpd install on Unix. The webspace need not map directly to the filesystem, since webpages may be generated dynamically from databases or other locations.</source>
          <target state="translated">最も一般的に使用される構成セクションコンテナーは、ファイルシステムまたはWebスペース内の特定の場所の構成を変更するコンテナーです。まず、2つの違いを理解することが重要です。ファイルシステムは、オペレーティングシステムから見たディスクのビューです。たとえば、デフォルトのインストールでは、Apache httpdはUnixファイルシステムの &lt;code&gt;/usr/local/apache2&lt;/code&gt; またはWindowsファイルシステムの &lt;code&gt;&quot;c:/Program Files/Apache Group/Apache2&quot;&lt;/code&gt; にあります。 （Windowsであっても、Apache httpd構成ファイルでは常にスラッシュをパス区切り文字として使用する必要があることに注意してください。）対照的に、webspaceは、Webサーバーによって配信され、クライアントから見たサイトのビューです。したがって、ウェブスペースのパス &lt;code&gt;/dir/&lt;/code&gt; はパスに対応します &lt;code&gt;/usr/local/apache2/htdocs/dir/&lt;/code&gt; （UNIXでのデフォルトのApache httpdインストールのファイルシステム）。ウェブページはデータベースや他の場所から動的に生成される可能性があるため、ウェブスペースはファイルシステムに直接マッピングする必要はありません。</target>
        </trans-unit>
        <trans-unit id="9626cf23528c8d129429bbf49c60caf5f1c21c75" translate="yes" xml:space="preserve">
          <source>The most important directives used to control this MPM are &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;, which controls the number of threads deployed by each child process and &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt;, which controls the maximum total number of threads that may be launched.</source>
          <target state="translated">このMPMを制御するために使用される最も重要なディレクティブは、 &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; のそれぞれの子プロセスによって展開スレッドの数を制御する、 &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; 起動することができるスレッドの最大数を制御します。</target>
        </trans-unit>
        <trans-unit id="f8bdee00562d7e50d7048e5736e512d73f266dbc" translate="yes" xml:space="preserve">
          <source>The most important option is the location &lt;code&gt;--prefix&lt;/code&gt; where Apache is to be installed later, because Apache has to be configured for this location to work correctly. More fine-tuned control of the location of files is possible with additional &lt;a href=&quot;programs/configure#installationdirectories&quot;&gt;configure options&lt;/a&gt;.</source>
          <target state="translated">最も重要なオプションは、Apacheを後でインストールする場所 &lt;code&gt;--prefix&lt;/code&gt; です。これは、Apacheがこの場所で正しく機能するように構成する必要があるためです。追加の&lt;a href=&quot;programs/configure#installationdirectories&quot;&gt;構成オプションを使用&lt;/a&gt;すると、ファイルの場所をより細かく制御できます。</target>
        </trans-unit>
        <trans-unit id="597db5f46214c8a2c0a58225b6d722ece75022d4" translate="yes" xml:space="preserve">
          <source>The name of a directory or a pattern such as those shown below.</source>
          <target state="translated">ディレクトリ名や下記のようなパターン。</target>
        </trans-unit>
        <trans-unit id="e451ea027c995144ec53e1a9a48938c55519b46a" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying a URL to redirect to on successful login</source>
          <target state="translated">ログイン成功時にリダイレクトするURLを含むフォームフィールドの名前です。</target>
        </trans-unit>
        <trans-unit id="56781fdca5a08149a20fd4edcbdb5eacbc3606ec" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the body of the request to attempt on successful login</source>
          <target state="translated">ログインに成功したときに試行するリクエストの本文を含むフォームフィールドの名前。</target>
        </trans-unit>
        <trans-unit id="ec987c8ba813a6ab05d3f46be5c2d48be2592e95" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the login password</source>
          <target state="translated">ログインパスワードを含むフォームフィールドの名前</target>
        </trans-unit>
        <trans-unit id="7a1d56006a590775be88732e126fb5db7c5a87fa" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the login username</source>
          <target state="translated">ログインユーザー名を含むフォームフィールドの名前</target>
        </trans-unit>
        <trans-unit id="89fb18940a8b79a2c9079866c4305aea2373da70" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the method of the request to attempt on successful login</source>
          <target state="translated">ログインに成功したときに試行するリクエストのメソッドを含むフォームフィールドの名前です。</target>
        </trans-unit>
        <trans-unit id="c417bdcd69f087fd6b1c3b4888f400ff88234093" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the mimetype of the body of the request to attempt on successful login</source>
          <target state="translated">ログインに成功したときに試行するリクエストの本文のmimetypeを含むフォームフィールドの名前。</target>
        </trans-unit>
        <trans-unit id="53773d139ae0f09c7605c9e0d9a9aa1a00455bce" translate="yes" xml:space="preserve">
          <source>The name of an environment variable in the list of those associated with the request. This allows &lt;code&gt;SetEnvIf&lt;/code&gt; directives to test against the result of prior matches. Only those environment variables defined by earlier &lt;code&gt;SetEnvIf[NoCase]&lt;/code&gt; directives are available for testing in this manner. 'Earlier' means that they were defined at a broader scope (such as server-wide) or previously in the current directive's scope. Environment variables will be considered only if there was no match among request characteristics and a regular expression was not used for the &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">リクエストに関連付けられている環境変数のリストにある環境変数の名前。これにより、 &lt;code&gt;SetEnvIf&lt;/code&gt; ディレクティブは以前の一致の結果に対してテストできます。この方法でテストできるのは、以前の &lt;code&gt;SetEnvIf[NoCase]&lt;/code&gt; ディレクティブで定義された環境変数だけです。 「以前」とは、より広い範囲（サーバー全体など）または以前に現在のディレクティブの範囲で定義されていたことを意味します。環境変数は、要求の特性が一致せず、&lt;em&gt;属性に&lt;/em&gt;正規表現が使用されなかった場合にのみ考慮され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fd3721157e6d2940e37c5bc4f0db96055edfafbe" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;../handler&quot;&gt;handler&lt;/a&gt; that should serve this request, f.x. &lt;code&gt;lua-script&lt;/code&gt; if it is to be served by mod_lua. This is typically set by the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; directives, but could also be set via mod_lua to allow another handler to serve up a specific request that would otherwise not be served by it.</source>
          <target state="translated">このリクエストを&lt;a href=&quot;../handler&quot;&gt;処理&lt;/a&gt;するハンドラの名前。mod_luaが処理する場合はfx &lt;code&gt;lua-script&lt;/code&gt; 。これは通常 &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; ディレクティブによって設定されますが、他の方法では提供されない特定のリクエストを別のハンドラーが処理できるようにmod_luaを介して設定することもできます。</target>
        </trans-unit>
        <trans-unit id="3671c45191b386ab290c880bedb8b2f772c8997f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;handler&quot;&gt;handler&lt;/a&gt; creating the response</source>
          <target state="translated">応答を作成する&lt;a href=&quot;handler&quot;&gt;ハンドラー&lt;/a&gt;の名前</target>
        </trans-unit>
        <trans-unit id="e1872ad1b1a5169d151629d868f0355344d75fd2" translate="yes" xml:space="preserve">
          <source>The name of the authenticated user, if any (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">認証されたユーザーの名前（ある &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; ）（&amp;lt;If&amp;gt;の間は使用できません）</target>
        </trans-unit>
        <trans-unit id="570f391ec12fd4e8122950a2d9087b6e02fcdc2b" translate="yes" xml:space="preserve">
          <source>The name of the cookie or request parameter used to lookup the routing information.</source>
          <target state="translated">ルーティング情報を参照するために使用されるクッキーまたはリクエストパラメータの名前。</target>
        </trans-unit>
        <trans-unit id="20ea0eb02e096a37dd58b996376a0180e15ea409" translate="yes" xml:space="preserve">
          <source>The name of the system group that owns the file must be present in a group database, which is provided, for example, by &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_authz_dbm&quot;&gt;mod_authz_dbm&lt;/a&gt;&lt;/code&gt;, and the web-username must be a member of that group. For example, if the operating system says the requested file is owned by (system) group &lt;code&gt;accounts&lt;/code&gt;, the group &lt;code&gt;accounts&lt;/code&gt; must appear in the group database and the web-username used in the request must be a member of that group.</source>
          <target state="translated">ファイルを所有するシステムグループの名前は、たとえば &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_authz_dbm&quot;&gt;mod_authz_dbm&lt;/a&gt;&lt;/code&gt; によって提供されるグループデータベースに存在する必要があり、web-usernameはそのグループのメンバーである必要があります。たとえば、要求されたファイルが（システム）グループ &lt;code&gt;accounts&lt;/code&gt; によって所有されているとオペレーティングシステムが言う場合、グループ &lt;code&gt;accounts&lt;/code&gt; はグループデータベースに表示され、要求で使用されるWebユーザー名はそのグループのメンバーである必要があります。</target>
        </trans-unit>
        <trans-unit id="e7be4a12cde9116e7d831fc3f588007d5dc0ae9e" translate="yes" xml:space="preserve">
          <source>The name of the variable to set.</source>
          <target state="translated">設定する変数名。</target>
        </trans-unit>
        <trans-unit id="16445eae44ae2397b84bb555afa8b84aea658da5" translate="yes" xml:space="preserve">
          <source>The name stems from the &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;Security/Server Side TLS&lt;/a&gt; definitions at mozilla where &quot;modern compatibility&quot; is defined. Mozilla Firefox and other browsers require modern compatibility for HTTP/2 connections. As everything in OpSec, this is a moving target and can be expected to evolve in the future.</source>
          <target state="translated">この名前は、「モダン互換性」が定義されているmozillaでの&lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;セキュリティ/サーバー側TLS&lt;/a&gt;定義に由来しています。Mozilla Firefoxおよびその他のブラウザーでは、HTTP / 2接続の最新の互換性が必要です。OpSecのすべてと同様に、これは動くターゲットであり、将来的に進化することが期待できます。</target>
        </trans-unit>
        <trans-unit id="45654a4828950041d054d70639b74063e27f605a" translate="yes" xml:space="preserve">
          <source>The name-based vhost with the hostname &lt;code&gt;www.example.org&lt;/code&gt; (from our &lt;a href=&quot;#name&quot;&gt;name-based&lt;/a&gt; example, setup 2) should get its own IP address. To avoid problems with name servers or proxies who cached the old IP address for the name-based vhost we want to provide both variants during a migration phase.</source>
          <target state="translated">ホスト名が &lt;code&gt;www.example.org&lt;/code&gt; の名前ベースのvhost （&lt;a href=&quot;#name&quot;&gt;名前ベースの&lt;/a&gt;例、セットアップ2から）は、独自のIPアドレスを取得する必要があります。ネームベースの仮想ホストの古いIPアドレスをキャッシュしたネームサーバーまたはプロキシの問題を回避するために、移行フェーズで両方のバリアントを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a99391ea375b277eb2988d1bd9434ea83c65768" translate="yes" xml:space="preserve">
          <source>The name/port of the ldap server (defaults to &lt;code&gt;localhost:389&lt;/code&gt; for &lt;code&gt;ldap&lt;/code&gt;, and &lt;code&gt;localhost:636&lt;/code&gt; for &lt;code&gt;ldaps&lt;/code&gt;). To specify multiple, redundant LDAP servers, just list all servers, separated by spaces. &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will try connecting to each server in turn, until it makes a successful connection. If multiple ldap servers are specified, then entire LDAP URL must be encapsulated in double quotes.</source>
          <target state="translated">LDAPサーバーの名前/ポート（デフォルト &lt;code&gt;localhost:389&lt;/code&gt; のための &lt;code&gt;ldap&lt;/code&gt; 、および &lt;code&gt;localhost:636&lt;/code&gt; 用 &lt;code&gt;ldaps&lt;/code&gt; ）。複数の冗長LDAPサーバーを指定するには、すべてのサーバーをスペースで区切ってリストします。 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; は、接続が成功するまで、各サーバーへの接続を順番に試みます。複数のLDAPサーバーを指定する場合は、LDAP URL全体を二重引用符で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="f45433dca3d7c2de43781517539fcea6120be7e2" translate="yes" xml:space="preserve">
          <source>The net effect is equivalent to &lt;code&gt;IndexOptions FancyIndexing +SuppressSize&lt;/code&gt;, because the unprefixed &lt;code&gt;FancyIndexing&lt;/code&gt; discarded the incremental keywords before it, but allowed them to start accumulating again afterward.</source>
          <target state="translated">実質的な効果は、 &lt;code&gt;IndexOptions FancyIndexing +SuppressSize&lt;/code&gt; と同等です。これは、接頭辞のない &lt;code&gt;FancyIndexing&lt;/code&gt; がその前のインクリメンタルキーワードを破棄しましたが、後でそれらが再び蓄積され始めるためです。</target>
        </trans-unit>
        <trans-unit id="f86068ce3f7dae1fd16071e70273d10143251fd9" translate="yes" xml:space="preserve">
          <source>The new &lt;em&gt;URL&lt;/em&gt; may be either an absolute URL beginning with a scheme and hostname, or a URL-path beginning with a slash. In this latter case the scheme and hostname of the current server will be added.</source>
          <target state="translated">新しい&lt;em&gt;URL&lt;/em&gt;は、スキームとホスト名で始まる絶対URL、またはスラッシュで始まるURLパスのいずれかです。この後者の場合、現在のサーバーのスキームとホスト名が追加されます。</target>
        </trans-unit>
        <trans-unit id="669243567979f2dc30ba398988598d8e3bff303f" translate="yes" xml:space="preserve">
          <source>The next example assumes that everyone at Example who carries an alphanumeric pager will have an LDAP attribute of &lt;code&gt;qpagePagerID&lt;/code&gt;. The example will grant access only to people (authenticated via their UID) who have alphanumeric pagers:</source>
          <target state="translated">次の例では、英数字のページャーを携帯するExampleの全員が &lt;code&gt;qpagePagerID&lt;/code&gt; の LDAP属性を持っていると想定しています。この例では、英数字のポケットベルを持つ（UIDで認証された）人にのみアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="9941707bedd25e000c194290638e6a803cd244f9" translate="yes" xml:space="preserve">
          <source>The next example demonstrates the power of using filters to accomplish complicated administrative requirements. Without filters, it would have been necessary to create a new LDAP group and ensure that the group's members remain synchronized with the pager users. This becomes trivial with filters. The goal is to grant access to anyone who has a pager, plus grant access to Joe Manager, who doesn't have a pager, but does need to access the same resource:</source>
          <target state="translated">次の例は、複雑な管理要件を達成するためにフィルタを使用する力を示しています。フィルタがなければ、新しい LDAP グループを作成し、そのグループのメンバーがページャーのユーザーと同期したままであることを確認する必要があったでしょう。フィルタを使えば、これは些細なことです。目標は、ページャーを持っている誰にでもアクセスを許可し、さらに、ページャーを持っていないが同じリソースにアクセスする必要があるジョー・マネージャーにもアクセスを許可することです。</target>
        </trans-unit>
        <trans-unit id="030227afc3da4b73caa77a248a7b19d15ee12e24" translate="yes" xml:space="preserve">
          <source>The next example is similar to the previous one, but it uses the common name instead of the UID. Note that this could be problematical if multiple people in the directory share the same &lt;code&gt;cn&lt;/code&gt;, because a search on &lt;code&gt;cn&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return exactly one entry. That's why this approach is not recommended: it's a better idea to choose an attribute that is guaranteed unique in your directory, such as &lt;code&gt;uid&lt;/code&gt;.</source>
          <target state="translated">次の例は前の例と似ていますが、UIDの代わりに共通名を使用しています。ディレクトリ共有内の複数の人が同じならば、これは問題となり得ること注意 &lt;code&gt;cn&lt;/code&gt; 、上の検索ので、 &lt;code&gt;cn&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;正確に一つのエントリを返します。このため、このアプローチは推奨されません &lt;code&gt;uid&lt;/code&gt; など、ディレクトリ内で一意であることが保証されている属性を選択することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="076b31b433ab3b8cbc5bec2e4a0b915a36e5402c" translate="yes" xml:space="preserve">
          <source>The next example is the same as above; but with the fields that have useful defaults omitted. Also, note the use of a redundant LDAP server.</source>
          <target state="translated">次の例は上記と同じですが、有用なデフォルトを持つフィールドは省略されています。また、冗長なLDAPサーバーを使用していることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="1acd11b358ff03b071d2f32a5f764985aa1d7b5e" translate="yes" xml:space="preserve">
          <source>The next step is to configure the Apache source tree for your particular platform and personal requirements. This is done using the script &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; included in the root directory of the distribution. (Developers downloading an unreleased version of the Apache source tree will need to have &lt;code&gt;autoconf&lt;/code&gt; and &lt;code&gt;libtool&lt;/code&gt; installed and will need to run &lt;code&gt;buildconf&lt;/code&gt; before proceeding with the next steps. This is not necessary for official releases.)</source>
          <target state="translated">次のステップは、特定のプラットフォームと個人の要件に合わせてApacheソースツリーを構成することです。これは、ディストリビューションのルートディレクトリに含まれているスクリプト &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; を使用して行われます。 （Apacheソースツリーの未リリースバージョンをダウンロードする開発者は、 &lt;code&gt;autoconf&lt;/code&gt; と &lt;code&gt;libtool&lt;/code&gt; をインストールする必要があり、次のステップに進む前に &lt;code&gt;buildconf&lt;/code&gt; を実行する必要があります。これは公式リリースでは必要ありません。）</target>
        </trans-unit>
        <trans-unit id="ef24b5eb21085d1d3fb86ad73b1849863f645d05" translate="yes" xml:space="preserve">
          <source>The notes supported are as follows:</source>
          <target state="translated">対応しているノートは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="4866537b8f6d3bd1f807d90e1dce9f4781fcf3a6" translate="yes" xml:space="preserve">
          <source>The number of bytes in the file will be included</source>
          <target state="translated">ファイルのバイト数が含まれます。</target>
        </trans-unit>
        <trans-unit id="639e2aa805b70a06f14317f4d8fb1cda4c70dc55" translate="yes" xml:space="preserve">
          <source>The number of bytes remaining to be read from the request body.</source>
          <target state="translated">リクエストボディから読み出す残りのバイト数。</target>
        </trans-unit>
        <trans-unit id="c4b4f9ad9781dc299732b1de8cad3e5e5ea57338" translate="yes" xml:space="preserve">
          <source>The number of characters in subdirectory names</source>
          <target state="translated">サブディレクトリ名の文字数</target>
        </trans-unit>
        <trans-unit id="0573b78695480f6d064c2c87029587285583eb6b" translate="yes" xml:space="preserve">
          <source>The number of concurrent clients used during the test</source>
          <target state="translated">テスト中に使用された同時使用クライアント数</target>
        </trans-unit>
        <trans-unit id="008fc58dbc145cc1469374aed53993b5164950a4" translate="yes" xml:space="preserve">
          <source>The number of connections that resulted in Keep-Alive requests</source>
          <target state="translated">Keep-Aliveリクエストが発生した接続数</target>
        </trans-unit>
        <trans-unit id="198b49e14b4da225082feaf17347303119c39188" translate="yes" xml:space="preserve">
          <source>The number of errors that failed during write (broken pipe).</source>
          <target state="translated">書き込み中に失敗したエラーの数(パイプが壊れている)。</target>
        </trans-unit>
        <trans-unit id="8dca667d321023d3918e212c41bd581204f64ffd" translate="yes" xml:space="preserve">
          <source>The number of file descriptors required exceeds the hard limit.</source>
          <target state="translated">必要なファイル記述子の数がハードリミットを超えています。</target>
        </trans-unit>
        <trans-unit id="452aef4ce80d8e9323cc08c168b3a1d77cd28142" translate="yes" xml:space="preserve">
          <source>The number of idle worker</source>
          <target state="translated">アイドルワーカーの数</target>
        </trans-unit>
        <trans-unit id="f535135fba7ba4cf5fb0654238c38d5de691f1ae" translate="yes" xml:space="preserve">
          <source>The number of levels of subdirectories in the cache.</source>
          <target state="translated">キャッシュ内のサブディレクトリのレベル数。</target>
        </trans-unit>
        <trans-unit id="8c05616e583f5f9f429e755515de872a68bd2457" translate="yes" xml:space="preserve">
          <source>The number of minutes offset from UTC. If omitted, zero is assumed and UTC is used. For example, to use local time in the zone UTC -5 hours, specify a value of &lt;code&gt;-300&lt;/code&gt; for this argument. In most cases, &lt;code&gt;-l&lt;/code&gt; should be used instead of specifying an offset.</source>
          <target state="translated">UTCからのオフセット分数。省略した場合はゼロと見なされ、UTCが使用されます。たとえば、UTC -5時間のゾーンで現地時間を使用するには、この引数に &lt;code&gt;-300&lt;/code&gt; の値を指定します。ほとんどの場合、オフセットを指定する代わりに &lt;code&gt;-l&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0adbdd58719b871a55b452048423ef78d38af4e" translate="yes" xml:space="preserve">
          <source>The number of requests that were considered a failure. If the number is greater than zero, another line will be printed showing the number of requests that failed due to connecting, reading, incorrect content length, or exceptions.</source>
          <target state="translated">失敗とみなされたリクエストの数。この数がゼロよりも大きい場合、接続、読み込み、コンテンツの長さが正しくない、または例外のために失敗したリクエストの数を示す別の行が表示されます。</target>
        </trans-unit>
        <trans-unit id="edb2e14dbd0f22576181bad93072afd5ec9a5b8f" translate="yes" xml:space="preserve">
          <source>The number of responses that were not in the 200 series of response codes. If all responses were 200, this field is not printed.</source>
          <target state="translated">回答コードが200系列ではなかった回答数。すべての回答が200の場合、このフィールドは印刷されません。</target>
        </trans-unit>
        <trans-unit id="82c020d06f9bfab60d0f8fb9f1bc7a95505246dc" translate="yes" xml:space="preserve">
          <source>The number of seconds Apache httpd will wait for a subsequent request before closing the connection. By adding a postfix of ms the timeout can be also set in milliseconds. Once a request has been received, the timeout value specified by the &lt;code&gt;&lt;a href=&quot;#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; directive applies.</source>
          <target state="translated">Apache httpdが接続を閉じる前に後続のリクエストを待機する秒数。msの接尾辞を追加することで、タイムアウトをミリ秒単位で設定することもできます。リクエストが受信されると、 &lt;code&gt;&lt;a href=&quot;#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたタイムアウト値が適用されます。</target>
        </trans-unit>
        <trans-unit id="df5b76dbc4f9c550817e54fb7d6e1590daad1048" translate="yes" xml:space="preserve">
          <source>The number of successful responses received</source>
          <target state="translated">成功した回答の数</target>
        </trans-unit>
        <trans-unit id="f5367ced6147eb3576e889e6d8289f29c461a623" translate="yes" xml:space="preserve">
          <source>The number of times this entry has been revalidated without being deleted.</source>
          <target state="translated">このエントリが削除されずに再検証された回数。</target>
        </trans-unit>
        <trans-unit id="344bb2b41bed2b1df1e90053aea16b1156cdcfcd" translate="yes" xml:space="preserve">
          <source>The number of worker serving requests</source>
          <target state="translated">ワーカーサービングの依頼数</target>
        </trans-unit>
        <trans-unit id="ab8da07991cd8b13ad7d25ea77f344e96836ae88" translate="yes" xml:space="preserve">
          <source>The object ID can be specified either as a descriptive name recognized by the SSL library, such as &lt;code&gt;&quot;nsComment&quot;&lt;/code&gt;, or as a numeric OID, such as &lt;code&gt;&quot;1.2.3.4.5.6&quot;&lt;/code&gt;.</source>
          <target state="translated">オブジェクトIDは、 &lt;code&gt;&quot;nsComment&quot;&lt;/code&gt; などのSSLライブラリによって認識される説明的な名前、または &lt;code&gt;&quot;1.2.3.4.5.6&quot;&lt;/code&gt; などの数値OIDとして指定できます。</target>
        </trans-unit>
        <trans-unit id="18185ef99e91d397665a544d188f465ba0048e88" translate="yes" xml:space="preserve">
          <source>The old &lt;em&gt;URL-path&lt;/em&gt; is a case-sensitive (%-decoded) path beginning with a slash. A relative path is not allowed.</source>
          <target state="translated">古い&lt;em&gt;URLパス&lt;/em&gt;は、スラッシュで始まる大文字と小文字が区別される（％デコード）パスです。相対パスは使用できません。</target>
        </trans-unit>
        <trans-unit id="5c154d8d0c455836847b30e00ba774751ee867ec" translate="yes" xml:space="preserve">
          <source>The one-per-second rule was implemented in an effort to avoid swamping the machine with the startup of new children. If the machine is busy spawning children, it can't service requests. But it has such a drastic effect on the perceived performance of Apache that it had to be replaced. As of Apache 1.3, the code will relax the one-per-second rule. It will spawn one, wait a second, then spawn two, wait a second, then spawn four, and it will continue exponentially until it is spawning 32 children per second. It will stop whenever it satisfies the &lt;code&gt;&lt;a href=&quot;../mod/prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; setting.</source>
          <target state="translated">1秒ごとのルールは、新しい子の起動でマシンがいっぱいになるのを避けるために実装されました。マシンが子のスポーンで忙しい場合、リクエストを処理できません。ただし、Apacheのパフォーマンスに大きな影響を与えるため、交換する必要がありました。Apache 1.3以降、コードは1秒ごとのルールを緩和します。それは1つを生成し、1秒間待機し、次に2を生成し、1秒間待機してから4を生成し、1秒あたり32の子を生成するまで指数関数的に継続します。 &lt;code&gt;&lt;a href=&quot;../mod/prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; 設定を満足するたびに停止します。</target>
        </trans-unit>
        <trans-unit id="0939281d67ae89fee116d51d13d386d81a31a682" translate="yes" xml:space="preserve">
          <source>The only configuration required is to select which cache provider to use. This is the responsibility of modules using the cache, and they enable selection using directives such as &lt;code&gt;&lt;a href=&quot;mod/mod_cache_socache#cachesocache&quot;&gt;CacheSocache&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_authn_socache#authncachesocache&quot;&gt;AuthnCacheSOCache&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslsessioncache&quot;&gt;SSLSessionCache&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">必要な構成は、使用するキャッシュプロバイダーを選択することだけです。これはキャッシュを使用するモジュールの責任であり、それらは &lt;code&gt;&lt;a href=&quot;mod/mod_cache_socache#cachesocache&quot;&gt;CacheSocache&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_authn_socache#authncachesocache&quot;&gt;AuthnCacheSOCache&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslsessioncache&quot;&gt;SSLSessionCache&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt; などのディレクティブを使用して選択を可能にします。</target>
        </trans-unit>
        <trans-unit id="986b54a9e19a65bd9d97753321c9547399d4e143" translate="yes" xml:space="preserve">
          <source>The operators marked as &quot;restricted&quot; are not available in some modules like &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">「制限付き」とマークされた演算子は、 &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; などの一部のモジュールでは使用できません。</target>
        </trans-unit>
        <trans-unit id="72bcdd85e1d8dbff1296bf198123aa70d52a4166" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;Registry-Strict&lt;/code&gt; which is new in Apache HTTP Server 2.0 does the same thing as &lt;code&gt;Registry&lt;/code&gt; but uses only the subkey &lt;code&gt;Shell\ExecCGI\Command&lt;/code&gt;. The &lt;code&gt;ExecCGI&lt;/code&gt; key is not a common one. It must be configured manually in the windows registry and hence prevents accidental program calls on your system.</source>
          <target state="translated">Apache HTTP Server 2.0の新しいオプション &lt;code&gt;Registry-Strict&lt;/code&gt; は &lt;code&gt;Registry&lt;/code&gt; と同じことを行いますが、サブキー &lt;code&gt;Shell\ExecCGI\Command&lt;/code&gt; のみを使用します。 &lt;code&gt;ExecCGI&lt;/code&gt; のキーは一般的なものではありません。Windowsレジストリで手動で設定する必要があるため、システムでの偶発的なプログラム呼び出しを防止します。</target>
        </trans-unit>
        <trans-unit id="0988b3dd961115e47b151101e205b429d7ac99b6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;virtual&lt;/code&gt; modifier turns off the check whether the requested file really exists. This is useful, for example, if you want to use the &lt;code&gt;Action&lt;/code&gt; directive in virtual locations.</source>
          <target state="translated">オプションの &lt;code&gt;virtual&lt;/code&gt; 修飾子は、要求されたファイルが実際に存在するかどうかのチェックをオフにします。これは、たとえば、仮想ロケーションで &lt;code&gt;Action&lt;/code&gt; ディレクティブを使用する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="ac19b50cbdf87351c9e6ea1a7130e071907ea695" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;condition&lt;/var&gt; argument determines which internal table of responses headers this directive will operate against: &lt;code&gt;onsuccess&lt;/code&gt; (default, can be omitted) or &lt;code&gt;always&lt;/code&gt;. The difference between the two lists is that the headers contained in the latter are added to the response even on error, and persisted across internal redirects (for example, ErrorDocument handlers). Note also that repeating this directive with both conditions makes sense in some scenarios because &lt;code&gt;always&lt;/code&gt; is not a superset of &lt;code&gt;onsuccess&lt;/code&gt; with respect to existing headers:</source>
          <target state="translated">オプションの &lt;var&gt;condition&lt;/var&gt; 引数は、このディレクティブが操作する応答ヘッダーの内部テーブルを決定します： &lt;code&gt;onsuccess&lt;/code&gt; （デフォルト、省略可能）または &lt;code&gt;always&lt;/code&gt; 。 2つのリストの違いは、後者に含まれるヘッダーがエラー時にも応答に追加され、内部リダイレクト（たとえば、ErrorDocumentハンドラー）を通じて保持されることです。また、既存のヘッダーに関して &lt;code&gt;always&lt;/code&gt; &lt;code&gt;onsuccess&lt;/code&gt; スーパーセットではないため、両方の条件でこのディレクティブを繰り返すことは、いくつかのシナリオで意味があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="61c06fd8a9fb8a4e98314fc60a361b6aab6c14f7" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;interpolate&lt;/var&gt; keyword, in combination with &lt;code&gt;&lt;a href=&quot;#proxypassinterpolateenv&quot;&gt;ProxyPassInterpolateEnv&lt;/a&gt;&lt;/code&gt;, causes the ProxyPass to interpolate environment variables, using the syntax &lt;var&gt;${VARNAME}&lt;/var&gt;. Note that many of the standard CGI-derived environment variables will not exist when this interpolation happens, so you may still have to resort to &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; for complex rules. Also note that interpolation is supported within the scheme/hostname/port portion of a URL only for variables that are available when the directive is parsed (like &lt;code&gt;&lt;a href=&quot;core#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt;). Dynamic determination of those fields can be accomplished with &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;. The following example describes how to use &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; to dynamically set the scheme to http or https:</source>
          <target state="translated">オプションの &lt;var&gt;interpolate&lt;/var&gt; キーワードを &lt;code&gt;&lt;a href=&quot;#proxypassinterpolateenv&quot;&gt;ProxyPassInterpolateEnv&lt;/a&gt;&lt;/code&gt; と組み合わせて使用すると、ProxyPassは構文 &lt;var&gt;${VARNAME}&lt;/var&gt; を使用して環境変数を補間します。この補間が行われると、標準のCGIから派生した環境変数の多くが存在しないため、複雑なルールでは &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; を使用する必要があることに注意してください。また、ディレクティブが解析されるときに使用できる変数（ &lt;code&gt;&lt;a href=&quot;core#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; など）についてのみ、URLのスキーム/ホスト名/ポート部分内で補間がサポートされることにも注意してください。これらのフィールドの動的な決定は、 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; で実行できます。次の例は、 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; の使用方法を示しています スキームをhttpまたはhttpsに動的に設定するには：</target>
        </trans-unit>
        <trans-unit id="9502315bee5c9bfbc1bd5b86ec0f50602d7e8494" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;interpolate&lt;/var&gt; keyword, used together with &lt;code&gt;ProxyPassInterpolateEnv&lt;/code&gt;, enables interpolation of environment variables specified using the format &lt;var&gt;${VARNAME}&lt;/var&gt;. Note that interpolation is not supported within the scheme portion of a URL.</source>
          <target state="translated">&lt;code&gt;ProxyPassInterpolateEnv&lt;/code&gt; と一緒に使用されるオプションの &lt;var&gt;interpolate&lt;/var&gt; キーワードは、 &lt;var&gt;${VARNAME}&lt;/var&gt; 形式を使用して指定された環境変数の補間を有効にします。補間はURLのスキーマ部分ではサポートされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2e8d0c4c35859cd035d0e2161db5342a7a924377" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;protocol&lt;/var&gt; argument is not required for most configurations. If not specified, &lt;code&gt;https&lt;/code&gt; is the default for port 443 and &lt;code&gt;http&lt;/code&gt; the default for all other ports. The protocol is used to determine which module should handle a request, and to apply protocol specific optimizations with the &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">ほとんどの構成では、オプションの &lt;var&gt;protocol&lt;/var&gt; 引数は必要ありません。指定しない場合、 &lt;code&gt;https&lt;/code&gt; がポート443 のデフォルトであり、 &lt;code&gt;http&lt;/code&gt; が他のすべてのポートのデフォルトです。プロトコルは、どのモジュールが要求を処理するかを決定し、 &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してプロトコル固有の最適化を適用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="704bcc01b862ef219a78fd45dd8ccfa4d640e0c5" translate="yes" xml:space="preserve">
          <source>The optional arguments &quot;early&quot; or &quot;late&quot; control when this script runs relative to other modules.</source>
          <target state="translated">オプションの引数 &quot;early&quot; または &quot;late&quot; は、このスクリプトが他のモジュールから相対的に実行されるタイミングを制御します。</target>
        </trans-unit>
        <trans-unit id="be84208209b86ed6237d426af8b64d0d17511107" translate="yes" xml:space="preserve">
          <source>The optional expression allows to restrict the message if a condition is met. The details of the expression syntax are described in the &lt;a href=&quot;../expr&quot;&gt;ap_expr documentation&lt;/a&gt;. References to HTTP headers will not cause the header names to be added to the Vary header.</source>
          <target state="translated">オプションの式を使用すると、条件が満たされた場合にメッセージを制限できます。式の構文の詳細は、&lt;a href=&quot;../expr&quot;&gt;ap_exprのドキュメントに&lt;/a&gt;記載されています。HTTPヘッダーを参照しても、ヘッダー名はVaryヘッダーに追加されません。</target>
        </trans-unit>
        <trans-unit id="77d51ac3ae66fb817dc41027c3f7156814088676" translate="yes" xml:space="preserve">
          <source>The optional fourth &lt;strong&gt;cond&lt;/strong&gt; argument defines a condition that will be evaluated per Request, provided &lt;code&gt;&lt;a href=&quot;#proxyhtmlinterp&quot;&gt;ProxyHTMLInterp&lt;/a&gt;&lt;/code&gt; is &lt;var&gt;On&lt;/var&gt;. If the condition evaluates FALSE the map will not be applied in this request. If TRUE, or if no condition is defined, the map is applied.</source>
          <target state="translated">オプションの4番目の&lt;strong&gt;cond&lt;/strong&gt;引数は、 &lt;code&gt;&lt;a href=&quot;#proxyhtmlinterp&quot;&gt;ProxyHTMLInterp&lt;/a&gt;&lt;/code&gt; が &lt;var&gt;On&lt;/var&gt; の場合に、リクエストごとに評価される条件を定義します。条件がFALSEと評価された場合、マップはこのリクエストに適用されません。TRUEの場合、または条件が定義されていない場合、マップが適用されます。</target>
        </trans-unit>
        <trans-unit id="c40c94313ae5ac9f0fc63588cae63d9c6b686f1b" translate="yes" xml:space="preserve">
          <source>The optional second &lt;var&gt;protocol&lt;/var&gt; argument of &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; is not required for most configurations. If not specified, &lt;code&gt;https&lt;/code&gt; is the default for port 443 and &lt;code&gt;http&lt;/code&gt; the default for all other ports. The protocol is used to determine which module should handle a request, and to apply protocol specific optimizations with the &lt;code&gt;&lt;a href=&quot;mod/core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; のオプションの2番目の &lt;var&gt;protocol&lt;/var&gt; 引数は、ほとんどの構成では必要ありません。指定しない場合、 &lt;code&gt;https&lt;/code&gt; がポート443 のデフォルトであり、 &lt;code&gt;http&lt;/code&gt; が他のすべてのポートのデフォルトです。プロトコルは、どのモジュールが要求を処理するかを決定し、 &lt;code&gt;&lt;a href=&quot;mod/core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してプロトコル固有の最適化を適用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9eed5a486dad74254cdf826b43038d57891817e0" translate="yes" xml:space="preserve">
          <source>The optional third argument is supported in 2.3.15 and later</source>
          <target state="translated">オプションの第三引数は 2.3.15 以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="b3fd086aa5f636a4321134cf2f358995890762b3" translate="yes" xml:space="preserve">
          <source>The optional third argument may define any of the following &lt;strong&gt;Flags&lt;/strong&gt;. Flags are case-sensitive.</source>
          <target state="translated">オプションの3番目の引数は、次の&lt;strong&gt;フラグの&lt;/strong&gt;いずれかを定義できます。フラグでは大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="b3e47697c3ba494489ee73424bd17fc69f176839" translate="yes" xml:space="preserve">
          <source>The order of merging is:</source>
          <target state="translated">合体の順番は</target>
        </trans-unit>
        <trans-unit id="89501625ad2bc59a365717e781744f59a61aaa02" translate="yes" xml:space="preserve">
          <source>The order of protocols mentioned is also relevant. By default, the first one is the most preferred protocol. When a client offers multiple choices, the one most to the left is selected. In</source>
          <target state="translated">言及されたプロトコルの順序も関連しています。デフォルトでは、最初のものが最も好まれるプロトコルです。クライアントが複数の選択肢を提供している場合、最も左にあるものが選択されます。このような場合には、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="60bdfbd0a30b8bcea537d6d6319531a80d78d01e" translate="yes" xml:space="preserve">
          <source>The order of rules in the ruleset is important because the rewriting engine processes them in a special (and not very obvious) order. The rule is this: The rewriting engine loops through the ruleset rule by rule (&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives) and when a particular rule matches it optionally loops through existing corresponding conditions (&lt;code&gt;RewriteCond&lt;/code&gt; directives). For historical reasons the conditions are given first, and so the control flow is a little bit long-winded. See Figure 1 for more details.</source>
          <target state="translated">ルールセット内のルールの順序は重要です。これは、書き換えエンジンが特別な（あまり明確ではない）順序でルールを処理するためです。ルールは次のとおりです。書き換えエンジンはルールセット &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ルールセットをループし（RewriteRuleディレクティブ）、特定のルールが一致すると、オプションで既存の対応する条件をループします（ &lt;code&gt;RewriteCond&lt;/code&gt; ディレクティブ）。歴史的な理由により、条件が最初に与えられるため、制御フローは少し時間がかかります。詳細については、図1を参照してください。</target>
        </trans-unit>
        <trans-unit id="70b9340be9f97ad6eb54fd4698b1544b36eadbc7" translate="yes" xml:space="preserve">
          <source>The ordering of the lookup when the physical port is used is as follows:</source>
          <target state="translated">物理ポートを使用する場合のルックアップの順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e7d884e471cddbd543106af4848581251a5781ed" translate="yes" xml:space="preserve">
          <source>The ordering was chosen such that it's possible to change the encoding in the future without worrying about collision with an existing database of &lt;code&gt;UNIQUE_ID&lt;/code&gt;s. The new encodings should also keep the time stamp as the first element, and can otherwise use the same alphabet and bit length. Since the time stamps are essentially an increasing sequence, it's sufficient to have a &lt;em&gt;flag second&lt;/em&gt; in which all machines in the cluster stop serving any request, and stop using the old encoding format. Afterwards they can resume requests and begin issuing the new encodings.</source>
          <target state="translated">順序付けは、 &lt;code&gt;UNIQUE_ID&lt;/code&gt; の既存のデータベースとの衝突を心配することなく、将来的にエンコードを変更できるように選択されました。新しいエンコーディングでは、最初の要素としてタイムスタンプも保持する必要があり、そうでなければ同じアルファベットとビット長を使用できます。タイムスタンプは基本的に増加するシーケンスであるため、クラスター内のすべてのマシンが要求の処理を停止し、古いエンコード形式の使用を停止する&lt;em&gt;フラグを2番目&lt;/em&gt;に設定するだけで十分です。その後、リクエストを再開し、新しいエンコーディングの発行を開始できます。</target>
        </trans-unit>
        <trans-unit id="41ac6454663d41c12c79ce421008cb69a7f5e3e3" translate="yes" xml:space="preserve">
          <source>The origin of this software must not be misrepresented, either by explicit claim or by omission. Since few users ever read sources, credits must appear in the documentation.</source>
          <target state="translated">このソフトウェアの出所は、明示的な主張や不作為による不実表示であってはなりません。ほとんどのユーザーがソースを読むことはありませんので、クレジットは必ずドキュメントに記載してください。</target>
        </trans-unit>
        <trans-unit id="c6b36f708ecaf0a73f73e279544e4de9c097eb42" translate="yes" xml:space="preserve">
          <source>The original host requested by the client in the &lt;code&gt;Host&lt;/code&gt; HTTP request header.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; HTTPリクエストヘッダーでクライアントがリクエストした元のホスト。</target>
        </trans-unit>
        <trans-unit id="d5010c580ebae3a79f3201a7ba4cc1dbde7eb198" translate="yes" xml:space="preserve">
          <source>The original request, and the substitution, are underneath the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; (as opposed to reachable by other means, such as &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">元のリクエストと置換は、 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の下にあります（ &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; などの他の方法では到達できません）。</target>
        </trans-unit>
        <trans-unit id="0889598f79a3e00ed1bf93a67f28e31e2861f018" translate="yes" xml:space="preserve">
          <source>The other anchor, this matches the end of the string.</source>
          <target state="translated">もう一つのアンカー、これは文字列の端と一致します。</target>
        </trans-unit>
        <trans-unit id="ffa8e51628627ca38691adee51f2573d2d73dafc" translate="yes" xml:space="preserve">
          <source>The other effect of enabling &lt;code&gt;ProxyHTMLMeta&lt;/code&gt; is to parse all &lt;code&gt;&amp;lt;meta http-equiv=...&amp;gt;&lt;/code&gt; declarations and convert them to real HTTP headers, in keeping with the original purpose of this form of the HTML &amp;lt;meta&amp;gt; element.</source>
          <target state="translated">&lt;code&gt;ProxyHTMLMeta&lt;/code&gt; を有効にするもう1つの効果は、HTMLの&amp;lt;meta&amp;gt;要素のこのフォームの本来の目的に沿って、すべての &lt;code&gt;&amp;lt;meta http-equiv=...&amp;gt;&lt;/code&gt; 宣言を解析し、それらを実際のHTTPヘッダーに変換することです。</target>
        </trans-unit>
        <trans-unit id="bbcc37311f04473bbec8beeadd3e276db907b164" translate="yes" xml:space="preserve">
          <source>The other method is to use the &lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">もう1つの方法は、 &lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; ディレクティブを使用することです。</target>
        </trans-unit>
        <trans-unit id="02f4bafcd1dbcd4fe179de6f385e2a461b6225bc" translate="yes" xml:space="preserve">
          <source>The other thing to determine is the document root (configured with &lt;code&gt;DocumentRoot&lt;/code&gt; and available to CGI scripts via the &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; environment variable). In a normal configuration, this is used by the core module when mapping URIs to filenames, but when the server is configured to do dynamic virtual hosting, that job must be taken over by another module (either &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;), which has a different way of doing the mapping. Neither of these modules is responsible for setting the &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; environment variable so if any CGIs or SSI documents make use of it, they will get a misleading value.</source>
          <target state="translated">決定するもう1つのことは、ドキュメントルートです（ &lt;code&gt;DocumentRoot&lt;/code&gt; で構成され、 &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; 環境変数を介してCGIスクリプトで使用できます）。通常の構成では、これはURIをファイル名にマッピングするときにコアモジュールによって使用されますが、サーバーが動的仮想ホスティングを実行するように構成されている場合、そのジョブは別のモジュール（ &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; ）に引き継がれる必要があります。マッピングを行う方法。これらのモジュールはいずれも、 &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; 環境変数の設定を担当しないため、CGIまたはSSIドキュメントがそれを使用すると、誤解を招く値が取得されます。</target>
        </trans-unit>
        <trans-unit id="3846b8275990289314a1c6e8cc44b69258eece3c" translate="yes" xml:space="preserve">
          <source>The output of your CGI program</source>
          <target state="translated">CGI プログラムの出力</target>
        </trans-unit>
        <trans-unit id="9f8fc06dd59c09bf38b026e8ecd605da313ded9c" translate="yes" xml:space="preserve">
          <source>The overall aim of this technique is to reduce the number of subdirectories or files that may be in a particular directory, as most file-systems slow down as this number increases. With setting of &quot;1&quot; for &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; there can at most be 64 subdirectories at any particular level. With a setting of 2 there can be 64 * 64 subdirectories, and so on. Unless you have a good reason not to, using a setting of &quot;1&quot; for &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; is recommended.</source>
          <target state="translated">この手法の全体的な目的は、特定のディレクトリにある可能性のあるサブディレクトリまたはファイルの数を減らすことです。この数が増えると、ほとんどのファイルシステムが遅くなります。 &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; を「1」に設定すると、特定のレベルで最大64個のサブディレクトリが存在できます。2に設定すると、64 * 64のサブディレクトリが存在する可能性があります。特に理由がない限り、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; に「1」を設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="46e094d80f58111878aff7e7ccbb65188136099a" translate="yes" xml:space="preserve">
          <source>The parent process' job is to manage the child processes. This involves spawning children as required to ensure there are always &lt;code&gt;&lt;a href=&quot;mpm_common#startservers&quot;&gt;StartServers&lt;/a&gt;&lt;/code&gt; processes accepting connections.</source>
          <target state="translated">親プロセスの仕事は、子プロセスを管理することです。これには、接続を受け入れる &lt;code&gt;&lt;a href=&quot;mpm_common#startservers&quot;&gt;StartServers&lt;/a&gt;&lt;/code&gt; プロセスが常に存在するようにするために、必要に応じて子を生成することが含まれます。</target>
        </trans-unit>
        <trans-unit id="c63c4279889a3799dc64aa5a4b6a74ee1e5f3d12" translate="yes" xml:space="preserve">
          <source>The part that does the actual login is handled by the &lt;var&gt;form-login-handler&lt;/var&gt;. The action of the form should point at this handler, which is configured within Apache httpd as follows:</source>
          <target state="translated">実際のログインを行う部分は &lt;var&gt;form-login-handler&lt;/var&gt; によって処理されます。フォームのアクションは、このハンドラをポイントする必要があります。このハンドラは、Apache httpd内で次のように構成されています。</target>
        </trans-unit>
        <trans-unit id="3aaa8d0206ed8ffe8831403116bacafeb8aa355b" translate="yes" xml:space="preserve">
          <source>The passphrase can be inserted into a user session by adding this directive to the configuration for the &lt;var&gt;form-login-handler&lt;/var&gt;. The &lt;var&gt;form-login-handler&lt;/var&gt; itself will always run the authentication checks, regardless of whether a passphrase is specified or not.</source>
          <target state="translated">このディレクティブを &lt;var&gt;form-login-handler&lt;/var&gt; の構成に追加することにより、パスフレーズをユーザーセッションに挿入できます。 &lt;var&gt;form-login-handler&lt;/var&gt; 自体は関係なく、常にパスフレーズが指定されているかどうかの、認証チェックを実行します。</target>
        </trans-unit>
        <trans-unit id="2a5db3133be0ba10357112e02dd3c461e74c9fc7" translate="yes" xml:space="preserve">
          <source>The password entered must be a valid email address, &lt;em&gt;i.e.&lt;/em&gt; contain at least one '@' and a '.'. (&lt;code&gt;&lt;a href=&quot;#anonymous_verifyemail&quot;&gt;Anonymous_VerifyEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">入力するパスワードは有効なメールアドレスである必要があります。&lt;em&gt;つまり&lt;/em&gt;、少なくとも1つの「@」と「。」が含まれている必要があります。（ &lt;code&gt;&lt;a href=&quot;#anonymous_verifyemail&quot;&gt;Anonymous_VerifyEmail&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b0f348a51692e24da9674248212ccb7eca31b0f7" translate="yes" xml:space="preserve">
          <source>The password section contains the encrypted password as before. This is followed by a colon and the comma separated list of groups. Other data may optionally be left in the DBM file after another colon; it is ignored by the authorization module. This is what www.telescope.org uses for its combined password and group database.</source>
          <target state="translated">パスワードセクションには、以前と同様に暗号化されたパスワードが含まれています。これには、コロンとカンマで区切られたグループのリストが続きます。その他のデータは、コロンの後にDBMファイルに残すこともできますが、認証モジュールでは無視されます。これは www.telescope.org がパスワードとグループを組み合わせたデータベースに使用しているものです。</target>
        </trans-unit>
        <trans-unit id="ab55f8708dabee0b2177c205f979a035e54932b2" translate="yes" xml:space="preserve">
          <source>The password used in this example is the DES encrypted string &quot;password&quot;. See the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; docs for more information.</source>
          <target state="translated">この例で使用されるパスワードは、DES暗号化文字列「password」です。詳細については、 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="31fc1955c9f90bb4d277b1f61b923f57baf1fa9b" translate="yes" xml:space="preserve">
          <source>The password which is transmitted in such a way is not encrypted on its way. It travels between your browser and the Apache proxy server in a base64-encoded cleartext string, and between the Apache proxy and the FTP server as plaintext. You should therefore think twice before accessing your FTP server via HTTP (or before accessing your personal files via FTP at all!) When using insecure channels, an eavesdropper might intercept your password on its way.</source>
          <target state="translated">このようにして送信されるパスワードは暗号化されていません。ブラウザと Apache プロキシサーバの間では base64 エンコードされたクリアテキスト文字列で、Apache プロキシと FTP サーバの間ではプレーンテキストで送信されます。したがって、HTTP 経由で FTP サーバにアクセスする前に (あるいは、FTP 経由で個人ファイルにアクセスする前に)は、よく考えてください。</target>
        </trans-unit>
        <trans-unit id="1a81af072f45da4bf951034a9997a9e4d6365fa2" translate="yes" xml:space="preserve">
          <source>The pasword file referenced in the &lt;code&gt;&lt;a href=&quot;#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; directive may be created and managed using the &lt;code&gt;&lt;a href=&quot;../programs/htdigest&quot;&gt;htdigest&lt;/a&gt;&lt;/code&gt; tool.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; ディレクティブで参照されるパスワードファイルは、 &lt;code&gt;&lt;a href=&quot;../programs/htdigest&quot;&gt;htdigest&lt;/a&gt;&lt;/code&gt; ツールを使用して作成および管理できます。</target>
        </trans-unit>
        <trans-unit id="b2429f358325f301d686bb499e64a9d7cdbac145" translate="yes" xml:space="preserve">
          <source>The path component of the balancer URL in any &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; container directive is ignored.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; コンテナディレクティブのバランサURLのパスコンポーネントは無視されます。</target>
        </trans-unit>
        <trans-unit id="e85df4aa22b05a10059f99f5ac417f2e316bf509" translate="yes" xml:space="preserve">
          <source>The path component of the requested URI, such as &quot;/index.html&quot;. This notably excludes the query string which is available as its own variable named &lt;code&gt;QUERY_STRING&lt;/code&gt;.</source>
          <target state="translated">「/index.html」など、リクエストされたURIのパスコンポーネント。これは特に、 &lt;code&gt;QUERY_STRING&lt;/code&gt; という名前の独自の変数として使用可能なクエリ文字列を除外します。</target>
        </trans-unit>
        <trans-unit id="b5794485af21b20205ea044c293ffaae68c26f7c" translate="yes" xml:space="preserve">
          <source>The path on the &lt;code&gt;SSLStaplingCache&lt;/code&gt; directive (e.g., &lt;code&gt;logs/&lt;/code&gt;) should match the one on the &lt;code&gt;SSLSessionCache&lt;/code&gt; directive. This path is relative to &lt;code&gt;ServerRoot&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSLStaplingCache&lt;/code&gt; ディレクティブ（ &lt;code&gt;logs/&lt;/code&gt; ）のパスは、SSLSessionCacheディレクティブのパスと一致する必要があり &lt;code&gt;SSLSessionCache&lt;/code&gt; 。このパスは &lt;code&gt;ServerRoot&lt;/code&gt; からの相対パスです。</target>
        </trans-unit>
        <trans-unit id="7b848717fcf9ebb82c35d7e37faa7e8dc4654e29" translate="yes" xml:space="preserve">
          <source>The path part of the request's URI</source>
          <target state="translated">リクエストのURIのパス部分</target>
        </trans-unit>
        <trans-unit id="9c1a2844c8b327fef8d89e87c6a64579cfe7eef0" translate="yes" xml:space="preserve">
          <source>The path plus basename of the logfile. If &lt;var&gt;logfile&lt;/var&gt; includes any '%' characters, it is treated as a format string for &lt;code&gt;strftime(3)&lt;/code&gt;. Otherwise, the suffix &lt;var&gt;.nnnnnnnnnn&lt;/var&gt; is automatically added and is the time in seconds (unless the -t option is used). Both formats compute the start time from the beginning of the current period. For example, if a rotation time of 86400 is specified, the hour, minute, and second fields created from the &lt;code&gt;strftime(3)&lt;/code&gt; format will all be zero, referring to the beginning of the current 24-hour period (midnight).</source>
          <target state="translated">ログファイルのパスとベース名。 &lt;var&gt;logfile&lt;/var&gt; に '％'文字が含まれている場合、それは &lt;code&gt;strftime(3)&lt;/code&gt; のフォーマット文字列として扱われます。それ以外の場合は、サフィックス &lt;var&gt;.nnnnnnnnnn&lt;/var&gt; が自動的に追加され、秒単位の時間になります（-tオプションが使用されている場合を除く）。どちらの形式でも、現在の期間の初めから開始時間が計算されます。たとえば、86400のローテーション時間を指定した場合、 &lt;code&gt;strftime(3)&lt;/code&gt; 形式から作成された時間、分、秒のフィールドはすべて、現在の24時間の始まり（午前0時）を参照してゼロになります。</target>
        </trans-unit>
        <trans-unit id="9e45c428727b97588440a23c6e3e0584821c32a7" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;suexec&lt;/code&gt; binary must be hard-coded in the server for security reasons. Use this option to override the default path. &lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;--with-suexec-bin=/usr/sbin/suexec&lt;/code&gt;</source>
          <target state="translated">セキュリティ上の理由から、 &lt;code&gt;suexec&lt;/code&gt; バイナリへのパスはサーバーでハードコーディングする必要があります。このオプションを使用して、デフォルトのパスを上書きします。&lt;em&gt;例&lt;/em&gt; &lt;code&gt;--with-suexec-bin=/usr/sbin/suexec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="204007aa8b0204c5decfc8adfad578d8f5fadb93" translate="yes" xml:space="preserve">
          <source>The path, on the current website, for which the cookie is valid, such as &lt;code&gt;/customers/&lt;/code&gt; or &lt;code&gt;/files/download/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/customers/&lt;/code&gt; や &lt;code&gt;/files/download/&lt;/code&gt; など、Cookieが有効な現在のWebサイト上のパス。</target>
        </trans-unit>
        <trans-unit id="2a2f56ac73307cd71bb2daae91a69b3bba4cd8bb" translate="yes" xml:space="preserve">
          <source>The peer IP address of the connection (see the &lt;code&gt;&lt;a href=&quot;mod/mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; module)</source>
          <target state="translated">接続のピアIPアドレス（ &lt;code&gt;&lt;a href=&quot;mod/mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; モジュールを参照）</target>
        </trans-unit>
        <trans-unit id="89b2334e72c30ac15cf8059b10a9796955b15764" translate="yes" xml:space="preserve">
          <source>The per-server configs for each module from the main server are merged into the vhost server.</source>
          <target state="translated">メインサーバからの各モジュールのサーバ単位の設定は、vhost サーバにマージされます。</target>
        </trans-unit>
        <trans-unit id="7861d1966bfdd123146241b6c37c01deefbb646b" translate="yes" xml:space="preserve">
          <source>The percent sign</source>
          <target state="translated">パーセント記号</target>
        </trans-unit>
        <trans-unit id="193c7846a8dae38af233e97f056ffc03fd341a27" translate="yes" xml:space="preserve">
          <source>The percent sign.</source>
          <target state="translated">パーセント記号。</target>
        </trans-unit>
        <trans-unit id="a06da59c4c14f57647983985a3dfb07d35f94e18" translate="yes" xml:space="preserve">
          <source>The pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot;, followed by the path to a program to receive the log information on its standard input. See the notes on &lt;a href=&quot;../logs#piped&quot;&gt;piped logs&lt;/a&gt; for more information.</source>
          <target state="translated">パイプ文字「 &lt;code&gt;|&lt;/code&gt; 」の後に、標準入力のログ情報を受け取るプログラムへのパスが続きます。詳細については、&lt;a href=&quot;../logs#piped&quot;&gt;パイプされたログ&lt;/a&gt;に関する注意を参照してください。</target>
        </trans-unit>
        <trans-unit id="98dcdefa120e50152549a7aeaa6d3bc289bbc765" translate="yes" xml:space="preserve">
          <source>The pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot;, followed by the path to a program to receive the log information on its standard input. The program name can be specified relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">パイプ文字「 &lt;code&gt;|&lt;/code&gt; 」の後に、標準入力のログ情報を受け取るプログラムへのパスが続きます。プログラム名は、 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; ディレクティブに対して相対的に指定できます。</target>
        </trans-unit>
        <trans-unit id="8641c8d10fcb951b16156edb128b2e700a69c76d" translate="yes" xml:space="preserve">
          <source>The plaintext password to be encrypted and stored in the DBM file. Used only with the &lt;code&gt;-b&lt;/code&gt; flag.</source>
          <target state="translated">暗号化されてDBMファイルに保存されるプレーンテキストのパスワード。 &lt;code&gt;-b&lt;/code&gt; フラグと一緒にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="f517d591adb9acc522cb74fa7355266946710d52" translate="yes" xml:space="preserve">
          <source>The plaintext password to be encrypted and stored in the file. Only used with the &lt;code&gt;-b&lt;/code&gt; flag.</source>
          <target state="translated">暗号化してファイルに保存するプレーンテキストのパスワード。 &lt;code&gt;-b&lt;/code&gt; フラグと一緒にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="6d068a1c119f4a7747e3160d2b9d0b6f1d9cdb3c" translate="yes" xml:space="preserve">
          <source>The plus character at the beginning indicates that this is the first log line of this request. The second line just contains a minus character and the ID again:</source>
          <target state="translated">先頭のプラスの文字は、これがこのリクエストの最初のログ行であることを示しています。二行目にはマイナス文字と再びIDが含まれているだけです。</target>
        </trans-unit>
        <trans-unit id="7a942f504ec323503307710a2dca2f37f09e6262" translate="yes" xml:space="preserve">
          <source>The policy of the Apache HTTP Server project is to only release Unix sources. Windows source packages made available for download have been supplied by volunteers and may not be available for every release. You can still build the server on Windows from the Unix source tarball with just a few additional steps.</source>
          <target state="translated">Apache HTTP サーバプロジェクトのポリシーは、Unix のソースのみをリリースすることです。ダウンロード可能な Windows のソースパッケージはボランティアによって提供されたもので、 すべてのリリースで利用できるとは限りません。いくつかの追加のステップを踏むだけで、Unix ソースの tarball から Windows 上でサーバをビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="a47baab77ebac0d2d207f3034749928d5a07faef" translate="yes" xml:space="preserve">
          <source>The port of the remote host (2.4.26 and later)</source>
          <target state="translated">リモートホストのポート(2.4.26以降)</target>
        </trans-unit>
        <trans-unit id="41bd519fee2336434594d1aa15c29c2134032da3" translate="yes" xml:space="preserve">
          <source>The port to which ab is connecting. If no port is given on the command line, this will default to 80 for http and 443 for https.</source>
          <target state="translated">abが接続しているポート。コマンドラインでポートが指定されていない場合、httpの場合は80、httpsの場合は443がデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="f96a63af4bb006dc4318b22805fc5e99ea412acb" translate="yes" xml:space="preserve">
          <source>The port was started initially to</source>
          <target state="translated">港は当初</target>
        </trans-unit>
        <trans-unit id="1c23fdd16e088538b85bc6354ba4e79bd2c9a684" translate="yes" xml:space="preserve">
          <source>The possibility to translate between ASCII and EBCDIC at the socket level (on BS2000 POSIX, there is a socket option which supports this) was intentionally &lt;em&gt;not&lt;/em&gt; chosen, because the byte stream at the HTTP protocol level consists of a mixture of protocol related strings and non-protocol related raw file data. HTTP protocol strings are always encoded in ASCII (the &lt;code&gt;GET&lt;/code&gt; request, any Header: lines, the chunking information &lt;em&gt;etc.&lt;/em&gt;) whereas the file transfer parts (&lt;em&gt;i.e.&lt;/em&gt;, GIF images, CGI output &lt;em&gt;etc.&lt;/em&gt;) should usually be just &quot;passed through&quot; by the server. This separation between &quot;protocol string&quot; and &quot;raw data&quot; is reflected in the server code by functions like &lt;code&gt;bgets()&lt;/code&gt; or &lt;code&gt;rvputs()&lt;/code&gt; for strings, and functions like &lt;code&gt;bwrite()&lt;/code&gt; for binary data. A global translation of everything would therefore be inadequate.</source>
          <target state="translated">ソケットレベルでASCIIとEBCDICの間で変換する可能性は（BS2000 POSIXに、これをサポートするソケットオプションがある）意図し&lt;em&gt;ていない&lt;/em&gt; HTTPプロトコルレベルでのバイトストリームは、プロトコル関連の文字列と非の混合物からなるので、選択されました-プロトコル関連の生ファイルデータ。 HTTPプロトコル文字列は常にASCII（ &lt;code&gt;GET&lt;/code&gt; リクエスト、ヘッダー：行、チャンク情報&lt;em&gt;など&lt;/em&gt;）でエンコードされますが、ファイル転送部分（&lt;em&gt;つまり&lt;/em&gt;、GIF画像、CGI出力&lt;em&gt;など&lt;/em&gt;）は通常、サーバ。 「プロトコル文字列」と「生データ」の間のこの分離 &lt;code&gt;bgets()&lt;/code&gt; や &lt;code&gt;rvputs()&lt;/code&gt; などの関数によってサーバーコードに反映される文字列の場合、バイナリデータの場合は &lt;code&gt;bwrite()&lt;/code&gt; などの関数。したがって、すべてをグローバルに翻訳することは不十分です。</target>
        </trans-unit>
        <trans-unit id="6f4c7b546bf15f3fff14ddc9165ee4485afe95d9" translate="yes" xml:space="preserve">
          <source>The precedence of language variants for cases where the client does not express a preference</source>
          <target state="translated">クライアントが好みを表明しない場合の言語バリアントの優先順位</target>
        </trans-unit>
        <trans-unit id="893ca8c5ab774d3acec1a3b0e4346ed9dbc3caeb" translate="yes" xml:space="preserve">
          <source>The presence of an &lt;code&gt;Order&lt;/code&gt; directive can affect access to a part of the server even in the absence of accompanying &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives because of its effect on the default access state. For example,</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; ディレクティブが存在すると、デフォルトのアクセス状態に影響を与えるため、 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; ディレクティブが付随していない場合でも、サーバーの一部へのアクセスに影響を与える可能性があります。例えば、</target>
        </trans-unit>
        <trans-unit id="7c34bd3c27a3511fdc3c1bec73eb01c6fb1ff092" translate="yes" xml:space="preserve">
          <source>The primary Windows platform for running Apache 2.4 is Windows 2000 or later. Always obtain and install the current service pack to avoid operating system bugs.</source>
          <target state="translated">Apache 2.4 を実行するための主要な Windows プラットフォームは Windows 2000 以降です。オペレーティングシステムのバグを避けるために、常に最新のサービスパックを入手してインストールしてください。</target>
        </trans-unit>
        <trans-unit id="eb96a3a028f303088d4412b96532e10386ed5678" translate="yes" xml:space="preserve">
          <source>The primary documentation for this build mechanism is in the &lt;code&gt;README.cmake&lt;/code&gt; file in the source distribution. Refer to that file for detailed instructions.</source>
          <target state="translated">このビルドメカニズムの主要なドキュメントは、ソースディストリビューションの &lt;code&gt;README.cmake&lt;/code&gt; ファイルにあります。詳細な手順については、そのファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="d3842c45bbc3e47531acc62ee7b9d1cf72d70f11" translate="yes" xml:space="preserve">
          <source>The primary limitations of the cmake-based build are inherited from the APR-util project, and are listed below because of their impact on httpd:</source>
          <target state="translated">cmake ベースのビルドの主な制限事項は APR-util プロジェクトから継承されており、httpd への影響を考慮して以下に列挙します。</target>
        </trans-unit>
        <trans-unit id="3aa732e89344680ab4c36883263604e598c1595b" translate="yes" xml:space="preserve">
          <source>The primary purpose of the &lt;code&gt;AcceptPathInfo&lt;/code&gt; directive is to allow you to override the handler's choice of accepting or rejecting &lt;code&gt;PATH_INFO&lt;/code&gt;. This override is required, for example, when you use a &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt;, such as &lt;a href=&quot;mod_include&quot;&gt;INCLUDES&lt;/a&gt;, to generate content based on &lt;code&gt;PATH_INFO&lt;/code&gt;. The core handler would usually reject the request, so you can use the following configuration to enable such a script:</source>
          <target state="translated">&lt;code&gt;AcceptPathInfo&lt;/code&gt; ディレクティブの主な目的は、ハンドラーが &lt;code&gt;PATH_INFO&lt;/code&gt; を受け入れるか拒否するかの選択をオーバーライドできるようにすることです。このオーバーライドは、たとえば、&lt;a href=&quot;mod_include&quot;&gt;INCLUDES&lt;/a&gt;などの&lt;a href=&quot;../filter&quot;&gt;フィルタ&lt;/a&gt;を使用して &lt;code&gt;PATH_INFO&lt;/code&gt; に基づいてコンテンツを生成する場合に必要です。コアハンドラーは通常、要求を拒否するため、次の構成を使用してそのようなスクリプトを有効にできます。</target>
        </trans-unit>
        <trans-unit id="f1bb6f6f8c4c7cf79e560784b0548c95378554b6" translate="yes" xml:space="preserve">
          <source>The printenv Element</source>
          <target state="translated">printenv要素</target>
        </trans-unit>
        <trans-unit id="ac3e5402bd52e06dfac29ef8de25a8b06046ef1b" translate="yes" xml:space="preserve">
          <source>The private key may also be combined with the certificate in the file given by &lt;code&gt;&lt;a href=&quot;#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt;, but this practice is highly discouraged. If it is used, the certificate files using such an embedded key must be configured after the certificates using a separate key file.</source>
          <target state="translated">秘密鍵は、 &lt;code&gt;&lt;a href=&quot;#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt; で指定されたファイル内の証明書と組み合わせることもできますが、この方法はお勧めしません。使用する場合、このような埋め込みキーを使用する証明書ファイルは、別のキーファイルを使用する証明書の後に設定する必要があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
