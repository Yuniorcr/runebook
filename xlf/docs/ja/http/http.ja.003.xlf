<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="a7213ccaea2b1f5a17c04d5d00a491991e7405ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;cookie-name&amp;gt;&lt;/code&gt; can be any US-ASCII characters, except control characters, spaces, or tabs. It also must not contain a separator character like the following: &lt;code&gt;( ) &amp;lt; &amp;gt; @ , ; : \ &quot; / [ ] ? = { }&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;&amp;lt;cookie-name&amp;gt;&lt;/code&gt; can be any US-ASCII characters, except control characters, spaces, or tabs. It also must not contain a separator character like the following: &lt;code&gt;( ) &amp;lt; &amp;gt; @ , ; : \ &quot; / [ ] ? = { }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16b2a81bf240653adf4ae5646645097e3700e614" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;cookie-value&amp;gt;&lt;/code&gt; can optionally be set in double quotes and any US-ASCII characters excluding CTLs, whitespace, double quotes, comma, semicolon, and backslash are allowed. &lt;strong&gt;Encoding&lt;/strong&gt;: Many implementations perform URL encoding on cookie values, however it is not required per the RFC specification. It does help satisfying the requirements about which characters are allowed for &amp;lt;cookie-value&amp;gt; though.</source>
          <target state="translated">A &lt;code&gt;&amp;lt;cookie-value&amp;gt;&lt;/code&gt; 、必要に応じて、二重引用符で設定することができ、CTLは、空白文字、二重引用符、カンマ、セミコロン、およびバックスラッシュを除く任意のUS-ASCII文字が許可されています。&lt;strong&gt;エンコーディング&lt;/strong&gt;：多くの実装では、Cookie値に対してURLエンコーディングを実行しますが、RFC仕様では必須ではありません。ただし、&amp;lt;cookie-value&amp;gt;に許可される文字に関する要件を満たすのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e3f20af8a4d172bba05887f769d27d85c6a8c07e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;cookie-value&amp;gt;&lt;/code&gt; can optionally be wrapped in double quotes and include any US-ASCII characters excluding control characters, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Whitespace&quot;&gt;Whitespace&lt;/a&gt;, double quotes, comma, semicolon, and backslash. &lt;strong&gt;Encoding&lt;/strong&gt;: Many implementations perform URL encoding on cookie values, however it is not required per the RFC specification. It does help satisfying the requirements about which characters are allowed for &amp;lt;cookie-value&amp;gt; though.</source>
          <target state="translated">A &lt;code&gt;&amp;lt;cookie-value&amp;gt;&lt;/code&gt; can optionally be wrapped in double quotes and include any US-ASCII characters excluding control characters, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Whitespace&quot;&gt;Whitespace&lt;/a&gt;, double quotes, comma, semicolon, and backslash. &lt;strong&gt;Encoding&lt;/strong&gt;: Many implementations perform URL encoding on cookie values, however it is not required per the RFC specification. It does help satisfying the requirements about which characters are allowed for &amp;lt;cookie-value&amp;gt; though.</target>
        </trans-unit>
        <trans-unit id="5f819db31cf5179b914aa0bbc4b051d20a15499c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.2&quot;&gt;Push-Policy&lt;/a&gt;&lt;/code&gt; defines the server behaviour regarding push when processing a request.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.2&quot;&gt;Push-Policy&lt;/a&gt;&lt;/code&gt; 要求を処理するときにプッシュに関するサーバーの動作を定義します。</target>
        </trans-unit>
        <trans-unit id="907291403f83bafff1a5018284ddb5cda5ef87c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Host&lt;/code&gt; header field must be sent in all HTTP/1.1 request messages. A &lt;a href=&quot;../status/400&quot;&gt;&lt;code&gt;400&lt;/code&gt;&lt;/a&gt; (Bad Request) status code may be sent to any HTTP/1.1 request message that lacks a &lt;code&gt;Host&lt;/code&gt; header field or that contains more than one.</source>
          <target state="translated">A &lt;code&gt;Host&lt;/code&gt; header field must be sent in all HTTP/1.1 request messages. A &lt;a href=&quot;../status/400&quot;&gt; &lt;code&gt;400&lt;/code&gt; &lt;/a&gt; (Bad Request) status code may be sent to any HTTP/1.1 request message that lacks a &lt;code&gt;Host&lt;/code&gt; header field or that contains more than one.</target>
        </trans-unit>
        <trans-unit id="cd38adbfb297f98e4845f58ef168d327990960e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Host&lt;/code&gt; header field must be sent in all HTTP/1.1 request messages. A &lt;a href=&quot;../status/400&quot;&gt;&lt;code&gt;400&lt;/code&gt;&lt;/a&gt; (Bad Request) status code will be sent to any HTTP/1.1 request message that lacks a &lt;code&gt;Host&lt;/code&gt; header field or contains more than one.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; ヘッダーフィールドは、すべてのHTTP / 1.1リクエストメッセージで送信する必要があります。&lt;a href=&quot;../status/400&quot;&gt; &lt;code&gt;400&lt;/code&gt; &lt;/a&gt;（不正な要求）ステータスコードを欠く任意のHTTP / 1.1リクエストメッセージに送信される &lt;code&gt;Host&lt;/code&gt; ヘッダフィールド又は複数を含んでいます。</target>
        </trans-unit>
        <trans-unit id="8d493f4b34b837ecbf516ab3be315bb7e5800bd7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the document not being loaded out of process.</source>
          <target state="translated">&lt;code&gt;Large-Allocation&lt;/code&gt; ヘッダはプロセスからロードされていない文書による無視されました。</target>
        </trans-unit>
        <trans-unit id="b52f033ccd0a61255fd618ddae3d133b3a87b36a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the load being triggered by a non-GET request.</source>
          <target state="translated">&lt;code&gt;Large-Allocation&lt;/code&gt; ヘッダは、非GET要求によってトリガされる負荷に起因する無視しました。</target>
        </trans-unit>
        <trans-unit id="8b66ecc22d4701e215c7c43a0496c165504db343" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the presence of windows which have a reference to this browsing context through the frame hierarchy or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt;&lt;code&gt;window.opener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Large-Allocation&lt;/code&gt; ヘッダは、フレーム階層またはを通じてこのブラウジングコンテキストへの参照を持っているウィンドウが存在するため無視された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt; &lt;code&gt;window.opener&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73a9512193aaddbed5822d47b67cd6e8914618f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PATCH&lt;/code&gt; is not necessarily idempotent, although it can be. Contrast this with &lt;a href=&quot;put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;; which is always idempotent. The word &quot;idempotent&quot; means that any number of repeated, identical requests will leave the resource in the same state. For example if an auto-incrementing counter field is an integral part of the resource, then a &lt;a href=&quot;put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; will naturally overwrite it (since it overwrites everything), but not necessarily so for &lt;code&gt;PATCH&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;PATCH&lt;/code&gt; is not necessarily idempotent, although it can be. Contrast this with &lt;a href=&quot;put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt;; which is always idempotent. The word &quot;idempotent&quot; means that any number of repeated, identical requests will leave the resource in the same state. For example if an auto-incrementing counter field is an integral part of the resource, then a &lt;a href=&quot;put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt; will naturally overwrite it (since it overwrites everything), but not necessarily so for &lt;code&gt;PATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8022f4e83935a93ef3b8b1c2d930ed06dced354" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PATCH&lt;/code&gt; request is considered a set of instructions on how to modify a resource. Contrast this with &lt;a href=&quot;put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;; which is a complete representation of a resource.</source>
          <target state="translated">A &lt;code&gt;PATCH&lt;/code&gt; request is considered a set of instructions on how to modify a resource. Contrast this with &lt;a href=&quot;put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt;; which is a complete representation of a resource.</target>
        </trans-unit>
        <trans-unit id="148adc34b3c03dd4552c4ce02841588fbe7d2b17" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;POST&lt;/code&gt; request is typically sent via an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML form&lt;/a&gt; and results in a change on the server. In this case, the content type is selected by putting the adequate string in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype&quot;&gt;enctype&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element or the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; elements:</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; の要求は、一般的に経由して送信された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTMLフォーム&lt;/a&gt;とサーバー上の変化をもたらします。この場合、コンテンツタイプは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; 属性または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;&amp;gt;要素または&amp;lt;button&amp;gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype&quot;&gt;enctype&lt;/a&gt;&lt;/code&gt; 属性に適切な文字列を配置することによって選択されます。</target>
        </trans-unit>
        <trans-unit id="a9a09061e55ef0722388221ef70fbf98831901fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Referer&lt;/code&gt; header is not sent by browsers if:</source>
          <target state="translated">次の場合、ブラウザは &lt;code&gt;Referer&lt;/code&gt; ヘッダーを送信しません。</target>
        </trans-unit>
        <trans-unit id="b7de4dc33844cb3c83cd7c6ece8fd1f67d772660" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tk&lt;/code&gt; header for a resource that claims not to be tracking would look like:</source>
          <target state="translated">A &lt;code&gt;Tk&lt;/code&gt; の主張は次のようになり、トラッキングされないことをリソースのヘッダー：</target>
        </trans-unit>
        <trans-unit id="3a39de192b8c94e0bdb22f2bcb149d7e553934cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data&lt;/code&gt; URL provides a file within a file, which can potentially be very wide relative to the width of the enclosing document. As a URL, the &lt;code&gt;data&lt;/code&gt; should be formatable with whitespace (linefeed, tab, or spaces), but there are practical issues that arise &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=73026#c12&quot;&gt;when using base64 encoding&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; URLは、潜在的に非常に広い相対囲み文書の幅にすることができるファイル内のファイルを提供します。URLとして、 &lt;code&gt;data&lt;/code&gt; は空白（ラインフィード、タブ、またはスペース）でフォーマット可能である必要がありますが、&lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=73026#c12&quot;&gt;base64エンコーディングを使用&lt;/a&gt;する場合に発生する実際的な問題があります。</target>
        </trans-unit>
        <trans-unit id="0f62e0b29365c072d5d290c0cb67e2e50ff07068" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;multipart/form-data&lt;/code&gt; body requires a &lt;code&gt;Content-Disposition&lt;/code&gt; header to provide information for each subpart of the form (e.g. for every form field and any files that are part of field data). The first directive is always &lt;code&gt;form-data&lt;/code&gt;, and the header &lt;em&gt;must&lt;/em&gt; also include a &lt;code&gt;name&lt;/code&gt; parameter to identify the relevant field. Additional directives are case-insensitive and have arguments that use quoted-string syntax after the &lt;code&gt;'='&lt;/code&gt; sign. Multiple parameters are separated by a semi-colon (&lt;code&gt;';'&lt;/code&gt;).</source>
          <target state="translated">A &lt;code&gt;multipart/form-data&lt;/code&gt; body requires a &lt;code&gt;Content-Disposition&lt;/code&gt; header to provide information for each subpart of the form (e.g. for every form field and any files that are part of field data). The first directive is always &lt;code&gt;form-data&lt;/code&gt; , and the header &lt;em&gt;must&lt;/em&gt; also include a &lt;code&gt;name&lt;/code&gt; parameter to identify the relevant field. Additional directives are case-insensitive and have arguments that use quoted-string syntax after the &lt;code&gt;'='&lt;/code&gt; sign. Multiple parameters are separated by a semi-colon ( &lt;code&gt;';'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="67ef0cbe7ad55aa4468b6292a11f980a072c57e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;name&lt;/code&gt; with a value of &lt;code&gt;'_charset_'&lt;/code&gt; indicates that the part is not an HTML field, but the default charset to use for parts without explicit charset information.</source>
          <target state="translated">&lt;code&gt;'_charset_'&lt;/code&gt; 値を持つ &lt;code&gt;name&lt;/code&gt; は、パーツがHTMLフィールドではなく、明示的な文字セット情報のないパーツに使用するデフォルトの文字セットであることを示します。</target>
        </trans-unit>
        <trans-unit id="77ca7e4cfdb62ea74f42d6c168a3d1427f68fc26" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;product token&lt;/em&gt; is a name followed by a '&lt;code&gt;/&lt;/code&gt;' and a version number, like &lt;code&gt;Firefox/4.0.1&lt;/code&gt;. There may be as many of them as the user-agent wants. A &lt;em&gt;comment&lt;/em&gt; is a free string delimited by parentheses. Obviously parentheses cannot be used in that string. The inner format of a comment is not defined by the standard, though several browser put several tokens in it, separated by '&lt;code&gt;;&lt;/code&gt;'.</source>
          <target state="translated">&lt;em&gt;製品トークンは&lt;/em&gt;「続く名前で &lt;code&gt;/&lt;/code&gt; 」とのようなバージョン番号、 &lt;code&gt;Firefox/4.0.1&lt;/code&gt; 。ユーザーエージェントが必要とする数だけ存在する可能性があります。&lt;em&gt;コメントは&lt;/em&gt;括弧で区切られた無料の文字列です。かっこはその文字列では使用できません。コメントの内部形式は標準では定義されていませんが、いくつかのブラウザは 'で区切られた複数のトークンをコメントに入れてい &lt;code&gt;;&lt;/code&gt; '。</target>
        </trans-unit>
        <trans-unit id="7807903fa1b0b7939213e9e4f5b3217c04d49395" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;start-line&lt;/em&gt; describing the requests to be implemented, or its status of whether successful or a failure. This start-line is always a single line.</source>
          <target state="translated">実装するリクエスト、または成功したか失敗したかのステータスを説明する&lt;em&gt;スタートライン&lt;/em&gt;。この開始行は常に単一行です。</target>
        </trans-unit>
        <trans-unit id="93859c81ff65c5134b0dd141e4cbca2ab3420924" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;status code&lt;/em&gt;, indicating success or failure of the request. Common status codes are &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ステータスコード&lt;/em&gt;要求の成功または失敗を示します。共通のステータスコードは&lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;status/404&quot;&gt; &lt;code&gt;404&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;status/302&quot;&gt; &lt;code&gt;302&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76c2a47356f2a849271ea7cc25822c2941eeef27" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;status text&lt;/em&gt;. A brief, purely informational, textual description of the status code to help a human understand the HTTP message.</source>
          <target state="translated">&lt;em&gt;ステータステキスト&lt;/em&gt;。人間がHTTPメッセージを理解するのに役立つ、ステータスコードの簡単で純粋な情報提供のテキストによる説明。</target>
        </trans-unit>
        <trans-unit id="0559ada531b9179dd1b1f6a65154a22a437ad6c4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;Multipurpose Internet Mail Extensions (MIME) type&lt;/strong&gt; is a standard that indicates the nature and format of a document, file, or assortment of bytes. It is defined and standardized in &lt;a href=&quot;https://tools.ietf.org/html/rfc6838&quot;&gt;IETF RFC 6838&lt;/a&gt;.</source>
          <target state="translated">A &lt;strong&gt;MIME（Multipurpose Internet Mail Extensions）のタイプは&lt;/strong&gt;、ドキュメント、ファイル、またはバイトの品揃えの性質と形式を示し規格です。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc6838&quot;&gt;IETF RFC 6838&lt;/a&gt;で定義および標準化されています。</target>
        </trans-unit>
        <trans-unit id="06fe2028c6d41d5f963c85bb23a2f9582052e0be" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;Proxy Auto-Configuration (PAC)&lt;/strong&gt; file is a JavaScript function that determines whether web browser requests (HTTP, HTTPS, and FTP) go directly to the destination or are forwarded to a web proxy server. The JavaScript function contained in the PAC file defines the function:</source>
          <target state="translated">A &lt;strong&gt;プロキシ自動設定（PAC）&lt;/strong&gt;ファイルは、Webブラウザのリクエスト（HTTP、HTTPS、およびFTP）が先に直接アクセスまたはWebプロキシサーバに転送されているかどうかを決定するJavaScript関数です。 PACファイルに含まれるJavaScript関数は、関数を定義します。</target>
        </trans-unit>
        <trans-unit id="921d1ae1d227879cc9b76f47ae6c47c89749c0e7" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;media type&lt;/strong&gt; (also known as a &lt;strong&gt;Multipurpose Internet Mail Extensions or MIME type&lt;/strong&gt;) is a standard that indicates the nature and format of a document, file, or assortment of bytes. It is defined and standardized in IETF's &lt;a href=&quot;https://tools.ietf.org/html/rfc6838&quot;&gt;RFC 6838&lt;/a&gt;.</source>
          <target state="translated">A &lt;strong&gt;media type&lt;/strong&gt; (also known as a &lt;strong&gt;Multipurpose Internet Mail Extensions or MIME type&lt;/strong&gt;) is a standard that indicates the nature and format of a document, file, or assortment of bytes. It is defined and standardized in IETF's &lt;a href=&quot;https://tools.ietf.org/html/rfc6838&quot;&gt;RFC 6838&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="32908568fcbbdd8ea0e3d262e49fd8c59b6cf1c5" translate="yes" xml:space="preserve">
          <source>A COPY method invocation MUST NOT duplicate any write locks active on
   the source.  However, as previously noted, if the COPY copies the
   resource into a collection that is locked with a depth-infinity lock,
   then the resource will be added to the lock.

   A successful MOVE request on a write locked resource MUST NOT move
   the write lock with the resource.  However, if there is an existing
   lock at the destination, the server MUST add the moved resource to
   the destination lock scope.  For example, if the MOVE makes the
   resource a child of a collection that has a depth-infinity lock, then
   the resource will be added to that collection's lock.  Additionally,
   if a resource with a depth-infinity lock is moved to a destination
   that is within the scope of the same lock (e.g., within the URL
   namespace tree covered by the lock), the moved resource will again be
   added to the lock.  In both these examples, as specified in
   &lt;a href=&quot;#section-7.5&quot;&gt;Section 7.5&lt;/a&gt;, an If header must be submitted containing a lock token
   for both the source and destination.</source>
          <target state="translated">COPYメソッド呼び出しは、ソースでアクティブな書き込みロックを複製してはなりません（MUST NOT）。ただし、前述のように、COPYがリソースを深さ無限ロックでロックされているコレクションにコピーすると、リソースはロックに追加されます。書き込みロックされたリソースでMOVE要求が成功した場合、そのリソースで書き込みロックを移動してはなりません。ただし、宛先に既存のロックがある場合、サーバーは移動したリソースを宛先ロックスコープに追加する必要があります。たとえば、MOVEがリソースを深さ無限ロックを持つコレクションの子にした場合、リソースはそのコレクションのロックに追加されます。さらに、深さ無限ロックのリソースが同じロックのスコープ内にある宛先に移動された場合（たとえば、ロックでカバーされているURL名前空間ツリー内で）、移動されたリソースは再びロックに追加されます。これらの例の両方で、 &lt;a href=&quot;#section-7.5&quot;&gt;セクション7.5&lt;/a&gt;、ソースと宛先の両方のロックトークンを含むIfヘッダーを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="54ccf84b84ef6409cbbed9c34674f05d1e7198a6" translate="yes" xml:space="preserve">
          <source>A Condition that consists of a single entity-tag or state-token
   evaluates to true if the resource matches the described state (where
   the individual matching functions are defined below in
   &lt;a href=&quot;#section-10.4.4&quot;&gt;Section 10.4.4&lt;/a&gt;).  Prefixing it with &quot;Not&quot; reverses the result of the
   evaluation (thus, the &quot;Not&quot; applies only to the subsequent entity-tag
   or state-token).

   Each List production describes a series of conditions.  The whole
   list evaluates to true if and only if each condition evaluates to
   true (that is, the list represents a logical conjunction of
   Conditions).

   Each No-tag-list and Tagged-list production may contain one or more
   Lists.  They evaluate to true if and only if any of the contained
   lists evaluates to true (that is, if there's more than one List, that
   List sequence represents a logical disjunction of the Lists). 

   Finally, the whole If header evaluates to true if and only if at
   least one of the No-tag-list or Tagged-list productions evaluates to
   true.  If the header evaluates to false, the server MUST reject the
   request with a 412 (Precondition Failed) status.  Otherwise,
   execution of the request can proceed as if the header wasn't present.</source>
          <target state="translated">単一のエンティティタグまたは状態トークンで構成される条件は、リソースが記述された状態と一致する場合にtrueと評価されます（個々の一致する関数は&lt;a href=&quot;#section-10.4.4&quot;&gt;セクション10.4.4で&lt;/a&gt;定義されています）。 ）。接頭辞に「Not」を付けると、評価の結果が逆になります（したがって、「Not」は後続のエンティティタグまたはステートトークンにのみ適用されます）。各リストの作成は、一連の条件を記述しています。リスト全体がtrueと評価されるのは、各条件がtrueと評価された場合のみです（つまり、リストは条件の論理結合を表します）。タグなしリストとタグ付きリストの各プロダクションには、1つ以上のリストを含めることができます。含まれているリストのいずれかが真と評価された場合にのみ、真と評価されます（つまり、複数のリストがある場合、そのリストシーケンスはリストの論理和を表します）。最後に、No-tag-listまたはTagged-listプロダクションの少なくとも1つがtrueと評価された場合にのみ、Ifヘッダー全体がtrueと評価されます。ヘッダーがfalseと評価された場合、サーバーは412（Precondition Failed）ステータスのリクエストを拒否する必要があります。それ以外の場合、リクエストの実行は、ヘッダーが存在しないかのように続行できます。</target>
        </trans-unit>
        <trans-unit id="8ca49fbd841006f7b8c4f68cfeb745b6f799b83d" translate="yes" xml:space="preserve">
          <source>A DAV-compliant resource can advertise several classes of compliance.
   A client can discover the compliance classes of a resource by
   executing OPTIONS on the resource and examining the &quot;DAV&quot; header
   which is returned.  Note particularly that resources, rather than
   servers, are spoken of as being compliant.  That is because
   theoretically some resources on a server could support different
   feature sets.  For example, a server could have a sub-repository
   where an advanced feature like versioning was supported, even if that
   feature was not supported on all sub-repositories.

   Since this document describes extensions to the HTTP/1.1 protocol,
   minimally all DAV-compliant resources, clients, and proxies MUST be
   compliant with [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].

   A resource that is class 2 or class 3 compliant must also be class 1
   compliant.</source>
          <target state="translated">DAV準拠のリソースは、いくつかのクラスの準拠をアドバタイズできます。クライアントは、リソースに対してOPTIONSを実行し、返される「DAV」ヘッダーを調べることにより、リソースのコンプライアンスクラスを検出できます。特に、サーバーではなくリソースが準拠していると言われていることに注意してください。これは、理論的にはサーバー上の一部のリソースがさまざまな機能セットをサポートできるためです。たとえば、サーバーにサブリポジトリがあり、バージョン管理などの高度な機能がサポートされていたとしても、その機能がすべてのサブリポジトリでサポートされていなかったとします。このドキュメントではHTTP / 1.1プロトコルの拡張について説明しているため、最低限すべてのDAV準拠のリソース、クライアント、およびプロキシは[ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616に&lt;/a&gt;準拠している必要があります。]。クラス2またはクラス3に準拠しているリソースは、クラス1にも準拠している必要があります。</target>
        </trans-unit>
        <trans-unit id="f86021a073cb3d0361968791f30494aec6a11bf5" translate="yes" xml:space="preserve">
          <source>A LOCK request to an existing resource will create a lock on the
   resource identified by the Request-URI, provided the resource is not
   already locked with a conflicting lock.  The resource identified in
   the Request-URI becomes the root of the lock.  LOCK method requests
   to create a new lock MUST have an XML request body.  The server MUST
   preserve the information provided by the client in the 'owner'
   element in the LOCK request.  The LOCK request MAY have a Timeout
   header.

   When a new lock is created, the LOCK response:

   o  MUST contain a body with the value of the DAV:lockdiscovery
      property in a prop XML element.  This MUST contain the full
      information about the lock just granted, while information about
      other (shared) locks is OPTIONAL.

   o  MUST include the Lock-Token response header with the token
      associated with the new lock.</source>
          <target state="translated">既存のリソースへのLOCKリクエストは、Request-URIで特定されたリソース上にロックを作成する。Request-URI で指定されたリソースがロックのルートになる。新しいロックを作成するためのLOCKメソッドのリクエストは、XMLリクエストボディを持たなければ ならない[MUST]。サーバーは、クライアントから提供された情報を LOCK リクエストの 'owner' 要素に保持しなければならない[MUST]。LOCK リクエストはTimeoutヘッダーを持ってもよい[MAY]。新しいロックが生成されるとき、LOCK応答:o prop XML要素にDAV:lockdiscoveryプロパティの値を持つボディを含まなければならない[MUST]。o 新しいロックが生成されるとき、LOCK応答:o prop XML要素のDAV:lockdiscoveryプロパティの値を持つボディを含まなけ ればならない[MUST]。これは、与えられたばかりのロックに関する完全な情報を含まなければならな い[MUST]。</target>
        </trans-unit>
        <trans-unit id="b5ec04e796ad556a9a01172c14afcf29870510e8" translate="yes" xml:space="preserve">
          <source>A Last-Modified time, when used as a validator in a request, is
   implicitly weak unless it is possible to deduce that it is strong,
   using the following rules:

   o  The validator is being compared by an origin server to the actual
      current validator for the representation and,

   o  That origin server reliably knows that the associated
      representation did not change twice during the second covered by
      the presented validator.

   or

   o  The validator is about to be used by a client in an
      If-Modified-Since, If-Unmodified-Since, or If-Range header field,
      because the client has a cache entry for the associated
      representation, and

   o  That cache entry includes a Date value, which gives the time when
      the origin server sent the original response, and

   o  The presented Last-Modified time is at least 60 seconds before the
      Date value.

   or

   o  The validator is being compared by an intermediate cache to the
      validator stored in its cache entry for the representation, and

   o  That cache entry includes a Date value, which gives the time when
      the origin server sent the original response, and

   o  The presented Last-Modified time is at least 60 seconds before the
      Date value. 

   This method relies on the fact that if two different responses were
   sent by the origin server during the same second, but both had the
   same Last-Modified time, then at least one of those responses would
   have a Date value equal to its Last-Modified time.  The arbitrary
   60-second limit guards against the possibility that the Date and
   Last-Modified values are generated from different clocks or at
   somewhat different times during the preparation of the response.  An
   implementation MAY use a value larger than 60 seconds, if it is
   believed that 60 seconds is too short.</source>
          <target state="translated">リクエスト中でバリデータとして使用されるLast-Modified時間は、以下の ルールを使用して強力であることを推測できる場合を除き、暗黙のうちに弱くなる。 o バリデータがオリジンサーバーによって表現の実際の現在のバリデータと 比較されており、o オリジンサーバーは、提示されたバリデータの対象となる2秒間に関連する 表現が2回も変更されていないことを確実に知っている。または o クライアントが関連する表現のキャッシュエントリを持っているため、 クライアントによってそのバリデータがIf-Modified-Since、If-Unmodified-Since、 またはIf-Rangeヘッダーフィールドで使用されようとしており、 o そのキャッシュエントリは、オリジンサーバーがオリジナルの応答を送信した時間を示すDate値を含 む。または o バリデータは、中間キャッシュによって、表現用のキャッシュエントリに格納されているバリデータと比較されており、 o そのキャッシュエントリは、オリジンサーバーがオリジナルの応答を送信した時間を与えるDate値を含み、 o 提示されたLast-Modified時間は、Date値の少なくとも60秒前である。この方法は、2つの異なる応答が同じ秒の間にオリジンサーバーによって送信されたが、両方とも同じLast-Modified時間を持っていた場合、それらの応答のうちの少なくとも1つはそのLast-Modified時間に等しいDate値を持つという事実に依存する。任意の60秒という制限は、Date値とLast-Modified値が異なるクロックから生成されたり、 応答の準備中に多少異なる時間に生成される可能性を防ぐためである。60秒が短すぎると考えられる場合、実装では60秒よりも大きな値を使用してもよい[MAY]。</target>
        </trans-unit>
        <trans-unit id="3b3ff774d817ff6a5f8200f28c0299ad729f7f1f" translate="yes" xml:space="preserve">
          <source>A MIME type consists of a &lt;strong&gt;type&lt;/strong&gt; and a &lt;strong&gt;subtype&lt;/strong&gt; &amp;mdash; two strings separated by &lt;code&gt;/&lt;/code&gt;. No whitespace is allowed. The &lt;em&gt;type&lt;/em&gt; represents the category and can be a &lt;em&gt;discrete&lt;/em&gt; or a &lt;em&gt;multipart&lt;/em&gt; type. The &lt;em&gt;subtype&lt;/em&gt; is specific to each type.</source>
          <target state="translated">MIMEタイプは、&lt;strong&gt;タイプ&lt;/strong&gt;と&lt;strong&gt;サブ&lt;/strong&gt;タイプで構成されます- &lt;code&gt;/&lt;/code&gt; で区切られた2つの文字列。空白は許可されていません。&lt;em&gt;タイプは&lt;/em&gt;カテゴリを表し、することができ&lt;em&gt;ディスクリート&lt;/em&gt;または&lt;em&gt;マルチ&lt;/em&gt;タイプ。&lt;em&gt;サブタイプは、&lt;/em&gt;それぞれのタイプに固有のものです。</target>
        </trans-unit>
        <trans-unit id="df3b4fd9f2c9a070d38b528649b2abf469edffda" translate="yes" xml:space="preserve">
          <source>A MIME type, but without any subtype. &lt;code&gt;image/*&lt;/code&gt; will match &lt;code&gt;image/png&lt;/code&gt;, &lt;code&gt;image/svg&lt;/code&gt;, &lt;code&gt;image/gif&lt;/code&gt; and any other image types.</source>
          <target state="translated">MIMEタイプですが、サブタイプはありません。 &lt;code&gt;image/*&lt;/code&gt; は、 &lt;code&gt;image/png&lt;/code&gt; 、 &lt;code&gt;image/svg&lt;/code&gt; 、 &lt;code&gt;image/gif&lt;/code&gt; およびその他の画像タイプと一致します。</target>
        </trans-unit>
        <trans-unit id="5ad212a1da928bdf764389014591f982a86a3c0f" translate="yes" xml:space="preserve">
          <source>A MOVE with &quot;Depth: infinity&quot; instructs that the collection
   identified by the Request-URI be moved to the address specified in
   the Destination header, and all resources identified by its internal
   member URLs are to be moved to locations relative to it, recursively
   through all levels of the collection hierarchy.

   The MOVE method on a collection MUST act as if a &quot;Depth: infinity&quot;
   header was used on it.  A client MUST NOT submit a Depth header on a
   MOVE on a collection with any value but &quot;infinity&quot;. 

   Any headers included with MOVE MUST be applied in processing every
   resource to be moved with the exception of the Destination header.
   The behavior of the Destination header is the same as given for COPY
   on collections.

   When the MOVE method has completed processing, it MUST have created a
   consistent URL namespace at both the source and destination (see
   &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt; for the definition of namespace consistency).  However,
   if an error occurs while moving an internal collection, the server
   MUST NOT move any resources identified by members of the failed
   collection (i.e., the server must skip the error-causing subtree), as
   this would create an inconsistent namespace.  In this case, after
   detecting the error, the move operation SHOULD try to finish as much
   of the original move as possible (i.e., the server should still
   attempt to move other subtrees and the resources identified by their
   members that are not descendants of an error-causing collection).
   So, for example, if an infinite-depth move is performed on collection
   /a/, which contains collections /a/b/ and /a/c/, and an error occurs
   moving /a/b/, an attempt should still be made to try moving /a/c/.
   Similarly, after encountering an error moving a non-collection
   resource as part of an infinite-depth move, the server SHOULD try to
   finish as much of the original move operation as possible.

   If an error occurs with a resource other than the resource identified
   in the Request-URI, then the response MUST be a 207 (Multi-Status),
   and the errored resource's URL MUST appear with the specific error.

   The 424 (Failed Dependency) status code SHOULD NOT be returned in the
   207 (Multi-Status) response from a MOVE method.  These errors can be
   safely omitted because the client will know that the progeny of a
   resource could not be moved when the client receives an error for the
   parent.  Additionally, 201 (Created)/204 (No Content) responses
   SHOULD NOT be returned as values in 207 (Multi-Status) responses from
   a MOVE.  These responses can be safely omitted because they are the
   default success codes.</source>
          <target state="translated">&quot;Depth：infinity&quot;を指定したMOVEは、Request-URIで識別されるコレクションをDestinationヘッダーで指定されたアドレスに移動し、その内部メンバーURLで識別されるすべてのリソースを、それに関連する場所に再帰的に移動するように指示しますコレクション階層のすべてのレベル。コレクションのMOVEメソッドは、 &quot;Depth：infinity&quot;ヘッダーが使用されているかのように動作する必要があります。クライアントは、「無限」以外の値を持つコレクションのMOVEにDepthヘッダーを送信してはなりません（MUST NOT）。 MOVEに含まれるヘッダーは、Destinationヘッダーを除いて、移動するすべてのリソースの処理に適用する必要があります。 Destinationヘッダーの動作は、コレクションに対するCOPYの場合と同じです。 MOVEメソッドが処理を完了すると、ソースと宛先の両方で一貫したURL名前空間を作成している必要があります（ &lt;a href=&quot;#section-5.1&quot;&gt;セクション5.1&lt;/a&gt;名前空間の一貫性の定義については）。ただし、内部コレクションの移動中にエラーが発生した場合、サーバーは、失敗したコレクションのメンバーによって識別されるリソースを移動してはなりません（つまり、サーバーはエラーの原因となるサブツリーをスキップする必要があります）。これにより、一貫性のない名前空間が作成されます。この場合、エラーを検出した後、移動操作はできる限り多くの元の移動を終了する必要があります（つまり、サーバーは、エラーの子孫ではない他のサブツリーとそのメンバーによって識別されるリソースを移動しようとする必要があります） -コレクションを引き起こす）。したがって、たとえば、コレクション/ a / b /および/ a / c /を含むコレクション/ a /に対して無限深度の移動が実行され、/ a / b /の移動中にエラーが発生した場合でも、 / a / c /を動かしてみました。同様に、無限深度の移動の一部として非コレクションリソースを移動するときにエラーが発生した後、サーバーは、元の移動操作のできるだけ多くを終了する必要があります。 Request-URIで識別されたリソース以外のリソースでエラーが発生した場合、応答は207（マルチステータス）である必要があり、エラーが発生したリソースのURLは特定のエラーとともに表示される必要があります。 MOVEメソッドからの207（マルチステータス）レスポンスでは、424（失敗した依存関係）ステータスコードを返さないでください（SHOULD NOT）。クライアントは親のエラーを受け取ったときにリソースの子孫を移動できなかったことをクライアントが知っているので、これらのエラーは安全に省略できます。さらに、201（作成済み）/ 204（コンテンツなし）応答は、MOVEからの207（マルチステータス）応答の値として返されるべきではありません（SHOULD NOT）。これらの応答はデフォルトの成功コードなので、安全に省略できます。</target>
        </trans-unit>
        <trans-unit id="e669f83c371fcfc2d6309646e47cad96a8d6939b" translate="yes" xml:space="preserve">
          <source>A Multi-Status response conveys information about multiple resources
   in situations where multiple status codes might be appropriate.  The
   default Multi-Status response body is a text/xml or application/xml
   HTTP entity with a 'multistatus' root element.  Further elements
   contain 200, 300, 400, and 500 series status codes generated during
   the method invocation. 100 series status codes SHOULD NOT be recorded
   in a 'response' XML element.

   Although '207' is used as the overall response status code, the
   recipient needs to consult the contents of the multistatus response
   body for further information about the success or failure of the
   method execution.  The response MAY be used in success, partial
   success and also in failure situations.

   The 'multistatus' root element holds zero or more 'response' elements
   in any order, each with information about an individual resource.
   Each 'response' element MUST have an 'href' element to identify the
   resource.

   A Multi-Status response uses one out of two distinct formats for
   representing the status:

   1.  A 'status' element as child of the 'response' element indicates
       the status of the message execution for the identified resource
       as a whole (for instance, see &lt;a href=&quot;#section-9.6.2&quot;&gt;Section 9.6.2&lt;/a&gt;).  Some method
       definitions provide information about specific status codes
       clients should be prepared to see in a response.  However,
       clients MUST be able to handle other status codes, using the
       generic rules defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-10&quot;&gt;Section&amp;nbsp;10 of [RFC2616]&lt;/a&gt;.

   2.  For PROPFIND and PROPPATCH, the format has been extended using
       the 'propstat' element instead of 'status', providing information
       about individual properties of a resource.  This format is
       specific to PROPFIND and PROPPATCH, and is described in detail in
       Sections &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt; and &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;.</source>
          <target state="translated">マルチステータス応答は、複数のステータスコードが適切である可能性がある状況で、複数のリソースに関する情報を伝えます。デフォルトのマルチステータスレスポンスボディは、 'multistatus'ルート要素を持つtext / xmlまたはapplication / xml HTTPエンティティです。その他の要素には、メソッド呼び出し中に生成された200、300、400、および500シリーズのステータスコードが含まれます。 100シリーズのステータスコードは、「応答」XML要素に記録してはいけません（SHOULD NOT）。全体的な応答ステータスコードとして「207」が使用されますが、受信者はメソッド実行の成功または失敗に関する詳細について、マルチステータス応答本文の内容を調べる必要があります。応答は、成功、部分的な成功、および失敗の状況でも使用できます。 「マルチステータス」ルート要素は0個以上の「応答」要素を任意の順序で保持し、それぞれに個別のリソースに関する情報が含まれます。各 'response'要素には、リソースを識別するための 'href'要素が必要です。マルチステータスレスポンスは、ステータスを表すために2つの異なるフォーマットのうちの1つを使用します。見る「response」要素の子としての要素は、識別されたリソース全体のメッセージ実行のステータスを示します（たとえば、「response」要素の子としての要素は、識別されたリソース全体のメッセージ実行のステータスを示します（たとえば、&lt;a href=&quot;#section-9.6.2&quot;&gt;セクション9.6.2&lt;/a&gt;）。一部のメソッド定義は、クライアントが応答で確認できるように準備する必要がある特定のステータスコードに関する情報を提供します。ただし、クライアント&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-10&quot;&gt;は[RFC2616]のセクション10で&lt;/a&gt;定義されている一般的なルールを使用して、他のステータスコードを処理できる必要があります。 2. PROPFINDおよびPROPPATCHの場合、フォーマットは「ステータス」ではなく「propstat」要素を使用して拡張され、リソースの個々のプロパティに関する情報を提供します。このフォーマットはPROPFINDとPROPPATCHに固有であり、セクション&lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;および&lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;で詳細に説明されています。</target>
        </trans-unit>
        <trans-unit id="da18d217768d6c1e8762bf2a3c6c1f21f00b13c4" translate="yes" xml:space="preserve">
          <source>A Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate.</source>
          <target state="translated">マルチステータス応答は、複数のステータスコードが適切であるかもしれない状況で、複数のリソースに関する情報を伝える。</target>
        </trans-unit>
        <trans-unit id="47c63e0905725bb2dacb2b7404ab31605abb7f60" translate="yes" xml:space="preserve">
          <source>A PUT performed on an existing resource replaces the GET response
   entity of the resource.  Properties defined on the resource may be
   recomputed during PUT processing but are not otherwise affected.  For
   example, if a server recognizes the content type of the request body,
   it may be able to automatically extract information that could be
   profitably exposed as properties.

   A PUT that would result in the creation of a resource without an
   appropriately scoped parent collection MUST fail with a 409
   (Conflict).

   A PUT request allows a client to indicate what media type an entity
   body has, and whether it should change if overwritten.  Thus, a
   client SHOULD provide a Content-Type for a new resource if any is
   known.  If the client does not provide a Content-Type for a new
   resource, the server MAY create a resource with no Content-Type
   assigned, or it MAY attempt to assign a Content-Type. 

   Note that although a recipient ought generally to treat metadata
   supplied with an HTTP request as authoritative, in practice there's
   no guarantee that a server will accept client-supplied metadata
   (e.g., any request header beginning with &quot;Content-&quot;).  Many servers
   do not allow configuring the Content-Type on a per-resource basis in
   the first place.  Thus, clients can't always rely on the ability to
   directly influence the content type by including a Content-Type
   request header.</source>
          <target state="translated">既存のリソースに対して実行されたPUTは、リソースのGET応答エンティティを置き換える。リソース上に定義されたプロパティは、PUT処理中に再計算されてもよいが、それ以外の場合は影響を受けない。例えば、サーバが要求本文のコンテンツタイプを認識している場合、サーバは、プロパティとして利益を得て公開することができる情報を自動的に抽出することができるかもしれない。適切にスコープされた親コレクションなしでリソースの生成をもたらすPUTは、 409(Conflict)で失敗しなければならない[MUST]。PUTリクエストは、クライアントがエンティティボディがどのメディアタイプを持っているか、 上書きされた場合にそれが変更されるべきかどうかを示すことを可能にする。したがって、クライアントは新しいリソースのContent-Typeがわかれば提供すべきである [SHOULD]。クライアントが新しいリソースに対してContent-Typeを提供しない場合、サーバーはContent-Typeが 割り当てられていないリソースを作成してもよい[MAY]か、Content-Typeを割り当てようとしてもよい[MAY]。受信者は一般的にHTTPリクエストで提供されたメタデータを権威あるものとして扱うべきですが、実際には、サーバがクライアントから提供されたメタデータ(例えば、&quot;Content-&quot;で始まるリクエストヘッダ)を受け入れる保証はないことに注意してください。多くのサーバは、そもそもリソースごとに Content-Type を設定することを許可していません。したがって、クライアントは Content-Type リクエストヘッダを含むことでコンテンツタイプに直接影響を与える能力に常に頼ることはできません。</target>
        </trans-unit>
        <trans-unit id="3416af5b6f6d84eb8e002dbdbec4d7e1feccd161" translate="yes" xml:space="preserve">
          <source>A Resource whose IRI is listed in a Collection is called a Member
   Resource.  The protocol defines two kinds of Member Resources --
   Entry Resources and Media Resources.  Entry Resources are represented
   as Atom Entry Documents [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].  Media Resources can have
   representations in any media type.  A Media Resource is described
   within a Collection using an Entry called a Media Link Entry.  This
   diagram shows the classification of Resources within the Atom
   Protocol:

                Member Resources
                       |
                -----------------
               |                 |
         Entry Resources     Media Resources
               |
         Media Link Entry

   The Atom Protocol defines Collection Resources for managing and
   organizing both kinds of Member Resource.  A Collection is
   represented by an Atom Feed Document.  A Collection Feed's Entries
   contain the IRIs of, and metadata about, the Collection's Member
   Resources.  A Collection Feed can contain any number of Entries,
   which might represent all the Members of the Collection, or an
   ordered subset of them (see &lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;).  In the diagram of a
   Collection below, there are two Entries.  The first contains the IRI
   of an Entry Resource.  The second contains the IRIs of both a Media
   Resource and a Media Link Entry, which contains the metadata for that
   Media Resource:

     Collection
        |
        o- Entry
        |    |
        |    o- Member Entry IRI (Entry Resource)
        |
        o- Entry
             |
             o- Member Entry IRI (Media Link Entry)
             |
             o- Media IRI        (Media Resource)

   The Atom Protocol does not make a distinction between Feeds used for
   Collections and other Atom Feeds.  The only mechanism that this
   specification supplies for indicating that a Feed is a Collection
   Feed is the presence of the Feed's IRI in a Service Document. 

   Service Documents represent server-defined groups of Collections, and
   are used to initialize the process of creating and editing Resources.
   These groups of Collections are called Workspaces.  Workspaces have
   names, but no IRIs, and no specified processing model.  The Service
   Document can indicate which media types, and which categories, a
   Collection will accept.  In the diagram below, there are two
   Workspaces each describing the IRIs, acceptable media types, and
   categories for a Collection:

     Service
        o- Workspace
        |    |
        |    o- Collection
        |         |
        |         o- IRI, categories, media types
        |
        o- Workspace
             |
             o- Collection
                  |
                  o- IRI, categories, media types</source>
          <target state="translated">IRIがコレクションにリストされているリソースは、メンバーリソースと呼ばれます。このプロトコルは、2種類のメンバーリソース（エントリリソースとメディアリソース）を定義します。エントリーリソースは、Atomエントリードキュメント[ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;]。メディアリソースは、任意のメディアタイプで表現できます。メディアリソースは、メディアリンクエントリと呼ばれるエントリを使用してコレクション内で記述されます。この図は、Atomプロトコル内のリソースの分類を示しています。 ----------------- | |エントリーリソースメディアリソース|メディアリンクエントリAtomプロトコルは、両方の種類のメンバーリソースを管理および整理するためのコレクションリソースを定義します。コレクションは、Atomフィードドキュメントによって表されます。コレクションフィードのエントリには、コレクションのメンバーリソースのIRIおよびメタデータが含まれます。コレクションフィードには、任意の数のエントリを含めることができます。コレクションのすべてのメンバー、またはそれらの順序付けられたサブセットを表す場合があります（参照）&lt;a href=&quot;#section-10.1&quot;&gt;セクション10.1&lt;/a&gt;）。以下のコレクションの図には、2つのエントリがあります。 1つ目は、エントリリソースのIRIを含みます。 2番目には、メディアリソースとそのメディアリソースのメタデータを含むメディアリンクエントリの両方のIRIが含まれています。 o-エントリー| | | o-メンバーエントリーIRI（エントリーリソース）| o-エントリー| o-メンバーエントリーIRI（メディアリンクエントリー）| o-メディアIRI（メディアリソース）Atomプロトコルは、コレクションに使用されるフィードと他のAtomフィードを区別しません。フィードがコレクションフィードであることを示すためにこの仕様が提供する唯一のメカニズムは、サービスドキュメント内のフィードのIRIの存在です。サービスドキュメントは、サーバー定義のコレクションのグループを表し、リソースの作成と編集のプロセスを初期化するために使用されます。これらのコレクションのグループはワークスペースと呼ばれます。ワークスペースには名前がありますが、IRIはなく、指定された処理モデルもありません。サービスドキュメントは、コレクションが受け入れるメディアタイプとカテゴリを示すことができます。以下の図には、コレクションのIRI、許容可能なメディアタイプ、およびカテゴリを説明する2つのワークスペースがあります。 | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプリソースの作成と編集のプロセスを初期化するために使用されます。これらのコレクションのグループはワークスペースと呼ばれます。ワークスペースには名前がありますが、IRIはなく、指定された処理モデルもありません。サービスドキュメントは、コレクションが受け入れるメディアタイプとカテゴリを示すことができます。以下の図には、コレクションのIRI、許容可能なメディアタイプ、およびカテゴリを説明する2つのワークスペースがあります。 | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプリソースの作成と編集のプロセスを初期化するために使用されます。これらのコレクションのグループはワークスペースと呼ばれます。ワークスペースには名前がありますが、IRIはなく、指定された処理モデルもありません。サービスドキュメントは、コレクションが受け入れるメディアタイプとカテゴリを示すことができます。以下の図には、コレクションのIRI、許容可能なメディアタイプ、およびカテゴリを説明する2つのワークスペースがあります。 | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプワークスペースには名前がありますが、IRIはなく、指定された処理モデルもありません。サービスドキュメントは、コレクションが受け入れるメディアタイプとカテゴリを示すことができます。以下の図には、コレクションのIRI、許容可能なメディアタイプ、およびカテゴリを説明する2つのワークスペースがあります。 | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプワークスペースには名前がありますが、IRIはなく、指定された処理モデルもありません。サービスドキュメントは、コレクションが受け入れるメディアタイプとカテゴリを示すことができます。以下の図には、コレクションのIRI、許容可能なメディアタイプ、およびカテゴリを説明する2つのワークスペースがあります。 | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプコレクションの許容可能なメディアタイプとカテゴリ：サービスo-ワークスペース| | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプコレクションの許容可能なメディアタイプとカテゴリ：サービスo-ワークスペース| | | o-コレクション| | | o- IRI、カテゴリ、メディアタイプ| o-ワークスペース| o-コレクション| o- IRI、カテゴリ、メディアタイプ</target>
        </trans-unit>
        <trans-unit id="35b9ab54a0a93ba0ced7c4af3c76df8322f7ce52" translate="yes" xml:space="preserve">
          <source>A Service Document groups Collections into Workspaces.  Operations on
   Workspaces, such as creation or deletion, are not defined by this
   specification.  This specification assigns no meaning to Workspaces;
   that is, a Workspace does not imply any specific processing
   assumptions.

   There is no requirement that a server support multiple Workspaces.
   In addition, a Collection MAY appear in more than one Workspace.</source>
          <target state="translated">サービス ドキュメントは、コレクションをワークスペースにグループ化する。作成や削除などのワークスペースに対する操作は、本仕様では定義されていない。本仕様では、ワークスペースに意味を付与しない。つまり、ワークスペースは特定の処理の前提条件を意味しない。サーバが複数のワークスペースをサポートするという要件はない。さらに、コレクションは複数のワークスペースに現れてもよい[MAY]。</target>
        </trans-unit>
        <trans-unit id="ab9f1fd23a2ea88a066574ed1c1549d86b5413c4" translate="yes" xml:space="preserve">
          <source>A TLS extension of type &lt;code&gt;signed_certificate_timestamp&lt;/code&gt; sent during the handshake</source>
          <target state="translated">A TLS extension of type &lt;code&gt;signed_certificate_timestamp&lt;/code&gt; sent during the handshake</target>
        </trans-unit>
        <trans-unit id="d2c9ff77a6964659200d811cbcc28e7831aa3441" translate="yes" xml:space="preserve">
          <source>A URI where to POST the report to.</source>
          <target state="translated">レポートをPOSTするためのURI。</target>
        </trans-unit>
        <trans-unit id="7d9a4a4099f798612139543cae66aebb996fc259" translate="yes" xml:space="preserve">
          <source>A URL is composed of different parts, some mandatory and others are optional. A more complex example might look like this:</source>
          <target state="translated">URLは異なる部分から構成されており、いくつかの部分は必須であり、他の部分は任意です。より複雑な例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="17235672157ab3c954238f5bafa108a22cb04819" translate="yes" xml:space="preserve">
          <source>A Uniform Resource Name (URN) is a URI that identifies a resource by name in a particular namespace.</source>
          <target state="translated">統一リソース名(URN)とは、特定の名前空間の名前でリソースを識別するURIです。</target>
        </trans-unit>
        <trans-unit id="f48650afe5c259c1528667a4e36bcfbef464815b" translate="yes" xml:space="preserve">
          <source>A Web page is a hypertext document. This means some parts of displayed text are links which can be activated (usually by a click of the mouse) to fetch a new Web page, allowing the user to direct their user-agent and navigate through the Web. The browser translates these directions in HTTP requests, and further interprets the HTTP responses to present the user with a clear response.</source>
          <target state="translated">Web ページはハイパーテキスト文書です。つまり、表示されているテキストの一部がリンクになっていて、(通常はマウスのクリックで)新しいウェブページを取得することができ、ユーザーはユーザーエージェントに指示を出してウェブをナビゲートすることができます。ブラウザはこれらの方向性を HTTP リクエストに変換し、さらに HTTP レスポンスを解釈してユーザーに明確なレスポンスを提示します。</target>
        </trans-unit>
        <trans-unit id="4801f2494f1bfe7a2312cfcf44cb6aeb3133107d" translate="yes" xml:space="preserve">
          <source>A WebDAV client implemented to this specification might find servers
   that create lock-null resources (implemented before this
   specification using [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;]) as well as servers that create locked
   empty resources.  The response to the LOCK request will not indicate
   what kind of resource was created.  There are a few techniques that
   help the client deal with either type.

      If the client wishes to avoid accidentally creating either lock-
      null or empty locked resources, an &quot;If-Match: *&quot; header can be
      included with LOCK requests to prevent the server from creating a
      new resource.

      If a LOCK request creates a resource and the client subsequently
      wants to overwrite that resource using a COPY or MOVE request, the
      client should include an &quot;Overwrite: T&quot; header.

      If a LOCK request creates a resource and the client then decides
      to get rid of that resource, a DELETE request is supposed to fail
      on a lock-null resource and UNLOCK should be used instead.  But
      with a locked empty resource, UNLOCK doesn't make the resource
      disappear.  Therefore, the client might have to try both requests
      and ignore an error in one of the two requests.</source>
          <target state="translated">この仕様に実装されたWebDAVクライアントは、ロック&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC&lt;/a&gt;リソースを作成するサーバーを見つける可能性があります（この仕様の前に[ RFC2518]）およびロックされた空のリソースを作成するサーバー。 LOCK要求への応答は、作成されたリソースの種類を示しません。クライアントがどちらのタイプにも対応できるようにするいくつかのテクニックがあります。クライアントが誤ってlock- nullまたは空のロックされたリソースを作成したくない場合は、LOCKリクエストに「If-Match：*」ヘッダーを含めて、サーバーが新しいリソースを作成しないようにすることができます。 LOCK要求がリソースを作成し、その後クライアントがCOPYまたはMOVE要求を使用してそのリソースを上書きしたい場合、クライアントは &quot;Overwrite：T&quot;ヘッダーを含める必要があります。 LOCKリクエストがリソースを作成し、クライアントがそのリソースを削除することを決定した場合、DELETE要求はロックヌルリソースで失敗することになっているため、代わりにUNLOCKを使用する必要があります。ただし、ロックされた空のリソースでは、UNLO​​CKによってリソースが非表示になることはありません。したがって、クライアントは両方の要求を試行し、2つの要求のいずれかでのエラーを無視する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="b9c050a4669d26963f30fbcabf737a5a269d8088" translate="yes" xml:space="preserve">
          <source>A WebDAV-compliant resource is not required to support locking in any
   form.  If the resource does support locking, it may choose to support
   any combination of exclusive and shared locks for any access types.

   The reason for this flexibility is that locking policy strikes to the
   very heart of the resource management and versioning systems employed
   by various storage repositories.  These repositories require control
   over what sort of locking will be made available.  For example, some
   repositories only support shared write locks, while others only
   provide support for exclusive write locks, while yet others use no
   locking at all.  As each system is sufficiently different to merit
   exclusion of certain locking features, this specification leaves
   locking as the sole axis of negotiation within WebDAV.</source>
          <target state="translated">WebDAV準拠のリソースは、どのような形式でもロックをサポートする必要はありません。リソースがロックをサポートしている場合は、どのようなアクセスタイプに対しても排他的ロックと共有ロックの組み合わせをサポートすることを選択することができます。この柔軟性の理由は、ロックポリシーが様々なストレージリポジトリで採用されているリソース管理とバージョン管理システムの核心を突くからです。これらのリポジトリでは、どのような種類のロックが利用可能になるかを制御する必要があります。例えば、あるリポジトリは共有書き込みロックのみをサポートし、あるリポジトリは排他的書き込みロックのみをサポートし、あるリポジトリは全くロックを使用しません。それぞれのシステムは、特定のロック機能を除外することを正当化するために十分に異なっているので、この仕様ではロックをWebDAV内での唯一の交渉の軸として残します。</target>
        </trans-unit>
        <trans-unit id="38254fe710f16f85c9fd4ff8f8d9fcf247affba8" translate="yes" xml:space="preserve">
          <source>A blank line indicating all meta-information for the request has been sent.</source>
          <target state="translated">リクエストのすべてのメタ情報が送信されたことを示す空白行。</target>
        </trans-unit>
        <trans-unit id="dffa4d2573a0c29a3cf6a916b1ae983e76a72cd2" translate="yes" xml:space="preserve">
          <source>A blank line indicating all meta-information for the request have been sent.</source>
          <target state="translated">リクエストのためのすべてのメタ情報が送信されたことを示す空行。</target>
        </trans-unit>
        <trans-unit id="98ed6d976f0709e14a223063750e838af2371092" translate="yes" xml:space="preserve">
          <source>A boolean that indicates the user agent's preference for reduced data usage.</source>
          <target state="translated">データ使用量を減らすことをユーザーエージェントが好むことを示すブール値。</target>
        </trans-unit>
        <trans-unit id="d6f5fbf27da59695f3ff9b3365893efeb5c2ea49" translate="yes" xml:space="preserve">
          <source>A brief description of the changes between the early versions of HTTP, to the modern HTTP/2 and beyond.</source>
          <target state="translated">初期バージョンのHTTPから現代のHTTP/2以降のHTTPまでの変化を簡単に説明しています。</target>
        </trans-unit>
        <trans-unit id="39fb3ea12550138a780b56267e0eeca6a0faf155" translate="yes" xml:space="preserve">
          <source>A brief description of the changes between the early versions of HTTP, to the modern HTTP/2, the emergent HTTP/3 and beyond.</source>
          <target state="translated">初期バージョンのHTTPから現代のHTTP/2、出現したHTTP/3、そしてそれ以降のHTTPへの変化を簡単に説明しています。</target>
        </trans-unit>
        <trans-unit id="cd6e33516e3b56de33ea030077bb00ea0ddc4642" translate="yes" xml:space="preserve">
          <source>A brief introduction of the notion of resources, identifiers, and locations on the Web.</source>
          <target state="translated">ウェブ上のリソース、識別子、ロケーションの概念を簡単に紹介します。</target>
        </trans-unit>
        <trans-unit id="2eb51aaae5e24e4201d71c51102766328e241d9e" translate="yes" xml:space="preserve">
          <source>A brief introduction to the concept of resources, identifiers, and locations on the web.</source>
          <target state="translated">ウェブ上のリソース、識別子、ロケーションの概念を簡単に紹介しています。</target>
        </trans-unit>
        <trans-unit id="70b11a72f1dd5ff054b32769e00fdf5e574c1d4a" translate="yes" xml:space="preserve">
          <source>A cache MUST NOT store a response to any request, unless:

   o  The request method is understood by the cache and defined as being
      cacheable, and

   o  the response status code is understood by the cache, and

   o  the &quot;no-store&quot; cache directive (see &lt;a href=&quot;#section-5.2&quot;&gt;Section 5.2&lt;/a&gt;) does not appear
      in request or response header fields, and

   o  the &quot;private&quot; response directive (see &lt;a href=&quot;#section-5.2.2.6&quot;&gt;Section 5.2.2.6&lt;/a&gt;) does not
      appear in the response, if the cache is shared, and

   o  the Authorization header field (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7235]&lt;/a&gt;) does
      not appear in the request, if the cache is shared, unless the
      response explicitly allows it (see &lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;), and

   o  the response either:

      *  contains an Expires header field (see &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;), or

      *  contains a max-age response directive (see &lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;), or

      *  contains a s-maxage response directive (see &lt;a href=&quot;#section-5.2.2.9&quot;&gt;Section 5.2.2.9&lt;/a&gt;)
         and the cache is shared, or

      *  contains a Cache Control Extension (see &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;) that
         allows it to be cached, or

      *  has a status code that is defined as cacheable by default (see
         &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;), or 

      *  contains a public response directive (see &lt;a href=&quot;#section-5.2.2.5&quot;&gt;Section 5.2.2.5&lt;/a&gt;).

   Note that any of the requirements listed above can be overridden by a
   cache-control extension; see &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;.

   In this context, a cache has &quot;understood&quot; a request method or a
   response status code if it recognizes it and implements all specified
   caching-related behavior.

   Note that, in normal operation, some caches will not store a response
   that has neither a cache validator nor an explicit expiration time,
   as such responses are not usually useful to store.  However, caches
   are not prohibited from storing such responses.</source>
          <target state="translated">キャッシュは、以下の場合を除いて、要求に対する応答を格納してはなりません（MUST NOT）。o要求メソッドがキャッシュによって理解され、キャッシュ可能として定義されており、o応答ステータスコードがキャッシュによって理解されており、o「ストアなし」のキャッシュディレクティブ（&lt;a href=&quot;#section-5.2&quot;&gt;セクション5.2を&lt;/a&gt;参照）は要求または応答ヘッダーフィールドに表示されません。また、キャッシュが共有されている場合、「プライベート」応答ディレクティブ（&lt;a href=&quot;#section-5.2.2.6&quot;&gt;セクション5.2.2.6を&lt;/a&gt;参照）は応答に表示されません。また、o Authorizationヘッダーフィールド（&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;[RFC7235]のセクション4.2を&lt;/a&gt;参照）は、キャッシュが共有されている場合、応答で明示的に許可されていない限り（&lt;a href=&quot;#section-3.2&quot;&gt;セクション3.2を&lt;/a&gt;参照）、要求に表示されません。* Expiresヘッダーフィールドが含まれています（&lt;a href=&quot;#section-5.3&quot;&gt;セクション5.3&lt;/a&gt;）、または*にはmax-age応答ディレクティブが含まれます（&lt;a href=&quot;#section-5.2.2.8&quot;&gt;セクション5.2.2.8を&lt;/a&gt;参照）、または*にはs-maxage応答ディレクティブが含まれ（&lt;a href=&quot;#section-5.2.2.9&quot;&gt;セクション5.2.2.9を&lt;/a&gt;参照）、キャッシュは共有されます、または*キャッシュ制御拡張機能が含まれます（&lt;a href=&quot;#section-5.2.3&quot;&gt;セクション5.2.3を&lt;/a&gt;参照）キャッシュできるようにする、または*ステータスコードがデフォルトでキャッシュ可能として定義されている（&lt;a href=&quot;#section-4.2.2&quot;&gt;セクション4.2.2を&lt;/a&gt;参照 ）、または*がパブリックレスポンスディレクティブを含む（&lt;a href=&quot;#section-5.2.2.5&quot;&gt;セクション5.2.2.5を&lt;/a&gt;参照）上記の要件はいずれも、キャッシュ制御拡張機能によってオーバーライドできることに注意してください。&lt;a href=&quot;#section-5.2.3&quot;&gt;セクション5.2.3を&lt;/a&gt;参照。このコンテキストでは、キャッシュがリクエストメソッドまたは応答ステータスコードを認識し、指定されたすべてのキャッシュ関連の動作を実装している場合、キャッシュはそれを &quot;理解&quot;しています。通常の操作では、一部のキャッシュは、キャッシュバリデーターも明示的な有効期限も持たない応答を保存しないことに注意してください。ただし、キャッシュはそのような応答の格納を禁止されていません。</target>
        </trans-unit>
        <trans-unit id="afcd457e5449ea96b9730d7945fa792f97c22645" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this if it heuristically chose a freshness
   lifetime greater than 24 hours and the response's age is greater than
   24 hours.</source>
          <target state="translated">キャッシュは、ヒューリスティックに24時間以上の鮮度寿命を選択し、レスポンスの年齢が24時間以上であれば、これを生成すべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="f6168c09c8c7fd95195aaf7adbff37d6acd9b77a" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this if it is intentionally disconnected from
   the rest of the network for a period of time.</source>
          <target state="translated">キャッシュは、一定期間、ネットワークの残りの部分から意図的に切断された場合、これを生成すべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="5d58c7fee0ffec3747d196ae22d87f92a88b3159" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this when sending a stale response because an
   attempt to validate the response failed, due to an inability to reach
   the server.</source>
          <target state="translated">キャッシュは、サーバに到達できないためにレスポンスの検証に失敗したため、スタールレスポンスを送信するときにこれを生成すべきです(SHOULD)。</target>
        </trans-unit>
        <trans-unit id="9dedbe9ca421577a1ae13ea9af987a4dc03874f1" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this whenever the sent response is stale.</source>
          <target state="translated">キャッシュは、送信されたレスポンスが陳腐化しているときはいつでもこれを生成するべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="3d66f1b37c3af5067fb436a94514119f41081f5c" translate="yes" xml:space="preserve">
          <source>A cache can calculate the freshness lifetime (denoted as
   freshness_lifetime) of a response by using the first match of the
   following:

   o  If the cache is shared and the s-maxage response directive
      (&lt;a href=&quot;#section-5.2.2.9&quot;&gt;Section 5.2.2.9&lt;/a&gt;) is present, use its value, or

   o  If the max-age response directive (&lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;) is present,
      use its value, or

   o  If the Expires response header field (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) is present, use
      its value minus the value of the Date response header field, or

   o  Otherwise, no explicit expiration time is present in the response.
      A heuristic freshness lifetime might be applicable; see
      &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;.

   Note that this calculation is not vulnerable to clock skew, since all
   of the information comes from the origin server. 

   When there is more than one value present for a given directive
   (e.g., two Expires header fields, multiple Cache-Control: max-age
   directives), the directive's value is considered invalid.  Caches are
   encouraged to consider responses that have invalid freshness
   information to be stale.</source>
          <target state="translated">キャッシュを共有し、S-MAXAGE応答指令（されている場合○：キャッシュは、次の最初の一致を使用して応答（freshness_lifetimeとして示される）鮮度寿命を計算することができ&lt;a href=&quot;#section-5.2.2.9&quot;&gt;、セクション5.2.2.9は&lt;/a&gt;、）存在し、その値を使用しますまたはo max-age応答ディレクティブ（&lt;a href=&quot;#section-5.2.2.8&quot;&gt;セクション5.2.2.8&lt;/a&gt;）が存在する場合は、その値を使用します。o Expires応答ヘッダーフィールド（&lt;a href=&quot;#section-5.3&quot;&gt;セクション5.3&lt;/a&gt;）が存在する場合は、その値から日付応答ヘッダーフィールドの値を差し引いた値を使用します。またはoそれ以外の場合、応答に明示的な有効期限はありません。発見的鮮度の有効期間が適用される場合があります。&lt;a href=&quot;#section-4.2.2&quot;&gt;セクション4.2.2を&lt;/a&gt;参照 。すべての情報はオリジンサーバーから取得されるため、この計算はクロックスキューに対して脆弱ではないことに注意してください。特定のディレクティブに複数の値が存在する場合（たとえば、2つのExpiresヘッダーフィールド、複数のCache-Control：max-ageディレクティブ）、ディレクティブの値は無効と見なされます。キャッシュは、無効な鮮度情報を含む応答を古くなっていると見なすことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ffb1f6da1ee8afd1a7b46e415ab53e9563e80045" translate="yes" xml:space="preserve">
          <source>A cache entry might also consist of multiple stored responses differentiated by a secondary key, if the request is target of content negotiation. For more details see the information about the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; header &lt;a href=&quot;#Varying_responses&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">要求がコンテンツネゴシエーションのターゲットである場合、キャッシュエントリは、セカンダリキーによって区別される複数の格納された応答で構成される場合もあります。詳細については、&lt;a href=&quot;#Varying_responses&quot;&gt;以下&lt;/a&gt;の&lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt;ヘッダーに関する情報を参照してください。</target>
        </trans-unit>
        <trans-unit id="5972d7cea05a00533e908dec31b26470e29e3357" translate="yes" xml:space="preserve">
          <source>A cache that receives an incomplete response (for example, with fewer
   bytes of data than specified in a Content-Length header) MAY store
   the response. However, the cache MUST treat this as a partial
   response. Partial responses MAY be combined as described in &lt;a href=&quot;#section-13.5.4&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt;; the result might be a full response or might still be
   partial. A cache MUST NOT return a partial response to a client
   without explicitly marking it as such, using the 206 (Partial
   Content) status code. A cache MUST NOT return a partial response
   using a status code of 200 (OK).

   If a cache receives a 5xx response while attempting to revalidate an
   entry, it MAY either forward this response to the requesting client,
   or act as if the server failed to respond. In the latter case, it MAY
   return a previously received response unless the cached entry
   includes the &quot;must-revalidate&quot; cache-control directive (see &lt;a href=&quot;#section-14.9&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt;).</source>
          <target state="translated">不完全な応答を受信するキャッシュ（たとえば、Content-Lengthヘッダーで指定されたよりもデータのバイト数が少ない場合）は、応答を格納できます（MAY）。ただし、キャッシュはこれを部分応答として扱う必要があります。部分応答は、&lt;a href=&quot;#section-13.5.4&quot;&gt;セクション&lt;/a&gt;&lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4で&lt;/a&gt;説明されているように組み合わせることができます（MAY）; 結果は完全な応答になる場合もあれば、部分的な場合もあります。キャッシュは、206（Partial Content）ステータスコードを使用して、明示的にマークを付けずにクライアントに部分的な応答を返してはなりません（MUST NOT）。キャッシュは、ステータスコード200（OK）を使用して部分的な応答を返してはなりません（MUST NOT）。キャッシュがエントリの再検証を試みている間に5xx応答を受信した場合、それはこの応答を要求側クライアントに転送するか、サーバーが応答に失敗したかのように振る舞う場合があります。後者の場合、キャッシュされたエントリに「必須の修正」キャッシュ制御ディレクティブが含まれていない限り（&lt;a href=&quot;#section-14.9&quot;&gt;セクション&lt;/a&gt;&lt;a href=&quot;#section-14.9&quot;&gt;14.9を&lt;/a&gt;参照）、以前に受信した応答を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="a72a187927140b084c50b2a86bb3cae9c1129d9d" translate="yes" xml:space="preserve">
          <source>A cache will send the request to the origin server for validation before releasing a cached copy.</source>
          <target state="translated">キャッシュは、キャッシュされたコピーをリリースする前に、検証のためにリクエストをオリジンサーバに送ります。</target>
        </trans-unit>
        <trans-unit id="92c597b13172b0ae1b9fec4cca7c94c8d5002a48" translate="yes" xml:space="preserve">
          <source>A character encoding name, like &lt;code&gt;utf-8&lt;/code&gt; or &lt;code&gt;iso-8859-15.&lt;/code&gt;</source>
          <target state="translated">A character encoding name, like &lt;code&gt;utf-8&lt;/code&gt; or &lt;code&gt;iso-8859-15.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef7762a0337a8349674180425bb13270b132201a" translate="yes" xml:space="preserve">
          <source>A character set like &lt;code&gt;utf-8&lt;/code&gt; or &lt;code&gt;iso-8859-15.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;utf-8&lt;/code&gt; や &lt;code&gt;iso-8859-15.&lt;/code&gt; ような文字セット。</target>
        </trans-unit>
        <trans-unit id="a46fba5aafbe140d23668fd13707246dc167e60e" translate="yes" xml:space="preserve">
          <source>A class 1 compliant resource MUST meet all &quot;MUST&quot; requirements in all
   sections of this document.

   Class 1 compliant resources MUST return, at minimum, the value &quot;1&quot; in
   the DAV header on all responses to the OPTIONS method.</source>
          <target state="translated">クラス1準拠のリソースは、この文書のすべてのセクションのすべての「MUST」要件を満たさなければならない[MUST]。クラス1に準拠したリソースは、OPTIONSメソッドへのすべての応答において、最低でもDAVヘッダーに値「1」を返さなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="f09ae974e30d6d65603cbcb265f3f767e63d4b38" translate="yes" xml:space="preserve">
          <source>A class 2 compliant resource MUST meet all class 1 requirements and
   support the LOCK method, the DAV:supportedlock property, the DAV:
   lockdiscovery property, the Time-Out response header and the Lock-
   Token request header.  A class 2 compliant resource SHOULD also
   support the Timeout request header and the 'owner' XML element.

   Class 2 compliant resources MUST return, at minimum, the values &quot;1&quot;
   and &quot;2&quot; in the DAV header on all responses to the OPTIONS method.</source>
          <target state="translated">クラス2に準拠したリソースは、すべてのクラス1の要件を満たし、LOCKメソッド、 DAV:supportedlockプロパティ、DAV:lockdiscoveryプロパティ、Time-Out応答ヘッダ、および Lock-Tokenリクエストヘッダをサポートしなければならない[MUST]。クラス2に準拠したリソースは、Timeoutリクエストヘッダーと'owner' XML要素もサポートするべきである[SHOULD]。クラス2に準拠したリソースは、OPTIONSメソッドへのすべての応答でDAVヘッダーの値 「1」と「2」を最低でも返さなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="c8a24609de1da03e233355a5b214ad825afc020e" translate="yes" xml:space="preserve">
          <source>A client MUST NOT submit the same write lock request twice.  Note
   that a client is always aware it is resubmitting the same lock
   request because it must include the lock token in the If header in
   order to make the request for a resource that is already locked.

   However, a client may submit a LOCK request with an If header but
   without a body.  A server receiving a LOCK request with no body MUST
   NOT create a new lock -- this form of the LOCK request is only to be
   used to &quot;refresh&quot; an existing lock (meaning, at minimum, that any
   timers associated with the lock MUST be reset).

   Clients may submit Timeout headers of arbitrary value with their lock
   refresh requests.  Servers, as always, may ignore Timeout headers
   submitted by the client, and a server MAY refresh a lock with a
   timeout period that is different than the previous timeout period
   used for the lock, provided it advertises the new value in the LOCK
   refresh response.

   If an error is received in response to a refresh LOCK request, the
   client MUST NOT assume that the lock was refreshed.</source>
          <target state="translated">クライアントは同じライトロックリクエストを2回提出してはならない[MUST NOT]。クライアントは、すでにロックされているリソースに対するリクエス トを行うためには、Ifヘッダーにロックトークンを含めなければならないので、 同じロックリクエストを再提出していることを常に認識していることに 注意すること。しかしながら、クライアントは、ボディを持たずにIfヘッダーを持つ LOCKリクエストを送信してもよい。ボディのないLOCKリクエストを受け取るサーバーは新しいロックを作成してはならない[MUST NOT]--この形式のLOCKリクエストは既存のロックを「リフレッシュ」するためにのみ使用される (少なくとも、ロックに関連するすべてのタイマーはリセットされなければならない[MUST]という意味である)。クライアントはロックリフレッシュリクエストで任意の値のTimeoutヘッダーを送信してもよい。サーバーは、いつものように、クライアントが提出したTimeoutヘッダーを無視してもよい。サーバーは、 LOCKリフレッシュ応答で新しい値をアドバタイズすることを条件に、ロックに使用された以前のタイムアウト期間とは異なる タイムアウト期間でロックをリフレッシュしてもよい[MAY]。LOCKリフレッシュ応答でエラーを受け取った場合、クライアントはロックがリフレッシュされたと 想定してはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="7d982f3df26faad33edb44e7ec5819638eb4f0b9" translate="yes" xml:space="preserve">
          <source>A client can POST Media Resources as well as Entry Resources to a
   Collection.  If a server accepts such a request, then it MUST create
   two new Resources -- one that corresponds to the entity sent in the
   request, called the Media Resource, and an associated Member Entry,
   called the Media Link Entry.  Media Link Entries are represented as
   Atom Entries, and appear in the Collection.

   The Media Link Entry contains the metadata and IRI of the (perhaps
   non-textual) Media Resource.  The Media Link Entry thus makes the
   metadata about the Media Resource separately available for retrieval
   and alteration.

   The server can signal the media types it will accept using the app:
   accept element in the Service Document, as specified in &lt;a href=&quot;#section-8.3.4&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-8.3.4&quot;&gt;8.3.4&lt;/a&gt;.

   Successful responses to creation requests MUST include the URI of the
   Media Link Entry in the Location header.  The Media Link Entry SHOULD
   contain an atom:link element with a link relation of &quot;edit-media&quot;
   that contains the Media Resource IRI.  The Media Link Entry MUST have
   an atom:content element with a &quot;src&quot; attribute.  The value of the
   &quot;src&quot; attribute is an IRI for the newly created Media Resource.  It
   is OPTIONAL that the IRI of the &quot;src&quot; attribute on the atom:content
   element be the same as the Media Resource IRI.  For example, the
   &quot;src&quot; attribute value might instead be a link into a static cache or
   content distribution network and not the Media Resource IRI.

   Implementers are asked to note that [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;] specifies that Atom
   Entries MUST contain an atom:summary element.  Thus, upon successful
   creation of a Media Link Entry, a server MAY choose to populate the
   atom:summary element (as well as any other mandatory elements such as
   atom:id, atom:author, and atom:title) with content derived from the
   POSTed entity or from any other source.  A server might not allow a
   client to modify the server-selected values for these elements.

   For Resource creation, this specification only defines cases where
   the POST body has an Atom Entry entity declared as an Atom media type
   (&quot;application/atom+xml&quot;), or a non-Atom entity declared as a non-Atom
   media type.  When a client is POSTing an Atom Entry to a Collection,
   it may use a media type of either &quot;application/atom+xml&quot; or
   &quot;application/atom +xml;type=entry&quot;.  This specification does not
   specify any request semantics or server behavior in the case where
   the POSTed media type is &quot;application/atom+xml&quot; but the body is
   something other than an Atom Entry.  In particular, what happens on
   POSTing an Atom Feed Document to a Collection using the &quot;application/
   atom+xml&quot; media type is undefined. 

   The Atom Protocol does not specify a means to create multiple
   representations of the same Resource (for example, a PNG and a JPG of
   the same image) either on creation or editing.</source>
          <target state="translated">クライアントは、メディアリソースとコレクションへのエントリリソースをPOSTできます。サーバーがそのような要求を受け入れる場合、2つの新しいリソースを作成する必要があります。1つは、メディアリソースと呼ばれる、要求で送信されたエンティティに対応するもので、もう1つは、メディアリンクエントリと呼ばれる関連するメンバーエントリです。メディアリンクエントリはAtomエントリとして表され、コレクションに表示されます。メディアリンクエントリには、（おそらく非テキストの）メディアリソースのメタデータとIRIが含まれます。したがって、メディアリンクエントリは、メディアリソースに関するメタデータを個別に取得および変更できるようにします。サーバーは、&lt;a href=&quot;#section-8.3.4&quot;&gt;セクション&lt;/a&gt;&lt;a href=&quot;#section-8.3.4&quot;&gt;8.3.4で&lt;/a&gt;指定されているように、サービスドキュメントのapp：accept要素を使用して、受け入れるメディアタイプを通知できます。。作成リクエストへの成功した応答には、LocationヘッダーにメディアリンクエントリのURIを含める必要があります。メディアリンクエントリには、メディアリソースIRIを含む「edit-media」のリンク関係を持つatom：link要素を含める必要があります（SHOULD）。メディアリンクエントリには、「src」属性を持つatom：content要素が必要です。 「src」属性の値は、新しく作成されたメディアリソースのIRIです。 atom：content要素の「src」属性のIRIがメディアリソースIRIと同じであることはオプションです。たとえば、「src」属性値は、静的キャッシュまたはコンテンツ配信ネットワークへのリンクであり、メディアリソースIRIではない場合があります。実装者は、次のことに注意するように求められます[ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;]は、Atomエントリーにatom：summaryエレメントが含まれている必要があることを指定します。したがって、メディアリンクエントリが正常に作成されると、サーバーは、atom：summary要素（およびatom：id、atom：author、atom：titleなどの他の必須要素）に、 POSTされたエンティティまたは他のソースから。サーバーは、クライアントがこれらの要素に対してサーバーが選択した値を変更することを許可しない場合があります。リソース作成の場合、この仕様では、POSTボディにAtomメディアタイプ（ &quot;application / atom + xml&quot;）として宣言されたAtomエントリエンティティ、または非Atomメディアタイプとして宣言された非Atomエンティティがある場合のみを定義します。クライアントがAtomエントリーをコレクションにPOSTするとき、「application / atom + xml」または「application / atom + xml」のいずれかのメディアタイプを使用できます。type = entry &quot;。この仕様は、POSTされたメディアタイプが「application / atom + xml」であるが、本文がAtomエントリ以外のものである場合のリクエストセマンティクスやサーバーの動作を指定していません。特に、POSTで発生すること「application / atom + xml」メディアタイプを使用したコレクションへのAtomフィードドキュメントは定義されていません。Atomプロトコルは、同じリソースの複数の表現（たとえば、同じ画像のPNGとJPG）を作成する手段を指定していません）作成時または編集時。「application / atom + xml」メディアタイプを使用してAtomフィードドキュメントをコレクションにPOSTするとどうなるかは定義されていません。 Atomプロトコルは、作成時または編集時に、同じリソースの複数の表現（たとえば、同じ画像のPNGとJPG）を作成する手段を指定していません。「application / atom + xml」メディアタイプを使用してAtomフィードドキュメントをコレクションにPOSTするとどうなるかは定義されていません。 Atomプロトコルは、作成時または編集時に、同じリソースの複数の表現（たとえば、同じ画像のPNGとJPG）を作成する手段を指定していません。</target>
        </trans-unit>
        <trans-unit id="7e5c63dbdb2f7786ab98990dffa15132b1ea80a1" translate="yes" xml:space="preserve">
          <source>A client can assign a priority for a new stream by including
   prioritization information in the HEADERS frame (&lt;a href=&quot;#section-6.2&quot;&gt;Section 6.2&lt;/a&gt;) that
   opens the stream.  At any other time, the PRIORITY frame
   (&lt;a href=&quot;#section-6.3&quot;&gt;Section 6.3&lt;/a&gt;) can be used to change the priority of a stream.

   The purpose of prioritization is to allow an endpoint to express how
   it would prefer its peer to allocate resources when managing
   concurrent streams.  Most importantly, priority can be used to select
   streams for transmitting frames when there is limited capacity for
   sending.

   Streams can be prioritized by marking them as dependent on the
   completion of other streams (&lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;).  Each dependency is
   assigned a relative weight, a number that is used to determine the
   relative proportion of available resources that are assigned to
   streams dependent on the same stream. 

   Explicitly setting the priority for a stream is input to a
   prioritization process.  It does not guarantee any particular
   processing or transmission order for the stream relative to any other
   stream.  An endpoint cannot force a peer to process concurrent
   streams in a particular order using priority.  Expressing priority is
   therefore only a suggestion.

   Prioritization information can be omitted from messages.  Defaults
   are used prior to any explicit values being provided (&lt;a href=&quot;#section-5.3.5&quot;&gt;Section 5.3.5&lt;/a&gt;).</source>
          <target state="translated">クライアントは、ストリームを開くHEADERSフレーム（&lt;a href=&quot;#section-6.2&quot;&gt;セクション6.2&lt;/a&gt;）に優先順位情報を含めることにより、新しいストリームに優先順位を割り当てることができます。それ以外の場合は、PRIORITYフレーム（&lt;a href=&quot;#section-6.3&quot;&gt;セクション6.3&lt;/a&gt;）を使用して、ストリームの優先度を変更できます。優先順位付けの目的は、エンドポイントが、同時ストリームを管理するときにピアがリソースを割り当てることをどのように優先するかを表現できるようにすることです。最も重要なことは、送信容量が限られている場合に、優先度を使用してフレームを送信するストリームを選択できることです。ストリームは、他のストリームの完了に依存するものとしてマークすることで優先順位を付けることができます（&lt;a href=&quot;#section-5.3.1&quot;&gt;セクション5.3.1&lt;/a&gt;）。各依存関係には相対的な重みが割り当てられます。これは、同じストリームに依存するストリームに割り当てられる使用可能なリソースの相対的な割合を決定するために使用される数値です。ストリームの優先順位を明示的に設定することは、優先順位付けプロセスに入力されます。他のストリームと比較した、ストリームの特定の処理または送信順序を保証するものではありません。エンドポイントは、優先度を使用して特定の順序で同時ストリームを処理するようにピアに強制することはできません。したがって、優先順位を表明することは単なる提案にすぎません。優先順位付け情報はメッセージから省略できます。デフォルトは、明示的な値が提供される前に使用されます（&lt;a href=&quot;#section-5.3.5&quot;&gt;セクション5.3.5&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="83b701e8884cdcbec201923a5462b4446bf15619" translate="yes" xml:space="preserve">
          <source>A client can express the desired push policy for a request by sending an &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.1&quot;&gt;Accept-Push-Policy&lt;/a&gt;&lt;/code&gt; header field in the request.</source>
          <target state="translated">クライアントは、リクエストの &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.1&quot;&gt;Accept-Push-Policy&lt;/a&gt;&lt;/code&gt; ヘッダーフィールドを送信することで、リクエストに必要なプッシュポリシーを表現できます。</target>
        </trans-unit>
        <trans-unit id="158968deede144dac0a0fb8c225610ac022fddfc" translate="yes" xml:space="preserve">
          <source>A client can learn that a particular server supports HTTP/2 by other
   means.  For example, [&lt;a href=&quot;#ref-ALT-SVC&quot;&gt;ALT-SVC&lt;/a&gt;] describes a mechanism for advertising
   this capability.

   A client MUST send the connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;) and then MAY
   immediately send HTTP/2 frames to such a server; servers can identify
   these connections by the presence of the connection preface.  This 

   only affects the establishment of HTTP/2 connections over cleartext
   TCP; implementations that support HTTP/2 over TLS MUST use protocol
   negotiation in TLS [&lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt;].

   Likewise, the server MUST send a connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;).

   Without additional information, prior support for HTTP/2 is not a
   strong signal that a given server will support HTTP/2 for future
   connections.  For example, it is possible for server configurations
   to change, for configurations to differ between instances in
   clustered servers, or for network conditions to change.</source>
          <target state="translated">クライアントは、特定のサーバーが他の方法でHTTP / 2をサポートしていることを知ることができます。たとえば、[ &lt;a href=&quot;#ref-ALT-SVC&quot;&gt;ALT-SVC&lt;/a&gt; ]は、この機能をアドバタイズするためのメカニズムを説明しています。クライアントは接続の序文（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）を送信する必要があり、その後すぐにHTTP / 2フレームをそのようなサーバーに送信してもよい[MAY]。サーバーは、接続の序文の存在によってこれらの接続を識別できます。これは、クリアテキストTCPを介したHTTP / 2接続の確立にのみ影響します。 HTTP / 2 over TLSをサポートする実装は、TLS [ &lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt; ]でプロトコルネゴシエーションを使用する必要があります。同様に、サーバーは接続の序文を送信する必要があります（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）。追加情報がなければ、HTTP / 2の以前のサポートは、特定のサーバーが将来の接続のためにHTTP / 2をサポートするという強力なシグナルではありません。たとえば、サーバーの構成が変更されたり、クラスター化されたサーバーのインスタンス間で構成が異なったり、ネットワークの状態が変更されたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="3cf460d7009baa0cf38dad3c06caeb746522b55c" translate="yes" xml:space="preserve">
          <source>A client can send the &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.7&quot;&gt;Accept-Signature&lt;/a&gt;&lt;/code&gt; header field to indicate intention to take advantage of any available signatures and to indicate what kinds of signatures it supports.</source>
          <target state="translated">クライアントは &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.7&quot;&gt;Accept-Signature&lt;/a&gt;&lt;/code&gt; ヘッダーフィールドを送信して、使用可能な署名を利用する意図を示し、サポートする署名の種類を示すことができます。</target>
        </trans-unit>
        <trans-unit id="80a4adc81ca6f443765ed44b189dadef0d1bac96" translate="yes" xml:space="preserve">
          <source>A client ought to limit the number of simultaneous open connections
   that it maintains to a given server.

   Previous revisions of HTTP gave a specific number of connections as a
   ceiling, but this was found to be impractical for many applications.
   As a result, this specification does not mandate a particular maximum
   number of connections but, instead, encourages clients to be
   conservative when opening multiple connections.

   Multiple connections are typically used to avoid the &quot;head-of-line
   blocking&quot; problem, wherein a request that takes significant
   server-side processing and/or has a large payload blocks subsequent
   requests on the same connection.  However, each connection consumes
   server resources.  Furthermore, using multiple connections can cause
   undesirable side effects in congested networks.

   Note that a server might reject traffic that it deems abusive or
   characteristic of a denial-of-service attack, such as an excessive
   number of open connections from a single client.</source>
          <target state="translated">クライアントは、与えられたサーバに維持する同時オープン接続の数を制限すべきです。HTTP の以前のリビジョンでは、特定の接続数を上限としていましたが、これは多くのアプリケーションでは非現実的であることがわかりました。その結果、この仕様では特定の最大接続数を強制するのではなく、クライアントが複数の接続を開くときには保守的であることを推奨しています。複数のコネクションは一般的に「行頭ブロッキング」の問題を回避するために使用される。しかし、各接続はサーバーリソースを消費する。さらに、複数の接続を使用すると、混雑したネットワークでは望ましくない副作用を引き起こす可能性がある。サーバは、単一のクライアントからの過剰な数のオープン接続など、サービス拒否攻撃に特徴的な悪用と 判断したトラフィックを拒否する可能性があることに注意すること。</target>
        </trans-unit>
        <trans-unit id="8c4361d2d7548ea6bc70d98eca9d420ed02557e9" translate="yes" xml:space="preserve">
          <source>A client requests signals to the server that it supports the upgrade mechanisms of &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">クライアントは、&lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt; &lt;code&gt;upgrade-insecure-requests&lt;/code&gt; の&lt;/a&gt;アップグレードメカニズムをサポートすることをサーバーに通知します。</target>
        </trans-unit>
        <trans-unit id="d5dc81872963bb2874b6966923a2cab55617f3ce" translate="yes" xml:space="preserve">
          <source>A client sends a request with a Expect header and waits for the server to respond before sending the message body.</source>
          <target state="translated">クライアントは、Expectヘッダ付きのリクエストを送信し、メッセージボディを送信する前にサーバが応答するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="3c772b2037eba42a257f31dd19bdf0b51277103f" translate="yes" xml:space="preserve">
          <source>A client sends an HTTP request on a new stream, using a previously
   unused stream identifier (&lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;).  A server sends an HTTP
   response on the same stream as the request.

   An HTTP message (request or response) consists of:

   1.  for a response only, zero or more HEADERS frames (each followed
       by zero or more CONTINUATION frames) containing the message
       headers of informational (1xx) HTTP responses (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230],
       Section&amp;nbsp;3.2&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2&quot;&gt;[RFC7231], Section&amp;nbsp;6.2&lt;/a&gt;),

   2.  one HEADERS frame (followed by zero or more CONTINUATION frames)
       containing the message headers (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], Section&amp;nbsp;3.2&lt;/a&gt;),

   3.  zero or more DATA frames containing the payload body (see
       &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.3&lt;/a&gt;), and

   4.  optionally, one HEADERS frame, followed by zero or more
       CONTINUATION frames containing the trailer-part, if present (see
       &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1.2&quot;&gt;[RFC7230], Section&amp;nbsp;4.1.2&lt;/a&gt;).

   The last frame in the sequence bears an END_STREAM flag, noting that
   a HEADERS frame bearing the END_STREAM flag can be followed by
   CONTINUATION frames that carry any remaining portions of the header
   block.

   Other frames (from any stream) MUST NOT occur between the HEADERS
   frame and any CONTINUATION frames that might follow.

   HTTP/2 uses DATA frames to carry message payloads.  The &quot;chunked&quot;
   transfer encoding defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC7230]&lt;/a&gt; MUST NOT be
   used in HTTP/2.

   Trailing header fields are carried in a header block that also
   terminates the stream.  Such a header block is a sequence starting
   with a HEADERS frame, followed by zero or more CONTINUATION frames,
   where the HEADERS frame bears an END_STREAM flag.  Header blocks
   after the first that do not terminate the stream are not part of an
   HTTP request or response. 

   A HEADERS frame (and associated CONTINUATION frames) can only appear
   at the start or end of a stream.  An endpoint that receives a HEADERS
   frame without the END_STREAM flag set after receiving a final (non-
   informational) status code MUST treat the corresponding request or
   response as malformed (&lt;a href=&quot;#section-8.1.2.6&quot;&gt;Section 8.1.2.6&lt;/a&gt;).

   An HTTP request/response exchange fully consumes a single stream.  A
   request starts with the HEADERS frame that puts the stream into an
   &quot;open&quot; state.  The request ends with a frame bearing END_STREAM,
   which causes the stream to become &quot;half-closed (local)&quot; for the
   client and &quot;half-closed (remote)&quot; for the server.  A response starts
   with a HEADERS frame and ends with a frame bearing END_STREAM, which
   places the stream in the &quot;closed&quot; state.

   An HTTP response is complete after the server sends -- or the client
   receives -- a frame with the END_STREAM flag set (including any
   CONTINUATION frames needed to complete a header block).  A server can
   send a complete response prior to the client sending an entire
   request if the response does not depend on any portion of the request
   that has not been sent and received.  When this is true, a server MAY
   request that the client abort transmission of a request without error
   by sending a RST_STREAM with an error code of NO_ERROR after sending
   a complete response (i.e., a frame with the END_STREAM flag).
   Clients MUST NOT discard responses as a result of receiving such a
   RST_STREAM, though clients can always discard responses at their
   discretion for other reasons.</source>
          <target state="translated">クライアントは、以前は使用されていなかったストリーム識別子を使用して、新しいストリームでHTTPリクエストを送信します（&lt;a href=&quot;#section-5.1.1&quot;&gt;セクション5.1.1&lt;/a&gt;）。サーバーは、リクエストと同じストリームでHTTPレスポンスを送信します。 HTTPメッセージ（要求または応答）は次のもので構成されます。1。応答のみの場合、情報（1xx）HTTP応答のメッセージヘッダーを含む0個以上のHEADERSフレーム（それぞれに0個以上のCONTINUATIONフレームが続く）（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230]を&lt;/a&gt;参照）。セクション3.2および&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2&quot;&gt;[RFC7231]、セクション6.2&lt;/a&gt;）、2。メッセージヘッダーを含む1つのHEADERSフレーム（0個以上のCONTINUATIONフレームが続く）（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230]、セクション3.2を&lt;/a&gt;参照）、3。ペイロード本体を含む0個以上のDATAフレーム（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3&quot;&gt;[RFC7230]、セクション3.3を&lt;/a&gt;参照））、および4.オプションで、1つのHEADERSフレームと、それに続く、トレーラー部分を含む0個以上のCONTINUATIONフレーム（存在する場合）（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1.2&quot;&gt;[RFC7230]、セクション4.1.2を&lt;/a&gt;参照）。シーケンスの最後のフレームにはEND_STREAMフラグが付いており、END_STREAMフラグが付いているHEADERSフレームの後に、ヘッダーブロックの残りの部分を運ぶCONTINUATIONフレームが続く可能性があることに注意してください。 （任意のストリームからの）他のフレームは、HEADERSフレームとそれに続く可能性のあるCONTINUATIONフレームの間に発生してはなりません（MUSTNOT）。 HTTP / 2は、DATAフレームを使用してメッセージペイロードを伝送します。&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;[RFC7230]のセクション4.1で&lt;/a&gt;定義されている「チャンク」転送エンコーディングHTTP / 2では使用しないでください。末尾のヘッダーフィールドは、ストリームを終了するヘッダーブロックで運ばれます。このようなヘッダーブロックは、HEADERSフレームで始まり、その後に0個以上のCONTINUATIONフレームが続くシーケンスであり、HEADERSフレームにはEND_STREAMフラグが付いています。ストリームを終了しない最初のヘッダーブロックの後のヘッダーブロックは、HTTP要求または応答の一部ではありません。 HEADERSフレーム（および関連するCONTINUATIONフレーム）は、ストリームの開始または終了にのみ表示できます。最終（非情報）ステータスコードを受信した後、END_STREAMフラグが設定されていないHEADERSフレームを受信するエンドポイントは、対応する要求または応答を不正な形式として処理する必要があります（&lt;a href=&quot;#section-8.1.2.6&quot;&gt;セクション8.1.2.6&lt;/a&gt;）。 HTTP要求/応答交換は、単一のストリームを完全に消費します。リクエストは、ストリームを「オープン」状態にするHEADERSフレームで始まります。リクエストはEND_STREAMを含むフレームで終了します。これにより、ストリームはクライアントでは「ハーフクローズ（ローカル）」になり、サーバーでは「ハーフクローズ（リモート）」になります。応答はHEADERSフレームで始まり、END_STREAMを持つフレームで終わります。これにより、ストリームが「閉じた」状態になります。サーバーがEND_STREAMフラグが設定されたフレーム（ヘッダーブロックを完了するために必要なCONTINUATIONフレームを含む）を送信した後、またはクライアントが受信した後、HTTP応答が完了します。応答が送受信されていない要求のどの部分にも依存しない場合、サーバーはクライアントが要求全体を送信する前に完全な応答を送信できます。これが真の場合、サーバーは、完全な応答（つまり、END_STREAMフラグのあるフレーム）を送信した後、エラーコードNO_ERRORのRST_STREAMを送信することにより、クライアントがエラーなしで要求の送信を中止するように要求できます。クライアントは、そのようなRST_STREAMを受信した結果として応答を破棄してはなりませんが、クライアントは他の理由でいつでも自分の裁量で応答を破棄できます。</target>
        </trans-unit>
        <trans-unit id="637640a6ac566c746cfe3512f687ebb242d9b708" translate="yes" xml:space="preserve">
          <source>A client sends request header fields to provide more information
   about the request context, make the request conditional based on the
   target resource state, suggest preferred formats for the response,
   supply authentication credentials, or modify the expected request
   processing.  These fields act as request modifiers, similar to the
   parameters on a programming language method invocation.</source>
          <target state="translated">クライアントはリクエストのコンテキストについてのより多くの情報を提供したり、ターゲットリソースの状態に基づいてリクエストを条件付きにしたり、レスポンスのための好ましいフォーマットを提案したり、認証証明書を提供したり、期待されるリクエスト処理を修正したりするために、リクエストヘッダーフィールドを送ります。これらのフィールドはリクエスト修飾子として動作し、 プログラミング言語のメソッド呼び出しのパラメータに似ています。</target>
        </trans-unit>
        <trans-unit id="e0dfb61cf763ec1db31697625b14173ab1816338" translate="yes" xml:space="preserve">
          <source>A client that makes a request for an &quot;http&quot; URI without prior
   knowledge about support for HTTP/2 on the next hop uses the HTTP
   Upgrade mechanism (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;Section&amp;nbsp;6.7 of [RFC7230]&lt;/a&gt;).  The client does so by
   making an HTTP/1.1 request that includes an Upgrade header field with
   the &quot;h2c&quot; token.  Such an HTTP/1.1 request MUST include exactly one
   HTTP2-Settings (&lt;a href=&quot;#section-3.2.1&quot;&gt;Section 3.2.1&lt;/a&gt;) header field.

   For example:

     GET / HTTP/1.1
     Host: server.example.com
     Connection: Upgrade, HTTP2-Settings
     Upgrade: h2c
     HTTP2-Settings: &amp;lt;base64url encoding of HTTP/2 SETTINGS payload&amp;gt;

   Requests that contain a payload body MUST be sent in their entirety
   before the client can send HTTP/2 frames.  This means that a large
   request can block the use of the connection until it is completely
   sent.

   If concurrency of an initial request with subsequent requests is
   important, an OPTIONS request can be used to perform the upgrade to
   HTTP/2, at the cost of an additional round trip. 

   A server that does not support HTTP/2 can respond to the request as
   though the Upgrade header field were absent:

     HTTP/1.1 200 OK
     Content-Length: 243
     Content-Type: text/html

     

   A server MUST ignore an &quot;h2&quot; token in an Upgrade header field.
   Presence of a token with &quot;h2&quot; implies HTTP/2 over TLS, which is
   instead negotiated as described in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.

   A server that supports HTTP/2 accepts the upgrade with a 101
   (Switching Protocols) response.  After the empty line that terminates
   the 101 response, the server can begin sending HTTP/2 frames.  These
   frames MUST include a response to the request that initiated the
   upgrade.

   For example:

     HTTP/1.1 101 Switching Protocols
     Connection: Upgrade
     Upgrade: h2c

     [ HTTP/2 connection 

   The first HTTP/2 frame sent by the server MUST be a server connection
   preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;) consisting of a SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;).
   Upon receiving the 101 response, the client MUST send a connection
   preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;), which includes a SETTINGS frame.

   The HTTP/1.1 request that is sent prior to upgrade is assigned a
   stream identifier of 1 (see &lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;) with default priority
   values (&lt;a href=&quot;#section-5.3.5&quot;&gt;Section 5.3.5&lt;/a&gt;).  Stream 1 is implicitly &quot;half-closed&quot; from
   the client toward the server (see &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;), since the request is
   completed as an HTTP/1.1 request.  After commencing the HTTP/2
   connection, stream 1 is used for the response.</source>
          <target state="translated">ネクストホップでのHTTP / 2のサポートに関する事前の知識なしに「http」URIを要求するクライアントは、HTTPアップグレードメカニズムを使用します（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;[RFC7230]のセクション6.7&lt;/a&gt;）。クライアントは、「h2c」トークンを含むUpgradeヘッダーフィールドを含むHTTP /1.1リクエストを作成することでこれを行います。このようなHTTP / 1.1リクエストには、HTTP2設定を1つだけ含める必要があります（&lt;a href=&quot;#section-3.2.1&quot;&gt;セクション3.2.1&lt;/a&gt;）ヘッダーフィールド。例：GET / HTTP / 1.1ホスト：server.example.com接続：アップグレード、HTTP2-設定アップグレード：h2c HTTP2-設定：&amp;lt;HTTP / 2SETTINGSペイロードのbase64urlエンコーディング&amp;gt;ペイロード本文を含むリクエストは、クライアントがHTTP / 2フレームを送信する前に完全に。これは、大きなリクエストが完全に送信されるまで接続の使用をブロックする可能性があることを意味します。最初のリクエストと後続のリクエストの同時実行性が重要な場合は、OPTIONSリクエストを使用して、追加のラウンドトリップを犠牲にしてHTTP / 2へのアップグレードを実行できます。 HTTP / 2をサポートしないサーバーは、Upgradeヘッダーフィールドがないかのようにリクエストに応答できます。HTTP/ 1.1 200 OK Content-Length：243 Content-Type：text / htmlサーバーは次の「h2」トークンを無視する必要があります。アップグレードヘッダーフィールド。 「」が付いたトークンの存在h2 &quot;は、HTTP / 2 over TLSを意味し、代わりにで説明されているようにネゴシエートされます。&lt;a href=&quot;#section-3.3&quot;&gt;セクション3.3&lt;/a&gt;。 HTTP / 2をサポートするサーバーは、101（Switching Protocols）応答でアップグレードを受け入れます。 101応答を終了する空の行の後、サーバーはHTTP / 2フレームの送信を開始できます。これらのフレームには、アップグレードを開始した要求への応答が含まれている必要があります。次に例を示します。HTTP/ 1.1 101スイッチングプロトコル接続：アップグレードアップグレード：h2c [HTTP / 2接続サーバーから送信される最初のHTTP / 2フレームは、SETTINGSフレーム（&lt;a href=&quot;#section-6.5&quot;&gt;セクション6.5&lt;/a&gt;）で構成されるサーバー接続の序文（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）である必要があります。 101応答を受信すると、クライアントは、SETTINGSフレームを含む接続序文（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）を送信する必要があります。アップグレード前に送信されるHTTP / 1.1リクエストには、1のストリーム識別子が割り当てられます（を参照）。&lt;a href=&quot;#section-5.1.1&quot;&gt;セクション5.1.1&lt;/a&gt;）とデフォルトの優先度値（&lt;a href=&quot;#section-5.3.5&quot;&gt;セクション5.3.5&lt;/a&gt;）。リクエストはHTTP / 1.1リクエストとして完了するため、ストリーム1はクライアントからサーバーに向かって暗黙的に「ハーフクローズ」されます（&lt;a href=&quot;#section-5.1&quot;&gt;セクション5.1を&lt;/a&gt;参照）。 HTTP / 2接続を開始した後、ストリーム1が応答に使用されます。</target>
        </trans-unit>
        <trans-unit id="52e7d76a2766c403c7c4fb05311e3908c0f23363" translate="yes" xml:space="preserve">
          <source>A client that makes a request to an &quot;https&quot; URI uses TLS [&lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt;] with
   the application-layer protocol negotiation (ALPN) extension
   [&lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt;].

   HTTP/2 over TLS uses the &quot;h2&quot; protocol identifier.  The &quot;h2c&quot;
   protocol identifier MUST NOT be sent by a client or selected by a
   server; the &quot;h2c&quot; protocol identifier describes a protocol that does
   not use TLS.

   Once TLS negotiation is complete, both the client and the server MUST
   send a connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;).</source>
          <target state="translated">「https」URIにリクエストを送信するクライアントは、アプリケーション層プロトコルネゴシエーション（ALPN）拡張機能[ &lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt; ]を備えたTLS [ &lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt; ]を使用します。 HTTP / 2 over TLSは、「h2」プロトコル識別子を使用します。 「h2c」プロトコル識別子は、クライアントによって送信されたり、サーバーによって選択されたりしてはなりません。 「h2c」プロトコル識別子は、TLSを使用しないプロトコルを記述します。 TLSネゴシエーションが完了すると、クライアントとサーバーの両方が接続の序文を送信する必要があります（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ed66d390cb72517711831274a3a7d112673c59ff" translate="yes" xml:space="preserve">
          <source>A client that supports persistent connections MAY &quot;pipeline&quot; its
   requests (i.e., send multiple requests without waiting for each
   response).  A server MAY process a sequence of pipelined requests in
   parallel if they all have safe methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7231]&lt;/a&gt;),
   but it MUST send the corresponding responses in the same order that
   the requests were received.

   A client that pipelines requests SHOULD retry unanswered requests if
   the connection closes before it receives all of the corresponding
   responses.  When retrying pipelined requests after a failed
   connection (a connection not explicitly closed by the server in its
   last complete response), a client MUST NOT pipeline immediately after
   connection establishment, since the first remaining request in the
   prior pipeline might have caused an error response that can be lost
   again if multiple requests are sent on a prematurely closed
   connection (see the TCP reset problem described in &lt;a href=&quot;#section-6.6&quot;&gt;Section 6.6&lt;/a&gt;).

   Idempotent methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7231]&lt;/a&gt;) are significant to
   pipelining because they can be automatically retried after a
   connection failure.  A user agent SHOULD NOT pipeline requests after
   a non-idempotent method, until the final response status code for
   that method has been received, unless the user agent has a means to
   detect and recover from partial failure conditions involving the
   pipelined sequence. 

   An intermediary that receives pipelined requests MAY pipeline those
   requests when forwarding them inbound, since it can rely on the
   outbound user agent(s) to determine what requests can be safely
   pipelined.  If the inbound connection fails before receiving a
   response, the pipelining intermediary MAY attempt to retry a sequence
   of requests that have yet to receive a response if the requests all
   have idempotent methods; otherwise, the pipelining intermediary
   SHOULD forward any received responses and then close the
   corresponding outbound connection(s) so that the outbound user
   agent(s) can recover accordingly.</source>
          <target state="translated">永続的な接続をサポートするクライアントは、その要求を「パイプライン化」することができます（つまり、各応答を待たずに複数の要求を送信できます）。サーバーがパイプライン化された要求のシーケンスをすべて安全なメソッド（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;[RFC7231]の4.2.1&lt;/a&gt;）、ただし、要求を受信したのと同じ順序で対応する応答を送信する必要があります。リクエストをパイプライン処理するクライアントは、対応するすべての応答を受信する前に接続が閉じた場合、未応答のリクエストを再試行する必要があります（SHOULD）。失敗した接続（最後の完全な応答でサーバーによって明示的に閉じられていない接続）の後にパイプライン要求を再試行する場合、クライアントは接続確立の直後にパイプラインを実行してはなりません。途中で閉じられた接続で複数の要求が送信されると、再び失われる可能性があります（&lt;a href=&quot;#section-6.6&quot;&gt;セクション6.6で&lt;/a&gt;説明されているTCPリセットの問題を参照）。&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.2&quot;&gt;べき等&lt;/a&gt;メソッド（[RFC7231]のセクション4.2.2））は、接続の失敗後に自動的に再試行できるため、パイプライン化にとって重要です。ユーザーエージェントがパイプラインシーケンスを含む部分的な障害状態を検出して回復する手段を備えていない限り、非べき等メソッドの後、そのメソッドの最終応答ステータスコードが受信されるまで、ユーザーエージェントはパイプラインリクエストをパイプすべきではありません。パイプライン化されたリクエストを受信する仲介者は、アウトバウンドのユーザーエージェントに依存してどのリクエストを安全にパイプライン化できるかを判断できるため、それらのリクエストをインバウンドで転送するときにパイプライン化してもよい（MAY）。応答を受信する前にインバウンド接続が失敗した場合、パイプライン処理中間手段は、すべての要求にべき等メソッドがある場合、応答をまだ受信していない一連の要求を再試行する場合があります。さもないと、パイプライン処理の仲介者は、受信した応答を転送し、対応する送信接続を閉じて、送信ユーザーエージェントが適切に回復できるようにする必要があります（SHOULD）。</target>
        </trans-unit>
        <trans-unit id="09e95576fba358e044ab16ce38c0a6a7604b1900" translate="yes" xml:space="preserve">
          <source>A client that supports persistent connections MAY &quot;pipeline&quot; its
   requests (i.e., send multiple requests without waiting for each
   response). A server MUST send its responses to those requests in the
   same order that the requests were received.

   Clients which assume persistent connections and pipeline immediately
   after connection establishment SHOULD be prepared to retry their
   connection if the first pipelined attempt fails. If a client does
   such a retry, it MUST NOT pipeline before it knows the connection is
   persistent. Clients MUST also be prepared to resend their requests if
   the server closes the connection before sending all of the
   corresponding responses.

   Clients SHOULD NOT pipeline requests using non-idempotent methods or
   non-idempotent sequences of methods (see &lt;a href=&quot;#section-9.1.2&quot;&gt;section 9.1.2&lt;/a&gt;). Otherwise, a
   premature termination of the transport connection could lead to
   indeterminate results. A client wishing to send a non-idempotent
   request SHOULD wait to send that request until it has received the
   response status for the previous request.</source>
          <target state="translated">永続的な接続をサポートするクライアントは、その要求を「パイプライン化」することができます（つまり、各応答を待たずに複数の要求を送信できます）。サーバーは、それらの要求に対する応答を、要求が受信されたのと同じ順序で送信する必要があります。接続の確立直後に永続的な接続とパイプラインを想定するクライアントは、最初のパイプライン化の試みが失敗した場合に接続を再試行する準備をする必要があります。クライアントがそのような再試行を行う場合、接続が持続していることを知る前にパイプラインを実行してはなりません（MUST NOT）。対応するすべての応答を送信する前にサーバーが接続を閉じた場合、クライアントは要求を再送信する準備もしなければなりません。クライアントは、非べき等メソッドまたは非べき等メソッドシーケンスを使用してリクエストをパイプライン処理するべきではありません（&lt;a href=&quot;#section-9.1.2&quot;&gt;セクション9.1.2を&lt;/a&gt;参照）。）。そうしないと、トランスポート接続が途中で終了すると、結果が不確定になる可能性があります。べき等でない要求を送信したいクライアントは、前の要求の応答ステータスを受信するまで、その要求の送信を待機する必要があります（SHOULD）。</target>
        </trans-unit>
        <trans-unit id="63e7a43a912d31f1510e39f67b9021a4a00a0103" translate="yes" xml:space="preserve">
          <source>A client that wants to authenticate itself with the server can then do so by including an &lt;a href=&quot;headers/authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; request header with the credentials.</source>
          <target state="translated">A client that wants to authenticate itself with the server can then do so by including an &lt;a href=&quot;headers/authorization&quot;&gt; &lt;code&gt;Authorization&lt;/code&gt; &lt;/a&gt; request header with the credentials.</target>
        </trans-unit>
        <trans-unit id="a4673d2cf5f078d0e80766af3fc18ef334aaf9ad" translate="yes" xml:space="preserve">
          <source>A client to display (and accidentally edit) these documents, the first Web browser called &lt;em&gt;WorldWideWeb&lt;/em&gt;.</source>
          <target state="translated">これらのドキュメントを表示する（そして誤って編集する）クライアント、&lt;em&gt;WorldWideWeb&lt;/em&gt;と呼ばれる最初のWebブラウザ。</target>
        </trans-unit>
        <trans-unit id="bc8b63d811e299dc8d332f7a04036fbab8d18d90" translate="yes" xml:space="preserve">
          <source>A client's request signals to the server that it supports the upgrade mechanisms of &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">A client's request signals to the server that it supports the upgrade mechanisms of &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt; &lt;code&gt;upgrade-insecure-requests&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="6cf22c128590a11ccd015eab613d6d6178d3986e" translate="yes" xml:space="preserve">
          <source>A collection of tips to help operational teams with creating secure web applications.</source>
          <target state="translated">運用チームが安全なWebアプリケーションを作成するためのヒント集です。</target>
        </trans-unit>
        <trans-unit id="545d7ecd63391cf84687a091c329dea2e48ff465" translate="yes" xml:space="preserve">
          <source>A comma-delimited list of &lt;a href=&quot;../headers&quot;&gt;HTTP headers&lt;/a&gt; that are included in the request.</source>
          <target state="translated">要求に含まれる&lt;a href=&quot;../headers&quot;&gt;HTTPヘッダーの&lt;/a&gt;コンマ区切りリスト。</target>
        </trans-unit>
        <trans-unit id="4a7070eb1fb6568ed5750e765e691507dcbb9e26" translate="yes" xml:space="preserve">
          <source>A comma-delineated list of the WebSocket protocol versions supported by the server.</source>
          <target state="translated">サーバがサポートする WebSocket プロトコルのバージョンをカンマで区切ったリスト。</target>
        </trans-unit>
        <trans-unit id="dd0dcb0efcb7d9566b65a09f6272f43ad4054b47" translate="yes" xml:space="preserve">
          <source>A comma-separated list of extensions to request (or agree to support). These should be selected from the &lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#extension-name&quot;&gt;IANA WebSocket Extension Name Registry&lt;/a&gt;. Extensions which take parameters do so by using semicolon delineation.</source>
          <target state="translated">要求する（またはサポートに同意する）拡張子のコンマ区切りリスト。これらは、&lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#extension-name&quot;&gt;IANA WebSocket Extension Name Registry&lt;/a&gt;から選択する必要があります。パラメータを受け取る拡張機能は、セミコロンで区切ることによってそれを行います。</target>
        </trans-unit>
        <trans-unit id="6d9b0d38fc7576edfbc87bdb5049a93e906cc613" translate="yes" xml:space="preserve">
          <source>A comma-separated list of header names to take into account when deciding whether or not a cached response can be used.</source>
          <target state="translated">キャッシュされたレスポンスを使用できるかどうかを判断する際に考慮するヘッダ名のコンマ区切りのリスト。</target>
        </trans-unit>
        <trans-unit id="3351f8daef225cdddd1d659a4e4c2bff164ed208" translate="yes" xml:space="preserve">
          <source>A comma-separated list of parameters, each consisting of an identifier and a value separated by the equal sign (&lt;code&gt;'='&lt;/code&gt;). The following identifiers are possible:</source>
          <target state="translated">等号（ &lt;code&gt;'='&lt;/code&gt; ）で区切られたIDと値で構成されるパラメーターのコンマ区切りリスト。次の識別子が可能です。</target>
        </trans-unit>
        <trans-unit id="e64dd752a990983ce318fbd34f3017c824c11259" translate="yes" xml:space="preserve">
          <source>A comma-separated list of subprotocol names, in the order of preference. The subprotocols may be selected from the &lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#subprotocol-name&quot;&gt;IANA WebSocket Subprotocol Name Registry&lt;/a&gt; or may be a custom name jointly understood by the client and the server.</source>
          <target state="translated">優先順のサブプロトコル名のコンマ区切りのリスト。サブ&lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#subprotocol-name&quot;&gt;プロトコル&lt;/a&gt;は、IANA WebSocketサブプロトコル名レジストリから選択するか、クライアントとサーバーが共同で理解するカスタム名にすることができます。</target>
        </trans-unit>
        <trans-unit id="954560756b7f774ff0dbcf3f403c65bfec685270" translate="yes" xml:space="preserve">
          <source>A common case is when a site resides at &lt;code&gt;www.example.com&lt;/code&gt;, but accessing it from &lt;code&gt;example.com&lt;/code&gt; should also work. Redirections for &lt;code&gt;example.com&lt;/code&gt; to &lt;code&gt;www.example.com&lt;/code&gt; are thus set up. You might also redirect from common synonyms or frequent typos of your domains.</source>
          <target state="translated">A common case is when a site resides at &lt;code&gt;www.example.com&lt;/code&gt; , but accessing it from &lt;code&gt;example.com&lt;/code&gt; should also work. Redirections for &lt;code&gt;example.com&lt;/code&gt; to &lt;code&gt;www.example.com&lt;/code&gt; are thus set up. You might also redirect from common synonyms or frequent typos of your domains.</target>
        </trans-unit>
        <trans-unit id="765a1ca65f0ae709d5083d956638fa8d4f371723" translate="yes" xml:space="preserve">
          <source>A common operation in Web applications is to &lt;em&gt;update&lt;/em&gt; a remote document. This is very common in any file system or source control applications, but any application that allows to store remote resources needs such a mechanism. Common Web sites, like wikis and other CMS, have such a need.</source>
          <target state="translated">Webアプリケーションの一般的な操作は、リモートドキュメントの&lt;em&gt;更新&lt;/em&gt;です。これは、ファイルシステムやソース管理アプリケーションでは非常に一般的ですが、リモートリソースを格納できるアプリケーションには、このようなメカニズムが必要です。Wikiやその他のCMSなどの一般的なWebサイトには、このようなニーズがあります。</target>
        </trans-unit>
        <trans-unit id="56fb8e2fb85d7e564f3d29ea311fff6ca481b845" translate="yes" xml:space="preserve">
          <source>A complete URL, known as the &lt;em&gt;absolute form&lt;/em&gt;, is mostly used with &lt;code&gt;GET&lt;/code&gt; when connected to a proxy.</source>
          <target state="translated">&lt;em&gt;絶対形式&lt;/em&gt;と呼ばれる完全なURLは、プロキシに接続されているときに &lt;code&gt;GET&lt;/code&gt; で主に使用されます。</target>
        </trans-unit>
        <trans-unit id="fe1809df44023e8e001ce74fe56c8e7ccf0d8591" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Zivコーディング&lt;/a&gt;（LZ77）を使用した、32ビットCRC の圧縮形式。</target>
        </trans-unit>
        <trans-unit id="f3c6e3712615587b61d1ea467fde1e10f59e37c9" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt;（LZW）アルゴリズムを使用した圧縮形式。</target>
        </trans-unit>
        <trans-unit id="fc4d9ed7204457ec6cc9721d89f040474b7a652b" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Zlib&quot;&gt;zlib&lt;/a&gt; structure, with the &lt;a href=&quot;http://en.wikipedia.org/wiki/DEFLATE&quot;&gt;&lt;em&gt;deflate&lt;/em&gt;&lt;/a&gt; compression algorithm.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/DEFLATE&quot;&gt;&lt;em&gt;deflate&lt;/em&gt;&lt;/a&gt;圧縮アルゴリズムを使用した&lt;a href=&quot;http://en.wikipedia.org/wiki/Zlib&quot;&gt;zlib&lt;/a&gt;構造を使用した圧縮形式。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05595aa3b6a0abccc227abaf6c71dbce8636585f" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt;アルゴリズムを使用した圧縮形式。</target>
        </trans-unit>
        <trans-unit id="d5f5c5610894d726a658909063c81dee8cf8da26" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC.</source>
          <target state="translated">A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC.</target>
        </trans-unit>
        <trans-unit id="13ee4dcdbc16553632cbd81d6f559303fab97423" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm.</source>
          <target state="translated">A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm.</target>
        </trans-unit>
        <trans-unit id="0df54e7cc1e88fc5811ec6386faef052c65d5bf5" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Zlib&quot;&gt;zlib&lt;/a&gt; structure, with the &lt;a href=&quot;https://en.wikipedia.org/wiki/DEFLATE&quot;&gt;&lt;em&gt;deflate&lt;/em&gt;&lt;/a&gt; compression algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/DEFLATE&quot;&gt;&lt;em&gt;deflate&lt;/em&gt;&lt;/a&gt;圧縮アルゴリズムを使用した&lt;a href=&quot;https://en.wikipedia.org/wiki/Zlib&quot;&gt;zlib&lt;/a&gt;構造を使用した圧縮形式。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7bb2d2d512282eb3e9b2963af2987738e151227" translate="yes" xml:space="preserve">
          <source>A connection can be reused, saving the time to reopen it numerous times to display the resources embedded into the single original document retrieved.</source>
          <target state="translated">接続を再利用することができるので、何度も開き直す手間を省くことができ、取得した1つのオリジナルドキュメントに埋め込まれたリソースを表示することができます。</target>
        </trans-unit>
        <trans-unit id="509931ff360314f1dcb21ee1409195696c609d6d" translate="yes" xml:space="preserve">
          <source>A connection error is any error that prevents further processing of
   the frame layer or corrupts any connection state.

   An endpoint that encounters a connection error SHOULD first send a
   GOAWAY frame (&lt;a href=&quot;#section-6.8&quot;&gt;Section 6.8&lt;/a&gt;) with the stream identifier of the last
   stream that it successfully received from its peer.  The GOAWAY frame
   includes an error code that indicates why the connection is
   terminating.  After sending the GOAWAY frame for an error condition,
   the endpoint MUST close the TCP connection.

   It is possible that the GOAWAY will not be reliably received by the
   receiving endpoint (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.6&quot;&gt;[RFC7230], Section&amp;nbsp;6.6&lt;/a&gt; describes how an immediate
   connection close can result in data loss).  In the event of a
   connection error, GOAWAY only provides a best-effort attempt to
   communicate with the peer about why the connection is being
   terminated.

   An endpoint can end a connection at any time.  In particular, an
   endpoint MAY choose to treat a stream error as a connection error.
   Endpoints SHOULD send a GOAWAY frame when ending a connection,
   providing that circumstances permit it.</source>
          <target state="translated">接続エラーは、フレームレイヤーのそれ以上の処理を妨げる、または接続状態を破壊するエラーです。接続エラーが発生したエンドポイントは、最初に、ピアから正常に受信した最後のストリームのストリーム識別子を使用してGOAWAYフレーム（&lt;a href=&quot;#section-6.8&quot;&gt;セクション6.8&lt;/a&gt;）を送信する必要があります。 GOAWAYフレームには、接続が終了している理由を示すエラーコードが含まれています。エラー状態のGOAWAYフレームを送信した後、エンドポイントはTCP接続を閉じなければなりません（MUST）。 GOAWAYが受信エンドポイントによって確実に受信されない可能性があります（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.6&quot;&gt;[RFC7230]、セクション6.6&lt;/a&gt;すぐに接続を閉じるとデータが失われる可能性があることを説明します）。接続エラーが発生した場合、GOAWAYは、接続が終了する理由についてピアと通信するためのベストエフォート型の試みのみを提供します。エンドポイントはいつでも接続を終了できます。特に、エンドポイントは、ストリームエラーを接続エラーとして扱うことを選択してもよい[MAY]。エンドポイントは、状況が許す限り、接続を終了するときにGOAWAYフレームを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="50a3a1fcd6e5f64af49a78c0978fa2905e70fbdc" translate="yes" xml:space="preserve">
          <source>A connection is controlled at the transport layer, and therefore fundamentally out of scope for HTTP. Though HTTP doesn't require the underlying transport protocol to be connection-based; only requiring it to be &lt;em&gt;reliable&lt;/em&gt;, or not lose messages (so at minimum presenting an error). Among the two most common transport protocols on the Internet, TCP is reliable and UDP isn't. HTTP subsequently relies on the TCP standard, which is connection-based, even though a connection is not always required.</source>
          <target state="translated">接続はトランスポート層で制御されるため、基本的にHTTPの範囲外です。HTTPでは、基になるトランスポートプロトコルが接続ベースである必要はありません。&lt;em&gt;信頼できる&lt;/em&gt;ことのみを要求するか、メッセージを失わないようにする（少なくともエラーを表示する）。インターネットで最も一般的な2つのトランスポートプロトコルの中で、TCPは信頼でき、UDPは信頼できません。HTTPは、接続が常に必要であるとは限りませんが、その後、接続ベースのTCP標準に依存します。</target>
        </trans-unit>
        <trans-unit id="449f1efb42383b982f63e22f55d172b3f3d362a4" translate="yes" xml:space="preserve">
          <source>A connection is controlled at the transport layer, and therefore fundamentally out of scope for HTTP. Though HTTP doesn't require the underlying transport protocol to be connection-based; only requiring it to be &lt;em&gt;reliable&lt;/em&gt;, or not lose messages (so at minimum presenting an error). Among the two most common transport protocols on the Internet, TCP is reliable and UDP isn't. HTTP therefore relies on the TCP standard, which is connection-based.</source>
          <target state="translated">接続はトランスポート層で制御されるため、基本的にHTTPの範囲外です。HTTPでは、基盤となるトランスポートプロトコルが接続ベースである必要はありません。&lt;em&gt;信頼できること&lt;/em&gt;、またはメッセージを失わないことだけが必要です（したがって、少なくともエラーが表示されます）。インターネット上で最も一般的な2つのトランスポートプロトコルの中で、TCPは信頼でき、UDPは信頼できません。したがって、HTTPは、接続ベースのTCP標準に依存しています。</target>
        </trans-unit>
        <trans-unit id="da45e542a4ecf477e31105fbfb530cf280b696ac" translate="yes" xml:space="preserve">
          <source>A cookie begins with a name-value pair:</source>
          <target state="translated">クッキーは名前と値のペアで始まります。</target>
        </trans-unit>
        <trans-unit id="c987d7297ad42a4f63e657b6a26ef82f6c58c39b" translate="yes" xml:space="preserve">
          <source>A cookie belonging to a domain that does not include the origin server &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.3&quot;&gt;should be rejected by the user agent&lt;/a&gt;. The following cookie will be rejected if it was set by a server hosted on originalcompany.com.</source>
          <target state="translated">オリジンサーバー&lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.3&quot;&gt;を&lt;/a&gt;含まないドメインに属するCookie は、ユーザーエージェントによって拒否されます。originalcompany.comでホストされているサーバーによって設定された場合、次のCookieは拒否されます。</target>
        </trans-unit>
        <trans-unit id="0f35e435392b2381557a355cb4470d731e02478a" translate="yes" xml:space="preserve">
          <source>A cookie for a domain that does not include the server that set it &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.3&quot;&gt;should be rejected by the user agent&lt;/a&gt;.</source>
          <target state="translated">設定したサーバーを含まないドメインのCookieは&lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.3&quot;&gt;、ユーザーエージェントによって拒否される必要があります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d37ce32a93b2cb9f5253c4016337dd3a5af1c3e5" translate="yes" xml:space="preserve">
          <source>A cookie for a sub domain of the serving domain will be rejected.</source>
          <target state="translated">サービングドメインのサブドメイン用のクッキーは拒否されます。</target>
        </trans-unit>
        <trans-unit id="cf8f0198fd6d1e23aedf60fb515a3869ace7ce34" translate="yes" xml:space="preserve">
          <source>A cookie is associated with a domain. If this domain is the same as the domain of the page you are on, the cookie is called a &lt;em&gt;first-party cookie&lt;/em&gt;. If the domain is different, it is a &lt;em&gt;third-party cookie&lt;/em&gt;. While the server hosting a web page sets first-party cookies, the page may contain images or other components stored on servers in other domains (for example, ad banners), which may set third-party cookies. These are mainly used for advertising and tracking across the web. See for example the &lt;a href=&quot;https://policies.google.com/technologies/types&quot;&gt;types of cookies used by Google&lt;/a&gt;. A third party server can build up a profile of a user's browsing history and habits based on cookies sent to it by the same browser when accessing multiple sites. Firefox, by default, blocks third-party cookies that are known to contain trackers. Third-party cookies (or just tracking cookies) may also be blocked by other browser settings or extensions. Cookie blocking can cause some third-party components (such as social media widgets) to not function as intended.</source>
          <target state="translated">Cookieはドメインに関連付けられています。このドメインが現在のページのドメインと同じである場合、Cookieは&lt;em&gt;ファーストパーティCookie&lt;/em&gt;と呼ばれます。ドメインが異なる場合、それは&lt;em&gt;サードパーティのCookie&lt;/em&gt;です。 WebページをホストするサーバーがファーストパーティのCookieを設定する一方で、ページには、サードパーティのCookieを設定する可能性のある他のドメインのサーバーに保存されている画像やその他のコンポーネント（広告バナーなど）が含まれる場合があります。これらは主に、Web全体の広告と追跡に使用されます。たとえば、&lt;a href=&quot;https://policies.google.com/technologies/types&quot;&gt;Googleが使用するCookie&lt;/a&gt;の種類を参照してください。サードパーティのサーバーは、複数のサイトにアクセスするときに同じブラウザから送信されたCookieに基づいて、ユーザーの閲覧履歴と習慣のプロファイルを作成できます。 Firefoxは、デフォルトで、トラッカーを含むことがわかっているサードパーティのCookieをブロックします。サードパーティのCookie（または単にトラッキングCookie）も、他のブラウザ設定または拡張機能によってブロックされる場合があります。 Cookieをブロックすると、一部のサードパーティコンポーネント（ソーシャルメディアウィジェットなど）が意図したとおりに機能しなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e3d37c8e928ad783b182cebcac2bda3dbbdb9937" translate="yes" xml:space="preserve">
          <source>A cookie with the &lt;code&gt;HttpOnly&lt;/code&gt; attribute is inaccessible to the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; API; it is sent only to the server. For example, cookies that persist server-side sessions don't need to be available to JavaScript, and should have the &lt;code&gt;HttpOnly&lt;/code&gt; attribute. This precaution helps mitigate cross-site scripting (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Cross-site_scripting_(XSS)&quot;&gt;XSS&lt;/a&gt;) attacks.</source>
          <target state="translated">&lt;code&gt;HttpOnly&lt;/code&gt; 属性を持つCookieは、JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt; &lt;code&gt;Document.cookie&lt;/code&gt; APIに&lt;/a&gt;アクセスできません。サーバーにのみ送信されます。たとえば、サーバーサイドセッションを永続化するCookieは、JavaScriptで使用できる必要はなく、 &lt;code&gt;HttpOnly&lt;/code&gt; 属性を持っている必要があります。この予防措置は、クロスサイトスクリプティング（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Cross-site_scripting_(XSS)&quot;&gt;XSS&lt;/a&gt;）攻撃を軽減するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="28a5315337fe2caafeb7456394c12b7df8509b49" translate="yes" xml:space="preserve">
          <source>A cookie with the &lt;code&gt;Secure&lt;/code&gt; attribute is sent to the server only with an encrypted request over the HTTPS protocol, never with unsecured HTTP (except on localhost), and therefore can't easily be accessed by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MitM&quot;&gt;man-in-the-middle&lt;/a&gt; attacker. Insecure sites (with &lt;code&gt;http:&lt;/code&gt; in the URL) can't set cookies with the &lt;code&gt;Secure&lt;/code&gt; attribute. However, do not assume that &lt;code&gt;Secure&lt;/code&gt; prevents all access to sensitive information in cookies; for example, it can be read and modified by someone with access to the client's hard disk (or JavaScript if the &lt;code&gt;HttpOnly&lt;/code&gt; attribute is not set).</source>
          <target state="translated">&lt;code&gt;Secure&lt;/code&gt; 属性を持つCookieは、HTTPSプロトコルを介した暗号化された要求でのみサーバーに送信され、セキュリティで保護されていないHTTP（localhostを除く）では送信されないため、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MitM&quot;&gt;man-in-the-middle&lt;/a&gt;攻撃者が簡単にアクセスすることはできません。安全でないサイト（URLに &lt;code&gt;http:&lt;/code&gt; が含まれている）は、 &lt;code&gt;Secure&lt;/code&gt; 属性を使用してCookieを設定できません。ただし、 &lt;code&gt;Secure&lt;/code&gt; がCookie内の機密情報へのすべてのアクセスを防止するとは限りません。たとえば、クライアントのハードディスク（または、 &lt;code&gt;HttpOnly&lt;/code&gt; 属性が設定されていない場合はJavaScript）にアクセスできるユーザーが読み取りおよび変更できます。</target>
        </trans-unit>
        <trans-unit id="2001d70e25e20b433ea2e7fdbd02e6058831b1c9" translate="yes" xml:space="preserve">
          <source>A correct cache MUST respond to a request with the most up-to-date
   response held by the cache that is appropriate to the request (see
   sections &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;, &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt;, and &lt;a href=&quot;#section-13.12&quot;&gt;13.12&lt;/a&gt;) which meets one of the following
   conditions:

      1. It has been checked for equivalence with what the origin server
         would have returned by revalidating the response with the
         origin server (&lt;a href=&quot;#section-13.3&quot;&gt;section 13.3&lt;/a&gt;); 

      2. It is &quot;fresh enough&quot; (see &lt;a href=&quot;#section-13.2&quot;&gt;section 13.2&lt;/a&gt;). In the default case,
         this means it meets the least restrictive freshness requirement
         of the client, origin server, and cache (see &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;); if
         the origin server so specifies, it is the freshness requirement
         of the origin server alone.

         If a stored response is not &quot;fresh enough&quot; by the most
         restrictive freshness requirement of both the client and the
         origin server, in carefully considered circumstances the cache
         MAY still return the response with the appropriate Warning
         header (see &lt;a href=&quot;#section-13.1.5&quot;&gt;section 13.1.5&lt;/a&gt; and 14.46), unless such a response
         is prohibited (e.g., by a &quot;no-store&quot; cache-directive, or by a
         &quot;no-cache&quot; cache-request-directive; see &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;).

      3. It is an appropriate 304 (Not Modified), 305 (Proxy Redirect),
         or error (4xx or 5xx) response message.

   If the cache can not communicate with the origin server, then a
   correct cache SHOULD respond as above if the response can be
   correctly served from the cache; if not it MUST return an error or
   warning indicating that there was a communication failure.

   If a cache receives a response (either an entire response, or a 304
   (Not Modified) response) that it would normally forward to the
   requesting client, and the received response is no longer fresh, the
   cache SHOULD forward it to the requesting client without adding a new
   Warning (but without removing any existing Warning headers). A cache
   SHOULD NOT attempt to revalidate a response simply because that
   response became stale in transit; this might lead to an infinite
   loop. A user agent that receives a stale response without a Warning
   MAY display a warning indication to the user.</source>
          <target state="translated">要求（セクション参照に適切なキャッシュに保持された最新の応答で要求に正しいキャッシュMUSTの応答&lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;、&lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6を&lt;/a&gt;、および&lt;a href=&quot;#section-13.12&quot;&gt;13.12&lt;/a&gt; 1：次のいずれかの条件を満たしています） 。起点サーバーとの応答を再検証することにより、起点サーバーが返すものと同等であるかどうかがチェックされています（&lt;a href=&quot;#section-13.3&quot;&gt;セクション13.3&lt;/a&gt;）。 2.「十分に新鮮」です（&lt;a href=&quot;#section-13.2&quot;&gt;セクション13.2を&lt;/a&gt;参照）。デフォルトの場合、これは、クライアント、オリジンサーバー、およびキャッシュの最も制限の少ない鮮度要件を満たしていることを意味します（&lt;a href=&quot;#section-14.9&quot;&gt;セクション14.9を&lt;/a&gt;参照））;オリジンサーバーがそのように指定する場合、それはオリジンサーバーのみの鮮度要件です。格納された応答がクライアントとオリジンサーバーの両方の最も制限的な鮮度要件によって「十分に新鮮」でない場合でも、慎重に検討された状況では、キャッシュは適切な警告ヘッダー（&lt;a href=&quot;#section-13.1.5&quot;&gt;セクション13.1.5&lt;/a&gt;と14.46を参照）で応答を返します（MAY ）。 、そのような応答が禁止されていない限り（たとえば、「no-store」キャッシュディレクティブまたは「no-cache」キャッシュリクエストディレクティブによる; &lt;a href=&quot;#section-14.9&quot;&gt;セクション14.9を&lt;/a&gt;参照）。 3.適切な304（変更されていない）、305（プロキシリダイレクト）、またはエラー（4xxまたは5xx）の応答メッセージです。キャッシュがオリジンサーバーと通信できない場合、応答がキャッシュから正しく提供される場合、正しいキャッシュは上記のように応答する必要があります（SHOULD）。そうでない場合は、通信障害があったことを示すエラーまたは警告を返さなければなりません。キャッシュが通常は要求側クライアントに転送するであろう応答（応答全体または304（Not Modified）応答のいずれか）を受信し、受信した応答がもはや新鮮で​​ない場合、キャッシュはそれを要求側クライアントに転送する必要があります（SHOULD）。新しい警告を追加します（ただし、既存の警告ヘッダーは削除しません）。キャッシュは、応答が転送中に古くなったという理由だけで応答の再検証を試みるべきではありません（SHOULD NOT）。これにより、無限ループが発生する可能性があります。警告なしで陳腐化した応答を受信するユーザーエージェントは、警告をユーザーに表示する場合があります。</target>
        </trans-unit>
        <trans-unit id="89577e07030bd40f6712d10194b453cf2d440e98" translate="yes" xml:space="preserve">
          <source>A cross-site request has previously been performed that already did a preflight, and doing the preflight again is not permitted. Make sure your code only preflights once per connection.</source>
          <target state="translated">クロスサイトリクエストは既にプリフライトを行っており、再度プリフライトを行うことは許可されていません。あなたのコードが接続ごとに一度だけプリフライトすることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a811a3a9985b454708fdc8eb33814dd46cc41295" translate="yes" xml:space="preserve">
          <source>A custom header</source>
          <target state="translated">カスタムヘッダー</target>
        </trans-unit>
        <trans-unit id="5a2fa58bd2284006bceccd7cb755ebd723f2c6f7" translate="yes" xml:space="preserve">
          <source>A custom header (such as &lt;code&gt;X-PINGARUNER&lt;/code&gt;) is sent with the request.</source>
          <target state="translated">カスタムヘッダー（ &lt;code&gt;X-PINGARUNER&lt;/code&gt; など）がリクエストと共に送信されます。</target>
        </trans-unit>
        <trans-unit id="503ad6dab740192f7df55700acaa852749538c30" translate="yes" xml:space="preserve">
          <source>A date after which to retry. See the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; header for more details on the HTTP date format.</source>
          <target state="translated">再試行するまでの日付。HTTP日付形式の詳細については、&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;ヘッダーを参照してください。</target>
        </trans-unit>
        <trans-unit id="b40039ddee641d60641b6ebc43748e9635b227eb" translate="yes" xml:space="preserve">
          <source>A deployment of HTTP/2 over TLS 1.2 SHOULD NOT use any of the cipher
   suites that are listed in the cipher suite black list (Appendix A).

   Endpoints MAY choose to generate a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;)
   of type INADEQUATE_SECURITY if one of the cipher suites from the
   black list is negotiated.  A deployment that chooses to use a black-
   listed cipher suite risks triggering a connection error unless the
   set of potential peers is known to accept that cipher suite.

   Implementations MUST NOT generate this error in reaction to the
   negotiation of a cipher suite that is not on the black list.
   Consequently, when clients offer a cipher suite that is not on the
   black list, they have to be prepared to use that cipher suite with
   HTTP/2.

   The black list includes the cipher suite that TLS 1.2 makes
   mandatory, which means that TLS 1.2 deployments could have non-
   intersecting sets of permitted cipher suites.  To avoid this problem
   causing TLS handshake failures, deployments of HTTP/2 that use TLS
   1.2 MUST support TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 [&lt;a href=&quot;#ref-TLS-ECDHE&quot;&gt;TLS-ECDHE&lt;/a&gt;]
   with the P-256 elliptic curve [&lt;a href=&quot;#ref-FIPS186&quot;&gt;FIPS186&lt;/a&gt;]. 

   Note that clients might advertise support of cipher suites that are
   on the black list in order to allow for connection to servers that do
   not support HTTP/2.  This allows servers to select HTTP/1.1 with a
   cipher suite that is on the HTTP/2 black list.  However, this can
   result in HTTP/2 being negotiated with a black-listed cipher suite if
   the application protocol and cipher suite are independently selected.</source>
          <target state="translated">HTTP / 2 over TLS 1.2の展開では、暗号スイートのブラックリスト（付録A）にリストされている暗号スイートを使用しないでください。エンドポイントは、接続エラーの生成を選択できます（&lt;a href=&quot;#section-5.4.1&quot;&gt;セクション5.4.1&lt;/a&gt;）ブラックリストの暗号スイートの1つがネゴシエートされた場合、タイプINADEQUATE_SECURITY。ブラックリストに記載された暗号スイートの使用を選択した展開では、潜在的なピアのセットがその暗号スイートを受け入れることがわかっていない限り、接続エラーが発生するリスクがあります。実装は、ブラックリストにない暗号スイートのネゴシエーションに反応してこのエラーを生成してはなりません（MUSTNOT）。したがって、クライアントがブラックリストにない暗号スイートを提供する場合、HTTP / 2でその暗号スイートを使用する準備をする必要があります。ブラックリストには、TLS 1.2で必須となる暗号スイートが含まれています。つまり、TLS 1.2の展開では、許可された暗号スイートの交差しないセットが含まれる可能性があります。 TLSハンドシェイクの失敗を引き起こすこの問題を回避するには、TLS1.2を使用するHTTP / 2のデプロイメントは、TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256をサポートする必要があります[&lt;a href=&quot;#ref-TLS-ECDHE&quot;&gt;TLS-ECDHE&lt;/a&gt; ]とP-256楕円曲線[ &lt;a href=&quot;#ref-FIPS186&quot;&gt;FIPS186&lt;/a&gt; ]。クライアントは、HTTP / 2をサポートしないサーバーへの接続を可能にするために、ブラックリストにある暗号スイートのサポートをアドバタイズする場合があることに注意してください。これにより、サーバーはHTTP / 2ブラックリストにある暗号スイートを使用してHTTP / 1.1を選択できます。ただし、アプリケーションプロトコルと暗号スイートが個別に選択されている場合、HTTP / 2がブラックリストに登録された暗号スイートとネゴシエートされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d2cf3c99c4d72849ee4efd8ac6882b05e9d3a1a1" translate="yes" xml:space="preserve">
          <source>A description of the protected area, the realm. If no realm is specified, clients often display a formatted host name instead.</source>
          <target state="translated">保護された領域の説明、realm。realm が指定されていない場合、クライアントはしばしば代わりにフォーマットされたホスト名を表示します。</target>
        </trans-unit>
        <trans-unit id="5e9d729c23cc7169e172ea196579970b84e7e284" translate="yes" xml:space="preserve">
          <source>A description of the protected area. If no realm is specified, clients often display a formatted hostname instead.</source>
          <target state="translated">保護された領域の説明。realm が指定されていない場合、クライアントは代わりにフォーマットされたホスト名を表示することがよくあります。</target>
        </trans-unit>
        <trans-unit id="b5a8720daf81911489f27aaafe4bd0ccd798eb06" translate="yes" xml:space="preserve">
          <source>A discussion of Cross-Origin Resource Sharing from a server perspective (including PHP code snippets) can be found in the &lt;a href=&quot;server-side_access_control&quot;&gt;Server-Side Access Control (CORS)&lt;/a&gt; article.</source>
          <target state="translated">サーバーの観点からのクロスオリジンリソースシェアリング（PHPコードスニペットを含む&lt;a href=&quot;server-side_access_control&quot;&gt;）&lt;/a&gt;については、サーバーサイドアクセスコントロール（CORS）の記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="4908a8b2c4833ed56d01c1531e18571e4bbedba2" translate="yes" xml:space="preserve">
          <source>A document can only load resources from the same origin, or resources explicitly marked as loadable from another origin.</source>
          <target state="translated">ドキュメントは、同じオリジンからのリソース、または別のオリジンからロード可能と明示的にマークされたリソースのみをロードすることができます。</target>
        </trans-unit>
        <trans-unit id="3a3fc6fb939e0085074cefc8e6d65d3381d91750" translate="yes" xml:space="preserve">
          <source>A few examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="b27d2c2e1b4290f0ba6c37cc3712ff739648e303" translate="yes" xml:space="preserve">
          <source>A form using the &lt;code&gt;multipart/form-data&lt;/code&gt; content type:</source>
          <target state="translated">&lt;code&gt;multipart/form-data&lt;/code&gt; コンテンツタイプを使用するフォーム：</target>
        </trans-unit>
        <trans-unit id="614f75732c39c44f099d446998fd31224f828fd2" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC is accepted as a transfer coding name.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Zivコーディング&lt;/a&gt;（LZ77）を使用するフォーマット、32ビットCRCが転送コーディング名として受け入れられます。</target>
        </trans-unit>
        <trans-unit id="22748d9ab36c5f67b399f36a38ad2543edae63ac" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC. This is originally the format of the UNIX &lt;em&gt;gzip&lt;/em&gt; program. The HTTP/1.1 standard also recommends that the servers supporting this content-encoding should recognize &lt;code&gt;x-gzip&lt;/code&gt; as an alias, for compatibility purposes.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Zivコーディング&lt;/a&gt;（LZ77）を使用したフォーマット、32ビットCRC。これは、もともとUNIX &lt;em&gt;gzip&lt;/em&gt;プログラムの形式です。また、HTTP / 1.1標準では、互換性を確保するために、このコンテンツエンコーディングをサポートするサーバーが &lt;code&gt;x-gzip&lt;/code&gt; をエイリアスとして認識することを推奨しています。</target>
        </trans-unit>
        <trans-unit id="ef17edcb9fdca11383c92d9963d7bf24f22d1a7d" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC. This is the original format of the UNIX &lt;em&gt;gzip&lt;/em&gt; program. The HTTP/1.1 standard also recommends that the servers supporting this content-encoding should recognize &lt;code&gt;x-gzip&lt;/code&gt; as an alias, for compatibility purposes.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Zivコーディング&lt;/a&gt;（LZ77）を使用したフォーマット、32ビットCRC。これは、UNIX &lt;em&gt;gzip&lt;/em&gt;プログラムの元の形式です。また、HTTP / 1.1標準では、互換性を確保するために、このコンテンツエンコーディングをサポートするサーバーが &lt;code&gt;x-gzip&lt;/code&gt; をエイリアスとして認識することを推奨しています。</target>
        </trans-unit>
        <trans-unit id="44f47b4033a24779dd1d3b91694a7e0c751de3c5" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm is accepted as a transfer coding name.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt;（LZW）アルゴリズムを使用したフォーマットは、転送コーディング名として受け入れられます。</target>
        </trans-unit>
        <trans-unit id="ff6501d8ed3cac8df2af44cead1b7ab4b7e10774" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm. The value name was taken from the UNIX &lt;em&gt;compress&lt;/em&gt; program, which implemented this algorithm.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt;（LZW）アルゴリズムを使用したフォーマット。値の名前は、このアルゴリズムを実装したUNIX &lt;em&gt;圧縮&lt;/em&gt;プログラムから取得されました。</target>
        </trans-unit>
        <trans-unit id="474b27ae1efc1cf4c0259d41c022937667b49d1f" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm. The value name was taken from the UNIX &lt;em&gt;compress&lt;/em&gt; program, which implemented this algorithm. Like the compress program, which has disappeared from most UNIX distributions, this content-encoding is not used by many browsers today, partly because of a patent issue (it expired in 2003).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt;（LZW）アルゴリズムを使用したフォーマット。値の名前は、このアルゴリズムを実装したUNIX &lt;em&gt;圧縮&lt;/em&gt;プログラムから取得されました。ほとんどのUNIXディストリビューションから姿を消した圧縮プログラムと同様に、このコンテンツエンコーディングは、特許の問題（2003年に有効期限が切れた）のために、現在多くのブラウザで使用されていません。</target>
        </trans-unit>
        <trans-unit id="61675e08319d9261f19703357a0adf44d98c5d90" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt;アルゴリズムを使用したフォーマット。</target>
        </trans-unit>
        <trans-unit id="d3ddbd90fc923592bb2b8a99325a9ed24ae5ba5a" translate="yes" xml:space="preserve">
          <source>A forward proxy, or gateway, or just &quot;proxy&quot; provides proxy services to a client or a group of clients. There are likely hundreds of thousands of open forward proxies on the Internet. They store and forward Internet services (like the DNS, or web pages) to reduce and control the bandwidth used by the group.</source>
          <target state="translated">フォワードプロキシ、またはゲートウェイ、または単に「プロキシ」は、クライアントまたはクライアントのグループにプロキシサービスを提供します。インターネット上には何十万ものオープンなフォワードプロキシがあると思われます。フォワードプロキシは、インターネットサービス(DNSやウェブページのようなもの)を保存して転送し、グループで使用する帯域幅を減らして制御します。</target>
        </trans-unit>
        <trans-unit id="910536150ef5b9e104120b70b03cb221a8cac548" translate="yes" xml:space="preserve">
          <source>A fresh response is one whose age has not yet exceeded its freshness
   lifetime.  Conversely, a stale response is one where it has.

   A response's freshness lifetime is the length of time between its
   generation by the origin server and its expiration time.  An explicit
   expiration time is the time at which the origin server intends that a
   stored response can no longer be used by a cache without further
   validation, whereas a heuristic expiration time is assigned by a
   cache when no explicit expiration time is available.

   A response's age is the time that has passed since it was generated
   by, or successfully validated with, the origin server.

   When a response is &quot;fresh&quot; in the cache, it can be used to satisfy
   subsequent requests without contacting the origin server, thereby
   improving efficiency.

   The primary mechanism for determining freshness is for an origin
   server to provide an explicit expiration time in the future, using
   either the Expires header field (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) or the max-age response
   directive (&lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;).  Generally, origin servers will assign
   future explicit expiration times to responses in the belief that the
   representation is not likely to change in a semantically significant
   way before the expiration time is reached.

   If an origin server wishes to force a cache to validate every
   request, it can assign an explicit expiration time in the past to
   indicate that the response is already stale.  Compliant caches will
   normally validate a stale cached response before reusing it for
   subsequent requests (see &lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;).

   Since origin servers do not always provide explicit expiration times,
   caches are also allowed to use a heuristic to determine an expiration
   time under certain circumstances (see &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;).

   The calculation to determine if a response is fresh is:

      response_is_fresh = (freshness_lifetime &amp;gt; current_age)

   freshness_lifetime is defined in &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt;; current_age is
   defined in &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt;.

   Clients can send the max-age or min-fresh cache directives in a
   request to constrain or relax freshness calculations for the
   corresponding response (&lt;a href=&quot;#section-5.2.1&quot;&gt;Section 5.2.1&lt;/a&gt;). 

   When calculating freshness, to avoid common problems in date parsing:

   o  Although all date formats are specified to be case-sensitive, a
      cache recipient SHOULD match day, week, and time-zone names
      case-insensitively.

   o  If a cache recipient's internal implementation of time has less
      resolution than the value of an HTTP-date, the recipient MUST
      internally represent a parsed Expires date as the nearest time
      equal to or earlier than the received value.

   o  A cache recipient MUST NOT allow local time zones to influence the
      calculation or comparison of an age or expiration time.

   o  A cache recipient SHOULD consider a date with a zone abbreviation
      other than GMT or UTC to be invalid for calculating expiration.

   Note that freshness applies only to cache operation; it cannot be
   used to force a user agent to refresh its display or reload a
   resource.  See &lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt; for an explanation of the difference between
   caches and history mechanisms.</source>
          <target state="translated">フレッシュレスポンスとは、年齢がまだフレッシュネスライフタイムを超えていないレスポンスです。逆に、古くなった応答は、それが持っている応答です。応答のフレッシュネスライフタイムは、元のサーバーによる応答の生成から有効期限までの時間の長さです。明示的な有効期限とは、保存された応答がそれ以上の検証なしにキャッシュで使用できなくなることをオリジンサーバーが意図する時間です。一方、ヒューリスティックな有効期限は、明示的な有効期限がない場合にキャッシュによって割り当てられます。応答の経過時間は、元のサーバーによって生成された、または正常に検証されてから経過した時間です。応答がキャッシュ内で「新鮮」な場合、それを使用して、オリジンサーバーに接続せずに後続の要求を満たすことができるため、効率が向上します。鮮度を判断するための主なメカニズムは、配信元サーバーがExpiresヘッダーフィールド（&lt;a href=&quot;#section-5.3&quot;&gt;セクション5.3&lt;/a&gt;）またはmax-age応答ディレクティブ（&lt;a href=&quot;#section-5.2.2.8&quot;&gt;セクション5.2.2.8&lt;/a&gt;）。通常、オリジンサーバーは、有効期限に達する前に表現が意味的に重要な方法で変更される可能性は低いと考えて、将来の明示的な有効期限を応答に割り当てます。オリジンサーバーがすべてのリクエストをキャッシュで検証するように強制したい場合は、過去の有効期限を明示的に割り当てて、応答がすでに古くなっていることを示すことができます。準拠キャッシュは通常、後続のリクエストに再利用する前に、古いキャッシュされた応答を検証します（&lt;a href=&quot;#section-4.2.4&quot;&gt;セクション4.2.4を&lt;/a&gt;参照）。）。オリジンサーバーは常に明示的な有効期限を提供するわけではないため、キャッシュは特定の状況で有効期限を決定するためにヒューリスティックを使用することもできます（&lt;a href=&quot;#section-4.2.2&quot;&gt;セクション4.2.2を&lt;/a&gt;参照）。応答が新しいかどうかを判断する計算は次のとおりです。response_is_fresh=（freshness_lifetime&amp;gt; current_age）freshness_lifetimeは&lt;a href=&quot;#section-4.2.1&quot;&gt;セクション4.2.1で&lt;/a&gt;定義されています。 current_ageは&lt;a href=&quot;#section-4.2.3&quot;&gt;セクション4.2.3で&lt;/a&gt;定義されています。クライアントは、リクエストでmax-ageまたはmin-freshキャッシュディレクティブを送信して、対応する応答の鮮度計算を制約または緩和できます（&lt;a href=&quot;#section-5.2.1&quot;&gt;セクション5.2.1&lt;/a&gt;）。日付の解析における一般的な問題を回避するために、鮮度を計算するとき：oすべての日付形式は大文字と小文字を区別するように指定されていますが、キャッシュの受信者は、大文字と小文字を区別せずに日、週、およびタイムゾーン名を一致させる必要があります。 oキャッシュ受信者の時間の内部実装がHTTP-dateの値よりも解像度が低い場合、受信者は解析されたExpires日付を、受信した値と同じかそれよりも前の最も近い時間として内部的に表現する必要があります。 oキャッシュ受信者は、ローカルタイムゾーンが経過時間または有効期限の計算または比較に影響を与えることを許可してはなりません。 oキャッシュの受信者は、GMTまたはUTC以外のゾーン省略形の日付は、有効期限の計算には無効であると考えるべきです（SHOULD）。鮮度はキャッシュ操作にのみ適用されることに注意してください。ユーザーエージェントに表示を強制的に更新したり、リソースを再読み込みしたりするために使用することはできません。見る&lt;a href=&quot;#section-6&quot;&gt;&lt;/a&gt;キャッシュと履歴メカニズムの違いについては、セクション6を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec3a4e1f8c0ddeb70da974b4f25090860679d57c" translate="yes" xml:space="preserve">
          <source>A full language tag. In addition to the language itself, it may contain additional information after a &lt;code&gt;'-'&lt;/code&gt;. The most common extra information is the country variant (like &lt;code&gt;'en-US'&lt;/code&gt;) or the type of alphabet to use (like &lt;code&gt;'sr-Lat'&lt;/code&gt;). Other variants like the type of orthography (&lt;code&gt;'de-DE-1996'&lt;/code&gt;) are usually not used in the context of this header.</source>
          <target state="translated">完全な言語タグ。言語自体に加えて、 &lt;code&gt;'-'&lt;/code&gt; 後に追加情報が含まれる場合があります。最も一般的な追加情報は、国別のバリエーション（ &lt;code&gt;'en-US'&lt;/code&gt; など）または使用するアルファベットのタイプ（ &lt;code&gt;'sr-Lat'&lt;/code&gt; など）です。正書法のタイプ（ &lt;code&gt;'de-DE-1996'&lt;/code&gt; ）などの他のバリアントは、通常、このヘッダーのコンテキストでは使用されません。</target>
        </trans-unit>
        <trans-unit id="9f898e90d14bf75f1a87a64bdb376f6dbabf567d" translate="yes" xml:space="preserve">
          <source>A general warning field containing information about possible problems.</source>
          <target state="translated">起こりうる問題についての情報を含む一般的な警告フィールド。</target>
        </trans-unit>
        <trans-unit id="0a3e8915e8c75e5f7d73ca07d7035d1049a05c98" translate="yes" xml:space="preserve">
          <source>A language expressed as a 2 or 3-character string.</source>
          <target state="translated">2文字または3文字の文字列で表現される言語。</target>
        </trans-unit>
        <trans-unit id="746b4aed00138f5979b1e170746db262eb836c96" translate="yes" xml:space="preserve">
          <source>A language tag (which is sometimes referred to as a &quot;locale identifier&quot;). This consists of a 2-3 letter base language tag representing the language, optionally followed by additional subtags separated by &lt;code&gt;'-'&lt;/code&gt;. The most common extra information is the country or region variant (like &lt;code&gt;'en-US'&lt;/code&gt; or &lt;code&gt;'fr-CA'&lt;/code&gt;) or the type of alphabet to use (like &lt;code&gt;'sr-Latn'&lt;/code&gt;). Other variants like the type of orthography (&lt;code&gt;'de-DE-1996'&lt;/code&gt;) are usually not used in the context of this header.</source>
          <target state="translated">言語タグ（「ロケール識別子」と呼ばれることもあります）。これは、言語を表す2〜3文字の基本言語タグと、オプションで &lt;code&gt;'-'&lt;/code&gt; 区切られた追加のサブタグで構成されます。最も一般的な追加情報は、国または地域のバリアント（ &lt;code&gt;'en-US'&lt;/code&gt; や &lt;code&gt;'fr-CA'&lt;/code&gt; ）または使用するアルファベットのタイプ（ &lt;code&gt;'sr-Latn'&lt;/code&gt; ）です。正書法のタイプ（ &lt;code&gt;'de-DE-1996'&lt;/code&gt; ）のような他の変形は、通常、このヘッダーのコンテキストでは使用されません。</target>
        </trans-unit>
        <trans-unit id="492fb7060c509851f8ee1f0684fc115667c9e3f7" translate="yes" xml:space="preserve">
          <source>A language tag identifies a natural language spoken, written, or
   otherwise conveyed by human beings for communication of information
   to other human beings. Computer languages are explicitly excluded.
   HTTP uses language tags within the Accept-Language and Content-
   Language fields.

   The syntax and registry of HTTP language tags is the same as that
   defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc1766&quot;&gt;RFC 1766&lt;/a&gt; [&lt;a href=&quot;#ref-1&quot;&gt;1&lt;/a&gt;]. In summary, a language tag is composed of 1
   or more parts: A primary language tag and a possibly empty series of
   subtags:

        language-tag  = primary-tag *( &quot;-&quot; subtag )
        primary-tag   = 1*8ALPHA
        subtag        = 1*8ALPHA

   White space is not allowed within the tag and all tags are case-
   insensitive. The name space of language tags is administered by the
   IANA. Example tags include:

       en, en-US, en-cockney, i-cherokee, x-pig-latin 

   where any two-letter primary-tag is an ISO-639 language abbreviation
   and any two-letter initial subtag is an ISO-3166 country code. (The
   last three tags above are not registered tags; all but the last are
   examples of tags which could be registered in future.)</source>
          <target state="translated">言語タグは、他の人間と情報をやり取りするために人間が話したり、書いたり、その他の方法で伝えたりする自然言語を識別します。コンピュータ言語は明示的に除外されています。 HTTPはAccept-LanguageおよびContent- Languageフィールド内の言語タグを使用します。 HTTP言語タグの構文とレジストリは、&lt;a href=&quot;https://tools.ietf.org/html/rfc1766&quot;&gt;RFC 1766&lt;/a&gt; [ &lt;a href=&quot;#ref-1&quot;&gt;1&lt;/a&gt;で定義されているものと同じです。]。要約すると、言語タグは1つ以上の部分で構成されています。主言語タグと、場合によっては空の一連のサブタグ：言語タグ=主タグ*（ &quot;-&quot;サブタグ）主タグ= 1 * 8ALPHAサブタグ= 1 * 8ALPHAタグ内の空白は許可されず、すべてのタグで大文字と小文字が区別されません。言語タグの名前空間は、IANAによって管理されます。タグの例には、en、en-US、en-cockney、i-cherokee、x-pig-latinが含まれます。2文字のプライマリタグはISO-639言語の省略形で、2文字の最初のサブタグはISO-3166です。国コード。 （上記の最後の3つのタグは登録済みタグではありません。最後のタグを除くすべては、将来登録される可能性のあるタグの例です。）</target>
        </trans-unit>
        <trans-unit id="94092a3bb36b69c98b3f284dcd812139e3cd4535" translate="yes" xml:space="preserve">
          <source>A language tag, as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt;], identifies a natural
   language spoken, written, or otherwise conveyed by human beings for
   communication of information to other human beings.  Computer
   languages are explicitly excluded.

   HTTP uses language tags within the Accept-Language and
   Content-Language header fields.  Accept-Language uses the broader
   language-range production defined in &lt;a href=&quot;#section-5.3.5&quot;&gt;Section 5.3.5&lt;/a&gt;, whereas
   Content-Language uses the language-tag production defined below.

     language-tag = &amp;lt;Language-Tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;

   A language tag is a sequence of one or more case-insensitive subtags,
   each separated by a hyphen character (&quot;-&quot;, %x2D).  In most cases, a
   language tag consists of a primary language subtag that identifies a
   broad family of related languages (e.g., &quot;en&quot; = English), which is
   optionally followed by a series of subtags that refine or narrow that
   language's range (e.g., &quot;en-CA&quot; = the variety of English as
   communicated in Canada).  Whitespace is not allowed within a language
   tag.  Example tags include:

     fr, en-US, es-419, az-Arab, x-pig-latin, man-Nkoo-GN

   See [&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt;] for further information.</source>
          <target state="translated">[ &lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt; ]で定義されている言語タグは、他の人間と情報をやり取りするために人間が話したり、書いたり、その他の方法で伝えたりする自然言語を識別します。コンピュータ言語は明示的に除外されています。 HTTPはAccept-LanguageおよびContent-Languageヘッダーフィールド内の言語タグを使用します。 Accept-Languageは、&lt;a href=&quot;#section-5.3.5&quot;&gt;セクション5.3.5&lt;/a&gt;で定義されているより広い言語範囲の生成を使用しますが、Content-Languageは、以下で定義されている言語タグの生成を使用します。 language-tag = &amp;lt;Language-Tag、&lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646]、セクション2.1を&lt;/a&gt;参照&amp;gt;言語タグは、1つ以上の大文字と小文字を区別しないサブタグのシーケンスであり、それぞれがハイフン文字（ &quot;-&quot;、％x2D）で区切られています。ほとんどの場合、言語タグは、関連する言語の幅広いファミリを識別する一次言語サブタグ（たとえば、 &quot;en&quot; =英語）で構成され、その後にオプションで、その言語の範囲を調整または狭める一連のサブタグが続きます（たとえば、 &quot;en-CA&quot; =カナダで伝えられている英語の多様性）。言語タグ内では空白を使用できません。タグの例には、fr、en-US、es-419、az-Arab、x-pig-latin、man-Nkoo-GNがあります。詳細については、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt; ]を参照してください。</target>
        </trans-unit>
        <trans-unit id="e661c244f36d3503b3fccce131704ef80b3983c9" translate="yes" xml:space="preserve">
          <source>A large header block (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;) can cause an implementation to
   commit a large amount of state.  Header fields that are critical for
   routing can appear toward the end of a header block, which prevents
   streaming of header fields to their ultimate destination.  This
   ordering and other reasons, such as ensuring cache correctness, mean 

   that an endpoint might need to buffer the entire header block.  Since
   there is no hard limit to the size of a header block, some endpoints
   could be forced to commit a large amount of available memory for
   header fields.

   An endpoint can use the SETTINGS_MAX_HEADER_LIST_SIZE to advise peers
   of limits that might apply on the size of header blocks.  This
   setting is only advisory, so endpoints MAY choose to send header
   blocks that exceed this limit and risk having the request or response
   being treated as malformed.  This setting is specific to a
   connection, so any request or response could encounter a hop with a
   lower, unknown limit.  An intermediary can attempt to avoid this
   problem by passing on values presented by different peers, but they
   are not obligated to do so.

   A server that receives a larger header block than it is willing to
   handle can send an HTTP 431 (Request Header Fields Too Large) status
   code [&lt;a href=&quot;https://tools.ietf.org/html/rfc6585&quot;&gt;RFC6585&lt;/a&gt;].  A client can discard responses that it cannot
   process.  The header block MUST be processed to ensure a consistent
   connection state, unless the connection is closed.</source>
          <target state="translated">大きなヘッダーブロック（&lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3&lt;/a&gt;）実装が大量の状態をコミットする原因となる可能性があります。ルーティングに重要なヘッダーフィールドは、ヘッダーブロックの終わりに向かって表示される可能性があります。これにより、ヘッダーフィールドが最終的な宛先にストリーミングされなくなります。この順序と、キャッシュの正確性の確保などの他の理由は、エンドポイントがヘッダーブロック全体をバッファリングする必要がある可能性があることを意味します。ヘッダーブロックのサイズに厳しい制限がないため、一部のエンドポイントは、ヘッダーフィールドに使用可能な大量のメモリを強制的にコミットする可能性があります。エンドポイントは、SETTINGS_MAX_HEADER_LIST_SIZEを使用して、ヘッダーブロックのサイズに適用される可能性のある制限をピアに通知できます。この設定は単なる助言であるため、エンドポイントはこの制限を超えるヘッダーブロックを送信することを選択でき、リクエストまたはレスポンスが不正な形式として扱われるリスクがあります。この設定は接続に固有です。そのため、要求または応答は、下限が不明なホップに遭遇する可能性があります。仲介者は、異なるピアによって提示された値を渡すことによってこの問題を回避しようとすることができますが、そうする義務はありません。処理しようとしているよりも大きなヘッダーブロックを受信したサーバーは、HTTP 431（Request Header Fields Too Large）ステータスコードを送信できます[&lt;a href=&quot;https://tools.ietf.org/html/rfc6585&quot;&gt;RFC6585&lt;/a&gt; ]。クライアントは、処理できない応答を破棄できます。接続が閉じられていない限り、一貫した接続状態を保証するためにヘッダーブロックを処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f7a702b8c7697ca25eba936c967f0eb503afb30" translate="yes" xml:space="preserve">
          <source>A list of exposed headers consisting of zero or more &lt;a href=&quot;../headers&quot;&gt;header names&lt;/a&gt; other than the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS-safelisted request headers&lt;/a&gt; that the resource might use and can be exposed.</source>
          <target state="translated">リソースが使用する可能性があり、公開できる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORSセーフリストのリクエストヘッダー&lt;/a&gt;以外の0個以上の&lt;a href=&quot;../headers&quot;&gt;ヘッダー名で&lt;/a&gt;構成される公開ヘッダーのリスト。</target>
        </trans-unit>
        <trans-unit id="401eed78acd05f98cd45899dd71bdbf7ded19951" translate="yes" xml:space="preserve">
          <source>A list of exposed headers consisting of zero or more &lt;a href=&quot;../headers&quot;&gt;header names&lt;/a&gt; other than the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;simple response headers&lt;/a&gt; that the resource might use and can be exposed.</source>
          <target state="translated">リソースが使用する可能性があり、公開できる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;単純な応答ヘッダー&lt;/a&gt;以外のゼロ以上の&lt;a href=&quot;../headers&quot;&gt;ヘッダー名で&lt;/a&gt;構成される公開ヘッダーのリスト。</target>
        </trans-unit>
        <trans-unit id="a086a61548ed72dd4794fb8ac5f997765cb5cd7d" translate="yes" xml:space="preserve">
          <source>A list of name-value pairs in the form of &lt;code&gt;&amp;lt;cookie-name&amp;gt;=&amp;lt;cookie-value&amp;gt;&lt;/code&gt;. Pairs in the list are separated by a semicolon and a space (&lt;code&gt;'; '&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&amp;lt;cookie-name&amp;gt;=&amp;lt;cookie-value&amp;gt;&lt;/code&gt; の形式の名前と値のペアのリスト。リスト内のペアは、セミコロンとスペース（ &lt;code&gt;'; '&lt;/code&gt; ）で区切られています。</target>
        </trans-unit>
        <trans-unit id="201228fcd5cdd61ee1713b535c51e93b617c9561" translate="yes" xml:space="preserve">
          <source>A lock MAY have a limited lifetime.  The lifetime is suggested by the
   client when creating or refreshing the lock, but the server
   ultimately chooses the timeout value.  Timeout is measured in seconds
   remaining until lock expiration.

   The timeout counter MUST be restarted if a refresh lock request is
   successful (see &lt;a href=&quot;#section-9.10.2&quot;&gt;Section 9.10.2&lt;/a&gt;).  The timeout counter SHOULD NOT be
   restarted at any other time.

   If the timeout expires, then the lock SHOULD be removed.  In this
   case the server SHOULD act as if an UNLOCK method was executed by the 

   server on the resource using the lock token of the timed-out lock,
   performed with its override authority.

   Servers are advised to pay close attention to the values submitted by
   clients, as they will be indicative of the type of activity the
   client intends to perform.  For example, an applet running in a
   browser may need to lock a resource, but because of the instability
   of the environment within which the applet is running, the applet may
   be turned off without warning.  As a result, the applet is likely to
   ask for a relatively small timeout value so that if the applet dies,
   the lock can be quickly harvested.  However, a document management
   system is likely to ask for an extremely long timeout because its
   user may be planning on going offline.

   A client MUST NOT assume that just because the timeout has expired,
   the lock has immediately been removed.

   Likewise, a client MUST NOT assume that just because the timeout has
   not expired, the lock still exists.  Clients MUST assume that locks
   can arbitrarily disappear at any time, regardless of the value given
   in the Timeout header.  The Timeout header only indicates the
   behavior of the server if extraordinary circumstances do not occur.
   For example, a sufficiently privileged user may remove a lock at any
   time, or the system may crash in such a way that it loses the record
   of the lock's existence.</source>
          <target state="translated">ロックには有効期限があります。ライフタイムは、ロックを作成または更新するときにクライアントによって提案されますが、サーバーは最終的にタイムアウト値を選択します。タイムアウトは、ロックの有効期限が切れるまでの残り秒数で測定されます。更新ロック要求が成功した場合は、タイムアウトカウンターを再起動する必要があります（&lt;a href=&quot;#section-9.10.2&quot;&gt;セクション9.10.2を&lt;/a&gt;参照）。）。タイムアウトカウンターは、他の時点では再起動しないでください。タイムアウトの期限が切れた場合、ロックを削除する必要があります（SHOULD）。この場合、サーバーは、タイムアウトのロックのロックトークンを使用して、サーバーでリソースに対してUNLOCKメソッドが実行されたかのように振る舞い、オーバーライド権限で実行されます。サーバーは、クライアントが実行する予定のアクティビティのタイプを示すため、クライアントから送信された値に細心の注意を払うことをお勧めします。たとえば、ブラウザで実行されているアプレットはリソースをロックする必要があるかもしれませんが、アプレットが実行されている環境が不安定なため、警告なしにアプレットがオフになる場合があります。その結果、アプレットは比較的小さなタイムアウト値を要求する可能性が高いため、アプレットが停止した場合でもロックをすばやく取得できます。ただし、ドキュメント管理システムは、ユーザーがオフラインになる予定があるため、非常に長いタイムアウトを要求する可能性があります。クライアントは、タイムアウトの期限が切れたからといってロックがすぐに解除されたと想定してはなりません（MUST NOT）。同様に、クライアントは、タイムアウトの期限が切れていないからといって、ロックがまだ存在していると想定してはなりません（MUST NOT）。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしたりして、ロックの存在の記録が失われることがあります。ドキュメント管理システムは、ユーザーがオフラインになる予定があるため、非常に長いタイムアウトを要求する可能性があります。クライアントは、タイムアウトの期限が切れたからといってロックがすぐに解除されたと想定してはなりません（MUST NOT）。同様に、クライアントは、タイムアウトの期限が切れていないからといって、ロックがまだ存在していると想定してはなりません（MUST NOT）。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしてロックの存在の記録を失う可能性があります。ドキュメント管理システムは、ユーザーがオフラインになる予定があるため、非常に長いタイムアウトを要求する可能性があります。クライアントは、タイムアウトの期限が切れたからといってロックがすぐに解除されたと想定してはなりません（MUST NOT）。同様に、クライアントは、タイムアウトの期限が切れていないからといって、ロックがまだ存在していると想定してはなりません（MUST NOT）。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしたりして、ロックの存在の記録が失われることがあります。クライアントは、タイムアウトの期限が切れたからといってロックがすぐに解除されたと想定してはなりません（MUST NOT）。同様に、クライアントは、タイムアウトの期限が切れていないからといって、ロックがまだ存在していると想定してはなりません（MUST NOT）。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしてロックの存在の記録を失う可能性があります。クライアントは、タイムアウトの期限が切れたからといってロックがすぐに解除されたと想定してはなりません（MUST NOT）。同様に、クライアントは、タイムアウトの期限が切れていないからといって、ロックがまだ存在していると想定してはなりません（MUST NOT）。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしてロックの存在の記録を失う可能性があります。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしてロックの存在の記録を失う可能性があります。クライアントは、タイムアウトヘッダーで指定された値に関係なく、ロックはいつでも任意に消えることを想定しなければなりません（MUST）。 Timeoutヘッダーは、異常な状況が発生しない場合のサーバーの動作のみを示します。たとえば、十分な特権を持つユーザーがいつでもロックを解除したり、システムがクラッシュしてロックの存在の記録を失う可能性があります。</target>
        </trans-unit>
        <trans-unit id="a65767371978fb7907be1bc9f3cea569719dbaa4" translate="yes" xml:space="preserve">
          <source>A lock is refreshed by sending a LOCK request to the URL of a
   resource within the scope of the lock.  This request MUST NOT have a
   body and it MUST specify which lock to refresh by using the 'If'
   header with a single lock token (only one lock may be refreshed at a
   time).  The request MAY contain a Timeout header, which a server MAY
   accept to change the duration remaining on the lock to the new value.
   A server MUST ignore the Depth header on a LOCK refresh.

   If the resource has other (shared) locks, those locks are unaffected
   by a lock refresh.  Additionally, those locks do not prevent the
   named lock from being refreshed.

   The Lock-Token header is not returned in the response for a
   successful refresh LOCK request, but the LOCK response body MUST
   contain the new value for the DAV:lockdiscovery property.</source>
          <target state="translated">ロックは、ロックのスコープ内のリソースの URL に LOCK リクエストを送ることでリフレッシュされる。このリクエストはボディを持ってはならず[MUST NOT]、 単一のロックトークンを持つ'If'ヘッダーを使用してどのロックをリフレッ シュするかを指定しなければならない[MUST](一度に1つのロックだけがリフレッ シュされるかもしれない)。リクエストはTimeoutヘッダーを含めてもよい[MAY]。サーバーは、ロックに残っている期間を新しい値 に変更するために、これを受け入れてもよい[MAY]。サーバーはLOCKリフレッシュ時にDepthヘッダーを無視しなければならない[MUST]。リソースが他の(共有の)ロックを持っている場合、それらのロックはLOCKリフレッシュの 影響を受けない。さらに、それらのロックは、指定されたロックがリフレッシュされることを妨げない。LOCK リフレッシュに成功した LOCK リクエストのレスポンスでは、Lock-Token ヘッダーは返されないが、LOCK レスポンスボディは DAV:lockdiscovery プロパティの新しい値を含まなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="2d1c6621f1a90b5ee7c672cc60c74be33fafb4aa" translate="yes" xml:space="preserve">
          <source>A lock token is a type of state token that identifies a particular
   lock.  Each lock has exactly one unique lock token generated by the
   server.  Clients MUST NOT attempt to interpret lock tokens in any
   way.

   Lock token URIs MUST be unique across all resources for all time.
   This uniqueness constraint allows lock tokens to be submitted across
   resources and servers without fear of confusion.  Since lock tokens
   are unique, a client MAY submit a lock token in an If header on a
   resource other than the one that returned it.

   When a LOCK operation creates a new lock, the new lock token is
   returned in the Lock-Token response header defined in &lt;a href=&quot;#section-10.5&quot;&gt;Section 10.5&lt;/a&gt;,
   and also in the body of the response.

   Servers MAY make lock tokens publicly readable (e.g., in the DAV:
   lockdiscovery property).  One use case for making lock tokens
   readable is so that a long-lived lock can be removed by the resource
   owner (the client that obtained the lock might have crashed or
   disconnected before cleaning up the lock).  Except for the case of
   using UNLOCK under user guidance, a client SHOULD NOT use a lock
   token created by another client instance.

   This specification encourages servers to create Universally Unique
   Identifiers (UUIDs) for lock tokens, and to use the URI form defined
   by &quot;A Universally Unique Identifier (UUID) URN Namespace&quot;
   ([&lt;a href=&quot;https://tools.ietf.org/html/rfc4122&quot;&gt;RFC4122&lt;/a&gt;]).  However, servers are free to use any URI (e.g., from
   another scheme) so long as it meets the uniqueness requirements.  For
   example, a valid lock token might be constructed using the
   &quot;opaquelocktoken&quot; scheme defined in &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;.

   Example: &quot;urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6&quot;</source>
          <target state="translated">ロックトークンは、特定のロックを識別する状態トークンの一種です。各ロックには、サーバーによって生成された一意のロックトークンが1つだけあります。クライアントは、いかなる方法でもロックトークンを解釈してはなりません。ロックトークンURIは、すべてのリソースにわたって常に一意である必要があります。この一意性の制約により、混乱を恐れずに、リソースとサーバー間でロックトークンを送信できます。ロックトークンは一意であるため、クライアントは、それを返したリソース以外のリソースのIfヘッダーでロックトークンを送信できます（MAY）。 LOCK操作が新しいロックを作成すると、新しいロックトークンが&lt;a href=&quot;#section-10.5&quot;&gt;セクション10.5で&lt;/a&gt;定義されたLock-Token応答ヘッダーで返されます。、そしてレスポンスの本文にも。サーバーは、ロックトークンをパブリックに読み取り可能にすることができます（たとえば、DAV：lockdiscoveryプロパティ内）。ロックトークンを読み取り可能にするための1つの使用例は、長期間有効なロックをリソース所有者が削除できるようにすることです（ロックを取得したクライアントは、ロックをクリーンアップする前にクラッシュまたは切断された可能性があります）。ユーザーガイダンスでUNLOCKを使用する場合を除いて、クライアントは別のクライアントインスタンスによって作成されたロックトークンを使用してはなりません（SHOULD NOT）。この仕様では、サーバーがロックトークンのユニバーサルユニーク識別子（UUID）を作成し、「ユニバーサルユニーク識別子（UUID）URN名前空間」（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc4122&quot;&gt;RFC4122&lt;/a&gt;]）。ただし、サーバーは一意性の要件を満たす限り、任意のURI（たとえば、別のスキームから）を自由に使用できます。たとえば、&lt;a href=&quot;#appendix-C&quot;&gt;付録Cで&lt;/a&gt;定義されている「opaquelocktoken」スキームを使用して、有効なロックトークンを作成できます。例：「urn：uuid：f81d4fae-7dec-11d0-a765-00a0c91e6bf6」</target>
        </trans-unit>
        <trans-unit id="38e28447330e8077fc8cab54715d0f561c86ebbf" translate="yes" xml:space="preserve">
          <source>A machine-usable email address.</source>
          <target state="translated">機械で使用可能なメールアドレス。</target>
        </trans-unit>
        <trans-unit id="638122c7d8d04d744e55be1901fffac264110971" translate="yes" xml:space="preserve">
          <source>A malformed request or response is one that is an otherwise valid
   sequence of HTTP/2 frames but is invalid due to the presence of
   extraneous frames, prohibited header fields, the absence of mandatory
   header fields, or the inclusion of uppercase header field names.

   A request or response that includes a payload body can include a
   content-length header field.  A request or response is also malformed
   if the value of a content-length header field does not equal the sum
   of the DATA frame payload lengths that form the body.  A response
   that is defined to have no payload, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;[RFC7230],
   Section&amp;nbsp;3.3.2&lt;/a&gt;, can have a non-zero content-length header field, even
   though no content is included in DATA frames.

   Intermediaries that process HTTP requests or responses (i.e., any
   intermediary not acting as a tunnel) MUST NOT forward a malformed
   request or response.  Malformed requests or responses that are
   detected MUST be treated as a stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type
   PROTOCOL_ERROR.

   For malformed requests, a server MAY send an HTTP response prior to
   closing or resetting the stream.  Clients MUST NOT accept a malformed
   response.  Note that these requirements are intended to protect
   against several types of common attacks against HTTP; they are
   deliberately strict because being permissive can expose
   implementations to these vulnerabilities.</source>
          <target state="translated">不正な形式の要求または応答は、HTTP / 2フレームの有効なシーケンスですが、無関係なフレームの存在、禁止されたヘッダーフィールド、必須のヘッダーフィールドの欠如、または大文字のヘッダーフィールド名が含まれているために無効です。ペイロード本体を含む要求または応答には、content-lengthヘッダーフィールドを含めることができます。content-lengthヘッダーフィールドの値が本体を形成するDATAフレームペイロード長の合計と等しくない場合も、要求または応答の形式が正しくありません。&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;[RFC7230]のセクション3.3.2で&lt;/a&gt;説明されているように、ペイロードがないと定義されている応答。、DATAフレームにコンテンツが含まれていない場合でも、ゼロ以外のcontent-lengthヘッダーフィールドを持つことができます。 HTTP要求または応答を処理する仲介者（つまり、トンネルとして機能しない仲介者）は、不正な形式の要求または応答を転送してはなりません（MUSTNOT）。検出された不正な形式の要求または応答は、タイプPROTOCOL_ERRORのストリームエラー（&lt;a href=&quot;#section-5.4.2&quot;&gt;セクション5.4.2&lt;/a&gt;）として処理する必要があります。不正な形式のリクエストの場合、サーバーはストリームを閉じるかリセットする前にHTTP応答を送信できます（MAY）。クライアントは、不正な形式の応答を受け入れてはなりません。これらの要件は、HTTPに対するいくつかのタイプの一般的な攻撃から保護することを目的としていることに注意してください。寛容であると実装がこれらの脆弱性にさらされる可能性があるため、意図的に厳密になっています。</target>
        </trans-unit>
        <trans-unit id="fe425fac28cb48d5475051bae0bfe4902aafb25c" translate="yes" xml:space="preserve">
          <source>A message that encapsulates other messages. This can be used, for instance, to represent an email that includes a forwarded message as part of its data, or to allow sending very large messages in chunks as if it were multiple messages. Examples include &lt;code&gt;message/rfc822&lt;/code&gt; (for forwarded or replied-to message quoting) and &lt;code&gt;message/partial&lt;/code&gt; to allow breaking a large message into smaller ones automatically to be reassembled by the recipient.</source>
          <target state="translated">他のメッセージをカプセル化するメッセージ。これは、たとえば、転送されたメッセージをデータの一部として含む電子メールを表すため、または複数のメッセージであるかのように非常に大きなメッセージをチャンクで送信できるようにするために使用できます。例としては、 &lt;code&gt;message/rfc822&lt;/code&gt; （転送または返信されたメッセージの引用用）や、大きなメッセージを小さなメッセージに分割して受信者が自動的に再構築できるようにする &lt;code&gt;message/partial&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="e534d830d6d1a4baaca41c124f70dc5dd2676c60" translate="yes" xml:space="preserve">
          <source>A method other than &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used, or if &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used with a &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;other than&lt;/strong&gt; one of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;. For instance, if the &lt;code&gt;Content-Type&lt;/code&gt; of the &lt;code&gt;POST&lt;/code&gt; body is &lt;code&gt;application/xml&lt;/code&gt;, a request is preflighted.</source>
          <target state="translated">以外の方法&lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; を&lt;/a&gt;使用する場合、または&lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; を&lt;/a&gt;用いて使用されている&lt;a href=&quot;headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;以外&lt;/strong&gt;のいずれか &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 、 &lt;code&gt;multipart/form-data&lt;/code&gt; 、または &lt;code&gt;text/plain&lt;/code&gt; 。たとえば、 &lt;code&gt;POST&lt;/code&gt; ボディの &lt;code&gt;Content-Type&lt;/code&gt; が &lt;code&gt;application/xml&lt;/code&gt; の場合、リクエストはプリフライトされます。</target>
        </trans-unit>
        <trans-unit id="aed855bd7233b72a834c1273c05aff7651b0d47d" translate="yes" xml:space="preserve">
          <source>A more radical approach to cookies are zombie cookies or &quot;Evercookies&quot; which are recreated after their deletion and are intentionally hard to delete forever. They are using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;Web storage API&lt;/a&gt;, Flash Local Shared Objects and other techniques to recreate themselves whenever the cookie's absence is detected.</source>
          <target state="translated">Cookieへのより根本的なアプローチは、削除後に再作成され、意図的に永久に削除するのが難しいゾンビCookieまたは「Evercookie」です。彼らは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;WebストレージAPI&lt;/a&gt;、Flashローカル共有オブジェクト、その他の技術を使用して、Cookieの不在が検出されるたびに自分自身を再作成しています。</target>
        </trans-unit>
        <trans-unit id="b6cbf91c7a233e2d92640564b32c98fc24c39369" translate="yes" xml:space="preserve">
          <source>A non-negative decimal integer indicating the seconds to delay after the response is received.</source>
          <target state="translated">応答を受信してから遅延させる秒数を示す非負の10進整数。</target>
        </trans-unit>
        <trans-unit id="6619a7d6c651e30a9c93d75a3aae971cdd6730a9" translate="yes" xml:space="preserve">
          <source>A non-negative integer, representing time in seconds the object has been in a proxy cache.</source>
          <target state="translated">負ではない整数で、オブジェクトがプロキシキャッシュにある時間を秒単位で表します。</target>
        </trans-unit>
        <trans-unit id="de5cdae960d879dbf9f2c82fb00f32d958dffa0f" translate="yes" xml:space="preserve">
          <source>A number of security issues (e.g. phishing) have been associated with data URLs, and navigating to them in the browser's top level. To mitigate such issues, top-level navigation to &lt;code&gt;data://&lt;/code&gt; URIs has been blocked in Firefox 59+ (release version, Nightly/Beta from 58), and we hope to see other browsers follow suit soon. &lt;a href=&quot;https://blog.mozilla.org/security/2017/11/27/blocking-top-level-navigations-data-urls-firefox-58/&quot;&gt;See Blocking Top-Level Navigations to data URLs for Firefox 58&lt;/a&gt; for more details.</source>
          <target state="translated">多くのセキュリティ問題（フィッシングなど）がデータURLに関連付けられており、ブラウザのトップレベルでそれらに移動しています。そのような問題を軽減するために、 &lt;code&gt;data://&lt;/code&gt; URI へのトップレベルのナビゲーションがFirefox 59以降（リリースバージョン、58からのNightly / Beta）でブロックされており、他のブラウザーがすぐに追随することを期待しています。&lt;a href=&quot;https://blog.mozilla.org/security/2017/11/27/blocking-top-level-navigations-data-urls-firefox-58/&quot;&gt;詳細については、Firefox 58のデータURLへのトップレベルナビゲーションのブロックを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="141411a44840cd22ecb3eb10490b2fda0a7babf0" translate="yes" xml:space="preserve">
          <source>A number of security issues (e.g. phishing) have been associated with data URLs, and navigating to them in the browser's top level. To mitigate such issues, top-level navigation to &lt;code&gt;data://&lt;/code&gt; URLs has been blocked in Firefox 59+ (release version, Nightly/Beta from 58), and we hope to see other browsers follow suit soon. &lt;a href=&quot;https://blog.mozilla.org/security/2017/11/27/blocking-top-level-navigations-data-urls-firefox-58/&quot;&gt;See Blocking Top-Level Navigations to data URLs for Firefox 58&lt;/a&gt; for more details.</source>
          <target state="translated">多くのセキュリティ問題（フィッシングなど）がデータURLに関連付けられており、ブラウザのトップレベルでそれらに移動します。このような問題を軽減するために、Firefox 59以降（リリースバージョン、58からのNightly / Beta）では &lt;code&gt;data://&lt;/code&gt; URLへのトップレベルのナビゲーションがブロックされており、他のブラウザもすぐに追随することを期待しています。&lt;a href=&quot;https://blog.mozilla.org/security/2017/11/27/blocking-top-level-navigations-data-urls-firefox-58/&quot;&gt;詳細については、Firefox58のデータURLへのトップレベルナビゲーションのブロックを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="11607966c4ade482e455f279b7d34f6602b327af" translate="yes" xml:space="preserve">
          <source>A number that indicates the client&amp;rsquo;s current Device Pixel Ratio (DPR), which is the ratio of physical pixels over CSS pixels (Section 5.2 of &lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#CSSVAL&quot;&gt;&lt;cite&gt;[CSSVAL]&lt;/cite&gt;&lt;/a&gt;) of the layout viewport (Section 9.1.1 of &lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#CSS2&quot;&gt;&lt;cite&gt;[CSS2]&lt;/cite&gt;&lt;/a&gt;) on the device.</source>
          <target state="translated">クライアントの現在のデバイスピクセル比（DPR）を示す数値。これは、デバイス上のレイアウトビューポート（&lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#CSS2&quot;&gt;&lt;cite&gt;[CSS2]の&lt;/cite&gt;&lt;/a&gt;セクション9.1.1）のCSSピクセル（&lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#CSSVAL&quot;&gt;&lt;cite&gt;[CSSVAL]の&lt;/cite&gt;&lt;/a&gt;セクション5.2 ）に対する物理ピクセルの比率です。&lt;cite&gt;&lt;/cite&gt;</target>
        </trans-unit>
        <trans-unit id="c02c1193cef8895bfcfd76fab36022e947d7a1b5" translate="yes" xml:space="preserve">
          <source>A number that indicates the layout viewport width in CSS pixels. The provided pixel value is a number rounded to the smallest following integer (i.e. ceiling value).</source>
          <target state="translated">CSSピクセル単位でレイアウトビューポートの幅を示す数値。提供されるピクセル値は、次の最小の整数(すなわち天井値)に丸められた数値です。</target>
        </trans-unit>
        <trans-unit id="2b684cac1ea80ff01d85f8cdf2dbba122eead923" translate="yes" xml:space="preserve">
          <source>A number that indicates the ratio between physical pixels over CSS pixels of the selected image response.</source>
          <target state="translated">選択された画像レスポンスのCSSピクセルに対する物理ピクセルの比率を示す数値。</target>
        </trans-unit>
        <trans-unit id="d140d340f4e2b728e728d3e54954e96ec6667988" translate="yes" xml:space="preserve">
          <source>A numerical value indicating whether the client wants to opt in to reduced data usage mode. &lt;code&gt;on&lt;/code&gt; indicates yes, while &lt;code&gt;off&lt;/code&gt; (the default) indicates no.</source>
          <target state="translated">クライアントがデータ使用量削減モードにオプトインするかどうかを示す数値。 &lt;code&gt;on&lt;/code&gt; は「はい」を示し、 &lt;code&gt;off&lt;/code&gt; （デフォルト）は「いいえ」を示します。</target>
        </trans-unit>
        <trans-unit id="b3f80a5754b00a7b58692d532b283436fe5b8ce5" translate="yes" xml:space="preserve">
          <source>A path that must exist in the requested URL, or the browser won't send the &lt;code&gt;Cookie&lt;/code&gt; header.</source>
          <target state="translated">要求されたURLに存在する必要があるパス。そうでない場合、ブラウザは &lt;code&gt;Cookie&lt;/code&gt; ヘッダーを送信しません。</target>
        </trans-unit>
        <trans-unit id="650f390919a1e248d300f040459a60f3f5810f31" translate="yes" xml:space="preserve">
          <source>A peer can limit the number of concurrently active streams using the
   SETTINGS_MAX_CONCURRENT_STREAMS parameter (see &lt;a href=&quot;#section-6.5.2&quot;&gt;Section 6.5.2&lt;/a&gt;) within
   a SETTINGS frame.  The maximum concurrent streams setting is specific
   to each endpoint and applies only to the peer that receives the
   setting.  That is, clients specify the maximum number of concurrent
   streams the server can initiate, and servers specify the maximum
   number of concurrent streams the client can initiate.

   Streams that are in the &quot;open&quot; state or in either of the &quot;half-
   closed&quot; states count toward the maximum number of streams that an
   endpoint is permitted to open.  Streams in any of these three states
   count toward the limit advertised in the
   SETTINGS_MAX_CONCURRENT_STREAMS setting.  Streams in either of the
   &quot;reserved&quot; states do not count toward the stream limit.

   Endpoints MUST NOT exceed the limit set by their peer.  An endpoint
   that receives a HEADERS frame that causes its advertised concurrent
   stream limit to be exceeded MUST treat this as a stream error
   (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type PROTOCOL_ERROR or REFUSED_STREAM.  The choice
   of error code determines whether the endpoint wishes to enable
   automatic retry (see &lt;a href=&quot;#section-8.1.4&quot;&gt;Section 8.1.4&lt;/a&gt;) for details).

   An endpoint that wishes to reduce the value of
   SETTINGS_MAX_CONCURRENT_STREAMS to a value that is below the current
   number of open streams can either close streams that exceed the new
   value or allow streams to complete.</source>
          <target state="translated">ピアは、SETTINGS_MAX_CONCURRENT_STREAMSパラメーターを使用して同時にアクティブなストリームの数を制限できます（&lt;a href=&quot;#section-6.5.2&quot;&gt;セクション6.5.2を&lt;/a&gt;参照）。）SETTINGSフレーム内。最大同時ストリーム設定は各エンドポイントに固有であり、設定を受信するピアにのみ適用されます。つまり、クライアントはサーバーが開始できる同時ストリームの最大数を指定し、サーバーはクライアントが開始できる同時ストリームの最大数を指定します。 「オープン」状態または「ハーフクローズ」状態のいずれかにあるストリームは、エンドポイントが開くことを許可されているストリームの最大数にカウントされます。これらの3つの状態のいずれかのストリームは、SETTINGS_MAX_CONCURRENT_STREAMS設定でアドバタイズされた制限にカウントされます。 「予約済み」状態のいずれかのストリームは、ストリーム制限にカウントされません。エンドポイントは、ピアによって設定された制限を超えてはなりません。アドバタイズされた同時ストリーム制限を超える原因となるHEADERSフレームを受信するエンドポイントは、これをストリームエラーとして処理する必要があります（&lt;a href=&quot;#section-5.4.2&quot;&gt;&lt;/a&gt;タイプPROTOCOL_ERRORまたはREFUSED_STREAMのセクション5.4.2）。エラーコードの選択により、エンドポイントが自動再試行を有効にするかどうかが決まります（詳細については&lt;a href=&quot;#section-8.1.4&quot;&gt;セクション8.1.4&lt;/a&gt;を参照）。 SETTINGS_MAX_CONCURRENT_STREAMSの値を現在開いているストリームの数よりも少ない値に減らしたいエンドポイントは、新しい値を超えるストリームを閉じるか、ストリームを完了させることができます。</target>
        </trans-unit>
        <trans-unit id="be4c8ac9e916c2f51a9f789cc3213dedde33771f" translate="yes" xml:space="preserve">
          <source>A persistent connection is one which remains open for a period of time, and can be reused for several requests, saving the need for a new TCP handshake, and utilizing TCP's performance enhancing capabilities. This connection will not stay open forever: idle connections are closed after some time (a server may use the &lt;a href=&quot;headers/keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt; header to specify a minimum time the connection should be kept open).</source>
          <target state="translated">永続的な接続とは、一定期間開いたままであり、いくつかの要求に再利用できるため、新しいTCPハンドシェイクの必要性をなくし、TCPのパフォーマンス強化機能を利用します。この接続は永久に開いたままにはなりません。アイドル接続はしばらくすると閉じられます（サーバーは、&lt;a href=&quot;headers/keep-alive&quot;&gt; &lt;code&gt;Keep-Alive&lt;/code&gt; &lt;/a&gt;ヘッダーを使用して、接続を開いたままにしておく必要がある最小時間を指定できます）。</target>
        </trans-unit>
        <trans-unit id="7f5964b3fdbddffba630fc173f336fc4d53d9c2d" translate="yes" xml:space="preserve">
          <source>A policy is described using a series of policy directives, each of which describes the policy for a certain resource type or policy area. Your policy should include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; policy directive, which is a fallback for other resource types when they don't have policies of their own (for a complete list, see the description of the &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive). A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive to prevent inline scripts from running, as well as blocking the use of &lt;code&gt;eval()&lt;/code&gt;. A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/style-src&quot;&gt;&lt;code&gt;style-src&lt;/code&gt;&lt;/a&gt; directive to restrict inline styles from being applied from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element or a &lt;code&gt;style&lt;/code&gt; attribute.</source>
          <target state="translated">ポリシーは、一連のポリシーディレクティブを使用して記述されます。各ディレクティブは、特定のリソースタイプまたはポリシーエリアのポリシーを記述します。ポリシーには&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;ポリシーディレクティブを含める必要があります。これは、他のリソースタイプが独自のポリシーを持たない場合のフォールバックです（完全なリストについては、&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;ディレクティブの説明を参照してください）。ポリシーには、インラインスクリプトの実行を防止し、 &lt;code&gt;eval()&lt;/code&gt; の使用をブロックする&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;headers/content-security-policy/script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt;ディレクティブを含める必要があります。ポリシーには&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;headers/content-security-policy/style-src&quot;&gt; &lt;code&gt;style-src&lt;/code&gt; &lt;/a&gt;ディレクティブを含めて、インラインスタイルが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素または &lt;code&gt;style&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="49ce15f1c7d8b0b9060e29949f31f97e8c869e2f" translate="yes" xml:space="preserve">
          <source>A policy is described using a series of policy directives, each of which describes the policy for a certain resource type or policy area. Your policy should include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; policy directive, which is a fallback for other resource types when they don't have policies of their own (for a complete list, see the description of the &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive). A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive to prevent inline scripts from running, as well as blocking the use of &lt;code&gt;eval()&lt;/code&gt;. A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/style-src&quot;&gt;&lt;code&gt;style-src&lt;/code&gt;&lt;/a&gt; directive to restrict inline styles from being applied from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element or a &lt;code&gt;style&lt;/code&gt; attribute. There are specific directives for a wide variety of types of items, so that each type can have its own policy, including fonts, frames, images, audio and video media, scripts, and workers.</source>
          <target state="translated">ポリシーは、一連のポリシーディレクティブを使用して記述されます。各ディレクティブは、特定のリソースタイプまたはポリシー領域のポリシーを記述します。ポリシーには、&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;ポリシーディレクティブを含める必要があります。これは、他のリソースタイプに独自のポリシーがない場合のフォールバックです（完全なリストについては、&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;ディレクティブの説明を参照してください）。ポリシーには、インラインスクリプトの実行を防止し、 &lt;code&gt;eval()&lt;/code&gt; の使用をブロックするために、&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;headers/content-security-policy/script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt;ディレクティブを含める必要があります。ポリシーには、inlineスタイルが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素またはから適用されるのを制限する&lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;headers/content-security-policy/style-src&quot;&gt; &lt;code&gt;style-src&lt;/code&gt; &lt;/a&gt;ディレクティブを含める必要があります。 &lt;code&gt;style&lt;/code&gt; 属性。さまざまな種類のアイテムに固有のディレクティブがあるため、フォント、フレーム、画像、オーディオおよびビデオメディア、スクリプト、ワーカーなど、各種類に独自のポリシーを設定できます。</target>
        </trans-unit>
        <trans-unit id="cf3f38c5e6f98017e27ccd823e11fb4f53638759" translate="yes" xml:space="preserve">
          <source>A policy is described using a set of individual policy directives. A policy directive is a combination of a defined feature name, and an allowlist of origins that can use the feature.</source>
          <target state="translated">ポリシーは、個々のポリシーディレクティブのセットを使って記述されます。ポリシーディレクティブは、定義された機能名と、その機能を使用できるオリジンの許可リストの組み合わせです。</target>
        </trans-unit>
        <trans-unit id="96c2d8ce988407a2f35daa2b84e52da67848d1ab" translate="yes" xml:space="preserve">
          <source>A policy is described using a set of individual policy directives. A policy directive is a combination of a defined feature name, and an allowlist of origins that can use the feature. Features within a policy are separated by semicolons.</source>
          <target state="translated">ポリシーは、個々のポリシーディレクティブのセットを使って記述されます。ポリシーディレクティブは、定義された機能名と、その機能を使用できるオリジンの許可リストの組み合わせです。ポリシー内の機能はセミコロンで区切られます。</target>
        </trans-unit>
        <trans-unit id="d9f98b79f6a6f4ba906bbb9100d3b420de5ceeef" translate="yes" xml:space="preserve">
          <source>A potential security hole recently been fixed by browsers is authentication of cross-site images. From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/59&quot;&gt;Firefox 59&lt;/a&gt; onwards, image resources loaded from different origins to the current document are no longer able to trigger HTTP authentication dialogs (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1423146&quot;&gt;bug 1423146&lt;/a&gt;), preventing user credentials being stolen if attackers were able to embed an arbitrary image into a third-party page.</source>
          <target state="translated">ブラウザによって最近修正された潜在的なセキュリティホールは、クロスサイト画像の認証です。以下から&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/59&quot;&gt;のFirefox 59&lt;/a&gt;以降、画像リソースが現在の文書に異なる起源からロードされなくなったトリガすることができますHTTP認証のダイアログ（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1423146&quot;&gt;バグ1423146&lt;/a&gt;）、攻撃者は、サードパーティのページに任意の画像を埋め込むことができた場合盗まれるユーザーの資格情報を防止することができます。</target>
        </trans-unit>
        <trans-unit id="dc1e2a64ac8cc70397584ab85d7a956880edca58" translate="yes" xml:space="preserve">
          <source>A potential security hole that has recently been fixed by browsers is authentication of cross-site images. From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/59&quot;&gt;Firefox 59&lt;/a&gt; onwards, image resources loaded from different origins to the current document are no longer able to trigger HTTP authentication dialogs (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1423146&quot;&gt;bug 1423146&lt;/a&gt;), preventing user credentials being stolen if attackers were able to embed an arbitrary image into a third-party page.</source>
          <target state="translated">最近ブラウザによって修正された潜在的なセキュリティホールは、クロスサイトイメージの認証です。以下から&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/59&quot;&gt;のFirefox 59&lt;/a&gt;以降、画像リソースが現在の文書に異なる起源からロードされなくなったトリガすることができますHTTP認証のダイアログ（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1423146&quot;&gt;バグ1423146&lt;/a&gt;）、攻撃者は、サードパーティのページに任意の画像を埋め込むことができた場合盗まれるユーザーの資格情報を防止することができます。</target>
        </trans-unit>
        <trans-unit id="6365c5dff77a5f8170fa70a3b4adb72b11fd2b61" translate="yes" xml:space="preserve">
          <source>A primary goal of CSP is to mitigate and report XSS attacks. XSS attacks exploit the browser's trust of the content received from the server. Malicious scripts are executed by the victim's browser because the browser trusts the source of the content, even when it's not coming from where it seems to be coming from.</source>
          <target state="translated">CSP の主な目標は、XSS 攻撃を緩和して報告することです。XSS 攻撃は、サーバから受信したコンテンツに対するブラウザの信頼を悪用します。悪意のあるスクリプトは、ブラウザがコンテンツのソースを信頼しているため、たとえそれがどこから来ていると思われるものでなくても、被害者のブラウザによって実行されます。</target>
        </trans-unit>
        <trans-unit id="439d68646c04f15f6a1847145b2f1608413870b0" translate="yes" xml:space="preserve">
          <source>A private cache is dedicated to a single user. You might have seen &quot;caching&quot; in your browser's settings already. A browser cache holds all documents downloaded via &lt;a href=&quot;index&quot;&gt;HTTP&lt;/a&gt; by the user. This cache is used to make visited documents available for back/forward navigation, saving, viewing-as-source, etc. without requiring an additional trip to the server. It likewise improves offline browsing of cached content.</source>
          <target state="translated">プライベートキャッシュは、1人のユーザー専用です。ブラウザーの設定で「キャッシング」をすでに目にした可能性があります。ブラウザキャッシュは、ユーザーが&lt;a href=&quot;index&quot;&gt;HTTP&lt;/a&gt;経由でダウンロードしたすべてのドキュメントを保持します。このキャッシュは、訪問したドキュメントを、サーバーへの追加のトリップを必要とせずに、戻る/進むナビゲーション、保存、ソースとして表示などに利用できるようにするために使用されます。同様に、キャッシュされたコンテンツのオフラインブラウジングも改善されます。</target>
        </trans-unit>
        <trans-unit id="f82d2b7fb1e238df861eebe638d87bc4cf317285" translate="yes" xml:space="preserve">
          <source>A process for decoding the chunked transfer coding can be represented
   in pseudo-code as:

     length := 0
     read chunk-size, chunk-ext (if any), and CRLF
     while (chunk-size &amp;gt; 0) {
        read chunk-data and CRLF
        append chunk-data to decoded-body
        length := length + chunk-size
        read chunk-size, chunk-ext (if any), and CRLF
     }
     read trailer field
     while (trailer field is not empty) {
        if (trailer field is allowed to be sent in a trailer) {
            append trailer field to existing header fields
        }
        read trailer-field
     }
     Content-Length := length
     Remove &quot;chunked&quot; from Transfer-Encoding
     Remove Trailer from existing header fields</source>
          <target state="translated">チャンク転送コーディングをデコードするプロセスは、擬似コードで次のように表すことができます：length：= 0チャンクサイズの読み取り、（存在する場合は）チャンク拡張、およびCRLF while（チャンクサイズ&amp;gt; 0）{チャンクデータの読み取りとCRLFは、チャンクデータをデコード済みボディに追加しますlength：= length + chunk-size read chunk-size、chunk-ext（if if if）、and CRLF} trailer field while while（trailer field is empty）{if（trailer field isトレーラーでの送信が許可されています）{既存のヘッダーフィールドにトレーラーフィールドを追加}トレーラーフィールドを読み取ります} Content-Length：= length Transfer-Encodingから「チャンク」を削除します既存のヘッダーフィールドからトレーラーを削除します</target>
        </trans-unit>
        <trans-unit id="3433ae2d101b2c7bcd4c2dc4e1a13455c8f60c5d" translate="yes" xml:space="preserve">
          <source>A product identifier</source>
          <target state="translated">製品識別子</target>
        </trans-unit>
        <trans-unit id="9958c4830d3fc544adf2dd5f899a801d1f14198e" translate="yes" xml:space="preserve">
          <source>A product identifier &amp;mdash; its name or development codename.</source>
          <target state="translated">製品識別子&amp;mdash;その名前または開発コードネーム。</target>
        </trans-unit>
        <trans-unit id="0885b17418737dcc207d3d7f9c2773976ecc3fe7" translate="yes" xml:space="preserve">
          <source>A project designed to help developers, system administrators, and security professionals configure their sites safely and securely.</source>
          <target state="translated">開発者、システム管理者、セキュリティの専門家が安全かつ確実にサイトを設定するためのプロジェクトです。</target>
        </trans-unit>
        <trans-unit id="812c8d56ede89e043cd0d76837494a71cd36e6fd" translate="yes" xml:space="preserve">
          <source>A property name is a universally unique identifier that is associated
   with a schema that provides information about the syntax and
   semantics of the property.

   Because a property's name is universally unique, clients can depend
   upon consistent behavior for a particular property across multiple
   resources, on the same and across different servers, so long as that
   property is &quot;live&quot; on the resources in question, and the
   implementation of the live property is faithful to its definition.

   The XML namespace mechanism, which is based on URIs ([&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;]), is
   used to name properties because it prevents namespace collisions and
   provides for varying degrees of administrative control.

   The property namespace is flat; that is, no hierarchy of properties
   is explicitly recognized.  Thus, if a property A and a property A/B
   exist on a resource, there is no recognition of any relationship
   between the two properties.  It is expected that a separate
   specification will eventually be produced that will address issues
   relating to hierarchical properties.

   Finally, it is not possible to define the same property twice on a
   single resource, as this would cause a collision in the resource's
   property namespace.</source>
          <target state="translated">プロパティ名は、プロパティの構文とセマンティクスに関する情報を提供するスキーマに関連付けられた、普遍的に一意の識別子です。プロパティの名前は普遍的に一意であるため、そのプロパティが問題のリソースで &quot;ライブ&quot;であり、かつ、ライブプロパティはその定義に忠実です。 URIに基づくXML名前空間メカニズム（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;]）は、名前空間の衝突を防ぎ、さまざまな程度の管理制御を提供するため、プロパティに名前を付けるために使用されます。プロパティの名前空間はフラットです。つまり、プロパティの階層は明示的に認識されません。したがって、プロパティAとプロパティA / Bがリソース上に存在する場合、2つのプロパティ間の関係は認識されません。階層的なプロパティに関する問題に対処する個別の仕様が最終的に作成されることが期待されます。最後に、単一のリソースで同じプロパティを2回定義することはできません。これにより、リソースのプロパティ名前空間で衝突が発生するためです。</target>
        </trans-unit>
        <trans-unit id="6673520452754c10b992e04503b918fc10714c5c" translate="yes" xml:space="preserve">
          <source>A receiver that wishes to use a smaller flow-control window than the
   current size can send a new SETTINGS frame.  However, the receiver
   MUST be prepared to receive data that exceeds this window size, since
   the sender might send data that exceeds the lower limit prior to
   processing the SETTINGS frame.

   After sending a SETTINGS frame that reduces the initial flow-control
   window size, a receiver MAY continue to process streams that exceed
   flow-control limits.  Allowing streams to continue does not allow the
   receiver to immediately reduce the space it reserves for flow-control
   windows.  Progress on these streams can also stall, since
   WINDOW_UPDATE frames are needed to allow the sender to resume
   sending.  The receiver MAY instead send a RST_STREAM with an error
   code of FLOW_CONTROL_ERROR for the affected streams.</source>
          <target state="translated">現在のサイズよりも小さいフロー制御ウィンドウを使用したい受信機は、新しい SETTINGS フレームを送信することができる。ただし、送信者は SETTINGS フレームを処理する前に下限を超えるデータを送信する可能性があるため、受信者はこのウィンドウサイズを超えるデータを受信する準備をしな ければならない[MUST]。初期のフロー制御ウィンドウサイズを縮小するSETTINGSフレームを送信した後、受信機はフロー制御限界を超えるストリームを処理し続けてもよい[MAY]。ストリームの継続を許可しても、レシーバがフロー制御ウィンドウのために確保しているスペースをすぐに減らすことはできない。送信者が送信を再開できるようにするためにはWINDOW_UPDATEフレームが必要であるため、これらのストリームのプログレスも失速する可能性がある。受信機は、その代わりに、影響を受けたストリームに対してFLOW_CONTROL_ERRORというエラーコードを持つRST_STREAMを送信してもよい[MAY]。</target>
        </trans-unit>
        <trans-unit id="cacdba23a65a183495b790ee68fdf2145281249c" translate="yes" xml:space="preserve">
          <source>A recurring question among website owners is whether to choose non-www or www URLs. This page provides some advice on what's best.</source>
          <target state="translated">ウェブサイトの所有者の間で繰り返される質問は、URLを非WWWとWWWのどちらを選ぶべきかということです。このページでは、何がベストなのかについていくつかのアドバイスを提供します。</target>
        </trans-unit>
        <trans-unit id="7dfa1a7fc8e90c654961e3cd92ce898d60b0c079" translate="yes" xml:space="preserve">
          <source>A referrer will be sent for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-site origins&lt;/a&gt;, but cross-origin requests will contain no referrer information.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;同一サイトオリジン&lt;/a&gt;のリファラーが送信されますが、クロスオリジンリクエストにはリファラー情報は含まれません。</target>
        </trans-unit>
        <trans-unit id="9b6c9e53e2af534c3dcf745698dae9e91a4a2d0a" translate="yes" xml:space="preserve">
          <source>A referrer will be sent for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-site origins&lt;/a&gt;, but cross-origin requests will send no referrer information.</source>
          <target state="translated">リファラがのために送信されます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;、同じサイトの起源&lt;/a&gt;が、クロスオリジン・リクエストは何のリファラー情報を送信しません。</target>
        </trans-unit>
        <trans-unit id="cae243fc787eed5f661f7ca1eba239db78ab53cd" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Cache Directive Name 

   o  Pointer to specification text

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="translated">登録には次のフィールドを含める必要があります。oキャッシュディレクティブ名o仕様テキストへのポインターこの名前空間に追加される値にはIETFレビューが必要です（ &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226]、セクション4.1を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d53f7f5a3cccd3a8eb1b60f9e389fc08f9663236" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Status Code (3 digits)

   o  Short Description

   o  Pointer to specification text

   Values to be added to the HTTP status code namespace require IETF
   Review (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="translated">登録には次のフィールドを含める必要があります。oステータスコード（3桁）o短い説明o仕様テキストへのポインターHTTPステータスコード名前空間に追加する値にはIETFレビューが必要です（&lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226]、セクション4.1を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="30a86ff2e17ce76a1f3b579485c7312a875e5283" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Warn Code (3 digits)

   o  Short Description

   o  Pointer to specification text

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="translated">登録には次のフィールドを含める必要があります。o警告コード（3桁）o短い説明o仕様テキストへのポインターこの名前空間に追加する値にはIETFレビューが必要です（ &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226]、セクション4.1を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="49d235161b5c7adbe95acaa5e39a723e244ff106" translate="yes" xml:space="preserve">
          <source>A related topic is the concept of HTTP connection upgrades, wherein an HTTP/1.1 connection is upgraded to a different protocol, such as TLS/1.0, WebSocket, or even HTTP/2 in cleartext. This &lt;a href=&quot;protocol_upgrade_mechanism&quot;&gt;protocol upgrade mechanism&lt;/a&gt; is documented in more detail elsewhere.</source>
          <target state="translated">関連トピックは、HTTP接続のアップグレードの概念です。HTTP/ 1.1接続は、TLS / 1.0、WebSocket、またはクリアテキストのHTTP / 2などの別のプロトコルにアップグレードされます。この&lt;a href=&quot;protocol_upgrade_mechanism&quot;&gt;プロトコルアップグレードメカニズム&lt;/a&gt;については、他の場所で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="07d792622b2930c487cb661d9dfa70764d9bdce6" translate="yes" xml:space="preserve">
          <source>A relative (to the request URL) or absolute URL pointing to a source map file.</source>
          <target state="translated">ソース マップ ファイルを指す相対 URL (要求 URL に対する)または絶対 URL。</target>
        </trans-unit>
        <trans-unit id="04b17c6c33bdd43b6f562d0d41e6eb0e2aa2ab77" translate="yes" xml:space="preserve">
          <source>A relative (to the request URL) or absolute URL.</source>
          <target state="translated">相対 URL (リクエスト URL に対する)または絶対 URL。</target>
        </trans-unit>
        <trans-unit id="b2268a2e42421e9d441dc85b7260cf9456fb7200" translate="yes" xml:space="preserve">
          <source>A representation can be partitioned into subranges according to
   various structural units, depending on the structure inherent in the
   representation's media type.  This &quot;range unit&quot; is used in the
   Accept-Ranges (&lt;a href=&quot;#section-2.3&quot;&gt;Section 2.3&lt;/a&gt;) response header field to advertise
   support for range requests, the Range (&lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt;) request header
   field to delineate the parts of a representation that are requested,
   and the Content-Range (&lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;) payload header field to describe
   which part of a representation is being transferred.

     range-unit       = bytes-unit / other-range-unit</source>
          <target state="translated">表現は、表現のメディアタイプに固有の構造に応じて、さまざまな構造単位に従ってサブレンジに分割できます。この「レンジユニットは、」同意-範囲（で使用される&lt;a href=&quot;#section-2.3&quot;&gt;セクション2.3&lt;/a&gt;範囲要求のサポートをアドバタイズする）レスポンスヘッダフィールド、レンジ（&lt;a href=&quot;#section-3.1&quot;&gt;3.1節&lt;/a&gt;）、要求された表現の部分を描写するリクエストヘッダフィールド、そしてたContent範囲（&lt;a href=&quot;#section-4.2&quot;&gt;セクション4.2&lt;/a&gt;）ペイロードヘッダーフィールド。表現のどの部分が転送されるかを説明します。範囲単位=バイト単位/その他の範囲単位</target>
        </trans-unit>
        <trans-unit id="d71b4bd9a10e17cd95bbfd491a4aa1f6dbc4d2f2" translate="yes" xml:space="preserve">
          <source>A request message from a client to a server includes, within the
   first line of that message, the method to be applied to the resource,
   the identifier of the resource, and the protocol version in use.

        Request       = Request-Line              ; &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;
                        *(( general-header        ; &lt;a href=&quot;#section-4.5&quot;&gt;Section 4.5&lt;/a&gt;
                         | request-header         ; &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;
                         | entity-header ) CRLF)  ; &lt;a href=&quot;#section-7.1&quot;&gt;Section 7.1&lt;/a&gt;
                        CRLF
                        [ message-body ]          ; &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;</source>
          <target state="translated">クライアントからサーバーへの要求メッセージには、そのメッセージの最初の行に、リソースに適用されるメソッド、リソースの識別子、および使用中のプロトコルバージョンが含まれています。リクエスト=リクエストライン; &lt;a href=&quot;#section-5.1&quot;&gt;セクション5.1&lt;/a&gt; *（（general-header; &lt;a href=&quot;#section-4.5&quot;&gt;Section 4.5&lt;/a&gt; | request-header; &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt; | entity-header）CRLF）; &lt;a href=&quot;#section-7.1&quot;&gt;セクション7.1&lt;/a&gt; CRLF [メッセージ本文]; &lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d9fa92bb2a5449449d61328cb82bf9e89b926d4" translate="yes" xml:space="preserve">
          <source>A request method is considered &quot;idempotent&quot; if the intended effect on
   the server of multiple identical requests with that method is the
   same as the effect for a single such request.  Of the request methods
   defined by this specification, PUT, DELETE, and safe request methods
   are idempotent. 

   Like the definition of safe, the idempotent property only applies to
   what has been requested by the user; a server is free to log each
   request separately, retain a revision control history, or implement
   other non-idempotent side effects for each idempotent request.

   Idempotent methods are distinguished because the request can be
   repeated automatically if a communication failure occurs before the
   client is able to read the server's response.  For example, if a
   client sends a PUT request and the underlying connection is closed
   before any response is received, then the client can establish a new
   connection and retry the idempotent request.  It knows that repeating
   the request will have the same intended effect, even if the original
   request succeeded, though the response might differ.</source>
          <target state="translated">リクエストメソッドは、そのメソッドを使用した複数の同一のリクエストの サーバー上での意図された効果が、そのような単一のリクエストに対する効果と同じである 場合、「idempotent」とみなされる。この仕様で定義されているリクエストメソッドのうち、PUT、DELETE、および safeリクエストメソッドはidempotentである。safeの定義と同様に、idempotentプロパティはユーザーがリクエストしたものにのみ適用されます。 サーバーは各リクエストを個別にログに記録したり、リビジョン管理の履歴を保持したり、idempotentリクエストごとに他のidempotentでない副作用を実装したりすることが自由です。アイドエンプテントなメソッドが区別されるのは、クライアントがサーバの応答を読み取ることができる前に通信障害が発生した場合に、リクエストが自動的に繰り返されることができるからです。例えば、クライアントがPUTリクエストを送信して、応答を受け取る前に基礎となる接続が閉じられた場合、クライアントは新しい接続を確立して、idempotentリクエストを再試行することができます。クライアントは、元のリクエストが成功したとしても、たとえレスポンスが異なっていたとしても、 リクエストを繰り返すことで同じ意図した効果が得られることを知っています。</target>
        </trans-unit>
        <trans-unit id="546384726031738c999ae47dc3029524e1da7c86" translate="yes" xml:space="preserve">
          <source>A request that needs to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; was attempted, but CORS is disabled in the user's browser. When this happens, the user needs to turn CORS back on in their browser.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt;を使用する必要がある要求が試行されましたが、CORSはユーザーのブラウザーで無効になっています。この場合、ユーザーはブラウザでCORSをオンにする必要があります。</target>
        </trans-unit>
        <trans-unit id="58731bd968021ea09d9af4e515aa9201da338c9d" translate="yes" xml:space="preserve">
          <source>A request that upgrades from HTTP/1.1 to HTTP/2 MUST include exactly
   one &quot;HTTP2-Settings&quot; header field.  The HTTP2-Settings header field
   is a connection-specific header field that includes parameters that
   govern the HTTP/2 connection, provided in anticipation of the server
   accepting the request to upgrade.

     HTTP2-Settings    = token68 

   A server MUST NOT upgrade the connection to HTTP/2 if this header
   field is not present or if more than one is present.  A server MUST
   NOT send this header field.

   The content of the HTTP2-Settings header field is the payload of a
   SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;), encoded as a base64url string (that is,
   the URL- and filename-safe Base64 encoding described in &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;Section&amp;nbsp;5 of
   [RFC4648]&lt;/a&gt;, with any trailing '=' characters omitted).  The ABNF
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt;] production for &quot;token68&quot; is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-2.1&quot;&gt;Section&amp;nbsp;2.1 of
   [RFC7235]&lt;/a&gt;.

   Since the upgrade is only intended to apply to the immediate
   connection, a client sending the HTTP2-Settings header field MUST
   also send &quot;HTTP2-Settings&quot; as a connection option in the Connection
   header field to prevent it from being forwarded (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of
   [RFC7230]&lt;/a&gt;).

   A server decodes and interprets these values as it would any other
   SETTINGS frame.  Explicit acknowledgement of these settings
   (&lt;a href=&quot;#section-6.5.3&quot;&gt;Section 6.5.3&lt;/a&gt;) is not necessary, since a 101 response serves as
   implicit acknowledgement.  Providing these values in the upgrade
   request gives a client an opportunity to provide parameters prior to
   receiving any frames from the server.</source>
          <target state="translated">HTTP /1.1からHTTP / 2にアップグレードするリクエストには、「HTTP2-Settings」ヘッダーフィールドを1つだけ含める必要があります。 HTTP2-Settingsヘッダーフィールドは、HTTP / 2接続を管理するパラメーターを含む接続固有のヘッダーフィールドであり、サーバーがアップグレードの要求を受け入れることを見越して提供されます。 HTTP2-Settings = token68このヘッダーフィールドが存在しない場合、または複数存在する場合、サーバーは接続をHTTP / 2にアップグレードしてはなりません（MUSTNOT）。サーバーはこのヘッダーフィールドを送信してはなりません（MUSTNOT）。 HTTP2-Settingsヘッダーフィールドのコンテンツは、SETTINGSフレーム（&lt;a href=&quot;#section-6.5&quot;&gt;セクション6.5&lt;/a&gt;）のペイロードであり、base64url文字列（つまり&lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;、[RFC4648]のセクション5で&lt;/a&gt;説明されているURLおよびファイル名に安全なBase64エンコーディング）としてエンコードされます。末尾の「=」文字は省略されています）。 ABNF [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt;]「token68」の生産&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-2.1&quot;&gt;は[RFC7235]のセクション2.1で&lt;/a&gt;定義されています。アップグレードは即時接続にのみ適用されることを目的としているため、HTTP2-Settingsヘッダーフィールドを送信するクライアントは、転送されないように、Connectionヘッダーフィールドの接続オプションとして「HTTP2-Settings」も送信する必要があります（の&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;セクション6.1を&lt;/a&gt;参照）。 [RFC7230]）。サーバーは、他のSETTINGSフレームと同じように、これらの値をデコードして解釈します。101応答は暗黙的な確認応答として機能するため、これらの設定の明示的な確認応答（&lt;a href=&quot;#section-6.5.3&quot;&gt;セクション6.5.3&lt;/a&gt;）は必要ありません。アップグレード要求でこれらの値を提供すると、クライアントはサーバーからフレームを受信する前にパラメーターを提供する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="8c4fecdc1b419060578658673f7841f56391ef3c" translate="yes" xml:space="preserve">
          <source>A request-line begins with a method token, followed by a single space
   (SP), the request-target, another single space (SP), the protocol
   version, and ends with CRLF.

     request-line   = method SP request-target SP HTTP-version CRLF

   The method token indicates the request method to be performed on the
   target resource.  The request method is case-sensitive.

     method         = token

   The request methods defined by this specification can be found in
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4&quot;&gt;Section&amp;nbsp;4 of [RFC7231]&lt;/a&gt;, along with information regarding the HTTP
   method registry and considerations for defining new methods.

   The request-target identifies the target resource upon which to apply
   the request, as defined in &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;.

   Recipients typically parse the request-line into its component parts
   by splitting on whitespace (see &lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;), since no whitespace is
   allowed in the three components.  Unfortunately, some user agents
   fail to properly encode or exclude whitespace found in hypertext
   references, resulting in those disallowed characters being sent in a
   request-target.

   Recipients of an invalid request-line SHOULD respond with either a
   400 (Bad Request) error or a 301 (Moved Permanently) redirect with
   the request-target properly encoded.  A recipient SHOULD NOT attempt
   to autocorrect and then process the request without a redirect, since
   the invalid request-line might be deliberately crafted to bypass
   security filters along the request chain.

   HTTP does not place a predefined limit on the length of a
   request-line, as described in &lt;a href=&quot;#section-2.5&quot;&gt;Section 2.5&lt;/a&gt;.  A server that receives a
   method longer than any that it implements SHOULD respond with a 501
   (Not Implemented) status code.  A server that receives a 

   request-target longer than any URI it wishes to parse MUST respond
   with a 414 (URI Too Long) status code (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;Section&amp;nbsp;6.5.12 of
   [RFC7231]&lt;/a&gt;).

   Various ad hoc limitations on request-line length are found in
   practice.  It is RECOMMENDED that all HTTP senders and recipients
   support, at a minimum, request-line lengths of 8000 octets.</source>
          <target state="translated">リクエストラインはメソッドトークンで始まり、シングルスペース（SP）、リクエストターゲット、別のシングルスペース（SP）、プロトコルバージョンが続き、CRLFで終わります。 request-line = method SP request-target SP HTTP-version CRLF methodトークンは、ターゲットリソースで実行されるリクエストメソッドを示します。リクエストメソッドでは大文字と小文字が区別されます。 method = tokenこの仕様で定義されているリクエストメソッド &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4&quot;&gt;は、[RFC7231]のセクション4に&lt;/a&gt;、HTTPメソッドレジストリに関する情報と新しいメソッドを定義するための考慮事項とともに記載されています。 request-targetは、&lt;a href=&quot;#section-5.3&quot;&gt;セクション5.3で&lt;/a&gt;定義されているように、リクエストを適用するターゲットリソースを識別します。。受信者は通常、空白で分割することにより、リクエストラインをそのコンポーネント部分に解析します（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5を&lt;/a&gt;参照）。）、3つのコンポーネントでは空白を使用できないため。残念ながら、一部のユーザーエージェントは、ハイパーテキスト参照にある空白を適切にエンコードまたは除外できず、その結果、許可されていない文字がリクエストターゲットで送信されます。無効なリクエストラインの受信者は、リクエストターゲットが適切にエンコードされた400（Bad Request）エラーまたは301（Moved Permanently）リダイレクトのいずれかで応答する必要があります（SHOULD）。無効なリクエストラインは、リクエストチェーンに沿ってセキュリティフィルターを迂回するように意図的に作成されている可能性があるため、受信者はリダイレクトを行わずにリクエストを自動修正してから処理しようとしないでください。&lt;a href=&quot;#section-2.5&quot;&gt;セクション2.5で&lt;/a&gt;説明されているように、HTTPはリクエストラインの長さに事前定義の制限を課しません。。実装するメソッドよりも長いメソッドを受信したサーバーは、501（未実装）ステータスコードで応答する必要があります（SHOULD）。解析したいURIよりも長いリクエストターゲットを受信するサーバーは、414（URIが長すぎる）ステータスコードで応答しなければなりません（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;[RFC7231]のセクション6.5.12を&lt;/a&gt;参照）。リクエストラインの長さに関するさまざまなアドホック制限が実際に見られます。すべてのHTTP送信者と受信者が、少なくとも8000オクテットのリクエストライン長をサポートすることが推奨されます。</target>
        </trans-unit>
        <trans-unit id="7980e0e9f0bf2020cb5e958089632996a1336213" translate="yes" xml:space="preserve">
          <source>A resource can explicitly advertise its support for the revisions to
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] made in this document.  Class 1 MUST be supported as well.
   Class 2 MAY be supported.  Advertising class 3 support in addition to
   class 1 and 2 means that the server supports all the requirements in
   this specification.  Advertising class 3 and class 1 support, but not
   class 2, means that the server supports all the requirements in this
   specification except possibly those that involve locking support. 

   Example:

            DAV: 1, 3</source>
          <target state="translated">リソースは、このドキュメントで行われた[ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt; ]の改訂に対するサポートを明示的にアドバタイズできます。クラス1もサポートする必要があります。クラス2がサポートされる場合があります。クラス1および2に加えてクラス3サポートをアドバタイズすると、サーバーはこの仕様のすべての要件をサポートします。クラス3とクラス1のサポートをアドバタイズしますが、クラス2はアドバタイズしません。これは、サーバーが、このサポートのすべての要件をサポートすることを意味します。例：DAV：1、3</target>
        </trans-unit>
        <trans-unit id="8f0b02bd6becb7e138339ca8cbce88e5c8dc9860" translate="yes" xml:space="preserve">
          <source>A response containing a &lt;code&gt;Keep-Alive&lt;/code&gt; header:</source>
          <target state="translated">&lt;code&gt;Keep-Alive&lt;/code&gt; ヘッダーを含む応答：</target>
        </trans-unit>
        <trans-unit id="e3589c5d5733be22e8a4c793501192c7aeaaf910" translate="yes" xml:space="preserve">
          <source>A response containing one single range:</source>
          <target state="translated">1つの単一の範囲を含む応答。</target>
        </trans-unit>
        <trans-unit id="d288a5da8b4ec025b38438ed09fb0060c6a676e8" translate="yes" xml:space="preserve">
          <source>A response containing several ranges:</source>
          <target state="translated">複数の範囲を含むレスポンス。</target>
        </trans-unit>
        <trans-unit id="a0ee67e224ae11e90845c87f77f2fe7ec059fb94" translate="yes" xml:space="preserve">
          <source>A response message is considered complete when all of the octets
   indicated by the message framing ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;]) are received prior to
   the connection being closed.  If the request method is GET, the
   response status code is 200 (OK), and the entire response header
   section has been received, a cache MAY store an incomplete response
   message body if the cache entry is recorded as incomplete.  Likewise,
   a 206 (Partial Content) response MAY be stored as if it were an
   incomplete 200 (OK) cache entry.  However, a cache MUST NOT store
   incomplete or partial-content responses if it does not support the
   Range and Content-Range header fields or if it does not understand
   the range units used in those fields.

   A cache MAY complete a stored incomplete response by making a
   subsequent range request ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]) and combining the successful
   response with the stored entry, as defined in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.  A cache
   MUST NOT use an incomplete response to answer requests unless the
   response has been made complete or the request is partial and
   specifies a range that is wholly within the incomplete response.  A
   cache MUST NOT send a partial response to a client without explicitly
   marking it as such using the 206 (Partial Content) status code.</source>
          <target state="translated">応答メッセージは、メッセージのフレーミング（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;]）は、接続が閉じられる前に受信されます。リクエストメソッドがGETで、レスポンスステータスコードが200（OK）で、レスポンスヘッダーセクション全体が受信された場合、キャッシュエントリが不完全であると記録されていれば、キャッシュは不完全なレスポンスメッセージ本文を格納できます（MAY）。同様に、206（Partial Content）レスポンスは、不完全な200（OK）キャッシュエントリであるかのように格納される場合があります。ただし、キャッシュがRangeおよびContent-Rangeヘッダーフィールドをサポートしていない場合、またはこれらのフィールドで使用されている範囲単位を理解していない場合、キャッシュは不完全または部分的なコンテンツ応答を格納してはなりません（MUST NOT）。キャッシュは、以下に定義されているように、後続の範囲要求（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt; ]）を行い、成功した応答と保存されたエントリを組み合わせることにより、保存された不完全な応答を完了できます（MAY ）。&lt;a href=&quot;#section-3.3&quot;&gt;セクション3.3&lt;/a&gt;。キャッシュが不完全な応答を使用してリクエストに応答してはなりません（応答が完全になされていないか、またはリクエストが部分的であり、完全に不完全な応答内にある範囲を指定していない場合）。キャッシュは、206（Partial Content）ステータスコードを使用して明示的にマークせずに、クライアントに部分応答を送信してはなりません（MUST NOT）。</target>
        </trans-unit>
        <trans-unit id="999a0c8fd82d7b5d2242dddbeb3edd70fcd18975" translate="yes" xml:space="preserve">
          <source>A response might transfer only a partial representation if the
   connection closed prematurely or if the request used one or more
   Range specifiers ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]).  After several such transfers, a cache
   might have received several ranges of the same representation.  A
   cache MAY combine these ranges into a single stored response, and
   reuse that response to satisfy later requests, if they all share the
   same strong validator and the cache complies with the client
   requirements in &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-4.3&quot;&gt;Section&amp;nbsp;4.3 of [RFC7233]&lt;/a&gt;.

   When combining the new response with one or more stored responses, a
   cache MUST:

   o  delete any Warning header fields in the stored response with
      warn-code 1xx (see &lt;a href=&quot;#section-5.5&quot;&gt;Section 5.5&lt;/a&gt;);

   o  retain any Warning header fields in the stored response with
      warn-code 2xx; and,

   o  use other header fields provided in the new response, aside from
      Content-Range, to replace all instances of the corresponding
      header fields in the stored response.</source>
          <target state="translated">接続が時期尚早に閉じられた場合、または要求が1つ以上の範囲指定子（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt; ]）を使用した場合、応答は部分的な表現のみを転送する可能性があります。このような転送を数回行った後、キャッシュは同じ表現の複数の範囲を受け取った可能性があります。キャッシュがこれらの範囲を1つの格納された応答に結合し、それらがすべて同じ強力なバリデーターを共有し、キャッシュ&lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-4.3&quot;&gt;が[RFC7233]のセクション4.3の&lt;/a&gt;クライアント要件に準拠している場合、その応答を再利用して後の要求を満たすことができます（MAY）。一つ以上の記憶された応答は、キャッシュMUSTで新しい応答を組み合わせる場合：oは警告コード1XXと格納された応答に警告ヘッダフィールドを削除します（&lt;a href=&quot;#section-5.5&quot;&gt;セクション5.5を&lt;/a&gt;）; o warn-code 2xxを使用して、格納された応答の警告ヘッダーフィールドを保持します。そして、o Content-Rangeとは別に、新しい応答で提供される他のヘッダーフィールドを使用して、格納されている応答の対応するヘッダーフィールドのすべてのインスタンスを置き換えます。</target>
        </trans-unit>
        <trans-unit id="c70c6ad8d852190de6c159770119532624c086ed" translate="yes" xml:space="preserve">
          <source>A response might transfer only a subrange of a representation if the
   connection closed prematurely or if the request used one or more
   Range specifications.  After several such transfers, a client might
   have received several ranges of the same representation.  These
   ranges can only be safely combined if they all have in common the
   same strong validator (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.1&quot;&gt;Section&amp;nbsp;2.1 of [RFC7232]&lt;/a&gt;).

   A client that has received multiple partial responses to GET requests
   on a target resource MAY combine those responses into a larger
   continuous range if they share the same strong validator.

   If the most recent response is an incomplete 200 (OK) response, then
   the header fields of that response are used for any combined response
   and replace those of the matching stored responses.

   If the most recent response is a 206 (Partial Content) response and
   at least one of the matching stored responses is a 200 (OK), then the
   combined response header fields consist of the most recent 200
   response's header fields.  If all of the matching stored responses
   are 206 responses, then the stored response with the most recent
   header fields is used as the source of header fields for the combined
   response, except that the client MUST use other header fields
   provided in the new response, aside from Content-Range, to replace
   all instances of the corresponding header fields in the stored
   response. 

   The combined response message body consists of the union of partial
   content ranges in the new response and each of the selected
   responses.  If the union consists of the entire range of the
   representation, then the client MUST process the combined response as
   if it were a complete 200 (OK) response, including a Content-Length
   header field that reflects the complete length.  Otherwise, the
   client MUST process the set of continuous ranges as one of the
   following: an incomplete 200 (OK) response if the combined response
   is a prefix of the representation, a single 206 (Partial Content)
   response containing a multipart/byteranges body, or multiple 206
   (Partial Content) responses, each with one continuous range that is
   indicated by a Content-Range header field.</source>
          <target state="translated">接続が時期尚早に閉じられた場合、または要求が1つ以上の範囲指定を使用した場合、応答は表現の部分範囲のみを転送する可能性があります。そのようないくつかの転送の後、クライアントは同じ表現の複数の範囲を受け取った可能性があります。これらの範囲は、すべてが同じ強力なバリデーターを共有している場合にのみ安全に組み合わせることができます（&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.1&quot;&gt;[RFC7232]のセクション2.1）。&lt;/a&gt;）。ターゲットリソースのGETリクエストに対する複数の部分的な応答を受け取ったクライアントは、同じ強力なバリデーターを共有している場合、それらの応答をより大きな連続範囲に結合できます。最新の応答が不完全な200（OK）応答である場合、その応答のヘッダーフィールドはすべての組み合わせ応答に使用され、一致する格納済み応答のヘッダーフィールドを置き換えます。最新の応答が206（部分コンテンツ）応答であり、一致する格納済み応答の少なくとも1つが200（OK）である場合、組み合わされた応答ヘッダーフィールドは、最新の200応答のヘッダーフィールドで構成されます。一致するすべての格納された応答が206応答である場合、最新のヘッダーフィールドを持つ格納された応答が、結合された応答のヘッダーフィールドのソースとして使用されます。例外として、クライアントは、Content-Rangeとは別に、新しい応答で提供される他のヘッダーフィールドを使用して、格納されている応答の対応するヘッダーフィールドのすべてのインスタンスを置き換える必要があります。結合された応答メッセージ本文は、新しい応答と選択された各応答の部分的なコンテンツ範囲の結合で構成されます。ユニオンが表現の範囲全体で構成される場合、クライアントは、完全な長さを反映するContent-Lengthヘッダーフィールドを含む完全な200（OK）応答であるかのように、結合された応答を処理する必要があります。それ以外の場合、クライアントは一連の連続範囲を次のいずれかとして処理する必要があります。結合された応答が表現のプレフィックスの場合、不完全な200（OK）応答。multipart / byteranges本文を含む単一の206（部分コンテンツ）応答、または複数の206（部分コンテンツ）応答。それぞれにContent-Rangeヘッダーフィールドで示される1つの連続範囲があります。</target>
        </trans-unit>
        <trans-unit id="13df76672f8936d6bfa4c75fdd9352b5d89d02a9" translate="yes" xml:space="preserve">
          <source>A response might transfer only a subrange of the bytes of an entity-
   body, either because the request included one or more Range
   specifications, or because a connection was broken prematurely. After
   several such transfers, a cache might have received several ranges of
   the same entity-body.

   If a cache has a stored non-empty set of subranges for an entity, and
   an incoming response transfers another subrange, the cache MAY
   combine the new subrange with the existing set if both the following
   conditions are met:

      - Both the incoming response and the cache entry have a cache
        validator.

      - The two cache validators match using the strong comparison
        function (see &lt;a href=&quot;#section-13.3.3&quot;&gt;section 13.3.3&lt;/a&gt;).

   If either requirement is not met, the cache MUST use only the most
   recent partial response (based on the Date values transmitted with
   every response, and using the incoming response if these values are
   equal or missing), and MUST discard the other partial information.</source>
          <target state="translated">リクエストに1つ以上のRange指定が含まれていたため、または接続が途中で切断されたために、応答はエンティティ本体のバイトのサブレンジのみを転送する可能性があります。このような転送を数回行った後、キャッシュは同じエンティティ本体の複数の範囲を受け取った可能性があります。キャッシュにエンティティの格納された空でないサブ範囲のセットがあり、着信応答が別のサブ範囲を転送する場合、次の両方の条件を満たす場合、キャッシュは新しいサブ範囲を既存のセットと組み合わせることができます（MAY）。キャッシュエントリにはキャッシュバリデーターがあります。&lt;a href=&quot;#section-13.3.3&quot;&gt;-2&lt;/a&gt;つのキャッシュバリデーターは、強力な比較関数を使用して一致します（セクション13.3.3を参照））。いずれかの要件が満たされない場合、キャッシュは最新の部分応答のみを使用し（すべての応答で送信された日付値に基づき、これらの値が等しいか欠落している場合は着信応答を使用する必要があります）、その他の部分情報を破棄する必要があります。</target>
        </trans-unit>
        <trans-unit id="fd3c0d3780d4efb8123ce73b8830668addce6c7f" translate="yes" xml:space="preserve">
          <source>A response provided by a cache is stale (the expiration time set for it has passed).</source>
          <target state="translated">キャッシュから提供されたレスポンスは陳腐です(キャッシュに設定された有効期限が経過しています)。</target>
        </trans-unit>
        <trans-unit id="ce0f87926e811ddf23f0d196ca75fb63d5c3ead6" translate="yes" xml:space="preserve">
          <source>A response that tells the browser to allow code from any origin to access a resource will include the following:</source>
          <target state="translated">ブラウザがリソースへのアクセスを許可するように指示するレスポンスには、以下のようなものが含まれます。</target>
        </trans-unit>
        <trans-unit id="16c3c1296edc54a60a8b59b30b92efe26a36cd5c" translate="yes" xml:space="preserve">
          <source>A response that tells the browser to allow requesting code from the origin &lt;code&gt;https://developer.mozilla.org&lt;/code&gt; to access a resource will include the following:</source>
          <target state="translated">リソースにアクセスするためにオリジン &lt;code&gt;https://developer.mozilla.org&lt;/code&gt; からのコードのリクエストを許可するようにブラウザに指示する応答には、以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="a2251e4ef7d0bf0a06db2d6ac25abf911ead38c0" translate="yes" xml:space="preserve">
          <source>A response to a &lt;code&gt;HEAD&lt;/code&gt; method &lt;em&gt;should not&lt;/em&gt; have a body. If it has one anyway, that body &lt;strong&gt;must be&lt;/strong&gt; ignored: any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;entity headers&lt;/a&gt; that might describe the erroneous body are instead assumed to describe the response which a similar &lt;code&gt;GET&lt;/code&gt; request would have received.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; メソッドへの応答には本文を&lt;em&gt;含めるべきでは&lt;/em&gt;あり&lt;em&gt;ません&lt;/em&gt;。とにかく1つある場合は、その本文を無視する&lt;strong&gt;必要があります&lt;/strong&gt;。エラーの本文を説明する可能性のある&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;エンティティヘッダー&lt;/a&gt;は、代わりに、同様の &lt;code&gt;GET&lt;/code&gt; リクエストが受信した応答を説明すると見なされます。</target>
        </trans-unit>
        <trans-unit id="99a9acb9401a41dff46ebd4d7c24d2a3d9111ef3" translate="yes" xml:space="preserve">
          <source>A response to a &lt;code&gt;HEAD&lt;/code&gt; method should not have a body. If so, it must be ignored. Even so, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;entity headers&lt;/a&gt; describing the content of the body, like &lt;a href=&quot;../headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; may be included in the response. They don't relate to the body of the &lt;code&gt;HEAD&lt;/code&gt; response, which should be empty, but to the body of similar request using the &lt;a href=&quot;get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method would have returned as a response.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; メソッドへの応答には本文を含めないでください。その場合は、無視する必要があります。それでも、&lt;a href=&quot;../headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt;など、本文のコンテンツを説明する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;エンティティヘッダー&lt;/a&gt;が応答に含まれる場合があります。これらは空であるはずの &lt;code&gt;HEAD&lt;/code&gt; 応答の本文とは関係ありませんが、&lt;a href=&quot;get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;メソッドを使用した同様のリクエストの本文には応答として返されます。</target>
        </trans-unit>
        <trans-unit id="e2a4eab8fbc63e64d63cfaa4c539160dcfdafd03" translate="yes" xml:space="preserve">
          <source>A response to the HEAD method is identical to what an equivalent
   request made with a GET would have been, except it lacks a body.
   This property of HEAD responses can be used to invalidate or update a
   cached GET response if the more efficient conditional GET request
   mechanism is not available (due to no validators being present in the
   stored response) or if transmission of the representation body is not
   desired even if it has changed.

   When a cache makes an inbound HEAD request for a given request target
   and receives a 200 (OK) response, the cache SHOULD update or
   invalidate each of its stored GET responses that could have been
   selected for that request (see &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;).

   For each of the stored responses that could have been selected, if
   the stored response and HEAD response have matching values for any
   received validator fields (ETag and Last-Modified) and, if the HEAD
   response has a Content-Length header field, the value of
   Content-Length matches that of the stored response, the cache SHOULD
   update the stored response as described below; otherwise, the cache
   SHOULD consider the stored response to be stale. 

   If a cache updates a stored response with the metadata provided in a
   HEAD response, the cache MUST:

   o  delete any Warning header fields in the stored response with
      warn-code 1xx (see &lt;a href=&quot;#section-5.5&quot;&gt;Section 5.5&lt;/a&gt;);

   o  retain any Warning header fields in the stored response with
      warn-code 2xx; and,

   o  use other header fields provided in the HEAD response to replace
      all instances of the corresponding header fields in the stored
      response and append new header fields to the stored response's
      header section unless otherwise restricted by the Cache-Control
      header field.</source>
          <target state="translated">HEADメソッドへの応答は、本文が欠落していることを除いて、GETを使用して作成された同等のリクエストと同じです。 HEAD応答のこのプロパティは、より効率的な条件付きGET要求メカニズムが利用できない場合（保存された応答にバリデータが存在しないため）、または表現本体の送信が望まれない場合に、キャッシュされたGET応答を無効化または更新するために使用できます。変更された場合。キャッシュが特定のリクエストターゲットに対してインバウンドHEADリクエストを作成し、200（OK）レスポンスを受信すると、キャッシュは、そのリクエストに対して選択された可能性のある保存された各GETレスポンスを更新または無効化する必要があります（&lt;a href=&quot;#section-4.1&quot;&gt;セクション4.1を&lt;/a&gt;参照）。）。選択された可能性のある格納された応答のそれぞれについて、格納された応答とHEAD応答に、受信したバリデータフィールド（ETagおよびLast-Modified）に一致する値があり、HEAD応答にContent-Lengthヘッダーフィールドがある場合、値Content-Lengthが格納された応答のものと一致する場合、キャッシュは、以下に説明するように格納された応答を更新する必要があります（SHOULD）。それ以外の場合、キャッシュは、格納された応答を古いものと見なす必要があります（SHOULD）。キャッシュがHEAD応答で提供されたメタデータで保存された応答を更新する場合、キャッシュは以下を行わなければなりません：o保存された応答のwarn-code 1xxを持つ警告ヘッダーフィールドを削除します（&lt;a href=&quot;#section-5.5&quot;&gt;セクション5.5を&lt;/a&gt;参照）。）; o warn-code 2xxを使用して、格納された応答の警告ヘッダーフィールドを保持します。そして、HEAD応答で提供される他のヘッダーフィールドを使用して、格納された応答内の対応するヘッダーフィールドのすべてのインスタンスを置き換え、Cache-Controlヘッダーフィールドによる制限がない限り、格納された応答のヘッダーセクションに新しいヘッダーフィールドを追加します。</target>
        </trans-unit>
        <trans-unit id="669f6d87675fe454e2d369ba30faa8e2cfffabb9" translate="yes" xml:space="preserve">
          <source>A response triggering the &quot;Save As&quot; dialog:</source>
          <target state="translated">名前を付けて保存」ダイアログをトリガーとしたレスポンス。</target>
        </trans-unit>
        <trans-unit id="b9e19c47b651e8243cff78fe0138bde2241237d7" translate="yes" xml:space="preserve">
          <source>A returned resource may have one &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header, with the following syntax:</source>
          <target state="translated">返されるリソースには、次の構文で1つの&lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt;ヘッダーが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="95815d7a3c95d6951515bf50a9472dbd82e8e267" translate="yes" xml:space="preserve">
          <source>A schema such as 'http:' or 'https:'. &lt;strong&gt;The colon is required, single quotes shouldn't be used&lt;/strong&gt;. You can also specify data schemas (not recommended).</source>
          <target state="translated">「http：」や「https：」などのスキーマ。&lt;strong&gt;コロンは必須です。一重引用符は使用しないでください&lt;/strong&gt;。データスキーマを指定することもできます（非推奨）。</target>
        </trans-unit>
        <trans-unit id="cbe7c636e6af2d87ce371a4de3a942151e1fda04" translate="yes" xml:space="preserve">
          <source>A schema such as 'http:' or 'https:'. The colon is required. You can also specify data schemas (not recommended).</source>
          <target state="translated">'http:' や 'https:' などのスキーマ。コロンは必須です。データスキーマを指定することもできます(推奨しません)。</target>
        </trans-unit>
        <trans-unit id="d95228bc872e424d1fe8017595ec38304956be44" translate="yes" xml:space="preserve">
          <source>A scheme such as &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt;. The colon is required and scheme should not be quoted. You can also specify data schemes (not recommended).</source>
          <target state="translated">&lt;code&gt;http:&lt;/code&gt; や &lt;code&gt;https:&lt;/code&gt; などのスキーム。コロンは必須であり、スキームは引用しないでください。データスキームを指定することもできます（非推奨）。</target>
        </trans-unit>
        <trans-unit id="b3df65d87ed800b56d06e1302b4935c2d9d8a276" translate="yes" xml:space="preserve">
          <source>A scheme such as &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt;. The colon is required. Unlike other values below, single quotes shouldn't be used. You can also specify data schemes (not recommended).</source>
          <target state="translated">&lt;code&gt;http:&lt;/code&gt; や &lt;code&gt;https:&lt;/code&gt; などのスキーム。コロンが必要です。以下の他の値とは異なり、一重引用符は使用しないでください。データスキームを指定することもできます（非推奨）。</target>
        </trans-unit>
        <trans-unit id="40cd5842c9a4632e241e41e95dbacd3ae50ac805" translate="yes" xml:space="preserve">
          <source>A secure cookie is only sent to the server with an encrypted request over the HTTPS protocol. Even with &lt;code&gt;Secure&lt;/code&gt;, sensitive information should &lt;em&gt;never&lt;/em&gt; be stored in cookies, as they are inherently insecure and this flag can't offer real protection. Starting with Chrome 52 and Firefox 52, insecure sites (&lt;code&gt;http:&lt;/code&gt;) can't set cookies with the &lt;code&gt;Secure&lt;/code&gt; directive.</source>
          <target state="translated">安全なCookieは、HTTPSプロトコルを介した暗号化された要求でのみサーバーに送信されます。でもで &lt;code&gt;Secure&lt;/code&gt; 、機密情報がなければならない&lt;em&gt;決して&lt;/em&gt;、彼らは本質的に安全であり、このフラグが本当の保護を提供することができないとして、クッキーに保存されていないこと。Chrome 52およびFirefox 52以降、安全でないサイト（ &lt;code&gt;http:&lt;/code&gt; ：）は &lt;code&gt;Secure&lt;/code&gt; ディレクティブでCookieを設定できません。</target>
        </trans-unit>
        <trans-unit id="7af3cd8d402a8e9beb152653018d719dd4ad9d78" translate="yes" xml:space="preserve">
          <source>A secure cookie will only be sent to the server when a request is made using SSL and the HTTPS protocol. However, confidential or sensitive information should never be stored or transmitted in HTTP Cookies as the entire mechanism is inherently insecure and this doesn't mean that any information is encrypted, for example.</source>
          <target state="translated">安全なクッキーは、SSLとHTTPSプロトコルを使用してリクエストが行われた場合にのみ、サーバーに送信されます。しかし、メカニズム全体が本質的に安全ではないため、機密情報や機密性の高い情報は決してHTTPクッキーに保存したり送信したりしてはいけませんし、これは例えば情報が暗号化されているわけではありません。</target>
        </trans-unit>
        <trans-unit id="1953290f4d197b8408a6748e64b125663c28443d" translate="yes" xml:space="preserve">
          <source>A server SHOULD return a response with this status code if a request
   included a Range request-header field (&lt;a href=&quot;#section-14.35&quot;&gt;section 14.35&lt;/a&gt;), and none of
   the range-specifier values in this field overlap the current extent
   of the selected resource, and the request did not include an If-Range
   request-header field. (For byte-ranges, this means that the first-
   byte-pos of all of the byte-range-spec values were greater than the
   current length of the selected resource.)

   When this status code is returned for a byte-range request, the
   response SHOULD include a Content-Range entity-header field
   specifying the current length of the selected resource (see &lt;a href=&quot;#section-14.16&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;). This response MUST NOT use the multipart/byteranges content-
   type.</source>
          <target state="translated">リクエストにRangeリクエストヘッダーフィールド（&lt;a href=&quot;#section-14.35&quot;&gt;セクション14.35&lt;/a&gt;）が含まれていて、このフィールドのどの範囲指定子の値も選択されたリソースの現在の範囲と重複しておらず、リクエストが失敗した場合、サーバーはこのステータスコードで応答を返す必要があります（SHOULD ）。 If-Rangeリクエストヘッダーフィールドを含めます。 （バイト範囲の場合、これは、すべてのバイト範囲仕様値の最初のバイト位置が、選択されたリソースの現在の長さよりも大きかったことを意味します。）このステータスコードがバイト範囲要求に対して返されると、応答には、選択されたリソースの現在の長さを指定するContent-Rangeエンティティヘッダーフィールドを含める必要があります（&lt;a href=&quot;#section-14.16&quot;&gt;セクション&lt;/a&gt;&lt;a href=&quot;#section-14.16&quot;&gt;14.16を&lt;/a&gt;参照）。この応答はmultipart / byteranges content-typeを使用してはなりません（MUST NOT）。</target>
        </trans-unit>
        <trans-unit id="e0f49674d51f115dc57ea58b6c6057d6e1f1f18a" translate="yes" xml:space="preserve">
          <source>A server is in the position to save personal data about a user's
   requests over time, which might identify their reading patterns or
   subjects of interest.  In particular, log information gathered at an
   intermediary often contains a history of user agent interaction,
   across a multitude of sites, that can be traced to individual users.

   HTTP log information is confidential in nature; its handling is often
   constrained by laws and regulations.  Log information needs to be
   securely stored and appropriate guidelines followed for its analysis.
   Anonymization of personal information within individual entries
   helps, but it is generally not sufficient to prevent real log traces
   from being re-identified based on correlation with other access
   characteristics.  As such, access traces that are keyed to a specific
   client are unsafe to publish even if the key is pseudonymous. 

   To minimize the risk of theft or accidental publication, log
   information ought to be purged of personally identifiable
   information, including user identifiers, IP addresses, and
   user-provided query parameters, as soon as that information is no
   longer necessary to support operational needs for security, auditing,
   or fraud control.</source>
          <target state="translated">サーバーは、ユーザーの読書パターンや興味のあるテーマを特定する可能性のある、ユーザーのリクエストに関する個人データを経時的に保存する立場にある。特に、中間機関で収集されたログ情報には、多くの場合、多数のサイトにまたがるユーザエージェントのインタラクションの履歴が含まれており、個々のユーザを追跡することができます。HTTP ログ情報は本質的に機密情報であり、その取り扱いはしばしば法律や規制によって制約されます。ログ情報は安全に保存され、分析のために適切なガイドラインに従う必要があります。個々のエントリ内の個人情報の匿名化は役立ちますが、実際のログトレースが他のアクセス特性との相関関係に基づいて再特定されるのを防ぐには、一般的には十分ではありません。そのため、特定のクライアントにキーを設定したアクセストレースは、たとえキーが仮名であっても公開することは安全ではありません。盗難や偶発的な公開のリスクを最小限に抑えるために、ログ情報は、セキュリティ、監査、不正管理のための運用上の必要性をサポートするために、ユーザー識別子、IPアドレス、ユーザーが提供したクエリパラメータなどの個人を特定できる情報が不要になったら、すぐに削除されるべきです。</target>
        </trans-unit>
        <trans-unit id="09bccdb2c6a511f29817abf1fc56652b7723e836" translate="yes" xml:space="preserve">
          <source>A server is in the position to save personal data about a user's
   requests which might identify their reading patterns or subjects of
   interest. This information is clearly confidential in nature and its
   handling can be constrained by law in certain countries. People using
   the HTTP protocol to provide data are responsible for ensuring that
   such material is not distributed without the permission of any
   individuals that are identifiable by the published results.</source>
          <target state="translated">サーバーは、ユーザーの読書パターンや興味のあるテーマを特定する可能性のあるユーザーのリクエストに関する個人データを保存する立場にあります。この情報は本質的に明らかに機密情報であり、その取り扱いは特定の国では法律によって制限されることがあります。データを提供するためにHTTPプロトコルを使用している人は、公開された結果によって識別可能な個人の許可なしにそのような資料が配布されないようにする責任があります。</target>
        </trans-unit>
        <trans-unit id="ec687f3c8448a18d04b2f853d94efde481053651" translate="yes" xml:space="preserve">
          <source>A server is not necessarily a single machine, but several server software instances can be hosted on the same machine. With HTTP/1.1 and the &lt;a href=&quot;headers/host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; header, they may even share the same IP address.</source>
          <target state="translated">サーバーは必ずしも単一のマシンである必要はありませんが、複数のサーバーソフトウェアインスタンスを同じマシンでホストできます。HTTP / 1.1と&lt;a href=&quot;headers/host&quot;&gt; &lt;code&gt;Host&lt;/code&gt; &lt;/a&gt;ヘッダーを使用すると、同じIPアドレスを共有することもできます。</target>
        </trans-unit>
        <trans-unit id="d019112f6091b0eed2debdbb713a8f052cf5222e" translate="yes" xml:space="preserve">
          <source>A server is not necessarily a single machine, but several servers can be hosted on the same machine. With HTTP/1.1 and the &lt;a href=&quot;headers/host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; header, they may even share the same IP address.</source>
          <target state="translated">サーバーは必ずしも単一のマシンである必要はありませんが、複数のサーバーを同じマシンでホストできます。HTTP / 1.1と&lt;a href=&quot;headers/host&quot;&gt; &lt;code&gt;Host&lt;/code&gt; &lt;/a&gt;ヘッダーを使用すると、同じIPアドレスを共有することもできます。</target>
        </trans-unit>
        <trans-unit id="b79873bcb71a9cedddcc30f39182301545811028" translate="yes" xml:space="preserve">
          <source>A server isn't necessarily a physical machine: several servers can reside on the same physical machine. Or, one server can be handled by several machines, cooperating to produce the answer or balancing the load of the requests between them. The key point is that semantically &lt;em&gt;one domain name represents one single server&lt;/em&gt;.</source>
          <target state="translated">サーバーは必ずしも物理マシンである必要はありません。複数のサーバーが同じ物理マシン上に存在できます。または、1台のサーバーを複数のマシンで処理して、協調して応答を生成したり、サーバー間の要求の負荷を分散したりすることもできます。重要な点は、意味的に&lt;em&gt;1つのドメイン名が1つの単一サーバーを表すということ&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="f0b526e8ef3de96dc3fb291521c6f4a105213fa5" translate="yes" xml:space="preserve">
          <source>A server may also send the header as part of a &lt;a href=&quot;../status/426&quot;&gt;&lt;code&gt;426&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Upgrade Required&lt;/code&gt; response, to indicate that the server won't perform the request using the current protocol, but might do so if the protocol is changed. The client can then request a protocol change using the process above.</source>
          <target state="translated">サーバーは、&lt;a href=&quot;../status/426&quot;&gt; &lt;code&gt;426&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Upgrade Required&lt;/code&gt; 応答の一部としてヘッダーを送信して、サーバーが現在のプロトコルを使用して要求を実行しないことを示すこともできますが、プロトコルが変更された場合は実行する可能性があります。その後、クライアントは上記のプロセスを使用してプロトコルの変更を要求できます。</target>
        </trans-unit>
        <trans-unit id="dfac30184b9556e9ef555e2af061b31b9e243352" translate="yes" xml:space="preserve">
          <source>A server receives a request for &lt;code&gt;http://www.example.org/whaddup&lt;/code&gt; (when the canonical domain is example.org)</source>
          <target state="translated">サーバーが &lt;code&gt;http://www.example.org/whaddup&lt;/code&gt; のリクエストを受信します（正規ドメインがexample.orgの場合）。</target>
        </trans-unit>
        <trans-unit id="6385a8f83518f5bb31e0c309e5837964daeac0d1" translate="yes" xml:space="preserve">
          <source>A server receiving a PATCH request with an unsupported media type could reply with &lt;a href=&quot;../status/415&quot;&gt;&lt;code&gt;415&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Unsupported Media Type&lt;/code&gt; and an Accept-Patch header referencing one or more supported media types.</source>
          <target state="translated">サポートされていないメディアタイプでPATCH要求を受信したサーバーは、&lt;a href=&quot;../status/415&quot;&gt; &lt;code&gt;415&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Unsupported Media Type&lt;/code&gt; と、1つ以上のサポートされているメディアタイプを参照するAccept-Patchヘッダーで応答できます。</target>
        </trans-unit>
        <trans-unit id="f3ffc5be989c3040f832f85d28f183c24d1ebfbb" translate="yes" xml:space="preserve">
          <source>A server should send the &quot;close&quot; &lt;a href=&quot;../headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header field in the response, since &lt;code&gt;408&lt;/code&gt; implies that the server has decided to close the connection rather than continue waiting.</source>
          <target state="translated">&lt;code&gt;408&lt;/code&gt; は、サーバーが待機を続けるのではなく、接続を閉じることを決定したことを意味するため、サーバーは応答で「閉じる」&lt;a href=&quot;../headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;ヘッダーフィールドを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="23fcc0e82756bfddc3111906b38afc8f67f763c0" translate="yes" xml:space="preserve">
          <source>A server supporting partial downloads broadcasts this by sending the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; header. Once this happens, the client can resume a download by sending a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Ranges&quot;&gt;&lt;code&gt;Ranges&lt;/code&gt;&lt;/a&gt; header with the missing ranges:</source>
          <target state="translated">部分的なダウンロードをサポートするサーバーは、&lt;a href=&quot;headers/accept-ranges&quot;&gt; &lt;code&gt;Accept-Ranges&lt;/code&gt; &lt;/a&gt;ヘッダーを送信してこれをブロードキャストします。これが発生すると、クライアントは不足している範囲を含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Ranges&quot;&gt; &lt;code&gt;Ranges&lt;/code&gt; &lt;/a&gt;ヘッダーを送信して、ダウンロードを再開できます。</target>
        </trans-unit>
        <trans-unit id="6f9b03e6063cc4b5ce8870c57b5b3f1fefcf329b" translate="yes" xml:space="preserve">
          <source>A server that receives an incomplete request message, usually due to
   a canceled request or a triggered timeout exception, MAY send an
   error response prior to closing the connection.

   A client that receives an incomplete response message, which can
   occur when a connection is closed prematurely or when decoding a
   supposedly chunked transfer coding fails, MUST record the message as
   incomplete.  Cache requirements for incomplete responses are defined
   in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC7234]&lt;/a&gt;.

   If a response terminates in the middle of the header section (before
   the empty line is received) and the status code might rely on header
   fields to convey the full meaning of the response, then the client
   cannot assume that meaning has been conveyed; the client might need
   to repeat the request in order to determine what action to take next.

   A message body that uses the chunked transfer coding is incomplete if
   the zero-sized chunk that terminates the encoding has not been
   received.  A message that uses a valid Content-Length is incomplete
   if the size of the message body received (in octets) is less than the
   value given by Content-Length.  A response that has neither chunked
   transfer coding nor Content-Length is terminated by closure of the
   connection and, thus, is considered complete regardless of the number
   of message body octets received, provided that the header section was
   received intact.</source>
          <target state="translated">通常、キャンセルされた要求またはトリガーされたタイムアウト例外が原因で、不完全な要求メッセージを受信するサーバーは、接続を閉じる前にエラー応答を送信できます（MAY）。不完全な応答メッセージを受信するクライアントは、接続が途中で閉じられた場合、またはチャンクされたと思われる転送コーディングのデコードが失敗した場合に発生する可能性があり、メッセージを不完全として記録する必要があります。不完全な応答のキャッシュ要件は&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;、[RFC7234]のセクション3で&lt;/a&gt;定義されています。ヘッダーセクションの途中で（空の行が受信される前に）応答が終了し、ステータスコードがヘッダーフィールドに依存して応答の完全な意味を伝える場合、クライアントはその意味が伝えられたと想定できません。クライアントは、次に実行するアクションを決定するために、要求を繰り返す必要がある場合があります。エンコードを終了するサイズがゼロのチャンクが受信されていない場合、チャンク転送コーディングを使用するメッセージ本文は不完全です。受信したメッセージ本文のサイズ（オクテット単位）がContent-Lengthで指定された値より小さい場合、有効なContent-Lengthを使用するメッセージは不完全です。チャンク転送コーディングもContent-Lengthもない応答は、接続のクローズによって終了し、したがって、ヘッダーセクションがそのまま受信された場合、受信したメッセージ本文オクテットの数に関係なく、完全であると見なされます。</target>
        </trans-unit>
        <trans-unit id="a058fcef10ecb10e40930fc393c822b8da706b5f" translate="yes" xml:space="preserve">
          <source>A server to give access to the document, an early version of &lt;em&gt;httpd&lt;/em&gt;.</source>
          <target state="translated">ドキュメントへのアクセスを提供するサーバー。初期バージョンの&lt;em&gt;httpd&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="5428d9f2d224f7b0136e57c085942bc52a277388" translate="yes" xml:space="preserve">
          <source>A sha256, sha384 or sha512 hash of scripts or styles. The use of this source consists of two portions separated by a dash: the encryption algorithm used to create the hash and the base64-encoded hash of the script or style. When generating the hash, don't include the &amp;lt;script&amp;gt; or &amp;lt;style&amp;gt; tags and note that capitalization and whitespace matter, including leading or trailing whitespace. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. In CSP 2.0 this applied only to inline scripts. CSP 3.0 allows it in the case of &lt;code&gt;script-src&lt;/code&gt; for external scripts.</source>
          <target state="translated">スクリプトまたはスタイルのsha256、sha384、またはsha512ハッシュ。このソースの使用は、ダッシュで区切られた2つの部分で構成されています。ハッシュの作成に使用される暗号化アルゴリズムと、スクリプトまたはスタイルのbase64エンコードされたハッシュです。ハッシュを生成するときは、&amp;lt;script&amp;gt;または&amp;lt;style&amp;gt;タグを含めないでください。また、先頭と末尾の空白を含め、大文字と空白が重要であることに注意してください。例については、&lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;安全でないインラインスクリプト&lt;/a&gt;をご覧ください。CSP 2.0では、これはインラインスクリプトにのみ適用されました。CSP 3.0では、外部スクリプトの &lt;code&gt;script-src&lt;/code&gt; の場合にそれを許可しています。</target>
        </trans-unit>
        <trans-unit id="b0be84bce742baeb2d49ccf396ba5e30b04dc8c9" translate="yes" xml:space="preserve">
          <source>A sha256, sha384 or sha512 hash of scripts or styles. The use of this source consists of two portions separated by a dash: the encryption algorithm used to create the hash and the base64-encoded hash of the script or style. When generating the hash, don't include the &amp;lt;script&amp;gt; or &amp;lt;style&amp;gt; tags and note that capitalization and whitespace matter, including leading or trailing whitespace. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. In CSP 2.0, this applied only to inline scripts. CSP 3.0 allows it in the case of &lt;code&gt;script-src&lt;/code&gt; for external scripts.</source>
          <target state="translated">スクリプトまたはスタイルのsha256、sha384、またはsha512ハッシュ。このソースの使用は、ダッシュで区切られた2つの部分で構成されます。ハッシュの作成に使用される暗号化アルゴリズムと、スクリプトまたはスタイルのbase64でエンコードされたハッシュです。ハッシュを生成するときは、&amp;lt;script&amp;gt;または&amp;lt;style&amp;gt;タグを含めないでください。大文字と小文字、および先頭または末尾の空白を含む空白が重要であることに注意してください。例については、&lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;安全でないインラインスクリプト&lt;/a&gt;を参照してください。CSP 2.0では、これはインラインスクリプトにのみ適用されていました。CSP 3.0では、外部スクリプトの &lt;code&gt;script-src&lt;/code&gt; の場合にそれが可能です。</target>
        </trans-unit>
        <trans-unit id="effe3f436253f2fb4b93f88cfbc11ed917fb2ccb" translate="yes" xml:space="preserve">
          <source>A shared cache MUST NOT use a cached response to a request with an
   Authorization header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7235]&lt;/a&gt;) to satisfy any
   subsequent request unless a cache directive that allows such
   responses to be stored is present in the response.

   In this specification, the following Cache-Control response
   directives (&lt;a href=&quot;#section-5.2.2&quot;&gt;Section 5.2.2&lt;/a&gt;) have such an effect: must-revalidate,
   public, and s-maxage. 

   Note that cached responses that contain the &quot;must-revalidate&quot; and/or
   &quot;s-maxage&quot; response directives are not allowed to be served stale
   (&lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;) by shared caches.  In particular, a response with
   either &quot;max-age=0, must-revalidate&quot; or &quot;s-maxage=0&quot; cannot be used to
   satisfy a subsequent request without revalidating it on the origin
   server.</source>
          <target state="translated">共有キャッシュは、Authorizationヘッダーフィールド（&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;[RFC7235]のセクション4.2&lt;/a&gt;）を持つ要求へのキャッシュされた応答を使用して、そのような応答の格納を許可するキャッシュディレクティブが応答に存在しない限り、後続の要求を満たすことはできません。この仕様では、次のCache-Control応答ディレクティブ（&lt;a href=&quot;#section-5.2.2&quot;&gt;セクション5.2.2&lt;/a&gt;）がそのような効果を持っています：must-revalidate、public、およびs-maxage。 「must-revalidate」または「s-maxage」応答ディレクティブを含むキャッシュされた応答は、古くなった状態で提供されることが許可されないことに注意してください（&lt;a href=&quot;#section-4.2.4&quot;&gt;セクション4.2.4&lt;/a&gt;）共有キャッシュ。特に、「max-age = 0、must-revalidate」または「s-maxage = 0」のいずれかの応答は、オリジンサーバーで再検証しない限り、後続の要求を満たすために使用できません。</target>
        </trans-unit>
        <trans-unit id="6723cf8edd03849b4cdc5d908be434852f344b77" translate="yes" xml:space="preserve">
          <source>A shared cache is a cache that stores responses to be reused by more than one user. For example, an ISP or your company might have set up a web proxy as part of its local network infrastructure to serve many users so that popular resources are reused a number of times, reducing network traffic and latency.</source>
          <target state="translated">共有キャッシュは、複数のユーザーが再利用するためのレスポンスを保存するキャッシュです。例えば、ISP や企業がローカルネットワークインフラストラクチャの一部としてウェブプロキシを設定して多くのユーザーにサービスを提供し、人気のあるリソースを何度も再利用してネットワークトラフィックとレイテンシを減らすようにしている場合などが考えられます。</target>
        </trans-unit>
        <trans-unit id="c2b2979df34c75249acdcbaead32af4206e98c1f" translate="yes" xml:space="preserve">
          <source>A significant difference between HTTP/1.1 and earlier versions of
   HTTP is that persistent connections are the default behavior of any
   HTTP connection. That is, unless otherwise indicated, the client
   SHOULD assume that the server will maintain a persistent connection,
   even after error responses from the server.

   Persistent connections provide a mechanism by which a client and a
   server can signal the close of a TCP connection. This signaling takes
   place using the Connection header field (&lt;a href=&quot;#section-14.10&quot;&gt;section 14.10&lt;/a&gt;). Once a close
   has been signaled, the client MUST NOT send any more requests on that
   connection.</source>
          <target state="translated">HTTP / 1.1と以前のバージョンのHTTPの大きな違いは、永続的な接続がすべてのHTTP接続のデフォルトの動作であることです。つまり、特に明記しない限り、クライアントは、サーバーからのエラー応答の後でも、サーバーが永続的な接続を維持すると想定する必要があります（SHOULD）。永続的な接続は、クライアントとサーバーがTCP接続の終了を通知できるメカニズムを提供します。このシグナリングは、接続ヘッダーフィールド（&lt;a href=&quot;#section-14.10&quot;&gt;セクション14.10&lt;/a&gt;）を使用して行われます。クローズが通知されたら、クライアントはその接続でこれ以上リクエストを送信してはなりません（MUST NOT）。</target>
        </trans-unit>
        <trans-unit id="fc833fea6c576628123c7be8083a40beb8ce29b5" translate="yes" xml:space="preserve">
          <source>A simple form using the default &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; content type:</source>
          <target state="translated">デフォルトの &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; コンテンツタイプを使用した単純なフォーム：</target>
        </trans-unit>
        <trans-unit id="c7b39b34d060373154765396af385c3d062ca369" translate="yes" xml:space="preserve">
          <source>A simple protocol to exchange these documents, the &lt;em&gt;HypertText Transfer Protocol &lt;/em&gt;(HTTP).</source>
          <target state="translated">これらのドキュメントを交換するための単純なプロトコルである&lt;em&gt;HypertText Transfer Protocol&lt;/em&gt;（HTTP）。</target>
        </trans-unit>
        <trans-unit id="fe6b8df10d2d0221c0d8b10a29444ba2522da8aa" translate="yes" xml:space="preserve">
          <source>A single, precise &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME type&lt;/a&gt;, like &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;text/html&lt;/code&gt; のような単一の正確な&lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIMEタイプ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4deb257d47824330583bad2d749145dc206117e9" translate="yes" xml:space="preserve">
          <source>A specific document is called a &lt;em&gt;resource&lt;/em&gt;. When a client wants to obtain a resource, the client requests it using its URL. The server uses this URL to choose one of the variants it provides &amp;ndash; each variant being called a &lt;em&gt;representation&lt;/em&gt; &amp;ndash; and returns a specific representation to the client. The overall resource, as well as each of the representations, have a specific URL. How a specific representation is chosen when the resource is called is determined by &lt;em&gt;content negotiation&lt;/em&gt; and there are several ways of negotiating between the client and the server.</source>
          <target state="translated">特定のドキュメントは&lt;em&gt;リソース&lt;/em&gt;と呼ばれます。クライアントがリソースを取得したい場合、クライアントはそのURLを使用してリソースを要求します。サーバーはこのURLを使用して、提供するバリアントの1つ（各バリアントは&lt;em&gt;表現&lt;/em&gt;と呼ばれます）を選択し、特定の表現をクライアントに返します。リソース全体、および各表現には、特定のURLがあります。リソースが呼び出されたときに特定の表現がどのように選択されるかは、&lt;em&gt;コンテンツネゴシエーション&lt;/em&gt;によって決定され、クライアントとサーバーの間でネゴシエーションする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="b779f5a10d17e9e595f84888aae03e305b6d164d" translate="yes" xml:space="preserve">
          <source>A specific document is called a &lt;em&gt;resource&lt;/em&gt;. When a client wants to obtain it, it requests it using its URL. The server uses this URL to choose one of the variants it provides &amp;ndash; each variant being called a &lt;em&gt;representation&lt;/em&gt; &amp;ndash; and returns this specific representation to the client. The overall resource, as well as each of the representations, have a specific URL. How a specific representation is chosen when the resource is called is determined by &lt;em&gt;content negotiation&lt;/em&gt; and there are several ways of negotiating between the client and the server.</source>
          <target state="translated">特定のドキュメントは&lt;em&gt;リソース&lt;/em&gt;と呼ばれます。クライアントはそれを取得したい場合、そのURLを使用して要求します。サーバーはこのURLを使用して、提供するバリアントの1つを選択し（各バリアントは&lt;em&gt;表現&lt;/em&gt;と呼ばれます）、この特定の表現をクライアントに返します。リソース全体と各表現には、特定のURLがあります。リソースが呼び出されたときに特定の表現がどのように選択されるかは、&lt;em&gt;コンテンツネゴシエーション&lt;/em&gt;によって決まり、クライアントとサーバーの間でネゴシエートする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="ceace1a8903945561dd351633e2b54bd5662380b" translate="yes" xml:space="preserve">
          <source>A specific incompatibility exists in some versions of the Safari web browser, whereby if a Content Security Policy header is set, but not a Same Origin header, the browser will block self-hosted content and off-site content, and incorrectly report that this is due to a the Content Security Policy not allowing the content.</source>
          <target state="translated">特定の非互換性は、Safariウェブブラウザのいくつかのバージョンに存在し、それによって、コンテンツセキュリティポリシーのヘッダーが設定されているが、同じ起源のヘッダーではない場合、ブラウザは、セルフホスティングされたコンテンツとオフサイトコンテンツをブロックし、これはコンテンツを許可していないコンテンツセキュリティポリシーに起因するものであると誤って報告します。</target>
        </trans-unit>
        <trans-unit id="c9d5d6a9b1ff08cc641c31611f35b864c75165ef" translate="yes" xml:space="preserve">
          <source>A specific kind of URI that directly embeds the resource it represents. Data URIs are very convenient, but have some caveats.</source>
          <target state="translated">それが表すリソースを直接埋め込む特定の種類のURI。データURIは非常に便利ですが、いくつかの注意点があります。</target>
        </trans-unit>
        <trans-unit id="80a8fdf6c2788b6b9978669c875fa2c7ee77f30d" translate="yes" xml:space="preserve">
          <source>A specific kind of URIs that directly embeds the resource it represents. Data URIs are very convenient, but have some caveats.</source>
          <target state="translated">それが表すリソースを直接埋め込む特定の種類のURI。データURIは非常に便利ですが、いくつかの注意点があります。</target>
        </trans-unit>
        <trans-unit id="6717e7d4b911da2b4b4a18d74011b1145e1b78df" translate="yes" xml:space="preserve">
          <source>A specific kind of URIs, data URIs, embed the resource itself inside the identifier.</source>
          <target state="translated">特定の種類のURIであるデータURIは、識別子の中にリソース自体を埋め込む。</target>
        </trans-unit>
        <trans-unit id="fa9c947ce55668387be7bc6267a41295eae128cc" translate="yes" xml:space="preserve">
          <source>A specification such as this thrives on piercing critical review and
   withers from apathetic neglect.  The authors gratefully acknowledge
   the contributions of the following people, whose insights were so
   valuable at every stage of our work.

   Contributors to &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;

   Terry Allen, Harald Alvestrand, Jim Amsden, Becky Anderson, Alan
   Babich, Sanford Barr, Dylan Barrell, Bernard Chester, Tim Berners-
   Lee, Dan Connolly, Jim Cunningham, Ron Daniel, Jr., Jim Davis, Keith
   Dawson, Mark Day, Brian Deen, Martin Duerst, David Durand, Lee
   Farrell, Chuck Fay, Wesley Felter, Roy Fielding, Mark Fisher, Alan
   Freier, George Florentine, Jim Gettys, Phill Hallam-Baker, Dennis
   Hamilton, Steve Henning, Mead Himelstein, Alex Hopmann, Andre van der
   Hoek, Ben Laurie, Paul Leach, Ora Lassila, Karen MacArthur, Steven
   Martin, Larry Masinter, Michael Mealling, Keith Moore, Thomas Narten,
   Henrik Nielsen, Kenji Ota, Bob Parker, Glenn Peterson, Jon Radoff,
   Saveen Reddy, Henry Sanders, Christopher Seiwald, Judith Slein, Mike
   Spreitzer, Einar Stefferud, Greg Stein, Ralph Swick, Kenji Takahashi,
   Richard N. Taylor, Robert Thau, John Turner, Sankar Virdhagriswaran,
   Fabio Vitali, Gregory Woodhouse, and Lauren Wood.

   Two from this list deserve special mention.  The contributions by
   Larry Masinter have been invaluable; he both helped the formation of
   the working group and patiently coached the authors along the way.
   In so many ways he has set high standards that we have toiled to
   meet.  The contributions of Judith Slein were also invaluable; by
   clarifying the requirements and in patiently reviewing version after
   version, she both improved this specification and expanded our minds
   on document management.

   We would also like to thank John Turner for developing the XML DTD.

   The authors of &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt; were Yaron Goland, Jim Whitehead, A. Faizi,
   Steve Carter, and D. Jensen.  Although their names had to be removed
   due to IETF author count restrictions, they can take credit for the
   majority of the design of WebDAV.

   Additional Acknowledgements for This Specification

   Significant contributors of text for this specification are listed as
   contributors in the section below.  We must also gratefully
   acknowledge Geoff Clemm, Joel Soderberg, and Dan Brotsky for hashing
   out specific text on the list or in meetings.  Joe Hildebrand and
   Cullen Jennings helped close many issues.  Barry Lind described an
   additional security consideration and Cullen Jennings provided text 

   for that consideration.  Jason Crawford tracked issue status for this
   document for a period of years, followed by Elias Sinderson.</source>
          <target state="translated">このような仕様は、鋭い批評的レビューで繁栄し、無関心な無視から衰退します。著者は以下の人々の貢献に感謝します。彼らの洞察は私たちの仕事のあらゆる段階でとても価値がありました。&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;への貢献者 テリー・アレン、ハラルド・アルベストランド、ジム・アムスデン、ベッキー・アンダーソン、アラン・バビッチ、サンフォード・バー、ディラン・バレル、バーナード・チェスター、ティム・バーナーズ・リー、ダン・コノリー、ジム・カニンガム、ロン・ダニエル、ジュニア、ジム・デイビス、キース・ドーソン、マーク・デイ、ブライアンディーン、マーティンデュエルスト、デビッドデュランド、リーファレル、チャックフェイ、ウェズリーフェルター、ロイフィールディング、マークフィッシャー、アランフレイアー、ジョージフロレンティン、ジムゲティス、フィルハラムベイカー、デニスハミルトン、スティーブヘニング、ミードヒメルスタイン、アレックスホップマン、アンドレファンデルホーク、ベンローリー、ポールリーチ、オララシラ、カレンマッカーサー、スティーブンマーティン、ラリーマジンター、マイケルミーリング、キースムーア、トーマスナルテン、ヘンリックニールセン、太田健二、ボブパーカー、グレンピーターソン、ジョンラドフ、セーベンレディ、ヘンリー・サンダース、クリストファー・セイバード、ジュディス・スライン、マイク・シュプリッツァー、アイナー・シュテファード、グレッグ・スタイン、ラルフ・スウィック、高橋健司、Richard N. Taylor、Robert Thau、John Turner、Sankar Virdhagriswaran、Fabio Vitali、Gregory Woodhouse、およびLauren Wood。このリストから2つは特筆に値する。 Larry Masinterによる貢献は非常に貴重です。彼はどちらもワーキンググループの設立を助け、途中で著者を辛抱強く指導しました。非常に多くの点で、彼は私たちが満たすために努力した高い基準を設定しています。ジュディス・スラインの貢献も非常に貴重でした。要件を明確にし、バージョンごとに根気よくレビューすることで、彼女はこの仕様を改善し、ドキュメント管理への意識を拡大しました。また、XML DTDを開発してくれたJohn Turnerにも感謝します。の著者このリストから2つは特筆に値する。 Larry Masinterによる貢献は非常に貴重です。彼はどちらもワーキンググループの設立を助け、途中で著者を辛抱強く指導しました。非常に多くの点で、彼は私たちが満たすために努力した高い基準を設定しています。ジュディス・スラインの貢献も非常に貴重でした。要件を明確にし、バージョンごとに根気よくレビューすることで、彼女はこの仕様を改善し、ドキュメント管理への意識を拡大しました。また、XML DTDを開発してくれたJohn Turnerにも感謝します。の著者このリストから2つは特筆に値する。 Larry Masinterによる貢献は非常に貴重です。彼はどちらもワーキンググループの設立を助け、途中で著者を辛抱強く指導しました。非常に多くの点で、彼は私たちが満たすために努力した高い基準を設定しています。ジュディス・スラインの貢献も非常に貴重でした。要件を明確にし、バージョンごとに根気よくレビューすることで、彼女はこの仕様を改善し、ドキュメント管理への意識を拡大しました。また、XML DTDを開発してくれたJohn Turnerにも感謝します。の著者非常に多くの点で、彼は私たちが満たすために努力した高い基準を設定しています。ジュディス・スラインの貢献も非常に貴重でした。要件を明確にし、バージョンごとに根気よくレビューすることで、彼女はこの仕様を改善し、ドキュメント管理への意識を拡大しました。また、XML DTDを開発してくれたJohn Turnerにも感謝します。の著者非常に多くの点で、彼は私たちが満たすために努力した高い基準を設定しています。ジュディス・スラインの貢献も非常に貴重でした。要件を明確にし、バージョンごとに根気よくレビューすることで、彼女はこの仕様を改善し、ドキュメント管理への意識を拡大しました。また、XML DTDを開発してくれたJohn Turnerにも感謝します。の著者&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;ヤロンゴランド、ジムホワイトヘッド、A。ファイジ、スティーブカーター、D。ジェンセンでした。それらの名前はIETFの作成者数の制限のために削除する必要がありましたが、WebDAVの設計の大部分は信用できます。この仕様の追加の謝辞この仕様のテキストの重要な貢献者は、以下のセクションに貢献者としてリストされています。また、リストまたは会議で特定のテキストをハッシュ化したことについて、ジェフクレム、ジョエルソダーバーグ、ダンブロツキーに感謝の意を表する必要があります。Joe HildebrandとCullen Jenningsは、多くの問題の解決に貢献しました。バリーリンドはセキュリティに関する追加の考慮事項について説明し、カレンジェニングスはその考慮事項についてテキストを提供しました。Jason Crawfordはこのドキュメントの問題のステータスを数年間追跡し、続いてElias Sindersonが追跡しました。</target>
        </trans-unit>
        <trans-unit id="243ac7b5d0c4b7135957ced81f079042072b4147" translate="yes" xml:space="preserve">
          <source>A standardized version of this header is the HTTP &lt;a href=&quot;forwarded&quot;&gt;&lt;code&gt;Forwarded&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">このヘッダーの標準化されたバージョンは、HTTP &lt;a href=&quot;forwarded&quot;&gt; &lt;code&gt;Forwarded&lt;/code&gt; &lt;/a&gt;ヘッダーです。</target>
        </trans-unit>
        <trans-unit id="d5732080026806544aacb362bb381344fc069b68" translate="yes" xml:space="preserve">
          <source>A status code line is also sent at the beginning of the response, allowing the browser itself to understand the success or failure of the request and to adapt its behavior in consequence (like in updating or using its local cache in a specific way)</source>
          <target state="translated">レスポンスの最初にステータスコードの行が送られ、ブラウザ自身がリクエストの成功か失敗かを理解し、その結果として (特定の方法でローカルキャッシュを更新したり使用したりするように)動作を適応させることができます。</target>
        </trans-unit>
        <trans-unit id="c8e08ba45f9595801714cdefafd3faea76d549c5" translate="yes" xml:space="preserve">
          <source>A status message, a non-authoritative short description of the status code.</source>
          <target state="translated">ステータスメッセージ、ステータスコードの非権威的な短い記述。</target>
        </trans-unit>
        <trans-unit id="8af24e7123d43765daa487b6cb3e5b3c4417b1a2" translate="yes" xml:space="preserve">
          <source>A stream error is an error related to a specific stream that does not
   affect processing of other streams.

   An endpoint that detects a stream error sends a RST_STREAM frame
   (&lt;a href=&quot;#section-6.4&quot;&gt;Section 6.4&lt;/a&gt;) that contains the stream identifier of the stream where
   the error occurred.  The RST_STREAM frame includes an error code that
   indicates the type of error.

   A RST_STREAM is the last frame that an endpoint can send on a stream.
   The peer that sends the RST_STREAM frame MUST be prepared to receive
   any frames that were sent or enqueued for sending by the remote peer.
   These frames can be ignored, except where they modify connection
   state (such as the state maintained for header compression
   (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;) or flow control).

   Normally, an endpoint SHOULD NOT send more than one RST_STREAM frame
   for any stream.  However, an endpoint MAY send additional RST_STREAM
   frames if it receives frames on a closed stream after more than a
   round-trip time.  This behavior is permitted to deal with misbehaving
   implementations. 

   To avoid looping, an endpoint MUST NOT send a RST_STREAM in response
   to a RST_STREAM frame.</source>
          <target state="translated">ストリームエラーは、他のストリームの処理に影響を与えない特定のストリームに関連するエラーです。ストリームエラーを検出したエンドポイントは、エラーが発生したストリームのストリーム識別子を含むRST_STREAMフレーム（&lt;a href=&quot;#section-6.4&quot;&gt;セクション6.4&lt;/a&gt;）を送信します。 RST_STREAMフレームには、エラーのタイプを示すエラーコードが含まれています。 RST_STREAMは、エンドポイントがストリームで送信できる最後のフレームです。 RST_STREAMフレームを送信するピアは、リモートピアによって送信されるために送信またはキューに入れられたフレームを受信する準備ができている必要があります。これらのフレームは、接続状態（ヘッダー圧縮のために維持される状態（&lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3&lt;/a&gt;）など）を変更する場合を除いて、無視できます。）またはフロー制御）。通常、エンドポイントは、ストリームに対して複数のRST_STREAMフレームを送信するべきではありません（SHOULDNOT）。ただし、エンドポイントは、ラウンドトリップ時間を超えてクローズドストリームでフレームを受信した場合、追加のRST_STREAMフレームを送信してもよい[MAY]。この動作は、不正な実装に対処するために許可されています。ループを回避するために、エンドポイントはRST_STREAMフレームに応答してRST_STREAMを送信してはなりません（MUSTNOT）。</target>
        </trans-unit>
        <trans-unit id="e013235aa2f4b291e00e311c2ac1352025ad323f" translate="yes" xml:space="preserve">
          <source>A string for identifying HTTP/2 is entered into the &quot;Application-
   Layer Protocol Negotiation (ALPN) Protocol IDs&quot; registry established
   in [&lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt;].

   This document establishes a registry for frame types, settings, and
   error codes.  These new registries appear in the new &quot;Hypertext
   Transfer Protocol version 2 (HTTP/2) Parameters&quot; section.

   This document registers the HTTP2-Settings header field for use in
   HTTP; it also registers the 421 (Misdirected Request) status code.

   This document registers the &quot;PRI&quot; method for use in HTTP to avoid
   collisions with the connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;).</source>
          <target state="translated">HTTP / 2を識別するための文字列は、[ &lt;a href=&quot;#ref-TLS-ALPN&quot;&gt;TLS-ALPN&lt;/a&gt; ]で確立された「Application -LayerProtocol Negotiation（ALPN）ProtocolIDs」レジストリに入力されます。このドキュメントは、フレームタイプ、設定、およびエラーコードのレジストリを確立します。これらの新しいレジストリは、新しい「ハイパーテキスト転送プロトコルバージョン2（HTTP / 2）パラメータ」セクションに表示されます。このドキュメントは、HTTPで使用するHTTP2-Settingsヘッダーフィールドを登録します。また、421（Misdirected Request）ステータスコードも登録します。このドキュメントでは、接続の序文（&lt;a href=&quot;#section-3.5&quot;&gt;セクション3.5&lt;/a&gt;）との衝突を回避するためにHTTPで使用する「PRI」メソッドを登録します。</target>
        </trans-unit>
        <trans-unit id="a08604bc21c1691f9b1f625192cc47697f42035b" translate="yes" xml:space="preserve">
          <source>A successful LOCK method MUST result in the creation of an empty
   resource that is locked (and that is not a collection) when a
   resource did not previously exist at that URL.  Later on, the lock
   may go away but the empty resource remains.  Empty resources MUST
   then appear in PROPFIND responses including that URL in the response
   scope.  A server MUST respond successfully to a GET request to an
   empty resource, either by using a 204 No Content response, or by
   using 200 OK with a Content-Length header indicating zero length</source>
          <target state="translated">LOCK メソッドが成功すると、その URL にリソースが以前に存在しなかったときに、ロックされている (コレクションではない)空のリソースが生成されなければならない (MUST)。後になってロックが解除されても、空のリソースは残る。空のリソースは、応答スコープにそのURLを含むPROPFIND応答に現れなければならない[MUST]。サーバーは、空のリソースに対するGETリクエストに対して、204 No Content応答を使用するか、200 OKを使用して、長さが0であることを示すContent-Lengthヘッダーを使用して、正常に応答しなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="761ebc49a4e6c7f0646a5103ac3b55e7ffb14172" translate="yes" xml:space="preserve">
          <source>A successful response is indicated by any &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.3&quot;&gt;2xx&lt;/a&gt; status code.</source>
          <target state="translated">正常な応答は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.3&quot;&gt;2xx&lt;/a&gt;ステータスコードで示されます。</target>
        </trans-unit>
        <trans-unit id="34367556fdd895f927c5302a93e55ce713fb9f94" translate="yes" xml:space="preserve">
          <source>A successful response is indicated with a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; response code, because the response in the example does not carry a message body. (which a response with the 200 code would have). Note that other success codes could be used as well.</source>
          <target state="translated">この例の応答にはメッセージ本文が含まれていないため、成功した応答は&lt;a href=&quot;../status/204&quot;&gt; &lt;code&gt;204&lt;/code&gt; &lt;/a&gt;応答コードで示されます。（これは200コードの応答で発生します）。他の成功コードも使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e103fc95ad4823358a2845eae9f826cfeffda4c5" translate="yes" xml:space="preserve">
          <source>A textual format to represent hypertext documents, the &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HyperText Markup Language&lt;/a&gt;&lt;/em&gt; (HTML).</source>
          <target state="translated">ハイパーテキストドキュメントを表すテキスト形式、&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HyperText Markup Language&lt;/a&gt;&lt;/em&gt;（HTML）。</target>
        </trans-unit>
        <trans-unit id="4ce1aa0486be881fd62b04d40f7f043b63b1c037" translate="yes" xml:space="preserve">
          <source>A three-digit warning number. The first digit indicates whether the &lt;code&gt;Warning&lt;/code&gt; is required to be deleted from a stored response after validation.</source>
          <target state="translated">3桁の警告番号。最初の桁は、検証後に保存された応答から &lt;code&gt;Warning&lt;/code&gt; 削除する必要があるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="7b7d752bda74832f7282cbd7c03d86206cc0cd43" translate="yes" xml:space="preserve">
          <source>A trailer allows the sender to include additional fields at the end
   of a chunked message in order to supply metadata that might be
   dynamically generated while the message body is sent, such as a
   message integrity check, digital signature, or post-processing
   status.  The trailer fields are identical to header fields, except
   they are sent in a chunked trailer instead of the message's header
   section.

     trailer-part   = *( header-field CRLF )

   A sender MUST NOT generate a trailer that contains a field necessary
   for message framing (e.g., Transfer-Encoding and Content-Length),
   routing (e.g., Host), request modifiers (e.g., controls and
   conditionals in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5&quot;&gt;Section&amp;nbsp;5 of [RFC7231]&lt;/a&gt;), authentication (e.g., see
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt;] and [&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC6265&lt;/a&gt;]), response control data (e.g., see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;7.1 of [RFC7231]&lt;/a&gt;), or determining how to process the payload (e.g.,
   Content-Encoding, Content-Type, Content-Range, and Trailer).

   When a chunked message containing a non-empty trailer is received,
   the recipient MAY process the fields (aside from those forbidden
   above) as if they were appended to the message's header section.  A
   recipient MUST ignore (or consider as an error) any fields that are
   forbidden to be sent in a trailer, since processing them as if they
   were present in the header section might bypass external security
   filters.

   Unless the request includes a TE header field indicating &quot;trailers&quot;
   is acceptable, as described in &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;, a server SHOULD NOT
   generate trailer fields that it believes are necessary for the user
   agent to receive.  Without a TE containing &quot;trailers&quot;, the server
   ought to assume that the trailer fields might be silently discarded
   along the path to the user agent.  This requirement allows
   intermediaries to forward a de-chunked message to an HTTP/1.0
   recipient without buffering the entire response.</source>
          <target state="translated">トレーラーを使用すると、メッセージの完全性チェック、デジタル署名、後処理ステータスなど、メッセージ本文の送信中に動的に生成される可能性のあるメタデータを提供するために、送信者はチャンクメッセージの末尾に追加フィールドを含めることができます。トレーラーフィールドは、メッセージのヘッダーセクションではなくチャンクトレーラーで送信されることを除いて、ヘッダーフィールドと同じです。 trailer-part = *（header-field CRLF）送信者は、メッセージのフレーミング（たとえば、Transfer-EncodingおよびContent-Length）、ルーティング（たとえば、Host）、リクエスト修飾子（たとえば、&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5&quot;&gt;[RFC7231]のセクション5の&lt;/a&gt;制御と条件）、認証（たとえば、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt; ]と[ &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC6265を&lt;/a&gt;参照]]）、応答制御データ（たとえば、&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;[RFC7231]の&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;セクション&lt;/a&gt;7.1を参照）、またはペイロードの処理方法（たとえば、Content-Encoding、Content-Type、Content-Range、およびTrailer）を決定します。空でないトレーラーを含むチャンクメッセージが受信されると、受信者はフィールド（上記で禁止されているものを除く）を、メッセージのヘッダーセクションに追加されたかのように処理できます（MAY）。ヘッダーセクションに存在するかのようにフィールドを処理すると外部セキュリティフィルターがバイパスされる可能性があるため、受信者はトレーラーでの送信が禁止されているフィールドを無視する（またはエラーと見なす）必要があります。&lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3で&lt;/a&gt;説明されているように、リクエストに「予告編」を示すTEヘッダーフィールドが含まれている場合を除き、許容されます。、サーバーは、ユーザーエージェントが受信する必要があると考えるトレーラーフィールドを生成しないでください。「トレーラー」を含むTEがない場合、サーバーは、トレーラーフィールドがユーザーエージェントへのパスに沿って静かに破棄される可能性があると想定する必要があります。この要件により、仲介者は、チャンク化されたメッセージを応答全体をバッファリングせずにHTTP / 1.0受信者に転送できます。</target>
        </trans-unit>
        <trans-unit id="b66dee6b11e93736d953af429c12c61621b0b237" translate="yes" xml:space="preserve">
          <source>A typical HTTP session</source>
          <target state="translated">典型的な HTTP セッション</target>
        </trans-unit>
        <trans-unit id="96ee2f8f3bbbe21e292a7b8dac9501fca154c6f0" translate="yes" xml:space="preserve">
          <source>A typical flow of requests, all through one single connection is now looking like this:</source>
          <target state="translated">1つの接続を介したリクエストの典型的な流れは、今ではこのようになっています。</target>
        </trans-unit>
        <trans-unit id="4ccbdc0f9453daa1ff4757f0c1283a456c445232" translate="yes" xml:space="preserve">
          <source>A typical status line looks like: &lt;code&gt;HTTP/1.1 404 Not Found.&lt;/code&gt;</source>
          <target state="translated">典型的なステータス行は次のようになります： &lt;code&gt;HTTP/1.1 404 Not Found.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5301a544830b2f5e4f1a802c0392489c4929900" translate="yes" xml:space="preserve">
          <source>A typical status line looks like: &lt;code&gt;HTTP/1.1 404 Not Found&lt;/code&gt;.</source>
          <target state="translated">一般的なステータス行は次のようになります： &lt;code&gt;HTTP/1.1 404 Not Found&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7772ff9ebd19b33547ec2a86b5652c058907a9ee" translate="yes" xml:space="preserve">
          <source>A unique string identifying the version of the resource. Conditional requests using &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; use this value to change the behavior of the request.</source>
          <target state="translated">リソースのバージョンを識別する一意の文字列。&lt;a href=&quot;headers/if-match&quot;&gt; &lt;code&gt;If-Match&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;headers/if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; を&lt;/a&gt;使用する条件付きリクエストは、この値を使用してリクエストの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="ae78cbf97ee4cff3a5f3f02f099427e133082c03" translate="yes" xml:space="preserve">
          <source>A user agent has to demonstrate knowledge of a lock when requesting
   an operation on a locked resource.  Otherwise, the following scenario
   might occur.  In the scenario, program A, run by User A, takes out a
   write lock on a resource.  Program B, also run by User A, has no
   knowledge of the lock taken out by program A, yet performs a PUT to
   the locked resource.  In this scenario, the PUT succeeds because
   locks are associated with a principal, not a program, and thus
   program B, because it is acting with principal A's credential, is
   allowed to perform the PUT.  However, had program B known about the
   lock, it would not have overwritten the resource, preferring instead
   to present a dialog box describing the conflict to the user.  Due to
   this scenario, a mechanism is needed to prevent different programs
   from accidentally ignoring locks taken out by other programs with the
   same authorization.

   In order to prevent these collisions, a lock token MUST be submitted
   by an authorized principal for all locked resources that a method may
   change or the method MUST fail.  A lock token is submitted when it
   appears in an If header.  For example, if a resource is to be moved
   and both the source and destination are locked, then two lock tokens
   must be submitted in the If header, one for the source and the other
   for the destination.</source>
          <target state="translated">ユーザエージェントは、ロックされたリソースに対する操作を要求する際に、ロックの知識を実証しなければならない。そうしないと、次のようなシナリオが発生する可能性がある。このシナリオでは、ユーザAによって実行されているプログラムAが、リソースに対する書き込みロックを取り出す。同じくユーザAによって実行されているプログラムBは、プログラムAによって取り出されたロックを知らないが、ロックされたリソースへのPUTを実行する。このシナリオでは、ロックはプログラムではなくプリンシパルに関連付けられているため、PUTは成功します。しかし、プログラム B がロックを知っていた場合、リソースを上書きすることはなく、代わりに競合を説明するダイアログボックスをユーザに提示することを好みます。このようなシナリオのため、異なるプログラムが同じ権限を持つ他のプログラムによって取り出されたロックを誤って無視してしまうことを防ぐメカニズムが必要です。これらの衝突を防ぐためには、あるメソッドが変更するか、そのメソッドが失敗しなければならないすべてのロックされたリソースに対して、認可されたプリンシパルによってロックトークンが提出されなければなりません[MUST]。ロックトークンは、Ifヘッダーに現れたときに提出される。例えば、あるリソースが移動され、移動元と移動先の両方がロックされている場合、2 つのロックトークンを If ヘッダーに提出しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1665264fcfc3dbf5c0a1ff63ea9c76cb5daa217f" translate="yes" xml:space="preserve">
          <source>A user agent that wishes to authenticate itself with a server--
      usually, but not necessarily, after receiving a 401 response--does
      so by including an Authorization request-header field with the
      request.  The Authorization field value consists of credentials
      containing the authentication information of the user agent for
      the realm of the resource being requested.

          Authorization  = &quot;Authorization&quot; &quot;:&quot; credentials

      HTTP access authentication is described in &quot;HTTP Authentication:
      Basic and Digest Access Authentication&quot; [&lt;a href=&quot;#ref-43&quot;&gt;43&lt;/a&gt;]. If a request is
      authenticated and a realm specified, the same credentials SHOULD
      be valid for all other requests within this realm (assuming that
      the authentication scheme itself does not require otherwise, such
      as credentials that vary according to a challenge value or using
      synchronized clocks).

      When a shared cache (see &lt;a href=&quot;#section-13.7&quot;&gt;section 13.7&lt;/a&gt;) receives a request
      containing an Authorization field, it MUST NOT return the
      corresponding response as a reply to any other request, unless one
      of the following specific exceptions holds:

      1. If the response includes the &quot;s-maxage&quot; cache-control
         directive, the cache MAY use that response in replying to a
         subsequent request. But (if the specified maximum age has
         passed) a proxy cache MUST first revalidate it with the origin
         server, using the request-headers from the new request to allow
         the origin server to authenticate the new request. (This is the
         defined behavior for s-maxage.) If the response includes &quot;s-
         maxage=0&quot;, the proxy MUST always revalidate it before re-using
         it.

      2. If the response includes the &quot;must-revalidate&quot; cache-control
         directive, the cache MAY use that response in replying to a
         subsequent request. But if the response is stale, all caches
         MUST first revalidate it with the origin server, using the
         request-headers from the new request to allow the origin server
         to authenticate the new request.

      3. If the response includes the &quot;public&quot; cache-control directive,
         it MAY be returned in reply to any subsequent request.</source>
          <target state="translated">サーバーで自分自身を認証することを望むユーザーエージェント（通常は、必ずではないが、401応答を受け取った後）は、要求にAuthorization要求ヘッダーフィールドを含めることで行います。 Authorizationフィールドの値は、要求されているリソースのレルムのユーザーエージェントの認証情報を含む資格情報で構成されます。 Authorization = &quot;Authorization&quot; &quot;：&quot;資格情報HTTPアクセス認証については、「HTTP認証：基本認証とダイジェストアクセス認証」[ &lt;a href=&quot;#ref-43&quot;&gt;43&lt;/a&gt;]。リクエストが認証され、レルムが指定されている場合、同じクレデンシャルがこのレルム内の他のすべてのリクエストに対して有効である必要があります（チャレンジ値や認証されたクロックを使用して変化するクレデンシャルなど、認証スキーム自体が他に必要としないと仮定） 。共有キャッシュ（&lt;a href=&quot;#section-13.7&quot;&gt;セクション13.7を&lt;/a&gt;参照））Authorizationフィールドを含むリクエストを受信した場合、次の特定の例外のいずれかが当てはまらない限り、対応するレスポンスを他のリクエストへの返信として返してはなりません（MUST）。1.レスポンスに「s-maxage」キャッシュ制御ディレクティブが含まれている場合、キャッシュは、後続の要求に応答する際にその応答を使用する場合があります。ただし、（指定された最大経過時間が経過した場合）プロキシキャッシュは、最初にオリジンサーバーでそれを再検証し、新しいリクエストのリクエストヘッダーを使用して、オリジンサーバーが新しいリクエストを認証できるようにする必要があります。 （これはs-maxageの定義された動作です。）応答に「s- maxage = 0」が含まれている場合、プロキシは再利用する前に常に再検証する必要があります。 2.レスポンスに「must-revalidate &quot;cache-controlディレクティブ、キャッシュは後続のリクエストに応答する際にそのレスポンスを使用する場合があります。ただし、レスポンスが古くなっている場合、すべてのキャッシュは新しいリクエストからのリクエストヘッダーを使用して、最初にオリジンサーバーでそれを再検証する必要があります。オリジンサーバーが新しいリクエストを認証することを許可します3.レスポンスに「public」キャッシュ制御ディレクティブが含まれている場合、後続のリクエストへの応答として返される場合があります。応答に &quot;public&quot;キャッシュ制御ディレクティブが含まれている場合、後続の要求への応答として返される場合があります。応答に &quot;public&quot;キャッシュ制御ディレクティブが含まれている場合、後続の要求への応答として返される場合があります。</target>
        </trans-unit>
        <trans-unit id="3eb38217a0a68009475024a823a8a9c28117955a" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;../../basics_of_http/mime_types/complete_list_of_mime_types&quot;&gt;MIME type&lt;/a&gt;.</source>
          <target state="translated">有効な&lt;a href=&quot;../../basics_of_http/mime_types/complete_list_of_mime_types&quot;&gt;MIMEタイプ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fbdf43407e27f9040d31e47e9ef380e7e61d10a" translate="yes" xml:space="preserve">
          <source>A valid policy name consists only of alphanumeric characters, or one of &quot;&lt;code&gt;-#=_/@.%&lt;/code&gt;&quot;. A star (&lt;code&gt;*&lt;/code&gt;) as a policy name instructs the user agent to allow any unique policy name ('&lt;code&gt;allow-duplicates&lt;/code&gt;' may relax that further).</source>
          <target state="translated">有効なポリシー名は、英数字のみ、または「 &lt;code&gt;-#=_/@.%&lt;/code&gt; 」のいずれかで構成されます。ポリシー名としてのスター（ &lt;code&gt;*&lt;/code&gt; ）は、一意のポリシー名を許可するようにユーザーエージェントに指示します（「 &lt;code&gt;allow-duplicates&lt;/code&gt; 」はそれをさらに緩和する場合があります）。</target>
        </trans-unit>
        <trans-unit id="d38f471ad34bbb66b972153ec1a0f3abc561da01" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;On&lt;/code&gt; indicates explicit user opt-in into a reduced data usage mode on the client, and when communicated to origins allows them to deliver alternative content to reduce the data downloaded such as smaller image and video resources, different markup and styling, disabled polling and automatic updates, and so on.</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; の値は、クライアントのデータ使用量削減モードへの明示的なユーザーオプトインを示し、オリジンに通信すると、より小さな画像やビデオリソース、異なるマークアップやスタイル、無効など、ダウンロードされるデータを削減するための代替コンテンツを配信できます。ポーリングや自動更新など。</target>
        </trans-unit>
        <trans-unit id="45e6db7c902ddf3358740b6f48b9c66a1329f13a" translate="yes" xml:space="preserve">
          <source>A value of &lt;strong&gt;-1&lt;/strong&gt; will disable caching, requiring a preflight OPTIONS check for all calls.</source>
          <target state="translated">値&lt;strong&gt;-1&lt;/strong&gt;はキャッシュを無効にし、すべての呼び出しに対してプリフライトオプションチェックを要求します。</target>
        </trans-unit>
        <trans-unit id="5889b8a74eb0576ba107584be5617ae14bc061f0" translate="yes" xml:space="preserve">
          <source>A version number of the product.</source>
          <target state="translated">製品のバージョン番号です。</target>
        </trans-unit>
        <trans-unit id="e076002695264f7b92b71f90d2a5b52b89009a69" translate="yes" xml:space="preserve">
          <source>A very comprehensive article on browser internals and request flow through HTTP protocol. A MUST-READ for any web developer.</source>
          <target state="translated">ブラウザの内部とHTTPプロトコルによるリクエストの流れについての非常に包括的な記事です。ウェブ開発者にとっては必読の記事です。</target>
        </trans-unit>
        <trans-unit id="1fa040618dd780f3a0aef82d86f3446592dbd355" translate="yes" xml:space="preserve">
          <source>A video file, possibly with audio, in the OGG container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec.</source>
          <target state="translated">OGG コンテナ形式のビデオファイル(音声付きの場合もあります)。Theora は通常のビデオコーデックで、Vorbis は通常のオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="4c86cb2facddc78dcf860daaf77f4a3854799edb" translate="yes" xml:space="preserve">
          <source>A video file, possibly with audio, in the Ogg container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec, although Opus is becoming more common.</source>
          <target state="translated">Ogg コンテナ形式のビデオファイル(音声付きの場合もあります)。Theora は通常のビデオコーデックで、Vorbis は通常のオーディオコーデックですが、Opus が一般的になってきています。</target>
        </trans-unit>
        <trans-unit id="5fa979d0019d43f2c9b25ac426f79d9a5706a185" translate="yes" xml:space="preserve">
          <source>A video file, possibly with audio, in the WebM container format. VP8 and VP9 are the most common video codecs; Vorbis and Opus the most common audio codecs.</source>
          <target state="translated">WebM コンテナ形式のビデオファイル(音声付きの場合もあります)。VP8 と VP9 が最も一般的なビデオコーデックで、Vorbis と Opus が最も一般的なオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="19beb4d587d6a250a74c565550aaab0fc61d9928" translate="yes" xml:space="preserve">
          <source>A vulnerable application on a sub-domain can set a cookie with the &lt;code&gt;Domain&lt;/code&gt; attribute, which gives access to that cookie on all other subdomains. This mechanism can be abused in a &lt;em&gt;session fixation&lt;/em&gt; attack. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Session_fixation&quot;&gt;session fixation&lt;/a&gt; for primary mitigation methods.</source>
          <target state="translated">サブドメイン上の脆弱なアプリケーションは、他のすべてのサブドメイン上のそのCookieへのアクセスを許可する &lt;code&gt;Domain&lt;/code&gt; 属性を使用してCookieを設定できます。このメカニズムは、&lt;em&gt;セッション固定&lt;/em&gt;攻撃で悪用される可能性があります。主な緩和方法については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Session_fixation&quot;&gt;セッション固定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7a189a3656c45672cb9f6d2aac0bf5a253e8d427" translate="yes" xml:space="preserve">
          <source>A web site administrator for an online banking site wants to ensure that all its content is loaded using SSL, in order to prevent attackers from eavesdropping on requests.</source>
          <target state="translated">オンラインバンキングサイトのウェブサイト管理者は、攻撃者によるリクエストの盗聴を防ぐために、すべてのコンテンツがSSLを使用して読み込まれるようにしたいと考えています。</target>
        </trans-unit>
        <trans-unit id="b4a4bd38a2a84044ff7aca2e9392bd40ae65380b" translate="yes" xml:space="preserve">
          <source>A web site administrator for an online banking site wants to ensure that all its content is loaded using TLS, in order to prevent attackers from eavesdropping on requests.</source>
          <target state="translated">オンラインバンキングサイトのウェブサイト管理者は、リクエストを盗聴する攻撃者を防ぐために、すべてのコンテンツがTLSを使用して読み込まれるようにしたいと考えています。</target>
        </trans-unit>
        <trans-unit id="78a6cf5a14fccb26323ff827be190ed35fcc6e26" translate="yes" xml:space="preserve">
          <source>A web site administrator of a web mail site wants to allow HTML in email, as well as images loaded from anywhere, but not JavaScript or other potentially dangerous content.</source>
          <target state="translated">Webメールサイトの管理者が、メール内のHTMLやどこからでも読み込める画像は許可したいが、JavaScriptなどの危険性のあるコンテンツは許可したくないと考えている。</target>
        </trans-unit>
        <trans-unit id="7426821d25f9d1be7cdc0dee42a0c8e03a96be3c" translate="yes" xml:space="preserve">
          <source>A web site administrator wants all content to come from the site's own origin (this excludes subdomains.)</source>
          <target state="translated">ウェブサイトの管理者は、すべてのコンテンツがサイト独自のものであることを望んでいます(これはサブドメインを除きます)。</target>
        </trans-unit>
        <trans-unit id="094a073a77d4ea29e21e0f0aa48a85ef6fc064f6" translate="yes" xml:space="preserve">
          <source>A web site administrator wants to allow content from a trusted domain and all its subdomains (it doesn't have to be the same domain that the CSP is set on.)</source>
          <target state="translated">ウェブサイト管理者は、信頼できるドメインとそのすべてのサブドメインからのコンテンツを許可したいと考えています(CSPが設定しているドメインと同じである必要はありません)。</target>
        </trans-unit>
        <trans-unit id="c81c7277d68cf8c04b37b98fb5f5a7cea290054e" translate="yes" xml:space="preserve">
          <source>A web site administrator wants to allow users of a web application to include images from any origin in their own content, but to restrict audio or video media to trusted providers, and all scripts only to a specific server that hosts trusted code.</source>
          <target state="translated">Web サイト管理者は、Web アプリケーションのユーザーが自分のコンテンツに任意の起源の画像を含めることを許可したいが、オーディオまたはビデオメディアを信頼できるプロバイダに限定し、すべてのスクリプトを信頼できるコードをホストしている特定のサーバーに限定したいと考えています。</target>
        </trans-unit>
        <trans-unit id="9498f184ab4111b05c76c6fbfcfb1b645e8241e1" translate="yes" xml:space="preserve">
          <source>A whitelist for specific inline scripts using a cryptographic nonce (number used once). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide an unguessable nonce, as bypassing a resource&amp;rsquo;s policy is otherwise trivial. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. Specifying nonce makes a modern browser ignore &lt;code&gt;'unsafe-inline'&lt;/code&gt; which could still be set for older browsers without nonce support.</source>
          <target state="translated">暗号ナンスを使用した特定のインラインスクリプトのホワイトリスト（数値は1回使用されます）。サーバーは、ポリシーを送信するたびに一意のnonce値を生成する必要があります。リソースのポリシーをバイパスすることはささいなことなので、推測できないナンスを提供することが重要です。例については、&lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;安全でないインラインスクリプト&lt;/a&gt;をご覧ください。nonceを指定すると、最近のブラウザーはnonceをサポートしていない古いブラウザーでも設定できる &lt;code&gt;'unsafe-inline'&lt;/code&gt; を無視します。</target>
        </trans-unit>
        <trans-unit id="607dbcd9743fda8a80dc6941bb1406560915ac51" translate="yes" xml:space="preserve">
          <source>A.1.  Changes from HTTP/1.0</source>
          <target state="translated">A.1.HTTP/1.0からの変更点</target>
        </trans-unit>
        <trans-unit id="71e7c2181bcefe9076dade6180831af529a35160" translate="yes" xml:space="preserve">
          <source>A.1.  MIME-Version</source>
          <target state="translated">A.1 MIMEバージョン</target>
        </trans-unit>
        <trans-unit id="934d78a07914cb136497f33678b675d378c9c1c3" translate="yes" xml:space="preserve">
          <source>A.1.  Notes on Empty XML Elements</source>
          <target state="translated">A.1.空のXML要素に関する注意事項</target>
        </trans-unit>
        <trans-unit id="0a1cd245606e42807b94c9f374a34eccc7961ec0" translate="yes" xml:space="preserve">
          <source>A.1.1.  Multihomed Web Servers</source>
          <target state="translated">A.1.1.マルチホームウェブサーバ</target>
        </trans-unit>
        <trans-unit id="31ff08eb30576725916a16c707537cd82a7aa072" translate="yes" xml:space="preserve">
          <source>A.1.2.  Keep-Alive Connections</source>
          <target state="translated">A.1.2.キープアライブ接続</target>
        </trans-unit>
        <trans-unit id="4be274cc414e041aa285536fd1d9abea04688061" translate="yes" xml:space="preserve">
          <source>A.1.3.  Introduction of Transfer-Encoding</source>
          <target state="translated">A.1.3.転送符号化の導入</target>
        </trans-unit>
        <trans-unit id="b625deb328c263df8d663f465330058cd2f6a3db" translate="yes" xml:space="preserve">
          <source>A.2.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="translated">A.2。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;からの変更</target>
        </trans-unit>
        <trans-unit id="6c37ee894c4d97db6e012967c60c8ae1646c47d2" translate="yes" xml:space="preserve">
          <source>A.2.  Conversion to Canonical Form</source>
          <target state="translated">A.2.正規形への変換</target>
        </trans-unit>
        <trans-unit id="13a5586a515762626176f0ba79e73a11ee5d37bc" translate="yes" xml:space="preserve">
          <source>A.2.  Notes on Illegal XML Processing</source>
          <target state="translated">A.2.違法なXML処理に関する注意事項</target>
        </trans-unit>
        <trans-unit id="5c000b068248fb6a64403618c2b71c2ec3faa5ef" translate="yes" xml:space="preserve">
          <source>A.3.  Conversion of Date Formats</source>
          <target state="translated">A.3.日付形式の変換</target>
        </trans-unit>
        <trans-unit id="ddb60af0705f2ed7e764e5c836e357c9a4588554" translate="yes" xml:space="preserve">
          <source>A.3.  Example - XML Syntax Error</source>
          <target state="translated">A.3.例-XML構文エラー</target>
        </trans-unit>
        <trans-unit id="c26036cb9e7529396282952036d022db566e885e" translate="yes" xml:space="preserve">
          <source>A.4.  Conversion of Content-Encoding</source>
          <target state="translated">A.4.コンテンツエンコーディングの変換</target>
        </trans-unit>
        <trans-unit id="6ea2c416d6e0ef6e9a66400fec7ff2af31243cc5" translate="yes" xml:space="preserve">
          <source>A.4.  Example - Unexpected XML Element</source>
          <target state="translated">A.4.例-予期しないXML要素</target>
        </trans-unit>
        <trans-unit id="a266ccc4168540071853c8f0598387442256e895" translate="yes" xml:space="preserve">
          <source>A.5.  Conversion of Content-Transfer-Encoding</source>
          <target state="translated">A.5.コンテンツ転送エンコーディングの変換</target>
        </trans-unit>
        <trans-unit id="206ee8943d80ea391322bf6e9311cef2b5532423" translate="yes" xml:space="preserve">
          <source>A.6.  MHTML and Line Length Limitations</source>
          <target state="translated">A.6.MHTMLと行の長さの制限</target>
        </trans-unit>
        <trans-unit id="b463080c85b05823aaddc6fc68a219f5680ee32b" translate="yes" xml:space="preserve">
          <source>AAC audio</source>
          <target state="translated">AACオーディオ</target>
        </trans-unit>
        <trans-unit id="3ed3e9ef5eed89882da580130970d5049696337c" translate="yes" xml:space="preserve">
          <source>ABNF List Extension: #rule (RFC 7230)</source>
          <target state="translated">ABNF リスト拡張。#ルール (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="ebcd0787537de59613870f2b356e9e9a51dc2254" translate="yes" xml:space="preserve">
          <source>ACCEPT POST</source>
          <target state="translated">アセプトポスト</target>
        </trans-unit>
        <trans-unit id="e1588a2512f762c137bb4684cdcc818aa63d0393" translate="yes" xml:space="preserve">
          <source>ALLOW-FROM</source>
          <target state="translated">ALLOW-FROM</target>
        </trans-unit>
        <trans-unit id="5766cf5be7954090e3b573bc2ac357eb125cb979" translate="yes" xml:space="preserve">
          <source>APIs based on HTTP</source>
          <target state="translated">HTTP に基づく API</target>
        </trans-unit>
        <trans-unit id="8ccf350ab0d3a2a51ea1d5c6a29807a0e4f960cf" translate="yes" xml:space="preserve">
          <source>APNG</source>
          <target state="translated">APNG</target>
        </trans-unit>
        <trans-unit id="491f27fea75b26dbfefa2ee1bed63b09db887b09" translate="yes" xml:space="preserve">
          <source>AVI: Audio Video Interleave</source>
          <target state="translated">AVI.オーディオ ビデオ インターリーブ</target>
        </trans-unit>
        <trans-unit id="cd437865cbac7655f8b86519aea764f378093804" translate="yes" xml:space="preserve">
          <source>Abbreviation</source>
          <target state="translated">Abbreviation</target>
        </trans-unit>
        <trans-unit id="24750e2e16dfc2b89dc7f623971f1a084bde0d9a" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypermedia information
   systems.  This document defines the HTTP Authentication framework.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7235&quot;&gt;http://www.rfc-editor.org/info/rfc7235&lt;/a&gt;.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this 

   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Access Authentication Framework 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Challenge and Response 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Protection Space (Realm) 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Status Code Definitions 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. 401 Unauthorized 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. 407 Proxy Authentication Required 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Header Field Definitions 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. WWW-Authenticate 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Authorization 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Proxy-Authenticate 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Proxy-Authorization 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Authentication Scheme Registry 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Considerations for New Authentication Schemes 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Confidentiality of Credentials 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Authentication Credentials and Idle Clients 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Protection Spaces 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. References 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from RFCs 2616 and 2617 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調型ハイパーメディア情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、HTTP認証フレームワークを定義します。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;、RFC 5741のセクション2を参照してください&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7235&quot;&gt;http：//www.rfc-editor.org/info/rfc7235&lt;/a&gt;で 入手できます。。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。アクセス認証フレームワーク &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;。チャレンジとレスポンス &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;。保護スペース（レルム） &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。ステータスコードの定義 &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。 401無許可 &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。 407プロキシ認証が必要 &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。ヘッダーフィールド定義 &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。 WWW-Authenticate &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。承認 &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。プロキシ認証 &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;。プロキシ認証 &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。 IANAの考慮事項 &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。認証方式レジストリ &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;。新しい認証スキームに関する考慮事項 &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;。ステータスコード登録 &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;。ヘッダーフィールド登録 &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;。資格情報の機密性 &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;。認証資格情報とアイドルクライアント &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;。保護スペース &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。参考資料 &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;。規範的な参考文献 &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;。参考情報 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。 RFC 2616および2617 &lt;a href=&quot;#appendix-B&quot;&gt;付録B&lt;/a&gt;からの変更 。輸入ABNF &lt;a href=&quot;#appendix-C&quot;&gt;付録C&lt;/a&gt;。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="b5cf0df594932a60c94f36c291eebcfe03889d61" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines HTTP caches and the associated header
   fields that control cache behavior or indicate cacheable response
   messages.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7234&quot;&gt;http://www.rfc-editor.org/info/rfc7234&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
           &lt;a href=&quot;#section-1.2.1&quot;&gt;1.2.1&lt;/a&gt;. Delta Seconds 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Overview of Cache Operation 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Storing Responses in Caches 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Storing Incomplete Responses 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Storing Responses to Authenticated Requests 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Combining Partial Content 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Constructing Responses from Caches 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Calculating Secondary Keys with Vary 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Freshness 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Calculating Freshness Lifetime 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Calculating Heuristic Freshness 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Calculating Age 
           &lt;a href=&quot;#section-4.2.4&quot;&gt;4.2.4&lt;/a&gt;. Serving Stale Responses 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Validation 
           &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;. Sending a Validation Request 
           &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;. Handling a Received Validation Request ............. 

           &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;. Handling a Validation Response 
           &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;. Freshening Stored Responses upon Validation 
           &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;. Freshening Responses via HEAD 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Invalidation 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Header Field Definitions 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Age 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Cache-Control 
           &lt;a href=&quot;#section-5.2.1&quot;&gt;5.2.1&lt;/a&gt;. Request Cache-Control Directives 
           &lt;a href=&quot;#section-5.2.2&quot;&gt;5.2.2&lt;/a&gt;. Response Cache-Control Directives 
           &lt;a href=&quot;#section-5.2.3&quot;&gt;5.2.3&lt;/a&gt;. Cache Control Extensions 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Expires 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Pragma 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Warning 
           &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;. Warning: 110 - &quot;Response is Stale&quot; 
           &lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;. Warning: 111 - &quot;Revalidation Failed&quot; 
           &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;. Warning: 112 - &quot;Disconnected Operation&quot; 
           &lt;a href=&quot;#section-5.5.4&quot;&gt;5.5.4&lt;/a&gt;. Warning: 113 - &quot;Heuristic Expiration&quot; 
           &lt;a href=&quot;#section-5.5.5&quot;&gt;5.5.5&lt;/a&gt;. Warning: 199 - &quot;Miscellaneous Warning&quot; 
           &lt;a href=&quot;#section-5.5.6&quot;&gt;5.5.6&lt;/a&gt;. Warning: 214 - &quot;Transformation Applied&quot; 
           &lt;a href=&quot;#section-5.5.7&quot;&gt;5.5.7&lt;/a&gt;. Warning: 299 - &quot;Miscellaneous Persistent Warning&quot; ..32
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. History Lists 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Cache Directive Registry 
           &lt;a href=&quot;#section-7.1.1&quot;&gt;7.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;. Considerations for New Cache Control Directives 
           &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Warn Code Registry 
           &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-7.2.2&quot;&gt;7.2.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. Security Considerations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. References 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調的ハイパーテキスト情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、HTTPキャッシュと、キャッシュの動作を制御したり、キャッシュ可能な応答メッセージを示したりする関連ヘッダーフィールドを定義します。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;、RFC 5741のセクション2を参照してください。&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7234&quot;&gt;http://www.rfc-editor.org/info/rfc7234&lt;/a&gt;で 入手できます。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-1.2.1&quot;&gt;1.2.1&lt;/a&gt;。デルタ秒 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。キャッシュ操作の概要 &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。レスポンスをキャッシュに保存する &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。不完全な応答の保存 &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。認証済みリクエストへの応答の保存 &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;。部分的なコンテンツの結合 &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。キャッシュからの応答の構築 &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。ヴァリとセカンダリキーの計算 &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。鮮度 &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;。鮮度寿命の計算 &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;。ヒューリスティックな鮮度の計算 &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;。年齢計算 &lt;a href=&quot;#section-4.2.4&quot;&gt;4.2.4&lt;/a&gt;。古い応答の提供 &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。検証 &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;。検証リクエストの送信 &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;。受信した検証リクエストの処理............. &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;。検証応答の処理 &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;。検証時の保存された応答の更新 &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;。ヘッドを介して応答を清涼 &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;。無効化 &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。ヘッダーフィールド定義 &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。&lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;歳 。キャッシュ制御 &lt;a href=&quot;#section-5.2.1&quot;&gt;5.2.1&lt;/a&gt;。リクエストキャッシュ制御ディレクティブ &lt;a href=&quot;#section-5.2.2&quot;&gt;5.2.2&lt;/a&gt;。応答キャッシュ制御ディレクティブ &lt;a href=&quot;#section-5.2.3&quot;&gt;5.2.3&lt;/a&gt;。キャッシュ制御拡張 &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;。期限切れ &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;。プラグマ &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;。警告 &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;。警告：110-「応答が古くなっています」 &lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;。警告：111-「再検証に失敗しました」 &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;。警告：112-「切断された操作」 &lt;a href=&quot;#section-5.5.4&quot;&gt;5.5.4&lt;/a&gt;。警告：&lt;a href=&quot;#section-5.5.5&quot;&gt;113-&lt;/a&gt; &quot;ヒューリスティックな有効期限&quot; 5.5.5。警告：&lt;a href=&quot;#section-5.5.6&quot;&gt;199-&lt;/a&gt;「その他の警告」 5.5.6。警告：&lt;a href=&quot;#section-5.5.7&quot;&gt;214-&lt;/a&gt;「変換が適用されました」 5.5.7。警告：299-「その他の永続的な警告」..32 &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。ヒストリーリスト &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。 IANAに関する考慮事項 &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;。キャッシュディレクティブレジストリ &lt;a href=&quot;#section-7.1.1&quot;&gt;7.1.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;。新しいキャッシュ制御ディレクティブに関する考慮事項 &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;。登録 &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;。警告コードレジストリ &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-7.2.2&quot;&gt;7.2.2&lt;/a&gt;。登録 &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;。ヘッダーフィールド登録 &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;。参考資料 &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;。規範的な参考文献 &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;。有益な参考資料 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;付録B&lt;/a&gt;からの変更。輸入ABNF &lt;a href=&quot;#appendix-C&quot;&gt;付録C&lt;/a&gt;。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="ccfa8b0f43222ebcd97d708793fc8cc336ca94f7" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines HTTP/1.1 conditional requests,
   including metadata header fields for indicating state changes,
   request header fields for making preconditions on such state, and
   rules for constructing the responses to a conditional request when
   one or more preconditions evaluate to false.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7232&quot;&gt;http://www.rfc-editor.org/info/rfc7232&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Validators 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Weak versus Strong 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Last-Modified 
           &lt;a href=&quot;#section-2.2.1&quot;&gt;2.2.1&lt;/a&gt;. Generation 
           &lt;a href=&quot;#section-2.2.2&quot;&gt;2.2.2&lt;/a&gt;. Comparison 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. ETag 
           &lt;a href=&quot;#section-2.3.1&quot;&gt;2.3.1&lt;/a&gt;. Generation 
           &lt;a href=&quot;#section-2.3.2&quot;&gt;2.3.2&lt;/a&gt;. Comparison 
           2.3.3. Example: Entity-Tags Varying on
                  Content-Negotiated Resources 
      &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;. When to Use Entity-Tags and Last-Modified Dates 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Precondition Header Fields 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. If-Match 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. If-None-Match 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. If-Modified-Since 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. If-Unmodified-Since 
      &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;. If-Range 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Status Code Definitions 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. 304 Not Modified 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. 412 Precondition Failed 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Evaluation 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Precedence 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. Security Considerations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. References 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調的ハイパーテキスト情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、HTTP / 1.1条件付きリクエストを定義します。これには、状態の変化を示すメタデータヘッダーフィールド、そのような状態の前提条件を作成するリクエストヘッダーフィールド、1つ以上の前提条件がfalseと評価されたときに条件付きリクエストへの応答を作成するためのルールが含まれます。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;RFC 5741のセクション2&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7232&quot;&gt;http://www.rfc-editor.org/info/rfc7232&lt;/a&gt;で 入手できます。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。バリデーター &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;。弱い対強い &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;。最終変更 &lt;a href=&quot;#section-2.2.1&quot;&gt;2.2.1&lt;/a&gt;。ジェネレーション &lt;a href=&quot;#section-2.2.2&quot;&gt;2.2.2&lt;/a&gt;。比較 &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;。 ETag &lt;a href=&quot;#section-2.3.1&quot;&gt;2.3.1&lt;/a&gt;。ジェネレーション &lt;a href=&quot;#section-2.3.2&quot;&gt;2.3.2&lt;/a&gt;。比較2.3.3。例：コンテンツネゴシエートされたリソースによって異なるエンティティタグ &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;。エンティティタグと最終更新日を使用する場合 &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。前提条件ヘッダーフィールド &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。 If-Match &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。 If-None-Match &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;。 If-Modified-Since &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;。 If-Unmodified-Since &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;。 If-Range &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。ステータスコード定義 &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。 304変更なし &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。 412前提条件が満たされていません &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。評価 &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。優先順位 &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。 IANAに関する考慮事項 &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;。ステータスコード登録 &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;。ヘッダーフィールド登録 &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;。リファレンス &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;。規範的な参考文献 &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;。有益な参考資料 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;付録B&lt;/a&gt;からの変更。輸入ABNF &lt;a href=&quot;#appendix-C&quot;&gt;付録C&lt;/a&gt;。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="4ab940ed5bb0ef7e467d0859d7a9acd1d3a04f4b" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines range requests and the rules for
   constructing and combining responses to those requests.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7233&quot;&gt;http://www.rfc-editor.org/info/rfc7233&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Range Units 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Byte Ranges 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Other Range Units 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. Accept-Ranges 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Range Requests 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Range 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. If-Range 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Responses to a Range Request 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. 206 Partial Content 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Content-Range 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Combining Ranges 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. 416 Range Not Satisfiable 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Range Unit Registry 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Header Field Registration 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Internet Media Type Registration 
           &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;. Internet Media Type multipart/byteranges 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Denial-of-Service Attacks Using Range 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. References 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Internet Media Type multipart/byteranges 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-D&quot;&gt;Appendix D&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調的ハイパーテキスト情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、範囲リクエストと、それらのリクエストへの応答を作成して組み合わせるためのルールを定義します。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;、RFC 5741のセクション2を参照してください。&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7233&quot;&gt;http://www.rfc-editor.org/info/rfc7233&lt;/a&gt;で 入手できます。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。レンジ単位 &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;。バイト範囲 &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;。その他のレンジユニット &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;。 Accept-Ranges &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。範囲リクエスト &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。範囲 &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。 If-Range &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。範囲要求への応答 &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。 206部分的なコンテンツ &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。 Content-Range &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。範囲の組み合わせ &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;。 416範囲が満足できない &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。 IANAに関する考慮事項 &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。レンジユニットレジストリ &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;。登録 &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;。ステータスコード登録 &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;。ヘッダーフィールド登録 &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;。インターネットメディアタイプ登録 &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;。インターネットメディアタイプmultipart / byteranges &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;。範囲を使用したサービス拒否攻撃 &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。参考資料 &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;。規範的な参考文献 &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;。参考資料 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。インターネットメディアタイプがマルチパート/ byteranges &lt;a href=&quot;#appendix-B&quot;&gt;付録Bは&lt;/a&gt;。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;付録C&lt;/a&gt;からの変更。輸入ABNF &lt;a href=&quot;#appendix-D&quot;&gt;付録D&lt;/a&gt;。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="175c5b30db7132745dd409dfe5b4fe160db2ec2b" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines the semantics of HTTP/1.1 messages,
   as expressed by request methods, request header fields, response
   status codes, and response header fields, along with the payload of
   messages (metadata and body content) and mechanisms for content
   negotiation.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7231&quot;&gt;http://www.rfc-editor.org/info/rfc7231&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Resources 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Representations 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Representation Metadata 
           &lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;. Processing Representation Data 
           &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;. Encoding for Compression or Integrity 
           &lt;a href=&quot;#section-3.1.3&quot;&gt;3.1.3&lt;/a&gt;. Audience Language 
           &lt;a href=&quot;#section-3.1.4&quot;&gt;3.1.4&lt;/a&gt;. Identification 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Representation Data 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Payload Semantics 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. Content Negotiation 
           &lt;a href=&quot;#section-3.4.1&quot;&gt;3.4.1&lt;/a&gt;. Proactive Negotiation 
           &lt;a href=&quot;#section-3.4.2&quot;&gt;3.4.2&lt;/a&gt;. Reactive Negotiation 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Request Methods 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Overview 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Common Method Properties 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Safe Methods 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Idempotent Methods 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Cacheable Methods 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Method Definitions 
           &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;. GET 
           &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;. HEAD 
           &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;. POST 
           &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;. PUT 
           &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;. DELETE 
           &lt;a href=&quot;#section-4.3.6&quot;&gt;4.3.6&lt;/a&gt;. CONNECT 
           &lt;a href=&quot;#section-4.3.7&quot;&gt;4.3.7&lt;/a&gt;. OPTIONS 
           &lt;a href=&quot;#section-4.3.8&quot;&gt;4.3.8&lt;/a&gt;. TRACE 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Request Header Fields 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Controls 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Expect 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Max-Forwards 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Conditionals 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Content Negotiation 
           &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;. Quality Values 
           &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;. Accept 
           &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;. Accept-Charset 
           &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;. Accept-Encoding 
           &lt;a href=&quot;#section-5.3.5&quot;&gt;5.3.5&lt;/a&gt;. Accept-Language 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Authentication Credentials 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Request Context 
           &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;. From 
           &lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;. Referer 
           &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;. User-Agent ......................................... 

   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Response Status Codes 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Overview of Status Codes 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Informational 1xx 
           &lt;a href=&quot;#section-6.2.1&quot;&gt;6.2.1&lt;/a&gt;. 100 Continue 
           &lt;a href=&quot;#section-6.2.2&quot;&gt;6.2.2&lt;/a&gt;. 101 Switching Protocols 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Successful 2xx 
           &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;. 200 OK 
           &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;. 201 Created 
           &lt;a href=&quot;#section-6.3.3&quot;&gt;6.3.3&lt;/a&gt;. 202 Accepted 
           &lt;a href=&quot;#section-6.3.4&quot;&gt;6.3.4&lt;/a&gt;. 203 Non-Authoritative Information 
           &lt;a href=&quot;#section-6.3.5&quot;&gt;6.3.5&lt;/a&gt;. 204 No Content 
           &lt;a href=&quot;#section-6.3.6&quot;&gt;6.3.6&lt;/a&gt;. 205 Reset Content 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. Redirection 3xx 
           &lt;a href=&quot;#section-6.4.1&quot;&gt;6.4.1&lt;/a&gt;. 300 Multiple Choices 
           &lt;a href=&quot;#section-6.4.2&quot;&gt;6.4.2&lt;/a&gt;. 301 Moved Permanently 
           &lt;a href=&quot;#section-6.4.3&quot;&gt;6.4.3&lt;/a&gt;. 302 Found 
           &lt;a href=&quot;#section-6.4.4&quot;&gt;6.4.4&lt;/a&gt;. 303 See Other 
           &lt;a href=&quot;#section-6.4.5&quot;&gt;6.4.5&lt;/a&gt;. 305 Use Proxy 
           &lt;a href=&quot;#section-6.4.6&quot;&gt;6.4.6&lt;/a&gt;. 306 (Unused) 
           &lt;a href=&quot;#section-6.4.7&quot;&gt;6.4.7&lt;/a&gt;. 307 Temporary Redirect 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. Client Error 4xx 
           &lt;a href=&quot;#section-6.5.1&quot;&gt;6.5.1&lt;/a&gt;. 400 Bad Request 
           &lt;a href=&quot;#section-6.5.2&quot;&gt;6.5.2&lt;/a&gt;. 402 Payment Required 
           &lt;a href=&quot;#section-6.5.3&quot;&gt;6.5.3&lt;/a&gt;. 403 Forbidden 
           &lt;a href=&quot;#section-6.5.4&quot;&gt;6.5.4&lt;/a&gt;. 404 Not Found 
           &lt;a href=&quot;#section-6.5.5&quot;&gt;6.5.5&lt;/a&gt;. 405 Method Not Allowed 
           &lt;a href=&quot;#section-6.5.6&quot;&gt;6.5.6&lt;/a&gt;. 406 Not Acceptable 
           &lt;a href=&quot;#section-6.5.7&quot;&gt;6.5.7&lt;/a&gt;. 408 Request Timeout 
           &lt;a href=&quot;#section-6.5.8&quot;&gt;6.5.8&lt;/a&gt;. 409 Conflict 
           &lt;a href=&quot;#section-6.5.9&quot;&gt;6.5.9&lt;/a&gt;. 410 Gone 
           &lt;a href=&quot;#section-6.5.10&quot;&gt;6.5.10&lt;/a&gt;. 411 Length Required 
           &lt;a href=&quot;#section-6.5.11&quot;&gt;6.5.11&lt;/a&gt;. 413 Payload Too Large 
           &lt;a href=&quot;#section-6.5.12&quot;&gt;6.5.12&lt;/a&gt;. 414 URI Too Long 
           &lt;a href=&quot;#section-6.5.13&quot;&gt;6.5.13&lt;/a&gt;. 415 Unsupported Media Type 
           &lt;a href=&quot;#section-6.5.14&quot;&gt;6.5.14&lt;/a&gt;. 417 Expectation Failed 
           &lt;a href=&quot;#section-6.5.15&quot;&gt;6.5.15&lt;/a&gt;. 426 Upgrade Required 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. Server Error 5xx 
           &lt;a href=&quot;#section-6.6.1&quot;&gt;6.6.1&lt;/a&gt;. 500 Internal Server Error 
           &lt;a href=&quot;#section-6.6.2&quot;&gt;6.6.2&lt;/a&gt;. 501 Not Implemented 
           &lt;a href=&quot;#section-6.6.3&quot;&gt;6.6.3&lt;/a&gt;. 502 Bad Gateway 
           &lt;a href=&quot;#section-6.6.4&quot;&gt;6.6.4&lt;/a&gt;. 503 Service Unavailable 
           &lt;a href=&quot;#section-6.6.5&quot;&gt;6.6.5&lt;/a&gt;. 504 Gateway Timeout 
           &lt;a href=&quot;#section-6.6.6&quot;&gt;6.6.6&lt;/a&gt;. 505 HTTP Version Not Supported 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Response Header Fields 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Control Data 
ed            7.1.1. Origination Date 
           &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;. Location 
           &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;. Retry-After ........................................ 

           &lt;a href=&quot;#section-7.1.4&quot;&gt;7.1.4&lt;/a&gt;. Vary 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Validator Header Fields 
      &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;. Authentication Challenges 
      &lt;a href=&quot;#section-7.4&quot;&gt;7.4&lt;/a&gt;. Response Context 
           &lt;a href=&quot;#section-7.4.1&quot;&gt;7.4.1&lt;/a&gt;. Allow 
           &lt;a href=&quot;#section-7.4.2&quot;&gt;7.4.2&lt;/a&gt;. Server 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Method Registry 
           &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt;. Considerations for New Methods 
           &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Status Code Registry 
           &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;. Considerations for New Status Codes 
           &lt;a href=&quot;#section-8.2.3&quot;&gt;8.2.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. Header Field Registry 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. Considerations for New Header Fields 
           &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;. Content Coding Registry 
           &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;. Registrations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Attacks Based on File and Path Names 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Attacks Based on Command, Code, or Query Injection 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. Disclosure of Personal Information 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. Disclosure of Sensitive Information in URIs 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. Disclosure of Fragment after Redirects 
      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. Disclosure of Product Information 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. Browser Fingerprinting 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. References 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Differences between HTTP and MIME 
      &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;. MIME-Version 
      &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;. Conversion to Canonical Form 
      &lt;a href=&quot;#appendix-A.3&quot;&gt;A.3&lt;/a&gt;. Conversion of Date Formats 
      &lt;a href=&quot;#appendix-A.4&quot;&gt;A.4&lt;/a&gt;. Conversion of Content-Encoding 
      &lt;a href=&quot;#appendix-A.5&quot;&gt;A.5&lt;/a&gt;. Conversion of Content-Transfer-Encoding 
      &lt;a href=&quot;#appendix-A.6&quot;&gt;A.6&lt;/a&gt;. MHTML and Line Length Limitations 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-D&quot;&gt;Appendix D&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調的ハイパーテキスト情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、リクエストメソッド、リクエストヘッダーフィールド、レスポンスステータスコード、レスポンスヘッダーフィールドで表されるHTTP / 1.1メッセージのセマンティクスを、メッセージのペイロード（メタデータと本文のコンテンツ）とコンテンツネゴシエーションのメカニズムとともに定義します。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;RFC 5741のセクション2&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7231&quot;&gt;http://www.rfc-editor.org/info/rfc7231&lt;/a&gt;で 入手できます。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。リソース &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。表現 &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。表現メタデータ &lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;。表現データの処理 &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;。圧縮または整合性のためのエンコーディング &lt;a href=&quot;#section-3.1.3&quot;&gt;3.1.3&lt;/a&gt;。対象言語 &lt;a href=&quot;#section-3.1.4&quot;&gt;3.1.4&lt;/a&gt;。識別 &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。表現データ &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;。ペイロードセマンティクス &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;。コンテンツネゴシエーション &lt;a href=&quot;#section-3.4.1&quot;&gt;3.4.1&lt;/a&gt;。積極的な交渉 &lt;a href=&quot;#section-3.4.2&quot;&gt;3.4.2&lt;/a&gt;。リアクティブネゴシエーション &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。リクエストメソッド &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。概要 &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。共通メソッドのプロパティ &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;。安全な方法 &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;。べき等メソッド &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;。キャッシュ可能なメソッド &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。メソッドの定義 &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;。 GET &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;。ヘッド &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;。 POST &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;。 PUT &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;。削除 &lt;a href=&quot;#section-4.3.6&quot;&gt;4.3.6&lt;/a&gt;。接続 &lt;a href=&quot;#section-4.3.7&quot;&gt;4.3.7&lt;/a&gt;。オプション &lt;a href=&quot;#section-4.3.8&quot;&gt;4.3.8&lt;/a&gt;。トレース &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。リクエストヘッダーフィールド &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。コントロール &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;。&lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2が&lt;/a&gt;期待され ます。 Max-Forwards &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;。条件 &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;。コンテンツネゴシエーション &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;。品質値 &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;。&lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3を&lt;/a&gt;受け入れ ます。 Accept-Charset &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;。 Accept-Encoding &lt;a href=&quot;#section-5.3.5&quot;&gt;5.3.5&lt;/a&gt;。 Accept-Language &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;。認証資格情報 &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;。リクエストコンテキスト &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;。&lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;から 。リファラー &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;。ユーザーエージェント......................................... &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。応答ステータスコード &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;。ステータスコードの概要 &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;。情報1xx &lt;a href=&quot;#section-6.2.1&quot;&gt;6.2.1&lt;/a&gt;。 100 &lt;a href=&quot;#section-6.2.2&quot;&gt;6.2.2に&lt;/a&gt;進み ます。 101スイッチングプロトコル &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;。成功した2xx &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;。 200 OK &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;。 201作成 &lt;a href=&quot;#section-6.3.3&quot;&gt;6.3.3&lt;/a&gt;。 202承諾済み &lt;a href=&quot;#section-6.3.4&quot;&gt;6.3.4&lt;/a&gt;。 203非&lt;a href=&quot;#section-6.3.5&quot;&gt;信頼&lt;/a&gt;情報 6.3.5。 204コンテンツなし &lt;a href=&quot;#section-6.3.6&quot;&gt;6.3.6&lt;/a&gt;。 205コンテンツをリセット &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;。リダイレクト3xx &lt;a href=&quot;#section-6.4.1&quot;&gt;6.4.1&lt;/a&gt;。 300複数の選択肢 &lt;a href=&quot;#section-6.4.2&quot;&gt;6.4.2&lt;/a&gt;。 301恒久的に移動 &lt;a href=&quot;#section-6.4.3&quot;&gt;6.4.3&lt;/a&gt;。 302発見 &lt;a href=&quot;#section-6.4.4&quot;&gt;6.4.4&lt;/a&gt;。 303その他&lt;a href=&quot;#section-6.4.5&quot;&gt;6.4.5を&lt;/a&gt;参照 。 305 Proxy &lt;a href=&quot;#section-6.4.6&quot;&gt;6.4.6を&lt;/a&gt;使用し ます。 306（未使用） &lt;a href=&quot;#section-6.4.7&quot;&gt;6.4.7&lt;/a&gt;。 307一時的なリダイレクト &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;。クライアントエラー4xx &lt;a href=&quot;#section-6.5.1&quot;&gt;6.5.1&lt;/a&gt;。 400 Bad Request &lt;a href=&quot;#section-6.5.2&quot;&gt;6.5.2&lt;/a&gt;。 402支払いが必要 &lt;a href=&quot;#section-6.5.3&quot;&gt;6.5.3&lt;/a&gt;。 403 Forbidden &lt;a href=&quot;#section-6.5.4&quot;&gt;6.5.4&lt;/a&gt;。 404見つかりません &lt;a href=&quot;#section-6.5.5&quot;&gt;6.5.5&lt;/a&gt;。 405メソッドは許可されていません &lt;a href=&quot;#section-6.5.6&quot;&gt;6.5.6&lt;/a&gt;。 406受け入れ不可 &lt;a href=&quot;#section-6.5.7&quot;&gt;6.5.7&lt;/a&gt;。 408リクエストタイムアウト &lt;a href=&quot;#section-6.5.8&quot;&gt;6.5.8&lt;/a&gt;。 409紛争 &lt;a href=&quot;#section-6.5.9&quot;&gt;6.5.9&lt;/a&gt;。 410ゴーン &lt;a href=&quot;#section-6.5.10&quot;&gt;6.5.10&lt;/a&gt;。 411必要な長さ &lt;a href=&quot;#section-6.5.11&quot;&gt;6.5.11&lt;/a&gt;。 413ペイロードが&lt;a href=&quot;#section-6.5.12&quot;&gt;大き&lt;/a&gt;すぎる 6.5.12。 414 URI Too Long &lt;a href=&quot;#section-6.5.13&quot;&gt;6.5.13&lt;/a&gt;。 415サポートされていないメディアタイプ &lt;a href=&quot;#section-6.5.14&quot;&gt;6.5.14&lt;/a&gt;。 417 Expectation Failed &lt;a href=&quot;#section-6.5.15&quot;&gt;6.5.15&lt;/a&gt;。 426アップグレードが必要 &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;。サーバーエラー5xx &lt;a href=&quot;#section-6.6.1&quot;&gt;6.6.1&lt;/a&gt;。 500内部サーバーエラー &lt;a href=&quot;#section-6.6.2&quot;&gt;6.6.2&lt;/a&gt;。 501未実装 &lt;a href=&quot;#section-6.6.3&quot;&gt;6.6.3&lt;/a&gt;。 502 Bad Gateway &lt;a href=&quot;#section-6.6.4&quot;&gt;6.6.4&lt;/a&gt;。 503サービスを使用できません &lt;a href=&quot;#section-6.6.5&quot;&gt;6.6.5&lt;/a&gt;。 504ゲートウェイタイムアウト &lt;a href=&quot;#section-6.6.6&quot;&gt;6.6.6&lt;/a&gt;。 505 HTTPバージョンはサポートされていない &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。レスポンスヘッダーフィールド &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;。制御データed 7.1.1。開始日 &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;。ロケーション &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;。再試行後........................................ &lt;a href=&quot;#section-7.1.4&quot;&gt;7.1.4&lt;/a&gt;。ヴァリ &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;。バリデーターヘッダーフィールド &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;。認証の課題 &lt;a href=&quot;#section-7.4&quot;&gt;7.4&lt;/a&gt;。応答コンテキスト &lt;a href=&quot;#section-7.4.1&quot;&gt;7.4.1&lt;/a&gt;。&lt;a href=&quot;#section-7.4.2&quot;&gt;7.4.2を&lt;/a&gt;許可 。サーバー &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。 IANAに関する考慮事項 &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;。メソッドレジストリ &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt;。新しいメソッドに関する考慮事項 &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;。登録 &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;。ステータスコードレジストリ &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;。新しいステータスコードに関する考慮事項 &lt;a href=&quot;#section-8.2.3&quot;&gt;8.2.3&lt;/a&gt;。登録 &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;。ヘッダーフィールドレジストリ &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;。新しいヘッダフィールドの考慮事項 &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;。登録 &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;。コンテンツコーディングレジストリ &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;。登録 &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;。ファイル名とパス名に基づく攻撃 &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;。コマンド、コード、クエリインジェクションに基づく攻撃 &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;。個人情報の開示 &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;。 URIでの機密情報の開示 &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;。リダイレクト後のフラグメントの開示 &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;。製品情報の開示 &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;。ブラウザフィンガープリンティング &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;。参考資料 &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;。規範的な参考文献 &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;。有益な参考資料 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。 HTTPとMIMEの違い &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;。 MIMEバージョン &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;。正規形&lt;a href=&quot;#appendix-A.3&quot;&gt;A.3&lt;/a&gt;への変換 。日付形式の変換 &lt;a href=&quot;#appendix-A.4&quot;&gt;A.4&lt;/a&gt;。 Content-Encoding &lt;a href=&quot;#appendix-A.5&quot;&gt;A.5の&lt;/a&gt;変換 。 Content-Transfer-Encodingの変換 &lt;a href=&quot;#appendix-A.6&quot;&gt;A.6&lt;/a&gt;。 MHTMLと行の長さ制限事項 &lt;a href=&quot;#appendix-B&quot;&gt;付録B&lt;/a&gt;。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;付録C&lt;/a&gt;からの変更。輸入ABNF &lt;a href=&quot;#appendix-D&quot;&gt;付録D&lt;/a&gt;。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="40af3a9e68d967dfc1ebb5c1482c0bb1ee2a2de4" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document provides an overview of HTTP architecture and
   its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform
   Resource Identifier (URI) schemes, defines the HTTP/1.1 message
   syntax and parsing requirements, and describes related security
   concerns for implementations.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7230&quot;&gt;http://www.rfc-editor.org/info/rfc7230&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Requirements Notation 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Architecture 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Client/Server Messaging 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Implementation Diversity 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. Intermediaries 
      &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;. Caches 
      &lt;a href=&quot;#section-2.5&quot;&gt;2.5&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-2.6&quot;&gt;2.6&lt;/a&gt;. Protocol Versioning 
      &lt;a href=&quot;#section-2.7&quot;&gt;2.7&lt;/a&gt;. Uniform Resource Identifiers 
           &lt;a href=&quot;#section-2.7.1&quot;&gt;2.7.1&lt;/a&gt;. http URI Scheme 
           &lt;a href=&quot;#section-2.7.2&quot;&gt;2.7.2&lt;/a&gt;. https URI Scheme 
           &lt;a href=&quot;#section-2.7.3&quot;&gt;2.7.3&lt;/a&gt;. http and https URI Normalization and Comparison 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Message Format 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Start Line 
           &lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;. Request Line 
           &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;. Status Line 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Header Fields ............................................. 

           &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;. Field Extensibility 
           &lt;a href=&quot;#section-3.2.2&quot;&gt;3.2.2&lt;/a&gt;. Field Order 
           &lt;a href=&quot;#section-3.2.3&quot;&gt;3.2.3&lt;/a&gt;. Whitespace 
           &lt;a href=&quot;#section-3.2.4&quot;&gt;3.2.4&lt;/a&gt;. Field Parsing 
           &lt;a href=&quot;#section-3.2.5&quot;&gt;3.2.5&lt;/a&gt;. Field Limits 
           &lt;a href=&quot;#section-3.2.6&quot;&gt;3.2.6&lt;/a&gt;. Field Value Components 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Message Body 
           &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1&lt;/a&gt;. Transfer-Encoding 
           &lt;a href=&quot;#section-3.3.2&quot;&gt;3.3.2&lt;/a&gt;. Content-Length 
           &lt;a href=&quot;#section-3.3.3&quot;&gt;3.3.3&lt;/a&gt;. Message Body Length 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. Handling Incomplete Messages 
      &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;. Message Parsing Robustness 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Transfer Codings 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Chunked Transfer Coding 
           &lt;a href=&quot;#section-4.1.1&quot;&gt;4.1.1&lt;/a&gt;. Chunk Extensions 
           &lt;a href=&quot;#section-4.1.2&quot;&gt;4.1.2&lt;/a&gt;. Chunked Trailer Part 
           &lt;a href=&quot;#section-4.1.3&quot;&gt;4.1.3&lt;/a&gt;. Decoding Chunked 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Compression Codings 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Compress Coding 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Deflate Coding 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Gzip Coding 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. TE 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Trailer 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Message Routing 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Identifying a Target Resource 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Connecting Inbound 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Request Target 
           &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;. origin-form 
           &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;. absolute-form 
           &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;. authority-form 
           &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;. asterisk-form 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Host 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Effective Request URI 
      &lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt;. Associating a Response to a Request 
      &lt;a href=&quot;#section-5.7&quot;&gt;5.7&lt;/a&gt;. Message Forwarding 
           &lt;a href=&quot;#section-5.7.1&quot;&gt;5.7.1&lt;/a&gt;. Via 
           &lt;a href=&quot;#section-5.7.2&quot;&gt;5.7.2&lt;/a&gt;. Transformations 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Connection Management 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Connection 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Establishment 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Persistence 
           &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;. Retrying Requests 
           &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;. Pipelining 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. Concurrency 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. Failures and Timeouts 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. Tear-down 
      &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;. Upgrade 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. ABNF List Extension: #rule ..................................... 

   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Header Field Registration 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. URI Scheme Registration 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. Internet Media Type Registration 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. Internet Media Type message/http 
           &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;. Internet Media Type application/http 
      &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;. Transfer Coding Registry 
           &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;. Registration 
      &lt;a href=&quot;#section-8.5&quot;&gt;8.5&lt;/a&gt;. Content Coding Registration 
      &lt;a href=&quot;#section-8.6&quot;&gt;8.6&lt;/a&gt;. Upgrade Token Registry 
           &lt;a href=&quot;#section-8.6.1&quot;&gt;8.6.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.6.2&quot;&gt;8.6.2&lt;/a&gt;. Upgrade Token Registration 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Establishing Authority 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Risks of Intermediaries 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. Attacks via Protocol Element Length 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. Response Splitting 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. Request Smuggling 
      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. Message Integrity 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. Message Confidentiality 
      &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;. Privacy of Server Log Information 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. References 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. HTTP Version History 
      &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;. Changes from HTTP/1.0  
           &lt;a href=&quot;#appendix-A.1.1&quot;&gt;A.1.1&lt;/a&gt;.  Multihomed Web Servers 
           &lt;a href=&quot;#appendix-A.1.2&quot;&gt;A.1.2&lt;/a&gt;.  Keep-Alive Connections 
           &lt;a href=&quot;#appendix-A.1.3&quot;&gt;A.1.3&lt;/a&gt;.  Introduction of Transfer-Encoding 
      &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="translated">要約ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調的ハイパーテキスト情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、HTTPアーキテクチャとそれに関連する用語の概要を説明し、「http」および「https」のURI（Uniform Resource Identifier）スキームを定義し、HTTP / 1.1メッセージの構文と解析要件を定義し、実装に関連するセキュリティ上の懸念について説明します。このメモのステータスこれはインターネット標準トラックのドキュメントです。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。インターネット標準の詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;RFC 5741のセクション2&lt;/a&gt;。このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7230&quot;&gt;http://www.rfc-editor.org/info/rfc7230&lt;/a&gt;で 入手できます。著作権表示Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）この文書の発行日に有効。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しないと、このドキュメントはIETF標準プロセス外で変更できず、その形式を除いて、IETF標準プロセス外でその派生物を作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。目次 &lt;a href=&quot;#section-1&quot;&gt;１&lt;/a&gt;。はじめに &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;。表記要件 &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;。構文表記 &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。アーキテクチャ &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;。クライアント/サーバーメッセージング &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;。実装の多様性 &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;。仲介者 &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;。キャッシュ &lt;a href=&quot;#section-2.5&quot;&gt;2.5&lt;/a&gt;。適合性とエラー処理 &lt;a href=&quot;#section-2.6&quot;&gt;2.6&lt;/a&gt;。プロトコルバージョン管理 &lt;a href=&quot;#section-2.7&quot;&gt;2.7&lt;/a&gt;。 Uniform Resource Identifiers &lt;a href=&quot;#section-2.7.1&quot;&gt;2.7.1&lt;/a&gt;。 http URIスキーム &lt;a href=&quot;#section-2.7.2&quot;&gt;2.7.2&lt;/a&gt;。 https URIスキーム &lt;a href=&quot;#section-2.7.3&quot;&gt;2.7.3&lt;/a&gt;。 httpおよびhttps URIの正規化と比較 &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。メッセージフォーマット &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;。&lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;行目を開始し ます。リクエストライン &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;。ステータスライン &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。ヘッダーフィールド............................................. &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;。フィールドの拡張性 &lt;a href=&quot;#section-3.2.2&quot;&gt;3.2.2&lt;/a&gt;。フィールドオーダー &lt;a href=&quot;#section-3.2.3&quot;&gt;3.2.3&lt;/a&gt;。空白 &lt;a href=&quot;#section-3.2.4&quot;&gt;3.2.4&lt;/a&gt;。フィールド解析 &lt;a href=&quot;#section-3.2.5&quot;&gt;3.2.5&lt;/a&gt;。フィールドの制限 &lt;a href=&quot;#section-3.2.6&quot;&gt;3.2.6&lt;/a&gt;。フィールド値コンポーネント &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;。メッセージ本文 &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1&lt;/a&gt;。 Transfer-Encoding &lt;a href=&quot;#section-3.3.2&quot;&gt;3.3.2&lt;/a&gt;。コンテンツ長 &lt;a href=&quot;#section-3.3.3&quot;&gt;3.3.3&lt;/a&gt;。メッセージ本文の長さ &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;。不完全なメッセージの処理 &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;。メッセージ解析の堅牢性 &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。コーディングの転送 &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。チャンク転送コーディング &lt;a href=&quot;#section-4.1.1&quot;&gt;4.1.1&lt;/a&gt;。チャンク拡張 &lt;a href=&quot;#section-4.1.2&quot;&gt;4.1.2&lt;/a&gt;。チャンクトレーラーパート &lt;a href=&quot;#section-4.1.3&quot;&gt;4.1.3&lt;/a&gt;。チャンク&lt;a href=&quot;#section-4.2&quot;&gt;4.2の&lt;/a&gt;デコード 。圧縮コーディング &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;。圧縮コーディング &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;。デフレートコーディング &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;。 Gzipコーディング &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。 TE &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;。トレーラー &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。メッセージルーティング &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。ターゲットリソースの特定 &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;。インバウンド&lt;a href=&quot;#section-5.3&quot;&gt;5.3の&lt;/a&gt;接続 。リクエストターゲット &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;。 origin-form &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;。絶対形式 &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;。権限フォーム &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;。アスタリスク形式 &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;。ホスト &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;。有効なリクエストURI &lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt;。リクエストへのレスポンスの関連付け &lt;a href=&quot;#section-5.7&quot;&gt;5.7&lt;/a&gt;。メッセージ転送 &lt;a href=&quot;#section-5.7.1&quot;&gt;5.7.1&lt;/a&gt;。&lt;a href=&quot;#section-5.7.2&quot;&gt;5.7.2&lt;/a&gt;経由 。トランスフォーメーション &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。接続管理 &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;。接続 &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;。施設 &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;。永続性 &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;。リクエストの再試行 &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;。パイプライン &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;。並行性 &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;。失敗とタイムアウト &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;。ティアダウン &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;。アップグレード &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。 ABNFリスト拡張：#rule ..................................... &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。 IANAに関する考慮事項 &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;。ヘッダーフィールド登録 &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;。 URIスキーム登録 &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;。インターネットメディアタイプ登録 &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;。インターネットメディアタイプメッセージ/ http &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;。インターネットメディアタイプapplication / http &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;。 Transfer Coding Registry &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;。手順 &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;。登録 &lt;a href=&quot;#section-8.5&quot;&gt;8.5&lt;/a&gt;。コンテンツコーディング登録 &lt;a href=&quot;#section-8.6&quot;&gt;8.6&lt;/a&gt;。 Token Registry &lt;a href=&quot;#section-8.6.1&quot;&gt;8.6.1を&lt;/a&gt;アップグレードし ます。手順 &lt;a href=&quot;#section-8.6.2&quot;&gt;8.6.2&lt;/a&gt;。トークン登録のアップグレード &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;。セキュリティに関する考慮事項 &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;。権限の確立 &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;。仲介者のリスク &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;。プロトコル要素長&lt;a href=&quot;#section-9.4&quot;&gt;9.4による&lt;/a&gt;攻撃 。応答分割 &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;。密輸を要求する &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;。メッセージの完全性 &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;。メッセージの機密性 &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;。サーバーログ情報のプライバシー &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;。謝辞 &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;。参考資料 &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;。規範的な参照 &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;。有益な参考資料 &lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。 HTTPバージョン履歴 &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;。 HTTP / 1.0 &lt;a href=&quot;#appendix-A.1.1&quot;&gt;A.1.1&lt;/a&gt;からの変更点 。マルチホームWebサーバー &lt;a href=&quot;#appendix-A.1.2&quot;&gt;A.1.2&lt;/a&gt;。キープアライブ接続 &lt;a href=&quot;#appendix-A.1.3&quot;&gt;A.1.3&lt;/a&gt;。転送エンコーディングの紹介 &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;付録B&lt;/a&gt;からの変更。収集されたABNFインデックス............................................... ..............</target>
        </trans-unit>
        <trans-unit id="169ce4ffcc45df2dca538209a9b8308901d5a3b7" translate="yes" xml:space="preserve">
          <source>Abstract

   This specification describes an optimized expression of the semantics
   of the Hypertext Transfer Protocol (HTTP), referred to as HTTP
   version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network
   resources and a reduced perception of latency by introducing header
   field compression and allowing multiple concurrent exchanges on the
   same connection.  It also introduces unsolicited push of
   representations from servers to clients.

   This specification is an alternative to, but does not obsolete, the
   HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7540&quot;&gt;http://www.rfc-editor.org/info/rfc7540&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. HTTP/2 Protocol Overview 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Document Organization 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Conventions and Terminology 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Starting HTTP/2 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. HTTP/2 Version Identification 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Starting HTTP/2 for &quot;http&quot; URIs 
           &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;. HTTP2-Settings Header Field 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Starting HTTP/2 for &quot;https&quot; URIs 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. Starting HTTP/2 with Prior Knowledge 
      &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;. HTTP/2 Connection Preface 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. HTTP Frames 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Frame Format 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Frame Size 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Header Compression and Decompression 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Streams and Multiplexing 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Stream States 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Stream Identifiers 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Stream Concurrency 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Flow Control 
           &lt;a href=&quot;#section-5.2.1&quot;&gt;5.2.1&lt;/a&gt;. Flow-Control Principles 
           &lt;a href=&quot;#section-5.2.2&quot;&gt;5.2.2&lt;/a&gt;. Appropriate Use of Flow Control 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Stream Priority 
           &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;. Stream Dependencies 
           &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;. Dependency Weighting 
           &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;. Reprioritization 
           &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;. Prioritization State Management 
           &lt;a href=&quot;#section-5.3.5&quot;&gt;5.3.5&lt;/a&gt;. Default Priorities 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Error Handling 
           &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;. Connection Error Handling 
           &lt;a href=&quot;#section-5.4.2&quot;&gt;5.4.2&lt;/a&gt;. Stream Error Handling .............................. 

           &lt;a href=&quot;#section-5.4.3&quot;&gt;5.4.3&lt;/a&gt;. Connection Termination 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Extending HTTP/2 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Frame Definitions 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. DATA 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. HEADERS 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. PRIORITY 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. RST_STREAM 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. SETTINGS 
           &lt;a href=&quot;#section-6.5.1&quot;&gt;6.5.1&lt;/a&gt;. SETTINGS Format 
           &lt;a href=&quot;#section-6.5.2&quot;&gt;6.5.2&lt;/a&gt;. Defined SETTINGS Parameters 
           &lt;a href=&quot;#section-6.5.3&quot;&gt;6.5.3&lt;/a&gt;. Settings Synchronization 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. PUSH_PROMISE 
      &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;. PING 
      &lt;a href=&quot;#section-6.8&quot;&gt;6.8&lt;/a&gt;. GOAWAY 
      &lt;a href=&quot;#section-6.9&quot;&gt;6.9&lt;/a&gt;. WINDOW_UPDATE 
           &lt;a href=&quot;#section-6.9.1&quot;&gt;6.9.1&lt;/a&gt;. The Flow-Control Window 
           &lt;a href=&quot;#section-6.9.2&quot;&gt;6.9.2&lt;/a&gt;. Initial Flow-Control Window Size 
           &lt;a href=&quot;#section-6.9.3&quot;&gt;6.9.3&lt;/a&gt;. Reducing the Stream Window Size 
      &lt;a href=&quot;#section-6.10&quot;&gt;6.10&lt;/a&gt;. CONTINUATION 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Error Codes 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. HTTP Message Exchanges 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. HTTP Request/Response Exchange 
           &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;. Upgrading from HTTP/2 
           &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt;. HTTP Header Fields 
           &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;. Examples 
           &lt;a href=&quot;#section-8.1.4&quot;&gt;8.1.4&lt;/a&gt;. Request Reliability Mechanisms in HTTP/2 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Server Push 
           &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;. Push Requests 
           &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;. Push Responses 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. The CONNECT Method 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Additional HTTP Requirements/Considerations 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Connection Management 
           &lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt;. Connection Reuse 
           &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt;. The 421 (Misdirected Request) Status Code 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Use of TLS Features 
           &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt;. TLS 1.2 Features 
           &lt;a href=&quot;#section-9.2.2&quot;&gt;9.2.2&lt;/a&gt;. TLS 1.2 Cipher Suites 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Server Authority 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Cross-Protocol Attacks 
      &lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt;. Intermediary Encapsulation Attacks 
      &lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt;. Cacheability of Pushed Responses 
      &lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt;. Denial-of-Service Considerations 
           &lt;a href=&quot;#section-10.5.1&quot;&gt;10.5.1&lt;/a&gt;. Limits on Header Block Size 
           &lt;a href=&quot;#section-10.5.2&quot;&gt;10.5.2&lt;/a&gt;. CONNECT Issues 
      &lt;a href=&quot;#section-10.6&quot;&gt;10.6&lt;/a&gt;. Use of Compression 
      &lt;a href=&quot;#section-10.7&quot;&gt;10.7&lt;/a&gt;. Use of Padding 
      &lt;a href=&quot;#section-10.8&quot;&gt;10.8&lt;/a&gt;. Privacy Considerations ................................... 

   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. Registration of HTTP/2 Identification Strings 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. Frame Type Registry 
      &lt;a href=&quot;#section-11.3&quot;&gt;11.3&lt;/a&gt;. Settings Registry 
      &lt;a href=&quot;#section-11.4&quot;&gt;11.4&lt;/a&gt;. Error Code Registry 
      &lt;a href=&quot;#section-11.5&quot;&gt;11.5&lt;/a&gt;. HTTP2-Settings Header Field Registration 
      &lt;a href=&quot;#section-11.6&quot;&gt;11.6&lt;/a&gt;. PRI Method Registration 
      &lt;a href=&quot;#section-11.7&quot;&gt;11.7&lt;/a&gt;. The 421 (Misdirected Request) HTTP Status Code 
      &lt;a href=&quot;#section-11.8&quot;&gt;11.8&lt;/a&gt;. The h2c Upgrade Token 
   &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt;. References 
      &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-12.2&quot;&gt;12.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. TLS 1.2 Cipher Suite Black List 
   Acknowledgements 
   Authors' Addresses</source>
          <target state="translated">要約この仕様では、HTTPバージョン2（HTTP / 2）と呼ばれるハイパーテキスト転送プロトコル（HTTP）のセマンティクスの最適化された表現について説明します。 HTTP / 2は、ヘッダーフィールドの圧縮を導入し、同じ接続で複数の同時交換を可能にすることで、ネットワークリソースのより効率的な使用を可能にし、遅延の認識を減らします。また、サーバーからクライアントへの一方的な表現のプッシュも導入します。この仕様は、HTTP / 1.1メッセージ構文の代替ですが、廃止されるわけではありません。 HTTPの既存のセマンティクスは変更されません。このメモのステータスこれはインターネット標準化過程の文書です。このドキュメントは、インターネット技術特別調査委員会（IETF）の製品です。これは、IETFコミュニティのコンセンサスを表しています。パブリックレビューを受け、Internet Engineering Steering Group（IESG）による公開が承認されました。インターネット標準の詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;RFC5741のセクション2&lt;/a&gt;。このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、&lt;a href=&quot;http://www.rfc-editor.org/info/rfc7540&quot;&gt;http：//www.rfc-editor.org/info/rfc7540&lt;/a&gt;で入手できます。著作権表示Copyright（c）2015 IETFTrustおよびドキュメントの作成者として特定された人物。全著作権所有。このドキュメントは、&lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt;およびIETFドキュメントに関連するIETFトラストの法的規定（&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info）の対象となります。&lt;/a&gt;）このドキュメントの発行日に有効です。これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eに記載されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseに記載されている保証なしで提供されます。目次&lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;。はじめに&lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;。 HTTP / 2プロトコルの概要&lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;。ドキュメント編成&lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;。表記法と用語&lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;。 HTTP / &lt;a href=&quot;#section-3.1&quot;&gt;23.1を&lt;/a&gt;開始します。 HTTP / 2バージョン識別&lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;。 「http」URIのHTTP / 2の開始&lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;。 HTTP2-設定ヘッダーフィールド&lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;。 「https」URIのHTTP / 2を開始します&lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;。事前知識&lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;でHTTP / 2を開始する。 HTTP / 2接続の序文&lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;。 HTTPフレーム&lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;。フレームフォーマット&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;。フレームサイズ&lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;。ヘッダーの圧縮と解凍&lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;。ストリームと多重化&lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;。ストリーム状態&lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;。ストリーム識別子&lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;。ストリームの同時実行&lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;。フロー制御&lt;a href=&quot;#section-5.2.1&quot;&gt;5.2.1&lt;/a&gt;。フロー制御の原則&lt;a href=&quot;#section-5.2.2&quot;&gt;5.2.2&lt;/a&gt;。フロー制御の適切な使用&lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;。ストリームの優先度&lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;。ストリームの依存関係&lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;。依存関係の重み付け&lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;。再優先順位付け&lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;。優先順位付け状態管理&lt;a href=&quot;#section-5.3.5&quot;&gt;5.3.5&lt;/a&gt;。デフォルトの優先順位&lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;。エラー処理&lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;。接続エラー処理&lt;a href=&quot;#section-5.4.2&quot;&gt;5.4.2&lt;/a&gt;。ストリームエラー処理............................................ &lt;a href=&quot;#section-5.4.3&quot;&gt;5.4.3&lt;/a&gt;。接続終了&lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;。 HTTPの拡張/ 2 &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;。フレーム定義&lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;。データ&lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;。ヘッダー&lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;。優先度&lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;。 RST_STREAM &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;。設定&lt;a href=&quot;#section-6.5.1&quot;&gt;6.5.1&lt;/a&gt;。設定フォーマット&lt;a href=&quot;#section-6.5.2&quot;&gt;6.5.2&lt;/a&gt;。定義された設定パラメータ&lt;a href=&quot;#section-6.5.3&quot;&gt;6.5.3&lt;/a&gt;。設定の同期&lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;。 PUSH_PROMISE &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;。 PING &lt;a href=&quot;#section-6.8&quot;&gt;6.8&lt;/a&gt;。 GOAWAY &lt;a href=&quot;#section-6.9&quot;&gt;6.9&lt;/a&gt;。 WINDOW_UPDATE &lt;a href=&quot;#section-6.9.1&quot;&gt;6.9.1&lt;/a&gt;。フロー制御ウィンドウ&lt;a href=&quot;#section-6.9.2&quot;&gt;6.9.2&lt;/a&gt;。初期フロー制御ウィンドウサイズ&lt;a href=&quot;#section-6.9.3&quot;&gt;6.9.3&lt;/a&gt;。ストリームウィンドウサイズの縮小&lt;a href=&quot;#section-6.10&quot;&gt;6.10&lt;/a&gt;。継続&lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;。エラーコード&lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;。 HTTPメッセージ交換&lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;。 HTTP要求/応答交換&lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;。 HTTP &lt;a href=&quot;#section-8.1.2&quot;&gt;/28.1.2&lt;/a&gt;からのアップグレード。 HTTPヘッダーフィールド&lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;。例&lt;a href=&quot;#section-8.1.4&quot;&gt;8.1.4&lt;/a&gt;。リクエストHTTP / 2での信頼性のメカニズム&lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;。サーバープッシュ&lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;。プッシュリクエスト&lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;。プッシュ応答&lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;。 CONNECTメソッド&lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;。追加のHTTP要件/考慮事項&lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;。接続管理&lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt;。接続の再利用&lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt;。 421（誤った要求）ステータスコード&lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;。 TLS機能の使用&lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt;。 TLS1.2の機能&lt;a href=&quot;#section-9.2.2&quot;&gt;9.2.2&lt;/a&gt;。 TLS1.2暗号スイート&lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;。セキュリティに関する考慮事項&lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;。サーバー権限&lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;。クロスプロトコル攻撃&lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt;。中間カプセル化攻撃&lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt;。プッシュされた応答のキャッシュ可能性&lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt;。サービス拒否に関する考慮事項&lt;a href=&quot;#section-10.5.1&quot;&gt;10.5.1&lt;/a&gt;。ヘッダーブロックサイズの制限&lt;a href=&quot;#section-10.5.2&quot;&gt;10.5.2&lt;/a&gt;。 CONNECTの問題&lt;a href=&quot;#section-10.6&quot;&gt;10.6&lt;/a&gt;。圧縮の使用&lt;a href=&quot;#section-10.7&quot;&gt;10.7&lt;/a&gt;。パディングの使用&lt;a href=&quot;#section-10.8&quot;&gt;10.8&lt;/a&gt;。プライバシーに関する考慮事項................................... &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;。 IANAの考慮事項&lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;。 HTTP / 2識別文字&lt;a href=&quot;#section-11.2&quot;&gt;列の&lt;/a&gt;登録11.2。フレームタイプレジストリ&lt;a href=&quot;#section-11.3&quot;&gt;11.3&lt;/a&gt;。設定レジストリ&lt;a href=&quot;#section-11.4&quot;&gt;11.4&lt;/a&gt;。エラーコードレジストリ&lt;a href=&quot;#section-11.5&quot;&gt;11.5&lt;/a&gt;。 HTTP2-設定ヘッダーフィールド登録&lt;a href=&quot;#section-11.6&quot;&gt;11.6&lt;/a&gt;。PRIメソッド登録&lt;a href=&quot;#section-11.7&quot;&gt;11.7&lt;/a&gt;。421（誤った要求）HTTPステータスコード&lt;a href=&quot;#section-11.8&quot;&gt;11.8&lt;/a&gt;。h2cアップグレードトークン&lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt;。参照&lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt;。規範的参考文献&lt;a href=&quot;#section-12.2&quot;&gt;12.2&lt;/a&gt;。有益な参考資料&lt;a href=&quot;#appendix-A&quot;&gt;付録A&lt;/a&gt;。TLS1.2暗号スイートブラックリストの謝辞著者のアドレス</target>
        </trans-unit>
        <trans-unit id="088fbdf0be09f2b57f797db06f694f1729caf35d" translate="yes" xml:space="preserve">
          <source>Accelerometer</source>
          <target state="translated">Accelerometer</target>
        </trans-unit>
        <trans-unit id="4a6020ab1c5517bd5d30e781beba5515f12cafd7" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'Accelerometer' in that specification.&lt;/small&gt;</source>
          <target state="translated">加速度計&lt;br/&gt;&lt;small&gt;その仕様における「加速度計」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bb54db510a92908a5a4df79fc1ad1eae8df50ec3" translate="yes" xml:space="preserve">
          <source>Accept</source>
          <target state="translated">Accept</target>
        </trans-unit>
        <trans-unit id="87fbce3fda446208ef2acea7678d689afb9f87e9" translate="yes" xml:space="preserve">
          <source>Accept (RFC 2616)</source>
          <target state="translated">Accept (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="0dcc20ef513587031d3a72165f89c3586e57c7de" translate="yes" xml:space="preserve">
          <source>Accept (RFC 7231)</source>
          <target state="translated">Accept (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="4e7eb8a9e22a94e3c88a689612ab6a2a6f4c8e4f" translate="yes" xml:space="preserve">
          <source>Accept request-headers can reveal information about the user to all
   servers which are accessed. The Accept-Language header in particular
   can reveal information the user would consider to be of a private
   nature, because the understanding of particular languages is often 

   strongly correlated to the membership of a particular ethnic group.
   User agents which offer the option to configure the contents of an
   Accept-Language header to be sent in every request are strongly
   encouraged to let the configuration process include a message which
   makes the user aware of the loss of privacy involved.

   An approach that limits the loss of privacy would be for a user agent
   to omit the sending of Accept-Language headers by default, and to ask
   the user whether or not to start sending Accept-Language headers to a
   server if it detects, by looking for any Vary response-header fields
   generated by the server, that such sending could improve the quality
   of service.

   Elaborate user-customized accept header fields sent in every request,
   in particular if these include quality values, can be used by servers
   as relatively reliable and long-lived user identifiers. Such user
   identifiers would allow content providers to do click-trail tracking,
   and would allow collaborating content providers to match cross-server
   click-trails or form submissions of individual users. Note that for
   many users not behind a proxy, the network address of the host
   running the user agent will also serve as a long-lived user
   identifier. In environments where proxies are used to enhance
   privacy, user agents ought to be conservative in offering accept
   header configuration options to end users. As an extreme privacy
   measure, proxies could filter the accept headers in relayed requests.
   General purpose user agents which provide a high degree of header
   configurability SHOULD warn users about the loss of privacy which can
   be involved.</source>
          <target state="translated">Accept リクエストヘッダは、アクセスされるすべてのサーバに対してユーザに関する情報を 明らかにすることができます。特にAccept-Languageヘッダーは、ユーザーがプライベートな性質であると 考える情報を明らかにすることができる。なぜなら、特定の言語の理解は、特定の民族グループの メンバーシップと強く相関していることが多いからである。すべてのリクエストで送られるAccept-Languageヘッダーの内容を設定す るオプションを提供するユーザーエージェントは、設定プロセスがユーザーにプライバシーの 損失を認識させるメッセージを含むようにすることを強く推奨される。プライバシーの損失を制限するアプローチとしては、ユーザーエージェントが Accept-Languageヘッダーの送信をデフォルトで省略し、サーバーが生成するVary応答ヘッダー フィールドを探すことで、そのような送信がサービスの質を向上させる可能性があることを検出した場合に、 ユーザーにサーバーへのAccept-Languageヘッダーの送信を開始するかどうかを尋ねることである。すべてのリクエストで送られる精巧なユーザカスタマイズされたAcceptヘッダフィールドは、特にそれらが品質値を含んでいる場合には、サーバによって比較的信頼性が高く長持ちするユーザ識別子として使用することができる。このようなユーザ識別子を使用することで、コンテンツプロバイダはクリックトレイルの追跡を行うことができ、また、協力しているコンテンツプロバイダは、個々のユーザのクロスサーバのクリックトレイルやフォームの送信を照合することができるようになるだろう。プロキシの後ろにいない多くのユーザーにとっては、ユーザーエージェントを実行している ホストのネットワークアドレスもまた、長寿命のユーザー識別子として機能する ことに注意すること。プライバシーを強化するためにプロキシが使用される環境では、ユーザーエージェント はエンドユーザーにアクセプトヘッダー設定オプションを提供する際に保守的で あるべきである。極端なプライバシー対策として、プロキシは中継されたリクエストのアクセ スヘッダーをフィルタリングすることができる。高度なヘッダー設定可能性を提供する汎用のユーザーエージェントは、それに 伴うプライバシーの損失についてユーザーに警告するべきである[SHOULD]。</target>
        </trans-unit>
        <trans-unit id="cbf7652dda9b574ee3d8fa9ba1a981f6e580b50c" translate="yes" xml:space="preserve">
          <source>Accept-CH</source>
          <target state="translated">Accept-CH</target>
        </trans-unit>
        <trans-unit id="36d96a263709e34be5a5041f8061f37f18742f90" translate="yes" xml:space="preserve">
          <source>Accept-CH-Lifetime</source>
          <target state="translated">Accept-CH-Lifetime</target>
        </trans-unit>
        <trans-unit id="aaf67685a1d81108695f45293bf84f12a0c9cb46" translate="yes" xml:space="preserve">
          <source>Accept-Charset</source>
          <target state="translated">Accept-Charset</target>
        </trans-unit>
        <trans-unit id="1eb70f6fb0b92415ec54f2514f66fef0477c9d03" translate="yes" xml:space="preserve">
          <source>Accept-Charset (RFC 2616)</source>
          <target state="translated">Accept-Charset (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="d46e62b664d44c5c0ad50b6fbfcf9b7ffd34c78f" translate="yes" xml:space="preserve">
          <source>Accept-Charset (RFC 7231)</source>
          <target state="translated">Accept-Charset (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="05a25bf4449549e9b5ee96afc9f36857b37fc6e8" translate="yes" xml:space="preserve">
          <source>Accept-Charset is no more</source>
          <target state="translated">Accept-Charsetはもうありません。</target>
        </trans-unit>
        <trans-unit id="177429157553dbb71c8bab30aac57a62d268cc1c" translate="yes" xml:space="preserve">
          <source>Accept-Encoding</source>
          <target state="translated">Accept-Encoding</target>
        </trans-unit>
        <trans-unit id="a80413a74e8c6a5ee7628707c28264f5fc57f11c" translate="yes" xml:space="preserve">
          <source>Accept-Encoding (RFC 2616)</source>
          <target state="translated">Accept-Encoding (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="d76f042c2a36b8346c52df9cd05152e174c68474" translate="yes" xml:space="preserve">
          <source>Accept-Encoding (RFC 7231)</source>
          <target state="translated">Accept-Encoding (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="58385b3fba0471cb7c233041f9d15c4b6ccf18fe" translate="yes" xml:space="preserve">
          <source>Accept-Language</source>
          <target state="translated">Accept-Language</target>
        </trans-unit>
        <trans-unit id="8a194a37a0fab016d1dac628a2d4a8bdc2847fc0" translate="yes" xml:space="preserve">
          <source>Accept-Language (RFC 2616)</source>
          <target state="translated">受け入れ言語 (RFC2616)</target>
        </trans-unit>
        <trans-unit id="6a5d4a129ec209d245a79d6c3f2edfdd87668589" translate="yes" xml:space="preserve">
          <source>Accept-Language (RFC 7231)</source>
          <target state="translated">受け入れ言語(RFC7231)</target>
        </trans-unit>
        <trans-unit id="ea739811444a8e5f6504b6782269b732b928cc75" translate="yes" xml:space="preserve">
          <source>Accept-Patch</source>
          <target state="translated">Accept-Patch</target>
        </trans-unit>
        <trans-unit id="e22e9df1bfaf7e154b76461094ccdcabf7952070" translate="yes" xml:space="preserve">
          <source>Accept-Post</source>
          <target state="translated">Accept-Post</target>
        </trans-unit>
        <trans-unit id="02910fe72aef1e79d1ce552b0125fe9d6e734463" translate="yes" xml:space="preserve">
          <source>Accept-Ranges</source>
          <target state="translated">Accept-Ranges</target>
        </trans-unit>
        <trans-unit id="0e716e0e0b978d47436d93b491a16aeaac22f9e5" translate="yes" xml:space="preserve">
          <source>Accept-Ranges (RFC 2616)</source>
          <target state="translated">範囲の受け入れ (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="764a440a698a17aa1dc774708163b405c87ff4bd" translate="yes" xml:space="preserve">
          <source>Accept-Ranges (RFC 7233)</source>
          <target state="translated">範囲の受け入れ (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="bc19e40eb87eca9ddb4a92e3a97c67ee6143d7d5" translate="yes" xml:space="preserve">
          <source>Access Authentication (RFC 2616)</source>
          <target state="translated">アクセス認証 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="6a77d7667269bf6db4712e4162088af68dbec9fc" translate="yes" xml:space="preserve">
          <source>Access Authentication Framework (RFC 7235)</source>
          <target state="translated">アクセス認証フレームワーク (RFC 7235)</target>
        </trans-unit>
        <trans-unit id="c22573ef8df23292ff057255b9a28b1bea0f5bec" translate="yes" xml:space="preserve">
          <source>Access control is a security technique that can be used to regulate who or what can view or use resources in a computing environment.</source>
          <target state="translated">アクセス制御は、コンピューティング環境において、誰が、あるいは何が、リソースを閲覧したり使用したりすることができるかを規制するために使用できるセキュリティ技術です。</target>
        </trans-unit>
        <trans-unit id="f81413e1c5136d3c3d54929c9e2b0c8e7144bc04" translate="yes" xml:space="preserve">
          <source>Access control systems perform &lt;a href=&quot;http://searchsoftwarequality.techtarget.com/definition/authorization&quot;&gt;authorization&lt;/a&gt; identification, &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/authentication&quot;&gt;authentication&lt;/a&gt;, access approval, and accountability of entities through login credentials including &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/password&quot;&gt;passwords&lt;/a&gt;, personal identification numbers (PINs), &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/biometrics&quot;&gt;biometric&lt;/a&gt; scans, and physical or electronic keys.</source>
          <target state="translated">アクセス制御システムは、実行&lt;a href=&quot;http://searchsoftwarequality.techtarget.com/definition/authorization&quot;&gt;の許可&lt;/a&gt;識別、&lt;a href=&quot;http://searchsecurity.techtarget.com/definition/authentication&quot;&gt;認証&lt;/a&gt;などのログイン資格情報を通じて実体の、アクセスの承認、および説明責任を&lt;a href=&quot;http://searchsecurity.techtarget.com/definition/password&quot;&gt;、パスワード&lt;/a&gt;、個人識別番号（PIN）、&lt;a href=&quot;http://searchsecurity.techtarget.com/definition/biometrics&quot;&gt;バイオメトリクス&lt;/a&gt;スキャン、および物理的または電子キー。</target>
        </trans-unit>
        <trans-unit id="d810350110ab0e795aa4da0b30363f0a9f966603" translate="yes" xml:space="preserve">
          <source>Access forbidden</source>
          <target state="translated">アクセス禁止</target>
        </trans-unit>
        <trans-unit id="80c707124192246c159bfaa608d8114812340fa4" translate="yes" xml:space="preserve">
          <source>Access using credentials in the URL</source>
          <target state="translated">URLのクレデンシャルを使用してアクセス</target>
        </trans-unit>
        <trans-unit id="09fbec75ee860af401feca052767eb8d2119fc55" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Credentials</source>
          <target state="translated">Access-Control-Allow-Credentials</target>
        </trans-unit>
        <trans-unit id="2d66b46792a018ad2020282cc416e9ee8f06f861" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Headers</source>
          <target state="translated">Access-Control-Allow-Headers</target>
        </trans-unit>
        <trans-unit id="2a2a0c7e0ef78c7c6bd13f7ae4ec973cd75d4f40" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Methods</source>
          <target state="translated">Access-Control-Allow-Methods</target>
        </trans-unit>
        <trans-unit id="c4f2dafa374f61f543d5c6c14d4bdbb5b6456db0" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Origin</source>
          <target state="translated">Access-Control-Allow-Origin</target>
        </trans-unit>
        <trans-unit id="313ef5554833c1d023f8841fd3ca07c129f4dabb" translate="yes" xml:space="preserve">
          <source>Access-Control-Expose-Headers</source>
          <target state="translated">Access-Control-Expose-Headers</target>
        </trans-unit>
        <trans-unit id="4196525184a54a54617a46e60664f7d0e4576b20" translate="yes" xml:space="preserve">
          <source>Access-Control-Max-Age</source>
          <target state="translated">Access-Control-Max-Age</target>
        </trans-unit>
        <trans-unit id="19e900248599e307979b6e63f1848ccf43a39cde" translate="yes" xml:space="preserve">
          <source>Access-Control-Request-Headers</source>
          <target state="translated">Access-Control-Request-Headers</target>
        </trans-unit>
        <trans-unit id="95705e26c9fe99470c7ef1269a9e4c14d288b849" translate="yes" xml:space="preserve">
          <source>Access-Control-Request-Method</source>
          <target state="translated">Access-Control-Request-Method</target>
        </trans-unit>
        <trans-unit id="07e4b36adfd07ceb756a5d56381f00df21670fde" translate="yes" xml:space="preserve">
          <source>Add Android version to Fennec UA String (bug 1169772)</source>
          <target state="translated">Fennec UA StringにAndroid版を追加 (バグ 1169772)</target>
        </trans-unit>
        <trans-unit id="3858ee0b1cf51a7d707eae259a28585eabdbec88" translate="yes" xml:space="preserve">
          <source>Add the following line to the Web.config file to send the &lt;code&gt;Public-Key-Pins&lt;/code&gt; header:</source>
          <target state="translated">次の行をWeb.configファイルに追加して、 &lt;code&gt;Public-Key-Pins&lt;/code&gt; ヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="87343a4ec44d6166bd6139504ce40cd88c57d49d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;frame-src&lt;/code&gt;, &lt;code&gt;manifest-src&lt;/code&gt; and &lt;code&gt;worker-src&lt;/code&gt; as defaults.</source>
          <target state="translated">&lt;code&gt;frame-src&lt;/code&gt; 、 &lt;code&gt;manifest-src&lt;/code&gt; 、 &lt;code&gt;worker-src&lt;/code&gt; をデフォルトとして追加しました。</target>
        </trans-unit>
        <trans-unit id="760223db38df00fd781c0887ee7e1f480b28b1c4" translate="yes" xml:space="preserve">
          <source>Added by a proxy if it applies any transformation to the representation, such as changing the content-coding, media-type or the like.</source>
          <target state="translated">コンテントコーディングやメディアタイプなどを変更するなど、表現に変換を適用する場合、プロキシによって追加される。</target>
        </trans-unit>
        <trans-unit id="1f6aba7e1c260b1e97306b61055dc5586e639243" translate="yes" xml:space="preserve">
          <source>Added by proxies, both forward and reverse proxies, and can appear in the request headers and the response headers.</source>
          <target state="translated">プロキシによって追加されたもので、フォワードプロキシとリバースプロキシの両方で、リクエストヘッダとレスポンスヘッダに現れることができます。</target>
        </trans-unit>
        <trans-unit id="c6b68b9b3bb4cdd89081228b70979f9dc4741b29" translate="yes" xml:space="preserve">
          <source>Adding a line similar to the following to your webserver's config will enable HPKP on your Apache. This requires &lt;code&gt;mod_headers&lt;/code&gt; enabled.</source>
          <target state="translated">次のような行をWebサーバーの構成に追加すると、ApacheでHPKPが有効になります。これには &lt;code&gt;mod_headers&lt;/code&gt; を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="7dd6d658aa94b5d065ce37a8745178e4946d3138" translate="yes" xml:space="preserve">
          <source>Adding a new user through a signup modal;</source>
          <target state="translated">サインアップモーダルを使って新しいユーザーを追加します。</target>
        </trans-unit>
        <trans-unit id="0b33cfd7eec93815656866755a3c74843234ba55" translate="yes" xml:space="preserve">
          <source>Adding the following line and inserting the appropriate &lt;code&gt;pin-sha256=&quot;...&quot;&lt;/code&gt; values will enable HPKP on your nginx. This requires the &lt;code&gt;ngx_http_headers_module.&lt;/code&gt;</source>
          <target state="translated">次の行を追加し、適切な &lt;code&gt;pin-sha256=&quot;...&quot;&lt;/code&gt; 値を挿入すると、nginxでHPKPが有効になります。これには &lt;code&gt;ngx_http_headers_module.&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="0e4beeace5c1da3ea1621f1d80ef923b85ae8c3d" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes</source>
          <target state="translated">追加のHTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="1967bb490854e6f28ca3226c89aac1f8fefbf865" translate="yes" xml:space="preserve">
          <source>Additional cache control mechanisms have been introduced.</source>
          <target state="translated">追加のキャッシュ制御メカニズムが導入されました。</target>
        </trans-unit>
        <trans-unit id="4ca7b9663ad28e00bad95a214ec91b0b6850abe7" translate="yes" xml:space="preserve">
          <source>Addresses</source>
          <target state="translated">Addresses</target>
        </trans-unit>
        <trans-unit id="995ce128c900d1dd4799f4d03800bc30f8a436b1" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;base-uri&lt;/code&gt;, &lt;code&gt;child-src&lt;/code&gt;, &lt;code&gt;form-action&lt;/code&gt;, &lt;code&gt;frame-ancestors&lt;/code&gt;, &lt;code&gt;plugin-types&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, and &lt;code&gt;report-uri&lt;/code&gt;. Deprecates &lt;code&gt;frame-src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;base-uri&lt;/code&gt; 、 &lt;code&gt;child-src&lt;/code&gt; 、 &lt;code&gt;form-action&lt;/code&gt; 、 &lt;code&gt;frame-ancestors&lt;/code&gt; 、 &lt;code&gt;plugin-types&lt;/code&gt; 、 &lt;code&gt;referrer&lt;/code&gt; 、および &lt;code&gt;report-uri&lt;/code&gt; を追加します。 &lt;code&gt;frame-src&lt;/code&gt; を廃止します。</target>
        </trans-unit>
        <trans-unit id="4fdd0faf0766b83c157ed1bedec26ec4f6e1bf8e" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;block-all-mixed-content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;block-all-mixed-content&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="698c1f11ceb6668338bb9d2d17bb8f430c4a92aa" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;disown-opener&lt;/code&gt;, &lt;code&gt;manifest-src&lt;/code&gt;, &lt;code&gt;navigate-to&lt;/code&gt;, &lt;code&gt;report-to&lt;/code&gt;, &lt;code&gt;strict-dynamic&lt;/code&gt;, &lt;code&gt;worker-src&lt;/code&gt;. Undeprecates &lt;code&gt;frame-src&lt;/code&gt;. Deprecates &lt;code&gt;report-uri&lt;/code&gt; in favor if &lt;code&gt;report-to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disown-opener&lt;/code&gt; 、 &lt;code&gt;manifest-src&lt;/code&gt; 、 &lt;code&gt;navigate-to&lt;/code&gt; 、 &lt;code&gt;report-to&lt;/code&gt; 、 &lt;code&gt;strict-dynamic&lt;/code&gt; 、 &lt;code&gt;worker-src&lt;/code&gt; を追加します。 &lt;code&gt;frame-src&lt;/code&gt; の非推奨化。 &lt;code&gt;report-to&lt;/code&gt; の場合は、 &lt;code&gt;report-uri&lt;/code&gt; を非推奨にします。</target>
        </trans-unit>
        <trans-unit id="c9d53db6af9b950aa6111bf9a5dda8ffb5ba7a6b" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;manifest-src&lt;/code&gt;, &lt;code&gt;navigate-to&lt;/code&gt;, &lt;code&gt;report-to&lt;/code&gt;, &lt;code&gt;strict-dynamic&lt;/code&gt;, &lt;code&gt;worker-src&lt;/code&gt;. Undeprecates &lt;code&gt;frame-src&lt;/code&gt;. Deprecates &lt;code&gt;report-uri&lt;/code&gt; in favor if &lt;code&gt;report-to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;manifest-src&lt;/code&gt; 、 &lt;code&gt;navigate-to&lt;/code&gt; 、 &lt;code&gt;report-to&lt;/code&gt; 、 &lt;code&gt;strict-dynamic&lt;/code&gt; 、 &lt;code&gt;worker-src&lt;/code&gt; を追加します。 &lt;code&gt;frame-src&lt;/code&gt; の非推奨を解除します。 &lt;code&gt;report-uri&lt;/code&gt; を廃止し、 &lt;code&gt;report-to&lt;/code&gt; を優先します。</target>
        </trans-unit>
        <trans-unit id="1f3f4d3e4268a9bb85346c045c680766b2c7af4b" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;require-sri-for&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require-sri-for&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="cc23a4d8adf978e596103328ec8522255dce7f76" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;upgrade-insecure-requests&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;upgrade-insecure-requests&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="455a3de4efcb11c6f35e14a41277f553dccf6ef8" translate="yes" xml:space="preserve">
          <source>Adobe &lt;a href=&quot;https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html&quot;&gt;Portable Document Format&lt;/a&gt; (PDF)</source>
          <target state="translated">Adobe &lt;a href=&quot;https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html&quot;&gt;Portable Document Format&lt;/a&gt;（PDF）</target>
        </trans-unit>
        <trans-unit id="c6442c85da3c85db38a1dc41c371e4303bfaa1ab" translate="yes" xml:space="preserve">
          <source>Adopting a strict policy</source>
          <target state="translated">厳格な方針の採用</target>
        </trans-unit>
        <trans-unit id="705cc20005888890de14a5894736ddb464edf2fe" translate="yes" xml:space="preserve">
          <source>Advice on using a www-prefixed domain or not, this article explains the consequences of the choice as well as how to make it.</source>
          <target state="translated">www-prefixedドメインを使用するかどうかのアドバイス、この記事では、選択の結果とその方法について説明しています。</target>
        </trans-unit>
        <trans-unit id="733cfd6083d3dd3e2cb74c180509e4b0f99a5baa" translate="yes" xml:space="preserve">
          <source>Advisory text describing the error.</source>
          <target state="translated">エラーを説明するアドバイステキスト。</target>
        </trans-unit>
        <trans-unit id="70bf82aa792195fb9abd5a33a491d7ed6007e8d4" translate="yes" xml:space="preserve">
          <source>After a successful COPY invocation, all dead properties on the source
   resource SHOULD be duplicated on the destination resource.  Live
   properties described in this document SHOULD be duplicated as
   identically behaving live properties at the destination resource, but
   not necessarily with the same values.  Servers SHOULD NOT convert
   live properties into dead properties on the destination resource,
   because clients may then draw incorrect conclusions about the state
   or functionality of a resource.  Note that some live properties are
   defined such that the absence of the property has a specific meaning
   (e.g., a flag with one meaning if present, and the opposite if
   absent), and in these cases, a successful COPY might result in the
   property being reported as &quot;Not Found&quot; in subsequent requests.

   When the destination is an unmapped URL, a COPY operation creates a
   new resource much like a PUT operation does.  Live properties that
   are related to resource creation (such as DAV:creationdate) should
   have their values set accordingly.</source>
          <target state="translated">COPY呼び出しが成功した後、ソースリソース上の全てのデッドプロパティは、コピー先のリソース上に複製されるべきです[SHOULD]。このドキュメントで説明されているライブプロパティは、宛先リソースで同じ動作をするライブプロパティとして複製されるべきですが、必ずしも同じ値を持つとは限りません[SHOULD]。クライアントがリソースの状態や機能性について誤った結論を導き出す可能性があるため、サーバーは、デスティネーションリソース上でライブプロパティをデッドプロパティに変換するべきではない[SHOULD NOT]。ライブプロパティの中には、プロパティが存在しない場合に特定の意味を持つように定義されているものがあることに注意してください(例えば、存在する場合には1つの意味を持つフラグ、存在しない場合にはその逆の意味を持つフラグなど)。宛先がマッピングされていないURLの場合、COPY操作はPUT操作と同様に新しいリソースを作成します。リソースの作成に関連するライブプロパティ(DAV:creationdateなど)は、それに応じて値を設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e07104f09b3d658fa8a7e37d72c9f233c219006d" translate="yes" xml:space="preserve">
          <source>After receiving an HTTP request, a server can send one or more &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; headers with the response. The cookie is usually stored by the browser, and then the cookie is sent with requests made to the same server inside a &lt;a href=&quot;headers/cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; HTTP header. An expiration date or duration can be specified, after which the cookie is no longer sent. Additional restrictions to a specific domain and path can be set, limiting where the cookie is sent. For details about the header attributes mentioned below, refer to the &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; reference article.</source>
          <target state="translated">HTTPリクエストを受信した後、サーバーは1つ以上の&lt;a href=&quot;headers/set-cookie&quot;&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;/a&gt;ヘッダーをレスポンスとともに送信できます。通常、Cookieはブラウザによって保存され、Cookieは、&lt;a href=&quot;headers/cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; HTTP&lt;/a&gt;ヘッダー内の同じサーバーに対して行われた要求とともに送信されます。有効期限または期間を指定できます。有効期限が過ぎると、Cookieは送信されなくなります。特定のドメインとパスに追加の制限を設定して、Cookieの送信先を制限することができます。下記のヘッダー属性の詳細については、&lt;a href=&quot;headers/set-cookie&quot;&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;/a&gt;リファレンス記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="a14481714e36484442aceaedae4c2cd14105aca4" translate="yes" xml:space="preserve">
          <source>After receiving and interpreting a request message, a server responds
   with an HTTP response message.

       Response      = Status-Line               ; &lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;
                       *(( general-header        ; &lt;a href=&quot;#section-4.5&quot;&gt;Section 4.5&lt;/a&gt;
                        | response-header        ; &lt;a href=&quot;#section-6.2&quot;&gt;Section 6.2&lt;/a&gt;
                        | entity-header ) CRLF)  ; &lt;a href=&quot;#section-7.1&quot;&gt;Section 7.1&lt;/a&gt;
                       CRLF
                       [ message-body ]          ; &lt;a href=&quot;#section-7.2&quot;&gt;Section 7.2&lt;/a&gt;</source>
          <target state="translated">要求メッセージを受信して​​解釈した後、サーバーはHTTP応答メッセージで応答します。応答=ステータス行; &lt;a href=&quot;#section-6.1&quot;&gt;セクション6.1&lt;/a&gt; *（（general-header; &lt;a href=&quot;#section-4.5&quot;&gt;セクション4.5&lt;/a&gt; | response-header; &lt;a href=&quot;#section-6.2&quot;&gt;セクション6.2&lt;/a&gt; | entity-header）CRLF）; &lt;a href=&quot;#section-7.1&quot;&gt;セクション7.1&lt;/a&gt; CRLF [メッセージ本文]; &lt;a href=&quot;#section-7.2&quot;&gt;セクション7.2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd41b49b28657546d8abb377c969ab355261d840" translate="yes" xml:space="preserve">
          <source>After reviewing all of the above better alternatives to user agent sniffing, there are still some potential cases where user agent sniffing is appropriate and justified.</source>
          <target state="translated">上記のすべてのユーザエージェント・スニッフィングのより良い代替案を検討した後、ユーザエージェント・スニッフィングが適切で正当化される可能性のあるケースがまだいくつかあります。</target>
        </trans-unit>
        <trans-unit id="da1797b05d9266d8b1fa009268c07e98d87828a9" translate="yes" xml:space="preserve">
          <source>After sending the PUSH_PROMISE frame, the server can begin delivering
   the pushed response as a response (&lt;a href=&quot;#section-8.1.2.4&quot;&gt;Section 8.1.2.4&lt;/a&gt;) on a server-
   initiated stream that uses the promised stream identifier.  The
   server uses this stream to transmit an HTTP response, using the same
   sequence of frames as defined in &lt;a href=&quot;#section-8.1&quot;&gt;Section 8.1&lt;/a&gt;.  This stream becomes
   &quot;half-closed&quot; to the client (&lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;) after the initial HEADERS
   frame is sent.

   Once a client receives a PUSH_PROMISE frame and chooses to accept the
   pushed response, the client SHOULD NOT issue any requests for the
   promised response until after the promised stream has closed.

   If the client determines, for any reason, that it does not wish to
   receive the pushed response from the server or if the server takes
   too long to begin sending the promised response, the client can send
   a RST_STREAM frame, using either the CANCEL or REFUSED_STREAM code
   and referencing the pushed stream's identifier.

   A client can use the SETTINGS_MAX_CONCURRENT_STREAMS setting to limit
   the number of responses that can be concurrently pushed by a server.
   Advertising a SETTINGS_MAX_CONCURRENT_STREAMS value of zero disables
   server push by preventing the server from creating the necessary
   streams.  This does not prohibit a server from sending PUSH_PROMISE
   frames; clients need to reset any promised streams that are not
   wanted.

   Clients receiving a pushed response MUST validate that either the
   server is authoritative (see &lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;) or the proxy that provided
   the pushed response is configured for the corresponding request.  For
   example, a server that offers a certificate for only the
   &quot;example.com&quot; DNS-ID or Common Name is not permitted to push a
   response for &quot;https://www.example.org/doc&quot;.

   The response for a PUSH_PROMISE stream begins with a HEADERS frame,
   which immediately puts the stream into the &quot;half-closed (remote)&quot;
   state for the server and &quot;half-closed (local)&quot; state for the client,
   and ends with a frame bearing END_STREAM, which places the stream in
   the &quot;closed&quot; state.

      Note: The client never sends a frame with the END_STREAM flag for
      a server push.</source>
          <target state="translated">PUSH_PROMISEフレームを送信した後、サーバーは、約束されたストリーム識別子を使用するサーバー開始ストリームで、プッシュされた応答を応答として配信を開始できます（&lt;a href=&quot;#section-8.1.2.4&quot;&gt;セクション8.1.2.4&lt;/a&gt;）。サーバーはこのストリームを使用して、&lt;a href=&quot;#section-8.1&quot;&gt;セクション8.1で&lt;/a&gt;定義されているのと同じフレームシーケンスを使用してHTTP応答を送信します。このストリームは、クライアントに対して「ハーフクローズ」になります（&lt;a href=&quot;#section-5.1&quot;&gt;セクション5.1&lt;/a&gt;）最初のHEADERSフレームが送信された後。クライアントがPUSH_PROMISEフレームを受信し、プッシュされた応答を受け入れることを選択すると、クライアントは、約束されたストリームが閉じられるまで、約束された応答に対する要求を発行すべきではありません（SHOULDNOT）。クライアントが何らかの理由でサーバーからプッシュされた応答を受信したくないと判断した場合、またはサーバーが約束された応答の送信を開始するのに時間がかかりすぎる場合、クライアントはCANCELまたはREFUSED_STREAMのいずれかを使用してRST_STREAMフレームを送信できます。コードを作成し、プッシュされたストリームの識別子を参照します。クライアントは、SETTINGS_MAX_CONCURRENT_STREAMS設定を使用して、サーバーが同時にプッシュできる応答の数を制限できます。 SETTINGS_MAX_CONCURRENT_STREAMS値をゼロにアドバタイズすると、サーバーが必要なストリームを作成できないようにすることで、サーバープッシュが無効になります。これは、サーバーがPUSH_PROMISEフレームを送信することを禁止するものではありません。クライアントは、不要な約束されたストリームをリセットする必要があります。プッシュされた応答を受信するクライアントは、いずれかのサーバーが信頼できることを検証する必要があります（を参照）&lt;a href=&quot;#section-10.1&quot;&gt;セクション10.1&lt;/a&gt;）またはプッシュされた応答を提供したプロキシは、対応する要求に対して構成されます。たとえば、「example.com」のDNS-IDまたは共通名のみの証明書を提供するサーバーは、「https://www.example.org/doc」の応答をプッシュすることは許可されていません。 PUSH_PROMISEストリームの応答は、HEADERSフレームで始まり、サーバーの場合は「ハーフクローズ（リモート）」状態、クライアントの場合は「ハーフクローズ（ローカル）」状態になり、フレームで終わります。ストリームを「閉じた」状態にするEND_STREAMを付けます。注：クライアントは、サーバープッシュ用にEND_STREAMフラグ付きのフレームを送信することはありません。</target>
        </trans-unit>
        <trans-unit id="9ef923924b84276758cd6220f7c2e0df0c688265" translate="yes" xml:space="preserve">
          <source>After the HTTP/1.1 header and the blank line that indicates the end of the header, the server will immediately include the server connection preface, starting with a &lt;code&gt;SETTINGS&lt;/code&gt; frame.</source>
          <target state="translated">HTTP / 1.1ヘッダーとヘッダーの終わりを示す空白行の後に、サーバーはすぐに &lt;code&gt;SETTINGS&lt;/code&gt; フレームで始まるサーバー接続の序文を含めます。</target>
        </trans-unit>
        <trans-unit id="8d6a047137bbfac123a894e86187dc3649969994" translate="yes" xml:space="preserve">
          <source>After the connected agent has sent its request, the web server processes it, and ultimately returns a response. Similar to a client request, a server response is formed of text directives, separated by CRLF, though divided into three blocks:</source>
          <target state="translated">接続されたエージェントがリクエストを送った後、ウェブサーバはそれを処理し、最終的にレスポンスを返す。クライアント・リクエストと同様に、サーバ・レスポンスは、3つのブロックに分割されていますが、CRLFで区切られたテキスト・ディレクティブで構成されています。</target>
        </trans-unit>
        <trans-unit id="26b7ae2775e7780938b8a0d7dbb2cdbf0eb3bc68" translate="yes" xml:space="preserve">
          <source>Again, use of the DNS server in the above can be minimized by adding redundant rules in the beginning:</source>
          <target state="translated">繰り返しになりますが、上記のDNSサーバーの使用は、最初に冗長なルールを追加することで最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="ff9f1ff32120d8b893c1ded522d49590353b29a6" translate="yes" xml:space="preserve">
          <source>Age</source>
          <target state="translated">Age</target>
        </trans-unit>
        <trans-unit id="55c793215f8562190a36c5bf36bf9466ad683e17" translate="yes" xml:space="preserve">
          <source>Age (RFC 2616)</source>
          <target state="translated">年齢 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="e4b4c54419afac8726deafd7435dab4615c9a68e" translate="yes" xml:space="preserve">
          <source>Age (RFC 7234)</source>
          <target state="translated">年齢 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="52f86c4884cf6979487407f1bfb260fe6dc008d2" translate="yes" xml:space="preserve">
          <source>Agent-driven negotiation</source>
          <target state="translated">エージェント主導の交渉</target>
        </trans-unit>
        <trans-unit id="82e63706ff054e31f88909b903c540eb9fab7bf0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content&quot;&gt;mixed content&lt;/a&gt; resource requests are blocked, including both active and passive mixed content. This also applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; documents, ensuring the entire page is mixed content free.</source>
          <target state="translated">アクティブとパッシブの両方の混合コンテンツを含む、すべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content&quot;&gt;混合コンテンツ&lt;/a&gt;リソース要求がブロックされます。これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;ドキュメントにも適用され、ページ全体が混合コンテンツを含まないようにします。</target>
        </trans-unit>
        <trans-unit id="3f8728ba6de2afc5f460293bf5467790c482e2a7" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content&quot;&gt;mixed content&lt;/a&gt; resource requests are blocked, including both active and passive mixed content. This also applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; documents, ensuring the entire page is mixed content-free.</source>
          <target state="translated">アクティブとパッシブの両方の混合コンテンツを含む、すべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content&quot;&gt;混合コンテンツ&lt;/a&gt;リソース要求がブロックされます。これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;ドキュメントにも当てはまり、ページ全体にコンテンツが含まれないようにします。</target>
        </trans-unit>
        <trans-unit id="a9a928697259543059b585ea4af2c89236a67a72" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;text&lt;/code&gt; JavaScript types have been deprecated by &lt;a href=&quot;https://tools.ietf.org/html/rfc4329&quot;&gt;RFC 4329&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;text&lt;/code&gt; JavaScriptタイプは、&lt;a href=&quot;https://tools.ietf.org/html/rfc4329&quot;&gt;RFC 4329で&lt;/a&gt;非推奨になりました。</target>
        </trans-unit>
        <trans-unit id="44f2895fb52823cefc3e500436bf5266b5f12474" translate="yes" xml:space="preserve">
          <source>All DAV headers follow the same basic formatting rules as HTTP
   headers.  This includes rules like line continuation and how to
   combine (or separate) multiple instances of the same header using
   commas.

   WebDAV adds two new conditional headers to the set defined in HTTP:
   the If and Overwrite headers.</source>
          <target state="translated">すべての DAV ヘッダは HTTP ヘッダと同じ基本的な書式規則に従います。これには、行の連続性や、カンマを使った同じヘッダの複数のインスタンスの結合(または分離)の仕方などのルールが含まれています。WebDAV は、HTTP で定義されているセットに、If と Overwrite ヘッダという二つの新しい条件付きヘッダを追加しました。</target>
        </trans-unit>
        <trans-unit id="7bb7c13dc794c86beb6b5eb454b43a1af1effca0" translate="yes" xml:space="preserve">
          <source>All HTML content should be served with this type. Alternative MIME types for XHTML (like &lt;code&gt;application/xhtml+xml&lt;/code&gt;) are mostly useless nowadays.</source>
          <target state="translated">すべてのHTMLコンテンツはこのタイプで提供される必要があります。XHTMLの代替MIMEタイプ（ &lt;code&gt;application/xhtml+xml&lt;/code&gt; など）は現在ほとんど役に立たない。</target>
        </trans-unit>
        <trans-unit id="c02d32fb5d5640d2efd7ae1d94e1efc7987916ea" translate="yes" xml:space="preserve">
          <source>All HTTP/1.1 messages consist of a start-line followed by a sequence
   of octets in a format similar to the Internet Message Format
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt;]: zero or more header fields (collectively referred to as
   the &quot;headers&quot; or the &quot;header section&quot;), an empty line indicating the
   end of the header section, and an optional message body.

     HTTP-message   = start-line
                      *( header-field CRLF )
                      CRLF
                      [ message-body ] 

   The normal procedure for parsing an HTTP message is to read the
   start-line into a structure, read each header field into a hash table
   by field name until the empty line, and then use the parsed data to
   determine if a message body is expected.  If a message body has been
   indicated, then it is read as a stream until an amount of octets
   equal to the message body length is read or the connection is closed.

   A recipient MUST parse an HTTP message as a sequence of octets in an
   encoding that is a superset of US-ASCII [&lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt;].  Parsing an HTTP
   message as a stream of Unicode characters, without regard for the
   specific encoding, creates security vulnerabilities due to the
   varying ways that string processing libraries handle invalid
   multibyte character sequences that contain the octet LF (%x0A).
   String-based parsers can only be safely used within protocol elements
   after the element has been extracted from the message, such as within
   a header field-value after message parsing has delineated the
   individual fields.

   An HTTP message can be parsed as a stream for incremental processing
   or forwarding downstream.  However, recipients cannot rely on
   incremental delivery of partial messages, since some implementations
   will buffer or delay message forwarding for the sake of network
   efficiency, security checks, or payload transformations.

   A sender MUST NOT send whitespace between the start-line and the
   first header field.  A recipient that receives whitespace between the
   start-line and the first header field MUST either reject the message
   as invalid or consume each whitespace-preceded line without further
   processing of it (i.e., ignore the entire line, along with any
   subsequent lines preceded by whitespace, until a properly formed
   header field is received or the header section is terminated).

   The presence of such whitespace in a request might be an attempt to
   trick a server into ignoring that field or processing the line after
   it as a new request, either of which might result in a security
   vulnerability if other implementations within the request chain
   interpret the same message differently.  Likewise, the presence of
   such whitespace in a response might be ignored by some clients or
   cause others to cease parsing.</source>
          <target state="translated">すべてのHTTP / 1.1メッセージは、インターネットメッセージ形式[ &lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322に&lt;/a&gt;類似した形式の開始行とそれに続くオクテットのシーケンスで構成されます]：0個以上のヘッダーフィールド（まとめて「ヘッダー」または「ヘッダーセクション」と呼ばれます）、ヘッダーセクションの終わりを示す空の行、およびオプションのメッセージ本文。 HTTP-message = start-line *（header-field CRLF）CRLF [message-body] HTTPメッセージを解析する通常の手順は、開始行を構造体に読み取り、各ヘッダーフィールドをフィールド名でハッシュテーブルに読み取ります。空の行まで、解析されたデータを使用して、メッセージ本文が予期されているかどうかを判断します。メッセージ本文が示されている場合は、メッセージ本文の長さに等しいオクテットの量が読み取られるか、接続が閉じられるまで、ストリームとして読み取られます。受信者はHTTPメッセージをUS-ASCIIのスーパーセットであるエンコーディングのオクテットのシーケンスとして解析する必要があります[&lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt;]。特定のエンコーディングに関係なく、HTTPメッセージをUnicode文字のストリームとして解析すると、文字列処理ライブラリがオクテットLF（％x0A）を含む無効なマルチバイト文字シーケンスを処理する方法が異なるため、セキュリティの脆弱性が生じます。文字列ベースのパーサーを安全に使用できるのは、メッセージの要素がメッセージから抽出された後（たとえば、メッセージの解析によって個々のフィールドが記述された後のヘッダーフィールド値内など）です。 HTTPメッセージは、増分処理またはダウンストリーム転送のためのストリームとして解析できます。ただし、一部の実装ではネットワーク効率、セキュリティチェック、またはペイロード変換のためにメッセージの転送をバッファリングまたは遅延するため、受信者は部分メッセージの増分配信に依存できません。送信者は、開始行と最初のヘッダーフィールドの間に空白を送信してはなりません（MUST NOT）。開始行と最初のヘッダーフィールドの間の空白を受信する受信者は、メッセージを無効として拒否するか、各空白行の前の行をそれ以上処理せずに消費する必要があります（つまり、行全体を無視し、その後に空白行が続く行を無視します）。 、適切に形成されたヘッダーフィールドが受信されるか、ヘッダーセクションが終了するまで）。リクエスト内にこのような空白があると、サーバーをだましてそのフィールドを無視させたり、その行を新しいリクエストとして処理させたりする可能性があります。リクエストチェーン内の他の実装が同じことを解釈すると、セキュリティの脆弱性が発生する可能性があります。別のメッセージ。同様に、応答にこのような空白が含まれていると、一部のクライアントによって無視されたり、他のクライアントが解析を中止したりする場合があります。</target>
        </trans-unit>
        <trans-unit id="fc6d70014fb3882dcf60f571eb265b4ead440816" translate="yes" xml:space="preserve">
          <source>All conditional headers try to check if the resource stored on the server matches a specific version. To achieve this, the conditional requests need to indicate the version of the resource. As comparing the whole resource byte to byte is impracticable, and not always what is wanted, the request transmits a value describing the version. Such values are called &lt;em&gt;validators&lt;/em&gt;, and are of two kinds:</source>
          <target state="translated">すべての条件付きヘッダーは、サーバーに格納されているリソースが特定のバージョンと一致するかどうかを確認しようとします。これを実現するには、条件付きリクエストでリソースのバージョンを示す必要があります。リソース全体をバイトごとに比較することは実行不可能であり、常に必要なものではないため、リクエストはバージョンを説明する値を送信します。このような値は&lt;em&gt;バリデータ&lt;/em&gt;と呼ばれ、次の2種類があります。</target>
        </trans-unit>
        <trans-unit id="296ff2d47f9455e021f2222fa33a39e88b9c1dd8" translate="yes" xml:space="preserve">
          <source>All dependent streams are allocated an integer weight between 1 and
   256 (inclusive).

   Streams with the same parent SHOULD be allocated resources
   proportionally based on their weight.  Thus, if stream B depends on
   stream A with weight 4, stream C depends on stream A with weight 12,
   and no progress can be made on stream A, stream B ideally receives
   one-third of the resources allocated to stream C.</source>
          <target state="translated">すべての従属ストリームには、1 から 256 (含む)の間の整数の重みが割り当てられます。同じ親を持つストリームは、その重みに基づいて比例してリソースを割り当てるべきである[SHOULD]。したがって、ストリーム B がストリーム A に重み 4 で依存しており、ストリーム C がストリーム A に重み 12 で依存しており、ストリーム A の処理が進まない場合、ストリーム B は、ストリーム C に割り当てられたリソースの 3 分の 1 を受け取るのが理想的です。</target>
        </trans-unit>
        <trans-unit id="bea1578a24664dc2977454167c38e76bf6096f7f" translate="yes" xml:space="preserve">
          <source>All directives must comply with the &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;quoted-string grammar&lt;/a&gt;. A directive that does not include the double quotes is invalid.</source>
          <target state="translated">すべてのディレクティブは、&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;引用符で囲まれた文字列の文法に&lt;/a&gt;準拠している必要があります。二重引用符を含まないディレクティブは無効です。</target>
        </trans-unit>
        <trans-unit id="ee4674f00380d123974f659bcae306656f636284" translate="yes" xml:space="preserve">
          <source>All documents in the &lt;code&gt;images/&lt;/code&gt; directory will redirect to a different domain.</source>
          <target state="translated">&lt;code&gt;images/&lt;/code&gt; ディレクトリ内のすべてのドキュメントは、別のドメインにリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="86032829f23613e0e2c883c0ed233cfc98f34429" translate="yes" xml:space="preserve">
          <source>All documents in the &lt;code&gt;images/&lt;/code&gt; folder will be redirected to a different domain.</source>
          <target state="translated">&lt;code&gt;images/&lt;/code&gt; フォルダー内のすべてのドキュメントは、別のドメインにリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="151f06c99b273134876a0a499da72571a2000294" translate="yes" xml:space="preserve">
          <source>All frames begin with a fixed 9-octet header followed by a variable-
   length payload.

    +-----------------------------------------------+
    |                 Length (24)                   |
    +---------------+---------------+---------------+
    |   Type (8)    |   Flags (8)   |
    +-+-------------+---------------+-------------------------------+
    |R|                 Stream Identifier (31)                      |
    +=+=============================================================+
    |                   Frame Payload (0...)                      
    +---------------------------------------------------------------+

                          Figure 1: Frame Layout

   The fields of the frame header are defined as:

   Length:  The length of the frame payload expressed as an unsigned
      24-bit integer.  Values greater than 2^14 (16,384) MUST NOT be
      sent unless the receiver has set a larger value for
      SETTINGS_MAX_FRAME_SIZE.

      The 9 octets of the frame header are not included in this value. 

   Type:  The 8-bit type of the frame.  The frame type determines the
      format and semantics of the frame.  Implementations MUST ignore
      and discard any frame that has a type that is unknown.

   Flags:  An 8-bit field reserved for boolean flags specific to the
      frame type.

      Flags are assigned semantics specific to the indicated frame type.
      Flags that have no defined semantics for a particular frame type
      MUST be ignored and MUST be left unset (0x0) when sending.

   R: A reserved 1-bit field.  The semantics of this bit are undefined,
      and the bit MUST remain unset (0x0) when sending and MUST be
      ignored when receiving.

   Stream Identifier:  A stream identifier (see &lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;) expressed
      as an unsigned 31-bit integer.  The value 0x0 is reserved for
      frames that are associated with the connection as a whole as
      opposed to an individual stream.

   The structure and content of the frame payload is dependent entirely
   on the frame type.</source>
          <target state="translated">すべてのフレームは、固定の9オクテットヘッダーで始まり、その後に可変長のペイロードが続きます。 + ----------------------------------------------- + |長さ（24）| + --------------- + --------------- + --------------- + |タイプ（8）|フラグ（8）| +-+ ------------- + --------------- + ----------------- -------------- + | R |ストリーム識別子（31）| + = + =============================================== ============== + |フレームペイロード（0 ...）+ ------------------------------------------ ---------------------- +図1：フレームレイアウトフレームヘッダーのフィールドは次のように定義されます。長さ：符号なしとして表されるフレームペイロードの長さ24ビット整数。受信者がSETTINGS_MAX_FRAME_SIZEに大きな値を設定しない限り、2 ^ 14（16,384）より大きい値を送信してはなりません（MUSTNOT）。フレームヘッダーの9オクテットは、この値には含まれません。タイプ：フレームの8ビットタイプ。フレームタイプは、フレームのフォーマットとセマンティクスを決定します。実装は、タイプが不明なフレームを無視して破棄する必要があります。フラグ：フレームタイプに固有のブールフラグ用に予約された8ビットフィールド。フラグには、指定されたフレームタイプに固有のセマンティクスが割り当てられます。特定のフレームタイプに対して定義されたセマンティクスを持たないフラグは無視する必要があり、送信時に未設定（0x0）のままにしておく必要があります。 R：予約済みの1ビットフィールド。このビットのセマンティクスは未定義であり、送信時にはビットを未設定（0x0）のままにし、受信時には無視する必要があります。ストリーム識別子：ストリーム識別子（を参照）フラグには、指定されたフレームタイプに固有のセマンティクスが割り当てられます。特定のフレームタイプに対して定義されたセマンティクスを持たないフラグは無視する必要があり、送信時に未設定（0x0）のままにしておく必要があります。 R：予約済みの1ビットフィールド。このビットのセマンティクスは未定義であり、送信時にはビットを未設定（0x0）のままにし、受信時には無視する必要があります。ストリーム識別子：ストリーム識別子（を参照）フラグには、指定されたフレームタイプに固有のセマンティクスが割り当てられます。特定のフレームタイプに対して定義されたセマンティクスを持たないフラグは無視する必要があり、送信時に未設定（0x0）のままにしておく必要があります。 R：予約済みの1ビットフィールド。このビットのセマンティクスは未定義であり、送信時にはビットを未設定（0x0）のままにし、受信時には無視する必要があります。ストリーム識別子：ストリーム識別子（を参照）&lt;a href=&quot;#section-5.1.1&quot;&gt;セクション5.1.1&lt;/a&gt;）符号なし31ビット整数として表されます。値0x0は、個々のストリームではなく、接続全体に関連付けられているフレーム用に予約されています。フレームペイロードの構造と内容は、フレームタイプに完全に依存します。</target>
        </trans-unit>
        <trans-unit id="96c6c99a024c7f251148642ab153c93b1834f5d1" translate="yes" xml:space="preserve">
          <source>All hosts which aren't fully qualified, or the ones that are in local domain, will be connected to directly. Everything else will go through &lt;code&gt;w3proxy.mozilla.org:8080&lt;/code&gt;. If the proxy goes down, connections become direct automatically:</source>
          <target state="translated">完全修飾されていないすべてのホスト、またはローカルドメインにあるホストは、直接接続されます。それ以外はすべて &lt;code&gt;w3proxy.mozilla.org:8080&lt;/code&gt; を経由します。プロキシがダウンすると、接続は自動的に直接になります。</target>
        </trans-unit>
        <trans-unit id="2556a3f65b2016a6f4465c2cba6687d885b96f50" translate="yes" xml:space="preserve">
          <source>All hosts which aren't fully qualified, or the ones that are in local domain, will be connected to directly. Everything else will go through w3proxy:8080. If the proxy goes down, connections become direct automatically:</source>
          <target state="translated">完全に修飾されていないホストやローカルドメインにあるホストはすべて直接接続されます。それ以外はすべて w3proxy:8080 を経由します。プロキシがダウンした場合、接続は自動的に直接になります。</target>
        </trans-unit>
        <trans-unit id="9e7d8118d9f750540c3d405da3bd825af374930a" translate="yes" xml:space="preserve">
          <source>All iframes inherit the policy of their parent page. If the iframe has an &lt;code&gt;allow&lt;/code&gt; attribute, the policies of the parent page and the &lt;code&gt;allow&lt;/code&gt; attribute are combined, using the most restrictive subset. For an iframe to have a feature enabled, the origin must be in the allowlist for both the parent page and the allow attribute.</source>
          <target state="translated">すべてのiframeは親ページのポリシーを継承します。iframeに &lt;code&gt;allow&lt;/code&gt; 属性がある場合、最も制限の厳しいサ​​ブセットを使用して、親ページのポリシーと &lt;code&gt;allow&lt;/code&gt; 属性が結合されます。iframeで機能を有効にするには、親ページと許可属性の両方の許可リストにオリジンが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="14f1bc03c603d449cb2f82a18478f537735beda9" translate="yes" xml:space="preserve">
          <source>All local accesses are desired to be direct. All proxy servers run on the port 8080 (they don't need to). Note how strings can be concatenated with the &lt;strong&gt;+&lt;/strong&gt; operator in JavaScript.</source>
          <target state="translated">すべてのローカルアクセスは直接であることが望まれます。すべてのプロキシサーバーはポート8080で実行されます（必要はありません）。JavaScriptで&lt;strong&gt;+&lt;/strong&gt;演算子を使用して文字列を連結する方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="871fee64cdc73fa544bed4b409dd8bfda18bd570" translate="yes" xml:space="preserve">
          <source>All local accesses are desired to be direct. All proxy servers run on the port 8080 (they don't need to, you can just change your port but remember to modify your configuations on both side). Note how strings can be concatenated with the &lt;code&gt;&lt;strong&gt;+&lt;/strong&gt;&lt;/code&gt; operator in JavaScript.</source>
          <target state="translated">すべてのローカルアクセスは直接であることが望まれます。すべてのプロキシサーバーはポート8080で実行されます（ポートを変更する必要はありませんが、ポートを変更するだけで、両側の構成を変更することを忘れないでください）。JavaScriptで文字列を &lt;code&gt;&lt;strong&gt;+&lt;/strong&gt;&lt;/code&gt; 演算子で連結する方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="47f43d7619bd14afa48b80f4f69322e3d75a1bed" translate="yes" xml:space="preserve">
          <source>All methods that might be expected to cause modifications to the
   origin server's resources MUST be written through to the origin
   server. This currently includes all methods except for GET and HEAD.
   A cache MUST NOT reply to such a request from a client before having
   transmitted the request to the inbound server, and having received a
   corresponding response from the inbound server. This does not prevent
   a proxy cache from sending a 100 (Continue) response before the
   inbound server has sent its final reply.

   The alternative (known as &quot;write-back&quot; or &quot;copy-back&quot; caching) is not
   allowed in HTTP/1.1, due to the difficulty of providing consistent
   updates and the problems arising from server, cache, or network
   failure prior to write-back.</source>
          <target state="translated">オリジンサーバのリソースへの変更を引き起こす可能性のあるすべてのメソッドは、オリジンサーバに書き込まれなければなりません[MUST]。これは現在 GET と HEAD を除く全てのメソッドを含みます。キャッシュは、リクエストを受信サーバに送信し、受信サーバから対応する応答を受け取る前に、クライアントからのそのようなリクエストに応答してはならない[MUST NOT]。これは、インバウンドサーバが最終応答を送る前にプロキシキャッシュが100(Continue)応答を送ることを防ぐものではない。これは、一貫性のある更新を提供することの難しさと、 ライトバック前のサーバ、キャッシュ、ネットワーク障害から生じる問題のためです。</target>
        </trans-unit>
        <trans-unit id="d6a76bce8ed4b24dc82bafad92dd9740f7195e9c" translate="yes" xml:space="preserve">
          <source>All modern browsers and servers do support it and the only thing to negotiate is the compression algorithm to use. These algorithm are optimized for text. In the 1990s, compression technology was advancing at a rapid pace and numerous successive algorithms have been added to the set of possible choices. Nowadays, only two are relevant: &lt;code&gt;gzip&lt;/code&gt;, the most common one, and &lt;code&gt;br&lt;/code&gt; the new challenger.</source>
          <target state="translated">最新のすべてのブラウザとサーバーはこれをサポートしており、交渉する唯一のことは使用する圧縮アルゴリズムです。これらのアルゴリズムはテキスト用に最適化されています。1990年代には、圧縮技術が急速に進歩し、一連の可能な選択肢に多数の連続したアルゴリズムが追加されました。：今日では、2つだけが関連している &lt;code&gt;gzip&lt;/code&gt; で、最も一般的なもの、および &lt;code&gt;br&lt;/code&gt; 新しい挑戦を。</target>
        </trans-unit>
        <trans-unit id="7efabba7ae41c2653d1f20ea222b6e6ae7445249" translate="yes" xml:space="preserve">
          <source>All of the mechanisms specified in this document are described in
   both prose and an augmented Backus-Naur Form (BNF) similar to that
   used by &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; [&lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;]. Implementors will need to be familiar with the
   notation in order to understand this specification. The augmented BNF
   includes the following constructs:

   name = definition
      The name of a rule is simply the name itself (without any
      enclosing &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot;) and is separated from its definition by the
      equal &quot;=&quot; character. White space is only significant in that
      indentation of continuation lines is used to indicate a rule
      definition that spans more than one line. Certain basic rules are
      in uppercase, such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc. Angle
      brackets are used within definitions whenever their presence will
      facilitate discerning the use of rule names.

   &quot;literal&quot;
      Quotation marks surround literal text. Unless stated otherwise,
      the text is case-insensitive.

   rule1 | rule2
      Elements separated by a bar (&quot;|&quot;) are alternatives, e.g., &quot;yes |
      no&quot; will accept yes or no.

   (rule1 rule2)
      Elements enclosed in parentheses are treated as a single element.
      Thus, &quot;(elem (foo | bar) elem)&quot; allows the token sequences &quot;elem
      foo elem&quot; and &quot;elem bar elem&quot;.

   *rule
      The character &quot;*&quot; preceding an element indicates repetition. The
      full form is &quot;&amp;lt;n&amp;gt;*&amp;lt;m&amp;gt;element&quot; indicating at least &amp;lt;n&amp;gt; and at most
      &amp;lt;m&amp;gt; occurrences of element. Default values are 0 and infinity so
      that &quot;*(element)&quot; allows any number, including zero; &quot;1*element&quot;
      requires at least one; and &quot;1*2element&quot; allows one or two.

   [&lt;a id=&quot;ref-rule&quot; name=&quot;ref-rule&quot;&gt;rule&lt;/a&gt;]
      Square brackets enclose optional elements; &quot;[foo bar]&quot; is
      equivalent to &quot;*1(foo bar)&quot;. 

   N rule
      Specific repetition: &quot;&amp;lt;n&amp;gt;(element)&quot; is equivalent to
      &quot;&amp;lt;n&amp;gt;*&amp;lt;n&amp;gt;(element)&quot;; that is, exactly &amp;lt;n&amp;gt; occurrences of (element).
      Thus 2DIGIT is a 2-digit number, and 3ALPHA is a string of three
      alphabetic characters.

   #rule
      A construct &quot;#&quot; is defined, similar to &quot;*&quot;, for defining lists of
      elements. The full form is &quot;&amp;lt;n&amp;gt;#&amp;lt;m&amp;gt;element&quot; indicating at least
      &amp;lt;n&amp;gt; and at most &amp;lt;m&amp;gt; elements, each separated by one or more commas
      (&quot;,&quot;) and OPTIONAL linear white space (LWS). This makes the usual
      form of lists very easy; a rule such as
         ( *LWS element *( *LWS &quot;,&quot; *LWS element ))
      can be shown as
         1#element
      Wherever this construct is used, null elements are allowed, but do
      not contribute to the count of elements present. That is,
      &quot;(element), , (element) &quot; is permitted, but counts as only two
      elements. Therefore, where at least one element is required, at
      least one non-null element MUST be present. Default values are 0
      and infinity so that &quot;#element&quot; allows any number, including zero;
      &quot;1#element&quot; requires at least one; and &quot;1#2element&quot; allows one or
      two.

   ; comment
      A semi-colon, set off some distance to the right of rule text,
      starts a comment that continues to the end of line. This is a
      simple way of including useful notes in parallel with the
      specifications.

   implied *LWS
      The grammar described by this specification is word-based. Except
      where noted otherwise, linear white space (LWS) can be included
      between any two adjacent words (token or quoted-string), and
      between adjacent words and separators, without changing the
      interpretation of a field. At least one delimiter (LWS and/or

      separators) MUST exist between any two tokens (for the definition
      of &quot;token&quot; below), since they would otherwise be interpreted as a
      single token.</source>
          <target state="translated">このドキュメントで指定されているすべてのメカニズムは、&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; [ &lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;で使用されているものと同様の散文と拡張バッカスナウアフォーム（BNF）の両方で説明されています。]。この仕様を理解するには、実装者は表記法に精通している必要があります。拡張されたBNFには、次の構成が含まれます。name = definitionルールの名前は単に名前自体（「&amp;lt;」と「&amp;gt;」で囲まれていない）であり、等号「=」によって定義から分離されます。空白は、継続行のインデントが複数行にわたるルール定義を示すために使用されるという点でのみ重要です。 SP、LWS、HT、CRLF、DIGIT、ALPHAなどの特定の基本ルールは大文字です。山括弧は、ルール名の使用を識別しやすくするために、定義内で使用されます。 &quot;literal&quot;引用符はリテラルテキストを囲みます。特に明記しない限り、テキストでは大文字と小文字が区別されません。ルール1 | rule2棒（ &quot;|&quot;）で区切られた要素は代替です。たとえば、 &quot;yes | no&quot;はyesまたはnoを受け入れます。 （rule1 rule2）括弧で囲まれた要素は単一の要素として扱われます。したがって、「（elem（foo | bar）elem）」では、トークンシーケンス「elem foo elem」と「elem bar elem」が許可されます。 *ルール要素の前の文字「*」は繰り返しを示します。完全な形式は &quot;&amp;lt;n&amp;gt; * &amp;lt;m&amp;gt; element&quot;であり、要素の少なくとも&amp;lt;n&amp;gt;および最大で&amp;lt;m&amp;gt;個の出現を示します。デフォルト値は0と無限大なので、「*（要素）」はゼロを含む任意の数を許可します。 「1 *要素」には少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。 [[[ルール1 | rule2棒（ &quot;|&quot;）で区切られた要素は代替です。たとえば、 &quot;yes | no&quot;はyesまたはnoを受け入れます。 （rule1 rule2）括弧で囲まれた要素は単一の要素として扱われます。したがって、「（elem（foo | bar）elem）」では、トークンシーケンス「elem foo elem」と「elem bar elem」が許可されます。 *ルール要素の前の文字「*」は繰り返しを示します。完全な形式は &quot;&amp;lt;n&amp;gt; * &amp;lt;m&amp;gt; element&quot;であり、要素の少なくとも&amp;lt;n&amp;gt;および最大で&amp;lt;m&amp;gt;個の出現を示します。デフォルト値は0と無限大なので、「*（要素）」はゼロを含む任意の数を許可します。 「1 *要素」には少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。 [ルール1 | rule2棒（ &quot;|&quot;）で区切られた要素は代替です。たとえば、 &quot;yes | no&quot;はyesまたはnoを受け入れます。 （rule1 rule2）括弧で囲まれた要素は単一の要素として扱われます。したがって、「（elem（foo | bar）elem）」では、トークンシーケンス「elem foo elem」と「elem bar elem」が許可されます。 *ルール要素の前の文字「*」は繰り返しを示します。完全な形式は &quot;&amp;lt;n&amp;gt; * &amp;lt;m&amp;gt; element&quot;であり、要素の少なくとも&amp;lt;n&amp;gt;および最大で&amp;lt;m&amp;gt;個の出現を示します。デフォルト値は0と無限大なので、「*（要素）」はゼロを含む任意の数を許可します。 「1 *要素」には少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。 [[[はい| no &quot;は、yesまたはnoを受け入れます。（rule1 rule2）括弧で囲まれた要素は単一の要素として扱われます。したがって、&quot;（elem（foo | bar）elem） &quot;では、トークンシーケンス&quot; elem foo elem &quot;および&quot; elem bar elem &quot;。* rule要素の前の文字&quot; * &quot;は繰り返しを示します。完全な形式は&quot; &amp;lt;n&amp;gt; * &amp;lt;m&amp;gt; element &quot;で、要素の少なくとも&amp;lt;n&amp;gt;および最大で&amp;lt;m&amp;gt;個の出現を示します。デフォルト値は0および&quot;*（element）&quot;はゼロを含む任意の数を許可し、 &quot;1 * element&quot;は少なくとも1つを必要とし、 &quot;1 * 2element&quot;は1つまたは2つを許可するように無限大。はい| no &quot;は、yesまたはnoを受け入れます。（rule1 rule2）括弧で囲まれた要素は単一の要素として扱われます。したがって、&quot;（elem（foo | bar）elem） &quot;では、トークンシーケンス&quot; elem foo elem &quot;および&quot; elem bar elem &quot;。* rule要素の前の文字&quot; * &quot;は繰り返しを示します。完全な形式は&quot; &amp;lt;n&amp;gt; * &amp;lt;m&amp;gt; element &quot;で、要素の少なくとも&amp;lt;n&amp;gt;および最大で&amp;lt;m&amp;gt;個の出現を示します。デフォルト値は0および&quot;*（element）&quot;はゼロを含む任意の数を許可し、 &quot;1 * element&quot;は少なくとも1つを必要とし、 &quot;1 * 2element&quot;は1つまたは2つを許可するように無限大。（elem（foo | bar）elem） &quot;は、トークンシーケンス&quot; elem foo elem &quot;および&quot; elem bar elem &quot;を許可します。* rule要素の前の文字&quot; * &quot;は、反復を示します。完全な形式は&quot; &amp;lt;n&amp;gt; * &amp;lt;m &amp;gt; element &quot;は&amp;lt;n&amp;gt;以上&amp;lt;m&amp;gt;以下のelementの出現を示します。デフォルト値は0と無限大なので、「*（element）」はゼロを含む任意の数を許可します。「1 * element」は少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。（elem（foo | bar）elem） &quot;は、トークンシーケンス&quot; elem foo elem &quot;および&quot; elem bar elem &quot;を許可します。* rule要素の前の文字&quot; * &quot;は、反復を示します。完全な形式は&quot; &amp;lt;n&amp;gt; * &amp;lt;m &amp;gt; element &quot;は&amp;lt;n&amp;gt;以上&amp;lt;m&amp;gt;以下のelementの出現を示します。デフォルト値は0と無限大なので、「*（element）」はゼロを含む任意の数を許可します。「1 * element」は少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。要素の最大&amp;lt;m&amp;gt;個の出現。デフォルト値は0と無限大なので、「*（要素）」はゼロを含む任意の数を許可します。 「1 *要素」には少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。 [要素の最大&amp;lt;m&amp;gt;個の出現。デフォルト値は0と無限大なので、「*（要素）」はゼロを含む任意の数を許可します。 「1 *要素」には少なくとも1つ必要です。 &quot;1 * 2element&quot;は1つまたは2つを許可します。 [&lt;a id=&quot;ref-rule&quot; name=&quot;ref-rule&quot;&gt;ルール&lt;/a&gt;]角括弧はオプションの要素を囲みます。 「[foo bar]」は「* 1（foo bar）」と同等です。 N規則特定の繰り返し：「&amp;lt;n&amp;gt;（要素）」は「&amp;lt;n&amp;gt; * &amp;lt;n&amp;gt;（要素）」と同等です。つまり、（要素）が正確に&amp;lt;n&amp;gt;回出現します。したがって、2DIGITは2桁の数字で、3ALPHAは3つのアルファベット文字の文字列です。 #rule要素のリストを定義するために、「*」と同様に「＃」という構成が定義されています。完全な形式は &quot;&amp;lt;n&amp;gt;＃&amp;lt;m&amp;gt; element&quot;で、少なくとも&amp;lt;n&amp;gt;要素と最大&amp;lt;m&amp;gt;要素を示し、それぞれが1つ以上のコンマ（ &quot;、&quot;）とオプションの線形空白（LWS）で区切られています。これにより、通常のリスト形式が非常に簡単になります。 （* LWS element *（* LWS &quot;、&quot;* LWS element））は1＃elementとして表示できます。この構成が使用される場合は常に、null要素が許可されますが、存在する要素の数には影響しません。つまり、「（element）、、（element）」は許可されますですが、2つの要素としてのみカウントされます。したがって、少なくとも1つの要素が必要な場合、少なくとも1つのnull以外の要素が存在する必要があります。デフォルト値は0と無限大なので、「＃element」はゼロを含む任意の数を許可します。「1 #element &quot;には少なくとも1つが必要であり、&quot; 1＃2element &quot;には1つまたは2つが許可されます。;コメントルールテキストの右側にある程度離れたセミコロンは、コメントを開始し、行の終わりまで続きます。これは仕様と並行して役立つメモを含める簡単な方法。暗黙の* LWSこの仕様で記述されている文法は単語ベースです。特に明記されていない限り、フィールドの解釈を変更せずに、隣接する2つの単語（トークンまたは引用符付き文字列）の間、および隣接する単語と区切り文字の間に線形空白（LWS）を含めることができます。 2つのトークンの間には、少なくとも1つの区切り文字（LWSおよび/またはセパレーター）が存在しなければなりません（以下の「トークン」の定義の場合）。そうでない場合、それらは単一のトークンとして解釈されます。2つのトークンの間には、少なくとも1つの区切り文字（LWSおよび/またはセパレーター）が存在しなければなりません（以下の「トークン」の定義の場合）。そうでない場合、それらは単一のトークンとして解釈されます。2つのトークンの間には、少なくとも1つの区切り文字（LWSおよび/またはセパレーター）が存在しなければなりません（以下の「トークン」の定義の場合）。そうでない場合、それらは単一のトークンとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="d9826d3b0aadb4c0d991f77ab80bce5d93271a5e" translate="yes" xml:space="preserve">
          <source>All present and future subdomains will be HTTPS for a max-age of 1 year. This blocks access to pages or sub domains that can only be served over HTTP.</source>
          <target state="translated">現在および将来のすべてのサブドメインは、最大 1 年間は HTTPS になります。これにより、HTTPでしか提供できないページやサブドメインへのアクセスがブロックされます。</target>
        </trans-unit>
        <trans-unit id="efb3018ed7ba81bc986a32dff4c272b1fc5af94f" translate="yes" xml:space="preserve">
          <source>All responses with one of these status codes send a &lt;code&gt;Location&lt;/code&gt; header.</source>
          <target state="translated">これらのステータスコードのいずれかを持つすべての応答は、 &lt;code&gt;Location&lt;/code&gt; ヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="f69c00231b6bb7e2418bf271e61ffc7333b84fb8" translate="yes" xml:space="preserve">
          <source>All streams are initially assigned a non-exclusive dependency on
   stream 0x0.  Pushed streams (&lt;a href=&quot;#section-8.2&quot;&gt;Section 8.2&lt;/a&gt;) initially depend on their
   associated stream.  In both cases, streams are assigned a default
   weight of 16.</source>
          <target state="translated">すべてのストリームには、最初にストリーム0x0への非排他的な依存関係が割り当てられます。プッシュされたストリーム（&lt;a href=&quot;#section-8.2&quot;&gt;セクション8.2&lt;/a&gt;）は、最初は関連するストリームに依存します。どちらの場合も、ストリームにはデフォルトの重み16が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="31998230cdc3b967cea6c7d6edfed8e8ab8ab57f" translate="yes" xml:space="preserve">
          <source>All you need to do is combine multiple &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; headers into a single one, with commas separating the origins gathered from each copy of the header.</source>
          <target state="translated">必要なのは、複数の &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーを単一のヘッダーに結合し、ヘッダーの各コピーから収集されたオリジンをコンマで区切ることです。</target>
        </trans-unit>
        <trans-unit id="3ad0e3698278f45b2af94445396e9865f213f617" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="translated">Allow</target>
        </trans-unit>
        <trans-unit id="fd3431f3358696a8f688eedd078d377a2bef938b" translate="yes" xml:space="preserve">
          <source>Allow (RFC 2616)</source>
          <target state="translated">許可(RFC2616)</target>
        </trans-unit>
        <trans-unit id="2a254a8dafebfc7a8b81cab0f55d1468af9cf5e7" translate="yes" xml:space="preserve">
          <source>Allow (RFC 7231)</source>
          <target state="translated">許可(RFC7231)</target>
        </trans-unit>
        <trans-unit id="78637188ae6e129684b8ed4d25b294e489fcaddf" translate="yes" xml:space="preserve">
          <source>Allow commas in Accept, Accept-Language, and Content-Language request headers for simple CORS</source>
          <target state="translated">単純なCORSのためのAccept、Accept-Language、およびContent-Languageリクエストヘッダでカンマを許容</target>
        </trans-unit>
        <trans-unit id="b7700064d34b89eae4fcb61ae4f9c3f1965adc23" translate="yes" xml:space="preserve">
          <source>Allow credentials:</source>
          <target state="translated">証明書を許可します。</target>
        </trans-unit>
        <trans-unit id="85317a1ad2b956cae1168d9078911413cee98254" translate="yes" xml:space="preserve">
          <source>Allow iframes to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API&quot;&gt;fullscreen API&lt;/a&gt;.</source>
          <target state="translated">iframeが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API&quot;&gt;フルスクリーンAPI&lt;/a&gt;を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="464b3413d2c92ce5d1cdddc36fca2e60307a278a" translate="yes" xml:space="preserve">
          <source>Allow iframes to use the fullscreen API.</source>
          <target state="translated">iframes がフルスクリーン API を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="de76bcbe1f2fb18c478a0f6fa30885454a59cea6" translate="yes" xml:space="preserve">
          <source>Allowed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML forms&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTMLフォームで&lt;/a&gt;許可</target>
        </trans-unit>
        <trans-unit id="0fda3a8172ffd809fcbe4f6321f7fa38cb061525" translate="yes" xml:space="preserve">
          <source>Allowed in HTML forms</source>
          <target state="translated">HTMLフォームで許可されている</target>
        </trans-unit>
        <trans-unit id="81c74e599caf074409d91e89aa90f8b48ef77e84" translate="yes" xml:space="preserve">
          <source>Allowing Flash content</source>
          <target state="translated">Flashコンテンツの許可</target>
        </trans-unit>
        <trans-unit id="e8cb5b34df4d8b6d0f67236dd55dc2d559fc1e85" translate="yes" xml:space="preserve">
          <source>Allowing Java applets</source>
          <target state="translated">Javaアプレットの許可</target>
        </trans-unit>
        <trans-unit id="38a5368250d0af35f902c906a91e772c1f7312b2" translate="yes" xml:space="preserve">
          <source>Allowing users to opt out of receiving some or all cookies.</source>
          <target state="translated">一部またはすべてのクッキーの受け取りを拒否することができます。</target>
        </trans-unit>
        <trans-unit id="f5611e2c410b0178775a61e246c3d79485afc2e9" translate="yes" xml:space="preserve">
          <source>Allowing users to use the bulk of your service without receiving cookies.</source>
          <target state="translated">ユーザーがクッキーを受け取ることなく、あなたのサービスの大部分を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="7c6534d14b65c6f01882f09b9bc7625ec45018e6" translate="yes" xml:space="preserve">
          <source>Allows a sandboxed document to open new windows without forcing the sandboxing flags upon them. This will allow, for example, a third-party advertisement to be safely sandboxed without forcing the same restrictions upon a landing page.</source>
          <target state="translated">サンドボックス化されたドキュメントを、サンドボックス化フラグを強制せずに新しいウィンドウを開くことができるようにします。これにより、例えばサードパーティの広告を、ランディングページに同じ制限を強制することなく安全にサンドボックス化することができます。</target>
        </trans-unit>
        <trans-unit id="bd9d1abd82bff4013e4d8b034e274de5b3c1cd64" translate="yes" xml:space="preserve">
          <source>Allows a server to declare an embedder policy for a given document.</source>
          <target state="translated">サーバが指定したドキュメントのエンベッダーポリシーを宣言できるようにします。</target>
        </trans-unit>
        <trans-unit id="5c9b4234b2a3be8eb41cdf957e42821c7296b4df" translate="yes" xml:space="preserve">
          <source>Allows embedders to have control over whether an iframe can start a presentation session.</source>
          <target state="translated">エンベッダーがiframeがプレゼンテーションセッションを開始できるかどうかを制御できるようにします。</target>
        </trans-unit>
        <trans-unit id="cc5d5f3bfec8b9763df60e08f7fe09fc818a1534" translate="yes" xml:space="preserve">
          <source>Allows enabling specific inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handlers&lt;/a&gt;. If you only need to allow inline event handlers and not inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements or &lt;code&gt;javascript:&lt;/code&gt; URLs, this is a safer method than using the &lt;code&gt;unsafe-inline&lt;/code&gt; expression.</source>
          <target state="translated">特定のインライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers&quot;&gt;イベントハンドラーを&lt;/a&gt;有効にできます。インラインイベントハンドラーのみを許可し、インライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素または &lt;code&gt;javascript:&lt;/code&gt; URLを許可する必要がない場合、これは &lt;code&gt;unsafe-inline&lt;/code&gt; 式を使用するよりも安全な方法です。</target>
        </trans-unit>
        <trans-unit id="c2dccfc3d16fbd6966ea66bf8065e453d70002c8" translate="yes" xml:space="preserve">
          <source>Allows for creating policies with a name that was already used.</source>
          <target state="translated">既に使用されている名前でポリシーを作成できるようにします。</target>
        </trans-unit>
        <trans-unit id="52a6156330c202b6a59a4dd9cbf9d1fc74688899" translate="yes" xml:space="preserve">
          <source>Allows for downloads to occur without a gesture from the user.</source>
          <target state="translated">ユーザーのジェスチャーなしでダウンロードできるようにします。</target>
        </trans-unit>
        <trans-unit id="23a9b362468a49f0fc591066164c814185eb3f1f" translate="yes" xml:space="preserve">
          <source>Allows popups (like from &lt;code&gt;window.open&lt;/code&gt;, &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt;, &lt;code&gt;showModalDialog&lt;/code&gt;). If this keyword is not used, that functionality will silently fail.</source>
          <target state="translated">ポップアップを許可します（ &lt;code&gt;window.open&lt;/code&gt; 、 &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; 、 &lt;code&gt;showModalDialog&lt;/code&gt; など）。このキーワードを使用しない場合、その機能は警告なしに失敗します。</target>
        </trans-unit>
        <trans-unit id="772ca43b3ac605b73ba1b10b87801c9eb255da4d" translate="yes" xml:space="preserve">
          <source>Allows servers to assert that a cookie ought not to be sent along with cross-site requests, which provides some protection against cross-site request forgery attacks (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;).</source>
          <target state="translated">サーバーがCookieをクロスサイトリクエストと一緒に送信してはならないことを表明できるようにします。これにより、クロスサイトリクエストフォージェリ攻撃（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;）に対する保護が提供されます。</target>
        </trans-unit>
        <trans-unit id="8884a66b5c1071e7a925fac5c26c615146d4a1b8" translate="yes" xml:space="preserve">
          <source>Allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements, which prevents the use of misissued certificates for that site from going unnoticed. When a site enables the Expect-CT header, they are requesting that Chrome check that any certificate for that site appears in public CT logs.</source>
          <target state="translated">証明書の透過性要件の報告および/または実施をサイトが選択できるようにし、サイトの証明書の誤発行を防ぐことができます。サイトが Expect-CT ヘッダを有効にすると、そのサイトの証明書がパブリック CT ログに表示されるかどうかを Chrome がチェックするように要求していることになります。</target>
        </trans-unit>
        <trans-unit id="0410e69274a5c7230756b0a2cd3597d21bf3033b" translate="yes" xml:space="preserve">
          <source>Allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements.</source>
          <target state="translated">証明書の透明性要件の報告および/または実施をサイトが選択できるようにする。</target>
        </trans-unit>
        <trans-unit id="4d5d66c72c2c3237333bd488a07baf5da98b6794" translate="yes" xml:space="preserve">
          <source>Allows the content to be treated as being from its normal origin. If this keyword is not used, the embedded content is treated as being from a unique origin.</source>
          <target state="translated">コンテンツを通常の起源から来たものとして扱うことを許可します。このキーワードを使用しない場合、埋め込まれたコンテンツは一意の起源のものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="741605ef4e45ee0618904121cc3fd5f417c8880d" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to disable the ability to lock the screen orientation.</source>
          <target state="translated">埋め込みブラウジングコンテキストで画面の向きをロックする機能を無効にします。</target>
        </trans-unit>
        <trans-unit id="a01ecc6028bdc4a32cc774eaf65dc48562b4acc1" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to navigate (load) content to the top-level browsing context. If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">埋め込みブラウジングコンテキストが、トップレベルのブラウジングコンテキストにコンテンツをナビゲート (ロード)することを許可します。このキーワードを使用しない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="bf9916914f8c66adba9d7f2f9c9a589c27a1dda4" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to open modal windows.</source>
          <target state="translated">埋め込みブラウジングコンテキストでモーダルウィンドウを開くことを許可します。</target>
        </trans-unit>
        <trans-unit id="d0f95216587dc88511ecf6c58e7bdf8112265979" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">埋め込みブラウジングコンテキストでスクリプトを実行できるようにします (ポップアップウィンドウの作成はできません)。このキーワードを使用しない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="0419c62683b1201e44580c6c185018bb2fc4aa4a" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to submit forms. If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">埋め込みブラウジングコンテキストでフォームを送信できるようにします。このキーワードが使用されていない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="f2c89b61af6c6f17a8c09714a97165e2cf23d19e" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock&quot;&gt;Pointer Lock API&lt;/a&gt;.</source>
          <target state="translated">埋め込まれたブラウジングコンテキストが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock&quot;&gt;Pointer Lock API&lt;/a&gt;を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="d47be6416ef63d9adb3f32563ed73e211a7ca688" translate="yes" xml:space="preserve">
          <source>Allows the page to disable the ability to lock the screen orientation.</source>
          <target state="translated">画面の向きをロックする機能を無効にします。</target>
        </trans-unit>
        <trans-unit id="33838b0859b41b03a423bfc2b34752d52297549b" translate="yes" xml:space="preserve">
          <source>Allows the page to navigate (load) content to the top-level browsing context. If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">ページがトップレベルのブラウジングコンテキストにコンテンツをナビゲート(ロード)することを許可します。このキーワードを使用しない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="efefb75a2a3ce03432240765afc717dab3a1111d" translate="yes" xml:space="preserve">
          <source>Allows the page to open modal windows.</source>
          <target state="translated">ページでモーダルウィンドウを開くようにします。</target>
        </trans-unit>
        <trans-unit id="33d2730a7964a8927d460300290addb305c20e3b" translate="yes" xml:space="preserve">
          <source>Allows the page to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">ページがスクリプトを実行することを許可します (ポップアップウィンドウは作成しません)。このキーワードを使用しない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="e2a9a180c669b480f86657cd6f967b3c5b030d21" translate="yes" xml:space="preserve">
          <source>Allows the page to submit forms. If this keyword is not used, this operation is not allowed.</source>
          <target state="translated">ページがフォームを送信することを許可します。このキーワードを使用しない場合、この操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="e2f5ac4d66b40e0417e5931f2cd52e670042101b" translate="yes" xml:space="preserve">
          <source>Allows the page to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock&quot;&gt;Pointer Lock API&lt;/a&gt;.</source>
          <target state="translated">ページがPointerLockAPIを使用できるようにし&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa9af97868bcd3e0e5abf7dded6f81f5e4562003" translate="yes" xml:space="preserve">
          <source>Allows the sender to include additional fields at the end of chunked message.</source>
          <target state="translated">送信者がチャンクされたメッセージの最後に追加のフィールドを含めることを許可します。</target>
        </trans-unit>
        <trans-unit id="08a8ebd4fc62c0a4cb8521f9866243f0e1c6ea8b" translate="yes" xml:space="preserve">
          <source>Allows the use of &lt;code&gt;eval()&lt;/code&gt; and similar methods for creating code from strings. You must include the single quotes.</source>
          <target state="translated">文字列からコードを作成するための &lt;code&gt;eval()&lt;/code&gt; および同様のメソッドの使用を許可します。単一引用符を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="01d7fdad360cfdc2e901b1df4a68463e1a02b8e8" translate="yes" xml:space="preserve">
          <source>Allows the use of inline resources, such as inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;javascript:&lt;/code&gt; URLs, inline event handlers, and inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. The single quotes are required.</source>
          <target state="translated">インライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素、 &lt;code&gt;javascript:&lt;/code&gt; URL、インラインイベントハンドラー、インライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素などのインラインリソースの使用を許可します。一重引用符が必要です。</target>
        </trans-unit>
        <trans-unit id="2cd1bd87864a04cf3add283dce271e5f814f1e28" translate="yes" xml:space="preserve">
          <source>Allows the use of inline resources, such as inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;javascript:&lt;/code&gt; URLs, inline event handlers, and inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. You must include the single quotes.</source>
          <target state="translated">インライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素、 &lt;code&gt;javascript:&lt;/code&gt; URL、インラインイベントハンドラー、インライン&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素などのインラインリソースの使用を許可します。単一引用符を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="51e3ac5152db55dda9ebbbe8483aa28291ace912" translate="yes" xml:space="preserve">
          <source>Allows web developers to experiment with policies by monitoring (but not enforcing) their effects. These violation reports consist of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; documents sent via an HTTP &lt;code&gt;POST&lt;/code&gt; request to the specified URI.</source>
          <target state="translated">Web開発者がポリシーの効果を監視する（ただし強制しない）ことでポリシーを試すことができます。これらの違反レポートは、HTTP &lt;code&gt;POST&lt;/code&gt; リクエストを介して指定されたURIに送信された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;ドキュメントで構成されます。</target>
        </trans-unit>
        <trans-unit id="84ad2a25c230050cfbdb31526527d5fcf1288905" translate="yes" xml:space="preserve">
          <source>Allows web developers to experiment with policies by monitoring, but not enforcing, their effects. These violation reports consist of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; documents sent via an HTTP &lt;code&gt;POST&lt;/code&gt; request to the specified URI.</source>
          <target state="translated">Web開発者は、ポリシーの効果を監視することによってポリシーを試すことができますが、強制することはできません。これらの違反の報告は、から構成され&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;たJSON&lt;/a&gt; HTTP経由で送信されたドキュメント &lt;code&gt;POST&lt;/code&gt; の指定されたURIに要求。</target>
        </trans-unit>
        <trans-unit id="7c57719b8c00db1084bb9759e63a3f932a7629f6" translate="yes" xml:space="preserve">
          <source>Also try to move less relevant/important information down to the bottom and group the page's content together meaningfully. Although it is off-topic, perhaps the following detailed example might give you insights and ideas that persuade you to forgo user agent sniffing. Let us imagine a page composed of boxes of information; each box is about a different feline breed or canine breed. Each box has an image, an overview, and a historical funfact. The pictures are kept to a maximum reasonable size even on large screens. For the purposes of grouping the content meaningfully, all the cat boxes are separated from all the dog boxes such that the cat and dog boxes are not intermixed together. On a large screen, it saves space to have multiple columns to reduce the space wasted to the left and to the right of the pictures. The boxes can be separated into multiple columns via two equally fair method. From this point on, we shall assume that all the dog boxes are at the top of the source code, that all the cat boxes are at the bottom of the source code, and that all these boxes have the same parent element. There a single instance of a dog box immediately above a cat box, of course. The first method uses horizontal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox&quot;&gt;Flexboxes&lt;/a&gt; to group the content such that when the page is displayed to the end user, all the dogs boxes are at the top of the page and all the cat boxes are lower on the page. The second method uses a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Layout_cookbook/Column_layouts&quot;&gt;Column&lt;/a&gt; layout and resents all the dogs to the left and all the cats to the right. Only in this particular scenario, it is appropriate to provide no fallback for the flexboxes/multicolumns, resulting in a single column of very wide boxes on old browsers. Also consider the following. If more people visit the webpage to see the cats, then it might be a good idea to put all the cats higher in the source code than the dogs so that more people can find what they are looking for faster on smaller screens where the content collapses down to one column.</source>
          <target state="translated">また、関連性の低い/重要性の低い情報を一番下に移動し、ページのコンテンツを意味のある形でグループ化するようにしてください。トピックから外れていますが、おそらく次の詳細な例から、ユーザーエージェントのスニッフィングをやめるように説得する洞察とアイデアが得られる可能性があります。情報のボックスで構成されるページを想像してみましょう。各ボックスは、異なる猫の品種または犬の品種についてです。各ボックスには、画像、概要、および歴史的な機能があります。大画面でも画像は妥当な最大サイズに保たれます。コンテンツを意味のある形でグループ化するために、猫と犬のボックスが混ざらないように、すべての猫のボックスがすべての犬のボックスから分離されています。大画面では、複数の列を持つことでスペースを節約し、画像の左右で無駄になるスペースを削減します。ボックスは、2つの等しく公平な方法で複数の列に分けることができます。この時点から、すべての犬のボックスがソースコードの上部にあり、すべての猫のボックスがソースコードの下部にあり、これらすべてのボックスが同じ親要素を持っていると想定します。もちろん、猫用トイレのすぐ上に犬用トイレのインスタンスが1つあります。最初の方法は水平を使用します&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox&quot;&gt;フレックス&lt;/a&gt;ボックスは、ページがエンドユーザーに表示されるときに、すべての犬のボックスがページの上部にあり、すべての猫のボックスがページの下部にあるようにコンテンツをグループ化します。 2番目の方法は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Layout_cookbook/Column_layouts&quot;&gt;列&lt;/a&gt;レイアウトを使用して、すべての犬を左側に、すべての猫を右側に憤慨させます。この特定のシナリオでのみ、フレックスボックス/マルチカラムにフォールバックを提供しないことが適切であり、古いブラウザでは非常に幅の広いボックスの単一のカラムになります。次の点も考慮してください。より多くの人がウェブページにアクセスして猫を見る場合は、すべての猫を犬よりもソースコードの上位に配置して、コンテンツが折りたたまれている小さな画面でより多くの人が探しているものをすばやく見つけられるようにすることをお勧めします。 1列まで。</target>
        </trans-unit>
        <trans-unit id="197ef715f3c646e6b397719edb24cab181a5e5e8" translate="yes" xml:space="preserve">
          <source>Also, by default, prefetching of embedded link hostnames is not performed on documents loaded over &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTPS&quot;&gt;HTTPS&lt;/a&gt;. On Firefox, this can be changed by setting the &lt;code&gt;network.dns.disablePrefetchFromHTTPS&lt;/code&gt; preference to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">また、デフォルトでは、埋め込みリンクのホスト名のプリフェッチは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTPS&quot;&gt;HTTPS経由で&lt;/a&gt;ロードされたドキュメントでは実行されません。Firefoxでは、 &lt;code&gt;network.dns.disablePrefetchFromHTTPS&lt;/code&gt; 設定を &lt;code&gt;false&lt;/code&gt; に設定することでこれを変更できます。</target>
        </trans-unit>
        <trans-unit id="2786b01f7fddba1a4761b75f4be96f18c612dfea" translate="yes" xml:space="preserve">
          <source>Also, pay attention not to use a simple regular expression on the BrowserName, user agents also contain strings outside the Keyword/Value syntax. Safari &amp;amp; Chrome contain the string 'like Gecko', for instance.</source>
          <target state="translated">また、BrowserNameで単純な正規表現を使用しないように注意してください。ユーザーエージェントには、Keyword / Value構文以外の文字列も含まれます。たとえば、SafariとChromeには「Geckoのような」という文字列が含まれています。</target>
        </trans-unit>
        <trans-unit id="a39f383ce421cfb82712ee700637b63b224f71b2" translate="yes" xml:space="preserve">
          <source>Alt-Svc</source>
          <target state="translated">Alt-Svc</target>
        </trans-unit>
        <trans-unit id="969f9938b9e9ad46cc407e83f40599f28ad451b1" translate="yes" xml:space="preserve">
          <source>Alternative way of specifying redirections</source>
          <target state="translated">リダイレクトを指定する別の方法</target>
        </trans-unit>
        <trans-unit id="aafaa60231bd948348513cfbf048fba3ee9420b0" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;code&gt;noreferrer&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types&quot;&gt;link relation&lt;/a&gt; on an &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;area&lt;/code&gt;, or &lt;code&gt;link&lt;/code&gt; element can be set:</source>
          <target state="translated">あるいは、 &lt;code&gt;noreferrer&lt;/code&gt; の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types&quot;&gt;リンク関係&lt;/a&gt;に &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;area&lt;/code&gt; 、または &lt;code&gt;link&lt;/code&gt; 要素を設定することができます。</target>
        </trans-unit>
        <trans-unit id="28d99eac48e2150a7854ebf5ed41a547fcb7ff26" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;code&gt;noreferrer&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types&quot;&gt;link relation&lt;/a&gt; on an a, area, or link element can be set:</source>
          <target state="translated">あるいは、a 、area、またはlink要素の &lt;code&gt;noreferrer&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types&quot;&gt;リンク関係&lt;/a&gt;を設定できます。</target>
        </trans-unit>
        <trans-unit id="0a8e3d200820a58b6e0b8358c248b25476e1c5f5" translate="yes" xml:space="preserve">
          <source>Alternatively, in newer versions:</source>
          <target state="translated">あるいは、新しいバージョンでは</target>
        </trans-unit>
        <trans-unit id="a9bb9cbc60c02f0889f6ac3194244c3ea1b935e7" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; element can be used to configure a policy, for example: &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src 'self'; img-src https://*; child-src 'none';&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">または、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用してポリシーを構成することもできます。例： &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src 'self'; img-src https://*; child-src 'none';&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb21b29ffd21c7c82658bce444d0d375ea5eb7ac" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create hashes from your inline scripts. CSP supports sha256, sha384 and sha512.</source>
          <target state="translated">また、インラインスクリプトからハッシュを作成することもできます。CSP は sha256、sha384、sha512 をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c96489cbf1e84a29d50323c0d62b764cf352a52a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create hashes from your inline styles. CSP supports sha256, sha384 and sha512.</source>
          <target state="translated">また、インラインスタイルからハッシュを作成することもできます。CSP は sha256、sha384、sha512 をサポートしています。</target>
        </trans-unit>
        <trans-unit id="52a25e02a82ef60d93cd242f5fb2c709e891fe3d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create hashes from your inline styles. CSP supports sha256, sha384 and sha512. The &lt;strong&gt;binary&lt;/strong&gt; form of the hash has to be encoded with base64. You can obtain the hash of a string on the command line via the &lt;code&gt;openssl&lt;/code&gt; program:</source>
          <target state="translated">または、インラインスタイルからハッシュを作成することもできます。CSPは、sha256、sha384、およびsha512をサポートします。ハッシュの&lt;strong&gt;バイナリ&lt;/strong&gt;形式はbase64でエンコードする必要があります。コマンドラインで &lt;code&gt;openssl&lt;/code&gt; プログラムを介して文字列のハッシュを取得できます。</target>
        </trans-unit>
        <trans-unit id="c45516a24ea8f0e4a83ad34f9d135e93d5d83f7b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use frameguard directly:</source>
          <target state="translated">あるいは、フレームガードを直接使用することもできます。</target>
        </trans-unit>
        <trans-unit id="e7028d055906f785a2824cddbc861da7d354ff8c" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS-safelisted request headers&lt;/a&gt; are always allowed and don't usually need to be listed in &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;, listing them anyway will circumvent the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header#Additional_restrictions&quot;&gt;additional restrictions&lt;/a&gt; that apply.</source>
          <target state="translated">が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS-safelistedリクエストヘッダは&lt;/a&gt;常に許可され、通常にリストする必要はありません &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; 回避ますとにかくそれらをリスト、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header#Additional_restrictions&quot;&gt;追加の制限が&lt;/a&gt;適用されます。</target>
        </trans-unit>
        <trans-unit id="c1557091a03ff09f7dee02267939f1e7e6affdd2" translate="yes" xml:space="preserve">
          <source>Although Firefox supports &lt;code&gt;data&lt;/code&gt; URLs of essentially unlimited length, browsers are not required to support any particular maximum length of data. For example, the Opera 11 browser limited URLs to 65535 characters long which limits &lt;code&gt;data&lt;/code&gt; URLs to 65529 characters (65529 characters being the length of the encoded data, not the source, if you use the plain &lt;code&gt;data:&lt;/code&gt;, without specifying a MIME type).</source>
          <target state="translated">Firefox は基本的に無制限の長さの &lt;code&gt;data&lt;/code&gt; URLをサポートしますが、ブラウザは特定の最大長のデータをサポートする必要はありません。たとえば、Opera 11ブラウザーは、URLを65535文字に制限し、 &lt;code&gt;data&lt;/code&gt; URLを65529文字に制限します（プレーン &lt;code&gt;data:&lt;/code&gt; を使用し、MIMEタイプを指定しない場合、65529文字はソースではなく、エンコードされたデータの長さです）。</target>
        </trans-unit>
        <trans-unit id="95896d4301d000a02f900c6b86de14488ddbcde0" translate="yes" xml:space="preserve">
          <source>Although fragment identifiers used within URI references are not sent
   in requests, implementers ought to be aware that they will be visible
   to the user agent and any extensions or scripts running as a result
   of the response.  In particular, when a redirect occurs and the
   original request's fragment identifier is inherited by the new
   reference in Location (&lt;a href=&quot;#section-7.1.2&quot;&gt;Section 7.1.2&lt;/a&gt;), this might have the effect of
   disclosing one site's fragment to another site.  If the first site
   uses personal information in fragments, it ought to ensure that
   redirects to other sites include a (possibly empty) fragment
   component in order to block that inheritance.</source>
          <target state="translated">URI参照内で使用されるフラグメント識別子はリクエストで送信されませんが、実装者は、それらがユーザーエージェントと、応答の結果として実行されるすべての拡張機能またはスクリプトに表示されることを認識する必要があります。特に、リダイレクトが発生し、元のリクエストのフラグメント識別子がLocation（&lt;a href=&quot;#section-7.1.2&quot;&gt;セクション7.1.2&lt;/a&gt;）の新しい参照によって継承される場合、これにより、あるサイトのフラグメントが別のサイトに開示される可能性があります。最初のサイトが個人情報をフラグメントで使用する場合、その継承をブロックするために、他のサイトへのリダイレクトに（おそらく空の）フラグメントコンポーネントが含まれていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="31287a55ab92ee46df59edd609b16221b3daba2a" translate="yes" xml:space="preserve">
          <source>Although it is &lt;strong&gt;strongly discouraged&lt;/strong&gt; by Mozilla, some handset manufacturers unfortunately include a token in their device's UA string that represents their device id. If this is the case, the Firefox OS UA string will look like the device-specific string in the table above, where &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; is the manufacturer's code for the device (see &lt;a href=&quot;https://wiki.mozilla.org/B2G/User_Agent/Device_Model_Inclusion_Requirements&quot;&gt;Guidelines&lt;/a&gt;). Some of them we have noticed are of the form &quot;&lt;strong&gt;NexusOne;&lt;/strong&gt;&quot;, &quot;&lt;strong&gt;ZTEOpen;&lt;/strong&gt;&quot;, or &quot;&lt;strong&gt;Open C;&lt;/strong&gt;&quot; (note that putting space is also discouraged). We provide this information to assist with your UA detection logic, but Mozilla discourages the detection of a device id in UA strings.</source>
          <target state="translated">Mozilla には&lt;strong&gt;強く推奨&lt;/strong&gt;されてい&lt;strong&gt;ません&lt;/strong&gt;が、一部の携帯電話メーカーは、残念ながら、デバイスのUA文字列にデバイスIDを表すトークンを含めています。この場合、Firefox OSのUA文字列は、上の表のデバイス固有の文字列のようになります&lt;em&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/em&gt;デバイスの製造元のコードです（&lt;a href=&quot;https://wiki.mozilla.org/B2G/User_Agent/Device_Model_Inclusion_Requirements&quot;&gt;ガイドラインを&lt;/a&gt;参照）。私たちが気づいたそれらのいくつかは、「&lt;strong&gt;NexusOne;&lt;/strong&gt;」、「&lt;strong&gt;ZTEOpen;&lt;/strong&gt;」、または「&lt;strong&gt;Open C;&lt;/strong&gt;」の形式&lt;strong&gt;です&lt;/strong&gt;（スペースを置くこともお勧めしません）。 UA検出ロジックを支援するためにこの情報を提供していますが、MozillaはUA文字列でのデバイスIDの検出を推奨していません。</target>
        </trans-unit>
        <trans-unit id="1d3b41d03b9a3434a867d7f122dd20caa1d4ef01" translate="yes" xml:space="preserve">
          <source>Although line 10 contains the Cookie destined for the content on &lt;code&gt;http://bar.other&lt;/code&gt;, if bar.other did not respond with an &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; (line 17) the response would be ignored and not made available to web content.</source>
          <target state="translated">10行目には &lt;code&gt;http://bar.other&lt;/code&gt; のコンテンツ宛てのCookieが含まれていますが、bar.otherが&lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; （17行目）で応答しなかった場合、応答は無視され、使用できなくなります。 Webコンテンツに。</target>
        </trans-unit>
        <trans-unit id="3e784d0202a94833f035a84e2685a288c242330e" translate="yes" xml:space="preserve">
          <source>Although line 11 contains the Cookie destined for the content on &lt;code&gt;http://bar.other&lt;/code&gt;, if bar.other did not respond with an &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; (line 19) the response would be ignored and not made available to web content.</source>
          <target state="translated">行11には &lt;code&gt;http://bar.other&lt;/code&gt; のコンテンツを宛先とするCookieが含まれていますが、bar.otherが&lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; （行19）で応答しなかった場合、応答は無視され、利用できなくなります。ウェブコンテンツへ。</target>
        </trans-unit>
        <trans-unit id="46a72e7d1df557890c548f429dfcfe446b549d89" translate="yes" xml:space="preserve">
          <source>Although the HTTP standard specifies &quot;unauthorized&quot;, semantically this response means &quot;unauthenticated&quot;. That is, the client must authenticate itself to get the requested response.</source>
          <target state="translated">HTTP 標準では &quot;unauthorized&quot; を指定していますが、意味的にはこのレスポンスは &quot;unauthenticated&quot; を意味します。つまり、クライアントは要求されたレスポンスを得るために自分自身を認証しなければなりません。</target>
        </trans-unit>
        <trans-unit id="772d6209abf255884251d1e63fc5494b4017ee80" translate="yes" xml:space="preserve">
          <source>Although the write locks provide some help in preventing lost
   updates, they cannot guarantee that updates will never be lost.
   Consider the following scenario:

   Two clients A and B are interested in editing the resource
   'index.html'.  Client A is an HTTP client rather than a WebDAV
   client, and so does not know how to perform locking.

   Client A doesn't lock the document, but does a GET, and begins
   editing.

   Client B does LOCK, performs a GET and begins editing.

   Client B finishes editing, performs a PUT, then an UNLOCK.

   Client A performs a PUT, overwriting and losing all of B's changes.

   There are several reasons why the WebDAV protocol itself cannot
   prevent this situation.  First, it cannot force all clients to use
   locking because it must be compatible with HTTP clients that do not
   comprehend locking.  Second, it cannot require servers to support
   locking because of the variety of repository implementations, some of
   which rely on reservations and merging rather than on locking.
   Finally, being stateless, it cannot enforce a sequence of operations
   like LOCK / GET / PUT / UNLOCK.

   WebDAV servers that support locking can reduce the likelihood that
   clients will accidentally overwrite each other's changes by requiring
   clients to lock resources before modifying them.  Such servers would
   effectively prevent HTTP 1.0 and HTTP 1.1 clients from modifying
   resources.

   WebDAV clients can be good citizens by using a lock / retrieve /
   write /unlock sequence of operations (at least by default) whenever
   they interact with a WebDAV server that supports locking. 

   HTTP 1.1 clients can be good citizens, avoiding overwriting other
   clients' changes, by using entity tags in If-Match headers with any
   requests that would modify resources.

   Information managers may attempt to prevent overwrites by
   implementing client-side procedures requiring locking before
   modifying WebDAV resources.</source>
          <target state="translated">書き込みロックは、更新が失われるのを防ぐのに役立ちますが、更新が絶対に失われないことを保証するものではありません。以下のシナリオを考えてみましょう。二つのクライアントAとBがリソース'index.html'の編集に興味を持っています。クライアントAはWebDAVクライアントではなくHTTPクライアントなので、ロックの方法を知りません。クライアントAはドキュメントをロックしませんが、GETして編集を開始します。クライアントBはLOCKを行い、GETを実行して編集を開始します。クライアント B は編集を終了し、PUT を実行した後、UNLOCK を実行した。クライアント A が PUT を実行すると、B の変更はすべて上書きされて失われます。WebDAV プロトコル自体がこのような状況を防ぐことができない理由はいくつかあります。第一に、ロックを理解していない HTTP クライアントと互換性を持たせる必要があるため、すべてのクライアントに強制的にロックを使用させることはできません。第二に、様々なリポジトリの実装があるため、サーバにロックをサポートするように要求することができません。最後に、ステートレスであるため、LOCK/GET/PUT/UNLOCK のような一連の操作を強制することができません。ロックをサポートする WebDAV サーバは、クライアントがリソースを変更する前にロックすることをクライアントに要求することで、クライアントがお互いの変更を誤って上書きしてしまう可能性を減らすことができます。このようなサーバは、HTTP 1.0 や HTTP 1.1 のクライアントがリソースを変更することを効果的に防ぐことができます。WebDAV クライアントは、ロックをサポートしている WebDAV サーバと対話するときはいつでも (少なくともデフォルトでは)ロック/取得/書き込み/アンロックの一連の操作を使用することで、善良な市民になることができます。HTTP 1.1 クライアントは、リソースを変更するようなリクエストに対して If-Match ヘッダでエンティティタグを使用することで、他のクライアントの変更の上書きを避けることができ、良き市民であることができます。情報管理者は、WebDAV リソースを変更する前にロックを必要とするクライアント側の手続きを実装することで上書きを防ぐことを試みることができます。</target>
        </trans-unit>
        <trans-unit id="ae6fcea0d3527546dbc2efecb9c0488c56577892" translate="yes" xml:space="preserve">
          <source>Although this document specifies the requirements for the generation
   of HTTP/1.1 messages, not all applications will be correct in their
   implementation. We therefore recommend that operational applications
   be tolerant of deviations whenever those deviations can be
   interpreted unambiguously.

   Clients SHOULD be tolerant in parsing the Status-Line and servers
   tolerant when parsing the Request-Line. In particular, they SHOULD
   accept any amount of SP or HT characters between fields, even though
   only a single SP is required.

   The line terminator for message-header fields is the sequence CRLF.
   However, we recommend that applications, when parsing such headers,
   recognize a single LF as a line terminator and ignore the leading CR.

   The character set of an entity-body SHOULD be labeled as the lowest
   common denominator of the character codes used within that body, with
   the exception that not labeling the entity is preferred over labeling
   the entity with the labels US-ASCII or ISO-8859-1. See &lt;a href=&quot;#section-3.7.1&quot;&gt;section 3.7.1&lt;/a&gt;
   and 3.4.1.

   Additional rules for requirements on parsing and encoding of dates
   and other potential problems with date encodings include:

      - HTTP/1.1 clients and caches SHOULD assume that an &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC-850&lt;/a&gt; date
        which appears to be more than 50 years in the future is in fact
        in the past (this helps solve the &quot;year 2000&quot; problem).

      - An HTTP/1.1 implementation MAY internally represent a parsed
        Expires date as earlier than the proper value, but MUST NOT
        internally represent a parsed Expires date as later than the
        proper value.

      - All expiration-related calculations MUST be done in GMT. The
        local time zone MUST NOT influence the calculation or comparison
        of an age or expiration time. 

      - If an HTTP header incorrectly carries a date value with a time
        zone other than GMT, it MUST be converted into GMT using the
        most conservative possible conversion.</source>
          <target state="translated">このドキュメントでは、HTTP / 1.1メッセージの生成に関する要件を指定していますが、すべてのアプリケーションがその実装において正しいとは限りません。したがって、運用アプリケーションでは、偏差を明確に解釈できる場合は常に、偏差を許容することをお勧めします。クライアントは、ステータスラインの解析に耐性があり、サーバーはリクエストラインの解析に耐性があるべきです。特に、SPが1つだけ必要な場合でも、フィールド間で任意の量のSPまたはHT文字を受け入れる必要があります（SHOULD）。メッセージヘッダーフィールドの行終端記号は、シーケンスCRLFです。ただし、このようなヘッダーを解析する場合、アプリケーションは単一のLFを行末記号として認識し、先頭のCRを無視することをお勧めします。エンティティボディの文字セットは、そのボディ内で使用される文字コードの最小公分母としてラベル付けする必要があります（ただし、エンティティにラベルを付けない方が、US-ASCIIまたはISO-8859-でエンティティをラベル付けするよりも優先されます）。 1。見る&lt;a href=&quot;#section-3.7.1&quot;&gt;セクション3.7.1&lt;/a&gt; および3.4​​.1。日付の解析とエンコードに関する要件、および日付エンコードに関するその他の潜在的な問題に関する追加のルールは次のとおりです。-HTTP / 1.1クライアントとキャッシュは、&lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC-850&lt;/a&gt;であると想定する必要があります（ SHOULD）50年以上先と思われる日付は、実際には過去のものです（これは、「2000年問題」の解決に役立ちます）。 -HTTP / 1.1実装は、解析されたExpires日付を適切な値よりも前として内部的に表すことができますが、解析されたExpires日付を適切な値より後として内部的に表すことはできません。 -すべての有効期限関連の計算はGMTで行う必要があります。ローカルタイムゾーンは、経過時間または有効期限の計算または比較に影響を与えてはなりません。 -HTTPヘッダーがGMT以外のタイムゾーンの日付値を誤って運ぶ場合は、可能な限り最も保守的な変換を使用してGMTに変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="d7059fa05c2bada2fecf12f49096ca50d8fbd471" translate="yes" xml:space="preserve">
          <source>Although this status code is intended to describe a response with no body, servers may erroneously include data following the headers. The protocol allows user agents to vary in how they process such responses (&lt;a href=&quot;https://github.com/httpwg/http11bis/issues/26&quot;&gt;discussion regarding this specification text can be found here&lt;/a&gt;). This is observable in persistent connections, where the invalid body may include a distinct response to a subsequent request.</source>
          <target state="translated">このステータスコードは、本文のない応答を説明することを目的としていますが、サーバーはヘッダーに続くデータを誤って含める場合があります。このプロトコルにより、ユーザーエージェントは、そのような応答を処理する方法を変えることができます（&lt;a href=&quot;https://github.com/httpwg/http11bis/issues/26&quot;&gt;この仕様テキストに関する議論は、ここにあります&lt;/a&gt;）これは、無効なボディに後続のリクエストに対する明確な応答が含まれる可能性がある永続的な接続で観察できます。</target>
        </trans-unit>
        <trans-unit id="cdf07a548d7dfec43b202a1786fb9188645f2387" translate="yes" xml:space="preserve">
          <source>Amazon Kindle eBook format</source>
          <target state="translated">Amazon Kindle電子書籍フォーマット</target>
        </trans-unit>
        <trans-unit id="af7c29965f74dbcaf148b9acaea604efc27c6cbf" translate="yes" xml:space="preserve">
          <source>Ambient light sensor</source>
          <target state="translated">環境光センサ</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="615b8c7998d5277881578a2abc74d98135448bfa" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;allowlist&lt;/code&gt; is a list of origins that takes one or more of the following values, separated by spaces:</source>
          <target state="translated">&lt;code&gt;allowlist&lt;/code&gt; は、スペースで区切られ、次の値の一つ以上を要する起源のリストです。</target>
        </trans-unit>
        <trans-unit id="6b4e8bf14b8c6f1d264a99cfc4165e21e00334c4" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;&lt;a href=&quot;methods&quot;&gt;HTTP method&lt;/a&gt;&lt;/em&gt;, a verb (like &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;) or a noun (like &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;), that describes the action to be performed. For example, &lt;code&gt;GET&lt;/code&gt; indicates that a resource should be fetched or &lt;code&gt;POST&lt;/code&gt; means that data is pushed to the server (creating or modifying a resource, or generating a temporary document to send back).</source>
          <target state="translated">実行するアクションを説明する&lt;em&gt;&lt;a href=&quot;methods&quot;&gt;HTTPメソッド&lt;/a&gt;&lt;/em&gt;、動詞（&lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; など&lt;/a&gt;）または名詞（&lt;a href=&quot;methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; など&lt;/a&gt;）。たとえば、 &lt;code&gt;GET&lt;/code&gt; はリソースをフェッチする必要があることを示し、 &lt;code&gt;POST&lt;/code&gt; はデータがサーバーにプッシュされることを示します（リソースを作成または変更する、または一時ドキュメントを生成して送り返す）。</target>
        </trans-unit>
        <trans-unit id="86440ab578a3769337d5800e98b7fd98176177d7" translate="yes" xml:space="preserve">
          <source>An Atom Publishing Protocol Category Document, when serialized as XML
   1.0, can be identified with the following media type:

   MIME media type name:  application

   MIME subtype name:  atomcat+xml

   Required parameters:  None.

   Optional parameters:

      &quot;charset&quot;:  This parameter has identical semantics to the charset
         parameter of the &quot;application/xml&quot; media type as specified in
         [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;].

   Encoding considerations:  Identical to those of &quot;application/xml&quot; as
      described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023], Section&amp;nbsp;3.2&lt;/a&gt;. 

   Security considerations:  As defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

      In addition, as this media type uses the &quot;+xml&quot; convention, it
      shares the same security considerations as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023],
      Section&amp;nbsp;10&lt;/a&gt;.

   Interoperability considerations:  There are no known interoperability
      issues.

   Published specification:  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Applications that use this media type:  No known applications
      currently use this media type.

   Additional information:

   Magic number(s):  As specified for &quot;application/xml&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023],
      Section&amp;nbsp;3.2&lt;/a&gt;.

   File extension:  .atomcat

   Fragment identifiers:  As specified for &quot;application/xml&quot; in
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023], Section&amp;nbsp;5&lt;/a&gt;.

   Base URI:  As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023], Section&amp;nbsp;6&lt;/a&gt;.

   Macintosh file type code:  TEXT

   Person &amp;amp; email address to contact for further information:
      Joe Gregorio &amp;lt;joe@bitworking.org&amp;gt;

   Intended usage:  COMMON

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force</source>
          <target state="translated">Atom Publishing Protocolカテゴリドキュメントは、XML 1.0としてシリアル化されている場合、次のメディアタイプで識別できます。MIMEメディアタイプ名：アプリケーションMIMEサブタイプ名：atomcat + xml必須パラメーター：なし。オプションパラメータ：「charset」：このパラメータは、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt; ]で指定されている「application / xml」メディアタイプのcharsetパラメータと同じセマンティクスを持っています。エンコーディングに関する考慮事項：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023]のセクション3.2で&lt;/a&gt;説明されている「application / xml」の考慮事項と同じです。セキュリティに関する考慮事項：&lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023で&lt;/a&gt;定義されています。さらに、このメディアタイプは「+ xml」規則を使用するため、&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023]で&lt;/a&gt;説明されているのと同じセキュリティ上の考慮事項を共有します。セクション10。相互運用性に関する考慮事項：既知の相互運用性の問題はありません。公開された仕様： &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;。このメディアタイプを使用するアプリケーション：現在、このメディアタイプを使用している既知のアプリケーションはありません。追加情報：マジックナンバー：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023]、セクション3.2の&lt;/a&gt;「application / xml」で指定されたとおり。ファイル拡張子：.atomcatフラグメント識別子：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023]のセクション5の&lt;/a&gt;「application / xml」で指定されているとおり 。ベースURI：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023]、セクション6で&lt;/a&gt;指定されているとおり。 Macintoshファイルタイプコード：TEXT連絡先の個人と電子メールアドレス：Joe Gregorio &amp;lt;joe@bitworking.org&amp;gt;使用目的：共通の作成者/変更コントローラー：IETF（iesg@ietf.org）Internet Engineering Task Force</target>
        </trans-unit>
        <trans-unit id="cf6c4aedb53226da5214a23ca75c1a0eb3cafdc2" translate="yes" xml:space="preserve">
          <source>An Atom Publishing Protocol Service Document, when serialized as XML
   1.0, can be identified with the following media type:

   MIME media type name:  application

   MIME subtype name:  atomsvc+xml

   Required parameters:  None. 

   Optional parameters:

      &quot;charset&quot;:  This parameter has identical semantics to the charset
         parameter of the &quot;application/xml&quot; media type as specified in
         [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;].

   Encoding considerations:  Identical to those of &quot;application/xml&quot; as
      described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023], Section&amp;nbsp;3.2&lt;/a&gt;.

   Security considerations:  As defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

      In addition, as this media type uses the &quot;+xml&quot; convention, it
      shares the same security considerations as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023],
      Section&amp;nbsp;10&lt;/a&gt;.

   Interoperability considerations:  There are no known interoperability
      issues.

   Published specification:  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Applications that use this media type:  No known applications
      currently use this media type.

   Additional information:

   Magic number(s):  As specified for &quot;application/xml&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023],
      Section&amp;nbsp;3.2&lt;/a&gt;.

   File extension:  .atomsvc

   Fragment identifiers:  As specified for &quot;application/xml&quot; in
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023], Section&amp;nbsp;5&lt;/a&gt;.

   Base URI:  As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023], Section&amp;nbsp;6&lt;/a&gt;.

   Macintosh file type code:  TEXT

   Person and email address to contact for further information:  Joe
      Gregorio &amp;lt;joe@bitworking.org&amp;gt;

   Intended usage:  COMMON

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force</source>
          <target state="translated">Atom Publishing Protocolサービスドキュメントは、XML 1.0としてシリアル化されると、次のメディアタイプで識別できます。MIMEメディアタイプ名：アプリケーションMIMEサブタイプ名：atomsvc​​ + xml必須パラメーター：なし。オプションパラメータ：「charset」：このパラメータは、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt; ]で指定されている「application / xml」メディアタイプのcharsetパラメータと同じセマンティクスを持っています。エンコーディングに関する考慮事項：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023]のセクション3.2で&lt;/a&gt;説明されている「application / xml」の考慮事項と同じです。セキュリティに関する考慮事項：&lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023で&lt;/a&gt;定義されています。さらに、このメディアタイプは「+ xml」規則を使用するため、&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023]で&lt;/a&gt;説明されているのと同じセキュリティ上の考慮事項を共有します。セクション10。相互運用性に関する考慮事項：既知の相互運用性の問題はありません。公開された仕様： &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;。このメディアタイプを使用するアプリケーション：現在、このメディアタイプを使用している既知のアプリケーションはありません。追加情報：マジックナンバー：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023]、セクション3.2の&lt;/a&gt;「application / xml」で指定されたとおり。ファイル拡張子：.atomsvc​​フラグメント識別子：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023]のセクション5の&lt;/a&gt;「application / xml」で指定されているとおり 。ベースURI：&lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023]、セクション6で&lt;/a&gt;指定されているとおり。Macintoshファイルタイプコード：TEXT詳細については、連絡先の人物と電子メールアドレス：Joe Gregorio &amp;lt;joe@bitworking.org&amp;gt;使用目的：共通の作成者/変更コントローラー：IETF（iesg@ietf.org）Internet Engineering Task Force</target>
        </trans-unit>
        <trans-unit id="7254bd871c63a8e62a9d5239377ac0b3fc259331" translate="yes" xml:space="preserve">
          <source>An HTML document that executes a JavaScript alert. Note that the closing script tag is required.</source>
          <target state="translated">JavaScript アラートを実行する HTML ドキュメント。クロージングスクリプトタグが必須であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="303f58f13dce71a0e7fad3c11eac5eff7ef589df" translate="yes" xml:space="preserve">
          <source>An HTML document with &lt;code&gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt; HTMLドキュメント</target>
        </trans-unit>
        <trans-unit id="f190ae58e3762585b81fc8fc127a43daf1651695" translate="yes" xml:space="preserve">
          <source>An HTTP &lt;a href=&quot;methods&quot;&gt;method&lt;/a&gt;, usually a verb like &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; or a noun like &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; that defines the operation the client wants to perform. Typically, a client wants to fetch a resource (using &lt;code&gt;GET&lt;/code&gt;) or post the value of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML form&lt;/a&gt; (using &lt;code&gt;POST&lt;/code&gt;), though more operations may be needed in other cases.</source>
          <target state="translated">HTTP &lt;a href=&quot;methods&quot;&gt;メソッド&lt;/a&gt;、通常は&lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;などの動詞、または&lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt;などの名詞で、クライアントが実行する操作を定義します。通常、クライアントは（ &lt;code&gt;GET&lt;/code&gt; を使用して）リソースをフェッチするか、（ &lt;code&gt;POST&lt;/code&gt; を使用して）&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTMLフォームの&lt;/a&gt;値をポストしますが、他の場合にはさらに操作が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="e084db9952eabe09407577846f46c517a44d7f7d" translate="yes" xml:space="preserve">
          <source>An HTTP Extension Framework</source>
          <target state="translated">HTTP 拡張フレームワーク</target>
        </trans-unit>
        <trans-unit id="224b4c4e69b1e3dc55d55f1ba353682c6c99e28c" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles</source>
          <target state="translated">法的障害を報告するためのHTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="606a7f78aa2b9bb237bbb97da4be73cfcfdc8923" translate="yes" xml:space="preserve">
          <source>An HTTP message can be either a request from client to server or a
   response from server to client.  Syntactically, the two types of
   message differ only in the start-line, which is either a request-line
   (for requests) or a status-line (for responses), and in the algorithm
   for determining the length of the message body (&lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;). 

   In theory, a client could receive requests and a server could receive
   responses, distinguishing them by their different start-line formats,
   but, in practice, servers are implemented to only expect a request (a
   response is interpreted as an unknown or invalid request method) and
   clients are implemented to only expect a response.

     start-line     = request-line / status-line</source>
          <target state="translated">HTTPメッセージは、クライアントからサーバーへの要求またはサーバーからクライアントへの応答のいずれかです。構文的には、2種類のメッセージは、リクエストライン（リクエストの場合）またはステータスライン（レスポンスの場合）のスタートラインと、メッセージ本文の長さを決定するアルゴリズム（&lt;a href=&quot;#section-3.3&quot;&gt;セクション3.3&lt;/a&gt;）。理論的には、クライアントは要求を受信し、サーバーは応答を受信して​​、異なる開始行形式でそれらを区別できますが、実際には、サーバーは要求のみを予期するように実装されます（応答は不明または無効な要求メソッドとして解釈されます） ）とクライアントは、応答のみを期待するように実装されています。 start-line = request-line / status-line</target>
        </trans-unit>
        <trans-unit id="daaec2180aef0e0c15dca19ff80c20ef6a2edd19" translate="yes" xml:space="preserve">
          <source>An HTTP-date timestamp.</source>
          <target state="translated">HTTP 日付のタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="bda182a3078d6fee0f6ff4a7deb6d570e58ba8a3" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 (or later) client sending a message-body SHOULD monitor
   the network connection for an error status while it is transmitting
   the request. If the client sees an error status, it SHOULD
   immediately cease transmitting the body. If the body is being sent
   using a &quot;chunked&quot; encoding (&lt;a href=&quot;#section-3.6&quot;&gt;section 3.6&lt;/a&gt;), a zero length chunk and
   empty trailer MAY be used to prematurely mark the end of the message.
   If the body was preceded by a Content-Length header, the client MUST
   close the connection.</source>
          <target state="translated">メッセージボディを送信するHTTP / 1.1（またはそれ以降）クライアントは、リクエストを送信している間、エラー接続のネットワーク接続を監視する必要があります（SHOULD）。クライアントがエラーステータスを確認した場合は、本文の送信を直ちに中止する必要があります（SHOULD）。本文が「チャンク」エンコーディング（&lt;a href=&quot;#section-3.6&quot;&gt;セクション3.6&lt;/a&gt;）を使用して送信されている場合、長さゼロのチャンクと空のトレーラーを使用して、メッセージの終わりを時期尚早にマークできます。本文の前にContent-Lengthヘッダーがある場合、クライアントは接続を閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="287c4eeafec6189b6edc5e8b172c0314056ae7c7" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used as request method. In the case of a POST, the &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; of the request body is one of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain.&lt;/code&gt;</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;が要求メソッドとして使用されます。 POSTの場合、リクエスト本文の&lt;a href=&quot;headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 、 &lt;code&gt;multipart/form-data&lt;/code&gt; 、または &lt;code&gt;text/plain.&lt;/code&gt; いずれかです。</target>
        </trans-unit>
        <trans-unit id="43150375aa6dfc8cbdc9d2576d9ab158a71ecc43" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 server MAY assume that a HTTP/1.1 client intends to
   maintain a persistent connection unless a Connection header including
   the connection-token &quot;close&quot; was sent in the request. If the server
   chooses to close the connection immediately after sending the
   response, it SHOULD send a Connection header including the
   connection-token close.

   An HTTP/1.1 client MAY expect a connection to remain open, but would
   decide to keep it open based on whether the response from a server
   contains a Connection header with the connection-token close. In case
   the client does not want to maintain a connection for more than that
   request, it SHOULD send a Connection header including the
   connection-token close.

   If either the client or the server sends the close token in the
   Connection header, that request becomes the last one for the
   connection.

   Clients and servers SHOULD NOT assume that a persistent connection is
   maintained for HTTP versions less than 1.1 unless it is explicitly
   signaled. See &lt;a href=&quot;#section-19.6.2&quot;&gt;section 19.6.2&lt;/a&gt; for more information on backward
   compatibility with HTTP/1.0 clients.

   In order to remain persistent, all messages on the connection MUST
   have a self-defined message length (i.e., one not defined by closure
   of the connection), as described in &lt;a href=&quot;#section-4.4&quot;&gt;section 4.4&lt;/a&gt;.</source>
          <target state="translated">HTTP / 1.1サーバーは、リクエストでconnection-token &quot;close&quot;を含むConnectionヘッダーが送信されない限り、HTTP / 1.1クライアントが永続的な接続を維持するつもりであると想定する場合があります。サーバーが応答を送信した直後に接続を閉じることを選択した場合は、接続トークンの閉じを含む接続ヘッダーを送信する必要があります（SHOULD）。 HTTP / 1.1クライアントは、接続が開いたままであることを期待できますが、サーバーからの応答に、接続トークンが閉じる接続ヘッダーが含まれているかどうかに基づいて、接続を開いたままにすることを決定します。クライアントがそのリクエスト以上の接続を維持したくない場合は、接続トークンのクローズを含む接続ヘッダーを送信する必要があります（SHOULD）。クライアントまたはサーバーのいずれかが接続ヘッダーでクローズトークンを送信する場合、その要求が接続の最後の要求になります。クライアントとサーバーは、明示的に通知されない限り、永続的な接続が1.1より前のバージョンのHTTPで維持されると想定してはなりません（SHOULD NOT）。見る&lt;a href=&quot;#section-19.6.2&quot;&gt;&lt;/a&gt;HTTP / 1.0クライアントとの下位互換性の詳細については、セクション19.6.2。&lt;a href=&quot;#section-4.4&quot;&gt;セクション4.4で&lt;/a&gt;説明されているように、永続性を維持するために、接続上のすべてのメッセージは、自己定義のメッセージ長（つまり、接続のクローズによって定義されていないもの）を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="26a5246f423e33fffe2547c2c151d27d85e6b13f" translate="yes" xml:space="preserve">
          <source>An HTTP/2 connection can demand a greater commitment of resources to
   operate than an HTTP/1.1 connection.  The use of header compression
   and flow control depend on a commitment of resources for storing a
   greater amount of state.  Settings for these features ensure that
   memory commitments for these features are strictly bounded. 

   The number of PUSH_PROMISE frames is not constrained in the same
   fashion.  A client that accepts server push SHOULD limit the number
   of streams it allows to be in the &quot;reserved (remote)&quot; state.  An
   excessive number of server push streams can be treated as a stream
   error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type ENHANCE_YOUR_CALM.

   Processing capacity cannot be guarded as effectively as state
   capacity.

   The SETTINGS frame can be abused to cause a peer to expend additional
   processing time.  This might be done by pointlessly changing SETTINGS
   parameters, setting multiple undefined parameters, or changing the
   same setting multiple times in the same frame.  WINDOW_UPDATE or
   PRIORITY frames can be abused to cause an unnecessary waste of
   resources.

   Large numbers of small or empty frames can be abused to cause a peer
   to expend time processing frame headers.  Note, however, that some
   uses are entirely legitimate, such as the sending of an empty DATA or
   CONTINUATION frame at the end of a stream.

   Header compression also offers some opportunities to waste processing
   resources; see Section 7 of [&lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt;] for more details on
   potential abuses.

   Limits in SETTINGS parameters cannot be reduced instantaneously,
   which leaves an endpoint exposed to behavior from a peer that could
   exceed the new limits.  In particular, immediately after establishing
   a connection, limits set by a server are not known to clients and
   could be exceeded without being an obvious protocol violation.

   All these features -- i.e., SETTINGS changes, small frames, header
   compression -- have legitimate uses.  These features become a burden
   only when they are used unnecessarily or to excess.

   An endpoint that doesn't monitor this behavior exposes itself to a
   risk of denial-of-service attack.  Implementations SHOULD track the
   use of these features and set limits on their use.  An endpoint MAY
   treat activity that is suspicious as a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type ENHANCE_YOUR_CALM.</source>
          <target state="translated">HTTP / 2接続は、HTTP /1.1接続よりも動作するためにリソースのより大きなコミットメントを要求する可能性があります。ヘッダー圧縮とフロー制御の使用は、より多くの状態を格納するためのリソースのコミットメントに依存します。これらの機能の設定により、これらの機能のメモリコミットメントが厳密に制限されます。 PUSH_PROMISEフレームの数は、同じ方法で制約されません。サーバープッシュを受け入れるクライアントは、「予約済み（リモート）」状態にすることができるストリームの数を制限する必要があります（SHOULD）。サーバープッシュストリームの数が多すぎると、ストリームエラーとして扱われる可能性があります（&lt;a href=&quot;#section-5.4.2&quot;&gt;セクション5.4.2&lt;/a&gt;）タイプENHANCE_YOUR_CALMの。処理能力は、州の能力ほど効果的に保護することはできません。 SETTINGSフレームを悪用して、ピアに追加の処理時間を費やさせる可能性があります。これは、SETTINGSパラメータを無意味に変更したり、複数の未定義パラメータを設定したり、同じフレームで同じ設定を複数回変更したりすることで実行できます。 WINDOW_UPDATEまたはPRIORITYフレームを悪用すると、リソースが不必要に浪費される可能性があります。多数の小さいフレームまたは空のフレームが悪用されて、ピアがフレームヘッダーの処理に時間を費やす可能性があります。ただし、ストリームの最後に空のDATAまたはCONTINUATIONフレームを送信するなど、一部の使用法は完全に正当であることに注意してください。ヘッダー圧縮は、処理リソースを浪費する機会も提供します。 [&lt;a href=&quot;#ref-COMPRESSION&quot;&gt;圧縮の&lt;/a&gt;セクション7を参照してください]潜在的な虐待の詳細については。 SETTINGSパラメータの制限を即座に減らすことはできません。そのため、エンドポイントは、新しい制限を超える可能性のあるピアからの動作にさらされたままになります。特に、接続を確立した直後は、サーバーによって設定された制限はクライアントに認識されず、明らかなプロトコル違反になることなく超過する可能性があります。これらすべての機能（つまり、SETTINGSの変更、小さなフレーム、ヘッダーの圧縮）には、正当な用途があります。これらの機能は、不必要にまたは過剰に使用された場合にのみ負担になります。この動作を監視しないエンドポイントは、サービス拒否攻撃のリスクにさらされます。実装は、これらの機能の使用を追跡し、それらの使用に制限を設定する必要があります。エンドポイントは、疑わしいアクティビティを接続エラーとして扱う場合があります（&lt;a href=&quot;#section-5.4.1&quot;&gt;セクション5.4.1）。&lt;/a&gt;）タイプENHANCE_YOUR_CALMの。</target>
        </trans-unit>
        <trans-unit id="3ee0ef68ac24c01079c045790e35074016c60661" translate="yes" xml:space="preserve">
          <source>An HTTP/2 connection is an application-layer protocol running on top
   of a TCP connection ([&lt;a href=&quot;#ref-TCP&quot;&gt;TCP&lt;/a&gt;]).  The client is the TCP connection
   initiator.

   HTTP/2 uses the same &quot;http&quot; and &quot;https&quot; URI schemes used by HTTP/1.1.
   HTTP/2 shares the same default port numbers: 80 for &quot;http&quot; URIs and
   443 for &quot;https&quot; URIs.  As a result, implementations processing
   requests for target resource URIs like &quot;http://example.org/foo&quot; or
   &quot;https://example.com/bar&quot; are required to first discover whether the
   upstream server (the immediate peer to which the client wishes to
   establish a connection) supports HTTP/2.

   The means by which support for HTTP/2 is determined is different for
   &quot;http&quot; and &quot;https&quot; URIs.  Discovery for &quot;http&quot; URIs is described in
   &lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;.  Discovery for &quot;https&quot; URIs is described in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.</source>
          <target state="translated">HTTP / 2接続は、TCP接続（[ &lt;a href=&quot;#ref-TCP&quot;&gt;TCP&lt;/a&gt; ]）上で実行されるアプリケーション層プロトコルです。クライアントはTCP接続イニシエーターです。 HTTP / 2は、HTTP /1.1で使用されているものと同じ「http」および「https」URIスキームを使用します。 HTTP / 2は、同じデフォルトのポート番号を共有します。「http」URIの場合は80、「https」URIの場合は443です。その結果、「http://example.org/foo」や「https://example.com/bar」などのターゲットリソースURIのリクエストを処理する実装では、最初にアップストリームサーバー（クライアントが接続の確立を希望している場合）HTTP / 2をサポートします。 HTTP / 2のサポートを決定する方法は、「http」と「https」のURIで異なります。 「http」の発見URIについては&lt;a href=&quot;#section-3.2&quot;&gt;セクション3.2で&lt;/a&gt;説明しています。 「https」URIの検出については、&lt;a href=&quot;#section-3.3&quot;&gt;セクション3.3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6701a3501f8b2c3f6e37a5b1513ec20fdcb01fb9" translate="yes" xml:space="preserve">
          <source>An HTTP/2 implementation MAY treat the negotiation of any of the
   following cipher suites with TLS 1.2 as a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type INADEQUATE_SECURITY:

   o  TLS_NULL_WITH_NULL_NULL

   o  TLS_RSA_WITH_NULL_MD5

   o  TLS_RSA_WITH_NULL_SHA

   o  TLS_RSA_EXPORT_WITH_RC4_40_MD5

   o  TLS_RSA_WITH_RC4_128_MD5

   o  TLS_RSA_WITH_RC4_128_SHA

   o  TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5

   o  TLS_RSA_WITH_IDEA_CBC_SHA

   o  TLS_RSA_EXPORT_WITH_DES40_CBC_SHA

   o  TLS_RSA_WITH_DES_CBC_SHA

   o  TLS_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA

   o  TLS_DH_DSS_WITH_DES_CBC_SHA

   o  TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA

   o  TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA

   o  TLS_DH_RSA_WITH_DES_CBC_SHA

   o  TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA

   o  TLS_DHE_DSS_WITH_DES_CBC_SHA

   o  TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA

   o  TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA 

   o  TLS_DHE_RSA_WITH_DES_CBC_SHA

   o  TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_DH_anon_EXPORT_WITH_RC4_40_MD5

   o  TLS_DH_anon_WITH_RC4_128_MD5

   o  TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA

   o  TLS_DH_anon_WITH_DES_CBC_SHA

   o  TLS_DH_anon_WITH_3DES_EDE_CBC_SHA

   o  TLS_KRB5_WITH_DES_CBC_SHA

   o  TLS_KRB5_WITH_3DES_EDE_CBC_SHA

   o  TLS_KRB5_WITH_RC4_128_SHA

   o  TLS_KRB5_WITH_IDEA_CBC_SHA

   o  TLS_KRB5_WITH_DES_CBC_MD5

   o  TLS_KRB5_WITH_3DES_EDE_CBC_MD5

   o  TLS_KRB5_WITH_RC4_128_MD5

   o  TLS_KRB5_WITH_IDEA_CBC_MD5

   o  TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA

   o  TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA

   o  TLS_KRB5_EXPORT_WITH_RC4_40_SHA

   o  TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5

   o  TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5

   o  TLS_KRB5_EXPORT_WITH_RC4_40_MD5

   o  TLS_PSK_WITH_NULL_SHA

   o  TLS_DHE_PSK_WITH_NULL_SHA

   o  TLS_RSA_PSK_WITH_NULL_SHA 

   o  TLS_RSA_WITH_AES_128_CBC_SHA

   o  TLS_DH_DSS_WITH_AES_128_CBC_SHA

   o  TLS_DH_RSA_WITH_AES_128_CBC_SHA

   o  TLS_DHE_DSS_WITH_AES_128_CBC_SHA

   o  TLS_DHE_RSA_WITH_AES_128_CBC_SHA

   o  TLS_DH_anon_WITH_AES_128_CBC_SHA

   o  TLS_RSA_WITH_AES_256_CBC_SHA

   o  TLS_DH_DSS_WITH_AES_256_CBC_SHA

   o  TLS_DH_RSA_WITH_AES_256_CBC_SHA

   o  TLS_DHE_DSS_WITH_AES_256_CBC_SHA

   o  TLS_DHE_RSA_WITH_AES_256_CBC_SHA

   o  TLS_DH_anon_WITH_AES_256_CBC_SHA

   o  TLS_RSA_WITH_NULL_SHA256

   o  TLS_RSA_WITH_AES_128_CBC_SHA256

   o  TLS_RSA_WITH_AES_256_CBC_SHA256

   o  TLS_DH_DSS_WITH_AES_128_CBC_SHA256

   o  TLS_DH_RSA_WITH_AES_128_CBC_SHA256

   o  TLS_DHE_DSS_WITH_AES_128_CBC_SHA256

   o  TLS_RSA_WITH_CAMELLIA_128_CBC_SHA

   o  TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA

   o  TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA

   o  TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA

   o  TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA

   o  TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA 

   o  TLS_DHE_RSA_WITH_AES_128_CBC_SHA256

   o  TLS_DH_DSS_WITH_AES_256_CBC_SHA256

   o  TLS_DH_RSA_WITH_AES_256_CBC_SHA256

   o  TLS_DHE_DSS_WITH_AES_256_CBC_SHA256

   o  TLS_DHE_RSA_WITH_AES_256_CBC_SHA256

   o  TLS_DH_anon_WITH_AES_128_CBC_SHA256

   o  TLS_DH_anon_WITH_AES_256_CBC_SHA256

   o  TLS_RSA_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA

   o  TLS_PSK_WITH_RC4_128_SHA

   o  TLS_PSK_WITH_3DES_EDE_CBC_SHA

   o  TLS_PSK_WITH_AES_128_CBC_SHA

   o  TLS_PSK_WITH_AES_256_CBC_SHA

   o  TLS_DHE_PSK_WITH_RC4_128_SHA

   o  TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA

   o  TLS_DHE_PSK_WITH_AES_128_CBC_SHA

   o  TLS_DHE_PSK_WITH_AES_256_CBC_SHA

   o  TLS_RSA_PSK_WITH_RC4_128_SHA

   o  TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA

   o  TLS_RSA_PSK_WITH_AES_128_CBC_SHA 

   o  TLS_RSA_PSK_WITH_AES_256_CBC_SHA

   o  TLS_RSA_WITH_SEED_CBC_SHA

   o  TLS_DH_DSS_WITH_SEED_CBC_SHA

   o  TLS_DH_RSA_WITH_SEED_CBC_SHA

   o  TLS_DHE_DSS_WITH_SEED_CBC_SHA

   o  TLS_DHE_RSA_WITH_SEED_CBC_SHA

   o  TLS_DH_anon_WITH_SEED_CBC_SHA

   o  TLS_RSA_WITH_AES_128_GCM_SHA256

   o  TLS_RSA_WITH_AES_256_GCM_SHA384

   o  TLS_DH_RSA_WITH_AES_128_GCM_SHA256

   o  TLS_DH_RSA_WITH_AES_256_GCM_SHA384

   o  TLS_DH_DSS_WITH_AES_128_GCM_SHA256

   o  TLS_DH_DSS_WITH_AES_256_GCM_SHA384

   o  TLS_DH_anon_WITH_AES_128_GCM_SHA256

   o  TLS_DH_anon_WITH_AES_256_GCM_SHA384

   o  TLS_PSK_WITH_AES_128_GCM_SHA256

   o  TLS_PSK_WITH_AES_256_GCM_SHA384

   o  TLS_RSA_PSK_WITH_AES_128_GCM_SHA256

   o  TLS_RSA_PSK_WITH_AES_256_GCM_SHA384

   o  TLS_PSK_WITH_AES_128_CBC_SHA256

   o  TLS_PSK_WITH_AES_256_CBC_SHA384

   o  TLS_PSK_WITH_NULL_SHA256

   o  TLS_PSK_WITH_NULL_SHA384

   o  TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 

   o  TLS_DHE_PSK_WITH_AES_256_CBC_SHA384

   o  TLS_DHE_PSK_WITH_NULL_SHA256

   o  TLS_DHE_PSK_WITH_NULL_SHA384

   o  TLS_RSA_PSK_WITH_AES_128_CBC_SHA256

   o  TLS_RSA_PSK_WITH_AES_256_CBC_SHA384

   o  TLS_RSA_PSK_WITH_NULL_SHA256

   o  TLS_RSA_PSK_WITH_NULL_SHA384

   o  TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256

   o  TLS_EMPTY_RENEGOTIATION_INFO_SCSV

   o  TLS_ECDH_ECDSA_WITH_NULL_SHA

   o  TLS_ECDH_ECDSA_WITH_RC4_128_SHA

   o  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA 

   o  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA

   o  TLS_ECDHE_ECDSA_WITH_NULL_SHA

   o  TLS_ECDHE_ECDSA_WITH_RC4_128_SHA

   o  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA

   o  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA

   o  TLS_ECDH_RSA_WITH_NULL_SHA

   o  TLS_ECDH_RSA_WITH_RC4_128_SHA

   o  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA

   o  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA

   o  TLS_ECDHE_RSA_WITH_NULL_SHA

   o  TLS_ECDHE_RSA_WITH_RC4_128_SHA

   o  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA

   o  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA

   o  TLS_ECDH_anon_WITH_NULL_SHA

   o  TLS_ECDH_anon_WITH_RC4_128_SHA

   o  TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDH_anon_WITH_AES_128_CBC_SHA

   o  TLS_ECDH_anon_WITH_AES_256_CBC_SHA

   o  TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA

   o  TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA

   o  TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 

   o  TLS_SRP_SHA_WITH_AES_128_CBC_SHA

   o  TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA

   o  TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA

   o  TLS_SRP_SHA_WITH_AES_256_CBC_SHA

   o  TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA

   o  TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA

   o  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256

   o  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384

   o  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256

   o  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384

   o  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256

   o  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384

   o  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256

   o  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384

   o  TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256

   o  TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384

   o  TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256

   o  TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384

   o  TLS_ECDHE_PSK_WITH_RC4_128_SHA

   o  TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA

   o  TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA

   o  TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA

   o  TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256

   o  TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 

   o  TLS_ECDHE_PSK_WITH_NULL_SHA

   o  TLS_ECDHE_PSK_WITH_NULL_SHA256

   o  TLS_ECDHE_PSK_WITH_NULL_SHA384

   o  TLS_RSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_RSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256

   o  TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384

   o  TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256

   o  TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384

   o  TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_DH_anon_WITH_ARIA_128_CBC_SHA256

   o  TLS_DH_anon_WITH_ARIA_256_CBC_SHA384

   o  TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256

   o  TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384

   o  TLS_RSA_WITH_ARIA_128_GCM_SHA256 

   o  TLS_RSA_WITH_ARIA_256_GCM_SHA384

   o  TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256

   o  TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384

   o  TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256

   o  TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384

   o  TLS_DH_anon_WITH_ARIA_128_GCM_SHA256

   o  TLS_DH_anon_WITH_ARIA_256_GCM_SHA384

   o  TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256

   o  TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384

   o  TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256

   o  TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384

   o  TLS_PSK_WITH_ARIA_128_CBC_SHA256

   o  TLS_PSK_WITH_ARIA_256_CBC_SHA384

   o  TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256

   o  TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384

   o  TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256

   o  TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384

   o  TLS_PSK_WITH_ARIA_128_GCM_SHA256

   o  TLS_PSK_WITH_ARIA_256_GCM_SHA384

   o  TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256

   o  TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384

   o  TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256

   o  TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384

   o  TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 

   o  TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256

   o  TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384

   o  TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 

   o  TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256

   o  TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384

   o  TLS_RSA_WITH_AES_128_CCM

   o  TLS_RSA_WITH_AES_256_CCM

   o  TLS_RSA_WITH_AES_128_CCM_8

   o  TLS_RSA_WITH_AES_256_CCM_8

   o  TLS_PSK_WITH_AES_128_CCM

   o  TLS_PSK_WITH_AES_256_CCM

   o  TLS_PSK_WITH_AES_128_CCM_8

   o  TLS_PSK_WITH_AES_256_CCM_8

      Note: This list was assembled from the set of registered TLS
      cipher suites at the time of writing.  This list includes those
      cipher suites that do not offer an ephemeral key exchange and
      those that are based on the TLS null, stream, or block cipher type
      (as defined in Section 6.2.3 of [&lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt;]).  Additional cipher
      suites with these properties could be defined; these would not be
      explicitly prohibited. 

Acknowledgements

   This document includes substantial input from the following
   individuals:

   o  Adam Langley, Wan-Teh Chang, Jim Morrison, Mark Nottingham, Alyssa
      Wilk, Costin Manolache, William Chan, Vitaliy Lvin, Joe Chan, Adam
      Barth, Ryan Hamilton, Gavin Peters, Kent Alstad, Kevin Lindsay,
      Paul Amer, Fan Yang, and Jonathan Leighton (SPDY contributors).

   o  Gabriel Montenegro and Willy Tarreau (Upgrade mechanism).

   o  William Chan, Salvatore Loreto, Osama Mazahir, Gabriel Montenegro,
      Jitu Padhye, Roberto Peon, and Rob Trace (Flow control).

   o  Mike Bishop (Extensibility).

   o  Mark Nottingham, Julian Reschke, James Snell, Jeff Pinner, Mike
      Bishop, and Herve Ruellan (Substantial editorial contributions).

   o  Kari Hurtta, Tatsuhiro Tsujikawa, Greg Wilkins, Poul-Henning Kamp,
      and Jonathan Thackray.

   o  Alexey Melnikov, who was an editor of this document in 2013.

   A substantial proportion of Martin's contribution was supported by
   Microsoft during his employment there.

   The Japanese HTTP/2 community provided invaluable contributions,
   including a number of implementations as well as numerous technical
   and editorial contributions. 

Authors' Addresses

   Mike Belshe
   BitGo

   EMail: mike@belshe.com


   Roberto Peon
   Google, Inc

   EMail: fenix@google.com


   Martin Thomson (editor)
   Mozilla
   331 E Evelyn Street
   Mountain View, CA  94041
   United States

   EMail: martin.thomson@gmail.com


Belshe, et al.               Standards Track                   [Page 96]</source>
          <target state="translated">HTTP / 2実装は、TLS 1.2を使用した次の暗号スイートのいずれかのネゴシエーションを接続エラーとして扱うことができます（&lt;a href=&quot;#section-5.4.1&quot;&gt;セクション5.4.1&lt;/a&gt;）タイプINADEQUATE_SECURITYの：O TLS_NULL_WITH_NULL_NULL O TLS_RSA_WITH_NULL_MD5 O TLS_RSA_WITH_NULL_SHA O TLS_RSA_EXPORT_WITH_RC4_40_MD5 O TLS_RSA_WITH_RC4_128_MD5 O TLS_RSA_WITH_RC4_128_SHA O TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 O TLS_RSA_WITH_IDEA_CBC_SHA O TLS_RSA_EXPORT_WITH_DES40_CBC_SHA O TLS_RSA_WITH_DES_CBC_SHA O TLS_RSA_WITH_3DES_EDE_CBC_SHA O TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA O TLS_DH_DSS_WITH_DES_CBC_SHA O TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA O TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA O TLS_DH_RSA_WITH_DES_CBC_SHA O TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA O TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA O TLS_DHE_DSS_WITH_DES_CBC_SHA O TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA O TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA O TLS_DHE_RSA_WITH_DES_CBC_SHA O TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA O TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 O TLS_DH_anon_WITH_RC4_128_MD5 o TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA oTLS_DH_anon_WITH_DES_CBC_SHA O TLS_DH_anon_WITH_3DES_EDE_CBC_SHA O TLS_KRB5_WITH_DES_CBC_SHA O TLS_KRB5_WITH_3DES_EDE_CBC_SHA O TLS_KRB5_WITH_RC4_128_SHA O TLS_KRB5_WITH_IDEA_CBC_SHA O TLS_KRB5_WITH_DES_CBC_MD5 O TLS_KRB5_WITH_3DES_EDE_CBC_MD5 O TLS_KRB5_WITH_RC4_128_MD5 O TLS_KRB5_WITH_IDEA_CBC_MD5 O TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA O TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA O TLS_KRB5_EXPORT_WITH_RC4_40_SHA O TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 O TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 O TLS_KRB5_EXPORT_WITH_RC4_40_MD5 O TLS_PSK_WITH_NULL_SHA O TLS_DHE_PSK_WITH_NULL_SHA O TLS_RSA_PSK_WITH_NULL_SHA O TLS_RSA_WITH_AES_128_CBC_SHA O TLS_DH_DSS_WITH_AES_128_CBC_SHA O TLS_DH_RSA_WITH_AES_128_CBC_SHA O TLS_DHE_DSS_WITH_AES_128_CBC_SHA O TLS_DHE_RSA_WITH_AES_128_CBC_SHA O TLS_DH_anon_WITH_AES_128_CBC_SHA O TLS_RSA_WITH_AES_256_CBC_SHA oTLS_DH_DSS_WITH_AES_256_CBC_SHA O TLS_DH_RSA_WITH_AES_256_CBC_SHA O TLS_DHE_DSS_WITH_AES_256_CBC_SHA O TLS_DHE_RSA_WITH_AES_256_CBC_SHA O TLS_DH_anon_WITH_AES_256_CBC_SHA O TLS_RSA_WITH_NULL_SHA256 O TLS_RSA_WITH_AES_128_CBC_SHA256 O TLS_RSA_WITH_AES_256_CBC_SHA256 O TLS_DH_DSS_WITH_AES_128_CBC_SHA256 O TLS_DH_RSA_WITH_AES_128_CBC_SHA256 O TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 O TLS_RSA_WITH_CAMELLIA_128_CBC_SHA O TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA O TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA O TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA O TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA O TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA O TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 O TLS_DH_DSS_WITH_AES_256_CBC_SHA256 O TLS_DH_RSA_WITH_AES_256_CBC_SHA256 O TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 O TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 O TLS_DH_anon_WITH_AES_128_CBC_SHA256 OTLS_DH_anon_WITH_AES_256_CBC_SHA256 O TLS_RSA_WITH_CAMELLIA_256_CBC_SHA O TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA O TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA O TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA O TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA O TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA O TLS_PSK_WITH_RC4_128_SHA O TLS_PSK_WITH_3DES_EDE_CBC_SHA O TLS_PSK_WITH_AES_128_CBC_SHA O TLS_PSK_WITH_AES_256_CBC_SHA O TLS_DHE_PSK_WITH_RC4_128_SHA O TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA O TLS_DHE_PSK_WITH_AES_128_CBC_SHA O TLS_DHE_PSK_WITH_AES_256_CBC_SHA O TLS_RSA_PSK_WITH_RC4_128_SHA O TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA O TLS_RSA_PSK_WITH_AES_128_CBC_SHA O TLS_RSA_PSK_WITH_AES_256_CBC_SHA O TLS_RSA_WITH_SEED_CBC_SHA O TLS_DH_DSS_WITH_SEED_CBC_SHA O TLS_DH_RSA_WITH_SEED_CBC_SHA O TLS_DHE_DSS_WITH_SEED_CBC_SHA O TLS_DHE_RSA_WITH_SEED_CBC_SHA O TLS_DH_anon_WITH_SEED_CBC_SHA OTLS_RSA_WITH_AES_128_GCM_SHA256 O TLS_RSA_WITH_AES_256_GCM_SHA384 O TLS_DH_RSA_WITH_AES_128_GCM_SHA256 O TLS_DH_RSA_WITH_AES_256_GCM_SHA384 O TLS_DH_DSS_WITH_AES_128_GCM_SHA256 O TLS_DH_DSS_WITH_AES_256_GCM_SHA384 O TLS_DH_anon_WITH_AES_128_GCM_SHA256 O TLS_DH_anon_WITH_AES_256_GCM_SHA384 O TLS_PSK_WITH_AES_128_GCM_SHA256 O TLS_PSK_WITH_AES_256_GCM_SHA384 O TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 O TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 O TLS_PSK_WITH_AES_128_CBC_SHA256 O TLS_PSK_WITH_AES_256_CBC_SHA384 O TLS_PSK_WITH_NULL_SHA256 O TLS_PSK_WITH_NULL_SHA384 O TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 O TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 O TLS_DHE_PSK_WITH_NULL_SHA256 O TLS_DHE_PSK_WITH_NULL_SHA384 O TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 O TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 O TLS_RSA_PSK_WITH_NULL_SHA256 O TLS_RSA_PSK_WITH_NULL_SHA384 OTLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 O TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 O TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 O TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 O TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 O TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 O TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 O TLS_EMPTY_RENEGOTIATION_INFO_SCSV O TLS_ECDH_ECDSA_WITH_NULL_SHA O TLS_ECDH_ECDSA_WITH_RC4_128_SHA O TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA O TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA O TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA O TLS_ECDHE_ECDSA_WITH_NULL_SHA O TLS_ECDHE_ECDSA_WITH_RC4_128_SHA O TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA OTLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA O TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA O TLS_ECDH_RSA_WITH_NULL_SHA O TLS_ECDH_RSA_WITH_RC4_128_SHA O TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA O TLS_ECDH_RSA_WITH_AES_128_CBC_SHA O TLS_ECDH_RSA_WITH_AES_256_CBC_SHA O TLS_ECDHE_RSA_WITH_NULL_SHA O TLS_ECDHE_RSA_WITH_RC4_128_SHA O TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA O TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA O TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA O TLS_ECDH_anon_WITH_NULL_SHA O TLS_ECDH_anon_WITH_RC4_128_SHA O TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA O TLS_ECDH_anon_WITH_AES_128_CBC_SHA O TLS_ECDH_anon_WITH_AES_256_CBC_SHA O TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA O TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA O TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA O TLS_SRP_SHA_WITH_AES_128_CBC_SHA O TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA O TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA O TLS_SRP_SHA_WITH_AES_256_CBC_SHAO TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA O TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA O TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 O TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 O TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 O TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 O TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 O TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 O TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 O TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 O TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 O TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 O TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 O TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 O TLS_ECDHE_PSK_WITH_RC4_128_SHA O TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA O TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA O TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA O TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 O TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 O TLS_ECDHE_PSK_WITH_NULL_SHA O TLS_ECDHE_PSK_WITH_NULL_SHA256 OTLS_ECDHE_PSK_WITH_NULL_SHA384 O TLS_RSA_WITH_ARIA_128_CBC_SHA256 O TLS_RSA_WITH_ARIA_256_CBC_SHA384 O TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 O TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 O TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 O TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 O TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 O TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 O TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 O TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 O TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 O TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 O TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 O TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 O TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 O TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 O TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 O TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 O TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 O TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 O TLS_RSA_WITH_ARIA_128_GCM_SHA256 OTLS_RSA_WITH_ARIA_256_GCM_SHA384 O TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 O TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 O TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 O TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 O TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 O TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 O TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 O TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 O TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 O TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 O TLS_PSK_WITH_ARIA_128_CBC_SHA256 O TLS_PSK_WITH_ARIA_256_CBC_SHA384 O TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 O TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 O TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 O TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 O TLS_PSK_WITH_ARIA_128_GCM_SHA256 O TLS_PSK_WITH_ARIA_256_GCM_SHA384 O TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 O TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 O TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 OTLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 O TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 O TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 O TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 O TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 O TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 O TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 O TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 O TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 O TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 O TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 O TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 O TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 O TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 O TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 O TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 OTLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 O TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 O TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 O TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 O TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 O TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 O TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 O TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 O TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 O TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 O TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 O TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 O TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 O TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 O TLS_RSA_WITH_AES_128_CCM O TLS_RSA_WITH_AES_256_CCM O TLS_RSA_WITH_AES_128_CCM_8 O TLS_RSA_WITH_AES_256_CCM_8 O TLS_PSK_WITH_AES_128_CCM O TLS_PSK_WITH_AES_256_CCM O TLS_PSK_WITH_AES_128_CCM_8 O TLS_PSK_WITH_AES_256_CCM_8注このリストは、執筆時点で登録されているTLS暗号スイートのセットから作成されました。このリストには、一時的な鍵交換を提供しない暗号スイートと、TLS null、ストリーム、またはブロック暗号タイプ（[のセクション6.2.3で定義されている）に基づく暗号スイートが含まれます。&lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt;]）。これらのプロパティを持つ追加の暗号スイートを定義できます。これらは明示的に禁止されていません。謝辞このドキュメントには、次の個人からの実質的な意見が含まれています。oAdam Langley、Wan-Teh Chang、Jim Morrison、Mark Nottingham、Alyssa Wilk、Costin Manolache、William Chan、Vitaliy Lvin、Joe Chan、Adam Barth、Ryan Hamilton、Gavin Peters、 Kent Alstad、Kevin Lindsay、Paul Amer、Fan Yang、およびJonathan Leighton（SPDY寄稿者）。 o GabrielMontenegroとWillyTarreau（アップグレードメカニズム）。 o William Chan、Salvatore Loreto、Osama Mazahir、Gabriel Montenegro、Jitu Padhye、Roberto Peon、およびRob Trace（フロー制御）。 oマイクビショップ（拡張性）。 o Mark Nottingham、Julian Reschke、James Snell、Jeff Pinner、Mike Bishop、およびHerve Ruellan（実質的な編集上の貢献）。 o Kari Hurtta、辻川達弘、グレッグウィルキンス、ポールヘニングカンプ、ジョナサンサックレイ。 o2013年にこのドキュメントの編集者であったAlexeyMelnikov。マーティンの貢献のかなりの部分は、そこでの彼の雇用中にマイクロソフトによってサポートされました。日本のHTTP / 2コミュニティは、多くの実装だけでなく、多くの技術的および編集上の貢献を含む、貴重な貢献を提供しました。著者の住所MikeBelshe BitGo Eメール：mike@belshe.com Roberto Peon Google、Inc Eメール：fenix@google.com Martin Thomson（編集者）Mozilla 331 E Evelyn Street Mountain View、CA 94041米国Eメール：martin.thomson@gmail。 com Belshe、etal。標準化過程[96ページ]マイクロソフトは、そこでの雇用中に貢献を支援しました。日本のHTTP / 2コミュニティは、多くの実装だけでなく、多くの技術的および編集上の貢献を含む、貴重な貢献を提供しました。著者の住所MikeBelshe BitGo Eメール：mike@belshe.com Roberto Peon Google、Inc Eメール：fenix@google.com Martin Thomson（編集者）Mozilla 331 E Evelyn Street Mountain View、CA 94041米国Eメール：martin.thomson@gmail。 com Belshe、etal。標準化過程[96ページ]マイクロソフトは、そこでの雇用中に貢献を支援しました。日本のHTTP / 2コミュニティは、多くの実装だけでなく、多くの技術的および編集上の貢献を含む、貴重な貢献を提供しました。著者の住所MikeBelshe BitGo Eメール：mike@belshe.com Roberto Peon Google、Inc Eメール：fenix@google.com Martin Thomson（編集者）Mozilla 331 E Evelyn Street Mountain View、CA 94041米国Eメール：martin.thomson@gmail。 com Belshe、etal。標準化過程[96ページ]com Martin Thomson（編集者）Mozilla 331 E Evelyn Street Mountain View、CA 94041 United States EMail：martin.thomson@gmail.com Belshe、etal。標準化過程[96ページ]com Martin Thomson（編集者）Mozilla 331 E Evelyn Street Mountain View、CA 94041 United States EMail：martin.thomson@gmail.com Belshe、etal。標準化過程[96ページ]</target>
        </trans-unit>
        <trans-unit id="b8e198b1f69badcd0d294bae2afb6df6ba9df42c" translate="yes" xml:space="preserve">
          <source>An IANA registry maintains &lt;a href=&quot;http://www.iana.org/assignments/http-parameters/http-parameters.xml#http-parameters-1&quot;&gt;a complete list of official content encodings&lt;/a&gt;.</source>
          <target state="translated">IANAレジストリは&lt;a href=&quot;http://www.iana.org/assignments/http-parameters/http-parameters.xml#http-parameters-1&quot;&gt;、公式コンテンツエンコーディングの完全なリストを&lt;/a&gt;保持しています。</target>
        </trans-unit>
        <trans-unit id="1f6bd1f61bcbf82ca97f280b68dcf8ec1c7ecb18" translate="yes" xml:space="preserve">
          <source>An IANA registry maintains &lt;a href=&quot;https://www.iana.org/assignments/http-parameters/http-parameters.xml#http-parameters-1&quot;&gt;a complete list of official content encodings&lt;/a&gt;.</source>
          <target state="translated">IANAレジストリは&lt;a href=&quot;https://www.iana.org/assignments/http-parameters/http-parameters.xml#http-parameters-1&quot;&gt;、公式コンテンツエンコーディングの完全なリストを&lt;/a&gt;保持しています。</target>
        </trans-unit>
        <trans-unit id="fc3cd64d927c27e2c875db1e4f0241b2d475f24e" translate="yes" xml:space="preserve">
          <source>An absolute or partial address of the previous web page from which a link to the currently requested page was followed. URL fragments (i.e. &quot;#section&quot;) and userinfo (i.e. &quot;username:password&quot; in &quot;https://username:password@example.com/foo/bar/&quot;) are not included.</source>
          <target state="translated">現在要求されているページへのリンクを辿った前のウェブページの絶対的または部分的なアドレス。URL フラグメント (「#section」など)や userinfo (「_COPY16@example.com/foo/bar/」の「username:password」など)は含まれません。</target>
        </trans-unit>
        <trans-unit id="88d7d1ee9799639ae7a725a7df1453133be8aff7" translate="yes" xml:space="preserve">
          <source>An absolute path, ultimately followed by a &lt;code&gt;'?'&lt;/code&gt; and query string. This is the most common form, known as the &lt;em&gt;origin form&lt;/em&gt;, and is used with &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;OPTIONS&lt;/code&gt; methods.</source>
          <target state="translated">絶対パス、最終的には &lt;code&gt;'?'&lt;/code&gt; クエリ文字列。これは、として知られている最も一般的な形態であり、&lt;em&gt;原点フォーム&lt;/em&gt;、および一緒に使用される &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、 &lt;code&gt;HEAD&lt;/code&gt; 、および &lt;code&gt;OPTIONS&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="a5094c29882d093c531b3991dab04140b27dc3c2" translate="yes" xml:space="preserve">
          <source>An allow-list for specific inline scripts using a cryptographic nonce (number used once). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide an unguessable nonce, as bypassing a resource&amp;rsquo;s policy is otherwise trivial. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. Specifying nonce makes a modern browser ignore &lt;code&gt;'unsafe-inline'&lt;/code&gt; which could still be set for older browsers without nonce support.</source>
          <target state="translated">暗号ナンス（1回使用される番号）を使用する特定のインラインスクリプトの許可リスト。サーバーは、ポリシーを送信するたびに一意のナンス値を生成する必要があります。リソースのポリシーをバイパスすることは簡単であるため、推測できないナンスを提供することが重要です。例については、&lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;安全でないインラインスクリプト&lt;/a&gt;を参照してください。nonceを指定すると、最新のブラウザは &lt;code&gt;'unsafe-inline'&lt;/code&gt; を無視します。これは、nonceがサポートされていない古いブラウザでも設定できます。</target>
        </trans-unit>
        <trans-unit id="2f7612f8d608c3f6e8f180ad8653c5d57a276d94" translate="yes" xml:space="preserve">
          <source>An allowlist is a list of origins that takes one or more of the following values:</source>
          <target state="translated">allowlistは、以下の値を1つ以上取るオリジンのリストです。</target>
        </trans-unit>
        <trans-unit id="4bb11d5976a64d2ae62179eb46982158c56bbed3" translate="yes" xml:space="preserve">
          <source>An attempt to validate the response failed, due to an inability to reach the server.</source>
          <target state="translated">サーバーに到達できないため、応答の検証に失敗しました。</target>
        </trans-unit>
        <trans-unit id="5712cd588fbe7cbcb4437f68372abb9b405a060c" translate="yes" xml:space="preserve">
          <source>An audio file in the OGG container format. Vorbis is the most common audio codec used in such a container.</source>
          <target state="translated">OGGコンテナ形式のオーディオファイル。Vorbis は、このようなコンテナで使用される最も一般的なオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="81b348b0f03b452c6893ff611a8d9c735c690bbe" translate="yes" xml:space="preserve">
          <source>An audio file in the Ogg container format. Vorbis is the most common audio codec used in such a container; however, Opus is now supported by Ogg as well.</source>
          <target state="translated">Ogg コンテナフォーマットのオーディオファイル。Vorbis はそのようなコンテナで使われる最も一般的なオーディオコーデックですが、Opus は Ogg でもサポートされています。</target>
        </trans-unit>
        <trans-unit id="275274da827a5e3fea5040e1aba9e600308dbbfb" translate="yes" xml:space="preserve">
          <source>An audio file in the WAVE container format. The PCM audio codec (WAVE codec &quot;1&quot;) is often supported, but other codecs have limited support (if any).</source>
          <target state="translated">WAVEコンテナ形式のオーディオファイル。PCMオーディオコーデック(WAVEコーデック &quot;1&quot;)に対応していることが多いが、それ以外のコーデックには対応していないことがある(あるとしても)。</target>
        </trans-unit>
        <trans-unit id="0a0a6088f473bc9a3adf41b833d943e48b7fa5e7" translate="yes" xml:space="preserve">
          <source>An audio file in the WebM container format. Vorbis and Opus are the codecs officially supported by the WebM specification.</source>
          <target state="translated">WebM コンテナフォーマットのオーディオファイル。Vorbis と Opus は、WebM 仕様で公式にサポートされているコーデックです。</target>
        </trans-unit>
        <trans-unit id="04f3d314e777f96d5cb8022250e30f26ec18d095" translate="yes" xml:space="preserve">
          <source>An audio file in the WebM container format. Vorbis and Opus are the most common audio codecs.</source>
          <target state="translated">WebMコンテナフォーマットのオーディオファイル。Vorbis と Opus が最も一般的なオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="6d9bc7bf062074940f71cffe41ac4324eaa5605c" translate="yes" xml:space="preserve">
          <source>An audio or video file using the OGG container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec.</source>
          <target state="translated">OGGコンテナフォーマットを使用したオーディオまたはビデオファイル。Theora は通常のビデオコーデックで、Vorbis は通常のオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="28a4ce6138e5a1b915452926382ff3f84bda1947" translate="yes" xml:space="preserve">
          <source>An audio or video file using the Ogg container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec.</source>
          <target state="translated">Ogg コンテナフォーマットを使用したオーディオまたはビデオファイル。Theora は通常のビデオコーデックで、Vorbis は通常のオーディオコーデックです。</target>
        </trans-unit>
        <trans-unit id="4bab7fe5b73a7d6c377d59fdf9559bcf2ea5f6e5" translate="yes" xml:space="preserve">
          <source>An entity tag uniquely representing the requested resource. It is a string of ASCII characters placed between double quotes (Like &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt;) and may be prefixed by &lt;code&gt;W/&lt;/code&gt; to indicate that the weak comparison algorithm should be used.</source>
          <target state="translated">リクエストされたリソースを一意に表すエンティティタグ。これは、二重引用符で &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt; れたASCII文字列（&quot;675af34563dc-tr34&quot;など）で、 &lt;code&gt;W/&lt;/code&gt; を前に付けると、弱い比較アルゴリズムを使用する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="8351e98570f813491d441d5ddd55a80b35cfdc7d" translate="yes" xml:space="preserve">
          <source>An example HTTP request:</source>
          <target state="translated">HTTP リクエストの例です。</target>
        </trans-unit>
        <trans-unit id="937401682bbf56d33e1065700936f4be12544c64" translate="yes" xml:space="preserve">
          <source>An example of a &lt;a href=&quot;#Preflighted_requests&quot;&gt;preflight request is given above&lt;/a&gt;, including an example which sends this header to the browser.</source>
          <target state="translated">&lt;a href=&quot;#Preflighted_requests&quot;&gt;上記のプリフライトリクエスト&lt;/a&gt;の例は、このヘッダーをブラウザに送信する例を含めて、上に示しています。</target>
        </trans-unit>
        <trans-unit id="18c03540d76fb7a3ce87da945d5bbdc9444de704" translate="yes" xml:space="preserve">
          <source>An example of a cross-origin request: The frontend JavaScript code for a web application served from &lt;code&gt;http://domain-a.com&lt;/code&gt; uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to make a request for &lt;code&gt;http://api.domain-b.com/data.json&lt;/code&gt;.</source>
          <target state="translated">クロスオリジンリクエストの例： &lt;code&gt;http://domain-a.com&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;から提供されるWebアプリケーションのフロントエンドJavaScriptコードは、XMLHttpRequestを使用して &lt;code&gt;http://api.domain-b.com/data.json&lt;/code&gt; に対するリクエストを作成します。</target>
        </trans-unit>
        <trans-unit id="3394f284d7025377699f6e1e4fd6fb1b485373b4" translate="yes" xml:space="preserve">
          <source>An example of a cross-origin request: the front-end JavaScript code served from &lt;code&gt;https://domain-a.com&lt;/code&gt; uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to make a request for &lt;code&gt;https://domain-b.com/data.json&lt;/code&gt;.</source>
          <target state="translated">クロスオリジンリクエストの例： &lt;code&gt;https://domain-a.com&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;から提供されるフロントエンドJavaScriptコードは、XMLHttpRequestを使用して &lt;code&gt;https://domain-b.com/data.json&lt;/code&gt; のリクエストを行います。</target>
        </trans-unit>
        <trans-unit id="6fa1717cd1d978e6cae9d3ef7affa2c14bef3a08" translate="yes" xml:space="preserve">
          <source>An example of an HTML form posted using the &lt;code&gt;multipart/form-data&lt;/code&gt; format that makes use of the &lt;code&gt;Content-Disposition&lt;/code&gt; header:</source>
          <target state="translated">&lt;code&gt;Content-Disposition&lt;/code&gt; ヘッダーを利用する &lt;code&gt;multipart/form-data&lt;/code&gt; 形式を使用して投稿されたHTMLフォームの例：</target>
        </trans-unit>
        <trans-unit id="0eb7d8b63d836dc8b48fea64e497eee88c8fc37a" translate="yes" xml:space="preserve">
          <source>An example response:</source>
          <target state="translated">レスポンスの例。</target>
        </trans-unit>
        <trans-unit id="d06bdca7c09b88f2f4a910e920b7d53770584980" translate="yes" xml:space="preserve">
          <source>An example scenario</source>
          <target state="translated">シナリオ例</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">一例です。</target>
        </trans-unit>
        <trans-unit id="524d76d400d5cb73fc54737fb4d856fc9ec10a9a" translate="yes" xml:space="preserve">
          <source>An identifier disclosing the information that is altered or lost when using a proxy. This can be either:</source>
          <target state="translated">プロキシを使用する際に変更されたり失われたりする情報を開示する識別子。これは次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="ae6172d2a45cf37f2f2799154f23922f58940acb" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the beginning of the request range.</source>
          <target state="translated">リクエスト範囲の先頭を示す、指定された単位の整数。</target>
        </trans-unit>
        <trans-unit id="5f15168b132abe2a60f0170a67ead71d262beaa6" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the end of the requested range.</source>
          <target state="translated">要求された範囲の終了を示す、指定された単位での整数。</target>
        </trans-unit>
        <trans-unit id="fb3aa033dddb2a858401595eeaf3ab8db26849c4" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the end of the requested range. This value is optional and, if omitted, the end of the document is taken as the end of the range.</source>
          <target state="translated">要求された範囲の終わりを示す、指定された単位での整数。この値は任意であり、省略した場合は文書の終わりが範囲の終わりとして扱われます。</target>
        </trans-unit>
        <trans-unit id="a73313ed84e91191f3d2b2b90684cde52ec8f101" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the number of units at the end of the file to return.</source>
          <target state="translated">返すファイルの末尾の単位数を示す、指定された単位での整数。</target>
        </trans-unit>
        <trans-unit id="bc0e19474dd59d2467fd56601368eedbd6a3f2cd" translate="yes" xml:space="preserve">
          <source>An intermediate cache or proxy cannot edit the response body, &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;. It therefore forbids a proxy or browser feature, such as &lt;a href=&quot;https://support.google.com/webmasters/answer/6211428&quot;&gt;Google&amp;rsquo;s Web Light&lt;/a&gt;, from converting images to minimize data for a cache store or slow connection.</source>
          <target state="translated">中間キャッシュまたはプロキシは、応答本文、&lt;a href=&quot;content-encoding&quot;&gt; &lt;code&gt;Content-Encoding&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; を&lt;/a&gt;編集できません。したがって、プロキシまたは&lt;a href=&quot;https://support.google.com/webmasters/answer/6211428&quot;&gt;GoogleのWeb Light&lt;/a&gt;などのブラウザ機能が画像を変換して、キャッシュストアまたは低速接続のデータを最小限に抑えることを禁止します。</target>
        </trans-unit>
        <trans-unit id="978df3d581d5f2123e6d6e2fbfff4d060ccce54e" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;body&lt;/em&gt; containing data associated with the request (like content of an HTML form), or the document associated with a response. The presence of the body and its size is specified by the start-line and HTTP headers.</source>
          <target state="translated">リクエストに関連付けられたデータ（HTMLフォームのコンテンツなど）またはレスポンスに関連付けられたドキュメントを含むオプションの&lt;em&gt;本文&lt;/em&gt;。本文の存在とそのサイズは、開始行とHTTPヘッダーによって指定されます。</target>
        </trans-unit>
        <trans-unit id="08d7e405f02128c6b7b24a0361c7298994da77d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;strong&gt;parameter&lt;/strong&gt; can be added to provide additional details:</source>
          <target state="translated">オプションの&lt;strong&gt;パラメーター&lt;/strong&gt;を追加して、追加の詳細を提供できます。</target>
        </trans-unit>
        <trans-unit id="258eb51f5d78b7afb24633c632b091d4e2519fd6" translate="yes" xml:space="preserve">
          <source>An optional set of &lt;em&gt;HTTP headers&lt;/em&gt; specifying the request, or describing the body included in the message.</source>
          <target state="translated">要求を指定する、またはメッセージに含まれる本文を説明する&lt;em&gt;HTTPヘッダー&lt;/em&gt;のオプションのセット。</target>
        </trans-unit>
        <trans-unit id="599d0e853eca77f2daf81b1d2e0984db369b73c0" translate="yes" xml:space="preserve">
          <source>An origin considered secure by the browser is required.</source>
          <target state="translated">ブラウザが安全と判断したオリジンが必要です。</target>
        </trans-unit>
        <trans-unit id="fb6a0c0ce21b968ca2bae147ce0e590ec11226ee" translate="yes" xml:space="preserve">
          <source>An origin server SHOULD send Last-Modified for any selected
   representation for which a last modification date can be reasonably
   and consistently determined, since its use in conditional requests
   and evaluating cache freshness ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;]) results in a substantial
   reduction of HTTP traffic on the Internet and can be a significant
   factor in improving service scalability and reliability.

   A representation is typically the sum of many parts behind the
   resource interface.  The last-modified time would usually be the most
   recent time that any of those parts were changed.  How that value is
   determined for any given resource is an implementation detail beyond
   the scope of this specification.  What matters to HTTP is how
   recipients of the Last-Modified header field can use its value to
   make conditional requests and test the validity of locally cached
   responses.

   An origin server SHOULD obtain the Last-Modified value of the
   representation as close as possible to the time that it generates the
   Date field value for its response.  This allows a recipient to make
   an accurate assessment of the representation's modification time,
   especially if the representation changes near the time that the
   response is generated.

   An origin server with a clock MUST NOT send a Last-Modified date that
   is later than the server's time of message origination (Date).  If
   the last modification time is derived from implementation-specific 

   metadata that evaluates to some time in the future, according to the
   origin server's clock, then the origin server MUST replace that value
   with the message origination date.  This prevents a future
   modification date from having an adverse impact on cache validation.

   An origin server without a clock MUST NOT assign Last-Modified values
   to a response unless these values were associated with the resource
   by some other system or user with a reliable clock.</source>
          <target state="translated">オリジンサーバーは、条件付きリクエストでの使用とキャッシュの鮮度の評価（[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;]）インターネット上のHTTPトラフィックを大幅に削減し、サービスのスケーラビリティと信頼性を向上させる上で重要な要素となります。表現は通常、リソースインターフェイスの背後にある多くの部分の合計です。最終変更時刻は通常、これらのパーツのいずれかが変更された最新の時刻です。特定のリソースについてその値を決定する方法は、この仕様の範囲を超える実装の詳細です。 HTTPで重要なのは、Last-Modifiedヘッダーフィールドの受信者がその値を使用して条件付き要求を作成し、ローカルにキャッシュされた応答の有効性をテストする方法です。オリジンサーバーは、その応答の日付フィールド値を生成する時刻にできるだけ近い表現のLast-Modified値を取得する必要があります（SHOULD）。これにより、特に応答が生成された時間の近くで表現が変化した場合に、受信者は表現の変更時間を正確に評価できます。クロックのあるオリジンサーバーは、サーバーのメッセージの発生時刻（日付）より後の最終変更日を送信してはなりません（MUST NOT）。最終変更時刻が、起点サーバーのクロックに従って、将来のある時点で評価される実装固有のメタデータから導出される場合、起点サーバーはその値をメッセージの起点日で置き換えなければなりません（MUST）。これにより、将来の変更日がキャッシュの検証に悪影響を及ぼすのを防ぎます。クロックのないオリジンサーバーは、Last-Modified値を他のシステムまたは信頼できるクロックを持つユーザーによってリソースに関連付けられていない限り、応答に値を割り当ててはなりません（MUST NOT）。</target>
        </trans-unit>
        <trans-unit id="d0c39f83da17a248ad712c0819b8703fb2f5ef34" translate="yes" xml:space="preserve">
          <source>An unsecured HTTP request is used and the referring page was received with a secure protocol (HTTPS).</source>
          <target state="translated">セキュリティ保護されていないHTTPリクエストが使用されており、参照ページはセキュリティ保護されたプロトコル(HTTPS)で受信しました。</target>
        </trans-unit>
        <trans-unit id="2b6110e3591ac90aa132e8d09ccc7a10f3c9f89c" translate="yes" xml:space="preserve">
          <source>And the MIME type set to:</source>
          <target state="translated">そして、MIMEタイプが設定されています。</target>
        </trans-unit>
        <trans-unit id="6e13d60348da6215250058b98e62629552950b15" translate="yes" xml:space="preserve">
          <source>And the MIME type should be set to:</source>
          <target state="translated">そして、MIMEタイプを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="51d93a0e0e6b94c85ab246f096bdfe11ac7c7be5" translate="yes" xml:space="preserve">
          <source>Android (version 40 and below)</source>
          <target state="translated">Android(バージョン40以下</target>
        </trans-unit>
        <trans-unit id="9d181bb566f9337c1f23f7fa7129fbabf5cee58d" translate="yes" xml:space="preserve">
          <source>Android (version 41 and above)</source>
          <target state="translated">Android(バージョン41以上</target>
        </trans-unit>
        <trans-unit id="a5b93109d2910f83b46a8f8b84565a2b90f04e8f" translate="yes" xml:space="preserve">
          <source>Android webview</source>
          <target state="translated">Android ウェブビュー</target>
        </trans-unit>
        <trans-unit id="8a128a9589c315d21634acc57ea259fa0a700af6" translate="yes" xml:space="preserve">
          <source>Animated Portable Network Graphics</source>
          <target state="translated">アニメーション化されたポータブルネットワークグラフィックス</target>
        </trans-unit>
        <trans-unit id="d2272152aaed514a90142950fb3ee1816c7074cb" translate="yes" xml:space="preserve">
          <source>Annotation of existing resources</source>
          <target state="translated">既存リソースのアノテーション</target>
        </trans-unit>
        <trans-unit id="8642c3a715dbd6efdfc0bb89f8eb0afbc3cede8d" translate="yes" xml:space="preserve">
          <source>Another (implicit) indication that &lt;code&gt;PATCH&lt;/code&gt; is allowed, is the presence of the &lt;a href=&quot;../headers/accept-patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; header, which specifies the patch document formats accepted by the server.</source>
          <target state="translated">&lt;code&gt;PATCH&lt;/code&gt; が許可されていることを示すもう1つの（暗黙の）表示は、サーバーが受け入れるパッチドキュメント形式を指定する&lt;a href=&quot;../headers/accept-patch&quot;&gt; &lt;code&gt;Accept-Patch&lt;/code&gt; &lt;/a&gt;ヘッダーの存在です。</target>
        </trans-unit>
        <trans-unit id="30a34db762af17ee412c2a1fc9d092bc9dce7999" translate="yes" xml:space="preserve">
          <source>Another (implicit) indication that PATCH is allowed, is the presence of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; header, which specifies the patch document formats accepted by the server.</source>
          <target state="translated">PATCHが許可されていることを示すもう1つの（暗黙の）兆候は、サーバーが受け入れるパッチドキュメント形式を指定する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Patch&quot;&gt; &lt;code&gt;Accept-Patch&lt;/code&gt; &lt;/a&gt;ヘッダーの存在です。</target>
        </trans-unit>
        <trans-unit id="2ea2ea80d736402d761cc48753f37ae87a7086f1" translate="yes" xml:space="preserve">
          <source>Another API, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;server-sent events&lt;/a&gt;, is a one-way service that allows a server to send events to the client, using HTTP as a transport mechanism. Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt; interface, the client opens a connection and establishes event handlers. The client browser automatically converts the messages that arrive on the HTTP stream into appropriate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; objects, delivering them to the event handlers that have been registered for the events' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; if known, or to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/onmessage&quot;&gt;&lt;code&gt;onmessage&lt;/code&gt;&lt;/a&gt; event handler if no type-specific event handler was established.</source>
          <target state="translated">別のAPIである&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;サーバー送信イベント&lt;/a&gt;は、サーバーがHTTPをトランスポートメカニズムとして使用してクライアントにイベントを送信できるようにする一方向サービスです。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource&quot;&gt; &lt;code&gt;EventSource&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して、クライアントは接続を開き、イベントハンドラーを確立します。クライアントブラウザーは、HTTPストリームに到着したメッセージを適切な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクトに自動的に変換し、既知の場合はイベントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;登録されているイベントハンドラーに、タイプ固有のイベントハンドラーがなかった場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/onmessage&quot;&gt; &lt;code&gt;onmessage&lt;/code&gt; &lt;/a&gt;イベントハンドラーに配信します。設立。</target>
        </trans-unit>
        <trans-unit id="9db32006413a6e691ae3fb773aa031a903fdfbff" translate="yes" xml:space="preserve">
          <source>Another approach to storing data in the browser is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API&quot;&gt;Web Storage API&lt;/a&gt;. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt;window.sessionStorage&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt;window.localStorage&lt;/a&gt; properties correspond to session and permanent cookies in duration, but have larger storage limits than cookies, and are never sent to a server. More structured and larger amounts of data can be stored using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB API&lt;/a&gt;, or a library built on it.</source>
          <target state="translated">ブラウザにデータを保存する別のアプローチは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API&quot;&gt;Web StorageAPI&lt;/a&gt;です。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt;window.sessionStorageの&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt;window.localStorage&lt;/a&gt;プロパティは、期間中のセッションと永続的なクッキーに対応するが、クッキーよりも大きな容量制限があり、サーバーに送信されることはありません。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB API&lt;/a&gt;、またはその上に構築されたライブラリを使用して、より構造化された大量のデータを保存できます。</target>
        </trans-unit>
        <trans-unit id="522f7fe585152d75fdebc26d8febeb7c023ce78b" translate="yes" xml:space="preserve">
          <source>Another such case is for fixing bugs in browsers that do not automatically update. Internet Explorer (on Windows) and Webkit (on iOS) are two perfect examples. Prior to version 9, Internet Explorer had unbelievable issues with rendering bugs, CSS bugs, API bugs, and so forth. However, Internet Explorer was such a special little &lt;s&gt;wasp&lt;/s&gt; exception prior to version 9 that it was very easy to detect the browser based upon the browser-specific features available. Webkit is a bit worse because Apple forces all of the browsers on IOS to use Webkit internally, thus the user has no way to get a better more updated browser on older devices. Most bugs can be detected, but some bugs take more effort to detect than others. In such cases, it might be beneficial to use user agent sniffing to save on performance. For example, Webkit 6 has a bug whereby when the device orientation changes, the browser might not fire &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList&quot;&gt;MediaQueryList&lt;/a&gt; listeners when it should. To overcome this bug, observe the code below.</source>
          <target state="translated">もう1つのそのようなケースは、自動的に更新されないブラウザーのバグを修正するためのものです。Internet Explorer（Windowsの場合）とWebkit（iOSの場合）は2つの完璧な例です。バージョン9より前のバージョンでは、Internet Explorerには、レンダリングバグ、CSSバグ、APIバグなどの信じられないほどの問題がありました。しかし、InternetExplorerは&lt;s&gt;とても&lt;/s&gt;特別な小さな&lt;s&gt;ハチ&lt;/s&gt;でした&lt;s&gt;&lt;/s&gt;バージョン9より前の例外は、使用可能なブラウザー固有の機能に基づいてブラウザーを検出するのが非常に簡単だったことです。 AppleはIOS上のすべてのブラウザにWebkitを内部的に使用するように強制しているため、Webkitは少し悪いです。したがって、ユーザーは古いデバイスでより優れた更新されたブラウザを入手する方法がありません。ほとんどのバグは検出できますが、一部のバグは他のバグよりも検出に手間がかかります。このような場合、パフォーマンスを節約するためにユーザーエージェントスニッフィングを使用すると有益な場合があります。たとえば、Webkit 6にはバグがあり、デバイスの向きが変わると、ブラウザーが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList&quot;&gt;MediaQueryList&lt;/a&gt;リスナーを起動しない場合があります。このバグを克服するには、以下のコードに従ってください。</target>
        </trans-unit>
        <trans-unit id="82dda038aa2cce2ed80f2fe178807efbf3638a7c" translate="yes" xml:space="preserve">
          <source>Another typical use case of the &lt;code&gt;ETag&lt;/code&gt; header is to cache resources that are unchanged. If a user visits a given URL again (that has an &lt;code&gt;ETag&lt;/code&gt; set), and it is &lt;em&gt;stale&lt;/em&gt;, that is too old to be considered usable, the client will send the value of its &lt;code&gt;ETag&lt;/code&gt; along in an &lt;a href=&quot;if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; header field:</source>
          <target state="translated">&lt;code&gt;ETag&lt;/code&gt; ヘッダーのもう1つの一般的な使用例は、変更されていないリソースをキャッシュすることです。ユーザーが訪問した場合（持って再び与えられたURL &lt;code&gt;ETag&lt;/code&gt; セット）、そしてそれは&lt;em&gt;古い&lt;/em&gt;使用可能と考えることが古すぎる、クライアントは、その値お送りします &lt;code&gt;ETag&lt;/code&gt; に沿って&lt;a href=&quot;if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; &lt;/a&gt;ヘッダフィールド：</target>
        </trans-unit>
        <trans-unit id="013822625b21f9cdd212bedabde063e3b082d165" translate="yes" xml:space="preserve">
          <source>Another typical use of the &lt;code&gt;ETag&lt;/code&gt; header is to cache resources that are unchanged. If a user visits a given URL again (that has an &lt;code&gt;ETag&lt;/code&gt; set), and it is &lt;em&gt;stale&lt;/em&gt; (too old to be considered usable), the client will send the value of its &lt;code&gt;ETag&lt;/code&gt; along in an &lt;a href=&quot;if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; header field:</source>
          <target state="translated">&lt;code&gt;ETag&lt;/code&gt; ヘッダーのもう1つの一般的な使用法は、変更されていないリソースをキャッシュすることです。ユーザーが訪問した場合（持って再び与えられたURL &lt;code&gt;ETag&lt;/code&gt; セット）、そしてそれは&lt;em&gt;古くは&lt;/em&gt;（古すぎるが使用可能とみなされるため）、クライアントは、その値お送りします &lt;code&gt;ETag&lt;/code&gt; に沿って&lt;a href=&quot;if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; &lt;/a&gt;ヘッダフィールド：</target>
        </trans-unit>
        <trans-unit id="5e02264f317d706ccbea92e11ccd2f204223b4b4" translate="yes" xml:space="preserve">
          <source>Any MIME type</source>
          <target state="translated">任意の MIME タイプ</target>
        </trans-unit>
        <trans-unit id="664cc5e88f68df83f7fdaca487b2f0a350552a8c" translate="yes" xml:space="preserve">
          <source>Any attempt to identify the entity ultimately responsible for the resource being unavailable belongs in the response body, not in the &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; link. This includes the name of the person or organization that made a legal demand resulting in the content's removal.</source>
          <target state="translated">リソースが利用できないことに最終的に責任があるエンティティを特定しようとする試みは、 &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; リンクではなく、応答本文に属します。これには、コンテンツの削除につながる法的要求を行った個人または組織の名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="d073236284623914133cba02aa3f08d7e4a1a8da" translate="yes" xml:space="preserve">
          <source>Any attempt to identify the entity ultimately responsible for the resource being unavailable, such as the name of the person or organization that made a legal demand resulting in the content's removal belongs in the response body, not in the &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; link.</source>
          <target state="translated">コンテンツの削除につながる法的要求を行った個人または組織の名前など、リソースが利用できないことに最終的に責任があるエンティティを特定する試みは、 &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; リンクではなく、応答本文に含まれます。</target>
        </trans-unit>
        <trans-unit id="2f93939c7c6cb77a4b58edcc0e622cd4847d28e7" translate="yes" xml:space="preserve">
          <source>Any charset not mentioned elsewhere in the header; &lt;code&gt;'*'&lt;/code&gt; being used as a wildcard.</source>
          <target state="translated">ヘッダーの他の場所で言及されていない文字セット。ワイルドカードとして使用されている &lt;code&gt;'*'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fc5d287b6ce02126912e6b9a448430e3c10e833" translate="yes" xml:space="preserve">
          <source>Any charset not mentioned elsewhere in the header; &lt;code&gt;*&lt;/code&gt; is used as a wildcard.</source>
          <target state="translated">ヘッダーの他の場所で言及されていない文字セット。 &lt;code&gt;*&lt;/code&gt; はワイルドカードとして使用されます。</target>
        </trans-unit>
        <trans-unit id="cffac48fe322697cea7b86272c21674cea37081d" translate="yes" xml:space="preserve">
          <source>Any document that contains text and is theoretically human readable</source>
          <target state="translated">テキストを含み、理論的に人間が読める文書</target>
        </trans-unit>
        <trans-unit id="2222f9e23d53ca401d68b85209e6a60c148699f8" translate="yes" xml:space="preserve">
          <source>Any dotted address such as an IP address or mask.</source>
          <target state="translated">IPアドレスやマスクなどのドット付きのアドレス。</target>
        </trans-unit>
        <trans-unit id="6dd2b19bd700bc5770d5e2ddd162cb6829cc8561" translate="yes" xml:space="preserve">
          <source>Any encoding is placed in an order of preference, expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/quality_values&quot;&gt;quality value&lt;/a&gt; called the &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="translated">エンコードは優先順に配置され、&lt;em&gt;重み&lt;/em&gt;と呼ばれる相対的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/quality_values&quot;&gt;な品質値&lt;/a&gt;を使用して表されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="019e0e72fd8d034b92757591b2abd6fca20d6e93" translate="yes" xml:space="preserve">
          <source>Any kind of audio file</source>
          <target state="translated">任意の種類のオーディオファイル</target>
        </trans-unit>
        <trans-unit id="dd4445bb33a492123fee27932f107bd3fb3d96ab" translate="yes" xml:space="preserve">
          <source>Any kind of binary data</source>
          <target state="translated">任意の種類のバイナリデータ</target>
        </trans-unit>
        <trans-unit id="3c78c30698ff4d77228e78708753b01ba8b332fc" translate="yes" xml:space="preserve">
          <source>Any kind of binary data that doesn't fall explicitly into one of the other types; either data that will be executed or interpreted in some way or binary data that requires a specific application or category of application to use. Generic binary data (or binary data whose true type is unknown) is &lt;code&gt;application/octet-stream&lt;/code&gt;. Other common examples include &lt;code&gt;application/pdf&lt;/code&gt;, &lt;code&gt;application/pkcs8&lt;/code&gt;, and &lt;code&gt;application/zip&lt;/code&gt;.</source>
          <target state="translated">他のタイプのいずれにも明示的に分類されないあらゆる種類のバイナリデータ。何らかの方法で実行または解釈されるデータ、または特定のアプリケーションまたはアプリケーションのカテゴリを使用する必要があるバイナリデータ。一般的なバイナリデータ（または真のタイプが不明なバイナリデータ）は、 &lt;code&gt;application/octet-stream&lt;/code&gt; です。その他の一般的な例には、 &lt;code&gt;application/pdf&lt;/code&gt; 、 &lt;code&gt;application/pkcs8&lt;/code&gt; 、および &lt;code&gt;application/zip&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="d6114a2f683fe140d2073d3c42d6efbc65bb0052" translate="yes" xml:space="preserve">
          <source>Any kind of binary data, especially data that will be executed or interpreted somehow.</source>
          <target state="translated">あらゆる種類のバイナリデータ、特に何らかの方法で実行または解釈されるデータ。</target>
        </trans-unit>
        <trans-unit id="1efabcb6609afdf043de0f7cdb84bbe7f95e6d79" translate="yes" xml:space="preserve">
          <source>Any kind of image. Videos are not included, though animated images (like animated GIF) are described with an image type.</source>
          <target state="translated">画像の種類は問いません。動画は含まれませんが、アニメーション画像(アニメーションGIFなど)は画像タイプで記述します。</target>
        </trans-unit>
        <trans-unit id="01b107a882caf2ec54e57571bc8a5b70f3cfd436" translate="yes" xml:space="preserve">
          <source>Any kind of video file</source>
          <target state="translated">任意の種類のビデオファイル</target>
        </trans-unit>
        <trans-unit id="1bebfb3250f36aea1f47b92ea11652dd128e36ff" translate="yes" xml:space="preserve">
          <source>Any language; &lt;code&gt;'*'&lt;/code&gt; is used as a wildcard.</source>
          <target state="translated">どんな言語でも; &lt;code&gt;'*'&lt;/code&gt; はワイルドカードとして使用されます。</target>
        </trans-unit>
        <trans-unit id="fa2b54a4202ec978d3ce61340b71c764fd12c522" translate="yes" xml:space="preserve">
          <source>Any of those URLs can be typed into your browser's address bar to tell it to load the associated page (resource).</source>
          <target state="translated">これらのURLのいずれかをブラウザのアドレスバーに入力すると、関連するページ(リソース)を読み込むように指示することができます。</target>
        </trans-unit>
        <trans-unit id="a55969e44ed3bb85f72438df20e0888b1d448e7d" translate="yes" xml:space="preserve">
          <source>Any request can contain a conditional header defined in HTTP (If-
   Match, If-Modified-Since, etc.) or the &quot;If&quot; or &quot;Overwrite&quot;
   conditional headers defined in this specification.  If the server
   evaluates a conditional header, and if that condition fails to hold,
   then this error code MUST be returned.  On the other hand, if the
   client did not include a conditional header in the request, then the
   server MUST NOT use this status code.</source>
          <target state="translated">どのようなリクエストでも、HTTPで定義されている条件ヘッダー(If-Match、If-Modified-Sinceなど)や、 この仕様で定義されている「If」または「Overwrite」条件ヘッダーを含むことができる。サーバが条件付きヘッダを評価し、その条件が保持できない場合、このエラーコードを返さなければならない[MUST]。一方で、クライアントがリクエストに条件付きヘッダーを含まなかった場合、 サーバーはこのステータスコードを使用してはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="7cdc0894205bef818ccb78426bec4fd87c774e5d" translate="yes" xml:space="preserve">
          <source>Any script inspecting the response is permitted to read the values of the &lt;code&gt;X-PINGOTHER&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; headers.</source>
          <target state="translated">応答を検査するスクリプトはすべて、 &lt;code&gt;X-PINGOTHER&lt;/code&gt; ヘッダーと &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーの値を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="8478316470e4f240737c39611f11363ddfca7c9b" translate="yes" xml:space="preserve">
          <source>Any value is placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="translated">任意の値は、&lt;em&gt;weight&lt;/em&gt;と呼ばれる相対的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;な品質値&lt;/a&gt;を使用して表現された優先順位で配置されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0362e9377af962c1e1e3c9526a03e0bd8afd66f5" translate="yes" xml:space="preserve">
          <source>Any value is placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called the &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="translated">値は、&lt;em&gt;重み&lt;/em&gt;と呼ばれる相対的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;な品質値&lt;/a&gt;を使用して表現された優先順位で配置されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2511c542d2415f42594a069865e3cebb0df0bdbf" translate="yes" xml:space="preserve">
          <source>Any value placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;重み&lt;/em&gt;と呼ばれる相対的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;な品質値&lt;/a&gt;を使用して表現された優先順位で配置された値。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="028f46051e76ed93ba7b2778ec6eb36735319f74" translate="yes" xml:space="preserve">
          <source>Any value used is placed in an order of preference expressed using relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called the &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="translated">使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;値&lt;/a&gt;は、&lt;em&gt;重み&lt;/em&gt;と呼ばれる相対的な品質値を使用して表現された優先順位で配置されます。</target>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="8999d296169b8dd735b6c2a66a1890fdaeaf65ac" translate="yes" xml:space="preserve">
          <source>Apache (.htaccess)</source>
          <target state="translated">アパッチ</target>
        </trans-unit>
        <trans-unit id="7723239d4f8c294f39821b7409607014e4779e8f" translate="yes" xml:space="preserve">
          <source>Apache configuration</source>
          <target state="translated">アパッチ設定</target>
        </trans-unit>
        <trans-unit id="aa0a9cd5c584e9e02295690438c89eb9804a2974" translate="yes" xml:space="preserve">
          <source>Apache examples</source>
          <target state="translated">Apache の例</target>
        </trans-unit>
        <trans-unit id="c418bff5ffb1981f5504dddf5424420a352c8db4" translate="yes" xml:space="preserve">
          <source>Apache supports compression and uses &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_deflate.html&quot;&gt;mod_deflate&lt;/a&gt;; for nginx there is &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_gzip_module.html&quot;&gt;ngx_http_gzip_module&lt;/a&gt;; for IIS, the &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpcompression&quot;&gt;&amp;lt;httpCompression&amp;gt;&lt;/a&gt;&lt;/code&gt; element.</source>
          <target state="translated">Apacheは圧縮をサポートし、&lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_deflate.html&quot;&gt;mod_deflate&lt;/a&gt;を使用します。nginxには&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_gzip_module.html&quot;&gt;ngx_http_gzip_moduleがあり&lt;/a&gt;ます。IISの場合、 &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpcompression&quot;&gt;&amp;lt;httpCompression&amp;gt;&lt;/a&gt;&lt;/code&gt; 要素。</target>
        </trans-unit>
        <trans-unit id="fb97b025af5b9508c5b771e7550a47edd3292e52" translate="yes" xml:space="preserve">
          <source>Apache supports compression and uses &lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_deflate.html&quot;&gt;mod_deflate&lt;/a&gt;; for nginx there is &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_module.html&quot;&gt;ngx_http_gzip_module&lt;/a&gt;; for IIS, the &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpcompression&quot;&gt;&amp;lt;httpCompression&amp;gt;&lt;/a&gt;&lt;/code&gt; element.</source>
          <target state="translated">Apacheは圧縮をサポートし、&lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_deflate.html&quot;&gt;mod_deflate&lt;/a&gt;を使用します。nginxには&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_module.html&quot;&gt;ngx_http_gzip_moduleがあり&lt;/a&gt;ます; IISの場合、 &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpcompression&quot;&gt;&amp;lt;httpCompression&amp;gt;&lt;/a&gt;&lt;/code&gt; 要素。</target>
        </trans-unit>
        <trans-unit id="faca6e6d39fcc2dddfd17aac8a4b697f78f0b4a5" translate="yes" xml:space="preserve">
          <source>Apart from the headers automatically set by the user agent (for example, &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;the other headers defined in the Fetch spec as a &amp;ldquo;forbidden header name&amp;rdquo;&lt;/a&gt;), the only headers which are allowed to be manually set are &lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;those which the Fetch spec defines as a &amp;ldquo;CORS-safelisted request-header&amp;rdquo;&lt;/a&gt;, which are:</source>
          <target state="translated">離れて（例えば、自動的にユーザーエージェントにより設定されたヘッダから&lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;headers/user-agent&quot;&gt; &lt;code&gt;User-Agent&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;「禁止ヘッダ名」として取得仕様で定義されている他のヘッダ&lt;/a&gt;）、手動で設定することが許可されているヘッダーのみである&lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;ものがFetch仕様では、「CORSセーフリストリクエストヘッダー」として定義されて&lt;/a&gt;います。これは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="970faa6cb472b485c0f707488c5cdc08b7986c8b" translate="yes" xml:space="preserve">
          <source>Apart from the headers set automatically by the user agent (for example, &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;any of the other headers with names defined in the Fetch spec as a &amp;ldquo;forbidden header name&amp;rdquo;&lt;/a&gt;), the only headers which are allowed to be manually set are &lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;those which the Fetch spec defines as being a &amp;ldquo;CORS-safelisted request-header&amp;rdquo;&lt;/a&gt;, which are:</source>
          <target state="translated">ユーザーエージェントによって自動的に設定されるヘッダー（たとえば、&lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;headers/user-agent&quot;&gt; &lt;code&gt;User-Agent&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;Fetch仕様で「禁止されたヘッダー名」として定義された名前を持つその他のヘッダー）とは&lt;/a&gt;別に、許可されるヘッダーは手動で設定されるのは&lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;、Fetch仕様で「CORSセーフリストのリクエストヘッダー」として定義されて&lt;/a&gt;いるもので、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1aa865a302682de3015e0ace4594cebfe9d891b1" translate="yes" xml:space="preserve">
          <source>AppCache,</source>
          <target state="translated">AppCache,</target>
        </trans-unit>
        <trans-unit id="f4f943fdac0850a40c1e416faae62566138da37d" translate="yes" xml:space="preserve">
          <source>Appendix A.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="translated">付録A. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;からの変更点</target>
        </trans-unit>
        <trans-unit id="918d2c04181755c7d2a2da27da64eb8b93bdb750" translate="yes" xml:space="preserve">
          <source>Appendix A.  Changes from RFCs 2616 and 2617</source>
          <target state="translated">付録A.RFC2616と2617からの変更点</target>
        </trans-unit>
        <trans-unit id="b43034e2e81ab244701cc36ac5fa225c7d47a6b7" translate="yes" xml:space="preserve">
          <source>Appendix A.  Contributors</source>
          <target state="translated">付録A.投稿者</target>
        </trans-unit>
        <trans-unit id="81248f72eaaeaa9ce24d21fe4f273f8ddcbc8c1d" translate="yes" xml:space="preserve">
          <source>Appendix A.  Differences between HTTP and MIME</source>
          <target state="translated">付録A.HTTPとMIMEの違い</target>
        </trans-unit>
        <trans-unit id="7952612f081e615aa7bd03aa23dc4c518656090e" translate="yes" xml:space="preserve">
          <source>Appendix A.  HTTP Version History</source>
          <target state="translated">付録A.HTTP バージョン履歴</target>
        </trans-unit>
        <trans-unit id="6a6a944bd171bde6db3410fdca99b9555cb916eb" translate="yes" xml:space="preserve">
          <source>Appendix A.  Internet Media Type multipart/byteranges</source>
          <target state="translated">付録A.インターネットメディアタイプのマルチパート/バイタンジェンス</target>
        </trans-unit>
        <trans-unit id="5a342778d6d38dec85304f64cb11f4d4619e78db" translate="yes" xml:space="preserve">
          <source>Appendix A.  Notes on Processing XML Elements</source>
          <target state="translated">付録A.XML要素を処理する際の注意点</target>
        </trans-unit>
        <trans-unit id="a31c03a24bf30a70f8618d83f8525ac0d5fb0b3b" translate="yes" xml:space="preserve">
          <source>Appendix A.  TLS 1.2 Cipher Suite Black List</source>
          <target state="translated">付録 A.TLS 1.2 暗号スイートブラックリスト</target>
        </trans-unit>
        <trans-unit id="1ee9c6db5c064e35f5da900ad01918c6a6eb39c9" translate="yes" xml:space="preserve">
          <source>Appendix B.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="translated">付録B. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;からの変更点</target>
        </trans-unit>
        <trans-unit id="66e5d9de6262db2adaa063f2f1cfab6dede8a9d3" translate="yes" xml:space="preserve">
          <source>Appendix B.  Collected ABNF</source>
          <target state="translated">付録B.収集したABNF</target>
        </trans-unit>
        <trans-unit id="4047ada28894f318e92d4c1e37bfb1baca1a4956" translate="yes" xml:space="preserve">
          <source>Appendix B.  Imported ABNF</source>
          <target state="translated">付録B.輸入されたABNF</target>
        </trans-unit>
        <trans-unit id="e8da15ad98d1a9ffbcd6d66ba2fd87d4baebf827" translate="yes" xml:space="preserve">
          <source>Appendix B.  Notes on HTTP Client Compatibility</source>
          <target state="translated">付録B.HTTP クライアントの互換性に関する注意事項</target>
        </trans-unit>
        <trans-unit id="4bc7060239451790c0c340964acba077f07d510e" translate="yes" xml:space="preserve">
          <source>Appendix B.  RELAX NG Compact Schema</source>
          <target state="translated">付録B.RELAX NG コンパクトスキーマ</target>
        </trans-unit>
        <trans-unit id="058387e6d5459c618bca63d6f49f8d5971089303" translate="yes" xml:space="preserve">
          <source>Appendix C.  Collected ABNF</source>
          <target state="translated">付録C.収集したABNF</target>
        </trans-unit>
        <trans-unit id="977523ad17c09cc35f1c89152295090a33b58a76" translate="yes" xml:space="preserve">
          <source>Appendix C.  Imported ABNF</source>
          <target state="translated">付録C.輸入されたABNF</target>
        </trans-unit>
        <trans-unit id="de902e4f9b3096f5f049db4d8e97c98cde2df389" translate="yes" xml:space="preserve">
          <source>Appendix C.  The 'opaquelocktoken' Scheme and URIs</source>
          <target state="translated">付録C.opaquelocktoken' SchemeとURI</target>
        </trans-unit>
        <trans-unit id="ce8263e94ec9fefd83f8c080b1172f0fb08a91c8" translate="yes" xml:space="preserve">
          <source>Appendix D.  Collected ABNF</source>
          <target state="translated">付録D.収集したABNF</target>
        </trans-unit>
        <trans-unit id="0d9be62baed7f2691c136ca29f5d801725b346de" translate="yes" xml:space="preserve">
          <source>Appendix D.  Lock-null Resources</source>
          <target state="translated">付録 D.ロック・ヌル資源</target>
        </trans-unit>
        <trans-unit id="b843d7a45c5fbfe004e6dab880398f2c109d318b" translate="yes" xml:space="preserve">
          <source>Appendix E.  Guidance for Clients Desiring to Authenticate</source>
          <target state="translated">付録E.認証を希望するクライアントへのガイダンス</target>
        </trans-unit>
        <trans-unit id="1e32692b4682e33761a3d401d643e95f4fc629c6" translate="yes" xml:space="preserve">
          <source>Appendix F.  Summary of Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;</source>
          <target state="translated">付録F. &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;からの変更の要約</target>
        </trans-unit>
        <trans-unit id="a6b70da19fe698facbbf74a7c6848c10082c6db6" translate="yes" xml:space="preserve">
          <source>Apple Installer Package</source>
          <target state="translated">アップルインストーラーパッケージ</target>
        </trans-unit>
        <trans-unit id="594c277ced56ff92f49f5549dcb6e9bb01873e08" translate="yes" xml:space="preserve">
          <source>Apple Safari rejects any such data. Google Chrome and Microsoft Edge discard up to four invalid bytes preceding a valid response. Firefox tolerates in excess of a kilobyte of invalid data preceding a valid response.</source>
          <target state="translated">Apple Safari はそのようなデータを一切拒否します。Google Chrome と Microsoft Edge は、有効なレスポンスの前に最大 4 バイトの無効なデータを破棄します。Firefox は、有効なレスポンスの前に 1 キロバイトを超える無効なデータを許容します。</target>
        </trans-unit>
        <trans-unit id="a7e444ff8fa9777e03d5103a61265a5f5c06bddc" translate="yes" xml:space="preserve">
          <source>AppleWebKit/xyz</source>
          <target state="translated">AppleWebKit/xyz</target>
        </trans-unit>
        <trans-unit id="978492a43f30387de57a216152fb92287c408810" translate="yes" xml:space="preserve">
          <source>April 1st joke spec</source>
          <target state="translated">四月一日ジョーク仕様</target>
        </trans-unit>
        <trans-unit id="c3cfa2d1b2b69734300d2888ba207ad587d929b9" translate="yes" xml:space="preserve">
          <source>Arbitrary, non-specific warning</source>
          <target state="translated">恣意的で非特異的な警告</target>
        </trans-unit>
        <trans-unit id="ef596164d3adddb52527e23859760cbb72f418cb" translate="yes" xml:space="preserve">
          <source>Architecture (RFC 7230)</source>
          <target state="translated">アーキテクチャ (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="2cd9571b02d0b5f97d07115fe12dfba195dd6de2" translate="yes" xml:space="preserve">
          <source>Archive document (multiple files embedded)</source>
          <target state="translated">アーカイブ文書(複数のファイルが埋め込まれている</target>
        </trans-unit>
        <trans-unit id="96df099182a80fa56639e210174f84a1514aeddb" translate="yes" xml:space="preserve">
          <source>Are you trying to check for the existence of a specific feature?</source>
          <target state="translated">特定の機能の存在を確認しようとしていませんか?</target>
        </trans-unit>
        <trans-unit id="22374513ed4cb776e85f41fade4e611b7089d973" translate="yes" xml:space="preserve">
          <source>Are you trying to work around a specific bug in some version of a browser?</source>
          <target state="translated">あるバージョンのブラウザの特定のバグを回避しようとしていますか?</target>
        </trans-unit>
        <trans-unit id="8c498b25da0ee315015a3c8c5220c1550df792eb" translate="yes" xml:space="preserve">
          <source>Arguably the most common use and misuse of user agent sniffing is to detect if the device is a mobile device. However, people too often overlook what they are really after. People use user agent sniffing to detect if the users' device is touch-friendly and has a small screen so they can optimize their website accordingly. While user agent sniffing can sometimes detect these, not all devices are the same: some mobile devices have big screen sizes, some desktops have a small touchscreen, some people use smart TV's which are an entirely different ballgame altogether, and some people can dynamically change the width and height of their screen by flipping their tablet on its side! So, user agent sniffing is definitely not the way to go. Thankfully, there are much better alternatives. Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/maxTouchPoints&quot;&gt;Navigator.maxTouchPoints&lt;/a&gt; to detect if the user's device has a touchscreen. Then, default back to checking the user agent screen only &lt;em&gt;if (!(&quot;maxTouchPoints&quot; in navigator)) { /*Code here*/}&lt;/em&gt;. Using this information of whether the device has a touchscreen, do not change the entire layout of the website just for touch devices: you will only create more work and maintenance for yourself. Rather, add in touch conveniences such as bigger, more easily clickable buttons (you can do this using CSS by simply increasing the font size). Here is an example of code that increases the padding of #exampleButton to 1em on mobile devices.</source>
          <target state="translated">おそらく、ユーザーエージェントスニッフィングの最も一般的な使用法と誤用は、デバイスがモバイルデバイスであるかどうかを検出することです。しかし、人々は自分が本当に求めているものを見落としがちです。人々はユーザーエージェントスニッフィングを使用して、ユーザーのデバイスがタッチフレンドリーで画面が小さいかどうかを検出し、それに応じてWebサイトを最適化できるようにします。ユーザーエージェントスニッフィングはこれらを検出できる場合がありますが、すべてのデバイスが同じであるとは限りません。一部のモバイルデバイスは大きな画面サイズ、一部のデスクトップは小さなタッチスクリーン、一部の人々はまったく異なるボールゲームであるスマートTVを使用し、一部の人々は動的に変更できますタブレットを横に倒して画面の幅と高さを調整します。したがって、ユーザーエージェントのスニッフィングは間違いなく進むべき道ではありません。ありがたいことに、はるかに優れた選択肢があります。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/maxTouchPoints&quot;&gt;Navigator.maxTouchPointsを&lt;/a&gt;使用するユーザーのデバイスにタッチスクリーンがあるかどうかを検出します。次に、デフォルトで&lt;em&gt;、（！（ &quot;maxTouchPoints&quot; in navigator））{/ *ここにコード* /}の場合に&lt;/em&gt;のみユーザーエージェント画面をチェックします。デバイスにタッチスクリーンがあるかどうかのこの情報を使用して、タッチデバイス専用のWebサイトのレイアウト全体を変更しないでください。自分でより多くの作業とメンテナンスを作成するだけです。むしろ、大きくてクリックしやすいボタンなどのタッチの便利さを追加します（これは、CSSを使用してフォントサイズを大きくするだけで実行できます）。これは、モバイルデバイスで#exampleButtonのパディングを1emに増やすコードの例です。</target>
        </trans-unit>
        <trans-unit id="8cab0add88f8e2a278cfb8a5e8b164090488d38a" translate="yes" xml:space="preserve">
          <source>Arguably the most common use and misuse of user agent sniffing is to detect if the device is a mobile device. However, what is failed to be accountable is what they're really after. People use user agent sniffing to detect if the users' device is touch-friendly and has a small screen so they can optimize their website accordingly. While user agent sniffing can sometimes detect these, not all devices are the same. Some mobile devices have big screen sizes, some desktops have a small touchscreen, some people use smart TV's which are an entirely different ballgame altogether, some people can dynamically change the width and height of their screen by flipping their tablet on its side! So, user agent sniffing is definitely not the way to go. But, there are much better alternatives. Use &lt;em&gt;Navigator.maxTouchPoints&lt;/em&gt; to detect if the user's device has a touchscreen. Then, default back to checking the user agent screen only &lt;em&gt;if (!(&quot;maxTouchPoints&quot; in Navigator)) { /*Code here*/}&lt;/em&gt;. Using this information of whether the device has a touchscreen, do not change the entire layout of the website just for touch devices: you will only create more work and maintenance for yourself. Rather, add in touch conveniences such as bigger, more easily clickable buttons (you can do this using CSS by simply increasing the font size). As for the screen size, simply use &lt;em&gt;window.innerWidth&lt;/em&gt; and &lt;em&gt;window.addEventListener(&quot;resize&quot;, function(){ /*refresh screen size dependent things*/ })&lt;/em&gt;. What you want to do for screen size is not slash off information on smaller screens. That will only annoy people because it will force them to use the desktop version. Rather, try to have fewer columns of information in a longer page on smaller screens while having more columns with a shorter page on larger screen sizes. This effect can be easily achieved using CSS flexboxes. Next, always make your code dynamic. The user can flip their mobile device on its side, changing the width and height of the page. Never be satisfied with your webpage until you can open up the dev tools side panel and resize the screen while the webpage looks smooth, fluid, and dynamically resized.</source>
          <target state="translated">間違いなく、ユーザーエージェントスニッフィングの最も一般的な使用と誤用は、デバイスがモバイルデバイスかどうかを検出することです。しかし、説明責任を果たせないのは、彼らが本当に求めていることです。ユーザーはユーザーエージェントのスニッフィングを使用して、ユーザーのデバイスがタッチフレンドリーで画面が小さいかどうかを検出し、それに応じてWebサイトを最適化できます。ユーザーエージェントスニッフィングでこれらを検出できる場合がありますが、すべてのデバイスが同じであるとは限りません。一部のモバイルデバイスは大きな画面サイズを持ち、一部のデスクトップは小さなタッチスクリーンを備えています。完全に異なるボールゲームであるスマートTVを使用している人もいれば、タブレットを横向きにして画面の幅と高さを動的に変更できる人もいます。したがって、ユーザーエージェントのスニッフィングは確実に進むべき道ではありません。しかし、はるかに優れた代替案があります。&lt;em&gt;Navigator.maxTouchPointsを&lt;/em&gt;使用する&lt;em&gt;&lt;/em&gt;ユーザーのデバイスにタッチスクリーンがあるかどうかを検出します。次に、&lt;em&gt;（！（ &quot;Navigatorの&quot; maxTouchPoints &quot;））{/ *ここにコード* /}の場合&lt;/em&gt;のみ、デフォルトでユーザーエージェント画面のチェックに戻ります。デバイスにタッチスクリーンが搭載されているかどうかに関するこの情報を使用して、タッチデバイスのためだけにWebサイトのレイアウト全体を変更しないでください。自分用に追加の作業とメンテナンスを作成するだけです。むしろ、大きくてクリックしやすいボタンなどのタッチ機能を追加します（CSSを使用して、フォントサイズを増やすだけでこれを実行できます）。画面サイズについては、単純に&lt;em&gt;window.innerWidth&lt;/em&gt;および&lt;em&gt;window.addEventListener（ &quot;resize&quot;、function（）{/ *画面サイズに依存するものを更新する* /}）を使用してください。&lt;/em&gt;。画面サイズにしたいのは、小さい画面の情報を切り捨てることではありません。それは彼らがデスクトップ版を使用することを強制するのでそれだけで人々を悩ますでしょう。むしろ、小さな画面では長いページの情報の列を少なくし、大きな画面サイズでは短いページの列を多くしてみてください。この効果は、CSSフレックスボックスを使用して簡単に実現できます。次に、常にコードを動的にします。ユーザーはモバイルデバイスを横向きにして、ページの幅と高さを変更できます。開発ツールのサイドパネルを開いて画面のサイズを変更し、Webページが滑らかで滑らかで動的にサイズ変更されるまで、Webページに満足することはできません。</target>
        </trans-unit>
        <trans-unit id="aec8c8505f13b416d6485fc08c67f5112086e6ad" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      #field-name

   The &quot;no-cache&quot; response directive indicates that the response MUST
   NOT be used to satisfy a subsequent request without successful
   validation on the origin server.  This allows an origin server to
   prevent a cache from using it to satisfy a request without contacting
   it, even by caches that have been configured to send stale responses.

   If the no-cache response directive specifies one or more field-names,
   then a cache MAY use the response to satisfy a subsequent request,
   subject to any other restrictions on caching.  However, any header
   fields in the response that have the field-name(s) listed MUST NOT be
   sent in the response to a subsequent request without successful
   revalidation with the origin server.  This allows an origin server to
   prevent the re-use of certain header fields in a response, while
   still allowing caching of the rest of the response.

   The field-names given are not limited to the set of header fields
   defined by this specification.  Field names are case-insensitive. 

   This directive uses the quoted-string form of the argument syntax.  A
   sender SHOULD NOT generate the token form (even if quoting appears
   not to be needed for single-entry lists).

   Note: Although it has been back-ported to many implementations, some
   HTTP/1.0 caches will not recognize or obey this directive.  Also,
   no-cache response directives with field-names are often handled by
   caches as if an unqualified no-cache directive was received; i.e.,
   the special handling for the qualified form is not widely
   implemented.</source>
          <target state="translated">引数の構文。#field-name 「no-cache」応答指示文は、オリジンサーバーでの検証が成功しない限り、後続のリクエストを 満たすために応答を使用してはならない[MUST NOT]ことを示す。これにより、古い応答を送るように設定されているキャッシュであっても、オリジンサーバがキャッシュに連絡することなくリクエストを満たすためにキャッシュを使用することを防ぐことができます。no-cache レスポンスディレクティブが一つ以上のフィールド名を指定する場合、キャッシュはキャッシュに対する他の制限を受けて、 後続のリクエストを満たすためにレスポンスを使ってもよい[MAY]。しかしながら、フィールド名がリストされている応答中のヘッダーフィールドは、 オリジンサーバとの再検証に成功しない限り、後続のリクエストへの応答で 送ってはならない[MUST NOT]。これにより、オリジンサーバーは応答中の特定のヘッダーフィールドの 再使用を防ぎつつ、応答の残りの部分のキャッシュを可能にすることが できる。与えられるフィールド名は、この仕様で定義されているヘッダーフィールドのセットに 限定されない。フィールド名は大文字小文字を区別しません。このディレクティブは引数の構文を引用符で囲まれた文字列形式にしています。送信者はトークン形式を生成すべきではありません(シングルエントリのリストではクォートが必要ないように見えても)。注意:多くの実装にバックポートされていますが、HTTP/1.0 キャッシュの中にはこのディレクティブを認識しないものもありますし、 従うこともできません。また、フィールド名を持つ no-cache レスポンスディレクティブは、あたかも修飾されていない no-cache ディレクティブを受け取ったかのようにキャッシュによって処理されることがよくあります;すなわち、修飾されたフォームのための特別な処理は広く実装されていません。</target>
        </trans-unit>
        <trans-unit id="d1831ae5ad42c135eef58117ca5beea27918ee39" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      #field-name 

   The &quot;private&quot; response directive indicates that the response message
   is intended for a single user and MUST NOT be stored by a shared
   cache.  A private cache MAY store the response and reuse it for later
   requests, even if the response would normally be non-cacheable.

   If the private response directive specifies one or more field-names,
   this requirement is limited to the field-values associated with the
   listed response header fields.  That is, a shared cache MUST NOT
   store the specified field-names(s), whereas it MAY store the
   remainder of the response message.

   The field-names given are not limited to the set of header fields
   defined by this specification.  Field names are case-insensitive.

   This directive uses the quoted-string form of the argument syntax.  A
   sender SHOULD NOT generate the token form (even if quoting appears
   not to be needed for single-entry lists).

   Note: This usage of the word &quot;private&quot; only controls where the
   response can be stored; it cannot ensure the privacy of the message
   content.  Also, private response directives with field-names are
   often handled by caches as if an unqualified private directive was
   received; i.e., the special handling for the qualified form is not
   widely implemented.</source>
          <target state="translated">引数の構文。#field-name &quot;private&quot; レスポンスディレクティブは、レスポンスメッセージが単一のユーザ向けであり、 共有キャッシュに保存されてはならない[MUST NOT]ことを示す。プライベートキャッシュはレスポンスを保存してもよい[MAY]があり、たとえレスポンスが通常はキャッシュできないものであっても、後のリクエストに再利用してもよい。プライベートレスポンスディレクティブが一つ以上のフィールド名を指定している場合、 この要求はリストされたレスポンスヘッダフィールドに関連付けられたフィールド値に限定されます。つまり、共有キャッシュは指定されたフィールド名を保存してはならない[MUST NOT]のに対し、 レスポンスメッセージの残りを保存してもよい[MAY]のです。与えられたフィールド名は、この仕様で定義されたヘッダーフィールドのセットに限定されない。フィールド名は大文字小文字を区別しません。このディレクティブは引数構文の引用符で囲まれた文字列形式を使用します。送信者はトークン形式を生成すべきではありません(シングルエントリのリストではクォートが必要ないように見えても)。注意:この &quot;private &quot;という言葉の使い方は、応答がどこに保存されるかを制御するだけで、 メッセージの内容のプライバシーを保証するものではありません。また、フィールド名を持つプライベートな応答ディレクティブは、 キャッシュによって、あたかも修飾されていないプライベートなディレクティブを 受け取ったかのように扱われることがよくあります;すなわち、修飾されたフォームのための特別な処理は 広くは実装されていません。</target>
        </trans-unit>
        <trans-unit id="4aefbf84315b53b56a158fafd1e4047cf84680b4" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-age&quot; request directive indicates that the client is
   unwilling to accept a response whose age is greater than the
   specified number of seconds.  Unless the max-stale request directive
   is also present, the client is not willing to accept a stale
   response.

   This directive uses the token form of the argument syntax: e.g.,
   'max-age=5' not 'max-age=&quot;5&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="translated">引数の構文：delta-seconds（&lt;a href=&quot;#section-1.2.1&quot;&gt;セクション1.2.1を&lt;/a&gt;参照）「max-age」リクエストディレクティブは、指定された秒数よりも経過時間が長い応答をクライアントが受け入れたくないことを示します。 max-staleリクエストディレクティブも存在しない限り、クライアントは古い応答を受け入れる用意はありません。このディレクティブは、引数構文のトークン形式を使用します。たとえば、「max-age = 5」ではなく「max-age = 5」です。送信者は引用文字列形式を生成してはいけません。</target>
        </trans-unit>
        <trans-unit id="13b97b4c1790a5d1690e4603b26402d86eb7b629" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-age&quot; response directive indicates that the response is to be
   considered stale after its age is greater than the specified number
   of seconds.

   This directive uses the token form of the argument syntax: e.g.,
   'max-age=5' not 'max-age=&quot;5&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="translated">引数の構文：delta-seconds（&lt;a href=&quot;#section-1.2.1&quot;&gt;セクション1.2.1を&lt;/a&gt;参照） &quot;max-age&quot;応答ディレクティブは、指定された秒数より経過した応答が古くなっていると見なされることを示します。このディレクティブは、引数構文のトークン形式を使用します。たとえば、「max-age = 5」ではなく「max-age = 5」です。送信者は引用文字列形式を生成してはいけません。</target>
        </trans-unit>
        <trans-unit id="06cca4dcd60697e3d0f6bcb9d03459f0446ded37" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-stale&quot; request directive indicates that the client is
   willing to accept a response that has exceeded its freshness
   lifetime.  If max-stale is assigned a value, then the client is
   willing to accept a response that has exceeded its freshness lifetime
   by no more than the specified number of seconds.  If no value is
   assigned to max-stale, then the client is willing to accept a stale
   response of any age.

   This directive uses the token form of the argument syntax: e.g.,
   'max-stale=10' not 'max-stale=&quot;10&quot;'.  A sender SHOULD NOT generate
   the quoted-string form.</source>
          <target state="translated">引数の構文：delta-seconds（&lt;a href=&quot;#section-1.2.1&quot;&gt;セクション1.2.1を&lt;/a&gt;参照） &quot;max-stale&quot;リクエストディレクティブは、フレッシュネスライフタイムを超えた応答をクライアントが受け入れる用意があることを示します。 max-staleに値が割り当てられている場合、クライアントは、フレッシュネスライフタイムを指定された秒数以内に超えた応答を受け入れます。 max-staleに値が割り当てられていない場合、クライアントは任意の年齢の古い応答を受け入れてもかまいません。このディレクティブは、引数構文のトークン形式を使用します。たとえば、 'max-stale = &quot;10&quot;ではなく、' max-stale = 10 'です。送信者は引用文字列形式を生成してはいけません。</target>
        </trans-unit>
        <trans-unit id="a825cbd8ee60bf462c6dee710ec7c6f4b00811e3" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;s-maxage&quot; response directive indicates that, in shared caches,
   the maximum age specified by this directive overrides the maximum age
   specified by either the max-age directive or the Expires header
   field.  The s-maxage directive also implies the semantics of the
   proxy-revalidate response directive.

   This directive uses the token form of the argument syntax: e.g.,
   's-maxage=10' not 's-maxage=&quot;10&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="translated">引数の構文：delta-seconds（&lt;a href=&quot;#section-1.2.1&quot;&gt;セクション1.2.1を&lt;/a&gt;参照）「s-maxage」応答ディレクティブは、共有キャッシュ内で、このディレクティブによって指定された最大存続期間が、max-ageディレクティブまたはExpiresによって指定された最大存続期間をオーバーライドすることを示します。ヘッダーフィールド。 s-maxageディレクティブは、proxy-revalidate応答ディレクティブのセマンティクスも意味します。このディレクティブは、引数構文のトークン形式を使用します。たとえば、 's-maxage = &quot;10&quot;ではなく' s-maxage = 10 'です。送信者は引用文字列形式を生成してはいけません。</target>
        </trans-unit>
        <trans-unit id="ecc2f52fea65ff20c3fe05e836282a0ecfcb5341" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;) 

   The &quot;min-fresh&quot; request directive indicates that the client is
   willing to accept a response whose freshness lifetime is no less than
   its current age plus the specified time in seconds.  That is, the
   client wants a response that will still be fresh for at least the
   specified number of seconds.

   This directive uses the token form of the argument syntax: e.g.,
   'min-fresh=20' not 'min-fresh=&quot;20&quot;'.  A sender SHOULD NOT generate
   the quoted-string form.</source>
          <target state="translated">引数の構文：delta-seconds（&lt;a href=&quot;#section-1.2.1&quot;&gt;セクション1.2.1を&lt;/a&gt;参照） &quot;min-fresh&quot;リクエストディレクティブは、フレッシュネスライフタイムが現在の経過時間と指定された時間（秒単位）を足したもの以上の応答をクライアントが受け入れる用意があることを示します。つまり、クライアントは、少なくとも指定された秒数の間、まだ新鮮な応答を望んでいます。このディレクティブは、引数構文のトークン形式を使用します。たとえば、「min-fresh = 20」ではなく「min-fresh = 20」です。送信者は引用文字列形式を生成してはいけません。</target>
        </trans-unit>
        <trans-unit id="7c422841b7e3951946583038790545c4ed38481b" translate="yes" xml:space="preserve">
          <source>Articles</source>
          <target state="translated">Articles</target>
        </trans-unit>
        <trans-unit id="6927f0a6d5b5b7a8990677811eb75f75899710be" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;https://en.wikipedia.org/wiki/Defense_in_depth_(computing)&quot;&gt;defence-in-depth measure&lt;/a&gt;, however, it is possible to use &lt;em&gt;cookie prefixes&lt;/em&gt; to assert specific facts about the cookie. Two prefixes are available:</source>
          <target state="translated">ただし、&lt;a href=&quot;https://en.wikipedia.org/wiki/Defense_in_depth_(computing)&quot;&gt;多層防御の手段&lt;/a&gt;として、&lt;em&gt;Cookieプレフィックス&lt;/em&gt;を使用して&lt;em&gt;Cookie&lt;/em&gt;に関する特定の事実を表明することができます。2つのプレフィックスを使用できます。</target>
        </trans-unit>
        <trans-unit id="cbe5fd2ae86fbae88e539aaddac116ef8cfd88d6" translate="yes" xml:space="preserve">
          <source>As a header for a multipart body</source>
          <target state="translated">マルチパートボディのヘッダとして</target>
        </trans-unit>
        <trans-unit id="4db566644cc9fbe6a83b2c42804119cde6babd72" translate="yes" xml:space="preserve">
          <source>As a multipart document format, it consists of different parts, delimited by a boundary (a string starting with a double dash &lt;code&gt;'--'&lt;/code&gt;). Each part is its own entity with its own HTTP headers, &lt;a href=&quot;../headers/content-disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; for file uploading fields.</source>
          <target state="translated">マルチパートドキュメント形式として、それは境界（2つのダッシュ &lt;code&gt;'--'&lt;/code&gt; 始まる文字列）で区切られたさまざまな部分で構成されます。各パートは、ファイルアップロードフィールド用の独自のHTTPヘッダー、&lt;a href=&quot;../headers/content-disposition&quot;&gt; &lt;code&gt;Content-Disposition&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;を持つ独自のエンティティです。</target>
        </trans-unit>
        <trans-unit id="178623dce37dff8814bd5d7a8ed3496b3a38d15c" translate="yes" xml:space="preserve">
          <source>As a multipart document format, it consists of different parts, delimited by a boundary (a string starting with a double dash &lt;code&gt;--&lt;/code&gt;). Each part is its own entity with its own HTTP headers, &lt;a href=&quot;../headers/content-disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; for file uploading fields.</source>
          <target state="translated">マルチパートドキュメント形式として、境界（二重ダッシュ &lt;code&gt;--&lt;/code&gt; 始まる文字列）で区切られたさまざまなパートで構成されます。各部分は、ファイルアップロードフィールド用の独自のHTTPヘッダー、&lt;a href=&quot;../headers/content-disposition&quot;&gt; &lt;code&gt;Content-Disposition&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;を持つ独自のエンティティです。</target>
        </trans-unit>
        <trans-unit id="f8c3d44cd58fb8f4d3b3944cc4bb1a87c5213f6f" translate="yes" xml:space="preserve">
          <source>As a response header for the main body</source>
          <target state="translated">本体のレスポンスヘッダーとして</target>
        </trans-unit>
        <trans-unit id="fe358a19fe3a891412dc63b31012cfff7e86b53a" translate="yes" xml:space="preserve">
          <source>As above, but use proxy for local servers which are outside the firewall</source>
          <target state="translated">上記のように、ファイアウォールの外にあるローカルサーバーにはプロキシを使用します。</target>
        </trans-unit>
        <trans-unit id="21bb09d2ae7faa16332b73a9ff9b212546d3db2e" translate="yes" xml:space="preserve">
          <source>As an HTTP/1.x connection is serializing requests, even without any ordering, it can't be optimal without large enough available bandwidth. As a solution, browsers open several connections to each domain, sending parallel requests. Default was once 2 to 3 connections, but this has now increased to a more common use of 6 parallel connections. There is a risk of triggering &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOS_attack&quot;&gt;DoS&lt;/a&gt; protection on the server side if attempting more than this number.</source>
          <target state="translated">HTTP / 1.x接続は要求をシリアル化しているため、順序付けがなくても、十分な使用可能帯域幅がないと最適化できません。解決策として、ブラウザーは各ドメインへのいくつかの接続を開き、並列要求を送信します。デフォルトは2〜3接続でしたが、現在は6接続のより一般的な使用に増えています。この数を超えて試行すると、サーバー側で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOS_attack&quot;&gt;DoS&lt;/a&gt;保護がトリガーされるリスクがあります。</target>
        </trans-unit>
        <trans-unit id="ac2caa651e1c42338fb211a69aa78825a0cefdcd" translate="yes" xml:space="preserve">
          <source>As an ultimate form of protection, sites that want to never allow scripts to be executed can opt to globally disallow script execution.</source>
          <target state="translated">究極の保護手段として、スクリプトの実行を絶対に許可したくないサイトは、スクリプトの実行をグローバルに禁止することを選択することができます。</target>
        </trans-unit>
        <trans-unit id="9c5fdf8f8fd2b7a8d4e1fc4e882626af24bfa4c2" translate="yes" xml:space="preserve">
          <source>As compression brings significant performance improvements, it is recommended to activate it for all files, but already compressed ones like images, audio files and videos.</source>
          <target state="translated">圧縮はパフォーマンスの大幅な向上をもたらすので、画像、オーディオファイル、ビデオなどの圧縮済みのファイルを含め、すべてのファイルに対して圧縮を有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="07e3361838eead49089d2124cc5527647d9a433d" translate="yes" xml:space="preserve">
          <source>As compression works better on a specific kind of files, it usually provides nothing to compress them a second time. In fact, this is often counter productive as the cost of the overhead (algorithms usually need a dictionary that add to the initial size) can be higher than the extra gain in compression resulting in a larger file. Do not use the two following techniques for files in a compressed format.</source>
          <target state="translated">圧縮は特定の種類のファイルに対してよりよく機能するので、通常、2回目の圧縮は何も提供しません。実際には、オーバーヘッドのコスト(アルゴリズムは通常、初期サイズに追加する辞書を必要とする)が、より大きなファイルをもたらす圧縮の余分な利益よりも高くなる可能性があるため、これはしばしば逆効果です。圧縮された形式のファイルには、以下の2つのテクニックを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="81962caea1092807ea8b2efefdcc4ff1e7fe59fa" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;#section-2.3&quot;&gt;Section 2.3&lt;/a&gt;, intermediaries can serve a variety of
   roles in the processing of HTTP requests and responses.  Some
   intermediaries are used to improve performance or availability.
   Others are used for access control or to filter content.  Since an
   HTTP stream has characteristics similar to a pipe-and-filter
   architecture, there are no inherent limits to the extent an
   intermediary can enhance (or interfere) with either direction of the
   stream.

   An intermediary not acting as a tunnel MUST implement the Connection
   header field, as specified in &lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;, and exclude fields from
   being forwarded that are only intended for the incoming connection.

   An intermediary MUST NOT forward a message to itself unless it is
   protected from an infinite request loop.  In general, an intermediary
   ought to recognize its own server names, including any aliases, local
   variations, or literal IP addresses, and respond to such requests
   directly.</source>
          <target state="translated">&lt;a href=&quot;#section-2.3&quot;&gt;セクション2.3&lt;/a&gt;で説明されているように、仲介者はHTTP要求と応答の処理においてさまざまな役割を果たすことができます。一部の仲介者は、パフォーマンスまたは可用性を向上させるために使用されます。その他は、アクセス制御またはコンテンツのフィルタリングに使用されます。 HTTPストリームはパイプとフィルターのアーキテクチャに似た特性を持っているため、仲介者がストリームのいずれかの方向を強化（または干渉）できる範囲に固有の制限はありません。トンネルとして機能しない仲介者は、&lt;a href=&quot;#section-6.1&quot;&gt;セクション6.1で&lt;/a&gt;指定されているように、接続ヘッダーフィールドを実装する必要があります。、および着信接続のみを目的としたフィールドの転送を除外します。仲介者は、無限のリクエストループから保護されていない限り、メッセージを自身に転送してはなりません（MUST NOT）。一般に、仲介者は、エイリアス、ローカルバリエーション、またはリテラルIPアドレスを含む自身のサーバー名を認識し、そのような要求に直接応答する必要があります。</target>
        </trans-unit>
        <trans-unit id="f43788db4540801d9e9c8e83df8533bea5ea3e5a" translate="yes" xml:space="preserve">
          <source>As discussed above, caching servers will by default match future requests &lt;em&gt;only&lt;/em&gt; to requests with &lt;em&gt;exactly&lt;/em&gt; the same headers and header values. That means a request will be made to the origin and a new cache will be created for every slight variant that might be specified by different user-agents.</source>
          <target state="translated">上で説明したように、キャッシングサーバーはデフォルトで、将来のリクエストを&lt;em&gt;まったく&lt;/em&gt;同じヘッダーとヘッダー値を持つリクエストに&lt;em&gt;のみ&lt;/em&gt;一致させます。つまり、オリジンに対してリクエストが行われ、さまざまなユーザーエージェントによって指定される可能性のあるわずかなバリアントごとに新しいキャッシュが作成されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d3139df0524707e53ec9e8cd4a5811fa59a90a9" translate="yes" xml:space="preserve">
          <source>As for MIME types of audio or video files, they typically specify the container format (file type). The optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter&quot;&gt;codecs parameter&lt;/a&gt; can be added to the MIME type to further specify which codecs to use and what options were used to encode the media, such as codec profile, level, or other such information.</source>
          <target state="translated">オーディオまたはビデオファイルのMIMEタイプについては、通常、コンテナ形式（ファイルタイプ）を指定します。オプションの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter&quot;&gt;コーデックパラメータ&lt;/a&gt;をMIMEタイプに追加して、使用するコーデックと、コーデックプロファイル、レベル、またはその他のそのような情報など、メディアのエンコードに使用されたオプションをさらに指定できます。</target>
        </trans-unit>
        <trans-unit id="cdc03353444641fab750adbd74e2bf1df56aa6e5" translate="yes" xml:space="preserve">
          <source>As for the screen size, simply use &lt;em&gt;window.innerWidth&lt;/em&gt; and window.addEventListener(&quot;resize&quot;, function(){ /*refresh screen size dependent things*/ }). What you want to do for screen size is not slash off information on smaller screens. That will only annoy people because it will force them to use the desktop version. Rather, try to have fewer columns of information in a longer page on smaller screens while having more columns with a shorter page on larger screen sizes. This effect can be easily achieved using CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox&quot;&gt;flexboxes&lt;/a&gt;, sometimes with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Floats&quot;&gt;floats&lt;/a&gt; as a partial fallback.</source>
          <target state="translated">画面サイズについては、&lt;em&gt;window.innerWidth&lt;/em&gt;とwindow.addEventListener（ &quot;resize&quot;、function（）{/ *画面サイズに依存するものを更新する* /}）を使用するだけです。画面サイズに対してやりたいことは、小さい画面の情報を切り落とすことではありません。それは彼らにデスクトップバージョンを使用することを強制するので、それは人々を苛立たせるだけです。むしろ、小さい画面では長いページの情報の列を少なくし、大きい画面サイズでは短いページの列を増やしてください。この効果は、CSS&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox&quot;&gt;フレックスボックス&lt;/a&gt;を使用して簡単に実現できます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Floats&quot;&gt;フロート&lt;/a&gt;を部分的なフォールバックとして使用することもあります。</target>
        </trans-unit>
        <trans-unit id="0808a49d5ce5e6736477468b862009c7c3fdd1ef" translate="yes" xml:space="preserve">
          <source>As introduced in &lt;a href=&quot;#section-8.7&quot;&gt;Section 8.7&lt;/a&gt;, extra information on error conditions
   can be included in the body of many status responses.  This section
   makes requirements on the use of the error body mechanism and
   introduces a number of precondition and postcondition codes.

   A &quot;precondition&quot; of a method describes the state of the server that
   must be true for that method to be performed.  A &quot;postcondition&quot; of a
   method describes the state of the server that must be true after that
   method has been completed.

   Each precondition and postcondition has a unique XML element
   associated with it.  In a 207 Multi-Status response, the XML element
   MUST appear inside an 'error' element in the appropriate 'propstat or
   'response' element depending on whether the condition applies to one
   or more properties or to the resource as a whole.  In all other error
   responses where this specification's 'error' body is used, the
   precondition/postcondition XML element MUST be returned as the child
   of a top-level 'error' element in the response body, unless otherwise
   negotiated by the request, along with an appropriate response status.
   The most common response status codes are 403 (Forbidden) if the
   request should not be repeated because it will always fail, and 409
   (Conflict) if it is expected that the user might be able to resolve
   the conflict and resubmit the request.  The 'error' element MAY
   contain child elements with specific error information and MAY be
   extended with any custom child elements.

   This mechanism does not take the place of using a correct numeric
   status code as defined here or in HTTP, because the client must
   always be able to take a reasonable course of action based only on
   the numeric code.  However, it does remove the need to define new
   numeric codes.  The new machine-readable codes used for this purpose
   are XML elements classified as preconditions and postconditions, so
   naturally, any group defining a new condition code can use their own
   namespace.  As always, the &quot;DAV:&quot; namespace is reserved for use by
   IETF-chartered WebDAV working groups. 

   A server supporting this specification SHOULD use the XML error
   whenever a precondition or postcondition defined in this document is
   violated.  For error conditions not specified in this document, the
   server MAY simply choose an appropriate numeric status and leave the
   response body blank.  However, a server MAY instead use a custom
   condition code and other supporting text, because even when clients
   do not automatically recognize condition codes, they can be quite
   useful in interoperability testing and debugging.

   Example - Response with precondition code

   &amp;gt;&amp;gt;Response

      HTTP/1.1 423 Locked
      Content-Type: application/xml; charset=&quot;utf-8&quot;
      Content-Length: xxxx

      &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;
      &amp;lt;D:error xmlns:D=&quot;DAV:&quot;&amp;gt;
        &amp;lt;D:lock-token-submitted&amp;gt;
          &amp;lt;D:href&amp;gt;/workspace/webdav/&amp;lt;/D:href&amp;gt;
        &amp;lt;/D:lock-token-submitted&amp;gt;
      &amp;lt;/D:error&amp;gt;

   In this example, a client unaware of a depth-infinity lock on the
   parent collection &quot;/workspace/webdav/&quot; attempted to modify the
   collection member &quot;/workspace/webdav/proposal.doc&quot;.

   Some other useful preconditions and postconditions have been defined
   in other specifications extending WebDAV, such as [&lt;a href=&quot;https://tools.ietf.org/html/rfc3744&quot;&gt;RFC3744&lt;/a&gt;] (see
   particularly &lt;a href=&quot;#section-7.1.1&quot;&gt;Section 7.1.1&lt;/a&gt;), [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;], and [&lt;a href=&quot;https://tools.ietf.org/html/rfc3648&quot;&gt;RFC3648&lt;/a&gt;].

   All these elements are in the &quot;DAV:&quot; namespace.  If not specified
   otherwise, the content for each condition's XML element is defined to
   be empty.


   Name:  lock-token-matches-request-uri

   Use with:  409 Conflict

   Purpose:  (precondition) -- A request may include a Lock-Token header
      to identify a lock for the UNLOCK method.  However, if the
      Request-URI does not fall within the scope of the lock identified
      by the token, the server SHOULD use this error.  The lock may have
      a scope that does not include the Request-URI, or the lock could
      have disappeared, or the token may be invalid. 

   Name:  lock-token-submitted (precondition)

   Use with:  423 Locked

   Purpose:  The request could not succeed because a lock token should
      have been submitted.  This element, if present, MUST contain at
      least one URL of a locked resource that prevented the request.  In
      cases of MOVE, COPY, and DELETE where collection locks are
      involved, it can be difficult for the client to find out which
      locked resource made the request fail -- but the server is only
      responsible for returning one such locked resource.  The server
      MAY return every locked resource that prevented the request from
      succeeding if it knows them all.

   &amp;lt;!ELEMENT lock-token-submitted (href+) &amp;gt;


   Name:  no-conflicting-lock (precondition)

   Use with:  Typically 423 Locked

   Purpose:  A LOCK request failed due the presence of an already
      existing conflicting lock.  Note that a lock can be in conflict
      although the resource to which the request was directed is only
      indirectly locked.  In this case, the precondition code can be
      used to inform the client about the resource that is the root of
      the conflicting lock, avoiding a separate lookup of the
      &quot;lockdiscovery&quot; property.

   &amp;lt;!ELEMENT no-conflicting-lock (href)* &amp;gt;


   Name:  no-external-entities

   Use with:  403 Forbidden

   Purpose:  (precondition) -- If the server rejects a client request
      because the request body contains an external entity, the server
      SHOULD use this error.


   Name:  preserved-live-properties

   Use with:  409 Conflict

   Purpose:  (postcondition) -- The server received an otherwise-valid
      MOVE or COPY request, but cannot maintain the live properties with
      the same behavior at the destination.  It may be that the server 

      only supports some live properties in some parts of the
      repository, or simply has an internal error.


   Name:  propfind-finite-depth

   Use with:  403 Forbidden

   Purpose:  (precondition) -- This server does not allow infinite-depth
      PROPFIND requests on collections.


   Name:  cannot-modify-protected-property

   Use with:  403 Forbidden

   Purpose:  (precondition) -- The client attempted to set a protected
      property in a PROPPATCH (such as DAV:getetag).  See also
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3253#section-3.12&quot;&gt;[RFC3253], Section&amp;nbsp;3.12&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#section-8.7&quot;&gt;セクション8.7で&lt;/a&gt;紹介したとおり、エラー状態に関する追加情報を多くのステータス応答の本文に含めることができます。このセクションでは、エラー本文メカニズムの使用に関する要件を作成し、多数の前提条件コードと事後条件コードを紹介します。メソッドの「前提条件」は、そのメソッドが実行されるために真でなければならないサーバーの状態を示します。メソッドの「事後条件」は、そのメソッドが完了した後に真でなければならないサーバーの状態を示します。前提条件と事後条件には、それぞれ固有のXML要素が関連付けられています。 207マルチステータスレスポンスでは、XML要素は適切な「propstat」または「response」の「error」要素内に出現する必要があります条件が1つ以上のプロパティに適用されるか、リソース全体に適用されるかに応じて、要素。この仕様の「エラー」本文が使用されている他のすべてのエラー応答では、事前条件/事後条件XML要素は、リクエストによって交渉されない限り、応答本文の最上位の「エラー」要素の子として返されなければなりません。適切な応答ステータス。最も一般的な応答ステータスコードは、リクエストが常に失敗するために繰り返さない場合は403（禁止）、ユーザーが競合を解決してリクエストを再送信できると予想される場合は409（競合）です。 「エラー」要素は、特定のエラー情報を持つ子要素を含む場合があり、カスタムの子要素で拡張される場合があります。ここでは、またはHTTPで定義されている正しい数値ステータスコードを使用する代わりに、このメカニズムは使用されません。これは、クライアントが常に数値コードのみに基づいて適切な一連のアクションを実行できる必要があるためです。ただし、新しい数値コードを定義する必要はありません。この目的で使用される新しい機械可読コードは、前提条件と事後条件に分類されるXML要素であるため、当然、新しい条件コードを定義するグループは、独自の名前空間を使用できます。いつものように、「DAV：」名前空間は、IETFでチャーターされたWebDAVワーキンググループが使用するために予約されています。この仕様をサポートするサーバーは、このドキュメントで定義されている前提条件または事後条件に違反している場合は常にXMLエラーを使用する必要があります（SHOULD）。このドキュメントで指定されていないエラー条件については、サーバーは、適切な数値ステータスを選択し、応答本文を空白のままにしてもよい（MAY）。ただし、クライアントは条件コードを自動的に認識しなくても、相互運用性のテストとデバッグに非常に役立つため、サーバーは代わりにカスタム条件コードと他のサポートテキストを使用する場合があります。例-前提条件コードを含む応答&amp;gt;&amp;gt;応答HTTP / 1.1 423ロックされたコンテンツタイプ：application / xml; charset = &quot;utf-8&quot; Content-Length：xxxx &amp;lt;？xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;？&amp;gt; &amp;lt;D：error xmlns：D = &quot;DAV：&quot;&amp;gt; &amp;lt;D：lock-token-submitted &amp;gt; &amp;lt;D：href&amp;gt; / workspace / webdav / &amp;lt;/ D：href&amp;gt; &amp;lt;/ D：lock-token-submitted&amp;gt; &amp;lt;/ D：error&amp;gt;この例では、親コレクション &quot;/ workspace / webdav /&quot;の深さ無限ロックを認識していないクライアントが、コレクションメンバー &quot;/workspace/webdav/proposal.doc&quot;を変更しようとしました。他のいくつかの有用な前提条件と事後条件は、WebDAVを拡張する他の仕様で定義されています。&lt;a href=&quot;https://tools.ietf.org/html/rfc3744&quot;&gt;RFC3744&lt;/a&gt; ]（特に&lt;a href=&quot;#section-7.1.1&quot;&gt;セクション7.1.1を&lt;/a&gt;参照）、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt; ]、および[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3648&quot;&gt;RFC3648&lt;/a&gt;]。これらの要素はすべて「DAV：」名前空間にあります。特に指定がない場合、各条件のXML要素のコンテンツは空であると定義されます。名前：lock-token-matches-request-uri使用：409競合目的：（前提条件）-リクエストには、UNLO​​CKメソッドのロックを識別するためのLock-Tokenヘッダーが含まれる場合があります。ただし、Request-URIがトークンで識別されるロックの範囲内にない場合、サーバーはこのエラーを使用する必要があります（SHOULD）。ロックにRequest-URIを含まないスコープがあるか、ロックが消えたか、トークンが無効である可能性があります。名前：lock-token-submitted（前提条件）での使用：423 Locked目的：ロックトークンが送信されている必要があるため、要求は成功しませんでした。この要素が存在する場合、要求を妨げたロックされたリソースのURLを少なくとも1つ含める必要があります。コレクションロックが関係するMOVE、COPY、DELETEの場合、どのロックされたリソースがリクエストを失敗させたかをクライアントが見つけるのは難しい場合がありますが、サーバーはそのようなロックされたリソースを1つだけ返す責任があります。サーバーは、すべてのリソースを知っている場合、リクエストが成功しなかったすべてのロックされたリソースを返す場合があります。 &amp;lt;！ELEMENT lock-token-submitted（href +）&amp;gt;名前：no-conflicting-lock（前提条件）用途：通常423 Locked目的：既存の競合するロックが存在するため、LOCK要求が失敗しました。リクエストの送信先のリソースは間接的にのみロックされますが、ロックが競合する可能性があることに注意してください。この場合、前提条件コードを使用して、競合するロックのルートであるリソースについてクライアントに通知し、「lockdiscovery」プロパティの個別のルックアップを回避できます。 &amp;lt;！ELEMENT no-conflicting-lock（href）*&amp;gt;名前：no-external-entities用途：403禁止目的：（前提条件）-リクエストの本文に外部エンティティが含まれているためにサーバーがクライアントリクエストを拒否した場合、サーバーこのエラーを使用する必要があります。名前：プリザーブドライブプロパティ使用方法：409競合目的：（事後条件）-サーバーはそれ以外の場合は有効なMOVEまたはCOPYリクエストを受信しましたが、宛先で同じ動作をするライブプロパティを維持できません。サーバーがリポジトリの一部のライブプロパティのみをサポートしている可能性があります。または単に内部エラーがあります。名前：propfind-finite-depth使用方法：403禁止目的：（前提条件）-このサーバーでは、コレクションに対する無限深度のPROPFIND要求は許可されません。名前：cannot-modify-protected-property使用方法：403禁止目的：（前提条件）-クライアントは、PROPPATCH（DAV：getetagなど）で保護されたプロパティを設定しようとしました。こちらもご覧ください &lt;a href=&quot;https://tools.ietf.org/html/rfc3253#section-3.12&quot;&gt;[RFC3253]、セクション3.12&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e578d6e0863762b2b392e523d033651de5872ee8" translate="yes" xml:space="preserve">
          <source>As is the case for images, HTML doesn't mandate that web browsers support any specific file and codec types for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, so it's important to consider your target audience and the range of browsers (and versions of those browsers) they may be using when choosing the file type and codecs to use for media.</source>
          <target state="translated">画像の場合と同様に、HTMLでは、Webブラウザが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素と&amp;lt;video&amp;gt;要素の特定のファイルとコーデックタイプをサポートすることを義務付けていないため、対象となるオーディエンスとブラウザの範囲（およびのバージョン）を考慮することが重要です。それらのブラウザ）メディアに使用するファイルタイプとコーデックを選択するときに使用している可能性があります。</target>
        </trans-unit>
        <trans-unit id="2fe77ba78e510c9166dbea1c2b28c359c08ac3d8" translate="yes" xml:space="preserve">
          <source>As long as the &lt;code&gt;identity&lt;/code&gt; value, meaning no encoding, is not explicitly forbidden, by an &lt;code&gt;identity;q=0&lt;/code&gt; or a &lt;code&gt;*;q=0&lt;/code&gt; without another explicitly set value for identity, the server must never send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Not Acceptable&lt;/code&gt; error.</source>
          <target state="translated">限りとして &lt;code&gt;identity&lt;/code&gt; 何のエンコーディングを意味しない、値、明示的で、禁止されていない &lt;code&gt;identity;q=0&lt;/code&gt; または &lt;code&gt;*;q=0&lt;/code&gt; でのアイデンティティのための別の明示的に設定した値のない、サーバーが送り返してはなりません&lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Not Acceptable&lt;/code&gt; エラーが。</target>
        </trans-unit>
        <trans-unit id="74200951f8f3fa2318cb0493483bd1ef3add00e6" translate="yes" xml:space="preserve">
          <source>As long as the cache is not stale, no requests are issued at all. But once it has become stale, this is mostly controlled by the &lt;a href=&quot;headers/cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header, the client doesn't use the cached value directly but issues a &lt;em&gt;conditional request&lt;/em&gt;. The value of the validator is used as a parameter of the &lt;a href=&quot;headers/if-modified-since&quot;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="translated">キャッシュが古くない限り、リクエストはまったく発行されません。ただし、古くなった場合、これは主に&lt;a href=&quot;headers/cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt;ヘッダーによって制御され、クライアントはキャッシュされた値を直接使用せず、&lt;em&gt;条件付きリクエストを&lt;/em&gt;発行し&lt;em&gt;ます&lt;/em&gt;。バリデーターの値は、&lt;a href=&quot;headers/if-modified-since&quot;&gt; &lt;code&gt;If-Modified-Since&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;headers/if-match&quot;&gt; &lt;code&gt;If-Match&lt;/code&gt; &lt;/a&gt;ヘッダーのパラメーターとして使用されます。</target>
        </trans-unit>
        <trans-unit id="85a5d6853183730de2675bcbb36ff69a7b45767b" translate="yes" xml:space="preserve">
          <source>As of Firefox 68, &lt;code&gt;https&lt;/code&gt; pages are not permitted to access &lt;code&gt;http://localhost&lt;/code&gt;, although this may be changed by &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1488740&quot;&gt;Bug 1488740&lt;/a&gt;.</source>
          <target state="translated">Firefox 68の時点では、 &lt;code&gt;https&lt;/code&gt; ページは &lt;code&gt;http://localhost&lt;/code&gt; にアクセスできませんが、これは&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1488740&quot;&gt;バグ1488740&lt;/a&gt;によって変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="39de7dbf0fcbd56548611790fd4f9d1859fcff38" translate="yes" xml:space="preserve">
          <source>As of HTTP/1.1, the connection is no longer closed after completing the third phase, and the client is now granted a further request: this means the second and third phases can now be performed any number of times.</source>
          <target state="translated">HTTP/1.1 では、第三段階を完了した後に接続が閉じられることはなくなり、クライアントはさらなるリクエストを受けることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="3267856a66c8d58fa6c67469981a2b6478095c6a" translate="yes" xml:space="preserve">
          <source>As of June 2019, the &lt;a href=&quot;https://wicg.github.io/picture-in-picture/#feature-policy&quot;&gt;spec draft&lt;/a&gt; and &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=806249#c17&quot;&gt;Google Chrome&lt;/a&gt; set default allow list to &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">2019年6月の時点で、&lt;a href=&quot;https://wicg.github.io/picture-in-picture/#feature-policy&quot;&gt;スペックドラフト&lt;/a&gt;と&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=806249#c17&quot;&gt;GoogleChrome&lt;/a&gt;はデフォルトの許可リストを &lt;code&gt;*&lt;/code&gt; に設定しています。</target>
        </trans-unit>
        <trans-unit id="06cf4063f7dac467fae6879bda8095e3ff5808d1" translate="yes" xml:space="preserve">
          <source>As seen above, the &lt;code&gt;noreferrer&lt;/code&gt; link relation is written without a dash &amp;mdash; &lt;code&gt;noreferrer&lt;/code&gt;. When the referrer policy is specified for the entire document with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; element, it's written &lt;em&gt;with&lt;/em&gt; a dash: &lt;code&gt;&amp;lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">上で見たように、 &lt;code&gt;noreferrer&lt;/code&gt; リンク関係はダッシュなしで書かれています &lt;code&gt;noreferrer&lt;/code&gt; 。リファラポリシーが持つ文書全体を指定した場合&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; &lt;/a&gt;要素、それが書かれ&lt;em&gt;て&lt;/em&gt;：ダッシュ &lt;code&gt;&amp;lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10737eb038a18f448d914366beb682e160b36994" translate="yes" xml:space="preserve">
          <source>As seen earlier, in most cases, looking for the rendering engine is a better way to go. This will help to not exclude lesser known browsers. Browsers sharing a common rendering engine will display a page in the same way: it is often a fair assumption that what will work in one will work in the other.</source>
          <target state="translated">先に見たように、ほとんどの場合、レンダリングエンジンを探すのがベターです。そうすることで、あまり知られていないブラウザを除外しないようにすることができます。共通のレンダリングエンジンを共有しているブラウザは同じようにページを表示します。</target>
        </trans-unit>
        <trans-unit id="78c188cf3444dcabae8c9d4a1f5961a9553d9194" translate="yes" xml:space="preserve">
          <source>As several representations of a given resource are sent, shared caches are less efficient and server implementations are more complex.</source>
          <target state="translated">与えられたリソースの複数の表現が送信されるため、共有キャッシュは効率が悪く、サーバーの実装はより複雑になります。</target>
        </trans-unit>
        <trans-unit id="7377d313a5ee9a8718b11c2ecd95fc7f352f8569" translate="yes" xml:space="preserve">
          <source>As the above code demonstrates, there is &lt;strong&gt;always &lt;/strong&gt;a way to test browser support on anything, no exceptions. There &lt;strong&gt;never &lt;/strong&gt;any reason to check the user string for this.</source>
          <target state="translated">上記のコードが示すように、例外なく、&lt;strong&gt;常に&lt;/strong&gt;ブラウザーサポートをテストする方法があります。これについてユーザー文字列を確認する理由はあり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="bd630c3d2c38cd17c79f057386bd9dee90389bcb" translate="yes" xml:space="preserve">
          <source>As the above code demonstrates, there is &lt;strong&gt;always&lt;/strong&gt; a way to test browser support without user agent sniffing. There is &lt;strong&gt;never&lt;/strong&gt; any reason to check the user agent string for this.</source>
          <target state="translated">上記のコードが示すように、ユーザーエージェントをスニッフィングせずにブラウザサポートをテストする方法は&lt;strong&gt;常に&lt;/strong&gt;あります。これについてユーザーエージェント文字列をチェックする理由はあり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="3b1896c32232ae10635b0e9d7b6084cf07068dbb" translate="yes" xml:space="preserve">
          <source>As the name implies, a reverse proxy does the opposite of what a forward proxy does: A forward proxy acts in behalf of clients (or requesting hosts), a reverse proxy acts in behalf of servers. Forward proxies can hide the identities of clients whereas reverse proxies can hide the identities of servers. Reverse proxies have several use cases, a few are:</source>
          <target state="translated">その名が示すように、リバースプロキシはフォワードプロキシが行うこととは逆のことを行います。フォワードプロキシはクライアント(あるいはリクエストするホスト)に代わって 動作し、リバースプロキシはサーバに代わって動作します。フォワードプロキシはクライアントの身元を隠すことができるのに対し、リバースプロキシは サーバの身元を隠すことができる。リバースプロキシにはいくつかのユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="40dbdc58bd286d3f6c3860a41b01365fe8a90574" translate="yes" xml:space="preserve">
          <source>As the name implies, a reverse proxy does the opposite of what a forward proxy does: A forward proxy acts on behalf of clients (or requesting hosts). Forward proxies can hide the identities of clients whereas reverse proxies can hide the identities of servers. Reverse proxies have several use cases, a few are:</source>
          <target state="translated">その名が示すように、リバースプロキシはフォワードプロキシがすることとは逆のことを する。フォワードプロキシはクライアント(あるいはリクエストするホスト)に代わって 動作します。フォワードプロキシはクライアントの身元を隠すことができるのに対し、 リバースプロキシはサーバの身元を隠すことができる。リバースプロキシにはいくつかのユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="4fdf182c8fbdda48a83dae747cba9e04f53c39b9" translate="yes" xml:space="preserve">
          <source>As the user ID and password are passed over the network as clear text (it is base64 encoded, but base64 is a reversible encoding), the basic authentication scheme &lt;strong&gt;is not secure&lt;/strong&gt;. HTTPS/TLS should be used with basic authentication. Without these additional security enhancements, basic authentication should not be used to protect sensitive or valuable information.</source>
          <target state="translated">ユーザーIDとパスワードはクリアテキストとしてネットワークを介して渡されるため（base64でエンコードされていますが、base64は可逆エンコードです）、基本認証スキーム&lt;strong&gt;は安全ではありません&lt;/strong&gt;。 HTTPS / TLSは基本認証で使用する必要があります。これらの追加のセキュリティ強化がなければ、機密情報や貴重な情報を保護するために基本認証を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="444c366dc18e9c8a26e52d6d891adf57495dae72" translate="yes" xml:space="preserve">
          <source>As the user ID and password are passed over the network as clear text (it is base64 encoded, but base64 is a reversible encoding), the basic authentication scheme is not secure. HTTPS / TLS should be used in conjunction with basic authentication. Without these additional security enhancements, basic authentication should not be used to protect sensitive or valuable information.</source>
          <target state="translated">ユーザIDとパスワードはクリアテキストとしてネットワーク上に渡されるため(base64エンコードされていますが、base64は可逆的なエンコードです)、基本認証のスキームは安全ではありません。HTTPS/TLS を基本認証と併用する必要があります。これらの追加のセキュリティ強化がない場合、基本認証は機密情報や貴重な情報を保護するために使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="a6c3ae8778eda348525a5dd269ea2b796710e51f" translate="yes" xml:space="preserve">
          <source>As there is no uniformity of the different part of the user agent string, this is the tricky part.</source>
          <target state="translated">ユーザーエージェント文字列の異なる部分の統一性がないので、これが厄介なところです。</target>
        </trans-unit>
        <trans-unit id="bc6ee085f0ae97c37cea4781b55609b159806f1f" translate="yes" xml:space="preserve">
          <source>As this policy is expressed via a &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;response header&lt;/a&gt;&lt;/em&gt;, the actual request is not prevented&amp;mdash;rather, the browser prevents the &lt;em&gt;result&lt;/em&gt; from being leaked by stripping the response body.</source>
          <target state="translated">このポリシーは&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;応答ヘッダー&lt;/a&gt;&lt;/em&gt;を介して表現されるため、実際の要求は防止されません。むしろ、ブラウザーは応答本文を削除することで&lt;em&gt;結果&lt;/em&gt;がリークされるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="5ddb1d34141f0f1a53b5fad16b4bdbb2de512647" translate="yes" xml:space="preserve">
          <source>As well as styles that are applied in JavaScript by setting the &lt;code&gt;style&lt;/code&gt; attribute directly, or by setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText&quot;&gt;&lt;code&gt;cssText&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">また、 &lt;code&gt;style&lt;/code&gt; 属性を直接設定するか、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText&quot;&gt; &lt;code&gt;cssText&lt;/code&gt; を&lt;/a&gt;設定することにより、JavaScriptで適用されるスタイル：</target>
        </trans-unit>
        <trans-unit id="17fdcd20e92320a37954cc0aaa2c4492b1c32a15" translate="yes" xml:space="preserve">
          <source>As well as styles that are applied in Javascript by setting the &lt;code&gt;style&lt;/code&gt; attribute directly, or by setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText&quot;&gt;&lt;code&gt;cssText&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">同様に、 &lt;code&gt;style&lt;/code&gt; 属性を直接設定するか、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText&quot;&gt; &lt;code&gt;cssText&lt;/code&gt; を&lt;/a&gt;設定することにより、JavaScriptで適用されるスタイル：</target>
        </trans-unit>
        <trans-unit id="d02d7f17a2dcce723df40692e0f522ac350d18cf" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XSS&quot;&gt;XSS&lt;/a&gt;, input filtering is important.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XSS&quot;&gt;XSS&lt;/a&gt;と同様に、入力フィルタリングは重要です。</target>
        </trans-unit>
        <trans-unit id="2ea5b0bb9c6a34b711f367b6b2d6d55f8f5e966a" translate="yes" xml:space="preserve">
          <source>As you can see, the report includes the full path to the violating resource in &lt;code&gt;blocked-uri&lt;/code&gt;. This is not always the case. For example, if the &lt;code&gt;signup.html&lt;/code&gt; attempted to load CSS from &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt;, the browser would &lt;em&gt;not&lt;/em&gt; include the full path, but only the origin (&lt;code&gt;http://anothercdn.example.com&lt;/code&gt;). The CSP specification &lt;a href=&quot;http://www.w3.org/TR/CSP/#security-violation-reports&quot;&gt;gives an explanation&lt;/a&gt; of this odd behaviour. In summary, this is done to prevent leaking sensitive information about cross-origin resources.</source>
          <target state="translated">ご覧のとおり、レポートには、 &lt;code&gt;blocked-uri&lt;/code&gt; の違反リソースへのフルパスが含まれています。これは常に当てはまるわけではありません。たとえば場合、 &lt;code&gt;signup.html&lt;/code&gt; はから負荷CSSにしようとし &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt; 、ブラウザは考え&lt;em&gt;ていない&lt;/em&gt;完全なパスが含まれていますが、唯一の起源（ &lt;code&gt;http://anothercdn.example.com&lt;/code&gt; ）。CSP仕様&lt;a href=&quot;http://www.w3.org/TR/CSP/#security-violation-reports&quot;&gt;は、&lt;/a&gt;この奇妙な動作の説明を提供します。要約すると、これは、クロスオリジンリソースに関する機密情報の漏洩を防ぐために行われます。</target>
        </trans-unit>
        <trans-unit id="090adf7d66d69b3cc82ada8155a31b95b1d5cc05" translate="yes" xml:space="preserve">
          <source>As you can see, the report includes the full path to the violating resource in &lt;code&gt;blocked-uri&lt;/code&gt;. This is not always the case. For example, when the &lt;code&gt;signup.html&lt;/code&gt; would attempt to load CSS from &lt;a href=&quot;http://anothercdn.example.com/stylesheet.css&quot;&gt;&lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt;&lt;/a&gt;, the browser would &lt;em&gt;not&lt;/em&gt; include the full path but only the origin (&lt;code&gt;http://anothercdn.example.com&lt;/code&gt;). The CSP specification &lt;a href=&quot;http://www.w3.org/TR/CSP/#security-violation-reports&quot;&gt;gives an explanation&lt;/a&gt; of this odd behaviour. In summary, this is done to prevent leaking sensitive information about cross-origin resources.</source>
          <target state="translated">ご覧のとおり、レポートには、 &lt;code&gt;blocked-uri&lt;/code&gt; 内の違反リソースへの完全パスが含まれています。これは常にそうであるとは限りません。たとえば、とき &lt;code&gt;signup.html&lt;/code&gt; がから負荷CSSしようと&lt;a href=&quot;http://anothercdn.example.com/stylesheet.css&quot;&gt; &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt; &lt;/a&gt;ブラウザがなり、&lt;em&gt;ない&lt;/em&gt;完全なパスを含めるだけ原点（ &lt;code&gt;http://anothercdn.example.com&lt;/code&gt; ）。 CSP仕様で&lt;a href=&quot;http://www.w3.org/TR/CSP/#security-violation-reports&quot;&gt;は、&lt;/a&gt;この奇妙な動作について説明しています。要約すると、これはクロスオリジンリソースに関する機密情報の漏洩を防ぐために行われます。</target>
        </trans-unit>
        <trans-unit id="ec92124be22f59c3429bab49ee1de958a60686bc" translate="yes" xml:space="preserve">
          <source>As you can see, the report includes the full path to the violating resource in &lt;code&gt;blocked-uri&lt;/code&gt;. This is not always the case. For example, when the &lt;code&gt;signup.html&lt;/code&gt; would attempt to load CSS from &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt;, the browser would &lt;em&gt;not&lt;/em&gt; include the full path but only the origin (&lt;code&gt;http://anothercdn.example.com&lt;/code&gt;). This is done to prevent leaking sensitive information about cross-origin resources.</source>
          <target state="translated">ご覧のとおり、レポートには、 &lt;code&gt;blocked-uri&lt;/code&gt; 内の違反リソースへの完全パスが含まれています。これは常にそうであるとは限りません。たとえば、とき &lt;code&gt;signup.html&lt;/code&gt; がから負荷CSSしようと &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt; ブラウザがなり、&lt;em&gt;ない&lt;/em&gt;完全なパスを含めるだけ原点（ &lt;code&gt;http://anothercdn.example.com&lt;/code&gt; ）。これは、クロスオリジンリソースに関する機密情報の漏洩を防ぐために行われます。</target>
        </trans-unit>
        <trans-unit id="5181c200a5bc4c79427bf4adcaa2c1205fdeba26" translate="yes" xml:space="preserve">
          <source>Asserts that a cookie must not be sent with cross-origin requests, providing some protection against cross-site request forgery attacks (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;).</source>
          <target state="translated">クロスオリジンリクエストでCookieを送信してはならないことを表明し、クロスサイトリクエストフォージェリ攻撃（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;）に対する保護を提供します。</target>
        </trans-unit>
        <trans-unit id="8d2597783f8778af171536ba979953d5e5baf049" translate="yes" xml:space="preserve">
          <source>Associates a specific cryptographic public key with a certain web server to decrease the risk of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MITM&quot;&gt;MITM&lt;/a&gt; attacks with forged certificates.</source>
          <target state="translated">特定の暗号化公開鍵を特定のWebサーバーに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MITM&quot;&gt;関連付けて&lt;/a&gt;、偽造された証明書によるMITM攻撃のリスクを軽減します。</target>
        </trans-unit>
        <trans-unit id="4423c564a6dd958705092c9f3f6196baaeb909f9" translate="yes" xml:space="preserve">
          <source>At this point, a typical request and response looked like this:</source>
          <target state="translated">この時点で、典型的なリクエストとレスポンスはこんな感じでした。</target>
        </trans-unit>
        <trans-unit id="640a65ab124efd895e7362db6ab879724f9f4606" translate="yes" xml:space="preserve">
          <source>Atom Entry and Feed Documents can contain XML Digital Signatures
   [&lt;a href=&quot;#ref-REC-xmldsig-core&quot;&gt;REC-xmldsig-core&lt;/a&gt;] and can be encrypted using XML Encryption
   [&lt;a href=&quot;#ref-REC-xmlenc-core&quot;&gt;REC-xmlenc-core&lt;/a&gt;] as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-5&quot;&gt;Section&amp;nbsp;5 of [RFC4287]&lt;/a&gt;.  Handling
   of signatures and encrypted elements in Atom documents is discussed
   in Sections &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt; and &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt; of [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].

   Neither servers nor clients are under any obligation to support
   encryption and digital signature of Entries or Feeds, although it is
   certainly possible that in some installations, clients or servers
   might require signing or encrypting of the documents exchanged in the
   Atom Protocol.

   Because servers are allowed (and in some cases, expected) to modify
   the contents of an Entry Document before publishing it, signatures
   within an entry are only likely to be useful to the server to which
   the entry is being sent.  Clients cannot assume that the signature
   will be valid when viewed by a third party, or even that the server
   will publish the client's signature.

   A server is allowed to strip client-applied signatures, to strip
   client-applied signatures and then re-sign with its own public key,
   and to oversign an entry with its own public key.  The meaning to a
   third party of a signature applied by a server is the same as a
   signature from anyone, as described in [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].  It is RECOMMENDED
   that a server that is aware that it has changed any part of an Entry
   Document that was signed by the client should strip that signature
   before publishing the entry in order to prevent third parties from
   trying to interpret a signature that cannot be validated.</source>
          <target state="translated">Atomエントリおよびフィードドキュメントには、XMLデジタル署名[ &lt;a href=&quot;#ref-REC-xmldsig-core&quot;&gt;REC-xmldsig-core&lt;/a&gt; ]を含めることができ&lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-5&quot;&gt;、[RFC4287]のセクション5で&lt;/a&gt;指定されているように、XML暗号化[ &lt;a href=&quot;#ref-REC-xmlenc-core&quot;&gt;REC-xmlenc-core&lt;/a&gt; ] を使用して暗号化できます。Atomドキュメントの署名および暗号化された要素の処理については、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287の&lt;/a&gt;セクション&lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;および&lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;で説明されています。]。サーバーもクライアントも、エントリやフィードの暗号化とデジタル署名をサポートする義務はありませんが、一部のインストールでは、クライアントまたはサーバーがAtomプロトコルで交換されるドキュメントの署名または暗号化を必要とする可能性があります。サーバーはエントリドキュメントの内容を公開前に変更することが許可されている（場合によっては予期される）ため、エントリ内の署名は、エントリの送信先のサーバーでのみ有用である可能性があります。クライアントは、サードパーティが表示したときに署名が有効であること、またはサーバーがクライアントの署名を公開することさえ想定できません。サーバーは、クライアントが適用した署名を取り除き、クライアントが適用した署名を取り除いてから、独自の公開鍵で再署名することができます。独自の公開鍵でエントリに署名する。 [で説明されているように、サーバーによって適用される署名の第三者にとっての意味は、誰からの署名とも同じです。&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt; ]。第三者が検証できない署名を解釈しようとするのを防ぐために、クライアントが署名したエントリドキュメントの一部を変更したことを認識しているサーバーは、エントリを公開する前にその署名を削除することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c5aa3a3e4c19a0f5bd9d139cb1cf724de62f5c3f" translate="yes" xml:space="preserve">
          <source>Atom Feed and Entry Documents can contain XML External Entities as
   defined in Section 4.2.2 of [&lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt;].  Atom implementations are not
   required to load external entities.  External entities are subject to
   the same security concerns as any network operation and can alter the
   semantics of an Atom document.  The same issues exist for Resources
   linked to by Atom elements such as atom:link and atom:content.</source>
          <target state="translated">Atomフィードおよびエントリドキュメントには、[ &lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt; ]のセクション4.2.2で定義されているXML外部エンティティを含めることができます。 Atom実装は、外部エンティティーをロードする必要はありません。外部エンティティは、ネットワーク操作と同じセキュリティ上の問題の影響を受け、Atomドキュメントのセマンティクスを変更する可能性があります。同じ問題が、atom：linkやatom：contentなどのAtom要素によってリンクされたリソースにも存在します。</target>
        </trans-unit>
        <trans-unit id="eb39269091e71d2cf80365bde28208d78373e852" translate="yes" xml:space="preserve">
          <source>Atom Feed and Entry Documents can contain a broad range of content
   types including code that might be executable in some contexts.
   Malicious clients could attempt to attack servers or other clients by
   injecting code into a Collection Document's Entry or Media Resources.

   Server implementations are strongly encouraged to verify that client-
   supplied content is safe prior to accepting, processing, or
   publishing it.  In the case of HTML, experience indicates that
   verification based on a white list of acceptable content is more
   effective than a black list of forbidden content.

   Additional information about XHTML and HTML content safety can be
   found in &lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-8.1&quot;&gt;Section&amp;nbsp;8.1 of [RFC4287]&lt;/a&gt;.</source>
          <target state="translated">Atomフィードおよびエントリードキュメントには、特定のコンテキストで実行可能なコードを含む幅広いコンテンツタイプを含めることができます。悪意のあるクライアントは、コレクションドキュメントのエントリまたはメディアリソースにコードを挿入することにより、サーバーまたは他のクライアントを攻撃する可能性があります。サーバー実装では、クライアント提供のコンテンツが受け入れ、処理、または公開される前に安全であることを確認することを強くお勧めします。 HTMLの場合、経験上、許容可能なコンテンツのホワイトリストに基づく検証は、禁止されたコンテンツのブラックリストよりも効果的であることが示されています。 XHTMLおよびHTMLコンテンツの安全性に関する追加情報&lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-8.1&quot;&gt;は、[RFC4287]のセクション8.1にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9f30f294721759bc8f3b4c8af76920be111f1ebd" translate="yes" xml:space="preserve">
          <source>Atom Protocol Document formats are specified in terms of the XML
   Information Set [&lt;a href=&quot;#ref-REC-xml-infoset&quot;&gt;REC-xml-infoset&lt;/a&gt;], serialized as XML 1.0 [&lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt;].

   The Infoset terms &quot;Element Information Item&quot; and &quot;Attribute
   Information Item&quot; are shortened to &quot;element&quot; and &quot;attribute&quot;
   respectively.  Therefore, when this specification uses the term
   &quot;element&quot;, it is referring to an Element Information Item, and when
   it uses the term &quot;attribute&quot;, it is referring to an Attribute
   Information Item.</source>
          <target state="translated">Atomプロトコルドキュメントの形式は、XML情報セット[ &lt;a href=&quot;#ref-REC-xml-infoset&quot;&gt;REC-xml-infoset&lt;/a&gt; ]で指定され、XML 1.0 [ &lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt; ] としてシリアル化されます。インフォセットの用語「要素情報アイテム」と「属性情報アイテム」は、それぞれ「要素」と「属性」に短縮されます。したがって、この仕様で「要素」という用語を使用する場合は、要素情報項目を指し、「属性」という用語を使用する場合は、属性情報項目を指します。</target>
        </trans-unit>
        <trans-unit id="2e1b50db6b134e88169d0061fffd21c5907dcc49" translate="yes" xml:space="preserve">
          <source>Atom Protocol documents allow the use of IRIs [&lt;a href=&quot;https://tools.ietf.org/html/rfc3987&quot;&gt;RFC3987&lt;/a&gt;] as well as
   URIs [&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;] to identify Resources.  Before an IRI in a document is
   used by HTTP, the IRI is first converted to a URI according to the
   procedure defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1&quot;&gt;Section&amp;nbsp;3.1 of [RFC3987]&lt;/a&gt;.  In accordance with
   that specification, the conversion SHOULD be applied as late as
   possible.  Conversion does not imply Resource creation -- the IRI and
   the URI into which it is converted identify the same Resource.

   While the Atom Protocol specifies the formats of the representations
   that are exchanged and the actions that can be performed on the IRIs
   embedded in those representations, it does not constrain the form of
   the URIs that are used.  HTTP [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;] specifies that the URI space
   of each server is controlled by that server, and this protocol
   imposes no further constraints on that control.</source>
          <target state="translated">Atomプロトコルのドキュメントでは、IRI [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3987&quot;&gt;RFC3987&lt;/a&gt; ]とURI [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; ]を使用してリソースを識別できます。ドキュメント内のIRIがHTTPで使用される前に、&lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1&quot;&gt;[RFC3987]のセクション3.1で&lt;/a&gt;定義されている手順に従って、IRIが最初にURIに変換されます。その仕様に従って、変換は可能な限り遅く適用されるべきです（SHOULD）。変換はリソースの作成を意味しません。変換先のIRIとURIは同じリソースを識別します。 Atomプロトコルは、交換される表現の形式と、それらの表現に埋め込まれたIRIで実行できるアクションを指定しますが、使用されるURIの形式を制約しません。 HTTP [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]は、各サーバーのURIスペースがそのサーバーによって制御されることを指定します。このプロトコルは、その制御にそれ以上の制約を課しません。</target>
        </trans-unit>
        <trans-unit id="736c134a608fda6f7298f3bba3cfd72a9fdecd9a" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol implementations are susceptible to a variety
   of spoofing attacks.  Malicious clients might send Atom Entries
   containing inaccurate information anywhere in the document.</source>
          <target state="translated">Atom Publishing Protocol の実装は、さまざまななりすまし攻撃の影響を受けやすい。悪意のあるクライアントは、不正確な情報を含む Atom エントリを文書内のどこにでも送信する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bcde284149405876b277c263099cd3f0fe408f3d" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol implementations handle URIs and IRIs.  See
   &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-7&quot;&gt;Section&amp;nbsp;7 of [RFC3986]&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-8&quot;&gt;Section&amp;nbsp;8 of [RFC3987]&lt;/a&gt; for security
   considerations related to their handling and use. 

   The Atom Publishing Protocol leaves the server in control of minting
   URIs.  The use of any client-supplied data for creating new URIs is
   subject to the same concerns as described in the next section.</source>
          <target state="translated">Atom Publishing Protocol実装は、URIとIRIを処理します。参照 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-7&quot;&gt;[RFC3986]のセクション7&lt;/a&gt;と&lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-8&quot;&gt;[RFC3987]のセクション8&lt;/a&gt;彼らの取り扱いと使用に関連するセキュリティ上の考慮事項については。Atom Publishing Protocolは、URIを制御するサーバーを残します。新しいURIを作成するためにクライアント提供のデータを使用する場合は、次のセクションで説明するのと同じ懸念事項があります。</target>
        </trans-unit>
        <trans-unit id="43c64fa2cad1ec9b5d7097b9637cf7e73d027deb" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol server implementations are susceptible to
   replay attacks.  Specifically, this specification does not define a
   means of detecting duplicate requests.  Accidentally sent duplicate
   requests are indistinguishable from intentional and malicious replay
   attacks.</source>
          <target state="translated">Atom Publishing Protocolサーバの実装は、リプレイ攻撃の影響を受けやすい。特に、この仕様では、重複要求を検出する手段を定義していない。誤って送信された重複リクエストは、意図的なリプレイ攻撃や悪意のあるリプレイ攻撃と区別がつかない。</target>
        </trans-unit>
        <trans-unit id="2972250359d4c37b4863cb1f87236835622705f3" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol server implementations need to take adequate
   precautions to ensure malicious clients cannot consume excessive
   server resources (CPU, memory, disk, etc.).</source>
          <target state="translated">Atom Publishing Protocolサーバの実装では、悪意のあるクライアントがサーバリソース(CPU、メモリ、ディスクなど)を過剰に消費しないようにするために、適切な予防措置を講じる必要があります。</target>
        </trans-unit>
        <trans-unit id="8c002bc6355801197a02bfae106d0ff5c2ac8619" translate="yes" xml:space="preserve">
          <source>Attribute Value:  edit

   Description:  An IRI of an editable Member Entry.  When appearing
      within an atom:entry, the href IRI can be used to retrieve,
      update, and delete the Resource represented by that Entry.

   Expected display characteristics:  Undefined; this relation can be
      used for background processing or to provide extended
      functionality without displaying its value.

   Security considerations:  Automated agents should take care when this
      relation crosses administrative domains (e.g., the URI has a
      different authority than the current document).</source>
          <target state="translated">属性値:edit 説明。編集可能なメンバエントリのIRI。atom:entry内に出現する場合、href IRIは、そのentryで表されるResourceの検索、更新、削除に使用することができます。期待される表示特性。この関係は、バックグラウンド処理に使用したり、値を表示せずに拡張機能を提供するために使用することができます。セキュリティの考慮事項。自動エージェントは、この関係が管理ドメインを横断する場合に注意を払うべきである(例:URIが現在の文書とは異なる権限を持つ場合)。</target>
        </trans-unit>
        <trans-unit id="37137689e8aac586d2a2206e3451c0c78ed0404b" translate="yes" xml:space="preserve">
          <source>Attribute Value:  edit-media

   Description:  An IRI of an editable Media Resource.  When appearing
      within an atom:entry, the href IRI can be used to retrieve,
      update, and delete the Media Resource associated with that Entry.

   Expected display characteristics:  Undefined; this relation can be
      used for background processing or to provide extended
      functionality without displaying its value.

   Security considerations:  Automated agents should take care when this
      relation crosses administrative domains (e.g., the URI has a
      different authority than the current document).</source>
          <target state="translated">属性値:edit-media 説明:編集可能なメディアリソースの IRI。編集可能なメディアリソースのIRI。atom:entry内に出現する場合、このhref IRIは、そのentryに関連付けられたメディアリソースの取得、更新、削除に使用することができます。期待される表示特性。この関係は、バックグラウンド処理に使用したり、値を表示せずに拡張機能を提供したりするために使用することができます。セキュリティに関する考慮事項。自動化されたエージェントは、この関係が管理ドメインを横断する場合(例:URIが現在の文書とは異なる権限を持つ場合)に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="f249c1f3c78b5d8dfebf667cc36b2ac178b2dfce" translate="yes" xml:space="preserve">
          <source>Audio and video types</source>
          <target state="translated">オーディオとビデオの種類</target>
        </trans-unit>
        <trans-unit id="e6d4341caf182975ff694c881dad755bd726c7a8" translate="yes" xml:space="preserve">
          <source>Audio and video. Only resources with the correct MIME Type will be played in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. Be sure to &lt;a href=&quot;https://developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements&quot;&gt;use the correct type for audio and video&lt;/a&gt;.</source>
          <target state="translated">オーディオとビデオ。正しいMIMEタイプのリソースのみが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素で再生されます。&lt;a href=&quot;https://developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements&quot;&gt;オーディオとビデオには&lt;/a&gt;必ず正しいタイプを使用してください。</target>
        </trans-unit>
        <trans-unit id="c7e617aec809a52d5e6a3a74811a5f9fd204a3f1" translate="yes" xml:space="preserve">
          <source>Audio and video. Only resources with the correct MIME Type will be played in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. Be sure to specify the correct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats&quot;&gt;media type for audio and video&lt;/a&gt;.</source>
          <target state="translated">オーディオとビデオ。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素では、正しいMIMEタイプのリソースのみが再生されます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats&quot;&gt;オーディオとビデオの&lt;/a&gt;正しいメディアタイプを必ず指定してください。</target>
        </trans-unit>
        <trans-unit id="76247395f996d3bf715facd1a789b21b73e56939" translate="yes" xml:space="preserve">
          <source>Audio or music data. Examples include &lt;code&gt;audio/mpeg&lt;/code&gt;, &lt;code&gt;audio/vorbis&lt;/code&gt;.</source>
          <target state="translated">オーディオまたは音楽データ。例としては、 &lt;code&gt;audio/mpeg&lt;/code&gt; 、 &lt;code&gt;audio/vorbis&lt;/code&gt; などがあります。</target>
        </trans-unit>
        <trans-unit id="147b0d392949573e61339af923f0d61f3d4158e3" translate="yes" xml:space="preserve">
          <source>Audio or video type</source>
          <target state="translated">オーディオまたはビデオタイプ</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="fc6c8170f13d7b26f5b4b7880a4d642545c57a00" translate="yes" xml:space="preserve">
          <source>Authentication challenges indicate what mechanisms are available for
   the client to provide authentication credentials in future requests.

   +--------------------+--------------------------+
   | Header Field Name  | Defined in...            |
   +--------------------+--------------------------+
   | WWW-Authenticate   | &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC7235]&lt;/a&gt; |
   | Proxy-Authenticate | &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.3&quot;&gt;Section&amp;nbsp;4.3 of [RFC7235]&lt;/a&gt; |
   +--------------------+--------------------------+</source>
          <target state="translated">認証チャレンジは、クライアントが将来のリクエストで認証資格情報を提供するために使用できるメカニズムを示します。 + -------------------- + -------------------------- + |ヘッダーフィールド名|で定義されています... | + -------------------- + -------------------------- + | WWW-Authenticate | &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.1&quot;&gt;[RFC7235]のセクション4.1&lt;/a&gt; | |プロキシ認証| &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.3&quot;&gt;[RFC7235]のセクション4.3&lt;/a&gt; | + -------------------- + -------------------------- +</target>
        </trans-unit>
        <trans-unit id="153bcddcdfb94a1c4fcc1b07386bec94f199b549" translate="yes" xml:space="preserve">
          <source>Authentication of cross-origin images</source>
          <target state="translated">クロスオリジン画像の認証</target>
        </trans-unit>
        <trans-unit id="76f2d621f56ba98464057328fa277805b179a4c3" translate="yes" xml:space="preserve">
          <source>Authentication schemes</source>
          <target state="translated">認証スキーム</target>
        </trans-unit>
        <trans-unit id="82c6eeec306dfcdeb221624f2ddf32ce5652cd2a" translate="yes" xml:space="preserve">
          <source>Authentication schemes that solely rely on the &quot;realm&quot; mechanism for
   establishing a protection space will expose credentials to all
   resources on an origin server.  Clients that have successfully made
   authenticated requests with a resource can use the same
   authentication credentials for other resources on the same origin
   server.  This makes it possible for a different resource to harvest
   authentication credentials for other resources.

   This is of particular concern when an origin server hosts resources
   for multiple parties under the same canonical root URI (&lt;a href=&quot;#section-2.2&quot;&gt;Section 2.2&lt;/a&gt;).
   Possible mitigation strategies include restricting direct access to
   authentication credentials (i.e., not making the content of the
   Authorization request header field available), and separating
   protection spaces by using a different host name (or port number) for
   each party.</source>
          <target state="translated">保護スペースを確立するための「レルム」メカニズムのみに依存する認証スキームは、オリジンサーバー上のすべてのリソースに資格情報を公開します。リソースを使用して認証済みリクエストを正常に作成したクライアントは、同じオリジンサーバー上の他のリソースに同じ認証資格情報を使用できます。これにより、別のリソースが他のリソースの認証資格情報を取得できるようになります。オリジンサーバーが同じ正規ルートURIの下で複数のパーティのリソースをホストする場合、これは特に問題になります（&lt;a href=&quot;#section-2.2&quot;&gt;セクション2.2&lt;/a&gt;）。可能な緩和戦略には、認証資格情報への直接アクセスを制限する（つまり、Authorizationリクエストヘッダーフィールドのコンテンツを利用可能にしない）ことや、各当事者に異なるホスト名（またはポート番号）を使用して保護スペースを分離することが含まれます。</target>
        </trans-unit>
        <trans-unit id="7e8fe0af4751860c096cd4a38e3b9eeae02683be" translate="yes" xml:space="preserve">
          <source>Authentification for AWS servers (&lt;code&gt;AWS4-HMAC-SHA256&lt;/code&gt;)</source>
          <target state="translated">AWSサーバーの認証（ &lt;code&gt;AWS4-HMAC-SHA256&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="97a9869cf89f831749f9533eebd33a7ff2d561cb" translate="yes" xml:space="preserve">
          <source>Authority</source>
          <target state="translated">Authority</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="3224c382af3d5fca4ce96ea1f1e751cb8cb2158f" translate="yes" xml:space="preserve">
          <source>Authorization (RFC 2616)</source>
          <target state="translated">認証 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="bae9490e931f2a313f9d9d7c5b0605ca243c7183" translate="yes" xml:space="preserve">
          <source>Authorization (RFC 7235)</source>
          <target state="translated">認証 (RFC 7235)</target>
        </trans-unit>
        <trans-unit id="d4fee4c08f75764f9229f565110251d77f383d11" translate="yes" xml:space="preserve">
          <source>Authorization and Proxy-Authorization headers</source>
          <target state="translated">認可とプロキシ認可ヘッダ</target>
        </trans-unit>
        <trans-unit id="95619b532fe893a1b62f3f25950021c4a689dd4d" translate="yes" xml:space="preserve">
          <source>Autoplay</source>
          <target state="translated">Autoplay</target>
        </trans-unit>
        <trans-unit id="68600483f20f1dc6f59f6bc5af1b4286e5f91bc8" translate="yes" xml:space="preserve">
          <source>Avoid overly-detailed &lt;code&gt;Server&lt;/code&gt; values, as they can reveal information that might make it (slightly) easier for attackers to exploit known security holes.</source>
          <target state="translated">攻撃者が既知のセキュリティホールを悪用しやすくする可能性のある情報を明らかにする可能性があるため、過度に詳細な &lt;code&gt;Server&lt;/code&gt; 値は避けてください。</target>
        </trans-unit>
        <trans-unit id="7cdb07e7f031ea64baa50d4fba0ccadf646f5986" translate="yes" xml:space="preserve">
          <source>Avoiding COEP blockage with CORS</source>
          <target state="translated">CORSによるCOEP閉塞の回避</target>
        </trans-unit>
        <trans-unit id="c2caaa3b5ae832f6f7280b3a4c0e89023587c880" translate="yes" xml:space="preserve">
          <source>Avoiding mid-air collisions</source>
          <target state="translated">中空衝突の回避</target>
        </trans-unit>
        <trans-unit id="cff193e7487bbc8578fa13e29841eaf30a9bedc1" translate="yes" xml:space="preserve">
          <source>Avoiding the lost update problem with optimistic locking</source>
          <target state="translated">楽観的なロックで更新が失われる問題を回避する</target>
        </trans-unit>
        <trans-unit id="8d576102d4917836a687b68a54b6ec02b0270e5d" translate="yes" xml:space="preserve">
          <source>Avoiding user agent detection</source>
          <target state="translated">ユーザーエージェントの検出を回避</target>
        </trans-unit>
        <trans-unit id="76b2165174f526621c2ceebcd2a4d6f508b46aba" translate="yes" xml:space="preserve">
          <source>BCP 47</source>
          <target state="translated">BCP 47</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="ecd4ecba402cd2d1689af61cc723efcbd052a8bf" translate="yes" xml:space="preserve">
          <source>BWS = OWS

   Connection = *( &quot;,&quot; OWS ) connection-option *( OWS &quot;,&quot; [ OWS
    connection-option ] )

   Content-Length = 1*DIGIT

   HTTP-message = start-line *( header-field CRLF ) CRLF [ message-body
    ]
   HTTP-name = %x48.54.54.50 ; HTTP
   HTTP-version = HTTP-name &quot;/&quot; DIGIT &quot;.&quot; DIGIT
   Host = uri-host [ &quot;:&quot; port ]

   OWS = *( SP / HTAB )

   RWS = 1*( SP / HTAB )

   TE = [ ( &quot;,&quot; / t-codings ) *( OWS &quot;,&quot; [ OWS t-codings ] ) ]
   Trailer = *( &quot;,&quot; OWS ) field-name *( OWS &quot;,&quot; [ OWS field-name ] )
   Transfer-Encoding = *( &quot;,&quot; OWS ) transfer-coding *( OWS &quot;,&quot; [ OWS
    transfer-coding ] )

   URI-reference = &amp;lt;URI-reference, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.1&quot;&gt;[RFC3986], Section&amp;nbsp;4.1&lt;/a&gt;&amp;gt;
   Upgrade = *( &quot;,&quot; OWS ) protocol *( OWS &quot;,&quot; [ OWS protocol ] )

   Via = *( &quot;,&quot; OWS ) ( received-protocol RWS received-by [ RWS comment
    ] ) *( OWS &quot;,&quot; [ OWS ( received-protocol RWS received-by [ RWS
    comment ] ) ] )

   absolute-URI = &amp;lt;absolute-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.3&quot;&gt;[RFC3986], Section&amp;nbsp;4.3&lt;/a&gt;&amp;gt;
   absolute-form = absolute-URI
   absolute-path = 1*( &quot;/&quot; segment )
   asterisk-form = &quot;*&quot;
   authority = &amp;lt;authority, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2&quot;&gt;[RFC3986], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;
   authority-form = authority 

   chunk = chunk-size [ chunk-ext ] CRLF chunk-data CRLF
   chunk-data = 1*OCTET
   chunk-ext = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-val ] )
   chunk-ext-name = token
   chunk-ext-val = token / quoted-string
   chunk-size = 1*HEXDIG
   chunked-body = *chunk last-chunk trailer-part CRLF
   comment = &quot;(&quot; *( ctext / quoted-pair / comment ) &quot;)&quot;
   connection-option = token
   ctext = HTAB / SP / %x21-27 ; '!'-'''
    / %x2A-5B ; '*'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text

   field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
   field-name = token
   field-value = *( field-content / obs-fold )
   field-vchar = VCHAR / obs-text
   fragment = &amp;lt;fragment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.5&quot;&gt;[RFC3986], Section&amp;nbsp;3.5&lt;/a&gt;&amp;gt;

   header-field = field-name &quot;:&quot; OWS field-value OWS
   http-URI = &quot;http://&quot; authority path-abempty [ &quot;?&quot; query ] [ &quot;#&quot;
    fragment ]
   https-URI = &quot;https://&quot; authority path-abempty [ &quot;?&quot; query ] [ &quot;#&quot;
    fragment ]

   last-chunk = 1*&quot;0&quot; [ chunk-ext ] CRLF

   message-body = *OCTET
   method = token

   obs-fold = CRLF 1*( SP / HTAB )
   obs-text = %x80-FF
   origin-form = absolute-path [ &quot;?&quot; query ]

   partial-URI = relative-part [ &quot;?&quot; query ]
   path-abempty = &amp;lt;path-abempty, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.3&lt;/a&gt;&amp;gt;
   port = &amp;lt;port, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;
   protocol = protocol-name [ &quot;/&quot; protocol-version ]
   protocol-name = token
   protocol-version = token
   pseudonym = token

   qdtext = HTAB / SP / &quot;!&quot; / %x23-5B ; '#'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text
   query = &amp;lt;query, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.4&quot;&gt;[RFC3986], Section&amp;nbsp;3.4&lt;/a&gt;&amp;gt;
   quoted-pair = &quot;\&quot; ( HTAB / SP / VCHAR / obs-text ) 

   quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE

   rank = ( &quot;0&quot; [ &quot;.&quot; *3DIGIT ] ) / ( &quot;1&quot; [ &quot;.&quot; *3&quot;0&quot; ] )
   reason-phrase = *( HTAB / SP / VCHAR / obs-text )
   received-by = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
   received-protocol = [ protocol-name &quot;/&quot; ] protocol-version
   relative-part = &amp;lt;relative-part, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;[RFC3986], Section&amp;nbsp;4.2&lt;/a&gt;&amp;gt;
   request-line = method SP request-target SP HTTP-version CRLF
   request-target = origin-form / absolute-form / authority-form /
    asterisk-form

   scheme = &amp;lt;scheme, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.1&quot;&gt;[RFC3986], Section&amp;nbsp;3.1&lt;/a&gt;&amp;gt;
   segment = &amp;lt;segment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.3&lt;/a&gt;&amp;gt;
   start-line = request-line / status-line
   status-code = 3DIGIT
   status-line = HTTP-version SP status-code SP reason-phrase CRLF

   t-codings = &quot;trailers&quot; / ( transfer-coding [ t-ranking ] )
   t-ranking = OWS &quot;;&quot; OWS &quot;q=&quot; rank
   tchar = &quot;!&quot; / &quot;#&quot; / &quot;$&quot; / &quot;%&quot; / &quot;&amp;amp;&quot; / &quot;'&quot; / &quot;*&quot; / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; /
    &quot;^&quot; / &quot;_&quot; / &quot;`&quot; / &quot;|&quot; / &quot;~&quot; / DIGIT / ALPHA
   token = 1*tchar
   trailer-part = *( header-field CRLF )
   transfer-coding = &quot;chunked&quot; / &quot;compress&quot; / &quot;deflate&quot; / &quot;gzip&quot; /
    transfer-extension
   transfer-extension = token *( OWS &quot;;&quot; OWS transfer-parameter )
   transfer-parameter = token BWS &quot;=&quot; BWS ( token / quoted-string )

   uri-host = &amp;lt;host, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.2&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.2&lt;/a&gt;&amp;gt; 

Index

   A
      absolute-form (of request-target)  42
      accelerator  10
      application/http Media Type  63
      asterisk-form (of request-target)  43
      authoritative response  67
      authority-form (of request-target)  42-43

   B
      browser  7

   C
      cache  11
      cacheable  12
      captive portal  11
      chunked (Coding Format)  28, 32, 36
      client  7
      close  51, 56
      compress (Coding Format)  38
      connection  7
      Connection header field  51, 56
      Content-Length header field  30

   D
      deflate (Coding Format)  38
      Delimiters  27
      downstream  10

   E
      effective request URI  45

   G
      gateway  10
      Grammar
         absolute-form  42
         absolute-path  16
         absolute-URI  16
         ALPHA  6
         asterisk-form  41, 43
         authority  16
         authority-form  42-43
         BWS  25
         chunk  36
         chunk-data  36
         chunk-ext  36
         chunk-ext-name  36 

         chunk-ext-val  36
         chunk-size  36
         chunked-body  36
         comment  27
         Connection  51
         connection-option  51
         Content-Length  30
         CR  6
         CRLF  6
         ctext  27
         CTL  6
         DIGIT  6
         DQUOTE  6
         field-content  23
         field-name  23, 40
         field-value  23
         field-vchar  23
         fragment  16
         header-field  23, 37
         HEXDIG  6
         Host  44
         HTAB  6
         HTTP-message  19
         HTTP-name  14
         http-URI  17
         HTTP-version  14
         https-URI  18
         last-chunk  36
         LF  6
         message-body  28
         method  21
         obs-fold  23
         obs-text  27
         OCTET  6
         origin-form  42
         OWS  25
         partial-URI  16
         port  16
         protocol-name  47
         protocol-version  47
         pseudonym  47
         qdtext  27
         query  16
         quoted-pair  27
         quoted-string  27
         rank  39
         reason-phrase  22
         received-by  47 

         received-protocol  47
         request-line  21
         request-target  41
         RWS  25
         scheme  16
         segment  16
         SP  6
         start-line  21
         status-code  22
         status-line  22
         t-codings  39
         t-ranking  39
         tchar  27
         TE  39
         token  27
         Trailer  40
         trailer-part  37
         transfer-coding  35
         Transfer-Encoding  28
         transfer-extension  35
         transfer-parameter  35
         Upgrade  57
         uri-host  16
         URI-reference  16
         VCHAR  6
         Via  47
      gzip (Coding Format)  39

   H
      header field  19
      header section  19
      headers  19
      Host header field  44
      http URI scheme  17
      https URI scheme  17
   I
      inbound  9
      interception proxy  11
      intermediary  9

   M
      Media Type
         application/http  63
         message/http  62
      message  7
      message/http Media Type  62
      method  21 

   N
      non-transforming proxy  49

   O
      origin server  7
      origin-form (of request-target)  42
      outbound  10

   P
      phishing  67
      proxy  10

   R
      recipient  7
      request  7
      request-target  21
      resource  16
      response  7
      reverse proxy  10

   S
      sender  7
      server  7
      spider  7

   T
      target resource  40
      target URI  40
      TE header field  39
      Trailer header field  40
      Transfer-Encoding header field  28
      transforming proxy  49
      transparent proxy  11
      tunnel  10

   U
      Upgrade header field  57
      upstream  9
      URI scheme
         http  17
         https  17
      user agent  7

   V
      Via header field  47 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 89]</source>
          <target state="translated">BWS = OWS接続= *（ &quot;、&quot; OWS）接続オプション*（OWS &quot;、&quot; [OWS接続オプション]）Content-Length = 1 * DIGIT HTTP-message = start-line *（header-field CRLF）CRLF [message-body] HTTP-name =％x48.54.54.50; HTTP HTTP-version = HTTP-name &quot;/&quot; DIGIT &quot;。&quot; DIGIT Host = uri-host [&quot;：&quot; port] OWS = *（SP / HTAB）RWS = 1 *（SP / HTAB）TE = [（ &quot;、&quot; / t-codings）*（OWS &quot;、&quot; [OWS t -codings]）] Trailer = *（ &quot;、&quot; OWS）フィールド名*（OWS &quot;、&quot; [OWS field-name]）Transfer-Encoding = *（ &quot;、&quot; OWS）transfer-coding *（OWS &quot;、&quot; [OWS transfer-coding]）URI-reference = &amp;lt;URI-reference、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.1&quot;&gt;[RFC3986]、セクション4.1を&lt;/a&gt;参照&amp;gt;アップグレード= *（ &quot;、&quot; OWS）プロトコル*（OWS &quot;、&quot; [OWSプロトコル]）Via = *（ &quot;、&quot; OWS）（received-protocol RWS received-by [RWS comment]）*（OWS &quot;、&quot; [OWS（received-protocol RWS received-by [RWS comment]）]）absolute-URI = &amp;lt;absolute-URI、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.3&quot;&gt;[RFC3986]を&lt;/a&gt;参照、セクション4.3 &amp;gt; absolute-form = absolute-URI absolute-path = 1 *（ &quot;/ &quot;セグメント）アスタリスク形式=&quot; * &quot;権限= &amp;lt;権限、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2&quot;&gt;[RFC3986]、セクション3.2を&lt;/a&gt;参照&amp;gt;権限フォーム=権限チャンク=チャンクサイズ[チャンク拡張] CRLFチャンクデータCRLFチャンクデータ= 1 * OCTETチャンク拡張= *（ &quot;;&quot;チャンク拡張名[&quot;=&quot;チャンク拡張val]）chunk-ext-name = token chunk-ext-val = token / quoted-string chunk-size = 1 * HEXDIG chunked-body = * chunk last-chunk trailer-part CRLF comment = &quot;（&quot; *（ctext / quoted-pair / comment） &quot;）&quot; connection-option = token ctext = HTAB / SP /％x21-27; '！'-'' '/％x2A-5B; '*'-'[' /％x5D-7E; ']'-'〜' / obs-text field-content = field-vchar [1 *（SP / HTAB）field-vchar] field-name = token field-value = *（field-content / obs-fold）フィールド-vchar = VCHAR / obs-text fragment = &amp;lt;fragment、see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.5&quot;&gt;[RFC3986]、Section 3.5&lt;/a&gt;&amp;gt; header-field = field-name &quot;：&quot; OWS field-value OWS http-URI = &quot;http：//&quot; Authority path-abempty [&quot;？&quot; query] [&quot;＃&quot;フラグメント] https-URI = &quot;https：//&quot; Authority path-abempty [&quot;？&quot; query] [&quot;＃&quot; fragment] last-chunk = 1 * &quot;0&quot; [chunk-ext] CRLF message-body = * OCTET method = token obs-fold = CRLF 1 *（SP / HTAB）obs-text =％x80 -FF origin-form =絶対パス[&quot;？&quot; query] partial-URI = relative-part [&quot;？&quot; query] path-abempty = &amp;lt;path-abempty、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986]、セクション3.3を&lt;/a&gt;参照&amp;gt; port = &amp;lt;port、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.3&quot;&gt;[RFC3986]、セクション3.2.3を&lt;/a&gt;参照&amp;gt; protocol = protocol-name [&quot;/&quot; protocol-version] protocol-name = token protocol-version = token pseudonym = token qdtext = HTAB / SP / &quot;！&quot; /％x23-5B; '＃'-'[' /％x5D-7E; ']'-'〜' / obs-text query = &amp;lt;query、see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.4&quot;&gt;[RFC3986]、Section 3.4&lt;/a&gt; &amp;gt; quoted-pair = &quot;\&quot;（HTAB / SP / VCHAR / obs-text）quoted-string = DQUOTE *（qdtext / quoted-pair）DQUOTEランク=（ &quot;0&quot; [&quot;。&quot; * 3DIGIT]）/（ &quot;1&quot; [&quot;。&quot; * 3 &quot;0&quot;]）reason-phrase = *（HTAB / SP / VCHAR / obs- text）received-by =（uri-host [&quot;：&quot; port]）/ pseudonym received-protocol = [protocol-name &quot;/&quot;] protocol-version relative-part = &amp;lt;relative-part、see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;[RFC3986]、Section 4.2&lt;/a&gt;&amp;gt; request-line = method SP request-target SP HTTP-version CRLF request-target = origin-form / absolute-form / authority-form / asterisk-form scheme = &amp;lt;scheme、see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.1&quot;&gt;[RFC3986]、Section 3.1&lt;/a&gt; &amp;gt;セグメント= &amp;lt;セグメント、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986]、セクション3.3を&lt;/a&gt;参照&amp;gt; start-line = request-line / status-line status-code = 3DIGIT status-line = HTTP-version SP status-code SP reason-phrase CRLF t-codings = &quot;trailers&quot; /（transfer-coding [t-ranking] ）t-ranking = OWS &quot;;&quot; OWS &quot;q =&quot;ランクtchar = &quot;！&quot; / &quot;＃&quot; / &quot;$&quot; / &quot;％&quot; / &quot;＆&quot; / &quot;'&quot; / &quot;*&quot; / &quot;+&quot; / &quot;-&quot; / &quot;。&quot; / &quot;^&quot; / &quot;_&quot; / &quot;` &quot;/&quot; | &quot; / &quot;〜&quot; / DIGIT / ALPHA token = 1 * tchar trailer-part = *（header-field CRLF）transfer-coding = &quot;chunked&quot; / &quot;compress&quot; / &quot;deflate&quot; / &quot;gzip&quot; / transfer-extension transfer-extension =トークン*（OWS &quot;;&quot; OWS transfer-parameter）transfer-parameter = token BWS &quot;= &quot;BWS（token / quoted-string）uri-host = &amp;lt;host、 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.2&quot;&gt;[RFC3986]、セクション3.2.2を参照&lt;/a&gt;&amp;gt;インデックスA絶対形式（要求ターゲットの）42アクセラレータ10アプリケーション/ httpメディアタイプ63アスタリスク形式（要求ターゲットの）43信頼できる応答67権限形式（要求ターゲットの）42-43 Bブラウザ7 Cキャッシュ11キャッシュ可能12キャプティブポータル11チャンク（コーディング形式）28、32、36クライアント7クローズ51、56圧縮（コーディング形式）38接続7接続ヘッダーフィールド51、56 Content-Lengthヘッダーフィールド30 Dデフレート（コーディング形式）38デリミタ27ダウンストリーム10 E有効リクエストURI 45 Gゲートウェイ10文法絶対形式42絶対パス16絶対URI 16アルファ6アスタリスク形式41、43権限16権限形式42-43 BWS 25チャンク36チャンクデータ36 chunk-ext 36 chunk-ext-name 36 chunk-ext-val 36チャンクサイズ36 chunked-body 36コメント27接続51接続オプション51コンテンツ-長さ30 CR 6 CRLF 6 ctext 27 CTL 6 DIGIT 6 DQUOTE 6フィールドコンテンツ23フィールド名23、40フィールド値23フィールドvchar 23フラグメント16ヘッダーフィールド23、37 HEXDIG 6ホスト44 HTAB 6 HTTPメッセージ19 HTTP名14 http-URI 17 HTTPバージョン14 https-URI 18最後のチャンク36 LF 6メッセージ本文28メソッド21 obs-fold 23 obs-text 27 OCTET 6 origin -form 42 OWS 25 partial-URI 16ポート16 protocol-name 47 protocol-version 47 pseudonym 47 qdtext 27 query 16 quoted-pair 27 quoted-string 27 rank 39 reason-phrase 22 received-by 47 received-protocol 47 request-line 21リクエストターゲット41 RWS 25スキーム16セグメント16 SP 6スタートライン21ステータスコード22 status-line 22 t-codings 39 t-ranking 39 tchar 27 TE 39 token 27 Trailer 40 Trailer-part 37 transfer-coding 35 Transfer-Encoding 28 transfer-extension 35 transfer-parameter 35 Upgrade 57 uri-host 16 URI-reference 16 VCHAR 6 Via 47 gzip（コーディング形式）39 Hヘッダーフィールド19ヘッダーセクション19ヘッダー19ホストヘッダーフィールド44 http URIスキーム17 https URIスキーム17 Iインバウンド9インターセプトプロキシ11中間体9 Mメディアタイプapplication / http 63メッセージ/ http 62メッセージ7メッセージ/ httpメディアタイプ62メソッド21 N非変換プロキシ49 Oオリジンサーバー7オリジンフォーム（リクエストターゲット）42アウトバウンド10フィッシング67プロキシ10 R受信者7リクエスト7リクエストターゲット21リソース16応答7リバースプロキシ10 S送信者7サーバー7スパイダー7 Tターゲ​​ットリソース40ターゲットURI 40 TEヘッダーフィールド39トレーラーヘッダーフィールド40 Transfer-Encodingヘッダーフィールド28変換プロキシ49透過プロキシ11トンネル10 Uアップグレードヘッダーフィールド57アップストリーム9 URIスキームhttp 17 https 17ユーザーエージェント7 V Viaヘッダーフィールド47作者のアドレスロイT.フィールディング（編集者）Adobe Systems Incorporated 345 Park Ave San Jose、CA 95110 USAメール：fielding@gbiv.com URI： &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Julian F. Reschke（editor）greenbytes GmbH Hafenweg 16 Muenster、NW 48155 Germany Eメール：julian.reschke@greenbytes.de URI：&lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http&lt;/a&gt; ://greenbytes.de/tech/webdav/ Fielding ＆Reschke Standards Track [89ページ]</target>
        </trans-unit>
        <trans-unit id="5f38d91a98f445cfaf31a1b87315c344133fcf77" translate="yes" xml:space="preserve">
          <source>BZip archive</source>
          <target state="translated">BZipアーカイブ</target>
        </trans-unit>
        <trans-unit id="9268ec259738e5664244ab3e240148d4cb02f539" translate="yes" xml:space="preserve">
          <source>BZip2 archive</source>
          <target state="translated">BZip2 アーカイブ</target>
        </trans-unit>
        <trans-unit id="b1ff57d696aa3ec09bd76c88944e1a7097ee37a3" translate="yes" xml:space="preserve">
          <source>Bad:</source>
          <target state="translated">Bad:</target>
        </trans-unit>
        <trans-unit id="6b6c8e8e9e899e58c8a82dcfe5a52c51d8589bc9" translate="yes" xml:space="preserve">
          <source>Base64 encoding and decoding</source>
          <target state="translated">Base64 エンコーディングとデコーディング</target>
        </trans-unit>
        <trans-unit id="dd485ec404c88c9bc1169c18d4946d7741390c2a" translate="yes" xml:space="preserve">
          <source>Base64 encoding of a file or string on Linux and Mac OS X systems can be achieved using the command-line &lt;code&gt;base64&lt;/code&gt; (or, as an alternative, the &lt;code&gt;uuencode&lt;/code&gt; utility with &lt;code&gt;-m&lt;/code&gt; argument).</source>
          <target state="translated">LinuxおよびMacOS Xシステムでのファイルまたは文字列のBase64エンコーディングは、コマンドライン &lt;code&gt;base64&lt;/code&gt; （または、代わりに、 &lt;code&gt;-m&lt;/code&gt; 引数を指定した &lt;code&gt;uuencode&lt;/code&gt; ユーティリティ）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="c8a6c4738838e4b0a166434348297e34cf13d0aa" translate="yes" xml:space="preserve">
          <source>Base64 is a group of binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation. By consisting only in ASCII characters, base64 strings are generally url-safe, and that's why they can be used to encode data in Data URLs.</source>
          <target state="translated">Base64 は、バイナリデータを ASCII 文字列形式で表現し、それを radix-64 表現に変換することでバイナリデータを表現する、バイナリからテキストへのエンコーディング方式のグループです。ASCII 文字のみで構成されることで、base64 文字列は一般的に url-safe であり、Data URL でデータをエンコードするのに使用できるのはそのためです。</target>
        </trans-unit>
        <trans-unit id="5f89697a7bc4483ffe13d2dcbf8d58f7b7c1be20" translate="yes" xml:space="preserve">
          <source>Basic aspects of HTTP</source>
          <target state="translated">HTTPの基本的な側面</target>
        </trans-unit>
        <trans-unit id="f1141fef0f5d80de5637d17a79c2912b21db48fe" translate="yes" xml:space="preserve">
          <source>Basic authentication scheme</source>
          <target state="translated">基本的な認証スキーム</target>
        </trans-unit>
        <trans-unit id="8a8d7195474f74b23cfe43ea9439aa2d6b6b0acb" translate="yes" xml:space="preserve">
          <source>Basic operation</source>
          <target state="translated">基本操作</target>
        </trans-unit>
        <trans-unit id="48e2b3aff207a2929af920ad2047a4854ec8d687" translate="yes" xml:space="preserve">
          <source>Basic support</source>
          <target state="translated">基本的なサポート</target>
        </trans-unit>
        <trans-unit id="81efe3a6d9678e29a4c810740a95dcc9bb4f25f2" translate="yes" xml:space="preserve">
          <source>Basics of HTTP</source>
          <target state="translated">HTTPの基礎</target>
        </trans-unit>
        <trans-unit id="e0cd046975ac459ab156bc7edc2ad7f0be4cd40d" translate="yes" xml:space="preserve">
          <source>Battery Status API</source>
          <target state="translated">バッテリステータス API</target>
        </trans-unit>
        <trans-unit id="2a186f451d47a315ace213770793074f6621919f" translate="yes" xml:space="preserve">
          <source>Battery Status API&lt;br/&gt;&lt;small&gt;The definition of 'Feature Policy integration' in that specification.&lt;/small&gt;</source>
          <target state="translated">バッテリーステータスAPI&lt;br/&gt;&lt;small&gt;その仕様における「機能ポリシー統合」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="029209c4aa3fd234305ceec4958ac95bfc012cd5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Upgrade&lt;/code&gt; is a hop-by-hop header, it also needs to be listed in the &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header field. This means that a typical request that includes Upgrade would look something like:</source>
          <target state="translated">ので、 &lt;code&gt;Upgrade&lt;/code&gt; ホップバイホップヘッダであり、それはまたにリストされる必要がある&lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;ヘッダフィールド。これは、アップグレードを含む一般的なリクエストが次のようになることを意味します。</target>
        </trans-unit>
        <trans-unit id="2390d6f45ac482880e651868f977b3b748a0f6b2" translate="yes" xml:space="preserve">
          <source>Because HTTP uses mostly textual, character-delimited fields, parsers
   are often vulnerable to attacks based on sending very long (or very
   slow) streams of data, particularly where an implementation is
   expecting a protocol element with no predefined length.

   To promote interoperability, specific recommendations are made for
   minimum size limits on request-line (&lt;a href=&quot;#section-3.1.1&quot;&gt;Section 3.1.1&lt;/a&gt;) and header fields
   (&lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;).  These are minimum recommendations, chosen to be
   supportable even by implementations with limited resources; it is
   expected that most implementations will choose substantially higher
   limits.

   A server can reject a message that has a request-target that is too
   long (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;Section&amp;nbsp;6.5.12 of [RFC7231]&lt;/a&gt;) or a request payload that is too
   large (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.11&quot;&gt;Section&amp;nbsp;6.5.11 of [RFC7231]&lt;/a&gt;).  Additional status codes related
   to capacity limits have been defined by extensions to HTTP [&lt;a href=&quot;https://tools.ietf.org/html/rfc6585&quot;&gt;RFC6585&lt;/a&gt;].

   Recipients ought to carefully limit the extent to which they process
   other protocol elements, including (but not limited to) request
   methods, response status phrases, header field-names, numeric values,
   and body chunks.  Failure to limit such processing can result in
   buffer overflows, arithmetic overflows, or increased vulnerability to
   denial-of-service attacks.</source>
          <target state="translated">HTTPは主にテキストで区切られたフィールドを使用するため、パーサーは、非常に長い（または非常に遅い）データストリームの送信に基づく攻撃に対して脆弱です。相互運用性を促進するために、request-line（&lt;a href=&quot;#section-3.1.1&quot;&gt;セクション3.1.1&lt;/a&gt;）およびheaderフィールド（&lt;a href=&quot;#section-3.2&quot;&gt;セクション3.2&lt;/a&gt;）の最小サイズ制限について特定の推奨事項が作成されます。これらは最小限の推奨事項であり、リソースが限られている実装でもサポートできるように選択されています。ほとんどの実装では大幅に高い制限が選択されると予想されます。サーバーはリクエストターゲットが長すぎるメッセージを拒否できます（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;[RFC7231]のセクション6.5.12）。&lt;/a&gt;）または大きすぎるリクエストペイロード（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.11&quot;&gt;[RFC7231]のセクション6.5.11&lt;/a&gt;）。容量制限に関連する追加のステータスコードは、HTTP [ &lt;a href=&quot;https://tools.ietf.org/html/rfc6585&quot;&gt;RFC6585&lt;/a&gt; ]の拡張機能によって定義されています。受信者は、リクエストメソッド、レスポンスステータスフレーズ、ヘッダーフィールド名、数値、ボディチャンクなど、他のプロトコル要素を処理する範囲を注意深く制限する必要があります。このような処理を制限しないと、バッファオーバーフロー、算術オーバーフロー、またはサービス拒否攻撃に対する脆弱性が高まる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e347f7f4e0eb64be97283fb708464f948f15cd41" translate="yes" xml:space="preserve">
          <source>Because a client might be receiving responses via multiple paths, so
   that some responses flow through one set of caches and other
   responses flow through a different set of caches, a client might
   receive responses in an order different from that in which the origin
   server sent them. We would like the client to use the most recently
   generated response, even if older responses are still apparently
   fresh.

   Neither the entity tag nor the expiration value can impose an
   ordering on responses, since it is possible that a later response
   intentionally carries an earlier expiration time. The Date values are
   ordered to a granularity of one second.

   When a client tries to revalidate a cache entry, and the response it
   receives contains a Date header that appears to be older than the one
   for the existing entry, then the client SHOULD repeat the request
   unconditionally, and include

       Cache-Control: max-age=0

   to force any intermediate caches to validate their copies directly
   with the origin server, or

       Cache-Control: no-cache

   to force any intermediate caches to obtain a new copy from the origin
   server. 

   If the Date values are equal, then the client MAY use either response
   (or MAY, if it is being extremely prudent, request a new response).
   Servers MUST NOT depend on clients being able to choose
   deterministically between responses generated during the same second,
   if their expiration times overlap.</source>
          <target state="translated">クライアントは複数のパスを経由して応答を受信している可能性があるため、ある応答はあるキャッシュのセットを経由し、他の応答は別のキャッシュのセットを経由するため、クライアントは送信元のサーバが送信した順序とは異なる順序で応答を受信する可能性があります。古いレスポンスがまだ新しいものであっても、クライアントは最近生成されたレスポンスを使用するようにしたいと考えています。エンティティタグも有効期限値も、レスポンスに順序を課すことはできません。Date値は1秒の粒度で順序付けられる。クライアントがキャッシュエントリを再検証しようとし、受け取った応答が既存のエントリのものよりも古いように見える Date ヘッダーを含む場合、クライアントは無条件にリクエストを繰り返すべきであり[SHOULD]、中間キャッシュがオリジンサーバーと直接コピーを検証するように強制するために Cache-Control:max-age=0、または中間キャッシュがオリジンサーバーから新しいコピーを取得するように強制するために Cache-Control:no-cache を含めるべきである。Date値が等しい場合、クライアントはどちらかの応答を使用してもよい[MAY](または、非常に慎重な場合は新しい応答を要求してもよい[MAY])。サーバーは、有効期限時間が重なっている場合、同じ秒の間に生成された応答を決定論的に 選択できるクライアントに依存してはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="86455b35c9696e2ada5790776540ffdd90e87107" translate="yes" xml:space="preserve">
          <source>Because expiration values are assigned optimistically, it is possible
   for two caches to contain fresh values for the same resource that are
   different.

   If a client performing a retrieval receives a non-first-hand response
   for a request that was already fresh in its own cache, and the Date
   header in its existing cache entry is newer than the Date on the new
   response, then the client MAY ignore the response. If so, it MAY
   retry the request with a &quot;Cache-Control: max-age=0&quot; directive (see
   &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;), to force a check with the origin server.

   If a cache has two fresh responses for the same representation with
   different validators, it MUST use the one with the more recent Date
   header. This situation might arise because the cache is pooling
   responses from other caches, or because a client has asked for a
   reload or a revalidation of an apparently fresh cache entry.</source>
          <target state="translated">有効期限値は楽観的に割り当てられるため、2つのキャッシュに、同じリソースの異なる新しい値が含まれる可能性があります。取得を実行しているクライアントが、自身のキャッシュですでに新鮮なリクエストに対する直接ではない応答を受信し、既存のキャッシュエントリの日付ヘッダーが新しい応答の日付よりも新しい場合、クライアントは無視してもよい（MAY）応答。その場合、「Cache-Control：max-age = 0」ディレクティブを使用してリクエストを再試行してもよい（&lt;a href=&quot;#section-14.9&quot;&gt;セクション14.9を&lt;/a&gt;参照） ）、オリジンサーバーでチェックを強制します。キャッシュに同じバリデーターを持つ2つの新しい応答があり、異なるバリデーターがある場合、最新のDateヘッダーを持つものを使用する必要があります。この状況は、キャッシュが他のキャッシュからの応答をプールしているため、またはクライアントが明らかに新鮮なキャッシュエントリのリロードまたは再検証を要求したために発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8925ede0629c5d28bf60e237373ba50709672d6" translate="yes" xml:space="preserve">
          <source>Because some of the information shared by &lt;code&gt;resource:&lt;/code&gt; URLs is available to websites, a web page could run internal scripts and inspect internal resources of Firefox, including the default preferences, which could be a serious security and privacy issue.</source>
          <target state="translated">&lt;code&gt;resource:&lt;/code&gt; URLで共有される情報の一部はWebサイトで利用できるため、Webページが内部スクリプトを実行し、デフォルトの設定を含むFirefoxの内部リソースを検査する可能性があり、これは深刻なセキュリティとプライバシーの問題になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="546f4d232503e1d341d388da112b0bb01eea4130" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt; header value is different (&quot;varies&quot;) for mobile and desktop clients, caches will not be used to serve mobile content mistakenly to desktop users or vice versa.</source>
          <target state="translated">ため&lt;a href=&quot;headers/user-agent&quot;&gt; &lt;code&gt;User-Agent&lt;/code&gt; &lt;/a&gt;ヘッダの値は、モバイルおよびデスクトップクライアント用（「不定」）異なって、キャッシュは、デスクトップユーザー、またはその逆に誤ってモバイルコンテンツを提供するために使用されないであろう。</target>
        </trans-unit>
        <trans-unit id="b675dee5907b6c94664883b5699f8243f8d18b2d" translate="yes" xml:space="preserve">
          <source>Because the request headers in the above example include a &lt;code&gt;Cookie&lt;/code&gt; header, the request would fail if the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header was &quot;*&quot;. But it does not fail: Because the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header is &quot;&lt;code&gt;http://foo.example&lt;/code&gt;&quot; (an actual origin) rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, the credential-cognizant content is returned to the invoking web content.</source>
          <target state="translated">上記の例のリクエストヘッダーには &lt;code&gt;Cookie&lt;/code&gt; ヘッダーが含まれているため、 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーの値が「*」の場合、リクエストは失敗します。ただし、失敗するわけではありません &lt;code&gt;http://foo.example&lt;/code&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーの値は「 &lt;code&gt;*&lt;/code&gt; 」ワイルドカードではなく「http：//foo.example」（実際のオリジン）であるため、資格情報を認識するコンテンツはに返されます。呼び出すWebコンテンツ。</target>
        </trans-unit>
        <trans-unit id="f8cadc83ac6b7350fa14508ccacb5caa822a4e4b" translate="yes" xml:space="preserve">
          <source>Because the request headers in the above example include a &lt;code&gt;Cookie&lt;/code&gt; header, the request would fail if the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header were &quot;*&quot;. But it does not fail: Because the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header is &quot;&lt;code&gt;http://foo.example&lt;/code&gt;&quot; (an actual origin) rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, the credential-cognizant content is returned to the invoking web content.</source>
          <target state="translated">上記の例のリクエストヘッダーには &lt;code&gt;Cookie&lt;/code&gt; ヘッダーが含まれているため、 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーの値が「*」の場合、リクエストは失敗します。ただし、失敗することはありません &lt;code&gt;http://foo.example&lt;/code&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーの値は「 &lt;code&gt;*&lt;/code&gt; 」ワイルドカードではなく「http：//foo.example」（実際のオリジン）であるため、資格情報認識コンテンツは呼び出し元のWebコンテンツ。</target>
        </trans-unit>
        <trans-unit id="9f1e2820de19096a78681bfbbd2529f24bd989c8" translate="yes" xml:space="preserve">
          <source>Because the source of a link might be private information or might
   reveal an otherwise private information source, it is strongly
   recommended that the user be able to select whether or not the
   Referer field is sent. For example, a browser client could have a
   toggle switch for browsing openly/anonymously, which would
   respectively enable/disable the sending of Referer and From
   information.

   Clients SHOULD NOT include a Referer header field in a (non-secure)
   HTTP request if the referring page was transferred with a secure
   protocol.

   Authors of services which use the HTTP protocol SHOULD NOT use GET
   based forms for the submission of sensitive data, because this will
   cause this data to be encoded in the Request-URI. Many existing
   servers, proxies, and user agents will log the request URI in some
   place where it might be visible to third parties. Servers can use
   POST-based form submission instead</source>
          <target state="translated">リンクの送信元が個人情報であったり、そうでなければ個人情報の送信元を明らかにする可能性があるため、Referererフィールドを送信するかどうかをユーザが選択できるようにすることが強く推奨されます。例えば、ブラウザクライアントは公開/匿名でブラウジングするためのトグルスイッチを持っていて、 RefererとFrom情報の送信をそれぞれ有効/無効にすることができます。クライアントは、参照するページが安全なプロトコルで転送された場合、(安全でない)HTTPリクエストに Refererヘッダーフィールドを含めるべきではない[SHOULD NOT]。HTTPプロトコルを使うサービスの作者は、機密データの送信に GETベースのフォームを使うべきではない[SHOULD NOT]。多くの既存のサーバー、プロキシ、ユーザーエージェントはリクエストURIを第三者から見えるかもしれない場所に記録します。サーバは代わりにPOSTベースのフォーム送信を使うことができます。</target>
        </trans-unit>
        <trans-unit id="89777ff4d87ff412faf166b9388ba8bd9eb18838" translate="yes" xml:space="preserve">
          <source>Because unsafe request methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7231]&lt;/a&gt;) such as
   PUT, POST or DELETE have the potential for changing state on the
   origin server, intervening caches can use them to keep their contents
   up to date.

   A cache MUST invalidate the effective Request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of
   [RFC7230]&lt;/a&gt;) as well as the URI(s) in the Location and Content-Location
   response header fields (if present) when a non-error status code is
   received in response to an unsafe request method.

   However, a cache MUST NOT invalidate a URI from a Location or
   Content-Location response header field if the host part of that URI
   differs from the host part in the effective request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5
   of [RFC7230]&lt;/a&gt;).  This helps prevent denial-of-service attacks.

   A cache MUST invalidate the effective request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of
   [RFC7230]&lt;/a&gt;) when it receives a non-error response to a request with a
   method whose safety is unknown.

   Here, a &quot;non-error response&quot; is one with a 2xx (Successful) or 3xx
   (Redirection) status code.  &quot;Invalidate&quot; means that the cache will
   either remove all stored responses related to the effective request
   URI or will mark these as &quot;invalid&quot; and in need of a mandatory
   validation before they can be sent in response to a subsequent
   request.

   Note that this does not guarantee that all appropriate responses are
   invalidated.  For example, a state-changing request might invalidate
   responses in the caches it travels through, but relevant responses
   still might be stored in other caches that it has not.</source>
          <target state="translated">PUT、POST、DELETEなどの安全でないリクエストメソッド（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;[RFC7231]のセクション4.2.1&lt;/a&gt;）は、オリジンサーバーの状態を変更する可能性があるため、介在するキャッシュはそれらを使用してコンテンツを最新の状態に保つことができます。に応答してエラー以外のステータスコードが受信された場合、キャッシュは、有効なリクエストURI（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;[RFC7230]のセクション5.5&lt;/a&gt;）と、LocationおよびContent-Location応答ヘッダーフィールド（存在する場合）のURIを無効にする必要があります（MUST ）。安全でない要求メソッド。ただし、そのURIのホスト部分が有効な要求URIのホスト部分と異なる場合、キャッシュはLocationまたはContent-Location応答ヘッダーフィールドからのURIを無効にしてはなりません（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;[RFC7230]のセクション5.5）。&lt;/a&gt;）。これにより、サービス拒否攻撃を防ぐことができます。キャッシュは有効なリクエストURIを無効にしなければならない（MUST）（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;[RFC7230]のセクション5.5&lt;/a&gt;）安全性が不明なメソッドを使用したリクエストに対して、エラー以外の応答を受け取った場合。ここで、「非エラー応答」とは、2xx（成功）または3xx（リダイレクト）のステータスコードを持つ応答です。 「無効化」とは、キャッシュが有効なリクエストURIに関連するすべての保存された応答を削除するか、これらを「無効」としてマークし、後続のリクエストに応答して送信する前に必須の検証が必要であることを意味します。これは、すべての適切な応答が無効になることを保証するものではないことに注意してください。たとえば、状態変更要求は、通過するキャッシュ内の応答を無効にする可能性がありますが、関連する応答は、そうでない他のキャッシュに保存される可能性があります。</target>
        </trans-unit>
        <trans-unit id="7164b8ce21f524d63c0906c78c5305985077fd8f" translate="yes" xml:space="preserve">
          <source>Before Firefox 58, &lt;code&gt;frame-ancestors&lt;/code&gt; is ignored in &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;.</source>
          <target state="translated">Firefox 58より前のバージョンでは、 &lt;code&gt;frame-ancestors&lt;/code&gt; は &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; で無視されます。</target>
        </trans-unit>
        <trans-unit id="ee3fc8de372dabedbc1b9fd227e55db192bded9b" translate="yes" xml:space="preserve">
          <source>Before Firefox 80, applying &lt;code&gt;fullscreen&lt;/code&gt; to an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; (i.e. via the &lt;code&gt;allow&lt;/code&gt; attribute) does not work unless the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute is also present.</source>
          <target state="translated">Firefox 80より前では、 &lt;code&gt;allowfullscreen&lt;/code&gt; 属性も存在しない限り、 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; に（つまり、 &lt;code&gt;allow&lt;/code&gt; 属性を介して） &lt;code&gt;fullscreen&lt;/code&gt; を適用することはできません。</target>
        </trans-unit>
        <trans-unit id="e1aa5f2715f87eb515763d2edd53baeae3f8d201" translate="yes" xml:space="preserve">
          <source>Before Firefox for Android 58, &lt;code&gt;frame-ancestors&lt;/code&gt; is ignored in &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;.</source>
          <target state="translated">Android 58向けFirefoxより前は、 &lt;code&gt;frame-ancestors&lt;/code&gt; は &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; で無視されていました。</target>
        </trans-unit>
        <trans-unit id="9418490a330c1f1a821e30ad652b77665cb8b536" translate="yes" xml:space="preserve">
          <source>Before a client and server can exchange an HTTP request/response pair, they must establish a TCP connection, a process which requires several round-trips. The default behavior of HTTP/1.0 is to open a separate TCP connection for each HTTP request/response pair. This is less efficient than sharing a single TCP connection when multiple requests are sent in close succession.</source>
          <target state="translated">クライアントとサーバが HTTP リクエスト/レスポンスのペアを交換する前に、TCP 接続を確立しなければなりません。HTTP/1.0 のデフォルトの動作は、HTTP リクエスト/レスポンスのペアごとに別々の TCP 接続を開くことです。これは、複数のリクエストが連続して送信される場合に単一の TCP 接続を共有するよりも効率的ではありません。</target>
        </trans-unit>
        <trans-unit id="98afb5d15000b90ef6856f9873a69ca2c0709aba" translate="yes" xml:space="preserve">
          <source>Before later builds of Chrome 64, invalid Expect-CT reports would be sent. Newer versions do not send reports after 10 weeks from the build date. See &lt;a href=&quot;https://crbug.com/786563&quot;&gt;bug 786563&lt;/a&gt;.</source>
          <target state="translated">後のChrome64のビルドの前に、無効なExpect-CTレポートが送信されていました。新しいバージョンでは、ビルド日から10週間後にレポートが送信されません。&lt;a href=&quot;https://crbug.com/786563&quot;&gt;バグ786563を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="62fc5c2bc1f37893a14f09a3227f0a7bbc9e9b1c" translate="yes" xml:space="preserve">
          <source>Beginning in version 41, Firefox for Android will contain the Android version as part of the &lt;var&gt;platform&lt;/var&gt; token. For increased interoperability, if the browser is running on a version below 4 it will report 4.4. Android versions 4 and above will report the version accurately. Note that the same Gecko&amp;mdash;with the same capabilities&amp;mdash;is shipped to all versions of Android.</source>
          <target state="translated">バージョン41以降、Android版Firefoxには &lt;var&gt;platform&lt;/var&gt; トークンの一部としてAndroid版が含まれます。相互運用性を高めるために、ブラウザーが4より前のバージョンで実行されている場合は、4.4と報告されます。Androidバージョン4以降では、バージョンが正確に報告されます。同じGecko、つまり同じ機能がすべてのバージョンのAndroidに同梱されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3dac22f5a23b1f3829fde1d94704586ae962f362" translate="yes" xml:space="preserve">
          <source>Below, the client creates a Member Entry using POST:

       POST /myblog/entries HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       Slug: First Post

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-123T17:09:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;It's something moving... solid metal&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server signals a successful creation with a status code of 201,
   and returns an ETag header in the response.  Because, in this case,
   the server returned a Content-Location header and Location header
   with the same value, the returned Entry representation can be
   understood to be a complete representation of the newly created Entry
   (see &lt;a href=&quot;#section-9.2&quot;&gt;Section 9.2&lt;/a&gt;).

       HTTP/1.1 201 Created
       Date: Fri, 23 Feb 2007 21:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry
       Location: http://example.org/edit/first-post.atom
       Content-Location: http://example.org/edit/first-post.atom
       ETag: &quot;e180ee84f0671b1&quot;

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-123T17:09:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;It's something moving... solid metal&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The client can, if it wishes, use the returned ETag value to later
   construct a &quot;Conditional GET&quot; as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].  In this case,
   prior to editing, the client sends the ETag value for the Member
   using the If-None-Match header. 

       GET /edit/first-post.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       If-None-Match: &quot;e180ee84f0671b1&quot;

   If the Entry has not been modified, the response will be a status
   code of 304 (&quot;Not Modified&quot;).  This allows the client to determine
   whether it still has the most recent representation of the Entry at
   the time of editing.

       HTTP/1.1 304 Not Modified
       Date: Sat, 24 Feb 2007 13:17:11 GMT

   After editing, the client can PUT the Entry and send the ETag entity
   value in an If-Match header, informing the server to accept the entry
   on the condition that the entity value sent still matches the
   server's.

       PUT /edit/first-post.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       If-Match: &quot;e180ee84f0671b1&quot;

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-24T16:34:06Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Update: it's a hoax!&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server however has since received a more recent copy than the
   client's, and it responds with a status code of 412 (&quot;Precondition
   Failed&quot;).

       HTTP/1.1 412 Precondition Failed
       Date: Sat, 24 Feb 2007 16:34:11 GMT

   This informs the client that the server has a more recent version of
   the Entry and will not allow the sent entity to be stored.</source>
          <target state="translated">以下では、クライアントがPOSTを使用してメンバーエントリを作成します：POST / myblog / entries HTTP / 1.1 Host：example.org Authorization：Basic ZGFmZnk6c2VjZXJldA == Content-Type：application / atom + xml; type = entry Content-Length：nnn Slug：最初の投稿&amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; Atom-Powered Robots Run Amok &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn： uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2007-02-123T17：09：02Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Captain Lansing &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content&amp;gt;動くものです...固体金属&amp;lt;/ content&amp;gt; &amp;lt;/ entry&amp;gt;サーバーは、ステータスコード201で正常に作成されたことを通知します。応答でETagヘッダーを返します。この場合、サーバーがContent-LocationヘッダーとLocationヘッダーを同じ値で返したため、返されたEntry表現は、新しく作成されたEntryの完全な表現であると理解できます（&lt;a href=&quot;#section-9.2&quot;&gt;セクション9.2&lt;/a&gt;）。 HTTP / 1.1 201作成日：2007年2月23日金曜日21:17:11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry Location：http://example.org/edit/first- post.atom Content-Location：http://example.org/edit/first-post.atom ETag： &quot;e180ee84f0671b1&quot; &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http：//www.w3。 org / 2005 / Atom &quot;&amp;gt; &amp;lt;title&amp;gt; Atom-Powered Robots Run Amok &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2007-02-123T17：09 ：02Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Captain Lansing &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content&amp;gt;それは何かが動いている...固体金属&amp;lt;/ content&amp;gt; &amp;lt;/ entry&amp;gt;クライアントは、必要に応じて、返されたETag値を使用して、[で定義されている「条件付きGET」を後で作成できます。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]。この場合、クライアントは編集前に、If-None-Matchヘッダーを使用してメンバーのETag値を送信します。 GET /edit/first-post.atom HTTP / 1.1 Host：example.org Authorization：Basic ZGFmZnk6c2VjZXJldA == If-None-Match： &quot;e180ee84f0671b1&quot;エントリが変更されていない場合、応答はステータスコード304（ 「未変更」）。これにより、クライアントは編集時にエントリの最新の表現がまだあるかどうかを判断できます。 HTTP / 1.1 304 Not Modified Date：Sat、24 Feb 2007 13:17:11 GMT編集後、クライアントはエントリをPUTし、ETagエンティティ値をIf-Matchヘッダーで送信して、サーバーにエントリを受け入れるように通知できます。送信されたエンティティ値がサーバーの値とまだ一致しているという条件。PUT /edit/first-post.atom HTTP / 1.1 Host：example.org Authorization：Basic ZGFmZnk6c2VjZXJldA == Content-Type：application / atom + xml; type = entry Content-Length：nnn If-Match： &quot;e180ee84f0671b1&quot; &amp;lt;？ xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; Atom-Powered Robots Run Amok &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695- cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2007-02-24T16：34：06Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Captain Lansing &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content&amp;gt;更新：これはhoax！&amp;lt;/ content&amp;gt; &amp;lt;/ entry&amp;gt;ただし、サーバーはクライアントのものよりも新しいコピーを受信して​​います。ステータスコード412（「前提条件の失敗」）で応答します。 HTTP / 1.1 412前提条件が失敗しました日付：2007年2月24日土曜日16:34:11 GMTこれは、サーバーに新しいバージョンのエントリがあり、送信されたエンティティを保存できないことをクライアントに通知します。</target>
        </trans-unit>
        <trans-unit id="c0330bfb1138bf9fb6ae44f78a5af3bf13c6fff6" translate="yes" xml:space="preserve">
          <source>Below, the client sends a POST request containing a PNG image to the
   URI of a Collection that accepts PNG images:

       POST /edit/ HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Slug: The Beach
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The server signals a successful creation with a status code of 201.
   The response includes a Location header indicating the Member URI of
   the Media Link Entry and a representation of that entry in the body
   of the response.  The Media Link Entry includes a content element
   with a &quot;src&quot; attribute.  It also contains a link with a link relation
   of &quot;edit-media&quot;, specifying the IRI to be used for modifying the
   Media Resource.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/media/edit/the_beach.atom

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt; 

   Later, the client sends a PUT request containing the new PNG using
   the URI indicated in the Media Link Entry's &quot;edit-media&quot; link:

       PUT /edit/the_beach.png HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The server signals a successful edit with a status code of 200.

       HTTP/1.1 200 Ok
       Date: Fri, 8 Oct 2006 17:17:11 GMT

   The client can edit the metadata for the picture.  First GET the
   Media Link Entry:

       GET /media/edit/the_beach.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==

   The Media Link Entry is returned.

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:18:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       ETag: &quot;c181bb840673b5&quot;

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The metadata can be updated, in this case to add a summary, and then
   PUT back to the server. 

       PUT /media/edit/the_beach.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       If-Match: &quot;c181bb840673b5&quot;

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot;&amp;gt;
             A nice sunset picture over the water.
         &amp;lt;/summary&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The update was successful.

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:19:11 GMT
       Content-Length: 0

   Multiple Media Resources can be added to the Collection.

       POST /edit/ HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Slug: The Pier
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The Resource is created successfully.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/media/edit/the_pier.atom 

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Pier&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efe6b&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:26:43Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_pier.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_pier.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The client can now create a new Atom Entry in the blog Entry
   Collection that references the two newly created Media Resources.

       POST /blog/ HTTP/1.1
       Host: example.org
       Content-Type: application/atom+xml;type=entry
       Slug: A day at the beach
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;A fun day at the beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6b&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:40:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content type=&quot;xhtml&quot;&amp;gt;
             &amp;lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;We had a good day at the beach.
                     &amp;lt;xhtml:img alt=&quot;the beach&quot;
                         src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;Later we walked down to the pier.
                     &amp;lt;xhtml:img  alt=&quot;the pier&quot;
                         src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
             &amp;lt;/xhtml:div&amp;gt;
         &amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The Resource is created successfully. 

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:20:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/blog/atom/a-day-at-the-beach.atom

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;A fun day at the beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;http://example.org/blog/a-day-at-the-beach.xhtml&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:43:07Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content type=&quot;xhtml&quot;&amp;gt;
             &amp;lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;We had a good day at the beach.
                     &amp;lt;xhtml:img alt=&quot;the beach&quot;
                        src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;Later we walked down to the pier.
                     &amp;lt;xhtml:img alt=&quot;the pier&quot;
                        src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
             &amp;lt;/xhtml:div&amp;gt;
         &amp;lt;/content&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
           href=&quot;http://example.org/blog/edit/a-day-at-the-beach.atom&quot;/&amp;gt;
         &amp;lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot;
           href=&quot;http://example.org/blog/a-day-at-the-beach.html&quot;/&amp;gt;
       &amp;lt;/entry&amp;gt;

   Note that the returned Entry contains a link with a relation of
   &quot;alternate&quot; that points to the associated HTML page that was created
   -- this is not required by this specification, but is included to
   show the kinds of changes a server can make to an Entry.</source>
          <target state="translated">以下では、クライアントがPNG画像を含むPOSTリクエストを、PNG画像を受け入れるコレクションのURIに送信します。POST / edit / HTTP / 1.1 Host：media.example.org Content-Type：image / png Slug：The Beach Authorization：基本ZGFmZnk6c2VjZXJldA == Content-Length：nnn ... binary dataサーバーは、ステータスコード201で正常に作成されたことを通知します。応答には、メディアリンクエントリのメンバーURIを示すLocationヘッダーと、応答の本文。メディアリンクエントリには、「src」属性を持つコンテンツ要素が含まれています。また、メディアリソースの変更に使用するIRIを指定する「edit-media」のリンク関係を持つリンクも含まれています。 HTTP / 1.1 201作成日：2005年10月7日金曜日17:17：11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry; charset = &quot;utf-8&quot;場所：http://example.org/media/edit/the_beach.atom &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; The Beach &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：17：08Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;summary type = &quot;text&quot; /&amp;gt; &amp;lt;content type = &quot;image / png &quot;src =&quot; http://media.example.org/the_beach.png &quot;/&amp;gt; &amp;lt;link rel =&quot; edit-media &quot;href =&quot; http://media.example.org/edit/the_beach.png &quot; /&amp;gt; &amp;lt;link rel = &quot;edit&quot; href = &quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt; &amp;lt;/ entry&amp;gt;その後、クライアントは、メディアに示されているURIを使用して、新しいPNGを含むPUTリクエストを送信しますリンクエントリの「edit-media」リンク：PUT /edit/the_beach.png HTTP / 1.1ホスト：media.example.org Content-Type：image / png Authorization：Basic ZGFmZnk6c2VjZXJldA == Content-Length：nnn ... binary data Theサーバーは、ステータスコード200で編集が成功したことを通知します。HTTP/ 1.1 200 Ok日付：2006年10月8日金曜日17:17:11 GMTクライアントは、画像のメタデータを編集できます。最初にメディアリンクエントリを取得します。GET/media/edit/the_beach.atom HTTP / 1.1 Host：example.org Authorization：基本ZGFmZnk6c2VjZXJldA ==メディアリンクエントリが返されます。 HTTP / 1.1 200 Ok日付：2005年10月7日金曜日17:18:11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry; charset = &quot;utf-8&quot; ETag： &quot;c181bb840673b5&quot; &amp;lt; ？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; The Beach &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb -aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：17：08Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;summary type = &quot;text&quot; /&amp;gt; &amp;lt;content type = &quot;image / png&quot; src = &quot;http://media.example.org/the_beach.png&quot; /&amp;gt; &amp;lt;link rel = &quot;edit-media&quot;href = &quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt; &amp;lt;link rel = &quot;edit&quot; href = &quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt; &amp;lt; / entry&amp;gt;メタデータを更新して、この場合は概要を追加してから、サーバーにPUTで戻すことができます。 PUT /media/edit/the_beach.atom HTTP / 1.1 Host：example.org Authorization：Basic ZGFmZnk6c2VjZXJldA == Content-Type：application / atom + xml; type = entry Content-Length：nnn If-Match： &quot;c181bb840673b5&quot; &amp;lt;？ xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; The Beach &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb- aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：17：08Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;summary type = &quot;text&quot;&amp;gt;水に沈む夕日の写真。 &amp;lt;/ summary&amp;gt; &amp;lt;content type = &quot;image / png&quot; src = &quot;http://media.example.org/the_beach.png&quot; /&amp;gt; &amp;lt;link rel = &quot;edit-media&quot; href = &quot;http：// media。 example.org/edit/the_beach.png &quot;/&amp;gt; &amp;lt;link rel =&quot; edit &quot;href =&quot; http://example.org/media/edit/the_beach.atom &quot;/&amp;gt; &amp;lt;/ entry&amp;gt;更新は成功しました。 HTTP / 1.1 200 Ok日付：2005年10月7日（金）17:19:11 GMTコンテンツ長：0複数のメディアリソースをコレクションに追加できます。 POST / edit / HTTP / 1.1ホスト：media.example.org Content-Type：image / png Slug：桟橋認証：基本ZGFmZnk6c2VjZXJldA == Content-Length：nnn ... binary dataリソースが正常に作成されました。 HTTP / 1.1 201作成日：2005年10月7日金曜日17:17:11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry; charset = &quot;utf-8&quot;場所：http：// example.org/media/edit/the_pier.atom &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt;桟橋&amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efe6b &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：26：43Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author &amp;gt; &amp;lt;summary type = &quot;text&quot; /&amp;gt; &amp;lt;content type = &quot;image / png &quot;src =&quot; http://media.example.org/the_pier.png &quot;/&amp;gt; &amp;lt;link rel =&quot; edit-media &quot;href =&quot; http://media.example.org/edit/the_pier.png &quot;/&amp;gt; &amp;lt;link rel =&quot; edit &quot;href =&quot; http://example.org/media/edit/the_pier.atom &quot;/&amp;gt; &amp;lt;/ entry&amp;gt;クライアントは、ブログエントリコレクションに新しいAtomエントリを作成できるようになりました。新しく作成された2つのメディアリソースを参照します。POST/ blog / HTTP / 1.1ホスト：example.org Content-Type：application / atom + xml; type = entry Slug：ビーチでの1日Authorization：基本ZGFmZnk6c2VjZXJldA == Content-Length： nnn &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt;ビーチでの楽しい1日&amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6b &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：40：02Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content type = &quot;xhtml&quot;&amp;gt; &amp;lt;xhtml：div xmlns：xhtml = &quot;http://www.w3.org/1999/xhtml&quot;&amp;gt; &amp;lt;xhtml：p&amp;gt;ビーチで良い一日を過ごしました。 &amp;lt;xhtml：img alt = &quot;the beach&quot; src = &quot;http://media.example.org/the_beach.png&quot; /&amp;gt; &amp;lt;/ xhtml：p&amp;gt; &amp;lt;xhtml：p&amp;gt;その後、桟橋まで歩いていきました。 &amp;lt;xhtml：img alt = &quot;the pier&quot; src = &quot;http://media.example.org/the_pier.png&quot; /&amp;gt; &amp;lt;/ xhtml：p&amp;gt; &amp;lt;/ xhtml：div&amp;gt; &amp;lt;/ content&amp;gt; &amp;lt;/ entry&amp;gt;リソースが正常に作成されました。 HTTP / 1.1 200 Ok日付：2005年10月7日（金）17:20:11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry; charset = &quot;utf-8&quot;場所：http：// example.org/blog/atom/a-day-at-the-beach.atom &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt; title&amp;gt;ビーチで楽しい一日&amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; http://example.org/blog/a-day-at-the-beach.xhtml &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2005-10-07T17：43 ：07Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; Daffy &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content type = &quot;xhtml&quot;&amp;gt; &amp;lt;xhtml：div xmlns：xhtml = &quot;http://www.w3.org/1999/ xhtml &quot;&amp;gt;&amp;lt;xhtml：p&amp;gt;ビーチで良い一日を過ごしました。 &amp;lt;xhtml：img alt = &quot;the beach&quot; src = &quot;http://media.example.org/the_beach.png&quot; /&amp;gt; &amp;lt;/ xhtml：p&amp;gt; &amp;lt;xhtml：p&amp;gt;その後、桟橋まで歩いていきました。 &amp;lt;xhtml：img alt = &quot;the pier&quot; src = &quot;http://media.example.org/the_pier.png&quot; /&amp;gt; &amp;lt;/ xhtml：p&amp;gt; &amp;lt;/ xhtml：div&amp;gt; &amp;lt;/ content&amp;gt; &amp;lt;link rel = &quot; edit &quot;href =&quot; http://example.org/blog/edit/a-day-at-the-beach.atom &quot;/&amp;gt; &amp;lt;link rel =&quot; alternate &quot;type =&quot; text / html &quot;href =&quot; http： //example.org/blog/a-day-at-the-beach.html &quot;/&amp;gt; &amp;lt;/ entry&amp;gt;返されたエントリには、作成された関連するHTMLページを指す「代替」の関係を持つリンクが含まれていることに注意してください。これは、この仕様では必須ではありませんが、サーバーが行うことができる変更の種類を示すために含まれていますエントリ。</target>
        </trans-unit>
        <trans-unit id="be9cb09a54952403acfaab07ff33017f6f0fca24" translate="yes" xml:space="preserve">
          <source>Below, the client sends a POST request containing an Atom Entry
   representation using the URI of the Collection:

       POST /edit/ HTTP/1.1
       Host: example.org
       User-Agent: Thingio/1.0
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       Slug: First Post

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2003-12-13T18:30:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John Doe&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Some text.&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server signals a successful creation with a status code of 201.
   The response includes a Location header indicating the Member Entry
   URI of the Atom Entry, and a representation of that Entry in the body
   of the response.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/edit/first-post.atom
       ETag: &quot;c180de84f991g8&quot; 

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2003-12-13T18:30:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John Doe&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Some text.&amp;lt;/content&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
             href=&quot;http://example.org/edit/first-post.atom&quot;/&amp;gt;
       &amp;lt;/entry&amp;gt;

   The Entry created and returned by the Collection might not match the
   Entry POSTed by the client.  A server MAY change the values of
   various elements in the Entry, such as the atom:id, atom:updated, and
   atom:author values, and MAY choose to remove or add other elements
   and attributes, or change element content and attribute values.</source>
          <target state="translated">以下では、クライアントはコレクションのURIを使用してAtomエントリ表現を含むPOSTリクエストを送信します：POST / edit / HTTP / 1.1ホスト：example.orgユーザーエージェント：Thingio / 1.0承認：基本ZGFmZnk6c2VjZXJldA ==コンテンツタイプ：アプリケーション/ atom + xml; type = entry Content-Length：nnn Slug：First Post &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; Atom-Powered Robots Run Amok &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2003-12-13T18：30：02Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt; name&amp;gt; John Doe &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content&amp;gt; Some text。&amp;lt;/ content&amp;gt; &amp;lt;/ entry&amp;gt;サーバーは、作成が成功したことをステータスコード201で通知します。応答には、AtomエントリのメンバーエントリURIを示すLocationヘッダーと、応答の本文にあるそのエントリの表現が含まれます。 HTTP / 1.1 201作成日：2005年10月7日金曜日17:17:11 GMT Content-Length：nnn Content-Type：application / atom + xml; type = entry; charset = &quot;utf-8&quot;場所：http：// example.org/edit/first-post.atom ETag： &quot;c180de84f991g8&quot; &amp;lt;？xml version = &quot;1.0&quot;？&amp;gt; &amp;lt;entry xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;title&amp;gt; Atom -Powered Robots Run Amok &amp;lt;/ title&amp;gt; &amp;lt;id&amp;gt; urn：uuid：1225c695-cfb8-4ebb-aaaa-80da344efa6a &amp;lt;/ id&amp;gt; &amp;lt;updated&amp;gt; 2003-12-13T18：30：02Z &amp;lt;/ updated&amp;gt; &amp;lt;author&amp;gt; &amp;lt;name&amp;gt; John Doe &amp;lt;/ name&amp;gt; &amp;lt;/ author&amp;gt; &amp;lt;content&amp;gt; Some text。&amp;lt;/ content&amp;gt; &amp;lt;link rel = &quot;edit&quot; href = &quot;http://example.org/edit/first-post.atom&quot; /&amp;gt; &amp;lt;/ entry&amp;gt;コレクションによって作成および返されたエントリは、クライアントによってPOSTされたエントリと一致しない場合があります。サーバーは、atom：id、atom：updated、atom：authorの値など、エントリ内のさまざまな要素の値を変更できます。また、他の要素と属性を削除または追加するか、要素のコンテンツと属性値を変更できます。コレクションによって作成および返されたエントリは、クライアントによってPOSTされたエントリと一致しない場合があります。サーバーは、atom：id、atom：updated、atom：authorの値など、エントリ内のさまざまな要素の値を変更できます。また、他の要素と属性を削除または追加するか、要素のコンテンツと属性値を変更できます。コレクションによって作成および返されたエントリは、クライアントによってPOSTされたエントリと一致しない場合があります。サーバーは、atom：id、atom：updated、atom：authorの値など、エントリ内のさまざまな要素の値を変更できます。また、他の要素と属性を削除または追加するか、要素のコンテンツと属性値を変更できます。</target>
        </trans-unit>
        <trans-unit id="552d2669fbc3963dfa12ac837a60570b8d21b825" translate="yes" xml:space="preserve">
          <source>Besides the setting of the validators on the server side, this mechanism is transparent: all browsers manage a cache and send such conditional requests without any special work to be done by Web developers.</source>
          <target state="translated">サーバ側でバリデータを設定するだけでなく、このメカニズムは透過的です:すべてのブラウザがキャッシュを管理し、ウェブ開発者が特別な作業をすることなく条件付きリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="95a31c7b8d5f0b04cb1a96329834684da05258b3" translate="yes" xml:space="preserve">
          <source>Best Practices for Using the Vary Header &amp;ndash; fastly.com</source>
          <target state="translated">Varyヘッダーを使用するためのベストプラクティス&amp;ndash; fastly.com</target>
        </trans-unit>
        <trans-unit id="3696a45b0fbbf421a242df5da5ec4b688f7df3d0" translate="yes" xml:space="preserve">
          <source>Best practices for good user experiences</source>
          <target state="translated">良いユーザー体験のためのベストプラクティス</target>
        </trans-unit>
        <trans-unit id="e8192d28d193fb637729d7681a715b53c8d8e6fa" translate="yes" xml:space="preserve">
          <source>Between the Web browser and the server, numerous computers and machines relay the HTTP messages. Due to the layered structure of the Web stack, most of these operate at either the transport, network or physical levels, becoming transparent at the HTTP layer and potentially making a significant impact on performance. Those operating at the application layers are generally called &lt;strong&gt;proxies&lt;/strong&gt;. These can be transparent, or not (changing requests going through them), and may perform numerous functions:</source>
          <target state="translated">Webブラウザーとサーバーの間で、多数のコンピューターとマシンがHTTPメッセージを中継します。Webスタックの階層構造により、これらのほとんどはトランスポート、ネットワーク、または物理レベルで動作し、HTTPレイヤーで透過的になり、パフォーマンスに大きな影響を与える可能性があります。アプリケーション層で動作するものは、一般に&lt;strong&gt;プロキシ&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。これらは透過的である場合と透過的でない場合があり（それらを通過する要求の変更）、多数の機能を実行できます。</target>
        </trans-unit>
        <trans-unit id="0a8c80fd5bfdf982f1a24e39074b4f6a15dfc943" translate="yes" xml:space="preserve">
          <source>Between the Web browser and the server, numerous computers and machines relay the HTTP messages. Due to the layered structure of the Web stack, most of these operate at the transport, network or physical levels, becoming transparent at the HTTP layer and potentially making a significant impact on performance. Those operating at the application layers are generally called &lt;strong&gt;proxies&lt;/strong&gt;. These can be transparent, forwarding on the requests they receive without altering them in any way, or non-transparent, in which case they will change the request in some way before passing it along to the server. Proxies may perform numerous functions:</source>
          <target state="translated">Webブラウザーとサーバーの間で、多数のコンピューターとマシンがHTTPメッセージを中継します。Webスタックの階層構造により、これらのほとんどはトランスポート、ネットワーク、または物理レベルで動作し、HTTP層で透過的になり、パフォーマンスに大きな影響を与える可能性があります。アプリケーション層で動作するものは、一般に&lt;strong&gt;プロキシ&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。これらは透過的で、受信したリクエストを変更せずに転送することも、不透明にすることもできます。その場合、サーバーに渡す前に何らかの方法でリクエストを変更します。プロキシは多くの機能を実行できます。</target>
        </trans-unit>
        <trans-unit id="d43d1533f1d10a317b9afc62ab5e7c5e6d08f4b9" translate="yes" xml:space="preserve">
          <source>Bitmap file</source>
          <target state="translated">ビットマップファイル</target>
        </trans-unit>
        <trans-unit id="2e7b5639c2d5c6aefb6a4756b1924c7615e2b7af" translate="yes" xml:space="preserve">
          <source>Blink</source>
          <target state="translated">Blink</target>
        </trans-unit>
        <trans-unit id="d47c2c9d44766d5026529dab6ab5f38489055deb" translate="yes" xml:space="preserve">
          <source>Blink-based (Chromium, Google Chrome, Opera 15+)</source>
          <target state="translated">ブリンクベース (Chromium,Google Chrome,Opera 15+)</target>
        </trans-unit>
        <trans-unit id="46790d0844afe283d3a8ad292d2479e6b7f8de27" translate="yes" xml:space="preserve">
          <source>Blink-based (Chromium, Google Chrome, Opera 15+, Edge on Android)</source>
          <target state="translated">ブリンクベース (Chromium,Google Chrome,Opera 15+,Edge on Android)</target>
        </trans-unit>
        <trans-unit id="12dcd04f8772116c748e7a1686d74433478cbbb7" translate="yes" xml:space="preserve">
          <source>Block pages from loading when they detect reflected XSS attacks:</source>
          <target state="translated">反映されたXSS攻撃を検知した場合、ページの読み込みをブロックします。</target>
        </trans-unit>
        <trans-unit id="72005736b3d633e161ec04f9f5626d8efc05d101" translate="yes" xml:space="preserve">
          <source>Block the use of outdated APIs like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&quot;&gt;synchronous XHR&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/write&quot;&gt;&lt;code&gt;document.write()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&quot;&gt;同期XHR&lt;/a&gt;や&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/write&quot;&gt; &lt;code&gt;document.write()&lt;/code&gt; &lt;/a&gt;などの古いAPIの使用をブロックします。</target>
        </trans-unit>
        <trans-unit id="1284de1552841a2d74b9dd9edf7b2b69b49a7a36" translate="yes" xml:space="preserve">
          <source>Blocks a request if the request destination is of type:</source>
          <target state="translated">リクエスト先がタイプの場合、リクエストをブロックします。</target>
        </trans-unit>
        <trans-unit id="3ae08957fc64f7c37c7fd78d3088b53f4a0ac969" translate="yes" xml:space="preserve">
          <source>Blocks a request if the requested type is</source>
          <target state="translated">要求されたタイプが</target>
        </trans-unit>
        <trans-unit id="46c32d078786c9c754da18021b9cdd7c2ac0a06f" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;http://blog.sidstamm.com/2010/08/http-strict-transport-security-has.html&quot;&gt;HTTP Strict Transport Security has landed!&lt;/a&gt;</source>
          <target state="translated">ブログ投稿：&lt;a href=&quot;http://blog.sidstamm.com/2010/08/http-strict-transport-security-has.html&quot;&gt;HTTP Strict Transport Securityが登場しました！&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f7b0d6ecddd36325803a206713ad475fcf71d8b" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;http://hacks.mozilla.org/2010/08/firefox-4-http-strict-transport-security-force-https/&quot;&gt;HTTP Strict Transport Security (force HTTPS)&lt;/a&gt;</source>
          <target state="translated">ブログ投稿：&lt;a href=&quot;http://hacks.mozilla.org/2010/08/firefox-4-http-strict-transport-security-force-https/&quot;&gt;HTTP Strict Transport Security（force HTTPS）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8bbcb0cbe3103f54b01e581bd5b4dcf154fe100" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;https://blog.sidstamm.com/2010/08/http-strict-transport-security-has.html&quot;&gt;HTTP Strict Transport Security has landed!&lt;/a&gt;</source>
          <target state="translated">ブログ投稿：&lt;a href=&quot;https://blog.sidstamm.com/2010/08/http-strict-transport-security-has.html&quot;&gt;HTTP Strict Transport Securityが登場しました！&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37f2aceceb8d0bab8adfd81677e137c925113f15" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;https://hacks.mozilla.org/2010/08/firefox-4-http-strict-transport-security-force-https/&quot;&gt;HTTP Strict Transport Security (force HTTPS)&lt;/a&gt;</source>
          <target state="translated">ブログ投稿：&lt;a href=&quot;https://hacks.mozilla.org/2010/08/firefox-4-http-strict-transport-security-force-https/&quot;&gt;HTTP Strict Transport Security（強制HTTPS）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8874edbfb3bde7b175aaba19f751935d9beacccf" translate="yes" xml:space="preserve">
          <source>Bodies can be broadly divided into three categories:</source>
          <target state="translated">身体は大きく分けて3つのカテゴリーに分けられます。</target>
        </trans-unit>
        <trans-unit id="2274273379451e1b300d8da8d1d55a10464ef909" translate="yes" xml:space="preserve">
          <source>Bodies can be broadly divided into two categories:</source>
          <target state="translated">身体は大きく分けて2つのカテゴリーに分けられます。</target>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="c11c5c92eb4bb23f4e3a2e484b5d01a2f02ca7c0" translate="yes" xml:space="preserve">
          <source>Bourne shell script</source>
          <target state="translated">ボーンシェルスクリプト</target>
        </trans-unit>
        <trans-unit id="35387df992c10423a1e97a8fdd9850a0e2b7c2bb" translate="yes" xml:space="preserve">
          <source>Brotli Compressed Data Format</source>
          <target state="translated">ブロトリ圧縮データフォーマット</target>
        </trans-unit>
        <trans-unit id="ebd022bdbe14f7ec31423f0eeb91b8cd71a827f2" translate="yes" xml:space="preserve">
          <source>Browse through detailed HTTP reference documentation.</source>
          <target state="translated">HTTP リファレンスの詳細なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="aac7378f1efd1829430797b0495fda2b1605e7e6" translate="yes" xml:space="preserve">
          <source>Browser Compatibility</source>
          <target state="translated">ブラウザの互換性</target>
        </trans-unit>
        <trans-unit id="63fac1fb83ccf0b03f982fe1fa1a1b2cd86ed72c" translate="yes" xml:space="preserve">
          <source>Browser Name</source>
          <target state="translated">ブラウザ名</target>
        </trans-unit>
        <trans-unit id="d18eb74e69d3d38bec47169d773de18efefdfab3" translate="yes" xml:space="preserve">
          <source>Browser behavior differs if this response erroneously includes a body on persistent connections See &lt;a href=&quot;204&quot;&gt;204 No Content&lt;/a&gt; for more detail.</source>
          <target state="translated">この応答に永続的な接続の本文が誤って含まれている場合、ブラウザーの動作は異なります。詳細については、&lt;a href=&quot;204&quot;&gt;204 No Content&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b99b91e559917941bb0e259fb1c7151b747a651d" translate="yes" xml:space="preserve">
          <source>Browser compatibility</source>
          <target state="translated">ブラウザの互換性</target>
        </trans-unit>
        <trans-unit id="b36b7a67afaec4b763f7afbae4c6ac08d5194f85" translate="yes" xml:space="preserve">
          <source>Browser compatibility is not relevant for this header (header is sent by server, and the specification does not define client behaviour).</source>
          <target state="translated">ブラウザの互換性はこのヘッダには関係ありません(ヘッダはサーバによって送信され、仕様ではクライアントの動作は定義されていません)。</target>
        </trans-unit>
        <trans-unit id="b9596fac5cc2ce26e02f68794e8302c229989e32" translate="yes" xml:space="preserve">
          <source>Browser compatibility&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;Update compatibility data on GitHub&lt;/a&gt;</source>
          <target state="translated">ブラウザーの互換性&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;GitHubの互換性データを更新します&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fa3ab903e2b10d31d9550e3d19e0235e67965c5" translate="yes" xml:space="preserve">
          <source>Browser detection using the user agent</source>
          <target state="translated">ユーザーエージェントを利用したブラウザ検出</target>
        </trans-unit>
        <trans-unit id="b250936e425b70355734e2e64ef7dec7333eb610" translate="yes" xml:space="preserve">
          <source>Browser fingerprinting is a set of techniques for identifying a
   specific user agent over time through its unique set of
   characteristics.  These characteristics might include information
   related to its TCP behavior, feature capabilities, and scripting
   environment, though of particular interest here is the set of unique
   characteristics that might be communicated via HTTP.  Fingerprinting
   is considered a privacy concern because it enables tracking of a user
   agent's behavior over time without the corresponding controls that
   the user might have over other forms of data collection (e.g.,
   cookies).  Many general-purpose user agents (i.e., Web browsers) have
   taken steps to reduce their fingerprints.

   There are a number of request header fields that might reveal
   information to servers that is sufficiently unique to enable
   fingerprinting.  The From header field is the most obvious, though it
   is expected that From will only be sent when self-identification is
   desired by the user.  Likewise, Cookie header fields are deliberately 

   designed to enable re-identification, so fingerprinting concerns only
   apply to situations where cookies are disabled or restricted by the
   user agent's configuration.

   The User-Agent header field might contain enough information to
   uniquely identify a specific device, usually when combined with other
   characteristics, particularly if the user agent sends excessive
   details about the user's system or extensions.  However, the source
   of unique information that is least expected by users is proactive
   negotiation (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;), including the Accept, Accept-Charset,
   Accept-Encoding, and Accept-Language header fields.

   In addition to the fingerprinting concern, detailed use of the
   Accept-Language header field can reveal information the user might
   consider to be of a private nature.  For example, understanding a
   given language set might be strongly correlated to membership in a
   particular ethnic group.  An approach that limits such loss of
   privacy would be for a user agent to omit the sending of
   Accept-Language except for sites that have been whitelisted, perhaps
   via interaction after detecting a Vary header field that indicates
   language negotiation might be useful.

   In environments where proxies are used to enhance privacy, user
   agents ought to be conservative in sending proactive negotiation
   header fields.  General-purpose user agents that provide a high
   degree of header field configurability ought to inform users about
   the loss of privacy that might result if too much detail is provided.
   As an extreme privacy measure, proxies could filter the proactive
   negotiation header fields in relayed requests.</source>
          <target state="translated">ブラウザのフィンガープリントは、独自の一連の特性を通じて特定のユーザーエージェントを経時的に識別するための一連の手法です。これらの特性には、TCPの動作、機能、スクリプト環境に関連する情報が含まれる場合がありますが、特に興味深いのは、HTTPを介して通信される可能性のある一連の固有の特性です。フィンガープリンティングは、ユーザーが他の形式のデータ収集（Cookieなど）に対して持つ可能性のある対応する制御なしに、ユーザーエージェントの動作を経時的に追跡できるため、プライバシーの問題と見なされます。多くの汎用ユーザーエージェント（Webブラウザなど）は、指紋を減らすための対策を講じています。フィンガープリントを有効にするために十分に一意である情報をサーバーに明らかにする可能性がある要求ヘッダーフィールドがいくつかあります。 Fromヘッダーフィールドが最も明白ですが、ユーザーが自己識別を希望する場合にのみFromが送信されることが予想されます。同様に、Cookieヘッダーフィールドは再識別を可能にするために意図的に設計されているため、フィンガープリントの問題は、ユーザーエージェントの構成によってCookieが無効化または制限されている状況にのみ適用されます。 User-Agentヘッダーフィールドには、特定のデバイスを一意に識別するのに十分な情報が含まれている可能性があります。通常、他の特性と組み合わせると、特にユーザーエージェントがユーザーのシステムや拡張機能に関する過度の詳細を送信する場合にそうです。しかしながら、ユーザーが最も予期しない固有の情報源は、積極的な交渉です（&lt;a href=&quot;#section-5.3&quot;&gt;セクション5.3&lt;/a&gt;）、Accept、Accept-Charset、Accept-Encoding、およびAccept-Languageヘッダーフィールドを含みます。フィンガープリントの問題に加えて、Accept-Languageヘッダーフィールドを詳細に使用すると、ユーザーが私的な性質のものであると考える可能性のある情報を明らかにすることができます。たとえば、特定の言語セットを理解することは、特定の民族グループのメンバーシップと強く相関している場合があります。このようなプライバシーの喪失を制限するアプローチは、おそらく言語ネゴシエーションが有用であることを示すVaryヘッダーフィールドを検出した後の相互作用を介して、ホワイトリストに登録されているサイトを除いて、ユーザーエージェントがAccept-Languageの送信を省略することです。プロキシを使用してプライバシーを強化する環境では、ユーザーエージェントはプロアクティブなネゴシエーションヘッダーフィールドを送信する際に慎重でなければなりません。高度なヘッダーフィールドの設定機能を提供する汎用ユーザーエージェントは、詳細が多すぎる場合に発生する可能性のあるプライバシーの喪失についてユーザーに通知する必要があります。極端なプライバシー対策として、プロキシはリレーされたリクエストのプロアクティブネゴシエーションヘッダーフィールドをフィルタリングできます。</target>
        </trans-unit>
        <trans-unit id="2ed002e27e188e607dd038f852e9932680fbaaf2" translate="yes" xml:space="preserve">
          <source>Browser implementation is being discussed in &lt;a href=&quot;https://github.com/w3c/web-share/issues/169&quot;&gt;https://github.com/w3c/web-share/issues/169&lt;/a&gt;.</source>
          <target state="translated">ブラウザの実装については、&lt;a href=&quot;https://github.com/w3c/web-share/issues/169&quot;&gt;https：//github.com/w3c/web-share/issues/169&lt;/a&gt;で説明されています。</target>
        </trans-unit>
        <trans-unit id="d70dd2cd112b43ff0945574d1dda0f74996baa01" translate="yes" xml:space="preserve">
          <source>Browser specific notes</source>
          <target state="translated">ブラウザ固有の注意事項</target>
        </trans-unit>
        <trans-unit id="4fc469bc098ba2e7153a183b517baa5e07dc2864" translate="yes" xml:space="preserve">
          <source>Browser test site: &lt;a href=&quot;https://projects.dm.id.lv/Public-Key-Pins_test&quot;&gt;HSTS and HPKP test&lt;/a&gt;</source>
          <target state="translated">ブラウザーテストサイト：&lt;a href=&quot;https://projects.dm.id.lv/Public-Key-Pins_test&quot;&gt;HSTSおよびHPKPテスト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1d7e0a33cf80fe452070f36fa8edcaff2499ee3" translate="yes" xml:space="preserve">
          <source>Browser version</source>
          <target state="translated">ブラウザのバージョン</target>
        </trans-unit>
        <trans-unit id="d09fda30e9d38d9aabf757744c9bcebdabaa3f5c" translate="yes" xml:space="preserve">
          <source>Browsers &lt;strong&gt;ignore&lt;/strong&gt; the &lt;code&gt;Expect-CT&lt;/code&gt; header over HTTP; the header only has effect on HTTPS connections.</source>
          <target state="translated">ブラウザは&lt;strong&gt;無視&lt;/strong&gt; &lt;code&gt;Expect-CT&lt;/code&gt; HTTP上ヘッダと、ヘッダーはHTTPS接続にのみ影響します。</target>
        </trans-unit>
        <trans-unit id="c2c3bd867e8f023b1e9b10989759e0116b284ac8" translate="yes" xml:space="preserve">
          <source>Browsers are migrating to have &lt;a href=&quot;https://www.chromestatus.com/feature/5088147346030592&quot;&gt;cookies default to &lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/a&gt;. If a cookie is needed to be sent cross-origin, opt out of the &lt;code&gt;SameSite&lt;/code&gt; restriction using the &lt;code&gt;None&lt;/code&gt; value. The &lt;code&gt;None&lt;/code&gt; value requires the &lt;a href=&quot;#Secure&quot;&gt;&lt;code&gt;Secure&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">ブラウザは、&lt;a href=&quot;https://www.chromestatus.com/feature/5088147346030592&quot;&gt;Cookieがデフォルトで &lt;code&gt;SameSite=Lax&lt;/code&gt; になる&lt;/a&gt;ように移行しています。Cookieをクロスオリジンで送信する必要がある場合は、 &lt;code&gt;None&lt;/code&gt; 値を使用して &lt;code&gt;SameSite&lt;/code&gt; 制限をオプトアウトします。 &lt;code&gt;None&lt;/code&gt; 値が必要で&lt;a href=&quot;#Secure&quot;&gt; &lt;code&gt;Secure&lt;/code&gt; &lt;/a&gt;属性を。</target>
        </trans-unit>
        <trans-unit id="08f273cb65b42c95174f6e5a89129c85c242b47c" translate="yes" xml:space="preserve">
          <source>Browsers are migrating to have &lt;a href=&quot;https://www.chromestatus.com/feature/5088147346030592&quot;&gt;cookies default to &lt;code&gt;SameSite=Lax&lt;/code&gt;&lt;/a&gt;. If a cookie is needed to be sent cross-origin, opt out of the SameSite restriction by using the &lt;code&gt;None&lt;/code&gt; directive. The &lt;code&gt;None&lt;/code&gt; directive requires that the &lt;a href=&quot;#Secure_and_HttpOnly_cookies&quot;&gt;&lt;code&gt;Secure&lt;/code&gt;&lt;/a&gt; attribute also be used.</source>
          <target state="translated">ブラウザは、&lt;a href=&quot;https://www.chromestatus.com/feature/5088147346030592&quot;&gt;Cookieがデフォルトで &lt;code&gt;SameSite=Lax&lt;/code&gt; になる&lt;/a&gt;ように移行しています。Cookieをクロスオリジンで送信する必要がある場合は、 &lt;code&gt;None&lt;/code&gt; ディレクティブを使用してSameSiteの制限をオプトアウトします。 &lt;code&gt;None&lt;/code&gt; ディレクティブは、ことが必要で&lt;a href=&quot;#Secure_and_HttpOnly_cookies&quot;&gt; &lt;code&gt;Secure&lt;/code&gt; &lt;/a&gt;属性を使用することも。</target>
        </trans-unit>
        <trans-unit id="040b9395d8c1be97fa38d9005cfb38d82433885b" translate="yes" xml:space="preserve">
          <source>Browsers block frontend JavaScript code from accessing the &lt;code&gt;Set Cookie&lt;/code&gt; header, as required by the Fetch spec, which defines &lt;code&gt;Set-Cookie&lt;/code&gt; as a &lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-response-header-name&quot;&gt;forbidden response-header name&lt;/a&gt; that &lt;a href=&quot;https://fetch.spec.whatwg.org/#ref-for-forbidden-response-header-name%E2%91%A0&quot;&gt;must be filtered out&lt;/a&gt; from any response exposed to frontend code.</source>
          <target state="translated">ブラウザブロックがアクセスするJavaScriptコードをフロントエンド &lt;code&gt;Set Cookie&lt;/code&gt; 定義フェッチ仕様によって必要に応じて、ヘッダ &lt;code&gt;Set-Cookie&lt;/code&gt; ように&lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-response-header-name&quot;&gt;禁止レスポンスヘッダ名&lt;/a&gt;&lt;a href=&quot;https://fetch.spec.whatwg.org/#ref-for-forbidden-response-header-name%E2%91%A0&quot;&gt;除外されなければならない&lt;/a&gt;フロントエンドコードにさらされる任意の応答から。</target>
        </trans-unit>
        <trans-unit id="a862ea052d45f44e70d62ee3df599d55e7a99307" translate="yes" xml:space="preserve">
          <source>Browsers send specific &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; for cross-site requests initiated from within &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;. It also expects to see specific HTTP headers sent back with cross-site responses. An overview of these headers, including sample JavaScript code that initiates requests and processes responses from the server, as well as a discussion of each header, &lt;a href=&quot;cors&quot;&gt;can be found in the HTTP Access Control (CORS) article&lt;/a&gt; and should be read as a companion article to this one. This article covers processing &lt;strong&gt;Access Control Requests&lt;/strong&gt; and formulating &lt;strong&gt;Access Control Responses&lt;/strong&gt; in PHP. The target audience for this article are server programmers or administrators. Although the code samples shown here are in PHP, similar concepts apply for ASP.net, Perl, Python, Java, etc.; in general, these concepts can be applied to any server-side programming environment that processes HTTP requests and dynamically formulates HTTP responses.</source>
          <target state="translated">ブラウザは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;内から開始されたクロスサイトリクエストの特定の&lt;a href=&quot;headers&quot;&gt;HTTPヘッダー&lt;/a&gt;を送信します。また、特定のHTTPヘッダーがクロスサイト応答で返されることも期待しています。サーバーからの要求を開始して応答を処理するサンプルJavaScriptコードを含むこれらのヘッダーの概要、および各ヘッダーの説明は&lt;a href=&quot;cors&quot;&gt;、HTTPアクセスコントロール（CORS）の記事に&lt;/a&gt;あり、以下の関連記事として読む必要があります。これです。この記事では、&lt;strong&gt;アクセス制御要求の&lt;/strong&gt;処理と&lt;strong&gt;アクセス制御応答の&lt;/strong&gt;定式化について説明します&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;PHPで。この記事の対象読者は、サーバープログラマーまたは管理者です。ここに示すコードサンプルはPHPですが、ASP.net、Perl、Python、Javaなどにも同様の概念が適用されます。一般に、これらの概念は、HTTP要求を処理し、HTTP応答を動的に作成する任意のサーバー側プログラミング環境に適用できます。</target>
        </trans-unit>
        <trans-unit id="f862e5c244452929ab40c4ceda509655ef249fcb" translate="yes" xml:space="preserve">
          <source>Browsers use &lt;code&gt;utf-8&lt;/code&gt; encoding for usernames and passwords.</source>
          <target state="translated">ブラウザは、ユーザー名とパスワードに &lt;code&gt;utf-8&lt;/code&gt; エンコーディングを使用します。</target>
        </trans-unit>
        <trans-unit id="a4d0e2f5033f06ac6f49cc655a388250e954dd48" translate="yes" xml:space="preserve">
          <source>Browsers use &lt;code&gt;utf-8&lt;/code&gt; encoding for usernames and passwords. Firefox used to use &lt;code&gt;ISO-8859-1&lt;/code&gt;, but changed over to &lt;code&gt;utf-8&lt;/code&gt; for parity with other browsers, and to avoid potential problems as described in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1419658&quot;&gt;bug 1419658&lt;/a&gt;.</source>
          <target state="translated">ブラウザは、ユーザー名とパスワードに &lt;code&gt;utf-8&lt;/code&gt; エンコーディングを使用します。Firefoxは以前は &lt;code&gt;ISO-8859-1&lt;/code&gt; を使用していましたが、他のブラウザーと同等にするため、および&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1419658&quot;&gt;バグ1419658で&lt;/a&gt;説明されている潜在的な問題を回避するために &lt;code&gt;utf-8&lt;/code&gt; に変更しました。</target>
        </trans-unit>
        <trans-unit id="a63957685418f827a422303f2aa0c711fe3143d4" translate="yes" xml:space="preserve">
          <source>Browsers use the MIME type, &lt;strong&gt;not the file extension&lt;/strong&gt;, to determine how to process a URL &amp;mdash; it is important that servers send the correct MIME type in the response's &lt;a href=&quot;../headers/content-type&quot;&gt;Content-Type header&lt;/a&gt;.</source>
          <target state="translated">ブラウザ&lt;strong&gt;は、ファイル拡張子&lt;/strong&gt;で&lt;strong&gt;はなく&lt;/strong&gt; MIMEタイプを使用して、URLの処理方法を決定します。サーバーがレスポンスの&lt;a href=&quot;../headers/content-type&quot;&gt;Content-Typeヘッダー&lt;/a&gt;で正しいMIMEタイプを送信することが重要です。</target>
        </trans-unit>
        <trans-unit id="2e9afcf709277aae6a6520057ea60bf3be39c90b" translate="yes" xml:space="preserve">
          <source>Browsers will not remember an &lt;code&gt;Expect-CT&lt;/code&gt; policy, unless the site has 'proven' it can serve a certificate satisfying the certificate transparency requirements. Browsers implement their own trust model regarding which CT logs are considered trusted for the certificate to have been logged to.</source>
          <target state="translated">サイトが証明書の透明性要件を満たす証明書を提供できることが「証明」されていない限り、ブラウザは &lt;code&gt;Expect-CT&lt;/code&gt; ポリシーを記憶しません。ブラウザは、証明書が記録されたときに信頼できると見なされるCTログに関する独自の信頼モ​​デルを実装します。</target>
        </trans-unit>
        <trans-unit id="5bc12d6c5418def433565d97fa4386bb760ddfa9" translate="yes" xml:space="preserve">
          <source>Buggy &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_server&quot;&gt;proxies&lt;/a&gt; are still common and these lead to strange and erratic behaviors that Web developers cannot foresee and diagnose easily.</source>
          <target state="translated">バギー&lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_server&quot;&gt;プロキシ&lt;/a&gt;はまだ一般的であり、これらはWeb開発者が簡単に予測および診断できない奇妙で不安定な動作につながります。</target>
        </trans-unit>
        <trans-unit id="a08f5341fe1477c327aaa2ec714bb0a54bdba4f3" translate="yes" xml:space="preserve">
          <source>Bugzilla bug 1459573</source>
          <target state="translated">バグジラ バグ 1459573</target>
        </trans-unit>
        <trans-unit id="82fd0d6dc5b3bab8b83886f108ed9c6addec57a9" translate="yes" xml:space="preserve">
          <source>Builds of Chrome are designed to stop enforcing the &lt;code&gt;Expect-CT&lt;/code&gt; policy 10 weeks after the installation's build date.</source>
          <target state="translated">Chromeのビルドは、インストールのビルド日から10週間後に &lt;code&gt;Expect-CT&lt;/code&gt; ポリシーの適用を停止するように設計されています。</target>
        </trans-unit>
        <trans-unit id="3838036b670cc0248afd246abbe594ee328cf4de" translate="yes" xml:space="preserve">
          <source>But browsers and standards are not perfect, and there are still some edge cases where detecting the browser is needed. Using the user agent to detect the browser looks simple, but doing it well is, in fact, a very hard problem. This document will guide you in doing this as correctly as possible.</source>
          <target state="translated">しかし、ブラウザや標準は完璧ではなく、ブラウザの検出が必要なエッジケースもまだ存在します。ブラウザを検出するためにユーザエージェントを使うのは簡単そうに見えますが、それをうまく行うのは、実際には非常に難しい問題です。このドキュメントでは、これを可能な限り正しく行うための指針を示します。</target>
        </trans-unit>
        <trans-unit id="7c8e3ceffa66e087ea7c8b96aa7587bcaf4d90e8" translate="yes" xml:space="preserve">
          <source>But if it&amp;rsquo;s not possible to make those changes, then another way that may be possible is to this:</source>
          <target state="translated">しかし、これらの変更を行うことができない場合は、次の方法が考えられます。</target>
        </trans-unit>
        <trans-unit id="d7241a2b594de7bc64154d28757129ce26170606" translate="yes" xml:space="preserve">
          <source>By default the policy is set to &lt;code&gt;*&lt;/code&gt;, which means synchronous requests are allowed in all frames.</source>
          <target state="translated">デフォルトでは、ポリシーは &lt;code&gt;*&lt;/code&gt; に設定されています。これは、同期要求がすべてのフレームで許可されることを意味します。</target>
        </trans-unit>
        <trans-unit id="95da926485cbe7c1b54926edc5fadc82e556e609" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;https://developer.mozilla.org/en/HTTP&quot;&gt;HTTP&lt;/a&gt; requests are issued sequentially. The next request is only issued once the response to the current request has been received. As they are affected by network latencies and bandwidth limitations, this can result in significant delay before the next request is &lt;em&gt;seen&lt;/em&gt; by the server.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;https://developer.mozilla.org/en/HTTP&quot;&gt;HTTP&lt;/a&gt;要求は順次発行されます。次の要求は、現在の要求に対する応答が受信されたときにのみ発行されます。これらはネットワークの待ち時間と帯域幅の制限の影響を受けるため、次の要求がサーバーに&lt;em&gt;認識&lt;/em&gt;されるまでに大幅な遅延が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6abb5b1e0911f25ada48f489e06f7debe4790d8f" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;index&quot;&gt;HTTP&lt;/a&gt; requests are issued sequentially. The next request is only issued once the response to the current request has been received. As they are affected by network latencies and bandwidth limitations, this can result in significant delay before the next request is &lt;em&gt;seen&lt;/em&gt; by the server.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;index&quot;&gt;HTTP&lt;/a&gt;リクエストは順番に発行されます。次のリクエストは、現在のリクエストへの応答が受信された後にのみ発行されます。彼らはネットワーク遅延と帯域幅の制限の影響を受けているとして、次の要求がされる前に、これは大幅な遅延が発生することができます&lt;em&gt;見&lt;/em&gt;サーバーで。</target>
        </trans-unit>
        <trans-unit id="dbfb748d8e0737c34e1264e5236d921dd7f9917f" translate="yes" xml:space="preserve">
          <source>By default, a response is cacheable if the requirements of the
   request method, request header fields, and the response status
   indicate that it is cacheable. &lt;a href=&quot;#section-13.4&quot;&gt;Section 13.4&lt;/a&gt; summarizes these defaults
   for cacheability. The following Cache-Control response directives
   allow an origin server to override the default cacheability of a
   response:

   public
      Indicates that the response MAY be cached by any cache, even if it
      would normally be non-cacheable or cacheable only within a non-
      shared cache. (See also Authorization, &lt;a href=&quot;#section-14.8&quot;&gt;section 14.8&lt;/a&gt;, for
      additional details.)

   private
      Indicates that all or part of the response message is intended for
      a single user and MUST NOT be cached by a shared cache. This
      allows an origin server to state that the specified parts of the 

      response are intended for only one user and are not a valid
      response for requests by other users. A private (non-shared) cache
      MAY cache the response.

       Note: This usage of the word private only controls where the
       response may be cached, and cannot ensure the privacy of the
       message content.

   no-cache
       If the no-cache directive does not specify a field-name, then a
      cache MUST NOT use the response to satisfy a subsequent request
      without successful revalidation with the origin server. This
      allows an origin server to prevent caching even by caches that
      have been configured to return stale responses to client requests.

      If the no-cache directive does specify one or more field-names,
      then a cache MAY use the response to satisfy a subsequent request,
      subject to any other restrictions on caching. However, the
      specified field-name(s) MUST NOT be sent in the response to a
      subsequent request without successful revalidation with the origin
      server. This allows an origin server to prevent the re-use of
      certain header fields in a response, while still allowing caching
      of the rest of the response.

       Note: Most HTTP/1.0 caches will not recognize or obey this
       directive.</source>
          <target state="translated">デフォルトでは、リクエストメソッド、リクエストヘッダーフィールド、およびレスポンスステータスの要件がキャッシュ可能であることを示している場合、レスポンスはキャッシュ可能です。&lt;a href=&quot;#section-13.4&quot;&gt;セクション13.4&lt;/a&gt;は、キャッシュ可能性のためのこれらのデフォルトを要約しています。次のCache-Control応答ディレクティブを使用すると、オリジンサーバーは応答のデフォルトのキャッシュ可能性をオーバーライドできます。public通常はキャッシュ不可または非共有キャッシュ内でのみキャッシュ可能であっても、応答がキャッシュによってキャッシュされる可能性があることを示します。 。 （承認、&lt;a href=&quot;#section-14.8&quot;&gt;セクション14.8&lt;/a&gt;も参照、詳細については。）private応答メッセージのすべてまたは一部が単一のユーザーを対象としており、共有キャッシュによってキャッシュされてはならないことを示します。これにより、オリジンサーバーは、応答の指定された部分は1人のユーザーのみを対象とし、他のユーザーによる要求には有効な応答ではないことを示すことができます。プライベート（非共有）キャッシュは応答をキャッシュしてもよい（MAY）。注：プライベートという単語のこの使用法は、応答がキャッシュされる場所を制御するだけであり、メッセージコンテンツのプライバシーを保証することはできません。 no-cache no-cacheディレクティブでフィールド名が指定されていない場合、キャッシュは、オリジンサーバーでの再検証に成功せずに、後続の要求を満たすために応答を使用してはなりません（MUST NOT）。これにより、オリジンサーバーは、クライアントの要求に対して古い応答を返すように構成されたキャッシュによっても、キャッシュを防止できます。 no-cacheディレクティブが1つ以上のフィールド名を指定している場合、キャッシュは、キャッシュに関する他の制限に従って、後続の要求を満たすために応答を使用できます（MAY）。ただし、指定されたフィールド名は、オリジンサーバーでの再検証に成功せずに、後続の要求への応答で送信してはなりません（MUST NOT）。これにより、オリジンサーバーは応答の特定のヘッダーフィールドの再利用を防ぎながら、応答の残りのキャッシュを許可できます。注：ほとんどのHTTP / 1.0キャッシュは、このディレクティブを認識または従いません。no-cacheディレクティブが1つ以上のフィールド名を指定している場合、キャッシュは、キャッシュに関する他の制限に従って、後続の要求を満たすために応答を使用できます（MAY）。ただし、指定されたフィールド名は、オリジンサーバーでの再検証に成功せずに、後続の要求への応答で送信してはなりません（MUST NOT）。これにより、オリジンサーバーは応答の特定のヘッダーフィールドの再利用を防ぎながら、応答の残りのキャッシュを許可できます。注：ほとんどのHTTP / 1.0キャッシュは、このディレクティブを認識または従いません。no-cacheディレクティブが1つ以上のフィールド名を指定している場合、キャッシュは、キャッシングに関する他の制限に従って、後続の要求を満たすために応答を使用できます（MAY）。ただし、指定されたフィールド名は、オリジンサーバーでの再検証に成功せずに、後続の要求への応答で送信してはなりません（MUST NOT）。これにより、オリジンサーバーは応答の特定のヘッダーフィールドの再利用を防ぎながら、応答の残りのキャッシュを許可できます。注：ほとんどのHTTP / 1.0キャッシュは、このディレクティブを認識または従いません。指定されたフィールド名は、オリジンサーバーでの再検証に成功せずに、後続の要求への応答で送信してはなりません（MUST NOT）。これにより、オリジンサーバーは応答の特定のヘッダーフィールドの再利用を防ぎながら、応答の残りのキャッシュを許可できます。注：ほとんどのHTTP / 1.0キャッシュは、このディレクティブを認識または従いません。指定されたフィールド名は、オリジンサーバーでの再検証に成功せずに、後続の要求への応答で送信してはなりません（MUST NOT）。これにより、オリジンサーバーは応答の特定のヘッダーフィールドの再利用を防ぎながら、応答の残りのキャッシュを許可できます。注：ほとんどのHTTP / 1.0キャッシュは、このディレクティブを認識または従いません。</target>
        </trans-unit>
        <trans-unit id="11cebe099b732834a230be98a924681140743e7e" translate="yes" xml:space="preserve">
          <source>By default, only the 6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;simple response headers&lt;/a&gt; are exposed:</source>
          <target state="translated">デフォルトでは、6つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;単純な応答ヘッダー&lt;/a&gt;のみが公開されます。</target>
        </trans-unit>
        <trans-unit id="fa262e31090b07e93005688b0506414a054e9ae2" translate="yes" xml:space="preserve">
          <source>By default, only the 7 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_response_header&quot;&gt;CORS-safelisted response headers&lt;/a&gt; are exposed:</source>
          <target state="translated">デフォルトでは、7つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_response_header&quot;&gt;CORSセーフリスト応答ヘッダー&lt;/a&gt;のみが公開されます。</target>
        </trans-unit>
        <trans-unit id="2f534edc05bd142ea112ee3efccba58b43dd4c66" translate="yes" xml:space="preserve">
          <source>By default, the Geolocation API can be used within top-level documents and their same-origin child frames. This directive allows or prevents cross-origin frames from accessing geolocation. This includes same-origin frames.</source>
          <target state="translated">デフォルトでは、Geolocation API はトップレベルのドキュメントとその同一起源の子フレーム内で使用できます。このディレクティブは、クロスオリジンのフレームがジオロケーションにアクセスすることを許可したり、 禁止したりします。これには同一起源のフレームも含まれます。</target>
        </trans-unit>
        <trans-unit id="e044c03f1a747bedf5cf5499ef70c090ed113f76" translate="yes" xml:space="preserve">
          <source>By default, top-level documents and their same-origin child frames can request and enter fullscreen mode. This directive allows or prevents cross-origin frames from using fullscreen mode. This includes same-origin frames.</source>
          <target state="translated">デフォルトでは、トップレベルのドキュメントとその同じオリジナルの子フレームは、 フルスクリーンモードを要求したり入力したりすることができます。このディレクティブは、クロスオリジンのフレームがフルスクリーンモードを使用することを許可したり、禁止したりします。これには同一起源のフレームも含まれます。</target>
        </trans-unit>
        <trans-unit id="d23c07d6cec707b5f2b899cf897854aba60b3de4" translate="yes" xml:space="preserve">
          <source>By default, violation reports aren't sent. To enable violation reporting, you need to specify the &lt;a href=&quot;headers/content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; policy directive, providing at least one URI to which to deliver the reports:</source>
          <target state="translated">デフォルトでは、違反レポートは送信されません。違反レポートを有効にするには、レポートを配信するURIを少なくとも1つ指定して、&lt;a href=&quot;headers/content-security-policy/report-uri&quot;&gt; &lt;code&gt;report-uri&lt;/code&gt; &lt;/a&gt;ポリシーディレクティブを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8029f70a8cb4b060850538e53207e165c56eb9a2" translate="yes" xml:space="preserve">
          <source>By far, the most common use case for upgrading an HTTP connection is to use WebSockets, which are always implemented by upgrading an HTTP or HTTPS connection. Keep in mind that if you're opening a new connection using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;WebSocket API&lt;/a&gt;, or any library that does WebSockets, most or all of this is done for you. For example, opening a WebSocket connection is as simple as:</source>
          <target state="translated">はるかに、HTTP接続をアップグレードする最も一般的な使用例は、HTTPまたはHTTPS接続をアップグレードすることで常に実装されるWebSocketを使用することです。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;WebSocket API&lt;/a&gt;またはWebSocketsを実行するライブラリを使用して新しい接続を開く場合は、これらのほとんどまたはすべてが自動的に行われることに注意してください。たとえば、WebSocket接続を開くのは次のように簡単です。</target>
        </trans-unit>
        <trans-unit id="8e0591ef828136aecdfc13e9fe74e5b53dd0d8e6" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;'none'&lt;/code&gt; keyword for the origin list, the specified features will be disabled for all browsing contexts (this includes all iframes), regardless of their origin.</source>
          <target state="translated">指定することで、 &lt;code&gt;'none'&lt;/code&gt; の原点リストのキーワードを、指定された機能には関係なく、その起源の、全てのブラウジングコンテキスト（これはすべてのiframeを含みます）のために無効になります。</target>
        </trans-unit>
        <trans-unit id="8358024c4d3220c8cee184585d77cac9c14c31ac" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;'none'&lt;/code&gt; keyword for the origin list, the specified features will be disabled for all browsing contexts, regardless of their origin.</source>
          <target state="translated">指定することで、 &lt;code&gt;'none'&lt;/code&gt; の原点リストのキーワードを、指定された機能には関係なく、その起源の、すべてのブラウジングコンテキストのために無効になります。</target>
        </trans-unit>
        <trans-unit id="424fa2e5f873eae608f951882e066b4cbc6e7248" translate="yes" xml:space="preserve">
          <source>By their very nature, HTTP intermediaries are men-in-the-middle and,
   thus, represent an opportunity for man-in-the-middle attacks.
   Compromise of the systems on which the intermediaries run can result
   in serious security and privacy problems.  Intermediaries might have
   access to security-related information, personal information about
   individual users and organizations, and proprietary information
   belonging to users and content providers.  A compromised
   intermediary, or an intermediary implemented or configured without
   regard to security and privacy considerations, might be used in the
   commission of a wide range of potential attacks.

   Intermediaries that contain a shared cache are especially vulnerable
   to cache poisoning attacks, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-8&quot;&gt;Section&amp;nbsp;8 of [RFC7234]&lt;/a&gt;. 

   Implementers need to consider the privacy and security implications
   of their design and coding decisions, and of the configuration
   options they provide to operators (especially the default
   configuration).

   Users need to be aware that intermediaries are no more trustworthy
   than the people who run them; HTTP itself cannot solve this problem.</source>
          <target state="translated">その性質上、HTTP仲介者は中間者であり、したがって中間者攻撃の機会を表します。仲介者が実行されるシステムの侵害は、深刻なセキュリティとプライバシーの問題を引き起こす可能性があります。仲介者は、セキュリティ関連情報、個々のユーザーと組織に関する個人情報、およびユーザーとコンテンツプロバイダーに属する専有情報にアクセスできます。侵害された仲介者、またはセキュリティとプライバシーの考慮事項を考慮せずに実装または設定された仲介者が、広範な潜在的な攻撃のコミッションに使用される可能性があります。&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-8&quot;&gt;[RFC7234]のセクション8で&lt;/a&gt;説明されているように、共有キャッシュを含む仲介者は、キャッシュポイズニング攻撃に対して特に脆弱です。。実装者は、設計とコーディングの決定、およびオペレーターに提供する構成オプション（特にデフォルトの構成）のプライバシーとセキュリティへの影響を考慮する必要があります。ユーザーは、仲介者がそれらを実行する人々よりも信頼できるものではないことを認識する必要があります。 HTTP自体はこの問題を解決できません。</target>
        </trans-unit>
        <trans-unit id="068b79ba257daf146b30abe76ed868aecb1b606b" translate="yes" xml:space="preserve">
          <source>By their very nature, HTTP proxies are men-in-the-middle, and
   represent an opportunity for man-in-the-middle attacks. Compromise of
   the systems on which the proxies run can result in serious security
   and privacy problems. Proxies have access to security-related
   information, personal information about individual users and
   organizations, and proprietary information belonging to users and
   content providers. A compromised proxy, or a proxy implemented or
   configured without regard to security and privacy considerations,
   might be used in the commission of a wide range of potential attacks.

   Proxy operators should protect the systems on which proxies run as
   they would protect any system that contains or transports sensitive
   information. In particular, log information gathered at proxies often
   contains highly sensitive personal information, and/or information
   about organizations. Log information should be carefully guarded, and
   appropriate guidelines for use developed and followed. (&lt;a href=&quot;#section-15.1.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-15.1.1&quot;&gt;15.1.1&lt;/a&gt;). 

   Caching proxies provide additional potential vulnerabilities, since
   the contents of the cache represent an attractive target for
   malicious exploitation. Because cache contents persist after an HTTP
   request is complete, an attack on the cache can reveal information
   long after a user believes that the information has been removed from
   the network. Therefore, cache contents should be protected as
   sensitive information.

   Proxy implementors should consider the privacy and security
   implications of their design and coding decisions, and of the
   configuration options they provide to proxy operators (especially the
   default configuration).

   Users of a proxy need to be aware that they are no trustworthier than
   the people who run the proxy; HTTP itself cannot solve this problem.

   The judicious use of cryptography, when appropriate, may suffice to
   protect against a broad range of security and privacy attacks. Such
   cryptography is beyond the scope of the HTTP/1.1 specification.</source>
          <target state="translated">その性質上、HTTPプロキシは中間者であり、中間者攻撃の機会を表します。プロキシが実行されているシステムのセキュリティ侵害は、深刻なセキュリティとプライバシーの問題を引き起こす可能性があります。プロキシは、セキュリティ関連情報、個々のユーザーと組織に関する個人情報、およびユーザーとコンテンツプロバイダーが所有する専有情報にアクセスできます。侵害されたプロキシ、またはセキュリティとプライバシーの考慮事項に関係なく実装または設定されたプロキシは、広範囲の潜在的な攻撃の委託に使用される可能性があります。プロキシオペレーターは、機密情報を含むまたは転送するシステムを保護するのと同様に、プロキシが実行されるシステムを保護する必要があります。特に、プロキシで収集されたログ情報には、機密性の高い個人情報や組織に関する情報が含まれていることがよくあります。ログ情報は注意深く保護する必要があり、使用のための適切なガイドラインを作成して従う必要があります。 （&lt;a href=&quot;#section-15.1.1&quot;&gt;セクション&lt;/a&gt;&lt;a href=&quot;#section-15.1.1&quot;&gt;15.1.1&lt;/a&gt;）。キャッシュの内容は悪意のある悪用の魅力的なターゲットであるため、キャッシュプロキシは潜在的な脆弱性をさらに提供します。キャッシュの内容はHTTPリクエストが完了した後も存続するため、ユーザーがネットワークから情報が削除されたとユーザーが信じた後も、キャッシュに対する攻撃によって情報が明らかになる可能性があります。したがって、キャッシュの内容は機密情報として保護する必要があります。プロキシの実装者は、設計とコーディングの決定、およびプロキシオペレータに提供する構成オプション（特にデフォルトの構成）のプライバシーとセキュリティへの影響を考慮する必要があります。プロキシのユーザーは、プロキシを実行する人々よりも信頼できないことに注意する必要があります。 HTTP自体はこの問題を解決できません。暗号の賢明な使用、必要に応じて、幅広いセキュリティおよびプライバシー攻撃から保護するのに十分な場合があります。このような暗号化は、HTTP / 1.1仕様の範囲を超えています。</target>
        </trans-unit>
        <trans-unit id="0385baee4e5a7514e39184b6448baf26de0bf842" translate="yes" xml:space="preserve">
          <source>Bypassing additional restrictions</source>
          <target state="translated">追加制限をバイパスして</target>
        </trans-unit>
        <trans-unit id="3dfb40a9e84e63716a4b33d9963c4cfd678075a5" translate="yes" xml:space="preserve">
          <source>Byte Ranges (RFC 7233)</source>
          <target state="translated">バイト範囲 (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b18368c56eb40788963923a6e1129947a0d58087" translate="yes" xml:space="preserve">
          <source>C-Shell script</source>
          <target state="translated">シーシェルスクリプト</target>
        </trans-unit>
        <trans-unit id="6e288959d3443bcec62386f7d9014542f6872829" translate="yes" xml:space="preserve">
          <source>CONNECT</source>
          <target state="translated">CONNECT</target>
        </trans-unit>
        <trans-unit id="2600bf1e8e192e1bd65ac3bc3a4d82977f60d6da" translate="yes" xml:space="preserve">
          <source>CONNECT (RFC 7231)</source>
          <target state="translated">コネクト(RFC7231)</target>
        </trans-unit>
        <trans-unit id="3f06f1ede16af06a408e9c55accedff143ec05ac" translate="yes" xml:space="preserve">
          <source>COOP will process-isolate your document and potential attackers can't access to your global object if they were opening it in a popup, preventing a set of cross-origin attacks dubbed &lt;a href=&quot;https://github.com/xsleaks/xsleaks&quot;&gt;XS-Leaks&lt;/a&gt;.</source>
          <target state="translated">COOPはドキュメントを処理分離し、潜在的な攻撃者がポップアップで開いている場合はグローバルオブジェクトにアクセスできず、&lt;a href=&quot;https://github.com/xsleaks/xsleaks&quot;&gt;XS-Leaksと&lt;/a&gt;呼ばれる一連のクロスオリジン攻撃を防ぎます。</target>
        </trans-unit>
        <trans-unit id="58b0c89f90f23a658ff74ef5bd072768c76288f7" translate="yes" xml:space="preserve">
          <source>CORP is an additional layer of protection beyond the default &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;. Cross-Origin Resource Policy complements &lt;a href=&quot;https://fetch.spec.whatwg.org/#corb&quot;&gt;Cross-Origin Read Blocking&lt;/a&gt; (CORB), which is a mechanism to prevent some cross-origin reads by default.</source>
          <target state="translated">CORPは、デフォルトの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/same-origin_policy&quot;&gt;同一生成元ポリシー&lt;/a&gt;を超える追加の保護レイヤーです。クロスオリジンリソースポリシーは、デフォルトで一部のクロスオリジン読み取りを防止するメカニズムである&lt;a href=&quot;https://fetch.spec.whatwg.org/#corb&quot;&gt;クロスオリジン読み取りブロッキング&lt;/a&gt;（CORB）を補完します。</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="6296a1fd2a34552fbb648aabe29411711a0e4595" translate="yes" xml:space="preserve">
          <source>CORS and caching</source>
          <target state="translated">CORSとキャッシング</target>
        </trans-unit>
        <trans-unit id="3c63268612970c5bd579c70dbeed257045fe1f70" translate="yes" xml:space="preserve">
          <source>CORS enabled image</source>
          <target state="translated">CORSを有効にした画像</target>
        </trans-unit>
        <trans-unit id="e825c1a70b304027f50005fcb1118744bfcdf168" translate="yes" xml:space="preserve">
          <source>CORS error messages</source>
          <target state="translated">CORS エラーメッセージ</target>
        </trans-unit>
        <trans-unit id="184d3111cdadf6b3fad8c042206c94ffd04e65c3" translate="yes" xml:space="preserve">
          <source>CORS errors</source>
          <target state="translated">CORS エラー</target>
        </trans-unit>
        <trans-unit id="d1cb428716c692d19e9dc06754cff0043e662a41" translate="yes" xml:space="preserve">
          <source>CORS failures result in errors, but for security reasons, specifics about the error &lt;em&gt;are not available to JavaScript&lt;/em&gt;. All the code knows is that an error occurred. The only way to determine what specifically went wrong is to look at the browser's console for details.</source>
          <target state="translated">CORSに失敗するとエラー&lt;em&gt;が&lt;/em&gt;発生します&lt;em&gt;が&lt;/em&gt;、セキュリティ上の理由から、&lt;em&gt;JavaScript&lt;/em&gt;ではエラーの詳細を&lt;em&gt;利用できません&lt;/em&gt;。コードが知っているのは、エラーが発生したことだけです。具体的に何が悪かったのかを判断する唯一の方法は、ブラウザのコンソールで詳細を確認することです。</target>
        </trans-unit>
        <trans-unit id="e389a185748256670e3bef3e9d485d4db6698009" translate="yes" xml:space="preserve">
          <source>CORS failures result in errors, but for security reasons, specifics about what went wrong &lt;em&gt;are not available to JavaScript code&lt;/em&gt;. All the code knows is that an error occurred. The only way to determine what specifically went wrong is to look at the browser's console for details.</source>
          <target state="translated">CORSの失敗はエラーになりますが、セキュリティ上の理由から、問題の詳細&lt;em&gt;はJavaScriptコードでは利用できません&lt;/em&gt;。コードが知っているのは、エラーが発生したことだけです。具体的に何が問題であったかを特定する唯一の方法は、詳細をブラウザのコンソールで確認することです。</target>
        </trans-unit>
        <trans-unit id="de24c9d37107bb00fdf3a04f2c2a9d24eabcbabc" translate="yes" xml:space="preserve">
          <source>CORS introduction</source>
          <target state="translated">CORSの紹介</target>
        </trans-unit>
        <trans-unit id="ee0eba3ae2bb3a8277a088b3fe2cba0700041b16" translate="yes" xml:space="preserve">
          <source>CORS settings attributes</source>
          <target state="translated">CORS 設定属性</target>
        </trans-unit>
        <trans-unit id="089d646aeb28f1767e0d39506004c44f044e2a50" translate="yes" xml:space="preserve">
          <source>CORS-safelisted request header</source>
          <target state="translated">CORSセーフリステッド要求ヘッダ</target>
        </trans-unit>
        <trans-unit id="c658a0ab02da27fa9bc91475d5f929983201d0e9" translate="yes" xml:space="preserve">
          <source>CORS-safelisted request-header</source>
          <target state="translated">CORSセーフリスト要求ヘッダー</target>
        </trans-unit>
        <trans-unit id="303b72d3bf7642992ec9938ae19c4e19cbd5022d" translate="yes" xml:space="preserve">
          <source>CORS-safelisted response header</source>
          <target state="translated">CORSセーフリステッド応答ヘッダ</target>
        </trans-unit>
        <trans-unit id="4822cee4b44a5acfdf824aef5c202c725aa2e1ef" translate="yes" xml:space="preserve">
          <source>CORS-safelisted response-header</source>
          <target state="translated">CORSセーフリステッド応答ヘッダ</target>
        </trans-unit>
        <trans-unit id="3115498a58c30161e8334af0606a41f44c318e04" translate="yes" xml:space="preserve">
          <source>CSP</source>
          <target state="translated">CSP</target>
        </trans-unit>
        <trans-unit id="70771af22a8b356fbf094cdf8ec696e798056732" translate="yes" xml:space="preserve">
          <source>CSP &lt;a href=&quot;content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="translated">CSP &lt;a href=&quot;content-security-policy/report-uri&quot;&gt; &lt;code&gt;report-uri&lt;/code&gt; &lt;/a&gt;ディレクティブ</target>
        </trans-unit>
        <trans-unit id="44f87a469d5fa9f5e3c9a3ab2c29c19df8341c51" translate="yes" xml:space="preserve">
          <source>CSP &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="translated">CSP &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt; &lt;code&gt;upgrade-insecure-requests&lt;/code&gt; &lt;/a&gt;ディレクティブ</target>
        </trans-unit>
        <trans-unit id="2e0d3366da966d21d7a419c2ed0bbe7fe3d112f6" translate="yes" xml:space="preserve">
          <source>CSP Level 2 frame-ancestors directive</source>
          <target state="translated">CSP レベル 2 フレーム・アンセスタ指令</target>
        </trans-unit>
        <trans-unit id="d9132b00c8144355d2ffb30916581bd6454aef63" translate="yes" xml:space="preserve">
          <source>CSP allows multiple policies being specified for a resource, including via the &lt;code&gt;Content-Security-Policy&lt;/code&gt; header, the &lt;a href=&quot;content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">CSPでは、 &lt;code&gt;Content-Security-Policy&lt;/code&gt; ヘッダー、&lt;a href=&quot;content-security-policy-report-only&quot;&gt; &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; &lt;/a&gt;ヘッダー、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を含む、リソースに複数のポリシーを指定できます。</target>
        </trans-unit>
        <trans-unit id="84514b55cad8a4471776e8261e9056e00bb80eff" translate="yes" xml:space="preserve">
          <source>CSP directives</source>
          <target state="translated">CSP指令</target>
        </trans-unit>
        <trans-unit id="6edf30c08fbe221348e45d46487682ad464890a5" translate="yes" xml:space="preserve">
          <source>CSP directives (&lt;a href=&quot;https://www.w3.org/TR/CSP/#csp-directives&quot;&gt;https://www.w3.org/TR/CSP/#csp-directives&lt;/a&gt;):</source>
          <target state="translated">CSPディレクティブ（&lt;a href=&quot;https://www.w3.org/TR/CSP/#csp-directives&quot;&gt;https://www.w3.org/TR/CSP/#csp-directives&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="da26228b4f698331031c5864aacaf5b9f95766d7" translate="yes" xml:space="preserve">
          <source>CSP for Web Workers</source>
          <target state="translated">ウェブワーカーのためのCSP</target>
        </trans-unit>
        <trans-unit id="612d537b7ed50a4dda4dafd9890db5ab966fe8e6" translate="yes" xml:space="preserve">
          <source>CSP in Web Workers</source>
          <target state="translated">ウェブワーカーのCSP</target>
        </trans-unit>
        <trans-unit id="ac7e232a207938fbc334d7ae81fd9271bdea2b5f" translate="yes" xml:space="preserve">
          <source>CSP in workers</source>
          <target state="translated">労働者のCSP</target>
        </trans-unit>
        <trans-unit id="62becf9c2b19df7737b78178e6297a23a4286119" translate="yes" xml:space="preserve">
          <source>CSP is designed to be fully backward compatible (except CSP version 2 where there are some explicitly-mentioned inconsistencies in backward compatibility; more details &lt;a href=&quot;https://www.w3.org/TR/CSP2&quot;&gt;here&lt;/a&gt; section 1.1). Browsers that don't support it still work with servers that implement it, and vice-versa: browsers that don't support CSP simply ignore it, functioning as usual, defaulting to the standard same-origin policy for web content. If the site doesn't offer the CSP header, browsers likewise use the standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="translated">CSPは、完全に下位互換性を持つように設計されています（CSPバージョン2を除き、下位互換性に明示的に言及された矛盾がいくつかあります。詳細&lt;a href=&quot;https://www.w3.org/TR/CSP2&quot;&gt;は、&lt;/a&gt;セクション1.1を参照）。それをサポートしていないブラウザーは、それを実装しているサーバーでも機能します。逆もまた同様です。CSPをサポートしていないブラウザーは単にそれを無視し、通常どおりに機能し、Webコンテンツの標準の同一生成元ポリシーをデフォルトにします。サイトがCSPヘッダーを提供していない場合、ブラウザーは同様に標準の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;同一生成元ポリシーを使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9c066fd6908e5e3d0bb62d17e654cbfe8a428f91" translate="yes" xml:space="preserve">
          <source>CSP makes it possible for server administrators to reduce or eliminate the vectors by which XSS can occur by specifying the domains that the browser should consider to be valid sources of executable scripts. A CSP compatible browser will then only execute scripts loaded in source files received from those allowlisted domains, ignoring all other script (including inline scripts and event-handling HTML attributes).</source>
          <target state="translated">CSP は、ブラウザが実行可能なスクリプトの有効なソースとみなすべきドメインを指定することで、サーバ管理者が XSS が発生する可能性のあるベクトルを削減または排除することを可能にします。CSP 互換のブラウザは、許可されたドメインから受け取ったソースファイルに読み込まれたスクリプトのみを実行し、他のすべてのスクリプト(インラインスクリプトやイベント処理の HTML 属性を含む)を無視します。</target>
        </trans-unit>
        <trans-unit id="cc54f753bc7cbbc002ef53de42786ebf31429cfa" translate="yes" xml:space="preserve">
          <source>CSP makes it possible for server administrators to reduce or eliminate the vectors by which XSS can occur by specifying the domains that the browser should consider to be valid sources of executable scripts. A CSP compatible browser will then only execute scripts loaded in source files received from those whitelisted domains, ignoring all other script (including inline scripts and event-handling HTML attributes).</source>
          <target state="translated">CSP は、ブラウザが実行可能なスクリプトの有効なソースとみなすべきドメインを指定することで、サーバ管理者が XSS が発生する可能性のあるベクトルを削減または排除することを可能にします。CSP 互換のブラウザは、ホワイトリストに登録されたドメインから受信したソースファイルに読み込まれたスクリプトのみを実行し、他のすべてのスクリプト(インラインスクリプトやイベント処理の HTML 属性を含む)を無視します。</target>
        </trans-unit>
        <trans-unit id="7031a0ce63915761c940ed51b1837a242dbd3b4b" translate="yes" xml:space="preserve">
          <source>CSP version</source>
          <target state="translated">CSPバージョン</target>
        </trans-unit>
        <trans-unit id="a3d4a5f94061540e9f0aa3594fa2f993bb976f3b" translate="yes" xml:space="preserve">
          <source>CSP: base-uri</source>
          <target state="translated">CSP:base-uri</target>
        </trans-unit>
        <trans-unit id="e1f387bd5a0bc1c97fc48409c2910b8698c8640e" translate="yes" xml:space="preserve">
          <source>CSP: block-all-mixed-content</source>
          <target state="translated">CSP:ブロック・オール・ミックス・コンテンツ</target>
        </trans-unit>
        <trans-unit id="b25eb56df44cb67b582b21cd3edbd78acfb7b3e7" translate="yes" xml:space="preserve">
          <source>CSP: child-src</source>
          <target state="translated">CSP:子src</target>
        </trans-unit>
        <trans-unit id="d8d4703b593508b27eaeff8d0aebcd15f991e8e2" translate="yes" xml:space="preserve">
          <source>CSP: connect-src</source>
          <target state="translated">CSP:connect-src</target>
        </trans-unit>
        <trans-unit id="68907bfebcb9f7aaac284a06b0682cb8062e8905" translate="yes" xml:space="preserve">
          <source>CSP: default-src</source>
          <target state="translated">CSP:default-src</target>
        </trans-unit>
        <trans-unit id="33201263305688f8d0319035bf86905e02a74b2e" translate="yes" xml:space="preserve">
          <source>CSP: font-src</source>
          <target state="translated">CSP:font-src</target>
        </trans-unit>
        <trans-unit id="288f4f31fbc4626f98b2f869fd485b9fad754b76" translate="yes" xml:space="preserve">
          <source>CSP: form-action</source>
          <target state="translated">CSP:フォームアクション</target>
        </trans-unit>
        <trans-unit id="1110c66ccba3f4594386963f17efd01ebfc1cd32" translate="yes" xml:space="preserve">
          <source>CSP: frame-ancestors</source>
          <target state="translated">CSP:フレームアンセスタ</target>
        </trans-unit>
        <trans-unit id="a9d7881b7f2e872886dea3318b9ec4ad54690900" translate="yes" xml:space="preserve">
          <source>CSP: frame-src</source>
          <target state="translated">CSP:フレーム-src</target>
        </trans-unit>
        <trans-unit id="21056b59bbdeaabbcbf48e5b78e6825df16fd152" translate="yes" xml:space="preserve">
          <source>CSP: img-src</source>
          <target state="translated">CSP:img-src</target>
        </trans-unit>
        <trans-unit id="5b7bbbea8fbb911ad61a95926c52038e17270734" translate="yes" xml:space="preserve">
          <source>CSP: manifest-src</source>
          <target state="translated">CSP:manifest-src</target>
        </trans-unit>
        <trans-unit id="216739951c2911845bfa3c58a3e1759ef762351f" translate="yes" xml:space="preserve">
          <source>CSP: media-src</source>
          <target state="translated">CSP:media-src</target>
        </trans-unit>
        <trans-unit id="d27ff0f1654b7502333c88f9af77e32304f80495" translate="yes" xml:space="preserve">
          <source>CSP: navigate-to</source>
          <target state="translated">CSP:ナビゲート</target>
        </trans-unit>
        <trans-unit id="4b0f2d6ea1745b227865a7908c705926a5818865" translate="yes" xml:space="preserve">
          <source>CSP: object-src</source>
          <target state="translated">CSP:オブジェクト-src</target>
        </trans-unit>
        <trans-unit id="9310170277ea799be8285b0064422067334219b7" translate="yes" xml:space="preserve">
          <source>CSP: plugin-types</source>
          <target state="translated">CSP:プラグインタイプ</target>
        </trans-unit>
        <trans-unit id="caf04f49fb12869875e5809bb62ca18f1dc04233" translate="yes" xml:space="preserve">
          <source>CSP: prefetch-src</source>
          <target state="translated">CSP:プリフェッチ-src</target>
        </trans-unit>
        <trans-unit id="61f55d98b5a3ac85d047f911ee4a486f34144e3d" translate="yes" xml:space="preserve">
          <source>CSP: referrer</source>
          <target state="translated">CSP:リファラー</target>
        </trans-unit>
        <trans-unit id="a53be58aafa7031586553deadc48190f849f218d" translate="yes" xml:space="preserve">
          <source>CSP: report-to</source>
          <target state="translated">CSP:レポートツー</target>
        </trans-unit>
        <trans-unit id="865f9627c1b6ca237d57e68fc76c695bc3af6d64" translate="yes" xml:space="preserve">
          <source>CSP: report-uri</source>
          <target state="translated">CSP:report-uri</target>
        </trans-unit>
        <trans-unit id="360c612795c5fa6ec239445c2a3549cdd177ae8f" translate="yes" xml:space="preserve">
          <source>CSP: require-sri-for</source>
          <target state="translated">CSP:require-sri-for</target>
        </trans-unit>
        <trans-unit id="5b9a9a7b030ff638c13fe5252ac9605de9bd9a33" translate="yes" xml:space="preserve">
          <source>CSP: require-trusted-types-for</source>
          <target state="translated">CSP:require-trusted-types-for.</target>
        </trans-unit>
        <trans-unit id="95233e49e595781c9ba6c45123a969ceace0209c" translate="yes" xml:space="preserve">
          <source>CSP: sandbox</source>
          <target state="translated">CSP:サンドボックス</target>
        </trans-unit>
        <trans-unit id="746f3a678a7fdd2c8e56ab69cf9f85ffa266928d" translate="yes" xml:space="preserve">
          <source>CSP: script-src</source>
          <target state="translated">CSP:script-src</target>
        </trans-unit>
        <trans-unit id="74e0def20d9663d6b9402691f4938dcedcc472f5" translate="yes" xml:space="preserve">
          <source>CSP: script-src-attr</source>
          <target state="translated">CSP:script-src-attr</target>
        </trans-unit>
        <trans-unit id="11c49dd9c01c9002a8c1ca0b0e20c73e1ea7e83d" translate="yes" xml:space="preserve">
          <source>CSP: script-src-elem</source>
          <target state="translated">CSP:script-src-elem</target>
        </trans-unit>
        <trans-unit id="073f20d15a570fd6d41695506e3f4b44db4ec9c8" translate="yes" xml:space="preserve">
          <source>CSP: style-src</source>
          <target state="translated">CSP:style-src</target>
        </trans-unit>
        <trans-unit id="976a77859491cd1ef47e641e7311bb890156672f" translate="yes" xml:space="preserve">
          <source>CSP: style-src-attr</source>
          <target state="translated">CSP:style-src-attr</target>
        </trans-unit>
        <trans-unit id="b6f967c2c8d4a89149755f714e13243120974c7c" translate="yes" xml:space="preserve">
          <source>CSP: style-src-elem</source>
          <target state="translated">CSP:スタイル-src-elem</target>
        </trans-unit>
        <trans-unit id="ef6a35189958c52fc4d11428c18472eb8ebbc1b7" translate="yes" xml:space="preserve">
          <source>CSP: trusted-types</source>
          <target state="translated">CSP:トラステッドタイプ</target>
        </trans-unit>
        <trans-unit id="bdec421ab6d7add012ba02e55c66584a25b4ae24" translate="yes" xml:space="preserve">
          <source>CSP: upgrade-insecure-requests</source>
          <target state="translated">CSP:アップグレード用の安全でない要求</target>
        </trans-unit>
        <trans-unit id="fb8f32fe79e286807b14bcfd102e8d5b1bd01893" translate="yes" xml:space="preserve">
          <source>CSP: worker-src</source>
          <target state="translated">CSP:Worker-src</target>
        </trans-unit>
        <trans-unit id="63b89c4cbe4e07b5d318b0db30585680356a57b5" translate="yes" xml:space="preserve">
          <source>CSS &lt;code&gt;url()&lt;/code&gt;</source>
          <target state="translated">CSS &lt;code&gt;url()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7be6c2d6b0a547250410b1a2318dda4537f080e3" translate="yes" xml:space="preserve">
          <source>CSS @media feature &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data&quot;&gt;prefers-reduced-data&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">CSS @ media機能 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data&quot;&gt;prefers-reduced-data&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b735f2f9a96efb6f279ab57aab6386d338a0c8dc" translate="yes" xml:space="preserve">
          <source>CSS Shapes from images.</source>
          <target state="translated">画像からのCSSシェイプ。</target>
        </trans-unit>
        <trans-unit id="cc5b4a629abbfbd5eccc6eedfa9f028a8215b669" translate="yes" xml:space="preserve">
          <source>CSS can fetch resources referenced from stylesheets. These resources are following a referrer policy as well.</source>
          <target state="translated">CSSは、スタイルシートから参照されるリソースを取得することができます。これらのリソースは、同様にリファラーポリシーに従っています。</target>
        </trans-unit>
        <trans-unit id="428ac0eae6ca052836b3b2ffa97a6afe49df6977" translate="yes" xml:space="preserve">
          <source>CSS can fetch resources referenced from stylesheets. These resources follow a referrer policy as well:</source>
          <target state="translated">CSS はスタイルシートから参照されるリソースを取得することができます。これらのリソースは、同様に参照元のポリシーに従います。</target>
        </trans-unit>
        <trans-unit id="f7417538e496bd203aa442ce377a765b360b5ad7" translate="yes" xml:space="preserve">
          <source>CSS files</source>
          <target state="translated">CSSファイル</target>
        </trans-unit>
        <trans-unit id="b7a02370a133e45105b3a6f51aad72447007c06f" translate="yes" xml:space="preserve">
          <source>CSS files used to style a Web page &lt;strong&gt;must&lt;/strong&gt; be sent with &lt;code&gt;text/css&lt;/code&gt;. If a server doesn't recognize the &lt;code&gt;.css&lt;/code&gt; suffix for CSS files, it may send them with &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;application/octet-stream&lt;/code&gt; MIME types. If so, they won't be recognized as CSS by most browsers and will be ignored.</source>
          <target state="translated">Webページのスタイル設定に使用されるCSSファイルは、 &lt;code&gt;text/css&lt;/code&gt; で送信する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。サーバーがCSSファイルの &lt;code&gt;.css&lt;/code&gt; サフィックスを認識しない場合、サーバーは &lt;code&gt;text/plain&lt;/code&gt; または &lt;code&gt;application/octet-stream&lt;/code&gt; MIMEタイプでそれらを送信する場合があります。その場合、ほとんどのブラウザでCSSとして認識されず、無視されます。</target>
        </trans-unit>
        <trans-unit id="c7a58e854c19a4742126d3d6571cf7bf2c94f204" translate="yes" xml:space="preserve">
          <source>CSS files used to style a Web page&lt;strong&gt; must&lt;/strong&gt; be sent with &lt;code&gt;text/css&lt;/code&gt;. If a server doesn't recognize the &lt;code&gt;.css&lt;/code&gt; suffix for CSS files, it may send them with &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;application/octet-stream&lt;/code&gt; MIME types. If so, they won't be recognized as CSS by most browsers and will be ignored.</source>
          <target state="translated">Webページのスタイル設定に使用するCSSファイルは、 &lt;code&gt;text/css&lt;/code&gt; で送信する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。サーバーがCSSファイルの &lt;code&gt;.css&lt;/code&gt; サフィックスを認識しない場合、サーバーはそれらを &lt;code&gt;text/plain&lt;/code&gt; または &lt;code&gt;application/octet-stream&lt;/code&gt; MIMEタイプで送信する場合があります。その場合、それらはほとんどのブラウザーでCSSとして認識されず、無視されます。</target>
        </trans-unit>
        <trans-unit id="1964934d77bf5d32bc29b25c72e40d0a04b94a48" translate="yes" xml:space="preserve">
          <source>CT requirements can be satisfied via any one of the following mechanisms:</source>
          <target state="translated">CT要件は、以下のメカニズムのいずれかを介して満たすことができます。</target>
        </trans-unit>
        <trans-unit id="b97a250a6d2c0f59f2f4c22e8e9f5dd5b39d8624" translate="yes" xml:space="preserve">
          <source>Cache but revalidate</source>
          <target state="translated">キャッシュしますが、再検証します。</target>
        </trans-unit>
        <trans-unit id="c9387eaae83736c3d69453fd21bd568dec8f4524" translate="yes" xml:space="preserve">
          <source>Cache handling of a response to a conditional request is dependent
   upon its status code:

   o  A 304 (Not Modified) response status code indicates that the
      stored response can be updated and reused; see &lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt;.

   o  A full response (i.e., one with a payload body) indicates that
      none of the stored responses nominated in the conditional request
      is suitable.  Instead, the cache MUST use the full response to
      satisfy the request and MAY replace the stored response(s).

   o  However, if a cache receives a 5xx (Server Error) response while
      attempting to validate a response, it can either forward this
      response to the requesting client, or act as if the server failed
      to respond.  In the latter case, the cache MAY send a previously
      stored response (see &lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;).</source>
          <target state="translated">条件付き要求への応答のキャッシュ処理は、そのステータスコードに依存します。o 304（Not Modified）応答ステータスコードは、格納された応答を更新して再利用できることを示します。&lt;a href=&quot;#section-4.3.4&quot;&gt;セクション4.3.4を&lt;/a&gt;参照してください。 o完全な応答（つまり、ペイロード本体を持つ応答）は、条件付き要求で指定された格納済み応答のいずれも適切でないことを示します。代わりに、キャッシュは完全な応答を使用して要求を満たす必要があり、格納されている応答を置き換えることができます（MAY）。 oただし、キャッシュが応答の検証中に5xx（サーバーエラー）応答を受信した場合、キャッシュはこの応答を要求元のクライアントに転送するか、サーバーが応答に失敗したかのように動作します。後者の場合、キャッシュは以前に保存された応答を送信してもよい（MAY）。&lt;a href=&quot;#section-4.2.4&quot;&gt;セクション4.2.4&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9eca146b7d059bac1fffb373a3b4ac5a46895065" translate="yes" xml:space="preserve">
          <source>Cache refresh: this indicates that the cache value is still fresh and can be used.</source>
          <target state="translated">キャッシュリフレッシュ:これは、キャッシュ値がまだ新鮮で使用可能であることを示します。</target>
        </trans-unit>
        <trans-unit id="797e92b9fd4173be50b6906927ba56a7e66b9d27" translate="yes" xml:space="preserve">
          <source>Cache request directives</source>
          <target state="translated">キャッシュ要求ディレクティブ</target>
        </trans-unit>
        <trans-unit id="0b943ff4cafdda6a82e806c4186ad1f27a30b226" translate="yes" xml:space="preserve">
          <source>Cache response directives</source>
          <target state="translated">キャッシュ応答ディレクティブ</target>
        </trans-unit>
        <trans-unit id="363657bc3c95ae010a3ed0bae48a02dfa27c59c4" translate="yes" xml:space="preserve">
          <source>Cache results of a preflight request for 10 minutes:</source>
          <target state="translated">10分間のプリフライトリクエストの結果をキャッシュします。</target>
        </trans-unit>
        <trans-unit id="0426eb019de93cd2ae1c3a3a04b09dc6cfd746ab" translate="yes" xml:space="preserve">
          <source>Cache static content: offload the web servers by caching static content like pictures,</source>
          <target state="translated">静的コンテンツのキャッシュ:画像のような静的コンテンツをキャッシュすることで、ウェブサーバーの負荷を軽減します。</target>
        </trans-unit>
        <trans-unit id="8cc8d7aabbcac8d512fa7176f44889e337cb29b2" translate="yes" xml:space="preserve">
          <source>Cache update</source>
          <target state="translated">キャッシュの更新</target>
        </trans-unit>
        <trans-unit id="f39c0f09e8619679ee8854f8b7b8e45d8271d16d" translate="yes" xml:space="preserve">
          <source>Cache validation</source>
          <target state="translated">キャッシュの検証</target>
        </trans-unit>
        <trans-unit id="9b09c51972b24aaf8bff4e23301b40da54c025b6" translate="yes" xml:space="preserve">
          <source>Cache-Control</source>
          <target state="translated">Cache-Control</target>
        </trans-unit>
        <trans-unit id="96c175aa287942740a4c9dc0851f228f568c2dd0" translate="yes" xml:space="preserve">
          <source>Cache-Control (RFC 2616)</source>
          <target state="translated">キャッシュ制御 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="db46bd114028441fc2cb90df358efa899df9e03d" translate="yes" xml:space="preserve">
          <source>Cache-Control (RFC 7234)</source>
          <target state="translated">キャッシュ制御 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="f831d9e40838da8be7663f96e7bf5e81e81f1527" translate="yes" xml:space="preserve">
          <source>Cacheability</source>
          <target state="translated">Cacheability</target>
        </trans-unit>
        <trans-unit id="ab9c8d4b22f42d6e20f2de04cee4a87194c9b2ff" translate="yes" xml:space="preserve">
          <source>Cacheable</source>
          <target state="translated">Cacheable</target>
        </trans-unit>
        <trans-unit id="367eb2cade8f9a82f981b9ecbd24bcbcccc4234d" translate="yes" xml:space="preserve">
          <source>Cacheable Methods (RFC 7231)</source>
          <target state="translated">キャッシュ可能なメソッド (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="6d4faa9c38ae0bea36b2a77a74f1c5565404a706" translate="yes" xml:space="preserve">
          <source>Caching FAQ</source>
          <target state="translated">キャッシングFAQ</target>
        </trans-unit>
        <trans-unit id="c30dddf76b8532fde16158f240307de27191ec53" translate="yes" xml:space="preserve">
          <source>Caching Tutorial &amp;ndash; Mark Nottingham</source>
          <target state="translated">キャッシングチュートリアル&amp;ndash; Mark Nottingham</target>
        </trans-unit>
        <trans-unit id="e7969efad7a9997c2c32dfba8ba0fa3f7863eaa5" translate="yes" xml:space="preserve">
          <source>Caching Tutorial for Web Authors and Webmasters</source>
          <target state="translated">ウェブ作成者とウェブマスターのためのキャッシングチュートリアル</target>
        </trans-unit>
        <trans-unit id="0b4f6bae82cc7d9cc7d1831819fc166adba3c40b" translate="yes" xml:space="preserve">
          <source>Caching directives have the following rules to be valid:</source>
          <target state="translated">キャッシングディレクティブには、以下のようなルールがあります。</target>
        </trans-unit>
        <trans-unit id="0587c95421ffd96422e6ce52f99b0eeb12897612" translate="yes" xml:space="preserve">
          <source>Caching in HTTP (RFC 2616)</source>
          <target state="translated">HTTP でのキャッシュ (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="12274da356087ef702ccbb200cdfa705f2a6cb21" translate="yes" xml:space="preserve">
          <source>Caching is a technique that stores a copy of a given resource and serves it back when requested. When a web cache has a requested resource in its store, it intercepts the request and returns its copy instead of re-downloading from the originating server. This achieves several goals: it eases the load of the server that doesn&amp;rsquo;t need to serve all clients itself, and it improves performance by being closer to the client, i.e., it takes less time to transmit the resource back. For a web site, it is a major component in achieving high performance. On the other side, it has to be configured properly as not all resources stay identical forever: it is important to cache a resource only until it changes, not longer.</source>
          <target state="translated">キャッシングは、特定のリソースのコピーを保存し、要求されたときにそれを提供する手法です。Webキャッシュのストアに要求されたリソースがある場合、Webキャッシュは要求をインターセプトし、元のサーバーから再ダウンロードする代わりにそのコピーを返します。これにより、いくつかの目標が達成されます。すべてのクライアント自体にサービスを提供する必要のないサーバーの負荷が軽減され、クライアントに近づくことでパフォーマンスが向上します。つまり、リソースの送信にかかる時間が短くなります。Webサイトにとって、それは高性能を達成するための主要なコンポーネントです。一方、すべてのリソースが永久に同一であるとは限らないため、適切に構成する必要があります。リソースを変更するまでの間だけキャッシュし、それ以上変更しないようにすることが重要です。</target>
        </trans-unit>
        <trans-unit id="d5bd9f8c4cb307c4c859ece3e85c3287fab9c02d" translate="yes" xml:space="preserve">
          <source>Caching is very important for fast Web sites. This article describes different methods of caching and how to use HTTP Headers to control them.</source>
          <target state="translated">高速なWebサイトを実現するためには、キャッシングが非常に重要です。この記事では、キャッシングのさまざまな方法と、HTTPヘッダを使用してそれらを制御する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="948ba29270deb9f483242162487c780bcfdc8dba" translate="yes" xml:space="preserve">
          <source>Caching of unchanged resources</source>
          <target state="translated">変更されていないリソースのキャッシュ</target>
        </trans-unit>
        <trans-unit id="23206d16033b30654e4d04b8e38733f9a9b711e1" translate="yes" xml:space="preserve">
          <source>Caching static assets</source>
          <target state="translated">静的資産のキャッシュ</target>
        </trans-unit>
        <trans-unit id="224012a44d1a3dcbedc904993d8d0726b013bed5" translate="yes" xml:space="preserve">
          <source>Caching-related headers that are sent along with this response should be taken care of, as a 503 status is often a temporary condition and responses shouldn't usually be cached.</source>
          <target state="translated">503 ステータスは一時的な状態であることが多く、レスポンスは通常キャッシュされるべきではないので、このレスポンスと一緒に送信されるキャッシュ関連のヘッダには注意を払う必要があります。</target>
        </trans-unit>
        <trans-unit id="72bc7dfdbfb35fbe7d280800db5164dcd1988d57" translate="yes" xml:space="preserve">
          <source>Calculating Secondary Keys with Vary (RFC 7234)</source>
          <target state="translated">Vary を使用したセカンダリキーの計算 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="4da9c9af9631e294961d5a16fdc681ca3d84f508" translate="yes" xml:space="preserve">
          <source>Camera</source>
          <target state="translated">Camera</target>
        </trans-unit>
        <trans-unit id="1c8974e3fdbd4a7f871b765b73b10e7d5c3e086c" translate="yes" xml:space="preserve">
          <source>Camino on Mac</source>
          <target state="translated">カミーノオンマック</target>
        </trans-unit>
        <trans-unit id="34df0028992d6ae22f580333583afab1e0e37c34" translate="yes" xml:space="preserve">
          <source>Can you spot the mistake? Stylesheets are allowed to be loaded only from &lt;code&gt;cdn.example.com&lt;/code&gt;, yet the website tries to load one from its own origin (&lt;code&gt;http://example.com&lt;/code&gt;). A browser capable of enforcing CSP would send the following violation report as a POST request to &lt;code&gt;http://example.com/_/csp-reports&lt;/code&gt;, when the document is visited:</source>
          <target state="translated">間違いを見つけることができますか？スタイルシートは &lt;code&gt;cdn.example.com&lt;/code&gt; からのみロードできますが、Webサイトは独自のオリジン（ &lt;code&gt;http://example.com&lt;/code&gt; ）からスタイルシートをロードしようとします。CSPを適用できるブラウザは、ドキュメントにアクセスしたときに、POSTリクエストとして次の違反レポートを &lt;code&gt;http://example.com/_/csp-reports&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="2f86269acd3e77cefb32ddc78f8c4c6c9bd506e6" translate="yes" xml:space="preserve">
          <source>Can you spot the mistake? Stylesheets are only allowed to be loaded from &lt;code&gt;cdn.example.com&lt;/code&gt;, yet the website tries to load one from its own origin (&lt;code&gt;http://example.com&lt;/code&gt;). A browser capable of enforcing CSP will send the following violation report as a POST request to &lt;code&gt;&lt;a href=&quot;http://example.com/_/csp-reports&quot;&gt;http://example.com/_/csp-reports&lt;/a&gt;&lt;/code&gt;, when the document is visited:</source>
          <target state="translated">間違いを見つけられますか？スタイルシートは &lt;code&gt;cdn.example.com&lt;/code&gt; からの読み込みのみが許可されていますが、ウェブサイトは独自のオリジン（ &lt;code&gt;http://example.com&lt;/code&gt; ）からの読み込みを試みます。CSPを適用できるブラウザは、ドキュメントにアクセスすると、次の違反レポートをPOSTリクエストとして &lt;code&gt;&lt;a href=&quot;http://example.com/_/csp-reports&quot;&gt;http://example.com/_/csp-reports&lt;/a&gt;&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="8b35fa85102875260c5079cd9bdec0d2fdc2ee7d" translate="yes" xml:space="preserve">
          <source>Can you spot the violation? Stylesheets are only allowed to be loaded from &lt;code&gt;cdn.example.com&lt;/code&gt;, yet the website tries to load one from its own origin (&lt;code&gt;http://example.com&lt;/code&gt;). A browser capable of enforcing CSP will send the following violation report as a POST request to &lt;code&gt;http://example.com/_/csp-reports&lt;/code&gt;, when the document is visited:</source>
          <target state="translated">違反を見つけられますか？スタイルシートは &lt;code&gt;cdn.example.com&lt;/code&gt; からの読み込みのみが許可されていますが、ウェブサイトは独自のオリジン（ &lt;code&gt;http://example.com&lt;/code&gt; ）からの読み込みを試みます。CSPを適用できるブラウザは、ドキュメントにアクセスすると、次の違反レポートをPOSTリクエストとして &lt;code&gt;http://example.com/_/csp-reports&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="c19fa848f8d18f6a6f2a50f399649151c43d2ccf" translate="yes" xml:space="preserve">
          <source>Candidate Recommendation</source>
          <target state="translated">候補者推薦</target>
        </trans-unit>
        <trans-unit id="23538d20ac9108dc1735c5b220e319e9fe9ebfa3" translate="yes" xml:space="preserve">
          <source>Cascading Style Sheets (CSS)</source>
          <target state="translated">カスケードスタイルシート(CSS)</target>
        </trans-unit>
        <trans-unit id="0b6458ff064d78bd1b35deea2f51916b09b5473f" translate="yes" xml:space="preserve">
          <source>Case-insensitive, but lowercase is recommended.</source>
          <target state="translated">大文字小文字を区別しませんが、小文字を推奨します。</target>
        </trans-unit>
        <trans-unit id="aa1717d0e9589578b46ef62dc5cfe9cd1de83ba5" translate="yes" xml:space="preserve">
          <source>Category Documents contain lists of categories described using the
   &quot;atom:category&quot; element from the Atom Syndication Format [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].
   Categories can also appear in Service Documents, where they indicate
   the categories allowed in a Collection (see &lt;a href=&quot;#section-8.3.6&quot;&gt;Section 8.3.6&lt;/a&gt;).

   Category Documents are identified with the &quot;application/atomcat+xml&quot;
   media type (see &lt;a href=&quot;#section-16.1&quot;&gt;Section 16.1&lt;/a&gt;).</source>
          <target state="translated">カテゴリドキュメントには、Atom Syndication Format [ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt; ] の「atom：category」要素を使用して記述されたカテゴリのリストが含まれています。カテゴリはサービスドキュメントにも表示され、コレクションで許可されているカテゴリを示します（&lt;a href=&quot;#section-8.3.6&quot;&gt;セクション8.3.6を&lt;/a&gt;参照）。カテゴリドキュメントは、「application / atomcat + xml」メディアタイプで識別されます（&lt;a href=&quot;#section-16.1&quot;&gt;セクション16.1を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4953a4d35c24e7592363ade77ff9bd38b491415d" translate="yes" xml:space="preserve">
          <source>Certain features depend on cross-origin isolation</source>
          <target state="translated">特定の機能は、クロスオリジン分離に依存します。</target>
        </trans-unit>
        <trans-unit id="f3adf629209f8f370767ac9b58ec590a278a3655" translate="yes" xml:space="preserve">
          <source>Certain features like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; objects or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;&lt;code&gt;Performance.now()&lt;/code&gt;&lt;/a&gt; with unthrottled timers are only available if your document has a COOP header with the value &lt;code&gt;same-origin&lt;/code&gt; value set.</source>
          <target state="translated">などの一部の機能&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; の&lt;/a&gt;オブジェクトまたは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt; &lt;code&gt;Performance.now()&lt;/code&gt; &lt;/a&gt;あなたの文書が値を持つCOOPヘッダがある場合は非スロットルタイマーとはのみ利用可能な &lt;code&gt;same-origin&lt;/code&gt; 値セットを。</target>
        </trans-unit>
        <trans-unit id="98cfdc8dc518c66839eb93c58f7c6441910d5d79" translate="yes" xml:space="preserve">
          <source>Change the default behavior of autoplay on mobile and third party videos.</source>
          <target state="translated">モバイルおよびサードパーティ製の動画での自動再生のデフォルト動作を変更します。</target>
        </trans-unit>
        <trans-unit id="e97cb80f95cbab0c6a227b198b72f39726ca3006" translate="yes" xml:space="preserve">
          <source>Change the default values or options that control the feature behavior.</source>
          <target state="translated">機能の動作を制御するデフォルト値またはオプションを変更します。</target>
        </trans-unit>
        <trans-unit id="98070d26bda6abfdd501e4b5389ac0c61c5c1549" translate="yes" xml:space="preserve">
          <source>Change the request such that it is a &lt;a href=&quot;#Simple_requests&quot;&gt;simple request&lt;/a&gt; that doesn&amp;rsquo;t cause a preflight</source>
          <target state="translated">プリフライトを発生させない&lt;a href=&quot;#Simple_requests&quot;&gt;単純な&lt;/a&gt;リクエストになるようにリクエストを変更します</target>
        </trans-unit>
        <trans-unit id="8080157d68fc1aa058042192fc9b1007517bb764" translate="yes" xml:space="preserve">
          <source>Change the server-side behavior to avoid the preflight and/or to avoid the redirect</source>
          <target state="translated">プリフライトを回避し、リダイレクトを回避するようにサーバ側の動作を変更します。</target>
        </trans-unit>
        <trans-unit id="811bf2bd6edd23474dfa0570cd89845010ee8135" translate="yes" xml:space="preserve">
          <source>Character encoding of HTTP authentication</source>
          <target state="translated">HTTP 認証の文字コード</target>
        </trans-unit>
        <trans-unit id="245374780def29c61ce1165c1fdbe13bc3583f38" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility table&lt;/a&gt; carefully before using this in production.</source>
          <target state="translated">チェック &lt;a href=&quot;#Browser_compatibility&quot;&gt;&lt;/a&gt;これを本番環境で使用する前にブラウザ互換性テーブルを注意深く。</target>
        </trans-unit>
        <trans-unit id="de85527d64c40bc55991f2429578ed63d3ac01ed" translate="yes" xml:space="preserve">
          <source>Checking if a server supports partial requests</source>
          <target state="translated">サーバーが部分的なリクエストをサポートしているかどうかの確認</target>
        </trans-unit>
        <trans-unit id="ffef88d017227b1ea1b9169e0335da32c5b6a9dd" translate="yes" xml:space="preserve">
          <source>Choosing between www and non-www URLs</source>
          <target state="translated">wwwと非wwwのURLの選択</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="04c901a0daf91c2a0f3e8fdc0701d52f69dd276c" translate="yes" xml:space="preserve">
          <source>Chrome 59 and higher skips the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">Chrome 59以降では、&lt;a href=&quot;child-src&quot;&gt; &lt;code&gt;child-src&lt;/code&gt; &lt;/a&gt;ディレクティブをスキップします。</target>
        </trans-unit>
        <trans-unit id="4f8f8ffcc2cbf126c04a5b0120a393e971c34f1c" translate="yes" xml:space="preserve">
          <source>Chrome 59 and higher skips the deprecated &lt;code&gt;child-src&lt;/code&gt; directive.</source>
          <target state="translated">Chrome 59以降では、廃止された &lt;code&gt;child-src&lt;/code&gt; ディレクティブはスキップされます。</target>
        </trans-unit>
        <trans-unit id="936b3a2c1e8b0dd5e471f5ddaa07ff52d2e26abf" translate="yes" xml:space="preserve">
          <source>Chrome UA string</source>
          <target state="translated">クロムユーエー文字列</target>
        </trans-unit>
        <trans-unit id="d099f88b010d4398cebebe8e633ffe4874c4aa01" translate="yes" xml:space="preserve">
          <source>Chrome for Android</source>
          <target state="translated">Chrome for Android</target>
        </trans-unit>
        <trans-unit id="63fa9dfaafef106782cff2f23fd6100812a2c815" translate="yes" xml:space="preserve">
          <source>Chrome has &lt;a href=&quot;https://www.chromestatus.com/feature/5021976655560704&quot;&gt;removed their XSS Auditor&lt;/a&gt;</source>
          <target state="translated">Chromeは&lt;a href=&quot;https://www.chromestatus.com/feature/5021976655560704&quot;&gt;XSS監査人&lt;/a&gt;を削除しました</target>
        </trans-unit>
        <trans-unit id="06b23f33df74ac419800e0f9c00c1fee716262fb" translate="yes" xml:space="preserve">
          <source>Chrome, Edge, Firefox, Internet Explorer, Opera, Safari</source>
          <target state="translated">Chrome、Edge、Firefox、Internet Explorer、Opera、Safari</target>
        </trans-unit>
        <trans-unit id="0c61202a79a1fff40efdcb9dc2c09bb3207be4de" translate="yes" xml:space="preserve">
          <source>Chrome, Edge, Firefox, Opera</source>
          <target state="translated">Chrome、Edge、Firefox、Opera</target>
        </trans-unit>
        <trans-unit id="865e5314adc4c753b1de74b6801e82c3bba584f4" translate="yes" xml:space="preserve">
          <source>Chrome, Edge, Firefox, Opera, Safari</source>
          <target state="translated">Chrome、Edge、Firefox、Opera、Safari</target>
        </trans-unit>
        <trans-unit id="019a920351ae1cc253d801e3029fcb49f0363eb6" translate="yes" xml:space="preserve">
          <source>Chrome/xyz</source>
          <target state="translated">Chrome/xyz</target>
        </trans-unit>
        <trans-unit id="530e72f2ef34a9545e0a5330771934b72c420c79" translate="yes" xml:space="preserve">
          <source>Chrome/xyz or Chromium/xyz</source>
          <target state="translated">Chrome/xyz または Chromium/xyz</target>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="be78db4800418a74118cb63d7fc3c7b519d7c030" translate="yes" xml:space="preserve">
          <source>Chromium (prior to v76) &lt;a href=&quot;https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=36&amp;amp;rcl=52002151773d8cd9ffc5f557cd7cc880fddcae3e&quot;&gt;caps at 10 minutes&lt;/a&gt; (600 seconds).</source>
          <target state="translated">クロム（v76より前）&lt;a href=&quot;https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=36&amp;amp;rcl=52002151773d8cd9ffc5f557cd7cc880fddcae3e&quot;&gt;は10分&lt;/a&gt;（600秒）でキャップします。</target>
        </trans-unit>
        <trans-unit id="20b80ad1d26c2f3aaa13597f08219cb16ea10fef" translate="yes" xml:space="preserve">
          <source>Chromium (starting in v76) &lt;a href=&quot;https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=31&amp;amp;rcl=49e7c0b4886cac1f3d09dc046bd528c9c811a0fa&quot;&gt;caps at 2 hours&lt;/a&gt; (7200 seconds).</source>
          <target state="translated">クロム（v76以降）&lt;a href=&quot;https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=31&amp;amp;rcl=49e7c0b4886cac1f3d09dc046bd528c9c811a0fa&quot;&gt;は2時間&lt;/a&gt;（7200秒）で上限を設定します。</target>
        </trans-unit>
        <trans-unit id="7817e5d6f503912e54b0784dc45d20aa97799b67" translate="yes" xml:space="preserve">
          <source>Chromium also specifies a default value of 5 seconds.</source>
          <target state="translated">また、Chromiumではデフォルト値として5秒を指定しています。</target>
        </trans-unit>
        <trans-unit id="a00534e71fb83f1f72f13c598065c49858fefc4a" translate="yes" xml:space="preserve">
          <source>Chromium/xyz</source>
          <target state="translated">Chromium/xyz</target>
        </trans-unit>
        <trans-unit id="f2e3d3255876440830fb74bf171c1d2ece3388ed" translate="yes" xml:space="preserve">
          <source>Chromium: &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615313&quot;&gt;Issue 615313&lt;/a&gt;</source>
          <target state="translated">Chromium：&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615313&quot;&gt;問題615313&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02dae4314d1b02d0bfeeff3a285006bc4766d38a" translate="yes" xml:space="preserve">
          <source>Chunked encoding</source>
          <target state="translated">チャンク化されたエンコーディング</target>
        </trans-unit>
        <trans-unit id="0e13d13f96bc6fbff5ad281601f23302761c061e" translate="yes" xml:space="preserve">
          <source>Chunked encoding is useful when larger amounts of data are sent to the client and the total size of the response may not be known until the request has been fully processed. For example, when generating a large HTML table resulting from a database query or when transmitting large images. A chunked response looks like this:</source>
          <target state="translated">チャンク化されたエンコーディングは、大量のデータがクライアントに送られ、リクエストが完全に処理されるまで応答の合計サイズがわからない場合に便利です。例えば、データベースクエリの結果として大きな HTML テーブルを生成したり、大きな画像を送信する場合などです。チャンク化されたレスポンスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="8220572e0102502603e5875887b5183212dd190a" translate="yes" xml:space="preserve">
          <source>Chunked responses are now also supported.</source>
          <target state="translated">チャンク化されたレスポンスもサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="db3313f2827a057e3a64943f9f95e2ab49a79565" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding</source>
          <target state="translated">チャンク化された転送エンコーディング</target>
        </trans-unit>
        <trans-unit id="02f5fbe3823ae3ee8836aabcd6aedc25a237e372" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding using a trailing header</source>
          <target state="translated">トレイリングヘッダを使用したチャンク化された転送エンコーディング</target>
        </trans-unit>
        <trans-unit id="5b18750fa39107d207083b7b1ced1d41dba0f08b" translate="yes" xml:space="preserve">
          <source>Clear Site Data</source>
          <target state="translated">クリアサイトデータ</target>
        </trans-unit>
        <trans-unit id="563a0adf9cc2a772ffc80a2f072b2791b10b2699" translate="yes" xml:space="preserve">
          <source>Clear-Site-Data</source>
          <target state="translated">Clear-Site-Data</target>
        </trans-unit>
        <trans-unit id="47c3b55337992becca7776593cb6ed91ea600664" translate="yes" xml:space="preserve">
          <source>Clearing cookies</source>
          <target state="translated">クッキーのクリア</target>
        </trans-unit>
        <trans-unit id="cc7132c182abf9d906ed90a092216ab6aefbc162" translate="yes" xml:space="preserve">
          <source>Clears browsing data (e.g. cookies, storage, cache) associated with the requesting website.</source>
          <target state="translated">要求するウェブサイトに関連する閲覧データ(クッキー、ストレージ、キャッシュなど)をクリアします。</target>
        </trans-unit>
        <trans-unit id="7ca8349d76abe296a6950f45aded7fe82937ec47" translate="yes" xml:space="preserve">
          <source>ClickJacking Defenses - IEBlog</source>
          <target state="translated">クリックジャッキングの防御-IEBlog</target>
        </trans-unit>
        <trans-unit id="04d39ef8ff1810b107a1befbb4f275d469a941cd" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) DELETE to Member URI                 |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 OK                               |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a DELETE request to the URI of a Member
       Resource.

   2.  If the deletion is successful, the server responds with a status
       code of 200.

   A different approach is taken for deleting Media Resources; see
   &lt;a href=&quot;#section-9.4&quot;&gt;Section 9.4&lt;/a&gt; for details.</source>
          <target state="translated">クライアントサーバー| | | 1.）メンバーURIへの削除| | ------------------------------------------&amp;gt; | | | | 2.）200 OK | | &amp;lt;------------------------------------------ | | | 1.クライアントは、メンバーリソースのURIにDELETE要求を送信します。 2.削除が成功すると、サーバーはステータスコード200で応答します。メディアリソースの削除には別のアプローチがとられます。詳細については、 &lt;a href=&quot;#section-9.4&quot;&gt;9.4項&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="06414e618e271894c3e9df0da8e1288e8b9d978d" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) GET to Member URI                    |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 Ok                               |
     |      Member Representation                |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a GET request to the URI of a Member Resource to
       retrieve its representation.

   2.  The server responds with the representation of the Member
       Resource.</source>
          <target state="translated">クライアントサーバー| | | 1.）メンバーURIに取得| | ------------------------------------------&amp;gt; | | | | 2.）200 OK | |メンバーの代表| | &amp;lt;------------------------------------------ | | | 1.クライアントは、GETリクエストをメンバーリソースのURIに送信して、その表現を取得します。 2.サーバーは、メンバーリソースの表現で応答します。</target>
        </trans-unit>
        <trans-unit id="76876be155df9d3b1979f0004de22edc27efe8b1" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) GET to Service Document URI          |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 Ok                               |
     |      Service Document                     |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a GET request to the URI of the Service
       Document.

   2.  The server responds with a Service Document enumerating the IRIs
       of a group of Collections and the capabilities of those
       Collections supported by the server.  The content of this
       document can vary based on aspects of the client request,
       including, but not limited to, authentication credentials.</source>
          <target state="translated">クライアントサーバー| | | 1.）サービスドキュメントURIに取得| | ------------------------------------------&amp;gt; | | | | 2.）200 OK | |サービス文書| | &amp;lt;------------------------------------------ | | | 1.クライアントは、GET要求をサービスドキュメントのURIに送信します。 2.サーバーは、コレクションのグループのIRIとサーバーがサポートするそれらのコレクションの機能を列挙するサービスドキュメントで応答します。このドキュメントの内容は、クライアントリクエストのさまざまな側面に基づいて変化する可能性があります。認証資格情報。</target>
        </trans-unit>
        <trans-unit id="1d5b247b01ee86613d994ca606b20cb6279035ed" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) POST to Collection URI               |
     |      Member Representation                |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 201 Created                          |
     |      Location: Member Entry URI           |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client POSTs a representation of the Member to the URI of the
       Collection.

   2.  If the Member Resource was created successfully, the server
       responds with a status code of 201 and a Location header that
       contains the IRI of the newly created Entry Resource.  Media
       Resources could have also been created and their IRIs can be
       found through the Entry Resource.  See &lt;a href=&quot;#section-9.6&quot;&gt;Section 9.6&lt;/a&gt; for more
       details.</source>
          <target state="translated">クライアントサーバー| | | 1.）コレクションURIへのPOST | |メンバーの代表| | ------------------------------------------&amp;gt; | | | | 2.）201作成| |場所：メンバーエントリURI | | &amp;lt;------------------------------------------ | | | 1.クライアントは、メンバーの表現をコレクションのURIにPOSTします。 2.メンバーリソースが正常に作成された場合、サーバーはステータスコード201と、新しく作成されたエントリリソースのIRIを含むLocationヘッダーで応答します。メディアリソースも作成されている可能性があり、それらのIRIはエントリリソースを通じて見つけることができます。見る&lt;a href=&quot;#section-9.6&quot;&gt;&lt;/a&gt;詳細はセクション9.6を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd91d64f5ba1c2b561dc68aad78122e44b4031ba" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) PUT to Member URI                    |
     |      Member Representation                |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 OK                               |
     |&amp;lt;------------------------------------------|

   1.  The client sends a PUT request to store a representation of a
       Member Resource.

   2.  If the request is successful, the server responds with a status
       code of 200.</source>
          <target state="translated">クライアントサーバー| | | 1.）メンバーURIへのPUT | | メンバーの代表| | ------------------------------------------&amp;gt; | | | | 2.）200 OK | | &amp;lt;------------------------------------------ | 1.クライアントは、メンバーリソースの表現を保存するためにPUTリクエストを送信します。2.リクエストが成功すると、サーバーはステータスコード200で応答します。</target>
        </trans-unit>
        <trans-unit id="2ab41737272cae6324e9b264638622ce30e7016c" translate="yes" xml:space="preserve">
          <source>Client error responses</source>
          <target state="translated">クライアントのエラー応答</target>
        </trans-unit>
        <trans-unit id="c82a3ee2730bab92b98bc213a8fb73492e3fdebd" translate="yes" xml:space="preserve">
          <source>Client errors (&lt;code&gt;400&lt;/code&gt;&amp;ndash;&lt;code&gt;499&lt;/code&gt;)</source>
          <target state="translated">クライアントエラー（ &lt;code&gt;400&lt;/code&gt; &amp;ndash; &lt;code&gt;499&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dd407b441928f45e73a186d44c8d9b1022e9b952" translate="yes" xml:space="preserve">
          <source>Client hints</source>
          <target state="translated">クライアントのヒント</target>
        </trans-unit>
        <trans-unit id="d5d9a54cc11d8f25e2a07fd30bc5b8caf775ec8d" translate="yes" xml:space="preserve">
          <source>Client request</source>
          <target state="translated">クライアントからのリクエスト</target>
        </trans-unit>
        <trans-unit id="c5b2b8d440453db220355b3130f1ed0c4ab07917" translate="yes" xml:space="preserve">
          <source>Client-Side &amp;amp; Server-Side (Java) sample for Cross-Origin Resource Sharing (CORS)</source>
          <target state="translated">クロスオリジンリソースシェアリング（CORS）のクライアント側とサーバー側（Java）のサンプル</target>
        </trans-unit>
        <trans-unit id="6f5874c4570fe3f1c919c21b9967af34bee3005c" translate="yes" xml:space="preserve">
          <source>Client-initiated upgrade to HTTP over TLS</source>
          <target state="translated">クライアントが主導して TLS 上の HTTP にアップグレード</target>
        </trans-unit>
        <trans-unit id="922d22a1c7654940e60c03245c40184c1e28e1bb" translate="yes" xml:space="preserve">
          <source>Client: the user-agent</source>
          <target state="translated">クライアント:ユーザーエージェント</target>
        </trans-unit>
        <trans-unit id="28beb9075baceef63887e188043a5dc8f9f8abcf" translate="yes" xml:space="preserve">
          <source>Clients and servers communicate by exchanging individual messages (as opposed to a stream of data). The messages sent by the client, usually a Web browser, are called &lt;em&gt;requests&lt;/em&gt; and the messages sent by the server as an answer are called &lt;em&gt;responses&lt;/em&gt;.</source>
          <target state="translated">クライアントとサーバーは、（データのストリームではなく）個々のメッセージを交換することによって通信します。クライアント（通常はWebブラウザー）が送信するメッセージは&lt;em&gt;要求&lt;/em&gt;と呼ばれ、サーバーが回答として送信するメッセージは&lt;em&gt;応答&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="f0a6c74917d2b5e80cb29e5ed1cc31e500515eb2" translate="yes" xml:space="preserve">
          <source>Clients are often privy to large amounts of personal information,
   including both information provided by the user to interact with
   resources (e.g., the user's name, location, mail address, passwords,
   encryption keys, etc.) and information about the user's browsing
   activity over time (e.g., history, bookmarks, etc.).  Implementations
   need to prevent unintentional disclosure of personal information.</source>
          <target state="translated">クライアントは多くの場合、ユーザーがリソースと対話するために提供された情報(例:ユーザーの名前、場所、メールアドレス、パスワード、暗号化キーなど)と、ユーザーのブラウジング活動に関する情報(例:履歴、ブックマークなど)の両方を含む大量の個人情報を公開します。実装では、意図しない個人情報の漏洩を防ぐ必要があります。</target>
        </trans-unit>
        <trans-unit id="c8385dd1dcb9fe615c68497e7d83ea0f53328707" translate="yes" xml:space="preserve">
          <source>Clients using HTTP rely heavily on the Domain Name Service, and are
   thus generally prone to security attacks based on the deliberate
   mis-association of IP addresses and DNS names. Clients need to be
   cautious in assuming the continuing validity of an IP number/DNS name
   association.

   In particular, HTTP clients SHOULD rely on their name resolver for
   confirmation of an IP number/DNS name association, rather than
   caching the result of previous host name lookups. Many platforms
   already can cache host name lookups locally when appropriate, and
   they SHOULD be configured to do so. It is proper for these lookups to
   be cached, however, only when the TTL (Time To Live) information
   reported by the name server makes it likely that the cached
   information will remain useful.

   If HTTP clients cache the results of host name lookups in order to
   achieve a performance improvement, they MUST observe the TTL
   information reported by DNS.

   If HTTP clients do not observe this rule, they could be spoofed when
   a previously-accessed server's IP address changes. As network
   renumbering is expected to become increasingly common [&lt;a href=&quot;#ref-24&quot;&gt;24&lt;/a&gt;], the
   possibility of this form of attack will grow. Observing this
   requirement thus reduces this potential security vulnerability.

   This requirement also improves the load-balancing behavior of clients
   for replicated servers using the same DNS name and reduces the
   likelihood of a user's experiencing failure in accessing sites which
   use that strategy.</source>
          <target state="translated">HTTPを使用するクライアントは、ドメインネームサービスに大きく依存しているため、一般に、IPアドレスとDNS名の意図的な誤関連付けに基づいてセキュリティ攻撃を受ける傾向があります。クライアントは、IP番号/ DNS名の関連付けの継続的な有効性を想定する際に注意する必要があります。特に、HTTPクライアントは、以前のホスト名ルックアップの結果をキャッシュするのではなく、IP番号/ DNS名の関連付けの確認をネームリゾルバーに依存する必要があります（SHOULD）。多くのプラットフォームはすでに適切な場合にホスト名ルックアップをローカルでキャッシュすることができます、そして、そうするようにそれらを構成する必要があります。ただし、これらのルックアップがキャッシュされるのは適切ですが、ネームサーバーから報告されたTTL（Time To Live）情報によって、キャッシュされた情報が引き続き有用である可能性が高い場合にのみ使用してください。HTTPクライアントがホスト名検索の結果をキャッシュしてパフォーマンスを向上させる場合、DNSから報告されたTTL情報を監視する必要があります。 HTTPクライアントがこのルールを守らない場合、以前にアクセスしたサーバーのIPアドレスが変更されたときに、クライアントがなりすまされる可能性があります。ネットワークの番号付けがますます一般的になることが期待されるように[&lt;a href=&quot;#ref-24&quot;&gt;24&lt;/a&gt; ]、この形の攻撃の可能性が高まります。したがって、この要件を順守することで、この潜在的なセキュリティの脆弱性が軽減されます。この要件により、同じDNS名を使用する複製サーバーのクライアントの負荷分散動作も改善され、その戦略を使用するサイトへのアクセスでユーザーが失敗する可能性が減少します。</target>
        </trans-unit>
        <trans-unit id="939f605954e45144b33768a5bb94ffea000db6cc" translate="yes" xml:space="preserve">
          <source>Close or reuse the connection for further requests.</source>
          <target state="translated">接続を閉じるか、接続を再利用して更なる要求を行います。</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="2a1800f5cb859b9d67e384c7da846507f055a233" translate="yes" xml:space="preserve">
          <source>Code Samples Showing &lt;code&gt;XMLHttpRequest&lt;/code&gt; and Cross-Origin Resource Sharing</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; とクロスオリジンリソースシェアリングを示すコードサンプル</target>
        </trans-unit>
        <trans-unit id="d674b2dea57bb6fd7e6a35edd6eb081470fbfe96" translate="yes" xml:space="preserve">
          <source>Collection Resources MUST provide representations in the form of Atom
   Feed Documents whose Entries contain the IRIs of the Members in the
   Collection.  No distinction is made between Collection Feeds and
   other kinds of Feeds -- a Feed might act both as a 'public' feed for
   subscription purposes and as a Collection Feed.

   Each Entry in the Feed Document SHOULD have an atom:link element with
   a relation of &quot;edit&quot; (see &lt;a href=&quot;#section-11.1&quot;&gt;Section 11.1&lt;/a&gt;).

   The Entries in the returned Atom Feed SHOULD be ordered by their
   &quot;app:edited&quot; property, with the most recently edited Entries coming
   first in the document order.  The app:edited value is not equivalent
   to the HTTP Last-Modified header and cannot be used to determine the
   freshness of cached responses.

   Clients MUST NOT assume that an Atom Entry returned in the Feed is a
   full representation of an Entry Resource and SHOULD perform a GET on
   the URI of the Member Entry before editing it.  See &lt;a href=&quot;#section-9.5&quot;&gt;Section 9.5&lt;/a&gt; for a
   discussion on the implications of cache control directives when
   obtaining entries.</source>
          <target state="translated">コレクションリソースは、エントリがコレクション内のメンバーのIRIを含むAtomフィードドキュメントの形式で表現を提供する必要があります。コレクションフィードと他の種類のフィードは区別されません。フィードは、購読目的の「パブリック」フィードとコレクションフィードの両方として機能する場合があります。フィードドキュメントの各エントリには、 &quot;編集&quot;の関係のあるatom：link要素が必要です（&lt;a href=&quot;#section-11.1&quot;&gt;セクション11.1を&lt;/a&gt;参照）。）。返されたAtomフィードのエントリは、「app：edited」プロパティで順序付けする必要があります（SHOULD）。最後に編集されたエントリがドキュメントの順序で最初になります。 app：editedの値はHTTP Last-Modifiedヘッダーと同等ではなく、キャッシュされた応答の鮮度を判断するために使用することはできません。クライアントは、フィードで返されたAtomエントリがエントリリソースの完全な表現であることを想定してはならず、編集する前にメンバーエントリのURIでGETを実行する必要があります。エントリを取得する際のキャッシュ制御ディレクティブの影響については、&lt;a href=&quot;#section-9.5&quot;&gt;セクション9.5&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b11e6ff9806f23d877b8f28e66ba1d2666df0aba" translate="yes" xml:space="preserve">
          <source>Collection resources differ from other resources in that they also
   act as containers.  Some HTTP methods apply only to a collection, but
   some apply to some or all of the resources inside the container
   defined by the collection.  When the scope of a method is not clear,
   the client can specify what depth to apply.  Depth can be either zero
   levels (only the collection), one level (the collection and directly
   contained resources), or infinite levels (the collection and all
   contained resources recursively).

   A collection's state consists of at least a set of mappings between
   path segments and resources, and a set of properties on the
   collection itself.  In this document, a resource B will be said to be
   contained in the collection resource A if there is a path segment
   mapping that maps to B and that is contained in A.  A collection MUST
   contain at most one mapping for a given path segment, i.e., it is
   illegal to have the same path segment mapped to more than one
   resource. 

   Properties defined on collections behave exactly as do properties on
   non-collection resources.  A collection MAY have additional state
   such as entity bodies returned by GET.

   For all WebDAV-compliant resources A and B, identified by URLs &quot;U&quot;
   and &quot;V&quot;, respectively, such that &quot;V&quot; is equal to &quot;U/SEGMENT&quot;, A MUST
   be a collection that contains a mapping from &quot;SEGMENT&quot; to B.  So, if
   resource B with URL &quot;http://example.com/bar/blah&quot; is WebDAV compliant
   and if resource A with URL &quot;http://example.com/bar/&quot; is WebDAV
   compliant, then resource A must be a collection and must contain
   exactly one mapping from &quot;blah&quot; to B.

   Although commonly a mapping consists of a single segment and a
   resource, in general, a mapping consists of a set of segments and a
   resource.  This allows a server to treat a set of segments as
   equivalent (i.e., either all of the segments are mapped to the same
   resource, or none of the segments are mapped to a resource).  For
   example, a server that performs case-folding on segments will treat
   the segments &quot;ab&quot;, &quot;Ab&quot;, &quot;aB&quot;, and &quot;AB&quot; as equivalent.  A client can
   then use any of these segments to identify the resource.  Note that a
   PROPFIND result will select one of these equivalent segments to
   identify the mapping, so there will be one PROPFIND response element
   per mapping, not one per segment in the mapping.

   Collection resources MAY have mappings to non-WebDAV-compliant
   resources in the HTTP URL namespace hierarchy but are not required to
   do so.  For example, if resource X with URL
   &quot;http://example.com/bar/blah&quot; is not WebDAV compliant and resource A
   with &quot;URL http://example.com/bar/&quot; identifies a WebDAV collection,
   then A may or may not have a mapping from &quot;blah&quot; to X.

   If a WebDAV-compliant resource has no WebDAV-compliant internal
   members in the HTTP URL namespace hierarchy, then the WebDAV-
   compliant resource is not required to be a collection.

   There is a standing convention that when a collection is referred to
   by its name without a trailing slash, the server MAY handle the
   request as if the trailing slash were present.  In this case, it
   SHOULD return a Content-Location header in the response, pointing to
   the URL ending with the &quot;/&quot;.  For example, if a client invokes a
   method on http://example.com/blah (no trailing slash), the server may
   respond as if the operation were invoked on http://example.com/blah/
   (trailing slash), and should return a Content-Location header with
   the value http://example.com/blah/.  Wherever a server produces a URL
   referring to a collection, the server SHOULD include the trailing
   slash.  In general, clients SHOULD use the trailing slash form of
   collection names.  If clients do not use the trailing slash form the
   client needs to be prepared to see a redirect response.  Clients will 

   find the DAV:resourcetype property more reliable than the URL to find
   out if a resource is a collection.

   Clients MUST be able to support the case where WebDAV resources are
   contained inside non-WebDAV resources.  For example, if an OPTIONS
   response from &quot;http://example.com/servlet/dav/collection&quot; indicates
   WebDAV support, the client cannot assume that
   &quot;http://example.com/servlet/dav/&quot; or its parent necessarily are
   WebDAV collections.

   A typical scenario in which mapped URLs do not appear as members of
   their parent collection is the case where a server allows links or
   redirects to non-WebDAV resources.  For instance, &quot;/col/link&quot; might
   not appear as a member of &quot;/col/&quot;, although the server would respond
   with a 302 status to a GET request to &quot;/col/link&quot;; thus, the URL
   &quot;/col/link&quot; would indeed be mapped.  Similarly, a dynamically-
   generated page might have a URL mapping from &quot;/col/index.html&quot;, thus
   this resource might respond with a 200 OK to a GET request yet not
   appear as a member of &quot;/col/&quot;.

   Some mappings to even WebDAV-compliant resources might not appear in
   the parent collection.  An example for this case are servers that
   support multiple alias URLs for each WebDAV-compliant resource.  A
   server may implement case-insensitive URLs, thus &quot;/col/a&quot; and
   &quot;/col/A&quot; identify the same resource, yet only either &quot;a&quot; or &quot;A&quot; is
   reported upon listing the members of &quot;/col&quot;.  In cases where a server
   treats a set of segments as equivalent, the server MUST expose only
   one preferred segment per mapping, consistently chosen, in PROPFIND
   responses.</source>
          <target state="translated">コレクションリソースは、コンテナとしても機能するという点で他のリソースとは異なります。HTTP メソッドの中には、コレクションにのみ適用されるものもありますが、コレクションによって定義されたコンテナ内のリソースの一部またはすべてに適用されるものもあります。メソッドのスコープが明確でない場合、クライアントは適用する深さを指定することができます。深さは、0 レベル (コレクションのみ)、1 レベル (コレクションと直接含まれるリソース)、または無限レベル (コレクションと含まれるすべてのリソースを再帰的に)のいずれかになります。コレクションの状態は、少なくともパスセグメントとリソースの間のマッピングのセットと、コレクション自体のプロパティのセットで構成されます。このドキュメントでは、リソースBは、Bにマップするパスセグメントのマッピングがあり、それがAに含まれている場合、コレクションのリソースAに含まれていると言われます。コレクションに定義されたプロパティは、コレクション以外のリソースに定義されたプロパティと同じように動作します。コレクションは、GETによって返されるエンティティボディのような追加の状態を持っていてもよい[MAY]。URL &quot;U &quot;と &quot;V &quot;で識別され、&quot;V &quot;が &quot;U/SEGMENT &quot;と等しいすべてのWebDAV準拠のリソースAとBについては、Aは &quot;SEGMENT &quot;からBへのマッピングを含むコレクションでなければならない[MUST]。 com/bar/」のリソースAがWebDAVに準拠している場合、リソースAはコレクションでなければならず、「blah」からBへのマッピングを正確に1つ含まなければなりません。これにより、サーバはセグメントのセットを同等のものとして扱うことができます(つまり、すべてのセグメントが同じリソースにマッピングされているか、またはセグメントのいずれもリソースにマッピングされていないかのいずれか)。例えば、セグメントに対して大文字小文字の折り返しを行うサーバは、セグメント &quot;ab&quot;、&quot;Ab&quot;、&quot;aB&quot;、および &quot;AB &quot;を等価として扱います。クライアントは、これらのセグメントのいずれかを使用してリソースを識別することができます。PROPFINDの結果は、マッピングを識別するためにこれらの等価なセグメントのうちの1つを選択するので、マッピング内のセグメントごとに1つではなく、マッピングごとに1つのPROPFIND応答要素があることに注意してください。コレクションリソースは、HTTP URL 名前空間階層内の非 WebDAV 準拠のリソースへのマッピングを持っていてもよい[MAY]が、必須ではない。例えば、URL &quot;http://example.com/bar/blah&quot; を持つリソースXがWebDAVに準拠しておらず、&quot;URL http://example.com/bar/&quot; を持つリソースAがWebDAVコレクションを識別する場合、Aは &quot;blah &quot;からXへのマッピングを持っていてもいなくても構いません。WebDAV準拠のリソースがHTTP URL名前空間階層にWebDAV準拠の内部メンバを持たない場合、WebDAV準拠のリソースはコレクションである必要はありません。コレクションが最後のスラッシュなしでその名前で参照される場合、サーバは最後のスラッシュがあるかのようにリクエストを処理してもよい[MAY]という決まりがあります。この場合、サーバーはレスポンスでContent-Locationヘッダーを返し、 「/」で終わるURLを指すべきである[SHOULD]。例えば、クライアントがhttp://example.com/blah(末尾にスラッシュがない)でメソッドを呼び出す場合、サーバは、操作が http://example.com/blah/(末尾にスラッシュがある)で呼び出されたかのように応答し、値 http://example.com/blah/を持つContent-Locationヘッダーを返すべきである。サーバーがコレクションを参照するURLを生成するたびに、サーバーは末尾のスラッシュを 含めるべきである[SHOULD]。一般的に、クライアントはコレクション名の末尾のスラッシュ形式を使うべきである [SHOULD]。もしクライアントが末尾のスラッシュを使わない場合、クライアントはリダイレクト応答を見る準備をしておく必要があります。クライアントはリソースがコレクションであるかどうかを調べるには URL よりも DAV:resourcetype プロパティの方が信頼性が高いことに気づくでしょう。クライアントは、WebDAV リソースが非 WebDAV リソースの中に含まれている場合をサポートできなければなりません(MUST)。例えば、&quot;http://example.com/servlet/dav/collection &quot;からのOPTIONS応答がWebDAVサポートを示している場合、クライアントは &quot;http://example.com/servlet/dav/&quot;やその親が必ずしもWebDAVコレクションであると仮定することはできません。マッピングされたURLが親コレクションのメンバーとして現れない典型的なシナリオは、サーバーが非WebDAVリソースへのリンクやリダイレクトを許可している場合です。例えば、「/col/link」は「/col/」のメンバとしては表示されないかもしれませんが、「/col/link」へのGETリクエストに対してサーバは302ステータスで応答します。同様に、動的に生成されたページは「/col/index.html」からのURLマッピングを持っているかもしれないので、このリソースはGETリクエストに200 OKで応答しても「/col/」のメンバーとしては表示されないかもしれません。WebDAV準拠のリソースへのマッピングであっても、親コレクションに表示されないものもあります。このような場合の例としては、各WebDAV準拠のリソースに対して複数のエイリアスURLをサポートしているサーバがあります。サーバは大文字と小文字を区別しないURLを実装することがあり、&quot;/col/a &quot;と&quot;/col/A &quot;は、&quot;/col/A/&quot;を識別します。</target>
        </trans-unit>
        <trans-unit id="92c14ed70a70a4eecdf0beb11029acb63043ecd0" translate="yes" xml:space="preserve">
          <source>Collections and Namespace Operations

   o  Due to interoperability problems, allowable formats for contents
      of 'href' elements in multistatus responses have been limited (see
      &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;).

   o  Due to lack of implementation, support for the 'propertybehavior'
      request body for COPY and MOVE has been removed.  Instead,
      requirements for property preservation have been clarified (see
      Sections &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt; and &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt;).

   Properties

   o  Strengthened server requirements for storage of property values,
      in particular persistence of language information (xml:lang),
      whitespace, and XML namespace information (see &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;).

   o  Clarified requirements on which properties should be writable by
      the client; in particular, setting &quot;DAV:displayname&quot; should be
      supported by servers (see &lt;a href=&quot;#section-15&quot;&gt;Section 15&lt;/a&gt;).

   o  Only '&lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date' productions are legal as values for DAV:
      getlastmodified (see &lt;a href=&quot;#section-15.7&quot;&gt;Section 15.7&lt;/a&gt;).

   Headers and Marshalling

   o  Servers are now required to do authorization checks before
      processing conditional headers (see &lt;a href=&quot;#section-8.5&quot;&gt;Section 8.5&lt;/a&gt;).

   Locking

   o  Strengthened requirement to check identity of lock creator when
      accessing locked resources (see &lt;a href=&quot;#section-6.4&quot;&gt;Section 6.4&lt;/a&gt;).  Clients should be
      aware that lock tokens returned to other principals can only be
      used to break a lock, if at all. 

   o  &lt;a href=&quot;https://tools.ietf.org/html/rfc2518#section-8.10.4&quot;&gt;Section&amp;nbsp;8.10.4 of [RFC2518]&lt;/a&gt; incorrectly required servers to return
      a 409 status where a 207 status was really appropriate.  This has
      been corrected (&lt;a href=&quot;#section-9.10&quot;&gt;Section 9.10&lt;/a&gt;).</source>
          <target state="translated">コレクションと名前空間の操作o相互運用性の問題により、マルチステータスレスポンスの「href」要素のコンテンツに使用できる形式は制限されています（&lt;a href=&quot;#section-8.3&quot;&gt;セクション8.3を&lt;/a&gt;参照 ）。 o実装が不足しているため、COPYおよびMOVEの「propertybehavior」リクエストボディのサポートが削除されました。代わりに、プロパティの保存に関する要件が明確になりました（セクション&lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;および&lt;a href=&quot;#section-9.9&quot;&gt;9.9を&lt;/a&gt;参照）。プロパティoプロパティ値、特に言語情報（xml：lang）、空白、およびXML名前空間情報の永続性の保存に関するサーバー要件の強化（&lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3を&lt;/a&gt;参照））。 oクライアントが書き込み可能なプロパティに関する要件を明確にしました。特に、「DAV：displayname」の設定はサーバーでサポートされている必要があります（&lt;a href=&quot;#section-15&quot;&gt;セクション15を&lt;/a&gt;参照）。 o DAV：getlastmodifiedの値として有効なのは、' &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt; -date'プロダクションのみです（&lt;a href=&quot;#section-15.7&quot;&gt;セクション15.7を&lt;/a&gt;参照）。ヘッダーとマーシャリングoサーバーは、条件付きヘッダーを処理する前に承認チェックを行う必要があります（&lt;a href=&quot;#section-8.5&quot;&gt;セクション8.5を&lt;/a&gt;参照）。ロックoロックされたリソースにアクセスするときにロック作成者のIDをチェックする要件が強化されました（&lt;a href=&quot;#section-6.4&quot;&gt;セクション6.4を&lt;/a&gt;参照））。クライアントは、他のプリンシパルに返されたロックトークンは、ロックを解除する場合にのみ使用できることに注意してください。o &lt;a href=&quot;https://tools.ietf.org/html/rfc2518#section-8.10.4&quot;&gt;[RFC2518]のセクション8.10.4は、&lt;/a&gt;サーバーが207ステータスが本当に適切である場合に409ステータスを返すように誤って要求しました。これは修正されました（&lt;a href=&quot;#section-9.10&quot;&gt;セクション9.10&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cfd2e08606ba977053d3bef5451af9337fdfae03" translate="yes" xml:space="preserve">
          <source>Collections and Namespace Operations

   o  The semantics of PROPFIND 'allprop' (&lt;a href=&quot;#section-9.1&quot;&gt;Section 9.1&lt;/a&gt;) have been
      relaxed so that servers return results including, at a minimum,
      the live properties defined in this specification, but not
      necessarily return other live properties.  The 'allprop' directive
      therefore means something more like &quot;return all properties that
      are supposed to be returned when 'allprop' is requested&quot; -- a set
      of properties that may include custom properties and properties
      defined in other specifications if those other specifications so
      require.  Related to this, 'allprop' requests can now be extended
      with the 'include' syntax to include specific named properties, 

      thereby avoiding additional requests due to changed 'allprop'
      semantics.

   o  Servers are now allowed to reject PROPFIND requests with Depth:
      Infinity.  Clients that used this will need to be able to do a
      series of Depth:1 requests instead.

   o  Multi-Status response bodies now can transport the value of HTTP's
      Location response header in the new 'location' element.  Clients
      may use this to avoid additional roundtrips to the server when
      there is a 'response' element with a 3xx status (see
      &lt;a href=&quot;#section-14.24&quot;&gt;Section 14.24&lt;/a&gt;).

   o  The definition of COPY has been relaxed so that it doesn't require
      servers to first delete the target resources anymore (this was a
      known incompatibility with [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;]).  See &lt;a href=&quot;#section-9.8&quot;&gt;Section 9.8&lt;/a&gt;.

   Headers and Marshalling

   o  The Destination and If request headers now allow absolute paths in
      addition to full URIs (see &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;).  This may be useful for
      clients operating through a reverse proxy that does rewrite the
      Host request header, but not WebDAV-specific headers.

   o  This specification adopts the error marshalling extensions and the
      &quot;precondition/postcondition&quot; terminology defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;] (see
      &lt;a href=&quot;#section-16&quot;&gt;Section 16&lt;/a&gt;).  Related to that, it adds the &quot;error&quot; XML element
      inside multistatus response bodies (see &lt;a href=&quot;#section-14.5&quot;&gt;Section 14.5&lt;/a&gt;, however note
      that it uses a format different from the one recommended in &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;3253&lt;/a&gt;).

   o  Senders and recipients are now required to support the UTF-16
      character encoding in XML message bodies (see &lt;a href=&quot;#section-19&quot;&gt;Section 19&lt;/a&gt;).

   o  Clients are now required to send the Depth header on PROPFIND
      requests, although servers are still encouraged to support clients
      that don't.

   Locking

   o  &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;'s concept of &quot;lock-null resources&quot; (LNRs) has been
      replaced by a simplified approach, the &quot;locked empty resources&quot;
      (see &lt;a href=&quot;#section-7.3&quot;&gt;Section 7.3&lt;/a&gt;).  There are some aspects of lock-null resources
      clients cannot rely on anymore, namely, the ability to use them to
      create a locked collection or the fact that they disappear upon
      UNLOCK when no PUT or MKCOL request was issued.  Note that servers
      are still allowed to implement LNRs as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;. 

   o  There is no implicit refresh of locks anymore.  Locks are only
      refreshed upon explicit request (see &lt;a href=&quot;#section-9.10.2&quot;&gt;Section 9.10.2&lt;/a&gt;).

   o  Clarified that the DAV:owner value supplied in the LOCK request
      must be preserved by the server just like a dead property
      (&lt;a href=&quot;#section-14.17&quot;&gt;Section 14.17&lt;/a&gt;).  Also added the DAV:lockroot element
      (&lt;a href=&quot;#section-14.12&quot;&gt;Section 14.12&lt;/a&gt;), which allows clients to discover the root of
      lock.</source>
          <target state="translated">コレクションとネームスペース操作o PROPFIND 'allprop'のセマンティクス（&lt;a href=&quot;#section-9.1&quot;&gt;セクション9.1&lt;/a&gt;）が緩和され、サーバーが少なくともこの仕様で定義されたライブプロパティを含む結果を返すようになりましたが、必ずしも他のライブプロパティを返すとは限りません。したがって、「allprop」ディレクティブは、「「allprop」が要求されたときに返されるはずのすべてのプロパティを返す」のようなものを意味します-他の仕様で必要な場合に、他の仕様で定義されたカスタムプロパティおよびプロパティを含む可能性があるプロパティのセット。これに関連して、「allprop」リクエストを「include」構文で拡張して特定の名前付きプロパティを含めることができるようになり、「allprop」セマンティクスの変更による追加のリクエストを回避できます。 oサーバーは、深さを指定してPROPFIND要求を拒否することができます。無限。これを使用したクライアントは、代わりに一連のDepth：1リクエストを実行できる必要があります。 oマルチステータスレスポンスボディは、新しい「location」要素でHTTPのLocationレスポンスヘッダーの値を転送できるようになりました。クライアントはこれを使用して、3xxステータスの 'response'要素がある場合にサーバーへの追加のラウンドトリップを回避できます（参照 &lt;a href=&quot;#section-14.24&quot;&gt;セクション14.24&lt;/a&gt;）。 o COPYの定義が緩和され、サーバーが最初にターゲットリソースを削除する必要が&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;なくなりまし&lt;/a&gt;た（これは[ RFC3253 ] との非互換性として知られていました）。&lt;a href=&quot;#section-9.8&quot;&gt;セクション9.8を&lt;/a&gt;参照してください。ヘッダーとマーシャリングo DestinationおよびIfリクエストヘッダーで、完全なURIに加えて絶対パスが許可されるようになりました（&lt;a href=&quot;#section-8.3&quot;&gt;セクション8.3を&lt;/a&gt;参照）。これは、WebDAV固有のヘッダーではなく、Host要求ヘッダーを書き換えるリバースプロキシを介して動作するクライアントに役立つ場合があります。 oこの仕様は、エラーマーシャリング拡張と、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt; ]で定義されている「前提条件/事後条件」の用語を採用しています（&lt;a href=&quot;#section-16&quot;&gt;セクション16を&lt;/a&gt;参照）。 ）。これに関連して、マルチステータスレスポンスボディ内に「エラー」XML要素を追加します（&lt;a href=&quot;#section-14.5&quot;&gt;セクション14.5を&lt;/a&gt;参照。ただし、&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;3253で&lt;/a&gt;推奨されているものとは異なるフォーマットを使用していることに注意してください）。 o送信者と受信者は、XMLメッセージ本文でUTF-16文字エンコーディングをサポートする必要があります（&lt;a href=&quot;#section-19&quot;&gt;セクション19を&lt;/a&gt;参照）。 oクライアントは、PROPFINDリクエストでDepthヘッダーを送信する必要がありますが、サーバーはまだサポートしていないクライアントをサポートすることをお勧めします。ロックo &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;の「ロックヌルリソース」（LNR）の概念は、簡略化されたアプローチである「ロックされた空のリソース」に置き換えられました（&lt;a href=&quot;#section-7.3&quot;&gt;セクション7.3を&lt;/a&gt;参照））。クライアントがロックに依存できなくなったロックヌルリソースには、ロックされたコレクションを作成する機能や、PUTまたはMKCOLリクエストが発行されていないときにUNLOCK時にそれらが消えるという側面があります。&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;に従って、サーバーは引き続きLNRを実装できることに注意してください。 oロックの暗黙的な更新はもうありません。ロックは、明示的な要求があった場合にのみ更新されます（&lt;a href=&quot;#section-9.10.2&quot;&gt;セクション9.10.2を&lt;/a&gt;参照）。 o LOCKリクエストで提供されるDAV：owner値は、デッドプロパティのようにサーバーによって保存される必要があることを明確にしました（&lt;a href=&quot;#section-14.17&quot;&gt;セクション14.17&lt;/a&gt;）。また、クライアントがロックのルートを検出できるようにするDAV：lockroot要素（&lt;a href=&quot;#section-14.12&quot;&gt;セクション14.12&lt;/a&gt;）を追加しました。</target>
        </trans-unit>
        <trans-unit id="ea7b149981164a5bdbbf89dc8821115528f3f53c" translate="yes" xml:space="preserve">
          <source>Collections can contain large numbers of Resources.  A client such as
   a web spider or web browser might be overwhelmed if the response to a
   GET contained every Entry in a Collection -- in turn the server might
   also waste bandwidth and processing time on generating a response
   that cannot be handled.  For this reason, servers MAY respond to
   Collection GET requests with a Feed Document containing a partial
   list of the Collection's members, and a link to the next partial list
   feed, if it exists.  The first such partial list returned MUST
   contain the most recently edited member Resources and MUST have an
   atom:link with a &quot;next&quot; relation whose &quot;href&quot; value is the URI of the
   next partial list of the Collection.  This next partial list will
   contain the next most recently edited set of Member Resources (and an
   atom:link to the following partial list if it exists).

   In addition to the &quot;next&quot; relation, partial list feeds MAY contain
   link elements with &quot;rel&quot; attribute values of &quot;previous&quot;, &quot;first&quot;, and
   &quot;last&quot;, that can be used to navigate through the complete set of
   entries in the Collection.

   For instance, suppose a client is supplied the URI
   &quot;http://example.org/entries/go&quot; of a Collection of Member Entries,
   where the server as a matter of policy avoids generating Feed
   Documents containing more than 10 Entries.  The Atom Feed Document 

   for the Collection will then represent the first partial list of a
   set of 10 linked Feed Documents.  The &quot;first&quot; relation references the
   initial Feed Document in the set and the &quot;last&quot; relation references
   the final Feed Document in the set.  Within each document, the
   &quot;previous&quot; and &quot;next&quot; link relations reference the preceding and
   subsequent documents.

     &amp;lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
       &amp;lt;link rel=&quot;first&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;next&quot;
             href=&quot;http://example.org/entries/2&quot; /&amp;gt;
       &amp;lt;link rel=&quot;last&quot;
             href=&quot;http://example.org/entries/10&quot; /&amp;gt;
       
     &amp;lt;/feed&amp;gt;

   The &quot;previous&quot; and &quot;next&quot; link elements for the partial list feed
   located at &quot;http://example.org/entries/2&quot; would look like this:

     &amp;lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
       &amp;lt;link rel=&quot;first&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;previous&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;next&quot;
             href=&quot;http://example.org/entries/3&quot; /&amp;gt;
       &amp;lt;link rel=&quot;last&quot;
             href=&quot;http://example.org/entries/10&quot; /&amp;gt;
       
     &amp;lt;/feed&amp;gt;</source>
          <target state="translated">コレクションには多数のリソースを含めることができます。 GETへの応答にコレクション内のすべてのエントリが含まれていると、WebスパイダーやWebブラウザーなどのクライアントが過負荷になる可能性があります。サーバーは、処理できない応答の生成時に帯域幅と処理時間を浪費する可能性もあります。このため、サーバーは、コレクションのメンバーの部分的なリストを含むフィードドキュメントと、存在する場合は次の部分的なリストフィードへのリンクを使用して、コレクションのGETリクエストに応答できます。返される最初のそのような部分リストには、最近編集されたメンバーのリソースが含まれ、「href」値がコレクションの次の部分リストのURIである「次の」関係を持つatom：linkが必要です。この次の部分リストには、次に編集されたメンバーリソースのセット（および次の部分リストが存在する場合は、atom：link）が含まれます。 「次の」関係に加えて、部分的なリストフィードには、「rel」属性値が「previous」、「first」、および「last」のリンク要素を含めることができます。これを使用して、コレクション。たとえば、クライアントにメンバーエントリのコレクションのURI &quot;http://example.org/entries/go&quot;が提供され、サーバーがポリシーの問題として10を超えるエントリを含むフィードドキュメントの生成を回避するとします。コレクションのAtomフィードドキュメントは、リンクされた10個のフィードドキュメントのセットの最初の部分的なリストを表します。最初&quot;リレーションはセットの最初のフィードドキュメントを参照し、「最後の」リレーションはセットの最後のフィードドキュメントを参照します。各ドキュメント内で、「前の」および「次の」リンク関係は、前のドキュメントと後続のドキュメントを参照します。 &amp;lt;feed xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;link rel = &quot;first&quot; href = &quot;http://example.org/entries/go&quot; /&amp;gt; &amp;lt;link rel = &quot;next &quot;href =&quot; http://example.org/entries/2 &quot;/&amp;gt; &amp;lt;link rel =&quot; last &quot;href =&quot; http://example.org/entries/10 &quot;/&amp;gt; &amp;lt;/ feed&amp;gt;「前の」 「http://example.org/entries/2」にある部分リストフィードの「次の」リンク要素は次のようになります。&amp;lt;feed xmlns = &quot;http://www.w3.org/2005/Atom&quot;&amp;gt; &amp;lt;link rel = &quot;first&quot; href = &quot;http://example.org/entries/go&quot; /&amp;gt; &amp;lt;link rel = &quot;previous &quot;href =&quot; http://example.org/entries/go &quot;/&amp;gt; &amp;lt;link rel =&quot; next &quot;href =&quot; http://example.org/entries/3 &quot;/&amp;gt; &amp;lt;link rel =&quot; last &quot;href = &quot;http://example.org/entries/10&quot; /&amp;gt; &amp;lt;/ feed&amp;gt;org / entries / 3 &quot;/&amp;gt; &amp;lt;link rel =&quot; last &quot;href =&quot; http://example.org/entries/10 &quot;/&amp;gt; &amp;lt;/ feed&amp;gt;org / entries / 3 &quot;/&amp;gt; &amp;lt;link rel =&quot; last &quot;href =&quot; http://example.org/entries/10 &quot;/&amp;gt; &amp;lt;/ feed&amp;gt;</target>
        </trans-unit>
        <trans-unit id="19b77d56fd18f49783fa29dab7e6057a1e912b7b" translate="yes" xml:space="preserve">
          <source>Combating ClickJacking with X-Frame-Options - IEInternals</source>
          <target state="translated">X-Frame-OptionsでClickJackingに対抗する-IEInternals</target>
        </trans-unit>
        <trans-unit id="4b4da2aaa941fd10619ebba8b1a33ab3b456b5cf" translate="yes" xml:space="preserve">
          <source>Combining Ranges (RFC 7233)</source>
          <target state="translated">範囲の結合 (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="d9439543fdbba1e16aeffe917fc7d29f50cbcc79" translate="yes" xml:space="preserve">
          <source>Comma-delimited list of the allowed &lt;a href=&quot;../methods&quot;&gt;HTTP request methods&lt;/a&gt;.</source>
          <target state="translated">許可された&lt;a href=&quot;../methods&quot;&gt;HTTPリクエストメソッドの&lt;/a&gt;カンマ区切りリスト。</target>
        </trans-unit>
        <trans-unit id="5bb95ba15fb836d98586a3edad9ec1fd27077fa7" translate="yes" xml:space="preserve">
          <source>Comma-separated values (CSV)</source>
          <target state="translated">カンマ区切りの値(CSV</target>
        </trans-unit>
        <trans-unit id="68546dfaabacefbed271a8286b33a08186cc138e" translate="yes" xml:space="preserve">
          <source>Command line: &lt;code&gt;pactester -p ~/pacparser-master/tests/proxy.pac -u http://www.mozilla.org&lt;/code&gt;</source>
          <target state="translated">コマンドライン： &lt;code&gt;pactester -p ~/pacparser-master/tests/proxy.pac -u http://www.mozilla.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62674fb494832a5696aeff81df38c79717f4136f" translate="yes" xml:space="preserve">
          <source>Command line: &lt;code&gt;pactester -p ~/pacparser-master/tests/proxy.pac -u http://www.mozilla.org&lt;/code&gt; (passes the &lt;code&gt;host&lt;/code&gt; parameter &lt;code&gt;www.mozilla.org&lt;/code&gt; and the &lt;code&gt;url&lt;/code&gt; parameter &lt;code&gt;http://www.mozilla.org&lt;/code&gt;)</source>
          <target state="translated">コマンドライン： &lt;code&gt;pactester -p ~/pacparser-master/tests/proxy.pac -u http://www.mozilla.org&lt;/code&gt; （ &lt;code&gt;host&lt;/code&gt; パラメーター &lt;code&gt;www.mozilla.org&lt;/code&gt; と &lt;code&gt;url&lt;/code&gt; パラメーター &lt;code&gt;http://www.mozilla.org&lt;/code&gt; 渡します。 org）</target>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="4861e90f90a057c5903a2cf3d60626141d9b6010" translate="yes" xml:space="preserve">
          <source>Comments to &lt;a href=&quot;news://news.mozilla.org/netscape.public.mozilla.netlib&quot;&gt;mozilla.dev.platform&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;news://news.mozilla.org/netscape.public.mozilla.netlib&quot;&gt;mozilla.dev.platform&lt;/a&gt;へのコメント</target>
        </trans-unit>
        <trans-unit id="355f9fe714bdefce689d0719b3940842115ebbd1" translate="yes" xml:space="preserve">
          <source>Common browsers User Agent strings</source>
          <target state="translated">一般的なブラウザ ユーザーエージェントの文字列</target>
        </trans-unit>
        <trans-unit id="93c3c55fe8f9dff2940ed7383aee89cb47a05822" translate="yes" xml:space="preserve">
          <source>Common causes are a server that is down for maintenance or that is overloaded. This response should be used for temporary conditions and the &lt;a href=&quot;../headers/retry-after&quot;&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; HTTP header should, if possible, contain the estimated time for the recovery of the service.</source>
          <target state="translated">一般的な原因は、メンテナンスのためにサーバーがダウンしているか、過負荷になっているサーバーです。この応答は一時的な状況で使用する必要があり、&lt;a href=&quot;../headers/retry-after&quot;&gt; &lt;code&gt;Retry-After&lt;/code&gt; &lt;/a&gt; HTTPヘッダーには、可能であれば、サービスの回復にかかる推定時間が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="f52fe2765fb6c8791ca39fc493cf9ca94ef54e30" translate="yes" xml:space="preserve">
          <source>Common format for web browsers:</source>
          <target state="translated">Webブラウザ用の共通フォーマット。</target>
        </trans-unit>
        <trans-unit id="376d942f8b1dc70a62764c08e0779e6fd0d34dc3" translate="yes" xml:space="preserve">
          <source>Common forms of caching entries are:</source>
          <target state="translated">キャッシングエントリーの一般的な形式は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="38d604abe4effd051b577737efcac0be5dd312de" translate="yes" xml:space="preserve">
          <source>Common problems</source>
          <target state="translated">よくある問題</target>
        </trans-unit>
        <trans-unit id="e69ef1fa14a563c69b2071931128d46e80d8fcab" translate="yes" xml:space="preserve">
          <source>Common uses for this mechanism</source>
          <target state="translated">このメカニズムの一般的な用途</target>
        </trans-unit>
        <trans-unit id="a3e3c123b281c1fc386d6962bf0c8c55f62330c3" translate="yes" xml:space="preserve">
          <source>Communicates one or more metrics and descriptions for the given request-response cycle.</source>
          <target state="translated">指定されたリクエスト応答サイクルのための1つ以上のメトリクスと説明を伝える。</target>
        </trans-unit>
        <trans-unit id="36eba05ecfef326403242e9b2557dc4cf61823c3" translate="yes" xml:space="preserve">
          <source>Communicating Presentation Information in Internet Messages: The Content-Disposition Header Field</source>
          <target state="translated">インターネットメッセージにおけるプレゼンテーション情報の伝達 コンテンツ-ディスポジションヘッダフィールド</target>
        </trans-unit>
        <trans-unit id="bb4f07ea51666d42daa68586d151fd1eee7f250c" translate="yes" xml:space="preserve">
          <source>Comparing versions of the same resource is a bit tricky: depending on the context, there are two kinds of &lt;em&gt;equality checks&lt;/em&gt;:</source>
          <target state="translated">同じリソースのバージョンを比較するのは少し難しいです。コンテキストに応じて、2種類の&lt;em&gt;等価チェックがあります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="187c3be8f0ded5cfb27cd980759930707dd51a48" translate="yes" xml:space="preserve">
          <source>Comparison to chunked &lt;code&gt;Transfer-Encoding&lt;/code&gt;</source>
          <target state="translated">チャンク &lt;code&gt;Transfer-Encoding&lt;/code&gt; 比較</target>
        </trans-unit>
        <trans-unit id="2cb53559d09ec4706b50627aafe05c3f74ccaf5c" translate="yes" xml:space="preserve">
          <source>Compatibility Notes</source>
          <target state="translated">互換性に関する注意事項</target>
        </trans-unit>
        <trans-unit id="7d648a6dff363974f754bb78876c2b10dadd8183" translate="yes" xml:space="preserve">
          <source>Compatibility notes</source>
          <target state="translated">互換性に関する注意事項</target>
        </trans-unit>
        <trans-unit id="079f93e4945f9092390a018ed062372bdcfd86bd" translate="yes" xml:space="preserve">
          <source>Complete list of MIME types</source>
          <target state="translated">MIME タイプの完全なリスト</target>
        </trans-unit>
        <trans-unit id="8a9facd0c43149e93efff61f4e5ddc45591658e4" translate="yes" xml:space="preserve">
          <source>Components of HTTP-based systems</source>
          <target state="translated">HTTPベースのシステムの構成要素</target>
        </trans-unit>
        <trans-unit id="c3c91e1eed116d8885305f2a420a8509e0cc75cc" translate="yes" xml:space="preserve">
          <source>Comprehensive list of MIME types useful for Web developers.</source>
          <target state="translated">Web 開発者に役立つ MIME タイプの包括的なリスト。</target>
        </trans-unit>
        <trans-unit id="e99b96873911e57f5de9103e887195406f68cd32" translate="yes" xml:space="preserve">
          <source>Compressing HTTP messages is one of the most important ways to improve the performance of a Web site, it shrinks the size of the data transmitted and makes better use of the available bandwidth; browsers always send this header and the server should be configured to abide to it and to use compression.</source>
          <target state="translated">HTTPメッセージを圧縮することは、Webサイトのパフォーマンスを向上させるための最も重要な方法の一つです。</target>
        </trans-unit>
        <trans-unit id="b19ee5750a4f428fdbb3471286458f10f3749ac9" translate="yes" xml:space="preserve">
          <source>Compressing with gzip</source>
          <target state="translated">gzipで圧縮する</target>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="5b5a0baa20c54e0050cb20d7eb082ba182a1b5ec" translate="yes" xml:space="preserve">
          <source>Compression can allow an attacker to recover secret data when it is
   compressed in the same context as data under attacker control.
   HTTP/2 enables compression of header fields (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;); the
   following concerns also apply to the use of HTTP compressed content-
   codings (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.1.2.1&quot;&gt;[RFC7231], Section&amp;nbsp;3.1.2.1&lt;/a&gt;).

   There are demonstrable attacks on compression that exploit the
   characteristics of the web (e.g., [&lt;a href=&quot;#ref-BREACH&quot;&gt;BREACH&lt;/a&gt;]).  The attacker induces
   multiple requests containing varying plaintext, observing the length
   of the resulting ciphertext in each, which reveals a shorter length
   when a guess about the secret is correct. 

   Implementations communicating on a secure channel MUST NOT compress
   content that includes both confidential and attacker-controlled data
   unless separate compression dictionaries are used for each source of
   data.  Compression MUST NOT be used if the source of data cannot be
   reliably determined.  Generic stream compression, such as that
   provided by TLS, MUST NOT be used with HTTP/2 (see &lt;a href=&quot;#section-9.2&quot;&gt;Section 9.2&lt;/a&gt;).

   Further considerations regarding the compression of header fields are
   described in [&lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt;].</source>
          <target state="translated">圧縮により、攻撃者は、攻撃者の制御下にあるデータと同じコンテキストで圧縮された秘密データを回復できます。 HTTP / 2はヘッダーフィールドの圧縮を可能にします（&lt;a href=&quot;#section-4.3&quot;&gt;セクション4.3&lt;/a&gt;）。以下の懸念は、HTTP圧縮コンテンツコーディングの使用にも当てはまります（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.1.2.1&quot;&gt;[RFC7231]、セクション3.1.2.1&lt;/a&gt;）。 Webの特性を悪用する、圧縮に対する実証可能な攻撃があります（たとえば、[ &lt;a href=&quot;#ref-BREACH&quot;&gt;BREACH&lt;/a&gt;]）。攻撃者は、さまざまな平文を含む複数の要求を誘発し、それぞれで結果の暗号文の長さを観察します。これにより、秘密についての推測が正しい場合、長さが短くなります。安全なチャネルで通信する実装は、データのソースごとに個別の圧縮辞書が使用されていない限り、機密データと攻撃者が制御するデータの両方を含むコンテンツを圧縮してはなりません（MUSTNOT）。データのソースを確実に特定できない場合は、圧縮を使用しないでください。 TLSによって提供されるような一般的なストリーム圧縮は、HTTP / 2で使用してはなりません（&lt;a href=&quot;#section-9.2&quot;&gt;セクション9.2を&lt;/a&gt;参照）。ヘッダーフィールドの圧縮に関するその他の考慮事項は、[ &lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt; ]で説明されています。</target>
        </trans-unit>
        <trans-unit id="26b0ce5a72c7b5ba41f70c30e64c6c6b62713bf9" translate="yes" xml:space="preserve">
          <source>Compression: compress and optimize content to speed up load time.</source>
          <target state="translated">圧縮:コンテンツを圧縮して最適化し、ロード時間を短縮します。</target>
        </trans-unit>
        <trans-unit id="afa306b4fc5fbd90b0a114f6bd08ca2cc8754f57" translate="yes" xml:space="preserve">
          <source>Concatenates the four dot-separated bytes into one 4-byte word and converts it to decimal.</source>
          <target state="translated">ドット区切りの4バイトを1つの4バイトワードに連結し、10進数に変換します。</target>
        </trans-unit>
        <trans-unit id="b5c1cd3785db2824d1ab278c24866501932dedaf" translate="yes" xml:space="preserve">
          <source>Concepts and usage</source>
          <target state="translated">概念と使い方</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="9a261b82a98b8bdc6d75dae90ec8ee01b54eeff4" translate="yes" xml:space="preserve">
          <source>Conditional headers</source>
          <target state="translated">条件付きヘッダ</target>
        </trans-unit>
        <trans-unit id="8bcd73be2170abf93875e1fa36640534488be6c5" translate="yes" xml:space="preserve">
          <source>Conditional range requests</source>
          <target state="translated">条件付きの範囲リクエスト</target>
        </trans-unit>
        <trans-unit id="32f3486df02697cc767cdf9f317b7c01b4f54138" translate="yes" xml:space="preserve">
          <source>Conditional requests</source>
          <target state="translated">条件付きのご要望</target>
        </trans-unit>
        <trans-unit id="b96d7430d9350e321fe2f05974da38d1376f5101" translate="yes" xml:space="preserve">
          <source>Conditional requests allow implementing the &lt;em&gt;optimistic locking algorithm&lt;/em&gt; (used by most wikis or source control systems). The concept is to allow all clients to get copies of the resource, then let them modify it locally, controlling concurrency by successfully allowing the first client submitting an update. All subsequent updates, based on the now obsolete version of the resource, are rejected:</source>
          <target state="translated">条件付きリクエストにより、&lt;em&gt;楽観的ロックアルゴリズム&lt;/em&gt;（ほとんどのWikiまたはソース管理システムで使用される）を実装できます。このコンセプトは、すべてのクライアントがリソースのコピーを取得できるようにし、ローカルでリソースを変更できるようにし、最初のクライアントが更新を送信できるようにすることで並行性を制御します。廃止されたバージョンのリソースに基づく以降の更新はすべて拒否されます。</target>
        </trans-unit>
        <trans-unit id="bb657402b08e081af170034d16476c261b3e0bd6" translate="yes" xml:space="preserve">
          <source>Conditional requests are HTTP requests [&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt;] that include one or
   more header fields indicating a precondition to be tested before
   applying the method semantics to the target resource.  This document
   defines the HTTP/1.1 conditional request mechanisms in terms of the
   architecture, syntax notation, and conformance criteria defined in
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;].

   Conditional GET requests are the most efficient mechanism for HTTP
   cache updates [&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;].  Conditionals can also be applied to
   state-changing methods, such as PUT and DELETE, to prevent the &quot;lost
   update&quot; problem: one client accidentally overwriting the work of
   another client that has been acting in parallel.

   Conditional request preconditions are based on the state of the
   target resource as a whole (its current value set) or the state as
   observed in a previously obtained representation (one value in that
   set).  A resource might have multiple current representations, each
   with its own observable state.  The conditional request mechanisms
   assume that the mapping of requests to a &quot;selected representation&quot;
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC7231]&lt;/a&gt;) will be consistent over time if the server
   intends to take advantage of conditionals.  Regardless, if the
   mapping is inconsistent and the server is unable to select the
   appropriate representation, then no harm will result when the
   precondition evaluates to false.

   The conditional request preconditions defined by this specification
   (&lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;) are evaluated when applicable to the recipient
   (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;) according to their order of precedence (&lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt;).</source>
          <target state="translated">条件付きリクエストは、メソッドのセマンティクスをターゲットリソースに適用する前にテストする前提条件を示す1つ以上のヘッダーフィールドを含むHTTPリクエスト[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt; ]です。このドキュメントは、[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt; ]で定義されているアーキテクチャ、構文表記法、および適合基準の観点から、HTTP / 1.1条件付き要求メカニズムを定義しています。条件付きGETリクエストは、HTTPキャッシュの更新に最も効率的なメカニズムです[ &lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;]。条件をPUTやDELETEなどの状態変更メソッドに適用して、「失われた更新」の問題を防ぐことができます。あるクライアントが、並行して動作していた別のクライアントの作業を誤って上書きしてしまいます。条件付き要求の前提条件は、ターゲットリソース全体の状態（現在の値セット）または以前に取得した表現で観察された状態（そのセット内の1つの値）に基づいています。リソースには複数の現在の表現があり、それぞれに独自の監視可能な状態があります。条件付き要求メカニズムは、要求の「選択された表現」へのマッピングを想定しています（&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3&quot;&gt;[RFC7231]のセクション3）。&lt;/a&gt;）サーバーが条件を利用しようとする場合、時間の経過とともに一貫性が保たれます。いずれにしても、マッピングに一貫性がなく、サーバーが適切な表現を選択できない場合、前提条件がfalseと評価されても害はありません。この仕様（&lt;a href=&quot;#section-3&quot;&gt;セクション3&lt;/a&gt;）で定義された条件付き要求の前提条件は、受信者（&lt;a href=&quot;#section-5&quot;&gt;セクション5&lt;/a&gt;）に適用可能な場合、優先順位（&lt;a href=&quot;#section-6&quot;&gt;セクション6&lt;/a&gt;）に従って評価されます。</target>
        </trans-unit>
        <trans-unit id="f8c4083d3ac1096a523190657f90870d3b790d6a" translate="yes" xml:space="preserve">
          <source>Conditional requests are a key feature of HTTP, and allow the building of efficient and complex applications. For caching or resuming downloads, the only work required for webmasters is to configure the server correctly; setting correct etags in some environments can be tricky. Once achieved, the browser will serve the expected conditional requests.</source>
          <target state="translated">条件付きリクエストは HTTP の主要な機能であり、効率的で複雑なアプリケーションの構築を可能にします。キャッシュやダウンロードの再開のために、ウェブマスターに必要な作業はサーバを正しく設定することだけです。これが達成されると、ブラウザは期待される条件付きのリクエストを提供します。</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="168256d8522ab8aa1e488cbca9a371a273b318a6" translate="yes" xml:space="preserve">
          <source>Confidential or sensitive information should never be stored or transmitted in HTTP Cookies, as the entire mechanism is inherently insecure.</source>
          <target state="translated">機密情報や機密情報は、メカニズム全体が本質的に安全ではないため、決してHTTPクッキーに保存したり送信したりしてはいけません。</target>
        </trans-unit>
        <trans-unit id="b6f09b9822b4fcc7ee7448f402f4626bb6d634c3" translate="yes" xml:space="preserve">
          <source>Configuring Apache</source>
          <target state="translated">Apache の設定</target>
        </trans-unit>
        <trans-unit id="5aa009cf30d646a189a2b32b2e2f211086ce4d68" translate="yes" xml:space="preserve">
          <source>Configuring Content Security Policy involves adding the &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; HTTP header to a web page and giving it values to control resources the user agent is allowed to load for that page. For example, a page that uploads and displays images could allow images from anywhere, but restrict a form action to a specific endpoint. A properly designed Content Security Policy helps protect a page against a cross site scripting attack. This article explains how to construct such headers properly, and provides examples.</source>
          <target state="translated">コンテンツセキュリティポリシーの構成には、Webページに&lt;a href=&quot;headers/content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; HTTPヘッダーを追加し、そのページにユーザーエージェントがロードできるリソースを制御するための値を付与することが含まれます。たとえば、画像をアップロードして表示するページでは、どこからでも画像を許可できますが、フォームアクションを特定のエンドポイントに制限できます。適切に設計されたコンテンツセキュリティポリシーは、クロスサイトスクリプティング攻撃からページを保護するのに役立ちます。この記事では、そのようなヘッダーを適切に構築する方法を説明し、例を示します。</target>
        </trans-unit>
        <trans-unit id="10fe25707b2c8df561d63aa0f93126ee95f3147f" translate="yes" xml:space="preserve">
          <source>Configuring Content Security Policy involves adding the &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; HTTP header to a web page and giving it values to control what resources the user agent is allowed to load for that page. For example, a page that uploads and displays images could allow images from anywhere, but restrict a form action to a specific endpoint. A properly designed Content Security Policy helps protect a page against a cross site scripting attack. This article explains how to construct such headers properly, and provides examples.</source>
          <target state="translated">コンテンツセキュリティポリシーの構成には、&lt;a href=&quot;headers/content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; HTTPヘッダーをWebページに追加し、ユーザーエージェントがそのページにロードできるリソースを制御するための値を与えることが含まれます。たとえば、画像をアップロードして表示するページでは、どこからでも画像を許可できますが、フォームアクションは特定のエンドポイントに制限されます。適切に設計されたコンテンツセキュリティポリシーは、クロスサイトスクリプティング攻撃からページを保護するのに役立ちます。この記事では、このようなヘッダーを適切に作成する方法を説明し、例を示します。</target>
        </trans-unit>
        <trans-unit id="7daf13b1f60fb4af3d6921cd3bc4aced67ab5a7a" translate="yes" xml:space="preserve">
          <source>Configuring Express</source>
          <target state="translated">エクスプレスの設定</target>
        </trans-unit>
        <trans-unit id="6f39d4583059888ab118eae8d20c986e51f1274e" translate="yes" xml:space="preserve">
          <source>Configuring HAProxy</source>
          <target state="translated">HAProxyの設定</target>
        </trans-unit>
        <trans-unit id="d70d5fc578cb203b115c05b384a205e2f62a043b" translate="yes" xml:space="preserve">
          <source>Configuring IIS</source>
          <target state="translated">IISの設定</target>
        </trans-unit>
        <trans-unit id="2031ab4ee84e7e349fa32c5b2095aa6cafb6bd65" translate="yes" xml:space="preserve">
          <source>Configuring nginx</source>
          <target state="translated">nginxの設定</target>
        </trans-unit>
        <trans-unit id="532521e6c325d8d9c38dfb2c90ab768c58d19d39" translate="yes" xml:space="preserve">
          <source>Configuring prefetching in the browser</source>
          <target state="translated">ブラウザでのプリフェッチの設定</target>
        </trans-unit>
        <trans-unit id="cfe2338ad9f0d231c9e7e937eb36ba083fe3da49" translate="yes" xml:space="preserve">
          <source>Configuring redirects in common servers</source>
          <target state="translated">共通サーバでのリダイレクトの設定</target>
        </trans-unit>
        <trans-unit id="82949d3ffebaebf9aadf54999c74e7c2fdc71165" translate="yes" xml:space="preserve">
          <source>Conflicts are most likely to occur in response to a &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; request. For example, you may get a 409 response when uploading a file which is older than the one already on the server resulting in a version control conflict.</source>
          <target state="translated">競合は、&lt;a href=&quot;../methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt;リクエストへの応答で発生する可能性が最も高いです。たとえば、サーバーに既に存在するファイルよりも古いファイルをアップロードすると、409応答が返され、バージョン管理の競合が発生することがあります。</target>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="32e5f579d6704066fd06ba7fbc38b931e1dbb869" translate="yes" xml:space="preserve">
          <source>Connection (RFC 2616)</source>
          <target state="translated">コネクション(RFC2616)</target>
        </trans-unit>
        <trans-unit id="1f3fc181701dc7eaafa3f89e076f2b6541c863f2" translate="yes" xml:space="preserve">
          <source>Connection Management (RFC 7230)</source>
          <target state="translated">接続管理 (RFC 7230)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
