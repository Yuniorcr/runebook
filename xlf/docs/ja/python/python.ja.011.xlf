<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="7066446b04ee84f2ee63e0715496c2416b380408" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects, set the maintype to &lt;code&gt;message&lt;/code&gt;, and set the subtype to &lt;em&gt;subtype&lt;/em&gt; if it is specified or &lt;code&gt;rfc822&lt;/code&gt; if it is not. If &lt;em&gt;subtype&lt;/em&gt; is &lt;code&gt;partial&lt;/code&gt;, raise an error (&lt;code&gt;bytes&lt;/code&gt; objects must be used to construct &lt;code&gt;message/partial&lt;/code&gt; parts).</source>
          <target state="translated">ため&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt;にmaintypeを設定し、オブジェクト &lt;code&gt;message&lt;/code&gt; 、及びにサブタイプを設定する&lt;em&gt;サブタイプ&lt;/em&gt;が指定されている場合や &lt;code&gt;rfc822&lt;/code&gt; そうでない場合。&lt;em&gt;subtype&lt;/em&gt;が &lt;code&gt;partial&lt;/code&gt; の場合は、エラーを発生させます（ &lt;code&gt;message/partial&lt;/code&gt; を構築するには、 &lt;code&gt;bytes&lt;/code&gt; オブジェクトを使用する必要があります）。</target>
        </trans-unit>
        <trans-unit id="cd93e3e6c8c66a14f077add7bc3e55825954f4f2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, per &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, raise an error if a &lt;em&gt;cte&lt;/em&gt; of &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt; is requested for &lt;em&gt;subtype&lt;/em&gt;&lt;code&gt;rfc822&lt;/code&gt;, and for any &lt;em&gt;cte&lt;/em&gt; other than &lt;code&gt;7bit&lt;/code&gt; for &lt;em&gt;subtype&lt;/em&gt;&lt;code&gt;external-body&lt;/code&gt;. For &lt;code&gt;message/rfc822&lt;/code&gt;, use &lt;code&gt;8bit&lt;/code&gt; if &lt;em&gt;cte&lt;/em&gt; is not specified. For all other values of &lt;em&gt;subtype&lt;/em&gt;, use &lt;code&gt;7bit&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt;、あたりの&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;、場合エラーを発生させる&lt;em&gt;CTE&lt;/em&gt;の &lt;code&gt;quoted-printable&lt;/code&gt; 形式または &lt;code&gt;base64&lt;/code&gt; 要求され&lt;em&gt;、サブタイプ&lt;/em&gt; &lt;code&gt;rfc822&lt;/code&gt; 、および任意のための&lt;em&gt;CTE&lt;/em&gt;以外の &lt;code&gt;7bit&lt;/code&gt; 用&lt;em&gt;のサブタイプ&lt;/em&gt; &lt;code&gt;external-body&lt;/code&gt; 。以下のための &lt;code&gt;message/rfc822&lt;/code&gt; 、使用の &lt;code&gt;8bit&lt;/code&gt; あれば&lt;em&gt;、CTEが&lt;/em&gt;指定されていません。&lt;em&gt;サブタイプの&lt;/em&gt;他のすべての値には、7 &lt;code&gt;7bit&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="e398629d7cbca4cecc106052af8eb8c0b30b221f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;bytes&lt;/code&gt;, use the specified &lt;em&gt;maintype&lt;/em&gt; and &lt;em&gt;subtype&lt;/em&gt;, or raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are not specified.</source>
          <target state="translated">以下のために &lt;code&gt;bytes&lt;/code&gt; 、指定された使用&lt;em&gt;maintype&lt;/em&gt;と&lt;em&gt;サブタイプを&lt;/em&gt;、または上げる&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外を&lt;/a&gt;彼らが指定されていない場合。</target>
        </trans-unit>
        <trans-unit id="e1f46e2291fcafabd14f10bb29e1002c75bd19e3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;str&lt;/code&gt; objects, if &lt;em&gt;cte&lt;/em&gt; is not set use heuristics to determine the most compact encoding.</source>
          <target state="translated">以下のための &lt;code&gt;str&lt;/code&gt; オブジェクト、場合&lt;em&gt;CTEが&lt;/em&gt;最もコンパクトな符号化を決定するために使用するヒューリスティックに設定されていません。</target>
        </trans-unit>
        <trans-unit id="18c573f79e1045ebe735b20b3288da0ea510cc71" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;str&lt;/code&gt;, set the MIME &lt;code&gt;maintype&lt;/code&gt; to &lt;code&gt;text&lt;/code&gt;, and set the subtype to &lt;em&gt;subtype&lt;/em&gt; if it is specified, or &lt;code&gt;plain&lt;/code&gt; if it is not.</source>
          <target state="translated">以下のために &lt;code&gt;str&lt;/code&gt; 、MIMEの設定 &lt;code&gt;maintype&lt;/code&gt; に &lt;code&gt;text&lt;/code&gt; 、とするサブタイプ設定&lt;em&gt;サブタイプを&lt;/em&gt;、それが指定されている場合、または &lt;code&gt;plain&lt;/code&gt; そうでない場合。</target>
        </trans-unit>
        <trans-unit id="d35d91a13b57ac41755a8fa618e750f4c5244931" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;stdin&lt;/em&gt;, line ending characters &lt;code&gt;'\n'&lt;/code&gt; in the input will be converted to the default line separator &lt;a href=&quot;os#os.linesep&quot;&gt;&lt;code&gt;os.linesep&lt;/code&gt;&lt;/a&gt;. For &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt;, all line endings in the output will be converted to &lt;code&gt;'\n'&lt;/code&gt;. For more information see the documentation of the &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; class when the &lt;em&gt;newline&lt;/em&gt; argument to its constructor is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;STDIN&lt;/em&gt;、文字を行末 &lt;code&gt;'\n'&lt;/code&gt; 入力では、デフォルトの行区切りに変換されます&lt;a href=&quot;os#os.linesep&quot;&gt; &lt;code&gt;os.linesep&lt;/code&gt; &lt;/a&gt;。以下のために&lt;em&gt;標準出力&lt;/em&gt;と&lt;em&gt;標準エラー&lt;/em&gt;出力のすべての行末はに変換されます &lt;code&gt;'\n'&lt;/code&gt; 。詳細については、&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;改行&lt;/em&gt;引数が &lt;code&gt;None&lt;/code&gt; の場合のio.TextIOWrapperクラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="aefa0554df66d0c278cf83b6f6f16cd31c184d5a" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;client use&lt;/strong&gt;, if you don&amp;rsquo;t have any special requirements for your security policy, it is highly recommended that you use the &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; function to create your SSL context. It will load the system&amp;rsquo;s trusted CA certificates, enable certificate validation and hostname checking, and try to choose reasonably secure protocol and cipher settings.</source>
          <target state="translated">以下のために&lt;strong&gt;、クライアントの使用&lt;/strong&gt;あなたはセキュリティポリシーのための特別な要件を持っていない場合、非常にあなたが使用することをお勧めし&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;あなたのSSLコンテキストを作成する機能を。システムの信頼されたCA証明書を読み込み、証明書の検証とホスト名のチェックを有効にし、適度に安全なプロトコルと暗号の設定を選択しようとします。</target>
        </trans-unit>
        <trans-unit id="b8a7f6e9bf97381e72100785ca3325d65ef2dafc" translate="yes" xml:space="preserve">
          <source>For FTP, file, and data URLs and requests explicitly handled by legacy &lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; classes, this function returns a &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt;&lt;code&gt;urllib.response.addinfourl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">FTP、ファイル、データのURLと、レガシー&lt;a href=&quot;#urllib.request.URLopener&quot;&gt; &lt;code&gt;URLopener&lt;/code&gt; &lt;/a&gt;クラスと&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;クラスによって明示的に処理されるリクエストの場合、この関数は&lt;a href=&quot;#urllib.response.addinfourl&quot;&gt; &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="8c2e9f6d535c3b5a4230508df199bceaf128b328" translate="yes" xml:space="preserve">
          <source>For FTP, file, and data URLs and requests explicitly handled by legacy &lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; classes, this function returns a &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; object.</source>
          <target state="translated">FTP、ファイル、データのURLと、レガシー&lt;a href=&quot;#urllib.request.URLopener&quot;&gt; &lt;code&gt;URLopener&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;クラスによって明示的に処理されたリクエストの場合、この関数は &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="c7aa24779d0a082d5416d92f04e7e88d8105145b" translate="yes" xml:space="preserve">
          <source>For HTTP and HTTPS URLs, this function returns a &lt;a href=&quot;http.client#http.client.HTTPResponse&quot;&gt;&lt;code&gt;http.client.HTTPResponse&lt;/code&gt;&lt;/a&gt; object slightly modified. In addition to the three new methods above, the msg attribute contains the same information as the &lt;a href=&quot;http.client#http.client.HTTPResponse.reason&quot;&gt;&lt;code&gt;reason&lt;/code&gt;&lt;/a&gt; attribute &amp;mdash; the reason phrase returned by server &amp;mdash; instead of the response headers as it is specified in the documentation for &lt;a href=&quot;http.client#http.client.HTTPResponse&quot;&gt;&lt;code&gt;HTTPResponse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTTPおよびHTTPS URLの場合、この関数は少し変更された&lt;a href=&quot;http.client#http.client.HTTPResponse&quot;&gt; &lt;code&gt;http.client.HTTPResponse&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。上記の3つの新しいメソッドに加えて、msg属性には、&lt;a href=&quot;http.client#http.client.HTTPResponse&quot;&gt; &lt;code&gt;HTTPResponse&lt;/code&gt; &lt;/a&gt;のドキュメントで指定されている応答ヘッダーの代わりに、&lt;a href=&quot;http.client#http.client.HTTPResponse.reason&quot;&gt; &lt;code&gt;reason&lt;/code&gt; &lt;/a&gt;属性と同じ情報（サーバーから返されるreasonフレーズ）が含まれます。</target>
        </trans-unit>
        <trans-unit id="1bc75bf88ecf83b55f007797a7a4602b34f12e08" translate="yes" xml:space="preserve">
          <source>For IPv4 addresses, two special forms are accepted instead of a host address: &lt;code&gt;''&lt;/code&gt; represents &lt;code&gt;INADDR_ANY&lt;/code&gt;, which is used to bind to all interfaces, and the string &lt;code&gt;'&amp;lt;broadcast&amp;gt;'&lt;/code&gt; represents &lt;code&gt;INADDR_BROADCAST&lt;/code&gt;. This behavior is not compatible with IPv6, therefore, you may want to avoid these if you intend to support IPv6 with your Python programs.</source>
          <target state="translated">IPv4アドレスの場合、ホストアドレスの代わりに2つの特別な形式が受け入れられます。 &lt;code&gt;''&lt;/code&gt; はすべてのインターフェイスにバインドするために使用される &lt;code&gt;INADDR_ANY&lt;/code&gt; を表し、文字列 &lt;code&gt;'&amp;lt;broadcast&amp;gt;'&lt;/code&gt; は &lt;code&gt;INADDR_BROADCAST&lt;/code&gt; を表します。この動作はIPv6と互換性がありません。そのため、PythonプログラムでIPv6をサポートする場合は、これらの動作を回避することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8cd76cf073a90da47328543f5df73c1501f64885" translate="yes" xml:space="preserve">
          <source>For IPv6 addresses, &lt;code&gt;%scope&lt;/code&gt; is appended to the host part if &lt;em&gt;sockaddr&lt;/em&gt; contains meaningful &lt;em&gt;scopeid&lt;/em&gt;. Usually this happens for multicast addresses.</source>
          <target state="translated">IPv6アドレスの場合、&lt;em&gt;sockaddr&lt;/em&gt;に意味のある&lt;em&gt;scopeid&lt;/em&gt;が含まれていると、 &lt;code&gt;%scope&lt;/code&gt; がホスト部分に追加されます。通常、これはマルチキャストアドレスで発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b592276149a3bef7ba4fa8be78e543f853907f60" translate="yes" xml:space="preserve">
          <source>For IPv6 addresses, &lt;code&gt;%scope_id&lt;/code&gt; is appended to the host part if &lt;em&gt;sockaddr&lt;/em&gt; contains meaningful &lt;em&gt;scope_id&lt;/em&gt;. Usually this happens for multicast addresses.</source>
          <target state="translated">IPv6アドレスの場合、&lt;em&gt;sockaddr&lt;/em&gt;に意味のある&lt;em&gt;scope_id&lt;/em&gt;が含まれていると、 &lt;code&gt;%scope_id&lt;/code&gt; がホスト部分に追加され&lt;em&gt;ます&lt;/em&gt;。通常、これはマルチキャストアドレスで発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f84204498b40046cf3d5c8d670e1b6f64404196" translate="yes" xml:space="preserve">
          <source>For Python 2.x users: In the Python 2.x series, a variety of implicit conversions between 8-bit strings (the closest thing 2.x offers to a built-in binary data type) and Unicode strings were permitted. This was a backwards compatibility workaround to account for the fact that Python originally only supported 8-bit text, and Unicode text was a later addition. In Python 3.x, those implicit conversions are gone - conversions between 8-bit binary data and Unicode text must be explicit, and bytes and string objects will always compare unequal.</source>
          <target state="translated">Python 2.xユーザ向け。Python 2.xシリーズでは、8ビット文字列(2.xが提供する中で最もバイナリデータ型に近いもの)とUnicode文字列の間の様々な暗黙の変換が許可されていました。これは、Pythonが元々8ビットテキストしかサポートしておらず、Unicodeテキストは後から追加されたという事実を考慮した下位互換性の回避策でした。Python 3.xでは、これらの暗黙の変換はなくなりました-8ビットのバイナリデータとUnicodeテキストの間の変換は明示的でなければならず、バイトと文字列オブジェクトは常に不等号を比較します。</target>
        </trans-unit>
        <trans-unit id="07a7aa5b50fd70b489ae7356b6020b2730b425a6" translate="yes" xml:space="preserve">
          <source>For SyntaxError tracebacks, the normal &amp;lsquo;^&amp;rsquo; marking where the error was detected is replaced by coloring the text with an error highlight. When code run from a file causes other exceptions, one may right click on a traceback line to jump to the corresponding line in an IDLE editor. The file will be opened if necessary.</source>
          <target state="translated">SyntaxErrorトレースバックの場合、エラーが検出された通常の '^'マークは、テキストをエラーハイライトで色付けすることで置き換えられます。ファイルから実行されたコードが他の例外を引き起こす場合、トレースバック行を右クリックして、IDLEエディターの対応する行にジャンプできます。必要に応じてファイルが開かれます。</target>
        </trans-unit>
        <trans-unit id="b334d98feb81f2472f7fcf772413a175e76a7be9" translate="yes" xml:space="preserve">
          <source>For Unicode (str) patterns:</source>
          <target state="translated">Unicode (str)パターンの場合。</target>
        </trans-unit>
        <trans-unit id="cc5ee7549356196b75a26243082dbc16cceea4e1" translate="yes" xml:space="preserve">
          <source>For Unix systems, except on Linux and AIX, this is the lowercased OS name as returned by &lt;code&gt;uname -s&lt;/code&gt; with the first part of the version as returned by &lt;code&gt;uname -r&lt;/code&gt; appended, e.g. &lt;code&gt;'sunos5'&lt;/code&gt; or &lt;code&gt;'freebsd8'&lt;/code&gt;, &lt;em&gt;at the time when Python was built&lt;/em&gt;. Unless you want to test for a specific system version, it is therefore recommended to use the following idiom:</source>
          <target state="translated">で返されるのUnixシステムでは、LinuxおよびAIX上を除いて、これは小文字OS名で &lt;code&gt;uname -s&lt;/code&gt; で返されるバージョンの最初の部分で &lt;code&gt;uname -r&lt;/code&gt; 付加し、例えば &lt;code&gt;'sunos5'&lt;/code&gt; または &lt;code&gt;'freebsd8'&lt;/code&gt; 、&lt;em&gt;た時点で、 Pythonが構築されました&lt;/em&gt;。したがって、特定のシステムバージョンをテストする場合を除き、次のイディオムを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1b3f52ba18e9bb6bfd8b64d0e44b233de339b632" translate="yes" xml:space="preserve">
          <source>For XML with namespaces, use the usual qualified &lt;code&gt;{namespace}tag&lt;/code&gt; notation:</source>
          <target state="translated">名前空間のあるXMLの場合は、通常の修飾された &lt;code&gt;{namespace}tag&lt;/code&gt; 表記を使用します。</target>
        </trans-unit>
        <trans-unit id="386bae46469352b3dcedf77c3f3e3e04ed9b6a94" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;str(d)&lt;/code&gt; is equivalent to &lt;code&gt;d.isoformat(' ')&lt;/code&gt;.</source>
          <target state="translated">ため&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス&lt;em&gt;D&lt;/em&gt;、 &lt;code&gt;str(d)&lt;/code&gt; と等価である &lt;code&gt;d.isoformat(' ')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32f810518819bb3ad019a20e713df5e193f8f9b1" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;MemoryHandler&lt;/code&gt;&lt;/a&gt;, flushing means just sending the buffered records to the target, if there is one. The buffer is also cleared when this happens. Override if you want different behavior.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;MemoryHandler&lt;/code&gt; の&lt;/a&gt;があれば、フラッシュする手段は、単に、ターゲットに緩衝レコードを送信します。これが発生すると、バッファもクリアされます。別の動作が必要な場合はオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1dff9931aa7d0ed5d45d70af53cd2aed0fd4dfb1" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt; number &lt;code&gt;z&lt;/code&gt;, the hash values of the real and imaginary parts are combined by computing &lt;code&gt;hash(z.real) +
sys.hash_info.imag * hash(z.imag)&lt;/code&gt;, reduced modulo &lt;code&gt;2**sys.hash_info.width&lt;/code&gt; so that it lies in &lt;code&gt;range(-2**(sys.hash_info.width - 1), 2**(sys.hash_info.width -
1))&lt;/code&gt;. Again, if the result is &lt;code&gt;-1&lt;/code&gt;, it&amp;rsquo;s replaced with &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">以下のための&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;数 &lt;code&gt;z&lt;/code&gt; 、実部と虚部のハッシュ値を計算することによって合成される &lt;code&gt;hash(z.real) + sys.hash_info.imag * hash(z.imag)&lt;/code&gt; 低減モジュロ &lt;code&gt;2**sys.hash_info.width&lt;/code&gt; そうそれはであること &lt;code&gt;range(-2**(sys.hash_info.width - 1), 2**(sys.hash_info.width - 1))&lt;/code&gt; 。繰り返しますが、結果が &lt;code&gt;-1&lt;/code&gt; の場合、 &lt;code&gt;-2&lt;/code&gt; に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="115b45a6292b21abd1fa97a5ef3ba9bc8ab15b01" translate="yes" xml:space="preserve">
          <source>For a call object that represents multiple calls, &lt;a href=&quot;#unittest.mock.call.call_list&quot;&gt;&lt;code&gt;call_list()&lt;/code&gt;&lt;/a&gt; returns a list of all the intermediate calls as well as the final call.</source>
          <target state="translated">複数の呼び出しを表す呼び出しオブジェクトの場合、&lt;a href=&quot;#unittest.mock.call.call_list&quot;&gt; &lt;code&gt;call_list()&lt;/code&gt; &lt;/a&gt;は、すべての中間呼び出しと最終呼び出しのリストを返します。</target>
        </trans-unit>
        <trans-unit id="4712f20402a7ed1bfb0c0d4a6cfbb07523688d8c" translate="yes" xml:space="preserve">
          <source>For a complete explanation of a given option and its behavior, see the Tk man pages for the widget in question.</source>
          <target state="translated">与えられたオプションとその動作の完全な説明は、問題のウィジェットのTkマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="8e3266049648ef06aea068c545a02b2015f4133b" translate="yes" xml:space="preserve">
          <source>For a date &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;str(d)&lt;/code&gt; is equivalent to &lt;code&gt;d.isoformat()&lt;/code&gt;.</source>
          <target state="translated">日付&lt;em&gt;dの&lt;/em&gt;場合、 &lt;code&gt;str(d)&lt;/code&gt; は &lt;code&gt;d.isoformat()&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4f58bc806b154de327f318c6ac5ff546bf7bd2fe" translate="yes" xml:space="preserve">
          <source>For a demonstration of these concepts, look at this example ABC definition:</source>
          <target state="translated">これらの概念のデモンストレーションのために、この例のABCの定義を見てください。</target>
        </trans-unit>
        <trans-unit id="8f0dc2746ae7c369836b36523343036355346489" translate="yes" xml:space="preserve">
          <source>For a description of the flag and mode values, see the C run-time documentation; flag constants (like &lt;a href=&quot;#os.O_RDONLY&quot;&gt;&lt;code&gt;O_RDONLY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.O_WRONLY&quot;&gt;&lt;code&gt;O_WRONLY&lt;/code&gt;&lt;/a&gt;) are defined in the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module. In particular, on Windows adding &lt;a href=&quot;#os.O_BINARY&quot;&gt;&lt;code&gt;O_BINARY&lt;/code&gt;&lt;/a&gt; is needed to open files in binary mode.</source>
          <target state="translated">フラグとモード値の説明については、Cランタイムのドキュメントを参照してください。フラグ定数（&lt;a href=&quot;#os.O_RDONLY&quot;&gt; &lt;code&gt;O_RDONLY&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#os.O_WRONLY&quot;&gt; &lt;code&gt;O_WRONLY&lt;/code&gt; など&lt;/a&gt;）は&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。特に、Windowsでは、バイナリモードでファイルを開くために&lt;a href=&quot;#os.O_BINARY&quot;&gt; &lt;code&gt;O_BINARY&lt;/code&gt; を&lt;/a&gt;追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="00fd7a5300104795ce153d199d268c66cb6aaf56" translate="yes" xml:space="preserve">
          <source>For a detailed example, see &lt;a href=&quot;#reducer-override&quot;&gt;Custom Reduction for Types, Functions, and Other Objects&lt;/a&gt;.</source>
          <target state="translated">詳細な例については、「&lt;a href=&quot;#reducer-override&quot;&gt;型、関数、およびその他のオブジェクトのカスタム縮約」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3db5c5c5b4bd614cce7d0ac3fee3e85c0cd62de9" translate="yes" xml:space="preserve">
          <source>For a full table of logging levels, see the &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">ロギングレベルの完全な表については、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="65c24ec47684ed26cbc7c9636834c71915522b1e" translate="yes" xml:space="preserve">
          <source>For a fully standalone distribution, you can distribute the launcher with your application appended, bundled with the Python &amp;ldquo;embedded&amp;rdquo; distribution. This will run on any PC with the appropriate architecture (32 bit or 64 bit).</source>
          <target state="translated">完全にスタンドアロンのディストリビューションの場合、Pythonの「組み込み」ディストリビューションにバンドルされたアプリケーションが追加されたランチャーを配布できます。これは、適切なアーキテクチャ（32ビットまたは64ビット）を備えたすべてのPCで動作します。</target>
        </trans-unit>
        <trans-unit id="aa126f00739d88b9aa90e6f3e2a802cb5c763327" translate="yes" xml:space="preserve">
          <source>For a general Python object &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt; delegates to &lt;code&gt;number.__round__&lt;/code&gt;.</source>
          <target state="translated">一般的なPythonオブジェクトのための &lt;code&gt;number&lt;/code&gt; 、 &lt;code&gt;round&lt;/code&gt; に委譲 &lt;code&gt;number.__round__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a28d39399a4b667034ddd93b313ca4ada834489a" translate="yes" xml:space="preserve">
          <source>For a general Python object &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;complex(x)&lt;/code&gt; delegates to &lt;code&gt;x.__complex__()&lt;/code&gt;. If &lt;code&gt;__complex__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;__float__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般的なPythonオブジェクト &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;complex(x)&lt;/code&gt; は &lt;code&gt;x.__complex__()&lt;/code&gt; 委任します。場合 &lt;code&gt;__complex__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;。場合 &lt;code&gt;__float__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e516b69f9ab9a24f39fb3d01ccca7deca01baa3" translate="yes" xml:space="preserve">
          <source>For a general Python object &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;complex(x)&lt;/code&gt; delegates to &lt;code&gt;x.__complex__()&lt;/code&gt;. If &lt;code&gt;__complex__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;__float__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般的なPythonオブジェクト &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;complex(x)&lt;/code&gt; は &lt;code&gt;x.__complex__()&lt;/code&gt; 委任します。場合 &lt;code&gt;__complex__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;。場合 &lt;code&gt;__float__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fdf496741ae444039bcbd0cff2de28e69e24051c" translate="yes" xml:space="preserve">
          <source>For a general Python object &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;float(x)&lt;/code&gt; delegates to &lt;code&gt;x.__float__()&lt;/code&gt;. If &lt;code&gt;__float__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般的なPythonオブジェクト &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;float(x)&lt;/code&gt; は &lt;code&gt;x.__float__()&lt;/code&gt; 委任します。場合 &lt;code&gt;__float__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9cb56d004a4c32fb4e92780092a8bd492db19bb" translate="yes" xml:space="preserve">
          <source>For a general Python object &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;float(x)&lt;/code&gt; delegates to &lt;code&gt;x.__float__()&lt;/code&gt;. If &lt;code&gt;__float__()&lt;/code&gt; is not defined then it falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般的なPythonオブジェクト &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;float(x)&lt;/code&gt; は &lt;code&gt;x.__float__()&lt;/code&gt; 委任します。場合 &lt;code&gt;__float__()&lt;/code&gt; 定義されていない、それは背面に落ちる&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b71ded6b644e163ed5a22c84a52332ed36162733" translate="yes" xml:space="preserve">
          <source>For a given seed, the &lt;a href=&quot;#random.choices&quot;&gt;&lt;code&gt;choices()&lt;/code&gt;&lt;/a&gt; function with equal weighting typically produces a different sequence than repeated calls to &lt;a href=&quot;#random.choice&quot;&gt;&lt;code&gt;choice()&lt;/code&gt;&lt;/a&gt;. The algorithm used by &lt;a href=&quot;#random.choices&quot;&gt;&lt;code&gt;choices()&lt;/code&gt;&lt;/a&gt; uses floating point arithmetic for internal consistency and speed. The algorithm used by &lt;a href=&quot;#random.choice&quot;&gt;&lt;code&gt;choice()&lt;/code&gt;&lt;/a&gt; defaults to integer arithmetic with repeated selections to avoid small biases from round-off error.</source>
          <target state="translated">指定されたシードに対して、同じ重み付けの&lt;a href=&quot;#random.choices&quot;&gt; &lt;code&gt;choices()&lt;/code&gt; &lt;/a&gt;関数は、通常、&lt;a href=&quot;#random.choice&quot;&gt; &lt;code&gt;choice()&lt;/code&gt; の&lt;/a&gt;繰り返し呼び出しとは異なるシーケンスを生成します。&lt;a href=&quot;#random.choices&quot;&gt; &lt;code&gt;choices()&lt;/code&gt; で&lt;/a&gt;使用されるアルゴリズムは、内部整合性と速度のために浮動小数点演算を使用します。&lt;a href=&quot;#random.choice&quot;&gt; &lt;code&gt;choice()&lt;/code&gt; &lt;/a&gt;が使用するアルゴリズムのデフォルトは、四捨五入エラーによる小さなバイアスを回避するために、選択が繰り返される整数演算です。</target>
        </trans-unit>
        <trans-unit id="05f7b184da73f1934bbc9129b218aedbb998c7d7" translate="yes" xml:space="preserve">
          <source>For a higher-level wrapper of &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;socket#socket.socket.sendfile&quot;&gt;&lt;code&gt;socket.socket.sendfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; の&lt;/a&gt;上位レベルのラッパーについては、&lt;a href=&quot;socket#socket.socket.sendfile&quot;&gt; &lt;code&gt;socket.socket.sendfile()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d0d6c126a57019cfaa59c16f6bbb2a1d78c4228c" translate="yes" xml:space="preserve">
          <source>For a list of all the command-line options:</source>
          <target state="translated">すべてのコマンドラインオプションのリストを参照してください。</target>
        </trans-unit>
        <trans-unit id="87fd2a57950af3c9c3165d392564b7fc19902f06" translate="yes" xml:space="preserve">
          <source>For a list of handlers included as standard, see &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">標準で含まれているハンドラーのリストについては、&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c623ac8e2dbdb44b77f887d6638659eaf4c8074e" translate="yes" xml:space="preserve">
          <source>For a list of the files in a ZIP archive, use the &lt;a href=&quot;#cmdoption-zipfile-l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">ZIPアーカイブ内のファイルのリストを表示するには、&lt;a href=&quot;#cmdoption-zipfile-l&quot;&gt; &lt;code&gt;-l&lt;/code&gt; &lt;/a&gt;オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="ce33415db4c123c62bd6366476d7eb3fd7814ac8" translate="yes" xml:space="preserve">
          <source>For a list of the files in a tar archive, use the &lt;a href=&quot;#cmdoption-tarfile-l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">tarアーカイブ内のファイルのリストを表示するには、&lt;a href=&quot;#cmdoption-tarfile-l&quot;&gt; &lt;code&gt;-l&lt;/code&gt; &lt;/a&gt;オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="4f31a2e7a2b7ef74a465b4d5322ee2c30d359d16" translate="yes" xml:space="preserve">
          <source>For a literal match, wrap the meta-characters in brackets. For example, &lt;code&gt;'[?]'&lt;/code&gt; matches the character &lt;code&gt;'?'&lt;/code&gt;.</source>
          <target state="translated">リテラル一致の場合、メタ文字を角括弧で囲みます。たとえば、 &lt;code&gt;'[?]'&lt;/code&gt; は文字 &lt;code&gt;'?'&lt;/code&gt; 一致します 。</target>
        </trans-unit>
        <trans-unit id="c21d07a4b7809c16f34f5ad89fa8da95d75a44e6" translate="yes" xml:space="preserve">
          <source>For a match &lt;em&gt;m&lt;/em&gt;, return the 2-tuple &lt;code&gt;(m.start(group), m.end(group))&lt;/code&gt;. Note that if &lt;em&gt;group&lt;/em&gt; did not contribute to the match, this is &lt;code&gt;(-1, -1)&lt;/code&gt;. &lt;em&gt;group&lt;/em&gt; defaults to zero, the entire match.</source>
          <target state="translated">一致&lt;em&gt;mの&lt;/em&gt;場合、2タプル &lt;code&gt;(m.start(group), m.end(group))&lt;/code&gt; ます。&lt;em&gt;グループ&lt;/em&gt;が一致に貢献しなかった場合、これは &lt;code&gt;(-1, -1)&lt;/code&gt; ことに注意してください。&lt;em&gt;groupの&lt;/em&gt;デフォルトはゼロで、全体が一致します。</target>
        </trans-unit>
        <trans-unit id="666246b0e205cb965fefc705620932f2b5673bdc" translate="yes" xml:space="preserve">
          <source>For a more convenient way of compressing a single chunk of data, see &lt;a href=&quot;#lzma.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データの単一のチャンクを圧縮するより便利な方法については、&lt;a href=&quot;#lzma.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="43d8561201f10a9aece268d98ecf18b08da3fa5d" translate="yes" xml:space="preserve">
          <source>For a more convenient way of decompressing an entire compressed stream at once, see &lt;a href=&quot;#lzma.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">圧縮されたストリーム全体を一度に解凍するより便利な方法については、&lt;a href=&quot;#lzma.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca9cb8f02ce650a16c34e931a114a4f3a4fa00e0" translate="yes" xml:space="preserve">
          <source>For a naive object, the &lt;code&gt;%z&lt;/code&gt; and &lt;code&gt;%Z&lt;/code&gt; format codes are replaced by empty strings.</source>
          <target state="translated">ナイーブオブジェクトの場合、 &lt;code&gt;%z&lt;/code&gt; および &lt;code&gt;%Z&lt;/code&gt; 形式コードは空の文字列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="30621260251d8be3cc3042163396cd1230567f5d" translate="yes" xml:space="preserve">
          <source>For a negative &lt;em&gt;step&lt;/em&gt;, the contents of the range are still determined by the formula &lt;code&gt;r[i] = start + step*i&lt;/code&gt;, but the constraints are &lt;code&gt;i &amp;gt;= 0&lt;/code&gt; and &lt;code&gt;r[i] &amp;gt; stop&lt;/code&gt;.</source>
          <target state="translated">負の&lt;em&gt;ステップの&lt;/em&gt;場合でも、範囲の内容は式 &lt;code&gt;r[i] = start + step*i&lt;/code&gt; によって決定されますが、制約は &lt;code&gt;i &amp;gt;= 0&lt;/code&gt; および &lt;code&gt;r[i] &amp;gt; stop&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8b78e93c1f5bc6ada550d464265f45c45e160b33" translate="yes" xml:space="preserve">
          <source>For a nonzero number, return the adjusted exponent of its operand as a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance. If the operand is a zero then &lt;code&gt;Decimal('-Infinity')&lt;/code&gt; is returned and the &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt; flag is raised. If the operand is an infinity then &lt;code&gt;Decimal('Infinity')&lt;/code&gt; is returned.</source>
          <target state="translated">ゼロ以外の数値の場合、そのオペランドの調整された指数を&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスとして返します。オペランドがゼロの場合、 &lt;code&gt;Decimal('-Infinity')&lt;/code&gt; が返され、&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;フラグが立てられます。オペランドが無限大の場合、 &lt;code&gt;Decimal('Infinity')&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="8d50bedea444e5cc9430e30600bab5cd97f24f9c" translate="yes" xml:space="preserve">
          <source>For a package, the same effect can be achieved by including a &lt;code&gt;__main__.py&lt;/code&gt; module, the contents of which will be executed when the module is run with &lt;code&gt;-m&lt;/code&gt;.</source>
          <target state="translated">パッケージの場合、 &lt;code&gt;__main__.py&lt;/code&gt; モジュールを含めることで同じ効果を得ることができます。その内容は、モジュールが &lt;code&gt;-m&lt;/code&gt; で実行されたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="8bcd8e2e8d9e09e1932e1712a87977c634a4d946" translate="yes" xml:space="preserve">
          <source>For a positive &lt;em&gt;step&lt;/em&gt;, the contents of a range &lt;code&gt;r&lt;/code&gt; are determined by the formula &lt;code&gt;r[i] = start + step*i&lt;/code&gt; where &lt;code&gt;i &amp;gt;= 0&lt;/code&gt; and &lt;code&gt;r[i] &amp;lt; stop&lt;/code&gt;.</source>
          <target state="translated">正の&lt;em&gt;ステップの&lt;/em&gt;場合、範囲 &lt;code&gt;r&lt;/code&gt; の内容は、式 &lt;code&gt;r[i] = start + step*i&lt;/code&gt; によって決定されます。ここで、 &lt;code&gt;i &amp;gt;= 0&lt;/code&gt; および &lt;code&gt;r[i] &amp;lt; stop&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf3aa39c7cc3dda44d966630b1c09cfb3205e2ce" translate="yes" xml:space="preserve">
          <source>For a simple script, the specified code is simply executed in a fresh module namespace. For a valid sys.path entry (typically a zipfile or directory), the entry is first added to the beginning of &lt;code&gt;sys.path&lt;/code&gt;. The function then looks for and executes a &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; module using the updated path. Note that there is no special protection against invoking an existing &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; entry located elsewhere on &lt;code&gt;sys.path&lt;/code&gt; if there is no such module at the specified location.</source>
          <target state="translated">単純なスクリプトの場合、指定されたコードは単純に新しいモジュールの名前空間で実行されます。有効なsys.pathエントリ（通常はzipfileまたはディレクトリ）の場合、エントリは最初に &lt;code&gt;sys.path&lt;/code&gt; の先頭に追加されます。次に、関数は更新されたパスを使用して&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;モジュールを探して実行します。指定された場所にそのようなモジュールがない場合、 &lt;code&gt;sys.path&lt;/code&gt; の他の場所にある既存の&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;エントリーを呼び出すことに対する特別な保護はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6baeee723ea1f301c86883b2af994d3639d55d54" translate="yes" xml:space="preserve">
          <source>For a time &lt;em&gt;t&lt;/em&gt;, &lt;code&gt;str(t)&lt;/code&gt; is equivalent to &lt;code&gt;t.isoformat()&lt;/code&gt;.</source>
          <target state="translated">時間&lt;em&gt;tの&lt;/em&gt;場合、 &lt;code&gt;str(t)&lt;/code&gt; は &lt;code&gt;t.isoformat()&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1e518769f3b680be2e2b473fb9aff3c8ff0902ac" translate="yes" xml:space="preserve">
          <source>For a two dimensional point &lt;code&gt;(x, y)&lt;/code&gt;, this is equivalent to computing the hypotenuse of a right triangle using the Pythagorean theorem, &lt;code&gt;sqrt(x*x + y*y)&lt;/code&gt;.</source>
          <target state="translated">2次元の点 &lt;code&gt;(x, y)&lt;/code&gt; 場合、これはピタゴラスの定理 &lt;code&gt;sqrt(x*x + y*y)&lt;/code&gt; を使用して直角三角形の斜辺を計算することと同じです。</target>
        </trans-unit>
        <trans-unit id="df6335500739b50d131f2bfca3e93aa377a0b672" translate="yes" xml:space="preserve">
          <source>For a typing object of the form &lt;code&gt;X[Y, Z, ...]&lt;/code&gt; these functions return &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;(Y, Z, ...)&lt;/code&gt;. If &lt;code&gt;X&lt;/code&gt; is a generic alias for a builtin or &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; class, it gets normalized to the original class. For unsupported objects return &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; correspondingly. Examples:</source>
          <target state="translated">&lt;code&gt;X[Y, Z, ...]&lt;/code&gt; 形式のタイピングオブジェクトの場合、これらの関数は &lt;code&gt;X&lt;/code&gt; および &lt;code&gt;(Y, Z, ...)&lt;/code&gt; 返します。 &lt;code&gt;X&lt;/code&gt; が組み込みクラスまたは&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;クラスの汎用エイリアスである場合、Xは元のクラスに正規化されます。サポートされていないオブジェクトの場合、対応して &lt;code&gt;None&lt;/code&gt; および &lt;code&gt;()&lt;/code&gt; を返します。例：</target>
        </trans-unit>
        <trans-unit id="1ee64b9ff441d0b6a5cef41090e49445fc0a5d11" translate="yes" xml:space="preserve">
          <source>For accessing the C Python api directly, a ready-to-use Python shared library object is available:</source>
          <target state="translated">CのPython apiに直接アクセスするために、すぐに使えるPython共有ライブラリオブジェクトが用意されています。</target>
        </trans-unit>
        <trans-unit id="0d7a1f81d73cb959d5e3b45930e44df60ee064e1" translate="yes" xml:space="preserve">
          <source>For additional numeric operations see the &lt;a href=&quot;math#module-math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmath#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">その他の数値演算については、&lt;a href=&quot;math#module-math&quot;&gt; &lt;code&gt;math&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;cmath#module-cmath&quot;&gt; &lt;code&gt;cmath&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="8ec4af7df109ce92f9ea30f1681eaa99c7fccae1" translate="yes" xml:space="preserve">
          <source>For addresses that appear to be 6to4 addresses (starting with &lt;code&gt;2002::/16&lt;/code&gt;) as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc3056.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 3056&lt;/strong&gt;&lt;/a&gt;, this property will report the embedded IPv4 address. For any other address, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3056.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 3056&lt;/strong&gt;&lt;/a&gt;で定義されている6to4アドレス（ &lt;code&gt;2002::/16&lt;/code&gt; 始まる）のように見えるアドレスの場合、このプロパティは埋め込みIPv4アドレスを報告します。その他のアドレスの場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cd51251fe6a3922b47184d5d1f951ddf7677b01" translate="yes" xml:space="preserve">
          <source>For addresses that appear to be 6to4 addresses (starting with &lt;code&gt;2002::/16&lt;/code&gt;) as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc3056.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 3056&lt;/strong&gt;&lt;/a&gt;, this property will report the embedded IPv4 address. For any other address, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3056.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 3056&lt;/strong&gt;&lt;/a&gt;で定義されている6to4アドレス（ &lt;code&gt;2002::/16&lt;/code&gt; ）のように見えるアドレスの場合、このプロパティは埋め込みIPv4アドレスを報告します。その他のアドレスの場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f900a30d92e1d3f296841c46ad25d2efeb2f007" translate="yes" xml:space="preserve">
          <source>For addresses that appear to be IPv4 mapped addresses (starting with &lt;code&gt;::FFFF/96&lt;/code&gt;), this property will report the embedded IPv4 address. For any other address, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">IPv4マッピングアドレス（ &lt;code&gt;::FFFF/96&lt;/code&gt; で始まる）のように見えるアドレスの場合、このプロパティは埋め込みIPv4アドレスを報告します。その他のアドレスの場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a6a8569f2aecd3660a5a2055585eeda04864338d" translate="yes" xml:space="preserve">
          <source>For addresses that appear to be Teredo addresses (starting with &lt;code&gt;2001::/32&lt;/code&gt;) as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4380.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4380&lt;/strong&gt;&lt;/a&gt;, this property will report the embedded &lt;code&gt;(server, client)&lt;/code&gt; IP address pair. For any other address, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4380.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4380&lt;/strong&gt;&lt;/a&gt;で定義されているTeredoアドレス（ &lt;code&gt;2001::/32&lt;/code&gt; 始まる）のように見えるアドレスの場合、このプロパティは埋め込み &lt;code&gt;(server, client)&lt;/code&gt; IPアドレスのペアを報告します。その他のアドレスの場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b57fb9bff41b6afca7babc13b149ae63041aeb5e" translate="yes" xml:space="preserve">
          <source>For addresses that appear to be Teredo addresses (starting with &lt;code&gt;2001::/32&lt;/code&gt;) as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4380.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 4380&lt;/strong&gt;&lt;/a&gt;, this property will report the embedded &lt;code&gt;(server, client)&lt;/code&gt; IP address pair. For any other address, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4380.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 4380&lt;/strong&gt;&lt;/a&gt;で定義されているTeredoアドレス（ &lt;code&gt;2001::/32&lt;/code&gt; ）のように見えるアドレスの場合、このプロパティは埋め込み &lt;code&gt;(server, client)&lt;/code&gt; IPアドレスのペアを報告します。その他のアドレスの場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="caebc9e5ce8fd833a18841ee1d3aa8ceb3472904" translate="yes" xml:space="preserve">
          <source>For all of the &lt;a href=&quot;#opcode-SET_ADD&quot;&gt;&lt;code&gt;SET_ADD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-LIST_APPEND&quot;&gt;&lt;code&gt;LIST_APPEND&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#opcode-MAP_ADD&quot;&gt;&lt;code&gt;MAP_ADD&lt;/code&gt;&lt;/a&gt; instructions, while the added value or key/value pair is popped off, the container object remains on the stack so that it is available for further iterations of the loop.</source>
          <target state="translated">すべての&lt;a href=&quot;#opcode-SET_ADD&quot;&gt; &lt;code&gt;SET_ADD&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-LIST_APPEND&quot;&gt; &lt;code&gt;LIST_APPEND&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#opcode-MAP_ADD&quot;&gt; &lt;code&gt;MAP_ADD&lt;/code&gt; &lt;/a&gt;命令について、追加された値またはキー/値のペアがポップオフされている間、コンテナオブジェクトはスタックに残り、ループのさらなる反復に使用できます。</target>
        </trans-unit>
        <trans-unit id="17bb1e02a3a8c9756702891333f2fa0f4afa3d16" translate="yes" xml:space="preserve">
          <source>For all other comparisons (such as &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;), when a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised:</source>
          <target state="translated">他のすべての比較（ &lt;code&gt;&amp;lt;&lt;/code&gt; や &lt;code&gt;&amp;gt;&lt;/code&gt; など）では、&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトが別のタイプのオブジェクトと比較されると、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="b0f58f3dbfd004ab8257354adb01c260a0fe1222" translate="yes" xml:space="preserve">
          <source>For all other response codes, the method &lt;code&gt;http_error_default()&lt;/code&gt; is called which you can override in subclasses to handle the error appropriately.</source>
          <target state="translated">他のすべての応答コードでは、エラーを適切に処理するためにサブクラスでオーバーライドできるメソッド &lt;code&gt;http_error_default()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a0b17df6417af18c05b98134b149d8706f2d0a67" translate="yes" xml:space="preserve">
          <source>For almost all applications &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; is preferable.</source>
          <target state="translated">ほとんどすべてのアプリケーションでは、&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;が推奨されます。</target>
        </trans-unit>
        <trans-unit id="d1688519c95e30c3a0fdf1a44a0c337b8e5d237f" translate="yes" xml:space="preserve">
          <source>For an HTTP POST request method, &lt;em&gt;data&lt;/em&gt; should be a buffer in the standard &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; format. The &lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function takes a mapping or sequence of 2-tuples and returns an ASCII string in this format. It should be encoded to bytes before being used as the &lt;em&gt;data&lt;/em&gt; parameter.</source>
          <target state="translated">HTTP POSTリクエストメソッドの場合、&lt;em&gt;データ&lt;/em&gt;は標準の&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;形式のバッファである必要があります。&lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;関数は、2タプルのマッピングまたは配列を受け取り、この形式のASCII文字列を返します。&lt;em&gt;データ&lt;/em&gt;パラメータとして使用する前に、バイトにエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="321d130154df7221dd2710f2b1317833db709e42" translate="yes" xml:space="preserve">
          <source>For an aware object:</source>
          <target state="translated">意識している対象に対して</target>
        </trans-unit>
        <trans-unit id="a17d72681c41e653cbffdc470a5ce38780a11b46" translate="yes" xml:space="preserve">
          <source>For an example of the usage of queues for interprocess communication see &lt;a href=&quot;#multiprocessing-examples&quot;&gt;Examples&lt;/a&gt;.</source>
          <target state="translated">プロセス間通信を参照するためのキューの使用の例については&lt;a href=&quot;#multiprocessing-examples&quot;&gt;例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0b68182f78976cfa947bfc7e82fd8771f13f5a0" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#cookbook-rotator-namer&quot;&gt;Using a rotator and namer to customize log rotation processing&lt;/a&gt;.</source>
          <target state="translated">例については&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#cookbook-rotator-namer&quot;&gt;、ローテーターとネーマーを使用したログローテーション処理のカスタマイズを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="83fcca1136da4c1a159dbfbc7788b9c760fa6324" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#cookbook-rotator-namer&quot;&gt;Using a rotator and namer to customize log rotation processing&lt;/a&gt;.</source>
          <target state="translated">例については、「&lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#cookbook-rotator-namer&quot;&gt;ローテーターとネーマーを使用してログローテーション処理をカスタマイズする&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="465235f896ee45a5706af0e616381fac9cdc77a3" translate="yes" xml:space="preserve">
          <source>For an explanation of why the &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; part is necessary, see &lt;a href=&quot;#multiprocessing-programming&quot;&gt;Programming guidelines&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 部分が必要な理由については、&lt;a href=&quot;#multiprocessing-programming&quot;&gt;プログラミングのガイドラインを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="4d87221a5f8993883fc9acf9eba35bccbcbdbcf3" translate="yes" xml:space="preserve">
          <source>For an introduction to socket programming (in C), see the following papers:</source>
          <target state="translated">ソケットプログラミング(C言語)の入門書については、以下の論文を参照してください。</target>
        </trans-unit>
        <trans-unit id="4537c0799d30818387a1778e0690fa078b4b7e06" translate="yes" xml:space="preserve">
          <source>For any &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;d == datetime.combine(d.date(), d.time(), d.tzinfo)&lt;/code&gt;. If date is a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object, its time components and &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attributes are ignored.</source>
          <target state="translated">任意の&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;dの&lt;/em&gt;場合、 &lt;code&gt;d == datetime.combine(d.date(), d.time(), d.tzinfo)&lt;/code&gt; 。 dateが&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトの場合、その時間コンポーネントと&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性は無視されます。</target>
        </trans-unit>
        <trans-unit id="b37d67d8e0a8eb8e77a72044792b8805d3ba57e4" translate="yes" xml:space="preserve">
          <source>For any of methods of this class, a &lt;em&gt;resource&lt;/em&gt; argument is expected to be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; which represents conceptually just a file name. This means that no subdirectory paths should be included in the &lt;em&gt;resource&lt;/em&gt; argument. This is because the location of the package the reader is for, acts as the &amp;ldquo;directory&amp;rdquo;. Hence the metaphor for directories and file names is packages and resources, respectively. This is also why instances of this class are expected to directly correlate to a specific package (instead of potentially representing multiple packages or a module).</source>
          <target state="translated">このクラスのどのメソッドでも、&lt;em&gt;リソース&lt;/em&gt;引数は、概念的にはファイル名のみを表す&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトで&lt;/a&gt;あることが期待されます。つまり、&lt;em&gt;リソース&lt;/em&gt;引数にサブディレクトリパスを含めないでください。これは、リーダーが置かれているパッケージの場所が「ディレクトリ」として機能するためです。したがって、ディレクトリとファイル名のメタファーは、それぞれパッケージとリソースです。これは、このクラスのインスタンスが特定のパッケージに直接相関することが期待される理由でもあります（複数のパッケージまたはモジュールを表す可能性はありません）。</target>
        </trans-unit>
        <trans-unit id="46d2c0067052225d760c2d09aa23f613eaf0b4d4" translate="yes" xml:space="preserve">
          <source>For any of methods of this class, a &lt;em&gt;resource&lt;/em&gt; argument is expected to be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; which represents conceptually just a file name. This means that no subdirectory paths should be included in the &lt;em&gt;resource&lt;/em&gt; argument. This is because the location of the package the reader is for, acts as the &amp;ldquo;directory&amp;rdquo;. Hence the metaphor for directories and file names is packages and resources, respectively. This is also why instances of this class are expected to directly correlate to a specific package (instead of potentially representing multiple packages or a module).</source>
          <target state="translated">このクラスのどのメソッドでも、&lt;em&gt;リソース&lt;/em&gt;引数は、概念的にはファイル名だけを表す&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトで&lt;/a&gt;あることが期待されます。これは、サブディレクトリパスを&lt;em&gt;リソース&lt;/em&gt;引数に含めないことを意味します。これは、リーダーの対象となるパッケージの場所が「ディレクトリ」として機能するためです。したがって、ディレクトリとファイル名のメタファーは、それぞれパッケージとリソースです。これは、このクラスのインスタンスが（複数のパッケージまたはモジュールを表す可能性があるのではなく）特定のパッケージに直接相関することが期待される理由でもあります。</target>
        </trans-unit>
        <trans-unit id="a1460d090c4d9e2f5c93e1dbae17ba143ffe2103" translate="yes" xml:space="preserve">
          <source>For applications requiring aware objects, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects have an optional time zone information attribute, &lt;code&gt;tzinfo&lt;/code&gt;, that can be set to an instance of a subclass of the abstract &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; class. These &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; objects capture information about the offset from UTC time, the time zone name, and whether daylight saving time is in effect.</source>
          <target state="translated">認識オブジェクトを必要とするアプリケーションの場合、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトにはオプションのタイムゾーン情報属性 &lt;code&gt;tzinfo&lt;/code&gt; があり、これは抽象&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;クラスのサブクラスのインスタンスに設定できます。これらの&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;オブジェクトは、UTC時間からのオフセット、タイムゾーン名、および夏時間が有効かどうかに関する情報をキャプチャします。</target>
        </trans-unit>
        <trans-unit id="7075e97b30b77fd32e75248fdd1404e81f84a7b9" translate="yes" xml:space="preserve">
          <source>For applications that require data compression, the functions in this module allow compression and decompression, using the zlib library. The zlib library has its own home page at &lt;a href=&quot;http://www.zlib.net&quot;&gt;http://www.zlib.net&lt;/a&gt;. There are known incompatibilities between the Python module and versions of the zlib library earlier than 1.1.3; 1.1.3 has a security vulnerability, so we recommend using 1.1.4 or later.</source>
          <target state="translated">データ圧縮を必要とするアプリケーションの場合、このモジュールの関数では、zlibライブラリを使用して圧縮と解凍を行うことができます。zlibライブラリには、&lt;a href=&quot;http://www.zlib.net&quot;&gt;http：&lt;/a&gt; //www.zlib.netに独自のホームページがあります。Pythonモジュールと1.1.3より前のzlibライブラリのバージョンの間には、既知の非互換性があります。1.1.3にはセキュリティ上の脆弱性があるため、1.1.4以降を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="acb08d2fe0ee4cde5f8032616c5da5da0fa793ac" translate="yes" xml:space="preserve">
          <source>For applications that require data compression, the functions in this module allow compression and decompression, using the zlib library. The zlib library has its own home page at &lt;a href=&quot;https://www.zlib.net&quot;&gt;https://www.zlib.net&lt;/a&gt;. There are known incompatibilities between the Python module and versions of the zlib library earlier than 1.1.3; 1.1.3 has a &lt;a href=&quot;https://zlib.net/zlib_faq.html#faq33&quot;&gt;security vulnerability&lt;/a&gt;, so we recommend using 1.1.4 or later.</source>
          <target state="translated">データ圧縮を必要とするアプリケーションの場合、このモジュールの関数は、zlibライブラリを使用して圧縮と解凍を可能にします。zlibライブラリには、&lt;a href=&quot;https://www.zlib.net&quot;&gt;https：//www.zlib.netに&lt;/a&gt;独自のホームページがあります。Pythonモジュールと1.1.3より前のバージョンのzlibライブラリの間には既知の非互換性があります。1.1.3には&lt;a href=&quot;https://zlib.net/zlib_faq.html#faq33&quot;&gt;セキュリティの脆弱性&lt;/a&gt;があるため、1.1.4以降の使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="ff1b3bfa6942db35ceecc9803ef62bbeadf15677" translate="yes" xml:space="preserve">
          <source>For aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances, the return value is computed as:</source>
          <target state="translated">認識される&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンスの場合、戻り値は次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="69e80030e91a06f7b29e8bec9734b8962acbb95f" translate="yes" xml:space="preserve">
          <source>For backward compatibility, a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; instance is also accessible as a tuple of at least 10 integers giving the most important (and portable) members of the &lt;code&gt;stat&lt;/code&gt; structure, in the order &lt;a href=&quot;#os.stat_result.st_mode&quot;&gt;&lt;code&gt;st_mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_ino&quot;&gt;&lt;code&gt;st_ino&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_dev&quot;&gt;&lt;code&gt;st_dev&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_nlink&quot;&gt;&lt;code&gt;st_nlink&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_uid&quot;&gt;&lt;code&gt;st_uid&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_gid&quot;&gt;&lt;code&gt;st_gid&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_size&quot;&gt;&lt;code&gt;st_size&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt;. More items may be added at the end by some implementations. For compatibility with older Python versions, accessing &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; as a tuple always returns integers.</source>
          <target state="translated">下位互換性のために、&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; にの&lt;/a&gt;インスタンスもの最も重要な（ポータブル）メンバー与え少なくとも10個の整数のタプルとしてアクセス可能である &lt;code&gt;stat&lt;/code&gt; 順序で、構造を&lt;a href=&quot;#os.stat_result.st_mode&quot;&gt; &lt;code&gt;st_mode&lt;/code&gt; の&lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_ino&quot;&gt; &lt;code&gt;st_ino&lt;/code&gt; の&lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_dev&quot;&gt; &lt;code&gt;st_dev&lt;/code&gt; フィールド&lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_nlink&quot;&gt; &lt;code&gt;st_nlink&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_uid&quot;&gt; &lt;code&gt;st_uid&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_gid&quot;&gt; &lt;code&gt;st_gid&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_size&quot;&gt; &lt;code&gt;st_size&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; を&lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt; &lt;code&gt;st_ctime&lt;/code&gt; &lt;/a&gt;。実装によっては、最後にさらに項目が追加される場合があります。古いバージョンのPythonとの互換性のため、タプルとして&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;にアクセスすると常に整数が返されます。</target>
        </trans-unit>
        <trans-unit id="94838bf3b4aae58e91441f1c91f1f6be8d90eaa0" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if a URL appears to point to a local file but the file can&amp;rsquo;t be opened, the URL is re-interpreted using the FTP protocol. This can sometimes cause confusing error messages.</source>
          <target state="translated">下位互換性のために、URLがローカルファイルを指しているように見えてもファイルを開くことができない場合、FTPプロトコルを使用してURLが再解釈されます。これにより、混乱を招くエラーメッセージが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="ca7f0d29acf08384be36faa207c5e9370c618e6b" translate="yes" xml:space="preserve">
          <source>For backward compatibility, the return value is also accessible as a tuple of 16 elements.</source>
          <target state="translated">後方互換性のために、戻り値は16個の要素のタプルとしてもアクセス可能です。</target>
        </trans-unit>
        <trans-unit id="1a38050f0e441305ea9ba925711dc3533b5ef150" translate="yes" xml:space="preserve">
          <source>For backward-compatibility reasons, the numeric arguments &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt; are permitted. They are interpreted as &lt;code&gt;'stdname'&lt;/code&gt;, &lt;code&gt;'calls'&lt;/code&gt;, &lt;code&gt;'time'&lt;/code&gt;, and &lt;code&gt;'cumulative'&lt;/code&gt; respectively. If this old style format (numeric) is used, only one sort key (the numeric key) will be used, and additional arguments will be silently ignored.</source>
          <target state="translated">下位互換性の理由から、数値引数 &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; 、及び &lt;code&gt;2&lt;/code&gt; を許可されています。これらはそれぞれ &lt;code&gt;'stdname'&lt;/code&gt; 、 &lt;code&gt;'calls'&lt;/code&gt; 、 &lt;code&gt;'time'&lt;/code&gt; 、および &lt;code&gt;'cumulative'&lt;/code&gt; として解釈されます。この古いスタイルのフォーマット（数値）が使用されている場合、1つのソートキー（数値キー）のみが使用され、追加の引数は暗黙的に無視されます。</target>
        </trans-unit>
        <trans-unit id="9e0c7787dd6bfccda7252bf5bc8abe1b1d20c558" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, this object also behaves like a five-tuple containing &lt;code&gt;user&lt;/code&gt;, &lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;children_user&lt;/code&gt;, &lt;code&gt;children_system&lt;/code&gt;, and &lt;code&gt;elapsed&lt;/code&gt; in that order.</source>
          <target state="translated">下位互換性のために、このオブジェクトは、 &lt;code&gt;user&lt;/code&gt; 、&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;system&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;children_user&lt;/code&gt; 、 &lt;code&gt;children_system&lt;/code&gt; 、および &lt;code&gt;elapsed&lt;/code&gt; がこの順序で含まれる5つのタプルのようにも動作します。</target>
        </trans-unit>
        <trans-unit id="e6d662f7f0e619f7fd899a33a726a33b3d3aa333" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, this object is also iterable, behaving like a five-tuple containing &lt;code&gt;sysname&lt;/code&gt;, &lt;code&gt;nodename&lt;/code&gt;, &lt;code&gt;release&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;machine&lt;/code&gt; in that order.</source>
          <target state="translated">下位互換性のために、このオブジェクトも反復可能であり、 &lt;code&gt;sysname&lt;/code&gt; 、 &lt;code&gt;nodename&lt;/code&gt; 、 &lt;code&gt;release&lt;/code&gt; 、 &lt;code&gt;version&lt;/code&gt; 、 &lt;code&gt;machine&lt;/code&gt; の順に含まれる5つのタプルのように動作します。</target>
        </trans-unit>
        <trans-unit id="c076823bfb846c5c4fa30837cd3e7ee0ac98b02c" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Calls the &lt;a href=&quot;#bdb.Bdb.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">後方互換性のため。&lt;a href=&quot;#bdb.Bdb.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d4b7c1d4649a90bdbfd3d547d5116f1c45cbb20" translate="yes" xml:space="preserve">
          <source>For best effect, &lt;code&gt;punctuation_chars&lt;/code&gt; should be set in conjunction with &lt;code&gt;posix=True&lt;/code&gt;. (Note that &lt;code&gt;posix=False&lt;/code&gt; is the default for &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">最良の効果を得るには、 &lt;code&gt;punctuation_chars&lt;/code&gt; を &lt;code&gt;posix=True&lt;/code&gt; と組み合わせて設定する必要があります。（ &lt;code&gt;posix=False&lt;/code&gt; が&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;のデフォルトであることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="09a68d06773736017bdeccd7f26b271b58e54a95" translate="yes" xml:space="preserve">
          <source>For best match with hardware and network realities, the value of &lt;em&gt;bufsize&lt;/em&gt; should be a relatively small power of 2, for example, 4096.</source>
          <target state="translated">ハードウェアとネットワークの現実との最適な一致を得るには、&lt;em&gt;bufsize&lt;/em&gt;の値を2の比較的小さいべき乗、たとえば4096にする必要があります。</target>
        </trans-unit>
        <trans-unit id="06927785954ec46b795462603c00974a450a299b" translate="yes" xml:space="preserve">
          <source>For better multithreading performance, the Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt; is released for data larger than 2047 bytes at object creation or on update.</source>
          <target state="translated">マルチスレッドのパフォーマンスを向上させるため、オブジェクトの作成時または更新時に、2047バイトを超えるデータ用にPython &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt;がリリースされています。</target>
        </trans-unit>
        <trans-unit id="715381a934bb4c440a80dbbaad59b7e12bba24b1" translate="yes" xml:space="preserve">
          <source>For better multithreading performance, the Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt; is released for data larger than 2047 bytes at object creation or on update.</source>
          <target state="translated">マルチスレッドのパフォーマンスを向上させるために、オブジェクトの作成時または更新時に2047バイトを超えるデータ用に&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;PythonGIL&lt;/a&gt;がリリースされます。</target>
        </trans-unit>
        <trans-unit id="da8cc65e7c52fba0eeb0fc711cfc59557d96bb18" translate="yes" xml:space="preserve">
          <source>For binary mode, this function is equivalent to the &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;BZ2File(filename, mode, compresslevel=compresslevel)&lt;/code&gt;. In this case, the &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; arguments must not be provided.</source>
          <target state="translated">バイナリモードの場合、この関数は&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt;コンストラクターと同等です： &lt;code&gt;BZ2File(filename, mode, compresslevel=compresslevel)&lt;/code&gt; 。この場合、&lt;em&gt;エンコーディング&lt;/em&gt;、&lt;em&gt;エラー&lt;/em&gt;、および&lt;em&gt;改行&lt;/em&gt;引数を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="016717dd0da4a662468b6aa33cb19230e658d853" translate="yes" xml:space="preserve">
          <source>For binary mode, this function is equivalent to the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;GzipFile(filename, mode, compresslevel)&lt;/code&gt;. In this case, the &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; arguments must not be provided.</source>
          <target state="translated">バイナリモードの場合、この関数は&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;コンストラクタと同等です： &lt;code&gt;GzipFile(filename, mode, compresslevel)&lt;/code&gt; 。この場合、&lt;em&gt;エンコーディング&lt;/em&gt;、&lt;em&gt;エラー&lt;/em&gt;、および&lt;em&gt;改行&lt;/em&gt;引数を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="7ae5d93f3434b21f6c2561db832de52706b4ce5b" translate="yes" xml:space="preserve">
          <source>For binary mode, this function is equivalent to the &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;LZMAFile(filename, mode, ...)&lt;/code&gt;. In this case, the &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; arguments must not be provided.</source>
          <target state="translated">バイナリモードでは、この機能は同等です&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; の&lt;/a&gt;コンストラクタ： &lt;code&gt;LZMAFile(filename, mode, ...)&lt;/code&gt; 。この場合、&lt;em&gt;エンコーディング&lt;/em&gt;、&lt;em&gt;エラー&lt;/em&gt;、および&lt;em&gt;改行&lt;/em&gt;引数を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="7469b7ce9347b3ee71427a4976aa9d8f229bd748" translate="yes" xml:space="preserve">
          <source>For both Unix and Windows, an object can appear in &lt;em&gt;object_list&lt;/em&gt; if it is</source>
          <target state="translated">UnixとWindowsの両方で、オブジェクトが&lt;em&gt;object_listに&lt;/em&gt;表示さ&lt;em&gt;れる&lt;/em&gt;場合は、</target>
        </trans-unit>
        <trans-unit id="d29f254f6cf3b4106b5e9b4c01fbfa8691dcc3d4" translate="yes" xml:space="preserve">
          <source>For both the Unix and Windows versions of the constructor, &lt;em&gt;access&lt;/em&gt; may be specified as an optional keyword parameter. &lt;em&gt;access&lt;/em&gt; accepts one of four values: &lt;code&gt;ACCESS_READ&lt;/code&gt;, &lt;code&gt;ACCESS_WRITE&lt;/code&gt;, or &lt;code&gt;ACCESS_COPY&lt;/code&gt; to specify read-only, write-through or copy-on-write memory respectively, or &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; to defer to &lt;em&gt;prot&lt;/em&gt;. &lt;em&gt;access&lt;/em&gt; can be used on both Unix and Windows. If &lt;em&gt;access&lt;/em&gt; is not specified, Windows mmap returns a write-through mapping. The initial memory values for all three access types are taken from the specified file. Assignment to an &lt;code&gt;ACCESS_READ&lt;/code&gt; memory map raises a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception. Assignment to an &lt;code&gt;ACCESS_WRITE&lt;/code&gt; memory map affects both memory and the underlying file. Assignment to an &lt;code&gt;ACCESS_COPY&lt;/code&gt; memory map affects memory but does not update the underlying file.</source>
          <target state="translated">コンストラクタのUnixバージョンとWindowsバージョンの両方で、オプションのキーワードパラメータとして&lt;em&gt;アクセス&lt;/em&gt;を指定できます。&lt;em&gt;アクセス&lt;/em&gt;：4つの値の1つを受け入れ &lt;code&gt;ACCESS_READ&lt;/code&gt; 、 &lt;code&gt;ACCESS_WRITE&lt;/code&gt; 、または &lt;code&gt;ACCESS_COPY&lt;/code&gt; を読み取り専用に、それぞれまたはコピー・オン・ライトメモリによる書き込み、または指定する &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; に延期する&lt;em&gt;のprotを&lt;/em&gt;。&lt;em&gt;アクセス&lt;/em&gt;は、UnixとWindowsの両方で使用できます。&lt;em&gt;アクセス&lt;/em&gt;が指定されていない場合、Windows mmapはライトスルーマッピングを返します。 3つのアクセスタイプすべての初期メモリ値は、指定されたファイルから取得されます。 &lt;code&gt;ACCESS_READ&lt;/code&gt; メモリマップへの割り当てにより&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生する&lt;/a&gt;例外。 &lt;code&gt;ACCESS_WRITE&lt;/code&gt; メモリマップへの割り当ては、メモリと基になるファイルの両方に影響します。 &lt;code&gt;ACCESS_COPY&lt;/code&gt; メモリマップへの割り当てはメモリに影響しますが、基になるファイルは更新されません。</target>
        </trans-unit>
        <trans-unit id="9b791b625837852700bed40630b7e80160696da6" translate="yes" xml:space="preserve">
          <source>For both use cases, a typical superclass call looks like this:</source>
          <target state="translated">どちらのユースケースでも、典型的なスーパークラスの呼び出しは次のようになります。</target>
        </trans-unit>
        <trans-unit id="1d3e6b2d087066e748150284d960b4cd1ce9e119" translate="yes" xml:space="preserve">
          <source>For cases where you want passive introspection, like documentation tools, this can be inconvenient. &lt;a href=&quot;#inspect.getattr_static&quot;&gt;&lt;code&gt;getattr_static()&lt;/code&gt;&lt;/a&gt; has the same signature as &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; but avoids executing code when it fetches attributes.</source>
          <target state="translated">ドキュメンテーションツールのようにパッシブイントロスペクションが必要な場合、これは不便です。&lt;a href=&quot;#inspect.getattr_static&quot;&gt; &lt;code&gt;getattr_static()&lt;/code&gt; &lt;/a&gt;と同じシグネチャを有している&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;それは属性をフェッチするときにコードを実行することが回避されます。</target>
        </trans-unit>
        <trans-unit id="8ddc27817b8adbae140b3bfe11bf584c974a746a" translate="yes" xml:space="preserve">
          <source>For client-side sockets, the context construction is lazy; if the underlying socket isn&amp;rsquo;t connected yet, the context construction will be performed after &lt;code&gt;connect()&lt;/code&gt; is called on the socket. For server-side sockets, if the socket has no remote peer, it is assumed to be a listening socket, and the server-side SSL wrapping is automatically performed on client connections accepted via the &lt;code&gt;accept()&lt;/code&gt; method. The method may raise &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クライアント側のソケットの場合、コンテキストの構築は遅延します。基礎となるソケットがまだ接続されていない場合は、ソケットで &lt;code&gt;connect()&lt;/code&gt; が呼び出された後にコンテキスト構築が実行されます。サーバー側のソケットの場合、ソケットにリモートピアがない場合、ソケットはリスニングソケットであると見なされ、サーバー側のSSLラッピングは、 &lt;code&gt;accept()&lt;/code&gt; メソッドを介して受け入れられたクライアント接続で自動的に実行されます。このメソッドは&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; を送出&lt;/a&gt;する場合があります。</target>
        </trans-unit>
        <trans-unit id="85865a7d79dbbf1d365d44b34b62ed727d6e7547" translate="yes" xml:space="preserve">
          <source>For code which doesn&amp;rsquo;t use type annotations, the appropriate type argument can be passed explicitly to the decorator itself:</source>
          <target state="translated">型注釈を使用しないコードの場合、適切な型引数をデコレーター自体に明示的に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6bfd91557db31a101da93b9f75a0634e810c53a1" translate="yes" xml:space="preserve">
          <source>For common and simple use cases, no other functionality is required. There are, however, some dataclass features that require additional per-field information. To satisfy this need for additional information, you can replace the default field value with a call to the provided &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; function. For example:</source>
          <target state="translated">一般的で単純な使用例の場合、他の機能は必要ありません。ただし、追加のフィールドごとの情報を必要とするいくつかのデータクラス機能があります。この追加情報の必要性を満たすために、デフォルトのフィールド値を、提供された&lt;a href=&quot;#dataclasses.field&quot;&gt; &lt;code&gt;field()&lt;/code&gt; &lt;/a&gt;関数の呼び出しに置き換えることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="87705f106118f19bf390f2a77a7cb271a9b8c917" translate="yes" xml:space="preserve">
          <source>For comparison, &lt;code&gt;split('\n')&lt;/code&gt; gives:</source>
          <target state="translated">比較のために、 &lt;code&gt;split('\n')&lt;/code&gt; は以下を与えます：</target>
        </trans-unit>
        <trans-unit id="f0cff29498c4ef122a86c33568b064156568a59a" translate="yes" xml:space="preserve">
          <source>For compatibility with this older module, the function &lt;code&gt;Catalog()&lt;/code&gt; is an alias for the &lt;a href=&quot;#gettext.translation&quot;&gt;&lt;code&gt;translation()&lt;/code&gt;&lt;/a&gt; function described above.</source>
          <target state="translated">この古いモジュールとの互換性のために、 &lt;code&gt;Catalog()&lt;/code&gt; &lt;a href=&quot;#gettext.translation&quot;&gt; &lt;code&gt;translation()&lt;/code&gt; &lt;/a&gt;関数は、上記のtranslation（）関数のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="8dd5c7731e7c03d28553d024eb738419b5d7feec" translate="yes" xml:space="preserve">
          <source>For compound field names, these functions are only called for the first component of the field name; subsequent components are handled through normal attribute and indexing operations.</source>
          <target state="translated">複合フィールド名の場合、これらの関数はフィールド名の最初のコンポーネントに対してのみ呼び出され、それ以降のコンポーネントは通常の属性操作とインデックス操作によって処理されます。</target>
        </trans-unit>
        <trans-unit id="1c274cab06d9630687c3dabb1a223e791637c64c" translate="yes" xml:space="preserve">
          <source>For convenience, if the &lt;em&gt;value&lt;/em&gt; passed to &lt;a href=&quot;#email.utils.collapse_rfc2231_value&quot;&gt;&lt;code&gt;collapse_rfc2231_value()&lt;/code&gt;&lt;/a&gt; is not a tuple, it should be a string and it is returned unquoted.</source>
          <target state="translated">便宜上、&lt;a href=&quot;#email.utils.collapse_rfc2231_value&quot;&gt; &lt;code&gt;collapse_rfc2231_value()&lt;/code&gt; に&lt;/a&gt;渡された&lt;em&gt;値&lt;/em&gt;がタプルではない場合、それは文字列である必要があり、引用符なしで返されます。</target>
        </trans-unit>
        <trans-unit id="de926a3a0ae98ea1fe4e0f3b5685a3731bae1603" translate="yes" xml:space="preserve">
          <source>For convenience, you want the &lt;code&gt;_()&lt;/code&gt; function to be installed in Python&amp;rsquo;s builtins namespace, so it is easily accessible in all modules of your application.</source>
          <target state="translated">便宜上、 &lt;code&gt;_()&lt;/code&gt; 関数をPythonの組み込みネームスペースにインストールして、アプリケーションのすべてのモジュールで簡単にアクセスできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="210ca2c9386211164bf808be67ab50aac45b5cfd" translate="yes" xml:space="preserve">
          <source>For deep customizations of import, you typically want to implement an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;. This means managing both the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; side of things. For finders there are two flavours to choose from depending on your needs: a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. The former is what you would put on &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; while the latter is what you create using a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-hook&quot;&gt;path entry hook&lt;/a&gt; on &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; which works with &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; entries to potentially create a finder. This example will show you how to register your own importers so that import will use them (for creating an importer for yourself, read the documentation for the appropriate classes defined within this package):</source>
          <target state="translated">インポートを詳細にカスタマイズするには、通常、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;を実装します。これは、物事の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;側と&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;側の両方を管理することを意味します。ファインダーには、ニーズに応じて2つのフレーバーから選択できます。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダー&lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;パスエントリーファインダー&lt;/a&gt;です。前者は&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; に&lt;/a&gt;配置するものであり、後者は&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-hook&quot;&gt;パスエントリフック&lt;/a&gt;を使用して作成するもので、sys.pathで機能し&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;ファインダーを作成する可能性のあるエントリ。この例では、インポートがそれらを使用するように独自のインポーターを登録する方法を示します（自分用のインポーターを作成するには、このパッケージ内で定義されている適切なクラスのドキュメントを読んでください）。</target>
        </trans-unit>
        <trans-unit id="f9ade3602a0b0df7b0e7be7869bc08b3bdafc500" translate="yes" xml:space="preserve">
          <source>For deep customizations of import, you typically want to implement an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;. This means managing both the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; side of things. For finders there are two flavours to choose from depending on your needs: a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. The former is what you would put on &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; while the latter is what you create using a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-hook&quot;&gt;path entry hook&lt;/a&gt; on &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; which works with &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; entries to potentially create a finder. This example will show you how to register your own importers so that import will use them (for creating an importer for yourself, read the documentation for the appropriate classes defined within this package):</source>
          <target state="translated">インポートを大幅にカスタマイズするには、通常、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;を実装する必要があります。これは、物事の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;側と&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;側の両方を管理することを意味します。ファインダーの場合、ニーズに応じて、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダー&lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;パスエントリファインダーの&lt;/a&gt;2つのフレーバーから選択できます。前者は、あなたがに置くものです&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;後者は、使用して作成するものである一方、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-hook&quot;&gt;パスエントリフックを&lt;/a&gt;上&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; &lt;/a&gt;と連携&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;ファインダーを作成する可能性のあるエントリ。この例では、インポートで使用されるように独自のインポーターを登録する方法を示します（自分でインポーターを作成するには、このパッケージ内で定義されている適切なクラスのドキュメントを参照してください）。</target>
        </trans-unit>
        <trans-unit id="0c7f0d88ba41bf3eb9635ed30d7c7babf6caf663" translate="yes" xml:space="preserve">
          <source>For each argument, if the value is not found, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">各引数について、値が見つからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ac0a10e6ce55d9d18d13c0fc23d96ba811fa6c93" translate="yes" xml:space="preserve">
          <source>For each character, there are two normal forms: normal form C and normal form D. Normal form D (NFD) is also known as canonical decomposition, and translates each character into its decomposed form. Normal form C (NFC) first applies a canonical decomposition, then composes pre-combined characters again.</source>
          <target state="translated">各文字については、正規形Cと正規形Dの2つの正規形があり、正規形D(NFD)は、正準分解とも呼ばれ、各文字をその分解された形に変換する。通常形態C(NFC)は、最初に正準分解を適用し、その後、再び結合前の文字を合成する。</target>
        </trans-unit>
        <trans-unit id="5fd45e0da93f8a3a502662f383317adb8f1a3088" translate="yes" xml:space="preserve">
          <source>For each item in the keyword argument dictionary &lt;em&gt;_params&lt;/em&gt;, the key is taken as the parameter name, with underscores converted to dashes (since dashes are illegal in Python identifiers). Normally, the parameter will be added as &lt;code&gt;key=&quot;value&quot;&lt;/code&gt; unless the value is &lt;code&gt;None&lt;/code&gt;, in which case only the key will be added.</source>
          <target state="translated">キーワード引数ディクショナリ&lt;em&gt;_paramsの&lt;/em&gt;各アイテムについて、キーはパラメーター名として使用され、アンダースコアはダッシュに変換されます（ダッシュはPythonの識別子では無効であるため）。値が &lt;code&gt;None&lt;/code&gt; でない限り、通常、パラメーターは &lt;code&gt;key=&quot;value&quot;&lt;/code&gt; として追加されます。この場合、キーのみが追加されます。</target>
        </trans-unit>
        <trans-unit id="d736bcd37b51fd426b74cb1fc89bc382bb0f2684" translate="yes" xml:space="preserve">
          <source>For each item in the keyword argument dictionary &lt;em&gt;_params&lt;/em&gt;, the key is taken as the parameter name, with underscores converted to dashes (since dashes are illegal in Python identifiers). Normally, the parameter will be added as &lt;code&gt;key=&quot;value&quot;&lt;/code&gt; unless the value is &lt;code&gt;None&lt;/code&gt;, in which case only the key will be added. If the value contains non-ASCII characters, it can be specified as a three tuple in the format &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt;, where &lt;code&gt;CHARSET&lt;/code&gt; is a string naming the charset to be used to encode the value, &lt;code&gt;LANGUAGE&lt;/code&gt; can usually be set to &lt;code&gt;None&lt;/code&gt; or the empty string (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; for other possibilities), and &lt;code&gt;VALUE&lt;/code&gt; is the string value containing non-ASCII code points. If a three tuple is not passed and the value contains non-ASCII characters, it is automatically encoded in &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; format using a &lt;code&gt;CHARSET&lt;/code&gt; of &lt;code&gt;utf-8&lt;/code&gt; and a &lt;code&gt;LANGUAGE&lt;/code&gt; of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">キーワード引数ディクショナリ&lt;em&gt;_paramsの&lt;/em&gt;各アイテムでは、キーがパラメーター名として使用され、アンダースコアがダッシュに変換されます（ダッシュはPythonの識別子では無効であるため）。通常、値が &lt;code&gt;None&lt;/code&gt; でない限り、パラメーターは &lt;code&gt;key=&quot;value&quot;&lt;/code&gt; として追加されます。この場合、キーのみが追加されます。値は非ASCII文字が含まれている場合、それは形式三組として指定することができる &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt; 、 &lt;code&gt;CHARSET&lt;/code&gt; 値をエンコードするために使用される文字セットを命名する文字列であり、 &lt;code&gt;LANGUAGE&lt;/code&gt; は通常に設定することができます &lt;code&gt;None&lt;/code&gt; または空の文字列（他の可能性については&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;を参照）、および &lt;code&gt;VALUE&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;非ASCIIコードポイントを含む文字列値です。3組が渡され、値が非ASCII文字が含まれていない場合は、自動的にエンコードされている&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;使ってフォーマット &lt;code&gt;CHARSET&lt;/code&gt; の &lt;code&gt;utf-8&lt;/code&gt; と &lt;code&gt;LANGUAGE&lt;/code&gt; の &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="056b6b17fe21a908443c2aef27973cb1a8a225e3" translate="yes" xml:space="preserve">
          <source>For each of the two dimensions, the environment variable, &lt;code&gt;COLUMNS&lt;/code&gt; and &lt;code&gt;LINES&lt;/code&gt; respectively, is checked. If the variable is defined and the value is a positive integer, it is used.</source>
          <target state="translated">2つの次元のそれぞれについて、環境変数 &lt;code&gt;COLUMNS&lt;/code&gt; および &lt;code&gt;LINES&lt;/code&gt; がそれぞれチェックされます。変数が定義されていて、値が正の整数の場合、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="322ab30d52718f1547b8e17f1897a238688c4ba6" translate="yes" xml:space="preserve">
          <source>For each signal there is a flag and a trap enabler. When a signal is encountered, its flag is set to one, then, if the trap enabler is set to one, an exception is raised. Flags are sticky, so the user needs to reset them before monitoring a calculation.</source>
          <target state="translated">各シグナルにはフラグとトラップ・イネーブラがあります。シグナルに遭遇した場合、フラグが1に設定され、トラップ・イネーブラが1に設定されている場合は例外が発生します。フラグは粘着性があるので、ユーザーは計算を監視する前にリセットする必要があります。</target>
        </trans-unit>
        <trans-unit id="06f9e39145b4348109479e7f9f896d505ac8e519" translate="yes" xml:space="preserve">
          <source>For encoding, &lt;em&gt;error_handler&lt;/em&gt; will be called with a &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt;&lt;code&gt;UnicodeEncodeError&lt;/code&gt;&lt;/a&gt; instance, which contains information about the location of the error. The error handler must either raise this or a different exception, or return a tuple with a replacement for the unencodable part of the input and a position where encoding should continue. The replacement may be either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. If the replacement is bytes, the encoder will simply copy them into the output buffer. If the replacement is a string, the encoder will encode the replacement. Encoding continues on original input at the specified position. Negative position values will be treated as being relative to the end of the input string. If the resulting position is out of bound an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">エンコーディングの場合、&lt;em&gt;error_handler&lt;/em&gt;は、エラーの場所に関する情報を含む&lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt; &lt;code&gt;UnicodeEncodeError&lt;/code&gt; &lt;/a&gt;インスタンスで呼び出されます。エラーハンドラーは、この例外または別の例外を発生させるか、入力のエンコード不可の部分を置き換えたタプルと、エンコードを続行する位置を返す必要があります。置換は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; の&lt;/a&gt;いずれかです。置換がバイトの場合、エンコーダーはそれらを単に出力バッファーにコピーします。置換が文字列の場合、エンコーダは置換をエンコードします。エンコードは、元の入力の指定された位置で続行されます。負の位置の値は、入力文字列の末尾を基準にして扱われます。結果の位置が範囲外の場合、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="21600918467446226ee8a32f480178bbdbb3fcd4" translate="yes" xml:space="preserve">
          <source>For ensuring that the mock objects in your tests have the same api as the objects they are replacing, you can use &lt;a href=&quot;#auto-speccing&quot;&gt;auto-speccing&lt;/a&gt;. Auto-speccing can be done through the &lt;em&gt;autospec&lt;/em&gt; argument to patch, or the &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; function. Auto-speccing creates mock objects that have the same attributes and methods as the objects they are replacing, and any functions and methods (including constructors) have the same call signature as the real object.</source>
          <target state="translated">テスト内のモックオブジェクトが、置き換えるオブジェクトと同じAPIを持っていることを確認するには、&lt;a href=&quot;#auto-speccing&quot;&gt;自動指定&lt;/a&gt;を使用できます。自動指定は、patchへの&lt;em&gt;autospec&lt;/em&gt;引数、または&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;関数を介して実行できます。自動指定では、置換するオブジェクトと同じ属性とメソッドを持つモックオブジェクトが作成され、関数とメソッド（コンストラクターを含む）は、実際のオブジェクトと同じ呼び出しシグネチャを持ちます。</target>
        </trans-unit>
        <trans-unit id="15fc0d7566d96f6001912c52d120cbb3c0026454" translate="yes" xml:space="preserve">
          <source>For equality comparison (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;), both the IP address and network must be the same for the objects to be equal. An interface will not compare equal to any address or network object.</source>
          <target state="translated">等価比較（ &lt;code&gt;==&lt;/code&gt; と &lt;code&gt;!=&lt;/code&gt; ）では、オブジェクトが等しいためには、IPアドレスとネットワークの両方が同じである必要があります。インターフェイスは、どのアドレスまたはネットワークオブジェクトとも同等ではありません。</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="9f92850155d4633eac2a36ebb33b8f03c14d5123" translate="yes" xml:space="preserve">
          <source>For example usage, see the implementation of the &lt;a href=&quot;test#module-test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; function invocation in the &lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">使用例については、&lt;a href=&quot;#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;test#module-test&quot;&gt; &lt;code&gt;test()&lt;/code&gt; &lt;/a&gt;関数呼び出しの実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="6cd51af621b973c244416c286e704a84b26141f1" translate="yes" xml:space="preserve">
          <source>For example, 2004 begins on a Thursday, so the first week of ISO year 2004 begins on Monday, 29 Dec 2003 and ends on Sunday, 4 Jan 2004:</source>
          <target state="translated">例えば、2004年は木曜日から始まるので、ISO2004年の第1週は2003年12月29日(月)から始まり、2004年1月4日(日)までとなります。</target>
        </trans-unit>
        <trans-unit id="399622d81e44a5a0690710d1c52927972596121e" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;-k foo&lt;/code&gt; matches &lt;code&gt;foo_tests.SomeTest.test_something&lt;/code&gt;, &lt;code&gt;bar_tests.SomeTest.test_foo&lt;/code&gt;, but not &lt;code&gt;bar_tests.FooTest.test_something&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;-k foo&lt;/code&gt; は &lt;code&gt;foo_tests.SomeTest.test_something&lt;/code&gt; 、 &lt;code&gt;bar_tests.SomeTest.test_foo&lt;/code&gt; と一致しますが、bar_tests.FooTest.test_somethingとは一致しませ &lt;code&gt;bar_tests.FooTest.test_something&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d14f109212981d9e9018a7e899a21c38af527e7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;cmpfiles('a', 'b', ['c', 'd/e'])&lt;/code&gt; will compare &lt;code&gt;a/c&lt;/code&gt; with &lt;code&gt;b/c&lt;/code&gt; and &lt;code&gt;a/d/e&lt;/code&gt; with &lt;code&gt;b/d/e&lt;/code&gt;. &lt;code&gt;'c'&lt;/code&gt; and &lt;code&gt;'d/e'&lt;/code&gt; will each be in one of the three returned lists.</source>
          <target state="translated">たとえば、 &lt;code&gt;cmpfiles('a', 'b', ['c', 'd/e'])&lt;/code&gt; は、 &lt;code&gt;a/c&lt;/code&gt; を &lt;code&gt;b/c&lt;/code&gt; と比較し、a &lt;code&gt;a/d/e&lt;/code&gt; を &lt;code&gt;b/d/e&lt;/code&gt; と比較します。 &lt;code&gt;'c'&lt;/code&gt; と &lt;code&gt;'d/e'&lt;/code&gt; は、返された3つのリストのいずれかにあります。</target>
        </trans-unit>
        <trans-unit id="a95470c1be0b3663fdee2e3d3b9777cc1e0d9fa2" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;signal.pthread_sigmask(signal.SIG_BLOCK, [])&lt;/code&gt; reads the signal mask of the calling thread.</source>
          <target state="translated">たとえば、 &lt;code&gt;signal.pthread_sigmask(signal.SIG_BLOCK, [])&lt;/code&gt; は、呼び出しスレッドのシグナルマスクを読み取ります。</target>
        </trans-unit>
        <trans-unit id="f0f5080e6265a4c4411bd9b24c300325fec45e78" translate="yes" xml:space="preserve">
          <source>For example, CD quality audio has a sample size of two bytes (16 bits), uses two channels (stereo) and has a frame rate of 44,100 frames/second. This gives a frame size of 4 bytes (2*2), and a second&amp;rsquo;s worth occupies 2*2*44100 bytes (176,400 bytes).</source>
          <target state="translated">たとえば、CD品質のオーディオのサンプルサイズは2バイト（16ビット）、2つのチャネル（ステレオ）を使用し、フレームレートは44,100フレーム/秒です。これにより、フレームサイズは4バイト（2 * 2）になり、1秒のサイズは2 * 2 * 44100バイト（176,400バイト）になります。</target>
        </trans-unit>
        <trans-unit id="5704afb176cb5333d5bd0ec1e89e920326a56e42" translate="yes" xml:space="preserve">
          <source>For example, a group of files can be opened as an &amp;ldquo;all or nothing&amp;rdquo; operation as follows:</source>
          <target state="translated">たとえば、ファイルのグループは、次のように「オールオアナッシング」操作として開くことができます。</target>
        </trans-unit>
        <trans-unit id="68e2f1b9586e1e059827e751c317d7ee5e2879b3" translate="yes" xml:space="preserve">
          <source>For example, a set of files may easily be handled in a single with statement as follows:</source>
          <target state="translated">例えば、ファイルのセットは、以下のように単一のwith文で簡単に扱うことができます。</target>
        </trans-unit>
        <trans-unit id="70d481802ecd969c892c69fa7f05b8bba9e4b621" translate="yes" xml:space="preserve">
          <source>For example, a subclass of &lt;code&gt;DictConfigurator&lt;/code&gt; could call &lt;code&gt;DictConfigurator.__init__()&lt;/code&gt; in its own &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, then set up custom prefixes which would be usable in the subsequent &lt;code&gt;configure()&lt;/code&gt; call. &lt;code&gt;dictConfigClass&lt;/code&gt; would be bound to this new subclass, and then &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; could be called exactly as in the default, uncustomized state.</source>
          <target state="translated">例えば、サブクラスの &lt;code&gt;DictConfigurator&lt;/code&gt; を呼び出すことができます &lt;code&gt;DictConfigurator.__init__()&lt;/code&gt; 、自身の中に&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;、その後のに使えるだろうカスタムプレフィックス設定 &lt;code&gt;configure()&lt;/code&gt; の呼び出しを。 &lt;code&gt;dictConfigClass&lt;/code&gt; はこの新しいサブクラスにバインドされ、次に&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;がデフォルトのカスタマイズされていない状態とまったく同じように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ec08404cba481f07cdcda04936e022a2f9bdc289" translate="yes" xml:space="preserve">
          <source>For example, a subclass of &lt;code&gt;DictConfigurator&lt;/code&gt; could call &lt;code&gt;DictConfigurator.__init__()&lt;/code&gt; in its own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, then set up custom prefixes which would be usable in the subsequent &lt;code&gt;configure()&lt;/code&gt; call. &lt;code&gt;dictConfigClass&lt;/code&gt; would be bound to this new subclass, and then &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; could be called exactly as in the default, uncustomized state.</source>
          <target state="translated">例えば、サブクラスの &lt;code&gt;DictConfigurator&lt;/code&gt; を呼び出すことができます &lt;code&gt;DictConfigurator.__init__()&lt;/code&gt; 、自身の中に&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;、その後のに使えるだろうカスタムプレフィックス設定 &lt;code&gt;configure()&lt;/code&gt; の呼び出しを。 &lt;code&gt;dictConfigClass&lt;/code&gt; はこの新しいサブクラスにバインドされ、次に&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; を&lt;/a&gt;デフォルトのカスタマイズされていない状態とまったく同じように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1e80a99504abd47149c0fce72f82153cd68e1294" translate="yes" xml:space="preserve">
          <source>For example, an open source conference has 750 attendees and two rooms with a 500 person capacity. There is a talk about Python and another about Ruby. In previous conferences, 65% of the attendees preferred to listen to Python talks. Assuming the population preferences haven&amp;rsquo;t changed, what is the probability that the Python room will stay within its capacity limits?</source>
          <target state="translated">たとえば、オープンソース会議には750人の参加者と500人収容可能な2つの部屋があります。PythonとRubyについての話があります。以前の会議では、参加者の65％がPythonの講演を聞くことを好みました。人口の好みが変わっていないと仮定すると、Pythonルームが容量制限内にとどまる確率はどれくらいですか？</target>
        </trans-unit>
        <trans-unit id="f511873d3631a9f41e0087f05beaf56c5c7a1720" translate="yes" xml:space="preserve">
          <source>For example, consider a directory containing the following files: &lt;code&gt;1.gif&lt;/code&gt;, &lt;code&gt;2.txt&lt;/code&gt;, &lt;code&gt;card.gif&lt;/code&gt; and a subdirectory &lt;code&gt;sub&lt;/code&gt; which contains only the file &lt;code&gt;3.txt&lt;/code&gt;. &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob()&lt;/code&gt;&lt;/a&gt; will produce the following results. Notice how any leading components of the path are preserved.</source>
          <target state="translated">たとえば、 &lt;code&gt;1.gif&lt;/code&gt; 、 &lt;code&gt;2.txt&lt;/code&gt; 、 &lt;code&gt;card.gif&lt;/code&gt; 、およびファイル &lt;code&gt;3.txt&lt;/code&gt; のみを含むサブディレクトリ &lt;code&gt;sub&lt;/code&gt; を含むディレクトリを考えます。&lt;a href=&quot;#module-glob&quot;&gt; &lt;code&gt;glob()&lt;/code&gt; &lt;/a&gt;は次の結果を生成します。パスの先頭のコンポーネントがどのように保持されるかに注意してください。</target>
        </trans-unit>
        <trans-unit id="a8116b8e84beaa829f95a74354e47e686f4f65c2" translate="yes" xml:space="preserve">
          <source>For example, given &lt;a href=&quot;https://blog.prepscholar.com/sat-standard-deviation&quot;&gt;historical data for SAT exams&lt;/a&gt; showing that scores are normally distributed with a mean of 1060 and a standard deviation of 192, determine the percentage of students with test scores between 1100 and 1200, after rounding to the nearest whole number:</source>
          <target state="translated">例えば、与えられた&lt;a href=&quot;https://blog.prepscholar.com/sat-standard-deviation&quot;&gt;SAT試験の履歴データ&lt;/a&gt;スコアが正常1060の平均と192の標準偏差で分布していることを示し、1100,1200の間の試験スコアを持つ学生の割合を決定し、最も近い整数に丸めた後：</target>
        </trans-unit>
        <trans-unit id="b8574bc2ba0973b99cc5a72da8e088e6b7231abf" translate="yes" xml:space="preserve">
          <source>For example, given &lt;a href=&quot;https://nces.ed.gov/programs/digest/d17/tables/dt17_226.40.asp&quot;&gt;historical data for SAT exams&lt;/a&gt; showing that scores are normally distributed with a mean of 1060 and a standard deviation of 195, determine the percentage of students with test scores between 1100 and 1200, after rounding to the nearest whole number:</source>
          <target state="translated">たとえば、&lt;a href=&quot;https://nces.ed.gov/programs/digest/d17/tables/dt17_226.40.asp&quot;&gt;SAT試験の履歴データが&lt;/a&gt;、スコアが平均1060、標準偏差195で正規分布していることを示している場合、最も近い整数に丸めた後、テストスコアが1100〜1200の学生の割合を決定します。</target>
        </trans-unit>
        <trans-unit id="f059697aa8708c124c5ca5ed69598445d650d373" translate="yes" xml:space="preserve">
          <source>For example, here is how you would use the &lt;a href=&quot;smtplib#smtplib.SMTP&quot;&gt;&lt;code&gt;smtplib.SMTP&lt;/code&gt;&lt;/a&gt; class to create a trusted, secure connection to a SMTP server:</source>
          <target state="translated">たとえば、&lt;a href=&quot;smtplib#smtplib.SMTP&quot;&gt; &lt;code&gt;smtplib.SMTP&lt;/code&gt; &lt;/a&gt;クラスを使用して、SMTPサーバーへの信頼できる安全な接続を作成する方法を次に示します。</target>
        </trans-unit>
        <trans-unit id="4cd64048d86f14def679c676cd5c8b195e60a3d7" translate="yes" xml:space="preserve">
          <source>For example, if &lt;a href=&quot;stdtypes#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt; of &lt;em&gt;object-or-type&lt;/em&gt; is &lt;code&gt;D -&amp;gt; B -&amp;gt; C -&amp;gt; A -&amp;gt; object&lt;/code&gt; and the value of &lt;em&gt;type&lt;/em&gt; is &lt;code&gt;B&lt;/code&gt;, then &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; searches &lt;code&gt;C -&amp;gt; A -&amp;gt; object&lt;/code&gt;.</source>
          <target state="translated">たとえば、&lt;em&gt;object-or-typeの&lt;/em&gt;&lt;a href=&quot;stdtypes#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;D -&amp;gt; B -&amp;gt; C -&amp;gt; A -&amp;gt; object&lt;/code&gt; あり、&lt;em&gt;type&lt;/em&gt;の値が &lt;code&gt;B&lt;/code&gt; である場合、&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;C -&amp;gt; A -&amp;gt; object&lt;/code&gt; 検索します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc7ebb76fef1bf5301bb1689de9385336d50d062" translate="yes" xml:space="preserve">
          <source>For example, if &lt;em&gt;namespace_separator&lt;/em&gt; is set to a space character (&lt;code&gt;' '&lt;/code&gt;) and the following document is parsed:</source>
          <target state="translated">たとえば、&lt;em&gt;namespace_separator&lt;/em&gt;が空白文字（ &lt;code&gt;' '&lt;/code&gt; ）に設定されており、次のドキュメントが解析される場合：</target>
        </trans-unit>
        <trans-unit id="61bccf6891322558e7f0a44662ff24780b7e5f8f" translate="yes" xml:space="preserve">
          <source>For example, if you have a module &lt;code&gt;SampleTests&lt;/code&gt; containing a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;-derived class &lt;code&gt;SampleTestCase&lt;/code&gt; with three test methods (&lt;code&gt;test_one()&lt;/code&gt;, &lt;code&gt;test_two()&lt;/code&gt;, and &lt;code&gt;test_three()&lt;/code&gt;), the specifier &lt;code&gt;'SampleTests.SampleTestCase'&lt;/code&gt; would cause this method to return a suite which will run all three test methods. Using the specifier &lt;code&gt;'SampleTests.SampleTestCase.test_two'&lt;/code&gt; would cause it to return a test suite which will run only the &lt;code&gt;test_two()&lt;/code&gt; test method. The specifier can refer to modules and packages which have not been imported; they will be imported as a side-effect.</source>
          <target state="translated">たとえば、3つのテストメソッド（ &lt;code&gt;test_one()&lt;/code&gt; 、 &lt;code&gt;test_two()&lt;/code&gt; 、および &lt;code&gt;test_three()&lt;/code&gt; ）を持つ&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; &lt;code&gt;SampleTestCase&lt;/code&gt; クラスSampleTestCaseを含む &lt;code&gt;SampleTests&lt;/code&gt; がある場合、指定子 &lt;code&gt;'SampleTests.SampleTestCase'&lt;/code&gt; により、このメソッドはスイートを返します。 3つのテストメソッドすべてが実行されます。指定子 &lt;code&gt;'SampleTests.SampleTestCase.test_two'&lt;/code&gt; を使用すると、 &lt;code&gt;test_two()&lt;/code&gt; テストメソッドのみを実行するテストスイートが返されます。指定子は、インポートされていないモジュールとパッケージを参照できます。それらは副作用としてインポートされます。</target>
        </trans-unit>
        <trans-unit id="d96a9ad58f887553f3d83a9670b407c13d2d7fee" translate="yes" xml:space="preserve">
          <source>For example, if you have a number of large binary image objects, you may wish to associate a name with each. If you used a Python dictionary to map names to images, or images to names, the image objects would remain alive just because they appeared as values or keys in the dictionaries. The &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; classes supplied by the &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module are an alternative, using weak references to construct mappings that don&amp;rsquo;t keep objects alive solely because they appear in the mapping objects. If, for example, an image object is a value in a &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt;, then when the last remaining references to that image object are the weak references held by weak mappings, garbage collection can reclaim the object, and its corresponding entries in weak mappings are simply deleted.</source>
          <target state="translated">たとえば、大きなバイナリイメージオブジェクトが多数ある場合は、それぞれに名前を関連付けることができます。 Pythonディクショナリを使用して名前をイメージに、またはイメージを名前にマッピングした場合、イメージオブジェクトは、ディクショナリの値またはキーとして表示されただけで存続します。&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; &lt;/a&gt;から供給されるクラス&lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;モジュールは、生きているだけで、彼らがマッピングオブジェクトに表示されるので、オブジェクトを保持していないマッピングを構築するために弱参照を使用して、代替されています。たとえば、画像オブジェクトが&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; の&lt;/a&gt;値である場合次に、そのイメージオブジェクトへの最後の残りの参照が弱いマッピングによって保持されている弱い参照である場合、ガベージコレクションはオブジェクトを再利用でき、弱いマッピングの対応するエントリは単に削除されます。</target>
        </trans-unit>
        <trans-unit id="f8ddfc4247d70e8198d393848e8a880bb9e365df" translate="yes" xml:space="preserve">
          <source>For example, if you want to pass several items to the constructor, but only want one of them to be the value:</source>
          <target state="translated">たとえば、複数の項目をコンストラクタに渡したいが、そのうちの 1 つだけを値にしたい場合などです。</target>
        </trans-unit>
        <trans-unit id="f2d533d473fe1f989a25757c7b31086d2cd9c1ac" translate="yes" xml:space="preserve">
          <source>For example, it is sometimes useful to wrap functions or groups of statements with a logger that can track the time of entry and time of exit. Rather than writing both a function decorator and a context manager for the task, inheriting from &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; provides both capabilities in a single definition:</source>
          <target state="translated">たとえば、関数またはステートメントのグループを、開始時刻と終了時刻を追跡できるロガーでラップすると便利な場合があります。関数のデコレーターとタスクのコンテキストマネージャーの両方を記述するのではなく、&lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;ContextDecorator&lt;/code&gt; &lt;/a&gt;から継承すると、1つの定義で両方の機能が提供されます。</target>
        </trans-unit>
        <trans-unit id="1b1af41f1fcd195807fbd625eccde42ac4725e38" translate="yes" xml:space="preserve">
          <source>For example, one auditing event is named &lt;code&gt;os.chdir&lt;/code&gt;. This event has one argument called &lt;em&gt;path&lt;/em&gt; that will contain the requested new working directory.</source>
          <target state="translated">たとえば、1つの監査イベントの名前は &lt;code&gt;os.chdir&lt;/code&gt; です。このイベントには、要求された新しい作業ディレクトリを含む&lt;em&gt;パス&lt;/em&gt;と呼ばれる引数が1つあります。</target>
        </trans-unit>
        <trans-unit id="66a503d37db3c1946c897c9a00ca7f6c3c4c2802" translate="yes" xml:space="preserve">
          <source>For example, restart the Shell and enter &lt;code&gt;itertools.count(&lt;/code&gt;. A calltip appears because Idle imports itertools into the user process for its own use. (This could change.) Enter &lt;code&gt;turtle.write(&lt;/code&gt; and nothing appears. Idle does not import turtle. The menu or shortcut do nothing either. Enter &lt;code&gt;import turtle&lt;/code&gt; and then &lt;code&gt;turtle.write(&lt;/code&gt; will work.</source>
          <target state="translated">たとえば、シェルを再起動して &lt;code&gt;itertools.count(&lt;/code&gt; と入力します。Idleはitertoolsを独自に使用するためにユーザープロセスにインポートするため、コールチップが表示されます（これは変更される可能性があります。） &lt;code&gt;turtle.write(&lt;/code&gt; と入力すると何も表示されません。メニューまたはいずれか何もしないショートカット。入力 &lt;code&gt;import turtle&lt;/code&gt; してから &lt;code&gt;turtle.write(&lt;/code&gt; 動作します。</target>
        </trans-unit>
        <trans-unit id="f0f273665afab8497e03bdbc377000781dbcb9e3" translate="yes" xml:space="preserve">
          <source>For example, restart the Shell and enter &lt;code&gt;itertools.count(&lt;/code&gt;. A calltip appears because Idle imports itertools into the user process for its own use. (This could change.) Enter &lt;code&gt;turtle.write(&lt;/code&gt; and nothing appears. Idle does not itself import turtle. The menu entry and shortcut also do nothing. Enter &lt;code&gt;import turtle&lt;/code&gt;. Thereafter, &lt;code&gt;turtle.write(&lt;/code&gt; will display a calltip.</source>
          <target state="translated">たとえば、シェルを再起動して &lt;code&gt;itertools.count(&lt;/code&gt; と入力します。Idleがitertoolsをユーザープロセスにインポートして独自に使用するため、コールチップが表示されます（これは変更される可能性があります） &lt;code&gt;turtle.write(&lt;/code&gt; と入力すると、何も表示されません。Idle自体はturtleをインポートしません。 。メニュー項目とショートカットも。何もしない入力 &lt;code&gt;import turtle&lt;/code&gt; 。その後、 &lt;code&gt;turtle.write(&lt;/code&gt; calltipが表示されます。</target>
        </trans-unit>
        <trans-unit id="a2f3276b5fec797554722a3f1fcfe9772ea5689b" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt; are set to &lt;code&gt;/usr/local&lt;/code&gt;. The Python X.Y library is then installed in &lt;code&gt;/usr/local/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt;. Suppose this has a subdirectory &lt;code&gt;/usr/local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; with three subsubdirectories, &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;spam&lt;/code&gt;, and two path configuration files, &lt;code&gt;foo.pth&lt;/code&gt; and &lt;code&gt;bar.pth&lt;/code&gt;. Assume &lt;code&gt;foo.pth&lt;/code&gt; contains the following:</source>
          <target state="translated">たとえば、 &lt;code&gt;sys.prefix&lt;/code&gt; と &lt;code&gt;sys.exec_prefix&lt;/code&gt; が &lt;code&gt;/usr/local&lt;/code&gt; に設定されているとします。次に、Python XYライブラリが &lt;code&gt;/usr/local/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; インストールされます。これに &lt;code&gt;/usr/local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; というサブディレクトリがあり、 &lt;code&gt;foo&lt;/code&gt; 、 &lt;code&gt;bar&lt;/code&gt; 、 &lt;code&gt;spam&lt;/code&gt; の 3つのサブディレクトリと、 &lt;code&gt;foo.pth&lt;/code&gt; と &lt;code&gt;bar.pth&lt;/code&gt; の 2つのパス構成ファイルがあるとします。 &lt;code&gt;foo.pth&lt;/code&gt; に以下が含まれていると仮定します。</target>
        </trans-unit>
        <trans-unit id="160f54e15b188263020cd678b4cbe6d3dca29d19" translate="yes" xml:space="preserve">
          <source>For example, suppose a field will be initialized from a database, if a value is not provided when creating the class:</source>
          <target state="translated">例えば、クラス作成時に値を指定しなかった場合、データベースからフィールドが初期化されるとします。</target>
        </trans-unit>
        <trans-unit id="2a51dc8b68006b3628c501bc888381f13603f3d6" translate="yes" xml:space="preserve">
          <source>For example, the comment &lt;code&gt;&amp;lt;!-- comment --&amp;gt;&lt;/code&gt; will cause this method to be called with the argument &lt;code&gt;' comment '&lt;/code&gt;.</source>
          <target state="translated">たとえば、コメント &lt;code&gt;&amp;lt;!-- comment --&amp;gt;&lt;/code&gt; すると、このメソッドは引数 &lt;code&gt;' comment '&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="276a7355d8a4db76578148be24d829dc758d2a8b" translate="yes" xml:space="preserve">
          <source>For example, the configuration specified above with basic interpolation, would look like this with extended interpolation:</source>
          <target state="translated">例えば、上記で指定した基本補間を用いた構成は、拡張補間を用いると次のようになります。</target>
        </trans-unit>
        <trans-unit id="01938a5c60c9e8969e85c6eb8d12360855033dd2" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;em&gt;address&lt;/em&gt; specifications are equivalent: &lt;code&gt;192.168.1.0/24&lt;/code&gt;, &lt;code&gt;192.168.1.0/255.255.255.0&lt;/code&gt; and &lt;code&gt;192.168.1.0/0.0.0.255&lt;/code&gt;.</source>
          <target state="translated">たとえば、次の&lt;em&gt;アドレス&lt;/em&gt;指定は同等です： &lt;code&gt;192.168.1.0/24&lt;/code&gt; 、192.168.1.0 / &lt;code&gt;192.168.1.0/255.255.255.0&lt;/code&gt; および &lt;code&gt;192.168.1.0/0.0.0.255&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ffd76d4d6a2b6fecddb9a2b16cb189c0703deb8" translate="yes" xml:space="preserve">
          <source>For example, the following calls all create instances that connect to the server at the same host and port:</source>
          <target state="translated">例えば、以下の呼び出しは、すべて同じホストとポートでサーバに接続するインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="6485b8e2ead7470cce6b6fb9ebac6270d6c44f71" translate="yes" xml:space="preserve">
          <source>For example, the following code attempts to get the underlying socket object of the transport:</source>
          <target state="translated">例えば、以下のコードは、トランスポートの基礎となるソケットオブジェクトを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="926dd3d39286ea9ea8589b6ed6457274558a4a7f" translate="yes" xml:space="preserve">
          <source>For example, the following code sets the current decimal precision to 42 places, performs a calculation, and then automatically restores the previous context:</source>
          <target state="translated">例えば、以下のコードは、現在の10進数の精度を42桁に設定し、計算を行い、前のコンテキストを自動的に復元します。</target>
        </trans-unit>
        <trans-unit id="a2a9900581cad4336c270134295c4643fc13d30c" translate="yes" xml:space="preserve">
          <source>For example, the following test:</source>
          <target state="translated">例えば、次のようなテストです。</target>
        </trans-unit>
        <trans-unit id="f57d48010d7b1e551e32df4d311a231a6c7759da" translate="yes" xml:space="preserve">
          <source>For example, the output of &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; normally is sent to &lt;em&gt;sys.stdout&lt;/em&gt;. You can capture that output in a string by redirecting the output to an &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;io.StringIO&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">たとえば、&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; の&lt;/a&gt;出力は通常&lt;em&gt;sys.stdoutに&lt;/em&gt;送信されます。出力を&lt;a href=&quot;io#io.StringIO&quot;&gt; &lt;code&gt;io.StringIO&lt;/code&gt; &lt;/a&gt;オブジェクトにリダイレクトすることで、その出力を文字列にキャプチャできます。</target>
        </trans-unit>
        <trans-unit id="afad8674d1b9f21e340e687b0cc6f14661e4f3de" translate="yes" xml:space="preserve">
          <source>For example, the statement &lt;code&gt;import spam&lt;/code&gt; results in bytecode resembling the following code:</source>
          <target state="translated">たとえば、ステートメント &lt;code&gt;import spam&lt;/code&gt; の結果、バイトコードは次のコードのようになります。</target>
        </trans-unit>
        <trans-unit id="9d664aefd1120a74c2a2186e509cdcbbe1065acb" translate="yes" xml:space="preserve">
          <source>For example, this converts &lt;code&gt;Decimal('123E+1')&lt;/code&gt; to &lt;code&gt;Decimal('1.23E+3')&lt;/code&gt;.</source>
          <target state="translated">たとえば、これは &lt;code&gt;Decimal('123E+1')&lt;/code&gt; を &lt;code&gt;Decimal('1.23E+3')&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="03dfeb0eabcdcb6bb3dc21ab58b033a4c633e25f" translate="yes" xml:space="preserve">
          <source>For example, this feature is used by the &lt;a href=&quot;#unittest.TextTestRunner&quot;&gt;&lt;code&gt;TextTestRunner&lt;/code&gt;&lt;/a&gt; class to stop the test framework when the user signals an interrupt from the keyboard. Interactive tools which provide &lt;code&gt;TestRunner&lt;/code&gt; implementations can use this in a similar manner.</source>
          <target state="translated">たとえば、この機能は、ユーザーがキーボードから割り込みを&lt;a href=&quot;#unittest.TextTestRunner&quot;&gt; &lt;code&gt;TextTestRunner&lt;/code&gt; &lt;/a&gt;ときにテストフレームワークを停止するためにTextTestRunnerクラスによって使用されます。 &lt;code&gt;TestRunner&lt;/code&gt; 実装を提供する対話型ツールは、これを同様の方法で使用できます。</target>
        </trans-unit>
        <trans-unit id="444e569164443b54baf03a91490c78b883818c99" translate="yes" xml:space="preserve">
          <source>For example, this test passes:</source>
          <target state="translated">例えば、このテストは合格です。</target>
        </trans-unit>
        <trans-unit id="a8b68f8307ec7291b449dc75f9eea0977aaefaaa" translate="yes" xml:space="preserve">
          <source>For example, to change every default button to be a flat button with some padding and a different background color:</source>
          <target state="translated">たとえば、すべてのデフォルトボタンを、いくつかのパディングと異なる背景色を持つフラットボタンに変更するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="926a0648c656ffbd39e1b269bc825949b1d45f4f" translate="yes" xml:space="preserve">
          <source>For example, to create and populate an &lt;a href=&quot;#ast.UnaryOp&quot;&gt;&lt;code&gt;ast.UnaryOp&lt;/code&gt;&lt;/a&gt; node, you could use</source>
          <target state="translated">たとえば、&lt;a href=&quot;#ast.UnaryOp&quot;&gt; &lt;code&gt;ast.UnaryOp&lt;/code&gt; &lt;/a&gt;ノードを作成して設定するには、次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="01e96359683d8998b2f48987f38d7a5a0c7de1ba" translate="yes" xml:space="preserve">
          <source>For example, to create and populate an &lt;code&gt;ast.UnaryOp&lt;/code&gt; node, you could use</source>
          <target state="translated">たとえば、 &lt;code&gt;ast.UnaryOp&lt;/code&gt; ノードを作成して入力するには、次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="5a38ad6a815b7c3a6d5e35ad360441c5a233d74d" translate="yes" xml:space="preserve">
          <source>For example, to obtain the digest of the byte string &lt;code&gt;b'Nobody inspects the
spammish repetition'&lt;/code&gt;:</source>
          <target state="translated">たとえば、バイト文字列 &lt;code&gt;b'Nobody inspects the spammish repetition'&lt;/code&gt; ダイジェストを取得するには、スパムの繰り返しを検査します '：</target>
        </trans-unit>
        <trans-unit id="48a28f5d3517c11de3bb06bb6b263ccb6b5647c5" translate="yes" xml:space="preserve">
          <source>For example, to pack a list of integers, the code might appear like this:</source>
          <target state="translated">例えば、整数のリストをパックするには、次のようなコードが表示されます。</target>
        </trans-unit>
        <trans-unit id="a50f637ca45f01bd80a886a7d8d9112bcffe4464" translate="yes" xml:space="preserve">
          <source>For example, to set the delete flag on all messages:</source>
          <target state="translated">例えば、すべてのメッセージに削除フラグを設定する。</target>
        </trans-unit>
        <trans-unit id="b93ac1384be7b98f164f6c81fd59de15e924427b" translate="yes" xml:space="preserve">
          <source>For example, to support arbitrary iterators, you could implement default like this:</source>
          <target state="translated">例えば、任意のイテレータをサポートするために、以下のようなデフォルトの実装を行うことができます。</target>
        </trans-unit>
        <trans-unit id="0951e83479d161eaed251abaa06a68585eb3120d" translate="yes" xml:space="preserve">
          <source>For example, to tunnel through a HTTPS proxy server running locally on port 8080, we would pass the address of the proxy to the &lt;a href=&quot;#http.client.HTTPSConnection&quot;&gt;&lt;code&gt;HTTPSConnection&lt;/code&gt;&lt;/a&gt; constructor, and the address of the host that we eventually want to reach to the &lt;a href=&quot;#http.client.HTTPConnection.set_tunnel&quot;&gt;&lt;code&gt;set_tunnel()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">たとえば、ポート8080でローカルに実行されているHTTPSプロキシサーバーをトンネリングするには、プロキシのアドレスを&lt;a href=&quot;#http.client.HTTPSConnection&quot;&gt; &lt;code&gt;HTTPSConnection&lt;/code&gt; &lt;/a&gt;コンストラクターに渡し、最終的に到達するホストのアドレスを&lt;a href=&quot;#http.client.HTTPConnection.set_tunnel&quot;&gt; &lt;code&gt;set_tunnel()&lt;/code&gt; &lt;/a&gt;メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="7b3b978bfbe527f2a3a323f97ed4b69e27575629" translate="yes" xml:space="preserve">
          <source>For example, using the &lt;em&gt;spawn&lt;/em&gt; or &lt;em&gt;forkserver&lt;/em&gt; start method running the following module would fail with a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">たとえば、次のモジュールを実行&lt;em&gt;するspawn&lt;/em&gt;または&lt;em&gt;forkserver&lt;/em&gt; startメソッドを使用すると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="df42ad7c32da867212db01c727dfc03b20284141" translate="yes" xml:space="preserve">
          <source>For example, with a tuple &lt;code&gt;(1, 2)&lt;/code&gt; pickled in file &lt;code&gt;x.pickle&lt;/code&gt;:</source>
          <target state="translated">たとえば、タプル &lt;code&gt;(1, 2)&lt;/code&gt; &lt;code&gt;x.pickle&lt;/code&gt; ファイルにピクルされた場合：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="f5d290d09e8b8601522cec0c016dec6107bd8c07" translate="yes" xml:space="preserve">
          <source>For exceptions that involve a file system path (such as &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;#OSError.filename&quot;&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/a&gt; is the file name passed to the function. For functions that involve two file system paths (such as &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;#OSError.filename2&quot;&gt;&lt;code&gt;filename2&lt;/code&gt;&lt;/a&gt; corresponds to the second file name passed to the function.</source>
          <target state="translated">ファイルシステムパス（&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;os#os.unlink&quot;&gt; &lt;code&gt;os.unlink()&lt;/code&gt; など&lt;/a&gt;）を含む例外の場合、&lt;a href=&quot;#OSError.filename&quot;&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/a&gt;は関数に渡されるファイル名です。2つのファイルシステムパスを含む関数（&lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; など&lt;/a&gt;）の場合、&lt;a href=&quot;#OSError.filename2&quot;&gt; &lt;code&gt;filename2&lt;/code&gt; &lt;/a&gt;は関数に渡される2番目のファイル名に対応します。</target>
        </trans-unit>
        <trans-unit id="986e94f272815e62ab45e31fc596a0bf2e5dba42" translate="yes" xml:space="preserve">
          <source>For existing code calling &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; with arguments which don&amp;rsquo;t support iteration, the following generator may be used as a wrapper around the file-like object:</source>
          <target state="translated">反復をサポートしない引数で&lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;を呼び出す既存のコードの場合、次のジェネレーターをファイルのようなオブジェクトのラッパーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="8b79f9eae26ef65a2afacf2f54b2b0b95f4250af" translate="yes" xml:space="preserve">
          <source>For extension writers and programs that embed Python</source>
          <target state="translated">Pythonを埋め込む拡張機能のライターやプログラムのために</target>
        </trans-unit>
        <trans-unit id="49236a3024681c0e3e5df13b1f0ff226ce5765af" translate="yes" xml:space="preserve">
          <source>For external entities to be parsed, this handler must be implemented. It is responsible for creating the sub-parser using &lt;code&gt;ExternalEntityParserCreate(context)&lt;/code&gt;, initializing it with the appropriate callbacks, and parsing the entity. This handler should return an integer; if it returns &lt;code&gt;0&lt;/code&gt;, the parser will raise an &lt;code&gt;XML_ERROR_EXTERNAL_ENTITY_HANDLING&lt;/code&gt; error, otherwise parsing will continue.</source>
          <target state="translated">外部エンティティーを解析するには、このハンドラーを実装する必要があります。 &lt;code&gt;ExternalEntityParserCreate(context)&lt;/code&gt; を使用してサブパーサーを作成し、適切なコールバックで初期化し、エンティティを解析します。このハンドラは整数を返す必要があります。 &lt;code&gt;0&lt;/code&gt; を返す場合、パーサーは &lt;code&gt;XML_ERROR_EXTERNAL_ENTITY_HANDLING&lt;/code&gt; エラーを発生させます。それ以外の場合、解析は続行されます。</target>
        </trans-unit>
        <trans-unit id="b4e2ea4728652ede8436b63008dcbd2ab29b3396" translate="yes" xml:space="preserve">
          <source>For further discussion and two alternative approaches, see the &lt;a href=&quot;https://code.activestate.com/recipes/393090/&quot;&gt;ASPN cookbook recipes for accurate floating point summation&lt;/a&gt;.</source>
          <target state="translated">詳細な説明と2つの代替アプローチについては&lt;a href=&quot;https://code.activestate.com/recipes/393090/&quot;&gt;、正確な浮動小数点加算のため&lt;/a&gt;のASPNクックブックのレシピをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e6522f23e1fead3deb4b5395a57a64fa42ca1cdb" translate="yes" xml:space="preserve">
          <source>For further information, please consult the &lt;a href=&quot;#socket-timeouts&quot;&gt;notes on socket timeouts&lt;/a&gt;.</source>
          <target state="translated">詳細について&lt;a href=&quot;#socket-timeouts&quot;&gt;は、ソケットタイムアウトに関するメモ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="aece9ac1b71ac6c335d8931e16fc332fda8d8599" translate="yes" xml:space="preserve">
          <source>For heterogeneous collections of data where access by name is clearer than access by index, &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;collections.namedtuple()&lt;/code&gt;&lt;/a&gt; may be a more appropriate choice than a simple tuple object.</source>
          <target state="translated">名前によるアクセスがインデックスによるアクセスよりも明確である異種のデータのコレクションの場合、&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;collections.namedtuple()&lt;/code&gt; &lt;/a&gt;は、単純なタプルオブジェクトよりも適切な選択です。</target>
        </trans-unit>
        <trans-unit id="359d6faefa3d11791af43a44d2be377ce987f362" translate="yes" xml:space="preserve">
          <source>For historical reasons, some of the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; methods had one or more aliases that are now deprecated. The following table lists the correct names along with their deprecated aliases:</source>
          <target state="translated">歴史的な理由により、一部の&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;メソッドには、現在廃止されている1つ以上のエイリアスがありました。次の表に、非推奨のエイリアスとともに正しい名前を示します。</target>
        </trans-unit>
        <trans-unit id="70e949f6da3f1a592f5b2a48629e000e95eccb0b" translate="yes" xml:space="preserve">
          <source>For immutable targets such as strings, numbers, and tuples, the updated value is computed, but not assigned back to the input variable:</source>
          <target state="translated">文字列、数値、タプルなどの不変のターゲットの場合、更新された値は計算されますが、入力変数には代入されません。</target>
        </trans-unit>
        <trans-unit id="cd5568fb042e52612b4e07795a6d976a99da1fd0" translate="yes" xml:space="preserve">
          <source>For in-place operations such as &lt;code&gt;c[key] += 1&lt;/code&gt;, the value type need only support addition and subtraction. So fractions, floats, and decimals would work and negative values are supported. The same is also true for &lt;a href=&quot;#collections.Counter.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.Counter.subtract&quot;&gt;&lt;code&gt;subtract()&lt;/code&gt;&lt;/a&gt; which allow negative and zero values for both inputs and outputs.</source>
          <target state="translated">&lt;code&gt;c[key] += 1&lt;/code&gt; などのインプレース演算の場合、値の型は加算と減算のみをサポートする必要があります。したがって、分数、浮動小数点数、および小数が機能し、負の値がサポートされます。同じことが、入力と出力の両方に負の値とゼロの値を許可する&lt;a href=&quot;#collections.Counter.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#collections.Counter.subtract&quot;&gt; &lt;code&gt;subtract()&lt;/code&gt; に&lt;/a&gt;も当てはまります。</target>
        </trans-unit>
        <trans-unit id="c430cecf18c6228ad80e21ff36d9ceb073b9e28e" translate="yes" xml:space="preserve">
          <source>For incremental compression, use a &lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt;&lt;code&gt;BZ2Compressor&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">増分圧縮の場合は、代わりに&lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt; &lt;code&gt;BZ2Compressor&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="a21755ab38d63f0daf62822c3d38c163c737dea4" translate="yes" xml:space="preserve">
          <source>For incremental decompression, use a &lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt;&lt;code&gt;BZ2Decompressor&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">増分解凍の場合は、代わりに&lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt; &lt;code&gt;BZ2Decompressor&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="2ec8371fc038e2d68966db34b74ea3f258be66a1" translate="yes" xml:space="preserve">
          <source>For inexact results, &lt;a href=&quot;#decimal.MAX_PREC&quot;&gt;&lt;code&gt;MAX_PREC&lt;/code&gt;&lt;/a&gt; is far too large on 64-bit platforms and the available memory will be insufficient:</source>
          <target state="translated">不正確な結果の場合、&lt;a href=&quot;#decimal.MAX_PREC&quot;&gt; &lt;code&gt;MAX_PREC&lt;/code&gt; &lt;/a&gt;は64ビットプラットフォームでは大きすぎ、使用可能なメモリが不足します。</target>
        </trans-unit>
        <trans-unit id="cbff89a2f5f52c2e55ca2c9d27010a14badd978f" translate="yes" xml:space="preserve">
          <source>For information about the constructor parameters and methods, see the documentation for &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; in section &lt;a href=&quot;#doctest-advanced-api&quot;&gt;Advanced API&lt;/a&gt;.</source>
          <target state="translated">コンストラクターのパラメーターとメソッドについては、セクション&lt;a href=&quot;#doctest-advanced-api&quot;&gt;Advanced APIの&lt;/a&gt;&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ccc3814ef62ef3e032cafe9cf247e4c042f7bd05" translate="yes" xml:space="preserve">
          <source>For inputs that do not have trailing newlines, set the &lt;em&gt;lineterm&lt;/em&gt; argument to &lt;code&gt;&quot;&quot;&lt;/code&gt; so that the output will be uniformly newline free.</source>
          <target state="translated">末尾に改行がない入力の場合は、&lt;em&gt;lineterm&lt;/em&gt;引数を &lt;code&gt;&quot;&quot;&lt;/code&gt; に設定して、出力に改行がないようにします。</target>
        </trans-unit>
        <trans-unit id="963201ecdae08f04bf36171e54bffac97056f991" translate="yes" xml:space="preserve">
          <source>For instance, SML provides a tabulation tool: &lt;code&gt;tabulate(f)&lt;/code&gt; which produces a sequence &lt;code&gt;f(0), f(1), ...&lt;/code&gt;. The same effect can be achieved in Python by combining &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#itertools.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; to form &lt;code&gt;map(f, count())&lt;/code&gt;.</source>
          <target state="translated">たとえば、SMLは集計ツールを提供します：シーケンス &lt;code&gt;f(0), f(1), ...&lt;/code&gt; を生成する &lt;code&gt;tabulate(f)&lt;/code&gt; 。同じ効果は、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#itertools.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;を組み合わせて &lt;code&gt;map(f, count())&lt;/code&gt; を作成することにより、Pythonでも実現できます。</target>
        </trans-unit>
        <trans-unit id="45242015fdb9fb952b9daa1d8d086e0f23b3b509" translate="yes" xml:space="preserve">
          <source>For instance, Shell never throws away output. A program that sends unlimited output to Shell will eventually fill memory, resulting in a memory error. In contrast, some system text windows only keep the last n lines of output. A Windows console, for instance, keeps a user-settable 1 to 9999 lines, with 300 the default.</source>
          <target state="translated">例えば、Shellは出力を捨てることはありません。無制限の出力をシェルに送るプログラムは、最終的にはメモリが一杯になり、メモリエラーが発生します。対照的に、システムのテキストウィンドウの中には、出力の最後のn行だけを保持するものがあります。例えば、Windows コンソールは、ユーザが設定可能な 1 行から 9999 行までを保持しますが、デフォルトは 300 行です。</target>
        </trans-unit>
        <trans-unit id="a68abe1e9fe976d53a8a6657db86db9f80bc6ae9" translate="yes" xml:space="preserve">
          <source>For instance, for the tag &lt;code&gt;&amp;lt;A HREF=&quot;https://www.cwi.nl/&quot;&amp;gt;&lt;/code&gt;, this method would be called as &lt;code&gt;handle_starttag('a', [('href', 'https://www.cwi.nl/')])&lt;/code&gt;.</source>
          <target state="translated">たとえば、タグ &lt;code&gt;&amp;lt;A HREF=&quot;https://www.cwi.nl/&quot;&amp;gt;&lt;/code&gt; の場合、このメソッドは &lt;code&gt;handle_starttag('a', [('href', 'https://www.cwi.nl/')])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="826a7a4eb1b82ca394e40c781115bfce3bd511a6" translate="yes" xml:space="preserve">
          <source>For instance, the following code (which assumes that the &lt;em&gt;Content-Type&lt;/em&gt; header and blank line have already been printed) checks that the fields &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;addr&lt;/code&gt; are both set to a non-empty string:</source>
          <target state="translated">たとえば、次のコード（&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーと空白行が既に印刷されていることを前提としています）は、フィールド &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;addr&lt;/code&gt; の両方が空でない文字列に設定されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="2fa125984e38d3e02a7f0fb70915cc3d02caa868" translate="yes" xml:space="preserve">
          <source>For integer type fields like &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt;, a third optional item can be given. It must be a small positive integer defining the bit width of the field.</source>
          <target state="translated">&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;などの整数型フィールドの場合、3番目のオプション項目を指定できます。フィールドのビット幅を定義する小さな正の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f7503225ff38260dec07fdc637319dd83d951773" translate="yes" xml:space="preserve">
          <source>For integers, there is uniform selection from a range. For sequences, there is uniform selection of a random element, a function to generate a random permutation of a list in-place, and a function for random sampling without replacement.</source>
          <target state="translated">整数の場合、範囲からの一様選択があります。数列については、ランダム要素の一様選択、リストの乱数順列をその場で生成する関数、置換を行わずにランダムサンプリングする関数があります。</target>
        </trans-unit>
        <trans-unit id="4eff0fdcbc3569990bbd16db9fa5a5df5aae7685" translate="yes" xml:space="preserve">
          <source>For loggers other than the root logger, some additional information is required. This is illustrated by the following example.</source>
          <target state="translated">ルート ロガー以外のロガーの場合、いくつかの追加情報が必要です。これは、次の例で説明します。</target>
        </trans-unit>
        <trans-unit id="fca00032925597b5dc8a9f16bf3a7909732bbcbb" translate="yes" xml:space="preserve">
          <source>For long options (options with names longer than a single character), the option and value can also be passed as a single command-line argument, using &lt;code&gt;=&lt;/code&gt; to separate them:</source>
          <target state="translated">長いオプション（名前が1文字より長いオプション）の場合、オプションと値は、 &lt;code&gt;=&lt;/code&gt; を使用してそれらを区切るために、1つのコマンドライン引数として渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="99265f8edbfb9e7d7b596dec842776023c0a9e56" translate="yes" xml:space="preserve">
          <source>For long sequences of the same frame and line, the first few repetitions are shown, followed by a summary line stating the exact number of further repetitions.</source>
          <target state="translated">同じフレームとラインの長いシーケンスの場合は、最初の数回の繰り返しが表示され、その後、さらに繰り返しの正確な回数を示すサマリーラインが続きます。</target>
        </trans-unit>
        <trans-unit id="2e50576c0df1f3411e96df78baa4b95f76497c46" translate="yes" xml:space="preserve">
          <source>For low-level path manipulation on strings, you can also use the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">文字列の低レベルのパス操作では、&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;モジュールを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="780e353ee5e0eadf57f7fb0b0eb414afc840b40c" translate="yes" xml:space="preserve">
          <source>For mathematical operations on multisets and their use cases, see &lt;em&gt;Knuth, Donald. The Art of Computer Programming Volume II, Section 4.6.3, Exercise 19&lt;/em&gt;.</source>
          <target state="translated">マルチセットの数学演算とその使用例については、&lt;em&gt;Knuth、Donaldを&lt;/em&gt;参照してください&lt;em&gt;。&lt;/em&gt;&lt;em&gt;Art of Computer Programming Volume II、セクション4.6.3、Exercise 19&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bcc82cf68a5234571647cda5636a95aca3c77d15" translate="yes" xml:space="preserve">
          <source>For modes &lt;code&gt;'w:gz'&lt;/code&gt;, &lt;code&gt;'r:gz'&lt;/code&gt;, &lt;code&gt;'w:bz2'&lt;/code&gt;, &lt;code&gt;'r:bz2'&lt;/code&gt;, &lt;code&gt;'x:gz'&lt;/code&gt;, &lt;code&gt;'x:bz2'&lt;/code&gt;, &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; accepts the keyword argument &lt;em&gt;compresslevel&lt;/em&gt; (default &lt;code&gt;9&lt;/code&gt;) to specify the compression level of the file.</source>
          <target state="translated">モード &lt;code&gt;'w:gz'&lt;/code&gt; 、 &lt;code&gt;'r:gz'&lt;/code&gt; 、 &lt;code&gt;'w:bz2'&lt;/code&gt; 、 &lt;code&gt;'r:bz2'&lt;/code&gt; 、 &lt;code&gt;'x:gz'&lt;/code&gt; 、 &lt;code&gt;'x:bz2'&lt;/code&gt; 、&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;はキーワード引数&lt;em&gt;compresslevel&lt;/em&gt;（デフォルト &lt;code&gt;9&lt;/code&gt; ）ファイルの圧縮レベルを指定します。</target>
        </trans-unit>
        <trans-unit id="f7d85143367eaddc8853c2ec6704f9eb4b357718" translate="yes" xml:space="preserve">
          <source>For modules, classes, functions and methods, the displayed documentation is derived from the docstring (i.e. the &lt;code&gt;__doc__&lt;/code&gt; attribute) of the object, and recursively of its documentable members. If there is no docstring, &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; tries to obtain a description from the block of comment lines just above the definition of the class, function or method in the source file, or at the top of the module (see &lt;a href=&quot;inspect#inspect.getcomments&quot;&gt;&lt;code&gt;inspect.getcomments()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">モジュール、クラス、関数、およびメソッドの場合、表示されるドキュメントは、オブジェクトのdocstring（つまり、 &lt;code&gt;__doc__&lt;/code&gt; 属性）から派生し、そのドキュメント化可能なメンバーから再帰的に派生します。docstringがない場合、&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;は、ソースファイルのクラス、関数、またはメソッドの定義のすぐ上、またはモジュールの最上部にあるコメント行のブロックから説明を取得しようとします（&lt;a href=&quot;inspect#inspect.getcomments&quot;&gt; &lt;code&gt;inspect.getcomments()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="03e6b008c4cde03e3eae01629d439fc517c4dfe9" translate="yes" xml:space="preserve">
          <source>For more about ABCs, see the &lt;a href=&quot;abc#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module and &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">ABCの詳細については、&lt;a href=&quot;abc#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;モジュールおよび&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3119を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="46cae48518bcb3647b4683abb1424d2693286675" translate="yes" xml:space="preserve">
          <source>For more advanced work, it may be useful to create alternate contexts using the Context() constructor. To make an alternate active, use the &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">より高度な作業では、Context（）コンストラクターを使用して代替コンテキストを作成すると便利な場合があります。代替をアクティブにするには、&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="0fcc19ca4e316c086f420b1620de5c145c142b6d" translate="yes" xml:space="preserve">
          <source>For more details and extensive examples, see the documentation string of the &lt;code&gt;_threading_local&lt;/code&gt; module.</source>
          <target state="translated">詳細と広範な例については、 &lt;code&gt;_threading_local&lt;/code&gt; モジュールのドキュメント文字列を参照してください。</target>
        </trans-unit>
        <trans-unit id="597d156c6f9b5c546f4c30195be33c24a39b20e0" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;#argparse.Action&quot;&gt;&lt;code&gt;Action&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#argparse.Action&quot;&gt; &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36d676c3906f278c209bbc351453c41061805da0" translate="yes" xml:space="preserve">
          <source>For more explicit control of source stacking, use the &lt;a href=&quot;#shlex.shlex.push_source&quot;&gt;&lt;code&gt;push_source()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#shlex.shlex.pop_source&quot;&gt;&lt;code&gt;pop_source()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">ソーススタッキングをより明示的に制御するには、&lt;a href=&quot;#shlex.shlex.push_source&quot;&gt; &lt;code&gt;push_source()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#shlex.shlex.pop_source&quot;&gt; &lt;code&gt;pop_source()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="dd9913577d878271afdd61232f1fa2cb21697adb" translate="yes" xml:space="preserve">
          <source>For more extensive information on the packer and the options that it can take, see the man pages and page 183 of John Ousterhout&amp;rsquo;s book.</source>
          <target state="translated">パッカーとパッカーが利用できるオプションの詳細については、John Ousterhoutの本のmanページと183ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="b8f07e394f58518334837c27b85d4ab9f5730274" translate="yes" xml:space="preserve">
          <source>For more fine-grained usage, it&amp;rsquo;s possible to set a trace function by assigning &lt;code&gt;frame.f_trace = tracefunc&lt;/code&gt; explicitly, rather than relying on it being set indirectly via the return value from an already installed trace function. This is also required for activating the trace function on the current frame, which &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t do. Note that in order for this to work, a global tracing function must have been installed with &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt; in order to enable the runtime tracing machinery, but it doesn&amp;rsquo;t need to be the same tracing function (e.g. it could be a low overhead tracing function that simply returns &lt;code&gt;None&lt;/code&gt; to disable itself immediately on each frame).</source>
          <target state="translated">よりきめ細かい使用法については、 &lt;code&gt;frame.f_trace = tracefunc&lt;/code&gt; 明示的に割り当てることにより、すでにインストールされているトレース関数からの戻り値を介して間接的に設定されることに頼るのではなく、トレース関数を設定することが可能です。これは、現在のフレームでトレース機能をアクティブにするためにも必要ですが、&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; &lt;/a&gt;はこれを行いません。これが機能するためには、ランタイムトレース機構を有効にするために、グローバルトレース関数が&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; &lt;/a&gt;でインストールされている必要がありますが、同じトレース関数である必要はありません（たとえば、オーバーヘッドが小さい可能性があります）。各フレームですぐに無効になるように &lt;code&gt;None&lt;/code&gt; を返すトレース関数）。</target>
        </trans-unit>
        <trans-unit id="b72782cbc8c0b6cf00d613d39cc13696514eeb6e" translate="yes" xml:space="preserve">
          <source>For more flexibility in using shared memory one can use the &lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt;&lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt;&lt;/a&gt; module which supports the creation of arbitrary ctypes objects allocated from shared memory.</source>
          <target state="translated">共有メモリをより柔軟に使用するために、共有メモリから割り当てられた任意のctypesオブジェクトの作成をサポートする&lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt; &lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt; &lt;/a&gt;モジュールを使用できます。</target>
        </trans-unit>
        <trans-unit id="df7e50f9236ec25120197854c2f0993b8af2a486" translate="yes" xml:space="preserve">
          <source>For more information about &lt;a href=&quot;#ttkstyling&quot;&gt;TtkStyling&lt;/a&gt;, see the &lt;a href=&quot;#tkinter.ttk.Style&quot;&gt;&lt;code&gt;Style&lt;/code&gt;&lt;/a&gt; class documentation.</source>
          <target state="translated">詳細については&lt;a href=&quot;#ttkstyling&quot;&gt;TtkStyling&lt;/a&gt;、参照&lt;a href=&quot;#tkinter.ttk.Style&quot;&gt; &lt;code&gt;Style&lt;/code&gt; &lt;/a&gt;クラスのドキュメントを。</target>
        </trans-unit>
        <trans-unit id="db5ca74113cecdf8bd9218769597c1431aee8777" translate="yes" xml:space="preserve">
          <source>For more information about &lt;em&gt;flags&lt;/em&gt; you can consult &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getnameinfo(3)&quot;&gt;getnameinfo(3)&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;フラグの&lt;/em&gt;詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getnameinfo(3)&quot;&gt;getnameinfo（3）を&lt;/a&gt;&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="38c9342c817e5011acb54d4ee258a06117119635" translate="yes" xml:space="preserve">
          <source>For more information on &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt;, see section &lt;a href=&quot;#doctest-basic-api&quot;&gt;Basic API&lt;/a&gt;.</source>
          <target state="translated">詳細については&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;、節参照&lt;a href=&quot;#doctest-basic-api&quot;&gt;基本的なAPIを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8992739fc0a61b0b25882180db6cdfa7a3570bbd" translate="yes" xml:space="preserve">
          <source>For more information on &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;, see section &lt;a href=&quot;#doctest-basic-api&quot;&gt;Basic API&lt;/a&gt;.</source>
          <target state="translated">詳細については&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;、節参照&lt;a href=&quot;#doctest-basic-api&quot;&gt;基本的なAPIを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f4e87cc73e3a41721af3d1c000891584dd27800" translate="yes" xml:space="preserve">
          <source>For more information on class methods, see &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">クラスメソッドの詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;「標準の型階層&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="bedf2aa9231c7c1fecdcdb39b3fcf4e879dfae1c" translate="yes" xml:space="preserve">
          <source>For more information on code and frame objects, refer to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">コードおよびフレームオブジェクトの詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;「標準型階層」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="943fc3aafe4395b49cfdf52a6cc74f35ea3f8db1" translate="yes" xml:space="preserve">
          <source>For more information on code and frame objects, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">コードおよびフレームオブジェクトの詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;標準タイプ階層を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2bc48bac1d964e4beb9368509e2bda88698375ca" translate="yes" xml:space="preserve">
          <source>For more information on configuring the time zone search path, see &lt;a href=&quot;#zoneinfo-data-configuration&quot;&gt;Configuring the data sources&lt;/a&gt;.</source>
          <target state="translated">タイムゾーン検索パスの&lt;a href=&quot;#zoneinfo-data-configuration&quot;&gt;構成の&lt;/a&gt;詳細については、データソースの構成を参照してください。</target>
        </trans-unit>
        <trans-unit id="4d078607c47fbb41c24940ef7055eb18a9b3d415" translate="yes" xml:space="preserve">
          <source>For more information on static methods, see &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">静的メソッドの詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#types&quot;&gt;「標準の型階層&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="126894bd2f2934ca2ff40c316deecdc20454d941" translate="yes" xml:space="preserve">
          <source>For more information on static methods, see &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">静的メソッドの詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;「標準タイプ階層&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="421bf46ac523c580b6d6d6d7806d5f9f6b50d224" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;str&lt;/code&gt; class and its methods, see &lt;a href=&quot;#textseq&quot;&gt;Text Sequence Type &amp;mdash; str&lt;/a&gt; and the &lt;a href=&quot;#string-methods&quot;&gt;String Methods&lt;/a&gt; section below. To output formatted strings, see the &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt; and &lt;a href=&quot;string#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; sections. In addition, see the &lt;a href=&quot;text#stringservices&quot;&gt;Text Processing Services&lt;/a&gt; section.</source>
          <target state="translated">詳細については &lt;code&gt;str&lt;/code&gt; クラスとそのメソッドを参照してください&lt;a href=&quot;#textseq&quot;&gt;STR -テキストシーケンス型&lt;/a&gt;と&lt;a href=&quot;#string-methods&quot;&gt;文字列メソッド&lt;/a&gt;以下のセクションを。書式設定された文字列を出力するには、「書式設定された文字&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;列リテラル」&lt;/a&gt;および「&lt;a href=&quot;string#formatstrings&quot;&gt;書式文字列構文」&lt;/a&gt;セクションを参照してください。さらに、&lt;a href=&quot;text#stringservices&quot;&gt;テキスト処理サービスの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="d38681b50e3b40c04632ee37a159ac20eca99d3d" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;str&lt;/code&gt; class and its methods, see &lt;a href=&quot;#textseq&quot;&gt;Text Sequence Type &amp;mdash; str&lt;/a&gt; and the &lt;a href=&quot;#string-methods&quot;&gt;String Methods&lt;/a&gt; section below. To output formatted strings, see the &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt; and &lt;a href=&quot;string#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; sections. In addition, see the &lt;a href=&quot;text#stringservices&quot;&gt;Text Processing Services&lt;/a&gt; section.</source>
          <target state="translated">詳細については &lt;code&gt;str&lt;/code&gt; クラスとそのメソッドを参照してください&lt;a href=&quot;#textseq&quot;&gt;STR -テキストシーケンス型&lt;/a&gt;と&lt;a href=&quot;#string-methods&quot;&gt;文字列メソッド&lt;/a&gt;以下のセクションを。フォーマットされた文字列を出力するには、&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;フォーマットされた文字列リテラル&lt;/a&gt;と&lt;a href=&quot;string#formatstrings&quot;&gt;フォーマット文字列構文の&lt;/a&gt;セクションを参照してください。さらに、「&lt;a href=&quot;text#stringservices&quot;&gt;テキスト処理サービス」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2d85a9650ef90a538c7b9637ea250afe03d69723" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://bugs.python.org/issue5155&quot;&gt;bpo-5155&lt;/a&gt;, &lt;a href=&quot;https://bugs.python.org/issue5313&quot;&gt;bpo-5313&lt;/a&gt; and &lt;a href=&quot;https://bugs.python.org/issue5331&quot;&gt;bpo-5331&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://bugs.python.org/issue5155&quot;&gt;bpo-5155&lt;/a&gt;、&lt;a href=&quot;https://bugs.python.org/issue5313&quot;&gt;bpo-5313&lt;/a&gt;および&lt;a href=&quot;https://bugs.python.org/issue5331&quot;&gt;bpo-5331を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="ad749c484a050c2c7bf1710222fa340076db122c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa384129(v=VS.85).aspx&quot;&gt;Accessing an Alternate Registry View&lt;/a&gt;.</source>
          <target state="translated">詳細については、「&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa384129(v=VS.85).aspx&quot;&gt;代替レジストリビューへのアクセス&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="119c6fa14fdb5ff135f608e174a237a8d39259df" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;Registry Key Security and Access&lt;/a&gt;.</source>
          <target state="translated">詳細については、「&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;レジストリキーのセキュリティとアクセス&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="77fb0351c334f2e98ca82931de22cb7d2c602dca" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724884%28v=VS.85%29.aspx&quot;&gt;Registry Value Types&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724884%28v=VS.85%29.aspx&quot;&gt;レジストリ値のタイプを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e2862796ac2f004784e5a6dba00f5ca7855b8ad6" translate="yes" xml:space="preserve">
          <source>For more information: &lt;a href=&quot;https://tools.ietf.org/html/rfc6555&quot;&gt;https://tools.ietf.org/html/rfc6555&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc6555&quot;&gt;https&lt;/a&gt;：//tools.ietf.org/html/rfc6555をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5798480c6aa43603ded3d7efeddc544e90f897ab" translate="yes" xml:space="preserve">
          <source>For more sophisticated applications, the &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; class helps manage settings and certificates, which can then be inherited by SSL sockets created through the &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">より洗練されたアプリケーションの場合、&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;クラスは設定と証明書の管理に役立ち、&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;メソッドを介して作成されたSSLソケットによって継承できます。</target>
        </trans-unit>
        <trans-unit id="8bde3739aadce3c7f820930e05b3c8e453753978" translate="yes" xml:space="preserve">
          <source>For most purposes, the &lt;code&gt;SOUND_MIXER_VOLUME&lt;/code&gt; (master volume) and &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; controls should suffice&amp;mdash;but code that uses the mixer should be flexible when it comes to choosing mixer controls. On the Gravis Ultrasound, for example, &lt;code&gt;SOUND_MIXER_VOLUME&lt;/code&gt; does not exist.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;SOUND_MIXER_VOLUME&lt;/code&gt; （マスターボリューム）および &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; コントロールで十分ですが、ミキサーコントロールを選択する場合、ミキサーを使用するコードは柔軟でなければなりません。たとえば、Gravis Ultrasoundでは、 &lt;code&gt;SOUND_MIXER_VOLUME&lt;/code&gt; は存在しません。</target>
        </trans-unit>
        <trans-unit id="81a00f17049a5e9a02f7312cb25779d4bb6c5941" translate="yes" xml:space="preserve">
          <source>For mutable targets such as lists and dictionaries, the in-place method will perform the update, so no subsequent assignment is necessary:</source>
          <target state="translated">リストや辞書のような変異可能なターゲットの場合、インプレース・メソッドが更新を実行するので、それ以降の代入は必要ありません。</target>
        </trans-unit>
        <trans-unit id="77fbb059375aa28aa73354116772b577d2a77cf7" translate="yes" xml:space="preserve">
          <source>For nodes that were part of a collection of statements (that applies to all statement nodes), the visitor may also return a list of nodes rather than just a single node.</source>
          <target state="translated">ステートメントのコレクションの一部であるノード(すべてのステートメント・ノードに適用されます)については、訪問者は単一のノードだけではなく、ノードのリストを返すこともできます。</target>
        </trans-unit>
        <trans-unit id="d250f7a529a8d3c64d6bc6040f6513ae55826602" translate="yes" xml:space="preserve">
          <source>For non-200 error codes, this simply passes the job on to the &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; handler methods, via &lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt;&lt;code&gt;OpenerDirector.error()&lt;/code&gt;&lt;/a&gt;. Eventually, &lt;a href=&quot;#urllib.request.HTTPDefaultErrorHandler&quot;&gt;&lt;code&gt;HTTPDefaultErrorHandler&lt;/code&gt;&lt;/a&gt; will raise an &lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; if no other handler handles the error.</source>
          <target state="translated">200以外のエラーコードの場合、これはジョブを&lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt; &lt;code&gt;OpenerDirector.error()&lt;/code&gt; &lt;/a&gt;経由で &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; ハンドラーメソッドに渡すだけです。結局、&lt;a href=&quot;#urllib.request.HTTPDefaultErrorHandler&quot;&gt; &lt;code&gt;HTTPDefaultErrorHandler&lt;/code&gt; が&lt;/a&gt;発生します&lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; を&lt;/a&gt;他のハンドラがエラーを処理しない場合。</target>
        </trans-unit>
        <trans-unit id="f5517c546993b6b7847fcd0c391c423f3a488157" translate="yes" xml:space="preserve">
          <source>For non-Unix platforms, or when a remote browser is available on Unix, the controlling process will not wait for the user to finish with the browser, but allow the remote browser to maintain its own windows on the display. If remote browsers are not available on Unix, the controlling process will launch a new browser and wait.</source>
          <target state="translated">非Unixプラットフォームの場合、またはUnix上でリモートブラウザが利用可能な場合、制御プロセスはユーザがブラウザを終了するのを待たずに、リモートブラウザがディスプレイ上で自分のウィンドウを維持することを許可する。Unix上でリモートブラウザが利用できない場合、制御プロセスは新しいブラウザを起動して待ちます。</target>
        </trans-unit>
        <trans-unit id="9b772393e90f36112fe4debf3cd114a12b09518c" translate="yes" xml:space="preserve">
          <source>For non-callable mocks the callable variant will be used (rather than any custom subclass).</source>
          <target state="translated">呼び出し不可能なモックには、呼び出し可能なバリアントが使用されます (カスタムサブクラスではなく)。</target>
        </trans-unit>
        <trans-unit id="b691e793be115140f38b348f5cebba832f0c4591" translate="yes" xml:space="preserve">
          <source>For non-contiguous arrays the result is equal to the flattened list representation with all elements converted to bytes. &lt;a href=&quot;#memoryview.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; supports all format strings, including those that are not in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module syntax.</source>
          <target state="translated">連続しない配列の場合、結果は、すべての要素がバイトに変換されたフラット化されたリスト表現と等しくなります。&lt;a href=&quot;#memoryview.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュール構文にないものも含め、すべてのフォーマット文字列をサポートします。</target>
        </trans-unit>
        <trans-unit id="cb6a6ca72e2265be79779f9a6b802b866e0158e9" translate="yes" xml:space="preserve">
          <source>For normal use, you should only require the initialization/connect, &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#smtplib.SMTP.quit&quot;&gt;&lt;code&gt;SMTP.quit()&lt;/code&gt;&lt;/a&gt; methods. An example is included below.</source>
          <target state="translated">通常の使用では、初期化/接続、&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#smtplib.SMTP.quit&quot;&gt; &lt;code&gt;SMTP.quit()&lt;/code&gt; &lt;/a&gt;メソッドのみが必要です。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="19877769490ea36879f858c9d17af7a4020bd5a5" translate="yes" xml:space="preserve">
          <source>For numbers &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, possibly of different types, it&amp;rsquo;s a requirement that &lt;code&gt;hash(x) == hash(y)&lt;/code&gt; whenever &lt;code&gt;x == y&lt;/code&gt; (see the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method documentation for more details). For ease of implementation and efficiency across a variety of numeric types (including &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;fractions.Fraction&lt;/code&gt;&lt;/a&gt;) Python&amp;rsquo;s hash for numeric types is based on a single mathematical function that&amp;rsquo;s defined for any rational number, and hence applies to all instances of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;fractions.Fraction&lt;/code&gt;&lt;/a&gt;, and all finite instances of &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;. Essentially, this function is given by reduction modulo &lt;code&gt;P&lt;/code&gt; for a fixed prime &lt;code&gt;P&lt;/code&gt;. The value of &lt;code&gt;P&lt;/code&gt; is made available to Python as the &lt;code&gt;modulus&lt;/code&gt; attribute of &lt;a href=&quot;sys#sys.hash_info&quot;&gt;&lt;code&gt;sys.hash_info&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">数値 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; 、おそらく異なる型の場合、 &lt;code&gt;x == y&lt;/code&gt; 常に &lt;code&gt;hash(x) == hash(y)&lt;/code&gt; ある必要があります（詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントを参照してください）。さまざまな数値型（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;fractions.Fraction&lt;/code&gt; &lt;/a&gt;を含む）全体での実装と効率を容易にするために、数値型のPythonハッシュは、任意の有理数に対して定義されている単一の数学関数に基づいているため、すべてに適用されます&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;fractions.Fraction&lt;/code&gt; の&lt;/a&gt;インスタンス、および&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;。基本的に、この関数は、固定素数 &lt;code&gt;P&lt;/code&gt; の &lt;code&gt;P&lt;/code&gt; を法とする縮約によって与えられます。 &lt;code&gt;P&lt;/code&gt; の値は、&lt;a href=&quot;sys#sys.hash_info&quot;&gt; &lt;code&gt;sys.hash_info&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;modulus&lt;/code&gt; 属性としてPythonで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="cb4246e51e51f94a94b6e7aca72ac5aaba5cdbf6" translate="yes" xml:space="preserve">
          <source>For numbers &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, possibly of different types, it&amp;rsquo;s a requirement that &lt;code&gt;hash(x) == hash(y)&lt;/code&gt; whenever &lt;code&gt;x == y&lt;/code&gt; (see the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method documentation for more details). For ease of implementation and efficiency across a variety of numeric types (including &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;fractions.Fraction&lt;/code&gt;&lt;/a&gt;) Python&amp;rsquo;s hash for numeric types is based on a single mathematical function that&amp;rsquo;s defined for any rational number, and hence applies to all instances of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;fractions.Fraction&lt;/code&gt;&lt;/a&gt;, and all finite instances of &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;. Essentially, this function is given by reduction modulo &lt;code&gt;P&lt;/code&gt; for a fixed prime &lt;code&gt;P&lt;/code&gt;. The value of &lt;code&gt;P&lt;/code&gt; is made available to Python as the &lt;code&gt;modulus&lt;/code&gt; attribute of &lt;a href=&quot;sys#sys.hash_info&quot;&gt;&lt;code&gt;sys.hash_info&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">おそらく異なるタイプの数値 &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; の場合、 &lt;code&gt;x == y&lt;/code&gt; 常に &lt;code&gt;hash(x) == hash(y)&lt;/code&gt; ある必要があります（詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントを参照してください）。さまざまな数値タイプ（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;fractions.Fraction&lt;/code&gt; など&lt;/a&gt;）での実装と効率を容易にするために、数値タイプのPythonのハッシュは、任意の有理数に対して定義された単一の数学関数に基づいているため、すべてに適用されます。&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;fractions.Fraction&lt;/code&gt; の&lt;/a&gt;インスタンス、および&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;とのすべての有限インスタンス&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;。基本的に、この関数は、固定素数 &lt;code&gt;P&lt;/code&gt; の &lt;code&gt;P&lt;/code&gt; を法とする還元によって与えられます。 &lt;code&gt;P&lt;/code&gt; の値は、&lt;a href=&quot;sys#sys.hash_info&quot;&gt; &lt;code&gt;sys.hash_info&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;modulus&lt;/code&gt; 属性としてPythonで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="628ceac337b9396c4868029429a446f72adf0fd4" translate="yes" xml:space="preserve">
          <source>For objects constructed from a file without specifying a &lt;code&gt;key&lt;/code&gt; parameter, &lt;code&gt;str&lt;/code&gt; falls back to calling &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;ZoneInfo&lt;/code&gt;&amp;rsquo;s &lt;code&gt;repr&lt;/code&gt; is implementation-defined and not necessarily stable between versions, but it is guaranteed not to be a valid &lt;code&gt;ZoneInfo&lt;/code&gt; key.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; パラメータを指定せずにファイルから構築されたオブジェクトの場合、 &lt;code&gt;str&lt;/code&gt; は&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; の&lt;/a&gt;呼び出しにフォールバックします。 &lt;code&gt;ZoneInfo&lt;/code&gt; の &lt;code&gt;repr&lt;/code&gt; は実装によって定義されており、バージョン間で必ずしも安定しているわけではありませんが、有効な &lt;code&gt;ZoneInfo&lt;/code&gt; キーではないことが保証されています。</target>
        </trans-unit>
        <trans-unit id="37098851ccc8634e113e32e8099ef7a2d3579db1" translate="yes" xml:space="preserve">
          <source>For objects with custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; methods, note that &lt;a href=&quot;#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt; truncates the return value based on the bit width of the host machine. See &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">カスタムを持つオブジェクトの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッド、ノートその&lt;a href=&quot;#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; &lt;/a&gt;ホスト・マシンのビット幅に基づいて、戻り値を切り捨てます。詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c199eb9825cc4887e1d0cd09984858a99277fadd" translate="yes" xml:space="preserve">
          <source>For objects with custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; methods, note that &lt;a href=&quot;#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt; truncates the return value based on the bit width of the host machine. See &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">カスタムを持つオブジェクトの&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッド、ノートその&lt;a href=&quot;#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; &lt;/a&gt;ホスト・マシンのビット幅に基づいて、戻り値を切り捨てます。詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="30462903d9f2f468f46f7edb480c29e83e9dfb0b" translate="yes" xml:space="preserve">
          <source>For optional argument actions, the value of &lt;code&gt;dest&lt;/code&gt; is normally inferred from the option strings. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; generates the value of &lt;code&gt;dest&lt;/code&gt; by taking the first long option string and stripping away the initial &lt;code&gt;--&lt;/code&gt; string. If no long option strings were supplied, &lt;code&gt;dest&lt;/code&gt; will be derived from the first short option string by stripping the initial &lt;code&gt;-&lt;/code&gt; character. Any internal &lt;code&gt;-&lt;/code&gt; characters will be converted to &lt;code&gt;_&lt;/code&gt; characters to make sure the string is a valid attribute name. The examples below illustrate this behavior:</source>
          <target state="translated">オプションの引数アクションの場合、 &lt;code&gt;dest&lt;/code&gt; の値は通常、オプション文字列から推測されます。&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; は、&lt;/a&gt;の値を生成 &lt;code&gt;dest&lt;/code&gt; 最初に長いオプション文字列を取り、最初の剥ぎ取ることで &lt;code&gt;--&lt;/code&gt; 文字列を。長いオプション文字列が指定されていない場合、 &lt;code&gt;dest&lt;/code&gt; は最初の &lt;code&gt;-&lt;/code&gt; 文字を削除することにより、最初の短いオプション文字列から派生します。文字列が有効な属性名であることを確認するために、内部の &lt;code&gt;-&lt;/code&gt; 文字は &lt;code&gt;_&lt;/code&gt; 文字に変換されます。以下の例は、この動作を示しています。</target>
        </trans-unit>
        <trans-unit id="0f2d0f71428756b986ebaa5435a895c9fa85f213" translate="yes" xml:space="preserve">
          <source>For ordering (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, etc) the rules are different. Interface and address objects with the same IP version can be compared, and the address objects will always sort before the interface objects. Two interface objects are first compared by their networks and, if those are the same, then by their IP addresses.</source>
          <target state="translated">順序付け（ &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; など）の場合、ルールは異なります。同じIPバージョンのインターフェイスオブジェクトとアドレスオブジェクトを比較でき、アドレスオブジェクトは常にインターフェイスオブジェクトの前にソートされます。2つのインターフェースオブジェクトは、まずネットワークによって比較され、それらが同じである場合は、IPアドレスによって比較されます。</target>
        </trans-unit>
        <trans-unit id="1a78e5fc164b6225aab0e8520457ff6f179c8031" translate="yes" xml:space="preserve">
          <source>For other containers see the built-in &lt;a href=&quot;stdtypes#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; classes, as well as the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">その他のコンテナーについては、組み込みの&lt;a href=&quot;stdtypes#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd75d884bb310e831015ffaf69d74418b45d2e9b" translate="yes" xml:space="preserve">
          <source>For other containers see the built-in &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; classes, as well as the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">他のコンテナについては、組み込みの&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールをご覧ください。</target>
        </trans-unit>
        <trans-unit id="806eb52bec9293c5c5e9f3e57a2e9b6409b111da" translate="yes" xml:space="preserve">
          <source>For other containers see the built-in &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; classes, as well as the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">その他のコンテナーについては、組み込みの&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラス、および&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="3e3b71d8294ed183632143849e0c5e2186ee11c5" translate="yes" xml:space="preserve">
          <source>For other non-POSIX platforms, currently just returns &lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他の非POSIXプラットフォームの場合、現在は&lt;a href=&quot;sys#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; を&lt;/a&gt;返すだけです。</target>
        </trans-unit>
        <trans-unit id="43510e47adddfe2347126cf63725f54b5b8386f0" translate="yes" xml:space="preserve">
          <source>For other systems, the values are:</source>
          <target state="translated">他のシステムの場合、値は</target>
        </trans-unit>
        <trans-unit id="80bfe13e7a83c037584f2ad34a471b944fb57186" translate="yes" xml:space="preserve">
          <source>For packages located in the filesystem, which have already been imported, this is the rough equivalent of:</source>
          <target state="translated">ファイルシステムにあるパッケージで、すでにインポート済みのものについては、これが大まかな意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="5a76a860e58a82ab240c54a9335a87b67ecb80d9" translate="yes" xml:space="preserve">
          <source>For passing messages one can use &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe()&lt;/code&gt;&lt;/a&gt; (for a connection between two processes) or a queue (which allows multiple producers and consumers).</source>
          <target state="translated">メッセージを渡すには、&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe()&lt;/code&gt; &lt;/a&gt;（2つのプロセス間の接続の場合）またはキュー（複数のプロデューサーとコンシューマーを許可する）を使用できます。</target>
        </trans-unit>
        <trans-unit id="501f766e72b164e7c677bd88bbc6c17ac2be5b93" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt;&lt;code&gt;reducer_override()&lt;/code&gt;&lt;/a&gt; may not be called for the following objects: &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, and exact instances of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パフォーマンス上の理由から、次のオブジェクトに対して&lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt; &lt;code&gt;reducer_override()&lt;/code&gt; を呼び出す&lt;/a&gt;ことはできません： &lt;code&gt;None&lt;/code&gt; 、 &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;False&lt;/code&gt; 、および&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; の&lt;/a&gt;正確なインスタンス。</target>
        </trans-unit>
        <trans-unit id="7dc577194da823efb388a7e912288fbb2216f9ea" translate="yes" xml:space="preserve">
          <source>For positional arguments with &lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; equal to &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt;, the &lt;code&gt;default&lt;/code&gt; value is used when no command-line argument was present:</source>
          <target state="translated">&lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt;が &lt;code&gt;?&lt;/code&gt; に等しい位置引数の場合 または &lt;code&gt;*&lt;/code&gt; 、コマンドライン引数が存在しない場合は &lt;code&gt;default&lt;/code&gt; 値が使用されます。</target>
        </trans-unit>
        <trans-unit id="8b4a550eec3b311ec7c0b5c122c8cd1aa045b2d0" translate="yes" xml:space="preserve">
          <source>For practical suggestions on how to design cooperative classes using &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;guide to using super()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;を使用して協調クラスを設計する方法に関する実際的な提案については、&lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;super（）の使用ガイドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6b9cd2e27090d9128abe570d2d9cdaa38c3b4f0" translate="yes" xml:space="preserve">
          <source>For projects where startup time is critical, this class allows for potentially minimizing the cost of loading a module if it is never used. For projects where startup time is not essential then use of this class is &lt;strong&gt;heavily&lt;/strong&gt; discouraged due to error messages created during loading being postponed and thus occurring out of context.</source>
          <target state="translated">起動時間が重要なプロジェクトの場合、このクラスを使用すると、モジュールが使用されない場合にモジュールをロードするコストを最小限に抑えることができます。起動時間が重要でないプロジェクトの場合、ロード中に作成されたエラーメッセージが延期され、コンテキスト外で発生するため、このクラスの使用は&lt;strong&gt;大幅に&lt;/strong&gt;推奨されません。</target>
        </trans-unit>
        <trans-unit id="78750474069e0c64d5febba081125312d17b6e79" translate="yes" xml:space="preserve">
          <source>For reading and writing &lt;code&gt;.gz&lt;/code&gt; files see the &lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;.gz&lt;/code&gt; ファイルの読み取りと書き込みについては、&lt;a href=&quot;gzip#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="437ad1fe5a8a295c25c839fc49c827535f9be5a7" translate="yes" xml:space="preserve">
          <source>For scoped addresses as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4007.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4007&lt;/strong&gt;&lt;/a&gt;, this property identifies the particular zone of the address&amp;rsquo;s scope that the address belongs to, as a string. When no scope zone is specified, this property will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4007.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4007&lt;/strong&gt;&lt;/a&gt;で定義され&lt;strong&gt;ている&lt;/strong&gt;スコープ付きアドレスの場合、このプロパティは、アドレスが属するアドレスのスコープの特定のゾーンを文字列として識別します。スコープゾーンが指定されていない場合、このプロパティは &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="51794c9a03db663b665c1244d6fcc6729a11742e" translate="yes" xml:space="preserve">
          <source>For seekable output streams, the &lt;code&gt;wave&lt;/code&gt; header will automatically be updated to reflect the number of frames actually written. For unseekable streams, the &lt;em&gt;nframes&lt;/em&gt; value must be accurate when the first frame data is written. An accurate &lt;em&gt;nframes&lt;/em&gt; value can be achieved either by calling &lt;a href=&quot;#wave.Wave_write.setnframes&quot;&gt;&lt;code&gt;setnframes()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#wave.Wave_write.setparams&quot;&gt;&lt;code&gt;setparams()&lt;/code&gt;&lt;/a&gt; with the number of frames that will be written before &lt;a href=&quot;#wave.Wave_write.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is called and then using &lt;a href=&quot;#wave.Wave_write.writeframesraw&quot;&gt;&lt;code&gt;writeframesraw()&lt;/code&gt;&lt;/a&gt; to write the frame data, or by calling &lt;a href=&quot;#wave.Wave_write.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt; with all of the frame data to be written. In the latter case &lt;a href=&quot;#wave.Wave_write.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt; will calculate the number of frames in the data and set &lt;em&gt;nframes&lt;/em&gt; accordingly before writing the frame data.</source>
          <target state="translated">シーク可能な出力ストリームの場合、実際に書き込まれたフレームの数を反映するように &lt;code&gt;wave&lt;/code&gt; ヘッダーが自動的に更新されます。シークできないストリームの場合、最初のフレームデータが書き込まれるとき、&lt;em&gt;nframes&lt;/em&gt;値は正確でなければなりません。正確な&lt;em&gt;nframes&lt;/em&gt;値は、&lt;a href=&quot;#wave.Wave_write.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;が呼び出される前に書き込まれるフレームの数を指定して&lt;a href=&quot;#wave.Wave_write.setnframes&quot;&gt; &lt;code&gt;setnframes()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#wave.Wave_write.setparams&quot;&gt; &lt;code&gt;setparams()&lt;/code&gt; &lt;/a&gt;を呼び出し、次に&lt;a href=&quot;#wave.Wave_write.writeframesraw&quot;&gt; &lt;code&gt;writeframesraw()&lt;/code&gt; &lt;/a&gt;を使用してフレームデータを書き込むか、&lt;a href=&quot;#wave.Wave_write.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって実現できます。すべてのフレームデータが書き込まれます。後者の場合、&lt;a href=&quot;#wave.Wave_write.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; &lt;/a&gt;はデータのフレーム数を計算して設定します&lt;em&gt;&lt;/em&gt;フレームデータを書き込む前に、それに応じて&lt;em&gt;nframes&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="04adcba5227396c66c494ff68cad07039f1493f6" translate="yes" xml:space="preserve">
          <source>For server operation, typically you&amp;rsquo;ll need to have a server certificate, and private key, each in a file. You&amp;rsquo;ll first create a context holding the key and the certificate, so that clients can check your authenticity. Then you&amp;rsquo;ll open a socket, bind it to a port, call &lt;code&gt;listen()&lt;/code&gt; on it, and start waiting for clients to connect:</source>
          <target state="translated">サーバーの操作では、通常、サーバー証明書と秘密キーがそれぞれファイルに含まれている必要があります。最初に、キーと証明書を保持するコンテキストを作成して、クライアントがあなたの信憑性をチェックできるようにします。次に、ソケットを開いてポートにバインドし、 &lt;code&gt;listen()&lt;/code&gt; を呼び出して、クライアントの接続を待機します。</target>
        </trans-unit>
        <trans-unit id="93d8949164ba6462cf8fdab9836ce0f2c519f424" translate="yes" xml:space="preserve">
          <source>For short options (options only one character long), the option and its value can be concatenated:</source>
          <target state="translated">短いオプシ ョ ン (オプシ ョ ンの長 さ が 1 文字のみの場合)では、 オプシ ョ ン と その値を連結す る こ と がで き ます。</target>
        </trans-unit>
        <trans-unit id="8894fe625e330e22f451e4d7a6fe84725760ab62" translate="yes" xml:space="preserve">
          <source>For simple text calendars this module provides the following functions.</source>
          <target state="translated">シンプルなテキストカレンダーのために、このモジュールは以下の関数を提供します。</target>
        </trans-unit>
        <trans-unit id="f002790c6797d5ebea652915cb6f6647fee569f5" translate="yes" xml:space="preserve">
          <source>For some &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;s, Python displays the character position of the syntax error, using a &lt;code&gt;^&lt;/code&gt; marker:</source>
          <target state="translated">一部の&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;の場合、Pythonは &lt;code&gt;^&lt;/code&gt; マーカーを使用して構文エラーの文字位置を表示します。</target>
        </trans-unit>
        <trans-unit id="2a42a868523cbc58a8db9f025c08ecb1cde2a8d5" translate="yes" xml:space="preserve">
          <source>For some applications, it may be more convenient to have the least integer &lt;em&gt;a&lt;/em&gt; such that &lt;em&gt;n&lt;/em&gt; &amp;le; &lt;em&gt;a&lt;/em&gt;&amp;sup2;, or in other words the ceiling of the exact square root of &lt;em&gt;n&lt;/em&gt;. For positive &lt;em&gt;n&lt;/em&gt;, this can be computed using &lt;code&gt;a = 1 + isqrt(n - 1)&lt;/code&gt;.</source>
          <target state="translated">いくつかの用途では、整数以上を有することがより便利であるように&lt;em&gt;、N&lt;/em&gt; &amp;le; の正確な平方根の&amp;sup2;、すなわち天井&lt;em&gt;N&lt;/em&gt;。正の&lt;em&gt;nの場合&lt;/em&gt;、これは &lt;code&gt;a = 1 + isqrt(n - 1)&lt;/code&gt; を使用して計算できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="648573c91e5f02118dab0f39da9d75637b36572a" translate="yes" xml:space="preserve">
          <source>For some use cases, there are good alternatives to &lt;a href=&quot;#sum&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;. The preferred, fast way to concatenate a sequence of strings is by calling &lt;code&gt;''.join(sequence)&lt;/code&gt;. To add floating point values with extended precision, see &lt;a href=&quot;math#math.fsum&quot;&gt;&lt;code&gt;math.fsum()&lt;/code&gt;&lt;/a&gt;. To concatenate a series of iterables, consider using &lt;a href=&quot;itertools#itertools.chain&quot;&gt;&lt;code&gt;itertools.chain()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">いくつかのユースケースでは、&lt;a href=&quot;#sum&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; に&lt;/a&gt;代わる優れた方法があります。文字列のシーケンスを連結するための推奨される高速な方法は、 &lt;code&gt;''.join(sequence)&lt;/code&gt; 呼び出すことです。拡張精度で浮動小数点値を追加するには、&lt;a href=&quot;math#math.fsum&quot;&gt; &lt;code&gt;math.fsum()&lt;/code&gt; を&lt;/a&gt;参照してください。一連の反復可能&lt;a href=&quot;itertools#itertools.chain&quot;&gt; &lt;code&gt;itertools.chain()&lt;/code&gt; &lt;/a&gt;を連結するには、itertools.chain（）の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="96785c718078e7660a88cdec515cc89c2714da8a" translate="yes" xml:space="preserve">
          <source>For sorting examples and a brief sorting tutorial, see &lt;a href=&quot;https://docs.python.org/3.8/howto/sorting.html#sortinghowto&quot;&gt;Sorting HOW TO&lt;/a&gt;.</source>
          <target state="translated">並べ替えの例と簡単な並べ替えのチュートリアルについては、「&lt;a href=&quot;https://docs.python.org/3.8/howto/sorting.html#sortinghowto&quot;&gt;並べ替えの方法&lt;/a&gt;」をご覧ください。</target>
        </trans-unit>
        <trans-unit id="dbcd408d30938f057d8d9f036a2b7cf4ca508481" translate="yes" xml:space="preserve">
          <source>For sorting examples and a brief sorting tutorial, see &lt;a href=&quot;https://docs.python.org/3.9/howto/sorting.html#sortinghowto&quot;&gt;Sorting HOW TO&lt;/a&gt;.</source>
          <target state="translated">並べ替えの例と簡単な並べ替えのチュートリアルについては、&lt;a href=&quot;https://docs.python.org/3.9/howto/sorting.html#sortinghowto&quot;&gt;並べ替えの方法を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c2029c5ee892a94642125539a40e6d42df89f30e" translate="yes" xml:space="preserve">
          <source>For special purposes, there is a second format for &lt;em&gt;mode&lt;/em&gt;: &lt;code&gt;'filemode|[compression]'&lt;/code&gt;. &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object that processes its data as a stream of blocks. No random seeking will be done on the file. If given, &lt;em&gt;fileobj&lt;/em&gt; may be any object that has a &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; method (depending on the &lt;em&gt;mode&lt;/em&gt;). &lt;em&gt;bufsize&lt;/em&gt; specifies the blocksize and defaults to &lt;code&gt;20 * 512&lt;/code&gt; bytes. Use this variant in combination with e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, a socket &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; or a tape device. However, such a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object is limited in that it does not allow random access, see &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt;. The currently possible modes:</source>
          <target state="translated">特別な目的のために、&lt;em&gt;モード&lt;/em&gt;には2番目の形式があり&lt;em&gt;ます&lt;/em&gt;： &lt;code&gt;'filemode|[compression]'&lt;/code&gt; 。&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;は、データをブロックのストリームとして処理する&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。ファイルのランダムシークは行われません。指定する場合、&lt;em&gt;fileobj&lt;/em&gt;は、 &lt;code&gt;read()&lt;/code&gt; &lt;em&gt;モードに&lt;/em&gt;応じて &lt;code&gt;write()&lt;/code&gt; read（）またはwrite（）メソッドを持つ任意のオブジェクトにすることができます。&lt;em&gt;bufsize&lt;/em&gt;はブロックサイズを指定し、デフォルトは &lt;code&gt;20 * 512&lt;/code&gt; バイトです。このバリアントは、たとえば &lt;code&gt;sys.stdin&lt;/code&gt; 、ソケット&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト、&lt;/a&gt;またはテープデバイスと組み合わせて使用​​します。ただし、このような&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;オブジェクトはランダムアクセスを許可しないという制限があります。&lt;a href=&quot;#tar-examples&quot;&gt;例を&lt;/a&gt;参照してください。現在可能なモード：</target>
        </trans-unit>
        <trans-unit id="93f7d64328c04859d8e9d297410767bf48fcbc05" translate="yes" xml:space="preserve">
          <source>For special purposes, there is a second format for &lt;em&gt;mode&lt;/em&gt;: &lt;code&gt;'filemode|[compression]'&lt;/code&gt;. &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object that processes its data as a stream of blocks. No random seeking will be done on the file. If given, &lt;em&gt;fileobj&lt;/em&gt; may be any object that has a &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; method (depending on the &lt;em&gt;mode&lt;/em&gt;). &lt;em&gt;bufsize&lt;/em&gt; specifies the blocksize and defaults to &lt;code&gt;20 * 512&lt;/code&gt; bytes. Use this variant in combination with e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, a socket &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; or a tape device. However, such a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object is limited in that it does not allow random access, see &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt;. The currently possible modes:</source>
          <target state="translated">特別な目的のために、&lt;em&gt;モード&lt;/em&gt;には2番目の形式があり&lt;em&gt;ます&lt;/em&gt;： &lt;code&gt;'filemode|[compression]'&lt;/code&gt; 。&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;は、データをブロックのストリームとして処理する&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。ファイルに対してランダムなシークは行われません。指定されている場合、&lt;em&gt;fileobj&lt;/em&gt;は、 &lt;code&gt;read()&lt;/code&gt; &lt;em&gt;モードに&lt;/em&gt;応じて &lt;code&gt;write()&lt;/code&gt; read（）またはwrite（）メソッドを持つ任意のオブジェクトにすることができます。&lt;em&gt;bufsize&lt;/em&gt;はブロックサイズを指定し、デフォルトは &lt;code&gt;20 * 512&lt;/code&gt; バイトです。このバリアントは、 &lt;code&gt;sys.stdin&lt;/code&gt; 、ソケット&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト、&lt;/a&gt;またはテープデバイスなどと組み合わせて使用​​します。しかし、そのような&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;オブジェクトは、ランダムアクセスを許可しないという点で制限されています。&lt;a href=&quot;#tar-examples&quot;&gt;例を&lt;/a&gt;参照してください。現在可能なモード：</target>
        </trans-unit>
        <trans-unit id="9e724cc7dd34b70754120633fc82a51404b0a117" translate="yes" xml:space="preserve">
          <source>For supported platforms, &lt;em&gt;reuse_port&lt;/em&gt; can be used as a replacement for similar functionality. With &lt;em&gt;reuse_port&lt;/em&gt;, &lt;code&gt;SO_REUSEPORT&lt;/code&gt; is used instead, which specifically prevents processes with differing UIDs from assigning sockets to the same socket address.</source>
          <target state="translated">サポートされているプラ​​ットフォームでは、&lt;em&gt;reuse_port&lt;/em&gt;を同様の機能の代替として使用できます。&lt;em&gt;reuse_port&lt;/em&gt;、 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; は、具体的に同一のソケットアドレスにソケットを割り当てるからのUIDが異なるプロセスを防止する、代わりに使用されています。</target>
        </trans-unit>
        <trans-unit id="5159af1687415ddd28bfc2a1995bd20e96f9261b" translate="yes" xml:space="preserve">
          <source>For syntax errors - the compiler error message.</source>
          <target state="translated">構文エラーの場合-コンパイラのエラー・メッセージ。</target>
        </trans-unit>
        <trans-unit id="b24d7db1fe29e271ea208c62a0cee2d863f7cfbe" translate="yes" xml:space="preserve">
          <source>For syntax errors - the file name where the error occurred.</source>
          <target state="translated">構文エラーの場合-エラーが発生したファイル名。</target>
        </trans-unit>
        <trans-unit id="fb118c31346734709d1426db6d074b4207011e55" translate="yes" xml:space="preserve">
          <source>For syntax errors - the line number where the error occurred.</source>
          <target state="translated">構文エラーの場合-エラーが発生した行番号。</target>
        </trans-unit>
        <trans-unit id="6b624e7edfb4d519a13cd70f09d17bbd81f6bbd3" translate="yes" xml:space="preserve">
          <source>For syntax errors - the offset into the text where the error occurred.</source>
          <target state="translated">構文エラーの場合-エラーが発生したテキストへのオフセット。</target>
        </trans-unit>
        <trans-unit id="c9aff1846aa222da04f164ff51a044fe126a6c43" translate="yes" xml:space="preserve">
          <source>For syntax errors - the text where the error occurred.</source>
          <target state="translated">構文エラーの場合-エラーが発生したテキスト。</target>
        </trans-unit>
        <trans-unit id="16bafc4e77e27d861636281e2b19c7e7fd37650e" translate="yes" xml:space="preserve">
          <source>For testcase &lt;em&gt;test&lt;/em&gt;, assert that the &lt;code&gt;sys.getsizeof&lt;/code&gt; for &lt;em&gt;o&lt;/em&gt; plus the GC header size equals &lt;em&gt;size&lt;/em&gt;.</source>
          <target state="translated">テストケース&lt;em&gt;テストの&lt;/em&gt;場合、&lt;em&gt;o&lt;/em&gt;の &lt;code&gt;sys.getsizeof&lt;/code&gt; とGCヘッダーサイズの合計がsizeと等しいことをアサートし&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eedb78895083bc4249b703fbfb11d74b4c08f51f" translate="yes" xml:space="preserve">
          <source>For text encodings and bytes-to-bytes codecs, &lt;em&gt;input&lt;/em&gt; must be a bytes object or one which provides the read-only buffer interface &amp;ndash; for example, buffer objects and memory mapped files.</source>
          <target state="translated">テキストエンコーディングとバイトツーバイトコーデックの場合、&lt;em&gt;入力&lt;/em&gt;はバイトオブジェクトか、読み取り専用のバッファーインターフェイスを提供するもの（バッファーオブジェクトやメモリマップファイルなど）でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4ede7b9bd3827048a9fc41eb186f8c2ae84f6480" translate="yes" xml:space="preserve">
          <source>For text mode, a &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; object is created, and wrapped in an &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; instance with the specified encoding, error handling behavior, and line ending(s).</source>
          <target state="translated">テキストモードの場合、&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、指定されたエンコーディング、エラー処理動作、&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;インスタンスにラップされます。</target>
        </trans-unit>
        <trans-unit id="f2fd028679f350a23785663a8ce425b5391b8814" translate="yes" xml:space="preserve">
          <source>For text mode, a &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; object is created, and wrapped in an &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; instance with the specified encoding, error handling behavior, and line ending(s).</source>
          <target state="translated">テキストモードの場合、&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、指定されたエンコーディング、エラー処理動作、および&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;インスタンスにラップされます。</target>
        </trans-unit>
        <trans-unit id="5c05c8db2bd0aaaf25d15dba3e01523970a643f1" translate="yes" xml:space="preserve">
          <source>For text mode, a &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; object is created, and wrapped in an &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; instance with the specified encoding, error handling behavior, and line ending(s).</source>
          <target state="translated">テキストモードの場合、&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、指定されたエンコーディング、エラー処理動作、&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;インスタンスにラップされます。</target>
        </trans-unit>
        <trans-unit id="7deee04b6bb5f78a5dbf6565cdba6d3b455b142f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#datetime.datetime.strptime&quot;&gt;&lt;code&gt;datetime.strptime()&lt;/code&gt;&lt;/a&gt; class method, the default value is &lt;code&gt;1900-01-01T00:00:00.000&lt;/code&gt;: any components not specified in the format string will be pulled from the default value. &lt;a href=&quot;#id8&quot; id=&quot;id4&quot;&gt;4&lt;/a&gt;</source>
          <target state="translated">ため&lt;a href=&quot;#datetime.datetime.strptime&quot;&gt; &lt;code&gt;datetime.strptime()&lt;/code&gt; &lt;/a&gt;クラスメソッド、デフォルト値は &lt;code&gt;1900-01-01T00:00:00.000&lt;/code&gt; ：書式文字列で指定されていない任意の成分は、デフォルト値から引かれます。&lt;a href=&quot;#id8&quot; id=&quot;id4&quot;&gt;4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bb5071a479f35cf824cac2d9cf3dc01818e29a8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#math.ceil&quot;&gt;&lt;code&gt;ceil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#math.floor&quot;&gt;&lt;code&gt;floor()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#math.modf&quot;&gt;&lt;code&gt;modf()&lt;/code&gt;&lt;/a&gt; functions, note that &lt;em&gt;all&lt;/em&gt; floating-point numbers of sufficiently large magnitude are exact integers. Python floats typically carry no more than 53 bits of precision (the same as the platform C double type), in which case any float &lt;em&gt;x&lt;/em&gt; with &lt;code&gt;abs(x) &amp;gt;= 2**52&lt;/code&gt; necessarily has no fractional bits.</source>
          <target state="translated">ため&lt;a href=&quot;#math.ceil&quot;&gt; &lt;code&gt;ceil()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#math.floor&quot;&gt; &lt;code&gt;floor()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#math.modf&quot;&gt; &lt;code&gt;modf()&lt;/code&gt; &lt;/a&gt;関数、なお、&lt;em&gt;全て&lt;/em&gt;十分に大きな大きさの浮動小数点数は、正確な整数です。Python floatは通常、53ビット以下の精度（プラットフォームCのdouble型と同じ &lt;code&gt;abs(x) &amp;gt;= 2**52&lt;/code&gt; 持ちます。この場合、abs（x）&amp;gt; = 2 ** 52の float &lt;em&gt;x&lt;/em&gt;は必ずしも小数ビットを持ちません。</target>
        </trans-unit>
        <trans-unit id="52f764e70635b353f2ccd83e7d601c4b5abba3dd" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;'?'&lt;/code&gt; format character, the return value is either &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. When packing, the truth value of the argument object is used. Either 0 or 1 in the native or standard bool representation will be packed, and any non-zero value will be &lt;code&gt;True&lt;/code&gt; when unpacking.</source>
          <target state="translated">以下のための &lt;code&gt;'?'&lt;/code&gt; 形式文字の場合、戻り値は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;です。パッキング時には、引数オブジェクトの真理値が使用されます。ネイティブまたは標準のブール表現の0または1のいずれかがパックされ、ゼロ以外の値はアンパック時に &lt;code&gt;True&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="611001d6738e1356ca1e9161015c1526eb451d76" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'d'&lt;/code&gt; and &lt;code&gt;'e'&lt;/code&gt; conversion codes, the packed representation uses the IEEE 754 binary32, binary64 or binary16 format (for &lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'d'&lt;/code&gt; or &lt;code&gt;'e'&lt;/code&gt; respectively), regardless of the floating-point format used by the platform.</source>
          <target state="translated">ための &lt;code&gt;'f'&lt;/code&gt; 、 &lt;code&gt;'d'&lt;/code&gt; および &lt;code&gt;'e'&lt;/code&gt; 変換コード、パックされた表現は、IEEE 754 binary32使用し、binary64又はbinary16フォーマット（のための &lt;code&gt;'f'&lt;/code&gt; 、 &lt;code&gt;'d'&lt;/code&gt; または &lt;code&gt;'e'&lt;/code&gt; に関係なく浮動のそれぞれ）プラットフォームで使用されるポイント形式。</target>
        </trans-unit>
        <trans-unit id="7f192f51888cd6acd09ccae9c792d0d145d044ae" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;'s'&lt;/code&gt; format character, the count is interpreted as the length of the bytes, not a repeat count like for the other format characters; for example, &lt;code&gt;'10s'&lt;/code&gt; means a single 10-byte string, while &lt;code&gt;'10c'&lt;/code&gt; means 10 characters. If a count is not given, it defaults to 1. For packing, the string is truncated or padded with null bytes as appropriate to make it fit. For unpacking, the resulting bytes object always has exactly the specified number of bytes. As a special case, &lt;code&gt;'0s'&lt;/code&gt; means a single, empty string (while &lt;code&gt;'0c'&lt;/code&gt; means 0 characters).</source>
          <target state="translated">以下のために &lt;code&gt;'s'&lt;/code&gt; フォーマット文字、カウントはバイトの長さではなく、他の形式の文字のような繰り返し回数として解釈されます。たとえば、 &lt;code&gt;'10s'&lt;/code&gt; は単一の10バイト文字列を意味し、 &lt;code&gt;'10c'&lt;/code&gt; は10文字を意味します。カウントが指定されていない場合、デフォルトは1です。パッキングの場合、文字列は、適切になるように切り捨てられるか、nullバイトが埋め込まれます。アンパックの場合、結果のbytesオブジェクトは常に指定されたバイト数になります。特殊なケースとして、 &lt;code&gt;'0s'&lt;/code&gt; は単一の空の文字列を意味します（ &lt;code&gt;'0c'&lt;/code&gt; は0文字を意味します）。</target>
        </trans-unit>
        <trans-unit id="7a57bec2e014081dae4b27453586de233679ac55" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Document&lt;/code&gt; node, an additional keyword argument &lt;em&gt;encoding&lt;/em&gt; can be used to specify the encoding field of the XML header.</source>
          <target state="translated">以下のために &lt;code&gt;Document&lt;/code&gt; ノード、追加のキーワード引数の&lt;em&gt;符号化は、&lt;/em&gt; XMLヘッダの符号化フィールドを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="e765b069ab6f4fd670732d7dd9f9ae6b12c9e58d" translate="yes" xml:space="preserve">
          <source>For the &lt;em&gt;isolation_level&lt;/em&gt; parameter, please see the &lt;a href=&quot;#sqlite3.Connection.isolation_level&quot;&gt;&lt;code&gt;isolation_level&lt;/code&gt;&lt;/a&gt; property of &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;em&gt;ISOLATION_LEVEL&lt;/em&gt;パラメータは、以下を参照してください&lt;a href=&quot;#sqlite3.Connection.isolation_level&quot;&gt; &lt;code&gt;isolation_level&lt;/code&gt; &lt;/a&gt;の財産&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="a8ffbaaffc9a1867b68ff05863b8b09074fd8418" translate="yes" xml:space="preserve">
          <source>For the &lt;em&gt;names&lt;/em&gt; parameter, please see the description of the translation object&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以下のために&lt;em&gt;名前の&lt;/em&gt;パラメータ、翻訳オブジェクトのの説明を参照してください&lt;a href=&quot;#gettext.NullTranslations.install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="b4c0224e26f9eea1c70ca73fc7698daec9161151" translate="yes" xml:space="preserve">
          <source>For the Python events, specialized functions (see below) are called. For the C events, no action is taken.</source>
          <target state="translated">Python のイベントでは、専用の関数(下記参照)が呼び出されます。C イベントについては、何もしません。</target>
        </trans-unit>
        <trans-unit id="13289039e0f8416eb74312f3daa07466ee8be0ee" translate="yes" xml:space="preserve">
          <source>For the above Timezone constants (&lt;a href=&quot;#time.altzone&quot;&gt;&lt;code&gt;altzone&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#time.daylight&quot;&gt;&lt;code&gt;daylight&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#time.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#time.tzname&quot;&gt;&lt;code&gt;tzname&lt;/code&gt;&lt;/a&gt;), the value is determined by the timezone rules in effect at module load time or the last time &lt;a href=&quot;#time.tzset&quot;&gt;&lt;code&gt;tzset()&lt;/code&gt;&lt;/a&gt; is called and may be incorrect for times in the past. It is recommended to use the &lt;code&gt;tm_gmtoff&lt;/code&gt; and &lt;code&gt;tm_zone&lt;/code&gt; results from &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; to obtain timezone information.</source>
          <target state="translated">上記のタイムゾーン定数（&lt;a href=&quot;#time.altzone&quot;&gt; &lt;code&gt;altzone&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#time.daylight&quot;&gt; &lt;code&gt;daylight&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#time.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#time.tzname&quot;&gt; &lt;code&gt;tzname&lt;/code&gt; &lt;/a&gt;）の場合、値はモジュールのロード時に有効なタイムゾーンルールによって決定されるか、最後に&lt;a href=&quot;#time.tzset&quot;&gt; &lt;code&gt;tzset()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに決定され、過去の時間については正しくない可能性があります。タイムゾーン情報を取得するには、&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;からの &lt;code&gt;tm_gmtoff&lt;/code&gt; および &lt;code&gt;tm_zone&lt;/code&gt; の結果を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7b9a64815701e952e36b227a62e8302ec1c91dee" translate="yes" xml:space="preserve">
          <source>For the benefit of object persistence, the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module supports the notion of a reference to an object outside the pickled data stream. Such objects are referenced by a persistent ID, which should be either a string of alphanumeric characters (for protocol 0) &lt;a href=&quot;#id11&quot; id=&quot;id6&quot;&gt;5&lt;/a&gt; or just an arbitrary object (for any newer protocol).</source>
          <target state="translated">オブジェクトの永続性のために、&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは、ピクルされたデータストリームの外部にあるオブジェクトへの参照の概念をサポートしています。このようなオブジェクトは、永続IDによって参照されます。永続IDは、英数字の文字列（プロトコル0の場合）&lt;a href=&quot;#id11&quot; id=&quot;id6&quot;&gt;5&lt;/a&gt;または任意のオブジェクト（新しいプロトコルの場合）のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="b045188bbc955a84058e3770ed7a3666adb42d3f" translate="yes" xml:space="preserve">
          <source>For the benefits of packaging tool authors and users seeking a deeper understanding of the details of the current packaging and distribution system, the legacy &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; based user documentation and API reference remain available:</source>
          <target state="translated">現在のパッケージングおよび配布システムの詳細をより深く理解しようとしているパッケージングツールの作成者とユーザーのために、従来の&lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;ベースのユーザードキュメントとAPIリファレンスを引き続き利用できます。</target>
        </trans-unit>
        <trans-unit id="1462943ac090bb5ad3073f88b1c8562ef1b6a082" translate="yes" xml:space="preserve">
          <source>For the built-in types supporting &lt;a href=&quot;#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt;, values are rounded to the closest multiple of 10 to the power minus &lt;em&gt;ndigits&lt;/em&gt;; if two multiples are equally close, rounding is done toward the even choice (so, for example, both &lt;code&gt;round(0.5)&lt;/code&gt; and &lt;code&gt;round(-0.5)&lt;/code&gt; are &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;round(1.5)&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;). Any integer value is valid for &lt;em&gt;ndigits&lt;/em&gt; (positive, zero, or negative). The return value is an integer if &lt;em&gt;ndigits&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;. Otherwise the return value has the same type as &lt;em&gt;number&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; を&lt;/a&gt;サポートする組み込み型の場合、値は10の累乗から&lt;em&gt;ndigits&lt;/em&gt;を引いた最も近い倍数に丸められます。2つの倍数が等しく近い場合、丸めは偶数の選択に向かって行われます（たとえば、 &lt;code&gt;round(0.5)&lt;/code&gt; と &lt;code&gt;round(-0.5)&lt;/code&gt; は両方とも &lt;code&gt;0&lt;/code&gt; であり、 &lt;code&gt;round(1.5)&lt;/code&gt; は &lt;code&gt;2&lt;/code&gt; です）。任意の整数値が&lt;em&gt;n桁&lt;/em&gt;（正、ゼロ、または負）に有効です。&lt;em&gt;ndigits&lt;/em&gt;が省略されている場合、または &lt;code&gt;None&lt;/code&gt; の場合、戻り値は整数です。それ以外の場合、戻り値の型は&lt;em&gt;number&lt;/em&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="2e1c161596883b7277d9a4af44c45f35acd87877" translate="yes" xml:space="preserve">
          <source>For the following attributes and methods, see the corresponding documentation of the &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">次の属性とメソッドについては、&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;クラスの対応するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="73a23e456670e90cd6606464d13a857da8671966" translate="yes" xml:space="preserve">
          <source>For the following attributes, see the corresponding documentation of the &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">以下の属性については、&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;クラスの対応するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e2be20c20d73d48c96e4a903fa7ca4c398ed3e7e" translate="yes" xml:space="preserve">
          <source>For the majority of new code, &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; are strongly recommended, since &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; break some semantic promises of an enumeration (by being comparable to integers, and thus by transitivity to other unrelated enumerations). &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt; should be used only in cases where &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; will not do; for example, when integer constants are replaced with enumerations, or for interoperability with other systems.</source>
          <target state="translated">新しいコードの大部分では、&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; が&lt;/a&gt;列挙型のいくつかのセマンティックな約束を破るので（整数に匹敵することにより、したがって他の無関係な列挙型への推移性により）、&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;を強くお勧めします。&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;が機能しない場合にのみ使用してください。たとえば、整数定数が列挙型に置き換えられたとき、または他のシステムとの相互運用性のために。</target>
        </trans-unit>
        <trans-unit id="71b157ee65429737704fc6d86dc2ce45635ad80d" translate="yes" xml:space="preserve">
          <source>For the same reason, handling of format strings containing Unicode code points that can&amp;rsquo;t be represented in the charset of the current locale is also platform-dependent. On some platforms such code points are preserved intact in the output, while on others &lt;code&gt;strftime&lt;/code&gt; may raise &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; or return an empty string instead.</source>
          <target state="translated">同じ理由で、現在のロケールの文字セットでは表現できないUnicodeコードポイントを含むフォーマット文字列の処理もプラットフォームに依存します。一部のプラットフォームでは、このようなコードポイントはそのまま出力に保持されますが、他のプラットフォームでは、 &lt;code&gt;strftime&lt;/code&gt; が&lt;a href=&quot;exceptions#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; を発生さ&lt;/a&gt;せるか、代わりに空の文字列を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="1a73815f89f761330d046832365445a6b98cdffe" translate="yes" xml:space="preserve">
          <source>For the simplest code, use the &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pickle.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">最も単純なコードでは、&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#pickle.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;関数とload（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="f1e544ac7100874cff048477249bb3ab3c46c877" translate="yes" xml:space="preserve">
          <source>For the string argument, abbreviations can be used for any key names, as long as the abbreviation is unambiguous.</source>
          <target state="translated">文字列引数では、省略形が曖昧でない限り、任意のキー名に省略形を使用することができます。</target>
        </trans-unit>
        <trans-unit id="58f6887a34bff030cddfd82bd93f8fa6b82b32ef" translate="yes" xml:space="preserve">
          <source>For the subset of &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; format strings currently supported by &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; are equal if &lt;code&gt;v.tolist() == w.tolist()&lt;/code&gt;:</source>
          <target state="translated">現在&lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist()&lt;/code&gt; &lt;/a&gt;でサポートされている&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;フォーマット文字列のサブセットでは、 &lt;code&gt;v.tolist() == w.tolist()&lt;/code&gt; 場合、 &lt;code&gt;v&lt;/code&gt; と &lt;code&gt;w&lt;/code&gt; は等しくなります。</target>
        </trans-unit>
        <trans-unit id="e73a0afbcd4ef09c3f17e9fa247b96c32dcb9705" translate="yes" xml:space="preserve">
          <source>For the time being this module is intended to be called as a script. However it is possible to import it into an IDE and use the function &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt; described below.</source>
          <target state="translated">当分の間、このモジュールはスクリプトとして呼び出されることを意図しています。ただし、それをIDEにインポートして、以下で説明する関数&lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; &lt;/a&gt;を使用することは可能です。</target>
        </trans-unit>
        <trans-unit id="3ca2089e1b1b8df1c2f032b1f3536ad34cfdfa0f" translate="yes" xml:space="preserve">
          <source>For these cases, the &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; function is handy.</source>
          <target state="translated">これらのケースでは、&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;関数が便利です。</target>
        </trans-unit>
        <trans-unit id="38474aedf079e8a0abf4fea4dc3de7267bfeb1eb" translate="yes" xml:space="preserve">
          <source>For these objects, only the interfaces are relevant; they are normally not instantiated by the application itself. Since Python does not have an explicit notion of interface, they are formally introduced as classes, but applications may use implementations which do not inherit from the provided classes. The &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.Locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Attributes&lt;/code&gt;, &lt;code&gt;AttributesNS&lt;/code&gt;, and &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; interfaces are defined in the module &lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt;&lt;code&gt;xml.sax.xmlreader&lt;/code&gt;&lt;/a&gt;. The handler interfaces are defined in &lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;. For convenience, &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; (which is often instantiated directly) and the handler classes are also available from &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt;. These interfaces are described below.</source>
          <target state="translated">これらのオブジェクトでは、インターフェースのみが関連します。通常、アプリケーション自体によってインスタンス化されることはありません。Pythonにはインターフェースの明示的な概念がないため、正式にはクラスとして導入されますが、アプリケーションでは、提供されたクラスを継承しない実装を使用できます。&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.Locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;Attributes&lt;/code&gt; 、 &lt;code&gt;AttributesNS&lt;/code&gt; 、及び&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; の&lt;/a&gt;インターフェイスは、モジュールで定義されて&lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt; &lt;code&gt;xml.sax.xmlreader&lt;/code&gt; &lt;/a&gt;。ハンドラーインターフェースは&lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt; &lt;code&gt;xml.sax.handler&lt;/code&gt; で&lt;/a&gt;定義されています。便宜上、&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;（多くの場合、直接インスタンス化されます）とハンドラークラスは&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;からも利用できます。。これらのインターフェースについて、以下で説明します。</target>
        </trans-unit>
        <trans-unit id="ee46acf978b898ca00a8f81ccc140323b27a7cf5" translate="yes" xml:space="preserve">
          <source>For this reason, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; also supports a notion of &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; reporting flags specific to &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; support, via this function:</source>
          <target state="translated">このため、&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; のは&lt;/a&gt;またの概念をサポート&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;に報告フラグの特定の&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;この機能によって、サポートを：</target>
        </trans-unit>
        <trans-unit id="c13f2c1afd203047a3facf9de7c005252d73b85c" translate="yes" xml:space="preserve">
          <source>For this reason, &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; provides a &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt;&lt;code&gt;FunctionTestCase&lt;/code&gt;&lt;/a&gt; class. This subclass of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; can be used to wrap an existing test function. Set-up and tear-down functions can also be provided.</source>
          <target state="translated">このため、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; に&lt;/a&gt;は&lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt; &lt;code&gt;FunctionTestCase&lt;/code&gt; &lt;/a&gt;クラスが用意されています。&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; の&lt;/a&gt;このサブクラスは、既存のテスト関数をラップするために使用できます。セットアップおよびティアダウン機能も提供できます。</target>
        </trans-unit>
        <trans-unit id="65a7e5d1693de8c1b6156055b18a67eb702cc5ca" translate="yes" xml:space="preserve">
          <source>For this reason, you may want to control what gets unpickled by customizing &lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt;&lt;code&gt;Unpickler.find_class()&lt;/code&gt;&lt;/a&gt;. Unlike its name suggests, &lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt;&lt;code&gt;Unpickler.find_class()&lt;/code&gt;&lt;/a&gt; is called whenever a global (i.e., a class or a function) is requested. Thus it is possible to either completely forbid globals or restrict them to a safe subset.</source>
          <target state="translated">このため、&lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt; &lt;code&gt;Unpickler.find_class()&lt;/code&gt; を&lt;/a&gt;カスタマイズして、何がunpickされるかを制御したい場合があります。その名前が示すのとは異なり、&lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt; &lt;code&gt;Unpickler.find_class()&lt;/code&gt; &lt;/a&gt;は、グローバル（つまり、クラスまたは関数）が要求されるたびに呼び出されます。したがって、グローバルを完全に禁止するか、グローバルを安全なサブセットに制限することができます。</target>
        </trans-unit>
        <trans-unit id="e17084e55d94584dbb25c342418d6aac7734b582" translate="yes" xml:space="preserve">
          <source>For those cases, it is possible to subclass from the &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; class and implement a &lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt;&lt;code&gt;reducer_override()&lt;/code&gt;&lt;/a&gt; method. This method can return an arbitrary reduction tuple (see &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt;). It can alternatively return &lt;code&gt;NotImplemented&lt;/code&gt; to fallback to the traditional behavior.</source>
          <target state="translated">これらの場合、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;クラスからサブクラス化し、&lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt; &lt;code&gt;reducer_override()&lt;/code&gt; &lt;/a&gt;メソッドを実装することが可能です。このメソッドは、任意の縮&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;タプルを返すことができます（__reduce __（）を参照）。あるいは、 &lt;code&gt;NotImplemented&lt;/code&gt; を返して、従来の動作にフォールバックすることもできます。</target>
        </trans-unit>
        <trans-unit id="c6d2305fa8501efef901d74c92da8478ba9fafef" translate="yes" xml:space="preserve">
          <source>For those who want to manage their own token length, you can explicitly specify how much randomness is used for tokens by giving an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; argument to the various &lt;code&gt;token_*&lt;/code&gt; functions. That argument is taken as the number of bytes of randomness to use.</source>
          <target state="translated">独自のトークン長を管理したい場合は、さまざまな &lt;code&gt;token_*&lt;/code&gt; 関数に&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;引数を与えることにより、トークンに使用するランダム性の量を明示的に指定できます。その引数は、使用するランダム性のバイト数と見なされます。</target>
        </trans-unit>
        <trans-unit id="bab28f84b72c604f4046046ab996c3eb0c3e68fd" translate="yes" xml:space="preserve">
          <source>For top-level classes, None. For nested classes, the parent.</source>
          <target state="translated">トップレベル・クラスの場合は、None。入れ子になったクラスの場合は、親。</target>
        </trans-unit>
        <trans-unit id="d182afd5a541d26e3f1ed845af8ddb203dc4413e" translate="yes" xml:space="preserve">
          <source>For top-level functions, None. For nested functions, the parent.</source>
          <target state="translated">トップレベルの関数の場合は、None。入れ子になった関数の場合は、親。</target>
        </trans-unit>
        <trans-unit id="6a78b493fd8c37102ee3eff14bfd254085325210" translate="yes" xml:space="preserve">
          <source>For use with &lt;code&gt;BTPROTO_HCI&lt;/code&gt;. &lt;a href=&quot;#socket.HCI_FILTER&quot;&gt;&lt;code&gt;HCI_FILTER&lt;/code&gt;&lt;/a&gt; is not available for NetBSD or DragonFlyBSD. &lt;a href=&quot;#socket.HCI_TIME_STAMP&quot;&gt;&lt;code&gt;HCI_TIME_STAMP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.HCI_DATA_DIR&quot;&gt;&lt;code&gt;HCI_DATA_DIR&lt;/code&gt;&lt;/a&gt; are not available for FreeBSD, NetBSD, or DragonFlyBSD.</source>
          <target state="translated">&lt;code&gt;BTPROTO_HCI&lt;/code&gt; で使用します。&lt;a href=&quot;#socket.HCI_FILTER&quot;&gt; &lt;code&gt;HCI_FILTER&lt;/code&gt; &lt;/a&gt;は、NetBSDまたはDragonFlyBSDでは使用できません。&lt;a href=&quot;#socket.HCI_TIME_STAMP&quot;&gt; &lt;code&gt;HCI_TIME_STAMP&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#socket.HCI_DATA_DIR&quot;&gt; &lt;code&gt;HCI_DATA_DIR&lt;/code&gt; &lt;/a&gt;は、FreeBSD、NetBSD、またはDragonFlyBSDでは使用できません。</target>
        </trans-unit>
        <trans-unit id="ed2b5ac8be7dacc4312f352c9b986cd446f431b3" translate="yes" xml:space="preserve">
          <source>For variable-keyword arguments (&lt;code&gt;**kwargs&lt;/code&gt;) the default is an empty dict.</source>
          <target state="translated">可変キーワード引数（ &lt;code&gt;**kwargs&lt;/code&gt; ）の場合、デフォルトは空の辞書です。</target>
        </trans-unit>
        <trans-unit id="3dc4384699ee9666f410852cc46018f94c9db172" translate="yes" xml:space="preserve">
          <source>For variable-positional arguments (&lt;code&gt;*args&lt;/code&gt;) the default is an empty tuple.</source>
          <target state="translated">可変位置引数（ &lt;code&gt;*args&lt;/code&gt; ）の場合、デフォルトは空のタプルです。</target>
        </trans-unit>
        <trans-unit id="b7c7653bbef7bfc03abec2d286867e64e19e8e90" translate="yes" xml:space="preserve">
          <source>For whole format strings, use &lt;a href=&quot;#locale.format_string&quot;&gt;&lt;code&gt;format_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書式文字列全体については、&lt;a href=&quot;#locale.format_string&quot;&gt; &lt;code&gt;format_string()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="156d0d7f0e9413113c4283570b0df5af41af13a0" translate="yes" xml:space="preserve">
          <source>For zones constructed from file without specifying a &lt;code&gt;key&lt;/code&gt; parameter, this will be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; パラメータを指定せずにファイルから構築されたゾーンの場合、これは[ &lt;code&gt;None&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="04d9e9125490dc0b44c13e9f2f792a0f9450932b" translate="yes" xml:space="preserve">
          <source>Force as many objects as possible to be collected. This is needed because timely deallocation is not guaranteed by the garbage collector. This means that &lt;code&gt;__del__&lt;/code&gt; methods may be called later than expected and weakrefs may remain alive for longer than expected.</source>
          <target state="translated">できるだけ多くのオブジェクトを強制的に収集します。これは、ガベージコレクタによってタイムリーな割り当て解除が保証されないために必要です。つまり、 &lt;code&gt;__del__&lt;/code&gt; メソッドが予想よりも遅く呼び出され、weakrefが予想よりも長く存続する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6a939f545eb3ce830f616a1a28bc1a63e0fe5ed3" translate="yes" xml:space="preserve">
          <source>Force buffered data to be transmitted to the client. It&amp;rsquo;s okay if this method is a no-op (i.e., if &lt;a href=&quot;#wsgiref.handlers.BaseHandler._write&quot;&gt;&lt;code&gt;_write()&lt;/code&gt;&lt;/a&gt; actually sends the data).</source>
          <target state="translated">バッファリングされたデータを強制的にクライアントに送信します。このメソッドが何もしない場合（つまり、&lt;a href=&quot;#wsgiref.handlers.BaseHandler._write&quot;&gt; &lt;code&gt;_write()&lt;/code&gt; が&lt;/a&gt;実際にデータを送信する場合）は問題ありません。</target>
        </trans-unit>
        <trans-unit id="9e04e3f91bf11b867e737db3820385321c5dd5a3" translate="yes" xml:space="preserve">
          <source>Force bytes held in the buffer into the raw stream. A &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; should be raised if the raw stream blocks.</source>
          <target state="translated">バッファに保持されているバイトをrawストリームに強制します。A &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; は&lt;/a&gt;、生のストリームブロック場合に発生する必要があります。</target>
        </trans-unit>
        <trans-unit id="3814643afec1943c4c3295af6d5883427e7464b5" translate="yes" xml:space="preserve">
          <source>Force processing of all buffered data as if it were followed by an end-of-file mark. This method may be redefined by a derived class to define additional processing at the end of the input, but the redefined version should always call the &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; base class method &lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バッファリングされたすべてのデータを、ファイルの終わりマークが後に続くかのように強制的に処理します。このメソッドは、入力の最後に追加の処理を定義するために派生クラスによって再定義される場合がありますが、再定義されたバージョンは常に&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;基本クラスメソッド&lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="af599334f590af897809afaeb762277ded4e96df" translate="yes" xml:space="preserve">
          <source>Force rebuild even if timestamps are up-to-date.</source>
          <target state="translated">タイムスタンプが最新であっても強制的に再構築する。</target>
        </trans-unit>
        <trans-unit id="9a64202427e8fe21214e70464bd1aec2542b9f21" translate="yes" xml:space="preserve">
          <source>Force the &lt;code&gt;malloc()&lt;/code&gt; heap to clean itself up and return unused blocks to the operating system. On failure, this raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;malloc()&lt;/code&gt; ヒープを強制的にクリーンアップし、未使用のブロックをオペレーティングシステムに返します。失敗すると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="19d31fd6b2df693dc550368a6c845c371544b270" translate="yes" xml:space="preserve">
          <source>Force use of &lt;code&gt;CRAM-MD5&lt;/code&gt; authentication when identifying the client to protect the password. Will only work if the server &lt;code&gt;CAPABILITY&lt;/code&gt; response includes the phrase &lt;code&gt;AUTH=CRAM-MD5&lt;/code&gt;.</source>
          <target state="translated">パスワードを保護するためにクライアントを識別するときに &lt;code&gt;CRAM-MD5&lt;/code&gt; 認証の使用を強制します。サーバーの &lt;code&gt;CAPABILITY&lt;/code&gt; 応答に &lt;code&gt;AUTH=CRAM-MD5&lt;/code&gt; というフレーズが含まれている場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="ab13cdc95de3d7531cb31f5ddbb861e2d8b77785" translate="yes" xml:space="preserve">
          <source>Force write of everything to disk.</source>
          <target state="translated">ディスクにすべてのものを強制的に書き込みます。</target>
        </trans-unit>
        <trans-unit id="a2d96a80900bc13facf56d7742e8d8ff57e15a8c" translate="yes" xml:space="preserve">
          <source>Force write of file with filedescriptor &lt;em&gt;fd&lt;/em&gt; to disk. Does not force update of metadata.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;を持つファイルをディスクに強制的に書き込みます。メタデータの更新を強制しません。</target>
        </trans-unit>
        <trans-unit id="4c49957cff34733d16e38876ce4dd54c1c1dc339" translate="yes" xml:space="preserve">
          <source>Force write of file with filedescriptor &lt;em&gt;fd&lt;/em&gt; to disk. On Unix, this calls the native &lt;code&gt;fsync()&lt;/code&gt; function; on Windows, the MS &lt;code&gt;_commit()&lt;/code&gt; function.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;を持つファイルをディスクに強制的に書き込みます。Unixでは、これはネイティブの &lt;code&gt;fsync()&lt;/code&gt; 関数を呼び出します。Windowsでは、MS &lt;code&gt;_commit()&lt;/code&gt; 関数。</target>
        </trans-unit>
        <trans-unit id="b57f0c15791c6915cb3fe418d16a695f3e93406f" translate="yes" xml:space="preserve">
          <source>Forces the field to be centered within the available space.</source>
          <target state="translated">空いているスペース内でフィールドを強制的に中央に配置します。</target>
        </trans-unit>
        <trans-unit id="89bf2d916edc333230584e34f64cea573d2cc13c" translate="yes" xml:space="preserve">
          <source>Forces the field to be left-aligned within the available space (this is the default for most objects).</source>
          <target state="translated">利用可能なスペース内でフィールドを強制的に左揃えにします(ほとんどのオブジェクトではこれがデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="72cd2faf3a66abe4dfd120a3b0bee5e88182838a" translate="yes" xml:space="preserve">
          <source>Forces the field to be right-aligned within the available space (this is the default for numbers).</source>
          <target state="translated">利用可能なスペース内でフィールドを強制的に右揃えにします(これは数値の場合のデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="02886633a6050534b2f499dba88d89c2fa0ba3d6" translate="yes" xml:space="preserve">
          <source>Forces the padding to be placed after the sign (if any) but before the digits. This is used for printing fields in the form &amp;lsquo;+000000120&amp;rsquo;. This alignment option is only valid for numeric types. It becomes the default when &amp;lsquo;0&amp;rsquo; immediately precedes the field width.</source>
          <target state="translated">符号（存在する場合）の後、数字の前にパディングを配置します。これは、「+ 000000120」の形式でフィールドを印刷するために使用されます。この配置オプションは、数値型に対してのみ有効です。フィールド幅の直前に '0'があると、これがデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="92a345d72de9b39978fa7f3c0773802f918e7f9d" translate="yes" xml:space="preserve">
          <source>Foreign functions</source>
          <target state="translated">外部機能</target>
        </trans-unit>
        <trans-unit id="e9b0e4d2b6b7914c709024acdcc872d645aad7b3" translate="yes" xml:space="preserve">
          <source>Foreign functions can also be created by instantiating function prototypes. Function prototypes are similar to function prototypes in C; they describe a function (return type, argument types, calling convention) without defining an implementation. The factory functions must be called with the desired result type and the argument types of the function, and can be used as decorator factories, and as such, be applied to functions through the &lt;code&gt;@wrapper&lt;/code&gt; syntax. See &lt;a href=&quot;#ctypes-callback-functions&quot;&gt;Callback functions&lt;/a&gt; for examples.</source>
          <target state="translated">外部関数は、関数プロトタイプをインスタンス化することによっても作成できます。関数プロトタイプは、Cの関数プロトタイプに似ています。実装を定義せずに関数（戻り値の型、引数の型、呼び出し規約）を記述します。ファクトリ関数は、目的の結果の型と関数の引数の型を指定して呼び出す必要があり、デコレータファクトリとして使用できるため、 &lt;code&gt;@wrapper&lt;/code&gt; 構文を介して関数に適用できます。例については、&lt;a href=&quot;#ctypes-callback-functions&quot;&gt;コールバック関数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab6062a9bf3c1239139985c0532b99c45de86a25" translate="yes" xml:space="preserve">
          <source>Fork a child process, using a new pseudo-terminal as the child&amp;rsquo;s controlling terminal. Return a pair of &lt;code&gt;(pid, fd)&lt;/code&gt;, where &lt;em&gt;pid&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; in the child, the new child&amp;rsquo;s process id in the parent, and &lt;em&gt;fd&lt;/em&gt; is the file descriptor of the master end of the pseudo-terminal. For a more portable approach, use the &lt;a href=&quot;pty#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module. If an error occurs &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">新しい擬似端末を子の制御端末として使用して、子プロセスをフォークします。 &lt;code&gt;(pid, fd)&lt;/code&gt; ペアを返します。ここで、&lt;em&gt;pid&lt;/em&gt;は子では &lt;code&gt;0&lt;/code&gt; 、新しい子のプロセスIDは親で、&lt;em&gt;fd&lt;/em&gt;は疑似端末のマスター側のファイル記述子です。よりポータブルなアプローチについては、&lt;a href=&quot;pty#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;モジュールを使用してください。エラーが発生すると&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が送出されます。</target>
        </trans-unit>
        <trans-unit id="e0d97d3344fdceb7bc86849ce6036b4be1a30227" translate="yes" xml:space="preserve">
          <source>Fork a child process. Return &lt;code&gt;0&lt;/code&gt; in the child and the child&amp;rsquo;s process id in the parent. If an error occurs &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">子プロセスをフォークします。子では &lt;code&gt;0&lt;/code&gt; を返し、親では子のプロセスIDを返します。エラーが発生すると&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が送出されます。</target>
        </trans-unit>
        <trans-unit id="6c3f80da59ba5e11794147586cf0ae148cfe6834" translate="yes" xml:space="preserve">
          <source>Fork. Connect the child&amp;rsquo;s controlling terminal to a pseudo-terminal. Return value is &lt;code&gt;(pid, fd)&lt;/code&gt;. Note that the child gets &lt;em&gt;pid&lt;/em&gt; 0, and the &lt;em&gt;fd&lt;/em&gt; is &lt;em&gt;invalid&lt;/em&gt;. The parent&amp;rsquo;s return value is the &lt;em&gt;pid&lt;/em&gt; of the child, and &lt;em&gt;fd&lt;/em&gt; is a file descriptor connected to the child&amp;rsquo;s controlling terminal (and also to the child&amp;rsquo;s standard input and output).</source>
          <target state="translated">フォーク。子の制御端末を疑似端末に接続します。戻り値は &lt;code&gt;(pid, fd)&lt;/code&gt; です。子は&lt;em&gt;pid&lt;/em&gt; 0を取得し、&lt;em&gt;fd&lt;/em&gt;は&lt;em&gt;無効である&lt;/em&gt;ことに注意してください。親の戻り値は子の&lt;em&gt;pid&lt;/em&gt;であり、&lt;em&gt;fd&lt;/em&gt;は子の制御端末（および子の標準入出力）に接続されたファイル記述子です。</target>
        </trans-unit>
        <trans-unit id="6e6d282a9a8ae97493898a42e4495ac86a104597" translate="yes" xml:space="preserve">
          <source>Forking and threading versions of each type of server can be created using these mix-in classes. For instance, &lt;a href=&quot;#socketserver.ThreadingUDPServer&quot;&gt;&lt;code&gt;ThreadingUDPServer&lt;/code&gt;&lt;/a&gt; is created as follows:</source>
          <target state="translated">各タイプのサーバーのフォークバージョンとスレッドバージョンは、これらのミックスインクラスを使用して作成できます。たとえば、&lt;a href=&quot;#socketserver.ThreadingUDPServer&quot;&gt; &lt;code&gt;ThreadingUDPServer&lt;/code&gt; &lt;/a&gt;は次のように作成されます。</target>
        </trans-unit>
        <trans-unit id="6232d936da3d991295fc973ffc88f6d3ca50c6ac" translate="yes" xml:space="preserve">
          <source>Form Feed</source>
          <target state="translated">フォームフィード</target>
        </trans-unit>
        <trans-unit id="a8d1615368c5065046bab0898a96fbe6dca3de1c" translate="yes" xml:space="preserve">
          <source>Form Geometry Manager</source>
          <target state="translated">フォームジオメトリーマネージャー</target>
        </trans-unit>
        <trans-unit id="55550d89e7ca43740394fa9c2e706f8405aa15d0" translate="yes" xml:space="preserve">
          <source>Form feed</source>
          <target state="translated">フォームフィード</target>
        </trans-unit>
        <trans-unit id="bb19b54a8d464023b04f51da8fb6284d19d9c645" translate="yes" xml:space="preserve">
          <source>Formally, the Python zip application format is therefore:</source>
          <target state="translated">形式的には、Pythonのzipアプリケーションの形式は、したがって。</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="0b7058a284208f0fb334e10da7ad7849788c227c" translate="yes" xml:space="preserve">
          <source>Format Characters</source>
          <target state="translated">フォーマット文字</target>
        </trans-unit>
        <trans-unit id="270eba9fa5ca72ba811b960e20a70b4f961e511a" translate="yes" xml:space="preserve">
          <source>Format Paragraph</source>
          <target state="translated">フォーマットパラグラフ</target>
        </trans-unit>
        <trans-unit id="cdfbc79810d02d00dae00668258cb47d02812341" translate="yes" xml:space="preserve">
          <source>Format Specification Mini-Language</source>
          <target state="translated">形式指定ミニ言語</target>
        </trans-unit>
        <trans-unit id="e0e31adb6cc861ffe4700cf93625baf412604bf7" translate="yes" xml:space="preserve">
          <source>Format String Syntax</source>
          <target state="translated">形式 文字列構文</target>
        </trans-unit>
        <trans-unit id="f82f3ba2d1f13d26a5fb68ab9ee065f776ab30d9" translate="yes" xml:space="preserve">
          <source>Format Strings</source>
          <target state="translated">書式文字列</target>
        </trans-unit>
        <trans-unit id="edf2592d9cfc0320ac33dfd0ca3fb8b951ab5d54" translate="yes" xml:space="preserve">
          <source>Format a form in HTML.</source>
          <target state="translated">HTMLでフォームをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="fb1728865c9987d6065233b0aabfe29331bc6f32" translate="yes" xml:space="preserve">
          <source>Format a pretty argument spec from the four values returned by &lt;a href=&quot;#inspect.getargvalues&quot;&gt;&lt;code&gt;getargvalues()&lt;/code&gt;&lt;/a&gt;. The format* arguments are the corresponding optional formatting functions that are called to turn names and values into strings.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getargvalues&quot;&gt; &lt;code&gt;getargvalues()&lt;/code&gt; &lt;/a&gt;によって返された4つの値からプリティ引数仕様をフォーマットします。format *引数は、名前と値を文字列に変換するために呼び出される、対応するオプションのフォーマット関数です。</target>
        </trans-unit>
        <trans-unit id="89d6eedb8bb9193b1b9778a5ab136660fa0cf4cd" translate="yes" xml:space="preserve">
          <source>Format a pretty argument spec from the values returned by &lt;a href=&quot;#inspect.getfullargspec&quot;&gt;&lt;code&gt;getfullargspec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getfullargspec&quot;&gt; &lt;code&gt;getfullargspec()&lt;/code&gt; &lt;/a&gt;によって返された値からプリティ引数仕様をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="6684becb04a53e35be19fdc4a2836b5c2f0ba283" translate="yes" xml:space="preserve">
          <source>Format a stack trace and the exception information. The arguments have the same meaning as the corresponding arguments to &lt;a href=&quot;#traceback.print_exception&quot;&gt;&lt;code&gt;print_exception()&lt;/code&gt;&lt;/a&gt;. The return value is a list of strings, each ending in a newline and some containing internal newlines. When these lines are concatenated and printed, exactly the same text is printed as does &lt;a href=&quot;#traceback.print_exception&quot;&gt;&lt;code&gt;print_exception()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スタックトレースと例外情報をフォーマットします。引数は、&lt;a href=&quot;#traceback.print_exception&quot;&gt; &lt;code&gt;print_exception()&lt;/code&gt; の&lt;/a&gt;対応する引数と同じ意味を持っています。戻り値は文字列のリストで、それぞれが改行で終わり、一部は内部改行を含みます。これらの行が連結されて印刷されると、&lt;a href=&quot;#traceback.print_exception&quot;&gt; &lt;code&gt;print_exception()&lt;/code&gt; &lt;/a&gt;とまったく同じテキストが印刷されます。</target>
        </trans-unit>
        <trans-unit id="efb013790256b8ef5e9b3a1315d0eba0e7855b24" translate="yes" xml:space="preserve">
          <source>Format a warning the standard way. This returns a string which may contain embedded newlines and ends in a newline. &lt;em&gt;line&lt;/em&gt; is a line of source code to be included in the warning message; if &lt;em&gt;line&lt;/em&gt; is not supplied, &lt;a href=&quot;#warnings.formatwarning&quot;&gt;&lt;code&gt;formatwarning()&lt;/code&gt;&lt;/a&gt; will try to read the line specified by &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;lineno&lt;/em&gt;.</source>
          <target state="translated">警告を標準的な方法でフォーマットします。これは、埋め込まれた改行を含み、改行で終わる文字列を返します。&lt;em&gt;line&lt;/em&gt;は、警告メッセージに含まれるソースコードの行です。&lt;em&gt;行&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;#warnings.formatwarning&quot;&gt; &lt;code&gt;formatwarning()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;filename&lt;/em&gt;と&lt;em&gt;linenoで&lt;/em&gt;指定された行を読み取ろうとします。</target>
        </trans-unit>
        <trans-unit id="27f07db4717ed9daeb0ea1cfa7002355a47df647" translate="yes" xml:space="preserve">
          <source>Format characters have the following meaning; the conversion between C and Python values should be obvious given their types. The &amp;lsquo;Standard size&amp;rsquo; column refers to the size of the packed value in bytes when using standard size; that is, when the format string starts with one of &lt;code&gt;'&amp;lt;'&lt;/code&gt;, &lt;code&gt;'&amp;gt;'&lt;/code&gt;, &lt;code&gt;'!'&lt;/code&gt; or &lt;code&gt;'='&lt;/code&gt;. When using native size, the size of the packed value is platform-dependent.</source>
          <target state="translated">フォーマット文字には次の意味があります。CとPythonの値の間の変換は、それらの型を考えると明らかなはずです。「標準サイズ」列は、標準サイズを使用する場合のパック値のサイズをバイト単位で示します。つまり、フォーマット文字列が &lt;code&gt;'&amp;lt;'&lt;/code&gt; 、 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 、 &lt;code&gt;'!'&lt;/code&gt; のいずれかで始まる場合 または &lt;code&gt;'='&lt;/code&gt; 。ネイティブサイズを使用する場合、パックされた値のサイズはプラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="a82c3163ea3ab9e53fb2cea07cd209bfb937d3de" translate="yes" xml:space="preserve">
          <source>Format examples</source>
          <target state="translated">フォーマットの例</target>
        </trans-unit>
        <trans-unit id="1ac9d89f980b709d2eee4c28343a724ae6f0be53" translate="yes" xml:space="preserve">
          <source>Format menu (Editor window only)</source>
          <target state="translated">フォーマットメニュー(エディタウィンドウのみ</target>
        </trans-unit>
        <trans-unit id="5bff82abd36d7764c58ff2df3512a31d36fa2e37" translate="yes" xml:space="preserve">
          <source>Format of Version 5 Babyl Files</source>
          <target state="translated">バージョン5のバビルファイルの形式</target>
        </trans-unit>
        <trans-unit id="1f49759e2e13c3e9c99136a9ebb248df955d8330" translate="yes" xml:space="preserve">
          <source>Format strings are the mechanism used to specify the expected layout when packing and unpacking data. They are built up from &lt;a href=&quot;#format-characters&quot;&gt;Format Characters&lt;/a&gt;, which specify the type of data being packed/unpacked. In addition, there are special characters for controlling the &lt;a href=&quot;#struct-alignment&quot;&gt;Byte Order, Size, and Alignment&lt;/a&gt;.</source>
          <target state="translated">フォーマット文字列は、データをパックおよびアンパックするときに予想されるレイアウトを指定するために使用されるメカニズムです。それらは、パック/アンパックされるデータのタイプを指定する&lt;a href=&quot;#format-characters&quot;&gt;フォーマット文字&lt;/a&gt;から構築されます。さらに、&lt;a href=&quot;#struct-alignment&quot;&gt;バイトオーダー、サイズ、および配置&lt;/a&gt;を制御するための特殊文字があります。</target>
        </trans-unit>
        <trans-unit id="977d2603bbd7ce88ed46464ff7b8c4d0bd0777d9" translate="yes" xml:space="preserve">
          <source>Format strings contain &amp;ldquo;replacement fields&amp;rdquo; surrounded by curly braces &lt;code&gt;{}&lt;/code&gt;. Anything that is not contained in braces is considered literal text, which is copied unchanged to the output. If you need to include a brace character in the literal text, it can be escaped by doubling: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">フォーマット文字列には、中括弧 &lt;code&gt;{}&lt;/code&gt; で囲まれた「置換フィールド」が含まれています。ブレースに含まれていないものはすべてリテラルテキストと見なされ、変更されずに出力にコピーされます。ブレース文字をリテラルテキストに含める必要がある場合は、 &lt;code&gt;{{&lt;/code&gt; および &lt;code&gt;}}&lt;/code&gt; を 2倍にするとエスケープできます。</target>
        </trans-unit>
        <trans-unit id="ada86ab71a0296a81d385ffe9ebda7450e9141f1" translate="yes" xml:space="preserve">
          <source>Format the current directory in HTML.</source>
          <target state="translated">カレントディレクトリをHTMLでフォーマットします。</target>
        </trans-unit>
        <trans-unit id="6887032ead2866abfbc852a1baf00f3a87abe4e3" translate="yes" xml:space="preserve">
          <source>Format the exception part of a traceback. The arguments are the exception type and value such as given by &lt;code&gt;sys.last_type&lt;/code&gt; and &lt;code&gt;sys.last_value&lt;/code&gt;. The return value is a list of strings, each ending in a newline. Normally, the list contains a single string; however, for &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exceptions, it contains several lines that (when printed) display detailed information about where the syntax error occurred. The message indicating which exception occurred is the always last string in the list.</source>
          <target state="translated">トレースバックの例外部分をフォーマットします。引数は、 &lt;code&gt;sys.last_type&lt;/code&gt; および &lt;code&gt;sys.last_value&lt;/code&gt; で指定されるような例外のタイプと値です。戻り値は、それぞれが改行で終了する文字列のリストです。通常、リストには単一の文字列が含まれています。ただし、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;例外の場合、構文エラーが発生した場所に関する詳細情報を（印刷時に）表示する複数の行が含まれます。発生した例外を示すメッセージは、常にリストの最後の文字列です。</target>
        </trans-unit>
        <trans-unit id="a52a79ddad57812b440010d5464618dca805c815" translate="yes" xml:space="preserve">
          <source>Format the exception part of the traceback.</source>
          <target state="translated">トレースバックの例外部分をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="133a6862d1cae1284919a2f001c0aeacdd72c000" translate="yes" xml:space="preserve">
          <source>Format the exception.</source>
          <target state="translated">例外をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="42596a2d24fc2c73e65e7068f53abc165c76e75c" translate="yes" xml:space="preserve">
          <source>Format the shell environment in HTML.</source>
          <target state="translated">シェル環境をHTMLでフォーマットします。</target>
        </trans-unit>
        <trans-unit id="908af1ba6a5e39aff8925f6fe6975073286cfd06" translate="yes" xml:space="preserve">
          <source>Format the traceback as a list of lines with newlines. Use the &lt;a href=&quot;linecache#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module to retrieve lines from the source code. If &lt;em&gt;limit&lt;/em&gt; is set, format the &lt;em&gt;limit&lt;/em&gt; most recent frames if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, format the &lt;code&gt;abs(limit)&lt;/code&gt; oldest frames. If &lt;em&gt;most_recent_first&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the order of the formatted frames is reversed, returning the most recent frame first instead of last.</source>
          <target state="translated">トレースバックを改行付きの行のリストとしてフォーマットします。使用&lt;a href=&quot;linecache#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;ソースコードから行を取得するためのモジュールを。場合は&lt;em&gt;制限が&lt;/em&gt;設定され、フォーマット&lt;em&gt;の限界に&lt;/em&gt;あれば、最新のフレームを&lt;em&gt;限度が&lt;/em&gt;正です。それ以外の場合は、 &lt;code&gt;abs(limit)&lt;/code&gt; の最も古いフレームをフォーマットします。&lt;em&gt;most_recent_first&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、フォーマットされたフレームの順序が逆になり、最新のフレームが最後ではなく最初に返されます。</target>
        </trans-unit>
        <trans-unit id="e94ffc42a625185c4ee1b07594bd1b3720789d8e" translate="yes" xml:space="preserve">
          <source>Formats a floating point number using the same format as the built-in function &lt;code&gt;str(float)&lt;/code&gt;, but takes the decimal point into account.</source>
          <target state="translated">組み込み関数 &lt;code&gt;str(float)&lt;/code&gt; と同じ形式を使用して浮動小数点数をフォーマットしますが、小数点を考慮します。</target>
        </trans-unit>
        <trans-unit id="026a04261cdb2c80deece60787b101a3f57e7a0b" translate="yes" xml:space="preserve">
          <source>Formats a number &lt;em&gt;val&lt;/em&gt; according to the current &lt;a href=&quot;#locale.LC_MONETARY&quot;&gt;&lt;code&gt;LC_MONETARY&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">現在の&lt;a href=&quot;#locale.LC_MONETARY&quot;&gt; &lt;code&gt;LC_MONETARY&lt;/code&gt; &lt;/a&gt;設定に従って数値&lt;em&gt;valを&lt;/em&gt;フォーマットします。</target>
        </trans-unit>
        <trans-unit id="eacb6e288f5f9db17404ead37a2ec0529507d79d" translate="yes" xml:space="preserve">
          <source>Formats a number &lt;em&gt;val&lt;/em&gt; according to the current &lt;a href=&quot;#locale.LC_NUMERIC&quot;&gt;&lt;code&gt;LC_NUMERIC&lt;/code&gt;&lt;/a&gt; setting. The format follows the conventions of the &lt;code&gt;%&lt;/code&gt; operator. For floating point values, the decimal point is modified if appropriate. If &lt;em&gt;grouping&lt;/em&gt; is true, also takes the grouping into account.</source>
          <target state="translated">現在の&lt;a href=&quot;#locale.LC_NUMERIC&quot;&gt; &lt;code&gt;LC_NUMERIC&lt;/code&gt; &lt;/a&gt;設定に従って数値&lt;em&gt;valを&lt;/em&gt;フォーマットします。形式は &lt;code&gt;%&lt;/code&gt; 演算子の規則に従います。浮動小数点値の場合、小数点は必要に応じて変更されます。&lt;em&gt;グループ化&lt;/em&gt;がtrueの場合、グループ化も考慮に入れます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0112f00a08e9d79ead751aada10a7ecf020a0c9" translate="yes" xml:space="preserve">
          <source>Formats the record and sends it to the specified addressees.</source>
          <target state="translated">レコードをフォーマットし、指定した宛先に送信します。</target>
        </trans-unit>
        <trans-unit id="e3d51e4f2fd3c854b2bc53b4f04b934fba801ca8" translate="yes" xml:space="preserve">
          <source>Formats the specified exception information (a standard exception tuple as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;) as a string. This default implementation just uses &lt;a href=&quot;traceback#traceback.print_exception&quot;&gt;&lt;code&gt;traceback.print_exception()&lt;/code&gt;&lt;/a&gt;. The resulting string is returned.</source>
          <target state="translated">指定された例外情報（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される標準の例外タプル）を文字列としてフォーマットします。このデフォルトの実装では、&lt;a href=&quot;traceback#traceback.print_exception&quot;&gt; &lt;code&gt;traceback.print_exception()&lt;/code&gt; を&lt;/a&gt;使用しています。結果の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="478091ac3ec3684574c3babf6b432088610f3d97" translate="yes" xml:space="preserve">
          <source>Formats the specified stack information (a string as returned by &lt;a href=&quot;traceback#traceback.print_stack&quot;&gt;&lt;code&gt;traceback.print_stack()&lt;/code&gt;&lt;/a&gt;, but with the last newline removed) as a string. This default implementation just returns the input value.</source>
          <target state="translated">指定されたスタック情報（&lt;a href=&quot;traceback#traceback.print_stack&quot;&gt; &lt;code&gt;traceback.print_stack()&lt;/code&gt; &lt;/a&gt;によって返される文字列ですが、最後の改行が削除された文字列）を文字列としてフォーマットします。このデフォルトの実装は、入力値を返すだけです。</target>
        </trans-unit>
        <trans-unit id="5c7560c39c5c5ff187fc628a573d6335f1647305" translate="yes" xml:space="preserve">
          <source>Formatter Objects</source>
          <target state="translated">フォーマッタオブジェクト</target>
        </trans-unit>
        <trans-unit id="fbbd31613f1e2dcbd79221469710d04b5144430c" translate="yes" xml:space="preserve">
          <source>Formatters specify the layout of log records in the final output.</source>
          <target state="translated">フォーマッタは、最終出力におけるログレコードのレイアウトを指定します。</target>
        </trans-unit>
        <trans-unit id="b447427aa08f3dda2bd0b3397dc8f0988f032e14" translate="yes" xml:space="preserve">
          <source>Formatting is performed using &lt;code&gt;PyObject_Format()&lt;/code&gt;. The result is pushed on the stack.</source>
          <target state="translated">フォーマットは &lt;code&gt;PyObject_Format()&lt;/code&gt; を使用して実行されます。結果はスタックにプッシュされます。</target>
        </trans-unit>
        <trans-unit id="fbf057be17177f97ad4833a585c800edbe99787a" translate="yes" xml:space="preserve">
          <source>Formatting methods for specific types are implemented as methods with a name based on the type name. In the method name, &lt;strong&gt;TYPE&lt;/strong&gt; is replaced by &lt;code&gt;'_'.join(type(obj).__name__.split())&lt;/code&gt;. Dispatch to these methods is handled by &lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt;&lt;code&gt;repr1()&lt;/code&gt;&lt;/a&gt;. Type-specific methods which need to recursively format a value should call &lt;code&gt;self.repr1(subobj, level - 1)&lt;/code&gt;.</source>
          <target state="translated">特定のタイプのフォーマットメソッドは、タイプ名に基づく名前を持つメソッドとして実装されます。メソッド名では、&lt;strong&gt;TYPE&lt;/strong&gt;は &lt;code&gt;'_'.join(type(obj).__name__.split())&lt;/code&gt; 置き換えられます。これらのメソッドへのディスパッチは&lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt; &lt;code&gt;repr1()&lt;/code&gt; &lt;/a&gt;によって処理されます。値を再帰的にフォーマットする必要があるタイプ固有のメソッドは &lt;code&gt;self.repr1(subobj, level - 1)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="53ee3b12a8116f5062f23c10d0f0f41886e86fc4" translate="yes" xml:space="preserve">
          <source>Fortunately, once you have managed to get your script to execute &lt;em&gt;some&lt;/em&gt; code, you can easily send tracebacks to the Web browser using the &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module. If you haven&amp;rsquo;t done so already, just add the lines:</source>
          <target state="translated">あなたのスクリプトを実行するために得ることができたら幸いなことに、&lt;em&gt;いくつか&lt;/em&gt;のコードを、あなたは簡単に使用して、Webブラウザにトレースバックを送信することができます&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; の&lt;/a&gt;モジュールを。まだ行っていない場合は、次の行を追加してください。</target>
        </trans-unit>
        <trans-unit id="5e96e7529d107df0e1753fe21bd01b67d79778d3" translate="yes" xml:space="preserve">
          <source>Forwarded</source>
          <target state="translated">Forwarded</target>
        </trans-unit>
        <trans-unit id="f20aa79556158af01d19fe1bdfaaba61f2eba597" translate="yes" xml:space="preserve">
          <source>Forwarded, resent, or bounced</source>
          <target state="translated">転送、再送、バウンス</target>
        </trans-unit>
        <trans-unit id="204adbe299b86a188ab068c84642d64fb57b9d04" translate="yes" xml:space="preserve">
          <source>Four input formats are allowed:</source>
          <target state="translated">4つの入力形式が可能です。</target>
        </trans-unit>
        <trans-unit id="95a1f04add15be7ebf45b9a37b275d6fe1eeba76" translate="yes" xml:space="preserve">
          <source>Fragment identifier</source>
          <target state="translated">フラグメント識別子</target>
        </trans-unit>
        <trans-unit id="91b0658329efa06d4da89c23a162b41dfcee5202" translate="yes" xml:space="preserve">
          <source>Frame</source>
          <target state="translated">Frame</target>
        </trans-unit>
        <trans-unit id="2c1869f6cb698c92bcc04970dc1fb69c51e4202e" translate="yes" xml:space="preserve">
          <source>Frame of a traceback.</source>
          <target state="translated">トレースバックのフレーム。</target>
        </trans-unit>
        <trans-unit id="ae12c8f249c1108618862d4a780aa0e958c8d187" translate="yes" xml:space="preserve">
          <source>FrameSummary Objects</source>
          <target state="translated">フレームサマリーオブジェクト</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="77cece0affae2ecaefc39ef0c2a8e23ee328ebc0" translate="yes" xml:space="preserve">
          <source>Frameworks expecting callback functions of specific signatures might be type hinted using &lt;code&gt;Callable[[Arg1Type, Arg2Type], ReturnType]&lt;/code&gt;.</source>
          <target state="translated">特定のシグネチャのコールバック関数を &lt;code&gt;Callable[[Arg1Type, Arg2Type], ReturnType]&lt;/code&gt; しているフレームワークは、Callable [[Arg1Type、Arg2Type]、ReturnType]を使用してタイプヒントされる場合があります。</target>
        </trans-unit>
        <trans-unit id="d751d8aea744f19dc0702494fa4a87cea4624802" translate="yes" xml:space="preserve">
          <source>Fran&amp;ccedil;ois Pinard</source>
          <target state="translated">フランソワ・ピナール</target>
        </trans-unit>
        <trans-unit id="676e349fb10a9ac7e26e69e9ff9f61aa2b453ac6" translate="yes" xml:space="preserve">
          <source>Fredrik Lundh elaborated and revised the class interface descriptions, to get them current with Tk 4.2.</source>
          <target state="translated">Fredrik Lundh氏は、Tk 4.2に対応するために、クラスインターフェースの説明を精緻化し、修正しました。</target>
        </trans-unit>
        <trans-unit id="f7a46b2d862652fa6dd4ca177b3c94b34e0551df" translate="yes" xml:space="preserve">
          <source>Fredrik Lundh&amp;rsquo;s &amp;ldquo;unofficial errata, intended to clarify certain details in the XML-RPC specification, as well as hint at &amp;lsquo;best practices&amp;rsquo; to use when designing your own XML-RPC implementations.&amp;rdquo;</source>
          <target state="translated">Fredrik Lundhの「非公式の正誤表。XML-RPC仕様の特定の詳細を明確にすることを意図しており、独自のXML-RPC実装を設計するときに使用する「ベストプラクティス」のヒントを示しています。」</target>
        </trans-unit>
        <trans-unit id="7941894bbf9320910711bb27aa31db4822f37203" translate="yes" xml:space="preserve">
          <source>Freeze all the objects tracked by gc - move them to a permanent generation and ignore all the future collections. This can be used before a POSIX fork() call to make the gc copy-on-write friendly or to speed up collection. Also collection before a POSIX fork() call may free pages for future allocation which can cause copy-on-write too so it&amp;rsquo;s advised to disable gc in parent process and freeze before fork and enable gc in child process.</source>
          <target state="translated">gcによって追跡されているすべてのオブジェクトをフリーズします-それらを永続的な世代に移動し、将来のすべてのコレクションを無視します。これは、POSIX fork（）呼び出しの前に使用して、GCをコピーオンライト対応にするか、コレクションを高速化できます。また、POSIX fork（）呼び出しの前のコレクションは、将来の割り当てのためにページを解放し、コピーオンライトも引き起こす可能性があるため、親プロセスでgcを無効にし、forkの前にフリーズして子プロセスでgcを有効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5f9f6dd59fd9d87ed4234e22a85d44c72d20b660" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions About Fetchmail</source>
          <target state="translated">Fetchmailについてのよくある質問</target>
        </trans-unit>
        <trans-unit id="931016677a60f24d5b6710c6675421493cdd480f" translate="yes" xml:space="preserve">
          <source>Frequently Used Arguments</source>
          <target state="translated">よく使われる議論</target>
        </trans-unit>
        <trans-unit id="c8315ccb47f6bf0d7a511f023cc6a139ae985bb3" translate="yes" xml:space="preserve">
          <source>Friedl, Jeffrey. Mastering Regular Expressions. 3rd ed., O&amp;rsquo;Reilly Media, 2009. The third edition of the book no longer covers Python at all, but the first edition covered writing good regular expression patterns in great detail.</source>
          <target state="translated">フリードル、ジェフリー。正規表現をマスターする。第3版、O'Reilly Media、2009年。本の第3版では、Pythonはまったく取り上げられていませんが、第1版では、優れた正規表現パターンを詳細に記述することを扱っています。</target>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="843e5f9670f08c69a59833608d59b51cae8ce9fc" translate="yes" xml:space="preserve">
          <source>From Python 2.5 onward, it&amp;rsquo;s much more convenient to cut in at the Abstract Syntax Tree (AST) generation and compilation stage, using the &lt;a href=&quot;ast#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Python 2.5以降では、&lt;a href=&quot;ast#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;モジュールを使用して、抽象構文ツリー（AST）の生成とコンパイルの段階に割り込む方がはるかに便利です。</target>
        </trans-unit>
        <trans-unit id="020414031327a3ef7db22111fd1b439df6d9523d" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance can also be constructed directly from a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.2以降、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスは&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;から直接作成することもできます。</target>
        </trans-unit>
        <trans-unit id="8f429dea18858dc76e2dafe218fb1bd41640f703" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, you can also construct a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance directly from a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Python 3.2以降では、&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;インスタンスから&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスを直接作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9a9212b07590ed38d2383035c9834db7561be821" translate="yes" xml:space="preserve">
          <source>From Python 3.2 onwards, you can also construct a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instance directly from a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.2以降では、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;から直接&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスを構築することもできます。</target>
        </trans-unit>
        <trans-unit id="c4eb3439bf7316847977346c0d104584a3402e3c" translate="yes" xml:space="preserve">
          <source>From an iterable of integers: &lt;code&gt;bytearray(range(20))&lt;/code&gt;</source>
          <target state="translated">整数の反復可能 &lt;code&gt;bytearray(range(20))&lt;/code&gt; から：bytearray（range（20））</target>
        </trans-unit>
        <trans-unit id="5d65ee2397bd4b1147e1b46eacb2bf3de76b34db" translate="yes" xml:space="preserve">
          <source>From an iterable of integers: &lt;code&gt;bytes(range(20))&lt;/code&gt;</source>
          <target state="translated">反復可能な整数から： &lt;code&gt;bytes(range(20))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce6f98bc32d8c08752e339ab6b8ff93f135e878c" translate="yes" xml:space="preserve">
          <source>From file itself</source>
          <target state="translated">ファイル自体から</target>
        </trans-unit>
        <trans-unit id="5948b3c8804d9acb15720ae7c2746d371d0a6dd0" translate="yes" xml:space="preserve">
          <source>From the application view, this means that any header obtained through the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is a header object with extra attributes, whose string value is the fully decoded unicode value of the header. Likewise, a header may be assigned a new value, or a new header created, using a unicode string, and the policy will take care of converting the unicode string into the correct RFC encoded form.</source>
          <target state="translated">アプリケーションビューから、これは、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;を通じて取得されるヘッダーは、追加の属性を持つヘッダーオブジェクトであり、その文字列値はヘッダーの完全にデコードされたUnicode値であることを意味します。同様に、Unicode文字列を使用して、ヘッダーに新しい値を割り当てたり、新しいヘッダーを作成したりできます。Unicode文字列は、RFCエンコードされた正しい形式に変換されます。</target>
        </trans-unit>
        <trans-unit id="21179744e0644e6bf06e66ec0ad650d68bce7278" translate="yes" xml:space="preserve">
          <source>From the perspective of this ABC, a &lt;em&gt;resource&lt;/em&gt; is a binary artifact that is shipped within a package. Typically this is something like a data file that lives next to the &lt;code&gt;__init__.py&lt;/code&gt; file of the package. The purpose of this class is to help abstract out the accessing of such data files so that it does not matter if the package and its data file(s) are stored in a e.g. zip file versus on the file system.</source>
          <target state="translated">このABCの観点から見ると、&lt;em&gt;リソース&lt;/em&gt;はパッケージ内で出荷されるバイナリアーティファクトです。通常、これはパッケージの &lt;code&gt;__init__.py&lt;/code&gt; ファイルの隣にあるデータファイルのようなものです。このクラスの目的は、そのようなデータファイルへのアクセスを抽象化して、パッケージとそのデータファイルがファイルシステムなどのzipファイルなどに格納されているかどうかが問題にならないようにすることです。</target>
        </trans-unit>
        <trans-unit id="c3d589e23cb112ec1a392aed611bb2ec8fdbc0b4" translate="yes" xml:space="preserve">
          <source>From the top down:</source>
          <target state="translated">上から下に向かって</target>
        </trans-unit>
        <trans-unit id="4e50569cef50379ee448e1f2b049fa0157a0bc2d" translate="yes" xml:space="preserve">
          <source>Frozen instances</source>
          <target state="translated">凍結したインスタンス</target>
        </trans-unit>
        <trans-unit id="d25dcf5f0613027176cc69f800b0a4c3bde6be0d" translate="yes" xml:space="preserve">
          <source>Full details of the class creation process supported by these functions</source>
          <target state="translated">これらの関数がサポートするクラス作成プロセスの完全な詳細</target>
        </trans-unit>
        <trans-unit id="657da8017607a10cc9f2aa3b39c739a2321091a5" translate="yes" xml:space="preserve">
          <source>Full documentation</source>
          <target state="translated">完全なドキュメント</target>
        </trans-unit>
        <trans-unit id="d13f42e2080d339be6d0c5783d644631e98b32e6" translate="yes" xml:space="preserve">
          <source>Full pathname of the source file where the logging call was issued (if available).</source>
          <target state="translated">ロギングコールが発行されたソースファイルの完全なパス名 (利用可能な場合)。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="5afa679cb93c0bd650f0afd89a95239d9f992f6b" translate="yes" xml:space="preserve">
          <source>Function &lt;a href=&quot;#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt; can parse 2-digit years when given &lt;code&gt;%y&lt;/code&gt; format code. When 2-digit years are parsed, they are converted according to the POSIX and ISO C standards: values 69&amp;ndash;99 are mapped to 1969&amp;ndash;1999, and values 0&amp;ndash;68 are mapped to 2000&amp;ndash;2068.</source>
          <target state="translated">関数&lt;a href=&quot;#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;%y&lt;/code&gt; 形式のコードを指定すると、2桁の年を解析できます。2桁の年が解析されるとき、それらはPOSIXおよびISO C標準に従って変換されます。値69〜99は1969〜1999にマッピングされ、値0〜68は2000〜2068にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="0ca544d7457648c14cce40272868cda27ebf4451" translate="yes" xml:space="preserve">
          <source>Function Objects</source>
          <target state="translated">関数オブジェクト</target>
        </trans-unit>
        <trans-unit id="5eae8cd7bd95f099480ba2022791990eccd4f8bc" translate="yes" xml:space="preserve">
          <source>Function and class definitions</source>
          <target state="translated">関数とクラスの定義</target>
        </trans-unit>
        <trans-unit id="734d7223ffe438b863c3d4ed08f1962984a9515e" translate="yes" xml:space="preserve">
          <source>Function details</source>
          <target state="translated">機能詳細</target>
        </trans-unit>
        <trans-unit id="bd1db34fa306e69fb02c3351244f932d38da00d3" translate="yes" xml:space="preserve">
          <source>Function keys. Up to 64 function keys are supported.</source>
          <target state="translated">ファンクションキーです。最大64個のファンクションキーに対応しています。</target>
        </trans-unit>
        <trans-unit id="1775d6d229c09c127b9640c5b78d4c4c6d982d34" translate="yes" xml:space="preserve">
          <source>Function not implemented</source>
          <target state="translated">実装されていない関数</target>
        </trans-unit>
        <trans-unit id="1ab2eabce4bce0325608c94002ed583542a65dba" translate="yes" xml:space="preserve">
          <source>Function objects are created by function definitions. The only operation on a function object is to call it: &lt;code&gt;func(argument-list)&lt;/code&gt;.</source>
          <target state="translated">関数オブジェクトは、関数定義によって作成されます。関数オブジェクトに対する唯一の操作は、それを呼び出すことです： &lt;code&gt;func(argument-list)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44d21b2d2a609265eca39ae0493e9003be8fed96" translate="yes" xml:space="preserve">
          <source>Function prototypes</source>
          <target state="translated">関数プロトタイプ</target>
        </trans-unit>
        <trans-unit id="dee4cfd77aac5369a6e89ce97088e5be1bcd0c57" translate="yes" xml:space="preserve">
          <source>Function prototypes created by these factory functions can be instantiated in different ways, depending on the type and number of the parameters in the call:</source>
          <target state="translated">これらのファクトリー関数によって作成された関数プロトタイプは、呼び出し中のパラメータのタイプと数に応じて、さまざまな方法でインスタンス化することができます。</target>
        </trans-unit>
        <trans-unit id="364902d4170f1b19b4532663e7d91e3f1dc0864f" translate="yes" xml:space="preserve">
          <source>Function to be used to compare method names when sorting them in &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt; and all the &lt;code&gt;loadTestsFrom*()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; &lt;/a&gt;およびすべての &lt;code&gt;loadTestsFrom*()&lt;/code&gt; メソッドでソートするときにメソッド名を比較するために使用される関数。</target>
        </trans-unit>
        <trans-unit id="a052eea89f50224a7569eae8a87ea1a83e18f9d3" translate="yes" xml:space="preserve">
          <source>Functional API</source>
          <target state="translated">機能API</target>
        </trans-unit>
        <trans-unit id="d58bef8c404893294e965bc9372c8872c43f8fda" translate="yes" xml:space="preserve">
          <source>Functional Programming</source>
          <target state="translated">関数型プログラミング</target>
        </trans-unit>
        <trans-unit id="7f8a9380207393fc9db2b2b2593936320bf03503" translate="yes" xml:space="preserve">
          <source>Functional Programming Modules</source>
          <target state="translated">機能的なプログラミングモジュール</target>
        </trans-unit>
        <trans-unit id="62daf931ffeccc7257bc3a492560ec903684c927" translate="yes" xml:space="preserve">
          <source>Functionality within this package requires that the &lt;code&gt;__main__&lt;/code&gt; module be importable by the children. This is covered in &lt;a href=&quot;#multiprocessing-programming&quot;&gt;Programming guidelines&lt;/a&gt; however it is worth pointing out here. This means that some examples, such as the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;multiprocessing.pool.Pool&lt;/code&gt;&lt;/a&gt; examples will not work in the interactive interpreter. For example:</source>
          <target state="translated">このパッケージ内の機能には、 &lt;code&gt;__main__&lt;/code&gt; モジュールが子によってインポート可能であることが必要です。これは&lt;a href=&quot;#multiprocessing-programming&quot;&gt;プログラミングのガイドラインで説明&lt;/a&gt;されていますが、ここで指摘する価値があります。つまり、&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;multiprocessing.pool.Pool&lt;/code&gt; の&lt;/a&gt;例など、一部の例はインタラクティブインタープリターでは機能しません。例えば：</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="13fe3097140d48f45796f13a773a611406bf8724" translate="yes" xml:space="preserve">
          <source>Functions and Exceptions</source>
          <target state="translated">関数と例外</target>
        </trans-unit>
        <trans-unit id="4dde1747c55cbb65aed850307ffa6149bfedba82" translate="yes" xml:space="preserve">
          <source>Functions and classes provided:</source>
          <target state="translated">提供される機能とクラス。</target>
        </trans-unit>
        <trans-unit id="4c5154b96e8613068a06f348c6569ab1cab8db99" translate="yes" xml:space="preserve">
          <source>Functions and decorators</source>
          <target state="translated">機能とデコレーター</target>
        </trans-unit>
        <trans-unit id="20b1e6d5deb339e7436ae27526f0a0d790e768e8" translate="yes" xml:space="preserve">
          <source>Functions are accessed as attributes of dll objects:</source>
          <target state="translated">関数は dll オブジェクトの属性としてアクセスされます。</target>
        </trans-unit>
        <trans-unit id="52c06380a35441f8692050a4f700a5296af35e7f" translate="yes" xml:space="preserve">
          <source>Functions for bytes</source>
          <target state="translated">バイト用関数</target>
        </trans-unit>
        <trans-unit id="4dc9f4ae68f16fcbe0530e1139c1d5ccbd47a458" translate="yes" xml:space="preserve">
          <source>Functions for integers</source>
          <target state="translated">整数の関数</target>
        </trans-unit>
        <trans-unit id="5aeda873fe4d68e6f1f8db4aabf74a1ac2058809" translate="yes" xml:space="preserve">
          <source>Functions for sequences</source>
          <target state="translated">シーケンス用の関数</target>
        </trans-unit>
        <trans-unit id="921bac2868750926523aa803476aa0880a75d1f2" translate="yes" xml:space="preserve">
          <source>Functions or methods being mocked will have their arguments checked to ensure that they are called with the correct signature.</source>
          <target state="translated">モックされる関数やメソッドは、それらの引数をチェックして、正しいシグネチャで呼び出されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3e1ed89bdc06bad6024febc65146a33f87bcd499" translate="yes" xml:space="preserve">
          <source>Functions registered for execution before forking are called in reverse registration order. Functions registered for execution after forking (either in the parent or in the child) are called in registration order.</source>
          <target state="translated">フォーク前の実行に登録された関数は、逆登録順に呼び出されます。フォーク後(親または子)の実行に登録された関数は、登録順に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="31b99da682255324534f87c3b41fa2d80eb3d3d0" translate="yes" xml:space="preserve">
          <source>Functions that convert doctests to Python code, and possibly run the synthesized code under the debugger:</source>
          <target state="translated">doctests を Python コードに変換し、合成されたコードをデバッガの下で実行する関数。</target>
        </trans-unit>
        <trans-unit id="c244de50efd900af23f95e74816e4a77ce0046dd" translate="yes" xml:space="preserve">
          <source>Functions with output parameters will automatically return the output parameter value if there is a single one, or a tuple containing the output parameter values when there are more than one, so the GetWindowRect function now returns a RECT instance, when called.</source>
          <target state="translated">出力パラメータを持つ関数は、出力パラメータの値が 1 つの場合は自動的に返され、複数の場合は出力パラメータの値を含むタプルが返されるようになったので、GetWindowRect 関数が呼び出されると RECT インスタンスを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="b0e6e4325e12bb480ddedba753c0f8ff52392cb8" translate="yes" xml:space="preserve">
          <source>Functions, Constants, and Exceptions</source>
          <target state="translated">関数、定数、および例外</target>
        </trans-unit>
        <trans-unit id="b4fb46cd353c41a8b5f72483a104c7283e890b98" translate="yes" xml:space="preserve">
          <source>Fundamental data types</source>
          <target state="translated">基本データ型</target>
        </trans-unit>
        <trans-unit id="75dfbb4ae8b96227bde6c5115b67cdcd67dd0280" translate="yes" xml:space="preserve">
          <source>Fundamental data types, when returned as foreign function call results, or, for example, by retrieving structure field members or array items, are transparently converted to native Python types. In other words, if a foreign function has a &lt;code&gt;restype&lt;/code&gt; of &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt;, you will always receive a Python bytes object, &lt;em&gt;not&lt;/em&gt; a &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">基本的なデータ型は、外部関数呼び出しの結果として返される場合、または、たとえば、構造体フィールドメンバーや配列項目を取得する場合に、ネイティブのPython型に透過的に変換されます。外部関数が持っている言い換えれば、 &lt;code&gt;restype&lt;/code&gt; の&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; を&lt;/a&gt;、あなたは常にPythonのバイトオブジェクト、受け取る&lt;em&gt;ない&lt;/em&gt;&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; の&lt;/a&gt;インスタンスを。</target>
        </trans-unit>
        <trans-unit id="aed766328b20ea5d898558b5e226e4031f0fcb56" translate="yes" xml:space="preserve">
          <source>Further Examples</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="15f5c4496b8b834674cbc8ab8fb26c5c51e088ee" translate="yes" xml:space="preserve">
          <source>Further documentation on these functions can be found in the Platform API documentation.</source>
          <target state="translated">これらの関数に関する詳細なドキュメントは、Platform API のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bf65796b579e013fd0c63bc3940e46318e678ee0" translate="yes" xml:space="preserve">
          <source>Further explanation is available in the FAQ entry &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-multidimensional-list&quot;&gt;How do I create a multidimensional list?&lt;/a&gt;.</source>
          <target state="translated">詳細については、FAQエントリを参照してください&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-multidimensional-list&quot;&gt;。多次元リストを作成するにはどうすればよいですか？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65131570643d08e25f1b3d299321b7137e53b984" translate="yes" xml:space="preserve">
          <source>Further explanation is available in the FAQ entry &lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-multidimensional-list&quot;&gt;How do I create a multidimensional list?&lt;/a&gt;.</source>
          <target state="translated">詳細な説明は、FAQエントリ&lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-multidimensional-list&quot;&gt;にあります。多次元リストを作成するにはどうすればよいですか？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="629fce60fcf94411565c6cc87f1eb2b8f5946829" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;add_parser&lt;/code&gt; supports an additional &lt;code&gt;aliases&lt;/code&gt; argument, which allows multiple strings to refer to the same subparser. This example, like &lt;code&gt;svn&lt;/code&gt;, aliases &lt;code&gt;co&lt;/code&gt; as a shorthand for &lt;code&gt;checkout&lt;/code&gt;:</source>
          <target state="translated">さらに、 &lt;code&gt;add_parser&lt;/code&gt; は、複数の文字列が同じサブパーサーを参照できるようにする追加の &lt;code&gt;aliases&lt;/code&gt; 引数をサポートしています。この例では、 &lt;code&gt;svn&lt;/code&gt; のように、 &lt;code&gt;checkout&lt;/code&gt; 省略形として &lt;code&gt;co&lt;/code&gt; をエイリアス化しています。</target>
        </trans-unit>
        <trans-unit id="36c32ddb93b70b3b0d66489f7cc081835756def8" translate="yes" xml:space="preserve">
          <source>Furthermore, all functions without a return type or parameter types will implicitly default to using &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">さらに、戻り値の型またはパラメーターの型がないすべての関数は、暗黙的にデフォルトで&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="8f0c49f21362241b8542d0a3c68222c26cf5407b" translate="yes" xml:space="preserve">
          <source>Furthermore, any functions and classes defined by the executed code are not guaranteed to work correctly after a &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; function has returned. If that limitation is not acceptable for a given use case, &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; is likely to be a more suitable choice than this module.</source>
          <target state="translated">さらに、実行されたコードによって定義された関数とクラスは、&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;関数が返された後に正しく動作することが保証されていません。特定のユースケースでその制限が受け入れられない場合は、このモジュールよりも&lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt;の方が適していると考えられます。</target>
        </trans-unit>
        <trans-unit id="908afa0382a98c83fc4ecb7627fefd2844f8d1fa" translate="yes" xml:space="preserve">
          <source>Furthermore, parameterized generics erase type parameters during object creation:</source>
          <target state="translated">さらに、パラメータ化されたジェネリックは、オブジェクト作成時に型パラメータを消去します。</target>
        </trans-unit>
        <trans-unit id="0555f6f9e263f192be068a009836d2a2523e37d9" translate="yes" xml:space="preserve">
          <source>Furthermore, there is not a compelling case for arbitrarily altering the object graph of loggers, handlers, filters, formatters at run-time, once a configuration is set up; the verbosity of loggers and handlers can be controlled just by setting levels (and, in the case of loggers, propagation flags). Changing the object graph arbitrarily in a safe way is problematic in a multi-threaded environment; while not impossible, the benefits are not worth the complexity it adds to the implementation.</source>
          <target state="translated">さらに、ロガー、ハンドラ、フィルタ、フォーマッタのオブジェクトグラフをランタイムで任意に変更することには説得力がありません。安全な方法でオブジェクトグラフを任意に変更することは、マルチスレッド環境では問題となります。</target>
        </trans-unit>
        <trans-unit id="46806aa64dafed90bfb876c61bba7987d063cf08" translate="yes" xml:space="preserve">
          <source>Fused multiply-add. Return self*other+third with no rounding of the intermediate product self*other.</source>
          <target state="translated">融合乗算加算。中間積self*otherを丸めずにself*other+3番目を返します。</target>
        </trans-unit>
        <trans-unit id="ed8b6a30978a9c952f9c9df10088a33c954813bd" translate="yes" xml:space="preserve">
          <source>Future Functions</source>
          <target state="translated">将来の機能</target>
        </trans-unit>
        <trans-unit id="040c5373d5621aa737e101cc596fa0199c9dc5ff" translate="yes" xml:space="preserve">
          <source>Future Object</source>
          <target state="translated">フューチャーオブジェクト</target>
        </trans-unit>
        <trans-unit id="7afdbd06b8b7618d0daf7e6ccc98c609e58e8e9f" translate="yes" xml:space="preserve">
          <source>Future Objects</source>
          <target state="translated">フューチャーオブジェクト</target>
        </trans-unit>
        <trans-unit id="18e4acee739b17a1065f82661408ae77421afefb" translate="yes" xml:space="preserve">
          <source>Future is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; object. Coroutines can await on Future objects until they either have a result or an exception set, or until they are cancelled.</source>
          <target state="translated">未来は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;待ち望まれる&lt;/a&gt;オブジェクトです。コルーチンは、結果または例外が設定されるか、キャンセルされるまで、Futureオブジェクトを待機できます。</target>
        </trans-unit>
        <trans-unit id="f0baeb07db9b5a4d0123d47219a8a9ce4d777329" translate="yes" xml:space="preserve">
          <source>Future is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; object. Coroutines can await on Future objects until they either have a result or an exception set, or until they are cancelled.</source>
          <target state="translated">未来は&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;待ち望まれる&lt;/a&gt;オブジェクトです。コルーチンは、結果または例外が設定されるまで、またはキャンセルされるまで、Futureオブジェクトを待機できます。</target>
        </trans-unit>
        <trans-unit id="3feb6a8fec72549860ff9b054d1b990159ab9d6c" translate="yes" xml:space="preserve">
          <source>Future objects in asyncio are needed to allow callback-based code to be used with async/await.</source>
          <target state="translated">asyncio の将来のオブジェクトは、コールバックベースのコードを async/await で使用できるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="f3c8c35a0717de250776c3a109889f261085ce97" translate="yes" xml:space="preserve">
          <source>Future objects, sometimes exposed by libraries and some asyncio APIs, can be awaited:</source>
          <target state="translated">将来のオブジェクトは、ライブラリやいくつかのasyncio APIによって公開されることがあります。</target>
        </trans-unit>
        <trans-unit id="b5fcc0b7fc3f9b4a713a58338f8eab747e7ec9c4" translate="yes" xml:space="preserve">
          <source>Future statements</source>
          <target state="translated">今後の見通し</target>
        </trans-unit>
        <trans-unit id="293b9c2c76d6969ac75fae9cc6bc05878d13b9ce" translate="yes" xml:space="preserve">
          <source>Future statements are specified by bits which can be bitwise ORed together to specify multiple statements. The bitfield required to specify a given feature can be found as the &lt;code&gt;compiler_flag&lt;/code&gt; attribute on the &lt;code&gt;_Feature&lt;/code&gt; instance in the &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">将来のステートメントは、複数のステートメントを指定するためにビット単位のORをとることができるビットによって指定されます。特定の機能を指定するために必要なビットフィールドは、&lt;a href=&quot;__future__#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;モジュールの &lt;code&gt;_Feature&lt;/code&gt; インスタンスの &lt;code&gt;compiler_flag&lt;/code&gt; 属性として見つけることができます。</target>
        </trans-unit>
        <trans-unit id="943e868a2624e15afba6299f4ed4ded48727c51e" translate="yes" xml:space="preserve">
          <source>FutureWarning</source>
          <target state="translated">FutureWarning</target>
        </trans-unit>
        <trans-unit id="965db80f650641f51dead99c13720e4035c9ef70" translate="yes" xml:space="preserve">
          <source>Futures</source>
          <target state="translated">Futures</target>
        </trans-unit>
        <trans-unit id="4c25945d461c0634df34d19c19a37fb40386b467" translate="yes" xml:space="preserve">
          <source>GEN_CLOSED: Execution has completed.</source>
          <target state="translated">GEN_CLOSEDです。実行が完了しました。</target>
        </trans-unit>
        <trans-unit id="650b3ffe0606ed0d5caee29b91e192c6db844113" translate="yes" xml:space="preserve">
          <source>GEN_CREATED: Waiting to start execution.</source>
          <target state="translated">GEN_CREATEDです。実行開始待ちです。</target>
        </trans-unit>
        <trans-unit id="b1fe62534e6aac45bba898aa978e224194a8f480" translate="yes" xml:space="preserve">
          <source>GEN_RUNNING: Currently being executed by the interpreter.</source>
          <target state="translated">GEN_RUNNING:現在、インタープリタによって実行されています。</target>
        </trans-unit>
        <trans-unit id="2643066350ead1c0a8664b7667b6b4bc694078a2" translate="yes" xml:space="preserve">
          <source>GEN_SUSPENDED: Currently suspended at a yield expression.</source>
          <target state="translated">GEN_SUSPENDED:現在、イールド式でサスペンドされています。</target>
        </trans-unit>
        <trans-unit id="a246c5f8bb908d1c393f6923487aecfa272e691b" translate="yes" xml:space="preserve">
          <source>GIF 87a and 89a Files</source>
          <target state="translated">GIF 87aと89aファイル</target>
        </trans-unit>
        <trans-unit id="29b0c001de448507eeda37b597ce4ce0ec650ba5" translate="yes" xml:space="preserve">
          <source>GNOME uses a version of the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module by James Henstridge, but this version has a slightly different API. Its documented usage was:</source>
          <target state="translated">GNOMEはJames Henstridgeによる&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;モジュールのバージョンを使用しますが、このバージョンのAPIは少し異なります。文書化された使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e6520e025af22317712e26a57b07cbcd978f6fae" translate="yes" xml:space="preserve">
          <source>GNU &lt;strong&gt;gettext&lt;/strong&gt; API</source>
          <target state="translated">GNU &lt;strong&gt;gettext&lt;/strong&gt; API</target>
        </trans-unit>
        <trans-unit id="0852894f9b2a41ca0b12f6e51a66ede0a0cffce6" translate="yes" xml:space="preserve">
          <source>GNU tar format.</source>
          <target state="translated">GNU tar フォーマット。</target>
        </trans-unit>
        <trans-unit id="77104d0ac72d310bfb0a065e06a3dcbeab2ef352" translate="yes" xml:space="preserve">
          <source>GNU tar manual, Basic Tar Format</source>
          <target state="translated">GNU tar マニュアル,基本的なタール形式</target>
        </trans-unit>
        <trans-unit id="f1c7eabb625a30cd8386b723eb7564d690dc3bda" translate="yes" xml:space="preserve">
          <source>GUI classes</source>
          <target state="translated">GUIクラス</target>
        </trans-unit>
        <trans-unit id="cdac0a16fe6c8715769cabffbcf5b111542185f3" translate="yes" xml:space="preserve">
          <source>Gamma distribution. (&lt;em&gt;Not&lt;/em&gt; the gamma function!) Conditions on the parameters are &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; and &lt;code&gt;beta &amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">ガンマ分布。（ガンマ関数&lt;em&gt;で&lt;/em&gt;は&lt;em&gt;ありません&lt;/em&gt;！）パラメータの条件は、 &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; および &lt;code&gt;beta &amp;gt; 0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9c36f27f079aad3d99c9aa2c98a958440131d7a5" translate="yes" xml:space="preserve">
          <source>Gathering statistics about garbage collection, such as how often various generations are collected, and how long the collection takes.</source>
          <target state="translated">様々な世代がどのくらいの頻度で収集されているのか、どのくらいの期間で収集されているのかなど、ゴミ収集に関する統計を収集します。</target>
        </trans-unit>
        <trans-unit id="94e14ba841dd9989631b47b319bec6cacb6f1eea" translate="yes" xml:space="preserve">
          <source>Gaussian distribution. &lt;em&gt;mu&lt;/em&gt; is the mean, and &lt;em&gt;sigma&lt;/em&gt; is the standard deviation. This is slightly faster than the &lt;a href=&quot;#random.normalvariate&quot;&gt;&lt;code&gt;normalvariate()&lt;/code&gt;&lt;/a&gt; function defined below.</source>
          <target state="translated">ガウス分布。&lt;em&gt;mu&lt;/em&gt;は平均、&lt;em&gt;sigma&lt;/em&gt;は標準偏差です。これは、以下で定義されている&lt;a href=&quot;#random.normalvariate&quot;&gt; &lt;code&gt;normalvariate()&lt;/code&gt; &lt;/a&gt;関数よりわずかに高速です。</target>
        </trans-unit>
        <trans-unit id="d5884a44b6d020c29a2f374e66fdf68d2522d7a5" translate="yes" xml:space="preserve">
          <source>General calendar related functions.</source>
          <target state="translated">カレンダー関連機能全般。</target>
        </trans-unit>
        <trans-unit id="c55d5d54d0be20d8b60e13b1e058e6199fc67a9b" translate="yes" xml:space="preserve">
          <source>General calendar-related functions. &lt;a href=&quot;calendar#calendar.timegm&quot;&gt;&lt;code&gt;timegm()&lt;/code&gt;&lt;/a&gt; is the inverse of &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; from this module.</source>
          <target state="translated">一般的なカレンダー関連機能。&lt;a href=&quot;calendar#calendar.timegm&quot;&gt; &lt;code&gt;timegm()&lt;/code&gt; &lt;/a&gt;は、このモジュールの&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="9ceee6648db6ad65058c1365753f6d071c93ac56" translate="yes" xml:space="preserve">
          <source>General format. For a given precision &lt;code&gt;p &amp;gt;= 1&lt;/code&gt;, this rounds the number to &lt;code&gt;p&lt;/code&gt; significant digits and then formats the result in either fixed-point format or in scientific notation, depending on its magnitude.</source>
          <target state="translated">一般的なフォーマット。与えられた精度 &lt;code&gt;p &amp;gt;= 1&lt;/code&gt; 場合、これは数値を有効桁数 &lt;code&gt;p&lt;/code&gt; に丸め、結果をその大きさに応じて固定小数点形式または科学表記法でフォーマットします。</target>
        </trans-unit>
        <trans-unit id="f322561eef774a62c9210e7625ce378d4c97d613" translate="yes" xml:space="preserve">
          <source>General format. Same as &lt;code&gt;'g'&lt;/code&gt; except switches to &lt;code&gt;'E'&lt;/code&gt; if the number gets too large. The representations of infinity and NaN are uppercased, too.</source>
          <target state="translated">一般的なフォーマット。数値が大きくなりすぎた場合に &lt;code&gt;'E'&lt;/code&gt; 切り替わる以外は、 &lt;code&gt;'g'&lt;/code&gt; 同じです。無限大とNaNの表現も大文字です。</target>
        </trans-unit>
        <trans-unit id="ede442e713df309353f00b1e6c5eca3991f17a5a" translate="yes" xml:space="preserve">
          <source>General properties</source>
          <target state="translated">一般物性</target>
        </trans-unit>
        <trans-unit id="bf6bda4587aff077462187186bdf6576ccc550c7" translate="yes" xml:space="preserve">
          <source>General rules</source>
          <target state="translated">一般的なルール</target>
        </trans-unit>
        <trans-unit id="068195143092a9c76f7f35d028344c892962b8b0" translate="yes" xml:space="preserve">
          <source>General strictness switches:</source>
          <target state="translated">一般的な厳しさのスイッチ。</target>
        </trans-unit>
        <trans-unit id="e4a6b871e250a74d5d8b375dda6c5463d02ee60e" translate="yes" xml:space="preserve">
          <source>Generally synchronization primitives are not as necessary in a multiprocess program as they are in a multithreaded program. See the documentation for &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">一般に、同期プリミティブは、マルチスレッドプログラムの場合のようにマルチプロセスプログラムでは必要ありません。&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="18a9756dceb01305df40a47834a42c5432a22e44" translate="yes" xml:space="preserve">
          <source>Generally, argument defaults are specified either by passing a default to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; or by calling the &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; methods with a specific set of name-value pairs. Sometimes however, it may be useful to specify a single parser-wide default for arguments. This can be accomplished by passing the &lt;code&gt;argument_default=&lt;/code&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. For example, to globally suppress attribute creation on &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; calls, we supply &lt;code&gt;argument_default=SUPPRESS&lt;/code&gt;:</source>
          <target state="translated">一般に、引数のデフォルトは、デフォルトを&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; に&lt;/a&gt;渡すか、名前と値のペアの特定のセットで&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって指定されます。ただし、引数にパーサー全体のデフォルトを1つ指定すると便利な場合があります。これは、渡すことによって達成することができる &lt;code&gt;argument_default=&lt;/code&gt; にキーワード引数を&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;。たとえば、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;呼び出しでの属性の作成をグローバルに抑制するには、 &lt;code&gt;argument_default=SUPPRESS&lt;/code&gt; を指定します。</target>
        </trans-unit>
        <trans-unit id="a946721c512bcc2260c23fb30f93346cfecd1df2" translate="yes" xml:space="preserve">
          <source>Generate &lt;em&gt;n&lt;/em&gt; random bytes.</source>
          <target state="translated">&lt;em&gt;n個の&lt;/em&gt;ランダムバイトを生成します。</target>
        </trans-unit>
        <trans-unit id="760d892cb151b00c2aba0b8d86a8bb2cd386807c" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;SIGABRT&lt;/code&gt; signal to the current process. On Unix, the default behavior is to produce a core dump; on Windows, the process immediately returns an exit code of &lt;code&gt;3&lt;/code&gt;. Be aware that calling this function will not call the Python signal handler registered for &lt;code&gt;SIGABRT&lt;/code&gt; with &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のプロセスに &lt;code&gt;SIGABRT&lt;/code&gt; シグナルを生成します。Unixでは、デフォルトの動作はコアダンプを生成することです。Windowsでは、プロセスはすぐに終了コード &lt;code&gt;3&lt;/code&gt; を返します。この関数を呼び出しても、 &lt;code&gt;SIGABRT&lt;/code&gt; に登録されたPythonシグナルハンドラーが&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;で呼び出されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="58a95565098b688544062529a9855e160d91e91d" translate="yes" xml:space="preserve">
          <source>Generate a CAB file, add it as a stream to the MSI file, put it into the &lt;code&gt;Media&lt;/code&gt; table, and remove the generated file from the disk.</source>
          <target state="translated">CABファイルを生成し、MSIファイルにストリームとして追加し、それを &lt;code&gt;Media&lt;/code&gt; テーブルに入れ、生成されたファイルをディスクから削除します。</target>
        </trans-unit>
        <trans-unit id="5329a732ca7f35819388ce77de62767aca915104" translate="yes" xml:space="preserve">
          <source>Generate a UUID based on the MD5 hash of a namespace identifier (which is a UUID) and a name (which is a string).</source>
          <target state="translated">名前空間識別子(UUID)と名前(文字列)のMD5ハッシュに基づいてUUIDを生成します。</target>
        </trans-unit>
        <trans-unit id="e254e1d1587616df23d81a95de4537b712650d32" translate="yes" xml:space="preserve">
          <source>Generate a UUID based on the SHA-1 hash of a namespace identifier (which is a UUID) and a name (which is a string).</source>
          <target state="translated">名前空間識別子 (UUID)と名前 (文字列)の SHA-1 ハッシュに基づいて UUID を生成します。</target>
        </trans-unit>
        <trans-unit id="3e2dda6f18229b616248722abe6bc7c08b0ae156" translate="yes" xml:space="preserve">
          <source>Generate a UUID from a host ID, sequence number, and the current time. If &lt;em&gt;node&lt;/em&gt; is not given, &lt;a href=&quot;#uuid.getnode&quot;&gt;&lt;code&gt;getnode()&lt;/code&gt;&lt;/a&gt; is used to obtain the hardware address. If &lt;em&gt;clock_seq&lt;/em&gt; is given, it is used as the sequence number; otherwise a random 14-bit sequence number is chosen.</source>
          <target state="translated">ホストID、シーケンス番号、および現在の時刻からUUIDを生成します。&lt;em&gt;node&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;#uuid.getnode&quot;&gt; &lt;code&gt;getnode()&lt;/code&gt; &lt;/a&gt;を使用してハードウェアアドレスを取得します。&lt;em&gt;clock_seq&lt;/em&gt;が指定されている場合、それがシーケンス番号として使用されます。それ以外の場合は、ランダムな14ビットのシーケンス番号が選択されます。</target>
        </trans-unit>
        <trans-unit id="fe41ab241f1f685b0dbb424e0207c19044174796" translate="yes" xml:space="preserve">
          <source>Generate a hard-to-guess temporary URL containing a security token suitable for password recovery applications:</source>
          <target state="translated">パスワード回復アプリケーションに適したセキュリティトークンを含む、推測しにくい一時的なURLを生成します。</target>
        </trans-unit>
        <trans-unit id="c2ffe2e554218a5f937438f8460923a2c93a492c" translate="yes" xml:space="preserve">
          <source>Generate a random UUID.</source>
          <target state="translated">ランダムなUUIDを生成します。</target>
        </trans-unit>
        <trans-unit id="eeabda0fa004edbf77932a794b4287d23b30cd9b" translate="yes" xml:space="preserve">
          <source>Generate a stereo fragment from a mono fragment. Each pair of samples in the stereo fragment are computed from the mono sample, whereby left channel samples are multiplied by &lt;em&gt;lfactor&lt;/em&gt; and right channel samples by &lt;em&gt;rfactor&lt;/em&gt;.</source>
          <target state="translated">モノフラグメントからステレオフラグメントを生成します。ステレオフラグメントのサンプルの各ペアはモノラルサンプルから計算されます。これにより、左チャネルサンプルには&lt;em&gt;lfactor&lt;/em&gt;が乗算され、右チャネルサンプルには&lt;em&gt;rfactor&lt;/em&gt;が乗算され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bb0de2380f61c8b3b5ce97b16629785ba2f3c883" translate="yes" xml:space="preserve">
          <source>Generate a ten-character alphanumeric password with at least one lowercase character, at least one uppercase character, and at least three digits:</source>
          <target state="translated">少なくとも1つの小文字、少なくとも1つの大文字、少なくとも3桁の数字を持つ10文字の英数字パスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="d737efc68fd8c95bb0b04bfa067c27c815266bd2" translate="yes" xml:space="preserve">
          <source>Generate an &lt;a href=&quot;https://xkcd.com/936/&quot;&gt;XKCD-style passphrase&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://xkcd.com/936/&quot;&gt;XKCDスタイルのパスフレーズ&lt;/a&gt;を生成します。</target>
        </trans-unit>
        <trans-unit id="5254e77c49e3726b9ce7afa0602745d90779e6d7" translate="yes" xml:space="preserve">
          <source>Generate an eight-character alphanumeric password:</source>
          <target state="translated">8文字の英数字のパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="9c47bb489aa92718ba831cc71a1f8f2e2fe4b431" translate="yes" xml:space="preserve">
          <source>Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory &lt;em&gt;top&lt;/em&gt; (including &lt;em&gt;top&lt;/em&gt; itself), it yields a 3-tuple &lt;code&gt;(dirpath, dirnames,
filenames)&lt;/code&gt;.</source>
          <target state="translated">ツリーをトップダウンまたはボトムアップでウォークして、ディレクトリツリーにファイル名を生成します。ディレクトリをルートとするツリー内の各ディレクトリの&lt;em&gt;トップ&lt;/em&gt;（含む&lt;em&gt;トップ&lt;/em&gt;自体）を、それが3タプルが得られる &lt;code&gt;(dirpath, dirnames, filenames)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a176b8716da502b7a00a24adf4a150b1dcaccace" translate="yes" xml:space="preserve">
          <source>Generated just after setting the focus item to open=False.</source>
          <target state="translated">フォーカス項目をopen=Falseに設定した直後に生成されます。</target>
        </trans-unit>
        <trans-unit id="0376f849b020636ee4b54a60454a83645273bf92" translate="yes" xml:space="preserve">
          <source>Generated just before settings the focus item to open=True.</source>
          <target state="translated">フォーカス項目をopen=Trueに設定する直前に生成されます。</target>
        </trans-unit>
        <trans-unit id="725cd661f4740654b5db99af933817749928d8b8" translate="yes" xml:space="preserve">
          <source>Generated pseudo-random byte sequences will be unique if they are of sufficient length, but are not necessarily unpredictable. They can be used for non-cryptographic purposes and for certain purposes in cryptographic protocols, but usually not for key generation etc.</source>
          <target state="translated">生成された擬似ランダムバイト列は、十分な長さであれば一意であるが、必ずしも予測できないわけではない。これらは暗号化されていない目的や暗号化プロトコルの特定の目的に使用することができますが、通常は鍵の生成などには使用されません。</target>
        </trans-unit>
        <trans-unit id="ead06510ef285ebb7f6220395aade6782b29c550" translate="yes" xml:space="preserve">
          <source>Generated whenever the selection changes.</source>
          <target state="translated">選択範囲が変更されるたびに生成されます。</target>
        </trans-unit>
        <trans-unit id="b0bc8d38af1670401a998afe93ec1319cc1b94a4" translate="yes" xml:space="preserve">
          <source>Generates &lt;em&gt;n&lt;/em&gt; random samples for a given mean and standard deviation. Returns a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">指定された平均値と標準偏差に対して&lt;em&gt;n個の&lt;/em&gt;ランダムサンプルを生成します。&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;値の&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="eac497b73b4148960c71a958d63bde7183c58b8a" translate="yes" xml:space="preserve">
          <source>Generates a string representation of an XML element, including all subelements. &lt;em&gt;element&lt;/em&gt; is an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; is the output encoding (default is US-ASCII). Use &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; to generate a Unicode string (otherwise, a bytestring is generated). &lt;em&gt;method&lt;/em&gt; is either &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt; or &lt;code&gt;&quot;text&quot;&lt;/code&gt; (default is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;). &lt;em&gt;xml_declaration&lt;/em&gt;, &lt;em&gt;default_namespace&lt;/em&gt; and &lt;em&gt;short_empty_elements&lt;/em&gt; has the same meaning as in &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt;. Returns an (optionally) encoded string containing the XML data.</source>
          <target state="translated">すべてのサブ要素を含む、XML要素の文字列表現を生成します。&lt;em&gt;element&lt;/em&gt;は&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;エンコーディング&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;は出力エンコーディングです（デフォルトはUS-ASCIIです）。使用 &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; Unicode文字列（そうでなければ、バイト文字列が生成される）を生成します。&lt;em&gt;method&lt;/em&gt;は &lt;code&gt;&quot;xml&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; または &lt;code&gt;&quot;text&quot;&lt;/code&gt; のいずれかです（デフォルトは &lt;code&gt;&quot;xml&quot;&lt;/code&gt; です）。&lt;em&gt;xml_declaration&lt;/em&gt;、&lt;em&gt;default_namespace&lt;/em&gt;、および&lt;em&gt;short_empty_elements&lt;/em&gt;は、&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;ElementTree.write()&lt;/code&gt; &lt;/a&gt;と同じ意味です。XMLデータを含む（オプションで）エンコードされた文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6204d45d6bba3d8356ab2594a70a820efafd7b4b" translate="yes" xml:space="preserve">
          <source>Generates a string representation of an XML element, including all subelements. &lt;em&gt;element&lt;/em&gt; is an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; is the output encoding (default is US-ASCII). Use &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; to generate a Unicode string (otherwise, a bytestring is generated). &lt;em&gt;method&lt;/em&gt; is either &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt; or &lt;code&gt;&quot;text&quot;&lt;/code&gt; (default is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;). &lt;em&gt;xml_declaration&lt;/em&gt;, &lt;em&gt;default_namespace&lt;/em&gt; and &lt;em&gt;short_empty_elements&lt;/em&gt; has the same meaning as in &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt;. Returns a list of (optionally) encoded strings containing the XML data. It does not guarantee any specific sequence, except that &lt;code&gt;b&quot;&quot;.join(tostringlist(element)) == tostring(element)&lt;/code&gt;.</source>
          <target state="translated">すべてのサブ要素を含む、XML要素の文字列表現を生成します。&lt;em&gt;element&lt;/em&gt;は&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;エンコーディング&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;は出力エンコーディングです（デフォルトはUS-ASCIIです）。使用 &lt;code&gt;encoding=&quot;unicode&quot;&lt;/code&gt; Unicode文字列（そうでなければ、バイト文字列が生成される）を生成します。&lt;em&gt;method&lt;/em&gt;は &lt;code&gt;&quot;xml&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; または &lt;code&gt;&quot;text&quot;&lt;/code&gt; のいずれかです（デフォルトは &lt;code&gt;&quot;xml&quot;&lt;/code&gt; です）。&lt;em&gt;xml_declaration&lt;/em&gt;、&lt;em&gt;default_namespace&lt;/em&gt;、および&lt;em&gt;short_empty_elements&lt;/em&gt;は、&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;ElementTree.write()&lt;/code&gt; &lt;/a&gt;と同じ意味です。。 XMLデータを含む（オプションで）エンコードされた文字列のリストを返します。 &lt;code&gt;b&quot;&quot;.join(tostringlist(element)) == tostring(element)&lt;/code&gt; を除き、特定のシーケンスは保証されません。</target>
        </trans-unit>
        <trans-unit id="5b7862a259e168570964f1a8bcd0d1b5737c3c5f" translate="yes" xml:space="preserve">
          <source>Generates and returns an abstract syntax tree instead of returning a compiled code object.</source>
          <target state="translated">コンパイルされたコード・オブジェクトを返す代わりに、抽象構文ツリーを生成して返します。</target>
        </trans-unit>
        <trans-unit id="708786a80761c18bb49de75d753c2402b77bb538" translate="yes" xml:space="preserve">
          <source>Generating Symbol Tables</source>
          <target state="translated">シンボルテーブルの生成</target>
        </trans-unit>
        <trans-unit id="47e3a19806fd6ae855bc1e14ecf253bfc6c478ca" translate="yes" xml:space="preserve">
          <source>Generating a plist:</source>
          <target state="translated">plist を生成します。</target>
        </trans-unit>
        <trans-unit id="cbad253020b7e1c56a37eb457d6613f3ba57d4a8" translate="yes" xml:space="preserve">
          <source>Generating tokens</source>
          <target state="translated">トークンの生成</target>
        </trans-unit>
        <trans-unit id="e3833cf62cfdb901cbd45270e457754bafbc5c12" translate="yes" xml:space="preserve">
          <source>Generator Types</source>
          <target state="translated">発電機の種類</target>
        </trans-unit>
        <trans-unit id="f1c6dab37c8f8bbc2a1a1c78f437217210eb50ad" translate="yes" xml:space="preserve">
          <source>Generator-based Coroutines</source>
          <target state="translated">ジェネレータベースのコルーチン</target>
        </trans-unit>
        <trans-unit id="9318bd97ef11f214febd817fed04cbde02eb2197" translate="yes" xml:space="preserve">
          <source>Generator-based coroutines predate async/await syntax. They are Python generators that use &lt;code&gt;yield from&lt;/code&gt; expressions to await on Futures and other coroutines.</source>
          <target state="translated">ジェネレータベースのコルーチンは、非同期/待機構文よりも古いものです。これらはPythonジェネレーターであり &lt;code&gt;yield from&lt;/code&gt; 式からのyieldを使用して、Futureやその他のコルーチンを待機します。</target>
        </trans-unit>
        <trans-unit id="c463bc7eba03866e87736c2166b5208e94578261" translate="yes" xml:space="preserve">
          <source>Generator-based coroutines should be decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@asyncio.coroutine&lt;/code&gt;&lt;/a&gt;, although this is not enforced.</source>
          <target state="translated">ジェネレーターベースのコルーチンは&lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@asyncio.coroutine&lt;/code&gt; &lt;/a&gt;で装飾する必要がありますが、これは強制されていません。</target>
        </trans-unit>
        <trans-unit id="091c54c4935a2ee35bc6aef14311233891434110" translate="yes" xml:space="preserve">
          <source>GeneratorExit</source>
          <target state="translated">GeneratorExit</target>
        </trans-unit>
        <trans-unit id="95b537c554172f8d70e5e90217fa90b2fd3fc862" translate="yes" xml:space="preserve">
          <source>Generic Alias Type</source>
          <target state="translated">一般的なエイリアスの種類</target>
        </trans-unit>
        <trans-unit id="0e0fbaa97fbe2d5968844c44481eeeeaa9d8cf4d" translate="yes" xml:space="preserve">
          <source>Generic Operating System Services</source>
          <target state="translated">汎用オペレーティングシステムサービス</target>
        </trans-unit>
        <trans-unit id="838ba07d03a80d8b34bb8b7d73b37a6db23645d6" translate="yes" xml:space="preserve">
          <source>Generic concrete collections</source>
          <target state="translated">一般的な具体的なコレクション</target>
        </trans-unit>
        <trans-unit id="4ef339fbad9266b6e7fe779f770b71d1ef6059da" translate="yes" xml:space="preserve">
          <source>Generic element structure builder. This builder converts a sequence of start, data, end, comment and pi method calls to a well-formed element structure. You can use this class to build an element structure using a custom XML parser, or a parser for some other XML-like format.</source>
          <target state="translated">汎用的な要素構造体ビルダです。このビルダは、開始、データ、終了、コメント、およびπメソッドの呼び出しのシーケンスを、整形された要素構造に変換します。このクラスを使用して、カスタム XML パーサや他の XML ライクな形式のパーサを使用して要素構造を構築することができます。</target>
        </trans-unit>
        <trans-unit id="03071c1aabb41ff2ab0d6cc5a458c21d1dd11e1c" translate="yes" xml:space="preserve">
          <source>Generic implementation of the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;&lt;code&gt;load_tests&lt;/code&gt; protocol for use in test packages. &lt;em&gt;pkg_dir&lt;/em&gt; is the root directory of the package; &lt;em&gt;loader&lt;/em&gt;, &lt;em&gt;standard_tests&lt;/em&gt;, and &lt;em&gt;pattern&lt;/em&gt; are the arguments expected by &lt;code&gt;load_tests&lt;/code&gt;. In simple cases, the test package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt; can be the following:</source>
          <target state="translated">一般的な実装&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;load_tests&lt;/code&gt; のテストパッケージで使用するためのプロトコル。&lt;em&gt;pkg_dir&lt;/em&gt;はパッケージのルートディレクトリです。&lt;em&gt;loader&lt;/em&gt;、&lt;em&gt;standard_tests&lt;/em&gt;、および&lt;em&gt;pattern&lt;/em&gt;は、 &lt;code&gt;load_tests&lt;/code&gt; が予期する引数です。単純なケースでは、テストパッケージの &lt;code&gt;__init__.py&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="293fd67a1e9b6b131f8a1081860292ba633bb726" translate="yes" xml:space="preserve">
          <source>Generic interface to &lt;code&gt;dbm&lt;/code&gt;-style databases.</source>
          <target state="translated">&lt;code&gt;dbm&lt;/code&gt; スタイルのデータベースへの汎用インターフェース。</target>
        </trans-unit>
        <trans-unit id="ccb8e82277924f89b0be2c9144f908b084a885ad" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;IO[AnyStr]&lt;/code&gt; and its subclasses &lt;code&gt;TextIO(IO[str])&lt;/code&gt; and &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; represent the types of I/O streams such as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ジェネリック型 &lt;code&gt;IO[AnyStr]&lt;/code&gt; とそのサブクラス &lt;code&gt;TextIO(IO[str])&lt;/code&gt; および &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; は、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返されるようなI / Oストリームのタイプを表します。</target>
        </trans-unit>
        <trans-unit id="c44b1772cacf8e2b194f992804eb5f2912e3a9f7" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;IO[AnyStr]&lt;/code&gt; and its subclasses &lt;code&gt;TextIO(IO[str])&lt;/code&gt; and &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; represent the types of I/O streams such as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. These types are also in the &lt;code&gt;typing.io&lt;/code&gt; namespace.</source>
          <target state="translated">ジェネリック型 &lt;code&gt;IO[AnyStr]&lt;/code&gt; とそのサブクラス &lt;code&gt;TextIO(IO[str])&lt;/code&gt; および &lt;code&gt;BinaryIO(IO[bytes])&lt;/code&gt; は、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返されるようなI / Oストリームの型を表します。これらのタイプは、 &lt;code&gt;typing.io&lt;/code&gt; 名前空間にもあります。</target>
        </trans-unit>
        <trans-unit id="a3b7c04b18cd92e8bd3dbd66ec9303b0a0d542df" translate="yes" xml:space="preserve">
          <source>Generic version of &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;. Useful for annotating return types. To annotate arguments it is preferred to use an abstract collection type such as &lt;a href=&quot;#typing.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;汎用バージョン。戻り型に注釈を付けるのに役立ちます。引数に注釈を付けるには、&lt;a href=&quot;#typing.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;などの抽象コレクション型を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="0945c1dff6718f21aa4e4deeaab1b0eddc4c4cdc" translate="yes" xml:space="preserve">
          <source>Generics can be parameterized by using a new factory available in typing called &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt;と呼ばれるタイピングで利用可能な新しいファクトリーを使用することにより、ジェネリックスをパラメーター化できます。</target>
        </trans-unit>
        <trans-unit id="1f99913680f7b744ab9431fbca519442e0fa1092" translate="yes" xml:space="preserve">
          <source>Geometric mean of data.</source>
          <target state="translated">データの幾何平均。</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="5e3619ade03466db61cd043463581c6cfbb2ff29" translate="yes" xml:space="preserve">
          <source>Get HTTP headers</source>
          <target state="translated">HTTP ヘッダの取得</target>
        </trans-unit>
        <trans-unit id="f09a08050952ccfb3acada1aca77f75efbcddc68" translate="yes" xml:space="preserve">
          <source>Get Mac OS version information and return it as tuple &lt;code&gt;(release, versioninfo,
machine)&lt;/code&gt; with &lt;em&gt;versioninfo&lt;/em&gt; being a tuple &lt;code&gt;(version, dev_stage,
non_release_version)&lt;/code&gt;.</source>
          <target state="translated">Mac OSのバージョン情報を取得し、タプルとしてそれを返す &lt;code&gt;(release, versioninfo, machine)&lt;/code&gt; と&lt;em&gt;VERSIONINFO&lt;/em&gt;タプルであること &lt;code&gt;(version, dev_stage, non_release_version)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="925b109ddf15351d05a8dddb0cb2a1abe8a6314b" translate="yes" xml:space="preserve">
          <source>Get a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; object for &lt;em&gt;module_or_name&lt;/em&gt;.</source>
          <target state="translated">取得&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダ&lt;/a&gt;のオブジェクト&lt;em&gt;module_or_nameを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="86045d27310009e0e6759608040d267e5fd2a923" translate="yes" xml:space="preserve">
          <source>Get a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; object for &lt;em&gt;module_or_name&lt;/em&gt;.</source>
          <target state="translated">取得&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダ&lt;/a&gt;のオブジェクト&lt;em&gt;module_or_nameを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="72d86f39c38483c75cc09653c3ddc241de805a8b" translate="yes" xml:space="preserve">
          <source>Get a character, returning a string instead of an integer, as &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; does. Function keys, keypad keys and other special keys return a multibyte string containing the key name. In no-delay mode, raise an exception if there is no input.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;が行うように、整数の代わりに文字列を返す文字を取得します。ファンクションキー、キーパッドキー、その他の特殊キーは、キー名を含むマルチバイト文字列を返します。遅延なしモードでは、入力がない場合は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6900a0c6cf3e15082dad7841462c7795b199570e" translate="yes" xml:space="preserve">
          <source>Get a character. Note that the integer returned does &lt;em&gt;not&lt;/em&gt; have to be in ASCII range: function keys, keypad keys and so on are represented by numbers higher than 255. In no-delay mode, return &lt;code&gt;-1&lt;/code&gt; if there is no input, otherwise wait until a key is pressed.</source>
          <target state="translated">キャラクターを取得します。返される整数は、ASCII範囲である必要はありませ&lt;em&gt;ん&lt;/em&gt;。ファンクションキー、キーパッドキーなどは、255より大きい数値で表されます。遅延なしモードでは、入力がない場合は &lt;code&gt;-1&lt;/code&gt; を返し、それ以外の場合はキーが表示されるまで待機しますが押されます。</target>
        </trans-unit>
        <trans-unit id="93b9156a4fc2066890c20b75a92de09ebab9456c" translate="yes" xml:space="preserve">
          <source>Get a child process watcher object.</source>
          <target state="translated">子プロセスウォッチャーオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="39098f6d062afd1a16e563ea56384bfbee189021" translate="yes" xml:space="preserve">
          <source>Get a description for a single group &lt;em&gt;group&lt;/em&gt;. If more than one group matches (if &amp;lsquo;group&amp;rsquo; is a real wildmat string), return the first match. If no group matches, return an empty string.</source>
          <target state="translated">単一のグループ&lt;em&gt;groupの&lt;/em&gt;説明を取得します。複数のグループが一致する場合（「group」が実際のワイルドマット文字列の場合）、最初の一致を返します。一致するグループがない場合は、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6df154c15550831d92d53462e0064abdf70ba6e4" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a date in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の時代に基づく方法で日付を表すための&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="21a8f80cea6f42070d455f9a01f487c95110be35" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a time in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の時代に基づく方法で時刻を表すための&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="36cacd63f5269b7f2289c301e7939d05fc6f8a5c" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent date and time in a locale-specific era-based way.</source>
          <target state="translated">ロケール固有の時代に基づく方法で日付と時刻を表す&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="7d7dfbaa516474dd4c7e1837620af5c2c9270f58" translate="yes" xml:space="preserve">
          <source>Get a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent time in the am/pm format.</source>
          <target state="translated">&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;形式で時刻を表すtime.strftime（）の形式文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="779b4604d3285273845eec25f955cd191148bbb6" translate="yes" xml:space="preserve">
          <source>Get a list of enabled ciphers. The list is in order of cipher priority. See &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有効な暗号のリストを取得します。リストは、暗号の優先順位の順です。&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3e7ce190d87e4a26bc8ee72ce60dccb04d75c9a2" translate="yes" xml:space="preserve">
          <source>Get a list of frame records for a frame and all outer frames. These frames represent the calls that lead to the creation of &lt;em&gt;frame&lt;/em&gt;. The first entry in the returned list represents &lt;em&gt;frame&lt;/em&gt;; the last entry represents the outermost call on &lt;em&gt;frame&lt;/em&gt;&amp;rsquo;s stack.</source>
          <target state="translated">フレームとすべての外部フレームのフレームレコードのリストを取得します。これらのフレームは、の創造につながるの呼び出しを表す&lt;em&gt;フレームを&lt;/em&gt;。返されるリストの最初のエントリは&lt;em&gt;フレームを&lt;/em&gt;表し&lt;em&gt;ます&lt;/em&gt;。最後のエントリは、&lt;em&gt;フレーム&lt;/em&gt;のスタックの最も外側の呼び出しを表します。</target>
        </trans-unit>
        <trans-unit id="7f4c093b2f65ea31077045cdbdc6cb56aae52fea" translate="yes" xml:space="preserve">
          <source>Get a list of frame records for a traceback&amp;rsquo;s frame and all inner frames. These frames represent calls made as a consequence of &lt;em&gt;frame&lt;/em&gt;. The first entry in the list represents &lt;em&gt;traceback&lt;/em&gt;; the last entry represents where the exception was raised.</source>
          <target state="translated">トレースバックのフレームとすべての内部フレームのフレームレコードのリストを取得します。これらのフレームは、&lt;em&gt;フレームの&lt;/em&gt;結果として行われた呼び出しを表します。リストの最初のエントリは&lt;em&gt;トレースバックを&lt;/em&gt;表します。最後のエントリは、例外が発生した場所を表します。</target>
        </trans-unit>
        <trans-unit id="f1cb38ae88663b4d14fae92b17af5d048a78c197" translate="yes" xml:space="preserve">
          <source>Get a list of loaded &amp;ldquo;certification authority&amp;rdquo; (CA) certificates. If the &lt;code&gt;binary_form&lt;/code&gt; parameter is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; each list entry is a dict like the output of &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;. Otherwise the method returns a list of DER-encoded certificates. The returned list does not contain certificates from &lt;em&gt;capath&lt;/em&gt; unless a certificate was requested and loaded by a SSL connection.</source>
          <target state="translated">ロードされた「認証局」（CA）証明書のリストを取得します。 &lt;code&gt;binary_form&lt;/code&gt; パラメータが&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、各リストエントリは&lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; の&lt;/a&gt;出力のような辞書です。それ以外の場合、メソッドはDERエンコードされた証明書のリストを返します。証明書が要求され、SSL接続によってロードされない限り、返されるリストには&lt;em&gt;capath&lt;/em&gt;からの証明書は含まれません。</target>
        </trans-unit>
        <trans-unit id="4d5e35a9ec661b8b336617dd56388e3578f9bcaf" translate="yes" xml:space="preserve">
          <source>Get a list of records for a frame and all higher (calling) and lower frames, and the size of the higher part.</source>
          <target state="translated">フレームとすべての上位(呼び出し)と下位フレームのレコードのリストと、上位部分のサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="b607418b2f9f5fc800736360b9d80cde873b574c" translate="yes" xml:space="preserve">
          <source>Get a regular expression that can be used with the regex function to recognize a positive response to a yes/no question.</source>
          <target state="translated">yes/noの質問に対する肯定的な応答を認識するためにregex関数で使用できる正規表現を取得します。</target>
        </trans-unit>
        <trans-unit id="79a142b2d506f97b9fb5762c6cdf9c0302dc08af" translate="yes" xml:space="preserve">
          <source>Get a regular expression that can be used with the regex(3) function to recognize a negative response to a yes/no question.</source>
          <target state="translated">yes/no の質問に対する否定的な応答を認識するために regex(3)関数で使用できる正規表現を取得。</target>
        </trans-unit>
        <trans-unit id="d3eeac88da2cc27ce1e1ed87177dc3dfa221e00e" translate="yes" xml:space="preserve">
          <source>Get a representation of up to 100 values used to represent the values 0 to 99.</source>
          <target state="translated">0 から 99 までの値の表現に使用される 100 までの値の表現を取得します。</target>
        </trans-unit>
        <trans-unit id="64b3b1f3e933b44a31fc73a92cc1c78260a70a72" translate="yes" xml:space="preserve">
          <source>Get a resource from a package.</source>
          <target state="translated">パッケージからリソースを取得します。</target>
        </trans-unit>
        <trans-unit id="816aa1ed94b1502f90d6599cc6c0d80af36297e3" translate="yes" xml:space="preserve">
          <source>Get a set containing all the valid keys for IANA time zones available anywhere on the time zone path. This is recalculated on every call to the function.</source>
          <target state="translated">タイムゾーンパス上の任意の場所で利用可能なIANAタイムゾーンのすべての有効なキーを含むセットを取得します。これは、この関数を呼び出すたびに再計算されます。</target>
        </trans-unit>
        <trans-unit id="7fe7caecfd8320cedfe667b5784ba16646cca4d6" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a date in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で日付を表すために、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="311be40c8088b83ef5389b49e19888ce42e3323e" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent a time in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で時刻を表すために、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="2716d1bcbc1da0920dc17276d3e242e7949d040e" translate="yes" xml:space="preserve">
          <source>Get a string that can be used as a format string for &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to represent date and time in a locale-specific way.</source>
          <target state="translated">ロケール固有の方法で日時を表すために、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;フォーマット文字列として使用できる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="c22c4986b7973b0bdf63cc50710f9ea10065ba7b" translate="yes" xml:space="preserve">
          <source>Get a string that represents the era used in the current locale.</source>
          <target state="translated">現在のロケールで使われている時代を表す文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="8ecbeb2948a064a1d000fcce4ea7595bf126a0a3" translate="yes" xml:space="preserve">
          <source>Get a string with the name of the character encoding used in the selected locale.</source>
          <target state="translated">選択したロケールで使用している文字エンコーディングの名前を含む文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="3e20e2ff8c2d677c284ec272725f5d83c5c4213a" translate="yes" xml:space="preserve">
          <source>Get a wide character. Return a character for most keys, or an integer for function keys, keypad keys, and other special keys. In no-delay mode, raise an exception if there is no input.</source>
          <target state="translated">ワイド文字を取得します。ほとんどのキーについては文字を、ファンクションキー、キーパッドキー、その他の特殊なキーについては整数を返します。ノーディレイモードでは、入力がない場合は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="f7d2c3adbad9eae4cd085407b57af1cda7e455a0" translate="yes" xml:space="preserve">
          <source>Get additional version information from the Windows Registry and return a tuple &lt;code&gt;(release, version, csd, ptype)&lt;/code&gt; referring to OS release, version number, CSD level (service pack) and OS type (multi/single processor).</source>
          <target state="translated">Windowsレジストリから追加のバージョン情報を取得し、OSリリース、バージョン番号、CSDレベル（サービスパック）およびOSタイプ（マルチ/シングルプロセッサ）を参照するタプル &lt;code&gt;(release, version, csd, ptype)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9deb349b97a97850ba9998a4ae913d86c706f166" translate="yes" xml:space="preserve">
          <source>Get an &lt;em&gt;option&lt;/em&gt; value for the named &lt;em&gt;section&lt;/em&gt;. If &lt;em&gt;vars&lt;/em&gt; is provided, it must be a dictionary. The &lt;em&gt;option&lt;/em&gt; is looked up in &lt;em&gt;vars&lt;/em&gt; (if provided), &lt;em&gt;section&lt;/em&gt;, and in &lt;em&gt;DEFAULTSECT&lt;/em&gt; in that order. If the key is not found and &lt;em&gt;fallback&lt;/em&gt; is provided, it is used as a fallback value. &lt;code&gt;None&lt;/code&gt; can be provided as a &lt;em&gt;fallback&lt;/em&gt; value.</source>
          <target state="translated">名前付き&lt;em&gt;セクションの&lt;/em&gt;&lt;em&gt;オプション&lt;/em&gt;値を取得し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;varsを指定する&lt;/em&gt;場合は、辞書でなければなりません。&lt;em&gt;オプション&lt;/em&gt;で検索された&lt;em&gt;VARS&lt;/em&gt;（提供される場合）、&lt;em&gt;セクション&lt;/em&gt;、およびで&lt;em&gt;DEFAULTSECT&lt;/em&gt;そのために。キーが見つからず、&lt;em&gt;フォールバック&lt;/em&gt;が提供されている場合、それはフォールバック値として使用されます。&lt;em&gt;フォールバック&lt;/em&gt;値として提供できるものはあり &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08f3c39de28bbb234f03726aa9b5ed3ded2bd201" translate="yes" xml:space="preserve">
          <source>Get an attribute, raising &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">属性を取得し、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生した場合は&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="01ae41efe44d095c763c4c0a0f3afb34f4d7e286" translate="yes" xml:space="preserve">
          <source>Get an event loop instance (current or via the policy).</source>
          <target state="translated">イベントループのインスタンスを取得します(現在またはポリシーを介して)。</target>
        </trans-unit>
        <trans-unit id="09e57fb7d36421267708207c1d86d1574ffc7414" translate="yes" xml:space="preserve">
          <source>Get channel binding data for current connection, as a bytes object. Returns &lt;code&gt;None&lt;/code&gt; if not connected or the handshake has not been completed.</source>
          <target state="translated">現在の接続のチャネルバインディングデータをバイトオブジェクトとして取得します。接続されていないか、ハンドシェイクが完了していない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3f64df69cb849e00861c89ea45d6eb10e222793a" translate="yes" xml:space="preserve">
          <source>Get current state of a coroutine object. The function is intended to be used with coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions, but will accept any coroutine-like object that has &lt;code&gt;cr_running&lt;/code&gt; and &lt;code&gt;cr_frame&lt;/code&gt; attributes.</source>
          <target state="translated">コルーチンオブジェクトの現在の状態を取得します。この関数は、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;関数によって作成されたコルーチンオブジェクトで使用することを目的としてい &lt;code&gt;cr_running&lt;/code&gt; 、 &lt;code&gt;cr_frame&lt;/code&gt; 属性とcr_frame属性を持つ任意のコルーチンのようなオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="a31ef43f00864a67bdb27ec6fcdf78ac1a4e5184" translate="yes" xml:space="preserve">
          <source>Get current state of a coroutine object. The function is intended to be used with coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions, but will accept any coroutine-like object that has &lt;code&gt;cr_running&lt;/code&gt; and &lt;code&gt;cr_frame&lt;/code&gt; attributes.</source>
          <target state="translated">コルーチンオブジェクトの現在の状態を取得します。この関数は、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;関数によって作成されたコルーチンオブジェクトで使用することを目的としてい &lt;code&gt;cr_running&lt;/code&gt; 、 &lt;code&gt;cr_frame&lt;/code&gt; 属性とcr_frame属性を持つコルーチンのようなオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="3bb4f5a84c2768dc4799d08ccb39e5edf77da68e" translate="yes" xml:space="preserve">
          <source>Get current state of a generator-iterator.</source>
          <target state="translated">ジェネレータ・イテレータの現在の状態を取得します。</target>
        </trans-unit>
        <trans-unit id="d23ebf469da242376e8f1406637cf81a48764515" translate="yes" xml:space="preserve">
          <source>Get information about a frame or traceback object. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; is returned.</source>
          <target state="translated">フレームまたはトレースバックオブジェクトに関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="0e91add3c9d4e628ec70e64261910715aafe5de9" translate="yes" xml:space="preserve">
          <source>Get information about a frame or traceback object. A &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; is returned.</source>
          <target state="translated">フレームまたはトレースバックオブジェクトに関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;Traceback(filename, lineno, function, code_context, index)&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="b5c10f03a20464d9e4021f1c2f9a0a198366fccb" translate="yes" xml:space="preserve">
          <source>Get information about arguments passed into a particular frame. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the argument names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; arguments or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;locals&lt;/em&gt; is the locals dictionary of the given frame.</source>
          <target state="translated">特定のフレームに渡された引数に関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;は引数名のリストです。&lt;em&gt;varargs&lt;/em&gt;および&lt;em&gt;キーワード&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; 引数の名前、または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;locals&lt;/em&gt;は、指定されたフレームのローカル辞書です。</target>
        </trans-unit>
        <trans-unit id="5fae3be01c8de3bc75535bdca2bba2a57914027e" translate="yes" xml:space="preserve">
          <source>Get information about arguments passed into a particular frame. A &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the argument names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; arguments or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;locals&lt;/em&gt; is the locals dictionary of the given frame.</source>
          <target state="translated">特定のフレームに渡された引数に関する情報を取得します。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgInfo(args, varargs, keywords, locals)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;は、引数名のリストです。&lt;em&gt;varargs&lt;/em&gt;と&lt;em&gt;keywords&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; 引数または &lt;code&gt;None&lt;/code&gt; の名前です。&lt;em&gt;locals&lt;/em&gt;は、指定されたフレームのローカル辞書です。</target>
        </trans-unit>
        <trans-unit id="82b4c672b45ae2ae6c3a3440d2312eaaed338213" translate="yes" xml:space="preserve">
          <source>Get information on the specified clock as a namespace object. Supported clock names and the corresponding functions to read their value are:</source>
          <target state="translated">指定されたクロックの情報を名前空間オブジェクトとして取得します。サポートされているクロック名と、その値を読み込むための対応する関数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0b8c4ad525dab4788364bb3a3c2c58bb4651d6cd" translate="yes" xml:space="preserve">
          <source>Get line &lt;em&gt;lineno&lt;/em&gt; from file named &lt;em&gt;filename&lt;/em&gt;. This function will never raise an exception &amp;mdash; it will return &lt;code&gt;''&lt;/code&gt; on errors (the terminating newline character will be included for lines that are found).</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;から&lt;em&gt;lineno&lt;/em&gt;行目を取得し&lt;em&gt;ます&lt;/em&gt;。この関数は決して例外を発生させません&amp;mdash; エラーの場合は &lt;code&gt;''&lt;/code&gt; を返します（見つかった行には終了改行文字が含まれます）。</target>
        </trans-unit>
        <trans-unit id="56abfe685ae982167bb48299cfb9366af1b3abe6" translate="yes" xml:space="preserve">
          <source>Get mailbox status. The result is a tuple of 2 integers: &lt;code&gt;(message count,
mailbox size)&lt;/code&gt;.</source>
          <target state="translated">メールボックスのステータスを取得します。結果は、2つの整数のタプル &lt;code&gt;(message count, mailbox size)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7725098627fdeaae6f27cbee4c8b4b5dc41d897e" translate="yes" xml:space="preserve">
          <source>Get or set the current default isolation level. &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; for autocommit mode or one of &amp;ldquo;DEFERRED&amp;rdquo;, &amp;ldquo;IMMEDIATE&amp;rdquo; or &amp;ldquo;EXCLUSIVE&amp;rdquo;. See section &lt;a href=&quot;#sqlite3-controlling-transactions&quot;&gt;Controlling Transactions&lt;/a&gt; for a more detailed explanation.</source>
          <target state="translated">現在のデフォルトの分離レベルを取得または設定します。自動コミットモードの場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、または「DEFERRED」、「IMMEDIATE」、「EXCLUSIVE」のいずれか。詳細については、&lt;a href=&quot;#sqlite3-controlling-transactions&quot;&gt;トランザクションの制御を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3bc03417d6cbea7e3ecb6629fad7db83a931b0a6" translate="yes" xml:space="preserve">
          <source>Get program scheduling priority. The value &lt;em&gt;which&lt;/em&gt; is one of &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;, and &lt;em&gt;who&lt;/em&gt; is interpreted relative to &lt;em&gt;which&lt;/em&gt; (a process identifier for &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, process group identifier for &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, and a user ID for &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;). A zero value for &lt;em&gt;who&lt;/em&gt; denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process.</source>
          <target state="translated">プログラムのスケジュールの優先順位を取得します。値の一つである&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;、そしてに対して解釈さ&lt;em&gt;れる&lt;/em&gt;（のためのプロセス識別子&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、ためのプロセスグループ識別子&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、及びためのユーザID &lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;）。&lt;em&gt;who&lt;/em&gt;のゼロ値は、（それぞれ）呼び出しプロセス、呼び出しプロセスのプロセスグループ、または呼び出しプロセスの実際のユーザーIDを示します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d02c37308a4ca42011190869a6abe80a460bff7" translate="yes" xml:space="preserve">
          <source>Get source code segment of the &lt;em&gt;source&lt;/em&gt; that generated &lt;em&gt;node&lt;/em&gt;. If some location information (&lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;end_lineno&lt;/code&gt;, &lt;code&gt;col_offset&lt;/code&gt;, or &lt;code&gt;end_col_offset&lt;/code&gt;) is missing, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ノード&lt;/em&gt;を生成した&lt;em&gt;ソースの&lt;/em&gt;ソースコードセグメントを取得し&lt;em&gt;ます&lt;/em&gt;。一部の位置情報（ &lt;code&gt;lineno&lt;/code&gt; 、 &lt;code&gt;end_lineno&lt;/code&gt; 、 &lt;code&gt;col_offset&lt;/code&gt; 、または &lt;code&gt;end_col_offset&lt;/code&gt; ）が欠落している場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5d32ba11b8ed874a1d107cf2469497841bdeac2d" translate="yes" xml:space="preserve">
          <source>Get statistics about quantities of loaded X.509 certificates, count of X.509 certificates flagged as CA certificates and certificate revocation lists as dictionary.</source>
          <target state="translated">読み込まれた X.509 証明書の量、CA 証明書としてフラグが立てられた X.509 証明書の数、および証明書の失効リストに関する統計情報を辞書として取得します。</target>
        </trans-unit>
        <trans-unit id="5cca3416b42404100e335aaac411014a84493036" translate="yes" xml:space="preserve">
          <source>Get statistics about the SSL sessions created or managed by this context. A dictionary is returned which maps the names of each &lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/ssl/SSL_CTX_sess_number.html&quot;&gt;piece of information&lt;/a&gt; to their numeric values. For example, here is the total number of hits and misses in the session cache since the context was created:</source>
          <target state="translated">このコンテキストによって作成または管理されるSSLセッションに関する統計を取得します。各&lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/ssl/SSL_CTX_sess_number.html&quot;&gt;情報の&lt;/a&gt;名前をそれらの数値にマップする辞書が返されます。たとえば、コンテキストが作成されてからのセッションキャッシュのヒットとミスの総数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0034d7cf901bfe3dc98a8e569a5fa6dfdc2d9a7f" translate="yes" xml:space="preserve">
          <source>Get statistics as a sorted list of &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; instances grouped by &lt;em&gt;key_type&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;key_typeで&lt;/em&gt;グループ化された&lt;a href=&quot;#tracemalloc.Statistic&quot;&gt; &lt;code&gt;Statistic&lt;/code&gt; &lt;/a&gt;インスタンスのソートされたリストとして統計を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71a0d0c6b96d9e27bc9d9b0133075d626bb1a8a5" translate="yes" xml:space="preserve">
          <source>Get the &amp;ldquo;inheritable&amp;rdquo; flag of the specified file descriptor (a boolean).</source>
          <target state="translated">指定されたファイル記述子（ブール値）の「継承可能」フラグを取得します。</target>
        </trans-unit>
        <trans-unit id="6da89fa1ba2bf713a2515d037096219c1c84b16e" translate="yes" xml:space="preserve">
          <source>Get the &amp;ldquo;inheritable&amp;rdquo; flag of the specified handle (a boolean).</source>
          <target state="translated">指定されたハンドルの「継承可能」フラグを取得します（ブール値）。</target>
        </trans-unit>
        <trans-unit id="99a204199f8ab11de39c4cefe33c73816977b3b5" translate="yes" xml:space="preserve">
          <source>Get the &lt;a href=&quot;os#fd-inheritance&quot;&gt;inheritable flag&lt;/a&gt; of the socket&amp;rsquo;s file descriptor or socket&amp;rsquo;s handle: &lt;code&gt;True&lt;/code&gt; if the socket can be inherited in child processes, &lt;code&gt;False&lt;/code&gt; if it cannot.</source>
          <target state="translated">ソケットのファイル記述子またはソケットのハンドルの&lt;a href=&quot;os#fd-inheritance&quot;&gt;継承可能なフラグ&lt;/a&gt;を取得します。ソケットが子プロセスで継承できる場合は &lt;code&gt;True&lt;/code&gt; 、継承できない場合は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a11594e7f4440dd22817c1d42fb3dfdf5a8fae93" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;ACL&lt;/code&gt;s for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">&lt;em&gt;メールボックス&lt;/em&gt;の &lt;code&gt;ACL&lt;/code&gt; を取得し&lt;em&gt;ます&lt;/em&gt;。このメソッドは非標準ですが、 &lt;code&gt;Cyrus&lt;/code&gt; サーバーでサポートされています。</target>
        </trans-unit>
        <trans-unit id="62ed1935a345fb89b1f42290845822923a2d4e23" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;quota&lt;/code&gt;&lt;em&gt;root&lt;/em&gt;&amp;rsquo;s resource usage and limits. This method is part of the IMAP4 QUOTA extension defined in rfc2087.</source>
          <target state="translated">&lt;code&gt;quota&lt;/code&gt; &lt;em&gt;ルート&lt;/em&gt;のリソース使用量と制限を取得します。このメソッドは、rfc2087で定義されているIMAP4 QUOTA拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="3a961039695bf6ec70838cd0a62ba649bc21c194" translate="yes" xml:space="preserve">
          <source>Get the &lt;em&gt;high&lt;/em&gt; and &lt;em&gt;low&lt;/em&gt; watermarks for write flow control. Return a tuple &lt;code&gt;(low, high)&lt;/code&gt; where &lt;em&gt;low&lt;/em&gt; and &lt;em&gt;high&lt;/em&gt; are positive number of bytes.</source>
          <target state="translated">書き込みフロー制御の&lt;em&gt;最高水準点&lt;/em&gt;と&lt;em&gt;最低&lt;/em&gt;水準点を取得します。タプルを返す &lt;code&gt;(low, high)&lt;/code&gt; &lt;em&gt;低&lt;/em&gt;及び&lt;em&gt;高&lt;/em&gt;バイトの正の数であるが。</target>
        </trans-unit>
        <trans-unit id="950213a057a7b0f3c148a395b7d76a1a57669d58" translate="yes" xml:space="preserve">
          <source>Get the abbreviated name of the n-th day of the week.</source>
          <target state="translated">N番目の曜日の略称を取得します。</target>
        </trans-unit>
        <trans-unit id="2606b866e21df1e456ea346f3ba77c930e8e772e" translate="yes" xml:space="preserve">
          <source>Get the abbreviated name of the n-th month.</source>
          <target state="translated">n番目の月の略称を取得します。</target>
        </trans-unit>
        <trans-unit id="cd047d70fed736913d2d4ddb822753146b7e0c61" translate="yes" xml:space="preserve">
          <source>Get the beginning or ending index of the completion scope. These indexes are the &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; arguments passed to the &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; callback of the underlying library.</source>
          <target state="translated">完了スコープの開始または終了インデックスを取得します。これらのインデックスは、基になるライブラリの &lt;code&gt;rl_attempted_completion_function&lt;/code&gt; コールバックに渡される&lt;em&gt;開始&lt;/em&gt;引数と&lt;em&gt;終了&lt;/em&gt;引数です。</target>
        </trans-unit>
        <trans-unit id="2a36e6bb528c0dc3b81202199caa718a57570eb8" translate="yes" xml:space="preserve">
          <source>Get the blocking mode of the file descriptor: &lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#os.O_NONBLOCK&quot;&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag is set, &lt;code&gt;True&lt;/code&gt; if the flag is cleared.</source>
          <target state="translated">ファイル記述子のブロッキングモードを取得します&lt;a href=&quot;#os.O_NONBLOCK&quot;&gt; &lt;code&gt;O_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグが設定されている場合は &lt;code&gt;False&lt;/code&gt; 、フラグがクリアされている場合は &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d75e1fa5d5d51e274fc8468c8ced8caf9883e2e" translate="yes" xml:space="preserve">
          <source>Get the byte stream for this input source.</source>
          <target state="translated">この入力ソースのバイトストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="2dd1f4352605a34e9229c97f7a82c7f75c343dc1" translate="yes" xml:space="preserve">
          <source>Get the character encoding of this InputSource.</source>
          <target state="translated">このInputSourceの文字エンコーディングを取得します。</target>
        </trans-unit>
        <trans-unit id="95de35f00d3f32900bfe5c66c4ea0aaa669628f3" translate="yes" xml:space="preserve">
          <source>Get the character stream for this input source.</source>
          <target state="translated">この入力ソースの文字ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="18faa6d92447d0677d396db1eec4f83e30d32ce8" translate="yes" xml:space="preserve">
          <source>Get the completer function, or &lt;code&gt;None&lt;/code&gt; if no completer function has been set.</source>
          <target state="translated">補完関数を取得します。補完関数が設定されていない場合は &lt;code&gt;None&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c9552545be668379a153f9b3e0012ad6492851ac" translate="yes" xml:space="preserve">
          <source>Get the currency symbol, preceded by &amp;ldquo;-&amp;rdquo; if the symbol should appear before the value, &amp;ldquo;+&amp;rdquo; if the symbol should appear after the value, or &amp;ldquo;.&amp;rdquo; if the symbol should replace the radix character.</source>
          <target state="translated">通貨記号を取得します。値の前に記号を表示する場合は「-」、値の後に記号を表示する場合は「+」、または「。」を前に付けます。シンボルが基数文字を置き換えるかどうか。</target>
        </trans-unit>
        <trans-unit id="af676806212458a98a5fcaf1ecd37e932430adf7" translate="yes" xml:space="preserve">
          <source>Get the current coroutine origin tracking depth, as set by &lt;a href=&quot;#sys.set_coroutine_origin_tracking_depth&quot;&gt;&lt;code&gt;set_coroutine_origin_tracking_depth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.set_coroutine_origin_tracking_depth&quot;&gt; &lt;code&gt;set_coroutine_origin_tracking_depth()&lt;/code&gt; で&lt;/a&gt;設定された現在のコルーチン起点追跡深度を取得します。</target>
        </trans-unit>
        <trans-unit id="21bc3e18b69cedb70fba9d2d7af46bb81851c651" translate="yes" xml:space="preserve">
          <source>Get the current debug mode.</source>
          <target state="translated">現在のデバッグモードを取得します。</target>
        </trans-unit>
        <trans-unit id="25976958957d1c9135141ad689fa55fa97978abd" translate="yes" xml:space="preserve">
          <source>Get the current event loop.</source>
          <target state="translated">現在のイベントループを取得します。</target>
        </trans-unit>
        <trans-unit id="9147306d385a899f0990612dc38a5e8cbd44b174" translate="yes" xml:space="preserve">
          <source>Get the current event loop. If there is no current event loop set in the current OS thread and &lt;a href=&quot;#asyncio.set_event_loop&quot;&gt;&lt;code&gt;set_event_loop()&lt;/code&gt;&lt;/a&gt; has not yet been called, asyncio will create a new event loop and set it as the current one.</source>
          <target state="translated">現在のイベントループを取得します。現在のOSスレッドに現在のイベントループが設定されておらず、&lt;a href=&quot;#asyncio.set_event_loop&quot;&gt; &lt;code&gt;set_event_loop()&lt;/code&gt; &lt;/a&gt;がまだ呼び出されていない場合、asyncioは新しいイベントループを作成し、それを現在のイベントループとして設定します。</target>
        </trans-unit>
        <trans-unit id="9fbacbbcf2b837c80ba45aea42673fc9e4cf458a" translate="yes" xml:space="preserve">
          <source>Get the current exception handler.</source>
          <target state="translated">現在の例外ハンドラを取得します。</target>
        </trans-unit>
        <trans-unit id="4197cb00152b09fb11f3cc03418b4e6a301eb8da" translate="yes" xml:space="preserve">
          <source>Get the current size and peak size of memory blocks traced by the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module as a tuple: &lt;code&gt;(current: int, peak: int)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールによってトレースされたメモリブロックの現在のサイズとピークサイズをタプルとして取得します： &lt;code&gt;(current: int, peak: int)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="626d548bdef64d0a48f07c8cda0a11f5c10bcbfc" translate="yes" xml:space="preserve">
          <source>Get the debug mode (&lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;) of the event loop.</source>
          <target state="translated">イベントループのデバッグモード（&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;）を取得します。</target>
        </trans-unit>
        <trans-unit id="8ded36169c7cff99c312b7341fa1bdec62461193" translate="yes" xml:space="preserve">
          <source>Get the default value for a namespace attribute, as set by either &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">いずれかの方法でセットとして、名前空間属性のデフォルト値を取得します&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;またはによって&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fd913673fefa31b516e470f7cb6bcbec7e7a99e1" translate="yes" xml:space="preserve">
          <source>Get the documentation string for an object, cleaned up with &lt;a href=&quot;#inspect.cleandoc&quot;&gt;&lt;code&gt;cleandoc()&lt;/code&gt;&lt;/a&gt;. If the documentation string for an object is not provided and the object is a class, a method, a property or a descriptor, retrieve the documentation string from the inheritance hierarchy.</source>
          <target state="translated">&lt;a href=&quot;#inspect.cleandoc&quot;&gt; &lt;code&gt;cleandoc()&lt;/code&gt; &lt;/a&gt;でクリーンアップされたオブジェクトの説明文字列を取得します。オブジェクトの説明文字列が提供されておらず、オブジェクトがクラス、メソッド、プロパティ、または記述子である場合は、継承階層から説明文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="26444a9c7dae84ae670e89b9e343f089a402bf15" translate="yes" xml:space="preserve">
          <source>Get the event loop for the current context.</source>
          <target state="translated">現在のコンテキストのイベントループを取得します。</target>
        </trans-unit>
        <trans-unit id="10b306fb1b873fece8b5be20d28de802e14a266d" translate="yes" xml:space="preserve">
          <source>Get the factory &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt;&lt;code&gt;loop.create_task()&lt;/code&gt;&lt;/a&gt; uses to create &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Tasks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt; &lt;code&gt;loop.create_task()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Tasks&lt;/code&gt; の&lt;/a&gt;作成に使用するファクトリーを取得します。</target>
        </trans-unit>
        <trans-unit id="d3e5d5493d44e924f29fef4accb44b80d73eed0d" translate="yes" xml:space="preserve">
          <source>Get the hardware address as a 48-bit positive integer. The first time this runs, it may launch a separate program, which could be quite slow. If all attempts to obtain the hardware address fail, we choose a random 48-bit number with the multicast bit (least significant bit of the first octet) set to 1 as recommended in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;. &amp;ldquo;Hardware address&amp;rdquo; means the MAC address of a network interface. On a machine with multiple network interfaces, universally administered MAC addresses (i.e. where the second least significant bit of the first octet is &lt;em&gt;unset&lt;/em&gt;) will be preferred over locally administered MAC addresses, but with no other ordering guarantees.</source>
          <target state="translated">ハードウェアアドレスを48ビットの正の整数として取得します。これが初めて実行されるときに、別のプログラムを起動する可能性があり、非常に遅くなる可能性があります。ハードウェアアドレスを取得するすべての試みが失敗した場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4122で&lt;/strong&gt;&lt;/a&gt;推奨されているように、マルチキャストビット（最初のオクテットの最下位ビット）が1に設定されたランダムな48ビット番号を選択します。 「ハードウェアアドレス」とは、ネットワークインターフェイスのMACアドレスを意味します。複数のネットワークインターフェースを備えたマシンでは、ユニバーサルに管理されるMACアドレス（つまり、最初のオクテットの2番目の最下位ビットが&lt;em&gt;設定&lt;/em&gt;されていない）がローカルで管理されるMACアドレスよりも優先されますが、他の順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="86bdc03571623456348b97e7751c036a41840cbf" translate="yes" xml:space="preserve">
          <source>Get the list of &lt;code&gt;quota&lt;/code&gt;&lt;code&gt;roots&lt;/code&gt; for the named &lt;em&gt;mailbox&lt;/em&gt;. This method is part of the IMAP4 QUOTA extension defined in rfc2087.</source>
          <target state="translated">指定された&lt;em&gt;メールボックスの&lt;/em&gt; &lt;code&gt;quota&lt;/code&gt; &lt;code&gt;roots&lt;/code&gt; のリストを取得し&lt;em&gt;ます&lt;/em&gt;。このメソッドは、rfc2087で定義されているIMAP4 QUOTA拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="c9a0f4fdae3a78828ee0d60e9492707425bddc34" translate="yes" xml:space="preserve">
          <source>Get the mapping of external name references in a Python function or method &lt;em&gt;func&lt;/em&gt; to their current values. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; is returned. &lt;em&gt;nonlocals&lt;/em&gt; maps referenced names to lexical closure variables, &lt;em&gt;globals&lt;/em&gt; to the function&amp;rsquo;s module globals and &lt;em&gt;builtins&lt;/em&gt; to the builtins visible from the function body. &lt;em&gt;unbound&lt;/em&gt; is the set of names referenced in the function that could not be resolved at all given the current module globals and builtins.</source>
          <target state="translated">Python関数またはメソッド&lt;em&gt;func&lt;/em&gt;の外部名参照の現在の値へのマッピングを取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; 返されます。&lt;em&gt;nonlocals&lt;/em&gt;は、参照される名前をレキシカルクロージャ変数に、&lt;em&gt;グローバル&lt;/em&gt;を関数のモジュールグローバルに、&lt;em&gt;ビルトイン&lt;/em&gt;を関数本体から見える&lt;em&gt;ビルトイン&lt;/em&gt;にマッピングします。&lt;em&gt;unbound&lt;/em&gt;は、現在のモジュールグローバルとビルトインが指定されているため、まったく解決できなかった、関数で参照されている名前のセットです。</target>
        </trans-unit>
        <trans-unit id="c13929a234f5f5e34122a6641cb65a0649856dfe" translate="yes" xml:space="preserve">
          <source>Get the mapping of external name references in a Python function or method &lt;em&gt;func&lt;/em&gt; to their current values. A &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; is returned. &lt;em&gt;nonlocals&lt;/em&gt; maps referenced names to lexical closure variables, &lt;em&gt;globals&lt;/em&gt; to the function&amp;rsquo;s module globals and &lt;em&gt;builtins&lt;/em&gt; to the builtins visible from the function body. &lt;em&gt;unbound&lt;/em&gt; is the set of names referenced in the function that could not be resolved at all given the current module globals and builtins.</source>
          <target state="translated">Pythonの関数やメソッドの外部名参照のマッピングを取得&lt;em&gt;FUNCを&lt;/em&gt;その現在の値に。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ClosureVars(nonlocals, globals, builtins, unbound)&lt;/code&gt; 返されます。&lt;em&gt;nonlocals&lt;/em&gt;は、参照された名前を字句クロージャ変数にマップし、&lt;em&gt;グローバル&lt;/em&gt;を関数のモジュールグローバルにマップし、ビルトインを関数本体から見える&lt;em&gt;ビルトイン&lt;/em&gt;にマップします。&lt;em&gt;unbound&lt;/em&gt;は、関数で参照されている名前のセットであり、現在のモジュールのグローバル変数と組み込み関数ではまったく解決できませんでした。</target>
        </trans-unit>
        <trans-unit id="c22b31eb9439f4414864003fe23d0a2bf9e90c0a" translate="yes" xml:space="preserve">
          <source>Get the mapping of live local variables in &lt;em&gt;generator&lt;/em&gt; to their current values. A dictionary is returned that maps from variable names to values. This is the equivalent of calling &lt;a href=&quot;functions#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; in the body of the generator, and all the same caveats apply.</source>
          <target state="translated">&lt;em&gt;ジェネレーターの&lt;/em&gt;ライブローカル変数の現在の値へのマッピングを取得します。変数名から値にマップする辞書が返されます。これは、ジェネレータの本体で&lt;a href=&quot;functions#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じであり、すべて同じ警告が適用されます。</target>
        </trans-unit>
        <trans-unit id="beed10cfe2d77794b1bbb3bbdc91c0102b02eadb" translate="yes" xml:space="preserve">
          <source>Get the maximum number of frames stored in the traceback of a trace.</source>
          <target state="translated">トレースのトレースバックに格納されている最大フレーム数を取得します。</target>
        </trans-unit>
        <trans-unit id="875f24fe095e6b18c21feed2477aac6da64b14a3" translate="yes" xml:space="preserve">
          <source>Get the maximum priority value for &lt;em&gt;policy&lt;/em&gt;. &lt;em&gt;policy&lt;/em&gt; is one of the scheduling policy constants above.</source>
          <target state="translated">&lt;em&gt;ポリシーの&lt;/em&gt;最大優先度値を取得します。&lt;em&gt;policy&lt;/em&gt;は、上記のスケジューリングポリシー定数の1つです。</target>
        </trans-unit>
        <trans-unit id="d831a3fe762715d892a6266acc85d2860eacbda6" translate="yes" xml:space="preserve">
          <source>Get the memory usage in bytes of the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module used to store traces of memory blocks. Return an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリブロックのトレースを格納するために使用される&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールのメモリ使用量をバイト単位で取得します。&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5fca68a5a7ae5234cb479afea741b6da40bf623c" translate="yes" xml:space="preserve">
          <source>Get the minimum priority value for &lt;em&gt;policy&lt;/em&gt;. &lt;em&gt;policy&lt;/em&gt; is one of the scheduling policy constants above.</source>
          <target state="translated">&lt;em&gt;ポリシーの&lt;/em&gt;優先度の最小値を取得します。&lt;em&gt;policy&lt;/em&gt;は、上記のスケジューリングポリシー定数の1つです。</target>
        </trans-unit>
        <trans-unit id="d8ac71296ef3a58835643bd261a8ccd491ad148f" translate="yes" xml:space="preserve">
          <source>Get the name of the n-th day of the week.</source>
          <target state="translated">N番目の曜日の名前を取得します。</target>
        </trans-unit>
        <trans-unit id="177c736ff7d8d1f378de31fc0c8a6a656a7d692b" translate="yes" xml:space="preserve">
          <source>Get the name of the n-th month.</source>
          <target state="translated">n番目の月の名前を取得します。</target>
        </trans-unit>
        <trans-unit id="cdf70fb867a7db976d8f951c29595f87261634f2" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; is returned:</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプルが&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="f96a65f3bc54287ada72c5b7fe9623f023a380a0" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the parameter names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; parameters or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;defaults&lt;/em&gt; is a tuple of default argument values or &lt;code&gt;None&lt;/code&gt; if there are no default arguments; if this tuple has &lt;em&gt;n&lt;/em&gt; elements, they correspond to the last &lt;em&gt;n&lt;/em&gt; elements listed in &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;はパラメーター名のリストです。&lt;em&gt;varargs&lt;/em&gt;および&lt;em&gt;キーワード&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; パラメーターの名前、または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;defaults&lt;/em&gt;はデフォルトの引数値のタプルです。デフォルトの引数がない場合は &lt;code&gt;None&lt;/code&gt; です。このタプルに&lt;em&gt;n個の&lt;/em&gt;要素がある&lt;em&gt;場合&lt;/em&gt;、それらは&lt;em&gt;argsに&lt;/em&gt;リストされている最後の&lt;em&gt;n個の&lt;/em&gt;要素に対応します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a283a5a41121dbca015169d61b5d14898f3bfee" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; is returned:</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前のタプルが&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="f98ea09bf5b18d6303954ee58869c3f5e08899ae" translate="yes" xml:space="preserve">
          <source>Get the names and default values of a Python function&amp;rsquo;s parameters. A &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; is returned. &lt;em&gt;args&lt;/em&gt; is a list of the parameter names. &lt;em&gt;varargs&lt;/em&gt; and &lt;em&gt;keywords&lt;/em&gt; are the names of the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; parameters or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;defaults&lt;/em&gt; is a tuple of default argument values or &lt;code&gt;None&lt;/code&gt; if there are no default arguments; if this tuple has &lt;em&gt;n&lt;/em&gt; elements, they correspond to the last &lt;em&gt;n&lt;/em&gt; elements listed in &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">Python関数のパラメーターの名前とデフォルト値を取得します。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt; &lt;code&gt;ArgSpec(args, varargs, keywords, defaults)&lt;/code&gt; 返されます。&lt;em&gt;args&lt;/em&gt;は、パラメーター名のリストです。&lt;em&gt;varargs&lt;/em&gt;および&lt;em&gt;keywords&lt;/em&gt;は、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; パラメーターの名前または &lt;code&gt;None&lt;/code&gt; です。&lt;em&gt;defaults&lt;/em&gt;は、デフォルトの引数値のタプルです。デフォルトの引数がない場合は、 &lt;code&gt;None&lt;/code&gt; です。このタプルに&lt;em&gt;n個の&lt;/em&gt;要素がある&lt;em&gt;場合&lt;/em&gt;、それらは&lt;em&gt;argsに&lt;/em&gt;リストされている最後の&lt;em&gt;n個の&lt;/em&gt;要素に対応します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="338f1e4cd4abd99d9096cc0a0fe019657231fcb8" translate="yes" xml:space="preserve">
          <source>Get the object wrapped by &lt;em&gt;func&lt;/em&gt;. It follows the chain of &lt;code&gt;__wrapped__&lt;/code&gt; attributes returning the last object in the chain.</source>
          <target state="translated">&lt;em&gt;funcで&lt;/em&gt;ラップされたオブジェクトを取得します。 &lt;code&gt;__wrapped__&lt;/code&gt; 属性のチェーンに従い、チェーンの最後のオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="eeb0543617fc198eb7f84637ea5bfb7ba0fb9e29" translate="yes" xml:space="preserve">
          <source>Get the profiler function as set by &lt;a href=&quot;#sys.setprofile&quot;&gt;&lt;code&gt;setprofile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.setprofile&quot;&gt; &lt;code&gt;setprofile()&lt;/code&gt; で&lt;/a&gt;設定されたプロファイラー関数を取得します。</target>
        </trans-unit>
        <trans-unit id="d1faa97d2137acdfa90b6bf60ff4c74956dba073" translate="yes" xml:space="preserve">
          <source>Get the radix character (decimal dot, decimal comma, etc.).</source>
          <target state="translated">基数文字(10進数ドット、10進数カンマなど)を取得します。</target>
        </trans-unit>
        <trans-unit id="c01a5ccde9ac49c55eb2b32526014a7b15ecf2ae" translate="yes" xml:space="preserve">
          <source>Get the separator character for thousands (groups of three digits).</source>
          <target state="translated">数千(3桁のグループ)の区切り文字を取得します。</target>
        </trans-unit>
        <trans-unit id="0e78eed124f99dc526d554a9b3edaa9f5e91b866" translate="yes" xml:space="preserve">
          <source>Get the size of the terminal window.</source>
          <target state="translated">ターミナルウィンドウのサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="0a9e259bb5fda4714972337dc041313d9ac70f7b" translate="yes" xml:space="preserve">
          <source>Get the status of a file or a file descriptor. Perform the equivalent of a &lt;code&gt;stat()&lt;/code&gt; system call on the given path. &lt;em&gt;path&lt;/em&gt; may be specified as either a string or bytes &amp;ndash; directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface &amp;ndash; or as an open file descriptor. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ファイルまたはファイル記述子のステータスを取得します。指定されたパスで &lt;code&gt;stat()&lt;/code&gt; システムコールに相当するものを実行します。&lt;em&gt;パス&lt;/em&gt;は、文字列またはバイトのいずれかとして（&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを介して直接的または間接的に）、またはオープンファイル記述子として指定できます。&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0ca243f70cf806ef62d1afffa88dfc484f305191" translate="yes" xml:space="preserve">
          <source>Get the status of the file descriptor &lt;em&gt;fd&lt;/em&gt;. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdの&lt;/em&gt;ステータスを取得します。&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="8dd3f7ebeb39e689a6b4f2254d583df995061fb3" translate="yes" xml:space="preserve">
          <source>Get the trace function as set by &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; で&lt;/a&gt;設定されたトレース関数を取得します。</target>
        </trans-unit>
        <trans-unit id="2bb9c949f80db687c4f3b3bcb5ae6488810e0e05" translate="yes" xml:space="preserve">
          <source>Get the traceback of a memory block</source>
          <target state="translated">メモリブロックのトレースバックを取得</target>
        </trans-unit>
        <trans-unit id="96491598d89e33d5f629f33a8e143413fe56b6b3" translate="yes" xml:space="preserve">
          <source>Get the traceback where the Python object &lt;em&gt;obj&lt;/em&gt; was allocated. Return a &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance, or &lt;code&gt;None&lt;/code&gt; if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is not tracing memory allocations or did not trace the allocation of the object.</source>
          <target state="translated">Pythonオブジェクト&lt;em&gt;obj&lt;/em&gt;が割り当てられたトレースバックを取得します。&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールがメモリ割り当てをトレースしていないか、オブジェクトの割り当てをトレースしていなかった場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e0cd0d7d768a7bc89269e2610f57234df9dc174c" translate="yes" xml:space="preserve">
          <source>Get the type of completion being attempted. This returns the &lt;code&gt;rl_completion_type&lt;/code&gt; variable in the underlying library as an integer.</source>
          <target state="translated">試行されている補完のタイプを取得します。これは、基になるライブラリの &lt;code&gt;rl_completion_type&lt;/code&gt; 変数を整数として返します。</target>
        </trans-unit>
        <trans-unit id="14634fd7695059ed33b02f9c5c68979403fb0a78" translate="yes" xml:space="preserve">
          <source>Get up to &lt;em&gt;size&lt;/em&gt; random bytes. The function can return less bytes than requested.</source>
          <target state="translated">最大&lt;em&gt;サイズの&lt;/em&gt;ランダムバイトを取得します。この関数は、要求されたバイトよりも少ないバイトを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="01cc5b73e04d7942d8b95f16fb4f30afb296c429" translate="yes" xml:space="preserve">
          <source>Get user/password for given realm and URI, if any. This method will return &lt;code&gt;(None, None)&lt;/code&gt; if there is no matching user/password.</source>
          <target state="translated">特定のレルムとURIのユーザー/パスワードを取得します（ある場合）。このメソッドは、一致するユーザー/パスワードがない場合 &lt;code&gt;(None, None)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8cc37b119889ac835c7737c5753d9caa568b7839" translate="yes" xml:space="preserve">
          <source>Gets the element attribute named &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;という名前の要素属性を取得します。</target>
        </trans-unit>
        <trans-unit id="760100f396e380d5b81eb981f228550498eeda61" translate="yes" xml:space="preserve">
          <source>Gets the options maintained by the Tix scheme mechanism.</source>
          <target state="translated">Tix スキーム機構が保持するオプションを取得します。</target>
        </trans-unit>
        <trans-unit id="54f6b9f42996ad493427dc7a89ff5033c4ae88a3" translate="yes" xml:space="preserve">
          <source>Getting and Setting the Policy</source>
          <target state="translated">ポリシーの取得と設定</target>
        </trans-unit>
        <trans-unit id="de41be2be50480bb76b3f0a07f5885974cbf1c6f" translate="yes" xml:space="preserve">
          <source>Given &lt;em&gt;field_name&lt;/em&gt; as returned by &lt;a href=&quot;#string.Formatter.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; (see above), convert it to an object to be formatted. Returns a tuple (obj, used_key). The default version takes strings of the form defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;, such as &amp;ldquo;0[name]&amp;rdquo; or &amp;ldquo;label.title&amp;rdquo;. &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; are as passed in to &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt;. The return value &lt;em&gt;used_key&lt;/em&gt; has the same meaning as the &lt;em&gt;key&lt;/em&gt; parameter to &lt;a href=&quot;#string.Formatter.get_value&quot;&gt;&lt;code&gt;get_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所与&lt;em&gt;FIELD_NAMEを&lt;/em&gt;によって返される&lt;a href=&quot;#string.Formatter.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;フォーマットされるオブジェクトに変換し、（上記参照）。タプル（obj、used_key）を返します。デフォルトのバージョンは、「0 [name]」や「label.title」など、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;で定義された形式の文字列を取ります。&lt;em&gt;args&lt;/em&gt;と&lt;em&gt;kwargs&lt;/em&gt;は&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; に&lt;/a&gt;渡されるとおりです。戻り値&lt;em&gt;used_key&lt;/em&gt;は、&lt;a href=&quot;#string.Formatter.get_value&quot;&gt; &lt;code&gt;get_value()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;キー&lt;/em&gt;パラメータと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="6f55d836d4948d424938d2512af324936d2aeb59" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;sequence&lt;/em&gt; produced by &lt;a href=&quot;#difflib.Differ.compare&quot;&gt;&lt;code&gt;Differ.compare()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt;, extract lines originating from file 1 or 2 (parameter &lt;em&gt;which&lt;/em&gt;), stripping off line prefixes.</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ.compare&quot;&gt; &lt;code&gt;Differ.compare()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;によって生成された&lt;em&gt;シーケンス&lt;/em&gt;を前提として、ファイル1または2（パラメーター&lt;em&gt;which&lt;/em&gt;）から始まる行を抽出し、行のプレフィックスを取り除きます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05595a6c90f0a99ee3d09b89a7cd936fde90ed53" translate="yes" xml:space="preserve">
          <source>Given a certificate as a DER-encoded blob of bytes, returns a PEM-encoded string version of the same certificate.</source>
          <target state="translated">証明書がDERエンコードされたバイト数のブロブとして与えられると、同じ証明書のPEMエンコードされた文字列バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="3a46c2f2901d1cbae641511ae251e6f2a6550436" translate="yes" xml:space="preserve">
          <source>Given a certificate as an ASCII PEM string, returns a DER-encoded sequence of bytes for that same certificate.</source>
          <target state="translated">証明書がASCII PEM文字列として与えられると、その証明書のDERエンコードされたバイト列を返します。</target>
        </trans-unit>
        <trans-unit id="f45ddf3586cd5194519fa8686d71f3049a3d0b96" translate="yes" xml:space="preserve">
          <source>Given a class defining one or more rich comparison ordering methods, this class decorator supplies the rest. This simplifies the effort involved in specifying all of the possible rich comparison operations:</source>
          <target state="translated">1 つ以上のリッチ比較順序付けメソッドを定義するクラスがある場合、このクラス デコレータは残りのメソッドを提供します。これにより、可能なすべてのリッチ比較操作を指定する手間が省けます。</target>
        </trans-unit>
        <trans-unit id="f7b3e25f5e05ce99668bfb371e67ba352cbbde2c" translate="yes" xml:space="preserve">
          <source>Given a list of tuples or &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects as returned by &lt;a href=&quot;#traceback.extract_tb&quot;&gt;&lt;code&gt;extract_tb()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#traceback.extract_stack&quot;&gt;&lt;code&gt;extract_stack()&lt;/code&gt;&lt;/a&gt;, return a list of strings ready for printing. Each string in the resulting list corresponds to the item with the same index in the argument list. Each string ends in a newline; the strings may contain internal newlines as well, for those items whose source text line is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#traceback.extract_tb&quot;&gt; &lt;code&gt;extract_tb()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#traceback.extract_stack&quot;&gt; &lt;code&gt;extract_stack()&lt;/code&gt; &lt;/a&gt;によって返されるタプルまたは&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;オブジェクトのリストを指定すると、印刷の準備ができている文字列のリストを返します。結果のリストの各文字列は、引数リストの同じインデックスを持つアイテムに対応します。各文字列は改行で終わります。文字列には、ソーステキスト行が &lt;code&gt;None&lt;/code&gt; ではない項目の内部改行も含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="8e790336403204248eacd64786fa774cb6247304" translate="yes" xml:space="preserve">
          <source>Given a string &lt;code&gt;cfg://handlers.myhandler.mykey.123&lt;/code&gt;, this will resolve to &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt;. If the string is specified as &lt;code&gt;cfg://handlers.myhandler.mykey[123]&lt;/code&gt;, the system will attempt to retrieve the value from &lt;code&gt;config_dict['handlers']['myhandler']['mykey'][123]&lt;/code&gt;, and fall back to &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; if that fails.</source>
          <target state="translated">文字列 &lt;code&gt;cfg://handlers.myhandler.mykey.123&lt;/code&gt; を指定すると、これは &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; ます。文字列が &lt;code&gt;cfg://handlers.myhandler.mykey[123]&lt;/code&gt; として指定されている場合、システムは &lt;code&gt;config_dict['handlers']['myhandler']['mykey'][123]&lt;/code&gt; から値を取得しようとし、戻っ &lt;code&gt;config_dict['handlers']['myhandler']['mykey']['123']&lt;/code&gt; それが失敗した場合。</target>
        </trans-unit>
        <trans-unit id="d84b01d7456dcc777d8a082e4eabece2ca9ed79a" translate="yes" xml:space="preserve">
          <source>Given a string representing one Unicode character, return an integer representing the Unicode code point of that character. For example, &lt;code&gt;ord('a')&lt;/code&gt; returns the integer &lt;code&gt;97&lt;/code&gt; and &lt;code&gt;ord('&amp;euro;')&lt;/code&gt; (Euro sign) returns &lt;code&gt;8364&lt;/code&gt;. This is the inverse of &lt;a href=&quot;#chr&quot;&gt;&lt;code&gt;chr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">1つのUnicode文字を表す文字列を指定すると、その文字のUnicodeコードポイントを表す整数を返します。たとえば、 &lt;code&gt;ord('a')&lt;/code&gt; は整数 &lt;code&gt;97&lt;/code&gt; を返し、 &lt;code&gt;ord('&amp;euro;')&lt;/code&gt; （ユーロ記号）は &lt;code&gt;8364&lt;/code&gt; を返します。これは&lt;a href=&quot;#chr&quot;&gt; &lt;code&gt;chr()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="1e6e2f86433a718f222be5f912b3a524bf362339" translate="yes" xml:space="preserve">
          <source>Given the &lt;em&gt;path&lt;/em&gt; to a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; file name, return the associated source code file path. For example, if &lt;em&gt;path&lt;/em&gt; is &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; the returned path would be &lt;code&gt;/foo/bar/baz.py&lt;/code&gt;. &lt;em&gt;path&lt;/em&gt; need not exist, however if it does not conform to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; format, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If &lt;code&gt;sys.implementation.cache_tag&lt;/code&gt; is not defined, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;ファイル名への&lt;em&gt;パス&lt;/em&gt;を指定して、関連するソースコードファイルパスを返します。たとえば、&lt;em&gt;パス&lt;/em&gt;が &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; の場合、返される&lt;em&gt;パス&lt;/em&gt;は/foo/bar/baz.pyになり &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; 。&lt;em&gt;パス&lt;/em&gt;が存在する必要はありませんが、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;または&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;形式に準拠していない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。 &lt;code&gt;sys.implementation.cache_tag&lt;/code&gt; が定義されていない場合、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08ed0d8e8bad29829940b285ece41c02bdf11fd1" translate="yes" xml:space="preserve">
          <source>Given the address &lt;code&gt;addr&lt;/code&gt; of an SSL-protected server, as a (&lt;em&gt;hostname&lt;/em&gt;, &lt;em&gt;port-number&lt;/em&gt;) pair, fetches the server&amp;rsquo;s certificate, and returns it as a PEM-encoded string. If &lt;code&gt;ssl_version&lt;/code&gt; is specified, uses that version of the SSL protocol to attempt to connect to the server. If &lt;code&gt;ca_certs&lt;/code&gt; is specified, it should be a file containing a list of root certificates, the same format as used for the same parameter in &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;. The call will attempt to validate the server certificate against that set of root certificates, and will fail if the validation attempt fails.</source>
          <target state="translated">SSLで保護されたサーバーのアドレス &lt;code&gt;addr&lt;/code&gt; を（&lt;em&gt;hostname&lt;/em&gt;、&lt;em&gt;port-number&lt;/em&gt;）ペアとして指定すると、サーバーの証明書をフェッチして、PEMエンコードされた文字列として返します。 &lt;code&gt;ssl_version&lt;/code&gt; が指定されている場合、SSLプロトコルのそのバージョンを使用してサーバーへの接続を試みます。 &lt;code&gt;ca_certs&lt;/code&gt; を指定する場合は、ルート証明書のリストを含むファイルにする必要があります。これは、&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; の&lt;/a&gt;同じパラメーターに使用されるのと同じ形式です。呼び出しは、その一連のルート証明書に対してサーバー証明書の検証を試み、検証の試みが失敗すると失敗します。</target>
        </trans-unit>
        <trans-unit id="ed1cc9e34fb1d371b7d753410f4cb40d45c04f7f" translate="yes" xml:space="preserve">
          <source>Given the following test function:</source>
          <target state="translated">次のようなテスト関数があるとします。</target>
        </trans-unit>
        <trans-unit id="9ccf5a3550325aa609fd4d8289371b325a3aab2b" translate="yes" xml:space="preserve">
          <source>Giving a name to the &amp;ldquo;no flags set&amp;rdquo; condition does not change its boolean value:</source>
          <target state="translated">「フラグ設定なし」条件に名前を付けても、ブール値は変更されません。</target>
        </trans-unit>
        <trans-unit id="3e2578c8d3e2264288e1d7a420984d59a44f0d09" translate="yes" xml:space="preserve">
          <source>Glob the given relative &lt;em&gt;pattern&lt;/em&gt; in the directory represented by this path, yielding all matching files (of any kind):</source>
          <target state="translated">このパスで表されるディレクトリ内の指定された相対&lt;em&gt;パターンを&lt;/em&gt;取得し、（あらゆる種類の）すべての一致するファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="70ae8e14e7d7a8122e7468fd602556f9b4388301" translate="yes" xml:space="preserve">
          <source>Global variables</source>
          <target state="translated">グローバル変数</target>
        </trans-unit>
        <trans-unit id="3f827c66e7e04723ed3fa1ab0945dff3f10b9b83" translate="yes" xml:space="preserve">
          <source>Globals</source>
          <target state="translated">Globals</target>
        </trans-unit>
        <trans-unit id="763165ef1af70712caac84a0ad4d0d255c31eed2" translate="yes" xml:space="preserve">
          <source>Go to File/Line</source>
          <target state="translated">ファイル/ラインに移動</target>
        </trans-unit>
        <trans-unit id="98a2592d28e0bc9b3ae17e6fc5fd6e49205211a0" translate="yes" xml:space="preserve">
          <source>Go to Line</source>
          <target state="translated">ラインへ</target>
        </trans-unit>
        <trans-unit id="7b92a290556d84784e64aaddf1fbea6d40138fe0" translate="yes" xml:space="preserve">
          <source>Go to file/line</source>
          <target state="translated">ファイル/行に移動</target>
        </trans-unit>
        <trans-unit id="eead8cc449a5fdb49abd4cc5eb6d4c8fb413f5a1" translate="yes" xml:space="preserve">
          <source>Go to left edge of window.</source>
          <target state="translated">ウィンドウの左端に移動します。</target>
        </trans-unit>
        <trans-unit id="563cd67337a9db639ff613ae3b62460c15808b8b" translate="yes" xml:space="preserve">
          <source>Go to right edge (stripspaces off) or end of line (stripspaces on).</source>
          <target state="translated">右端(stripspaces off)または線の端(stripspaces on)に行く。</target>
        </trans-unit>
        <trans-unit id="46f9595417e3e508f5e81f695930a38e4fb89c1b" translate="yes" xml:space="preserve">
          <source>Graphical User Interfaces with Tk</source>
          <target state="translated">Tkを使ったグラフィカルユーザーインターフェース</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="933bf21afdd55a0d2283845fed0e7bbdd1f5db49" translate="yes" xml:space="preserve">
          <source>Green</source>
          <target state="translated">Green</target>
        </trans-unit>
        <trans-unit id="7e1a78fc7119624ad45bbfba5788d2e14052b1c6" translate="yes" xml:space="preserve">
          <source>Group ID of the user who originally stored this member.</source>
          <target state="translated">このメンバーを元々保存していたユーザーのグループID。</target>
        </trans-unit>
        <trans-unit id="7c12f123a309d736f2ff94b7014ed4186a9c5e23" translate="yes" xml:space="preserve">
          <source>Group Separator</source>
          <target state="translated">グループセパレータ</target>
        </trans-unit>
        <trans-unit id="f5868c9eb60476a70674ffb21a653d9b1b541f04" translate="yes" xml:space="preserve">
          <source>Group database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;group&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">グループデータベースエントリはタプルのようなオブジェクトとして報告され、その属性は &lt;code&gt;group&lt;/code&gt; 構造のメンバーに対応します（以下の属性フィールド、 &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt; を参照）：</target>
        </trans-unit>
        <trans-unit id="f6735a5ee92cee7bdb9905cfbf3933c275bf1379" translate="yes" xml:space="preserve">
          <source>Group has execute permission.</source>
          <target state="translated">グループには実行権限があります。</target>
        </trans-unit>
        <trans-unit id="8475ab1269f38d6db9942d6f399693e2156d4e54" translate="yes" xml:space="preserve">
          <source>Group has read permission.</source>
          <target state="translated">グループは許可を読み取っています。</target>
        </trans-unit>
        <trans-unit id="c53ff78e371c1a2b8d488e2fc1d060ea6dec5848" translate="yes" xml:space="preserve">
          <source>Group has write permission.</source>
          <target state="translated">グループは書き込み許可を得ています。</target>
        </trans-unit>
        <trans-unit id="dc1013ffa9a8c2a7ebc3e1c3f775829468dd76b2" translate="yes" xml:space="preserve">
          <source>Group id of the owner.</source>
          <target state="translated">オーナーのグループID。</target>
        </trans-unit>
        <trans-unit id="8149aea9d2347b3cab2f08f676e4e22ad9daae9c" translate="yes" xml:space="preserve">
          <source>Group identifier of the file owner.</source>
          <target state="translated">ファイルの所有者のグループ識別子。</target>
        </trans-unit>
        <trans-unit id="3a5ba5e4d64a0b9c657db67debb9a8fb91f77421" translate="yes" xml:space="preserve">
          <source>Group name.</source>
          <target state="translated">グループ名。</target>
        </trans-unit>
        <trans-unit id="73fb2dd5cc2643e9f02bc351410b98713e0c50c9" translate="yes" xml:space="preserve">
          <source>Group separator</source>
          <target state="translated">グループセパレータ</target>
        </trans-unit>
        <trans-unit id="cbe6cbbb63fb55bfe88f791b01a0841ea8d25a95" translate="yes" xml:space="preserve">
          <source>Group separator used for monetary values.</source>
          <target state="translated">金額に使用されるグループ区切り文字。</target>
        </trans-unit>
        <trans-unit id="bdfa8009f2b9366fe1470f6950953385bb537b83" translate="yes" xml:space="preserve">
          <source>Grouping tests</source>
          <target state="translated">グループ化テスト</target>
        </trans-unit>
        <trans-unit id="763f4b22517ce2940bbeade6d76120551ce59fff" translate="yes" xml:space="preserve">
          <source>Guess the extension for a file based on its MIME type, given by &lt;em&gt;type&lt;/em&gt;. The return value is a string giving a filename extension, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;). The extension is not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type &lt;em&gt;type&lt;/em&gt; by &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt;. If no extension can be guessed for &lt;em&gt;type&lt;/em&gt;, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">与えられるMIME型に基づいてファイルの拡張子、ゲス&lt;em&gt;タイプ&lt;/em&gt;。戻り値は、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含む、ファイル名拡張子を与える文字列です。拡張機能が特定のデータストリームに関連付けられていることは保証されていませんが、&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;によってMIMEタイプ&lt;em&gt;タイプに&lt;/em&gt;マップされます。&lt;em&gt;typeの&lt;/em&gt;拡張子を推測できない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ccac2e946e402380d6bff133365e1d281155811" translate="yes" xml:space="preserve">
          <source>Guess the extensions for a file based on its MIME type, given by &lt;em&gt;type&lt;/em&gt;. The return value is a list of strings giving all possible filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;). The extensions are not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type &lt;em&gt;type&lt;/em&gt; by &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与えられるMIME型に基づいてファイルの拡張子を推測&lt;em&gt;タイプ&lt;/em&gt;。戻り値は、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含むすべての可能なファイル拡張子を与える文字列のリストです。拡張機能が特定のデータストリームに関連付けられていることは保証されていませんが、&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;によってMIMEタイプ&lt;em&gt;タイプに&lt;/em&gt;マップされます。</target>
        </trans-unit>
        <trans-unit id="a84a6acc761ddfa3d7bc427639d3f7d94a20bd3e" translate="yes" xml:space="preserve">
          <source>Guess the type of a file based on its filename, path or URL, given by &lt;em&gt;url&lt;/em&gt;. URL can be a string or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;url&lt;/em&gt;で指定されたファイル名、パス、またはURLに基​​づいてファイルのタイプを推測します。URLは文字列または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="507c3c7d81873d3b1e502a13ef175f53975955cf" translate="yes" xml:space="preserve">
          <source>Guess the type of a file based on its filename, path or URL, given by &lt;em&gt;url&lt;/em&gt;. URL can be a string or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">Guess the type of a file based on its filename, path or URL, given by &lt;em&gt;url&lt;/em&gt;. URL can be a string or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">ガイドとチュートリアル</target>
        </trans-unit>
        <trans-unit id="2ce51484b12a05894f2f9727173e21a3b67e36f9" translate="yes" xml:space="preserve">
          <source>Gustavo Niemeyer</source>
          <target state="translated">グスタボ・ニーマイヤー</target>
        </trans-unit>
        <trans-unit id="50d7c437b1b17589574e811d5085ed34a4b22340" translate="yes" xml:space="preserve">
          <source>HELO</source>
          <target state="translated">HELO</target>
        </trans-unit>
        <trans-unit id="ee7929cef18bd1007cbda8ca0208846f8487ec62" translate="yes" xml:space="preserve">
          <source>HELP</source>
          <target state="translated">HELP</target>
        </trans-unit>
        <trans-unit id="7b58c8c80353422c3ae74a11c240a7ae53c8ea23" translate="yes" xml:space="preserve">
          <source>HKEY_* Constants</source>
          <target state="translated">HKEY_*定数</target>
        </trans-unit>
        <trans-unit id="96cab112e995ad59671872f1ed4820558b189d98" translate="yes" xml:space="preserve">
          <source>HTCPCP/1.0 &lt;a href=&quot;https://tools.ietf.org/html/rfc2324.html&quot; id=&quot;index-41&quot;&gt;&lt;strong&gt;RFC 2324&lt;/strong&gt;&lt;/a&gt;, Section 2.3.2</source>
          <target state="translated">HTCPCP/1.0 &lt;a href=&quot;https://tools.ietf.org/html/rfc2324.html&quot; id=&quot;index-41&quot;&gt;&lt;strong&gt;RFC 2324&lt;/strong&gt;&lt;/a&gt;, Section 2.3.2</target>
        </trans-unit>
        <trans-unit id="a6a018281adec46cfdc4ecaba3d91384521c02b2" translate="yes" xml:space="preserve">
          <source>HTMLParser Methods</source>
          <target state="translated">HTMLParser メソッド</target>
        </trans-unit>
        <trans-unit id="83800fbcaacbc135f6269ae99e3235f1de3f5cf5" translate="yes" xml:space="preserve">
          <source>HTTP cookie classes, principally useful for server-side code. The &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; modules do not depend on each other.</source>
          <target state="translated">HTTP Cookieクラス。主にサーバー側のコードに役立ちます。&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;モジュールは、お互いに依存しません。</target>
        </trans-unit>
        <trans-unit id="7044d88f7a2347a2f5b8dbb82ed197be53ebf64a" translate="yes" xml:space="preserve">
          <source>HTTP cookie handling for web &lt;em&gt;clients&lt;/em&gt;. The &lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; modules do not depend on each other.</source>
          <target state="translated">Web &lt;em&gt;クライアントの&lt;/em&gt; HTTP Cookie処理。&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;モジュールは、お互いに依存しません。</target>
        </trans-unit>
        <trans-unit id="5b613f0c29f1f2272729222b79dd0363bf366e91" translate="yes" xml:space="preserve">
          <source>HTTP protocol version used by server. 10 for HTTP/1.0, 11 for HTTP/1.1.</source>
          <target state="translated">サーバーが使用するHTTPプロトコルのバージョン。HTTP/1.0なら10、HTTP/1.1なら11。</target>
        </trans-unit>
        <trans-unit id="4786bcad00754f90607cd03b51ae4f2dfc8958ec" translate="yes" xml:space="preserve">
          <source>HTTP status codes</source>
          <target state="translated">HTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="b9c5e6f4000e0c7c081dcb3f748956d95b414dc8" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.2.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.2.1</target>
        </trans-unit>
        <trans-unit id="29f12a3eb7f79bf4b63ef96a35c570dc01cd4e0a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.6</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.6</target>
        </trans-unit>
        <trans-unit id="55ce7ae41bf5482f4b02d07a75916731331b4ed7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.1</target>
        </trans-unit>
        <trans-unit id="c6001847347dc42236eb4f151e2ba2166e820072" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.1</target>
        </trans-unit>
        <trans-unit id="37a2b8e98ce9a80ff50cc2187f3d5f66d4acf192" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.2</target>
        </trans-unit>
        <trans-unit id="c3098211d5734c1bd837d71e418811a808bbe145" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.2</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.2</target>
        </trans-unit>
        <trans-unit id="4c4886664f75483fc582d91c7885848287888d95" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.3</target>
        </trans-unit>
        <trans-unit id="5bf2c9ebb7e527daf0b8ddb5c47c8507dbd057cd" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.3</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.3</target>
        </trans-unit>
        <trans-unit id="24d12da9a592b38862e6bb5010136705da6a12e0" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.4</target>
        </trans-unit>
        <trans-unit id="31b3927924c73e0034420d27dd558df4a011295b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.4</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.4</target>
        </trans-unit>
        <trans-unit id="bc2df2a2575cf8642877678203bd4860c3893ed2" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.5</target>
        </trans-unit>
        <trans-unit id="a04d14d65cbc4a943cd4f902fac7148c0f14008b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.2.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.2.2</target>
        </trans-unit>
        <trans-unit id="8415c6748253bb75e93a0c13272621156bd7b275" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.5</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.5</target>
        </trans-unit>
        <trans-unit id="60d7f81d19333e5f74e5e2e3d6de6347b79c2b62" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.7</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.4.7</target>
        </trans-unit>
        <trans-unit id="d487f04e085d4d4f69bf45e3ae6385ad9c7d42ff" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.7</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.4.7</target>
        </trans-unit>
        <trans-unit id="8ac7152bb59f9e6637cda1fc09f358e6db1eb3b3" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.1</target>
        </trans-unit>
        <trans-unit id="4e2d515130ae64718bcf33703bf66893df4a7f99" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.1</target>
        </trans-unit>
        <trans-unit id="e307f3ae76be18f3cf56334d2d1203897c84c6ad" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.2</target>
        </trans-unit>
        <trans-unit id="0441c744180765caf2924bf4d360c0d4a5f9453c" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.2</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.2</target>
        </trans-unit>
        <trans-unit id="ee054e8754930b1255d65d88b0043dc9abf8e0d4" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-25&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.3</target>
        </trans-unit>
        <trans-unit id="d91710f64d1139f714843f050ab4774c09259780" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.3</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.3</target>
        </trans-unit>
        <trans-unit id="39a70a33114bc2491f95a95af6970771b5372ba1" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-26&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.4</target>
        </trans-unit>
        <trans-unit id="7dd9e1711e867c41f1eef5d77f0fe368f7d67c0b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.4</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.4</target>
        </trans-unit>
        <trans-unit id="384a5fc0754896060e5523e9ce8e1e038c2bb546" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.5</target>
        </trans-unit>
        <trans-unit id="420c003338ac8397aecafb33276c8d2b5640c26a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.5</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.5</target>
        </trans-unit>
        <trans-unit id="03716883f4ec8e56d07cf1ed63059674945a1990" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.6</target>
        </trans-unit>
        <trans-unit id="71c6460a2d96431280764cbee07512dc906de697" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.6</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.6</target>
        </trans-unit>
        <trans-unit id="f9958b9874f5f09f1d26017ef8c8b19a1d5b34a9" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.7</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.7</target>
        </trans-unit>
        <trans-unit id="f2d662dcb36c3f3d936c1e8caefdd4282a264eb2" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.7</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.7</target>
        </trans-unit>
        <trans-unit id="f6b89763f9eecf951499a41c4f4e0c65e612b9ed" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.8</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.8</target>
        </trans-unit>
        <trans-unit id="b771beb6824cee55b869a4778e91a5d6021356d1" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.8</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.8</target>
        </trans-unit>
        <trans-unit id="84de879f447b29b467c932ff8b9ce36e8e1a4f7b" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.9</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.9</target>
        </trans-unit>
        <trans-unit id="2b6fd84ea11b2f50a32335158a9ab3686eb9f2f9" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.10</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.10</target>
        </trans-unit>
        <trans-unit id="bba1d963a3f1874db5ee603aacdcf24bcc26ffb0" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.9</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-33&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.9</target>
        </trans-unit>
        <trans-unit id="63476284c10469e4ceee6decb44cc46856edc820" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.10</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.10</target>
        </trans-unit>
        <trans-unit id="335ff0bcffd8b0fd0de1378d22cd8e84e89a4261" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.11</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.11</target>
        </trans-unit>
        <trans-unit id="27852d9dba58e062a9eb9e35f45cf98958bf1437" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.11</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.11</target>
        </trans-unit>
        <trans-unit id="e01d39961a26d5b9c9f6dd4ebe218724de832d1e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.12</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.12</target>
        </trans-unit>
        <trans-unit id="dd2b51807cd20536d4decdc9a98b2422f3539192" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.12</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.12</target>
        </trans-unit>
        <trans-unit id="11a8ebffb476f28642499a3354379840b4e688ed" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.13</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-37&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.13</target>
        </trans-unit>
        <trans-unit id="633ee1ffd6471319838a56fb164579af0f0d551d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.13</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.13</target>
        </trans-unit>
        <trans-unit id="8e61d87a1209863b433f52f01e48ec24085ebde7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.14</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.14</target>
        </trans-unit>
        <trans-unit id="cd573541605da49c903c6cc03bf2f770fd72ff49" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.1</target>
        </trans-unit>
        <trans-unit id="5468c195e8b85b2837df0693d6ee3c29d9b31167" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.14</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.14</target>
        </trans-unit>
        <trans-unit id="e607a0572ff848176765a17465646cd7950bdd53" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-44&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.15</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-44&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.5.15</target>
        </trans-unit>
        <trans-unit id="46a5afc722af0b47d46ca29d36f0163b759d54b6" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.15</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.5.15</target>
        </trans-unit>
        <trans-unit id="3150efe460b4acc154ce6666bc5e252941006cb4" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.1</target>
        </trans-unit>
        <trans-unit id="2a46410a47353048b03f5b805008442b2e5d0303" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.1</target>
        </trans-unit>
        <trans-unit id="c1ee3d04c1d4b378d8083b355afbe1b1fe506ef6" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.2</target>
        </trans-unit>
        <trans-unit id="f79ee66680bc43a42866e96f43db95cc0ed8752d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.2</target>
        </trans-unit>
        <trans-unit id="99e7084ca12948106471b49b2622d019645afab7" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.3</target>
        </trans-unit>
        <trans-unit id="cc15d9e45df9875f7ed90c364980bd133aa5c9bd" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.1</target>
        </trans-unit>
        <trans-unit id="e4759171c1fb4967d60b990bb93676987a5cf4b3" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-52&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.4</target>
        </trans-unit>
        <trans-unit id="2513cc44cf520c2c6abb2582c1cecfb5587cff77" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.2</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.2</target>
        </trans-unit>
        <trans-unit id="2fac3411ccae7fcec4f1663d7e5bae7f78f4f902" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-53&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.5</target>
        </trans-unit>
        <trans-unit id="67dc6bb01e21fd2946874e209a882469b9faa51f" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.3</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.3</target>
        </trans-unit>
        <trans-unit id="30145c38c7c08a7aa07868063aec66cda90b7250" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.6.6</target>
        </trans-unit>
        <trans-unit id="6711357c64ad17ae76b88491db3418391fdccd21" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.4</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.4</target>
        </trans-unit>
        <trans-unit id="928d9148cd3d9c1dc5d18e3e773e79167e81d6ce" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-56&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.5</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-56&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.5</target>
        </trans-unit>
        <trans-unit id="914592ed4f45b582d8946c9dabca15babb61276e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-57&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.6</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-57&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.6.6</target>
        </trans-unit>
        <trans-unit id="d296ec04c6aa2c8990ecaf30d0fda46de4b20e05" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.2</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.2</target>
        </trans-unit>
        <trans-unit id="ad10d61f8497e284c4e42f54b87d7befb7f7bb4a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.3</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.3</target>
        </trans-unit>
        <trans-unit id="480c01101804cc3ffe33fa90e92915edb25ea820" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.3</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.3</target>
        </trans-unit>
        <trans-unit id="570e8e441bb712b3ceaf16252a0b5f014e0d1b50" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.4</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.4</target>
        </trans-unit>
        <trans-unit id="6d6e6bd42a769cdd9e8a6e61018514ea19abeb8e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.4</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.4</target>
        </trans-unit>
        <trans-unit id="ffad6c577656adc8500d58706fc5478fe1bef909" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.5</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.5</target>
        </trans-unit>
        <trans-unit id="26d356f58fccfca9ea2ba39fccdf60c0a452abad" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.5</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.5</target>
        </trans-unit>
        <trans-unit id="b02e682b1572382c00b992fa789f6d9af0faa90e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;, Section 6.3.6</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 7231&lt;/strong&gt;&lt;/a&gt;、セクション6.3.6</target>
        </trans-unit>
        <trans-unit id="750f03d3a04b5b9fb5badbdc798f143092e85f5a" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;、セクション4.1</target>
        </trans-unit>
        <trans-unit id="d31f87249f9ac6b3a6c5a0e02ad1611b1a35f693" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.1</target>
        </trans-unit>
        <trans-unit id="aa8c1ccd1c55a0e2f0c2a76c3826c6ef56d61275" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.2</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-34&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;、セクション4.2</target>
        </trans-unit>
        <trans-unit id="a8011db55abddcf8476b0637c8e7c55334143935" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.2</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7232.html&quot; id=&quot;index-35&quot;&gt;&lt;strong&gt;RFC 7232&lt;/strong&gt;&lt;/a&gt;, Section 4.2</target>
        </trans-unit>
        <trans-unit id="4adc18410cbba25856c6bdd9448a7ad840bf05fe" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP / 1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;、セクション4.1</target>
        </trans-unit>
        <trans-unit id="d5febe58eee83ff18e604c4304fe23b54fa31e28" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.1</source>
          <target state="translated">HTTP/1.1 &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.1</target>
        </trans-unit>
        <trans-unit id="c20505e0555301a7bc4ee1331f3b2d926b5473fd" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.1</source>
          <target state="translated">HTTP / 1.1認証&lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;、セクション3.1</target>
        </trans-unit>
        <trans-unit id="7977d74c13545e73effea988330ac6b63ee9cb1c" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.1</source>
          <target state="translated">HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.1</target>
        </trans-unit>
        <trans-unit id="69cf6de3769ba9d495eb3b6efa56d5f7957cdb38" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.2</source>
          <target state="translated">HTTP / 1.1認証&lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;、セクション3.2</target>
        </trans-unit>
        <trans-unit id="4f5efe88524cd47c6aace688245a5f8a70bb43e8" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.2</source>
          <target state="translated">HTTP/1.1 Authentication &lt;a href=&quot;https://tools.ietf.org/html/rfc7235.html&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;RFC 7235&lt;/strong&gt;&lt;/a&gt;, Section 3.2</target>
        </trans-unit>
        <trans-unit id="a660a28415a0784612682b4336f837d4de547889" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Range Requests &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.4</source>
          <target state="translated">HTTP / 1.1範囲要求&lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;、セクション4.4</target>
        </trans-unit>
        <trans-unit id="dd9a183fc7161ea1598ff679b0c09f245d9dc5e9" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Range Requests &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.4</source>
          <target state="translated">HTTP/1.1 Range Requests &lt;a href=&quot;https://tools.ietf.org/html/rfc7233.html&quot; id=&quot;index-39&quot;&gt;&lt;strong&gt;RFC 7233&lt;/strong&gt;&lt;/a&gt;, Section 4.4</target>
        </trans-unit>
        <trans-unit id="c8aff230069c68b6481e911a7a37adbc1649f530" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;, Section 9.1.2</source>
          <target state="translated">HTTP / 2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-40&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;、セクション9.1.2</target>
        </trans-unit>
        <trans-unit id="eeef913128bc86c058513153ebbc2dbaabb4be11" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-42&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;, Section 9.1.2</source>
          <target state="translated">HTTP/2 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540.html&quot; id=&quot;index-42&quot;&gt;&lt;strong&gt;RFC 7540&lt;/strong&gt;&lt;/a&gt;, Section 9.1.2</target>
        </trans-unit>
        <trans-unit id="9d26016dae7061b85a9ca989c851ab31c4415626" translate="yes" xml:space="preserve">
          <source>HTTPBasicAuthHandler Objects</source>
          <target state="translated">HTTPBasicAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="128e3ebc7076bef1925dd717a403a4dc3d9659f4" translate="yes" xml:space="preserve">
          <source>HTTPConnection Objects</source>
          <target state="translated">HTTPConnection オブジェクト</target>
        </trans-unit>
        <trans-unit id="992be6a3f16ce33effbee02a1156178fc68cb00e" translate="yes" xml:space="preserve">
          <source>HTTPCookieProcessor Objects</source>
          <target state="translated">HTTPCookieProcessor オブジェクト</target>
        </trans-unit>
        <trans-unit id="1e8ebe01f2e245be530b383e742fd400bed10252" translate="yes" xml:space="preserve">
          <source>HTTPDigestAuthHandler Objects</source>
          <target state="translated">HTTPDigestAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="f0b6e00c82a6ffc0f054e5c4ca84fd58770cdaf0" translate="yes" xml:space="preserve">
          <source>HTTPErrorProcessor Objects</source>
          <target state="translated">HTTPErrorProcessor オブジェクト</target>
        </trans-unit>
        <trans-unit id="79343075e3ae1afb1578a564ea8e6d0d84b3eee2" translate="yes" xml:space="preserve">
          <source>HTTPHandler</source>
          <target state="translated">HTTPHandler</target>
        </trans-unit>
        <trans-unit id="a08a17af60574eff9b7ee5ac7b2db3a31d02f832" translate="yes" xml:space="preserve">
          <source>HTTPHandler Objects</source>
          <target state="translated">HTTPHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="447f588678db2da1df1b94aa5459163954ff9120" translate="yes" xml:space="preserve">
          <source>HTTPMessage Objects</source>
          <target state="translated">HTTPメッセージオブジェクト</target>
        </trans-unit>
        <trans-unit id="301815c67c8cd0ad1a930659ccda2ea0cd020278" translate="yes" xml:space="preserve">
          <source>HTTPPasswordMgr Objects</source>
          <target state="translated">HTTPPasswordMgr オブジェクト</target>
        </trans-unit>
        <trans-unit id="3c6fce6dce26799f5d8d6e86061bb672133362b3" translate="yes" xml:space="preserve">
          <source>HTTPPasswordMgrWithPriorAuth Objects</source>
          <target state="translated">HTTPPasswordMgrWithPriorAuth オブジェクト</target>
        </trans-unit>
        <trans-unit id="c368139a6cae206daecec5d01f7387777ed6220b" translate="yes" xml:space="preserve">
          <source>HTTPRedirectHandler Objects</source>
          <target state="translated">HTTPRedirectHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="65a9b485d9c99e924fdb190254a5a76d482c4751" translate="yes" xml:space="preserve">
          <source>HTTPResponse Objects</source>
          <target state="translated">HTTPResponse オブジェクト</target>
        </trans-unit>
        <trans-unit id="47ab16ab140fbbc7564373cc76986157e8f07f7c" translate="yes" xml:space="preserve">
          <source>HTTPS support is only available if Python was compiled with SSL support (through the &lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">HTTPSサポートは、PythonがSSLサポートを使用して（&lt;a href=&quot;ssl#module-ssl&quot;&gt; &lt;code&gt;ssl&lt;/code&gt; &lt;/a&gt;モジュールを介して）コンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="987667d8eaeca62f8d43a6cb0520e0a03563e9fc" translate="yes" xml:space="preserve">
          <source>HTTPSHandler Objects</source>
          <target state="translated">HTTPSHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="321702e8b1e7bda4040e4dd8768fe5092626cce6" translate="yes" xml:space="preserve">
          <source>Handle DTD events.</source>
          <target state="translated">DTD イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="56d20071c05406e234f9cf1190e9affc6ac1aedb" translate="yes" xml:space="preserve">
          <source>Handle a &lt;em&gt;defect&lt;/em&gt; found on &lt;em&gt;obj&lt;/em&gt;. When the email package calls this method, &lt;em&gt;defect&lt;/em&gt; will always be a subclass of &lt;code&gt;Defect&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;objで&lt;/em&gt;見つかった&lt;em&gt;欠陥を&lt;/em&gt;処理します。電子メールパッケージがこのメソッドを呼び出すと、&lt;em&gt;defect&lt;/em&gt;は常に &lt;code&gt;Defect&lt;/code&gt; のサブクラスになります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="107e56fca7a09c74f23045e39860024fb9eaed74" translate="yes" xml:space="preserve">
          <source>Handle a notation declaration event.</source>
          <target state="translated">記法宣言イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="6d380080eaa511f673e257b847cc06cd190a3031" translate="yes" xml:space="preserve">
          <source>Handle a record.</source>
          <target state="translated">レコードを扱う。</target>
        </trans-unit>
        <trans-unit id="1308c12d298ebc17be8e6f7205d8f3bfc4b593f5" translate="yes" xml:space="preserve">
          <source>Handle an XML-RPC request. If &lt;em&gt;request_text&lt;/em&gt; is given, it should be the POST data provided by the HTTP server, otherwise the contents of stdin will be used.</source>
          <target state="translated">XML-RPCリクエストを処理します。&lt;em&gt;request_text&lt;/em&gt;を指定する場合は、HTTPサーバーによって提供されるPOSTデータである必要があります。それ以外の場合は、stdinの内容が使用されます。</target>
        </trans-unit>
        <trans-unit id="9d8e258c0b6e5d1168969c669327feb855d41c04" translate="yes" xml:space="preserve">
          <source>Handle an authentication request by getting a user/password pair, and re-trying the request. &lt;em&gt;authreq&lt;/em&gt; should be the name of the header where the information about the realm is included in the request, &lt;em&gt;host&lt;/em&gt; specifies the URL and path to authenticate for, &lt;em&gt;req&lt;/em&gt; should be the (failed) &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, and &lt;em&gt;headers&lt;/em&gt; should be the error headers.</source>
          <target state="translated">ユーザー/パスワードのペアを取得して認証リクエストを処理し、リクエストを再試行します。&lt;em&gt;AUTHREQは&lt;/em&gt;レルムに関する情報が要求に含まれるヘッダの名前でなければなら、&lt;em&gt;ホストは&lt;/em&gt;、認証のためにURLとパスを指定&lt;em&gt;REQが&lt;/em&gt;（失敗）でなければならない&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクト、及び&lt;em&gt;ヘッダが&lt;/em&gt;エラーヘッダーであるべきです。</target>
        </trans-unit>
        <trans-unit id="062e437b01efebe8849f8f8ced1f07810ec988e5" translate="yes" xml:space="preserve">
          <source>Handle an error of the given protocol. This will call the registered error handlers for the given protocol with the given arguments (which are protocol specific). The HTTP protocol is a special case which uses the HTTP response code to determine the specific error handler; refer to the &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; methods of the handler classes.</source>
          <target state="translated">指定されたプロトコルのエラーを処理します。これは、指定された引数（プロトコル固有）を使用して、指定されたプロトコルの登録済みエラーハンドラーを呼び出します。HTTPプロトコルは、HTTP応答コードを使用して特定のエラーハンドラーを決定する特殊なケースです。ハンドラクラスの &lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a276c3fe5b84b1615109b01fd49c20d2b394e289" translate="yes" xml:space="preserve">
          <source>Handle an unparsed entity declaration event.</source>
          <target state="translated">アンパースされたエンティティ宣言イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="88220eb8720a2bc1735b528b203386438a372258" translate="yes" xml:space="preserve">
          <source>Handle an unraisable exception.</source>
          <target state="translated">レイス不能な例外を処理します。</target>
        </trans-unit>
        <trans-unit id="1060bc6c7b88726a08b50df11671c5366cd9d24c" translate="yes" xml:space="preserve">
          <source>Handle authentication with the proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported.</source>
          <target state="translated">プロキシで認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="16dc31a241c55ceeae234120336a22eafb971e87" translate="yes" xml:space="preserve">
          <source>Handle authentication with the remote host. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. HTTPBasicAuthHandler will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when presented with a wrong Authentication scheme.</source>
          <target state="translated">リモートホストとの認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。 HTTPBasicAuthHandlerは、誤った認証スキームが提示されると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="099ecb73fd6f904c0f4b5605d72f0a36103ca94d" translate="yes" xml:space="preserve">
          <source>Handle authentication with the remote host. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. When both Digest Authentication Handler and Basic Authentication Handler are both added, Digest Authentication is always tried first. If the Digest Authentication returns a 40x response again, it is sent to Basic Authentication handler to Handle. This Handler method will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when presented with an authentication scheme other than Digest or Basic.</source>
          <target state="translated">リモートホストとの認証を処理します。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。ダイジェスト認証ハンドラーと基本認証ハンドラーの両方を追加すると、常に最初にダイジェスト認証が試行されます。ダイジェスト認証が再び40x応答を返す場合、それは処理するために基本認証ハンドラーに送信されます。このHandlerメソッドは、DigestまたはBasic以外の認証スキームが提示されると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="2e877e234920ac6dd114466dccb707642ee7aca1" translate="yes" xml:space="preserve">
          <source>Handle how a breakpoint must be removed when it is a temporary one.</source>
          <target state="translated">ブレークポイントが一時的なものである場合に、どのように削除しなければならないかを処理します。</target>
        </trans-unit>
        <trans-unit id="c275e80e41cb467befe8a992aa8ef142dc1b4cd4" translate="yes" xml:space="preserve">
          <source>Handle objects can be converted to an integer (e.g., using the built-in &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; function), in which case the underlying Windows handle value is returned. You can also use the &lt;a href=&quot;#winreg.PyHKEY.Detach&quot;&gt;&lt;code&gt;Detach()&lt;/code&gt;&lt;/a&gt; method to return the integer handle, and also disconnect the Windows handle from the handle object.</source>
          <target state="translated">ハンドルオブジェクトは整数に変換できます（たとえば、組み込みの&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;関数を使用して）。この場合、基になるWindowsハンドル値が返されます。&lt;a href=&quot;#winreg.PyHKEY.Detach&quot;&gt; &lt;code&gt;Detach()&lt;/code&gt; &lt;/a&gt;メソッドを使用して整数ハンドルを返し、Windowsハンドルをハンドルオブジェクトから切断することもできます。</target>
        </trans-unit>
        <trans-unit id="8385c6fa8af7de5af62c9fd3a69dd17642c7c9d1" translate="yes" xml:space="preserve">
          <source>Handle objects provide semantics for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__bool__&quot;&gt;&lt;code&gt;__bool__()&lt;/code&gt;&lt;/a&gt; &amp;ndash; thus</source>
          <target state="translated">ハンドルオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__bool__&quot;&gt; &lt;code&gt;__bool__()&lt;/code&gt; &lt;/a&gt;セマンティクスを提供します&amp;ndash;したがって</target>
        </trans-unit>
        <trans-unit id="04fe15c2cc4ea50bab41040c7c8bf63c4e201741" translate="yes" xml:space="preserve">
          <source>Handle objects provide semantics for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__bool__&quot;&gt;&lt;code&gt;__bool__()&lt;/code&gt;&lt;/a&gt; &amp;ndash; thus</source>
          <target state="translated">Handle objects provide semantics for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__bool__&quot;&gt; &lt;code&gt;__bool__()&lt;/code&gt; &lt;/a&gt; &amp;ndash; thus</target>
        </trans-unit>
        <trans-unit id="2afaf4f89a5a11064c833154986f2f5a84c15945" translate="yes" xml:space="preserve">
          <source>Handle requests until an explicit &lt;a href=&quot;#socketserver.BaseServer.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; request. Poll for shutdown every &lt;em&gt;poll_interval&lt;/em&gt; seconds. Ignores the &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; attribute. It also calls &lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt;&lt;code&gt;service_actions()&lt;/code&gt;&lt;/a&gt;, which may be used by a subclass or mixin to provide actions specific to a given service. For example, the &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; class uses &lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt;&lt;code&gt;service_actions()&lt;/code&gt;&lt;/a&gt; to clean up zombie child processes.</source>
          <target state="translated">明示的な&lt;a href=&quot;#socketserver.BaseServer.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt;要求まで要求を処理します。&lt;em&gt;poll_interval&lt;/em&gt;秒ごとにシャットダウンをポーリングします。&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;属性を無視します。また、&lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt; &lt;code&gt;service_actions()&lt;/code&gt; を&lt;/a&gt;呼び出します。これは、特定のサービスに固有のアクションを提供するためにサブクラスまたはミックスインで使用できます。たとえば、&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;クラスは&lt;a href=&quot;#socketserver.BaseServer.service_actions&quot;&gt; &lt;code&gt;service_actions()&lt;/code&gt; &lt;/a&gt;を使用してゾンビの子プロセスをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="bb6c587f11689be2d6937f95e7f78dacb7880c2d" translate="yes" xml:space="preserve">
          <source>Handle uncaught exception raised by &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;Thread.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;Thread.run()&lt;/code&gt; &lt;/a&gt;によって発生したキャッチされない例外を処理します。</target>
        </trans-unit>
        <trans-unit id="be02a9f775c20e09c3a657bc25211bd693cc8d23" translate="yes" xml:space="preserve">
          <source>Handler Objects</source>
          <target state="translated">ハンドラオブジェクト</target>
        </trans-unit>
        <trans-unit id="7eb34507475372acbffdf6d92308c8251b5e3824" translate="yes" xml:space="preserve">
          <source>Handlers have the following attributes and methods. Note that &lt;a href=&quot;#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; is never instantiated directly; this class acts as a base for more useful subclasses. However, the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method in subclasses needs to call &lt;a href=&quot;#logging.Handler.__init__&quot;&gt;&lt;code&gt;Handler.__init__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ハンドラーには次の属性とメソッドがあります。注意&lt;a href=&quot;#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt;直接インスタンス化されることはありません。このクラスは、より有用なサブクラスのベースとして機能します。ただし、サブクラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;#logging.Handler.__init__&quot;&gt; &lt;code&gt;Handler.__init__()&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="9020180afd2fb0ac62ea55b34dabac5451e63a1d" translate="yes" xml:space="preserve">
          <source>Handlers have the following attributes and methods. Note that &lt;a href=&quot;#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; is never instantiated directly; this class acts as a base for more useful subclasses. However, the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method in subclasses needs to call &lt;a href=&quot;#logging.Handler.__init__&quot;&gt;&lt;code&gt;Handler.__init__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Handlers have the following attributes and methods. Note that &lt;a href=&quot;#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt; is never instantiated directly; this class acts as a base for more useful subclasses. However, the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; method in subclasses needs to call &lt;a href=&quot;#logging.Handler.__init__&quot;&gt; &lt;code&gt;Handler.__init__()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5d46c9ae22acb5d3645908e5bf4511d544f3a6b7" translate="yes" xml:space="preserve">
          <source>Handlers send the log records (created by loggers) to the appropriate destination.</source>
          <target state="translated">ハンドラは、(ロガーによって作成された)ログレコードを適切な宛先に送信します。</target>
        </trans-unit>
        <trans-unit id="84b8e969da65bf24a329495e90cf29dd7b94f19e" translate="yes" xml:space="preserve">
          <source>Handlers with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; are called to handle the request. This stage ends when a handler either returns a non-&lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; value (ie. a response), or raises an exception (usually &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;). Exceptions are allowed to propagate.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; のような名前のメソッドを持つハンドラーは、要求を処理するために呼び出されます。このステージは、ハンドラーが&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 以外の&lt;/a&gt;値（つまり、応答）を返すか、例外（通常は&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;）を発生させると終了します。例外の伝播が許可されています。</target>
        </trans-unit>
        <trans-unit id="8bcb894d769a4dd64c40d2bdb7b0ee4952c58f5b" translate="yes" xml:space="preserve">
          <source>Handles a doctype declaration. &lt;em&gt;name&lt;/em&gt; is the doctype name. &lt;em&gt;pubid&lt;/em&gt; is the public identifier. &lt;em&gt;system&lt;/em&gt; is the system identifier. This method does not exist on the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">doctype宣言を処理します。&lt;em&gt;name&lt;/em&gt;はdoctype名です。&lt;em&gt;pubid&lt;/em&gt;は公開識別子です。&lt;em&gt;system&lt;/em&gt;はシステム識別子です。このメソッドは、デフォルトの&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;クラスには存在しません。</target>
        </trans-unit>
        <trans-unit id="56c022088fb27c6c5c9d8bcb3c440786808ef179" translate="yes" xml:space="preserve">
          <source>Handles a record by passing it to all handlers associated with this logger and its ancestors (until a false value of &lt;em&gt;propagate&lt;/em&gt; is found). This method is used for unpickled records received from a socket, as well as those created locally. Logger-level filtering is applied using &lt;a href=&quot;#logging.Logger.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このロガーとその祖先に関連付けられたすべてのハンドラーにレコードを渡すことにより、レコードを処理します（&lt;em&gt;伝播の&lt;/em&gt; false値が見つかるまで）。このメソッドは、ソケットから受信したunpickledレコードと、ローカルで作成されたレコードに使用されます。ロガーレベルのフィルタリングは、&lt;a href=&quot;#logging.Logger.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;を使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="2c3b04664d696d0fa7762642ed6eccefdf4d892c" translate="yes" xml:space="preserve">
          <source>Handles an error which has occurred during &lt;a href=&quot;#logging.handlers.SocketHandler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt;. The most likely cause is a lost connection. Closes the socket so that we can retry on the next event.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.SocketHandler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; の実行&lt;/a&gt;中に発生したエラーを処理します。最も可能性の高い原因は、接続の切断です。ソケットを閉じて、次のイベントで再試行できるようにします。</target>
        </trans-unit>
        <trans-unit id="d7568474b0c5d0deb421b6274fcb2bf0af693b7b" translate="yes" xml:space="preserve">
          <source>Handles the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header.</source>
          <target state="translated">ハンドル&lt;em&gt;コンテンツ転送エンコード&lt;/em&gt;ヘッダー。</target>
        </trans-unit>
        <trans-unit id="2ba87bc15b853d0b3254ce18760f988d9c907655" translate="yes" xml:space="preserve">
          <source>Handling Stateful Objects</source>
          <target state="translated">ステートフルオブジェクトの取り扱い</target>
        </trans-unit>
        <trans-unit id="d4c17076488bf64b63db8111e44b0dde598cfc0f" translate="yes" xml:space="preserve">
          <source>Handling positional arguments.</source>
          <target state="translated">位置的な引数を扱う。</target>
        </trans-unit>
        <trans-unit id="80fe32e67eb7aed793b1d67d211a8198a39506a3" translate="yes" xml:space="preserve">
          <source>Handling zero-or-more and one-or-more style arguments.</source>
          <target state="translated">ゼロ以上と1以上のスタイルの引数を処理します。</target>
        </trans-unit>
        <trans-unit id="914fc1ca59d60f8b53aaaa51e2728e761cc31a75" translate="yes" xml:space="preserve">
          <source>Handy Reference</source>
          <target state="translated">便利なリファレンス</target>
        </trans-unit>
        <trans-unit id="0d8a35cbc11bb2986e111bb7048bc661f162a028" translate="yes" xml:space="preserve">
          <source>Hang up happened on the assoc. fd</source>
          <target state="translated">電話が切られたのは、アソシエーション・ファンドで起きた。</target>
        </trans-unit>
        <trans-unit id="fd5b5a277ccb835f09a0d505a8d388dedaebe859" translate="yes" xml:space="preserve">
          <source>Hangup detected on controlling terminal or death of controlling process.</source>
          <target state="translated">制御端末の制御中にハングアップを検出した場合や、制御プロセスの死亡を検出した場合</target>
        </trans-unit>
        <trans-unit id="9cb3108f640e19d28da570077adf8f3d8fdd9688" translate="yes" xml:space="preserve">
          <source>Happy Eyeballs Algorithm: Success with Dual-Stack Hosts. When a server&amp;rsquo;s IPv4 path and protocol are working, but the server&amp;rsquo;s IPv6 path and protocol are not working, a dual-stack client application experiences significant connection delay compared to an IPv4-only client. This is undesirable because it causes the dual- stack client to have a worse user experience. This document specifies requirements for algorithms that reduce this user-visible delay and provides an algorithm.</source>
          <target state="translated">Happy Eyeballs Algorithm: Success with Dual-Stack Hosts. When a server&amp;rsquo;s IPv4 path and protocol are working, but the server&amp;rsquo;s IPv6 path and protocol are not working, a dual-stack client application experiences significant connection delay compared to an IPv4-only client. This is undesirable because it causes the dual- stack client to have a worse user experience. This document specifies requirements for algorithms that reduce this user-visible delay and provides an algorithm.</target>
        </trans-unit>
        <trans-unit id="28ac25e382cbf0d1025fd3f532ff2aeb20012d52" translate="yes" xml:space="preserve">
          <source>Harmonic mean of data.</source>
          <target state="translated">データのハーモニック平均。</target>
        </trans-unit>
        <trans-unit id="5d5f0cfcaa9f574e8a332a820d4d9d82eea71bb3" translate="yes" xml:space="preserve">
          <source>Has two optional arguments which must be specified as keyword arguments.</source>
          <target state="translated">キーワード引数として指定する必要がある 2 つのオプションの引数を持ちます。</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="2a9a23956b6c95b1bda07fb332057044e9c2584a" translate="yes" xml:space="preserve">
          <source>Hash algorithms</source>
          <target state="translated">ハッシュアルゴリズム</target>
        </trans-unit>
        <trans-unit id="e146edfef10cc2f76cac45cb7eeb8f7a5d679e6a" translate="yes" xml:space="preserve">
          <source>Hash objects from this module follow the API of standard library&amp;rsquo;s &lt;a href=&quot;#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このモジュールのハッシュオブジェクトは、標準ライブラリの&lt;a href=&quot;#module-hashlib&quot;&gt; &lt;code&gt;hashlib&lt;/code&gt; &lt;/a&gt;オブジェクトのAPIに従います。</target>
        </trans-unit>
        <trans-unit id="c6aeab0420dd390a78c9b7dfabcf5a39921d254c" translate="yes" xml:space="preserve">
          <source>Hash objects with different digest sizes have completely different outputs (shorter hashes are &lt;em&gt;not&lt;/em&gt; prefixes of longer hashes); BLAKE2b and BLAKE2s produce different outputs even if the output length is the same:</source>
          <target state="translated">異なるダイジェストサイズのハッシュオブジェクトは出力が完全に異なります（短いハッシュは長いハッシュのプレフィックスではあり&lt;em&gt;ません&lt;/em&gt;）。出力長が同じでも、BLAKE2bとBLAKE2sは異なる出力を生成します。</target>
        </trans-unit>
        <trans-unit id="ad92929e3b14f9ded46f9153491efe74c6f63f1f" translate="yes" xml:space="preserve">
          <source>Hashing Methods</source>
          <target state="translated">ハッシュ化の方法</target>
        </trans-unit>
        <trans-unit id="303fce0ac745167c9c8a05f3e0aa201a3f84b7a1" translate="yes" xml:space="preserve">
          <source>Hashing of numeric types</source>
          <target state="translated">数値型のハッシュ化</target>
        </trans-unit>
        <trans-unit id="a2619651432fd92bc422e56d1ad8c57275d26d64" translate="yes" xml:space="preserve">
          <source>Hashlib now uses SHA3 and SHAKE from OpenSSL 1.1.1 and newer.</source>
          <target state="translated">HashlibはOpenSSL 1.1.1以降のSHA3とSHAKEを使用するようになりました。</target>
        </trans-unit>
        <trans-unit id="b194cf3788207606ecc3b2e7d17d26585f5d57e6" translate="yes" xml:space="preserve">
          <source>Hashlib provides the following constant attributes:</source>
          <target state="translated">Hashlibは以下の定数属性を提供します。</target>
        </trans-unit>
        <trans-unit id="8503ede3ea63ea360679c1a7bb9c6feb415c1aeb" translate="yes" xml:space="preserve">
          <source>Have fun!</source>
          <target state="translated">楽しもう!</target>
        </trans-unit>
        <trans-unit id="78f963073bec4db63e808e2d6e30b53085d9d799" translate="yes" xml:space="preserve">
          <source>Having two enum members with the same name is invalid:</source>
          <target state="translated">同じ名前を持つ2つの列挙メンバを持つことは無効です。</target>
        </trans-unit>
        <trans-unit id="956e067b3f83c675f83b89ad77530a84a25325b3" translate="yes" xml:space="preserve">
          <source>Header folding is controlled by the &lt;a href=&quot;#email.policy.EmailPolicy.refold_source&quot;&gt;&lt;code&gt;refold_source&lt;/code&gt;&lt;/a&gt; policy setting. A value is considered to be a &amp;lsquo;source value&amp;rsquo; if and only if it does not have a &lt;code&gt;name&lt;/code&gt; attribute (having a &lt;code&gt;name&lt;/code&gt; attribute means it is a header object of some sort). If a source value needs to be refolded according to the policy, it is converted into a header object by passing the &lt;em&gt;name&lt;/em&gt; and the &lt;em&gt;value&lt;/em&gt; with any CR and LF characters removed to the &lt;code&gt;header_factory&lt;/code&gt;. Folding of a header object is done by calling its &lt;code&gt;fold&lt;/code&gt; method with the current policy.</source>
          <target state="translated">ヘッダーの折りたたみは、&lt;a href=&quot;#email.policy.EmailPolicy.refold_source&quot;&gt; &lt;code&gt;refold_source&lt;/code&gt; &lt;/a&gt;ポリシー設定によって制御されます。値は、もし「元の値」であると考えられ、それは持っていない場合にのみ、 &lt;code&gt;name&lt;/code&gt; （持つ属性 &lt;code&gt;name&lt;/code&gt; 属性手段を、それがある種のヘッダーオブジェクトです）。ソース値はポリシーに従ってリフォールディングする必要がある場合、それが通過することによってヘッダーオブジェクトに変換され、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;を除去し、任意のCRとLF文字を &lt;code&gt;header_factory&lt;/code&gt; を。ヘッダーオブジェクトの折りたたみは、現在のポリシーでその &lt;code&gt;fold&lt;/code&gt; メソッドを呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="6901a3735f0255d8719b4fb97692a6865119569f" translate="yes" xml:space="preserve">
          <source>Header-encode a &lt;em&gt;string&lt;/em&gt; by converting it first to bytes.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を最初にバイトに変換して、ヘッダーエンコードします。</target>
        </trans-unit>
        <trans-unit id="5fe13d069f9bcd0482900a73296e2aa37b5e706a" translate="yes" xml:space="preserve">
          <source>Header-encode the string &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">文字&lt;em&gt;列stringを&lt;/em&gt;ヘッダーエンコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a7ea6a21e332b0e60f835d8a4c6db06db904c6b7" translate="yes" xml:space="preserve">
          <source>Headers are folded using the &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; folding algorithm, which preserves existing line breaks in the value, and wraps each resulting line to the &lt;code&gt;max_line_length&lt;/code&gt;. If &lt;code&gt;cte_type&lt;/code&gt; is &lt;code&gt;7bit&lt;/code&gt;, non-ascii binary data is CTE encoded using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset. Otherwise the original source header is used, with its existing line breaks and any (RFC invalid) binary data it may contain.</source>
          <target state="translated">ヘッダーは、&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;折りたたみアルゴリズムを使用して折りたたまれます。これは、値の既存の改行を保持し、結果の各行を &lt;code&gt;max_line_length&lt;/code&gt; に折り返します。 &lt;code&gt;cte_type&lt;/code&gt; が &lt;code&gt;7bit&lt;/code&gt; の場合、非ASCIIバイナリデータは、 &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してCTEエンコードされます。それ以外の場合は、元のソースヘッダーが使用され、既存の改行とそれに含まれる可能性のある（RFC無効）バイナリデータが含まれます。</target>
        </trans-unit>
        <trans-unit id="ebe8caffa7403f60ddcd1cc993c5dd8678905a97" translate="yes" xml:space="preserve">
          <source>Headers are folded using the &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; folding algorithm, which preserves existing line breaks in the value, and wraps each resulting line to the &lt;code&gt;max_line_length&lt;/code&gt;. Non-ASCII binary data are CTE encoded using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset.</source>
          <target state="translated">ヘッダーは、&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;折りたたみアルゴリズムを使用して折りたたまれます。これは、値の既存の改行を保持し、結果の各行を &lt;code&gt;max_line_length&lt;/code&gt; に折り返します。非ASCIIバイナリデータは、 &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してCTEエンコードされます。</target>
        </trans-unit>
        <trans-unit id="a98bc6401562f58049cacbc1e7407670111c1e89" translate="yes" xml:space="preserve">
          <source>Headers are represented by customized subclasses of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. The particular class used to represent a given header is determined by the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt;&lt;code&gt;header_factory&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; in effect when the headers are created. This section documents the particular &lt;code&gt;header_factory&lt;/code&gt; implemented by the email package for handling &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; compliant email messages, which not only provides customized header objects for various header types, but also provides an extension mechanism for applications to add their own custom header types.</source>
          <target state="translated">ヘッダーは&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;カスタマイズされたサブクラスによって表されます。所定のヘッダを表すために使用される特定のクラスは、によって決定される&lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt; &lt;code&gt;header_factory&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;ヘッダが作成されるときに有効です。このセクションでは、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;準拠の電子メールメッセージを処理するために電子メールパッケージによって実装される特定の &lt;code&gt;header_factory&lt;/code&gt; について説明します。これは、さまざまなヘッダータイプのカスタマイズされたヘッダーオブジェクトを提供するだけでなく、アプリケーションが独自のカスタムヘッダータイプを追加するための拡張メカニズムも提供します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb02d09b6702cd36c64f3e002eb02e318d1b6c96" translate="yes" xml:space="preserve">
          <source>Headers of the response in the form of an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;email.message.EmailMessage&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Headers of the response in the form of an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;email.message.EmailMessage&lt;/code&gt; &lt;/a&gt; instance.</target>
        </trans-unit>
        <trans-unit id="e393fa6a2b7360dfa38d3d9b9332735fa20c75f1" translate="yes" xml:space="preserve">
          <source>Heap elements can be tuples. This is useful for assigning comparison values (such as task priorities) alongside the main record being tracked:</source>
          <target state="translated">ヒープ要素はタプルにすることができます。これは、追跡されているメインレコードと並んで比較値(タスクの優先度など)を割り当てるのに便利です。</target>
        </trans-unit>
        <trans-unit id="f05c2ca1637855efab589e3146dfd91ec2b8dfd7" translate="yes" xml:space="preserve">
          <source>Heaps are also very useful in big disk sorts. You most probably all know that a big sort implies producing &amp;ldquo;runs&amp;rdquo; (which are pre-sorted sequences, whose size is usually related to the amount of CPU memory), followed by a merging passes for these runs, which merging is often very cleverly organised &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. It is very important that the initial sort produces the longest runs possible. Tournaments are a good way to achieve that. If, using all the memory available to hold a tournament, you replace and percolate items that happen to fit the current run, you&amp;rsquo;ll produce runs which are twice the size of the memory for random input, and much better for input fuzzily ordered.</source>
          <target state="translated">ヒープは、大きなディスクのソートにも非常に役立ちます。おそらく、すべての人が知っていることですが、大きな並べ替えは「実行」（通常はCPUメモリの量に関連するサイズが事前にソートされたシーケンス）を生成し、その後にこれらの実行のマージパスが続くことを意味します。整理された&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。最初のソートが可能な限り最長の実行を生成することが非常に重要です。トーナメントはそれを達成する良い方法です。トーナメントを開催するために利用可能なすべてのメモリを使用して、たまたま現在の実行に適合するアイテムを置き換えてパーコレートすると、ランダム入力のメモリの2倍のサイズの実行が生成され、あいまいに順序付けられた入力の場合ははるかに良くなります。</target>
        </trans-unit>
        <trans-unit id="94253428243000d37b9f634428431d09481c1836" translate="yes" xml:space="preserve">
          <source>Heaps are arrays for which &lt;code&gt;a[k] &amp;lt;= a[2*k+1]&lt;/code&gt; and &lt;code&gt;a[k] &amp;lt;= a[2*k+2]&lt;/code&gt; for all &lt;em&gt;k&lt;/em&gt;, counting elements from 0. For the sake of comparison, non-existing elements are considered to be infinite. The interesting property of a heap is that &lt;code&gt;a[0]&lt;/code&gt; is always its smallest element.</source>
          <target state="translated">ヒープは、配列であるために &lt;code&gt;a[k] &amp;lt;= a[2*k+1]&lt;/code&gt; 及び &lt;code&gt;a[k] &amp;lt;= a[2*k+2]&lt;/code&gt; すべてのための&lt;em&gt;K&lt;/em&gt;、比較のために0からカウント要素、非-既存の要素は無限と見なされます。ヒープの興味深い特性は、 &lt;code&gt;a[0]&lt;/code&gt; が常に最小の要素であることです。</target>
        </trans-unit>
        <trans-unit id="f0958aba14742bb54b868bb2e7efefba45a47ee7" translate="yes" xml:space="preserve">
          <source>Heaps are binary trees for which every parent node has a value less than or equal to any of its children. This implementation uses arrays for which &lt;code&gt;heap[k] &amp;lt;= heap[2*k+1]&lt;/code&gt; and &lt;code&gt;heap[k] &amp;lt;= heap[2*k+2]&lt;/code&gt; for all &lt;em&gt;k&lt;/em&gt;, counting elements from zero. For the sake of comparison, non-existing elements are considered to be infinite. The interesting property of a heap is that its smallest element is always the root, &lt;code&gt;heap[0]&lt;/code&gt;.</source>
          <target state="translated">ヒープは、すべての親ノードの値がその子の値以下であるバイナリツリーです。この実装では、すべての&lt;em&gt;kに対して&lt;/em&gt; &lt;code&gt;heap[k] &amp;lt;= heap[2*k+1]&lt;/code&gt; および &lt;code&gt;heap[k] &amp;lt;= heap[2*k+2]&lt;/code&gt; である配列を使用し、ゼロから要素をカウントします。比較のために、存在しない要素は無限であると見なされます。ヒープの興味深い特性は、その最小要素が常にルート &lt;code&gt;heap[0]&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="59b3a81a6811a92bb1cf8fec2fbe19d8c89c6cf1" translate="yes" xml:space="preserve">
          <source>Height of the terminal window in characters.</source>
          <target state="translated">ターミナルウィンドウの高さを文字数で指定します。</target>
        </trans-unit>
        <trans-unit id="ecb0bdc009a4e94b619f238e5c038184e5a5c5ef" translate="yes" xml:space="preserve">
          <source>Hello World with call_soon()</source>
          <target state="translated">call_soon()を使ったハローワールド</target>
        </trans-unit>
        <trans-unit id="2ef7bde608ce5404e97d5f042f95f89f1c232871" translate="yes" xml:space="preserve">
          <source>Hello World!</source>
          <target state="translated">ハローワールド</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">Help</target>
        </trans-unit>
        <trans-unit id="28e7dce7cb9f9601d24981a334e76f6c313bf469" translate="yes" xml:space="preserve">
          <source>Help and configuration</source>
          <target state="translated">ヘルプと設定</target>
        </trans-unit>
        <trans-unit id="a18d02323a87b03f7466d8b1da693ffe43a62734" translate="yes" xml:space="preserve">
          <source>Help and preferences</source>
          <target state="translated">ヘルプと好み</target>
        </trans-unit>
        <trans-unit id="1e5e41c77d62a1f28e9ed2f5576b34dc1f7958ab" translate="yes" xml:space="preserve">
          <source>Help menu (Shell and Editor)</source>
          <target state="translated">ヘルプメニュー(シェルとエディタ</target>
        </trans-unit>
        <trans-unit id="793e97ee72773880ffe54983bbdef3032df6fc32" translate="yes" xml:space="preserve">
          <source>Help menu entry &amp;ldquo;IDLE Help&amp;rdquo; displays a formatted html version of the IDLE chapter of the Library Reference. The result, in a read-only tkinter text window, is close to what one sees in a web browser. Navigate through the text with a mousewheel, the scrollbar, or up and down arrow keys held down. Or click the TOC (Table of Contents) button and select a section header in the opened box.</source>
          <target state="translated">ヘルプメニューエントリ「IDLE Help」は、ライブラリリファレンスのIDLE章のフォーマットされたhtmlバージョンを表示します。結果は、読み取り専用のtkinterテキストウィンドウで、Webブラウザーに表示されるものに近くなります。マウスホイール、スクロールバー、または押したままの上下矢印キーを使用して、テキスト内を移動します。または、目次（目次）ボタンをクリックして、開いたボックスでセクションヘッダーを選択します。</target>
        </trans-unit>
        <trans-unit id="b11a1a8fed4583088aeda48052c86ca844eebd01" translate="yes" xml:space="preserve">
          <source>Help menu entry &amp;ldquo;Python Docs&amp;rdquo; opens the extensive sources of help, including tutorials, available at &lt;code&gt;docs.python.org/x.y&lt;/code&gt;, where &amp;lsquo;x.y&amp;rsquo; is the currently running Python version. If your system has an off-line copy of the docs (this may be an installation option), that will be opened instead.</source>
          <target state="translated">ヘルプメニューエントリ「Python Docs」は、 &lt;code&gt;docs.python.org/x.y&lt;/code&gt; で利用可能なチュートリアルを含むヘルプの広範なソースを開きます。ここで、「x.y」は現在実行中のPythonバージョンです。システムにドキュメントのオフラインコピーがある場合（これはインストールオプションである場合があります）、代わりに開きます。</target>
        </trans-unit>
        <trans-unit id="dfb5d6579c133dffbacf19caeed708a180fc034d" translate="yes" xml:space="preserve">
          <source>Help sources</source>
          <target state="translated">ヘルプソース</target>
        </trans-unit>
        <trans-unit id="934835a36e88b263f02948e4dbd8c5dd04401bc0" translate="yes" xml:space="preserve">
          <source>Helper functions</source>
          <target state="translated">ヘルパー機能</target>
        </trans-unit>
        <trans-unit id="9f94e06f2e8ee19ef9699de5b8431b151fa4c9ee" translate="yes" xml:space="preserve">
          <source>Helper to print a traceback from the timed code.</source>
          <target state="translated">タイムドコードからのトレースバックを表示するヘルパー。</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="9bad4c938651ee76ce6a287a012d5591687a09bc" translate="yes" xml:space="preserve">
          <source>Hence an &lt;em&gt;iterable&lt;/em&gt; of &lt;code&gt;[(1,2), (3, 4)]&lt;/code&gt; results in &lt;code&gt;[func(1,2),
func(3,4)]&lt;/code&gt;.</source>
          <target state="translated">したがって&lt;em&gt;反復可能&lt;/em&gt;の &lt;code&gt;[(1,2), (3, 4)]&lt;/code&gt; をもたらす &lt;code&gt;[func(1,2), func(3,4)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b44d2a2afad6e9544558991fb0f0fd1e144d478b" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;floatnumber&lt;/code&gt; is the form of a Python floating-point literal, described in &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#floating&quot;&gt;Floating point literals&lt;/a&gt;. Case is not significant, so, for example, &amp;ldquo;inf&amp;rdquo;, &amp;ldquo;Inf&amp;rdquo;, &amp;ldquo;INFINITY&amp;rdquo; and &amp;ldquo;iNfINity&amp;rdquo; are all acceptable spellings for positive infinity.</source>
          <target state="translated">ここで &lt;code&gt;floatnumber&lt;/code&gt; に記載Pythonの浮動小数点リテラルの形態である&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#floating&quot;&gt;浮動小数点リテラル&lt;/a&gt;。大文字と小文字は区別されないため、たとえば、「inf」、「Inf」、「INFINITY」、「iNfINity」はすべて、正の無限大で使用できるスペルです。</target>
        </trans-unit>
        <trans-unit id="244ccc56972abe47829e4a7be0bbc9d4387ed18f" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;floatnumber&lt;/code&gt; is the form of a Python floating-point literal, described in &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#floating&quot;&gt;Floating point literals&lt;/a&gt;. Case is not significant, so, for example, &amp;ldquo;inf&amp;rdquo;, &amp;ldquo;Inf&amp;rdquo;, &amp;ldquo;INFINITY&amp;rdquo; and &amp;ldquo;iNfINity&amp;rdquo; are all acceptable spellings for positive infinity.</source>
          <target state="translated">Here &lt;code&gt;floatnumber&lt;/code&gt; is the form of a Python floating-point literal, described in &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#floating&quot;&gt;Floating point literals&lt;/a&gt;. Case is not significant, so, for example, &amp;ldquo;inf&amp;rdquo;, &amp;ldquo;Inf&amp;rdquo;, &amp;ldquo;INFINITY&amp;rdquo; and &amp;ldquo;iNfINity&amp;rdquo; are all acceptable spellings for positive infinity.</target>
        </trans-unit>
        <trans-unit id="e9577fd9feab5cb1e4b56a6d0ea9de1dd1d4a07d" translate="yes" xml:space="preserve">
          <source>Here all warnings will be caught, and the test code tests the captured warnings directly.</source>
          <target state="translated">ここではすべての警告が捕捉され、テストコードは捕捉された警告を直接テストします。</target>
        </trans-unit>
        <trans-unit id="d4cbf6d694573a6b35a8882624d22cfd46ff632e" translate="yes" xml:space="preserve">
          <source>Here are a few examples of how to use the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package to read, write, and send simple email messages, as well as more complex MIME messages.</source>
          <target state="translated">以下に、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージを使用して、単純な電子メールメッセージや、より複雑なMIMEメッセージを読み取り、書き込み、送信する方法の例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="c9c7cc8a120a0af672345b3356e3d523999fbe1c" translate="yes" xml:space="preserve">
          <source>Here are a few recipes that serve as utility functions and that demonstrate ways to work with the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">ユーティリティ関数として機能し、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;クラスを操作する方法を示すいくつかのレシピを次に示します。</target>
        </trans-unit>
        <trans-unit id="cc7e228700c1b92ad7ac1415ee4e043abb38dd76" translate="yes" xml:space="preserve">
          <source>Here are four minimal example programs using the TCP/IP protocol: a server that echoes all data that it receives back (servicing only one client), and a client using it. Note that a server must perform the sequence &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.bind&quot;&gt;&lt;code&gt;bind()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; (possibly repeating the &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; to service more than one client), while a client only needs the sequence &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt;. Also note that the server does not &lt;a href=&quot;#socket.socket.sendall&quot;&gt;&lt;code&gt;sendall()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; on the socket it is listening on but on the new socket returned by &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">TCP / IPプロトコルを使用した4つの最小限のサンプルプログラムを次に示します。サーバーが受信したすべてのデータをエコーするサーバー（1つのクライアントのみにサービスを提供）と、それを使用するクライアントです。サーバーはシーケンス&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.bind&quot;&gt; &lt;code&gt;bind()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;（おそらく複数のクライアントにサービスを提供する&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;を繰り返す）を実行する必要があるが、クライアントはシーケンス&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;のみを必要とすることに注意してください（）。サーバーは、&lt;a href=&quot;#socket.socket.sendall&quot;&gt; &lt;code&gt;sendall()&lt;/code&gt; &lt;/a&gt;しているソケットではなく、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;によって返された新しいソケットではsendall（） / &lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;を送信しないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="848203b6ef6b35a2defc3dccc96affca56775c19" translate="yes" xml:space="preserve">
          <source>Here are some additional useful header related methods:</source>
          <target state="translated">ここでは、その他の便利なヘッダ関連のメソッドをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="90a7aeffda70ad496e94cfcc706ad61c2e0aaa10" translate="yes" xml:space="preserve">
          <source>Here are some additional useful methods:</source>
          <target state="translated">ここでは、さらにいくつかの便利な方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="1ac2adcb2af1c2b090a1c0d1be0dc3af785419f4" translate="yes" xml:space="preserve">
          <source>Here are some examples for Windows. Note that &lt;code&gt;msvcrt&lt;/code&gt; is the MS standard C library containing most standard C functions, and uses the cdecl calling convention:</source>
          <target state="translated">Windowsの例をいくつか示します。 &lt;code&gt;msvcrt&lt;/code&gt; は、ほとんどの標準C関数を含むMS標準Cライブラリであり、cdecl呼び出し規約を使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f862bd79424f8f419f9104ffde0b99c655fec57" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage of the &lt;a href=&quot;#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;モジュールの一般的な使用例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="421e4af8c302f92252068c4e665eb8048a72f5d5" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage of the &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">次に、&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;モジュールの一般的な使用例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="d96b3e058a1f9b5592e9360379e20ef013857e85" translate="yes" xml:space="preserve">
          <source>Here are some examples of typical usage:</source>
          <target state="translated">代表的な使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">ここでは、いくつかの例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="12ec0a6b54e682604fd1f54622b08efce3df4999" translate="yes" xml:space="preserve">
          <source>Here are some notes on the parsing semantics:</source>
          <target state="translated">ここでは、構文解析のセマンティクスについての注意点を説明します。</target>
        </trans-unit>
        <trans-unit id="e3edc31d64bca5d6336f03a57993926d153773bd" translate="yes" xml:space="preserve">
          <source>Here are some other methods and attributes you may wish to override. This list is only a summary, however, and does not include every method that can be overridden. You should consult the docstrings and source code for additional information before attempting to create a customized &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">オーバーライドしたいメソッドと属性がいくつかあります。ただし、このリストは単なる要約であり、オーバーライドできるすべてのメソッドが含まれているわけではありません。カスタマイズされた&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;サブクラスを作成する前に、追加情報についてdocstringsとソースコードを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="f5ba1cb3713902ae4550268fb70da7530b34b57c" translate="yes" xml:space="preserve">
          <source>Here are some simple examples:</source>
          <target state="translated">簡単な例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="850baf30242031506b0e614d9eb98d9a7955b34d" translate="yes" xml:space="preserve">
          <source>Here are the classes:</source>
          <target state="translated">授業の様子をご紹介します。</target>
        </trans-unit>
        <trans-unit id="f6fe11950cf6fa846a750dbaed423167118cf8e0" translate="yes" xml:space="preserve">
          <source>Here are the encoding functions provided:</source>
          <target state="translated">用意されているエンコード機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b95c5e82df057126a3c36996dbffbc4c5362267f" translate="yes" xml:space="preserve">
          <source>Here are the methods of the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラスのメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ed31d258ad18f9d3c2b6b8464a85b09de67bd9b4" translate="yes" xml:space="preserve">
          <source>Here are the rules governing implicit creation of a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Note that you cannot both have an explicit &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method in your dataclass and set &lt;code&gt;unsafe_hash=True&lt;/code&gt;; this will result in a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドの暗黙的な作成を管理するルールを次に示します。 &lt;code&gt;unsafe_hash=True&lt;/code&gt; 明示的な&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを含めず、unsafe_hash = Trueを設定することはできません。これは&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="994b69055d18c5cba906999cf3cb313989eb5c7a" translate="yes" xml:space="preserve">
          <source>Here are the rules governing implicit creation of a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Note that you cannot both have an explicit &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method in your dataclass and set &lt;code&gt;unsafe_hash=True&lt;/code&gt;; this will result in a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Here are the rules governing implicit creation of a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method. Note that you cannot both have an explicit &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method in your dataclass and set &lt;code&gt;unsafe_hash=True&lt;/code&gt; ; this will result in a &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8c196634973a8d99ccdf18cbc5696310bd7964c7" translate="yes" xml:space="preserve">
          <source>Here are the rules in detail:</source>
          <target state="translated">ここではルールを詳しくご紹介します。</target>
        </trans-unit>
        <trans-unit id="557b26034ea3c92b6163bb318046d2bddeae00b9" translate="yes" xml:space="preserve">
          <source>Here are two small examples of how it can be used. To list some statistics about a newsgroup and print the subjects of the last 10 articles:</source>
          <target state="translated">どのように使うことができるのか、2 つの小さな例を紹介します。ニュースグループの統計情報をリストアップし、過去10回の記事の主題を表示する。</target>
        </trans-unit>
        <trans-unit id="179d40c94384439c79c1a720dc54f39e17c70bfb" translate="yes" xml:space="preserve">
          <source>Here is a RECT structure which contains two POINTs named &lt;em&gt;upperleft&lt;/em&gt; and &lt;em&gt;lowerright&lt;/em&gt;:</source>
          <target state="translated">次に、&lt;em&gt;upperleft&lt;/em&gt;と&lt;em&gt;lowerright&lt;/em&gt;という2つのPOINTを含むRECT構造を示します。</target>
        </trans-unit>
        <trans-unit id="b11c4199d90d38db06d33ee228fd632c8e05e0b6" translate="yes" xml:space="preserve">
          <source>Here is a basic echo server that uses the &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class to accept connections and dispatches the incoming connections to a handler:</source>
          <target state="translated">以下は、&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;クラスを使用して接続を受け入れ、着信接続をハンドラにディスパッチする基本的なエコーサーバーです。</target>
        </trans-unit>
        <trans-unit id="89e92dab799df20513ba190ff69a355bbb907809" translate="yes" xml:space="preserve">
          <source>Here is a comprehensive example presenting how persistent ID can be used to pickle external objects by reference.</source>
          <target state="translated">ここでは、参照による外部オブジェクトのピクルスに永続的なIDを使用する方法を包括的に提示しています。</target>
        </trans-unit>
        <trans-unit id="aedf046734d92d5ea82f1b03a1f6ccdaf708f3e6" translate="yes" xml:space="preserve">
          <source>Here is a minimal example (without error checking) that opens a mailbox and retrieves and prints all messages:</source>
          <target state="translated">ここでは、メールボックスを開き、すべてのメッセージを取得して印刷する最小限の例(エラーチェックなし)を示します。</target>
        </trans-unit>
        <trans-unit id="858763321472e2f89573939e2e2b2ebbc0e0b92e" translate="yes" xml:space="preserve">
          <source>Here is a minimal example program. It uses the &lt;a href=&quot;#signal.alarm&quot;&gt;&lt;code&gt;alarm()&lt;/code&gt;&lt;/a&gt; function to limit the time spent waiting to open a file; this is useful if the file is for a serial device that may not be turned on, which would normally cause the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; to hang indefinitely. The solution is to set a 5-second alarm before opening the file; if the operation takes too long, the alarm signal will be sent, and the handler raises an exception.</source>
          <target state="translated">これは最小限のサンプルプログラムです。これは、&lt;a href=&quot;#signal.alarm&quot;&gt; &lt;code&gt;alarm()&lt;/code&gt; &lt;/a&gt;関数を使用して、ファイルを開くまでの待機時間を制限します。これは、ファイルがオンになっていない可能性があるシリアルデバイス用であり、通常は&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;が無期限にハングする原因となる場合に役立ちます。解決策は、ファイルを開く前に5秒のアラームを設定することです。操作に時間がかかりすぎると、アラーム信号が送信され、ハンドラーが例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="4b5a1b75d30a7b9670ad29284b16f1578dc79c1c" translate="yes" xml:space="preserve">
          <source>Here is a more advanced example, it uses the &lt;code&gt;strchr&lt;/code&gt; function, which expects a string pointer and a char, and returns a pointer to a string:</source>
          <target state="translated">次に、より高度な例を示します &lt;code&gt;strchr&lt;/code&gt; 関数を使用します。これは、文字列ポインタと文字を想定し、文字列へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="95cef5f0126a27e10141faf5133f1bcbbd2d52f4" translate="yes" xml:space="preserve">
          <source>Here is a sample session with the turtle shell showing the help functions, using blank lines to repeat commands, and the simple record and playback facility:</source>
          <target state="translated">ここでは、ヘルプ機能、空行を使ったコマンドの繰り返し、簡単な録音・再生機能を示す、Turtle shell のサンプルセッションを紹介します。</target>
        </trans-unit>
        <trans-unit id="5ea82f3080f5f08a1cf6ae1393c3531d56e8c858" translate="yes" xml:space="preserve">
          <source>Here is a short script to test three string methods:</source>
          <target state="translated">ここでは、3つの文字列メソッドをテストするための短いスクリプトです。</target>
        </trans-unit>
        <trans-unit id="c1d0b87a033dc901ab5b05a6a511ade5fd204b7c" translate="yes" xml:space="preserve">
          <source>Here is a simple echo server implementation:</source>
          <target state="translated">ここでは、簡単なエコーサーバの実装を紹介します。</target>
        </trans-unit>
        <trans-unit id="783c88dec80dbc359cd0a54cb73ef2e8956c06df" translate="yes" xml:space="preserve">
          <source>Here is a simple example of a POINT structure, which contains two integers named &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, and also shows how to initialize a structure in the constructor:</source>
          <target state="translated">以下は、POINT構造の簡単な例です。これには、&lt;em&gt;x&lt;/em&gt;および&lt;em&gt;y&lt;/em&gt;という名前の2つの整数が含まれており、コンストラクターで構造を初期化する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="a220f7a767cad9812c7f5e9e71729724691d793a" translate="yes" xml:space="preserve">
          <source>Here is a simple example where we allow pickling and reconstructing a given class:</source>
          <target state="translated">ここでは、与えられたクラスのピックリングと再構築を許可する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="66492cba692800cf02c93560d0a4ae5260cd7a45" translate="yes" xml:space="preserve">
          <source>Here is a simplified example of using the &lt;code&gt;subdirs&lt;/code&gt; attribute to search recursively through two directories to show common different files:</source>
          <target state="translated">次に、 &lt;code&gt;subdirs&lt;/code&gt; 属性を使用して2つのディレクトリを再帰的に検索し、一般的な異なるファイルを表示する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="1a1651c42d3d327851c93c93b01b9268244b9102" translate="yes" xml:space="preserve">
          <source>Here is a trivial example where we implement a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; subclass able to participate in out-of-band buffer pickling:</source>
          <target state="translated">以下は、帯域外バッファー&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;に参加できるbytearrayサブクラスを実装する簡単な例です。</target>
        </trans-unit>
        <trans-unit id="4083b0132c7f289dc2cfe594fe0062d0a2928f45" translate="yes" xml:space="preserve">
          <source>Here is a very basic HTTP client that uses the &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class to implement its socket handling:</source>
          <target state="translated">&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;クラスを使用してソケット処理を実装する非常に基本的なHTTPクライアントを次に示します。</target>
        </trans-unit>
        <trans-unit id="9681060e036ebeaa6ecc1812f0a2f746613da2c5" translate="yes" xml:space="preserve">
          <source>Here is an XML example that incorporates two namespaces, one with the prefix &amp;ldquo;fictional&amp;rdquo; and the other serving as the default namespace:</source>
          <target state="translated">以下は、2つの名前空間を組み込んだXMLの例です。1つは接頭辞「fictional」があり、もう1つはデフォルトの名前空間として機能します。</target>
        </trans-unit>
        <trans-unit id="0137522adaa7f5c187c163e2786035a7e02c8078" translate="yes" xml:space="preserve">
          <source>Here is an example how &lt;code&gt;HTMLCalendar&lt;/code&gt; can be customized:</source>
          <target state="translated">&lt;code&gt;HTMLCalendar&lt;/code&gt; をカスタマイズする方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="bcefb4d49c909a6b98daaf5656641cc671df0062" translate="yes" xml:space="preserve">
          <source>Here is an example of a TCP echo client written using asyncio streams:</source>
          <target state="translated">以下は、asyncio ストリームを使用して書かれた TCP エコークライアントの例です。</target>
        </trans-unit>
        <trans-unit id="926e62c32ff349304967e48a181cbc5cd0a5da18" translate="yes" xml:space="preserve">
          <source>Here is an example of a somewhat artificial data type, a structure containing 4 POINTs among other stuff:</source>
          <target state="translated">ここでは、やや人工的なデータ型の例として、他のものの中で4つのPOINTを含む構造体を示します。</target>
        </trans-unit>
        <trans-unit id="1942a35fca33fb69eb410e653fed29f38ff15dac" translate="yes" xml:space="preserve">
          <source>Here is an example of an unpickler allowing only few safe classes from the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module to be loaded:</source>
          <target state="translated">以下は、&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールからの安全なクラスのロードのみを許可するunpicklerの例です。</target>
        </trans-unit>
        <trans-unit id="1f6e174ce0930d3a688e6d301ba445e413a2bbb8" translate="yes" xml:space="preserve">
          <source>Here is an example of doing a &lt;code&gt;PUT&lt;/code&gt; request using &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;PUT&lt;/code&gt; リクエストを実行する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="63ad9e85ec02c74d345d067024e9c8bf8c414e3c" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use a Template:</source>
          <target state="translated">テンプレートの使い方の一例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="c1f9b5f62c8ca8b8cc7088a5760fdc9620a09236" translate="yes" xml:space="preserve">
          <source>Here is an example of how you would catch one of these exceptions:</source>
          <target state="translated">ここでは、これらの例外の1つをどのようにキャッチするかの例を示します。</target>
        </trans-unit>
        <trans-unit id="cdea6c32a97f82e690ca75ac4f0f1c74eb11d810" translate="yes" xml:space="preserve">
          <source>Here is an example session that shows how to &lt;code&gt;POST&lt;/code&gt; requests:</source>
          <target state="translated">以下は、リクエストを &lt;code&gt;POST&lt;/code&gt; する方法を示すセッションの例です。</target>
        </trans-unit>
        <trans-unit id="b4e1b4a71bce105f36f4683385341397898087cc" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;GET&lt;/code&gt; method to retrieve a URL containing parameters:</source>
          <target state="translated">以下は、 &lt;code&gt;GET&lt;/code&gt; メソッドを使用してパラメーターを含むURLを取得するセッションの例です。</target>
        </trans-unit>
        <trans-unit id="f87b25be67df6c09e308fe796ffe42b228c4a0f4" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;GET&lt;/code&gt; method:</source>
          <target state="translated">以下は、 &lt;code&gt;GET&lt;/code&gt; メソッドを使用するセッションの例です。</target>
        </trans-unit>
        <trans-unit id="f01802ba30e14aa2f7ef06fd05eb038cefe62ea7" translate="yes" xml:space="preserve">
          <source>Here is an example session that uses the &lt;code&gt;HEAD&lt;/code&gt; method. Note that the &lt;code&gt;HEAD&lt;/code&gt; method never returns any data.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; メソッドを使用するセッションの例を次に示します。ことに注意してください &lt;code&gt;HEAD&lt;/code&gt; の方法は、任意のデータを返すことはありません。</target>
        </trans-unit>
        <trans-unit id="7637c0fb791cb33301b7c50ec5939de2528983d7" translate="yes" xml:space="preserve">
          <source>Here is an example that imports a module from a ZIP archive - note that the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module is not explicitly used.</source>
          <target state="translated">以下は、ZIPアーカイブからモジュールをインポートする例です&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;モジュールは明示的に使用されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="63b8653a775ca02f4de9cf85a3ea50f01399ce67" translate="yes" xml:space="preserve">
          <source>Here is an example transformer that rewrites all occurrences of name lookups (&lt;code&gt;foo&lt;/code&gt;) to &lt;code&gt;data['foo']&lt;/code&gt;:</source>
          <target state="translated">次に、名前の検索（ &lt;code&gt;foo&lt;/code&gt; ）のすべての出現箇所を &lt;code&gt;data['foo']&lt;/code&gt; 書き換えるトランスフォーマーの例を示します。</target>
        </trans-unit>
        <trans-unit id="4c22ac49a0c9c7336e5edbfbe2e372032dc66845" translate="yes" xml:space="preserve">
          <source>Here is an example type (Windows):</source>
          <target state="translated">ここでは例のタイプ(Windows)を紹介します。</target>
        </trans-unit>
        <trans-unit id="0e4f971444f1d77e09759bbb6d4eb09fd55bc2d3" translate="yes" xml:space="preserve">
          <source>Here is an example with a non-byte format:</source>
          <target state="translated">ここでは、ノンバイト形式の例を示します。</target>
        </trans-unit>
        <trans-unit id="3222c631b1d6a91645cefd87ad0f0babb9291a43" translate="yes" xml:space="preserve">
          <source>Here is an example, a format for dates compatible with that specified in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; Internet email standard. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;インターネット電子メール標準で指定されている日付と互換性のある日付の形式の例を次に示します。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="3e1dafbc069fa301268390cf627b3ca5c064c24e" translate="yes" xml:space="preserve">
          <source>Here is how the above snippet can be fixed:</source>
          <target state="translated">上記のスニペットを修正する方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0193f048235ff1d1526f09d38ae6b2bf5b52e26a" translate="yes" xml:space="preserve">
          <source>Here is one way you can handle this situation:</source>
          <target state="translated">そんな時の対処法を一つご紹介します。</target>
        </trans-unit>
        <trans-unit id="cbb8b723b6c194f091fb87df1d26aab4a18efa52" translate="yes" xml:space="preserve">
          <source>Here is the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class description:</source>
          <target state="translated">ここで&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;クラスの説明：</target>
        </trans-unit>
        <trans-unit id="43a4df7c9db3f85bfab609815a30ff46e6d1db35" translate="yes" xml:space="preserve">
          <source>Here is the API for the &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;のAPIは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="312593d370700c530b8c77ba64f5bf70d0d4e0d1" translate="yes" xml:space="preserve">
          <source>Here is the list of handlers that can be set. To set a handler on an &lt;code&gt;xmlparser&lt;/code&gt; object &lt;em&gt;o&lt;/em&gt;, use &lt;code&gt;o.handlername = func&lt;/code&gt;. &lt;em&gt;handlername&lt;/em&gt; must be taken from the following list, and &lt;em&gt;func&lt;/em&gt; must be a callable object accepting the correct number of arguments. The arguments are all strings, unless otherwise stated.</source>
          <target state="translated">設定できるハンドラのリストは次のとおりです。 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクト&lt;em&gt;oに&lt;/em&gt;ハンドラーを設定するには、 &lt;code&gt;o.handlername = func&lt;/code&gt; 使用します。&lt;em&gt;handlername&lt;/em&gt;は次のリストから取得&lt;em&gt;する&lt;/em&gt;必要があり、&lt;em&gt;func&lt;/em&gt;は正しい数の引数を受け入れる呼び出し可能なオブジェクトでなければなりません。特に明記しない限り、引数はすべて文字列です。</target>
        </trans-unit>
        <trans-unit id="44f421add6ba0457382d5aadb027259940af6a3d" translate="yes" xml:space="preserve">
          <source>Here is the list of the defects that the &lt;a href=&quot;email.parser#email.parser.FeedParser&quot;&gt;&lt;code&gt;FeedParser&lt;/code&gt;&lt;/a&gt; can find while parsing messages. Note that the defects are added to the message where the problem was found, so for example, if a message nested inside a &lt;em&gt;multipart/alternative&lt;/em&gt; had a malformed header, that nested message object would have a defect, but the containing messages would not.</source>
          <target state="translated">&lt;a href=&quot;email.parser#email.parser.FeedParser&quot;&gt; &lt;code&gt;FeedParser&lt;/code&gt; &lt;/a&gt;がメッセージの解析中に検出できる欠陥のリストを以下に示します。問題が見つかったメッセージに欠陥が追加されることに注意してください。たとえば、&lt;em&gt;multipart / alternative&lt;/em&gt;内にネストされたメッセージに不正なヘッダーがあった場合、そのネストされたメッセージオブジェクトには欠陥がありますが、含まれているメッセージには欠陥がありません。</target>
        </trans-unit>
        <trans-unit id="4d14bc3f810050260ad93db46eca920d45cd6587" translate="yes" xml:space="preserve">
          <source>Here is the wrapping with &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">これが&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; による&lt;/a&gt;ラッピングです：</target>
        </trans-unit>
        <trans-unit id="d8d136ce4fcf131b38249ad4b4cdd7b36aab6b59" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;message&lt;/code&gt; parts are not &lt;code&gt;multiparts&lt;/code&gt;, but they do contain subparts. &lt;code&gt;is_multipart()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;walk&lt;/code&gt; descends into the subparts.</source>
          <target state="translated">ここでは、 &lt;code&gt;message&lt;/code&gt; パートは &lt;code&gt;multiparts&lt;/code&gt; ではありませんが、サブパートが含まれています。 &lt;code&gt;is_multipart()&lt;/code&gt; は &lt;code&gt;True&lt;/code&gt; を返し、 &lt;code&gt;walk&lt;/code&gt; はサブパートに下降します。</target>
        </trans-unit>
        <trans-unit id="f8c5b2d5d4895e63936c3e39f9ea5a092742e33a" translate="yes" xml:space="preserve">
          <source>Here the fields, accessed through &lt;code&gt;form[key]&lt;/code&gt;, are themselves instances of &lt;code&gt;FieldStorage&lt;/code&gt; (or &lt;code&gt;MiniFieldStorage&lt;/code&gt;, depending on the form encoding). The &lt;code&gt;value&lt;/code&gt; attribute of the instance yields the string value of the field. The &lt;code&gt;getvalue()&lt;/code&gt; method returns this string value directly; it also accepts an optional second argument as a default to return if the requested key is not present.</source>
          <target state="translated">ここで、 &lt;code&gt;form[key]&lt;/code&gt; を介してアクセスされるフィールドは、それ自体が &lt;code&gt;FieldStorage&lt;/code&gt; （またはフォームのエンコードに応じて &lt;code&gt;MiniFieldStorage&lt;/code&gt; ）のインスタンスです。インスタンスの &lt;code&gt;value&lt;/code&gt; 属性は、フィールドの文字列値を生成します。 &lt;code&gt;getvalue()&lt;/code&gt; メソッドは、直接文字列値を返します。また、要求されたキーが存在しない場合に返すオプションの2番目の引数をデフォルトとして受け入れます。</target>
        </trans-unit>
        <trans-unit id="6427d6dc542f2fe91c5f973e0fbee08e0775e6b1" translate="yes" xml:space="preserve">
          <source>Here we are telling &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; to use the RFC correct line separator characters when creating the binary string to feed into &lt;code&gt;sendmail's&lt;/code&gt;&lt;code&gt;stdin&lt;/code&gt;, where the default policy would use &lt;code&gt;\n&lt;/code&gt; line separators.</source>
          <target state="translated">ここでは言っている&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; を&lt;/a&gt;へフィードへのバイナリ文字列を作成する際にRFCに正しい行区切り文字を使用する &lt;code&gt;sendmail's&lt;/code&gt; &lt;code&gt;stdin&lt;/code&gt; 、デフォルトのポリシーが使用する、 &lt;code&gt;\n&lt;/code&gt; 行区切り。</target>
        </trans-unit>
        <trans-unit id="54089b0f798d064b6d27440468c160d6be3d5a87" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete but small example module:</source>
          <target state="translated">以下は、完全ですが小さなサンプルモジュールです。</target>
        </trans-unit>
        <trans-unit id="deb069a2481d34b576a644f623c5cdd014912641" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a function that prompts for a password with echoing turned off. Note the technique using a separate &lt;a href=&quot;#termios.tcgetattr&quot;&gt;&lt;code&gt;tcgetattr()&lt;/code&gt;&lt;/a&gt; call and a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statement to ensure that the old tty attributes are restored exactly no matter what happens:</source>
          <target state="translated">エコーをオフにした状態でパスワードを要求する関数を次に示します。別の&lt;a href=&quot;#termios.tcgetattr&quot;&gt; &lt;code&gt;tcgetattr()&lt;/code&gt; &lt;/a&gt;呼び出しと&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ステートメントを使用して、何が起こっても正確に古いtty属性が確実に復元されるようにするテクニックに注意してください。</target>
        </trans-unit>
        <trans-unit id="807a57a4f81a556136cd6ff991256bbc4324ecda" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a function that prompts for a password with echoing turned off. Note the technique using a separate &lt;a href=&quot;#termios.tcgetattr&quot;&gt;&lt;code&gt;tcgetattr()&lt;/code&gt;&lt;/a&gt; call and a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statement to ensure that the old tty attributes are restored exactly no matter what happens:</source>
          <target state="translated">Here&amp;rsquo;s a function that prompts for a password with echoing turned off. Note the technique using a separate &lt;a href=&quot;#termios.tcgetattr&quot;&gt; &lt;code&gt;tcgetattr()&lt;/code&gt; &lt;/a&gt; call and a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; statement to ensure that the old tty attributes are restored exactly no matter what happens:</target>
        </trans-unit>
        <trans-unit id="6674d68cc38ec668a73b9a90f473982a8cb3962a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample session using the &lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt;&lt;code&gt;FTP_TLS&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt; &lt;code&gt;FTP_TLS&lt;/code&gt; &lt;/a&gt;クラスを使用したサンプルセッションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b965a2500a417c17e252df58aa948ceb534c9ecf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample session using the &lt;a href=&quot;#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; &lt;/a&gt;モジュールを使用したサンプルセッションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f08d50bf7a9f9628e3dfc06b109485deda2e28cc" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a shorter example using a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;を使用した短い例を次に示します。</target>
        </trans-unit>
        <trans-unit id="314a82dde97c8303e3360b58f5e4928f9604a16d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a shorter example using a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;:</source>
          <target state="translated">Here&amp;rsquo;s a shorter example using a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="9dda69001f51d32dcd158718121626161a3763b1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a table showing which versions in a client (down the side) can connect to which versions in a server (along the top):</source>
          <target state="translated">次の表は、クライアントの（横の）バージョンがサーバーの（上の）バージョンに接続できることを示しています。</target>
        </trans-unit>
        <trans-unit id="96026c277ce40c4cdd39c60d4a2b06b7e1e42842" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of both styles:</source>
          <target state="translated">両方のスタイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="2e7bb34249467c365c51e5881f607b0336fcd6fe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of computing an inverse for &lt;code&gt;38&lt;/code&gt; modulo &lt;code&gt;97&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;97&lt;/code&gt; を法とする &lt;code&gt;38&lt;/code&gt; の逆数を計算する例です。</target>
        </trans-unit>
        <trans-unit id="76246c5edc6c07c691c2ccc2d065398990a99ecd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of doing this for a context manager that accepts resource acquisition and release functions, along with an optional validation function, and maps them to the context management protocol:</source>
          <target state="translated">これは、リソースの取得機能と解放機能、およびオプションの検証機能を受け入れ、それらをコンテキスト管理プロトコルにマップするコンテキストマネージャーに対してこれを行う例です。</target>
        </trans-unit>
        <trans-unit id="6972a9388d5a46c9aaecbb359917ffc8f7f4389d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of hashing a minimal tree with two leaf nodes:</source>
          <target state="translated">以下は、2つのリーフノードを持つ最小ツリーをハッシュする例です。</target>
        </trans-unit>
        <trans-unit id="70402f4d7b8b4f0408298cad94624fc0f6c8e0e1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how asyncio can run a shell command and obtain its result:</source>
          <target state="translated">asyncioがシェルコマンドを実行してその結果を取得する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="86ceb4f04a6903fd4ae47ac5dd9b2e83e0478d72" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to create an HTML message with an alternative plain text version. To make things a bit more interesting, we include a related image in the html part, and we save a copy of what we are going to send to disk, as well as sending it.</source>
          <target state="translated">次に、代替のプレーンテキストバージョンを使用してHTMLメッセージを作成する方法の例を示します。少し面白くするために、関連する画像をhtml部分に含め、送信するもののコピーをディスクに保存して送信します。</target>
        </trans-unit>
        <trans-unit id="10477766db4d4994ddeccf936edb955ea8a8956e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to send a MIME message containing a bunch of family pictures that may be residing in a directory:</source>
          <target state="translated">ディレクトリにある可能性のある家族の写真の束を含むMIMEメッセージを送信する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="66824fe559b5fa4e6945d482d0b46be90bee75d5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to send the entire contents of a directory as an email message: &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">ディレクトリの内容全体を電子メールメッセージとして送信する方法の例を次に示します&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;。1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa965e6e6082f3cdbd60fcddb869e401f5052f16" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to unpack a MIME message like the one above, into a directory of files:</source>
          <target state="translated">上記のようなMIMEメッセージをファイルのディレクトリにアンパックする方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="ffbb9d384a13892dc11f3dbd35da43e2b51be8b9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how you might use &lt;a href=&quot;#email.message_from_bytes&quot;&gt;&lt;code&gt;message_from_bytes()&lt;/code&gt;&lt;/a&gt; at an interactive Python prompt:</source>
          <target state="translated">インタラクティブなPythonプロンプトで&lt;a href=&quot;#email.message_from_bytes&quot;&gt; &lt;code&gt;message_from_bytes()&lt;/code&gt; &lt;/a&gt;を使用する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="8cf6f62163178581796424c7a9a02f1f7e9fb2fa" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of it in use:</source>
          <target state="translated">使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0bdb2cef4a98e2dcf73f5700dd318281ea7481bd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of typical usage for this API:</source>
          <target state="translated">このAPIの一般的な使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a9713683791f9c6f99a0e91da9917c7974bb232d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that demonstrates some of the XPath capabilities of the module. We&amp;rsquo;ll be using the &lt;code&gt;countrydata&lt;/code&gt; XML document from the &lt;a href=&quot;#elementtree-parsing-xml&quot;&gt;Parsing XML&lt;/a&gt; section:</source>
          <target state="translated">以下は、モジュールのXPath機能の一部を示す例です。ここでは、XMLの&lt;a href=&quot;#elementtree-parsing-xml&quot;&gt;解析&lt;/a&gt;セクションの &lt;code&gt;countrydata&lt;/code&gt; XMLドキュメントを使用します。</target>
        </trans-unit>
        <trans-unit id="cb47414132a1661346f2cf123a39f4ccf00798b7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that demonstrates use of the XInclude module. To include an XML document in the current document, use the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element and set the &lt;strong&gt;parse&lt;/strong&gt; attribute to &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, and use the &lt;strong&gt;href&lt;/strong&gt; attribute to specify the document to include.</source>
          <target state="translated">XIncludeモジュールの使用法を示す例を次に示します。現在のドキュメントにXMLドキュメントを含めるには、 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; include 要素を使用して&lt;strong&gt;parse&lt;/strong&gt;属性を &lt;code&gt;&quot;xml&quot;&lt;/code&gt; に設定し、&lt;strong&gt;href&lt;/strong&gt;属性を使用して含めるドキュメントを指定します。</target>
        </trans-unit>
        <trans-unit id="709f58d0a032f4f2fd538e028e1bf2d5bba72072" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that prints the MIME type of every part of a multipart message structure:</source>
          <target state="translated">マルチパートメッセージ構造のすべてのパートのMIMEタイプを出力する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="706b810952f86acc8d676e08674be3f570661c4c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that shows how to modify pickling behavior for a class. The &lt;code&gt;TextReader&lt;/code&gt; class opens a text file, and returns the line number and line contents each time its &lt;code&gt;readline()&lt;/code&gt; method is called. If a &lt;code&gt;TextReader&lt;/code&gt; instance is pickled, all attributes &lt;em&gt;except&lt;/em&gt; the file object member are saved. When the instance is unpickled, the file is reopened, and reading resumes from the last location. The &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; methods are used to implement this behavior.</source>
          <target state="translated">これは、クラスの酸洗い動作を変更する方法を示す例です。 &lt;code&gt;TextReader&lt;/code&gt; クラスは、テキストファイルを開き、その都度行番号及びラインの内容を戻す &lt;code&gt;readline()&lt;/code&gt; メソッドが呼び出されています。場合 &lt;code&gt;TextReader&lt;/code&gt; インスタンスがpickle化され、すべての属性&lt;em&gt;を除く&lt;/em&gt;ファイルオブジェクトのメンバーが保存されます。インスタンスがアンピクルされると、ファイルが再度開かれ、最後の場所から読み取りが再開されます。&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;メソッドは、この動作を実装するために使用されています。</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b8109b877000b870b322f3f396b556ca2e7627e4" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the same example as before, but considering blanks to be junk. That prevents &lt;code&gt;' abcd'&lt;/code&gt; from matching the &lt;code&gt;' abcd'&lt;/code&gt; at the tail end of the second sequence directly. Instead only the &lt;code&gt;'abcd'&lt;/code&gt; can match, and matches the leftmost &lt;code&gt;'abcd'&lt;/code&gt; in the second sequence:</source>
          <target state="translated">これは前と同じ例ですが、空白はジャンクであると考えています。防止することを &lt;code&gt;' abcd'&lt;/code&gt; 一致からの &lt;code&gt;' abcd'&lt;/code&gt; 直接第二の配列の末尾に。代わりに、 &lt;code&gt;'abcd'&lt;/code&gt; のみが一致し、2番目のシーケンスの左端の &lt;code&gt;'abcd'&lt;/code&gt; に一致します。</target>
        </trans-unit>
        <trans-unit id="4db73af24839df174d254d19165dc6b71cd36feb" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;spam.ham&lt;/code&gt; module is returned from &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt;. From this object, the names to import are retrieved and assigned to their respective names.</source>
          <target state="translated">ここでは、 &lt;code&gt;spam.ham&lt;/code&gt; モジュールが&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;から返されます。このオブジェクトから、インポートする名前が取得され、それぞれの名前に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="29017850c0ee8b88df141fa0569f666bcbc4fbcf" translate="yes" xml:space="preserve">
          <source>Here, you want to mark the strings in the &lt;code&gt;animals&lt;/code&gt; list as being translatable, but you don&amp;rsquo;t actually want to translate them until they are printed.</source>
          <target state="translated">ここでは、 &lt;code&gt;animals&lt;/code&gt; リストの文字列を翻訳可能としてマークしたいが、実際に印刷されるまで翻訳したくありません。</target>
        </trans-unit>
        <trans-unit id="9a472603c4793ba32a26895360ca1c167352b47b" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using lower-case letters for the digits above 9.</source>
          <target state="translated">16進数形式。16進数で出力します。9以上の数字は小文字で出力します。</target>
        </trans-unit>
        <trans-unit id="6dae4fd41d115d12c3ce48b5466486b2c13fb380" translate="yes" xml:space="preserve">
          <source>Hex format. Outputs the number in base 16, using upper-case letters for the digits above 9.</source>
          <target state="translated">16進数で出力します。16進数で出力し、9以上の数字は大文字で出力します。</target>
        </trans-unit>
        <trans-unit id="6ab8e16a9942b4cc932e601bc438522c8cc2f9ab" translate="yes" xml:space="preserve">
          <source>Hide the panel. This does not delete the object, it just makes the window on screen invisible.</source>
          <target state="translated">パネルを非表示にします。これはオブジェクトを削除するのではなく、画面上のウィンドウを非表示にするだけです。</target>
        </trans-unit>
        <trans-unit id="975b00c7afb7ab7c68c7138afb2f613f421d8011" translate="yes" xml:space="preserve">
          <source>Hides the tab specified by &lt;em&gt;tab_id&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;tab_idで&lt;/em&gt;指定されたタブを非表示にします。</target>
        </trans-unit>
        <trans-unit id="fc588738c60ecb4b4a8aba29ccba016b1c955025" translate="yes" xml:space="preserve">
          <source>Hides the window. Another window will be activated.</source>
          <target state="translated">ウィンドウを非表示にします。別のウィンドウが起動します。</target>
        </trans-unit>
        <trans-unit id="e16da0d6095b36a564a8943ec4d9d0b7f4859225" translate="yes" xml:space="preserve">
          <source>Hierarchical ListBox</source>
          <target state="translated">階層型リストボックス</target>
        </trans-unit>
        <trans-unit id="d3d148e78aea31488c9234ddf73cf485b8c09186" translate="yes" xml:space="preserve">
          <source>Hierarchical path</source>
          <target state="translated">階層的なパス</target>
        </trans-unit>
        <trans-unit id="5d60881335567c9090b8c4245ea4e81ecb33da15" translate="yes" xml:space="preserve">
          <source>High median of data.</source>
          <target state="translated">データの中央値が高い。</target>
        </trans-unit>
        <trans-unit id="6282a11a5eca3c9a65529cea745db1d70b87d28f" translate="yes" xml:space="preserve">
          <source>High priority read/write. Allows block-based filesystems to use polling of the device, which provides lower latency, but may use additional resources.</source>
          <target state="translated">優先度の高い読み書き。ブロックベースのファイルシステムでデバイスのポーリングを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="4a87a2489640795cc234e71d98784b569f68d6c1" translate="yes" xml:space="preserve">
          <source>High-level API Index</source>
          <target state="translated">高レベルAPIインデックス</target>
        </trans-unit>
        <trans-unit id="3a945e4de6304d6bdbf4f30080b6be3140c870fe" translate="yes" xml:space="preserve">
          <source>High-level APIs</source>
          <target state="translated">高レベルAPI</target>
        </trans-unit>
        <trans-unit id="418113d56ae3ac7d324cf436937deab0a3a252fe" translate="yes" xml:space="preserve">
          <source>High-level APIs to work with network IO.</source>
          <target state="translated">ネットワークIOを操作するための高レベルAPI。</target>
        </trans-unit>
        <trans-unit id="b70e4a5c864a275c250115363446ef5404321ea2" translate="yes" xml:space="preserve">
          <source>High-level Module Interface</source>
          <target state="translated">ハイレベルモジュールインタフェース</target>
        </trans-unit>
        <trans-unit id="7654a4bda6a850b2d646ed42a943709375af4e66" translate="yes" xml:space="preserve">
          <source>High-level async/await object to receive network data.</source>
          <target state="translated">ネットワークデータを受信するための高レベルのasync/awaitオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4062c19052bd6f8e57b9924a18dbaadbde67c050" translate="yes" xml:space="preserve">
          <source>High-level async/await object to send network data.</source>
          <target state="translated">ネットワークデータを送信するための高レベルのasync/awaitオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2311abfb64cb296285cf9c7ba19e1fc3798a93fa" translate="yes" xml:space="preserve">
          <source>High-level utilities to create and read compressed and archived files are also provided. They rely on the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tarfile#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">圧縮およびアーカイブされたファイルを作成および読み取るための高レベルのユーティリティも提供されます。それらは&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;tarfile#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールに依存しています。</target>
        </trans-unit>
        <trans-unit id="56deb8932e61f797ed677a061b4f0f80922f76d6" translate="yes" xml:space="preserve">
          <source>High-performance serialization of built-in types.</source>
          <target state="translated">組み込み型の高性能なシリアライズ</target>
        </trans-unit>
        <trans-unit id="dfb97476260bc6e078c0bc5f5b524817d1b955cb" translate="yes" xml:space="preserve">
          <source>High-resolution per-process timer from the CPU.</source>
          <target state="translated">CPUからの高解像度のプロセスごとのタイマー。</target>
        </trans-unit>
        <trans-unit id="ad402f6ce49e651e75ee74d257e55d8a8d2867a5" translate="yes" xml:space="preserve">
          <source>Higher Level Interface</source>
          <target state="translated">高次レベルインタフェース</target>
        </trans-unit>
        <trans-unit id="137f307b8ef5696b386b347dfd64aebeeefd159a" translate="yes" xml:space="preserve">
          <source>Higher-level operations on pathnames are defined in the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">パス名の上位レベルの操作は&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。</target>
        </trans-unit>
        <trans-unit id="3771c52715fb43b3e757ae1a3d984d3cda0f28a9" translate="yes" xml:space="preserve">
          <source>Highlight the surrounding parenthesis.</source>
          <target state="translated">周囲の括弧を強調表示します。</target>
        </trans-unit>
        <trans-unit id="fabedad26856d16459739a389abdcea783e78b9b" translate="yes" xml:space="preserve">
          <source>Hilbert &amp;amp; Koch curves</source>
          <target state="translated">ヒルベルト＆コッホ曲線</target>
        </trans-unit>
        <trans-unit id="540c634e3749d6c586b2a2f144b6702b6d534584" translate="yes" xml:space="preserve">
          <source>Hint: if you want to specify default values for a specific section, use &lt;code&gt;read_dict()&lt;/code&gt; before you read the actual file.</source>
          <target state="translated">ヒント：特定のセクションのデフォルト値を指定する場合は、実際のファイルを読み取る前に &lt;code&gt;read_dict()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="3d1f110ffacfcfd0164c3693450d07c42f1a288c" translate="yes" xml:space="preserve">
          <source>Hints: dynamic execution of statements is supported by the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;#globals&quot;&gt;&lt;code&gt;globals()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; functions returns the current global and local dictionary, respectively, which may be useful to pass around for use by &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヒント：ステートメントの動的実行は&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;関数でサポートされています。&lt;a href=&quot;#globals&quot;&gt; &lt;code&gt;globals()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; &lt;/a&gt;関数は、で使用するために周りに通過するのに有用であり得る、それぞれ、現在のグローバルとローカル辞書を返す&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="977f72f33fd0f7ecd2f6fdfcaed6ab6f202170b2" translate="yes" xml:space="preserve">
          <source>History file</source>
          <target state="translated">履歴ファイル</target>
        </trans-unit>
        <trans-unit id="b0479c60429c78f9c90b30067d18270acd2fcd91" translate="yes" xml:space="preserve">
          <source>History list</source>
          <target state="translated">歴史一覧</target>
        </trans-unit>
        <trans-unit id="a4373aa2652bb0f576ef1bb4e7c3fa85312b4e3f" translate="yes" xml:space="preserve">
          <source>Hitting</source>
          <target state="translated">Hitting</target>
        </trans-unit>
        <trans-unit id="b4e97ef75c73cb49dbe471f2a8fc87f85f477bfa" translate="yes" xml:space="preserve">
          <source>Hm. We certainly expected the last statement to print &lt;code&gt;3 4 1 2&lt;/code&gt;. What happened? Here are the steps of the &lt;code&gt;rc.a, rc.b = rc.b, rc.a&lt;/code&gt; line above:</source>
          <target state="translated">うーん。私たちは確かに最後のステートメントが &lt;code&gt;3 4 1 2&lt;/code&gt; を出力することを期待していました。どうした？上記の &lt;code&gt;rc.a, rc.b = rc.b, rc.a&lt;/code&gt; 行の手順は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="84380fa08840c12769a5e603533d5049bf656770" translate="yes" xml:space="preserve">
          <source>Holds a list of strings containing the addresses identified in the &amp;ldquo;RCPT TO:&amp;rdquo; lines from the client.</source>
          <target state="translated">クライアントからの「RCPT TO：」行で識別されたアドレスを含む文字列のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="b1594c5d044abc97b4f02f7439bee39849e8d91b" translate="yes" xml:space="preserve">
          <source>Holds a list of the line strings (decoded using UTF-8) received from the client. The lines have their &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; line ending translated to &lt;code&gt;&quot;\n&quot;&lt;/code&gt;.</source>
          <target state="translated">クライアントから受信したライン文字列（UTF-8を使用してデコード）のリストを保持します。行の &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; 行は &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 翻訳されます。</target>
        </trans-unit>
        <trans-unit id="756edd3ad364172179fc4bd28c47aba2e28ee462" translate="yes" xml:space="preserve">
          <source>Holds a string containing all of the data sent by the client during the DATA state, up to but not including the terminating &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt;.</source>
          <target state="translated">DATA状態の間にクライアントによって送信されたすべてのデータを含む文字列を保持します。終了文字列 &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt; を含みません。</target>
        </trans-unit>
        <trans-unit id="173c57b2edd8e26c070f7e3dc3845383b5f7e22f" translate="yes" xml:space="preserve">
          <source>Holds a string containing the address identified in the &amp;ldquo;MAIL FROM:&amp;rdquo; line from the client.</source>
          <target state="translated">クライアントからの「MAIL FROM：」行で識別されたアドレスを含む文字列を保持します。</target>
        </trans-unit>
        <trans-unit id="3e97286c991e6ccb42a2a1d0c99c5d6bbf6ae803" translate="yes" xml:space="preserve">
          <source>Holds a string containing the greeting sent by the client in its &amp;ldquo;HELO&amp;rdquo;.</source>
          <target state="translated">クライアントから送信された挨拶を含む文字列を「HELO」に保持します。</target>
        </trans-unit>
        <trans-unit id="cd7148d74352a877af7eb8ce8dea2f82f4e06603" translate="yes" xml:space="preserve">
          <source>Holds an instance of the class specified by the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.MessageClass&quot;&gt;&lt;code&gt;MessageClass&lt;/code&gt;&lt;/a&gt; class variable. This instance parses and manages the headers in the HTTP request. The &lt;a href=&quot;http.client#http.client.parse_headers&quot;&gt;&lt;code&gt;parse_headers()&lt;/code&gt;&lt;/a&gt; function from &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; is used to parse the headers and it requires that the HTTP request provide a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; style header.</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.MessageClass&quot;&gt; &lt;code&gt;MessageClass&lt;/code&gt; &lt;/a&gt;クラス変数で指定されたクラスのインスタンスを保持します。このインスタンスは、HTTPリクエストのヘッダーを解析および管理します。&lt;a href=&quot;http.client#http.client.parse_headers&quot;&gt; &lt;code&gt;parse_headers()&lt;/code&gt; &lt;/a&gt;から関数&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; は&lt;/a&gt;ヘッダを解析するために使用され、これは、HTTP要求が有効提供することを要求&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;形式のヘッダを。</target>
        </trans-unit>
        <trans-unit id="9265fe64481830dee7db00b81cb03da2a4116e1c" translate="yes" xml:space="preserve">
          <source>Holds the &lt;a href=&quot;#smtpd.SMTPServer&quot;&gt;&lt;code&gt;SMTPServer&lt;/code&gt;&lt;/a&gt; that spawned this channel.</source>
          <target state="translated">このチャネルを生成した&lt;a href=&quot;#smtpd.SMTPServer&quot;&gt; &lt;code&gt;SMTPServer&lt;/code&gt; &lt;/a&gt;を保持します。</target>
        </trans-unit>
        <trans-unit id="e6689fb001eadb907fa93d352c8361eba9cb20a4" translate="yes" xml:space="preserve">
          <source>Holds the address of the client, the second value returned by &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">クライアントのアドレスを保持します&lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept&lt;/code&gt; &lt;/a&gt;によって返される2番目の値です。</target>
        </trans-unit>
        <trans-unit id="119d2c3ab03cae2266b2eb5305549d108edb800b" translate="yes" xml:space="preserve">
          <source>Holds the current state of the channel. This will be either &lt;code&gt;COMMAND&lt;/code&gt; initially and then &lt;code&gt;DATA&lt;/code&gt; after the client sends a &amp;ldquo;DATA&amp;rdquo; line.</source>
          <target state="translated">チャネルの現在の状態を保持します。これは、最初は &lt;code&gt;COMMAND&lt;/code&gt; 、次にクライアントが「DATA」行を送信した後に &lt;code&gt;DATA&lt;/code&gt; のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8f000494374b62d38904da327ccc63a75a5a6e7e" translate="yes" xml:space="preserve">
          <source>Holds the fully-qualified domain name of the server as returned by &lt;a href=&quot;socket#socket.getfqdn&quot;&gt;&lt;code&gt;socket.getfqdn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.getfqdn&quot;&gt; &lt;code&gt;socket.getfqdn()&lt;/code&gt; &lt;/a&gt;によって返されたサーバーの完全修飾ドメイン名を保持します。</target>
        </trans-unit>
        <trans-unit id="7770cf3e40c26a8548c1a22aecf430e6fd9a88f6" translate="yes" xml:space="preserve">
          <source>Holds the name of the client peer as returned by &lt;code&gt;conn.getpeername()&lt;/code&gt; where &lt;code&gt;conn&lt;/code&gt; is &lt;a href=&quot;#smtpd.SMTPChannel.conn&quot;&gt;&lt;code&gt;conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;conn&lt;/code&gt; が&lt;a href=&quot;#smtpd.SMTPChannel.conn&quot;&gt; &lt;code&gt;conn&lt;/code&gt; &lt;/a&gt;である &lt;code&gt;conn.getpeername()&lt;/code&gt; によって返されるクライアントピアの名前を保持します。</target>
        </trans-unit>
        <trans-unit id="c43acfb18827d1f4ab3a7fb4b51beb5556091b5e" translate="yes" xml:space="preserve">
          <source>Holds the socket object connecting to the client.</source>
          <target state="translated">クライアントに接続するソケットオブジェクトを保持します。</target>
        </trans-unit>
        <trans-unit id="70f8bb9a8a5393ef080507a89e4b98d139000d65" translate="yes" xml:space="preserve">
          <source>Home</source>
          <target state="translated">Home</target>
        </trans-unit>
        <trans-unit id="9f502739ab97f32f0169d7d2a89836a8f3d60183" translate="yes" xml:space="preserve">
          <source>Home down or bottom (lower left)</source>
          <target state="translated">ホーム下または下(左下</target>
        </trans-unit>
        <trans-unit id="b1ad0ce4fc4f46bb58f19b70095b12ebe09c3089" translate="yes" xml:space="preserve">
          <source>Home key (upward+left arrow)</source>
          <target state="translated">ホームキー(上向き+左矢印</target>
        </trans-unit>
        <trans-unit id="82cc12384e3a382be4706e4e097a96b4d36d7997" translate="yes" xml:space="preserve">
          <source>Home page of &lt;strong&gt;nmh&lt;/strong&gt;, an updated version of the original &lt;strong&gt;mh&lt;/strong&gt;.</source>
          <target state="translated">オリジナルの&lt;strong&gt;mhの&lt;/strong&gt;更新バージョンである&lt;strong&gt;nmhの&lt;/strong&gt;ホームページ。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6283e72fcc111c07fd35510504e83a1879e65314" translate="yes" xml:space="preserve">
          <source>Home page of the Expat project.</source>
          <target state="translated">エクパットプロジェクトのホームページです。</target>
        </trans-unit>
        <trans-unit id="bd9948dcc8a1b00e0cac588a4f60d2df9c17fd17" translate="yes" xml:space="preserve">
          <source>Hook method executed just after a command dispatch is finished. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses. &lt;em&gt;line&lt;/em&gt; is the command line which was executed, and &lt;em&gt;stop&lt;/em&gt; is a flag which indicates whether execution will be terminated after the call to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt;; this will be the return value of the &lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt;&lt;code&gt;onecmd()&lt;/code&gt;&lt;/a&gt; method. The return value of this method will be used as the new value for the internal flag which corresponds to &lt;em&gt;stop&lt;/em&gt;; returning false will cause interpretation to continue.</source>
          <target state="translated">コマンドディスパッチが終了した直後に実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。&lt;em&gt;line&lt;/em&gt;は実行されたコマンドラインで、&lt;em&gt;stop&lt;/em&gt;は&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; の&lt;/a&gt;呼び出し後に実行を終了するかどうかを示すフラグです。これは、&lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt; &lt;code&gt;onecmd()&lt;/code&gt; &lt;/a&gt;メソッドの戻り値になります。このメソッドの戻り値は、&lt;em&gt;stopに&lt;/em&gt;対応する内部フラグの新しい値として使用されます。 falseを返すと、解釈が続行されます。</target>
        </trans-unit>
        <trans-unit id="449ea143caf53c5e39b0355dcec294af589bb71b" translate="yes" xml:space="preserve">
          <source>Hook method executed just before the command line &lt;em&gt;line&lt;/em&gt; is interpreted, but after the input prompt is generated and issued. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses. The return value is used as the command which will be executed by the &lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt;&lt;code&gt;onecmd()&lt;/code&gt;&lt;/a&gt; method; the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; implementation may re-write the command or simply return &lt;em&gt;line&lt;/em&gt; unchanged.</source>
          <target state="translated">コマンドライン&lt;em&gt;line&lt;/em&gt;が解釈される直前、ただし入力プロンプトが生成されて発行された後に実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。戻り値は、&lt;a href=&quot;#cmd.Cmd.onecmd&quot;&gt; &lt;code&gt;onecmd()&lt;/code&gt; &lt;/a&gt;メソッドによって実行されるコマンドとして使用されます。&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;の実装では、コマンドを再書き込み、または単に返すことが&lt;em&gt;行&lt;/em&gt;変わりません。</target>
        </trans-unit>
        <trans-unit id="9045e8acde6cdc71927bf33200a8d7172ae0f172" translate="yes" xml:space="preserve">
          <source>Hook method executed once when &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; is about to return. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;が戻る直前に 1回実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。</target>
        </trans-unit>
        <trans-unit id="087ffacadf4afb6c47c00dbd186afdecd1130959" translate="yes" xml:space="preserve">
          <source>Hook method executed once when &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; is called. This method is a stub in &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;; it exists to be overridden by subclasses.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに1回実行されるフックメソッド。このメソッドは&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;スタブです。サブクラスによってオーバーライドされるために存在します。</target>
        </trans-unit>
        <trans-unit id="ef2e93e3cb2e42c7a2289b69a4580ae9d70a03b2" translate="yes" xml:space="preserve">
          <source>Hooks are added using the &lt;a href=&quot;#sys.addaudithook&quot;&gt;&lt;code&gt;sys.addaudithook()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;&lt;code&gt;PySys_AddAuditHook()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">フックは&lt;a href=&quot;#sys.addaudithook&quot;&gt; &lt;code&gt;sys.addaudithook()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt; &lt;code&gt;PySys_AddAuditHook()&lt;/code&gt; &lt;/a&gt;関数を使用して追加されます。</target>
        </trans-unit>
        <trans-unit id="789c637d3fc0159993d0ac9bb6d51253ea6f78f4" translate="yes" xml:space="preserve">
          <source>Hooks are added using the &lt;a href=&quot;#sys.addaudithook&quot;&gt;&lt;code&gt;sys.addaudithook()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;&lt;code&gt;PySys_AddAuditHook()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">Hooks are added using the &lt;a href=&quot;#sys.addaudithook&quot;&gt; &lt;code&gt;sys.addaudithook()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt; &lt;code&gt;PySys_AddAuditHook()&lt;/code&gt; &lt;/a&gt; functions.</target>
        </trans-unit>
        <trans-unit id="5eda08bad54f52c7bdb5179cf6a75b60587955cd" translate="yes" xml:space="preserve">
          <source>Horizontal highlight</source>
          <target state="translated">水平方向のハイライト</target>
        </trans-unit>
        <trans-unit id="a5a7e131a5cb8762553101bda765297974113fa2" translate="yes" xml:space="preserve">
          <source>Host is down</source>
          <target state="translated">ホストがダウンしています</target>
        </trans-unit>
        <trans-unit id="191f7808ee27d0914021b6bf49daf82e21931c8e" translate="yes" xml:space="preserve">
          <source>Host name (lower case)</source>
          <target state="translated">ホスト名(小文字</target>
        </trans-unit>
        <trans-unit id="b5e18f2451a0719cbdf851704cee573f6887f1e1" translate="yes" xml:space="preserve">
          <source>Hostname of the server: &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; type, or &lt;code&gt;None&lt;/code&gt; for server-side socket or if the hostname was not specified in the constructor.</source>
          <target state="translated">サーバーのホスト名：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;タイプ、サーバー側ソケットの場合は &lt;code&gt;None&lt;/code&gt; 、またはコンストラクターでホスト名が指定されていない場合。</target>
        </trans-unit>
        <trans-unit id="425c6644ee61c9a230fcbf65d7494b117f494021" translate="yes" xml:space="preserve">
          <source>Hour (12-hour clock) as a decimal number [01,12].</source>
          <target state="translated">時間(12時間時計)を10進数[01,12]で表示します。</target>
        </trans-unit>
        <trans-unit id="f59212d5750be40abbdaa5bbb82d3fdc34b42955" translate="yes" xml:space="preserve">
          <source>Hour (12-hour clock) as a zero-padded decimal number.</source>
          <target state="translated">時間(12時間時計)を0進数で表します。</target>
        </trans-unit>
        <trans-unit id="fb9eb08a7d5aa5786e2bc10ef029f16e805c8a84" translate="yes" xml:space="preserve">
          <source>Hour (24-hour clock) as a decimal number [00,23].</source>
          <target state="translated">時間(24時間時計)を10進数[00,23]で表示します。</target>
        </trans-unit>
        <trans-unit id="00929e29b383160b1e2458e720fcf861fdf67571" translate="yes" xml:space="preserve">
          <source>Hour (24-hour clock) as a zero-padded decimal number.</source>
          <target state="translated">時間(24時間時計)を0進数で表します。</target>
        </trans-unit>
        <trans-unit id="9e25a34e635a123f8958bbe26e7c4843278597fb" translate="yes" xml:space="preserve">
          <source>Hours</source>
          <target state="translated">Hours</target>
        </trans-unit>
        <trans-unit id="2093b61ef7ae08159816a865e810be957ff212f4" translate="yes" xml:space="preserve">
          <source>Hours (zero-based)</source>
          <target state="translated">時間(ゼロベース</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="3cf8194af8b431024aea161c0d72843e4d494297" translate="yes" xml:space="preserve">
          <source>How Tk and Tkinter are Related</source>
          <target state="translated">TkとTkinterの関係性</target>
        </trans-unit>
        <trans-unit id="786543e016a5fcb5bd0820fa60ef4b7c492ab041" translate="yes" xml:space="preserve">
          <source>How To Use This Section</source>
          <target state="translated">このセクションの使い方</target>
        </trans-unit>
        <trans-unit id="b6a3579a533572ecb0e0f96eccc0c564589a41d7" translate="yes" xml:space="preserve">
          <source>How are Docstring Examples Recognized?</source>
          <target state="translated">ドクストリングの例はどのように認識されるのですか?</target>
        </trans-unit>
        <trans-unit id="8b82a90e60fe771b243b5707683f611d5a457c14" translate="yes" xml:space="preserve">
          <source>How are Enums different?</source>
          <target state="translated">Enumsはどう違うのですか?</target>
        </trans-unit>
        <trans-unit id="b49c247604ffa94c5e6d2020bc2401f351cdc8a4" translate="yes" xml:space="preserve">
          <source>How many bytes should tokens use?</source>
          <target state="translated">トークンは何バイトを使うべきか?</target>
        </trans-unit>
        <trans-unit id="06cb3a2370ac3af4084ddb6774ba1f927d10f1da" translate="yes" xml:space="preserve">
          <source>How the compiler treats future imports.</source>
          <target state="translated">コンパイラが将来のインポートをどのように扱うか。</target>
        </trans-unit>
        <trans-unit id="9621e5b402eaf2bc653d7acbb6c0fc8aec7dbcee" translate="yes" xml:space="preserve">
          <source>How to configure Screen and Turtles</source>
          <target state="translated">スクリーンとタートルズの設定方法</target>
        </trans-unit>
        <trans-unit id="8a47b2e2c48117dfb7843cebb091861bfbbbe021" translate="yes" xml:space="preserve">
          <source>How to create an archive and reset the user information using the &lt;em&gt;filter&lt;/em&gt; parameter in &lt;a href=&quot;#tarfile.TarFile.add&quot;&gt;&lt;code&gt;TarFile.add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile.add&quot;&gt; &lt;code&gt;TarFile.add()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;フィルター&lt;/em&gt;パラメーターを使用してアーカイブを作成し、ユーザー情報をリセットする方法：</target>
        </trans-unit>
        <trans-unit id="e8fa6daa5f75642da8422e72ceb883cde131d7f0" translate="yes" xml:space="preserve">
          <source>How to create an uncompressed tar archive from a list of filenames:</source>
          <target state="translated">ファイル名のリストから圧縮されていない tar アーカイブを作成する方法。</target>
        </trans-unit>
        <trans-unit id="54799d0a1acb21e18739c385fc568caa565a6484" translate="yes" xml:space="preserve">
          <source>How to extract a subset of a tar archive with &lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt;&lt;code&gt;TarFile.extractall()&lt;/code&gt;&lt;/a&gt; using a generator function instead of a list:</source>
          <target state="translated">リストの代わりにジェネレーター関数を使用して&lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt; &lt;code&gt;TarFile.extractall()&lt;/code&gt; で&lt;/a&gt; tarアーカイブのサブセットを抽出する方法：</target>
        </trans-unit>
        <trans-unit id="125dc6e327af012b85b1699c8d0b4aea4fd5aa6e" translate="yes" xml:space="preserve">
          <source>How to extract an entire tar archive to the current working directory:</source>
          <target state="translated">tar アーカイブ全体を現在の作業ディレクトリに展開する方法。</target>
        </trans-unit>
        <trans-unit id="6187ce11d668add52961b9aad04fcebce97277f5" translate="yes" xml:space="preserve">
          <source>How to read a gzip compressed tar archive and display some member information:</source>
          <target state="translated">gzip圧縮されたtarアーカイブを読み込んで、一部のメンバー情報を表示する方法。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
