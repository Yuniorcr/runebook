<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="59dc2895ca36fac2e7468e922680db7ebaa3d463" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.link&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;src_dir_fd&lt;/code&gt;, &lt;code&gt;dst_dir_fd&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; 、 &lt;code&gt;src_dir_fd&lt;/code&gt; 、 &lt;code&gt;dst_dir_fd&lt;/code&gt; を &lt;code&gt;os.link&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.linkを発生させます。</target>
        </trans-unit>
        <trans-unit id="7083acb1dbec7ee4b5630b61dfa858df623a3850" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.listdir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.listdir&lt;/code&gt; 引数で &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3a920136272be815611c2d6dab6cb082f6df88a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.listxattr&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; &lt;code&gt;os.listxattr&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.listxattrを発生させます。</target>
        </trans-unit>
        <trans-unit id="d287f664089f4078a7263a7049218d14460171de" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.lockf&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;fd&lt;/code&gt; 、 &lt;code&gt;cmd&lt;/code&gt; 、 &lt;code&gt;len&lt;/code&gt; を &lt;code&gt;os.lockf&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.lockfを発生させます。</target>
        </trans-unit>
        <trans-unit id="45a386acd2f7fa1fbf919aa594dd61bbb9294416" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.mkdir&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;mode&lt;/code&gt; 、 &lt;code&gt;dir_fd&lt;/code&gt; を &lt;code&gt;os.mkdir&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.mkdirを発生させます。</target>
        </trans-unit>
        <trans-unit id="c3b31aaa8953beecb6ffdeee59d2a485f83cbd7b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.posix_spawn&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;argv&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;argv&lt;/code&gt; 、 &lt;code&gt;env&lt;/code&gt; を &lt;code&gt;os.posix_spawn&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.posix_spawnを発生させます。</target>
        </trans-unit>
        <trans-unit id="d06868d234daf38f3f2f681166603eb58894c989" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.putenv&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; を &lt;code&gt;os.putenv&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.putenvを発生させます。</target>
        </trans-unit>
        <trans-unit id="854337e191eb6b8298e72fffaba8e33d9876f525" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.remove&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.remove&lt;/code&gt; 引数と &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;dir_fd&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="154433402e6fa5d841660f2d8f4a1b6ab0243e1d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.removexattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;attribute&lt;/code&gt; を &lt;code&gt;os.removexattr&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.removexattrを発生させます。</target>
        </trans-unit>
        <trans-unit id="275c4a5ee85b9abcc362289e6cba9379af870a49" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.rename&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;src_dir_fd&lt;/code&gt;, &lt;code&gt;dst_dir_fd&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; 、 &lt;code&gt;src_dir_fd&lt;/code&gt; 、 &lt;code&gt;dst_dir_fd&lt;/code&gt; を &lt;code&gt;os.rename&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.renameを発生させます。</target>
        </trans-unit>
        <trans-unit id="1e89464c5128586bbc1c0d89a0e03098ab11ab9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.rmdir&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.rmdir&lt;/code&gt; 引数と &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;dir_fd&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="3ccad36ebce32e09acb40556b57e9566adf00938" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.scandir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.scandir&lt;/code&gt; 引数で &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="006e3a82a1051beb30f3c48da8e5da54a4282e7c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.setxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;attribute&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; を &lt;code&gt;os.setxattr&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.setxattrを発生させます。</target>
        </trans-unit>
        <trans-unit id="334691f608afd7386ed868f781fac6bbbbd543b6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.spawn&lt;/code&gt; with arguments &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;mode&lt;/code&gt; 、 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;args&lt;/code&gt; 、 &lt;code&gt;env&lt;/code&gt; を &lt;code&gt;os.spawn&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.spawnを発生させます。</target>
        </trans-unit>
        <trans-unit id="3c8b466f84cc3ef5aeabfe12eeac58225928a951" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.startfile&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;operation&lt;/code&gt; を &lt;code&gt;os.startfile&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.startfileを発生させます。</target>
        </trans-unit>
        <trans-unit id="b9551d50e5a0f710f1d028321bb78204205f9f38" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.symlink&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; 、 &lt;code&gt;dir_fd&lt;/code&gt; を &lt;code&gt;os.symlink&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.symlinkを発生させます。</target>
        </trans-unit>
        <trans-unit id="21b4a379a91dc55d5b77c3a653c22c27c0c4c20f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.system&lt;/code&gt; with argument &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.system&lt;/code&gt; 引数を持つ &lt;code&gt;command&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1427152b59da45b4f8e37086cd50203f4b006498" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.truncate&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.truncate&lt;/code&gt; の引数を持つ &lt;code&gt;fd&lt;/code&gt; が、 &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ae05ea1bc6d3cd9c474e444a8d9f63ddc9cc1aa" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.truncate&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;length&lt;/code&gt; を &lt;code&gt;os.truncate&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.truncateを発生させます。</target>
        </trans-unit>
        <trans-unit id="b1712064f134deb811ae656a6409300a5986d52c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.unsetenv&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;key&lt;/code&gt; &lt;code&gt;os.unsetenv&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.unsetenvを発生させます。</target>
        </trans-unit>
        <trans-unit id="01ae9110a5d43d514f3094a8016db7d9a49e4515" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.utime&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;times&lt;/code&gt;, &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;times&lt;/code&gt; 、 &lt;code&gt;ns&lt;/code&gt; 、 &lt;code&gt;dir_fd&lt;/code&gt; を &lt;code&gt;os.utime&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;os.utimeを発生させます。</target>
        </trans-unit>
        <trans-unit id="46fc5caa961204a76354d756722f65c387407123" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.walk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;followlinks&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;os.walk&lt;/code&gt; 引数で &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;topdown&lt;/code&gt; 、 &lt;code&gt;onerror&lt;/code&gt; 、 &lt;code&gt;followlinks&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b13e5e7e53ca8011d500846f01a305cb24ba3491" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pathlib.Path.glob&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;pattern&lt;/code&gt; を &lt;code&gt;pathlib.Path.glob&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;pathlib.Path.globを発生させます。</target>
        </trans-unit>
        <trans-unit id="84e7534be8bde82e8940267fbdc1ae3df45a9e0a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pathlib.Path.rglob&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;pattern&lt;/code&gt; を &lt;code&gt;pathlib.Path.rglob&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;pathlib.Path.rglobを発生させます。</target>
        </trans-unit>
        <trans-unit id="bdfad89ab653d3d9cc0dab43be3eaac363bfafdc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pdb.Pdb&lt;/code&gt; with no arguments.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;pdb.Pdb&lt;/code&gt; 引数なしでを。</target>
        </trans-unit>
        <trans-unit id="99e5e53409656c2149cec3c383ed1d42bcbe1bf1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pickle.find_class&lt;/code&gt; with arguments &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;pickle.find_class&lt;/code&gt; 引数を持つ &lt;code&gt;module&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e86db6c09bb7d31f34b954259251378ca4a58e9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;poplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;poplib.connect&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30e2f489285088f500a55e2151fcdae9d42cf742" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;pty.spawn&lt;/code&gt; with argument &lt;code&gt;argv&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;argv&lt;/code&gt; を &lt;code&gt;pty.spawn&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;pty.spawnを発生させます。</target>
        </trans-unit>
        <trans-unit id="9de765e8591c25f9f18e0ee5d8f7018fba0916e4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;resource.prlimit&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;pid&lt;/code&gt; 、 &lt;code&gt;resource&lt;/code&gt; 、 &lt;code&gt;limits&lt;/code&gt; を &lt;code&gt;resource.prlimit&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;resource.prlimitを発生させます。</target>
        </trans-unit>
        <trans-unit id="1c6016ba7df0b35fe3a489b4dbc077ff97161cb3" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;resource.setrlimit&lt;/code&gt; with arguments &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;resource&lt;/code&gt; 、 &lt;code&gt;limits&lt;/code&gt; を &lt;code&gt;resource.setrlimit&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;resource.setrlimitを発生させます。</target>
        </trans-unit>
        <trans-unit id="4a6de05e876adfc755417ecda6a498cfed5086cf" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;user&lt;/code&gt; 、 &lt;code&gt;group&lt;/code&gt; を使用して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;shutil.chown&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="549f0ac6513ebcaa80a47a4216141637a41f3b29" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copyfile&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; を &lt;code&gt;shutil.copyfile&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.copyfileを発生させます。</target>
        </trans-unit>
        <trans-unit id="8923d234f5e1efb5c46552ee7803e7767f775326" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copymode&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; を &lt;code&gt;shutil.copymode&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.copymodeを発生させます。</target>
        </trans-unit>
        <trans-unit id="056b5229130ad3d5648ca9a191fcb25db0204b04" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copystat&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; を &lt;code&gt;shutil.copystat&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.copystatを発生させます。</target>
        </trans-unit>
        <trans-unit id="0ec11a227b843f0eccffd0d9d48026cd47ccfdaa" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.copytree&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;shutil.copytree&lt;/code&gt; の引数を持つ &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b1f2bd9cb1f51c7860d9296ed4e355042c9671f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.make_archive&lt;/code&gt; with arguments &lt;code&gt;base_name&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;root_dir&lt;/code&gt;, &lt;code&gt;base_dir&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;base_name&lt;/code&gt; 、 &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;root_dir&lt;/code&gt; 、 &lt;code&gt;base_dir&lt;/code&gt; を &lt;code&gt;shutil.make_archive&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.make_archiveを発生させます。</target>
        </trans-unit>
        <trans-unit id="6e67b64611ff2a90f4f41a8817f49868cb3b05af" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.move&lt;/code&gt; with arguments &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;dst&lt;/code&gt; を &lt;code&gt;shutil.move&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.moveを発生させます。</target>
        </trans-unit>
        <trans-unit id="8b6ab294d1e818bfc0a21642bc9224b317628735" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.rmtree&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;shutil.rmtree&lt;/code&gt; 引数で &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88a07921a67fdb5cf97a0654f27806c1eb74ad5d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;shutil.unpack_archive&lt;/code&gt; with arguments &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;extract_dir&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;filename&lt;/code&gt; 、 &lt;code&gt;extract_dir&lt;/code&gt; 、 &lt;code&gt;format&lt;/code&gt; を &lt;code&gt;shutil.unpack_archive&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;shutil.unpack_archiveを発生させます。</target>
        </trans-unit>
        <trans-unit id="25b15f8577cbd0fc414d78d5b41a1ac8e0573fc1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;signal.pthread_kill&lt;/code&gt; with arguments &lt;code&gt;thread_id&lt;/code&gt;, &lt;code&gt;signalnum&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;thread_id&lt;/code&gt; 、 &lt;code&gt;signalnum&lt;/code&gt; を &lt;code&gt;signal.pthread_kill&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;signal.pthread_killを発生させます。</target>
        </trans-unit>
        <trans-unit id="4a780a3ef482d641b115f37933cb8186f24825db" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;smtplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; を &lt;code&gt;smtplib.connect&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;smtplib.connectを発生させます。</target>
        </trans-unit>
        <trans-unit id="72e3e7abfbdd34540c3b592afbc8160df0c27e61" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.__new__&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.__new__&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f13ffb0d7c17142c0d5837a56b05d32e42ae7aef" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.bind&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.bind&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52b5691ba9376ae2c52f23fbd452b354ff224b0e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.connect&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba9ec04f23995f6b706abe491c392041f3e18302" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getaddrinfo&lt;/code&gt; with arguments &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;、監査イベント&lt;/a&gt; &lt;code&gt;socket.getaddrinfo&lt;/code&gt; 引数を持つ &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbaad4be0c50af7d2eea49386900e38cd27ab02d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostbyaddr&lt;/code&gt; with argument &lt;code&gt;ip_address&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.gethostbyaddr&lt;/code&gt; 引数と &lt;code&gt;ip_address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c476710b9f2e8eb127c60fe270b7d0adb4839a1d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostbyname&lt;/code&gt; with argument &lt;code&gt;hostname&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.gethostbyname&lt;/code&gt; 引数で &lt;code&gt;hostname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41bde25bc577978d285c312d7eed21cd86f48a4c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.gethostname&lt;/code&gt; with no arguments.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.gethostname&lt;/code&gt; 引数なしでを。</target>
        </trans-unit>
        <trans-unit id="243615721a7a0f9b8575016d5087c0217e9f5753" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getnameinfo&lt;/code&gt; with argument &lt;code&gt;sockaddr&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;sockaddr&lt;/code&gt; を &lt;code&gt;socket.getnameinfo&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;socket.getnameinfoを発生させます。</target>
        </trans-unit>
        <trans-unit id="8be7f6ac85fa7cb2bd384cf154e3e316edca27a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getservbyname&lt;/code&gt; with arguments &lt;code&gt;servicename&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.getservbyname&lt;/code&gt; 引数を持つ &lt;code&gt;servicename&lt;/code&gt; 、 &lt;code&gt;protocolname&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="31fd9516e1ea931e96f7d064707ffeeef7556b70" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.getservbyport&lt;/code&gt; with arguments &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;protocolname&lt;/code&gt; を使用して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.getservbyport&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="158cd9da2db5b46ce03c4f0d0f68b165dfa34894" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sendmsg&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;address&lt;/code&gt; を &lt;code&gt;socket.sendmsg&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;socket.sendmsgを発生させます。</target>
        </trans-unit>
        <trans-unit id="fd8cfeb15c70ee83a2c70931f6acb79ac2ecbbf5" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sendto&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;、監査イベントを&lt;/a&gt; &lt;code&gt;socket.sendto&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55056cfce35597cbbeb72e3c4c0e0adf1dd5f86a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;socket.sethostname&lt;/code&gt; with argument &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;socket.sethostname&lt;/code&gt; 引数と &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a781d737477fda3dca4474d595df4eb9501850e7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sqlite3.connect&lt;/code&gt; with argument &lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;sqlite3.connect&lt;/code&gt; 引数を持つ &lt;code&gt;database&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4925a792ab15ba948f5df10163dff78cf7823812" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.closelog&lt;/code&gt; with no arguments.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;syslog.closelog&lt;/code&gt; 引数なしでを。</target>
        </trans-unit>
        <trans-unit id="8a7480dbb0157584fe0fc274b9e791aa642075f7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.openlog&lt;/code&gt; with arguments &lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;logoption&lt;/code&gt;, &lt;code&gt;facility&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;ident&lt;/code&gt; 、 &lt;code&gt;logoption&lt;/code&gt; 、 &lt;code&gt;facility&lt;/code&gt; を &lt;code&gt;syslog.openlog&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;syslog.openlogを発生させます。</target>
        </trans-unit>
        <trans-unit id="1cf4b7b33ae28857837bfda35af6b2bacadd2b8f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.setlogmask&lt;/code&gt; with argument &lt;code&gt;maskpri&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;maskpri&lt;/code&gt; を &lt;code&gt;syslog.setlogmask&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;syslog.setlogmaskを発生させます。</target>
        </trans-unit>
        <trans-unit id="4160b5990c945601a8b599351deb25385bd266a6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;syslog.syslog&lt;/code&gt; with arguments &lt;code&gt;priority&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;priority&lt;/code&gt; 、 &lt;code&gt;message&lt;/code&gt; を &lt;code&gt;syslog.syslog&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;syslog.syslogを発生させます。</target>
        </trans-unit>
        <trans-unit id="631318cee4026563eef10a46dd35e91230064ed2" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;telnetlib.Telnet.open&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;、監査イベント&lt;/a&gt; &lt;code&gt;telnetlib.Telnet.open&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b827dd581199ea8b3e310e0b7982f057a447709" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;telnetlib.Telnet.write&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;telnetlib.Telnet.write&lt;/code&gt; 引数と &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb441af255307fb4987873dc4ba5b5cb29116f46" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;tempfile.mkdtemp&lt;/code&gt; with argument &lt;code&gt;fullpath&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;tempfile.mkdtemp&lt;/code&gt; 引数で &lt;code&gt;fullpath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549c513d3923079d6bd986fcb1a1d0fb30c3bd50" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;tempfile.mkstemp&lt;/code&gt; with argument &lt;code&gt;fullpath&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;tempfile.mkstemp&lt;/code&gt; 引数で &lt;code&gt;fullpath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8c911396da30965d0d4925c79c5f27f02ed1d21" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;webbrowser.open&lt;/code&gt; with argument &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;webbrowser.open&lt;/code&gt; 引数を持つ &lt;code&gt;url&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="becb6b292c48bca62d12e0c6e307fb409006dbb9" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.ConnectRegistry&lt;/code&gt; with arguments &lt;code&gt;computer_name&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.ConnectRegistry&lt;/code&gt; 引数を持つ &lt;code&gt;computer_name&lt;/code&gt; 、 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38d2b25f921cb04cfabb111d68752863ba88acfd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.CreateKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.CreateKey&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;access&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1de2fecfbd25187d516ee0903df8df413010d76" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DeleteKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.DeleteKey&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;access&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd56b8a99fd38d26751f2118ed67b08a5113c21" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DeleteValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.DeleteValue&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5b79c9cdf2353098e6269001a976aebc73258f4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.DisableReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.DisableReflectionKey&lt;/code&gt; 引数で &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eca81343c80b5da0bb4154b3bfdbcd0a814c523" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnableReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.EnableReflectionKey&lt;/code&gt; 引数で &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f71c48ea3d8417ef425fcb7ed978f895b23b59" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnumKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;index&lt;/code&gt; を &lt;code&gt;winreg.EnumKey&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;winreg.EnumKeyを発生させます。</target>
        </trans-unit>
        <trans-unit id="909314b840d434b0b4a6f73231e9e50f1abc338e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.EnumValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.EnumValue&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f814a42899ca638d649a0a2208e63755ddc133" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.ExpandEnvironmentStrings&lt;/code&gt; with argument &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.ExpandEnvironmentStrings&lt;/code&gt; を引数と &lt;code&gt;str&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed130a3d35da585f7e58f44493356c1830bc6526" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.LoadKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.LoadKey&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;file_name&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="2d8a3901c5c8a70f425579c18fb423e7cd512407" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.OpenKey/result&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;、監査イベント&lt;/a&gt; &lt;code&gt;winreg.OpenKey/result&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb1d19e696208caec6cc4f604bf9b4face28d793" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.OpenKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.OpenKey&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;access&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adbea71778cde2fd4167434485b1f3f604cf0577" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.PyHKEY.Detach&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.PyHKEY.Detach&lt;/code&gt; 引数で &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a353604a08dad7c40d5ca74f0d24a5cd63f2ba5e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryInfoKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.QueryInfoKey&lt;/code&gt; 引数で &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d401aa7c38103f2bb793cb45fe649d94e4f319ca" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryReflectionKey&lt;/code&gt; with argument &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.QueryReflectionKey&lt;/code&gt; 引数で &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="389ed35fecc8df9bf935c5b7749495b8fe874201" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.QueryValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;value_name&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.QueryValue&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;value_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d225dc0ccc2502e7092c5a77050f1d789af5d32" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.SaveKey&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.SaveKey&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;file_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec9964950f335aaa8a619156a2d86be67823b8cd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;winreg.SetValue&lt;/code&gt; with arguments &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;winreg.SetValue&lt;/code&gt; 引数と &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;sub_key&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b31f9833da01faadb2b0fb996ec1059685c9aa6b" translate="yes" xml:space="preserve">
          <source>Raises an auditing event &lt;code&gt;builtins.input/result&lt;/code&gt; with the result after successfully reading input.</source>
          <target state="translated">入力を正常に読み取った後、結果を含む監査イベント &lt;code&gt;builtins.input/result&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="06077ce794e2fdaba6736617e21ce7a808c6346f" translate="yes" xml:space="preserve">
          <source>Raises an error if a duplicate member name is found instead of creating an alias:</source>
          <target state="translated">エイリアスの作成ではなく、重複したメンバー名が見つかった場合にエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="ff05810a934c386ddb661bfee62ea3cebdf266d9" translate="yes" xml:space="preserve">
          <source>Raises an exception using one of the 3 forms of the &lt;code&gt;raise&lt;/code&gt; statement, depending on the value of &lt;em&gt;argc&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;argc&lt;/em&gt;の値に応じて、 &lt;code&gt;raise&lt;/code&gt; ステートメントの3つの形式のいずれかを使用して例外を発生させます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ba28f92358b5eb9c93f89e4c9613e9169554bc0" translate="yes" xml:space="preserve">
          <source>Raising exceptions with mocks</source>
          <target state="translated">モックで例外を発生させる</target>
        </trans-unit>
        <trans-unit id="59ea108a0cd83dee0099a55fafd5a1e049f54cd6" translate="yes" xml:space="preserve">
          <source>Random generation</source>
          <target state="translated">ランダム生成</target>
        </trans-unit>
        <trans-unit id="aa759b82b4d6d1756df7ae1bbf44212e19e1e8bc" translate="yes" xml:space="preserve">
          <source>Random numbers</source>
          <target state="translated">乱数</target>
        </trans-unit>
        <trans-unit id="272eed3efd9e1be092b154f89ad938be8590f835" translate="yes" xml:space="preserve">
          <source>Randomized hashing</source>
          <target state="translated">ランダム化ハッシュ</target>
        </trans-unit>
        <trans-unit id="5a6094c432313c5605d8ee138be752abfaa8b607" translate="yes" xml:space="preserve">
          <source>Randomized hashing is designed for situations where one party, the message preparer, generates all or part of a message to be signed by a second party, the message signer. If the message preparer is able to find cryptographic hash function collisions (i.e., two messages producing the same hash value), then they might prepare meaningful versions of the message that would produce the same hash value and digital signature, but with different results (e.g., transferring $1,000,000 to an account, rather than $10). Cryptographic hash functions have been designed with collision resistance as a major goal, but the current concentration on attacking cryptographic hash functions may result in a given cryptographic hash function providing less collision resistance than expected. Randomized hashing offers the signer additional protection by reducing the likelihood that a preparer can generate two or more messages that ultimately yield the same hash value during the digital signature generation process &amp;mdash; even if it is practical to find collisions for the hash function. However, the use of randomized hashing may reduce the amount of security provided by a digital signature when all portions of the message are prepared by the signer.</source>
          <target state="translated">ランダムハッシングは、メッセージ作成者である一方の当事者が、メッセージの署名者である第2の当事者によって署名されるメッセージの全部または一部を生成する状況向けに設計されています。メッセージ作成者が暗号化ハッシュ関数の衝突（つまり、同じハッシュ値を生成する2つのメッセージ）を見つけることができる場合、同じハッシュ値とデジタル署名を生成するが、結果が異なる（たとえば、 、10ドルではなく1,000,000ドルをアカウントに転送します）。暗号化ハッシュ関数は、衝突耐性を主な目標として設計されていますが、現在の暗号化ハッシュ関数の攻撃に集中していると、特定の暗号化ハッシュ関数が予想よりも少ない衝突耐性を提供する可能性があります。ランダム化ハッシュは、デジタル署名生成プロセス中に、作成者が最終的に同じハッシュ値を生成する2つ以上のメッセージを生成する可能性を減らすことにより、署名者に追加の保護を提供します&amp;mdash;ハッシュ関数の衝突を見つけることが実際的であっても。ただし、ランダムなハッシュを使用すると、メッセージのすべての部分が署名者によって準備されたときに、デジタル署名によって提供されるセキュリティの量が減少する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="89323c437f79f07829673962949a543da59ede1e" translate="yes" xml:space="preserve">
          <source>Range examples:</source>
          <target state="translated">範囲の例。</target>
        </trans-unit>
        <trans-unit id="87a5eaaadc19a029bb8b37ebe5ca1eb9e3fabfa6" translate="yes" xml:space="preserve">
          <source>Range objects implement the &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt; ABC, and provide features such as containment tests, element index lookup, slicing and support for negative indices (see &lt;a href=&quot;#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;):</source>
          <target state="translated">Rangeオブジェクトは、&lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; &lt;/a&gt; ABCを実装し、包含テスト、要素インデックスのルックアップ、スライス、および負のインデックスのサポートなどの機能を提供します（&lt;a href=&quot;#typesseq&quot;&gt;シーケンスタイプ&amp;mdash;リスト、タプル、範囲を&lt;/a&gt;参照）：</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="72685baa2f647e006214a79053c591c0a8565a9b" translate="yes" xml:space="preserve">
          <source>Ranges containing absolute values larger than &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt; are permitted but some features (such as &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;) may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;より大きい絶対値を含む範囲は許可されますが、一部の機能（&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; など&lt;/a&gt;）は&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; を発生さ&lt;/a&gt;せる場合があります。</target>
        </trans-unit>
        <trans-unit id="46750bd43585be9fb4c7e768a335b1aa32fb5137" translate="yes" xml:space="preserve">
          <source>Ranges implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; sequence operations except concatenation and repetition (due to the fact that range objects can only represent sequences that follow a strict pattern and repetition and concatenation will usually violate that pattern).</source>
          <target state="translated">範囲は、連結と繰り返しを除くすべての&lt;a href=&quot;#typesseq-common&quot;&gt;一般的な&lt;/a&gt;シーケンス操作を実装します（範囲オブジェクトは厳密なパターンに従うシーケンスのみを表すことができ、繰り返しと連結は通常そのパターンに違反するため）。</target>
        </trans-unit>
        <trans-unit id="716cf010adf57500bb3f0b679572b06a5bc48ee3" translate="yes" xml:space="preserve">
          <source>Ranges of characters can be indicated by giving two characters and separating them by a &lt;code&gt;'-'&lt;/code&gt;, for example &lt;code&gt;[a-z]&lt;/code&gt; will match any lowercase ASCII letter, &lt;code&gt;[0-5][0-9]&lt;/code&gt; will match all the two-digits numbers from &lt;code&gt;00&lt;/code&gt; to &lt;code&gt;59&lt;/code&gt;, and &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; will match any hexadecimal digit. If &lt;code&gt;-&lt;/code&gt; is escaped (e.g. &lt;code&gt;[a\-z]&lt;/code&gt;) or if it&amp;rsquo;s placed as the first or last character (e.g. &lt;code&gt;[-a]&lt;/code&gt; or &lt;code&gt;[a-]&lt;/code&gt;), it will match a literal &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">文字の範囲は、2つの文字を指定し、それらを &lt;code&gt;'-'&lt;/code&gt; で区切ることによって示すことができます。たとえば、 &lt;code&gt;[a-z]&lt;/code&gt; はすべての小文字のASCII文字と一致し、 &lt;code&gt;[0-5][0-9]&lt;/code&gt; は2桁のすべての数字と一致します &lt;code&gt;00&lt;/code&gt; から &lt;code&gt;59&lt;/code&gt; 、および &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; は任意の16進数と一致します。 &lt;code&gt;-&lt;/code&gt; がエスケープされている場合（ &lt;code&gt;[a\-z]&lt;/code&gt; ）、または最初または最後の文字として配置されている場合（ &lt;code&gt;[-a]&lt;/code&gt; または &lt;code&gt;[a-]&lt;/code&gt; など）、リテラル &lt;code&gt;'-'&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="3a9c736b3175d6576311a0ce0ad8c80fa6631f94" translate="yes" xml:space="preserve">
          <source>Rate</source>
          <target state="translated">Rate</target>
        </trans-unit>
        <trans-unit id="abbef9c3268c1d4ea987e7e462d7be3209f1ac4b" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; is actually a mutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-list&quot;&gt;Lists&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;は、関数ではなく、実際には変更可能なシーケンスタイプ&lt;a href=&quot;stdtypes#typesseq&quot;&gt;です&lt;/a&gt;。&lt;a href=&quot;stdtypes#typesseq-list&quot;&gt;リスト&lt;/a&gt;とシーケンスタイプ&amp;mdash;リスト、タプル、範囲で説明されています。</target>
        </trans-unit>
        <trans-unit id="9cce469c6e429669ba4c57d079475f8f780d1eec" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; is actually an immutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-range&quot;&gt;Ranges&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#typesseq-range&quot;&gt;範囲&lt;/a&gt;と&lt;a href=&quot;stdtypes#typesseq&quot;&gt;シーケンスタイプ&amp;mdash;リスト、タプル、範囲&lt;/a&gt;で説明されているように、&lt;a href=&quot;stdtypes#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;は関数ではなく、実際には不変のシーケンスタイプです。</target>
        </trans-unit>
        <trans-unit id="3078547b80644efcb71d3452f708c41bb34c618e" translate="yes" xml:space="preserve">
          <source>Rather than being a function, &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; is actually an immutable sequence type, as documented in &lt;a href=&quot;stdtypes#typesseq-tuple&quot;&gt;Tuples&lt;/a&gt; and &lt;a href=&quot;stdtypes#typesseq&quot;&gt;Sequence Types &amp;mdash; list, tuple, range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;は関数ではなく、実際には不変のシーケンスタイプ&lt;a href=&quot;stdtypes#typesseq&quot;&gt;です&lt;/a&gt;。&lt;a href=&quot;stdtypes#typesseq-tuple&quot;&gt;タプル&lt;/a&gt;とシーケンスタイプ&amp;mdash;リスト、タプル、範囲で説明されています。</target>
        </trans-unit>
        <trans-unit id="9ea2681e0b6a5dc46f1980daa1ae673f6b94d568" translate="yes" xml:space="preserve">
          <source>Rather than serializing all transition data, &lt;code&gt;ZoneInfo&lt;/code&gt; objects are serialized by key, and &lt;code&gt;ZoneInfo&lt;/code&gt; objects constructed from files (even those with a value for &lt;code&gt;key&lt;/code&gt; specified) cannot be pickled.</source>
          <target state="translated">すべての遷移データを &lt;code&gt;ZoneInfo&lt;/code&gt; するのではなく、ZoneInfoオブジェクトはキーによってシリアル化され、ファイルから構築された &lt;code&gt;ZoneInfo&lt;/code&gt; オブジェクト（ &lt;code&gt;key&lt;/code&gt; 値が指定されているオブジェクトであっても）をピクルすることはできません。</target>
        </trans-unit>
        <trans-unit id="056b01b619354da320f406f426bba963a64cf431" translate="yes" xml:space="preserve">
          <source>Raw File I/O</source>
          <target state="translated">生ファイル入出力</target>
        </trans-unit>
        <trans-unit id="c7c1a79be24017e3ee6febc2a83a78872f57cd0c" translate="yes" xml:space="preserve">
          <source>Raw I/O</source>
          <target state="translated">生のI/O</target>
        </trans-unit>
        <trans-unit id="1aace7c41f767801df880b70c5702c06530aad5b" translate="yes" xml:space="preserve">
          <source>Raw I/O (also called &lt;em&gt;unbuffered I/O&lt;/em&gt;) is generally used as a low-level building-block for binary and text streams; it is rarely useful to directly manipulate a raw stream from user code. Nevertheless, you can create a raw stream by opening a file in binary mode with buffering disabled:</source>
          <target state="translated">Raw I / O（&lt;em&gt;バッファなしI / O&lt;/em&gt;とも呼ばれます）は、通常、バイナリストリームとテキストストリームの低レベルのビルディングブロックとして使用されます。ユーザーコードから生のストリームを直接操作することはほとんど役に立ちません。それでも、バッファリングを無効にしてバイナリモードでファイルを開くと、未加工のストリームを作成できます。</target>
        </trans-unit>
        <trans-unit id="a3309699934582b28949b166809ac6b9c5c69ccd" translate="yes" xml:space="preserve">
          <source>Raw String Notation</source>
          <target state="translated">生の文字列表記法</target>
        </trans-unit>
        <trans-unit id="7cd206a3bf7f92529ea41aa790f166a382b7ac14" translate="yes" xml:space="preserve">
          <source>Raw binary I/O typically provides low-level access to an underlying OS device or API, and does not try to encapsulate it in high-level primitives (this is left to Buffered I/O and Text I/O, described later in this page).</source>
          <target state="translated">生のバイナリI/Oは通常、基礎となるOSデバイスやAPIへの低レベルのアクセスを提供し、高レベルのプリミティブにカプセル化しようとはしません(これはこのページで後述するバッファ付きI/OとテキストI/Oに委ねられています)。</target>
        </trans-unit>
        <trans-unit id="db4b42089a99a01964661da0872d48d12cfdd821" translate="yes" xml:space="preserve">
          <source>Raw binary streams typically provide low-level access to an underlying OS device or API, and do not try to encapsulate it in high-level primitives (this functionality is done at a higher-level in buffered binary streams and text streams, described later in this page).</source>
          <target state="translated">生のバイナリストリームは一般的に低レベルのアクセスを提供し、高レベルのプリミティブにカプセル化しようとはしません (この機能は、このページで後述するバッファ付きバイナリストリームやテキストストリームでより高いレベルで行われます)。</target>
        </trans-unit>
        <trans-unit id="7a4e0efd7f4e3bcbe0f545193d34aaae5e57a2cd" translate="yes" xml:space="preserve">
          <source>Raw string notation (&lt;code&gt;r&quot;text&quot;&lt;/code&gt;) keeps regular expressions sane. Without it, every backslash (&lt;code&gt;'\'&lt;/code&gt;) in a regular expression would have to be prefixed with another one to escape it. For example, the two following lines of code are functionally identical:</source>
          <target state="translated">生の文字列表記（ &lt;code&gt;r&quot;text&quot;&lt;/code&gt; ）は、正規表現を正気に保ちます。これがないと、正規表現内のすべてのバックスラッシュ（ &lt;code&gt;'\'&lt;/code&gt; ）の前に別のバックスラッシュを付ける必要があります。たとえば、次の2行のコードは機能的に同じです。</target>
        </trans-unit>
        <trans-unit id="32b782deb36c27ece9175526e20725ccdaf40c92" translate="yes" xml:space="preserve">
          <source>RawArray(&amp;lsquo;h&amp;rsquo;, 7)</source>
          <target state="translated">RawArray（ 'h'、7）</target>
        </trans-unit>
        <trans-unit id="626ffe29095fcf739267ebb6f703c4623c0414ff" translate="yes" xml:space="preserve">
          <source>RawArray(&amp;lsquo;i&amp;rsquo;, (9, 2, 8))</source>
          <target state="translated">RawArray（ 'i'、（9、2、8））</target>
        </trans-unit>
        <trans-unit id="0aeed3acd8679b1c888b9a52532abe1bdab36ec8" translate="yes" xml:space="preserve">
          <source>RawArray(c_int, (9, 2, 8))</source>
          <target state="translated">RawArray(c_int,(9,2,8)</target>
        </trans-unit>
        <trans-unit id="81de3aa1ac25caa95ccc8ece4bfec2012a8f05ec" translate="yes" xml:space="preserve">
          <source>RawArray(c_short, 7)</source>
          <target state="translated">RawArray(c_short,7)</target>
        </trans-unit>
        <trans-unit id="6b1e8433b45042827ff62732cd187628f20e6272" translate="yes" xml:space="preserve">
          <source>RawConfigParser Objects</source>
          <target state="translated">RawConfigParser オブジェクト</target>
        </trans-unit>
        <trans-unit id="b9ef9f0bf1bb2774aecf0bc5eac70a0c3df407d0" translate="yes" xml:space="preserve">
          <source>RawValue(&amp;lsquo;d&amp;rsquo;, 2.4)</source>
          <target state="translated">RawValue（ 'd'、2.4）</target>
        </trans-unit>
        <trans-unit id="a085643483d1d28e296bba8c245adb06cfe5ee8f" translate="yes" xml:space="preserve">
          <source>RawValue(MyStruct, 4, 6)</source>
          <target state="translated">RawValue(MyStruct,4,6)</target>
        </trans-unit>
        <trans-unit id="3964dfdf161c0a4d57f44d29cea2e5ce7b015c24" translate="yes" xml:space="preserve">
          <source>RawValue(c_double, 2.4)</source>
          <target state="translated">RawValue(c_double,2.4)</target>
        </trans-unit>
        <trans-unit id="46819dee760d23017b083e3721863443e51a0535" translate="yes" xml:space="preserve">
          <source>Re-define the sequences that exist in the mailbox based upon &lt;em&gt;sequences&lt;/em&gt;, a dictionary of names mapped to key lists, like returned by &lt;a href=&quot;#mailbox.MH.get_sequences&quot;&gt;&lt;code&gt;get_sequences()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH.get_sequences&quot;&gt; &lt;code&gt;get_sequences()&lt;/code&gt; &lt;/a&gt;によって返されるような、キーリストにマップされた名前のディクショナリ&lt;em&gt;シーケンス&lt;/em&gt;に基づいて、メールボックスに存在するシーケンスを再定義します。</target>
        </trans-unit>
        <trans-unit id="1aae033584afaf27ba5a2644cdf43922b9557f6e" translate="yes" xml:space="preserve">
          <source>Re-raises the exception currently on top of the stack.</source>
          <target state="translated">現在スタックの上にある例外を再上昇させます。</target>
        </trans-unit>
        <trans-unit id="8640dd86f3b4479b018eccf7d047f63477657ebe" translate="yes" xml:space="preserve">
          <source>Re-using old test code</source>
          <target state="translated">古いテストコードの再利用</target>
        </trans-unit>
        <trans-unit id="a3655682a661b47ceabbe8da87b35c82adcc08b0" translate="yes" xml:space="preserve">
          <source>Reached the buffer size limit while looking for a separator.</source>
          <target state="translated">セパレータを探している間にバッファサイズの限界に達しました。</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="0e4518bbf33bc9f34bd39493aecee4ec5624d1b3" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; items (as machine values) from the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt; and append them to the end of the array. If less than &lt;em&gt;n&lt;/em&gt; items are available, &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; is raised, but the items that were available are still inserted into the array. &lt;em&gt;f&lt;/em&gt; must be a real built-in file object; something else with a &lt;code&gt;read()&lt;/code&gt; method won&amp;rsquo;t do.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;f&lt;/em&gt;から&lt;em&gt;n個の&lt;/em&gt;アイテムを（マシン値として）読み取り、それらを配列の最後に追加します。利用可能なアイテムが&lt;em&gt;n個&lt;/em&gt;未満の場合、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;が発生しますが、利用可能だったアイテムは引き続き配列に挿入されます。&lt;em&gt;f&lt;/em&gt;は実際の組み込みファイルオブジェクトでなければなりません。 &lt;code&gt;read()&lt;/code&gt; メソッドを持つ他の何かは行いません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="722da3822c54d77dd0f348629c0ad9bac6162d38" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; items (as machine values) from the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt; and append them to the end of the array. If less than &lt;em&gt;n&lt;/em&gt; items are available, &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; is raised, but the items that were available are still inserted into the array. &lt;em&gt;f&lt;/em&gt; must be a real built-in file object; something else with a &lt;code&gt;read()&lt;/code&gt; method won&amp;rsquo;t do.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;f&lt;/em&gt;から&lt;em&gt;n個の&lt;/em&gt;アイテムを（マシン値として）読み取り、配列の最後に追加します。使用可能なアイテムが&lt;em&gt;n&lt;/em&gt;未満の場合、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;が発生しますが、使用可能なアイテムは引き続き配列に挿入されます。&lt;em&gt;f&lt;/em&gt;は実際の組み込みファイルオブジェクトである必要があります。 &lt;code&gt;read()&lt;/code&gt; メソッドを持つ他の何かはしません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9fd63bf3dd054ea6e4dbb0bf6660d7d5c8c9d79" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;n&lt;/em&gt; uncompressed bytes without advancing the file position. At most one single read on the compressed stream is done to satisfy the call. The number of bytes returned may be more or less than requested.</source>
          <target state="translated">ファイルの位置を進めずに、&lt;em&gt;n個の&lt;/em&gt;非圧縮バイトを読み取ります。呼び出しを満足させるために、圧縮ストリームの最大で1回の読み取りが行われます。返されるバイト数は、要求された数より多い場合と少ない場合があります。</target>
        </trans-unit>
        <trans-unit id="1ecf8a5092366366f98673883ba56da84a5f1831" translate="yes" xml:space="preserve">
          <source>Read &lt;em&gt;size&lt;/em&gt; bytes from the audio input and return them as a Python string. Unlike most Unix device drivers, OSS audio devices in blocking mode (the default) will block &lt;a href=&quot;#ossaudiodev.oss_audio_device.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; until the entire requested amount of data is available.</source>
          <target state="translated">オーディオ入力から&lt;em&gt;size&lt;/em&gt;バイトを読み取り、それらをPython文字列として返します。ほとんどのUnixデバイスドライバーとは異なり、ブロックモード（デフォルト）のOSSオーディオデバイスは、要求された量のデータがすべて使用可能になるまで&lt;a href=&quot;#ossaudiodev.oss_audio_device.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;をブロックします。</target>
        </trans-unit>
        <trans-unit id="7d7576bc1047472ce41ab965ef4da96edf217ad2" translate="yes" xml:space="preserve">
          <source>Read Transports</source>
          <target state="translated">トランスポートを読む</target>
        </trans-unit>
        <trans-unit id="bcac2b94b89c15334aebf939b9f27649cff73927" translate="yes" xml:space="preserve">
          <source>Read a bytes object from the user, with primitive line editing capacity.</source>
          <target state="translated">プリミティブな行編集能力を持つ、ユーザーからのバイトオブジェクトの読み込み。</target>
        </trans-unit>
        <trans-unit id="5bf01d2b2a3ffc92f6637915b0da38b21df691e1" translate="yes" xml:space="preserve">
          <source>Read a data URL. This kind of URL contains the content encoded in the URL itself. The data URL syntax is specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2397.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2397&lt;/strong&gt;&lt;/a&gt;. This implementation ignores white spaces in base64 encoded data URLs so the URL may be wrapped in whatever source file it comes from. But even though some browsers don&amp;rsquo;t mind about a missing padding at the end of a base64 encoded data URL, this implementation will raise an &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in that case.</source>
          <target state="translated">データURLを読み取ります。この種類のURLには、URL自体にエンコードされたコンテンツが含まれています。データURL構文は&lt;a href=&quot;https://tools.ietf.org/html/rfc2397.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2397で&lt;/strong&gt;&lt;/a&gt;指定されてい&lt;strong&gt;ます&lt;/strong&gt;。この実装は、base64でエンコードされたデータURL内の空白を無視するため、URLはソースファイルに含まれている可能性があります。ただし、一部のブラウザーは、base64エンコードされたデータURLの末尾にパディングがないことを気にしていなくても、この実装ではその場合に&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="665d8414ef46a658946867aba8ac7b8f55e2a618" translate="yes" xml:space="preserve">
          <source>Read a keypress and return the resulting character as a byte string. Nothing is echoed to the console. This call will block if a keypress is not already available, but will not wait for</source>
          <target state="translated">キープレスを読み込んで、その結果の文字をバイト文字列として返します。コンソールには何もエコーされません。このコールは、キープレスがまだ利用可能でない場合にはブロックしますが</target>
        </trans-unit>
        <trans-unit id="b70aaf6a02c374e2e69473c3abd2416d016ecad9" translate="yes" xml:space="preserve">
          <source>Read a plist data from a bytes object. Return the root object.</source>
          <target state="translated">バイトオブジェクトからplistデータを読み込む。ルートオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="729442432e3bea73e864a90ad683329f1a141062" translate="yes" xml:space="preserve">
          <source>Read a plist file. &lt;em&gt;fp&lt;/em&gt; should be a readable and binary file object. Return the unpacked root object (which usually is a dictionary).</source>
          <target state="translated">plistファイルを読み取ります。&lt;em&gt;fp&lt;/em&gt;は、読み取り可能なバイナリファイルオブジェクトである必要があります。解凍されたルートオブジェクト（通常はディクショナリ）を返します。</target>
        </trans-unit>
        <trans-unit id="e91234c95e7e365247321ed5c89ff1bd57380573" translate="yes" xml:space="preserve">
          <source>Read a plist file. &lt;em&gt;pathOrFile&lt;/em&gt; may be either a file name or a (readable and binary) file object. Returns the unpacked root object (which usually is a dictionary).</source>
          <target state="translated">plistファイルを読み取ります。&lt;em&gt;pathOrFile&lt;/em&gt;は、ファイル名または（読み取り可能でバイナリの）ファイルオブジェクトのいずれかです。解凍されたルートオブジェクト（通常はディクショナリ）を返します。</target>
        </trans-unit>
        <trans-unit id="d17bc479e546de7ff883deafc8203e76f0a328da" translate="yes" xml:space="preserve">
          <source>Read a raw token. Ignore the pushback stack, and do not interpret source requests. (This is not ordinarily a useful entry point, and is documented here only for the sake of completeness.)</source>
          <target state="translated">生のトークンを読み込む。プッシュバックスタックを無視し、ソースリクエストを解釈しない。(これは通常は有用なエントリポイントではありませんし、ここでは完全性を保つためだけに文書化されています)。</target>
        </trans-unit>
        <trans-unit id="6e656b53db3aedd07c8ef90e1d5712397b704145" translate="yes" xml:space="preserve">
          <source>Read all data until EOF as bytes; block until connection closed.</source>
          <target state="translated">EOFまでのすべてのデータをバイトとして読み込み、接続が終了するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="eb385b433dc261aeca94f5e4c8c12b73d4692054" translate="yes" xml:space="preserve">
          <source>Read all lines available on the input stream and return them as a list of lines.</source>
          <target state="translated">入力ストリームで利用可能なすべての行を読み込み、行のリストとして返します。</target>
        </trans-unit>
        <trans-unit id="eada104490597549a6b5523ffb45caa1528ad4b0" translate="yes" xml:space="preserve">
          <source>Read all the data from the binary file-like object &lt;em&gt;fp&lt;/em&gt;, parse the resulting bytes, and return the message object. &lt;em&gt;fp&lt;/em&gt; must support both the &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;read()&lt;/code&gt; methods.</source>
          <target state="translated">バイナリファイルのようなオブジェクト&lt;em&gt;fp&lt;/em&gt;からすべてのデータを読み取り、結果のバイトを解析して、メッセージオブジェクトを返します。&lt;em&gt;fp&lt;/em&gt;は、&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;read()&lt;/code&gt; メソッドとread（）メソッドの両方をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="6e652c2d6780e2d096031f76a5ba14fa62cbb797" translate="yes" xml:space="preserve">
          <source>Read all the data from the text-mode file-like object &lt;em&gt;fp&lt;/em&gt;, parse the resulting text, and return the root message object. &lt;em&gt;fp&lt;/em&gt; must support both the &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;io#io.TextIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; methods on file-like objects.</source>
          <target state="translated">テキストモードのファイルのようなオブジェクト&lt;em&gt;fp&lt;/em&gt;からすべてのデータを読み取り、結果のテキストを解析して、ルートメッセージオブジェクトを返します。&lt;em&gt;fp&lt;/em&gt;は、ファイルのようなオブジェクトの&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;io#io.TextIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;メソッドとread（）メソッドの両方をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="151332fb9b8beb4e0a8e30f6906bbbc5f48dbfde" translate="yes" xml:space="preserve">
          <source>Read all the files in the archive and check their CRC&amp;rsquo;s and file headers. Return the name of the first bad file, or else return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">アーカイブ内のすべてのファイルを読み取り、CRCとファイルヘッダーを確認します。最初の不良ファイルの名前を返すか、そうでなければ &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e1f981e030cc65108801a2bd215b6116ff35e87a" translate="yes" xml:space="preserve">
          <source>Read and parse configuration data from &lt;em&gt;f&lt;/em&gt; which must be an iterable yielding Unicode strings (for example files opened in text mode).</source>
          <target state="translated">&lt;em&gt;f&lt;/em&gt;から構成データを読み取り、解析します。これは、反復可能なUnicode文字列でなければなりません（たとえば、テキストモードで開かれたファイル）。</target>
        </trans-unit>
        <trans-unit id="778d597616c2298f5ca88a05450c7ef2de22081f" translate="yes" xml:space="preserve">
          <source>Read and return &lt;em&gt;size&lt;/em&gt; bytes, or if &lt;em&gt;size&lt;/em&gt; is not given or negative, until EOF or if the read call would block in non-blocking mode.</source>
          <target state="translated">読むとリターン&lt;em&gt;サイズは&lt;/em&gt;バイト、または場合は&lt;em&gt;サイズが&lt;/em&gt;与えられたか、負、EOFまでまたは読み取り呼び出しが非ブロックモードでブロックする場合はされていません。</target>
        </trans-unit>
        <trans-unit id="d84a2f36ea55bca770755460cd5f6842ea390894" translate="yes" xml:space="preserve">
          <source>Read and return a list of lines from the stream. &lt;em&gt;hint&lt;/em&gt; can be specified to control the number of lines read: no more lines will be read if the total size (in bytes/characters) of all lines so far exceeds &lt;em&gt;hint&lt;/em&gt;.</source>
          <target state="translated">ストリームから行のリストを読み取って返します。読み取る行数を制御するために&lt;em&gt;hint&lt;/em&gt;を指定できます。これまでにすべての行の合計サイズ（バイト/文字）が&lt;em&gt;hint&lt;/em&gt;を超えた場合、それ以上の行は読み取られません。</target>
        </trans-unit>
        <trans-unit id="1e1f16d0246cfce7e5cd42242a8cdfd52fe0dc68" translate="yes" xml:space="preserve">
          <source>Read and return all the bytes from the stream until EOF, using multiple calls to the stream if necessary.</source>
          <target state="translated">必要に応じて複数回のストリーム呼び出しを使用して、EOFまでのストリームからすべてのバイトを読み込んで返します。</target>
        </trans-unit>
        <trans-unit id="61b4597ddfbabba4eb23399ed051cfc2df36902b" translate="yes" xml:space="preserve">
          <source>Read and return at most &lt;em&gt;size&lt;/em&gt; characters from the stream as a single &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;size&lt;/em&gt; is negative or &lt;code&gt;None&lt;/code&gt;, reads until EOF.</source>
          <target state="translated">ストリームから最大で&lt;em&gt;size&lt;/em&gt;文字を読み取り、単一の&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;として返します。場合は&lt;em&gt;サイズが&lt;/em&gt;負の値またはある &lt;code&gt;None&lt;/code&gt; 、EOFまで読み取ります。</target>
        </trans-unit>
        <trans-unit id="032833aa0f34522410b0dd6b09712e09e0b8dee1" translate="yes" xml:space="preserve">
          <source>Read and return one line from the stream. If &lt;em&gt;size&lt;/em&gt; is specified, at most &lt;em&gt;size&lt;/em&gt; bytes will be read.</source>
          <target state="translated">ストリームから1行を読み取って返します。場合は&lt;em&gt;サイズが&lt;/em&gt;指定されている、ほとんどの&lt;em&gt;サイズの&lt;/em&gt;バイト読み込まれます。</target>
        </trans-unit>
        <trans-unit id="1f93d80f4f50ff298f98fac30a63bf36fbd53ced" translate="yes" xml:space="preserve">
          <source>Read and return the contents of &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt; as a &lt;code&gt;str&lt;/code&gt;. By default, the contents are read as strict UTF-8.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;の内容を &lt;code&gt;str&lt;/code&gt; として返します。デフォルトでは、コンテンツは厳密なUTF-8として読み取られます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97dcf057220f3c5d8aa73dc678dd6d41940a6eef" translate="yes" xml:space="preserve">
          <source>Read and return the contents of the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt; as &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;の内容を読み取り、 &lt;code&gt;bytes&lt;/code&gt; として返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be47592d3da6a91fa0c7b65e8dd4d66b69b12c9d" translate="yes" xml:space="preserve">
          <source>Read and return the next &lt;em&gt;nframes&lt;/em&gt; frames from the audio file. The returned data is a string containing for each frame the uncompressed samples of all channels.</source>
          <target state="translated">オーディオファイルから次の&lt;em&gt;nframes&lt;/em&gt;フレームを&lt;em&gt;読み取って&lt;/em&gt;返します。返されるデータは、すべてのチャネルの非圧縮サンプルをフレームごとに含む文字列です。</target>
        </trans-unit>
        <trans-unit id="accd63a3792cc0939b2b953724277a0f3ad00ec5" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes with only one call on the raw stream. If at least one byte is buffered, only buffered bytes are returned. Otherwise, one raw stream read call is made.</source>
          <target state="translated">rawストリームを1回呼び出すだけで、最大&lt;em&gt;size&lt;/em&gt;バイトを読み取って返します。少なくとも1バイトがバッファリングされている場合、バッファリングされたバイトのみが返されます。それ以外の場合、1つの生ストリーム読み取り呼び出しが行われます。</target>
        </trans-unit>
        <trans-unit id="6d07db2cc7617a3fe8a45a82d4e33150c0ef968f" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes, with at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. This can be useful if you are implementing your own buffering on top of a &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">基になるrawストリームの&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）メソッドを最大1回呼び出して、最大&lt;em&gt;size&lt;/em&gt;バイトを読み取り、返します。これは、&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;オブジェクトの上に独自のバッファリングを実装する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="801839f88f45d74aab9e4937a55def4dc1f3fa7d" translate="yes" xml:space="preserve">
          <source>Read and return up to &lt;em&gt;size&lt;/em&gt; bytes. If the argument is omitted, &lt;code&gt;None&lt;/code&gt;, or negative, data is read and returned until EOF is reached. An empty &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object is returned if the stream is already at EOF.</source>
          <target state="translated">最大で&lt;em&gt;size&lt;/em&gt;バイトを読み取って返します。引数を省略した場合、 &lt;code&gt;None&lt;/code&gt; 、または負の場合は、データが読み取られ、EOFに達するまで返されます。ストリームがすでにEOFにある場合は、空の&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="269e643c44fc746a6aec1f6ed801592b3e2b769e" translate="yes" xml:space="preserve">
          <source>Read at least one byte of cooked data unless EOF is hit. Return &lt;code&gt;b''&lt;/code&gt; if EOF is hit. Block if no data is immediately available.</source>
          <target state="translated">EOFに到達しない限り、クックされたデータの少なくとも1バイトを読み取ります。EOFがヒットした場合は &lt;code&gt;b''&lt;/code&gt; 返します。すぐに利用できるデータがない場合はブロックします。</target>
        </trans-unit>
        <trans-unit id="7db014aec0f4b1148afa6c6feaf0ad9880222712" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;buffer_size&lt;/em&gt; bytes from the socket&amp;rsquo;s remote end-point. An empty bytes object implies that the channel has been closed from the other end.</source>
          <target state="translated">ソケットのリモートエンドポイントから最大で&lt;em&gt;buffer_size&lt;/em&gt;バイトを読み取ります。空のバイトオブジェクトは、チャネルがもう一方の端から閉じられていることを意味します。</target>
        </trans-unit>
        <trans-unit id="22bf38b1194379ba0f960e68a6e61447edc5618e" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;n&lt;/em&gt; bytes from file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt;, leaving the file offset unchanged.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;の&lt;em&gt;offsetの&lt;/em&gt;位置から最大&lt;em&gt;n&lt;/em&gt;バイトを読み取り、ファイルオフセットを変更せずに残します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="950e8a25f50ef4960b770d71d7ff0642abfb35a5" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;n&lt;/em&gt; bytes from file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;から最大&lt;em&gt;n&lt;/em&gt;バイトを読み取ります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84fce006d0a1e309d3ec44e51f1cdb77c1f298eb" translate="yes" xml:space="preserve">
          <source>Read at most &lt;em&gt;size&lt;/em&gt; bytes from the chunk (less if the read hits the end of the chunk before obtaining &lt;em&gt;size&lt;/em&gt; bytes). If the &lt;em&gt;size&lt;/em&gt; argument is negative or omitted, read all data until the end of the chunk. An empty bytes object is returned when the end of the chunk is encountered immediately.</source>
          <target state="translated">チャンクから最大で&lt;em&gt;size&lt;/em&gt;バイトを読み取ります（&lt;em&gt;サイズ&lt;/em&gt;バイトを取得する前に、読み取りがチャンクの終わりに達した場合はそれより少ない）。場合は&lt;em&gt;、サイズ&lt;/em&gt;引数が負か省略され、チャンクの最後まで、すべてのデータを読み取ります。チャンクの終わりがすぐに検出されると、空のバイトオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="c6cb6b66afb555d54c1da5b4951f06f0d83fa104" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">事前に割り当てられた書き込み可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;にバイトを読み取り、読み取ったバイト数を返します。たとえば、&lt;em&gt;b&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; の&lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="623f707fa12afd59cb42a95e249c0cfa8d84403c" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">事前に割り当てられた書き込み可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;にバイトを読み取り、読み取ったバイト数を返します。たとえば、&lt;em&gt;b&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; の&lt;/a&gt;場合があります。オブジェクトが非ブロッキングモードであり、使用可能なバイトがない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="40fde32cbda88fe61b04a63e828036182507da5e" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, using at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. Return the number of bytes read.</source>
          <target state="translated">基になるrawストリームの&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）メソッドを最大で1回呼び出して、事前に割り当てられた書き込み可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;にバイトを読み取ります。読み込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="b3a43499b9715de2c24b65dc12866d334819d59d" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;オブジェクト&lt;/a&gt;&lt;em&gt;bの&lt;/em&gt;ように、事前に割り当てられた書き込み可能なバイトにバイトを読み取り、読み取ったバイト数を返します。たとえば、&lt;em&gt;b&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; の&lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="ab535f65ad4c7bc55d2c0002b5c51e9b2aedd42b" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, and return the number of bytes read. For example, &lt;em&gt;b&lt;/em&gt; might be a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;オブジェクト&lt;/a&gt;&lt;em&gt;bの&lt;/em&gt;ように、事前に割り当てられた書き込み可能なバイトにバイトを読み取り、読み取られたバイト数を返します。たとえば、&lt;em&gt;b&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; の&lt;/a&gt;場合があります。オブジェクトが非ブロッキングモードであり、使用可能なバイトがない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c67f4ee8002127ffcd21d02a122a435a1e78d89e" translate="yes" xml:space="preserve">
          <source>Read bytes into a pre-allocated, writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;, using at most one call to the underlying raw stream&amp;rsquo;s &lt;a href=&quot;#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;) method. Return the number of bytes read.</source>
          <target state="translated">基になるrawストリームの&lt;a href=&quot;#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;）メソッドへの最大1回の呼び出しを使用して、事前に割り当てられた書き込み可能な&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;b&lt;/em&gt;にバイトを読み取ります。読み取られたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="11784d641386cbb3b9565cb5e44d47cfb462f62e" translate="yes" xml:space="preserve">
          <source>Read data from the stream until &lt;em&gt;separator&lt;/em&gt; is found.</source>
          <target state="translated">&lt;em&gt;セパレータ&lt;/em&gt;が見つかるまでストリームからデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="2836a8a7b00fb58916686face31bb01a8f04add3" translate="yes" xml:space="preserve">
          <source>Read everything that can be without blocking in I/O (eager).</source>
          <target state="translated">I/O(熱心な)でブロッキングせずにできることをすべて読む。</target>
        </trans-unit>
        <trans-unit id="086341b1243ffe085f2b510b8dbe64cd54ef265d" translate="yes" xml:space="preserve">
          <source>Read exactly &lt;em&gt;n&lt;/em&gt; bytes.</source>
          <target state="translated">正確に&lt;em&gt;n&lt;/em&gt;バイトを読み取ります。</target>
        </trans-unit>
        <trans-unit id="71e0ef19601dc132ab6b288b3cecb7a550fb8ec0" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt; into mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;, leaving the file offset unchanged. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">ファイルオフセットを変更せずに、&lt;em&gt;offsetの&lt;/em&gt;位置にあるファイル記述子&lt;em&gt;fd&lt;/em&gt;から可変&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;に読み込みます。データがいっぱいになるまで各バッファーにデータを転送し、シーケンスの次のバッファーに移動して、残りのデータを保持します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdf7536b507a3a4c12adb8c79c16d9dac5da7f3b" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; at a position of &lt;em&gt;offset&lt;/em&gt; into mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;, leaving the file offset unchanged. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">&lt;em&gt;オフセットの&lt;/em&gt;位置にあるファイル記述子&lt;em&gt;fd&lt;/em&gt;から、ファイル&lt;em&gt;オフセット&lt;/em&gt;を変更せずに、可変&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;バッファ&lt;/em&gt;に読み込みます。データがいっぱいになるまで各バッファーにデータを転送してから、シーケンス内の次のバッファーに移動して、残りのデータを保持します。</target>
        </trans-unit>
        <trans-unit id="46f1f0afa3b7935125f9a8761dca565440d2922a" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; into a number of mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;から、多数の可変&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;&lt;em&gt;buffersに&lt;/em&gt;読み込み&lt;em&gt;ます&lt;/em&gt;。データがいっぱいになるまで各バッファーにデータを転送し、シーケンスの次のバッファーに移動して、残りのデータを保持します。</target>
        </trans-unit>
        <trans-unit id="fc627d570e3243437eae53bdadff37038c8a1f51" translate="yes" xml:space="preserve">
          <source>Read from a file descriptor &lt;em&gt;fd&lt;/em&gt; into a number of mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;&lt;em&gt;buffers&lt;/em&gt;. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;から、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;オブジェクト&lt;/a&gt;&lt;em&gt;バッファの&lt;/em&gt;ようないくつかの可変バイトに読み込まれます。データがいっぱいになるまで各バッファーにデータを転送してから、シーケンス内の次のバッファーに移動して、残りのデータを保持します。</target>
        </trans-unit>
        <trans-unit id="370a120715a7c1833cbfdc99def641a60b759335" translate="yes" xml:space="preserve">
          <source>Read into &lt;em&gt;buffer&lt;/em&gt; a complete message of byte data sent from the other end of the connection and return the number of bytes in the message. Blocks until there is something to receive. Raises &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if there is nothing left to receive and the other end was closed.</source>
          <target state="translated">接続のもう一方の端から送信されたバイトデータの完全なメッセージを&lt;em&gt;バッファに読み込み&lt;/em&gt;、メッセージのバイト数を返します。受け取るものがあるまでブロックします。発生させ&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;受け取るために残され、他端が閉じられたものは何も存在しない場合。</target>
        </trans-unit>
        <trans-unit id="58fd9f6e88d1c5506b9f30352520459e5d574878" translate="yes" xml:space="preserve">
          <source>Read one line from the input stream and return the decoded data.</source>
          <target state="translated">入力ストリームから1行読み込み、デコードされたデータを返します。</target>
        </trans-unit>
        <trans-unit id="c530ff788aa04dd6810efcf2ec524d9201915724" translate="yes" xml:space="preserve">
          <source>Read one line, where &amp;ldquo;line&amp;rdquo; is a sequence of bytes ending with &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="translated">1行を読み取ります。「line」は &lt;code&gt;\n&lt;/code&gt; 終わる一連のバイトです。</target>
        </trans-unit>
        <trans-unit id="a11d3494cb085e6bb059cce3b8c7779518c0f535" translate="yes" xml:space="preserve">
          <source>Read one value from the open file and return it. If no valid value is read (e.g. because the data has a different Python version&amp;rsquo;s incompatible marshal format), raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. The file must be a readable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;.</source>
          <target state="translated">開いているファイルから1つの値を読み取り、それを返します。有効な値が読み取られない場合（たとえば、データに異なるPythonバージョンの互換性のないマーシャル形式があるため）、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を送出し&lt;/a&gt;ます。ファイルは、読み取り可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリ&lt;/a&gt;ファイルである必要があります。</target>
        </trans-unit>
        <trans-unit id="1f2aad4febf0bfb705d5df3e872623c04614781d" translate="yes" xml:space="preserve">
          <source>Read one value from the open file and return it. If no valid value is read (e.g. because the data has a different Python version&amp;rsquo;s incompatible marshal format), raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. The file must be a readable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;.</source>
          <target state="translated">開いているファイルから1つの値を読み取り、それを返します。有効な値が読み取られない場合（たとえば、データのPythonバージョンの互換性のないマーシャル形式が異なるため）、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生させ&lt;/a&gt;ます。ファイルは読み取り可能な&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;バイナリ&lt;/a&gt;ファイルである必要があります。</target>
        </trans-unit>
        <trans-unit id="a3cc8c56e2bce4a91f9564fd0a68bebf4f1aae62" translate="yes" xml:space="preserve">
          <source>Read only mode.</source>
          <target state="translated">読み取り専用モード。</target>
        </trans-unit>
        <trans-unit id="d62b80a78ee9fd52c9bd1c58e7df70e3d3b9dbc0" translate="yes" xml:space="preserve">
          <source>Read readily available data.</source>
          <target state="translated">容易に入手可能なデータを読む。</target>
        </trans-unit>
        <trans-unit id="c4f07bb853e3e73e2f5713357ac165dd42bb44e7" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;#security-considerations&quot;&gt;Security Considerations&lt;/a&gt; section before using &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shell=True&lt;/code&gt; を使用する前に、&lt;a href=&quot;#security-considerations&quot;&gt;セキュリティに関する考慮事項の&lt;/a&gt;セクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="36a78bd35a074b6a5224921622d62064039708b3" translate="yes" xml:space="preserve">
          <source>Read the Wikipedia article, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;Cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt;, to get the requirements of a cryptographically generator.</source>
          <target state="translated">ウィキペディアの記事「&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;暗号で保護された擬似乱数ジェネレーター（CSPRNG）&lt;/a&gt;」を読んで、暗号でジェネレーターの要件を取得してください。</target>
        </trans-unit>
        <trans-unit id="40958a3c19fd0a9db3005203e40c0183c907cf90" translate="yes" xml:space="preserve">
          <source>Read the Wikipedia article, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;Cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt;, to get the requirements of a cryptographically strong generator.</source>
          <target state="translated">ウィキペディアの記事「暗号論的に&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;安全な疑似乱数ジェネレーター（CSPRNG）&lt;/a&gt;」を読んで、暗号的に強力なジェネレーターの要件を取得してください。</target>
        </trans-unit>
        <trans-unit id="a690d2859783c0df3df22c4539d2e42784ae104e" translate="yes" xml:space="preserve">
          <source>Read the current file as bytes.</source>
          <target state="translated">現在のファイルをバイトで読み込みます。</target>
        </trans-unit>
        <trans-unit id="ffe92b56501ebcdcbab2c7c99fbe83d9fbdad392" translate="yes" xml:space="preserve">
          <source>Read the current file as unicode text. Positional and keyword arguments are passed through to &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; (except &lt;code&gt;buffer&lt;/code&gt;, which is implied by the context).</source>
          <target state="translated">現在のファイルをUnicodeテキストとして読み取ります。位置引数とキーワード引数は、&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; に&lt;/a&gt;渡されます（ただし、コンテキストによって暗黙的に指定される &lt;code&gt;buffer&lt;/code&gt; を除く）。</target>
        </trans-unit>
        <trans-unit id="ae4d23471fd1abd1d35737496f1afc5caa8f9fa3" translate="yes" xml:space="preserve">
          <source>Read the documentation for your HTTP server and check with your local system administrator to find the directory where CGI scripts should be installed; usually this is in a directory &lt;code&gt;cgi-bin&lt;/code&gt; in the server tree.</source>
          <target state="translated">HTTPサーバーのドキュメントを読み、ローカルシステム管理者に確認して、CGIスクリプトをインストールするディレクトリを見つけます。通常、これはサーバーツリーの &lt;code&gt;cgi-bin&lt;/code&gt; ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="a6c0096aa107f685e086ee5056e587ef9245c6fb" translate="yes" xml:space="preserve">
          <source>Read the file &lt;code&gt;list&lt;/code&gt; and add each line that it contains to the list of files and directories to compile. If &lt;code&gt;list&lt;/code&gt; is &lt;code&gt;-&lt;/code&gt;, read lines from &lt;code&gt;stdin&lt;/code&gt;.</source>
          <target state="translated">ファイル &lt;code&gt;list&lt;/code&gt; を読み、そこに含まれる各行を、コンパイルするファイルとディレクトリのリストに追加します。 &lt;code&gt;list&lt;/code&gt; が &lt;code&gt;-&lt;/code&gt; の場合、 &lt;code&gt;stdin&lt;/code&gt; から行を読み取ります。</target>
        </trans-unit>
        <trans-unit id="d9043cc7135605ae79c85c6a4222a2b9b7760d02" translate="yes" xml:space="preserve">
          <source>Read the next member from the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarfile&lt;/em&gt; and return it as a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;tarfile&lt;/em&gt;から次のメンバーを読み取り、TarInfoオブジェクトとして&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e2e2db3d4342df11e319327d19c3f517416fd093" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;file&lt;/em&gt; and return the reconstituted object hierarchy specified therein. This is equivalent to &lt;code&gt;Unpickler(file).load()&lt;/code&gt;.</source>
          <target state="translated">開いている&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルのオブジェクト&lt;/a&gt;&lt;em&gt;ファイル&lt;/em&gt;からオブジェクトのピクル化された表現を読み取り、そこで指定された再構成されたオブジェクト階層を返し&lt;em&gt;ます&lt;/em&gt;。これは &lt;code&gt;Unpickler(file).load()&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="6be4d006351f062a506f44e5b038af184a623e67" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;file&lt;/em&gt; and return the reconstituted object hierarchy specified therein. This is equivalent to &lt;code&gt;Unpickler(file).load()&lt;/code&gt;.</source>
          <target state="translated">開いている&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;ファイル&lt;/em&gt;からオブジェクトのpickle化された表現を読み取り、そこで指定されている再構成されたオブジェクト階層を返し&lt;em&gt;ます&lt;/em&gt;。これは、 &lt;code&gt;Unpickler(file).load()&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ca7f3209ca328076e8c99b3695b834a977dae426" translate="yes" xml:space="preserve">
          <source>Read the pickled representation of an object from the open file object given in the constructor, and return the reconstituted object hierarchy specified therein. Bytes past the pickled representation of the object are ignored.</source>
          <target state="translated">コンストラクタで与えられたオープンファイルオブジェクトからオブジェクトのピクルス表現を読み込み、そこで指定されたオブジェクト階層を再構成して返します。オブジェクトのピクルス表現を超えたバイトは無視されます。</target>
        </trans-unit>
        <trans-unit id="244e9ebb10edf2b477c2a4c43f22d764476ea5ab" translate="yes" xml:space="preserve">
          <source>Read until a given byte string, &lt;em&gt;expected&lt;/em&gt;, is encountered or until &lt;em&gt;timeout&lt;/em&gt; seconds have passed.</source>
          <target state="translated">指定されたバイト文字列（&lt;em&gt;expected&lt;/em&gt;）が検出&lt;em&gt;される&lt;/em&gt;まで、または&lt;em&gt;タイムアウト&lt;/em&gt;秒数が経過するまで読み取ります。</target>
        </trans-unit>
        <trans-unit id="7d24f7fea0df1e214b18d3f53bb4f3190e644dbd" translate="yes" xml:space="preserve">
          <source>Read until newline or EOF and return a single &lt;code&gt;str&lt;/code&gt;. If the stream is already at EOF, an empty string is returned.</source>
          <target state="translated">改行またはEOFまで読み取り、単一の &lt;code&gt;str&lt;/code&gt; を返します。ストリームがすでにEOFにある場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="275ad8a9522498120a9251ff218f6d8a6854e563" translate="yes" xml:space="preserve">
          <source>Read until one from a list of a regular expressions matches.</source>
          <target state="translated">正規表現のリストから1つが一致するまで読み込みます。</target>
        </trans-unit>
        <trans-unit id="355759e6f9cbb09a4ddd49bcde6c6fe81070120b" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;len&lt;/em&gt; bytes of data from the SSL socket and return the result as a &lt;code&gt;bytes&lt;/code&gt; instance. If &lt;em&gt;buffer&lt;/em&gt; is specified, then read into the buffer instead, and return the number of bytes read.</source>
          <target state="translated">SSLソケットから最大&lt;em&gt;len&lt;/em&gt;バイトのデータを読み取り、結果を &lt;code&gt;bytes&lt;/code&gt; インスタンスとして返します。&lt;em&gt;buffer&lt;/em&gt;が指定されている場合は、代わりにバッファーに読み取り、読み取られたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="67c359728ae94f131b3de31cc8fe482af1689b90" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;n&lt;/em&gt; bytes from the memory buffer. If &lt;em&gt;n&lt;/em&gt; is not specified or negative, all bytes are returned.</source>
          <target state="translated">メモリバッファから最大&lt;em&gt;n&lt;/em&gt;バイトを読み取ります。場合は&lt;em&gt;nを&lt;/em&gt;指定したり否定されていない、すべてのバイトが返されます。</target>
        </trans-unit>
        <trans-unit id="66c8dadf4af31035a32dfe0697628b30df8e2340" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;n&lt;/em&gt; bytes. If &lt;em&gt;n&lt;/em&gt; is not provided, or set to &lt;code&gt;-1&lt;/code&gt;, read until EOF and return all read bytes.</source>
          <target state="translated">最大&lt;em&gt;n&lt;/em&gt;バイトを読み取ります。&lt;em&gt;n&lt;/em&gt;が指定されていない場合、または &lt;code&gt;-1&lt;/code&gt; に設定されている場合は、EOFまで読み取り、読み取られたすべてのバイトを返します。</target>
        </trans-unit>
        <trans-unit id="be9279935b87c86aa3d872251148831f8eef60b1" translate="yes" xml:space="preserve">
          <source>Read up to &lt;em&gt;size&lt;/em&gt; bytes from the object and return them. As a convenience, if &lt;em&gt;size&lt;/em&gt; is unspecified or -1, all bytes until EOF are returned. Otherwise, only one system call is ever made. Fewer than &lt;em&gt;size&lt;/em&gt; bytes may be returned if the operating system call returns fewer than &lt;em&gt;size&lt;/em&gt; bytes.</source>
          <target state="translated">オブジェクトから最大&lt;em&gt;size&lt;/em&gt;バイトを読み取り、それらを返します。便宜上、&lt;em&gt;サイズ&lt;/em&gt;が指定&lt;em&gt;され&lt;/em&gt;ていないか-1の場合、EOFまでのすべてのバイトが返されます。それ以外の場合、システムコールは1つだけ行われます。オペレーティングシステムコールが&lt;em&gt;size&lt;/em&gt;バイト未満を返す場合、&lt;em&gt;size&lt;/em&gt;バイト未満が返されることがあります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d7c483daa44c7fc69ec7c033ba33d2f0ecf7b8c" translate="yes" xml:space="preserve">
          <source>Read window related data stored in the file by an earlier &lt;code&gt;putwin()&lt;/code&gt; call. The routine then creates and initializes a new window using that data, returning the new window object.</source>
          <target state="translated">以前の &lt;code&gt;putwin()&lt;/code&gt; 呼び出しによってファイルに保存されたウィンドウ関連データを読み取ります。次に、ルーチンはそのデータを使用して新しいウィンドウを作成および初期化し、新しいウィンドウオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="da08100916e9f503e065d06037cb6883e9110bf4" translate="yes" xml:space="preserve">
          <source>Read-only Transports</source>
          <target state="translated">読み取り専用トランスポート</target>
        </trans-unit>
        <trans-unit id="9024b38762e4a2f67f6a66a7cd3c49edf9e41023" translate="yes" xml:space="preserve">
          <source>Read-only access to size in bytes of the shared memory block.</source>
          <target state="translated">共有メモリブロックのバイト単位のサイズへの読み取り専用アクセス。</target>
        </trans-unit>
        <trans-unit id="28e815b1c90cbea2302aea1fb4f0320664d93b86" translate="yes" xml:space="preserve">
          <source>Read-only access to the unique name of the shared memory block.</source>
          <target state="translated">共有メモリブロックの一意の名前への読み取り専用アクセス。</target>
        </trans-unit>
        <trans-unit id="a759c19cd2bd30e46f16084fc5f6eb8f05850a3d" translate="yes" xml:space="preserve">
          <source>Read-only attribute containing the &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; packing format used by all currently stored values.</source>
          <target state="translated">現在格納されているすべての値で使用される&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;パッキング形式を含む読み取り専用属性。</target>
        </trans-unit>
        <trans-unit id="c0255693ac4e04ef15e0f7093799a77cddf306f8" translate="yes" xml:space="preserve">
          <source>Read-only attribute returning a list of upcoming events in the order they will be run. Each event is shown as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the following fields: time, priority, action, argument, kwargs.</source>
          <target state="translated">今後のイベントのリストを、実行される順序で返す読み取り専用属性。各イベントは、次のフィールドを持つ&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;として表示されます：時間、優先度、アクション、引数、kwargs。</target>
        </trans-unit>
        <trans-unit id="f0b4adf89bcc6cc89664264e9b0de57168314cac" translate="yes" xml:space="preserve">
          <source>Read-only attribute returning a list of upcoming events in the order they will be run. Each event is shown as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the following fields: time, priority, action, argument, kwargs.</source>
          <target state="translated">今後のイベントのリストを実行される順序で返す読み取り専用属性。各イベントは、時間、優先度、アクション、引数、kwargsのフィールドを持つ&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;として表示されます。</target>
        </trans-unit>
        <trans-unit id="fd7967994dfc943a9d75a158de2c9b6edcab50b2" translate="yes" xml:space="preserve">
          <source>Read-only file system</source>
          <target state="translated">読み取り専用ファイルシステム</target>
        </trans-unit>
        <trans-unit id="e14e4cb7a5fc41c26789e4ceb8b7556512ce5b3c" translate="yes" xml:space="preserve">
          <source>Read-only option. The widget periodically increments the value of this option whenever its value is greater than 0 and, in determinate mode, less than maximum. This option may be used by the current theme to provide additional animation effects.</source>
          <target state="translated">読み取り専用オプション。ウィジェットはこのオプションの値が0より大きく、決定モードでは最大値よりも小さい場合、定期的にインクリメントします。このオプションは、現在のテーマで追加のアニメーション効果を提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="fdd475b101ff224617dbdc559cda3c41a6196b2b" translate="yes" xml:space="preserve">
          <source>Read-only proxy of a mapping. It provides a dynamic view on the mapping&amp;rsquo;s entries, which means that when the mapping changes, the view reflects these changes.</source>
          <target state="translated">マッピングの読み取り専用プロキシ。マッピングのエントリの動的なビューを提供します。つまり、マッピングが変更されると、ビューはこれらの変更を反映します。</target>
        </trans-unit>
        <trans-unit id="617e4fa30ba80f113b7bc6e6c0b28994cdf5dc81" translate="yes" xml:space="preserve">
          <source>Read/write attribute that controls the number of rows returned by &lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt;&lt;code&gt;fetchmany()&lt;/code&gt;&lt;/a&gt;. The default value is 1 which means a single row would be fetched per call.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt; &lt;code&gt;fetchmany()&lt;/code&gt; &lt;/a&gt;によって返される行数を制御する読み取り/書き込み属性。デフォルト値は1です。これは、呼び出しごとに単一の行がフェッチされることを意味します。</target>
        </trans-unit>
        <trans-unit id="c1db1af1a77800e199d231211e0ee56c94656a50" translate="yes" xml:space="preserve">
          <source>Reader Objects</source>
          <target state="translated">読者オブジェクト</target>
        </trans-unit>
        <trans-unit id="db2391bcf367fb51145969722a1c93694fa96fd1" translate="yes" xml:space="preserve">
          <source>Reader objects (&lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; instances and objects returned by the &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; function) have the following public methods:</source>
          <target state="translated">Readerオブジェクト（&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; &lt;/a&gt;インスタンスおよび&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt;関数によって返されるオブジェクト）には、次のパブリックメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="36423bc484450ac08875c5c75741a36b238967ce" translate="yes" xml:space="preserve">
          <source>Reader objects have the following public attributes:</source>
          <target state="translated">Readerオブジェクトは、以下のパブリック属性を持っています。</target>
        </trans-unit>
        <trans-unit id="3216a8ee62aa836c78abf06d3d2b2c311982c82c" translate="yes" xml:space="preserve">
          <source>Reading Mail with Rmail</source>
          <target state="translated">Rmailでメールを読む</target>
        </trans-unit>
        <trans-unit id="0f1c88aeb61edc1aa1f64399ee69112fad93c18f" translate="yes" xml:space="preserve">
          <source>Reading a file with an alternate format:</source>
          <target state="translated">代替フォーマットでファイルを読み取る</target>
        </trans-unit>
        <trans-unit id="1a2bc35fba7dad0f428a963052db61b92ac210d0" translate="yes" xml:space="preserve">
          <source>Reading and writing &lt;strong&gt;gzip&lt;/strong&gt;-format files.</source>
          <target state="translated">&lt;strong&gt;gzip&lt;/strong&gt;形式のファイルの読み取りと書き込み。</target>
        </trans-unit>
        <trans-unit id="d84f8e2c49c100903904fb63d7379d86751544b5" translate="yes" xml:space="preserve">
          <source>Reading and writing compressed files</source>
          <target state="translated">圧縮ファイルの読み書き</target>
        </trans-unit>
        <trans-unit id="2d4bfaee912bc17ab5a2c37daed14a5b4b6d07f6" translate="yes" xml:space="preserve">
          <source>Reading in a compressed file:</source>
          <target state="translated">圧縮されたファイルで読み込んでいます。</target>
        </trans-unit>
        <trans-unit id="10300bcc0ccd09bb4fd189b1c4c1aeb7f5446577" translate="yes" xml:space="preserve">
          <source>Reading the &lt;code&gt;port&lt;/code&gt; attribute will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid port is specified in the URL. See section &lt;a href=&quot;#urlparse-result-object&quot;&gt;Structured Parse Results&lt;/a&gt; for more information on the result object.</source>
          <target state="translated">URLに無効なポートが指定されている&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;port&lt;/code&gt; 属性を読み取るとValueErrorが発生します。結果オブジェクトの詳細については、「&lt;a href=&quot;#urlparse-result-object&quot;&gt;構造化解析結果&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e840c99d90d44d7beed3e6b82643eb55b43dcea5" translate="yes" xml:space="preserve">
          <source>Readline configuration</source>
          <target state="translated">リードライン構成</target>
        </trans-unit>
        <trans-unit id="172081870890f80c50c85609cacec8034dd848d9" translate="yes" xml:space="preserve">
          <source>Readline keybindings may be configured via an initialization file, typically &lt;code&gt;.inputrc&lt;/code&gt; in your home directory. See &lt;a href=&quot;https://tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9&quot;&gt;Readline Init File&lt;/a&gt; in the GNU Readline manual for information about the format and allowable constructs of that file, and the capabilities of the Readline library in general.</source>
          <target state="translated">Readlineキーバインディングは、初期化ファイル（通常はホームディレクトリの &lt;code&gt;.inputrc&lt;/code&gt; )を介して構成できます。そのファイルの形式と許容される構成、および一般的なReadlineライブラリの機能については、GNU Readlineマニュアルの&lt;a href=&quot;https://tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9&quot;&gt;Readline Init File&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="10ac791e71e93f862245871c4af29005241b9a34" translate="yes" xml:space="preserve">
          <source>Reads &lt;em&gt;path&lt;/em&gt; as a binary file and returns the bytes from it.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;をバイナリファイルとして読み取り、そこからバイトを返します。</target>
        </trans-unit>
        <trans-unit id="2f0d14ec42b269211345636b5534da62c18d549b" translate="yes" xml:space="preserve">
          <source>Reads &lt;em&gt;size&lt;/em&gt; bytes from the remote server. You may override this method.</source>
          <target state="translated">リモートサーバーから&lt;em&gt;size&lt;/em&gt;バイトを読み取ります。このメソッドはオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="c1ce17a8a9a4575f081b7748033ddd36404c0db6" translate="yes" xml:space="preserve">
          <source>Reads and returns at most &lt;em&gt;n&lt;/em&gt; frames of audio, as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">最大で&lt;em&gt;n&lt;/em&gt;フレームのオーディオを読み取り、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="016f3cb3ac7a6483a9a12e632b5df2abaee0a4b5" translate="yes" xml:space="preserve">
          <source>Reads and returns the response body, or up to the next &lt;em&gt;amt&lt;/em&gt; bytes.</source>
          <target state="translated">応答の本文、または次の&lt;em&gt;amt&lt;/em&gt;バイトまでを読み込んで返します。</target>
        </trans-unit>
        <trans-unit id="fed140dfd1d54545cc77cf6a66050b5153d6ac71" translate="yes" xml:space="preserve">
          <source>Reads one line from the remote server. You may override this method.</source>
          <target state="translated">リモートサーバから 1 行を読み込みます。このメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="5ffa3183d71464b7a65987dec7e601ad7f53e81a" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;robots.txt&lt;/code&gt; URL and feeds it to the parser.</source>
          <target state="translated">&lt;code&gt;robots.txt&lt;/code&gt; の URLを読み取り、パーサーにフィードします。</target>
        </trans-unit>
        <trans-unit id="0cce7e602b272ec5e4ca4c13ba5491dc9a092ea9" translate="yes" xml:space="preserve">
          <source>Reads the logging configuration from a &lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;-format file. The format of the file should be as described in &lt;a href=&quot;#logging-config-fileformat&quot;&gt;Configuration file format&lt;/a&gt;. This function can be called several times from an application, allowing an end user to select from various pre-canned configurations (if the developer provides a mechanism to present the choices and load the chosen configuration).</source>
          <target state="translated">&lt;a href=&quot;configparser#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;形式のファイルからロギング構成を読み取ります。&lt;a href=&quot;#logging-config-fileformat&quot;&gt;ファイルの形式&lt;/a&gt;は、構成ファイルの形式で説明されているとおりにする必要があります。この関数はアプリケーションから複数回呼び出すことができ、エンドユーザーはさまざまな既定の構成から選択できます（開発者が選択肢を提示し、選択した構成を読み込むメカニズムを提供している場合）。</target>
        </trans-unit>
        <trans-unit id="94a1c358e9ba85fac3229ed196a115be7045cbf9" translate="yes" xml:space="preserve">
          <source>Reads up to the next len(b) bytes of the response body into the buffer &lt;em&gt;b&lt;/em&gt;. Returns the number of bytes read.</source>
          <target state="translated">応答本文の次のlen（b）バイトまでをバッファー&lt;em&gt;bに&lt;/em&gt;読み取ります。読み込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="6b7b781423798a78a5487b901d30aec866644103" translate="yes" xml:space="preserve">
          <source>Ready for output: writing will not block</source>
          <target state="translated">出力の準備ができました:書き込みがブロックされません</target>
        </trans-unit>
        <trans-unit id="e410122c8f53dfdabf057b3e096b98c81ad68e74" translate="yes" xml:space="preserve">
          <source>Real also provides defaults for &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.real&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.imag&quot;&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt;&lt;code&gt;conjugate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Realは、&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numbers.Complex.real&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numbers.Complex.imag&quot;&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt; &lt;code&gt;conjugate()&lt;/code&gt; &lt;/a&gt;デフォルトも提供します。</target>
        </trans-unit>
        <trans-unit id="6414efc283d993817db64cdec7ef20c4bd2eba0c" translate="yes" xml:space="preserve">
          <source>Real size of the file.</source>
          <target state="translated">ファイルの実寸サイズ。</target>
        </trans-unit>
        <trans-unit id="6565a5b039a6fd648b22ceea587ede519f134bdb" translate="yes" xml:space="preserve">
          <source>Real world examples of reentrancy are more likely to involve multiple functions calling each other and hence be far more complicated than this example.</source>
          <target state="translated">リエントラント性の実世界の例は、複数の関数がお互いに呼び出し合っている可能性が高く、この例よりもはるかに複雑です。</target>
        </trans-unit>
        <trans-unit id="2e78773d0218c4431c0d5b19ada30e8c89952290" translate="yes" xml:space="preserve">
          <source>Real-valued distributions</source>
          <target state="translated">実値分布</target>
        </trans-unit>
        <trans-unit id="d51911428c69cc773c6faac0d6e0f78f4fec08a1" translate="yes" xml:space="preserve">
          <source>Reallocate storage for a curses window to adjust its dimensions to the specified values. If either dimension is larger than the current values, the window&amp;rsquo;s data is filled with blanks that have the current background rendition (as set by &lt;a href=&quot;#curses.window.bkgdset&quot;&gt;&lt;code&gt;bkgdset()&lt;/code&gt;&lt;/a&gt;) merged into them.</source>
          <target state="translated">cursesウィンドウのストレージを再割り当てして、そのサイズを指定された値に調整します。いずれかの次元が現在の値よりも大きい場合、ウィンドウのデータは、現在の背景レンディション（&lt;a href=&quot;#curses.window.bkgdset&quot;&gt; &lt;code&gt;bkgdset()&lt;/code&gt; で&lt;/a&gt;設定）がマージされた空白で埋められます。</target>
        </trans-unit>
        <trans-unit id="acfbb75c08c1128d2822ae8e5c5d5a4e3ab7130c" translate="yes" xml:space="preserve">
          <source>Reason phrase returned by server.</source>
          <target state="translated">サーバから返された理由のフレーズ。</target>
        </trans-unit>
        <trans-unit id="3729bf88b61b1fc78b1c2486abb63f7a87daa766" translate="yes" xml:space="preserve">
          <source>Recall that the use of a type alias declares two types to be &lt;em&gt;equivalent&lt;/em&gt; to one another. Doing &lt;code&gt;Alias = Original&lt;/code&gt; will make the static type checker treat &lt;code&gt;Alias&lt;/code&gt; as being &lt;em&gt;exactly equivalent&lt;/em&gt; to &lt;code&gt;Original&lt;/code&gt; in all cases. This is useful when you want to simplify complex type signatures.</source>
          <target state="translated">型エイリアスを使用すると、2つの型が互いに&lt;em&gt;同等である&lt;/em&gt;と宣言されることを思い出してください。やって &lt;code&gt;Alias = Original&lt;/code&gt; 静的型チェッカー御馳走のようになります &lt;code&gt;Alias&lt;/code&gt; として&lt;em&gt;全く同じ&lt;/em&gt;に &lt;code&gt;Original&lt;/code&gt; のすべてのケースで。これは、複雑な型シグネチャを簡略化する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="fa1b054549b2e91025585495171c4282ac8e4217" translate="yes" xml:space="preserve">
          <source>Receive a message, calculate the digest of the message using &lt;em&gt;authkey&lt;/em&gt; as the key, and then send the digest back.</source>
          <target state="translated">メッセージを受信し、&lt;em&gt;authkey&lt;/em&gt;をキーとして使用してメッセージのダイジェストを計算してから、ダイジェストを送り返します。</target>
        </trans-unit>
        <trans-unit id="7d57ef5a4f2a6abd0b387d37fa4f4ff988c8fbe7" translate="yes" xml:space="preserve">
          <source>Receive data from &lt;em&gt;sock&lt;/em&gt; into the &lt;em&gt;buf&lt;/em&gt; buffer. Modeled after the blocking &lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt;&lt;code&gt;socket.recv_into()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以下からのデータを受信&lt;em&gt;ソックス&lt;/em&gt;へ&lt;em&gt;のbuf&lt;/em&gt;バッファ。ブロッキング&lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt; &lt;code&gt;socket.recv_into()&lt;/code&gt; &lt;/a&gt;メソッドをモデルにしています。</target>
        </trans-unit>
        <trans-unit id="70d9c71067229336eeee5fadb7b7a0ff772dc759" translate="yes" xml:space="preserve">
          <source>Receive data from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; into a buffer.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;からバッファにデータを受信します。</target>
        </trans-unit>
        <trans-unit id="9abb4eb4d8e8514335de2fb01dee754d2fe37fde" translate="yes" xml:space="preserve">
          <source>Receive data from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;からデータを受信します。</target>
        </trans-unit>
        <trans-unit id="774ae2c3ec69a2cfb81913d5cee240dad966ffc8" translate="yes" xml:space="preserve">
          <source>Receive data from the socket, writing it into &lt;em&gt;buffer&lt;/em&gt; instead of creating a new bytestring. The return value is a pair &lt;code&gt;(nbytes, address)&lt;/code&gt; where &lt;em&gt;nbytes&lt;/em&gt; is the number of bytes received and &lt;em&gt;address&lt;/em&gt; is the address of the socket sending the data. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">ソケットからデータを受信し、新しいバイト文字列を作成する代わりにそれを&lt;em&gt;バッファ&lt;/em&gt;に書き込みます。戻り値はペアである &lt;code&gt;(nbytes, address)&lt;/code&gt; &lt;em&gt;nバイトが&lt;/em&gt;受信されたバイトの数であり、&lt;em&gt;アドレス&lt;/em&gt;データを送信するソケットのアドレスです。オプションの引数&lt;em&gt;flagsの&lt;/em&gt;意味については、Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;を参照してください。デフォルトはゼロです。 （&lt;em&gt;アドレス&lt;/em&gt;の形式は&lt;em&gt;アドレス&lt;/em&gt;ファミリによって異なります。上記を参照してください。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df9ebd8be22851abfc842c7d2c91246bfbb96740" translate="yes" xml:space="preserve">
          <source>Receive data from the socket. The return value is a bytes object representing the data received. The maximum amount of data to be received at once is specified by &lt;em&gt;bufsize&lt;/em&gt;. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero.</source>
          <target state="translated">ソケットからデータを受信します。戻り値は、受信したデータを表すbytesオブジェクトです。一度に受信するデータの最大量は&lt;em&gt;bufsize&lt;/em&gt;で指定されます。オプションの引数&lt;em&gt;flagsの&lt;/em&gt;意味については、Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;を参照してください。デフォルトはゼロです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc433c0c9914f4955ff5a97005a06dd7afb1cef5" translate="yes" xml:space="preserve">
          <source>Receive data from the socket. The return value is a pair &lt;code&gt;(bytes, address)&lt;/code&gt; where &lt;em&gt;bytes&lt;/em&gt; is a bytes object representing the data received and &lt;em&gt;address&lt;/em&gt; is the address of the socket sending the data. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">ソケットからデータを受信します。戻り値はペア &lt;code&gt;(bytes, address)&lt;/code&gt; 。&lt;em&gt;バイト&lt;/em&gt;は受信したデータを表すバイトオブジェクトで、&lt;em&gt;アドレス&lt;/em&gt;はデータを送信するソケットのアドレスです。オプションの引数&lt;em&gt;flagsの&lt;/em&gt;意味については、Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;を参照してください。デフォルトはゼロです。（&lt;em&gt;アドレス&lt;/em&gt;の形式は&lt;em&gt;アドレス&lt;/em&gt;ファミリによって異なります。上記を参照してください。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce7629e3171b3be5aefc520d8ece4a3ff43dad28" translate="yes" xml:space="preserve">
          <source>Receive normal data (up to &lt;em&gt;bufsize&lt;/em&gt; bytes) and ancillary data from the socket. The &lt;em&gt;ancbufsize&lt;/em&gt; argument sets the size in bytes of the internal buffer used to receive the ancillary data; it defaults to 0, meaning that no ancillary data will be received. Appropriate buffer sizes for ancillary data can be calculated using &lt;a href=&quot;#socket.CMSG_SPACE&quot;&gt;&lt;code&gt;CMSG_SPACE()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.CMSG_LEN&quot;&gt;&lt;code&gt;CMSG_LEN()&lt;/code&gt;&lt;/a&gt;, and items which do not fit into the buffer might be truncated or discarded. The &lt;em&gt;flags&lt;/em&gt; argument defaults to 0 and has the same meaning as for &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットから通常のデータ（最大&lt;em&gt;bufsize&lt;/em&gt;バイト）と補助データを受信します。&lt;em&gt;ancbufsize&lt;/em&gt;引数は、補助データを受信するために使用される内部バッファのサイズをバイト単位で設定します。デフォルトは0で、補助データが受信されないことを意味します。補助データの適切なバッファーサイズは&lt;a href=&quot;#socket.CMSG_SPACE&quot;&gt; &lt;code&gt;CMSG_SPACE()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#socket.CMSG_LEN&quot;&gt; &lt;code&gt;CMSG_LEN()&lt;/code&gt; &lt;/a&gt;を使用して計算でき、バッファーに収まらないアイテムは切り捨てられるか破棄される可能性があります。&lt;em&gt;フラグ&lt;/em&gt;を0に引数のデフォルトとと同じ意味を持つ&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f772d48559fa81da24dc9bb2d05269e73289c1df" translate="yes" xml:space="preserve">
          <source>Receive normal data and ancillary data from the socket, behaving as &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; would, but scatter the non-ancillary data into a series of buffers instead of returning a new bytes object. The &lt;em&gt;buffers&lt;/em&gt; argument must be an iterable of objects that export writable buffers (e.g. &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects); these will be filled with successive chunks of the non-ancillary data until it has all been written or there are no more buffers. The operating system may set a limit (&lt;a href=&quot;os#os.sysconf&quot;&gt;&lt;code&gt;sysconf()&lt;/code&gt;&lt;/a&gt; value &lt;code&gt;SC_IOV_MAX&lt;/code&gt;) on the number of buffers that can be used. The &lt;em&gt;ancbufsize&lt;/em&gt; and &lt;em&gt;flags&lt;/em&gt; arguments have the same meaning as for &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットから通常のデータと補助データを受信し、&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; の&lt;/a&gt;ように動作しますが、新しいバイトオブジェクトを返す代わりに、非補助データを一連のバッファーに分散します。&lt;em&gt;バッファ&lt;/em&gt;引数には、輸出の書き込み可能な緩衝液（例えばそのオブジェクトの反復可能でなければならない&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;オブジェクト）。これらは、すべてが書き込まれるか、バッファがなくなるまで、非補助データの連続したチャンクで埋められます。オペレーティングシステムは、使用できるバッファの数に制限（&lt;a href=&quot;os#os.sysconf&quot;&gt; &lt;code&gt;sysconf()&lt;/code&gt; &lt;/a&gt;値 &lt;code&gt;SC_IOV_MAX&lt;/code&gt; ）を設定する場合があります。&lt;em&gt;ancbufsize&lt;/em&gt;と&lt;em&gt;フラグ&lt;/em&gt;引数はと同じ意味を持っている&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8ecb1d042a3b48788104ef92b11c47181ac8e90" translate="yes" xml:space="preserve">
          <source>Receive notification of a processing instruction.</source>
          <target state="translated">処理命令の通知を受ける。</target>
        </trans-unit>
        <trans-unit id="969730be8780de4bfd4769adb56e080405d6b06e" translate="yes" xml:space="preserve">
          <source>Receive notification of a skipped entity.</source>
          <target state="translated">スキップしたエンティティの通知を受信します。</target>
        </trans-unit>
        <trans-unit id="b0f707ac12424cf8350e1640b548139d4dcbc752" translate="yes" xml:space="preserve">
          <source>Receive notification of character data.</source>
          <target state="translated">キャラクターデータの通知を受信します。</target>
        </trans-unit>
        <trans-unit id="e1ed75deeb63816becb327823827f361dc002ace" translate="yes" xml:space="preserve">
          <source>Receive notification of ignorable whitespace in element content.</source>
          <target state="translated">要素コンテンツ内の無視可能な空白の通知を受信します。</target>
        </trans-unit>
        <trans-unit id="adb5b34aa1bdc2bed0a8cc8e47afe59f239921e0" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of a document.</source>
          <target state="translated">文書の開始の通知を受ける。</target>
        </trans-unit>
        <trans-unit id="ab1f6aa93da5c7054ea80f41cb7b3df8f521f92c" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of a document.</source>
          <target state="translated">文書終了の通知を受ける。</target>
        </trans-unit>
        <trans-unit id="37059da4d9de61091052afa9ec0f7544b9769490" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;maxfds&lt;/em&gt; file descriptors. Return &lt;code&gt;(msg, list(fds), flags, addr)&lt;/code&gt;. Consult &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; for the documentation of these parameters.</source>
          <target state="translated">最大&lt;em&gt;maxfds&lt;/em&gt;ファイル記述子を&lt;em&gt;受け取り&lt;/em&gt;ます。 &lt;code&gt;(msg, list(fds), flags, addr)&lt;/code&gt; 返します。ご相談&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;、これらのパラメータの文書化のために。</target>
        </trans-unit>
        <trans-unit id="62674304a4abc748b1b6aaf5985032b7ad74e50c" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;nbytes&lt;/em&gt; bytes from the socket, storing the data into a buffer rather than creating a new bytestring. If &lt;em&gt;nbytes&lt;/em&gt; is not specified (or 0), receive up to the size available in the given buffer. Returns the number of bytes received. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv(2)&lt;/a&gt;&lt;/em&gt; for the meaning of the optional argument &lt;em&gt;flags&lt;/em&gt;; it defaults to zero.</source>
          <target state="translated">ソケットから最大&lt;em&gt;nbytes&lt;/em&gt;バイトを受け取り、新しいバイト文字列を作成するのではなく、データをバッファに格納します。&lt;em&gt;nbytes&lt;/em&gt;が指定されていない場合（または0の場合）、指定されたバッファーで使用可能なサイズまで受信します。受信したバイト数を返します。オプションの引数&lt;em&gt;flagsの&lt;/em&gt;意味については、Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/recv(2)&quot;&gt;recv（2）&lt;/a&gt;&lt;/em&gt;を参照してください。デフォルトはゼロです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87516c95bd3638d0dfe06d89c812ba108573cb6a" translate="yes" xml:space="preserve">
          <source>Receive up to &lt;em&gt;nbytes&lt;/em&gt; from &lt;em&gt;sock&lt;/em&gt;. Asynchronous version of &lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;socket.recv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sock&lt;/em&gt;から最大&lt;em&gt;nbytes&lt;/em&gt;を受け取ります。&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;socket.recv()&lt;/code&gt; の&lt;/a&gt;非同期バージョン。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d5799828d6f5ec360634fcfaeae8aa75ab1b50b" translate="yes" xml:space="preserve">
          <source>Recent Files</source>
          <target state="translated">最近のファイル</target>
        </trans-unit>
        <trans-unit id="3b7d55ef3dcf529e39026fa094b79632e8f36dc7" translate="yes" xml:space="preserve">
          <source>Recent Tcl/Tk manuals on www.tcl.tk.</source>
          <target state="translated">www.tcl.tk の最近の Tcl/Tk のマニュアル。</target>
        </trans-unit>
        <trans-unit id="04b2fa57ede9687f28f36d0a6144290c583c1ccc" translate="yes" xml:space="preserve">
          <source>Recent versions of the pickle protocol (from protocol 2 and upwards) feature efficient binary encodings for several common features and built-in types. Also, the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module has a transparent optimizer written in C.</source>
          <target state="translated">最近のバージョンのピクルプロトコル（プロトコル2以降）には、いくつかの一般的な機能と組み込み型用の効率的なバイナリエンコーディングが備わっています。また、&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールには、Cで記述された透過的なオプティマイザがあります。</target>
        </trans-unit>
        <trans-unit id="9fb1092f32d4fcbf9e061ffd718d4ec689c6c95e" translate="yes" xml:space="preserve">
          <source>Recipes</source>
          <target state="translated">Recipes</target>
        </trans-unit>
        <trans-unit id="31eccc69d3dfb9a8c5efb2b2336c72cd4a0e6ecd" translate="yes" xml:space="preserve">
          <source>Recipes and best practices</source>
          <target state="translated">レシピとベストプラクティス</target>
        </trans-unit>
        <trans-unit id="0afefc625b1d6df9032c27d107d3cc92632128b0" translate="yes" xml:space="preserve">
          <source>Reconfigure this text stream using new settings for &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt;, &lt;em&gt;newline&lt;/em&gt;, &lt;em&gt;line_buffering&lt;/em&gt; and &lt;em&gt;write_through&lt;/em&gt;.</source>
          <target state="translated">再設定用の新しい設定を使用して、このテキストストリーム&lt;em&gt;のエンコーディング&lt;/em&gt;、&lt;em&gt;エラー&lt;/em&gt;、&lt;em&gt;改行&lt;/em&gt;、&lt;em&gt;line_buffering&lt;/em&gt;と&lt;em&gt;write_through&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cc08933b96ad762d14f56ef9bb38f79deb3264c9" translate="yes" xml:space="preserve">
          <source>Record &lt;em&gt;handler&lt;/em&gt; as the function to call when an object of a type matching &lt;em&gt;typekey&lt;/em&gt; is passed to &lt;a href=&quot;#email.contentmanager.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;. For the possible values of &lt;em&gt;typekey&lt;/em&gt;, see &lt;a href=&quot;#email.contentmanager.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typekeyに&lt;/em&gt;一致するタイプのオブジェクトが&lt;a href=&quot;#email.contentmanager.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; に&lt;/a&gt;渡されたときに呼び出す関数としてのレコード&lt;em&gt;ハンドラー&lt;/em&gt;。&lt;em&gt;typekey&lt;/em&gt;の可能な値については、&lt;a href=&quot;#email.contentmanager.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56d721d9be865cbe675c509ad2dc82f65a32c297" translate="yes" xml:space="preserve">
          <source>Record Objects</source>
          <target state="translated">オブジェクトの記録</target>
        </trans-unit>
        <trans-unit id="550210dffc16ae75a4266c879b85d63405b131ff" translate="yes" xml:space="preserve">
          <source>Record Separator</source>
          <target state="translated">レコードセパレータ</target>
        </trans-unit>
        <trans-unit id="26602f7b5fcc3eacdb808f9d38dac9fb3601f555" translate="yes" xml:space="preserve">
          <source>Record separator, block-mode terminator</source>
          <target state="translated">レコードセパレータ、ブロックモードターミネータ</target>
        </trans-unit>
        <trans-unit id="e1b268d35219d40cf6f8bd8c752eb3d2e9da8ddd" translate="yes" xml:space="preserve">
          <source>Record that the package named &lt;em&gt;pkg_name&lt;/em&gt; can be found in the specified &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pkg_name&lt;/em&gt;という名前のパッケージが指定された&lt;em&gt;パス&lt;/em&gt;にあることを記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8f291ab3cd8efd4283efe0205e28a433e3354cc3" translate="yes" xml:space="preserve">
          <source>Record the current and peak size of all traced memory blocks</source>
          <target state="translated">トレースされたすべてのメモリブロックの現在のサイズとピークサイズを記録します。</target>
        </trans-unit>
        <trans-unit id="361236b2995d356a16777babb86909ee78312843" translate="yes" xml:space="preserve">
          <source>Record the function &lt;em&gt;handler&lt;/em&gt; as the handler for &lt;em&gt;key&lt;/em&gt;. For the possible values of &lt;em&gt;key&lt;/em&gt;, see &lt;a href=&quot;#email.contentmanager.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関数&lt;em&gt;ハンドラー&lt;/em&gt;を&lt;em&gt;keyの&lt;/em&gt;&lt;em&gt;ハンドラー&lt;/em&gt;として記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;key&lt;/em&gt;の可能な値については、&lt;a href=&quot;#email.contentmanager.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0a4482baecc5c936c327a024735cf6a4b7d357cf" translate="yes" xml:space="preserve">
          <source>Rectangular Turtles as Hanoi discs (shape, shapesize)</source>
          <target state="translated">ハノイの円盤としての長方形の亀(形状、シェイプサイズ</target>
        </trans-unit>
        <trans-unit id="00b0621d227157f479fa34a6cf0046e754507f7b" translate="yes" xml:space="preserve">
          <source>RecursionError</source>
          <target state="translated">RecursionError</target>
        </trans-unit>
        <trans-unit id="96ba1b1015be70b0923b099b9a499b43d9c26512" translate="yes" xml:space="preserve">
          <source>Recursive directory creation function. Like &lt;a href=&quot;#os.mkdir&quot;&gt;&lt;code&gt;mkdir()&lt;/code&gt;&lt;/a&gt;, but makes all intermediate-level directories needed to contain the leaf directory.</source>
          <target state="translated">再帰的なディレクトリ作成機能。&lt;a href=&quot;#os.mkdir&quot;&gt; &lt;code&gt;mkdir()&lt;/code&gt; &lt;/a&gt;に似ていますが、リーフディレクトリを含めるために必要なすべての中間レベルのディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="1276ee86cf37b3c2f65fee0e5250c139938fbab4" translate="yes" xml:space="preserve">
          <source>Recursive directory or file renaming function. Works like &lt;a href=&quot;#os.rename&quot;&gt;&lt;code&gt;rename()&lt;/code&gt;&lt;/a&gt;, except creation of any intermediate directories needed to make the new pathname good is attempted first. After the rename, directories corresponding to rightmost path segments of the old name will be pruned away using &lt;a href=&quot;#os.removedirs&quot;&gt;&lt;code&gt;removedirs()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再帰的なディレクトリまたはファイルの名前変更機能。&lt;a href=&quot;#os.rename&quot;&gt; &lt;code&gt;rename()&lt;/code&gt; &lt;/a&gt;と同じように機能しますが、新しいパス名を適切にするために必要な中間ディレクトリの作成が最初に試みられます。名前の変更後、古い名前の右端のパスセグメントに対応するディレクトリは、&lt;a href=&quot;#os.removedirs&quot;&gt; &lt;code&gt;removedirs()&lt;/code&gt; &lt;/a&gt;を使用して削除されます。</target>
        </trans-unit>
        <trans-unit id="1727163dd0ed3d846cf01500b450064ac7a6858f" translate="yes" xml:space="preserve">
          <source>Recursive implementation used by &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;. This uses the type of &lt;em&gt;obj&lt;/em&gt; to determine which formatting method to call, passing it &lt;em&gt;obj&lt;/em&gt; and &lt;em&gt;level&lt;/em&gt;. The type-specific methods should call &lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt;&lt;code&gt;repr1()&lt;/code&gt;&lt;/a&gt; to perform recursive formatting, with &lt;code&gt;level - 1&lt;/code&gt; for the value of &lt;em&gt;level&lt;/em&gt; in the recursive call.</source>
          <target state="translated">&lt;a href=&quot;#reprlib.Repr.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;によって使用される再帰的な実装。これは、&lt;em&gt;obj&lt;/em&gt;のタイプを使用して、呼び出すフォーマットメソッドを決定し、&lt;em&gt;obj&lt;/em&gt;と&lt;em&gt;level&lt;/em&gt;を渡し&lt;em&gt;ます&lt;/em&gt;。型固有のメソッドは&lt;a href=&quot;#reprlib.Repr.repr1&quot;&gt; &lt;code&gt;repr1()&lt;/code&gt; &lt;/a&gt;を呼び出して再帰的なフォーマットを実行する必要があります。再帰的な呼び出しの&lt;em&gt;level&lt;/em&gt;の値は&lt;em&gt;level &lt;/em&gt; &lt;code&gt;level - 1&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bbd41b3e25dc42209f3e3cf6dfc7788c3c2f7c4" translate="yes" xml:space="preserve">
          <source>Recursive objects (compound objects that, directly or indirectly, contain a reference to themselves) may cause a recursive loop.</source>
          <target state="translated">再帰オブジェクト(直接または間接的にそれ自身への参照を含む複合オブジェクト)は、再帰ループを引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="9cf343d35a2951efa9acec2d6f7d08389ad9b862" translate="yes" xml:space="preserve">
          <source>Recursively copy an entire directory tree rooted at &lt;em&gt;src&lt;/em&gt; to a directory named &lt;em&gt;dst&lt;/em&gt; and return the destination directory. &lt;em&gt;dirs_exist_ok&lt;/em&gt; dictates whether to raise an exception in case &lt;em&gt;dst&lt;/em&gt; or any missing parent directory already exists.</source>
          <target state="translated">&lt;em&gt;src&lt;/em&gt;をルートとするディレクトリツリー全体を&lt;em&gt;dst&lt;/em&gt;という名前のディレクトリに再帰的にコピーし、宛先ディレクトリを返します。&lt;em&gt;dirs_exist_okは&lt;/em&gt;、&lt;em&gt;dst&lt;/em&gt;または不足している親ディレクトリがすでに存在する場合に例外を発生させるかどうかを&lt;em&gt;指定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="180df0d6c8d4c579acdcd7d9396e0718f8e5314d" translate="yes" xml:space="preserve">
          <source>Recursively descend the directory tree named by &lt;em&gt;dir&lt;/em&gt;, compiling all &lt;code&gt;.py&lt;/code&gt; files along the way. Return a true value if all the files compiled successfully, and a false value otherwise.</source>
          <target state="translated">&lt;em&gt;dir&lt;/em&gt;で指定されたディレクトリツリーを再帰的に下降し、途中ですべての &lt;code&gt;.py&lt;/code&gt; ファイルをコンパイルします。すべてのファイルが正常にコンパイルされた場合はtrue値を返し、それ以外の場合はfalse値を返します。</target>
        </trans-unit>
        <trans-unit id="27119d11be9fa4ec959592d161e4265bff641523" translate="yes" xml:space="preserve">
          <source>Recursively move a file or directory (&lt;em&gt;src&lt;/em&gt;) to another location (&lt;em&gt;dst&lt;/em&gt;) and return the destination.</source>
          <target state="translated">ファイルまたはディレクトリ（&lt;em&gt;src&lt;/em&gt;）を別の場所（&lt;em&gt;dst&lt;/em&gt;）に再帰的に移動し、宛先を返します。</target>
        </trans-unit>
        <trans-unit id="f3ca03bf0a62228194dc0b6acc42503eef9450f9" translate="yes" xml:space="preserve">
          <source>Recursively yield all descendant nodes in the tree starting at &lt;em&gt;node&lt;/em&gt; (including &lt;em&gt;node&lt;/em&gt; itself), in no specified order. This is useful if you only want to modify nodes in place and don&amp;rsquo;t care about the context.</source>
          <target state="translated">指定された順序ではなく、&lt;em&gt;ノード&lt;/em&gt;（&lt;em&gt;ノード&lt;/em&gt;自体を含む）から始まるツリー内のすべての子孫ノードを再帰的に生成し&lt;em&gt;ます&lt;/em&gt;。これは、ノードをその場で変更するだけで、コンテキストを気にしない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="cc9db3a795571c7e71f45670a1da7ff49b5f1557" translate="yes" xml:space="preserve">
          <source>Red</source>
          <target state="translated">Red</target>
        </trans-unit>
        <trans-unit id="86d1aaf14cd279ae2cf1492c578de97ba98cd80c" translate="yes" xml:space="preserve">
          <source>Redirect to the &lt;code&gt;Location:&lt;/code&gt; or &lt;code&gt;URI:&lt;/code&gt; URL. This method is called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; when getting an HTTP &amp;lsquo;moved permanently&amp;rsquo; response.</source>
          <target state="translated">&lt;code&gt;Location:&lt;/code&gt; または &lt;code&gt;URI:&lt;/code&gt; URLにリダイレクトします。このメソッドは、HTTPが「永続的に移動」した応答を&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;ときに親OpenerDirectorによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="471b94d402d16a5fe7549d001a68ada1f7ddb16f" translate="yes" xml:space="preserve">
          <source>Redo</source>
          <target state="translated">Redo</target>
        </trans-unit>
        <trans-unit id="fa00e646528931eda76d7105684ee497a84cf30a" translate="yes" xml:space="preserve">
          <source>Redo the last undone change to the current window.</source>
          <target state="translated">最後に取り消した変更を現在のウィンドウにやり直します。</target>
        </trans-unit>
        <trans-unit id="26744d62a96f1cadd0af20a2e6465fecffeb9384" translate="yes" xml:space="preserve">
          <source>Reduces &lt;em&gt;x&lt;/em&gt; to its simplest form.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;を最も単純な形に減らします。</target>
        </trans-unit>
        <trans-unit id="d25d695408ce744a2210b44ac61f09f673eda1c2" translate="yes" xml:space="preserve">
          <source>Redundant arguments are skipped, e.g.:</source>
          <target state="translated">冗長な引数はスキップされます。</target>
        </trans-unit>
        <trans-unit id="faf0ccf6987b184ee29bf8360d65c3940cac99c3" translate="yes" xml:space="preserve">
          <source>Reentrancy</source>
          <target state="translated">Reentrancy</target>
        </trans-unit>
        <trans-unit id="31af1e7d9bdf0c23f4f62741ae34245ad0ba7260" translate="yes" xml:space="preserve">
          <source>Reentrant context managers</source>
          <target state="translated">リエントラントコンテキストマネージャー</target>
        </trans-unit>
        <trans-unit id="b75a504a3c0ba70ec0c10b2a3af9e5159a4bdcef" translate="yes" xml:space="preserve">
          <source>Reentrant locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">再入可能ロックは、&lt;a href=&quot;#with-locks&quot;&gt;コンテキスト管理プロトコル&lt;/a&gt;もサポートしています。</target>
        </trans-unit>
        <trans-unit id="cb78d0d5486a369e93ee7a6cdd4b38e67e977db6" translate="yes" xml:space="preserve">
          <source>Ref (reference)</source>
          <target state="translated">参考文献</target>
        </trans-unit>
        <trans-unit id="b4c48c1a7a47b1d71c279a887e2ffc0a67306f39" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#pickle-picklable&quot;&gt;What can be pickled and unpickled?&lt;/a&gt; to learn what kinds of objects can be pickled.</source>
          <target state="translated">&lt;a href=&quot;#pickle-picklable&quot;&gt;漬物と漬物を取り除けるものを&lt;/a&gt;参照してください。どのような種類のオブジェクトをピクルスにできるかを学習します。</target>
        </trans-unit>
        <trans-unit id="8cf6852f041f2f75b501bc94adc79db87ab5b0bf" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;multiprocessing.managers.BaseManager&lt;/code&gt;&lt;/a&gt; for a description of the inherited &lt;em&gt;address&lt;/em&gt; and &lt;em&gt;authkey&lt;/em&gt; optional input arguments and how they may be used to connect to an existing &lt;code&gt;SharedMemoryManager&lt;/code&gt; service from other processes.</source>
          <target state="translated">継承された&lt;em&gt;アドレス&lt;/em&gt;と&lt;em&gt;authkeyの&lt;/em&gt;オプションの入力引数の説明、およびそれらを使用して他のプロセスから既存の &lt;code&gt;SharedMemoryManager&lt;/code&gt; サービスに接続する方法については、&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;multiprocessing.managers.BaseManager&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3020876c2b023ee61f4ff34145b247ee239a1340" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib examples&lt;/a&gt; to find out how the &lt;a href=&quot;#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; method can be used for generating the query string of a URL or data for a POST request.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、POSTリクエストのURLまたはデータのクエリ文字列を生成する方法については、&lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllibの例&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9cf528cc829e45349c0d15f2db845b85a0259ce" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllib examples&lt;/a&gt; to find out how urlencode method can be used for generating query string for a URL or data for POST.</source>
          <target state="translated">URLのクエリ文字列またはPOSTのデータを生成するためにurlencodeメソッドを使用する方法については、&lt;a href=&quot;urllib.request#urllib-examples&quot;&gt;urllibの例&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae2245c595777492261bc4133ce898624d7c4f2c" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; の&lt;/a&gt;対応する属性のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e9576a59010d3da190ca3684a799f611a1b6fbcd" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt;&lt;code&gt;IPv4Interface&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt; &lt;code&gt;IPv4Interface&lt;/code&gt; の&lt;/a&gt;対応する属性のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1b85be0aaf5c895e33415ac3f0b5c8f83d27d37a" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding attribute documentation in &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; の&lt;/a&gt;対応する属性のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="79197749a9a67a030048d0927ceb634ecaa07972" translate="yes" xml:space="preserve">
          <source>Refer to the corresponding method documentation in &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; の&lt;/a&gt;対応するメソッドのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="df17e49138f3f65ca0925aa5f4e03398b9debe72" translate="yes" xml:space="preserve">
          <source>Refer to the section &lt;a href=&quot;#pickle-state&quot;&gt;Handling Stateful Objects&lt;/a&gt; for more information about how to use the methods &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;使用方法の詳細については、セクション&lt;a href=&quot;#pickle-state&quot;&gt;ステートフルオブジェクトの処理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="2eca1b4d68aeba600d4d3d5d19a63fddf76c2ea9" translate="yes" xml:space="preserve">
          <source>ReferenceError</source>
          <target state="translated">ReferenceError</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="e2c4c767a75ea64177cb183a0c2547b6552dec09" translate="yes" xml:space="preserve">
          <source>Reformat the current blank-line-delimited paragraph in comment block or multiline string or selected line in a string. All lines in the paragraph will be formatted to less than N columns, where N defaults to 72.</source>
          <target state="translated">現在の空白行で区切られた段落を、コメントブロック、複数行の文字列、あるいは文字列の中の選択された行で再フォーマットします。段落内のすべての行は、N 列以下に整形されます。</target>
        </trans-unit>
        <trans-unit id="56e3badc4e6c5cc95e0ea5a9a878b9bd09f319d4" translate="yes" xml:space="preserve">
          <source>Refresh</source>
          <target state="translated">Refresh</target>
        </trans-unit>
        <trans-unit id="1a40d6fbcfd5a05686e3eb47a0a8f93b385f5db8" translate="yes" xml:space="preserve">
          <source>Refresh screen.</source>
          <target state="translated">画面を更新します。</target>
        </trans-unit>
        <trans-unit id="ff94044878bc215938c36be9ee6c2a78ff6b5155" translate="yes" xml:space="preserve">
          <source>Regardless of the system you&amp;rsquo;re running on, you can instantiate all of these classes, since they don&amp;rsquo;t provide any operation that does system calls.</source>
          <target state="translated">実行しているシステムに関係なく、システムコールを実行する操作を提供しないため、これらのクラスをすべてインスタンス化できます。</target>
        </trans-unit>
        <trans-unit id="c64942ace4774bf822764bf8de2f43e9d6205ec5" translate="yes" xml:space="preserve">
          <source>Regardless, for maximum interoperability, you may wish to voluntarily adhere to the restriction yourself.</source>
          <target state="translated">ただし、相互運用性を最大限に高めるためには、ご自身で自主的に制限を設けた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="2257c3081ae3f64a08a00f535816622645cf47db" translate="yes" xml:space="preserve">
          <source>Register &lt;em&gt;func&lt;/em&gt; as a function to be executed at termination. Any optional arguments that are to be passed to &lt;em&gt;func&lt;/em&gt; must be passed as arguments to &lt;a href=&quot;#atexit.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is possible to register the same function and arguments more than once.</source>
          <target state="translated">終了時に実行する関数として&lt;em&gt;func&lt;/em&gt;を登録します。&lt;em&gt;func&lt;/em&gt;に渡されるオプションの引数は、引数として&lt;a href=&quot;#atexit.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; に&lt;/a&gt;渡される必要があります。同じ関数と引数を複数回登録することができます。</target>
        </trans-unit>
        <trans-unit id="1cf23139d88e505f3ae5029c24fc6e2e5c9845c0" translate="yes" xml:space="preserve">
          <source>Register &lt;em&gt;subclass&lt;/em&gt; as a &amp;ldquo;virtual subclass&amp;rdquo; of this ABC. For example:</source>
          <target state="translated">&lt;em&gt;サブクラス&lt;/em&gt;をこのABCの「仮想サブクラス」として登録します。例えば：</target>
        </trans-unit>
        <trans-unit id="46544acf16426268f320581723045a91c82f422a" translate="yes" xml:space="preserve">
          <source>Register a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object for control-c handling. Registering a result stores a weak reference to it, so it doesn&amp;rsquo;t prevent the result from being garbage collected.</source>
          <target state="translated">control-c処理のために&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;オブジェクトを登録します。結果を登録すると、その結果への弱い参照が格納されるため、結果のガベージコレクションが妨げられることはありません。</target>
        </trans-unit>
        <trans-unit id="b9b46ebeff8249fc9c6789f792454d36e4861953" translate="yes" xml:space="preserve">
          <source>Register a &lt;em&gt;defect&lt;/em&gt; on &lt;em&gt;obj&lt;/em&gt;. In the email package, &lt;em&gt;defect&lt;/em&gt; will always be a subclass of &lt;code&gt;Defect&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;objに&lt;/em&gt;&lt;em&gt;欠陥&lt;/em&gt;を登録します。電子メールパッケージでは、&lt;em&gt;defect&lt;/em&gt;は常に &lt;code&gt;Defect&lt;/code&gt; のサブクラスになります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="164f6bd8d95c5fd4c9678b7c32a2758a86a74a63" translate="yes" xml:space="preserve">
          <source>Register a callback function that will be called after the TLS Client Hello handshake message has been received by the SSL/TLS server when the TLS client specifies a server name indication. The server name indication mechanism is specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc6066.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 6066&lt;/strong&gt;&lt;/a&gt; section 3 - Server Name Indication.</source>
          <target state="translated">TLSクライアントがサーバー名の表示を指定したときに、TLSクライアントのHelloハンドシェイクメッセージがSSL / TLSサーバーによって受信された後に呼び出されるコールバック関数を登録します。サーバー名表示メカニズムは、&lt;a href=&quot;https://tools.ietf.org/html/rfc6066.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 6066&lt;/strong&gt;&lt;/a&gt;セクション3-Server Name Indicationで指定されてい&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3b3559061218c8902451a453ef6702c1f1345ec0" translate="yes" xml:space="preserve">
          <source>Register a codec search function. Search functions are expected to take one argument, being the encoding name in all lower case letters, and return a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object. In case a search function cannot find a given encoding, it should return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">コーデック検索機能を登録します。検索関数は、すべて小文字のエンコーディング名である1つの引数を取り、&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを返すことが期待されています。検索関数が特定のエンコーディングを見つけられない場合は、 &lt;code&gt;None&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b03d910abc654603111bdba5ec907f8cae3a73be" translate="yes" xml:space="preserve">
          <source>Register a fd descriptor with the epoll object.</source>
          <target state="translated">epoll オブジェクトに fd 記述子を登録します。</target>
        </trans-unit>
        <trans-unit id="dcd44a82c12fc43270246c151369862610370a6d" translate="yes" xml:space="preserve">
          <source>Register a file descriptor with the polling object. Future calls to the &lt;a href=&quot;#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; method will then check whether the file descriptor has any pending I/O events. &lt;em&gt;fd&lt;/em&gt; can be either an integer, or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer. File objects implement &lt;code&gt;fileno()&lt;/code&gt;, so they can also be used as the argument.</source>
          <target state="translated">ポーリングオブジェクトにファイル記述子を登録します。その後、&lt;a href=&quot;#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、ファイル記述子に保留中のI / Oイベントがあるかどうかがチェックされます。&lt;em&gt;fd&lt;/em&gt;は整数、または整数を返す&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッドを持つオブジェクトのいずれかです。Fileオブジェクトは &lt;code&gt;fileno()&lt;/code&gt; を実装しているため、引数としても使用できます。</target>
        </trans-unit>
        <trans-unit id="37055bd4fc23c0f4fdea4606eace1de43793f75b" translate="yes" xml:space="preserve">
          <source>Register a file object for selection, monitoring it for I/O events.</source>
          <target state="translated">選択用のファイルオブジェクトを登録し、I/Oイベントを監視します。</target>
        </trans-unit>
        <trans-unit id="7fd26bcbfcaa91f7175cd5c9e51256abe0c74da5" translate="yes" xml:space="preserve">
          <source>Register a function that can respond to XML-RPC requests. If &lt;em&gt;name&lt;/em&gt; is given, it will be the method name associated with &lt;em&gt;function&lt;/em&gt;, otherwise &lt;code&gt;function.__name__&lt;/code&gt; will be used. &lt;em&gt;name&lt;/em&gt; is a string, and may contain characters not legal in Python identifiers, including the period character.</source>
          <target state="translated">XML-RPCリクエストに応答できる関数を登録します。&lt;em&gt;名前&lt;/em&gt;が指定されている場合は、&lt;em&gt;function&lt;/em&gt;に関連付けられているメソッド名になり&lt;em&gt;ます&lt;/em&gt;。それ以外の場合は、 &lt;code&gt;function.__name__&lt;/code&gt; が使用されます。&lt;em&gt;name&lt;/em&gt;は文字列であり、ピリオド文字を含む、Python識別子では無効な文字を含む場合があります。</target>
        </trans-unit>
        <trans-unit id="932c565191eb5d0a0f44bcd3a47f087684594629" translate="yes" xml:space="preserve">
          <source>Register a new child handler.</source>
          <target state="translated">新しい子ハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="3ca76dbaf3b10d5b00ef8023f3d721391c27d096" translate="yes" xml:space="preserve">
          <source>Register a user signal: install a handler for the &lt;em&gt;signum&lt;/em&gt; signal to dump the traceback of all threads, or of the current thread if &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, into &lt;em&gt;file&lt;/em&gt;. Call the previous handler if chain is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">ユーザ信号を登録しますのハンドラをインストール&lt;em&gt;シグナムの&lt;/em&gt;すべてのスレッドのトレースバックをダンプする信号、あるいは現在のスレッドの場合&lt;em&gt;all_threadsは&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; の中に、&lt;em&gt;ファイル&lt;/em&gt;。chainが &lt;code&gt;True&lt;/code&gt; の場合、前のハンドラーを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b7a88fc1c560d328f89eb19344727dd1b06a1f6a" translate="yes" xml:space="preserve">
          <source>Register an archiver for the format &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">形式&lt;em&gt;名の&lt;/em&gt;アーカイバを登録します。</target>
        </trans-unit>
        <trans-unit id="9c69e4c1a6b761b31802eca6d70086c78cac40eb" translate="yes" xml:space="preserve">
          <source>Register an object which is used to expose method names which have not been registered using &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt;. If instance contains a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is called with the requested method name and the parameters from the request; the return value is returned to the client as the result. If instance does not have a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is searched for an attribute matching the name of the requested method; if the requested method name contains periods, each component of the method name is searched for individually, with the effect that a simple hierarchical search is performed. The value found from this search is then called with the parameters from the request, and the return value is passed back to the client.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;を使用して登録されていないメソッド名を公開するために使用されるオブジェクトを登録します。インスタンスに &lt;code&gt;_dispatch()&lt;/code&gt; メソッドが含まれている場合、要求されたメソッド名と要求からのパラメーターを使用して呼び出されます。結果として戻り値がクライアントに返されます。インスタンスに &lt;code&gt;_dispatch()&lt;/code&gt; メソッドがない場合、要求されたメソッドの名前に一致する属性が検索されます。要求されたメソッド名にピリオドが含まれている場合、メソッド名の各コンポーネントが個別に検索され、単純な階層検索が実行されます。次に、この検索で​​見つかった値がリクエストのパラメーターで呼び出され、戻り値がクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="ed9365f6c69e5a1b24741bf60904088a13744988" translate="yes" xml:space="preserve">
          <source>Register an object which is used to expose method names which have not been registered using &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;instance&lt;/em&gt; contains a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is called with the requested method name and the parameters from the request. Its API is &lt;code&gt;def _dispatch(self, method, params)&lt;/code&gt; (note that &lt;em&gt;params&lt;/em&gt; does not represent a variable argument list). If it calls an underlying function to perform its task, that function is called as &lt;code&gt;func(*params)&lt;/code&gt;, expanding the parameter list. The return value from &lt;code&gt;_dispatch()&lt;/code&gt; is returned to the client as the result. If &lt;em&gt;instance&lt;/em&gt; does not have a &lt;code&gt;_dispatch()&lt;/code&gt; method, it is searched for an attribute matching the name of the requested method.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;を使用して登録されていないメソッド名を公開するために使用されるオブジェクトを登録します。&lt;em&gt;インスタンス&lt;/em&gt;に &lt;code&gt;_dispatch()&lt;/code&gt; メソッドが含まれる場合、要求されたメソッド名と要求からのパラメーターを使用して呼び出されます。そのAPIは &lt;code&gt;def _dispatch(self, method, params)&lt;/code&gt; （&lt;em&gt;params&lt;/em&gt;は可変引数リストを表していないことに注意してください）。基になる関数を呼び出してそのタスクを実行する場合、その関数は &lt;code&gt;func(*params)&lt;/code&gt; として呼び出され、パラメーターリストを展開します。 &lt;code&gt;_dispatch()&lt;/code&gt; からの戻り値は、結果としてクライアントに返されます。&lt;em&gt;インスタンスに&lt;/em&gt; &lt;code&gt;_dispatch()&lt;/code&gt; がない場合 メソッドでは、要求されたメソッドの名前に一致する属性が検索されます。</target>
        </trans-unit>
        <trans-unit id="e63339c20e691d44cfc9696ee457196f1582944e" translate="yes" xml:space="preserve">
          <source>Register an open socket to wait for data using streams</source>
          <target state="translated">オープンソケットを登録して、ストリームを使ってデータを待つ</target>
        </trans-unit>
        <trans-unit id="31f209836a9b7ebbeed4270cc1f5fbc1d00b624f" translate="yes" xml:space="preserve">
          <source>Register callables to be executed when a new child process is forked using &lt;a href=&quot;#os.fork&quot;&gt;&lt;code&gt;os.fork()&lt;/code&gt;&lt;/a&gt; or similar process cloning APIs. The parameters are optional and keyword-only. Each specifies a different call point.</source>
          <target state="translated">&lt;a href=&quot;#os.fork&quot;&gt; &lt;code&gt;os.fork()&lt;/code&gt; &lt;/a&gt;または類似のプロセス複製API を使用して新しい子プロセスがフォークされたときに実行される呼び出し可能オブジェクトを登録します。パラメータはオプションで、キーワードのみです。それぞれが異なる呼び出しポイントを指定します。</target>
        </trans-unit>
        <trans-unit id="7380a641971d9fdea939efb17a008fb3415a8df4" translate="yes" xml:space="preserve">
          <source>Register handlers for signals &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGTERM&lt;/code&gt; using the &lt;a href=&quot;#asyncio.loop.add_signal_handler&quot;&gt;&lt;code&gt;loop.add_signal_handler()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.add_signal_handler&quot;&gt; &lt;code&gt;loop.add_signal_handler()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、 &lt;code&gt;SIGTERM&lt;/code&gt; &lt;code&gt;SIGINT&lt;/code&gt; およびSIGTERMのハンドラーを登録します。</target>
        </trans-unit>
        <trans-unit id="b91bba2cba69b477fe0d2b0a0843ebcd636def10" translate="yes" xml:space="preserve">
          <source>Register the &lt;em&gt;factory&lt;/em&gt; function with the name &lt;em&gt;name&lt;/em&gt;. The factory function should return an object which implements the &lt;code&gt;DOMImplementation&lt;/code&gt; interface. The factory function can return the same object every time, or a new one for each call, as appropriate for the specific implementation (e.g. if that implementation supports some customization).</source>
          <target state="translated">名前&lt;em&gt;nameで&lt;/em&gt;&lt;em&gt;ファクトリー&lt;/em&gt;関数を登録します。ファクトリ関数は、 &lt;code&gt;DOMImplementation&lt;/code&gt; インターフェースを実装するオブジェクトを返す必要があります。ファクトリ関数は、特定の実装に応じて（たとえば、その実装がカスタマイズをサポートしている場合）、毎回同じオブジェクトを返すか、呼び出しごとに新しいオブジェクトを返すことができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92397a88086429e8a44b3cb946e76aa3d03bea9" translate="yes" xml:space="preserve">
          <source>Register the XML-RPC introspection functions &lt;code&gt;system.listMethods&lt;/code&gt;, &lt;code&gt;system.methodHelp&lt;/code&gt; and &lt;code&gt;system.methodSignature&lt;/code&gt;.</source>
          <target state="translated">XML-RPCイントロスペクション関数 &lt;code&gt;system.listMethods&lt;/code&gt; 、 &lt;code&gt;system.methodHelp&lt;/code&gt; および &lt;code&gt;system.methodSignature&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="f57270a3a2291de58564a8382d4dd27ac258ceb6" translate="yes" xml:space="preserve">
          <source>Register the XML-RPC multicall function &lt;code&gt;system.multicall&lt;/code&gt;.</source>
          <target state="translated">XML-RPCマルチコール関数 &lt;code&gt;system.multicall&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="4718e11bf7cd26056f9aabd4bb5d18f811fd0df3" translate="yes" xml:space="preserve">
          <source>Register the browser type &lt;em&gt;name&lt;/em&gt;. Once a browser type is registered, the &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function can return a controller for that browser type. If &lt;em&gt;instance&lt;/em&gt; is not provided, or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;constructor&lt;/em&gt; will be called without parameters to create an instance when needed. If &lt;em&gt;instance&lt;/em&gt; is provided, &lt;em&gt;constructor&lt;/em&gt; will never be called, and may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ブラウザタイプ&lt;em&gt;名を&lt;/em&gt;登録します。ブラウザーの種類が登録されると、&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;関数はそのブラウザーの種類のコントローラーを返すことができます。場合は&lt;em&gt;、インスタンスを&lt;/em&gt;提供する、またはされていないされていない &lt;code&gt;None&lt;/code&gt; 、&lt;em&gt;コンストラクタは、&lt;/em&gt;必要なときにインスタンスを作成するために、パラメータなしで呼び出されます。&lt;em&gt;インスタンス&lt;/em&gt;が提供されている場合、&lt;em&gt;コンストラクタ&lt;/em&gt;は呼び出されず、 &lt;code&gt;None&lt;/code&gt; になる場合があります。</target>
        </trans-unit>
        <trans-unit id="9feadc6219a888b6af3e0b732a44c86f6e6bc4fe" translate="yes" xml:space="preserve">
          <source>Register the error handling function &lt;em&gt;error_handler&lt;/em&gt; under the name &lt;em&gt;name&lt;/em&gt;. The &lt;em&gt;error_handler&lt;/em&gt; argument will be called during encoding and decoding in case of an error, when &lt;em&gt;name&lt;/em&gt; is specified as the errors parameter.</source>
          <target state="translated">エラー処理関数&lt;em&gt;error_handler&lt;/em&gt;をname &lt;em&gt;という名前&lt;/em&gt;で登録します。&lt;em&gt;ばerror_handlerの&lt;/em&gt;場合引数は、エラーの場合に符号化および復号化の際に呼び出される&lt;em&gt;名前が&lt;/em&gt;誤差パラメータとして指定されています。</target>
        </trans-unit>
        <trans-unit id="9353afc89e79764054514b6909c4b75bd875f500" translate="yes" xml:space="preserve">
          <source>Register the read end of &lt;em&gt;pipe&lt;/em&gt; in the event loop.</source>
          <target state="translated">&lt;em&gt;パイプ&lt;/em&gt;の読み取り終了をイベントループに登録します。</target>
        </trans-unit>
        <trans-unit id="03167f901b75de04f1a74c6dda1dfb5372323b7f" translate="yes" xml:space="preserve">
          <source>Register the write end of &lt;em&gt;pipe&lt;/em&gt; in the event loop.</source>
          <target state="translated">イベントループに&lt;em&gt;パイプ&lt;/em&gt;の書き込み終了を登録します。</target>
        </trans-unit>
        <trans-unit id="9afbeb2844d451aa393d0047778bed406865a5a8" translate="yes" xml:space="preserve">
          <source>Registering a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object has no side-effects if control-c handling is not enabled, so test frameworks can unconditionally register all results they create independently of whether or not handling is enabled.</source>
          <target state="translated">Control-c処理が有効になっていない場合、&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;オブジェクトを登録しても副作用はありません。そのため、テストフレームワークは、処理が有効かどうかに関係なく、作成するすべての結果を無条件に登録できます。</target>
        </trans-unit>
        <trans-unit id="f806f73ca1282968116ee369be33ec7b2bc43a1e" translate="yes" xml:space="preserve">
          <source>Registering a file descriptor that&amp;rsquo;s already registered is not an error, and has the same effect as registering the descriptor exactly once.</source>
          <target state="translated">すでに登録されているファイル記述子を登録してもエラーにはならず、記述子を1回だけ登録するのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="a8d752e2d66634a0503418efc63377aedf300c3e" translate="yes" xml:space="preserve">
          <source>Registering a file descriptor that&amp;rsquo;s already registered is not an error, but the result is undefined. The appropriate action is to unregister or modify it first. This is an important difference compared with &lt;code&gt;poll()&lt;/code&gt;.</source>
          <target state="translated">すでに登録されているファイル記述子の登録はエラーではありませんが、結果は未定義です。適切なアクションは、最初にそれを登録解除または変更することです。これは、 &lt;code&gt;poll()&lt;/code&gt; と比較した重要な違いです。</target>
        </trans-unit>
        <trans-unit id="2b6323e44d8eb9755ce0c51d184939da5a24ae74" translate="yes" xml:space="preserve">
          <source>Registering a new dialect:</source>
          <target state="translated">新しい方言を登録します。</target>
        </trans-unit>
        <trans-unit id="c9b0a6a6e0ad10be8bd30c2abdfaa375bab2fed3" translate="yes" xml:space="preserve">
          <source>Registering an adapter callable</source>
          <target state="translated">呼び出し可能なアダプタの登録</target>
        </trans-unit>
        <trans-unit id="8b4028ee967be38667ca5b4eb6a3d7780792a90b" translate="yes" xml:space="preserve">
          <source>Registers &lt;em&gt;trace_callback&lt;/em&gt; to be called for each SQL statement that is actually executed by the SQLite backend.</source>
          <target state="translated">SQLiteバックエンドによって実際に実行されるSQLステートメントごとに呼び出される&lt;em&gt;trace_callback&lt;/em&gt;を登録します。</target>
        </trans-unit>
        <trans-unit id="35efa660a7091cdf25e330f6bae8ae3ece9016c2" translate="yes" xml:space="preserve">
          <source>Registers a callable to convert a bytestring from the database into a custom Python type. The callable will be invoked for all database values that are of the type &lt;em&gt;typename&lt;/em&gt;. Confer the parameter &lt;em&gt;detect_types&lt;/em&gt; of the &lt;a href=&quot;#sqlite3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; function for how the type detection works. Note that &lt;em&gt;typename&lt;/em&gt; and the name of the type in your query are matched in case-insensitive manner.</source>
          <target state="translated">データベースからのバイト文字列をカスタムPython型に変換する呼び出し可能オブジェクトを登録します。呼び出し可能オブジェクトは、&lt;em&gt;typename&lt;/em&gt;タイプのすべてのデータベース値に対して呼び出されます。タイプ検出がどのように機能するかについては、&lt;a href=&quot;#sqlite3.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;関数のパラメーター&lt;em&gt;detect_types&lt;/em&gt;を参照してください。&lt;em&gt;typename&lt;/em&gt;とクエリ内の型の名前は、大文字と小文字を区別しない方法で一致することに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6e987e63d4340915744a6d25f1e0148affac7a5" translate="yes" xml:space="preserve">
          <source>Registers a callable to convert the custom Python type &lt;em&gt;type&lt;/em&gt; into one of SQLite&amp;rsquo;s supported types. The callable &lt;em&gt;callable&lt;/em&gt; accepts as single parameter the Python value, and must return a value of the following types: int, float, str or bytes.</source>
          <target state="translated">カスタムPythonの型に変換する呼び出し可能を登録&lt;em&gt;タイプを&lt;/em&gt; SQLiteののサポートの種類の一つに。呼び出し&lt;em&gt;可能&lt;/em&gt;な&lt;em&gt;呼び出し&lt;/em&gt;可能&lt;em&gt;オブジェクト&lt;/em&gt;は、Pythonの値を単一のパラメーターとして受け入れ、int、float、str、またはbytesのタイプの値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7f4f4f0d3036b0446492d39636a2ba426bf00bdf" translate="yes" xml:space="preserve">
          <source>Registers a namespace prefix. The registry is global, and any existing mapping for either the given prefix or the namespace URI will be removed. &lt;em&gt;prefix&lt;/em&gt; is a namespace prefix. &lt;em&gt;uri&lt;/em&gt; is a namespace uri. Tags and attributes in this namespace will be serialized with the given prefix, if at all possible.</source>
          <target state="translated">名前空間プレフィックスを登録します。レジストリはグローバルであり、指定されたプレフィックスまたは名前空間URIの既存のマッピングは削除されます。&lt;em&gt;prefix&lt;/em&gt;は名前空間の接頭辞です。&lt;em&gt;uri&lt;/em&gt;は名前空間uriです。このネームスペースのタグと属性は、可能な限り、指定されたプレフィックスでシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="898448a0347d0a1cccd5de2f6639d1a5dec6c199" translate="yes" xml:space="preserve">
          <source>Registers a type-specific method called by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; to check if two objects of exactly the same &lt;em&gt;typeobj&lt;/em&gt; (not subclasses) compare equal. &lt;em&gt;function&lt;/em&gt; must take two positional arguments and a third msg=None keyword argument just as &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; does. It must raise &lt;a href=&quot;#unittest.TestCase.failureException&quot;&gt;&lt;code&gt;self.failureException(msg)&lt;/code&gt;&lt;/a&gt; when inequality between the first two parameters is detected &amp;ndash; possibly providing useful information and explaining the inequalities in details in the error message.</source>
          <target state="translated">まったく同じ&lt;em&gt;typeobj&lt;/em&gt;（サブクラスではない）の2つのオブジェクトが等しいかどうかを確認するために、&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;によって呼び出される型固有のメソッドを登録します。&lt;em&gt;関数&lt;/em&gt;は、&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; と&lt;/a&gt;同じように、2つの位置引数と3番目のmsg = Noneキーワード引数を取る必要があります。最初の2つのパラメーターの&lt;a href=&quot;#unittest.TestCase.failureException&quot;&gt; &lt;code&gt;self.failureException(msg)&lt;/code&gt; &lt;/a&gt;が検出された場合は、self.failureException（msg）を発生させる必要があります。おそらく、有用な情報を提供し、エラーメッセージで不等式を詳細に説明します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ed4baf6d52295c8cbd61889f5bc71b934277d03" translate="yes" xml:space="preserve">
          <source>Registers an unpack format. &lt;em&gt;name&lt;/em&gt; is the name of the format and &lt;em&gt;extensions&lt;/em&gt; is a list of extensions corresponding to the format, like &lt;code&gt;.zip&lt;/code&gt; for Zip files.</source>
          <target state="translated">アンパック形式を登録します。&lt;em&gt;name&lt;/em&gt;は形式の名前で、&lt;em&gt;extensions&lt;/em&gt;は、Zipファイルの &lt;code&gt;.zip&lt;/code&gt; のように、形式に対応する拡張子のリストです。</target>
        </trans-unit>
        <trans-unit id="dff8ae65444da1337c633c3a82fc2c97e6c4ebf7" translate="yes" xml:space="preserve">
          <source>Registers the XML-RPC introspection functions &lt;code&gt;system.listMethods&lt;/code&gt;, &lt;code&gt;system.methodHelp&lt;/code&gt; and &lt;code&gt;system.methodSignature&lt;/code&gt;.</source>
          <target state="translated">XML-RPCイントロスペクション関数 &lt;code&gt;system.listMethods&lt;/code&gt; 、 &lt;code&gt;system.methodHelp&lt;/code&gt; および &lt;code&gt;system.methodSignature&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="0b24c061372e9006ab3dba21e01332b1f78875c0" translate="yes" xml:space="preserve">
          <source>Registers the XML-RPC multicall function system.multicall.</source>
          <target state="translated">XML-RPCマルチコール機能system.multicallを登録します。</target>
        </trans-unit>
        <trans-unit id="21f1b9fba98b063f1e01a48b68deb0fe5c932f64" translate="yes" xml:space="preserve">
          <source>Registers the file handler callback function &lt;em&gt;func&lt;/em&gt;. The &lt;em&gt;file&lt;/em&gt; argument may either be an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (such as a file or socket object), or an integer file descriptor. The &lt;em&gt;mask&lt;/em&gt; argument is an ORed combination of any of the three constants below. The callback is called as follows:</source>
          <target state="translated">ファイルハンドラーコールバック関数&lt;em&gt;funcを&lt;/em&gt;登録します。&lt;em&gt;ファイル&lt;/em&gt;引数のいずれかを有する対象であってもよい&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;（例えば、ファイルやソケットオブジェクトとして）法、または整数ファイル記述子。&lt;em&gt;マスク&lt;/em&gt;引数には、以下の3つの定数のいずれかの論理和の組み合わせです。コールバックは次のように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="00eb92c8b8f2eb8d829ae3e26e00670e31f68720" translate="yes" xml:space="preserve">
          <source>Registry Handle Objects</source>
          <target state="translated">レジストリハンドルオブジェクト</target>
        </trans-unit>
        <trans-unit id="0d479a6175499f959f3adaaac8b78ac75a72c8cd" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key allow you to access performance data. The data is not actually stored in the registry; the registry functions cause the system to collect the data from its source.</source>
          <target state="translated">このキーに従属するレジストリ エントリを使用すると、パフォーマンス データにアクセスできます。データは実際にはレジストリには保存されません。レジストリの機能により、システムはそのソースからデータを収集します。</target>
        </trans-unit>
        <trans-unit id="891d33cc3ca4b92db2b616c6c874f3d2eb036366" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the default user configuration for new users on the local computer and the user configuration for the current user.</source>
          <target state="translated">このキーに従属するレジストリ エントリは、ローカル コンピュータ上の新規ユーザーの既定のユーザー構成と、現在のユーザーのユーザー構成を定義します。</target>
        </trans-unit>
        <trans-unit id="0dcd07c12eb2712977e50c638f465638745a96ab" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the physical state of the computer, including data about the bus type, system memory, and installed hardware and software.</source>
          <target state="translated">このキーに従属するレジストリエントリは、バスタイプ、システムメモリ、インストールされているハードウェアおよびソフトウェアに関するデータなど、コンピュータの物理的な状態を定義します。</target>
        </trans-unit>
        <trans-unit id="40c4329d727d54c52d160922d278205eca8b3b6d" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define the preferences of the current user. These preferences include the settings of environment variables, data about program groups, colors, printers, network connections, and application preferences.</source>
          <target state="translated">このキーに従属するレジストリエントリは、現在のユーザーの環境設定を定義します。これらの環境設定には、環境変数の設定、プログラムグループ、色、プリンタ、ネットワーク接続、およびアプリケーションの環境設定に関するデータが含まれます。</target>
        </trans-unit>
        <trans-unit id="a734a77cb1b1cd6f9f28fe107f26bfe1d74de18c" translate="yes" xml:space="preserve">
          <source>Registry entries subordinate to this key define types (or classes) of documents and the properties associated with those types. Shell and COM applications use the information stored under this key.</source>
          <target state="translated">このキーに従属するレジストリエントリは、ドキュメントのタイプ(またはクラス)と、それらのタイプに関連付けられたプロパティを定義します。シェルおよび COM アプリケーションは、このキーの下に格納された情報を使用します。</target>
        </trans-unit>
        <trans-unit id="769c4ae00ec08ffb7efba4a0686555cb084e381b" translate="yes" xml:space="preserve">
          <source>Regression testing is best confined to dedicated objects or files. There are several options for organizing tests:</source>
          <target state="translated">回帰テストは、専用のオブジェクトまたはファイルに限定するのが最適です。テストを整理するにはいくつかのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="f9872d9ad98b2ae5a0752ca710959f64efa89b06" translate="yes" xml:space="preserve">
          <source>Regression testing.</source>
          <target state="translated">回帰テスト。</target>
        </trans-unit>
        <trans-unit id="469415c626b697430fa86fc9993ad32f63927e1f" translate="yes" xml:space="preserve">
          <source>Regular Expression</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="e556cc3de941b0839b7798d403a3735b8507eafa" translate="yes" xml:space="preserve">
          <source>Regular Expression Examples</source>
          <target state="translated">正規表現の例</target>
        </trans-unit>
        <trans-unit id="2d09d9c65ab0a1e1b60f7fdee405a4cc73b31eb2" translate="yes" xml:space="preserve">
          <source>Regular Expression Objects</source>
          <target state="translated">正規表現オブジェクト</target>
        </trans-unit>
        <trans-unit id="3d255bd9ce32e1d539253422b204d6f8d5be2aa6" translate="yes" xml:space="preserve">
          <source>Regular Expression Syntax</source>
          <target state="translated">正規表現構文</target>
        </trans-unit>
        <trans-unit id="2dd97ee527b620cafde5e92fbcb2c95497eed93a" translate="yes" xml:space="preserve">
          <source>Regular expressions beginning with &lt;code&gt;'^'&lt;/code&gt; can be used with &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; to restrict the match at the beginning of the string:</source>
          <target state="translated">&lt;code&gt;'^'&lt;/code&gt; で始まる正規表現を&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; で&lt;/a&gt;使用して、文字列の先頭での一致を制限できます。</target>
        </trans-unit>
        <trans-unit id="6d47a98032e08362b7f130e61db04cff15d0c211" translate="yes" xml:space="preserve">
          <source>Regular expressions can be concatenated to form new regular expressions; if &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt; are both regular expressions, then &lt;em&gt;AB&lt;/em&gt; is also a regular expression. In general, if a string &lt;em&gt;p&lt;/em&gt; matches &lt;em&gt;A&lt;/em&gt; and another string &lt;em&gt;q&lt;/em&gt; matches &lt;em&gt;B&lt;/em&gt;, the string &lt;em&gt;pq&lt;/em&gt; will match AB. This holds unless &lt;em&gt;A&lt;/em&gt; or &lt;em&gt;B&lt;/em&gt; contain low precedence operations; boundary conditions between &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt;; or have numbered group references. Thus, complex expressions can easily be constructed from simpler primitive expressions like the ones described here. For details of the theory and implementation of regular expressions, consult the Friedl book &lt;a href=&quot;#frie09&quot; id=&quot;id1&quot;&gt;[Frie09]&lt;/a&gt;, or almost any textbook about compiler construction.</source>
          <target state="translated">正規表現を連結して、新しい正規表現を作成できます。場合&lt;em&gt;A&lt;/em&gt;と&lt;em&gt;Bが&lt;/em&gt;両方とも正規表現であり、次いで&lt;em&gt;ABは&lt;/em&gt;また、正規表現です。一般に、文字列&lt;em&gt;pが&lt;/em&gt;&lt;em&gt;Aに&lt;/em&gt;一致し、別の文字列&lt;em&gt;qが&lt;/em&gt;&lt;em&gt;B&lt;/em&gt;に一致する場合、文字列&lt;em&gt;pq&lt;/em&gt;はABに一致します。これは、&lt;em&gt;A&lt;/em&gt;または&lt;em&gt;B&lt;/em&gt;に優先順位の低い演算が含まれていない限り、成り立つ。&lt;em&gt;A&lt;/em&gt;と&lt;em&gt;Bの&lt;/em&gt;間&lt;em&gt;の&lt;/em&gt;境界条件&lt;em&gt;&lt;/em&gt;;または、番号付きグループ参照があります。したがって、複雑な式は、ここで説明するような単純なプリミティブ式から簡単に構成できます。正規表現の理論と実装の詳細については、Friedlの本&lt;a href=&quot;#frie09&quot; id=&quot;id1&quot;&gt;[Frie09]&lt;/a&gt;またはコンパイラの構築に関するほとんどすべての教科書を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec9b77a5957eaf418ffffd72a87c45d90f1ded45" translate="yes" xml:space="preserve">
          <source>Regular expressions can contain both special and ordinary characters. Most ordinary characters, like &lt;code&gt;'A'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, or &lt;code&gt;'0'&lt;/code&gt;, are the simplest regular expressions; they simply match themselves. You can concatenate ordinary characters, so &lt;code&gt;last&lt;/code&gt; matches the string &lt;code&gt;'last'&lt;/code&gt;. (In the rest of this section, we&amp;rsquo;ll write RE&amp;rsquo;s in &lt;code&gt;this special style&lt;/code&gt;, usually without quotes, and strings to be matched &lt;code&gt;'in single quotes'&lt;/code&gt;.)</source>
          <target state="translated">正規表現には、特殊文字と通常の文字の両方を含めることができます。 &lt;code&gt;'A'&lt;/code&gt; 、 &lt;code&gt;'a'&lt;/code&gt; 、または &lt;code&gt;'0'&lt;/code&gt; などの最も一般的な文字は、最も単純な正規表現です。彼らは単に自分自身を一致させます。通常の文字を連結できるため、 &lt;code&gt;last&lt;/code&gt; は文字列 &lt;code&gt;'last'&lt;/code&gt; と一致します。 （このセクションの残りの部分では、REを通常は引用符なしで &lt;code&gt;this special style&lt;/code&gt; で記述し、文字列 &lt;code&gt;'in single quotes'&lt;/code&gt; 一致するようにします。）</target>
        </trans-unit>
        <trans-unit id="cd13ca3bb8d1c682d2d59d5f935beea7ebc60be8" translate="yes" xml:space="preserve">
          <source>Regular expressions use the backslash character (&lt;code&gt;'\'&lt;/code&gt;) to indicate special forms or to allow special characters to be used without invoking their special meaning. This collides with Python&amp;rsquo;s usage of the same character for the same purpose in string literals; for example, to match a literal backslash, one might have to write &lt;code&gt;'\\\\'&lt;/code&gt; as the pattern string, because the regular expression must be &lt;code&gt;\\&lt;/code&gt;, and each backslash must be expressed as &lt;code&gt;\\&lt;/code&gt; inside a regular Python string literal. Also, please note that any invalid escape sequences in Python&amp;rsquo;s usage of the backslash in string literals now generate a &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; and in the future this will become a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. This behaviour will happen even if it is a valid escape sequence for a regular expression.</source>
          <target state="translated">正規表現では、バックスラッシュ文字（ &lt;code&gt;'\'&lt;/code&gt; ）を使用して、特殊な形式を示すか、特殊な意味を呼び出さずに特殊文字を使用できます。これは、文字列リテラルにおける同じ目的のための同じ文字のPythonの使用と衝突します。たとえば、リテラルバックスラッシュに一致させるには、正規表現が &lt;code&gt;\\&lt;/code&gt; であり、各バックスラッシュが通常のPython文字列リテラル内で &lt;code&gt;\\&lt;/code&gt; として表現される必要があるため、パターン文字列として &lt;code&gt;'\\\\'&lt;/code&gt; を記述する必要がある場合があります。また、文字列リテラルでのバックスラッシュのPythonの使用法における無効なエスケープシーケンスは、&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;を生成することに注意してください。今後、これは&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; に&lt;/a&gt;なります。。この動作は、正規表現の有効なエスケープシーケンスであっても発生します。</target>
        </trans-unit>
        <trans-unit id="632284d6d44cd285a0879407d2b79c59fd92e9cc" translate="yes" xml:space="preserve">
          <source>Regular file.</source>
          <target state="translated">通常のファイル。</target>
        </trans-unit>
        <trans-unit id="b83c0cf0d07e7f0c79d79e1c5297b32511a517d3" translate="yes" xml:space="preserve">
          <source>Regular slicing (on the form &lt;code&gt;lower:upper&lt;/code&gt; or &lt;code&gt;lower:upper:step&lt;/code&gt;). Can occur only inside the &lt;em&gt;slice&lt;/em&gt; field of &lt;a href=&quot;#ast.Subscript&quot;&gt;&lt;code&gt;Subscript&lt;/code&gt;&lt;/a&gt;, either directly or as an element of &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常のスライス（ &lt;code&gt;lower:upper&lt;/code&gt; または &lt;code&gt;lower:upper:step&lt;/code&gt; の形式）。唯一の内部で発生する可能性が&lt;em&gt;スライス&lt;/em&gt;のフィールド&lt;a href=&quot;#ast.Subscript&quot;&gt; &lt;code&gt;Subscript&lt;/code&gt; &lt;/a&gt;直接またはの要素として、&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92e74a4e2e893412ec99eec29137ca19143363a0" translate="yes" xml:space="preserve">
          <source>Relationship to other Python modules</source>
          <target state="translated">他のPythonモジュールとの関係</target>
        </trans-unit>
        <trans-unit id="0a306d4bef0fa5b9e7915d6a274854e42f372a74" translate="yes" xml:space="preserve">
          <source>Release a lock, decrementing the recursion level. If after the decrement it is zero, reset the lock to unlocked (not owned by any thread), and if any other threads are blocked waiting for the lock to become unlocked, allow exactly one of them to proceed. If after the decrement the recursion level is still nonzero, the lock remains locked and owned by the calling thread.</source>
          <target state="translated">再帰レベルをデクリメントしながらロックを解除します。デクリメント後にゼロになった場合は、ロックをアンロック状態(どのスレッドも所有していない状態)にリセットし、ロックがアンロック状態になるのを待っている他のスレッドがブロックされている場合は、そのうちの1つだけを実行させてください。デクリメント後も再帰レベルが 0 以外の場合、ロックはロックされたままで、呼び出し元のスレッドが所有しています。</target>
        </trans-unit>
        <trans-unit id="55e983958dfae1027586eb59fe3a7b345a542b22" translate="yes" xml:space="preserve">
          <source>Release a lock, decrementing the recursion level. If after the decrement the recursion level is zero, reset the lock to unlocked (not owned by any process or thread) and if any other processes or threads are blocked waiting for the lock to become unlocked, allow exactly one of them to proceed. If after the decrement the recursion level is still nonzero, the lock remains locked and owned by the calling process or thread.</source>
          <target state="translated">再帰レベルをデクリメントしながらロックを解除します。デクリメント後に再帰レベルがゼロになった場合は、ロックをアンロック状態にリセットして (どのプロセスやスレッドも所有していない)、ロックがアンロック状態になるのを待っている他のプロセスやスレッドがブロックされている場合は、そのうちの 1 つだけを実行させてください。デクリメント後も再帰レベルが 0 以外の場合、ロックはロックされたままで、呼び出し元のプロセスまたはスレッドが所有しています。</target>
        </trans-unit>
        <trans-unit id="325db7a1cdbf77d318358ad23c85e5e1231225a2" translate="yes" xml:space="preserve">
          <source>Release a lock. This can be called from any process or thread, not only the process or thread which originally acquired the lock.</source>
          <target state="translated">ロックを解除します。これは、最初にロックを取得したプロセスやスレッドだけでなく、任意のプロセスやスレッドから呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="01dabcc102e3847783d7a1993fb3e86527f38974" translate="yes" xml:space="preserve">
          <source>Release a lock. This can be called from any thread, not only the thread which has acquired the lock.</source>
          <target state="translated">ロックを解除します。これは、ロックを取得したスレッドだけでなく、どのスレッドからでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a4d4829acf004545312af16978384e5279c0253f" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by &lt;em&gt;n&lt;/em&gt;. When it was zero on entry and other threads are waiting for it to become larger than zero again, wake up &lt;em&gt;n&lt;/em&gt; of those threads.</source>
          <target state="translated">セマフォを解放し、内部カウンタを&lt;em&gt;n&lt;/em&gt;ずつインクリメントします。エントリ時にゼロであり、他のスレッドが再びゼロより大きくなるのを待っている&lt;em&gt;場合&lt;/em&gt;、それらのスレッドの&lt;em&gt;n個&lt;/em&gt;をウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="f77f1092af6163d0d1eb73d1d4d09fcf952eda4e" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by one. Can wake up a task waiting to acquire the semaphore.</source>
          <target state="translated">セマフォを解放し、内部カウンタを 1 つインクリメントします。セマフォの取得を待っているタスクをウェイクアップすることができます。</target>
        </trans-unit>
        <trans-unit id="9451dc6afbeda9021e289fd403b79c86eee707df" translate="yes" xml:space="preserve">
          <source>Release a semaphore, incrementing the internal counter by one. When it was zero on entry and another thread is waiting for it to become larger than zero again, wake up that thread.</source>
          <target state="translated">セマフォを解放し、内部カウンタを 1 つインクリメントします。エントリー時にゼロだったスレッドが、別のスレッドが再びゼロよりも大きくなるのを待っているとき、そのスレッドをウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="f1fc58a6c69a6005894d2bcaddb143b7922c8c07" translate="yes" xml:space="preserve">
          <source>Release the lock on the mailbox, if any.</source>
          <target state="translated">郵便受けのロックを解除してください。</target>
        </trans-unit>
        <trans-unit id="b5e4913e6b00fb0411556eedb8df5d4e15248e9e" translate="yes" xml:space="preserve">
          <source>Release the lock.</source>
          <target state="translated">ロックを解除します。</target>
        </trans-unit>
        <trans-unit id="902ed4cb647c5987fae4a3f474bae31539906133" translate="yes" xml:space="preserve">
          <source>Release the underlying buffer exposed by the PickleBuffer object.</source>
          <target state="translated">PickleBuffer オブジェクトによって公開されている基礎となるバッファを解放します。</target>
        </trans-unit>
        <trans-unit id="718b6fe96e3c4e49603e32cb056705892983d6b1" translate="yes" xml:space="preserve">
          <source>Release the underlying buffer exposed by the memoryview object. Many objects take special actions when a view is held on them (for example, a &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; would temporarily forbid resizing); therefore, calling release() is handy to remove these restrictions (and free any dangling resources) as soon as possible.</source>
          <target state="translated">memoryviewオブジェクトによって公開されている基になるバッファーを解放します。多くのオブジェクトは、ビューが保持されているときに特別なアクションを実行します（たとえば、&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;は一時的にサイズ変更を禁止します）。したがって、release（）を呼び出すことは、これらの制限をできるだけ早く（そして未解決のリソースを解放するために）便利です。</target>
        </trans-unit>
        <trans-unit id="dfdddac609bc6525864a46420d173e2db58b56da" translate="yes" xml:space="preserve">
          <source>Release the underlying lock.</source>
          <target state="translated">下のロックを解除します。</target>
        </trans-unit>
        <trans-unit id="cee554c3a4338184c2c0a12178930f6283f66e65" translate="yes" xml:space="preserve">
          <source>Release the underlying lock. This method calls the corresponding method on the underlying lock; there is no return value.</source>
          <target state="translated">基礎となるロックを解放します。このメソッドは、下位のロックに対応するメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5b6171647eb49e3293f844f2cd7952949833b937" translate="yes" xml:space="preserve">
          <source>Releases the lock. The lock must have been acquired earlier, but not necessarily by the same thread.</source>
          <target state="translated">ロックを解除します。ロックは以前に取得したものである必要がありますが、必ずしも同じスレッドで取得したとは限りません。</target>
        </trans-unit>
        <trans-unit id="9f09a95b89d92f3fc9ea74fc087dcf0c058b1b66" translate="yes" xml:space="preserve">
          <source>Releases the thread lock acquired with &lt;a href=&quot;#logging.Handler.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.Handler.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; で&lt;/a&gt;取得したスレッドロックを解放します。</target>
        </trans-unit>
        <trans-unit id="2dab78af2001df694dd992ceaa491a83fa95e598" translate="yes" xml:space="preserve">
          <source>Reload a previously imported &lt;em&gt;module&lt;/em&gt;. The argument must be a module object, so it must have been successfully imported before. This is useful if you have edited the module source file using an external editor and want to try out the new version without leaving the Python interpreter. The return value is the module object (which can be different if re-importing causes a different object to be placed in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">以前にインポートした&lt;em&gt;モジュールを&lt;/em&gt;リロードし&lt;em&gt;ます&lt;/em&gt;。引数はモジュールオブジェクトでなければならないため、以前に正常にインポートされている必要があります。これは、外部エディターを使用してモジュールソースファイルを編集し、Pythonインタープリターを離れずに新しいバージョンを試してみたい場合に便利です。戻り値はモジュールオブジェクトです（再インポートによって異なるオブジェクトが&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;に配置される場合は異なる場合があります）。</target>
        </trans-unit>
        <trans-unit id="95f9e949daa1abd7b409e941cd024e8e763fdd73" translate="yes" xml:space="preserve">
          <source>Remark: Every sequence of mouse-move-events on a turtle is preceded by a mouse-click event on that turtle.</source>
          <target state="translated">備考.カメのマウス移動イベントのすべてのシーケンスの前に、そのカメのマウスクリックイベントがあります。</target>
        </trans-unit>
        <trans-unit id="0fd7042c55c4be97e3a3234963e74788ed71c483" translate="yes" xml:space="preserve">
          <source>Remembering which future statements the user has entered, so subsequent input can be compiled with these in effect.</source>
          <target state="translated">ユーザーが入力した未来のステートメントを記憶しているので、後続の入力はこれらを有効にしてコンパイルすることができます。</target>
        </trans-unit>
        <trans-unit id="a28251e34f334c2e9198cead3c84396b0209045b" translate="yes" xml:space="preserve">
          <source>Remote I/O error</source>
          <target state="translated">リモートI/Oエラー</target>
        </trans-unit>
        <trans-unit id="f7361e6611d8de8bcd908886067c50c68d92c5e2" translate="yes" xml:space="preserve">
          <source>Remote address changed</source>
          <target state="translated">リモートアドレス変更</target>
        </trans-unit>
        <trans-unit id="b95af5b59657ebe99f9655796445d0dfd2105a08" translate="yes" xml:space="preserve">
          <source>Remove (&lt;code&gt;-s&lt;/code&gt;) or append (&lt;code&gt;-p&lt;/code&gt;) the given prefix of paths recorded in the &lt;code&gt;.pyc&lt;/code&gt; files. Cannot be combined with &lt;code&gt;-d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.pyc&lt;/code&gt; ファイルに記録されているパスの指定されたプレフィックスを削除（ &lt;code&gt;-s&lt;/code&gt; ）または追加（ &lt;code&gt;-p&lt;/code&gt; ）します。 &lt;code&gt;-d&lt;/code&gt; と組み合わせることはできません。</target>
        </trans-unit>
        <trans-unit id="6f2f29a523b42c7dff73566cc22f5a5f3d6d714b" translate="yes" xml:space="preserve">
          <source>Remove (delete) the directory &lt;em&gt;path&lt;/em&gt;. If the directory does not exist or is not empty, an &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised respectively. In order to remove whole directory trees, &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt;&lt;code&gt;shutil.rmtree()&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="translated">ディレクトリ&lt;em&gt;パスを&lt;/em&gt;削除（削除）し&lt;em&gt;ます&lt;/em&gt;。ディレクトリが存在しないか空でない場合、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;がそれぞれ発生します。ディレクトリツリー全体を削除するには、&lt;a href=&quot;shutil#shutil.rmtree&quot;&gt; &lt;code&gt;shutil.rmtree()&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="09092b51cc111894ec2a0792cdf12ec52bfefd86" translate="yes" xml:space="preserve">
          <source>Remove (delete) the file &lt;em&gt;path&lt;/em&gt;. If &lt;em&gt;path&lt;/em&gt; is a directory, an &lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt;&lt;code&gt;IsADirectoryError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; to remove directories.</source>
          <target state="translated">ファイル&lt;em&gt;パスを&lt;/em&gt;削除（削除）します。場合は&lt;em&gt;、パスが&lt;/em&gt;ディレクトリである、&lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt; &lt;code&gt;IsADirectoryError&lt;/code&gt; が&lt;/a&gt;発生します。&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt;を使用して、ディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="54ccd5262122a2bb90c8d8e7c34e44ceabccfb23" translate="yes" xml:space="preserve">
          <source>Remove (delete) the file &lt;em&gt;path&lt;/em&gt;. This function is semantically identical to &lt;a href=&quot;#os.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;; the &lt;code&gt;unlink&lt;/code&gt; name is its traditional Unix name. Please see the documentation for &lt;a href=&quot;#os.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">ファイル&lt;em&gt;パスを&lt;/em&gt;削除（削除）します。この関数は、意味的には&lt;a href=&quot;#os.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と同じです。 &lt;code&gt;unlink&lt;/code&gt; 名は、その伝統的なUnix名です。詳細については、&lt;a href=&quot;#os.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="df4a3ac637d825590d00692389c347fb71446c49" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;.pyc&lt;/code&gt; files on uninstall.</source>
          <target state="translated">アンインストール時に &lt;code&gt;.pyc&lt;/code&gt; ファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="c5c1787a7462be5a8758ddc2de62b0a3c10ec4a0" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;d[key]&lt;/code&gt; from &lt;em&gt;d&lt;/em&gt;. Raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;key&lt;/em&gt; is not in the map.</source>
          <target state="translated">削除 &lt;code&gt;d[key]&lt;/code&gt; から&lt;em&gt;D&lt;/em&gt;。&lt;em&gt;キー&lt;/em&gt;がマップにない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生&lt;/a&gt;させます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90b0e08e343d399962a6bd8d2c41705a75aa6b66" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;callback&lt;/em&gt; from the callbacks list.</source>
          <target state="translated">&lt;em&gt;コールバック&lt;/em&gt;をコールバックリストから削除し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="84f403853efe764e44908458c87622e6eb6beaeb" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;func&lt;/em&gt; from the list of functions to be run at interpreter shutdown. After calling &lt;a href=&quot;#atexit.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;func&lt;/em&gt; is guaranteed not to be called when the interpreter shuts down, even if it was registered more than once. &lt;a href=&quot;#atexit.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; silently does nothing if &lt;em&gt;func&lt;/em&gt; was not previously registered.</source>
          <target state="translated">インタプリタのシャットダウン時に実行される関数のリストから&lt;em&gt;func&lt;/em&gt;を削除します。&lt;a href=&quot;#atexit.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; を&lt;/a&gt;呼び出した後、インタプリタが複数回登録されていても、シャットダウン時に&lt;em&gt;func&lt;/em&gt;が呼び出されないことが保証されています。&lt;em&gt;func&lt;/em&gt;が以前に登録されていない場合、&lt;a href=&quot;#atexit.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt;は何も&lt;em&gt;通知&lt;/em&gt;せずに何もしません。</target>
        </trans-unit>
        <trans-unit id="9d3c177647ed076f35c66ee60a80e644088ab631" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;items&lt;/em&gt; from the selection.</source>
          <target state="translated">選択から&lt;em&gt;アイテム&lt;/em&gt;を削除し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6547d9b9085b460bd46210f1be5e085366c204b8" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;label&lt;/em&gt; from the list of labels on the message.</source>
          <target state="translated">メッセージのラベルのリストから&lt;em&gt;ラベル&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="0ea60577a9b7e090db0bc3612337d5ddc1ef3f63" translate="yes" xml:space="preserve">
          <source>Remove &lt;em&gt;sequence&lt;/em&gt; from the list of sequences that include this message.</source>
          <target state="translated">このメッセージを含むシーケンスのリストから&lt;em&gt;シーケンス&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="ca9b7932d8450d599cb6979beda8edf16cbfebf9" translate="yes" xml:space="preserve">
          <source>Remove a child node. &lt;em&gt;oldChild&lt;/em&gt; must be a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;oldChild&lt;/em&gt; is returned on success. If &lt;em&gt;oldChild&lt;/em&gt; will not be used further, its &lt;code&gt;unlink()&lt;/code&gt; method should be called.</source>
          <target state="translated">子ノードを削除します。&lt;em&gt;oldChild&lt;/em&gt;はこのノードの子である必要があります。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;oldChild&lt;/em&gt;は成功すると返されます。&lt;em&gt;oldChild&lt;/em&gt;をこれ以上使用しない場合は、その &lt;code&gt;unlink()&lt;/code&gt; メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e638afc65f07e23d8059456ca5203ff65e8d63b3" translate="yes" xml:space="preserve">
          <source>Remove a file descriptor being tracked by a polling object. Just like the &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; method, &lt;em&gt;fd&lt;/em&gt; can be an integer or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer.</source>
          <target state="translated">ポーリングオブジェクトによって追跡されているファイル記述子を削除します。同じように&lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;メソッド、&lt;em&gt;fdは&lt;/em&gt;持つ整数またはオブジェクトであることができる&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;整数を返す方法。</target>
        </trans-unit>
        <trans-unit id="d406b316abb4db3447872fecf4363a68503730f5" translate="yes" xml:space="preserve">
          <source>Remove a file descriptor being tracked by a polling object. Just like the &lt;a href=&quot;#select.poll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; method, &lt;em&gt;fd&lt;/em&gt; can be an integer or an object with a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method that returns an integer.</source>
          <target state="translated">ポーリングオブジェクトによって追跡されているファイル記述子を削除します。同じように&lt;a href=&quot;#select.poll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;メソッド、&lt;em&gt;fdは&lt;/em&gt;持つ整数またはオブジェクトであることができる&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;整数を返す方法。</target>
        </trans-unit>
        <trans-unit id="4acb1e801dd112b656a9906b873c911e3baffd17" translate="yes" xml:space="preserve">
          <source>Remove a handler for a &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;ハンドラを削除します。</target>
        </trans-unit>
        <trans-unit id="f5487a3ec602c3f128da1167605d573da7caf65f" translate="yes" xml:space="preserve">
          <source>Remove a registered file descriptor from the epoll object.</source>
          <target state="translated">epoll オブジェクトから登録されたファイル記述子を削除します。</target>
        </trans-unit>
        <trans-unit id="2de339515154b23af33759d56687db0b9afa4c8b" translate="yes" xml:space="preserve">
          <source>Remove a registered result. Once a result has been removed then &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; will no longer be called on that result object in response to a control-c.</source>
          <target state="translated">登録した結果を削除します。結果が削除されると、control-cに応答して、その結果オブジェクトで&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;が呼び出されなくなります。</target>
        </trans-unit>
        <trans-unit id="e04b32723d8dc93cf14a08faa924d4dc0301551d" translate="yes" xml:space="preserve">
          <source>Remove all elements from the deque leaving it with length 0.</source>
          <target state="translated">長さ0のままdequeからすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="6b09a518a4a9b4d337aff6605fc4365f56b91d14" translate="yes" xml:space="preserve">
          <source>Remove all elements from the set.</source>
          <target state="translated">セットからすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="f290d8d2e6e7afb1c339b0bbfd97a9c8e21061c8" translate="yes" xml:space="preserve">
          <source>Remove all items from the dictionary.</source>
          <target state="translated">辞書からすべての項目を削除します。</target>
        </trans-unit>
        <trans-unit id="a70b106bdf49173c73982c4f4890c1bfd2aece77" translate="yes" xml:space="preserve">
          <source>Remove an attribute by name. If there is no matching attribute, a &lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt;&lt;code&gt;NotFoundErr&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">名前で属性を削除します。一致する属性がない場合、&lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt; &lt;code&gt;NotFoundErr&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6e44bc40606bdaa4ca11f7c736e84089c476e498" translate="yes" xml:space="preserve">
          <source>Remove an attribute by name. Note that it uses a localName, not a qname. No exception is raised if there is no matching attribute.</source>
          <target state="translated">名前で属性を削除します。qnameではなくlocalNameを使用することに注意してください。マッチする属性がない場合は例外は発生しません。</target>
        </trans-unit>
        <trans-unit id="469bcb6f3a7989704b2f3003fd50cbe3be114703" translate="yes" xml:space="preserve">
          <source>Remove and return &lt;em&gt;oldAttr&lt;/em&gt; from the attribute list, if present. If &lt;em&gt;oldAttr&lt;/em&gt; is not present, &lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt;&lt;code&gt;NotFoundErr&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">存在する場合は、属性リストから&lt;em&gt;oldAttr&lt;/em&gt;を削除して返します。場合&lt;em&gt;oldAttrが&lt;/em&gt;存在しない場合、&lt;a href=&quot;#xml.dom.NotFoundErr&quot;&gt; &lt;code&gt;NotFoundErr&lt;/code&gt; が送出&lt;/a&gt;上げています。</target>
        </trans-unit>
        <trans-unit id="31ae42d327afacec2d994c0287d142eb91fc9ce1" translate="yes" xml:space="preserve">
          <source>Remove and return a &lt;code&gt;(key, value)&lt;/code&gt; pair from the dictionary. Pairs are returned in</source>
          <target state="translated">辞書から &lt;code&gt;(key, value)&lt;/code&gt; ペアを削除して返します。ペアが返されます</target>
        </trans-unit>
        <trans-unit id="2b531f41e80397125057b4d77ec51f25199985f1" translate="yes" xml:space="preserve">
          <source>Remove and return an arbitrary element from the set. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the set is empty.</source>
          <target state="translated">セットから任意の要素を削除して返します。発生させ&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外を&lt;/a&gt;セットが空の場合。</target>
        </trans-unit>
        <trans-unit id="d7da6e1247e14313ead2c906151c6fa54b3b8670" translate="yes" xml:space="preserve">
          <source>Remove and return an element from the left side of the deque. If no elements are present, raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">dequeの左側から要素を削除して返します。要素が存在しない場合は、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="e670a3f5985cfc119644d78b3e84db994738a729" translate="yes" xml:space="preserve">
          <source>Remove and return an element from the right side of the deque. If no elements are present, raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">dequeの右側から要素を削除して返します。要素が存在しない場合は、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="9dfba53adcb0d3b6fc3163fef06b9e1ac4b32069" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue.</source>
          <target state="translated">キューからアイテムを削除して返却します。</target>
        </trans-unit>
        <trans-unit id="c6e8014aef762eb004313f855775293621c0f2fe" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If optional args &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until an item is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; exception if no item was available within that time. Otherwise (block is &lt;code&gt;False&lt;/code&gt;), return an item if one is immediately available, else raise the &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">キューからアイテムを削除して返します。オプションのargs &lt;em&gt;ブロック&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （デフォルト）で&lt;em&gt;タイムアウト&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、アイテムが利用可能になるまで必要に応じてブロックします。&lt;em&gt;timeout&lt;/em&gt;が正の数の場合、最大で&lt;em&gt;timeout&lt;/em&gt;秒ブロックし、その時間内に使用可能なアイテムがない場合は&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;例外を発生させます。それ以外の場合（ブロックは &lt;code&gt;False&lt;/code&gt; ）、アイテムがすぐに利用できる場合はアイテムを返し、そうでない場合は&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;例外を発生させます（その場合、&lt;em&gt;タイムアウト&lt;/em&gt;は無視されます）。</target>
        </trans-unit>
        <trans-unit id="8f5188be7942eda827c4be37e886678fbe47c0e4" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If optional args &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until an item is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;#queue.Empty&quot;&gt;&lt;code&gt;Empty&lt;/code&gt;&lt;/a&gt; exception if no item was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is false), return an item if one is immediately available, else raise the &lt;a href=&quot;#queue.Empty&quot;&gt;&lt;code&gt;Empty&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">キューからアイテムを削除して返します。オプションのargs &lt;em&gt;ブロック&lt;/em&gt;がtrueで&lt;em&gt;タイムアウト&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、アイテムが利用可能になるまで必要に応じてブロックします。&lt;em&gt;timeout&lt;/em&gt;が正の数の場合、最大で&lt;em&gt;timeout&lt;/em&gt;秒ブロックされ、その時間内に使用可能なアイテムがない場合は、&lt;a href=&quot;#queue.Empty&quot;&gt; &lt;code&gt;Empty&lt;/code&gt; &lt;/a&gt;例外が発生します。それ以外の場合（&lt;em&gt;block&lt;/em&gt;がfalse）、アイテムがすぐに利用できる場合はアイテムを返し、そうでない場合は&lt;a href=&quot;#queue.Empty&quot;&gt; &lt;code&gt;Empty&lt;/code&gt; &lt;/a&gt;例外を発生させます（その場合、&lt;em&gt;タイムアウト&lt;/em&gt;は無視されます）。</target>
        </trans-unit>
        <trans-unit id="4088c96f1ba17057a9e3e69be2cd717210daaaf7" translate="yes" xml:space="preserve">
          <source>Remove and return an item from the queue. If queue is empty, wait until an item is available.</source>
          <target state="translated">キューからアイテムを削除して返却します。キューが空の場合は、アイテムが空になるまで待ちます。</target>
        </trans-unit>
        <trans-unit id="e2798ddc01b549b242184471dd3b04f03bffd93d" translate="yes" xml:space="preserve">
          <source>Remove any common leading whitespace from every line in &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;テキストの&lt;/em&gt;すべての行から共通の先行空白を削除し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1901bbdc80057b98ac9f62bfec2a78cea30ba6e3" translate="yes" xml:space="preserve">
          <source>Remove any deletion marks for the mailbox.</source>
          <target state="translated">メールボックスの削除マークを削除します。</target>
        </trans-unit>
        <trans-unit id="faa276c7a3ecba1a269e9f752634eb6ab450d6a4" translate="yes" xml:space="preserve">
          <source>Remove any parents.</source>
          <target state="translated">どんな親でも削除してください。</target>
        </trans-unit>
        <trans-unit id="cd474cdf9d281d6e3eb511a782e0bb87e8f7f8c0" translate="yes" xml:space="preserve">
          <source>Remove any unhandled source text from the input buffer.</source>
          <target state="translated">入力バッファから処理されていないソーステキストを削除します。</target>
        </trans-unit>
        <trans-unit id="218d884dd50dc8dcf49c39d48acbbe88b3efc79b" translate="yes" xml:space="preserve">
          <source>Remove attribute &lt;em&gt;attr&lt;/em&gt; from the &amp;ldquo;background&amp;rdquo; set applied to all writes to the current window.</source>
          <target state="translated">現在のウィンドウへのすべての書き込みに適用される「バックグラウンド」セットから属性&lt;em&gt;attr&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="f1939bdbb558415e500fd3e239783907685058e1" translate="yes" xml:space="preserve">
          <source>Remove directories recursively. Works like &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; except that, if the leaf directory is successfully removed, &lt;a href=&quot;#os.removedirs&quot;&gt;&lt;code&gt;removedirs()&lt;/code&gt;&lt;/a&gt; tries to successively remove every parent directory mentioned in &lt;em&gt;path&lt;/em&gt; until an error is raised (which is ignored, because it generally means that a parent directory is not empty). For example, &lt;code&gt;os.removedirs('foo/bar/baz')&lt;/code&gt; will first remove the directory &lt;code&gt;'foo/bar/baz'&lt;/code&gt;, and then remove &lt;code&gt;'foo/bar'&lt;/code&gt; and &lt;code&gt;'foo'&lt;/code&gt; if they are empty. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if the leaf directory could not be successfully removed.</source>
          <target state="translated">ディレクトリを再帰的に削除します。&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; と&lt;/a&gt;同様に機能しますが、リーフディレクトリが正常に削除された場合、&lt;a href=&quot;#os.removedirs&quot;&gt; &lt;code&gt;removedirs()&lt;/code&gt; &lt;/a&gt;は、エラーが発生するまで&lt;em&gt;パスに&lt;/em&gt;記載されているすべての親ディレクトリを順次削除しようとします（通常、親ディレクトリが空ではないため無視されます） ）。たとえば、 &lt;code&gt;os.removedirs('foo/bar/baz')&lt;/code&gt; は最初にディレクトリ &lt;code&gt;'foo/bar/baz'&lt;/code&gt; を削除し、次に &lt;code&gt;'foo/bar'&lt;/code&gt; と &lt;code&gt;'foo'&lt;/code&gt; が空の場合は削除します。発生させ&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のを&lt;/a&gt;葉のディレクトリが正常に削除されなかった場合。</target>
        </trans-unit>
        <trans-unit id="8830b3ed7b2b6ea4e93819896c3612feb5403c45" translate="yes" xml:space="preserve">
          <source>Remove element &lt;em&gt;elem&lt;/em&gt; from the set if it is present.</source>
          <target state="translated">要素&lt;em&gt;elem&lt;/em&gt;が存在する場合は、セットから削除します。</target>
        </trans-unit>
        <trans-unit id="9888fcac5accfc7a8b64af98cef05a92569503a4" translate="yes" xml:space="preserve">
          <source>Remove element &lt;em&gt;elem&lt;/em&gt; from the set. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;elem&lt;/em&gt; is not contained in the set.</source>
          <target state="translated">要素&lt;em&gt;elem&lt;/em&gt;をセットから削除します。発生させ&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外を&lt;/a&gt;場合&lt;em&gt;のelemは&lt;/em&gt;セットに含まれていません。</target>
        </trans-unit>
        <trans-unit id="46fb222523969621a21f6c33b70bc80f50eae94a" translate="yes" xml:space="preserve">
          <source>Remove history item specified by its position from the history. The position is zero-based. This calls &lt;code&gt;remove_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">位置から指定された履歴アイテムを履歴から削除します。位置はゼロベースです。これは、基礎となるライブラリの &lt;code&gt;remove_history()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f1f060055dfc5be6a01d79073813b22ef0c00fc" translate="yes" xml:space="preserve">
          <source>Remove leading # or ## from selected lines.</source>
          <target state="translated">選択された行の先頭の#または##を削除します。</target>
        </trans-unit>
        <trans-unit id="e88117b20c99b1cfd4fc97904478939f846183a3" translate="yes" xml:space="preserve">
          <source>Remove modules except for &lt;em&gt;oldmodules&lt;/em&gt; and &lt;code&gt;encodings&lt;/code&gt; in order to preserve internal cache.</source>
          <target state="translated">内部キャッシュを保持するために、&lt;em&gt;古い&lt;/em&gt;モジュールと &lt;code&gt;encodings&lt;/code&gt; 以外のモジュールを削除します。</target>
        </trans-unit>
        <trans-unit id="39143687d06562bc974381cd208300718aae9057" translate="yes" xml:space="preserve">
          <source>Remove named header from the request instance (both from regular and unredirected headers).</source>
          <target state="translated">リクエストインスタンスから名前付きヘッダを削除します (通常のヘッダと無指示のヘッダの両方から)。</target>
        </trans-unit>
        <trans-unit id="da54f37cf901136049487b5d8c3b565cc2e92d6c" translate="yes" xml:space="preserve">
          <source>Remove the archive format &lt;em&gt;name&lt;/em&gt; from the list of supported formats.</source>
          <target state="translated">サポートされている形式のリストからアーカイブ形式&lt;em&gt;名を&lt;/em&gt;削除します。</target>
        </trans-unit>
        <trans-unit id="cb6d6cfc9c9b17d28aae0d871bc79d87673c7830" translate="yes" xml:space="preserve">
          <source>Remove the directory by calling &lt;strong&gt;close()&lt;/strong&gt; on the returned object or using it in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">返されたオブジェクトで&lt;strong&gt;close（）&lt;/strong&gt;を呼び出すか、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用して、ディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="605c8cdfcaf234da889154b875a4c1cf16b2c877" translate="yes" xml:space="preserve">
          <source>Remove the directory by calling &lt;strong&gt;close()&lt;/strong&gt; on the returned object or using it in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">返されたオブジェクトで&lt;strong&gt;close（）&lt;/strong&gt;を呼び出すか、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用して、ディレクトリーを削除します。</target>
        </trans-unit>
        <trans-unit id="1a219e6650b0c2e74baaa254405797ad3caabe43" translate="yes" xml:space="preserve">
          <source>Remove the directory named &lt;em&gt;dirname&lt;/em&gt; on the server.</source>
          <target state="translated">サーバー上の&lt;em&gt;dirname&lt;/em&gt;という名前のディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="a0726ba95221ef1651c5cdfff5fa801955a269aa" translate="yes" xml:space="preserve">
          <source>Remove the event from the queue. If &lt;em&gt;event&lt;/em&gt; is not an event currently in the queue, this method will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キューからイベントを削除します。&lt;em&gt;event&lt;/em&gt;が現在キューにある&lt;em&gt;イベントで&lt;/em&gt;はない場合、このメソッドは&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6a24d3ea5e0575caadaba7127c684bb9a116e0bc" translate="yes" xml:space="preserve">
          <source>Remove the file named &lt;em&gt;filename&lt;/em&gt; from the server. If successful, returns the text of the response, otherwise raises &lt;a href=&quot;#ftplib.error_perm&quot;&gt;&lt;code&gt;error_perm&lt;/code&gt;&lt;/a&gt; on permission errors or &lt;a href=&quot;#ftplib.error_reply&quot;&gt;&lt;code&gt;error_reply&lt;/code&gt;&lt;/a&gt; on other errors.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;をサーバーから削除します。成功した場合、応答のテキストを返します。それ以外の場合は、権限エラーの場合は&lt;a href=&quot;#ftplib.error_perm&quot;&gt; &lt;code&gt;error_perm&lt;/code&gt; &lt;/a&gt;を、その他のエラーの場合は&lt;a href=&quot;#ftplib.error_reply&quot;&gt; &lt;code&gt;error_reply&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="ab59243c5f0140e1d9f8f50f8faaa896333624e1" translate="yes" xml:space="preserve">
          <source>Remove the first occurrence of &lt;em&gt;value&lt;/em&gt;. If not found, raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt;の最初の出現を削除し&lt;em&gt;ます&lt;/em&gt;。見つからない場合は、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8410a84caa24fe1396f171fc4f673a31805ea5fd" translate="yes" xml:space="preserve">
          <source>Remove the first occurrence of &lt;em&gt;x&lt;/em&gt; from the array.</source>
          <target state="translated">配列から最初に出現する&lt;em&gt;xを&lt;/em&gt;削除します。</target>
        </trans-unit>
        <trans-unit id="06b253ee2dacd7c2fac34b37b9786fb546bbfa46" translate="yes" xml:space="preserve">
          <source>Remove the given parameter completely from the &lt;em&gt;Content-Type&lt;/em&gt; header. The header will be re-written in place without the parameter or its value. All values will be quoted as necessary unless &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default is &lt;code&gt;True&lt;/code&gt;). Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative to &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">指定されたパラメーターを&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーから完全に削除します。ヘッダーは、パラメーターまたはその値なしで所定の位置に再書き込みされます。&lt;em&gt;requote&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; （デフォルトは &lt;code&gt;True&lt;/code&gt; ）でない限り、すべての値は必要に応じて引用されます。オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は、&lt;em&gt;Content-Typeの&lt;/em&gt;代替を指定します。</target>
        </trans-unit>
        <trans-unit id="eecf14ec682619af0362513d29dbc587c2ed96f0" translate="yes" xml:space="preserve">
          <source>Remove the given parameter completely from the &lt;em&gt;Content-Type&lt;/em&gt; header. The header will be re-written in place without the parameter or its value. Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative to &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">指定されたパラメーターを&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーから完全に削除します。ヘッダーは、パラメーターまたはその値なしで所定の位置に再書き込みされます。オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は、&lt;em&gt;Content-Typeの&lt;/em&gt;代替を指定します。</target>
        </trans-unit>
        <trans-unit id="a7966794729359a57bb35aa79983ef87245ec907" translate="yes" xml:space="preserve">
          <source>Remove the handler for the &lt;em&gt;sig&lt;/em&gt; signal.</source>
          <target state="translated">&lt;em&gt;sig&lt;/em&gt;シグナルのハンドラーを削除します。</target>
        </trans-unit>
        <trans-unit id="5278cbb01c31e671814ad20e41d470025918680f" translate="yes" xml:space="preserve">
          <source>Remove the module named &lt;em&gt;module_name&lt;/em&gt; from &lt;code&gt;sys.modules&lt;/code&gt; and delete any byte-compiled files of the module.</source>
          <target state="translated">&lt;em&gt;module_name&lt;/em&gt;という名前のモジュールを &lt;code&gt;sys.modules&lt;/code&gt; から削除し、モジュールのバイトコンパイル済みファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="7a87dc1e2478c072cb792ee6591f8dc2d2026140" translate="yes" xml:space="preserve">
          <source>Remove the payload and all of the &lt;code&gt;Content-&lt;/code&gt; headers, leaving all other headers intact and in their original order.</source>
          <target state="translated">ペイロードとすべての &lt;code&gt;Content-&lt;/code&gt; ヘッダーを削除し、他のすべてのヘッダーはそのままにして、元の順序のままにします。</target>
        </trans-unit>
        <trans-unit id="3bf2bebbd987c72c8779a2b8195a4ca66c985e00" translate="yes" xml:space="preserve">
          <source>Remove the payload and all of the headers.</source>
          <target state="translated">ペイロードとすべてのヘッダを削除します。</target>
        </trans-unit>
        <trans-unit id="86612e35ce925f33783538d1a60f6935d18f9d27" translate="yes" xml:space="preserve">
          <source>Remove the specified &lt;em&gt;option&lt;/em&gt; from the specified &lt;em&gt;section&lt;/em&gt;. If the section does not exist, raise &lt;a href=&quot;#configparser.NoSectionError&quot;&gt;&lt;code&gt;NoSectionError&lt;/code&gt;&lt;/a&gt;. If the option existed to be removed, return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;em&gt;セクション&lt;/em&gt;から指定された&lt;em&gt;オプション&lt;/em&gt;を削除します。セクションが存在しない場合は、&lt;a href=&quot;#configparser.NoSectionError&quot;&gt; &lt;code&gt;NoSectionError&lt;/code&gt; を送出し&lt;/a&gt;ます。削除するオプションが存在する場合は、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="167f0847a5baf3fc7c48f947592008cef0611efe" translate="yes" xml:space="preserve">
          <source>Remove the specified &lt;em&gt;section&lt;/em&gt; from the configuration. If the section in fact existed, return &lt;code&gt;True&lt;/code&gt;. Otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">指定された&lt;em&gt;セクション&lt;/em&gt;を構成から削除します。セクションが実際に存在する場合は、 &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="931133657f7bdcc0493ec989a46c723f6066810a" translate="yes" xml:space="preserve">
          <source>Remove the value of &lt;em&gt;a&lt;/em&gt; at index &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">値が削除インデックスで&lt;em&gt;B&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b870f044d1fabe896b3c74257cc3433e2d316c38" translate="yes" xml:space="preserve">
          <source>Remove this directory. The directory must be empty.</source>
          <target state="translated">このディレクトリを削除します。このディレクトリは空でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3ec51e7bc1c1b4c94fdbd6fd566496777c4b7b30" translate="yes" xml:space="preserve">
          <source>Remove this file or symbolic link. If the path points to a directory, use &lt;a href=&quot;#pathlib.Path.rmdir&quot;&gt;&lt;code&gt;Path.rmdir()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このファイルまたはシンボリックリンクを削除します。パスがディレクトリを指している場合は、代わりに&lt;a href=&quot;#pathlib.Path.rmdir&quot;&gt; &lt;code&gt;Path.rmdir()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="06a9c625676ef7e3160422e80b7defafd5c2de77" translate="yes" xml:space="preserve">
          <source>Remove trailing space and other whitespace characters after the last non-whitespace character of a line by applying str.rstrip to each line, including lines within multiline strings. Except for Shell windows, remove extra newlines at the end of the file.</source>
          <target state="translated">str.rstrip を複数行の文字列内の行を含む各行に適用することで、行の最後の空白以外の文字の後にあるスペースやその他の空白文字を削除します。シェルウィンドウを除いて、ファイルの最後にある余分な改行を削除します。</target>
        </trans-unit>
        <trans-unit id="61b70a5898add9d0be465d7351173d1adbc05a3a" translate="yes" xml:space="preserve">
          <source>Removes &lt;em&gt;subelement&lt;/em&gt; from the element. Unlike the find* methods this method compares elements based on the instance identity, not on tag value or contents.</source>
          <target state="translated">&lt;em&gt;要素&lt;/em&gt;から&lt;em&gt;サブ要素&lt;/em&gt;を削除します。find *メソッドとは異なり、このメソッドはタグの値や内容ではなく、インスタンスのアイデンティティに基づいて要素を比較します。</target>
        </trans-unit>
        <trans-unit id="dd2c5eeb1fd92545e05f12c347fe9049c679df64" translate="yes" xml:space="preserve">
          <source>Removes a named value from a registry key.</source>
          <target state="translated">レジストリ キーから名前付きの値を削除します。</target>
        </trans-unit>
        <trans-unit id="2ce67754e84de4a54e3b8e15d6cbb0f9657ce225" translate="yes" xml:space="preserve">
          <source>Removes an event from the queue</source>
          <target state="translated">キューからイベントを削除します。</target>
        </trans-unit>
        <trans-unit id="6cf7c4eab3edcdb87fd4bba70cca70af76709309" translate="yes" xml:space="preserve">
          <source>Removes event after first occurrence</source>
          <target state="translated">最初に発生した後のイベントを削除します。</target>
        </trans-unit>
        <trans-unit id="576937b78ee6da10baced9f64f9e4e1bef3c46e8" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. Per frame, there is a stack of blocks, denoting &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements, and such.</source>
          <target state="translated">ブロックスタックから1つのブロックを削除します。フレームごとに、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;ステートメントなどを表すブロックのスタックがあります。</target>
        </trans-unit>
        <trans-unit id="c4c0d1d3d20fb8defc53f820513d16ce1de86e34" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. Per frame, there is a stack of blocks, denoting &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements, and such.</source>
          <target state="translated">ブロックスタックから1つのブロックを削除します。フレームごとに、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;ステートメントなどを示すブロックのスタックがあります。</target>
        </trans-unit>
        <trans-unit id="94357e616c453b1697914dba99e5f151a58631c7" translate="yes" xml:space="preserve">
          <source>Removes one block from the block stack. The popped block must be an exception handler block, as implicitly created when entering an except handler. In addition to popping extraneous values from the frame stack, the last three popped values are used to restore the exception state.</source>
          <target state="translated">ブロックスタックから1つのブロックを削除します。ポッピングされたブロックは、except ハンドラを入力する際に暗黙的に作成された例外ハンドラブロックでなければなりません。フレームスタックから不要な値をポップすることに加えて、最後の3つのポップされた値は例外状態を復元するために使用されます。</target>
        </trans-unit>
        <trans-unit id="32e6ee1737489b7ed876da2b98bcac7cdbf7e329" translate="yes" xml:space="preserve">
          <source>Removes the extended filesystem attribute &lt;em&gt;attribute&lt;/em&gt; from &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;attribute&lt;/em&gt; should be bytes or str (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface). If it is a string, it is encoded with the filesystem encoding.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt;から拡張ファイルシステム属性&lt;em&gt;attribute&lt;/em&gt;を削除します。&lt;em&gt;属性&lt;/em&gt;は、バイトまたはstr（&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを介して直接的または間接的に）でなければなりません。文字列の場合、ファイルシステムのエンコーディングでエンコードされます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa2817427f9f3dd866ffd6171c443159b2bc4d52" translate="yes" xml:space="preserve">
          <source>Removes the handler for process with PID equal to &lt;em&gt;pid&lt;/em&gt;.</source>
          <target state="translated">PIDが&lt;em&gt;pid&lt;/em&gt;と等しいプロセスのハンドラーを削除します。</target>
        </trans-unit>
        <trans-unit id="2195eae66ec66c6a06d82f02a75084dd7fe366ba" translate="yes" xml:space="preserve">
          <source>Removes the item with the index &lt;em&gt;i&lt;/em&gt; from the array and returns it. The optional argument defaults to &lt;code&gt;-1&lt;/code&gt;, so that by default the last item is removed and returned.</source>
          <target state="translated">インデックス&lt;em&gt;iの&lt;/em&gt;アイテムを配列から削除して返します。オプションの引数のデフォルトは &lt;code&gt;-1&lt;/code&gt; なので、デフォルトでは最後のアイテムが削除されて返されます。</target>
        </trans-unit>
        <trans-unit id="0e0efae851aab5bcfc515dd3938067f832c1853f" translate="yes" xml:space="preserve">
          <source>Removes the specified filter &lt;em&gt;filter&lt;/em&gt; from this handler.</source>
          <target state="translated">このハンドラーから指定されたフィルター&lt;em&gt;filter&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="ee70f16011ebf7494e0b1b61abda546563eb3852" translate="yes" xml:space="preserve">
          <source>Removes the specified filter &lt;em&gt;filter&lt;/em&gt; from this logger.</source>
          <target state="translated">このロガーから指定されたフィルター&lt;em&gt;filter&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="2e0ce9ad7005467ffca8b9e62963e55e390d5e75" translate="yes" xml:space="preserve">
          <source>Removes the specified handler &lt;em&gt;hdlr&lt;/em&gt; from this logger.</source>
          <target state="translated">このロガーから指定されたハンドラー&lt;em&gt;hdlr&lt;/em&gt;を削除します。</target>
        </trans-unit>
        <trans-unit id="265ca2b6db6ce5a3ff9aedd63c5a7c72e5e87f5c" translate="yes" xml:space="preserve">
          <source>Removes the tab specified by &lt;em&gt;tab_id&lt;/em&gt;, unmaps and unmanages the associated window.</source>
          <target state="translated">&lt;em&gt;tab_id&lt;/em&gt;で指定されたタブを削除し、関連付けられたウィンドウの&lt;em&gt;マッピングを解除&lt;/em&gt;して管理を&lt;em&gt;解除し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dc9b4dc7fc4b6baad1b2b196e86a61bc2f5abd7f" translate="yes" xml:space="preserve">
          <source>Removes the top-of-stack (TOS) item.</source>
          <target state="translated">トップオブスタック(TOS)アイテムを削除します。</target>
        </trans-unit>
        <trans-unit id="52b1b8dfd7406e85d8a1daa01bbc43035eec9e18" translate="yes" xml:space="preserve">
          <source>Removing the entry or changing its priority is more difficult because it would break the heap structure invariants. So, a possible solution is to mark the entry as removed and add a new entry with the revised priority:</source>
          <target state="translated">エントリを削除したり優先度を変更したりすることは、ヒープ構造の不変性を壊すことになるので、より困難です。そこで、可能な解決策は、エントリを削除したものとしてマークし、変更された優先度で新しいエントリを追加することです。</target>
        </trans-unit>
        <trans-unit id="a4b56a0cc5d96f54a8becd3e61fed1905c99964e" translate="yes" xml:space="preserve">
          <source>Rename file &lt;em&gt;fromname&lt;/em&gt; on the server to &lt;em&gt;toname&lt;/em&gt;.</source>
          <target state="translated">名前の変更、ファイル&lt;em&gt;名fromname&lt;/em&gt;にサーバー上の&lt;em&gt;toname&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3549f5dc4a198fde3fea43a3acbf2e27a6ae616f" translate="yes" xml:space="preserve">
          <source>Rename mailbox named &lt;em&gt;oldmailbox&lt;/em&gt; to &lt;em&gt;newmailbox&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;oldmailbox&lt;/em&gt;という名前のメールボックスの名前を&lt;em&gt;newmailbox&lt;/em&gt;に&lt;em&gt;変更し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e60e102fdcd11be474a67a0ae6aacb59d606f78b" translate="yes" xml:space="preserve">
          <source>Rename messages in the mailbox as necessary to eliminate gaps in numbering. Entries in the sequences list are updated correspondingly.</source>
          <target state="translated">メールボックス内のメッセージの名前を必要に応じて変更し、番号付けのギャップをなくします。シーケンスリストのエントリは、それに対応して更新されます。</target>
        </trans-unit>
        <trans-unit id="2d670bc87c1937258260ac24646d8260ebfef90c" translate="yes" xml:space="preserve">
          <source>Rename the file or directory &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. If &lt;em&gt;dst&lt;/em&gt; exists, the operation will fail with an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; subclass in a number of cases:</source>
          <target state="translated">ファイルまたはディレクトリの名前を&lt;em&gt;src&lt;/em&gt;から&lt;em&gt;dstに変更し&lt;/em&gt;ます。&lt;em&gt;dst&lt;/em&gt;が存在する場合、多くの場合、操作は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;サブクラスで失敗します。</target>
        </trans-unit>
        <trans-unit id="df48f2215cb7bcf4ad18d6577001b5d552a345db" translate="yes" xml:space="preserve">
          <source>Rename the file or directory &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. If &lt;em&gt;dst&lt;/em&gt; is a directory, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;dst&lt;/em&gt; exists and is a file, it will be replaced silently if the user has permission. The operation may fail if &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; are on different filesystems. If successful, the renaming will be an atomic operation (this is a POSIX requirement).</source>
          <target state="translated">ファイルまたはディレクトリの名前を&lt;em&gt;src&lt;/em&gt;から&lt;em&gt;dstに変更し&lt;/em&gt;ます。&lt;em&gt;dst&lt;/em&gt;がディレクトリの場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。場合&lt;em&gt;dstが&lt;/em&gt;存在し、ファイルで、ユーザがアクセス権を持っている場合、それは静かに置き換えられます。&lt;em&gt;src&lt;/em&gt;と&lt;em&gt;dst&lt;/em&gt;が異なるファイルシステムにある場合、操作が失敗することがあります。成功した場合、名前の変更はアトミック操作になります（これはPOSIXの要件です）。</target>
        </trans-unit>
        <trans-unit id="ca15c03ebc4130eb60f0346ebdf7c103f14c253c" translate="yes" xml:space="preserve">
          <source>Rename this file or directory to the given &lt;em&gt;target&lt;/em&gt;, and return a new Path instance pointing to &lt;em&gt;target&lt;/em&gt;. If &lt;em&gt;target&lt;/em&gt; points to an existing file or directory, it will be unconditionally replaced.</source>
          <target state="translated">このファイルまたはディレクトリの名前を指定された&lt;em&gt;ターゲットに変更し&lt;/em&gt;、&lt;em&gt;ターゲットを&lt;/em&gt;指す新しいPathインスタンスを返します。&lt;em&gt;targetが&lt;/em&gt;既存のファイルまたはディレクトリを指している場合、無条件に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="3a70e8665e55521f4679dca75835942f829d258c" translate="yes" xml:space="preserve">
          <source>Rename this file or directory to the given &lt;em&gt;target&lt;/em&gt;, and return a new Path instance pointing to &lt;em&gt;target&lt;/em&gt;. On Unix, if &lt;em&gt;target&lt;/em&gt; exists and is a file, it will be replaced silently if the user has permission. &lt;em&gt;target&lt;/em&gt; can be either a string or another path object:</source>
          <target state="translated">このファイルまたはディレクトリの名前を指定された&lt;em&gt;ターゲットに変更し&lt;/em&gt;、&lt;em&gt;ターゲットを&lt;/em&gt;指す新しいPathインスタンスを返します。 Unixでは、&lt;em&gt;ターゲット&lt;/em&gt;が存在し、それがファイルである場合、ユーザーが権限を持っている場合、それは警告なしに置き換えられます。&lt;em&gt;target&lt;/em&gt;は文字列または別のパスオブジェクトのいずれかです。</target>
        </trans-unit>
        <trans-unit id="7beca1211087e94de081a0fba1f35fd86889c6c4" translate="yes" xml:space="preserve">
          <source>Render dialog and start event loop.</source>
          <target state="translated">ダイアログをレンダリングし、イベントループを開始します。</target>
        </trans-unit>
        <trans-unit id="393632077f18c3d18111dce9c307ea45b3af1ad5" translate="yes" xml:space="preserve">
          <source>Render the Dialog window.</source>
          <target state="translated">ダイアログウィンドウをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="642cc0ad199fb1f1297cc368f7bee614268e84be" translate="yes" xml:space="preserve">
          <source>Repeat the last search, if there is one.</source>
          <target state="translated">最後の検索を繰り返します。</target>
        </trans-unit>
        <trans-unit id="36ace2bdb584635d14fad0d615202a773323ceeb" translate="yes" xml:space="preserve">
          <source>Repeated Names Within an Object</source>
          <target state="translated">オブジェクト内で繰り返される名前</target>
        </trans-unit>
        <trans-unit id="fdd508fa58b05b01babe8d3e195f6d9725f65d41" translate="yes" xml:space="preserve">
          <source>Repeated elements can be specified one at a time or with the optional keyword-only &lt;em&gt;counts&lt;/em&gt; parameter. For example, &lt;code&gt;sample(['red', 'blue'],
counts=[4, 2], k=5)&lt;/code&gt; is equivalent to &lt;code&gt;sample(['red', 'red', 'red', 'red',
'blue', 'blue'], k=5)&lt;/code&gt;.</source>
          <target state="translated">繰り返される要素は、一度に1つずつ指定することも、オプションのキーワードのみの&lt;em&gt;カウント&lt;/em&gt;パラメーターを使用して指定することもできます。たとえば、 &lt;code&gt;sample(['red', 'blue'], counts=[4, 2], k=5)&lt;/code&gt; は、 &lt;code&gt;sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c9d3258409bffb2c6901c0ff6eadf94763cbc11" translate="yes" xml:space="preserve">
          <source>Repeated names within an object are accepted, and only the value of the last name-value pair is used.</source>
          <target state="translated">オブジェクト内で繰り返される名前は受け入れられ、最後の名前と値のペアの値のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="117a7c2f50c10d9825d29abe655ca86cc048b12f" translate="yes" xml:space="preserve">
          <source>Repeatedly issue a prompt, accept input, parse an initial prefix off the received input, and dispatch to action methods, passing them the remainder of the line as argument.</source>
          <target state="translated">プロンプトを繰り返し発行し、入力を受け付け、受信した入力から最初の接頭辞を解析し、アクションメソッドにディスパッチして、行の残りを引数として渡します。</target>
        </trans-unit>
        <trans-unit id="f3357dc7c46947a84ac24495ba5860e59fcbcff0" translate="yes" xml:space="preserve">
          <source>Repetition qualifiers (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{m,n}&lt;/code&gt;, etc) cannot be directly nested. This avoids ambiguity with the non-greedy modifier suffix &lt;code&gt;?&lt;/code&gt;, and with other modifiers in other implementations. To apply a second repetition to an inner repetition, parentheses may be used. For example, the expression &lt;code&gt;(?:a{6})*&lt;/code&gt; matches any multiple of six &lt;code&gt;'a'&lt;/code&gt; characters.</source>
          <target state="translated">繰り返し修飾子（ &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;{m,n}&lt;/code&gt; など）を直接ネストすることはできません。これにより、貪欲でない修飾子のサフィックスによるあいまいさが回避されます &lt;code&gt;?&lt;/code&gt; 、および他の実装では他の修飾子を使用します。 2回目の繰り返しを内側の繰り返しに適用するには、括弧を使用できます。たとえば、式 &lt;code&gt;(?:a{6})*&lt;/code&gt; は、6つの &lt;code&gt;'a'&lt;/code&gt; 文字の任意の倍数に一致します。</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="b7089d9919f16da82cdb9ee0a3fa36e6ba9f923a" translate="yes" xml:space="preserve">
          <source>Replace &lt;a href=&quot;optparse#optparse.OptionParser.disable_interspersed_args&quot;&gt;&lt;code&gt;optparse.OptionParser.disable_interspersed_args()&lt;/code&gt;&lt;/a&gt; by using &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;optparse#optparse.OptionParser.disable_interspersed_args&quot;&gt; &lt;code&gt;optparse.OptionParser.disable_interspersed_args()&lt;/code&gt; を&lt;/a&gt;置き換えます。</target>
        </trans-unit>
        <trans-unit id="188297a1a244750ef2e20d6adecd870c02622f35" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes by their single-character equivalent. The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to decode percent-encoded sequences into Unicode characters, as accepted by the &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを同等の単一文字に置き換えます。オプションの&lt;em&gt;encoding&lt;/em&gt;および&lt;em&gt;errors&lt;/em&gt;パラメータは、&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;メソッドで受け入れられるように、パーセントエンコードされたシーケンスをUnicode文字にデコードする方法を指定します。</target>
        </trans-unit>
        <trans-unit id="485a9bdd73438a2fcd5d53c4c7bc0ae1b7b55cbf" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes by their single-octet equivalent, and return a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを同等の単一オクテットに置き換え、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="dd774f2a30cdee58e01ceb8852288c641349be49" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes with their single-character equivalent. The optional &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters specify how to decode percent-encoded sequences into Unicode characters, as accepted by the &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを同等の1文字に置き換えます。オプションの&lt;em&gt;encoding&lt;/em&gt;および&lt;em&gt;errors&lt;/em&gt;パラメーターは、&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;メソッドで受け入れられるように、パーセントエンコードされたシーケンスをUnicode文字にデコードする方法を指定します。</target>
        </trans-unit>
        <trans-unit id="142c114af7c060cf58d0e0fc125f019a0b55e0c9" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;%xx&lt;/code&gt; escapes with their single-octet equivalent, and return a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを同等のシングルオクテットに置き換え、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="25700e4fc44102e4c7ad3282a213ebf980594033" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;(options, args) = parser.parse_args()&lt;/code&gt; with &lt;code&gt;args =
parser.parse_args()&lt;/code&gt; and add additional &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; calls for the positional arguments. Keep in mind that what was previously called &lt;code&gt;options&lt;/code&gt;, now in the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; context is called &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">交換してください &lt;code&gt;(options, args) = parser.parse_args()&lt;/code&gt; で &lt;code&gt;args = parser.parse_args()&lt;/code&gt; および追加の追加&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;位置引数のコールを。以前は &lt;code&gt;options&lt;/code&gt; と呼ばれていましたが、現在&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;コンテキストでは &lt;code&gt;args&lt;/code&gt; と呼ばれていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8ab449cbdabce126a1477c0f0eeb8b97b8e06c64" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;optparse.Values&lt;/code&gt; with &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;optparse.OptionError&lt;/code&gt; and &lt;code&gt;optparse.OptionValueError&lt;/code&gt; with &lt;code&gt;ArgumentError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optparse.Values&lt;/code&gt; を&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; で&lt;/a&gt;置き換え、 &lt;code&gt;optparse.OptionError&lt;/code&gt; と &lt;code&gt;optparse.OptionValueError&lt;/code&gt; を &lt;code&gt;ArgumentError&lt;/code&gt; で置き換えます。</target>
        </trans-unit>
        <trans-unit id="abe3536719584d6172532cd1eb89511d647a474f" translate="yes" xml:space="preserve">
          <source>Replace a header. Replace the first header found in the message that matches &lt;em&gt;_name&lt;/em&gt;, retaining header order and field name case of the original header. If no matching header is found, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヘッダーを交換してください。&lt;em&gt;_name&lt;/em&gt;に一致するメッセージ内の最初のヘッダーを置き換え、元のヘッダーのヘッダーの順序とフィールド名の大文字小文字を保持します。一致するヘッダーが見つからない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="060f12e874cb129aa89e6ab574feced679b45808" translate="yes" xml:space="preserve">
          <source>Replace a header. Replace the first header found in the message that matches &lt;em&gt;_name&lt;/em&gt;, retaining header order and field name case. If no matching header was found, a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">ヘッダーを交換してください。メッセージ内で&lt;em&gt;_name&lt;/em&gt;と一致する最初のヘッダーを置き換え、ヘッダーの順序とフィールド名の大文字小文字を保持します。一致するヘッダーが見つからなかった場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="4dcbc6a80fb47be8b07d72e4c8da7b648ee78246" translate="yes" xml:space="preserve">
          <source>Replace all &lt;a href=&quot;optparse#optparse.OptionParser.add_option&quot;&gt;&lt;code&gt;optparse.OptionParser.add_option()&lt;/code&gt;&lt;/a&gt; calls with &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">すべての&lt;a href=&quot;optparse#optparse.OptionParser.add_option&quot;&gt; &lt;code&gt;optparse.OptionParser.add_option()&lt;/code&gt; &lt;/a&gt;呼び出しを&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;呼び出しに置き換えます。</target>
        </trans-unit>
        <trans-unit id="d6a3559c55df79b290eb62bc0b9b34b463dcb016" translate="yes" xml:space="preserve">
          <source>Replace an existing node with a new node. It must be the case that &lt;em&gt;oldChild&lt;/em&gt; is a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">既存のノードを新しいノードに置き換えます。&lt;em&gt;oldChild&lt;/em&gt;がこのノードの子である必要があります。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="33de5e2e42ff1aa50ef414ec10190acc10653af2" translate="yes" xml:space="preserve">
          <source>Replace callback actions and the &lt;code&gt;callback_*&lt;/code&gt; keyword arguments with &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;action&lt;/code&gt; arguments.</source>
          <target state="translated">コールバックアクションと &lt;code&gt;callback_*&lt;/code&gt; キーワード引数を &lt;code&gt;type&lt;/code&gt; または &lt;code&gt;action&lt;/code&gt; 引数に置き換えます。</target>
        </trans-unit>
        <trans-unit id="aa2066c3c702b4bf15ec261878a19b0754ddfd0f" translate="yes" xml:space="preserve">
          <source>Replace history item specified by its position with &lt;em&gt;line&lt;/em&gt;. The position is zero-based. This calls &lt;code&gt;replace_history_entry()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">位置で指定された履歴アイテムを&lt;em&gt;lineに&lt;/em&gt;置き換えます。位置はゼロベースです。これは、基礎となるライブラリの &lt;code&gt;replace_history_entry()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6492730bb5212562fc1dceaa4c764e7d20e850a7" translate="yes" xml:space="preserve">
          <source>Replace special characters in &lt;em&gt;string&lt;/em&gt; using the &lt;code&gt;%xx&lt;/code&gt; escape. Letters, digits, and the characters &lt;code&gt;'_.-~'&lt;/code&gt; are never quoted. By default, this function is intended for quoting the path section of URL. The optional &lt;em&gt;safe&lt;/em&gt; parameter specifies additional ASCII characters that should not be quoted &amp;mdash; its default value is &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを使用して、&lt;em&gt;文字列&lt;/em&gt;内の特殊文字を置き換えます。文字、数字、および文字 &lt;code&gt;'_.-~'&lt;/code&gt; は引用符で囲まれません。デフォルトでは、この関数はURLのパスセクションを引用することを目的としています。オプションの&lt;em&gt;safe&lt;/em&gt;パラメータは、引用符で囲まない追加のASCII文字を指定します&amp;mdash;デフォルト値は &lt;code&gt;'/'&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09110cbd23656fe9566639c3f4322c495deab28c" translate="yes" xml:space="preserve">
          <source>Replace special characters in &lt;em&gt;string&lt;/em&gt; using the &lt;code&gt;%xx&lt;/code&gt; escape. Letters, digits, and the characters &lt;code&gt;'_.-~'&lt;/code&gt; are never quoted. By default, this function is intended for quoting the path section of a URL. The optional &lt;em&gt;safe&lt;/em&gt; parameter specifies additional ASCII characters that should not be quoted &amp;mdash; its default value is &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%xx&lt;/code&gt; エスケープを使用して、&lt;em&gt;文字列&lt;/em&gt;内の特殊文字を置き換えます。文字、数字、および文字 &lt;code&gt;'_.-~'&lt;/code&gt; は引用符で囲まれません。デフォルトでは、この関数はURLのパスセクションを引用することを目的としています。オプションの&lt;em&gt;safe&lt;/em&gt;パラメーターは、引用符で囲まない追加のASCII文字を指定します&amp;mdash;そのデフォルト値は &lt;code&gt;'/'&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28841d731e0691f8ec7beb76d15093263abb87fd" translate="yes" xml:space="preserve">
          <source>Replace string names for &lt;code&gt;type&lt;/code&gt; keyword arguments with the corresponding type objects (e.g. int, float, complex, etc).</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; キーワード引数の文字列名を対応するタイプオブジェクト（int、float、complexなど）に置き換えます。</target>
        </trans-unit>
        <trans-unit id="0eb96098cc4f15f26a1fb258728741f742595113" translate="yes" xml:space="preserve">
          <source>Replace strings with implicit arguments such as &lt;code&gt;%default&lt;/code&gt; or &lt;code&gt;%prog&lt;/code&gt; with the standard Python syntax to use dictionaries to format strings, that is, &lt;code&gt;%(default)s&lt;/code&gt; and &lt;code&gt;%(prog)s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%default&lt;/code&gt; や &lt;code&gt;%prog&lt;/code&gt; などの暗黙の引数で文字列を標準のPython構文に置き換え、辞書を使用して文字列をフォーマットします。つまり、 &lt;code&gt;%(default)s&lt;/code&gt; と &lt;code&gt;%(prog)s&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="702545f2eeac5b43ba4add4a280265ded04e23c4" translate="yes" xml:space="preserve">
          <source>Replace the OptionParser constructor &lt;code&gt;version&lt;/code&gt; argument with a call to &lt;code&gt;parser.add_argument('--version', action='version', version='&amp;lt;the version&amp;gt;')&lt;/code&gt;.</source>
          <target state="translated">OptionParserコンストラクターの &lt;code&gt;version&lt;/code&gt; 引数を &lt;code&gt;parser.add_argument('--version', action='version', version='&amp;lt;the version&amp;gt;')&lt;/code&gt; -version '、action = 'version'、version = '&amp;lt;バージョン&amp;gt;'）の呼び出しに置き換えます。</target>
        </trans-unit>
        <trans-unit id="3398802fc0a7efdf238f249130ace0304f8df78a" translate="yes" xml:space="preserve">
          <source>Replace the message corresponding to &lt;em&gt;key&lt;/em&gt; with &lt;em&gt;message&lt;/em&gt;. Raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no message already corresponds to &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">対応するメッセージ交換する&lt;em&gt;キー&lt;/em&gt;との&lt;em&gt;メッセージを&lt;/em&gt;。&lt;em&gt;keyに&lt;/em&gt;対応するメッセージがまだない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外を発生させ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="78bea69c8b3d333e5571ef6247dff7824627342d" translate="yes" xml:space="preserve">
          <source>Replace with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences (only for encoding). Implemented in &lt;a href=&quot;#codecs.namereplace_errors&quot;&gt;&lt;code&gt;namereplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;\N{...}&lt;/code&gt; エスケープシーケンスに置き換えます（エンコードのみ）。&lt;a href=&quot;#codecs.namereplace_errors&quot;&gt; &lt;code&gt;namereplace_errors()&lt;/code&gt; に&lt;/a&gt;実装されています。</target>
        </trans-unit>
        <trans-unit id="f37a3fbe9b064c37c869154253f825dfdb624eff" translate="yes" xml:space="preserve">
          <source>Replace with a suitable replacement marker; Python will use the official &lt;code&gt;U+FFFD&lt;/code&gt; REPLACEMENT CHARACTER for the built-in codecs on decoding, and &amp;lsquo;?&amp;rsquo; on encoding. Implemented in &lt;a href=&quot;#codecs.replace_errors&quot;&gt;&lt;code&gt;replace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">適切な交換用マーカーと交換してください。Pythonは、デコード時に組み込みコーデックに公式の &lt;code&gt;U+FFFD&lt;/code&gt; 置換文字を使用し、「？」エンコーディング。&lt;a href=&quot;#codecs.replace_errors&quot;&gt; &lt;code&gt;replace_errors()&lt;/code&gt; に&lt;/a&gt;実装されています。</target>
        </trans-unit>
        <trans-unit id="0a7dfbebd23058d224153efd98659d07afcad6eb" translate="yes" xml:space="preserve">
          <source>Replace with backslashed escape sequences. Implemented in &lt;a href=&quot;#codecs.backslashreplace_errors&quot;&gt;&lt;code&gt;backslashreplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バックスラッシュ付きのエスケープシーケンスに置き換えます。&lt;a href=&quot;#codecs.backslashreplace_errors&quot;&gt; &lt;code&gt;backslashreplace_errors()&lt;/code&gt; に&lt;/a&gt;実装されています。</target>
        </trans-unit>
        <trans-unit id="b7772709acd14a0caec3c6ba7fe906a4d2a65f8b" translate="yes" xml:space="preserve">
          <source>Replace with the appropriate XML character reference (only for encoding). Implemented in &lt;a href=&quot;#codecs.xmlcharrefreplace_errors&quot;&gt;&lt;code&gt;xmlcharrefreplace_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">適切なXML文字参照に置き換えます（エンコードのみ）。&lt;a href=&quot;#codecs.xmlcharrefreplace_errors&quot;&gt; &lt;code&gt;xmlcharrefreplace_errors()&lt;/code&gt; に&lt;/a&gt;実装されています。</target>
        </trans-unit>
        <trans-unit id="f9ff10cebb05fe0da5c269ee255400e64d007fb6" translate="yes" xml:space="preserve">
          <source>Replace&amp;hellip;</source>
          <target state="translated">Replace&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="adfeea99b36524b65f36da222d7fdbfb5a78050b" translate="yes" xml:space="preserve">
          <source>Replaces &lt;em&gt;item&lt;/em&gt;&amp;rsquo;s child with &lt;em&gt;newchildren&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;の子を&lt;em&gt;newchildrenに&lt;/em&gt;置き換えます。</target>
        </trans-unit>
        <trans-unit id="1a8dd1e9936aff1f3d8a37bc9d646b9a3ecc5240" translate="yes" xml:space="preserve">
          <source>Replaces TOS with &lt;code&gt;getattr(TOS, co_names[namei])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getattr(TOS, co_names[namei])&lt;/code&gt; 置き換えます。</target>
        </trans-unit>
        <trans-unit id="32bd1e8eb021cf1315f7e1be4f3e6444e33b8fef" translate="yes" xml:space="preserve">
          <source>Replaces the root element for this tree. This discards the current contents of the tree, and replaces it with the given element. Use with care. &lt;em&gt;element&lt;/em&gt; is an element instance.</source>
          <target state="translated">このツリーのルート要素を置き換えます。これにより、ツリーの現在の内容が破棄され、指定された要素に置き換えられます。注意して使用してください。&lt;em&gt;element&lt;/em&gt;は要素インスタンスです。</target>
        </trans-unit>
        <trans-unit id="f087390cdd02de76d60e25a903a405417b121ca9" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;os.popen2()&lt;/code&gt;, &lt;code&gt;os.popen3()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;os.popen()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;os.popen2()&lt;/code&gt; 、 &lt;code&gt;os.popen3()&lt;/code&gt; の置き換え</target>
        </trans-unit>
        <trans-unit id="2c4c7203f5379e5271cf3141451b2f66414bfadd" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; の&lt;/a&gt;置き換え</target>
        </trans-unit>
        <trans-unit id="eab8aa4065b5ba30b75986bbaf56a4a085d60fd1" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%+f&lt;/code&gt;, &lt;code&gt;%-f&lt;/code&gt;, and &lt;code&gt;% f&lt;/code&gt; and specifying a sign:</source>
          <target state="translated">&lt;code&gt;%+f&lt;/code&gt; 、 &lt;code&gt;%-f&lt;/code&gt; - &lt;code&gt;% f&lt;/code&gt; 、および％fを置き換えて、符号を指定します。</target>
        </trans-unit>
        <trans-unit id="b1366209a48e8554cfeca0b011e295c8c2e0419b" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; と &lt;code&gt;%r&lt;/code&gt; を置き換える：</target>
        </trans-unit>
        <trans-unit id="11a979f0e8ac9f783e1634fdb42dc52b2ae1a523" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;%x&lt;/code&gt; and &lt;code&gt;%o&lt;/code&gt; and converting the value to different bases:</source>
          <target state="translated">&lt;code&gt;%x&lt;/code&gt; と &lt;code&gt;%o&lt;/code&gt; を置き換えて、値を別のベースに変換します。</target>
        </trans-unit>
        <trans-unit id="a711864ef1543b8f3dbe8280074d35a2e8b910e3" translate="yes" xml:space="preserve">
          <source>Replacing &lt;strong&gt;/bin/sh&lt;/strong&gt; shell command substitution</source>
          <target state="translated">交換&lt;strong&gt;/ binに/ shの&lt;/strong&gt;シェルコマンドの置換</target>
        </trans-unit>
        <trans-unit id="363e566b19b3e063eefcbb88cb0d02a0cff145e8" translate="yes" xml:space="preserve">
          <source>Replacing Older Functions with the subprocess Module</source>
          <target state="translated">古い関数をサブプロセスモジュールに置き換える</target>
        </trans-unit>
        <trans-unit id="e3af979083c8edcab17cd54aa8ab768be8240d6e" translate="yes" xml:space="preserve">
          <source>Replacing any use of &lt;code&gt;try-finally&lt;/code&gt; and flag variables</source>
          <target state="translated">&lt;code&gt;try-finally&lt;/code&gt; およびフラグ変数の使用の置き換え</target>
        </trans-unit>
        <trans-unit id="2c8419f67528b20da5b283106a7385c2a397c86d" translate="yes" xml:space="preserve">
          <source>Replacing functions from the &lt;code&gt;popen2&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;popen2&lt;/code&gt; モジュールからの関数の置き換え</target>
        </trans-unit>
        <trans-unit id="dc1243f55fba7b961640cbbfd4e141a33ea7e522" translate="yes" xml:space="preserve">
          <source>Replacing shell pipeline</source>
          <target state="translated">シェルパイプラインの交換</target>
        </trans-unit>
        <trans-unit id="f213b38163d2555242615174ff0914708d54d337" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;a href=&quot;os#os.spawnl&quot;&gt;&lt;code&gt;os.spawn&lt;/code&gt;&lt;/a&gt; family</source>
          <target state="translated">&lt;a href=&quot;os#os.spawnl&quot;&gt; &lt;code&gt;os.spawn&lt;/code&gt; &lt;/a&gt;ファミリーの置き換え</target>
        </trans-unit>
        <trans-unit id="7d688ab4a80b47e137d09bd38e40ba5e8b3889aa" translate="yes" xml:space="preserve">
          <source>Replied</source>
          <target state="translated">Replied</target>
        </trans-unit>
        <trans-unit id="12b497d25addd68bea9aa62cc9ce23112c0cf044" translate="yes" xml:space="preserve">
          <source>Replied to</source>
          <target state="translated">返信先</target>
        </trans-unit>
        <trans-unit id="c327a287c30e712678ed3a5b706a40a1cc31dec1" translate="yes" xml:space="preserve">
          <source>Report that the given example failed. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">与えられた例が失敗したことを報告します。このメソッドは、&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; の&lt;/a&gt;サブクラスが出力をカスタマイズできるようにするために提供されています。直接呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="8afb4877b1c763309b94ffb83ea503cb77ac97f3" translate="yes" xml:space="preserve">
          <source>Report that the given example raised an unexpected exception. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">指定された例で予期しない例外が発生したことを報告します。このメソッドは、&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; の&lt;/a&gt;サブクラスが出力をカスタマイズできるようにするために提供されています。直接呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="bf1cea3684117db6d9295ef565d00c22dd2a7090" translate="yes" xml:space="preserve">
          <source>Report that the given example ran successfully. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">与えられた例が正常に実行されたことを報告します。このメソッドは、&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; の&lt;/a&gt;サブクラスが出力をカスタマイズできるようにするために提供されています。直接呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="54c2931067a2ac8f78e68dc764080c3d11cead82" translate="yes" xml:space="preserve">
          <source>Report that the test runner is about to process the given example. This method is provided to allow subclasses of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; to customize their output; it should not be called directly.</source>
          <target state="translated">テストランナーが指定された例を処理しようとしていることを報告します。このメソッドは、&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; の&lt;/a&gt;サブクラスが出力をカスタマイズできるようにするために提供されています。直接呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="3f5f1779fb30c60316a19fe768ece4ab18a718ff" translate="yes" xml:space="preserve">
          <source>Reports that the command is not implemented.</source>
          <target state="translated">コマンドが実装されていないことを報告します。</target>
        </trans-unit>
        <trans-unit id="9478afd1f1cbbe2570530e14898a3a8702d4a693" translate="yes" xml:space="preserve">
          <source>Repr Objects</source>
          <target state="translated">Repr オブジェクト</target>
        </trans-unit>
        <trans-unit id="5bc6e28d58c936b1a08407448359ffedd92c1182" translate="yes" xml:space="preserve">
          <source>Represent a single frame in the traceback or stack that is being formatted or printed. It may optionally have a stringified version of the frames locals included in it. If &lt;em&gt;lookup_line&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the source code is not looked up until the &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; has the &lt;code&gt;line&lt;/code&gt; attribute accessed (which also happens when casting it to a tuple). &lt;code&gt;line&lt;/code&gt; may be directly provided, and will prevent line lookups happening at all. &lt;em&gt;locals&lt;/em&gt; is an optional local variable dictionary, and if supplied the variable representations are stored in the summary for later display.</source>
          <target state="translated">フォーマットまたは印刷されているトレースバックまたはスタック内の単一のフレームを表します。オプションで、フレームローカルの文字列化されたバージョンを含めることができます。&lt;em&gt;lookup_line&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;line&lt;/code&gt; 属性にアクセスするまでソースコードは検索されません（これはタプルにキャストするときにも発生します）。 &lt;code&gt;line&lt;/code&gt; を直接指定することができ、行の検索がまったく行われなくなります。&lt;em&gt;locals&lt;/em&gt;はオプションのローカル変数ディクショナリであり、指定された場合、変数表現は後で表示するために要約に格納されます。</target>
        </trans-unit>
        <trans-unit id="ebe4691e4bae16a26410f71caae3802a8ac0f0f6" translate="yes" xml:space="preserve">
          <source>Represent an address as 16 packed bytes in network (big-endian) order. &lt;em&gt;address&lt;/em&gt; is an integer representation of an IPv6 IP address. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the integer is negative or too large to be an IPv6 IP address.</source>
          <target state="translated">アドレスをネットワーク（ビッグエンディアン）順で16パックバイトとして表します。&lt;em&gt;address&lt;/em&gt;は、IPv6 IPアドレスの整数表現です。A &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、整数が負またはIPv6のIPアドレスであるには余りにも大きい場合に発生します。</target>
        </trans-unit>
        <trans-unit id="5d79b21e100f0651a5be0fad288f490f75dab588" translate="yes" xml:space="preserve">
          <source>Represent an address as 4 packed bytes in network (big-endian) order. &lt;em&gt;address&lt;/em&gt; is an integer representation of an IPv4 IP address. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the integer is negative or too large to be an IPv4 IP address.</source>
          <target state="translated">アドレスをネットワーク（ビッグエンディアン）の順序で4パックされたバイトとして表します。&lt;em&gt;address&lt;/em&gt;は、IPv4 IPアドレスの整数表現です。A &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;整数で負又はIPv4のIPアドレスであるには余りにも大きい場合に上昇します。</target>
        </trans-unit>
        <trans-unit id="196cf85693b2e04e03af7b8db9b4362b075f1c0e" translate="yes" xml:space="preserve">
          <source>Represent and manipulate messages.</source>
          <target state="translated">メッセージを表現し、操作する。</target>
        </trans-unit>
        <trans-unit id="083c9d26131739b5aff9923caafb482b4ec48b58" translate="yes" xml:space="preserve">
          <source>Represent the C &lt;code&gt;bool&lt;/code&gt; datatype (more accurately, &lt;code&gt;_Bool&lt;/code&gt; from C99). Its value can be &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, and the constructor accepts any object that has a truth value.</source>
          <target state="translated">C &lt;code&gt;bool&lt;/code&gt; データ型を &lt;code&gt;_Bool&lt;/code&gt; （より正確には、C99の_Bool）。その値は &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; であり、コンストラクターは真理値を持つすべてのオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="e44a8b6270a810e5ca0b4301005050ce646965d2" translate="yes" xml:space="preserve">
          <source>Represent the path as a &lt;code&gt;file&lt;/code&gt; URI. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the path isn&amp;rsquo;t absolute.</source>
          <target state="translated">パスを &lt;code&gt;file&lt;/code&gt; URI として表します。パスが絶対パスでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="360bc539904b3901915f57b0aead8cb40373f0de" translate="yes" xml:space="preserve">
          <source>Representation</source>
          <target state="translated">Representation</target>
        </trans-unit>
        <trans-unit id="71334c66cce7357a33242f45111c460d2724f54f" translate="yes" xml:space="preserve">
          <source>Representation of comments in the source document.</source>
          <target state="translated">ソースドキュメント内のコメントを表現します。</target>
        </trans-unit>
        <trans-unit id="908cdb47bf647617261f7fb18e156abd2c7e8e03" translate="yes" xml:space="preserve">
          <source>Represents &lt;code&gt;from x import y&lt;/code&gt;. &lt;code&gt;module&lt;/code&gt; is a raw string of the &amp;lsquo;from&amp;rsquo; name, without any leading dots, or &lt;code&gt;None&lt;/code&gt; for statements such as &lt;code&gt;from . import foo&lt;/code&gt;. &lt;code&gt;level&lt;/code&gt; is an integer holding the level of the relative import (0 means absolute import).</source>
          <target state="translated">表し &lt;code&gt;from x import y&lt;/code&gt; 。 &lt;code&gt;module&lt;/code&gt; は、先頭のドットを含まない 'from'名の生の文字列、または &lt;code&gt;from . import foo&lt;/code&gt; などのステートメントの場合は &lt;code&gt;None&lt;/code&gt; です。fooをインポートします。 &lt;code&gt;level&lt;/code&gt; は、相対インポートのレベルを保持する整数です（0は絶対インポートを意味します）。</target>
        </trans-unit>
        <trans-unit id="8c77832392fa7628a1a6833e65f9c3ee398bc703" translate="yes" xml:space="preserve">
          <source>Represents a &lt;code&gt;del&lt;/code&gt; statement. &lt;code&gt;targets&lt;/code&gt; is a list of nodes, such as &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Subscript&quot;&gt;&lt;code&gt;Subscript&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">表し &lt;code&gt;del&lt;/code&gt; 声明を。 &lt;code&gt;targets&lt;/code&gt; は、&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.Attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.Subscript&quot;&gt; &lt;code&gt;Subscript&lt;/code&gt; &lt;/a&gt;ノードなどのノードのリストです。</target>
        </trans-unit>
        <trans-unit id="251caf0ce3c6598751bdfd48226cc20358adbcd7" translate="yes" xml:space="preserve">
          <source>Represents a processing instruction in the XML document; this inherits from the &lt;code&gt;Node&lt;/code&gt; interface and cannot have child nodes.</source>
          <target state="translated">XMLドキュメントの処理命令を表します。これは &lt;code&gt;Node&lt;/code&gt; インターフェースから継承され、子ノードを持つことはできません。</target>
        </trans-unit>
        <trans-unit id="3a84011a230a8f6db84d875433667507e8e18941" translate="yes" xml:space="preserve">
          <source>Represents a reader object that provides APIs to read data from the IO stream.</source>
          <target state="translated">IOストリームからデータを読み込むためのAPIを提供するリーダオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="6cfc34832a11bb051619fc9790f9df0953623075" translate="yes" xml:space="preserve">
          <source>Represents a writer object that provides APIs to write data to the IO stream.</source>
          <target state="translated">IOストリームにデータを書き込むためのAPIを提供するライタオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="85c70c4b26ecde8091c78a5be64cd08937604a4a" translate="yes" xml:space="preserve">
          <source>Represents entries in the Binary table; inserting such an object using &lt;a href=&quot;#msilib.add_data&quot;&gt;&lt;code&gt;add_data()&lt;/code&gt;&lt;/a&gt; reads the file named &lt;em&gt;filename&lt;/em&gt; into the table.</source>
          <target state="translated">Binaryテーブルのエントリを表します。&lt;a href=&quot;#msilib.add_data&quot;&gt; &lt;code&gt;add_data()&lt;/code&gt; &lt;/a&gt;を使用してそのようなオブジェクトを挿入すると、&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;がテーブルに読み込まれます。</target>
        </trans-unit>
        <trans-unit id="ebfc708c405efbbf1192348a4763a9c315bdb0b8" translate="yes" xml:space="preserve">
          <source>Represents the C 16-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_short&quot;&gt;&lt;code&gt;c_short&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">C 16ビットの &lt;code&gt;signed int&lt;/code&gt; データ型を表します。通常は&lt;a href=&quot;#ctypes.c_short&quot;&gt; &lt;code&gt;c_short&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="c6bcb428751c6a8e9e9ea3dec6bce63a6f93097c" translate="yes" xml:space="preserve">
          <source>Represents the C 16-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ushort&quot;&gt;&lt;code&gt;c_ushort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの16ビット &lt;code&gt;unsigned int&lt;/code&gt; データ型を表します。通常、&lt;a href=&quot;#ctypes.c_ushort&quot;&gt; &lt;code&gt;c_ushort&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="e677aaa641998b3b7f81dcb3af7c2c1cc575b407" translate="yes" xml:space="preserve">
          <source>Represents the C 32-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">C 32ビットの &lt;code&gt;signed int&lt;/code&gt; データ型を表します。通常、&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="2afc6de59d69ee744a71e2c8123abd77166620bb" translate="yes" xml:space="preserve">
          <source>Represents the C 32-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_uint&quot;&gt;&lt;code&gt;c_uint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">C 32ビット &lt;code&gt;unsigned int&lt;/code&gt; データ型を表します。通常は&lt;a href=&quot;#ctypes.c_uint&quot;&gt; &lt;code&gt;c_uint&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="0404c0259e7891029e732830bcdbe13aff08b1b0" translate="yes" xml:space="preserve">
          <source>Represents the C 64-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_longlong&quot;&gt;&lt;code&gt;c_longlong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">C 64ビットの &lt;code&gt;signed int&lt;/code&gt; データ型を表します。通常、&lt;a href=&quot;#ctypes.c_longlong&quot;&gt; &lt;code&gt;c_longlong&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="5579e29300e13296dd2e3bfbbeee1140a6d26a07" translate="yes" xml:space="preserve">
          <source>Represents the C 64-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ulonglong&quot;&gt;&lt;code&gt;c_ulonglong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">C 64ビット &lt;code&gt;unsigned int&lt;/code&gt; データ型を表します。通常は&lt;a href=&quot;#ctypes.c_ulonglong&quot;&gt; &lt;code&gt;c_ulonglong&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="92e77e6cc6636b49e24754ab07d11189472a326a" translate="yes" xml:space="preserve">
          <source>Represents the C 8-bit &lt;code&gt;signed int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_byte&quot;&gt;&lt;code&gt;c_byte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの8ビットの &lt;code&gt;signed int&lt;/code&gt; データ型を表します。通常、&lt;a href=&quot;#ctypes.c_byte&quot;&gt; &lt;code&gt;c_byte&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="10579ae1b63b51029ea2fcce8f6016c106014413" translate="yes" xml:space="preserve">
          <source>Represents the C 8-bit &lt;code&gt;unsigned int&lt;/code&gt; datatype. Usually an alias for &lt;a href=&quot;#ctypes.c_ubyte&quot;&gt;&lt;code&gt;c_ubyte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの8ビット &lt;code&gt;unsigned int&lt;/code&gt; データ型を表します。通常、&lt;a href=&quot;#ctypes.c_ubyte&quot;&gt; &lt;code&gt;c_ubyte&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="74e71c8e1541ea5e50299033d15c1ebaed0de7e3" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; datatype. Calling this without an argument creates a &lt;code&gt;NULL&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; pointer.</source>
          <target state="translated">C &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;データ型を表します。引数なしでこれを呼び出すと、 &lt;code&gt;NULL&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;ポインタが作成されます。</target>
        </trans-unit>
        <trans-unit id="04db1721676e4c8bf60e5b3c4782b78240c1e8b1" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; datatype. Calling this without an argument creates a &lt;code&gt;NULL&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; pointer.</source>
          <target state="translated">C &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;データ型を表します。引数なしでこれを呼び出すと、 &lt;code&gt;NULL&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;ポインターが作成されます。</target>
        </trans-unit>
        <trans-unit id="dfbc3e30ec72aaf50ceb0c4c2f5ffd9f5589e1ca" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;char *&lt;/code&gt; datatype when it points to a zero-terminated string. For a general character pointer that may also point to binary data, &lt;code&gt;POINTER(c_char)&lt;/code&gt; must be used. The constructor accepts an integer address, or a bytes object.</source>
          <target state="translated">ゼロで終了する文字列を指す場合、C &lt;code&gt;char *&lt;/code&gt; データ型を表します。バイナリデータを指すこともある一般的な文字ポインタの場合、 &lt;code&gt;POINTER(c_char)&lt;/code&gt; を使用する必要があります。コンストラクタは整数アドレスまたはバイトオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="9cdee775f57e8fc1027bf6cb2f8cad47dc4548f4" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;char&lt;/code&gt; datatype, and interprets the value as a single character. The constructor accepts an optional string initializer, the length of the string must be exactly one character.</source>
          <target state="translated">C &lt;code&gt;char&lt;/code&gt; データ型を表し、値を単一の文字として解釈します。コンストラクタはオプションの文字列初期化子を受け入れます。文字列の長さは1文字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="29c01758c668101f768b0d0eca571df4149bc9e9" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;double&lt;/code&gt; datatype. The constructor accepts an optional float initializer.</source>
          <target state="translated">Cの &lt;code&gt;double&lt;/code&gt; データ型を表します。コンストラクターは、オプションのfloat初期化子を受け入れます。</target>
        </trans-unit>
        <trans-unit id="9eac6288935f4d2aa14ced6c0cd87577a151fa74" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;float&lt;/code&gt; datatype. The constructor accepts an optional float initializer.</source>
          <target state="translated">C &lt;code&gt;float&lt;/code&gt; データ型を表します。コンストラクターは、オプションのfloat初期化子を受け入れます。</target>
        </trans-unit>
        <trans-unit id="af5c278a503d85c125db7cf7af20bf9212b7e6b7" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;long double&lt;/code&gt; datatype. The constructor accepts an optional float initializer. On platforms where &lt;code&gt;sizeof(long double) ==
sizeof(double)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_double&quot;&gt;&lt;code&gt;c_double&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの &lt;code&gt;long double&lt;/code&gt; データ型を表します。コンストラクターは、オプションのfloat初期化子を受け入れます。 &lt;code&gt;sizeof(long double) == sizeof(double)&lt;/code&gt; プラットフォームでは、これは&lt;a href=&quot;#ctypes.c_double&quot;&gt; &lt;code&gt;c_double&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="ebb2991e44270bf3e743b6df3e6c52ad486aba0a" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed char&lt;/code&gt; datatype, and interprets the value as small integer. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;signed char&lt;/code&gt; データ型を表し、値を短整数として解釈します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="250753a38c9a2f17b0320be37fc295f4ea1d486f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed int&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done. On platforms where &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの &lt;code&gt;signed int&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。 &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; プラットフォームでは、これは&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="7b3bc32cd5d160044207c249d263b1b2ec7f3dbd" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed long long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;signed long long&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="834e455b79030123be959bab4238c40806a0c1f4" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;signed long&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="29e4ece1364aef7993b77e1eb617ca5e4cbbb63f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;signed short&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;signed short&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="d39dcb8c43511707fd127c6711f2fa9dbe73a9df" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;size_t&lt;/code&gt; datatype.</source>
          <target state="translated">Cの &lt;code&gt;size_t&lt;/code&gt; データ型を表します。</target>
        </trans-unit>
        <trans-unit id="d1c72ca6086fa925cb82e1925b2d30d162d3d83f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;ssize_t&lt;/code&gt; datatype.</source>
          <target state="translated">Cの &lt;code&gt;ssize_t&lt;/code&gt; データ型を表します。</target>
        </trans-unit>
        <trans-unit id="9faff58ee71e2ddb365084d0ad8fa10c0eb0bdbf" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned char&lt;/code&gt; datatype, it interprets the value as small integer. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;unsigned char&lt;/code&gt; データ型を表し、値を短整数として解釈します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="e28d5338f955859ad6fa4b5dc935e11719758a00" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned int&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done. On platforms where &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; it is an alias for &lt;a href=&quot;#ctypes.c_ulong&quot;&gt;&lt;code&gt;c_ulong&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cの &lt;code&gt;unsigned int&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。 &lt;code&gt;sizeof(int) == sizeof(long)&lt;/code&gt; プラットフォームでは、これは&lt;a href=&quot;#ctypes.c_ulong&quot;&gt; &lt;code&gt;c_ulong&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="1c80b4a935038a9853bccd388f5f6b36d87ec052" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned long long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;unsigned long long&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="9b86a5b6ef36be46af974cca29441da910557668" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned long&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;unsigned long&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="3c13e529af5d7ca1af4ba67b7ed6b4054d8c96de" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;unsigned short&lt;/code&gt; datatype. The constructor accepts an optional integer initializer; no overflow checking is done.</source>
          <target state="translated">Cの &lt;code&gt;unsigned short&lt;/code&gt; データ型を表します。コンストラクターは、オプションの整数初期化子を受け入れます。オーバーフローチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="1f24369490b1cbe2cb1c8baa14e644f45582675f" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;void *&lt;/code&gt; type. The value is represented as integer. The constructor accepts an optional integer initializer.</source>
          <target state="translated">C &lt;code&gt;void *&lt;/code&gt; 型を表します。値は整数として表されます。コンストラクターは、オプションの整数初期化子を受け入れます。</target>
        </trans-unit>
        <trans-unit id="dfee4618ef3a9a5c9dde6bb69f6bf3763a8e3d33" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;wchar_t *&lt;/code&gt; datatype, which must be a pointer to a zero-terminated wide character string. The constructor accepts an integer address, or a string.</source>
          <target state="translated">Cの &lt;code&gt;wchar_t *&lt;/code&gt; データ型を表します。これは、ゼロで終了するワイド文字列へのポインターでなければなりません。コンストラクタは整数アドレスまたは文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="955bda388da2054d49816a2c0ec481e724e37ed0" translate="yes" xml:space="preserve">
          <source>Represents the C &lt;code&gt;wchar_t&lt;/code&gt; datatype, and interprets the value as a single character unicode string. The constructor accepts an optional string initializer, the length of the string must be exactly one character.</source>
          <target state="translated">Cの &lt;code&gt;wchar_t&lt;/code&gt; データ型を表し、値を1文字のUnicode文字列として解釈します。コンストラクタはオプションの文字列初期化子を受け入れます。文字列の長さは1文字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="81ab085580795762893afc75a3039479df0598f8" translate="yes" xml:space="preserve">
          <source>Request Handler Objects</source>
          <target state="translated">リクエストハンドラオブジェクト</target>
        </trans-unit>
        <trans-unit id="e58418a16c7b78fa65efff4326c8cce9fcab3eb3" translate="yes" xml:space="preserve">
          <source>Request Objects</source>
          <target state="translated">リクエストオブジェクト</target>
        </trans-unit>
        <trans-unit id="88ca8be4e86cd81a8e8b1f0dd8c635d7cb471145" translate="yes" xml:space="preserve">
          <source>Request for information about the transport.</source>
          <target state="translated">輸送に関する資料請求。</target>
        </trans-unit>
        <trans-unit id="679af5d209f3165176d020117ec77d62ccb9e685" translate="yes" xml:space="preserve">
          <source>Request message list, result is in the form &lt;code&gt;(response, ['mesg_num octets',
...], octets)&lt;/code&gt;. If &lt;em&gt;which&lt;/em&gt; is set, it is the message to list.</source>
          <target state="translated">リクエストメッセージリスト。結果は &lt;code&gt;(response, ['mesg_num octets', ...], octets)&lt;/code&gt; 形式です。場合は&lt;em&gt;これが&lt;/em&gt;設定されている、それはリストへのメッセージです。</target>
        </trans-unit>
        <trans-unit id="795b6eb1b356df6defdaf7b48040b5b1ab2ded1b" translate="yes" xml:space="preserve">
          <source>Request named status conditions for &lt;em&gt;mailbox&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;メールボックスの&lt;/em&gt;名前付きステータス条件を要求し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="349577d4bfaa98e578f20f1fe8d1196b1ecb1809" translate="yes" xml:space="preserve">
          <source>Request the Task to be cancelled.</source>
          <target state="translated">タスクのキャンセルを要求します。</target>
        </trans-unit>
        <trans-unit id="5f43a53727b15d57439a6e2679987ec5c354c42e" translate="yes" xml:space="preserve">
          <source>Request the size of the file named &lt;em&gt;filename&lt;/em&gt; on the server. On success, the size of the file is returned as an integer, otherwise &lt;code&gt;None&lt;/code&gt; is returned. Note that the &lt;code&gt;SIZE&lt;/code&gt; command is not standardized, but is supported by many common server implementations.</source>
          <target state="translated">サーバー上の&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイルの&lt;/em&gt;サイズを要求します。成功した場合、ファイルのサイズは整数として返され、それ以外の場合は &lt;code&gt;None&lt;/code&gt; が返されます。ことに注意してください &lt;code&gt;SIZE&lt;/code&gt; のコマンドが標準化されていませんが、多くの一般的なサーバーの実装によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="9c0edf79e869493af3284f4a90b8286dbe514ab7" translate="yes" xml:space="preserve">
          <source>Request.full_url is a property with setter, getter and a deleter. Getting &lt;a href=&quot;#urllib.request.Request.full_url&quot;&gt;&lt;code&gt;full_url&lt;/code&gt;&lt;/a&gt; returns the original request URL with the fragment, if it was present.</source>
          <target state="translated">Request.full_urlは、setter、getter、およびdeleterを持つプロパティです。&lt;a href=&quot;#urllib.request.Request.full_url&quot;&gt; &lt;code&gt;full_url&lt;/code&gt; を&lt;/a&gt;取得すると、フラグメントが存在する場合、フラグメントを含む元のリクエストURLが返されます。</target>
        </trans-unit>
        <trans-unit id="6624edf6a6f721c8f8feab403a0106284c9b7a1d" translate="yes" xml:space="preserve">
          <source>Requests post-handshake authentication (PHA) from a TLS 1.3 client. PHA can only be initiated for a TLS 1.3 connection from a server-side socket, after the initial TLS handshake and with PHA enabled on both sides, see &lt;a href=&quot;#ssl.SSLContext.post_handshake_auth&quot;&gt;&lt;code&gt;SSLContext.post_handshake_auth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">TLS 1.3クライアントからのハンドシェイク後の認証（PHA）を要求します。 PHAは、サーバー側ソケットからのTLS 1.3接続に対してのみ開始できます。最初のTLSハンドシェイクの後、両側でPHAが有効になっています&lt;a href=&quot;#ssl.SSLContext.post_handshake_auth&quot;&gt; &lt;code&gt;SSLContext.post_handshake_auth&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f424f28e26130553fd9b1cb33b7ffd4c171c1290" translate="yes" xml:space="preserve">
          <source>Requests that the underlying shared memory block be destroyed. In order to ensure proper cleanup of resources, &lt;code&gt;unlink()&lt;/code&gt; should be called once (and only once) across all processes which have need for the shared memory block. After requesting its destruction, a shared memory block may or may not be immediately destroyed and this behavior may differ across platforms. Attempts to access data inside the shared memory block after &lt;code&gt;unlink()&lt;/code&gt; has been called may result in memory access errors. Note: the last process relinquishing its hold on a shared memory block may call &lt;code&gt;unlink()&lt;/code&gt; and &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; in either order.</source>
          <target state="translated">基本となる共有メモリブロックを破棄するように要求します。リソースの適切なクリーンアップを保証するために、共有メモリブロックを必要とするすべてのプロセスで &lt;code&gt;unlink()&lt;/code&gt; を1回（そして1回だけ）呼び出す必要があります。破棄を要求した後、共有メモリブロックはすぐに破棄される場合とされない場合があり、この動作はプラットフォーム間で異なる場合があります。 &lt;code&gt;unlink()&lt;/code&gt; が呼び出された後に共有メモリブロック内のデータにアクセスしようとすると、メモリアクセスエラーが発生する場合があります。注：共有メモリブロックの保持を放棄する最後のプロセスは、 &lt;code&gt;unlink()&lt;/code&gt; と&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;をどちらの順序で呼び出してもかまいません。</target>
        </trans-unit>
        <trans-unit id="f32e5cf5f68b8b47dabad68d3f3f1a96bdf00231" translate="yes" xml:space="preserve">
          <source>Required options are generally considered bad form because users expect &lt;em&gt;options&lt;/em&gt; to be &lt;em&gt;optional&lt;/em&gt;, and thus they should be avoided when possible.</source>
          <target state="translated">ユーザーは&lt;em&gt;オプション&lt;/em&gt;が&lt;em&gt;オプション&lt;/em&gt;であることを期待しているため、必要なオプションは一般的に不適切なフォームと見なされ、可能な場合は回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="42104f584e7185af38136c822b6ca0dc0e1c7e9d" translate="yes" xml:space="preserve">
          <source>Required to create a subkey of a registry key.</source>
          <target state="translated">レジストリキーのサブキーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2424413e00243c15ac9ea4a8f445c65ee83db262" translate="yes" xml:space="preserve">
          <source>Required to create, delete, or set a registry value.</source>
          <target state="translated">レジストリ値の作成、削除、設定に必要です。</target>
        </trans-unit>
        <trans-unit id="4e039e734b0c82ef1bc9d2b30ebf08a9ad705f5f" translate="yes" xml:space="preserve">
          <source>Required to enumerate the subkeys of a registry key.</source>
          <target state="translated">レジストリキーのサブキーを列挙する必要があります。</target>
        </trans-unit>
        <trans-unit id="3597453e15c78c45023d9ab068b701b801babefd" translate="yes" xml:space="preserve">
          <source>Required to query the values of a registry key.</source>
          <target state="translated">レジストリキーの値を照会するために必要です。</target>
        </trans-unit>
        <trans-unit id="715a438f507d5359881996eead3207ee68d77194" translate="yes" xml:space="preserve">
          <source>Required to request change notifications for a registry key or for subkeys of a registry key.</source>
          <target state="translated">レジストリキーまたはレジストリキーのサブキーの変更通知を要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="fbbabd42d7db228b931c272f5116719cf1328ac2" translate="yes" xml:space="preserve">
          <source>Resent</source>
          <target state="translated">Resent</target>
        </trans-unit>
        <trans-unit id="67a6ff10f1b93d118b60063992189eb08923db8b" translate="yes" xml:space="preserve">
          <source>Reserved</source>
          <target state="translated">Reserved</target>
        </trans-unit>
        <trans-unit id="39ef8a501c8e69a1a3c8d1fc3ebbf4b663515833" translate="yes" xml:space="preserve">
          <source>Reserved for Microsoft compatibility.</source>
          <target state="translated">マイクロソフトとの互換性のために予約されています。</target>
        </trans-unit>
        <trans-unit id="de3062f48873230d07d0f040f502a6f9de1e3160" translate="yes" xml:space="preserve">
          <source>Reserved for NCS compatibility.</source>
          <target state="translated">NCS互換性のために予約されています。</target>
        </trans-unit>
        <trans-unit id="83975a32a1f2f4bbed06b220ba258a40a7f5d143" translate="yes" xml:space="preserve">
          <source>Reserved for future definition.</source>
          <target state="translated">将来の定義のために予約されています。</target>
        </trans-unit>
        <trans-unit id="a94f153c1fc553424928683df2a1ca5095dcc34e" translate="yes" xml:space="preserve">
          <source>Reserved for system use.</source>
          <target state="translated">システム用に予約されています。</target>
        </trans-unit>
        <trans-unit id="127546fc47cbe074868b58f77e429324a507632a" translate="yes" xml:space="preserve">
          <source>Reset all Turtles on the Screen to their initial state.</source>
          <target state="translated">画面上のすべてのタートルを初期状態にリセットします。</target>
        </trans-unit>
        <trans-unit id="2d048221c86f328b023ed87f28984acf28fd11a1" translate="yes" xml:space="preserve">
          <source>Reset or hard reset (unreliable)</source>
          <target state="translated">リセットまたはハードリセット(信頼性が低い</target>
        </trans-unit>
        <trans-unit id="f67091a1660ae88b184292a116a4a61ef5bb724e" translate="yes" xml:space="preserve">
          <source>Reset the context variable to the value it had before the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; that created the &lt;em&gt;token&lt;/em&gt; was used.</source>
          <target state="translated">コンテキスト変数を、&lt;em&gt;トークン&lt;/em&gt;を作成した&lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt;が使用される前の値にリセットします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9de7fd5778a89ce007e6059cb81ef63cf04c0537" translate="yes" xml:space="preserve">
          <source>Reset the decoder to the initial state.</source>
          <target state="translated">デコーダを初期状態にリセットします。</target>
        </trans-unit>
        <trans-unit id="0d49c70cc7cd22fac918ff3bb95936e180d02604" translate="yes" xml:space="preserve">
          <source>Reset the encoder to the initial state. The output is discarded: call &lt;code&gt;.encode(object, final=True)&lt;/code&gt;, passing an empty byte or text string if necessary, to reset the encoder and to get the output.</source>
          <target state="translated">エンコーダを初期状態にリセットします。出力は破棄されます &lt;code&gt;.encode(object, final=True)&lt;/code&gt; 呼び出し、必要に応じて空のバイトまたはテキスト文字列を渡して、エンコーダーをリセットし、出力を取得します。</target>
        </trans-unit>
        <trans-unit id="e92b6a1febd7f5a1114ab71f5a057ba12b66f73c" translate="yes" xml:space="preserve">
          <source>Reset the instance. Loses all unprocessed data. This is called implicitly at instantiation time.</source>
          <target state="translated">インスタンスをリセットします。未処理のデータをすべて失います。これは、インスタンス化時に暗黙的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6bff4bc1b2ec48c271201c2d970d26ad64178b2d" translate="yes" xml:space="preserve">
          <source>Reset the internal flag to false. Subsequently, threads calling &lt;a href=&quot;#threading.Event.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; will block until &lt;a href=&quot;#threading.Event.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; is called to set the internal flag to true again.</source>
          <target state="translated">内部フラグをfalseにリセットします。その後、&lt;a href=&quot;#threading.Event.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;を呼び出すスレッドは、&lt;a href=&quot;#threading.Event.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;が呼び出されて内部フラグを再びtrueに設定するまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="0c19a3e96112fba3feedd5e33e26f6546659d001" translate="yes" xml:space="preserve">
          <source>Reset the state after an event is retrieved</source>
          <target state="translated">イベント取得後の状態をリセットする</target>
        </trans-unit>
        <trans-unit id="0d633f4e19cee801cd3f67b7cc4865a2a355572e" translate="yes" xml:space="preserve">
          <source>Reset the syslog module values and call the system library &lt;code&gt;closelog()&lt;/code&gt;.</source>
          <target state="translated">syslogモジュールの値をリセットし、システムライブラリ &lt;code&gt;closelog()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="e34c4f2a32751ad9021deb3a3d894570dd4d915a" translate="yes" xml:space="preserve">
          <source>Reset the time conversion rules used by the library routines. The environment variable &lt;code id=&quot;index-13&quot;&gt;TZ&lt;/code&gt; specifies how this is done. It will also set the variables &lt;code&gt;tzname&lt;/code&gt; (from the &lt;code id=&quot;index-14&quot;&gt;TZ&lt;/code&gt; environment variable), &lt;code&gt;timezone&lt;/code&gt; (non-DST seconds West of UTC), &lt;code&gt;altzone&lt;/code&gt; (DST seconds west of UTC) and &lt;code&gt;daylight&lt;/code&gt; (to 0 if this timezone does not have any daylight saving time rules, or to nonzero if there is a time, past, present or future when daylight saving time applies).</source>
          <target state="translated">ライブラリルーチンで使用される時間変換ルールをリセットします。環境変数 &lt;code id=&quot;index-13&quot;&gt;TZ&lt;/code&gt; は、これがどのように行われるかを指定します。また、変数 &lt;code&gt;tzname&lt;/code&gt; （ &lt;code id=&quot;index-14&quot;&gt;TZ&lt;/code&gt; 環境変数から）、 &lt;code&gt;timezone&lt;/code&gt; （UTCの西の非DST秒）、 &lt;code&gt;altzone&lt;/code&gt; （UTCの西のDST秒）、および &lt;code&gt;daylight&lt;/code&gt; （このタイムゾーンに夏時間のルールがない場合は0に設定）も設定します、または夏時間が適用される時間、過去、現在、または未来がある場合はゼロ以外）。</target>
        </trans-unit>
        <trans-unit id="f5a40addf34d290ead6463e7ee0b47bc992fe551" translate="yes" xml:space="preserve">
          <source>Reset the warnings filter. This discards the effect of all previous calls to &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, including that of the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; command line options and calls to &lt;a href=&quot;#warnings.simplefilter&quot;&gt;&lt;code&gt;simplefilter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">警告フィルターをリセットします。この破棄へのすべての以前の呼び出しの効果&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; &lt;/a&gt;のものを含め、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; &lt;/a&gt;へのコマンドライン・オプションおよびコールの&lt;a href=&quot;#warnings.simplefilter&quot;&gt; &lt;code&gt;simplefilter()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="171d23d6f2ca421d1f348a2c96b23e87ff54d015" translate="yes" xml:space="preserve">
          <source>Reset the warnings filter. This discards the effect of all previous calls to &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, including that of the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; command line options and calls to &lt;a href=&quot;#warnings.simplefilter&quot;&gt;&lt;code&gt;simplefilter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">警告フィルターをリセットします。これにより、&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; &lt;/a&gt;コマンドラインオプションや&lt;a href=&quot;#warnings.simplefilter&quot;&gt; &lt;code&gt;simplefilter()&lt;/code&gt; の&lt;/a&gt;呼び出しなど、以前の&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; の&lt;/a&gt;呼び出しの影響がすべて破棄されます。</target>
        </trans-unit>
        <trans-unit id="d7e71f72e32429fd2e53309c697f208362dbb76f" translate="yes" xml:space="preserve">
          <source>Resets all of the flags to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">すべてのフラグを &lt;code&gt;0&lt;/code&gt; にリセットします。</target>
        </trans-unit>
        <trans-unit id="5f0d2e32284b8664dd767d4744167c246f91973c" translate="yes" xml:space="preserve">
          <source>Resets all of the traps to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">すべてのトラップを &lt;code&gt;0&lt;/code&gt; にリセットします。</target>
        </trans-unit>
        <trans-unit id="5cec14b1118db040cd9cad3b5e3f5d5bef19011b" translate="yes" xml:space="preserve">
          <source>Resets an element. This function removes all subelements, clears all attributes, and sets the text and tail attributes to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">要素をリセットします。この関数は、すべてのサブエレメントを削除し、すべての属性をクリアして、textおよびtail属性を &lt;code&gt;None&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="dc2b17479e9f63ed33d228bfc1309dd6c8ccf270" translate="yes" xml:space="preserve">
          <source>Resets the &lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt;&lt;code&gt;mailfrom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt;&lt;code&gt;rcpttos&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt;&lt;code&gt;received_data&lt;/code&gt;&lt;/a&gt;, but not the greeting.</source>
          <target state="translated">リセット&lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt; &lt;code&gt;mailfrom&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt; &lt;code&gt;rcpttos&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt; &lt;code&gt;received_data&lt;/code&gt; &lt;/a&gt;ではなく、挨拶を。</target>
        </trans-unit>
        <trans-unit id="66f3fb45eae86efcd59bab6111c95e6e1caa63e1" translate="yes" xml:space="preserve">
          <source>Resets the codec buffers used for keeping state.</source>
          <target state="translated">状態を保持するために使用されるコーデックバッファをリセットします。</target>
        </trans-unit>
        <trans-unit id="f00d828a74e171605d55a26c1bd917706054bbac" translate="yes" xml:space="preserve">
          <source>Resets the pack buffer to the empty string.</source>
          <target state="translated">パックバッファを空の文字列にリセットします。</target>
        </trans-unit>
        <trans-unit id="044b0da32617b88c959d3de50339a859cd2c2bfd" translate="yes" xml:space="preserve">
          <source>Resets the scheme and fontset of the Tix application to &lt;em&gt;newScheme&lt;/em&gt; and &lt;em&gt;newFontSet&lt;/em&gt;, respectively. This affects only those widgets created after this call. Therefore, it is best to call the resetoptions method before the creation of any widgets in a Tix application.</source>
          <target state="translated">Tixアプリケーションのスキームとフォントセットをそれぞれ&lt;em&gt;newScheme&lt;/em&gt;と&lt;em&gt;newFontSet&lt;/em&gt;にリセットします。これは、この呼び出しの後に作成されたウィジェットにのみ影響します。したがって、Tixアプリケーションでウィジェットを作成する前に、resetoptionsメソッドを呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8cae5ff1d026f36112c5fb96e71d4c58a9c342c7" translate="yes" xml:space="preserve">
          <source>Resets the string buffer with the given &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">文字列バッファを指定された&lt;em&gt;データ&lt;/em&gt;でリセットします。</target>
        </trans-unit>
        <trans-unit id="73a3fdcc6fbb03a069d656eb3c559cde562b9732" translate="yes" xml:space="preserve">
          <source>Resize the standard and current windows to the specified dimensions, and adjusts other bookkeeping data used by the curses library that record the window dimensions (in particular the SIGWINCH handler).</source>
          <target state="translated">標準ウィンドウと現在のウィンドウを指定された寸法にリサイズし、ウィンドウの寸法を記録する curses ライブラリで使用される他のブックキーピングデータ (特に SIGWINCH ハンドラ)を調整します。</target>
        </trans-unit>
        <trans-unit id="398c98f3fdf5e169462a36c719de19829608f611" translate="yes" xml:space="preserve">
          <source>Resize the stream to the given &lt;em&gt;size&lt;/em&gt; in bytes (or the current position if &lt;em&gt;size&lt;/em&gt; is not specified). The current stream position isn&amp;rsquo;t changed. This resizing can extend or reduce the current file size. In case of extension, the contents of the new file area depend on the platform (on most systems, additional bytes are zero-filled). The new file size is returned.</source>
          <target state="translated">ストリームの&lt;em&gt;サイズを&lt;/em&gt;、バイト単位で指定&lt;em&gt;さ&lt;/em&gt;れた&lt;em&gt;サイズ&lt;/em&gt;（&lt;em&gt;サイズ&lt;/em&gt;が指定されていない場合は現在の位置）に変更します。現在のストリーム位置は変更されません。このサイズ変更により、現在のファイルサイズを拡大または縮小できます。拡張の場合、新しいファイル領域の内容はプラットフォームによって異なります（ほとんどのシステムでは、追加のバイトはゼロで埋められます）。新しいファイルサイズが返されます。</target>
        </trans-unit>
        <trans-unit id="7a200ae0b8e51597d440a10e995777ad9684ad6e" translate="yes" xml:space="preserve">
          <source>Resizes the map and the underlying file, if any. If the mmap was created with &lt;code&gt;ACCESS_READ&lt;/code&gt; or &lt;code&gt;ACCESS_COPY&lt;/code&gt;, resizing the map will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">マップと基になるファイルがある場合は、サイズを変更します。mmapが &lt;code&gt;ACCESS_READ&lt;/code&gt; または &lt;code&gt;ACCESS_COPY&lt;/code&gt; で作成された場合、マップのサイズを変更すると&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="9b956b5d55f0a3a61228f63920470e1d90b9abda" translate="yes" xml:space="preserve">
          <source>Resolve MRO entries dynamically as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 560の&lt;/strong&gt;&lt;/a&gt;指定に従って、MROエントリを動的に解決します。</target>
        </trans-unit>
        <trans-unit id="6ec18bc8e539867393a202a657b119f0742b1f3a" translate="yes" xml:space="preserve">
          <source>Resolve a name to an object.</source>
          <target state="translated">オブジェクトに名前を解決します。</target>
        </trans-unit>
        <trans-unit id="538964af9fc9214c2d5ef8bd4f6f1f46a83f010a" translate="yes" xml:space="preserve">
          <source>Resolve a relative module name to an absolute one.</source>
          <target state="translated">相対モジュール名を絶対モジュール名に解決します。</target>
        </trans-unit>
        <trans-unit id="29012c26c4602ab3af44b530bb1f1b649dd1460b" translate="yes" xml:space="preserve">
          <source>Resolve the system identifier of an entity and return either the system identifier to read from as a string, or an InputSource to read from. The default implementation returns &lt;em&gt;systemId&lt;/em&gt;.</source>
          <target state="translated">エンティティのシステム識別子を解決し、読み取るシステム識別子を文字列として返すか、読み取り元のInputSourceを返します。デフォルトの実装は&lt;em&gt;systemIdを&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="87a1fceda48e4943acc5ca76e4bba664c030543a" translate="yes" xml:space="preserve">
          <source>Resolves &lt;code&gt;__aenter__&lt;/code&gt; and &lt;code&gt;__aexit__&lt;/code&gt; from the object on top of the stack. Pushes &lt;code&gt;__aexit__&lt;/code&gt; and result of &lt;code&gt;__aenter__()&lt;/code&gt; to the stack.</source>
          <target state="translated">スタックの最上位のオブジェクトから &lt;code&gt;__aenter__&lt;/code&gt; および &lt;code&gt;__aexit__&lt;/code&gt; を解決します。プッシュ &lt;code&gt;__aexit__&lt;/code&gt; との結果 &lt;code&gt;__aenter__()&lt;/code&gt; スタックへ。</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="ad94287ab4f543bf10c68378e7ba19242a3df67f" translate="yes" xml:space="preserve">
          <source>Resource Limits</source>
          <target state="translated">資源の限界</target>
        </trans-unit>
        <trans-unit id="eb5ad770f531d81bceb5b4f329f5aee4a234bc5f" translate="yes" xml:space="preserve">
          <source>Resource Usage</source>
          <target state="translated">リソース使用量</target>
        </trans-unit>
        <trans-unit id="4d2b9449646a0ee5d5e77b1f7dfdbd7898f4fbf0" translate="yes" xml:space="preserve">
          <source>Resource deadlock would occur</source>
          <target state="translated">リソースデッドロックが発生する</target>
        </trans-unit>
        <trans-unit id="8f9eda118c3329c901b866254abd2e2e237bf61e" translate="yes" xml:space="preserve">
          <source>ResourceWarning</source>
          <target state="translated">ResourceWarning</target>
        </trans-unit>
        <trans-unit id="5dc2e2738ebfc89ead527da19284b351442393fe" translate="yes" xml:space="preserve">
          <source>ResourceWarning Example</source>
          <target state="translated">リソース警告の例</target>
        </trans-unit>
        <trans-unit id="01d682cb3b4c9c7e04aa56b2fcaded504578a20f" translate="yes" xml:space="preserve">
          <source>Resources are roughly akin to files inside directories, though it&amp;rsquo;s important to keep in mind that this is just a metaphor. Resources and packages &lt;strong&gt;do not&lt;/strong&gt; have to exist as physical files and directories on the file system.</source>
          <target state="translated">リソースはディレクトリ内のファイルとほぼ同じですが、これは単なる比喩であることを覚えておくことが重要です。リソースおよびパッケージ&lt;strong&gt;は&lt;/strong&gt;、ファイルシステム上の物理ファイルおよびディレクトリとして存在する&lt;strong&gt;必要は&lt;/strong&gt;あり&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="952df5c17fa0434c089cd6a9cd4044ee0f9fa218" translate="yes" xml:space="preserve">
          <source>Resources limitations</source>
          <target state="translated">資源の制限</target>
        </trans-unit>
        <trans-unit id="3cd523ca42fe0cc464dad9e525f1549425792980" translate="yes" xml:space="preserve">
          <source>Resources usage can be limited using the &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt; function described below. Each resource is controlled by a pair of limits: a soft limit and a hard limit. The soft limit is the current limit, and may be lowered or raised by a process over time. The soft limit can never exceed the hard limit. The hard limit can be lowered to any value greater than the soft limit, but not raised. (Only processes with the effective UID of the super-user can raise a hard limit.)</source>
          <target state="translated">リソースの使用は、以下で説明する&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; &lt;/a&gt;関数を使用して制限できます。各リソースは、ソフト制限とハード制限の2つの制限によって制御されます。ソフト制限は現在の制限であり、時間の経過とともにプロセスによって低下または上昇する可能性があります。ソフト制限はハード制限を超えることはできません。ハード制限はソフト制限よりも大きい任意の値に下げることができますが、上げることはできません。（スーパーユーザーの実効UIDを持つプロセスのみがハード制限を上げることができます。）</target>
        </trans-unit>
        <trans-unit id="b134bd555a2f6ec5313c1b2a225b2c17f3409351" translate="yes" xml:space="preserve">
          <source>Restart</source>
          <target state="translated">Restart</target>
        </trans-unit>
        <trans-unit id="03f21bbdceb66c45dcb2adb701db2f44c7357d8c" translate="yes" xml:space="preserve">
          <source>Restart Shell</source>
          <target state="translated">シェルの再起動</target>
        </trans-unit>
        <trans-unit id="0170bf6e5dedfff27ec63e28fb126f1b886f33d5" translate="yes" xml:space="preserve">
          <source>Restart the debugged Python program. If an argument is supplied, it is split with &lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; and the result is used as the new &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;. History, breakpoints, actions and debugger options are preserved. &lt;a href=&quot;#pdbcommand-restart&quot;&gt;&lt;code&gt;restart&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#pdbcommand-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デバッグしたPythonプログラムを再起動します。引数が指定された場合、それは&lt;a href=&quot;shlex#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;で分割され、結果は新しい&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;として使用されます。履歴、ブレークポイント、アクション、デバッガオプションは保持されます。&lt;a href=&quot;#pdbcommand-restart&quot;&gt; &lt;code&gt;restart&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#pdbcommand-run&quot;&gt; &lt;code&gt;run&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="e8fcc6a6eb40e50298cf8a478a3ef3652128987d" translate="yes" xml:space="preserve">
          <source>Restart the shell to clean the environment.</source>
          <target state="translated">シェルを再起動して環境をクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="d42d159b708025b291e1da2884f94a2352410978" translate="yes" xml:space="preserve">
          <source>Restore a pipeline template to its initial state.</source>
          <target state="translated">パイプライン テンプレートを初期状態に戻します。</target>
        </trans-unit>
        <trans-unit id="b3ec860cbb39734f68116981c7f3157f2a1f0672" translate="yes" xml:space="preserve">
          <source>Restore the state of the terminal modes to what it was at the last call to &lt;a href=&quot;#curses.savetty&quot;&gt;&lt;code&gt;savetty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">端末モードの状態を、最後に&lt;a href=&quot;#curses.savetty&quot;&gt; &lt;code&gt;savetty()&lt;/code&gt; を&lt;/a&gt;呼び出したときの状態に戻します。</target>
        </trans-unit>
        <trans-unit id="792c573b37fffed7f82b062bf143b623c4aee0ca" translate="yes" xml:space="preserve">
          <source>Restore the terminal to &amp;ldquo;program&amp;rdquo; mode, as previously saved by &lt;a href=&quot;#curses.def_prog_mode&quot;&gt;&lt;code&gt;def_prog_mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前に&lt;a href=&quot;#curses.def_prog_mode&quot;&gt; &lt;code&gt;def_prog_mode()&lt;/code&gt; で&lt;/a&gt;保存したように、端末を「プログラム」モードに復元します。</target>
        </trans-unit>
        <trans-unit id="135c8a8213da8e5c924e31ee56c0f0f870235da7" translate="yes" xml:space="preserve">
          <source>Restore the terminal to &amp;ldquo;shell&amp;rdquo; mode, as previously saved by &lt;a href=&quot;#curses.def_shell_mode&quot;&gt;&lt;code&gt;def_shell_mode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前に&lt;a href=&quot;#curses.def_shell_mode&quot;&gt; &lt;code&gt;def_shell_mode()&lt;/code&gt; で&lt;/a&gt;保存したように、ターミナルを「シェル」モードに復元します。</target>
        </trans-unit>
        <trans-unit id="128dc033b3de8940ac751576e32635b794a43280" translate="yes" xml:space="preserve">
          <source>Restores registry reflection for the specified disabled key.</source>
          <target state="translated">指定された無効キーのレジストリ反映を復元します。</target>
        </trans-unit>
        <trans-unit id="b4c3c9ca59c5924842f244c0b9284beb12cfa8f8" translate="yes" xml:space="preserve">
          <source>Restoring reflection for a key does not affect reflection of any subkeys.</source>
          <target state="translated">キーの反射を復元しても、サブキーの反射には影響しません。</target>
        </trans-unit>
        <trans-unit id="bd0ba95788d644d964009d5cea8331eabcad0285" translate="yes" xml:space="preserve">
          <source>Restrict the process with PID &lt;em&gt;pid&lt;/em&gt; (or the current process if zero) to a set of CPUs. &lt;em&gt;mask&lt;/em&gt; is an iterable of integers representing the set of CPUs to which the process should be restricted.</source>
          <target state="translated">PID &lt;em&gt;pidのプロセス&lt;/em&gt;（またはゼロの場合は現在のプロセス）を一連のCPUに制限します。&lt;em&gt;mask&lt;/em&gt;は、プロセスを制限する必要があるCPUのセットを表す整数の反復可能です。</target>
        </trans-unit>
        <trans-unit id="a4a29805bf07a828822ba0c7adcbce23dc492db0" translate="yes" xml:space="preserve">
          <source>Restricted Enum subclassing</source>
          <target state="translated">制限付きEnumサブクラス化</target>
        </trans-unit>
        <trans-unit id="a676ac7e79ad3c5c290bc9102846f4c905e92a43" translate="yes" xml:space="preserve">
          <source>Restricting Globals</source>
          <target state="translated">グローバルの制限</target>
        </trans-unit>
        <trans-unit id="38ad8517f1dfe99e4d87fbdbdd90a3a14b28b872" translate="yes" xml:space="preserve">
          <source>Restrictions</source>
          <target state="translated">Restrictions</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="5fc0d872845900695d1aacbae68cabdda6ce0c26" translate="yes" xml:space="preserve">
          <source>Result of a &lt;a href=&quot;#inspect.Signature.bind&quot;&gt;&lt;code&gt;Signature.bind()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#inspect.Signature.bind_partial&quot;&gt;&lt;code&gt;Signature.bind_partial()&lt;/code&gt;&lt;/a&gt; call. Holds the mapping of arguments to the function&amp;rsquo;s parameters.</source>
          <target state="translated">結果&lt;a href=&quot;#inspect.Signature.bind&quot;&gt; &lt;code&gt;Signature.bind()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#inspect.Signature.bind_partial&quot;&gt; &lt;code&gt;Signature.bind_partial()&lt;/code&gt; &lt;/a&gt;の呼び出し。関数のパラメーターへの引数のマッピングを保持します。</target>
        </trans-unit>
        <trans-unit id="d0319b4be8f8ccc2e624bd9fc79e89eb10988a19" translate="yes" xml:space="preserve">
          <source>Resulting state</source>
          <target state="translated">結果の状態</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="b3bd0b5a70497bec4a02b7eb1cb0d4f37eb71a2a" translate="yes" xml:space="preserve">
          <source>Resume</source>
          <target state="translated">Resume</target>
        </trans-unit>
        <trans-unit id="bf13ff44cb63a5d98e2fca09672119bbe81ec70c" translate="yes" xml:space="preserve">
          <source>Resume receiving.</source>
          <target state="translated">受信を再開します。</target>
        </trans-unit>
        <trans-unit id="8d3cbbc0d36eb6d20bd89c0c8f2ff4faa2ee23fe" translate="yes" xml:space="preserve">
          <source>Resume the receiving end. The protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;protocol.data_received()&lt;/code&gt;&lt;/a&gt; method will be called once again if some data is available for reading.</source>
          <target state="translated">受信側を再開します。プロトコルの&lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt; &lt;code&gt;protocol.data_received()&lt;/code&gt; &lt;/a&gt;メソッドは、読み取りに使用できるデータがある場合、もう一度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="291ae6be2810be551f611099e9b589dcbf775f3d" translate="yes" xml:space="preserve">
          <source>Retrieve CRLs from Windows&amp;rsquo; system cert store. &lt;em&gt;store_name&lt;/em&gt; may be one of &lt;code&gt;CA&lt;/code&gt;, &lt;code&gt;ROOT&lt;/code&gt; or &lt;code&gt;MY&lt;/code&gt;. Windows may provide additional cert stores, too.</source>
          <target state="translated">Windowsのシステム証明書ストアからCRLを取得します。&lt;em&gt;store_name&lt;/em&gt;は、 &lt;code&gt;CA&lt;/code&gt; 、 &lt;code&gt;ROOT&lt;/code&gt; 、または &lt;code&gt;MY&lt;/code&gt; のいずれかです。Windowsは追加の証明書ストアも提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="649098a342c4ca3d937a57f90e977ebe92cb6e31" translate="yes" xml:space="preserve">
          <source>Retrieve a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the given &lt;em&gt;path_item&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;path_itemの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06b343a0db8a509a67e042a624fd2e09dfe1afe2" translate="yes" xml:space="preserve">
          <source>Retrieve a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the given &lt;em&gt;path_item&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;path_itemの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6554c02652259ef954b1555abdf92c24fa021171" translate="yes" xml:space="preserve">
          <source>Retrieve a file in binary transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command: &lt;code&gt;'RETR filename'&lt;/code&gt;. The &lt;em&gt;callback&lt;/em&gt; function is called for each block of data received, with a single bytes argument giving the data block. The optional &lt;em&gt;blocksize&lt;/em&gt; argument specifies the maximum chunk size to read on the low-level socket object created to do the actual transfer (which will also be the largest size of the data blocks passed to &lt;em&gt;callback&lt;/em&gt;). A reasonable default is chosen. &lt;em&gt;rest&lt;/em&gt; means the same thing as in the &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">バイナリ転送モードでファイルを取得します。&lt;em&gt;cmd&lt;/em&gt;は適切な &lt;code&gt;RETR&lt;/code&gt; コマンドである必要があります： &lt;code&gt;'RETR filename'&lt;/code&gt; 。&lt;em&gt;コールバック&lt;/em&gt;関数は、データ・ブロックを与える単一バイトの引数を指定して、受信されたデータの各ブロックのために呼び出されます。オプションの&lt;em&gt;blocksize&lt;/em&gt;引数は、実際の転送を行うために作成された低レベルのソケットオブジェクトで読み取る最大チャンクサイズを指定します（これは、&lt;em&gt;callbackに&lt;/em&gt;渡されるデータブロックの最大サイズでもあり&lt;em&gt;ます&lt;/em&gt;）。妥当なデフォルトが選択されています。&lt;em&gt;rest&lt;/em&gt;は&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;メソッドと同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="403a1578829a239110dcbec03c2d403a31503e65" translate="yes" xml:space="preserve">
          <source>Retrieve a file or directory listing in ASCII transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt;&lt;code&gt;retrbinary()&lt;/code&gt;&lt;/a&gt;) or a command such as &lt;code&gt;LIST&lt;/code&gt; or &lt;code&gt;NLST&lt;/code&gt; (usually just the string &lt;code&gt;'LIST'&lt;/code&gt;). &lt;code&gt;LIST&lt;/code&gt; retrieves a list of files and information about those files. &lt;code&gt;NLST&lt;/code&gt; retrieves a list of file names. The &lt;em&gt;callback&lt;/em&gt; function is called for each line with a string argument containing the line with the trailing CRLF stripped. The default &lt;em&gt;callback&lt;/em&gt; prints the line to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">ASCII転送モードでファイルまたはディレクトリのリストを取得します。&lt;em&gt;cmd&lt;/em&gt;は、適切な &lt;code&gt;RETR&lt;/code&gt; コマンド（&lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt; &lt;code&gt;retrbinary()&lt;/code&gt; を&lt;/a&gt;参照）または &lt;code&gt;LIST&lt;/code&gt; や &lt;code&gt;NLST&lt;/code&gt; （通常は文字列 &lt;code&gt;'LIST'&lt;/code&gt; のみ）などのコマンドである必要があります。 &lt;code&gt;LIST&lt;/code&gt; は、ファイルのリストとそれらのファイルに関する情報を取得します。 &lt;code&gt;NLST&lt;/code&gt; は、ファイル名のリストを取得します。&lt;em&gt;コールバック&lt;/em&gt;関数は、CRLFを剥離末尾の行を含む文字列引数でライン毎に呼び出されます。デフォルトの&lt;em&gt;コールバック&lt;/em&gt;は、行を &lt;code&gt;sys.stdout&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="b2a88b305ebc7b5b00700b8d401c79669327e470" translate="yes" xml:space="preserve">
          <source>Retrieve a file or directory listing in the encoding specified by the &lt;em&gt;encoding&lt;/em&gt; parameter at initialization. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;RETR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt;&lt;code&gt;retrbinary()&lt;/code&gt;&lt;/a&gt;) or a command such as &lt;code&gt;LIST&lt;/code&gt; or &lt;code&gt;NLST&lt;/code&gt; (usually just the string &lt;code&gt;'LIST'&lt;/code&gt;). &lt;code&gt;LIST&lt;/code&gt; retrieves a list of files and information about those files. &lt;code&gt;NLST&lt;/code&gt; retrieves a list of file names. The &lt;em&gt;callback&lt;/em&gt; function is called for each line with a string argument containing the line with the trailing CRLF stripped. The default &lt;em&gt;callback&lt;/em&gt; prints the line to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">初期化時に&lt;em&gt;encoding&lt;/em&gt;パラメータで指定された&lt;em&gt;エンコーディング&lt;/em&gt;でファイルまたはディレクトリのリストを取得します。&lt;em&gt;cmd&lt;/em&gt;は、適切な &lt;code&gt;RETR&lt;/code&gt; コマンド（&lt;a href=&quot;#ftplib.FTP.retrbinary&quot;&gt; &lt;code&gt;retrbinary()&lt;/code&gt; を&lt;/a&gt;参照）または &lt;code&gt;LIST&lt;/code&gt; や &lt;code&gt;NLST&lt;/code&gt; などのコマンド（通常は文字列 &lt;code&gt;'LIST'&lt;/code&gt; のみ）である必要があります。 &lt;code&gt;LIST&lt;/code&gt; は、ファイルのリストとそれらのファイルに関する情報を取得します。 &lt;code&gt;NLST&lt;/code&gt; は、ファイル名のリストを取得します。&lt;em&gt;コールバック&lt;/em&gt;関数は、CRLFを剥離末尾の行を含む文字列引数でライン毎に呼び出されます。デフォルトの&lt;em&gt;コールバック&lt;/em&gt;は、行を &lt;code&gt;sys.stdout&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="34e4ce9007d9fe4d7db869d382b75d7b77760830" translate="yes" xml:space="preserve">
          <source>Retrieve a given field value. The &lt;em&gt;key&lt;/em&gt; argument will be either an integer or a string. If it is an integer, it represents the index of the positional argument in &lt;em&gt;args&lt;/em&gt;; if it is a string, then it represents a named argument in &lt;em&gt;kwargs&lt;/em&gt;.</source>
          <target state="translated">指定されたフィールド値を取得します。&lt;em&gt;キー&lt;/em&gt;引数は、整数または文字列になります。整数の場合は、&lt;em&gt;argsの&lt;/em&gt;位置引数のインデックスを表します。文字列の場合、&lt;em&gt;kwargsの&lt;/em&gt;名前付き引数を&lt;em&gt;表し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ddb345d237bdc2e27d9ef8f67a70e7322321eb04" translate="yes" xml:space="preserve">
          <source>Retrieve a module &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the given &lt;em&gt;fullname&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;フルネームの&lt;/em&gt;モジュール&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da3784969075ecad2bec4795269bc2e4297b68a0" translate="yes" xml:space="preserve">
          <source>Retrieve a module &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the given &lt;em&gt;fullname&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;フルネームの&lt;/em&gt;モジュール&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8919bef3324bc95bc2bf3497e6f00f66069fe0ac" translate="yes" xml:space="preserve">
          <source>Retrieve an attribute of the font.</source>
          <target state="translated">フォントの属性を取得します。</target>
        </trans-unit>
        <trans-unit id="e555659165e22b46f6feb4470ecdaa9807473caf" translate="yes" xml:space="preserve">
          <source>Retrieve attributes without triggering dynamic lookup via the descriptor protocol, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">記述子プロトコル&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;介して動的ルックアップをトリガーせずに属性を取得します。</target>
        </trans-unit>
        <trans-unit id="cb4100592b2231679bc7716f8215bd30fd0fa3df" translate="yes" xml:space="preserve">
          <source>Retrieve attributes without triggering dynamic lookup via the descriptor protocol, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">記述子プロトコル&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;介して動的ルックアップをトリガーせずに属性を取得します。</target>
        </trans-unit>
        <trans-unit id="095f446af8551d23d2a1674c7e2a391418e4bf4f" translate="yes" xml:space="preserve">
          <source>Retrieve certificates from Windows&amp;rsquo; system cert store. &lt;em&gt;store_name&lt;/em&gt; may be one of &lt;code&gt;CA&lt;/code&gt;, &lt;code&gt;ROOT&lt;/code&gt; or &lt;code&gt;MY&lt;/code&gt;. Windows may provide additional cert stores, too.</source>
          <target state="translated">Windowsのシステム証明書ストアから証明書を取得します。&lt;em&gt;store_name&lt;/em&gt;は、 &lt;code&gt;CA&lt;/code&gt; 、 &lt;code&gt;ROOT&lt;/code&gt; 、または &lt;code&gt;MY&lt;/code&gt; のいずれかです。Windowsは追加の証明書ストアも提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="24312e283e6a9618ce207282ee3080d2bfc8ce86" translate="yes" xml:space="preserve">
          <source>Retrieve the currently selected item.</source>
          <target state="translated">現在選択されている項目を取得します。</target>
        </trans-unit>
        <trans-unit id="b0de8ed0cc7910fcfaba0e2f18f4aaa4b647ad9e" translate="yes" xml:space="preserve">
          <source>Retrieve the file filter currently in use.</source>
          <target state="translated">現在使用中のファイルフィルタを取得します。</target>
        </trans-unit>
        <trans-unit id="8ccfa542fbbdb7bda5d2e0ee405c1ff561d2dfc4" translate="yes" xml:space="preserve">
          <source>Retrieve the next item from the &lt;em&gt;iterator&lt;/em&gt; by calling its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method. If &lt;em&gt;default&lt;/em&gt; is given, it is returned if the iterator is exhausted, otherwise &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、&lt;em&gt;イテレータ&lt;/em&gt;から次のアイテムを取得し&lt;em&gt;ます&lt;/em&gt;。場合は&lt;em&gt;、デフォルトが&lt;/em&gt;与えられ、イテレータが消耗されている場合、それ以外の場合は返される&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3960139ac0ae3868793691905f6a343b2c0c77ad" translate="yes" xml:space="preserve">
          <source>Retrieve the specified &lt;code&gt;ANNOTATION&lt;/code&gt;s for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">&lt;em&gt;メールボックスの&lt;/em&gt;指定された &lt;code&gt;ANNOTATION&lt;/code&gt; を取得し&lt;em&gt;ます&lt;/em&gt;。このメソッドは非標準ですが、 &lt;code&gt;Cyrus&lt;/code&gt; サーバーでサポートされています。</target>
        </trans-unit>
        <trans-unit id="6db53bb97bca1b73a57fd8d7aaab895090eadc3b" translate="yes" xml:space="preserve">
          <source>Retrieve whole message number &lt;em&gt;which&lt;/em&gt;, and set its seen flag. Result is in form &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;which&lt;/em&gt;全体のメッセージ番号&lt;em&gt;を&lt;/em&gt;取得&lt;em&gt;し&lt;/em&gt;、そのseenフラグを設定します。結果は形式 &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4dab3e703a390019191d739774a97d6d6c3d1910" translate="yes" xml:space="preserve">
          <source>Retrieves the contents of &lt;em&gt;url&lt;/em&gt; and places it in &lt;em&gt;filename&lt;/em&gt;. The return value is a tuple consisting of a local filename and either an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; object containing the response headers (for remote URLs) or &lt;code&gt;None&lt;/code&gt; (for local URLs). The caller must then open and read the contents of &lt;em&gt;filename&lt;/em&gt;. If &lt;em&gt;filename&lt;/em&gt; is not given and the URL refers to a local file, the input filename is returned. If the URL is non-local and &lt;em&gt;filename&lt;/em&gt; is not given, the filename is the output of &lt;a href=&quot;tempfile#tempfile.mktemp&quot;&gt;&lt;code&gt;tempfile.mktemp()&lt;/code&gt;&lt;/a&gt; with a suffix that matches the suffix of the last path component of the input URL. If &lt;em&gt;reporthook&lt;/em&gt; is given, it must be a function accepting three numeric parameters: A chunk number, the maximum size chunks are read in and the total size of the download (-1 if unknown). It will be called once at the start and after each chunk of data is read from the network. &lt;em&gt;reporthook&lt;/em&gt; is ignored for local URLs.</source>
          <target state="translated">&lt;em&gt;url&lt;/em&gt;のコンテンツを取得し、&lt;em&gt;filenameに&lt;/em&gt;配置し&lt;em&gt;ます&lt;/em&gt;。戻り値は、ローカルファイル名と、応答ヘッダー（リモートURLの場合）または &lt;code&gt;None&lt;/code&gt; （ローカルURLの場合）を含む&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;オブジェクトで構成されるタプルです。次に、呼び出し元は&lt;em&gt;filename&lt;/em&gt;の内容を開いて読み取る必要があり&lt;em&gt;ます&lt;/em&gt;。場合は&lt;em&gt;、ファイル名が&lt;/em&gt;与えられ、URLがローカルファイルを参照されていない、入力ファイル名が返されます。 URLがローカルではなく、&lt;em&gt;ファイル名&lt;/em&gt;が指定されていない場合、ファイル名は&lt;a href=&quot;tempfile#tempfile.mktemp&quot;&gt; &lt;code&gt;tempfile.mktemp()&lt;/code&gt; の&lt;/a&gt;出力であり、サフィックスは入力URLの最後のパスコンポーネントのサフィックスと一致します。&lt;em&gt;レポートフックの&lt;/em&gt;場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;が与えられた場合、これは3つの数値パラメーターを受け入れる関数でなければなりません。チャンク番号、チャンクの最大サイズ、およびダウンロードの合計サイズ（不明の場合は-1）。これは、最初と、データの各チャンクがネットワークから読み取られた後に1回呼び出されます。ローカルURLの場合、&lt;em&gt;reporthook&lt;/em&gt;は無視されます。</target>
        </trans-unit>
        <trans-unit id="385d63055e6af1c2077e2fd207836302b9c7e071" translate="yes" xml:space="preserve">
          <source>Retrieves the message header plus &lt;em&gt;howmuch&lt;/em&gt; lines of the message after the header of message number &lt;em&gt;which&lt;/em&gt;. Result is in form &lt;code&gt;(response, ['line', ...],
octets)&lt;/code&gt;.</source>
          <target state="translated">メッセージヘッダに加え取得&lt;em&gt;howmuch&lt;/em&gt;メッセージ数のヘッダの後にメッセージの行を&lt;em&gt;どの&lt;/em&gt;。結果は形式 &lt;code&gt;(response, ['line', ...], octets)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6b9010bcfc3cfcd8b404b1f0d738ea82a1a9e695" translate="yes" xml:space="preserve">
          <source>Retrieves the specialized header associated with &lt;em&gt;name&lt;/em&gt; from the registry (using &lt;em&gt;default_class&lt;/em&gt; if &lt;em&gt;name&lt;/em&gt; does not appear in the registry) and composes it with &lt;em&gt;base_class&lt;/em&gt; to produce a class, calls the constructed class&amp;rsquo;s constructor, passing it the same argument list, and finally returns the class instance created thereby.</source>
          <target state="translated">レジストリから&lt;em&gt;名前に&lt;/em&gt;関連付けられた特殊なヘッダーを取得し（&lt;em&gt;名前&lt;/em&gt;がレジストリに表示されない場合は&lt;em&gt;default_class&lt;/em&gt;を使用）、それを&lt;em&gt;base_classで&lt;/em&gt;構成して&lt;em&gt;クラス&lt;/em&gt;を生成し、構築されたクラスのコンストラクターを呼び出して同じ引数リストを渡し、最後にクラスを返しますそれによって作成されたインスタンス。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b535a36014b3e3d0d355c23706e49c2322351aa" translate="yes" xml:space="preserve">
          <source>Retrieves the type and data for a specified value name associated with an open registry key.</source>
          <target state="translated">オープンレジストリキーに関連付けられた指定された値名の型とデータを取得します。</target>
        </trans-unit>
        <trans-unit id="c7066d204c02602ef3b97ae65a6595bc017e2020" translate="yes" xml:space="preserve">
          <source>Retrieves the unnamed value for a key, as a string.</source>
          <target state="translated">キーの名前のない値を文字列として取得します。</target>
        </trans-unit>
        <trans-unit id="587ed14e9a3d458f00e2e528b8587f02619e6ac3" translate="yes" xml:space="preserve">
          <source>Retrieves the value set by &lt;a href=&quot;#curses.set_escdelay&quot;&gt;&lt;code&gt;set_escdelay()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.set_escdelay&quot;&gt; &lt;code&gt;set_escdelay()&lt;/code&gt; &lt;/a&gt;によって設定された値を取得します。</target>
        </trans-unit>
        <trans-unit id="fb690ad09aa8321e2219ddb1fecb43562f45b4c9" translate="yes" xml:space="preserve">
          <source>Retrieves the value set by &lt;a href=&quot;#curses.set_tabsize&quot;&gt;&lt;code&gt;set_tabsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.set_tabsize&quot;&gt; &lt;code&gt;set_tabsize()&lt;/code&gt; で&lt;/a&gt;設定された値を取得します。</target>
        </trans-unit>
        <trans-unit id="0a12de40909dd920a73fcf3dee7b8791a3030550" translate="yes" xml:space="preserve">
          <source>Retrieving source code</source>
          <target state="translated">ソースコードの取得</target>
        </trans-unit>
        <trans-unit id="8489002e10280e19aeb925f9b1cf2bf436a33f09" translate="yes" xml:space="preserve">
          <source>Retry the request with authentication information, if available.</source>
          <target state="translated">認証情報があれば、リクエストを再試行します。</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="92d58116afd8a3734b15b3a4bf9d7a231cbdbab3" translate="yes" xml:space="preserve">
          <source>Return (bytes, is_cryptographic): bytes are &lt;em&gt;num&lt;/em&gt; pseudo-random bytes, is_cryptographic is &lt;code&gt;True&lt;/code&gt; if the bytes generated are cryptographically strong. Raises an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if the operation is not supported by the current RAND method.</source>
          <target state="translated">戻り値（バイト、is_cryptographic）：バイトは&lt;em&gt;numの&lt;/em&gt;疑似ランダムバイトであり、生成されたバイトが暗号的に強い場合、is_cryptographicは &lt;code&gt;True&lt;/code&gt; です。操作が現在のRANDメソッドでサポートされていない場合は、&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3498aeacce2a34d6a0b6d6230500f8e683513a49" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object with same year, month and day.</source>
          <target state="translated">同じ年、月、日の&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="70f09a6299864364a55efc6ab7b739eacc94902c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object with same hour, minute, second, microsecond and fold. &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;. See also method &lt;a href=&quot;#datetime.datetime.timetz&quot;&gt;&lt;code&gt;timetz()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リターン&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;と同じ時間、分、秒、マイクロ秒と倍を持つオブジェクト。&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;None&lt;/code&gt; です。メソッド&lt;a href=&quot;#datetime.datetime.timetz&quot;&gt; &lt;code&gt;timetz()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="f8f39d2001e59b40bf2e984998187dd7a44afb78" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object with same hour, minute, second, microsecond, fold, and tzinfo attributes. See also method &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同じ時、分、秒、マイクロ秒、フォールド、およびtzinfo属性を持つ&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。メソッド&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0285753e7269b18b9d11ac29cc151c28e2ca833a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or the sequence of allowed domains (as a tuple).</source>
          <target state="translated">&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、または許可されたドメインのシーケンスを（タプルとして）返します。</target>
        </trans-unit>
        <trans-unit id="7af064dbad7a00c0b1a87689c780ecae0d15d13a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is a tar archive file, that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module can read.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt;がtarアーカイブファイルであり、&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールが読み取ることができる場合、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfe065b0df600028f9292a806af50dd8f531add6" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is a tar archive file, that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module can read. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, file, or file-like object.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt;がtarアーカイブファイルであり、&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールが読み取ることができる場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;name&lt;/em&gt;は、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、file、またはファイルのようなオブジェクトです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="093368eba3cb25719ed94f851fc393590fdf6de9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;name&lt;/em&gt; is in the set of SMTP service extensions returned by the server, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Case is ignored.</source>
          <target state="translated">サーバーから返されたSMTPサービス拡張のセットに&lt;em&gt;名前&lt;/em&gt;が含まれている場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返し、そうでない場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。大文字と小文字は無視されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e94b8938ece9e8b213ea593cb155099ca78f037" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;obj&lt;/em&gt; is true, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. This is equivalent to using the &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">戻り&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;場合&lt;em&gt;objが&lt;/em&gt;真、かつある&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;そう。これは、&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;コンストラクタを使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="24fd644ca1d49b92dfc4713ccf90fe040848fc46" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a FIFO.</source>
          <target state="translated">FIFOの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="81cd5e95f0922a185d61fa908fc4e1e1cdfe7f5f" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a block device.</source>
          <target state="translated">ブロックデバイスの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5a5e12c63024db3962cbd1c2f1797b30783c11b9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a character device.</source>
          <target state="translated">キャラクターデバイスなら&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f220814202d4e857c68fe2f395e63adc3cf27cc9" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a directory.</source>
          <target state="translated">ディレクトリの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="6150561205505991387a58a2d577338831483f9c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a hard link.</source>
          <target state="translated">ハードリンクの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="c53122f3b26b98d323738f4ac4df134b1caeaf6e" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is a symbolic link.</source>
          <target state="translated">シンボリックリンクの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f23a3800d797c6e6f2d151aebb523b368e45adc6" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if it is one of character device, block device or FIFO.</source>
          <target state="translated">キャラクター型デバイス、ブロック型デバイス、FIFOのいずれかであれば&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="ea6c7e02552f697e35babcdd2d4bfef42f279cb1" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;Tarinfo&lt;/code&gt; object is a regular file.</source>
          <target state="translated">&lt;code&gt;Tarinfo&lt;/code&gt; オブジェクトが通常のファイルの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="2abebad43ed00422c6027529f028a85489fd8b40" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;object&lt;/em&gt; argument appears callable, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not. If this returns &lt;code&gt;True&lt;/code&gt;, it is still possible that a call fails, but if it is &lt;code&gt;False&lt;/code&gt;, calling &lt;em&gt;object&lt;/em&gt; will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;オブジェクトの&lt;/em&gt;引数が呼び出し可能に見える場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、そうでない場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。これが &lt;code&gt;True&lt;/code&gt; を返す場合でも、呼び出しが失敗する可能性はありますが、 &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;オブジェクトの&lt;/em&gt;呼び出しは成功しません。クラスは呼び出し可能であることに注意してください（クラスを呼び出すと、新しいインスタンスが返されます）。クラスに&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドがある場合、インスタンスは呼び出し可能です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a41c1ab09e831d4ee7da0cc2ff95a5a646c80317" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;object&lt;/em&gt; argument appears callable, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not. If this returns &lt;code&gt;True&lt;/code&gt;, it is still possible that a call fails, but if it is &lt;code&gt;False&lt;/code&gt;, calling &lt;em&gt;object&lt;/em&gt; will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;引数が呼び出し可能と思われる場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返し、そうでない場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。これが &lt;code&gt;True&lt;/code&gt; を返す場合でも、呼び出しが失敗する可能性がありますが、 &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;オブジェクトの&lt;/em&gt;呼び出しは成功しません。クラスは呼び出し可能であることに注意してください（クラスを呼び出すと新しいインスタンスが返されます）。クラスに&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドがある場合、インスタンスは呼び出し可能です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b250f27498f743473d64af0630b859fa31e2ff93" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the Python interpreter is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;shutting down&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Pythonインタープリターが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;シャットダウンしている&lt;/a&gt;場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返し、そうでない場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="6384212a3be99a675a4716a4fbd9659b9c06f920" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the Python interpreter is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;shutting down&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Pythonインタープリターが&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;シャットダウンしている&lt;/a&gt;場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返し、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="dfe6649437d1f19f39f569f1bb27687988e65f55" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument has a negative sign and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Note that zeros and NaNs can both carry signs.</source>
          <target state="translated">引数に負の符号がある場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、そうでない場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。ゼロとNaNの両方に符号を付けることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f12d5608b79473f8379a1ead78cdeb9bd426454a" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a (positive or negative) zero and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数が（正または負の）ゼロの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="601693ce8ca7356e92f067e8ea52c52cdb12670b" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a (quiet or signaling) NaN and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数が（無音またはシグナリング）NaNの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="4930ff573a7bad0aecc492db9aebbf1393590af4" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a &lt;em&gt;normal&lt;/em&gt; finite number. Return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if the argument is zero, subnormal, infinite or a NaN.</source>
          <target state="translated">引数が&lt;em&gt;通常の&lt;/em&gt;有限数であれば&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。引数がゼロ、非正規、無限、またはNaNの場合は、&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65323e12210e87344092d755064aa0886a22fb00" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a finite number, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if the argument is an infinity or a NaN.</source>
          <target state="translated">引数が有限数の場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、引数が無限大またはNaNの場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="bc910198797e97ee0573c35ef24209b1a5e24ac3" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a quiet NaN, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数がクワイエットNaNの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="86ba126a70bb610fab44c2dca4a0f2d1c5462567" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is a signaling NaN and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数がシグナルNaNの場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="838b03440dd12c5952d25816baf47c64d10abdf4" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is canonical and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Currently, a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance is always canonical, so this operation always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数が正規の場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。現在、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスは常に標準的であるため、この操作は常に&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="dad937519bc5eb8dff85d0c0be025f80eebe2519" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is either positive or negative infinity and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数が正または負の無限大の場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="7969a9d1bcae3866adb865cb0ec86c576363c00c" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the argument is subnormal, and &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">引数が非正規であれば&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;、そうでなければ&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="97ccedce3e6307e9a0bc7160b29f2555e7299cee" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the transport supports &lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt;&lt;code&gt;write_eof()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if not.</source>
          <target state="translated">戻り&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;輸送サポートしている場合&lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt; &lt;code&gt;write_eof()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合ではありません。</target>
        </trans-unit>
        <trans-unit id="26514045ec9a1ff63702fb3558eff12b5735fd29" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if the transport supports sending EOF.</source>
          <target state="translated">トランスポートがEOFの送信をサポートしている場合は&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="46b2d3c933291bb12517fa733d54850c62c10276" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the entire contents of the buffer.</source>
          <target state="translated">バッファの内容全体を含む&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="8c1556ddf94acefe00bb3b6df3badf33a08c7fa8" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;struct#struct.calcsize&quot;&gt;&lt;code&gt;struct.calcsize()&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;nPn{fmt}0n&lt;/code&gt; or, if &lt;code&gt;gettotalrefcount&lt;/code&gt; exists, &lt;code&gt;2PnPn{fmt}0P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nPn{fmt}0n&lt;/code&gt; 場合は&lt;a href=&quot;struct#struct.calcsize&quot;&gt; &lt;code&gt;struct.calcsize()&lt;/code&gt; &lt;/a&gt;を返し、 &lt;code&gt;gettotalrefcount&lt;/code&gt; が存在する場合は &lt;code&gt;2PnPn{fmt}0P&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="316b341c2f5ad47d174f9abfb2aac9792d9b68ca" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;struct#struct.calcsize&quot;&gt;&lt;code&gt;struct.calcsize()&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;nP{fmt}0n&lt;/code&gt; or, if &lt;code&gt;gettotalrefcount&lt;/code&gt; exists, &lt;code&gt;2PnP{fmt}0P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nP{fmt}0n&lt;/code&gt; &lt;a href=&quot;struct#struct.calcsize&quot;&gt; &lt;code&gt;struct.calcsize()&lt;/code&gt; &lt;/a&gt;を返します &lt;code&gt;gettotalrefcount&lt;/code&gt; が存在する場合は、 &lt;code&gt;2PnP{fmt}0P&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d1d847ed232bb9cad52d07be25cff747a7b7f262" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(exitcode, output)&lt;/code&gt; of executing &lt;em&gt;cmd&lt;/em&gt; in a shell.</source>
          <target state="translated">シェルで&lt;em&gt;cmd&lt;/em&gt;を実行した &lt;code&gt;(exitcode, output)&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de1dcaa07d00a86d3004a1250464c4533d42159d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(failure_count, test_count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(failure_count, test_count)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="a91d7a0d4c56e2705fb7930bba2ebcd2668de723" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Decimal(10)&lt;/code&gt;, the radix (base) in which the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; class does all its arithmetic. Included for compatibility with the specification.</source>
          <target state="translated">&lt;code&gt;Decimal(10)&lt;/code&gt; を返します。これは、&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;クラスがすべての演算を行う基数（ベース）です。仕様との互換性のために含まれています。</target>
        </trans-unit>
        <trans-unit id="ed8e84ba2b1892a25a3e2e7b13b185f76884fb13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;False&lt;/code&gt; if cookies should not be returned, given cookie domain.</source>
          <target state="translated">Cookieドメインを指定して、Cookieを返さない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="40ddb6e4525f3314dcdd8fb22aec4667c7f51a61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;False&lt;/code&gt; if cookies should not be returned, given cookie path.</source>
          <target state="translated">Cookieパスを指定して、Cookieを返さない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a1a79045f8cf2a891e5fa086886c4c8940e81a94" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; to request a normal &lt;code&gt;250 Ok&lt;/code&gt; response; otherwise return the desired response string in &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt; format.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; を返し、通常の &lt;code&gt;250 Ok&lt;/code&gt; 応答を要求します。それ以外の場合は、&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;形式で目的の応答文字列を返します。</target>
        </trans-unit>
        <trans-unit id="8c178f2f5253c6efc74e592899d5ef8bd2adda80" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for ignorable characters. The character &lt;em&gt;ch&lt;/em&gt; is ignorable if &lt;em&gt;ch&lt;/em&gt; is a space or tab, otherwise it is not ignorable. Used as a default for parameter &lt;em&gt;charjunk&lt;/em&gt; in &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">無視できる文字の場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;ch&lt;/em&gt;がスペースまたはタブの場合、文字&lt;em&gt;ch&lt;/em&gt;は無視できます。それ以外の場合、無視できません。パラメータのデフォルトとして使用&lt;em&gt;charjunk&lt;/em&gt;で&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50ce3787d5c52cc992d4f0d4d3fe8ca17603e1e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for ignorable lines. The line &lt;em&gt;line&lt;/em&gt; is ignorable if &lt;em&gt;line&lt;/em&gt; is blank or contains a single &lt;code&gt;'#'&lt;/code&gt;, otherwise it is not ignorable. Used as a default for parameter &lt;em&gt;linejunk&lt;/em&gt; in &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; in older versions.</source>
          <target state="translated">無視できる行の場合は &lt;code&gt;True&lt;/code&gt; を返します。ライン&lt;em&gt;ラインが&lt;/em&gt;あれば無視できる&lt;em&gt;行は&lt;/em&gt;空白であるか、単一含まれている &lt;code&gt;'#'&lt;/code&gt; 、それ以外の場合は無視できません。パラメータのデフォルトとして使用&lt;em&gt;linejunk&lt;/em&gt;で&lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt;旧バージョンインチ</target>
        </trans-unit>
        <trans-unit id="adf2a1e3bfbbed0f518f14b41d322ec7ef4029b7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for non-terminal token values.</source>
          <target state="translated">非終端トークン値の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a4559a4f32f117e2402898f4b3dc8a930d0fd844" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; for terminal token values.</source>
          <target state="translated">端末トークンの値に対して &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="625136be506a620b8685cf8e1b601a0f137c13b7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &amp;lsquo;header_name&amp;rsquo; is an HTTP/1.1 &amp;ldquo;Hop-by-Hop&amp;rdquo; header, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2616で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;ている&lt;/strong&gt;ように、「header_name」がHTTP / 1.1の「Hop-by-Hop」ヘッダーの場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7169a45bbce4543e8eeaf654070e82fb3b3dc82e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#curses.endwin&quot;&gt;&lt;code&gt;endwin()&lt;/code&gt;&lt;/a&gt; has been called (that is, the curses library has been deinitialized).</source>
          <target state="translated">&lt;a href=&quot;#curses.endwin&quot;&gt; &lt;code&gt;endwin()&lt;/code&gt; &lt;/a&gt;が呼び出された場合（つまり、cursesライブラリが初期化されていない場合）は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="03489bb44d44ce227ab6538932ea2f7ccc03b9f3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#curses.resize_term&quot;&gt;&lt;code&gt;resize_term()&lt;/code&gt;&lt;/a&gt; would modify the window structure, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#curses.resize_term&quot;&gt; &lt;code&gt;resize_term()&lt;/code&gt; &lt;/a&gt;がウィンドウ構造を変更する場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="48bd7e343aad3c970ef39155526a7f32e96f06a9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#importlib.machinery.SourceFileLoader.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; appears to be for a package.</source>
          <target state="translated">&lt;a href=&quot;#importlib.machinery.SourceFileLoader.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;がパッケージ用であると思われる場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9f362831e0a56c769ad986dfab464c867f9e279e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;sys.executable interpreter&lt;/code&gt; requires environment variables in order to be able to run at all.</source>
          <target state="translated">戻り &lt;code&gt;True&lt;/code&gt; 場合 &lt;code&gt;sys.executable interpreter&lt;/code&gt; すべてで実行できるようにするために、環境変数が必要です。</target>
        </trans-unit>
        <trans-unit id="752d4ae38801a49a32090936d310f759690c334f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;class&lt;/em&gt; is a subclass (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) of &lt;em&gt;classinfo&lt;/em&gt;. A class is considered a subclass of itself. &lt;em&gt;classinfo&lt;/em&gt; may be a tuple of class objects, in which case every entry in &lt;em&gt;classinfo&lt;/em&gt; will be checked. In any other case, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">&lt;em&gt;class&lt;/em&gt;が&lt;em&gt;classinfoの&lt;/em&gt;サブクラス（直接、間接、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;仮想&lt;/a&gt;）の場合、 &lt;code&gt;True&lt;/code&gt; を返します。クラスはそれ自体のサブクラスと見なされます。&lt;em&gt;classinfo&lt;/em&gt;は、クラスオブジェクトのタプルである場合があります。その場合、&lt;em&gt;classinfoの&lt;/em&gt;すべてのエントリがチェックされます。それ以外の場合は、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ff57df9b3849ea092c4d7fe6f773a4c0ce7f33d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;class&lt;/em&gt; is a subclass (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) of &lt;em&gt;classinfo&lt;/em&gt;. A class is considered a subclass of itself. &lt;em&gt;classinfo&lt;/em&gt; may be a tuple of class objects, in which case every entry in &lt;em&gt;classinfo&lt;/em&gt; will be checked. In any other case, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">&lt;em&gt;クラス&lt;/em&gt;が&lt;em&gt;classinfoの&lt;/em&gt;サブクラス（直接、間接、または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;仮想&lt;/a&gt;）の場合は &lt;code&gt;True&lt;/code&gt; を返します。クラスはそれ自体のサブクラスと見なされます。&lt;em&gt;classinfo&lt;/em&gt;は、クラスオブジェクトのタプルである場合があります。その場合、&lt;em&gt;classinfoの&lt;/em&gt;すべてのエントリがチェックされます。それ以外の場合は、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3065ecb1059c754989e97319a594623925b2a3dd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;d&lt;/em&gt; has a key &lt;em&gt;key&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;d&lt;/em&gt;にキー&lt;em&gt;key&lt;/em&gt;がある場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c977adab4811ed32117fab5f86084513622f8bc" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;func&lt;/em&gt; is a &lt;a href=&quot;#coroutine&quot;&gt;coroutine function&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt;が&lt;a href=&quot;#coroutine&quot;&gt;コルーチン関数の&lt;/a&gt;場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b21fb1683c7ba03ded90dc10609c46a391b220b2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;key&lt;/em&gt; corresponds to a message, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;キー&lt;/em&gt;がメッセージに対応する場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51fe5e8de7847d7ef04c1a31e8e987d93e6fcf5c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;obj&lt;/em&gt; is a &lt;a href=&quot;#coroutine&quot;&gt;coroutine object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;が&lt;a href=&quot;#coroutine&quot;&gt;コルーチンオブジェクトの&lt;/a&gt;場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a051d8859c64dd677a9284f5e35c545211efe1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;obj&lt;/em&gt; is either of:</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;が次のいずれかである場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="649f832e2bb1e0d42b8abaab3261af8630996ce2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;other&lt;/em&gt; refers to the same node as this node. This is especially useful for DOM implementations which use any sort of proxy architecture (because more than one object can refer to the same node).</source>
          <target state="translated">&lt;em&gt;他が&lt;/em&gt;このノードと同じノードを参照している場合、 &lt;code&gt;True&lt;/code&gt; を返します。これは、プロキシアーキテクチャの種類を使用するDOM実装で特に役立ちます（複数のオブジェクトが同じノードを参照できるため）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc1798c291263774e39cc31309eb6a442ebe1c6d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; directory. This follows symbolic links, so both &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.isdir&quot;&gt;&lt;code&gt;isdir()&lt;/code&gt;&lt;/a&gt; can be true for the same path.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;が&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;ディレクトリの場合は &lt;code&gt;True&lt;/code&gt; を返します。これはシンボリックリンクをたどるので、同じパスに対して&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#os.path.isdir&quot;&gt; &lt;code&gt;isdir()&lt;/code&gt; の&lt;/a&gt;両方をtrueにすることができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b472c3f5f1253bff5bb8ae78f53cbb1fc9bfe58" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; regular file. This follows symbolic links, so both &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.isfile&quot;&gt;&lt;code&gt;isfile()&lt;/code&gt;&lt;/a&gt; can be true for the same path.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;が&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;通常のファイルである場合は &lt;code&gt;True&lt;/code&gt; を返します。これはシンボリックリンクをたどるので、同じパスに対して&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#os.path.isfile&quot;&gt; &lt;code&gt;isfile()&lt;/code&gt; の&lt;/a&gt;両方をtrueにすることができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5480c1bd7c5cec37d3e846df8d79d8a45f3f379f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; is an absolute pathname. On Unix, that means it begins with a slash, on Windows that it begins with a (back)slash after chopping off a potential drive letter.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;が絶対パス名の場合は &lt;code&gt;True&lt;/code&gt; を返します。Unixでは、スラッシュで始まります。Windowsでは、潜在的なドライブ文字を切り取った後、（バック）スラッシュで始まります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cb4e4211dae636d6f7d0ca54e9130efeb56e279" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;existing&lt;/code&gt;&lt;/a&gt; directory entry that is a symbolic link. Always &lt;code&gt;False&lt;/code&gt; if symbolic links are not supported by the Python runtime.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt;がシンボリックリンクである&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;existing&lt;/code&gt; &lt;/a&gt;ディレクトリエントリを参照している場合は、 &lt;code&gt;True&lt;/code&gt; を返します。シンボリックリンクがPythonランタイムでサポートされていない場合は、常に &lt;code&gt;False&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9d366c2ee90a6bf1f27b8185408639c38b13dc1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing path or an open file descriptor. Returns &lt;code&gt;False&lt;/code&gt; for broken symbolic links. On some platforms, this function may return &lt;code&gt;False&lt;/code&gt; if permission is not granted to execute &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; on the requested file, even if the &lt;em&gt;path&lt;/em&gt; physically exists.</source>
          <target state="translated">&lt;em&gt;パスが&lt;/em&gt;既存のパスまたは開いているファイル記述子を参照している場合は、 &lt;code&gt;True&lt;/code&gt; を返します。壊れたシンボリックリンクに対して &lt;code&gt;False&lt;/code&gt; を返します。一部のプラットフォームでは、&lt;em&gt;パスが&lt;/em&gt;物理的に存在していても、要求されたファイルに対して&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;を実行する権限が付与されていない場合、この関数は &lt;code&gt;False&lt;/code&gt; を返すことがあります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b85ad8b340793b75b5e6af29ed537f2d0fa1b50" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing path. Returns &lt;code&gt;True&lt;/code&gt; for broken symbolic links. Equivalent to &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt; on platforms lacking &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;パスが&lt;/em&gt;既存のパスを参照している場合は &lt;code&gt;True&lt;/code&gt; を返します。壊れたシンボリックリンクに対して &lt;code&gt;True&lt;/code&gt; を返します。&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; が&lt;/a&gt;ないプラットフォームでの&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; と&lt;/a&gt;同等です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32023b4a78c7b7cd7d7e71517a61bcf6812f2d83" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;resource&lt;/em&gt; is enabled and available. The list of available resources is only set when &lt;code&gt;test.regrtest&lt;/code&gt; is executing the tests.</source>
          <target state="translated">&lt;em&gt;リソース&lt;/em&gt;が有効で使用可能な場合は &lt;code&gt;True&lt;/code&gt; を返します。利用可能なリソースのリストは、 &lt;code&gt;test.regrtest&lt;/code&gt; がテストを実行しているときにのみ設定されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff995b910c13660621e7bfae722cd1fd7a07287d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;がPython&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;キーワードの&lt;/a&gt;場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f58f0a19fce0587b54726ac6f5cc665c58274a2f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python keyword.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;がPythonキーワードの場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef24cab9f3a142c963e255e7d92ea844cdee551a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;s&lt;/em&gt; is a Python soft &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;がPythonのソフト&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;キーワードの&lt;/a&gt;場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a499c4bd3eacc162fdab85413e6e6dab48bb581c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is a NaN (not a number), and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;がNaN（非数）の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60c76f416db7184a71d8d7311afdd3ee76f4adc2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is a positive or negative infinity, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が正または負の無限大の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa42da1d0ac9f50b0e111a26bffdf70b02f15c99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is in the underlying dictionary&amp;rsquo;s keys, values or items (in the latter case, &lt;em&gt;x&lt;/em&gt; should be a &lt;code&gt;(key, value)&lt;/code&gt; tuple).</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が基礎となる辞書のキー、値、または項目にある場合は &lt;code&gt;True&lt;/code&gt; を返します（後者の場合、&lt;em&gt;x&lt;/em&gt;は &lt;code&gt;(key, value)&lt;/code&gt; タプルでなければなりません）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a5f969bb1937197a68e7dd97ca8da6a61ab5d7c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is neither an infinity nor a NaN, and &lt;code&gt;False&lt;/code&gt; otherwise. (Note that &lt;code&gt;0.0&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; considered finite.)</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が無限大でもNaNでもない場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。（ &lt;code&gt;0.0&lt;/code&gt; &lt;em&gt;は&lt;/em&gt;有限&lt;em&gt;と&lt;/em&gt;見なされることに注意してください。）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b05164bae30914c3da7835121d4d0b792d42343" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;x&lt;/em&gt; is the marker indicating the end of input.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が入力の終わりを示すマーカーの場合、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0d7acfa3dc19743e2b760ea0fc1883b90b877e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if Python was not built with &lt;code&gt;-O0&lt;/code&gt; or &lt;code&gt;-Og&lt;/code&gt;.</source>
          <target state="translated">Pythonが &lt;code&gt;-O0&lt;/code&gt; または &lt;code&gt;-Og&lt;/code&gt; でビルドされていない場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bcf3b40f3033fc53a5903b23da96e8afb6e67874" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a core dump was generated for the process, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスのコアダンプが生成された場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b38fff6d322e0b1e38b12de403ff8e4eef1a3231" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a keypress is waiting to be read.</source>
          <target state="translated">キープレスが読み取られるのを待っている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ea9a46ca46268d0df7c43b4308e539f6682e3692" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a stopped child has been resumed by delivery of &lt;a href=&quot;signal#signal.SIGCONT&quot;&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;/a&gt; (if the process has been continued from a job control stop), otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">停止した子が&lt;a href=&quot;signal#signal.SIGCONT&quot;&gt; &lt;code&gt;SIGCONT&lt;/code&gt; の&lt;/a&gt;配信によって再開された場合（プロセスがジョブ制御の停止から続行された場合）は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9b106d3a89f7ceaab12c3722c6eaa04053023b8e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are ASCII decimal digits and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII decimal digits are those byte values in the sequence &lt;code&gt;b'0123456789'&lt;/code&gt;.</source>
          <target state="translated">シーケンスのすべてのバイトがASCII 10進数でシーケンスが空でない場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。ASCII 10進数は、シーケンス &lt;code&gt;b'0123456789'&lt;/code&gt; 内のバイト値です。</target>
        </trans-unit>
        <trans-unit id="e70957ed3ddefa229a1857ad4b4cb86ef49f5391" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are ASCII whitespace and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII whitespace characters are those byte values in the sequence &lt;code&gt;b' \t\n\r\x0b\f'&lt;/code&gt; (space, tab, newline, carriage return, vertical tab, form feed).</source>
          <target state="translated">シーケンスのすべてのバイトがASCII空白でシーケンスが空でない場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。ASCII空白文字は、シーケンス &lt;code&gt;b' \t\n\r\x0b\f'&lt;/code&gt; （スペース、タブ、改行、キャリッジリターン、垂直タブ、フォームフィード）のバイト値です。</target>
        </trans-unit>
        <trans-unit id="8a2f62dcf0a9e0bad35a7d51cf56250023dbaec0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are alphabetic ASCII characters and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">シーケンスのすべてのバイトがアルファベットのASCII文字で、シーケンスが空でない場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。アルファベットのASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。</target>
        </trans-unit>
        <trans-unit id="0b991f845eb91665d998b6cfdd099f902cf77362" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all bytes in the sequence are alphabetical ASCII characters or ASCII decimal digits and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. ASCII decimal digits are those byte values in the sequence &lt;code&gt;b'0123456789'&lt;/code&gt;.</source>
          <target state="translated">シーケンスのすべてのバイトがアルファベットのASCII文字またはASCII 10進数字であり、シーケンスが空でない場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。アルファベットのASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。ASCII 10進数は、シーケンス &lt;code&gt;b'0123456789'&lt;/code&gt; 内のバイト値です。</target>
        </trans-unit>
        <trans-unit id="5028a8849455e69d4edb7224b70c2f92e21ce475" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all cased characters &lt;a href=&quot;#id15&quot; id=&quot;id6&quot;&gt;4&lt;/a&gt; in the string are lowercase and there is at least one cased character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">文字列内のすべての大文字小文字&lt;a href=&quot;#id15&quot; id=&quot;id6&quot;&gt;4&lt;/a&gt;が小文字で、少なくとも1つの大文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6dc757eb2200a3a03f503111a85181c91dd6a935" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all cased characters &lt;a href=&quot;#id15&quot; id=&quot;id7&quot;&gt;4&lt;/a&gt; in the string are uppercase and there is at least one cased character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">文字列内のすべての大文字小文字&lt;a href=&quot;#id15&quot; id=&quot;id7&quot;&gt;4&lt;/a&gt;が大文字で、大文字小文字が1つ以上ある場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c8f26261bd7a3382ca9bb8bcb049bf2e27bbc734" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are alphabetic and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Alphabetic characters are those characters defined in the Unicode character database as &amp;ldquo;Letter&amp;rdquo;, i.e., those with general category property being one of &amp;ldquo;Lm&amp;rdquo;, &amp;ldquo;Lt&amp;rdquo;, &amp;ldquo;Lu&amp;rdquo;, &amp;ldquo;Ll&amp;rdquo;, or &amp;ldquo;Lo&amp;rdquo;. Note that this is different from the &amp;ldquo;Alphabetic&amp;rdquo; property defined in the Unicode Standard.</source>
          <target state="translated">文字列内のすべての文字がアルファベットで少なくとも1文字ある場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。アルファベット文字は、Unicode文字データベースで「レター」として定義されている文字です。つまり、一般的なカテゴリプロパティが「Lm」、「Lt」、「Lu」、「Ll」、または「Lo」のいずれかです。これは、Unicode標準で定義されている「Alphabetic」プロパティとは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fef6425a0b8cf0f974d1d87b52c20a297cab19a1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are alphanumeric and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. A character &lt;code&gt;c&lt;/code&gt; is alphanumeric if one of the following returns &lt;code&gt;True&lt;/code&gt;: &lt;code&gt;c.isalpha()&lt;/code&gt;, &lt;code&gt;c.isdecimal()&lt;/code&gt;, &lt;code&gt;c.isdigit()&lt;/code&gt;, or &lt;code&gt;c.isnumeric()&lt;/code&gt;.</source>
          <target state="translated">文字列内のすべての文字が英数字で、少なくとも1つの文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。文字 &lt;code&gt;c&lt;/code&gt; が英数字の場合、次のリターンの1 &lt;code&gt;True&lt;/code&gt; ： &lt;code&gt;c.isalpha()&lt;/code&gt; 、 &lt;code&gt;c.isdecimal()&lt;/code&gt; 、 &lt;code&gt;c.isdigit()&lt;/code&gt; 、または &lt;code&gt;c.isnumeric()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="404a3a332c0a32b30bd18106c5ae19e67f8fd276" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are decimal characters and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Decimal characters are those that can be used to form numbers in base 10, e.g. U+0660, ARABIC-INDIC DIGIT ZERO. Formally a decimal character is a character in the Unicode General Category &amp;ldquo;Nd&amp;rdquo;.</source>
          <target state="translated">文字列内のすべての文字が10進文字であり、少なくとも1つの文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。10進文字は、U + 0660、ARABIC-INDIC DIGIT ZEROなど、基数10で数値を形成するために使用できる文字です。正式には、小数点文字はUnicode一般カテゴリ「Nd」の文字です。</target>
        </trans-unit>
        <trans-unit id="4abe890beec4ea49c091abd01791e2bbac0f19e0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are digits and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Digits include decimal characters and digits that need special handling, such as the compatibility superscript digits. This covers digits which cannot be used to form numbers in base 10, like the Kharosthi numbers. Formally, a digit is a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal.</source>
          <target state="translated">文字列のすべての文字が数字であり、少なくとも1つの文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。数字には、互換性の上付き数字など、特別な処理が必要な小数点文字や数字が含まれます。これは、Kharosthi数のように、基数10で数を形成するために使用できない数字をカバーします。正式には、数字は、プロパティ値Numeric_Type = DigitまたはNumeric_Type = Decimalを持つ文字です。</target>
        </trans-unit>
        <trans-unit id="324a9f0ccc6e2e02d10da9b23aa540f1970b9fc6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are numeric characters, and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise. Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH. Formally, numeric characters are those with the property value Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric.</source>
          <target state="translated">文字列内のすべての文字が数字であり、少なくとも1つの文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。数字には、数字、およびU + 2155、VULGAR FRACTION ONE FIFTHなど、Unicode数値プロパティを持つすべての文字が含まれます。正式には、数字はプロパティ値がNumeric_Type = Digit、Numeric_Type = DecimalまたはNumeric_Type = Numericの文字です。</target>
        </trans-unit>
        <trans-unit id="684f677786657bf802299eb1fecccfae093a2096" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all characters in the string are printable or the string is empty, &lt;code&gt;False&lt;/code&gt; otherwise. Nonprintable characters are those characters defined in the Unicode character database as &amp;ldquo;Other&amp;rdquo; or &amp;ldquo;Separator&amp;rdquo;, excepting the ASCII space (0x20) which is considered printable. (Note that printable characters in this context are those which should not be escaped when &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; is invoked on a string. It has no bearing on the handling of strings written to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">文字列のすべての文字が印刷可能または文字列が空の場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。印刷できない文字とは、Unicode文字データベースで「その他」または「区切り文字」として定義されている文字です。ただし、印刷可能と見なされるASCIIスペース（0x20）は除きます。（このコンテキストの印刷可能文字は、文字列に対して&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;が呼び出されたときにエスケープしてはならない文字であることに注意してください&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; に&lt;/a&gt;書き込まれた文字列の処理には影響しません。）</target>
        </trans-unit>
        <trans-unit id="1893bdee78843c57671815e1dd818323c359b020" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all elements of the &lt;em&gt;iterable&lt;/em&gt; are true (or if the iterable is empty). Equivalent to:</source>
          <target state="translated">&lt;em&gt;iterableの&lt;/em&gt;すべての要素がtrueの場合（またはiterableが空の場合）は &lt;code&gt;True&lt;/code&gt; を返します。に相当：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eeeab3236324583fb4707d66d153b80c32530d0d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if all tests run so far have passed, otherwise returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;True&lt;/code&gt; すべてのテストはこれまでに合格している実行した場合、それ以外を返します &lt;code&gt;False&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="827fb29992cae8affc1fa822f05d388cbc5a79bd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if and only if the internal flag is true.</source>
          <target state="translated">内部フラグがtrueの場合にのみ、 &lt;code&gt;True&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="5e5169d4c182a7bfeea529f3a96d03e89950d7db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if any element of the &lt;em&gt;iterable&lt;/em&gt; is true. If the iterable is empty, return &lt;code&gt;False&lt;/code&gt;. Equivalent to:</source>
          <target state="translated">&lt;em&gt;イテラブルの&lt;/em&gt;いずれかの要素が &lt;code&gt;True&lt;/code&gt; 場合は、trueを返します。イテラブルが空の場合は、 &lt;code&gt;False&lt;/code&gt; を返します。に相当：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdfd1361e82ebfe985cb800863733008ba0c5482" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if automatic collection is enabled.</source>
          <target state="translated">自動収集が有効な場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5cc2ac0c502014b48f46025706992e8c8303069d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if both pathname arguments refer to the same file or directory. This is determined by the device number and i-node number and raises an exception if an &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; call on either pathname fails.</source>
          <target state="translated">両方のパス名引数が同じファイルまたはディレクトリを参照している場合は &lt;code&gt;True&lt;/code&gt; を返します。これはデバイス番号とiノード番号によって決定され、いずれかのパス名の&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;呼び出しが失敗した場合に例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="9674a80ecf3c4e73288695e34894818266635f6e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if both the real and imaginary parts of &lt;em&gt;x&lt;/em&gt; are finite, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;xの&lt;/em&gt;実数部と虚数部の両方が有限の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84f4da1ed3887e188d14f41af95b69328e530a87" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if cookie has the named cookie-attribute.</source>
          <target state="translated">cookieに名前付きのcookie属性がある場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ac3123f2eefa65b44bd4446c28edfacfca4e836d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if either the real or the imaginary part of &lt;em&gt;x&lt;/em&gt; is a NaN, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;の実数部または虚数部のいずれかがNaNの場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ea3723144f92864748951077e84de976e98cf3e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if either the real or the imaginary part of &lt;em&gt;x&lt;/em&gt; is an infinity, and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;の実数部または虚数部のいずれかが無限大の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bba66cf40bcba9c8e8172f92735b82e8ce48a4c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if its parameter is a dataclass or an instance of one, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">パラメータがデータクラスまたはインスタンスである場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b195f5ca2b0277617928c248a6e6b1607bebbac5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if name binding introduces new namespace.</source>
          <target state="translated">名前バインディングが新しい名前空間を導入する場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="25f1562766109f2357ae9489ed0cdf66e3947c69" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if pathname &lt;em&gt;path&lt;/em&gt; is a &lt;em&gt;mount point&lt;/em&gt;: a point in a file system where a different file system has been mounted. On POSIX, the function checks whether &lt;em&gt;path&lt;/em&gt;&amp;rsquo;s parent, &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt;, is on a different device than &lt;em&gt;path&lt;/em&gt;, or whether &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; and &lt;em&gt;path&lt;/em&gt; point to the same i-node on the same device &amp;mdash; this should detect mount points for all Unix and POSIX variants. It is not able to reliably detect bind mounts on the same filesystem. On Windows, a drive letter root and a share UNC are always mount points, and for any other path &lt;code&gt;GetVolumePathName&lt;/code&gt; is called to see if it is different from the input path.</source>
          <target state="translated">パス名&lt;em&gt;path&lt;/em&gt;が&lt;em&gt;マウントポイント&lt;/em&gt;である場合は &lt;code&gt;True&lt;/code&gt; を返します。別のファイルシステムがマウントされているファイルシステム内のポイントです。POSIX、機能チェックかに&lt;em&gt;パス&lt;/em&gt;の親、 &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; / ..、異なるデバイス上にある&lt;em&gt;パス&lt;/em&gt;、またはかどうか &lt;code&gt;&lt;em&gt;path&lt;/em&gt;/..&lt;/code&gt; / ..と&lt;em&gt;パス&lt;/em&gt;同じデバイス上の同じiノードへポイント-これはマウントポイントを検出しなければなりませんすべてのUnixおよびPOSIXバリアント。同じファイルシステム上のバインドマウントを確実に検出することはできません。Windowsでは、ドライブ文字ルートと共有UNCは常にマウントポイントであり、その他のパスでは &lt;code&gt;GetVolumePathName&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; 入力パスと異なるかどうかを確認するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a2e8be67bc6594919ef5dda4afcc87a85660b06e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if pen is down, &lt;code&gt;False&lt;/code&gt; if it&amp;rsquo;s up.</source>
          <target state="translated">ペンがダウンしている場合は &lt;code&gt;True&lt;/code&gt; を返し、アップしている場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="233df5d01c348d1977f999387824421590abecca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if running on CPython, not on Windows, and configuration not set with &lt;code&gt;WITH_DOC_STRINGS&lt;/code&gt;.</source>
          <target state="translated">WindowsではなくCPythonで実行され、設定が &lt;code&gt;WITH_DOC_STRINGS&lt;/code&gt; で設定されていない場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c1e671df625dc630f86e972bb438647272dd6b0e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if socket is in blocking mode, &lt;code&gt;False&lt;/code&gt; if in non-blocking.</source>
          <target state="translated">ソケットがブロッキングモードの場合は &lt;code&gt;True&lt;/code&gt; を返し、非ブロッキングモードの場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="024e94a0c4f86b5f824872147dfdd5dbf780ecbb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if string starts with the &lt;em&gt;prefix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;prefix&lt;/em&gt; can also be a tuple of prefixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test string beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing string at that position.</source>
          <target state="translated">文字列が&lt;em&gt;プレフィックス&lt;/em&gt;で始まる場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;prefix&lt;/em&gt;は、検索するプレフィックスのタプルにすることもできます。オプションの&lt;em&gt;start&lt;/em&gt;では、その位置から始まるテスト文字列。オプションの&lt;em&gt;end&lt;/em&gt;を使用すると、その位置で文字列の比較を停止します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f64655e29ef5c69057690b8edee254534078c71" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if strings &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are equal, otherwise &lt;code&gt;False&lt;/code&gt;, in such a way as to reduce the risk of &lt;a href=&quot;https://codahale.com/a-lesson-in-timing-attacks/&quot;&gt;timing attacks&lt;/a&gt;. See &lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt;&lt;code&gt;hmac.compare_digest()&lt;/code&gt;&lt;/a&gt; for additional details.</source>
          <target state="translated">文字列&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;が等しい場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返し、&lt;a href=&quot;https://codahale.com/a-lesson-in-timing-attacks/&quot;&gt;タイミング攻撃の&lt;/a&gt;リスクを軽減します。詳細については、&lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt; &lt;code&gt;hmac.compare_digest()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="416382c98e8cb009eb71fb8ed7325a915a8282a0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;context&lt;/em&gt; has a value for &lt;em&gt;var&lt;/em&gt; set; return &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;に&lt;em&gt;変数&lt;/em&gt;セットの値がある場合は &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b7f6077ac9ddcfabad53836b29d2e95cc0123" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;object&lt;/em&gt; argument is an instance of the &lt;em&gt;classinfo&lt;/em&gt; argument, or of a (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) subclass thereof. If &lt;em&gt;object&lt;/em&gt; is not an object of the given type, the function always returns &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;classinfo&lt;/em&gt; is a tuple of type objects (or recursively, other such tuples), return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;object&lt;/em&gt; is an instance of any of the types. If &lt;em&gt;classinfo&lt;/em&gt; is not a type or tuple of types and such tuples, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">戻り値 &lt;code&gt;True&lt;/code&gt; の場合&lt;em&gt;、オブジェクト&lt;/em&gt;引数がのインスタンスである&lt;em&gt;CLASSINFOの&lt;/em&gt;引数、または（直接、間接または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;仮想の&lt;/a&gt;）そのサブクラス。&lt;em&gt;object&lt;/em&gt;が指定されたタイプのオブジェクトでない場合、関数は常に &lt;code&gt;False&lt;/code&gt; を返します。場合&lt;em&gt;CLASSINFOが&lt;/em&gt;型オブジェクト（または再帰的に、他のこのようなタプル）のタプルであり、戻り &lt;code&gt;True&lt;/code&gt; ならば&lt;em&gt;、オブジェクトは&lt;/em&gt;タイプの任意のインスタンスです。&lt;em&gt;classinfo&lt;/em&gt;がタイプまたはそのタイプのタプルではない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="0b2d10e2d3746f24c0ca54a6ca3ff32f5708fab9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the &lt;em&gt;object&lt;/em&gt; argument is an instance of the &lt;em&gt;classinfo&lt;/em&gt; argument, or of a (direct, indirect or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;virtual&lt;/a&gt;) subclass thereof. If &lt;em&gt;object&lt;/em&gt; is not an object of the given type, the function always returns &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;classinfo&lt;/em&gt; is a tuple of type objects (or recursively, other such tuples), return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;object&lt;/em&gt; is an instance of any of the types. If &lt;em&gt;classinfo&lt;/em&gt; is not a type or tuple of types and such tuples, a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">戻り値 &lt;code&gt;True&lt;/code&gt; の場合&lt;em&gt;、オブジェクト&lt;/em&gt;引数がのインスタンスである&lt;em&gt;CLASSINFOの&lt;/em&gt;引数、または（直接、間接または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;仮想の&lt;/a&gt;）そのサブクラス。&lt;em&gt;オブジェクト&lt;/em&gt;が指定されたタイプのオブジェクトでない場合、関数は常に &lt;code&gt;False&lt;/code&gt; を返します。場合&lt;em&gt;CLASSINFOが&lt;/em&gt;型オブジェクト（または再帰的に、他のこのようなタプル）のタプルであり、戻り &lt;code&gt;True&lt;/code&gt; ならば&lt;em&gt;、オブジェクトは&lt;/em&gt;タイプの任意のインスタンスです。場合&lt;em&gt;CLASSINFOは&lt;/em&gt;種類やタイプと、そのようなタプルのタプルではない、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外の&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="946b6e440e6563aef5f308641df0c902820df7db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">Futureが&lt;em&gt;完了し&lt;/em&gt;たら &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a36e714f535604a61c0b98c922807226f3b5ef26" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Future was &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">Futureが&lt;em&gt;キャンセルされた&lt;/em&gt;場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afd13c887cb1e4054589e0f99ba7bc7dc0c23efe" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the OS supports symbolic links, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">OSがシンボリックリンクをサポートしている場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f7fa73558708cdd39a84d784cdccb26fe3e77f44" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the OS supports xattr, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">OSがxattrをサポートしている場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0738f68c4124a233fc1d65c48dc7ccdb03f8bb1f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the SSL pseudo-random number generator has been seeded with &amp;lsquo;enough&amp;rsquo; randomness, and &lt;code&gt;False&lt;/code&gt; otherwise. You can use &lt;a href=&quot;#ssl.RAND_egd&quot;&gt;&lt;code&gt;ssl.RAND_egd()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;ssl.RAND_add()&lt;/code&gt;&lt;/a&gt; to increase the randomness of the pseudo-random number generator.</source>
          <target state="translated">SSL擬似乱数ジェネレータに「十分な」ランダム性がシードされている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;a href=&quot;#ssl.RAND_egd&quot;&gt; &lt;code&gt;ssl.RAND_egd()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.RAND_add&quot;&gt; &lt;code&gt;ssl.RAND_add()&lt;/code&gt; &lt;/a&gt;を使用して、疑似乱数ジェネレータのランダム性を向上させることができます。</target>
        </trans-unit>
        <trans-unit id="a45d37d2fe67a5610d1dc89f1f444661be07ea8e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Task is &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">タスクが&lt;em&gt;キャンセルされた&lt;/em&gt;場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4deefb3f175ed9a524bcfc60e1ae5c9e5e106a0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Task is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">タスクが&lt;em&gt;完了し&lt;/em&gt;たら &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01febc0610b66c1393754b5305bac55d9f1f1cb5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Turtle is shown, &lt;code&gt;False&lt;/code&gt; if it&amp;rsquo;s hidden.</source>
          <target state="translated">Turtleが表示されている場合は &lt;code&gt;True&lt;/code&gt; を返し、非表示の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2cd6fe21f3355fce0486fcfb13b3728fee17f9c8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the Windows edition returned by &lt;a href=&quot;#platform.win32_edition&quot;&gt;&lt;code&gt;win32_edition()&lt;/code&gt;&lt;/a&gt; is recognized as an IoT edition.</source>
          <target state="translated">&lt;a href=&quot;#platform.win32_edition&quot;&gt; &lt;code&gt;win32_edition()&lt;/code&gt; &lt;/a&gt;によって返されたWindowsエディションがIoTエディションとして認識される場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3b6dc300080ef0aefa018fb531347b881a6625ba" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the binary data ends with the specified &lt;em&gt;suffix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;suffix&lt;/em&gt; can also be a tuple of suffixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">バイナリデータが指定した&lt;em&gt;サフィックス&lt;/em&gt;で終わる場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;suffix&lt;/em&gt;は、検索するサフィックスのタプルにすることもできます。オプションの&lt;em&gt;start&lt;/em&gt;では、その位置からテストを開始します。オプションの&lt;em&gt;end&lt;/em&gt;を使用すると、その位置で比較を停止します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5280ffb5c686cc57f4b9f4025c1a24df8d277466" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the binary data starts with the specified &lt;em&gt;prefix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;prefix&lt;/em&gt; can also be a tuple of prefixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">バイナリデータが指定した&lt;em&gt;プレフィックス&lt;/em&gt;で始まる場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;prefix&lt;/em&gt;は、検索するプレフィックスのタプルにすることもできます。オプションの&lt;em&gt;start&lt;/em&gt;では、その位置からテストを開始します。オプションの&lt;em&gt;end&lt;/em&gt;を使用すると、その位置で比較を停止します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="317c7030f4a1ba6e44c9e57e1efeecf8685ac29f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block has nested namespaces within it. These can be obtained with &lt;a href=&quot;#symtable.SymbolTable.get_children&quot;&gt;&lt;code&gt;get_children()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ブロック内に名前空間がネストされている場合は &lt;code&gt;True&lt;/code&gt; を返します。これらは&lt;a href=&quot;#symtable.SymbolTable.get_children&quot;&gt; &lt;code&gt;get_children()&lt;/code&gt; で&lt;/a&gt;取得できます。</target>
        </trans-unit>
        <trans-unit id="ab991b840752a5503631df9f72ad98714597e0a3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block is a nested class or function.</source>
          <target state="translated">ブロックがネストされたクラスまたは関数の場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4a2ca122782d6df631a87f90c1584e009f8d2418" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the block uses &lt;code&gt;exec&lt;/code&gt;.</source>
          <target state="translated">ブロックが &lt;code&gt;exec&lt;/code&gt; を使用している場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d2c985d17600cba113035b1275e7366496b1b25d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the buffer is empty and &lt;code&gt;feed_eof()&lt;/code&gt; was called.</source>
          <target state="translated">バッファが空で、 &lt;code&gt;feed_eof()&lt;/code&gt; が呼び出された場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2ab290da09446169dd628c008272a92a91d8f7b6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the buffer is up to capacity. This method can be overridden to implement custom flushing strategies.</source>
          <target state="translated">バッファがいっぱいになると &lt;code&gt;True&lt;/code&gt; を返します。このメソッドをオーバーライドして、カスタムフラッシュ戦略を実装できます。</target>
        </trans-unit>
        <trans-unit id="f6f67f8833c2529318d2eac45c9ca007c285e67c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call is currently being executed and cannot be cancelled.</source>
          <target state="translated">呼び出しが現在実行中であり、キャンセルできない場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b827fb97aa52a92d56d20904f9d9956203b81466" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call was successfully cancelled or finished running.</source>
          <target state="translated">呼び出しが正常にキャンセルされたか、実行が終了した場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a52df0f6e4edb37f59c125e25109af29db36b7df" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the call was successfully cancelled.</source>
          <target state="translated">呼び出しが正常にキャンセルされた場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3060a8b204e7cc1bbcfc6f985693f38687a6f224" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the callback was cancelled.</source>
          <target state="translated">コールバックがキャンセルされた場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d962cb4845a3404d9c1ba50d3cb0d0456dce252d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a directory.</source>
          <target state="translated">現在のコンテキストがディレクトリを参照している場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="64b4c3b1c538b37700eeabb657a59ee28a6c5a9a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a file or directory in the zip file.</source>
          <target state="translated">現在のコンテキストがzipファイル内のファイルまたはディレクトリを参照している場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="388dff15884ed1203b7091ac5865ee69802ce782" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the current context references a file.</source>
          <target state="translated">現在のコンテキストがファイルを参照している場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dde6804e47237603bfa32f32b2df2406bf247849" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the element has an attribute named by &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">要素に&lt;em&gt;nameという名前の&lt;/em&gt;属性がある場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b361777e74f9561422369b4d220f2d6d6a172ef9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the element has an attribute named by &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localName&lt;/em&gt;.</source>
          <target state="translated">要素に&lt;em&gt;namespaceURI&lt;/em&gt;と&lt;em&gt;localNameで&lt;/em&gt;指定された属性がある場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803037afef330da060f29f737c1a584b3e789010" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event is set.</source>
          <target state="translated">イベントが設定されている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1c4f9a0386485e131e282882444699ae888afe11" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is closed.</source>
          <target state="translated">イベントループが閉じている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fbce230766563130bff0c7ae5252ac562117a9dd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is currently running.</source>
          <target state="translated">イベントループが現在実行中の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7be3d468d0f51c1b348c6ac8b30aa1f9a19d8c93" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop is running.</source>
          <target state="translated">イベントループが実行されている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67a8060c4cb8fceceb3feebf4dbf5c9e8b0b1408" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event loop was closed.</source>
          <target state="translated">イベントループが閉じられた場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1eeda47e7e6194545f03f862246f96505dfd2c50" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the event queue is empty.</source>
          <target state="translated">イベントキューが空の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="88dc76d8a6f0cfba7f1df60f935891b4741b29fe" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the feature identified by the pair of strings &lt;em&gt;feature&lt;/em&gt; and &lt;em&gt;version&lt;/em&gt; is implemented.</source>
          <target state="translated">文字列の&lt;em&gt;機能&lt;/em&gt;と&lt;em&gt;バージョンの&lt;/em&gt;ペアで識別される&lt;em&gt;機能&lt;/em&gt;が実装されている場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8effffeb8ba6a8648c53738d6fade8f75cf26a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file descriptor &lt;em&gt;fd&lt;/em&gt; is open and connected to a tty(-like) device, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;が開いており、tty（のような）デバイスに接続されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e8d64898cceab3c776d333f06d2ec876974eb0f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file descriptors &lt;em&gt;fp1&lt;/em&gt; and &lt;em&gt;fp2&lt;/em&gt; refer to the same file.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fp1&lt;/em&gt;と&lt;em&gt;fp2&lt;/em&gt;が同じファイルを参照している場合は、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69ba83ecda4af20cf29d10182699831c06d627b6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the file system for &lt;em&gt;directory&lt;/em&gt; is case-insensitive.</source>
          <target state="translated">&lt;em&gt;ディレクトリ&lt;/em&gt;のファイルシステムで大文字と小文字が区別されない場合は、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754f371f3d7b0d48f0eb29fbe8cfc0780fe0baab" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the float instance is finite with integral value, and &lt;code&gt;False&lt;/code&gt; otherwise:</source>
          <target state="translated">floatインスタンスが整数値で有限の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8f28dd6a1f500c0dff956dbecbb38d62d0abb6ca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the given integrity check is supported on this system.</source>
          <target state="translated">指定された整合性チェックがこのシステムでサポートされている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6d70207760f1ba8579a4a85195f23c4c400f2e88" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the last line was read from &lt;code&gt;sys.stdin&lt;/code&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">最後の行が &lt;code&gt;sys.stdin&lt;/code&gt; から読み込まれた場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ec0ebd9823fd01a8cb9f9fbebc6231d8fb361728" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the line just read is the first line of its file, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">読み込んだ行がファイルの最初の行である場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="eaea28b7cd854798ec1acb5331ab42abca8c144a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the locals in this table can be optimized.</source>
          <target state="translated">このテーブルのローカルが最適化できる場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2e80ac2852d316967f0e38190133026fdd260262" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the lock is &lt;em&gt;locked&lt;/em&gt;.</source>
          <target state="translated">ロックが&lt;em&gt;ロックされて&lt;/em&gt;いる場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ad753ef3d46d91e5defb9e376b956e1c30fa52f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message object has a field named &lt;em&gt;name&lt;/em&gt;. Matching is done case-insensitively and &lt;em&gt;name&lt;/em&gt; should not include the trailing colon. Used for the &lt;code&gt;in&lt;/code&gt; operator, e.g.:</source>
          <target state="translated">メッセージオブジェクトに&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;フィールドがある場合は &lt;code&gt;True&lt;/code&gt; を返します。マッチングは大文字と小文字を区別せずに行われ、&lt;em&gt;名前&lt;/em&gt;には末尾のコロンを含めないでください。 &lt;code&gt;in&lt;/code&gt; 演算子に使用されます。例：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ab6e934c35497ad5700dd522da421b535e6bfee" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message object has a field named &lt;em&gt;name&lt;/em&gt;. Matching is done without regard to case and &lt;em&gt;name&lt;/em&gt; does not include the trailing colon. Used for the &lt;code&gt;in&lt;/code&gt; operator. For example:</source>
          <target state="translated">メッセージオブジェクトに&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;フィールドがある場合は &lt;code&gt;True&lt;/code&gt; を返します。大文字と小文字を区別せずにマッチングが行われ、&lt;em&gt;名前に&lt;/em&gt;は末尾のコロンが含まれません。 &lt;code&gt;in&lt;/code&gt; 演算子に使用されます。例えば：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="813fe3c47deadddecf94a759b6d97eead72cf316" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message&amp;rsquo;s payload is a list of sub-&lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects, otherwise return &lt;code&gt;False&lt;/code&gt;. When &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;, the payload should be a string object (which might be a CTE encoded binary payload). Note that &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;True&lt;/code&gt; does not necessarily mean that &amp;ldquo;msg.get_content_maintype() == &amp;lsquo;multipart&amp;rsquo;&amp;rdquo; will return the &lt;code&gt;True&lt;/code&gt;. For example, &lt;code&gt;is_multipart&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt; when the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is of type &lt;code&gt;message/rfc822&lt;/code&gt;.</source>
          <target state="translated">メッセージのペイロードがサブ&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;オブジェクトのリストである場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; を返す場合、ペイロードは文字列オブジェクト（CTEエンコードされたバイナリペイロードである可能性があります）である必要があります。&lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; が&lt;/a&gt; &lt;code&gt;True&lt;/code&gt; を返すことは、必ずしも「msg.get_content_maintype（）== 'multipart'」が &lt;code&gt;True&lt;/code&gt; を返すことを意味するわけではないことに注意してください。例えば、 &lt;code&gt;is_multipart&lt;/code&gt; は戻ります &lt;code&gt;True&lt;/code&gt; とき&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のは、&lt;/a&gt;型のある &lt;code&gt;message/rfc822&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb01e60f9b794c710d6f5ff81a2a0c287d007af1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the message&amp;rsquo;s payload is a list of sub-&lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, otherwise return &lt;code&gt;False&lt;/code&gt;. When &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;False&lt;/code&gt;, the payload should be a string object (which might be a CTE encoded binary payload). (Note that &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;True&lt;/code&gt; does not necessarily mean that &amp;ldquo;msg.get_content_maintype() == &amp;lsquo;multipart&amp;rsquo;&amp;rdquo; will return the &lt;code&gt;True&lt;/code&gt;. For example, &lt;code&gt;is_multipart&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt; when the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; is of type &lt;code&gt;message/rfc822&lt;/code&gt;.)</source>
          <target state="translated">メッセージのペイロードがサブ&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのリストである場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; を返す場合、ペイロードは文字列オブジェクト（CTEエンコードされたバイナリペイロードである可能性があります）である必要があります。 （&lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; が&lt;/a&gt; &lt;code&gt;True&lt;/code&gt; を返すことは、必ずしも「msg.get_content_maintype（）== 'multipart'」が &lt;code&gt;True&lt;/code&gt; を返すことを意味するわけではありません。たとえば、&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;のタイプが &lt;code&gt;message/rfc822&lt;/code&gt; の場合、 &lt;code&gt;is_multipart&lt;/code&gt; は &lt;code&gt;True&lt;/code&gt; を返します。）</target>
        </trans-unit>
        <trans-unit id="612c7a6dfbca4c39860f17766696a23f487a37a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the module specified by &lt;em&gt;fullname&lt;/em&gt; is a package. Raise &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if the module couldn&amp;rsquo;t be found.</source>
          <target state="translated">&lt;em&gt;fullname&lt;/em&gt;で指定されたモジュールがパッケージの場合、 &lt;code&gt;True&lt;/code&gt; を返します。レイズ&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; を&lt;/a&gt;モジュールが見つからなかった場合。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1017fa2989c546c0a297169d43fe0dbc24491027" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the node has any attributes.</source>
          <target state="translated">ノードに属性がある場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f37f2fbf4b833170bcbb22938ea6957e1c1a426c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the node has any child nodes.</source>
          <target state="translated">ノードに子ノードがある場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7b0a24bcbf158eec14d1912914f38370e5f6dc9d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object can be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;式で使用できる場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7246ed0b507d12dce9ed212a48f28e8cfb2a10b2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object can be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;式で使用できる場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84a94f510472faaf2fdccfe4be7bec17d53e4ad4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;関数によって作成された&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチンで&lt;/a&gt;ある場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5e49cdd044e3c96f756de9313ae6fd35395a89ef" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; (a function defined with an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; syntax).</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;コルーチン関数&lt;/a&gt;（&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;構文で定義された関数）の場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="79ad7a4d64c9c8de16e684bf937f339bc0d4be36" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">戻り &lt;code&gt;True&lt;/code&gt; の目的であるならば&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;、コルーチン&lt;/a&gt;で作成された&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;機能。</target>
        </trans-unit>
        <trans-unit id="27b835eeb8c673a324011d7b45b1cfd47dfa2392" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; (a function defined with an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; syntax).</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;コルーチン関数&lt;/a&gt;（&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;構文で定義された関数）の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0f500ea1719ab0fc3a14946a8d2a32a892a9b5db" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python function, which includes functions created by a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt; expression.</source>
          <target state="translated">オブジェクトがPython関数である場合は &lt;code&gt;True&lt;/code&gt; を返します。これには、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-lambda&quot;&gt;ラムダ&lt;/a&gt;式によって作成された関数が含まれます。</target>
        </trans-unit>
        <trans-unit id="d1f4a4571d01be375069fb059a45f7a996a9c186" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python function, which includes functions created by a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-lambda&quot;&gt;lambda&lt;/a&gt; expression.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-lambda&quot;&gt;ラムダ&lt;/a&gt;式によって作成された関数を含むPython関数の場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="493a3b7bb13b994772a705fe495e7b8ce5cb776c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a Python generator function.</source>
          <target state="translated">オブジェクトがPythonジェネレーター関数の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="50eb7a291df64c7ff188bbd834209a0bb5b1eb3f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a bound method written in Python.</source>
          <target state="translated">オブジェクトがPythonで記述されたバインドされたメソッドである場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1fe03755a06d2432a5bf344eb33331759993ebd0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a built-in function or a bound built-in method.</source>
          <target state="translated">オブジェクトが組み込み関数またはバインドされた組み込みメソッドの場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9a807200b2fc5a492eb9cecb7fd981c8a76a8392" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a class, whether built-in or created in Python code.</source>
          <target state="translated">オブジェクトがクラスである場合、組み込みであるかPythonコードで作成されているかにかかわらず、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="58169ae19160a7180104fa0fde33c944c83ef14d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a code.</source>
          <target state="translated">オブジェクトがコードの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="39e01cef77029dd6818c9ab7e114510595c45227" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a data descriptor.</source>
          <target state="translated">オブジェクトがデータ記述子の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="01a01ab884f0cb951879ac2bacaecd8a6911aa49" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a frame.</source>
          <target state="translated">オブジェクトがフレームの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="394b4ac03e886a34529ebd34e3fddc902c67dbc5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a generator.</source>
          <target state="translated">オブジェクトがジェネレーターの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="24e6fb864a790b635f71289fd9f8183118a6f4da" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a getset descriptor.</source>
          <target state="translated">オブジェクトがgetset記​​述子の場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1c46b54107a298212a17500715000d41e063c736" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a member descriptor.</source>
          <target state="translated">オブジェクトがメンバー記述子の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7b607199bc1689078ffb298b882d6319270a2b33" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a method descriptor, but not if &lt;a href=&quot;#inspect.ismethod&quot;&gt;&lt;code&gt;ismethod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#inspect.isclass&quot;&gt;&lt;code&gt;isclass()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#inspect.isfunction&quot;&gt;&lt;code&gt;isfunction()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#inspect.isbuiltin&quot;&gt;&lt;code&gt;isbuiltin()&lt;/code&gt;&lt;/a&gt; are true.</source>
          <target state="translated">オブジェクトがメソッド記述子の場合は &lt;code&gt;True&lt;/code&gt; を返しますが、&lt;a href=&quot;#inspect.ismethod&quot;&gt; &lt;code&gt;ismethod()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#inspect.isclass&quot;&gt; &lt;code&gt;isclass()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#inspect.isfunction&quot;&gt; &lt;code&gt;isfunction()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#inspect.isbuiltin&quot;&gt; &lt;code&gt;isbuiltin()&lt;/code&gt; &lt;/a&gt;がtrueの場合はそうではありません。</target>
        </trans-unit>
        <trans-unit id="751ca282ae4e2eda7b7edbb6874656c849c97fe0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a module.</source>
          <target state="translated">オブジェクトがモジュールの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0a06537b0fda2fddcf149ce956dd829f32ac19a5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a traceback.</source>
          <target state="translated">オブジェクトがトレースバックの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1efb68187f81c1bc8515ded4e3e03a62e928c676" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is a user-defined or built-in function or method.</source>
          <target state="translated">オブジェクトがユーザー定義関数または組み込み関数またはメソッドの場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1ae6724b16f29070aa62f055061ea89666d48a9e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function, for example:</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数の場合、 &lt;code&gt;True&lt;/code&gt; を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="bad4f7008242f2b9e8e41348f0d8584eaeaed9d6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数によって作成された非同期ジェネレーター&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;イテレーターで&lt;/a&gt;ある場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="49e3749d09232ec27562fb6f86f4788d5cdd801b" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function, for example:</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数の場合、 &lt;code&gt;True&lt;/code&gt; を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b5169749a1a8fe2ab06e17d98431534fe948fa55" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; created by an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数によって作成された非同期ジェネレーター&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;イテレーターで&lt;/a&gt;ある場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5a6271c1db7a23de904a5c8bbf6a5a054332a8b4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the object is an abstract base class.</source>
          <target state="translated">オブジェクトが抽象基本クラスの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b46162e51c2408b7c91f107bd12ed13de0b12f1f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path is a &lt;em&gt;mount point&lt;/em&gt;: a point in a file system where a different file system has been mounted. On POSIX, the function checks whether &lt;em&gt;path&lt;/em&gt;&amp;rsquo;s parent, &lt;code&gt;path/..&lt;/code&gt;, is on a different device than &lt;em&gt;path&lt;/em&gt;, or whether &lt;code&gt;path/..&lt;/code&gt; and &lt;em&gt;path&lt;/em&gt; point to the same i-node on the same device &amp;mdash; this should detect mount points for all Unix and POSIX variants. Not implemented on Windows.</source>
          <target state="translated">パスが&lt;em&gt;マウントポイント&lt;/em&gt;である場合は &lt;code&gt;True&lt;/code&gt; を返します。別のファイルシステムがマウントされているファイルシステム内のポイントです。POSIX、機能チェックかに&lt;em&gt;パス&lt;/em&gt;の親、 &lt;code&gt;path/..&lt;/code&gt; 、異なるデバイス上にある&lt;em&gt;パス&lt;/em&gt;、またはかどうか &lt;code&gt;path/..&lt;/code&gt; と&lt;em&gt;パス&lt;/em&gt;同じデバイス上の同じiノードへポイント-これはマウントポイントを検出しなければなりませんすべてのUnixおよびPOSIXバリアント。Windowsでは実装されていません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9afb4535b3729c6d0e0d6a0b2e494436d5f60a5d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a FIFO (or a symbolic link pointing to a FIFO), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスがFIFO（またはFIFOを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4feba85341547ec9c8d7c9af03a8598464150c98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a Unix socket (or a symbolic link pointing to a Unix socket), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスがUnixソケット（またはUnixソケットを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="439e7378cd7ac16b088615c73bd4a2778cd5a08d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a block device (or a symbolic link pointing to a block device), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスがブロックデバイス（またはブロックデバイスを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9311da5b7ba2195f760f72908e165d4a1b0c0ed2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a character device (or a symbolic link pointing to a character device), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスがキャラクターデバイス（またはキャラクターデバイスを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ddbf12b558df21f01b66142e1fb107f5d0e7ffbf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a directory (or a symbolic link pointing to a directory), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスがディレクトリ（またはディレクトリを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc85a37c5205530c84af526e8c77c2fee451f53d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a regular file (or a symbolic link pointing to a regular file), &lt;code&gt;False&lt;/code&gt; if it points to another kind of file.</source>
          <target state="translated">パスが通常のファイル（または通常のファイルを指すシンボリックリンク）を指している場合は &lt;code&gt;True&lt;/code&gt; を返し、別の種類のファイルを指している場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b9e266e5a48dfbecf6157f1cd37018bb0aafb78b" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the path points to a symbolic link, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">パスがシンボリックリンクを指している場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b3e7bcc41f3cb8dafc03ff7e8dfd7f64a7697efb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the platform supports creating a TCP socket which can handle both IPv4 and IPv6 connections.</source>
          <target state="translated">プラットフォームがIPv4とIPv6の両方の接続を処理できるTCPソケットの作成をサポートしている場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d19aacc1433bcd8b6c1d1bf2186f75c53e140b17" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited due to a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">シグナルが原因でプロセスが終了した場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="206ad41a8a79f2d2a04d0aa39b527c05ec952b99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited terminated normally, that is, by calling &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;_exit()&lt;/code&gt;, or by returning from &lt;code&gt;main()&lt;/code&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスが正常に終了した場合、つまり、 &lt;code&gt;exit()&lt;/code&gt; または &lt;code&gt;_exit()&lt;/code&gt; を呼び出すか、 &lt;code&gt;main()&lt;/code&gt; から戻る場合は、 &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2371ef6d7070d0a2c3ed3aab8cec347fb88ac404" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process exited using the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;exit(2)&lt;/a&gt;&lt;/em&gt; system call, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスが&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;exit（2）&lt;/a&gt;&lt;/em&gt;システムコールを使用して&lt;em&gt;終了&lt;/em&gt;した場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="763539194ddc657f8bfce35a306055e760b7ff85" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process has been continued from a job control stop, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスがジョブ制御の停止から継続されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e7913ec047e68c7feb894081fe76b43214c269d2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process has been stopped, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスが停止している場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="04eb86b3fe6289b4b9cc801209447429ad422429" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process was stopped by delivery of a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">シグナルの配信によってプロセスが停止した場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="deb7939cbb015824997d14576d407962dbd5b15e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the process was terminated by a signal, otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">プロセスがシグナルによって終了した場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="855aa7ee3f6e65cc92d89f0b17b3352a871f61f4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">キューが空の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="35c7d0e384e2716ecb27e9199ee25c2ca9cc9d7a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. Because of multithreading/multiprocessing semantics, this is not reliable.</source>
          <target state="translated">キューが空の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。マルチスレッド/マルチプロセッシングのセマンティクスのため、これは信頼できません。</target>
        </trans-unit>
        <trans-unit id="a57ebcf9dc9ed75c53f591ee149aa51b9221f370" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. If empty() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block.</source>
          <target state="translated">キューが空の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。empty（）が &lt;code&gt;False&lt;/code&gt; を返す場合、それ以降のget（）の呼び出しがブロックされないことは保証されません。</target>
        </trans-unit>
        <trans-unit id="af743a93284dc926521a9b2024450cd320a56553" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is empty, &lt;code&gt;False&lt;/code&gt; otherwise. If empty() returns &lt;code&gt;True&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to put() will not block. Similarly, if empty() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block.</source>
          <target state="translated">キューが空の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。empty（）が &lt;code&gt;True&lt;/code&gt; を返す場合、それ以降のput（）の呼び出しがブロックされないことは保証されません。同様に、empty（）が &lt;code&gt;False&lt;/code&gt; を返した場合、それ以降のget（）の呼び出しがブロックしないことは保証されません。</target>
        </trans-unit>
        <trans-unit id="a083c22e4730e61a008e8b51fd350e5a35f29a33" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is full, &lt;code&gt;False&lt;/code&gt; otherwise. Because of multithreading/multiprocessing semantics, this is not reliable.</source>
          <target state="translated">キューがいっぱいの場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。マルチスレッド/マルチプロセッシングのセマンティクスのため、これは信頼できません。</target>
        </trans-unit>
        <trans-unit id="56a9d78ad430b09aab4fd452037022d01388fe62" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the queue is full, &lt;code&gt;False&lt;/code&gt; otherwise. If full() returns &lt;code&gt;True&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to get() will not block. Similarly, if full() returns &lt;code&gt;False&lt;/code&gt; it doesn&amp;rsquo;t guarantee that a subsequent call to put() will not block.</source>
          <target state="translated">キューがいっぱいの場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。full（）が &lt;code&gt;True&lt;/code&gt; を返す場合、それ以降のget（）の呼び出しがブロックされないことは保証されません。同様に、full（）が &lt;code&gt;False&lt;/code&gt; を返す場合、それ以降のput（）の呼び出しがブロックされないことは保証されません。</target>
        </trans-unit>
        <trans-unit id="8ecf2eb7b47c96f882f9b60ec2ec345615a893a1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the running Python interpreter was built from source and is being run from its built location, and not from a location resulting from e.g. running &lt;code&gt;make install&lt;/code&gt; or installing via a binary installer.</source>
          <target state="translated">実行中のPythonインタープリターがソースからビルドされ、ビルドされた場所から実行されており、たとえば &lt;code&gt;make install&lt;/code&gt; の実行やバイナリインストーラーを介したインストールの結果の場所から実行されていない場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="be82ab611cee8c587ebd3768e948745898d97e2e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the sequence is ASCII titlecase and the sequence is not empty, &lt;code&gt;False&lt;/code&gt; otherwise. See &lt;a href=&quot;#bytes.title&quot;&gt;&lt;code&gt;bytes.title()&lt;/code&gt;&lt;/a&gt; for more details on the definition of &amp;ldquo;titlecase&amp;rdquo;.</source>
          <target state="translated">シーケンスがASCIIタイトルケースで、シーケンスが空でない場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。参照&lt;a href=&quot;#bytes.title&quot;&gt; &lt;code&gt;bytes.title()&lt;/code&gt; &lt;/a&gt;「タイトルケース」の定義の詳細については。</target>
        </trans-unit>
        <trans-unit id="3c5355077e152a91d7bf3bceb1a280251d1b2a80" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the sequence is empty or all bytes in the sequence are ASCII, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII bytes are in the range 0-0x7F.</source>
          <target state="translated">シーケンスが空の場合、またはシーケンスのすべてのバイトがASCIIの場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。ASCIIバイトは0〜0x7Fの範囲です。</target>
        </trans-unit>
        <trans-unit id="cfca89450a817b071865e033557c72136d570473" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the server is accepting new connections.</source>
          <target state="translated">サーバーが新しい接続を受け入れている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="41467de2c92a8f2c8121cebc6c6c828a19a0bd3f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the set has no elements in common with &lt;em&gt;other&lt;/em&gt;. Sets are disjoint if and only if their intersection is the empty set.</source>
          <target state="translated">セットに&lt;em&gt;other&lt;/em&gt;と共通の要素がない場合は &lt;code&gt;True&lt;/code&gt; を返します。セットは、それらの交差が空のセットである場合にのみばらばらです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dc8ba0df0a496b395a7f4f5747bf70303819e76" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the signal handler was removed, or &lt;code&gt;False&lt;/code&gt; if no handler was set for the given signal.</source>
          <target state="translated">シグナルハンドラーが削除された場合は &lt;code&gt;True&lt;/code&gt; を返し、特定のシグナルにハンドラーが設定されていない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1e2d5162d0441a5a54c9201783fdc0b86f2ea87c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified line was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;. Raise a &lt;a href=&quot;#curses.error&quot;&gt;&lt;code&gt;curses.error&lt;/code&gt;&lt;/a&gt; exception if &lt;em&gt;line&lt;/em&gt; is not valid for the given window.</source>
          <target state="translated">指定した行が最後に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出してから変更されている場合は &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。指定されたウィンドウに対して&lt;em&gt;行&lt;/em&gt;が有効でない場合、&lt;a href=&quot;#curses.error&quot;&gt; &lt;code&gt;curses.error&lt;/code&gt; &lt;/a&gt;例外を発生させます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f87d91564037c459fa1e2942fb4ed431481bed0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified window was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">指定したウィンドウが最後に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出してから変更されている場合は &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="22f737e6c24d01710b1c7d270b10d5f7006d1909" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stat tuples &lt;em&gt;stat1&lt;/em&gt; and &lt;em&gt;stat2&lt;/em&gt; refer to the same file. These structures may have been returned by &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. This function implements the underlying comparison used by &lt;a href=&quot;#os.path.samefile&quot;&gt;&lt;code&gt;samefile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.sameopenfile&quot;&gt;&lt;code&gt;sameopenfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">statタプル&lt;em&gt;stat1&lt;/em&gt;と&lt;em&gt;stat2&lt;/em&gt;が同じファイルを参照している場合は &lt;code&gt;True&lt;/code&gt; を返します。これらの構造体は、&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;によって返された可能性があります。この関数は、&lt;a href=&quot;#os.path.samefile&quot;&gt; &lt;code&gt;samefile()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.path.sameopenfile&quot;&gt; &lt;code&gt;sameopenfile()&lt;/code&gt; で&lt;/a&gt;使用される基本的な比較を実装します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77cb3324a2e29e3ce81810309a1c90e4e5471d29" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream can be read from. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ストリームを読み取ることができる場合は &lt;code&gt;True&lt;/code&gt; を返します。 &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;read()&lt;/code&gt; は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="249ad978835f3e95c47acb351c46ec6c76616405" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is closed or in the process of being closed.</source>
          <target state="translated">ストリームが閉じている場合、または閉じている途中の場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="604f3e7f6fe3a515ead135deb74f1f599e0ee779" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is interactive (i.e., connected to a terminal/tty device).</source>
          <target state="translated">ストリームがインタラクティブな場合（つまり、端末/ ttyデバイスに接続されている場合）は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4e6cd64c153cac17bf0619c32967eaac7a49e4ca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports random access. If &lt;code&gt;False&lt;/code&gt;, &lt;a href=&quot;#io.IOBase.seek&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.IOBase.tell&quot;&gt;&lt;code&gt;tell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ストリームがランダムアクセスをサポートしている場合は &lt;code&gt;True&lt;/code&gt; を返します。 &lt;code&gt;False&lt;/code&gt; の場合、&lt;a href=&quot;#io.IOBase.seek&quot;&gt; &lt;code&gt;seek()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#io.IOBase.tell&quot;&gt; &lt;code&gt;tell()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#io.IOBase.truncate&quot;&gt; &lt;code&gt;truncate()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="50bef7526285e8687107e63ef85d27078093be61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports writing. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ストリームが書き込みをサポートしている場合は &lt;code&gt;True&lt;/code&gt; を返します。 &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;write()&lt;/code&gt; および&lt;a href=&quot;#io.IOBase.truncate&quot;&gt; &lt;code&gt;truncate()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="42bacfe943f46d4a1c2c6cebfb71131a4a06517f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string ends with the specified &lt;em&gt;suffix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;suffix&lt;/em&gt; can also be a tuple of suffixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="translated">文字列が指定された&lt;em&gt;サフィックス&lt;/em&gt;で終わる場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;suffix&lt;/em&gt;は、検索するサフィックスのタプルにすることもできます。オプションの&lt;em&gt;start&lt;/em&gt;では、その位置からテストを開始します。オプションの&lt;em&gt;end&lt;/em&gt;を使用すると、その位置で比較を停止します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c6a017e127b2399897c25fc6396743bb2f3a84e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">文字列がタイトル付きの文字列であり、少なくとも1つの文字がある場合、 &lt;code&gt;True&lt;/code&gt; を返します。たとえば、大文字は大文字と小文字が区別されない文字と小文字のみが大文字と小文字のみの後に続く場合があります。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c6264089d8de631c52b76e657bc9db3608da95d5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a valid identifier according to the language definition, section &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;Identifiers and keywords&lt;/a&gt;.</source>
          <target state="translated">文字列が言語定義、セクション&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;識別子とキーワード&lt;/a&gt;に従って有効な識別子である場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f808a17463a2dba20777af30cab93a548bb93d2c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a valid identifier according to the language definition, section &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;Identifiers and keywords&lt;/a&gt;.</source>
          <target state="translated">文字列が言語定義、セクション&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#identifiers&quot;&gt;識別子、およびキーワード&lt;/a&gt;に従って有効な識別子である場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d05aebde61c6a95d1e6831ed8c32ad5910fa404a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is empty or all characters in the string are ASCII, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII characters have code points in the range U+0000-U+007F.</source>
          <target state="translated">文字列が空の場合、または文字列内のすべての文字がASCIIの場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。ASCII文字には、U + 0000-U + 007Fの範囲のコードポイントがあります。</target>
        </trans-unit>
        <trans-unit id="dc5cddb4d7ab01addce901d0aef39f28fc262c98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is a parameter.</source>
          <target state="translated">シンボルがパラメータの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="275cf00809c0de535595a35aabdc067938e6e34f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is assigned to in its block.</source>
          <target state="translated">シンボルがブロックで割り当てられている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3ef5b3812cba647978613b33bf72340f52a2b222" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is created from an import statement.</source>
          <target state="translated">シンボルがインポートステートメントから作成された場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="94eb9fabd9ac64fd1a6c1bb78541062b0d8bf653" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is declared global with a global statement.</source>
          <target state="translated">シンボルがグローバルステートメントでグローバルに宣言されている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9d1c9315c7fb03567e13eb4859cc8a14bc92f694" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is global.</source>
          <target state="translated">シンボルがグローバルの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="338df9a9dc2042d16ab26f55265a3900926ac4d7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is local to its block.</source>
          <target state="translated">シンボルがそのブロックに対してローカルである場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f5f365021f3648245e9745b0a51ea3e52db5abf0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is nonlocal.</source>
          <target state="translated">シンボルがローカルでない場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9fb94a41bcc9e65cbe45318c948a03149c187884" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is referenced in its block, but not assigned to.</source>
          <target state="translated">シンボルがそのブロックで参照されているが割り当てられていない場合は、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f7f7d811e0cc5c00c3ad870058e02d729fe900ae" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is used in its block.</source>
          <target state="translated">シンボルがブロックで使用されている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="108e63985b78abe27d0b5422d8a237001f7d2b6a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal can display colors; otherwise, return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">端末が色を表示できる場合は &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="91a581cff4955ee811a38b7d1bb908a4c7a7e143" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-character capabilities. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="translated">端末に文字の挿入と削除の機能がある場合は &lt;code&gt;True&lt;/code&gt; を返します。最新のすべてのソフトウェアターミナルエミュレータにはこのような機能があるため、この機能は歴史的な理由でのみ含まれています。</target>
        </trans-unit>
        <trans-unit id="85b660374e31a18de50095f39aaef17dac893e97" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-line capabilities, or can simulate them using scrolling regions. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="translated">端末に行挿入および行削除機能がある場合、またはスクロール領域を使用してそれらをシミュレートできる場合は、 &lt;code&gt;True&lt;/code&gt; を返します。最新のすべてのソフトウェアターミナルエミュレータにはこのような機能があるため、この機能は歴史的な理由でのみ含まれています。</target>
        </trans-unit>
        <trans-unit id="526baa42175cfef3824865478f0b5c21aa7ff75f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is closing or is closed.</source>
          <target state="translated">トランスポートが閉じているか閉じている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="46d7e07bad4118b3056cb7ef3de9cc355eaafccd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving new data.</source>
          <target state="translated">トランスポートが新しいデータを受信して​​いる場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7a2b59024a3b8fad0cf8dff67e3984b9188b9b58" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving.</source>
          <target state="translated">トランスポートが受信している場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="69ddfdebbe14972c98b8094136416df377365ded" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying lock is acquired.</source>
          <target state="translated">基になるロックが取得された場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ddc7c3a25e2bee841581fd3f05112cae39dc84ad" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying mapping has a key &lt;em&gt;key&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">基本となるマッピングにキー&lt;em&gt;key&lt;/em&gt;がある場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40c12e4849ea909ddeafbc08cb16eb8908555c48" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying transport supports the &lt;a href=&quot;#asyncio.StreamWriter.write_eof&quot;&gt;&lt;code&gt;write_eof()&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">基になるトランスポートが&lt;a href=&quot;#asyncio.StreamWriter.write_eof&quot;&gt; &lt;code&gt;write_eof()&lt;/code&gt; &lt;/a&gt;メソッドをサポートしている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="480e290cef60522d2dabd099124ba6a1ba69ec8a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the values &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are close to each other and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">値&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;が互いに近い場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd4dda98a06c458cf6ee795a03d82503663ac9df" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the watcher is ready to use.</source>
          <target state="translated">ウォッチャーを使用する準備ができている場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="846770472190bed4fb6d4cee9b0773323b180eaa" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are &lt;a href=&quot;#asyncio.Queue.maxsize&quot;&gt;&lt;code&gt;maxsize&lt;/code&gt;&lt;/a&gt; items in the queue.</source>
          <target state="translated">キューに&lt;a href=&quot;#asyncio.Queue.maxsize&quot;&gt; &lt;code&gt;maxsize&lt;/code&gt; &lt;/a&gt;個のアイテムがある場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0086d7c7e020a16f98072f19e5f7b43721a7c0ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are only whitespace characters in the string and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">文字列に空白文字のみが含まれ、少なくとも1つの文字がある場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="100cc0f7d34467a8c33dd5f16792b23d7e099d02" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a &lt;em&gt;Content-Disposition&lt;/em&gt; header and its (case insensitive) value is &lt;code&gt;attachment&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーがあり、その（大文字と小文字を区別しない）値が &lt;code&gt;attachment&lt;/code&gt; の場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="88acd12ea431c48306a97ff58c87f31af2378561" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a resource named &lt;em&gt;name&lt;/em&gt; in the package, otherwise &lt;code&gt;False&lt;/code&gt;. Remember that directories are &lt;em&gt;not&lt;/em&gt; resources! &lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements.</source>
          <target state="translated">パッケージに&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;リソースがある場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。ディレクトリはリソースでは&lt;em&gt;ない&lt;/em&gt;ことに注意してください！&lt;em&gt;パッケージ&lt;/em&gt;は、 &lt;code&gt;Package&lt;/code&gt; 要件に準拠する名前またはモジュールオブジェクトです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="996e77f147432092fc3724fe76b70a8bcf929b13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one lowercase ASCII character in the sequence and no uppercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">シーケンスに少なくとも1つの小文字のASCII文字があり、大文字のASCII文字がない場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="92f5f2c425e59fd40f969f6febb163b6df2bc469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one uppercase alphabetic ASCII character in the sequence and no lowercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">シーケンスに少なくとも1つの大文字のASCII文字があり、小文字のASCII文字がない場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f018e81894dfe3df30b71271c53b5877e9f676cb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this archive member is a directory.</source>
          <target state="translated">このアーカイブメンバーがディレクトリの場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b8a9c00f57e82e4457cc569ce712389ae2b23d86" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a directory or a symbolic link pointing to a directory; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to any other kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">このエントリがディレクトリまたはディレクトリを指すシンボリックリンクの場合、 &lt;code&gt;True&lt;/code&gt; を返します。エントリが他の種類のファイルを指している、または指している場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9e1f150e38055459612b41872492d702f1c2b4ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a file or a symbolic link pointing to a file; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to a directory or other non-file entry, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">このエントリがファイルまたはファイルを指すシンボリックリンクである場合は &lt;code&gt;True&lt;/code&gt; を返します。エントリがディレクトリまたは他の非ファイルエントリを指している場合、またはポイントしている場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ebb42a4b63e45194892f25ae4514dfde880e08e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a symbolic link (even if broken); return &lt;code&gt;False&lt;/code&gt; if the entry points to a directory or any kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">このエントリがシンボリックリンクの場合（壊れていても）、 &lt;code&gt;True&lt;/code&gt; を返します。エントリがディレクトリまたはあらゆる種類のファイルを指している場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="18303bf9a32a93e062e86dbfa83352c5ada8906d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a subnet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">このネットワークが&lt;em&gt;otherの&lt;/em&gt;サブネットである場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e41b3833822eb6eae12780640abf60dccecc3b9c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a supernet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">このネットワークが&lt;em&gt;他のの&lt;/em&gt;スーパーネットである場合は &lt;code&gt;True&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="727954683700e3d8d89d6ef42f609bc102a5fce8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; iff the actual output from an example (&lt;em&gt;got&lt;/em&gt;) matches the expected output (&lt;em&gt;want&lt;/em&gt;). These strings are always considered to match if they are identical; but depending on what option flags the test runner is using, several non-exact match types are also possible. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt; for more information about option flags.</source>
          <target state="translated">例からの実際の出力（&lt;em&gt;got&lt;/em&gt;）が期待される出力（&lt;em&gt;want&lt;/em&gt;）と一致する場合に &lt;code&gt;True&lt;/code&gt; を返します。これらの文字列は、それらが同一の場合は常に一致すると見なされます。しかし、テストランナーが使用しているオプションフラグに応じて、いくつかの厳密でない一致タイプも可能です。&lt;a href=&quot;#doctest-options&quot;&gt;オプションフラグの&lt;/a&gt;詳細については、オプションフラグを参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1de22c5a965cc847885b2bf41b6098f143d4b99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, depending on whether the programmer can change the colors displayed by the terminal.</source>
          <target state="translated">プログラマーが端末に表示される色を変更できるかどうかに応じて、 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b85e75461ec6bb932c4991cae38140b56917a150" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;_testcapi.WITH_PYMALLOC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_testcapi.WITH_PYMALLOC&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f87f88940a8a96527585959eeaccfdfabb9189c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a % b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a % b&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4b8659b23e94903498c5d1ca949ff437497e3767" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a * b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">戻る &lt;code&gt;a * b&lt;/code&gt; するために、そして&lt;em&gt;B&lt;/em&gt;番号。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51a7f45521ef8ea1606816335e16f763d6b36469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a ** b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">&lt;code&gt;a ** b&lt;/code&gt; と&lt;em&gt;bの&lt;/em&gt;数値に対して&lt;em&gt;、&lt;/em&gt;a ** bを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="736a5ae90d2d93b5844580bcb72f35a3ece74f1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt; for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; sequences.</source>
          <target state="translated">戻り &lt;code&gt;a + b&lt;/code&gt; ためと&lt;em&gt;B&lt;/em&gt;のシーケンスを。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bdefc322a2065725bb27881e4b8aed55310a6b3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="translated">&lt;code&gt;a + b&lt;/code&gt; と&lt;em&gt;bの&lt;/em&gt;数値に対して&lt;em&gt;は&lt;/em&gt;、&lt;em&gt;a &lt;/em&gt;+ bを返します。</target>
        </trans-unit>
        <trans-unit id="ad7f6b7e97caca43dea5d4f732653e45cff7e53d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a - b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a - b&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="3e8d55d9372445a7d6ed3dcd75a7c1ab28b4e936" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a / b&lt;/code&gt; where 2/3 is .66 rather than 0. This is also known as &amp;ldquo;true&amp;rdquo; division.</source>
          <target state="translated">2/3が0ではなく.66である &lt;code&gt;a / b&lt;/code&gt; 返します。これは「真の」除算とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="51020df3e8e82f8aac651fa28963a554a44d0f65" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a // b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a // b&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="de8819b044ad930fceb726cf1e718b78c3daf32e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a == b&lt;/code&gt;. This function uses an approach designed to prevent timing analysis by avoiding content-based short circuiting behaviour, making it appropriate for cryptography. &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; must both be of the same type: either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (ASCII only, as e.g. returned by &lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt;&lt;code&gt;HMAC.hexdigest()&lt;/code&gt;&lt;/a&gt;), or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;a == b&lt;/code&gt; 返します。この関数は、コンテンツベースの短絡動作を回避することでタイミング分析を防止するように設計されたアプローチを使用しており、暗号化に適しています。&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はどちらも同じタイプでなければなりません：&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;（ASCIIのみ、たとえば&lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt; &lt;code&gt;HMAC.hexdigest()&lt;/code&gt; &lt;/a&gt;によって返される）、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="287d2f97d6747650012eb4ac11c530ce717136e9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a == b&lt;/code&gt;. This function uses an approach designed to prevent timing analysis by avoiding content-based short circuiting behaviour, making it appropriate for cryptography. &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; must both be of the same type: either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (ASCII only, as e.g. returned by &lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt;&lt;code&gt;HMAC.hexdigest()&lt;/code&gt;&lt;/a&gt;), or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;a == b&lt;/code&gt; 返します。この関数は、コンテンツベースの短絡動作を回避することでタイミング分析を防止するように設計されたアプローチを使用しており、暗号化に適しています。&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;は両方とも同じタイプである必要があり&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;：str（ASCIIのみ、たとえば&lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt; &lt;code&gt;HMAC.hexdigest()&lt;/code&gt; &lt;/a&gt;によって返される）、または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="deb19c25cf844536fa91896b6bbb9e4bd6fdc581" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a @ b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a @ b&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ca0fbc387e2b6b366d22b4ea94c4199417d1b6ed" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is b&lt;/code&gt;. Tests object identity.</source>
          <target state="translated">&lt;code&gt;a is b&lt;/code&gt; 返します。オブジェクトのアイデンティティをテストします。</target>
        </trans-unit>
        <trans-unit id="c1c5a46246b5252e763393003cc6527325480206" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is not b&lt;/code&gt;. Tests object identity.</source>
          <target state="translated">戻る &lt;code&gt;a is not b&lt;/code&gt; 。オブジェクトのアイデンティティをテストします。</target>
        </trans-unit>
        <trans-unit id="f6800801d1028a90741ea7bdb1f41c5ecc4f2e41" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;atan(y / x)&lt;/code&gt;, in radians. The result is between &lt;code&gt;-pi&lt;/code&gt; and &lt;code&gt;pi&lt;/code&gt;. The vector in the plane from the origin to point &lt;code&gt;(x, y)&lt;/code&gt; makes this angle with the positive X axis. The point of &lt;a href=&quot;#math.atan2&quot;&gt;&lt;code&gt;atan2()&lt;/code&gt;&lt;/a&gt; is that the signs of both inputs are known to it, so it can compute the correct quadrant for the angle. For example, &lt;code&gt;atan(1)&lt;/code&gt; and &lt;code&gt;atan2(1, 1)&lt;/code&gt; are both &lt;code&gt;pi/4&lt;/code&gt;, but &lt;code&gt;atan2(-1,
-1)&lt;/code&gt; is &lt;code&gt;-3*pi/4&lt;/code&gt;.</source>
          <target state="translated">ラジアンで &lt;code&gt;atan(y / x)&lt;/code&gt; 返します。結果は &lt;code&gt;-pi&lt;/code&gt; と &lt;code&gt;pi&lt;/code&gt; の間です。原点から点 &lt;code&gt;(x, y)&lt;/code&gt; までの平面内のベクトルは、この角度を正のX軸となす。&lt;a href=&quot;#math.atan2&quot;&gt; &lt;code&gt;atan2()&lt;/code&gt; &lt;/a&gt;のポイントは、両方の入力の符号がわかっているため、角度の正しい象限を計算できることです。たとえば、 &lt;code&gt;atan(1)&lt;/code&gt; と &lt;code&gt;atan2(1, 1)&lt;/code&gt; はどちらも &lt;code&gt;pi/4&lt;/code&gt; ですが、 &lt;code&gt;atan2(-1, -1)&lt;/code&gt; は &lt;code&gt;-3*pi/4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf118d728bd236fca66615283e6410c305db6ffd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;dt + offset&lt;/code&gt;. The &lt;em&gt;dt&lt;/em&gt; argument must be an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance, with &lt;code&gt;tzinfo&lt;/code&gt; set to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dt + offset&lt;/code&gt; 返します。&lt;em&gt;DTの&lt;/em&gt;引数には注意する必要があり&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;と、インスタンス &lt;code&gt;tzinfo&lt;/code&gt; のに設定 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15b44269fbfae68d389f71e972b7b213e6cb1d28" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;fmod(x, y)&lt;/code&gt;, as defined by the platform C library. Note that the Python expression &lt;code&gt;x % y&lt;/code&gt; may not return the same result. The intent of the C standard is that &lt;code&gt;fmod(x, y)&lt;/code&gt; be exactly (mathematically; to infinite precision) equal to &lt;code&gt;x - n*y&lt;/code&gt; for some integer &lt;em&gt;n&lt;/em&gt; such that the result has the same sign as &lt;em&gt;x&lt;/em&gt; and magnitude less than &lt;code&gt;abs(y)&lt;/code&gt;. Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; returns a result with the sign of &lt;em&gt;y&lt;/em&gt; instead, and may not be exactly computable for float arguments. For example, &lt;code&gt;fmod(-1e-100, 1e100)&lt;/code&gt; is &lt;code&gt;-1e-100&lt;/code&gt;, but the result of Python&amp;rsquo;s &lt;code&gt;-1e-100 % 1e100&lt;/code&gt; is &lt;code&gt;1e100-1e-100&lt;/code&gt;, which cannot be represented exactly as a float, and rounds to the surprising &lt;code&gt;1e100&lt;/code&gt;. For this reason, function &lt;a href=&quot;#math.fmod&quot;&gt;&lt;code&gt;fmod()&lt;/code&gt;&lt;/a&gt; is generally preferred when working with floats, while Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; is preferred when working with integers.</source>
          <target state="translated">プラットフォームのCライブラリで定義されている &lt;code&gt;fmod(x, y)&lt;/code&gt; 返します。 Python式 &lt;code&gt;x % y&lt;/code&gt; は同じ結果を返さない場合があることに注意してください。 C標準の目的は、 &lt;code&gt;fmod(x, y)&lt;/code&gt; が正確に（数学的には無限精度で）ある整数&lt;em&gt;n&lt;/em&gt;に対して &lt;code&gt;x - n*y&lt;/code&gt; 等しく、結果が&lt;em&gt;x&lt;/em&gt;と同じ符号を持ち、 &lt;code&gt;abs(y)&lt;/code&gt; 。 Pythonの &lt;code&gt;x % y&lt;/code&gt; は、代わりに&lt;em&gt;y&lt;/em&gt;の符号付きの結果を返します。float引数に対して正確に計算できない場合があります。たとえば、 &lt;code&gt;fmod(-1e-100, 1e100)&lt;/code&gt; は &lt;code&gt;-1e-100&lt;/code&gt; ですが、Pythonの &lt;code&gt;-1e-100 % 1e100&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;は &lt;code&gt;1e100-1e-100&lt;/code&gt; であり、浮動小数点数として正確に表すことはできず、驚くべき &lt;code&gt;1e100&lt;/code&gt; に丸められます。このため、浮動小数点数を処理する場合は関数&lt;a href=&quot;#math.fmod&quot;&gt; &lt;code&gt;fmod()&lt;/code&gt; &lt;/a&gt;が一般的に推奨され、整数を処理する場合はPythonの &lt;code&gt;x % y&lt;/code&gt; が推奨されます。</target>
        </trans-unit>
        <trans-unit id="a0c34c342bf1cdb471c4ad30d46ee0a24b38bba3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;timedelta(0)&lt;/code&gt; if DST is not in effect. If DST is in effect, return the offset as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object (see &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; for details). Note that DST offset, if applicable, has already been added to the UTC offset returned by &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt;, so there&amp;rsquo;s no need to consult &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; unless you&amp;rsquo;re interested in obtaining DST info separately. For example, &lt;a href=&quot;#datetime.datetime.timetuple&quot;&gt;&lt;code&gt;datetime.timetuple()&lt;/code&gt;&lt;/a&gt; calls its &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute&amp;rsquo;s &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; method to determine how the &lt;code&gt;tm_isdst&lt;/code&gt; flag should be set, and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;tzinfo.fromutc()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; to account for DST changes when crossing time zones.</source>
          <target state="translated">DSTが有効でない場合は、 &lt;code&gt;timedelta(0)&lt;/code&gt; を返します。 DSTが有効な場合は、オフセットを&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトとして返します（詳細はutcoffset &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;を参照）。該当する場合、DSTオフセットは&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;によって返されるUTCオフセットにすでに追加されているため、DST情報を個別に取得する必要がない場合は、&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;を参照する必要はありません。たとえば、&lt;a href=&quot;#datetime.datetime.timetuple&quot;&gt; &lt;code&gt;datetime.timetuple()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性の&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して &lt;code&gt;tm_isdst&lt;/code&gt; フラグを設定する方法を決定し、&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;tzinfo.fromutc()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;を呼び出してタイムゾーンをまたぐときのDSTの変更を考慮します。</target>
        </trans-unit>
        <trans-unit id="54a6a103dcb4d4513d47166d532b6998059e92f9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x * (2**i)&lt;/code&gt;. This is essentially the inverse of function &lt;a href=&quot;#math.frexp&quot;&gt;&lt;code&gt;frexp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x * (2**i)&lt;/code&gt; 返します。これは基本的に関数&lt;a href=&quot;#math.frexp&quot;&gt; &lt;code&gt;frexp()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="46c2a808a3b4e42d1c206b84ac2a59007274b4fb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; raised to the power &lt;code&gt;y&lt;/code&gt;. Exceptional cases follow Annex &amp;lsquo;F&amp;rsquo; of the C99 standard as far as possible. In particular, &lt;code&gt;pow(1.0, x)&lt;/code&gt; and &lt;code&gt;pow(x, 0.0)&lt;/code&gt; always return &lt;code&gt;1.0&lt;/code&gt;, even when &lt;code&gt;x&lt;/code&gt; is a zero or a NaN. If both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are finite, &lt;code&gt;x&lt;/code&gt; is negative, and &lt;code&gt;y&lt;/code&gt; is not an integer then &lt;code&gt;pow(x, y)&lt;/code&gt; is undefined, and raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; を &lt;code&gt;y&lt;/code&gt; 乗した値を返します。例外的なケースは、可能な限りC99標準の付録Fに従います。特に、 &lt;code&gt;pow(1.0, x)&lt;/code&gt; および &lt;code&gt;pow(x, 0.0)&lt;/code&gt; は、 &lt;code&gt;x&lt;/code&gt; がゼロまたはNaN であっても、常に &lt;code&gt;1.0&lt;/code&gt; を返します。 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の両方が有限で、 &lt;code&gt;x&lt;/code&gt; が負で、 &lt;code&gt;y&lt;/code&gt; が整数でない場合、 &lt;code&gt;pow(x, y)&lt;/code&gt; は未定義であり、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を送出します。</target>
        </trans-unit>
        <trans-unit id="30e0262bd4ba867fedfc52566d1eb09da934fb13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; to the power of &lt;code&gt;y&lt;/code&gt;, reduced modulo &lt;code&gt;modulo&lt;/code&gt; if given.</source>
          <target state="translated">リターンは、 &lt;code&gt;x&lt;/code&gt; はのパワーに &lt;code&gt;y&lt;/code&gt; モジュロ減少、 &lt;code&gt;modulo&lt;/code&gt; 与えられた場合。</target>
        </trans-unit>
        <trans-unit id="aff49abe7aace93c93fdaf9e73d078aea6b5c05f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; converted to an integer. Equivalent to &lt;code&gt;a.__index__()&lt;/code&gt;.</source>
          <target state="translated">戻り値は整数に変換しました。 &lt;code&gt;a.__index__()&lt;/code&gt; 同等です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0930bd03f8c629148151e2a195d02f3bd5dfcca" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted left by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">戻る左シフト&lt;em&gt;B&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5eed2bc8bd692a94ca6000df75299688109d9db5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted right by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">戻り値は右シフトし&lt;em&gt;、B&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7fe1aba68758bf4f1738f9b8bc7a70150721bcf" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;; if &lt;em&gt;mod&lt;/em&gt; is present, return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;, modulo &lt;em&gt;mod&lt;/em&gt; (computed more efficiently than &lt;code&gt;pow(base, exp) % mod&lt;/code&gt;). The two-argument form &lt;code&gt;pow(base, exp)&lt;/code&gt; is equivalent to using the power operator: &lt;code&gt;base**exp&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;底&lt;/em&gt;をべき乗&lt;em&gt;expに&lt;/em&gt;返します。&lt;em&gt;mod&lt;/em&gt;が存在する場合、&lt;em&gt;base&lt;/em&gt;を&lt;em&gt;modを&lt;/em&gt;法とする&lt;em&gt;指数&lt;/em&gt;&lt;em&gt;expに&lt;/em&gt;戻します（ &lt;code&gt;pow(base, exp) % mod&lt;/code&gt; よりも効率的に計算されます）。引数が2つの形式の &lt;code&gt;pow(base, exp)&lt;/code&gt; は、べき乗演算子 &lt;code&gt;base**exp&lt;/code&gt; を使用することと同じです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f05dcec1a404cde1b0f067a0a964b56a54b5f6ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, minus 1. Here &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms. For small floats &lt;em&gt;x&lt;/em&gt;, the subtraction in &lt;code&gt;exp(x) - 1&lt;/code&gt; can result in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;significant loss of precision&lt;/a&gt;; the &lt;a href=&quot;#math.expm1&quot;&gt;&lt;code&gt;expm1()&lt;/code&gt;&lt;/a&gt; function provides a way to compute this quantity to full precision:</source>
          <target state="translated">&lt;em&gt;eの&lt;/em&gt;&lt;em&gt;x&lt;/em&gt;乗から1を引いた値を返します。ここで&lt;em&gt;e&lt;/em&gt;は自然対数の底です。小さい浮動小数点数&lt;em&gt;x&lt;/em&gt;の場合、 &lt;code&gt;exp(x) - 1&lt;/code&gt; での減算により、&lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;精度が大幅に失わ&lt;/a&gt;れる可能性があります。&lt;a href=&quot;#math.expm1&quot;&gt; &lt;code&gt;expm1()&lt;/code&gt; &lt;/a&gt;関数は、完全な精度でこの量を計算する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="32ee926a1638643a39d7bf9127f034473a63db8c" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip; is the base of natural logarithms. This is usually more accurate than &lt;code&gt;math.e ** x&lt;/code&gt; or &lt;code&gt;pow(math.e, x)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;e&lt;/em&gt;を&lt;em&gt;x&lt;/em&gt;乗した&lt;em&gt;値&lt;/em&gt;を返します。ここで、&lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip;は自然対数の底です。これは通常、 &lt;code&gt;math.e ** x&lt;/code&gt; または &lt;code&gt;pow(math.e, x)&lt;/code&gt; よりも正確です。</target>
        </trans-unit>
        <trans-unit id="732dced3493c574a35c934dc77801e477df9f08f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms.</source>
          <target state="translated">戻り値は、&lt;em&gt;E&lt;/em&gt;電源に上げ&lt;em&gt;X&lt;/em&gt;、&lt;em&gt;eは&lt;/em&gt;自然対数の底です。</target>
        </trans-unit>
        <trans-unit id="869fbeced7cf7d56291909bf99e10e204c1f7b4e" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;n&lt;/em&gt; independent iterators from a single iterable.</source>
          <target state="translated">単一の反復可能オブジェクトから&lt;em&gt;n個の&lt;/em&gt;独立した反復子を返します。</target>
        </trans-unit>
        <trans-unit id="c556d07cf327b918d111304566842870baf8e5ba" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;num&lt;/em&gt; cryptographically strong pseudo-random bytes. Raises an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if the PRNG has not been seeded with enough data or if the operation is not supported by the current RAND method. &lt;a href=&quot;#ssl.RAND_status&quot;&gt;&lt;code&gt;RAND_status()&lt;/code&gt;&lt;/a&gt; can be used to check the status of the PRNG and &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;RAND_add()&lt;/code&gt;&lt;/a&gt; can be used to seed the PRNG.</source>
          <target state="translated">戻り&lt;em&gt;NUM&lt;/em&gt;、暗号強度の高い擬似ランダムバイト。PRNGに十分なデータがシードされていない場合、または操作が現在のRANDメソッドでサポートされていない場合は、&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; が発生し&lt;/a&gt;ます。&lt;a href=&quot;#ssl.RAND_status&quot;&gt; &lt;code&gt;RAND_status()&lt;/code&gt; &lt;/a&gt;を使用してPRNGのステータスを確認し、&lt;a href=&quot;#ssl.RAND_add&quot;&gt; &lt;code&gt;RAND_add()&lt;/code&gt; &lt;/a&gt;を使用してPRNGをシードできます。</target>
        </trans-unit>
        <trans-unit id="ea961a350612f3d66fa5c073a91b1724238c8398" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;number&lt;/em&gt; rounded to &lt;em&gt;ndigits&lt;/em&gt; precision after the decimal point. If &lt;em&gt;ndigits&lt;/em&gt; is omitted or is &lt;code&gt;None&lt;/code&gt;, it returns the nearest integer to its input.</source>
          <target state="translated">小数点以下&lt;em&gt;n&lt;/em&gt;桁の精度に丸めた&lt;em&gt;数値&lt;/em&gt;を返します。&lt;em&gt;ndigits&lt;/em&gt;が省略されているか &lt;code&gt;None&lt;/code&gt; の場合、入力に最も近い整数を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="085810cdf180f5497ea9c20f653a975570bc3f11" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; negated (&lt;code&gt;-obj&lt;/code&gt;).</source>
          <target state="translated">否定された&lt;em&gt;objを&lt;/em&gt;返します（ &lt;code&gt;-obj&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="250cdc8288e78bea3126de677e49e772ccffc73d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; positive (&lt;code&gt;+obj&lt;/code&gt;).</source>
          <target state="translated">正の&lt;em&gt;obj&lt;/em&gt;（ &lt;code&gt;+obj&lt;/code&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="162485b79078b310772c6399823df5089be66a68" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt; allowing individual elements to be repeated more than once.</source>
          <target state="translated">入力&lt;em&gt;反復可能オブジェクト&lt;/em&gt;から要素の長さ&lt;em&gt;rの&lt;/em&gt;サブシーケンスを返します。これにより、個々の要素を複数回繰り返すことができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beb2a49a419bbc4a0cb02f78c16ab2b81ccac8b5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="translated">入力&lt;em&gt;iterable&lt;/em&gt;から要素の長さ&lt;em&gt;rの&lt;/em&gt;サブシーケンスを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be2cf02ce1fad496966b0fcb69eb88045d90fb28" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;rootObject&lt;/em&gt; as an XML plist-formatted bytes object.</source>
          <target state="translated">&lt;em&gt;rootObject&lt;/em&gt;をXML plist形式のバイトオブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="8590e9a4a39bb0c52fdd079e36b8b664d3729130" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;value&lt;/em&gt; as a plist-formatted bytes object. See the documentation for &lt;a href=&quot;#plistlib.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments of this function.</source>
          <target state="translated">plist形式のバイトオブジェクトとしての戻り&lt;em&gt;値&lt;/em&gt;。この関数のキーワード引数の説明については、&lt;a href=&quot;#plistlib.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ee9d213c3838bd621dcc1a5c2b7e189dc0f8efa1" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;, truncated to an integer.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;を&lt;em&gt;y&lt;/em&gt;で割った整数を切り捨てて返します。</target>
        </trans-unit>
        <trans-unit id="b21c0fc98d85e9522726bf652b05f15e2bb4d578" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;を&lt;em&gt;yで&lt;/em&gt;割った&lt;em&gt;値を&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="75f93bb6e6340283ff56059c87016096441b274d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; factorial as an integer. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;x&lt;/em&gt; is not integral or is negative.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;階乗を整数として返します。発生させます&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;あれば&lt;em&gt;、xが&lt;/em&gt;整数ではありませんか負です。</target>
        </trans-unit>
        <trans-unit id="3924954b9991e95339b371117a2199ccac8bc1a7" translate="yes" xml:space="preserve">
          <source>Return POSIX timestamp corresponding to the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. The return value is a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; similar to that returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンスに対応するPOSIXタイムスタンプを返します。戻り値は、&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;によって返されるのと同様の&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3e339edf3ad2f542b96afbfe58204eb717ddf220" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;data&amp;rdquo; wrapper object around the bytes object &lt;em&gt;data&lt;/em&gt;. This is used in functions converting from/to plists to represent the &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; type available in plists.</source>
          <target state="translated">バイトオブジェクト&lt;em&gt;dataの&lt;/em&gt;周りの「データ」ラッパーオブジェクトを返し&lt;em&gt;ます&lt;/em&gt;。これは、plistで使用できる &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; タイプを表すために、plistとの間で変換を行う関数で使用されます。</target>
        </trans-unit>
        <trans-unit id="953e72f5dbb9eaca0848a7d75bbb8db154b7b826" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;memory view&amp;rdquo; object created from the given argument. See &lt;a href=&quot;stdtypes#typememoryview&quot;&gt;Memory Views&lt;/a&gt; for more information.</source>
          <target state="translated">指定された引数から作成された「メモリビュー」オブジェクトを返します。詳細については、&lt;a href=&quot;stdtypes#typememoryview&quot;&gt;メモリビュー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="da21208028aeb33a7f885ed091f22144591f0487" translate="yes" xml:space="preserve">
          <source>Return a 2-tuple; the first element is a string containing the command line to be executed (which can be passed to &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;), and the second element is the mailcap entry for a given MIME type. If no matching MIME type can be found, &lt;code&gt;(None, None)&lt;/code&gt; is returned.</source>
          <target state="translated">2タプルを返します。最初の要素は実行されるコマンドライン（&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; に&lt;/a&gt;渡すことができる）を含む文字列で、2番目の要素は特定のMIMEタイプのmailcapエントリです。一致するMIMEタイプが見つからない場合は、 &lt;code&gt;(None, None)&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="635b899b13bd94715f60b511ac9cb5a316f14d5c" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple &lt;code&gt;(login, account, password)&lt;/code&gt; of authenticators for &lt;em&gt;host&lt;/em&gt;. If the netrc file did not contain an entry for the given host, return the tuple associated with the &amp;lsquo;default&amp;rsquo; entry. If neither matching host nor default entry is available, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt;の認証子の3タプル &lt;code&gt;(login, account, password)&lt;/code&gt; を返し&lt;em&gt;ます&lt;/em&gt;。netrcファイルに特定のホストのエントリが含まれていなかった場合は、「デフォルト」エントリに関連付けられたタプルを返します。一致するホストもデフォルトのエントリも利用できない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2237a0a6c86183cf7fdac655f469aada3b908269" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday).</source>
          <target state="translated">(ISO年、ISO週番、ISO平日)の3つのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="3a71c8bfdd881c72898c5c8e376058acde8661bc" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday). The same as &lt;code&gt;self.date().isocalendar()&lt;/code&gt;.</source>
          <target state="translated">3タプル（ISO年、ISO週番号、ISO曜日）を返します。 &lt;code&gt;self.date().isocalendar()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="7e509d9c26cac9481d3506cb90ab038b89866617" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#asyncio.asyncio.subprocess.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.asyncio.subprocess.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="4c2835f9e9416dd1ecf0859845d4972006ca8a13" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; instance, a wrapped version of &lt;em&gt;file&lt;/em&gt; which provides transparent transcoding. The original file is closed when the wrapped version is closed.</source>
          <target state="translated">透過的なトランスコーディングを提供する&lt;em&gt;ファイルの&lt;/em&gt;ラップバージョンである&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt; &lt;code&gt;StreamRecoder&lt;/code&gt; &lt;/a&gt;インスタンスを返します。元のファイルは、ラップされたバージョンが閉じられると閉じられます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62846974daa9aa01764dbe2a78e5fa987fc1f670" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; given in the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;YYYY-MM-DD&lt;/code&gt; 形式で指定された&lt;em&gt;date_stringに&lt;/em&gt;対応する&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72cc8b85c34fd01c2ff68b6de4dd2b1cc0c16fe8" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. This is the inverse of the function &lt;a href=&quot;#datetime.date.isocalendar&quot;&gt;&lt;code&gt;date.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">年、週、日で指定されたISOカレンダー&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;対応する日付を返します。これは、関数&lt;a href=&quot;#datetime.date.isocalendar&quot;&gt; &lt;code&gt;date.isocalendar()&lt;/code&gt; &lt;/a&gt;の逆です。</target>
        </trans-unit>
        <trans-unit id="4020f5b532f6e1e5dc5692889e99e01e2e58b763" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to &lt;em&gt;date_string&lt;/em&gt;, parsed according to &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;に従って解析された、&lt;em&gt;date_string&lt;/em&gt;に対応する&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;返し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34c60d227cb67dcdaafedc501e0b5538d29aaf54" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date.isoformat&quot;&gt; &lt;code&gt;date.isoformat()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt; &lt;code&gt;datetime.isoformat()&lt;/code&gt; &lt;/a&gt;によって発行された形式のいずれかで、&lt;em&gt;date_string&lt;/em&gt;に対応する&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2daa194003e3ad2701bc2aa89040c7590209bb33" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. The non-date components of the datetime are populated with their normal default values. This is the inverse of the function &lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt;&lt;code&gt;datetime.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">年、週、日で指定されたISOカレンダーの日付に対応する&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;返します。日時の非日付コンポーネントには、通常のデフォルト値が入力されます。これは、関数&lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt; &lt;code&gt;datetime.isocalendar()&lt;/code&gt; &lt;/a&gt;の逆です。</target>
        </trans-unit>
        <trans-unit id="e94eee910700d004bb911b7793c76bdb274d4475" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object with new &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute &lt;em&gt;tz&lt;/em&gt;, adjusting the date and time data so the result is the same UTC time as &lt;em&gt;self&lt;/em&gt;, but in &lt;em&gt;tz&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="translated">新しい&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性&lt;em&gt;tzを使用&lt;/em&gt;して&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトを返し、結果が&lt;em&gt;self&lt;/em&gt;と同じUTC時間になるように日付と時刻のデータを調整しますが、&lt;em&gt;tz&lt;/em&gt;のローカル時刻です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4cf8125664a78af2d348cb489d29f88928a59dc" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;time_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;. Specifically, this function supports strings in the format:</source>
          <target state="translated">&lt;a href=&quot;#datetime.time.isoformat&quot;&gt; &lt;code&gt;time.isoformat()&lt;/code&gt; &lt;/a&gt;によって発行されたフォーマットの1つで、&lt;em&gt;time_string&lt;/em&gt;に対応する&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;返します。具体的には、この関数は次の形式の文字列をサポートします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af8580b588a82089127232a336fc2ec95bfe6501" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; with the same value, except for those attributes given new values by whichever keyword arguments are specified. Note that &lt;code&gt;tzinfo=None&lt;/code&gt; can be specified to create a naive &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; from an aware &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, without conversion of the time data.</source>
          <target state="translated">キーワード引数が指定されたときに新しい値が指定された属性を除いて、同じ値の&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;を返します。ことを注意 &lt;code&gt;tzinfo=None&lt;/code&gt; 素朴作成するために指定することはできません&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;認識してからの&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;の時間データの変換せずに、。</target>
        </trans-unit>
        <trans-unit id="d2f847c492c1eeb613723482466288822cd37be3" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any surrogateescape encoded text provided to the &lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts binary data.</source>
          <target state="translated">戻り&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; 用&lt;/a&gt;に提供される任意のメッセージ書き込むオブジェクト&lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッド、または任意に提供surrogateescapeエンコードされたテキスト&lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;には、この方法を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトの&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;は、バイナリデータを受け入れる &lt;code&gt;write&lt;/code&gt; メソッドをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="59dbe176ef7ee1cc4d733a9c1b782caacc27714e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any surrogateescape encoded text provided to the &lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts binary data.</source>
          <target state="translated">戻り&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; 用&lt;/a&gt;に提供される任意のメッセージ書き込むオブジェクト&lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッド、または任意に提供surrogateescapeエンコードされたテキスト&lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;には、この方法を&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトの&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;は、バイナリデータを受け入れる &lt;code&gt;write&lt;/code&gt; メソッドをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="cc9989929334a64c46409ae7eab57c943e06951e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any text provided to the &lt;a href=&quot;#email.generator.Generator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts string data.</source>
          <target state="translated">戻り&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;に提供される任意のメッセージを書き込むオブジェクト&lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッド、またはに提供されたテキスト&lt;a href=&quot;#email.generator.Generator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;には、この方法を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトの&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;は、文字列データを受け入れる &lt;code&gt;write&lt;/code&gt; メソッドをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="09fcbf10754b9a7b87e561fc4e4533dc8de8da4a" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any text provided to the &lt;a href=&quot;#email.generator.Generator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts string data.</source>
          <target state="translated">戻り&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;に提供される任意のメッセージを書き込むオブジェクト&lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッド、またはに提供されたテキスト&lt;a href=&quot;#email.generator.Generator.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;には、この方法を&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトの&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;。&lt;em&gt;outfp&lt;/em&gt;は、文字列データを受け入れる &lt;code&gt;write&lt;/code&gt; メソッドをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="e00cadb13827de1f63ecdec7b3f48ef96ca6b670" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; (or its subclass) object for a given callable &lt;code&gt;obj&lt;/code&gt;. Pass &lt;code&gt;follow_wrapped=False&lt;/code&gt; to get a signature of &lt;code&gt;obj&lt;/code&gt; without unwrapping its &lt;code&gt;__wrapped__&lt;/code&gt; chain.</source>
          <target state="translated">指定された呼び出し可能な &lt;code&gt;obj&lt;/code&gt; の&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt;（またはそのサブクラス）オブジェクトを返します。パスは &lt;code&gt;follow_wrapped=False&lt;/code&gt; の署名を取得する &lt;code&gt;obj&lt;/code&gt; そのアンラップすることなく、 &lt;code&gt;__wrapped__&lt;/code&gt; チェーンを。</target>
        </trans-unit>
        <trans-unit id="9e00c952dddcfed7e7765a897ab4e32ce6f05aab" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; object for the given &lt;code&gt;callable&lt;/code&gt;:</source>
          <target state="translated">指定された &lt;code&gt;callable&lt;/code&gt; の&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt;オブジェクトを返します：</target>
        </trans-unit>
        <trans-unit id="dc989e5c43ca4ddd628a90b1dcded9a6918daaf0" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instance representing the folder whose name is &lt;em&gt;folder&lt;/em&gt;. A &lt;a href=&quot;#mailbox.NoSuchMailboxError&quot;&gt;&lt;code&gt;NoSuchMailboxError&lt;/code&gt;&lt;/a&gt; exception is raised if the folder does not exist.</source>
          <target state="translated">名前が&lt;em&gt;folderの&lt;/em&gt;フォルダを表す&lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt;インスタンスを返し&lt;em&gt;ます&lt;/em&gt;。A &lt;a href=&quot;#mailbox.NoSuchMailboxError&quot;&gt; &lt;code&gt;NoSuchMailboxError&lt;/code&gt; の&lt;/a&gt;フォルダが存在しない場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="d703cebe0f7d520d27cd5242c2456c42c09ae87c" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object for this entry. This method follows symbolic links by default; to stat a symbolic link add the &lt;code&gt;follow_symlinks=False&lt;/code&gt; argument.</source>
          <target state="translated">このエントリの&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。このメソッドは、デフォルトではシンボリックリンクをたどります。シンボリックリンクを開始するには、 &lt;code&gt;follow_symlinks=False&lt;/code&gt; 引数を追加します。</target>
        </trans-unit>
        <trans-unit id="f9003be502e4c5c3c57be2c06a8bf396c6cd298a" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object for the pathname &lt;em&gt;name&lt;/em&gt;. For detailed information on &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; objects and the keyword arguments that are allowed, see &lt;a href=&quot;#tarfile-objects&quot;&gt;TarFile Objects&lt;/a&gt;.</source>
          <target state="translated">パス名&lt;em&gt;nameの&lt;/em&gt;&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。詳細について&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトと許可されているキーワード引数は、参照&lt;a href=&quot;#tarfile-objects&quot;&gt;のTarFileオブジェクト&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e91feb92f3621b96633ad2b8a299744d844a0c4" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object for member &lt;em&gt;name&lt;/em&gt;. If &lt;em&gt;name&lt;/em&gt; can not be found in the archive, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">メンバー&lt;em&gt;名の&lt;/em&gt;&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。アーカイブに&lt;em&gt;名前&lt;/em&gt;が見つからない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="618b258e82441ee8e8e9a4660fef39f1bd8d88c4" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#textseq&quot;&gt;string&lt;/a&gt; version of &lt;em&gt;object&lt;/em&gt;. If &lt;em&gt;object&lt;/em&gt; is not provided, returns the empty string. Otherwise, the behavior of &lt;code&gt;str()&lt;/code&gt; depends on whether &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is given, as follows.</source>
          <target state="translated">&lt;em&gt;オブジェクトの&lt;/em&gt;&lt;a href=&quot;#textseq&quot;&gt;文字列&lt;/a&gt;バージョンを返し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;オブジェクト&lt;/em&gt;が指定されていない場合は、空の文字列を返します。それ以外の場合、 &lt;code&gt;str()&lt;/code&gt; の動作は、次のように、&lt;em&gt;エンコーディング&lt;/em&gt;または&lt;em&gt;エラー&lt;/em&gt;が指定されているかどうかによって異なります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
