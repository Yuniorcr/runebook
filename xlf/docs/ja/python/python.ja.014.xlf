<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="6a8ce0b24fe78f15c89a4a9c4becf84652288522" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;NotImplemented&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NotImplemented&lt;/code&gt; と書かれています。</target>
        </trans-unit>
        <trans-unit id="841555ab84a821d8592d3ba16982eb976c179de0" translate="yes" xml:space="preserve">
          <source>It makes it clear that the &lt;code&gt;cm&lt;/code&gt; applies to the whole function, rather than just a piece of it (and saving an indentation level is nice, too).</source>
          <target state="translated">これは、 &lt;code&gt;cm&lt;/code&gt; が関数の一部ではなく関数全体に適用されることを明確にします（インデントレベルを保存することもいいです）。</target>
        </trans-unit>
        <trans-unit id="73f114d3bbc30556ce94eba580337d50515cee5f" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;a href=&quot;#signal.SIGFPE&quot;&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.SIGSEGV&quot;&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/a&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">It makes little sense to catch synchronous errors like &lt;a href=&quot;#signal.SIGFPE&quot;&gt; &lt;code&gt;SIGFPE&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#signal.SIGSEGV&quot;&gt; &lt;code&gt;SIGSEGV&lt;/code&gt; &lt;/a&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt; module to report on synchronous errors.</target>
        </trans-unit>
        <trans-unit id="cceaba8129fdd9cb6ff7d523e835d1be2a3900bb" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;code&gt;SIGFPE&lt;/code&gt; or &lt;code&gt;SIGSEGV&lt;/code&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">Cコードの無効な操作が原因で発生する &lt;code&gt;SIGFPE&lt;/code&gt; や &lt;code&gt;SIGSEGV&lt;/code&gt; などの同期エラーをキャッチしても意味がありません。PythonはシグナルハンドラーからCコードに戻ります。Cコードは同じシグナルを再度発生させる可能性が高く、明らかにPythonがハングします。Python 3.3以降では、&lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt;モジュールを使用して同期エラーを報告できます。</target>
        </trans-unit>
        <trans-unit id="38e76705e1c36e7060b372d7e192caca143da51c" translate="yes" xml:space="preserve">
          <source>It may also be useful to have an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; assign attributes to an already existing object, rather than a new &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object. This can be achieved by specifying the &lt;code&gt;namespace=&lt;/code&gt; keyword argument:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;で、新しい&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;オブジェクトではなく、既存のオブジェクトに属性を割り当てると便利な場合もあります。これは、 &lt;code&gt;namespace=&lt;/code&gt; キーワード引数を指定することで実現できます。</target>
        </trans-unit>
        <trans-unit id="fba1d56f7a7c046d3fc4bbe63e3336e206c6db2d" translate="yes" xml:space="preserve">
          <source>It may be preferable to simply create the barrier with a sensible &lt;em&gt;timeout&lt;/em&gt; value to automatically guard against one of the threads going awry.</source>
          <target state="translated">スレッドが1つ失敗するのを自動的に防ぐために、適切な&lt;em&gt;タイムアウト&lt;/em&gt;値でバリアを作成することが望ましい場合があります。</target>
        </trans-unit>
        <trans-unit id="4b07ba6ca89cd1aae3cc72549392d22b75675e8e" translate="yes" xml:space="preserve">
          <source>It may not be obvious how to break a shell command into a sequence of arguments, especially in complex cases. &lt;a href=&quot;shlex#shlex.split&quot;&gt;&lt;code&gt;shlex.split()&lt;/code&gt;&lt;/a&gt; can illustrate how to determine the correct tokenization for &lt;em&gt;args&lt;/em&gt;:</source>
          <target state="translated">It may not be obvious how to break a shell command into a sequence of arguments, especially in complex cases. &lt;a href=&quot;shlex#shlex.split&quot;&gt; &lt;code&gt;shlex.split()&lt;/code&gt; &lt;/a&gt; can illustrate how to determine the correct tokenization for &lt;em&gt;args&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="ed6a077b4756775b9b29b2ea1e03ac9d700dfd8e" translate="yes" xml:space="preserve">
          <source>It must be called at most once per thread object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate thread of control.</source>
          <target state="translated">スレッドオブジェクトごとに最大で1回呼び出す必要があります。オブジェクトの&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが別の制御スレッドで呼び出されるようにします。</target>
        </trans-unit>
        <trans-unit id="daad8dfada880cb31549425a5ec3431b9222657b" translate="yes" xml:space="preserve">
          <source>It returns bytes, encoded using the &lt;a href=&quot;token#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; token, which is the first token sequence output by &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;. If there is no encoding token in the input, it returns a str instead.</source>
          <target state="translated">これは、&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;によって出力された最初のトークンシーケンスである&lt;a href=&quot;token#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt;トークンを使用してエンコードされたバイトを返します。入力にエンコーディングトークンがない場合は、代わりにstrを返します。</target>
        </trans-unit>
        <trans-unit id="a8e3c74f6ede201d039fbecf6218111d0e334740" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">すべてのジャンプが許可されるわけではないことに注意してください。たとえば、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;ループの途中や、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;句の外にジャンプすることはできません。</target>
        </trans-unit>
        <trans-unit id="2937b0e1593f0a67d3bf89f808ac34f1723db7c8" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; clause.</target>
        </trans-unit>
        <trans-unit id="d00162c40ad44bcc91c01b39dbf4174206720406" translate="yes" xml:space="preserve">
          <source>It should not be used to indicate that an operator or method is not meant to be supported at all &amp;ndash; in that case either leave the operator / method undefined or, if a subclass, set it to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">演算子またはメソッドがまったくサポートされていないことを示すために使用しないでください。その場合、演算子/メソッドを未定義のままにするか、サブクラスの場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;に設定します。</target>
        </trans-unit>
        <trans-unit id="7ded5b6e9599dd1f5438c1647424ab89dfd2b577" translate="yes" xml:space="preserve">
          <source>It should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="726e6dfbe6b42488d80277b74ab1981ea0eb48c8" translate="yes" xml:space="preserve">
          <source>It starts by constructing up to four directories from a head and a tail part. For the head part, it uses &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt;; empty heads are skipped. For the tail part, it uses the empty string and then &lt;code&gt;lib/site-packages&lt;/code&gt; (on Windows) or &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; (on Unix and Macintosh). For each of the distinct head-tail combinations, it sees if it refers to an existing directory, and if so, adds it to &lt;code&gt;sys.path&lt;/code&gt; and also inspects the newly added path for configuration files.</source>
          <target state="translated">最初に、先頭と末尾の部分から最大4つのディレクトリを作成します。先頭部分には、 &lt;code&gt;sys.prefix&lt;/code&gt; と &lt;code&gt;sys.exec_prefix&lt;/code&gt; を使用します。空のヘッドはスキップされます。末尾部分では、空の文字列を使用し、次に &lt;code&gt;lib/site-packages&lt;/code&gt; （Windowsの場合）または &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; （UnixおよびMacintoshの場合）を使用します。個別のヘッドテールの組み合わせごとに、既存のディレクトリを参照しているかどうかを確認し、参照している場合はそれを &lt;code&gt;sys.path&lt;/code&gt; に追加し、新しく追加されたパスで構成ファイルを調べます。</target>
        </trans-unit>
        <trans-unit id="60e34e8fb6e7795d3b1478935c49f2271750a6ed" translate="yes" xml:space="preserve">
          <source>It supports mapping access by column name and index, iteration, representation, equality testing and &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">列名とインデックス、反復、表現、等価テスト、および&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;によるマッピングアクセスをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8ef92e73f369396214e54307628eb69b792a4bbe" translate="yes" xml:space="preserve">
          <source>It tries to keep the merits of the old turtle module and to be (nearly) 100% compatible with it. This means in the first place to enable the learning programmer to use all the commands, classes and methods interactively when using the module from within IDLE run with the &lt;code&gt;-n&lt;/code&gt; switch.</source>
          <target state="translated">古いturtleモジュールのメリットを維持し、（ほぼ）100％互換性があるようにします。つまり、そもそも学習プログラマーが &lt;code&gt;-n&lt;/code&gt; スイッチを指定してIDLE実行内からモジュールを使用するときに、すべてのコマンド、クラス、メソッドをインタラクティブに使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="5596437c51c08dd529f0316d43b2b71c787f8abe" translate="yes" xml:space="preserve">
          <source>It uses core algorithm from &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt; cipher designed by &lt;em&gt;Daniel J. Bernstein&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Daniel J. Bernsteinが&lt;/em&gt;設計した&lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt;暗号のコアアルゴリズムを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3aba2968f744adcc41a20aa7e792d5ccd239a3f" translate="yes" xml:space="preserve">
          <source>It will also ignore the module name used in Python 3 doctest reports. Hence both of these variations will work with the flag specified, regardless of whether the test is run under Python 2.7 or Python 3.2 (or later versions):</source>
          <target state="translated">また、Python 3のdoctestレポートで使用されるモジュール名も無視されます。Python 2.7、Python 3.2 (またはそれ以降のバージョン)のどちらでテストが実行されても、これらのバリエーションは指定されたフラグで動作します。</target>
        </trans-unit>
        <trans-unit id="66a19358efe30907a9def33ebebbf43009608227" translate="yes" xml:space="preserve">
          <source>It will be called to process server continuation responses; the &lt;em&gt;response&lt;/em&gt; argument it is passed will be &lt;code&gt;bytes&lt;/code&gt;. It should return &lt;code&gt;bytes&lt;/code&gt;&lt;em&gt;data&lt;/em&gt; that will be base64 encoded and sent to the server. It should return &lt;code&gt;None&lt;/code&gt; if the client abort response &lt;code&gt;*&lt;/code&gt; should be sent instead.</source>
          <target state="translated">サーバー継続応答を処理するために呼び出されます。&lt;em&gt;応答&lt;/em&gt;それが渡された引数になります &lt;code&gt;bytes&lt;/code&gt; 。これは、base64でエンコードされてサーバーに送信される &lt;code&gt;bytes&lt;/code&gt; &lt;em&gt;データ&lt;/em&gt;を返す必要があります。代わりにクライアントの打ち切り応答 &lt;code&gt;*&lt;/code&gt; を送信する必要がある場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6b1ff9842d9447462c9c388a1d83d9a69c4059c5" translate="yes" xml:space="preserve">
          <source>It will call readline a maximum of twice, and return the encoding used (as a string) and a list of any lines (not decoded from bytes) it has read in.</source>
          <target state="translated">最大2回まで readline を呼び出し、使用したエンコーディング (文字列)と、読み込んだ行 (バイトからデコードされていない行)のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e412de0ab51fcff0e7d659b968642619518d0a22" translate="yes" xml:space="preserve">
          <source>It works reliably even when the asyncio event loop is run in a non-main OS thread.</source>
          <target state="translated">メインOS以外のスレッドでasyncioイベントループを実行した場合でも確実に動作します。</target>
        </trans-unit>
        <trans-unit id="318fb7d25f2176c7734d91b6446e33df1e3f8f6a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to roll your own skipping decorators by making a decorator that calls &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt; on the test when it wants it to be skipped. This decorator skips the test unless the passed object has a certain attribute:</source>
          <target state="translated">&lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;したいときにテストでskip（）を呼び出すデコレーターを作成することで、独自のスキップデコレーターをロールするのは簡単です。このデコレータは、渡されたオブジェクトに特定の属性がない限り、テストをスキップします。</target>
        </trans-unit>
        <trans-unit id="cf33e52507dbef8f4d67e44c287b62148de7d34c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to parse empty strings, even if quoted.</source>
          <target state="translated">引用符で囲まれている場合でも、空の文字列を解析することはできません。</target>
        </trans-unit>
        <trans-unit id="e071ef257a84829dddd1b2021f2e352991af9cff" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to loop over every key in the database using this method and the &lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt;&lt;code&gt;nextkey()&lt;/code&gt;&lt;/a&gt; method. The traversal is ordered by &lt;code&gt;gdbm&lt;/code&gt;&amp;rsquo;s internal hash values, and won&amp;rsquo;t be sorted by the key values. This method returns the starting key.</source>
          <target state="translated">このメソッドと&lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt; &lt;code&gt;nextkey()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、データベース内のすべてのキーをループすることができます。トラバーサルは &lt;code&gt;gdbm&lt;/code&gt; の内部ハッシュ値によって順序付けされ、キー値によってソートされません。このメソッドは開始キーを返します。</target>
        </trans-unit>
        <trans-unit id="79cf85d9f5bddaece698e10c86a31d6561698206" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to calculate mean and standard deviation from the result vector and report these. However, this is not very useful. In a typical case, the lowest value gives a lower bound for how fast your machine can run the given code snippet; higher values in the result vector are typically not caused by variability in Python&amp;rsquo;s speed, but by other processes interfering with your timing accuracy. So the &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; of the result is probably the only number you should be interested in. After that, you should look at the entire vector and apply common sense rather than statistics.</source>
          <target state="translated">結果ベクトルから平均と標準偏差を計算して報告するのは魅力的です。ただし、これはあまり役に立ちません。典型的なケースでは、最低値は、マシンが特定のコードスニペットを実行できる速度の下限を示します。結果ベクトルの値が大きくなるのは、通常、Pythonの速度の変動が原因ではなく、タイミングの精度を妨げている他のプロセスが原因です。したがって、結果の&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;がおそらく関心のある唯一の数値です。その後、ベクトル全体を調べ、統計ではなく常識を適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b2f79319d526f01fcd626f1555ae39d29870b549" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s up to the tool consuming the annotations to decide whether the client is allowed to have several annotations on one type and how to merge those annotations.</source>
          <target state="translated">It&amp;rsquo;s up to the tool consuming the annotations to decide whether the client is allowed to have several annotations on one type and how to merge those annotations.</target>
        </trans-unit>
        <trans-unit id="f0b5c2cece26ef74815cda706410d529a21bd417" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s very helpful to use this feature during script development. The reports produced by &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; provide information that can save you a lot of time in tracking down bugs. You can always remove the &lt;code&gt;cgitb&lt;/code&gt; line later when you have tested your script and are confident that it works correctly.</source>
          <target state="translated">スクリプト開発中にこの機能を使用すると非常に役立ちます。&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;によって生成されたレポートは、バグの追跡に多くの時間を節約できる情報を提供します。スクリプトをテストし、スクリプトが正しく動作することを確認したら、いつでも &lt;code&gt;cgitb&lt;/code&gt; 行を削除できます。</target>
        </trans-unit>
        <trans-unit id="22c515398dd54e978c320c9deb0d0268d495ea20" translate="yes" xml:space="preserve">
          <source>Italic mode</source>
          <target state="translated">イタリック体</target>
        </trans-unit>
        <trans-unit id="5cbdcd93f424472e328e1a57f47a17f48c00f33b" translate="yes" xml:space="preserve">
          <source>Item Options</source>
          <target state="translated">アイテムオプション</target>
        </trans-unit>
        <trans-unit id="6202f13083abbb77f81ad8a1985547e0eaade10c" translate="yes" xml:space="preserve">
          <source>Item&amp;rsquo;s option values may be displayed in a different order than the order in which they are stored.</source>
          <target state="translated">アイテムのオプション値は、格納されている順序とは異なる順序で表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="814115a7a4ce068e1e313aab07088369d6491578" translate="yes" xml:space="preserve">
          <source>Iterating over a message object tree is fairly easy with the &lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt;&lt;code&gt;Message.walk&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#module-email.iterators&quot;&gt;&lt;code&gt;email.iterators&lt;/code&gt;&lt;/a&gt; module provides some useful higher level iterations over message object trees.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt; &lt;code&gt;Message.walk&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、メッセージオブジェクトツリーの繰り返し処理はかなり簡単です。&lt;a href=&quot;#module-email.iterators&quot;&gt; &lt;code&gt;email.iterators&lt;/code&gt; の&lt;/a&gt;モジュールは、メッセージオブジェクトツリーの上にいくつかの有用な高レベルの反復を提供します。</target>
        </trans-unit>
        <trans-unit id="dc41d23f9c2b8b34eed362c2d5a66ec1341fc2fe" translate="yes" xml:space="preserve">
          <source>Iterating over the members of an enum does not provide the aliases:</source>
          <target state="translated">列挙型のメンバを繰り返し処理してもエイリアスは提供されません。</target>
        </trans-unit>
        <trans-unit id="09a13476ca8a54e634b1c965592cc50659e1d997" translate="yes" xml:space="preserve">
          <source>Iterating views while adding or deleting entries in the dictionary may raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; or fail to iterate over all entries.</source>
          <target state="translated">辞書のエントリを追加または削除しながらビューを反復すると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生する&lt;/a&gt;か、すべてのエントリの反復に失敗する場合があります。</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="c8de7b3a4ba4a49d433b993cb2d78885338309d1" translate="yes" xml:space="preserve">
          <source>Iteratively unpack from the buffer &lt;em&gt;buffer&lt;/em&gt; according to the format string &lt;em&gt;format&lt;/em&gt;. This function returns an iterator which will read equally-sized chunks from the buffer until all its contents have been consumed. The buffer&amp;rsquo;s size in bytes must be a multiple of the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォーマット文字列&lt;em&gt;format&lt;/em&gt;に従って、バッファ&lt;em&gt;buffer&lt;/em&gt;から繰り返しアンパックし&lt;em&gt;ます&lt;/em&gt;。この関数は、コンテンツがすべて消費されるまで、バッファーから同じサイズのチャンクを読み取るイテレーターを返します。バッファのサイズ（バイト単位&lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt;、calcsize（）で反映されるように、フォーマットで必要なサイズの倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="4bf9de45ad47d7c5378d6a6b4878a23abb027cf7" translate="yes" xml:space="preserve">
          <source>Iterator Types</source>
          <target state="translated">イテレータの型</target>
        </trans-unit>
        <trans-unit id="46761e79cfdea0019d907a53f45846a1ee9a6345" translate="yes" xml:space="preserve">
          <source>Itertool functions</source>
          <target state="translated">イターツール関数</target>
        </trans-unit>
        <trans-unit id="6e54a0513216ff9ab3f49477b340232097393b29" translate="yes" xml:space="preserve">
          <source>Itertools Recipes</source>
          <target state="translated">Itertools レシピ</target>
        </trans-unit>
        <trans-unit id="145aa1575e52b7c70be4caf59f0df6c3926fe2de" translate="yes" xml:space="preserve">
          <source>Its default value is 1 minute.</source>
          <target state="translated">デフォルト値は1分です。</target>
        </trans-unit>
        <trans-unit id="cf0c54b9eac44883aa5ea016a0936bae63b1471b" translate="yes" xml:space="preserve">
          <source>Its default value is 30 seconds.</source>
          <target state="translated">デフォルト値は30秒です。</target>
        </trans-unit>
        <trans-unit id="6615a04b6ee93ef346e1b7e4c47b5858de4e7e29" translate="yes" xml:space="preserve">
          <source>Its default value is 5 minutes.</source>
          <target state="translated">デフォルト値は5分です。</target>
        </trans-unit>
        <trans-unit id="abd75b8bd93dc8fe125c1d1c7e47d4f0550bbcb2" translate="yes" xml:space="preserve">
          <source>Its default value is 5 seconds.</source>
          <target state="translated">デフォルト値は5秒です。</target>
        </trans-unit>
        <trans-unit id="dc3bdbc56788fad2aa8a182d78a9cdd53617a14d" translate="yes" xml:space="preserve">
          <source>Its file,line position.</source>
          <target state="translated">そのファイル、行の位置。</target>
        </trans-unit>
        <trans-unit id="715aa3328be5ee249a0969744b5351374ea7673e" translate="yes" xml:space="preserve">
          <source>Its methods create and return &lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;Proxy Objects&lt;/a&gt; for a number of commonly used data types to be synchronized across processes. This notably includes shared lists and dictionaries.</source>
          <target state="translated">そのメソッドは、プロセス間で同期される一般的に使用される多数のデータ型の&lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;プロキシオブジェクト&lt;/a&gt;を作成して返します。これには特に共有リストと辞書が含まれます。</target>
        </trans-unit>
        <trans-unit id="2fff28012a7534f73380035c0ede53d295420a3b" translate="yes" xml:space="preserve">
          <source>JPEG data in JFIF or Exif formats</source>
          <target state="translated">JFIF または Exif 形式の JPEG 日付</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="e73d3511fce24ebc291cfc1a0bf8fb3055e4b3c0" translate="yes" xml:space="preserve">
          <source>JSON is a subset of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2. The JSON produced by this module&amp;rsquo;s default settings (in particular, the default &lt;em&gt;separators&lt;/em&gt; value) is also a subset of YAML 1.0 and 1.1. This module can thus also be used as a YAML serializer.</source>
          <target state="translated">JSONは&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2のサブセットです。このモジュールのデフォルト設定（特に、デフォルトの&lt;em&gt;セパレーター&lt;/em&gt;値）によって生成されるJSON も、YAML 1.0および1.1のサブセットです。したがって、このモジュールはYAMLシリアライザーとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="74477a71066c32a03e3b5e0f372cb2d16bb5ab67" translate="yes" xml:space="preserve">
          <source>JSON is a text serialization format (it outputs unicode text, although most of the time it is then encoded to &lt;code&gt;utf-8&lt;/code&gt;), while pickle is a binary serialization format;</source>
          <target state="translated">JSONはテキストシリアル化形式（Unicodeテキストを出力しますが、ほとんどの場合 &lt;code&gt;utf-8&lt;/code&gt; にエンコードされます）であるのに対し、pickleはバイナリシリアル化形式です。</target>
        </trans-unit>
        <trans-unit id="88798c723bcb212288a6869233d3bcfab4c6e224" translate="yes" xml:space="preserve">
          <source>JSON is human-readable, while pickle is not;</source>
          <target state="translated">JSONは人間が読めるのに対し、ピクルスは読めない。</target>
        </trans-unit>
        <trans-unit id="26dcb3da6e496d8fa3c185868f494af19a08c8d6" translate="yes" xml:space="preserve">
          <source>JSON is interoperable and widely used outside of the Python ecosystem, while pickle is Python-specific;</source>
          <target state="translated">JSONは相互運用性があり、Pythonエコシステムの外で広く使われていますが、PickleはPythonに特化しています。</target>
        </trans-unit>
        <trans-unit id="b58d3fed6d6262143493b847936ace0c088070e9" translate="yes" xml:space="preserve">
          <source>JSON, by default, can only represent a subset of the Python built-in types, and no custom classes; pickle can represent an extremely large number of Python types (many of them automatically, by clever usage of Python&amp;rsquo;s introspection facilities; complex cases can be tackled by implementing &lt;a href=&quot;#pickle-inst&quot;&gt;specific object APIs&lt;/a&gt;);</source>
          <target state="translated">デフォルトでは、JSONはPython組み込み型のサブセットのみを表すことができ、カスタムクラスは表すことができません。pickleは非常に多数のPython型を表すことができます（その多くは自動的に、Pythonのイントロスペクション機能を巧みに使用することで、&lt;a href=&quot;#pickle-inst&quot;&gt;特定のオブジェクトAPIを&lt;/a&gt;実装することで複雑なケースに対処できます）</target>
        </trans-unit>
        <trans-unit id="3c157bbba1c3c6dd4684d9e17bd5cbdd293fa040" translate="yes" xml:space="preserve">
          <source>James Henstridge</source>
          <target state="translated">ジェームズ・ヘンストリッジ</target>
        </trans-unit>
        <trans-unit id="aae47823aad5375bf33ac2c5178d07c30af7b55d" translate="yes" xml:space="preserve">
          <source>January 1 of year 1 is called day number 1, January 2 of year 1 is called day number 2, and so on. &lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="translated">1年目の1月1日は1日目と呼ばれ、1年目の1月2日は2日目と呼ばれます。&lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="db10f36d9223f6e5b2b87cbc94ecdb4f6367b21d" translate="yes" xml:space="preserve">
          <source>Japanese, Korean, Simplified Chinese, Western Europe, Greek</source>
          <target state="translated">日本語、韓国語、中国語(簡体字)、西欧、ギリシャ語</target>
        </trans-unit>
        <trans-unit id="da19e6ace2ea93a2694470984913cc9be9f8a78a" translate="yes" xml:space="preserve">
          <source>Java Platform</source>
          <target state="translated">ジャバプラットフォーム</target>
        </trans-unit>
        <trans-unit id="24e07b1280211517893038a57e2fa614b51c83cb" translate="yes" xml:space="preserve">
          <source>Join a &lt;em&gt;thread&lt;/em&gt; within &lt;em&gt;timeout&lt;/em&gt;. Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if thread is still alive after &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">&lt;em&gt;タイムアウト&lt;/em&gt;内で&lt;em&gt;スレッドに&lt;/em&gt;参加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;タイムアウト&lt;/em&gt;秒後にスレッドがまだ生きている場合は、&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; を発生させ&lt;/a&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ec87f8fcd9ef64d26787f07fb5fc64981fb9d0" translate="yes" xml:space="preserve">
          <source>Join adjacent text nodes so that all stretches of text are stored as single &lt;code&gt;Text&lt;/code&gt; instances. This simplifies processing text from a DOM tree for many applications.</source>
          <target state="translated">隣接するテキストノードを結合して、テキストのすべてのストレッチが単一の &lt;code&gt;Text&lt;/code&gt; インスタンスとして格納されるようにします。これにより、多くのアプリケーションでDOMツリーからのテキストの処理が簡単になります。</target>
        </trans-unit>
        <trans-unit id="60f2e868ffb015b783bfe34cd024cda4ded92d88" translate="yes" xml:space="preserve">
          <source>Join one or more path components intelligently. The return value is the concatenation of &lt;em&gt;path&lt;/em&gt; and any members of &lt;em&gt;*paths&lt;/em&gt; with exactly one directory separator (&lt;code&gt;os.sep&lt;/code&gt;) following each non-empty part except the last, meaning that the result will only end in a separator if the last part is empty. If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</source>
          <target state="translated">1つ以上のパスコンポーネントをインテリジェントに結合します。戻り値は、&lt;em&gt;パス&lt;/em&gt;と&lt;em&gt;* pathsの&lt;/em&gt;メンバーを連結したもので、最後以外の空でない各部分の後に1つのディレクトリセパレータ（ &lt;code&gt;os.sep&lt;/code&gt; ）が付いています。つまり、最後の部分が空の場合、結果はセパレータで終わるだけです。 。コンポーネントが絶対パスの場合、以前のすべてのコンポーネントは破棄され、結合は絶対パスコンポーネントから続行されます。</target>
        </trans-unit>
        <trans-unit id="eaf8550cd527a4aa5bcd750c5566f8a76a8a1f3f" translate="yes" xml:space="preserve">
          <source>Join the background thread. This can only be used after &lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; has been called. It blocks until the background thread exits, ensuring that all data in the buffer has been flushed to the pipe.</source>
          <target state="translated">バックグラウンドスレッドに参加します。これは、&lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;が呼び出された後にのみ使用できます。バックグラウンドスレッドが終了するまでブロックし、バッファー内のすべてのデータがパイプにフラッシュされたことを確認します。</target>
        </trans-unit>
        <trans-unit id="fffc9a5e23a3f1b2ccacd3e4adf7ea7865062fbf" translate="yes" xml:space="preserve">
          <source>Joining processes that use queues</source>
          <target state="translated">キューを使用するプロセスの結合</target>
        </trans-unit>
        <trans-unit id="80c8c7d106ea49237f4b6ea2c4ae9879166d4287" translate="yes" xml:space="preserve">
          <source>Joining zombie processes</source>
          <target state="translated">ゾンビプロセスの結合</target>
        </trans-unit>
        <trans-unit id="a4bf8d21588e5176ca76cda88e2cd50069125501" translate="yes" xml:space="preserve">
          <source>Joins the applied CAN filters such that only CAN frames that match all given CAN filters are passed to user space.</source>
          <target state="translated">適用された CAN フィルタを結合し、与えられたすべての CAN フィルタに一致する CAN フレームのみがユーザースペースに渡されるようにします。</target>
        </trans-unit>
        <trans-unit id="e3d34ba51db462866353060a6c3f2d483d8c7643" translate="yes" xml:space="preserve">
          <source>Juan David Ib&amp;aacute;&amp;ntilde;ez Palomar</source>
          <target state="translated">フアン・デイビッド・イバニェス・パロマー</target>
        </trans-unit>
        <trans-unit id="e51d02293aa68e17eecb8aa544b483cf96c6fa49" translate="yes" xml:space="preserve">
          <source>Just returns 10, as this is Decimal, :)</source>
          <target state="translated">これは10進数なので、10を返すだけです。)</target>
        </trans-unit>
        <trans-unit id="4f1fddc4dabd32f2e61ca9f91e0ca2bb68fd646f" translate="yes" xml:space="preserve">
          <source>Just returns self, this method is only to comply with the Decimal Specification.</source>
          <target state="translated">self を返すだけで、このメソッドは Decimal 仕様に準拠しています。</target>
        </trans-unit>
        <trans-unit id="47d7416fd642efd47199c18f79129bbd51455d2c" translate="yes" xml:space="preserve">
          <source>KEY_DC</source>
          <target state="translated">KEY_DC</target>
        </trans-unit>
        <trans-unit id="033f3bd76e9037ed2eacdf745e1f381ae09e1e6e" translate="yes" xml:space="preserve">
          <source>KEY_END</source>
          <target state="translated">KEY_END</target>
        </trans-unit>
        <trans-unit id="e8b0bdc4a205564ace3e67b5d2590e9a7b3ebe0f" translate="yes" xml:space="preserve">
          <source>KEY_HOME</source>
          <target state="translated">KEY_HOME</target>
        </trans-unit>
        <trans-unit id="1ed0f4c565cdf40018aa6d1a7f2dffe8a57d07b7" translate="yes" xml:space="preserve">
          <source>KEY_IC</source>
          <target state="translated">KEY_IC</target>
        </trans-unit>
        <trans-unit id="f9606cdd29d726a1efc9306cd6515a746d5e9de8" translate="yes" xml:space="preserve">
          <source>KEY_NPAGE</source>
          <target state="translated">KEY_NPAGE</target>
        </trans-unit>
        <trans-unit id="817be3fc68df61d26f925ae492d47665d4ff3127" translate="yes" xml:space="preserve">
          <source>KEY_PPAGE</source>
          <target state="translated">KEY_PPAGE</target>
        </trans-unit>
        <trans-unit id="580b34c07a9b803a5f68c0e7990ba58269a92490" translate="yes" xml:space="preserve">
          <source>Kahan, W: Branch cuts for complex elementary functions; or, Much ado about nothing&amp;rsquo;s sign bit. In Iserles, A., and Powell, M. (eds.), The state of the art in numerical analysis. Clarendon Press (1987) pp165&amp;ndash;211.</source>
          <target state="translated">カハン、W：複雑な初等関数の分岐カット。または、何の兆候もないことについて大騒ぎ。Iserles、A.およびPowell、M.（編）、数値分析における最新技術。Clarendon Press（1987）pp165&amp;ndash;211。</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="24a946a3338502270c212fb158dbe6bb77ee0309" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; マッピングのデータベースを保持します。</target>
        </trans-unit>
        <trans-unit id="37bfb81baa66440423c45f18f727362864a6cfce" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings. A realm of &lt;code&gt;None&lt;/code&gt; is considered a catch-all realm, which is searched if no other realm fits.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; マッピングのデータベースを保持します。 &lt;code&gt;None&lt;/code&gt; のレルムはキャッチオールレルムと見なされ、他のレルムが適合しない場合に検索されます。</target>
        </trans-unit>
        <trans-unit id="03de4413ffacf22791c546e17121674eadf9916d" translate="yes" xml:space="preserve">
          <source>Keep in mind that if the node you&amp;rsquo;re operating on has child nodes you must either transform the child nodes yourself or call the &lt;code&gt;generic_visit()&lt;/code&gt; method for the node first.</source>
          <target state="translated">操作しているノードに子ノードがある場合は、子ノードを自分で変換するか、最初にノードの &lt;code&gt;generic_visit()&lt;/code&gt; メソッドを呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c563af2eb52c22befb802b194ed5fde24ca2d3a7" translate="yes" xml:space="preserve">
          <source>Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays doesn&amp;rsquo;t &lt;em&gt;copy&lt;/em&gt; the sub-object, instead it retrieves a wrapper object accessing the root-object&amp;rsquo;s underlying buffer.</source>
          <target state="translated">構造体、共用体、配列からサブオブジェクトを取得しても、サブオブジェクトは&lt;em&gt;コピー&lt;/em&gt;されず、ルートオブジェクトの基になるバッファにアクセスするラッパーオブジェクトが取得されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4298e303439a440ab55bf7bbf886c709ae66ef29" translate="yes" xml:space="preserve">
          <source>Keeping references to frame objects, as found in the first element of the frame records these functions return, can cause your program to create reference cycles. Once a reference cycle has been created, the lifespan of all objects which can be accessed from the objects which form the cycle can become much longer even if Python&amp;rsquo;s optional cycle detector is enabled. If such cycles must be created, it is important to ensure they are explicitly broken to avoid the delayed destruction of objects and increased memory consumption which occurs.</source>
          <target state="translated">これらの関数が返すフレームレコードの最初の要素にあるように、フレームオブジェクトへの参照を保持すると、プログラムが参照サイクルを作成する可能性があります。参照サイクルが作成されると、Pythonのオプションのサイクル検出器が有効になっていても、サイクルを形成するオブジェクトからアクセスできるすべてのオブジェクトの寿命が非常に長くなる可能性があります。このようなサイクルを作成する必要がある場合、オブジェクトの破壊の遅延や発生するメモリ消費の増加を回避するために、それらを明示的に破壊することが重要です。</target>
        </trans-unit>
        <trans-unit id="52a345e99e64b9ca6f928d5687177a892525371b" translate="yes" xml:space="preserve">
          <source>Kent Beck&amp;rsquo;s original paper on testing frameworks using the pattern shared by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; が&lt;/a&gt;共有するパターンを使用したフレームワークのテストに関するケントベックのオリジナルペーパー。</target>
        </trans-unit>
        <trans-unit id="7267bbd8e2137364d4939e2071439e42d40f32fb" translate="yes" xml:space="preserve">
          <source>Kevent Objects</source>
          <target state="translated">Kevent オブジェクト</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dbab391d4ec83ba2f4394be31de35a61669a5996" translate="yes" xml:space="preserve">
          <source>Key and values are always stored as bytes. This means that when strings are used they are implicitly converted to the default encoding before being stored.</source>
          <target state="translated">キーと値は常にバイトとして格納されます。つまり、文字列を使用する場合は、暗黙のうちにデフォルトのエンコーディングに変換されてから保存されるということです。</target>
        </trans-unit>
        <trans-unit id="2f019ec46ab9548a295fae40fb32bbf280932bb8" translate="yes" xml:space="preserve">
          <source>Key bindings</source>
          <target state="translated">キーバインディング</target>
        </trans-unit>
        <trans-unit id="f0cc3ad4ee33d02515db5713788523cd4cf74945" translate="yes" xml:space="preserve">
          <source>Key constant</source>
          <target state="translated">キー定数</target>
        </trans-unit>
        <trans-unit id="6bbbfa7e022b93aaca86b7e55f8cf9f9e9f25683" translate="yes" xml:space="preserve">
          <source>Key derivation</source>
          <target state="translated">キーの導出</target>
        </trans-unit>
        <trans-unit id="4c6694a69ad0f467a3eb48c707287ff83fc7df0b" translate="yes" xml:space="preserve">
          <source>Key derivation and key stretching algorithms are designed for secure password hashing. Naive algorithms such as &lt;code&gt;sha1(password)&lt;/code&gt; are not resistant against brute-force attacks. A good password hashing function must be tunable, slow, and include a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;.</source>
          <target state="translated">キーの導出およびキーストレッチアルゴリズムは、安全なパスワードハッシュ用に設計されています。 &lt;code&gt;sha1(password)&lt;/code&gt; などの単純なアルゴリズムは、総当たり攻撃に対して耐性がありません。適切なパスワードハッシュ関数は、調整可能で低速であり、&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;を含む必要があります。</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="99214c71e9133c70244f001bb7de7d4fe414b3a5" translate="yes" xml:space="preserve">
          <source>KeyboardInterrupt</source>
          <target state="translated">KeyboardInterrupt</target>
        </trans-unit>
        <trans-unit id="aba6df4879209d36e1a5a7eb8f2829348bfc1607" translate="yes" xml:space="preserve">
          <source>Keycap</source>
          <target state="translated">Keycap</target>
        </trans-unit>
        <trans-unit id="f431dd90bf1296fd6be5fc2fecca2fe9d70abb5f" translate="yes" xml:space="preserve">
          <source>Keyed hashing</source>
          <target state="translated">キー付きハッシュ</target>
        </trans-unit>
        <trans-unit id="914eeba5ce4ce3c00e9428b28f9ccf6cf0cce211" translate="yes" xml:space="preserve">
          <source>Keyed hashing can be used for authentication as a faster and simpler replacement for &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;Hash-based message authentication code&lt;/a&gt; (HMAC). BLAKE2 can be securely used in prefix-MAC mode thanks to the indifferentiability property inherited from BLAKE.</source>
          <target state="translated">キー付きハッシュは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;ハッシュベースのメッセージ認証コード&lt;/a&gt;（HMAC）のより高速でシンプルな代替として、認証に使用できます。BLAKEは、BLAKEから継承された微分不能プロパティのおかげで、プレフィックスMACモードで安全に使用できます。</target>
        </trans-unit>
        <trans-unit id="a9548bb855e07b59b91626cc17d69c771e2e87b2" translate="yes" xml:space="preserve">
          <source>Keys and values are iterated over in insertion order. This allows the creation of &lt;code&gt;(value, key)&lt;/code&gt; pairs using &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt;. Another way to create the same list is &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt;.</source>
          <target state="translated">キーと値は挿入順に繰り返されます。これは、作成可能 &lt;code&gt;(value, key)&lt;/code&gt; 使用してペア&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt; 。同じリストを作成する別の方法は、 &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c300864ed75026c1eb88a7a83759898d09c397b8" translate="yes" xml:space="preserve">
          <source>Keys are referred to by integer constants with names starting with &lt;code&gt;KEY_&lt;/code&gt;. The exact keycaps available are system dependent.</source>
          <target state="translated">キーは、名前が &lt;code&gt;KEY_&lt;/code&gt; で始まる整数定数によって参照されます。利用可能な正確なキー配列はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="228f5d286dcdd48b2fc18dd8734bb35bc953ff86" translate="yes" xml:space="preserve">
          <source>Keys in key/value pairs of JSON are always of the type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. When a dictionary is converted into JSON, all the keys of the dictionary are coerced to strings. As a result of this, if a dictionary is converted into JSON and then back into a dictionary, the dictionary may not equal the original one. That is, &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; if x has non-string keys.</source>
          <target state="translated">JSONのキー/値ペアのキーは常に&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;型です。辞書がJSONに変換されると、辞書のすべてのキーが文字列に強制変換されます。この結果、ディクショナリがJSONに変換されてからディクショナリに戻されると、ディクショナリは元のディクショナリと一致しない場合があります。つまり、xに非文字列キーがある場合、 &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="439a459f8af4300a3a5b519bbed313651ca1e4c1" translate="yes" xml:space="preserve">
          <source>Keys views are set-like since their entries are unique and hashable. If all values are hashable, so that &lt;code&gt;(key, value)&lt;/code&gt; pairs are unique and hashable, then the items view is also set-like. (Values views are not treated as set-like since the entries are generally not unique.) For set-like views, all of the operations defined for the abstract base class &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt;&lt;code&gt;collections.abc.Set&lt;/code&gt;&lt;/a&gt; are available (for example, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, or &lt;code&gt;^&lt;/code&gt;).</source>
          <target state="translated">キービューは、エントリが一意でハッシュ可能であるため、セットに似ています。すべての値がハッシュ可能で、 &lt;code&gt;(key, value)&lt;/code&gt; ペアが一意でハッシュ可能である場合、アイテムビューもセットのようになります。（エントリは一般に一意ではないため、値ビューはセットのようなものとして扱われません。）セットのようなビューの場合、抽象基本クラス&lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt; &lt;code&gt;collections.abc.Set&lt;/code&gt; &lt;/a&gt;に対して定義されたすべての操作が使用できます（たとえば、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、または &lt;code&gt;^&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="72035afe680b44899ee30976fd5b486a93144c83" translate="yes" xml:space="preserve">
          <source>Keystroke</source>
          <target state="translated">Keystroke</target>
        </trans-unit>
        <trans-unit id="a0256d5e54265d1b99c70a9f07e115e966a973da" translate="yes" xml:space="preserve">
          <source>Keywords can be used in the &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; call to set values in the dictionary:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;呼び出しでキーワードを使用して、辞書に値を設定できます。</target>
        </trans-unit>
        <trans-unit id="bb850e24e1448951f9be9555cccb1e5c8e9aa4cf" translate="yes" xml:space="preserve">
          <source>Kill signal.</source>
          <target state="translated">キルシグナル。</target>
        </trans-unit>
        <trans-unit id="b473142e64b2d483a80088f0192d814677f79849" translate="yes" xml:space="preserve">
          <source>Kill the child.</source>
          <target state="translated">子供を殺す。</target>
        </trans-unit>
        <trans-unit id="dfb8d10a715be56498bf3463ceb602e0c5f6cdfd" translate="yes" xml:space="preserve">
          <source>Kill the subprocess and close all pipes.</source>
          <target state="translated">サブプロセスを停止し、すべてのパイプを閉じます。</target>
        </trans-unit>
        <trans-unit id="bcef2d72d27a3ff305fd835a27596403d70aa65a" translate="yes" xml:space="preserve">
          <source>Kill the subprocess by calling the &lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してサブプロセスを強制終了します。</target>
        </trans-unit>
        <trans-unit id="5eea27376f6c77dd4e7d334cd247a3c6708d22ec" translate="yes" xml:space="preserve">
          <source>Kill the subprocess.</source>
          <target state="translated">サブプロセスを停止します。</target>
        </trans-unit>
        <trans-unit id="a9c2ee0789d81c2bfbe1a2dc41f783da5246898c" translate="yes" xml:space="preserve">
          <source>Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f19c6828b717749bb8b678b96baba09b9afe4b9" translate="yes" xml:space="preserve">
          <source>Kills the child. On Posix OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">子供を殺します。Posix OSでは、この関数はSIGKILLを子に送信します。Windowsでは、&lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="6f4d7efd09292b580160cf054a1eb415aa098b83" translate="yes" xml:space="preserve">
          <source>Kqueue Objects</source>
          <target state="translated">Kqueue オブジェクト</target>
        </trans-unit>
        <trans-unit id="1ae87da77ec3d4df1eb9c1cc7937078e8fd86235" translate="yes" xml:space="preserve">
          <source>L-System</source>
          <target state="translated">L-System</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="8f692914bc66ead997b8bc1788f89a45c63f1006" translate="yes" xml:space="preserve">
          <source>LIFO Queue</source>
          <target state="translated">LIFO キュー</target>
        </trans-unit>
        <trans-unit id="e0ac7d929c8c9064651f3a5b472a916a78c16845" translate="yes" xml:space="preserve">
          <source>LOG_ALERT</source>
          <target state="translated">LOG_ALERT</target>
        </trans-unit>
        <trans-unit id="00a42081f87dfdb7c8750d2dc99a1c5a47afe15c" translate="yes" xml:space="preserve">
          <source>LOG_AUTH</source>
          <target state="translated">LOG_AUTH</target>
        </trans-unit>
        <trans-unit id="b059e128bbbf4abbc726cbc5b3dc15823fa1d3b0" translate="yes" xml:space="preserve">
          <source>LOG_AUTHPRIV</source>
          <target state="translated">LOG_AUTHPRIV</target>
        </trans-unit>
        <trans-unit id="3ea8e1cd8bec535a6b614c37476a25af434a2a64" translate="yes" xml:space="preserve">
          <source>LOG_CRIT</source>
          <target state="translated">LOG_CRIT</target>
        </trans-unit>
        <trans-unit id="e14c128e15575171dccf2a786c6c56cfe90aabfb" translate="yes" xml:space="preserve">
          <source>LOG_CRON</source>
          <target state="translated">LOG_CRON</target>
        </trans-unit>
        <trans-unit id="2db1ea382ae920e08017868d8ca7dc74f1e87577" translate="yes" xml:space="preserve">
          <source>LOG_DAEMON</source>
          <target state="translated">LOG_DAEMON</target>
        </trans-unit>
        <trans-unit id="e9132069aa3cd9868136c9eab4c9121997cd9261" translate="yes" xml:space="preserve">
          <source>LOG_DEBUG</source>
          <target state="translated">LOG_DEBUG</target>
        </trans-unit>
        <trans-unit id="5cbc989f5f6b54b988f6cf238d1dfcafddfe5df0" translate="yes" xml:space="preserve">
          <source>LOG_EMERG</source>
          <target state="translated">LOG_EMERG</target>
        </trans-unit>
        <trans-unit id="c25ebb67e3f524ee4cfb9f242122b115231b2969" translate="yes" xml:space="preserve">
          <source>LOG_ERR</source>
          <target state="translated">LOG_ERR</target>
        </trans-unit>
        <trans-unit id="7076f8e47c7f564a083cced7437884fc3de9c20e" translate="yes" xml:space="preserve">
          <source>LOG_FTP</source>
          <target state="translated">LOG_FTP</target>
        </trans-unit>
        <trans-unit id="508d693347703c9b1449225c00b44e2e84f15cce" translate="yes" xml:space="preserve">
          <source>LOG_INFO</source>
          <target state="translated">LOG_INFO</target>
        </trans-unit>
        <trans-unit id="147a80a7b7486a934d7581b0f33986ae6651bd87" translate="yes" xml:space="preserve">
          <source>LOG_KERN</source>
          <target state="translated">LOG_KERN</target>
        </trans-unit>
        <trans-unit id="4bf6ef93839f6872c9f92acc4f4b838c163bdc96" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL0</source>
          <target state="translated">LOG_LOCAL0</target>
        </trans-unit>
        <trans-unit id="1d85977d2d454e9c3494e61168702f4cbecf12c8" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL1</source>
          <target state="translated">LOG_LOCAL1</target>
        </trans-unit>
        <trans-unit id="e587b1ef1b9f3479ac96923decd64231690910bb" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL2</source>
          <target state="translated">LOG_LOCAL2</target>
        </trans-unit>
        <trans-unit id="ae76a49e2672fc55b235abad25133bc1cc0b3ad5" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL3</source>
          <target state="translated">LOG_LOCAL3</target>
        </trans-unit>
        <trans-unit id="a46daeebb6f0fc83ba853556f660485fc6464822" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL4</source>
          <target state="translated">LOG_LOCAL4</target>
        </trans-unit>
        <trans-unit id="f1df950575fc4b0c0074a0abb00861a8e08a3ed6" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL5</source>
          <target state="translated">LOG_LOCAL5</target>
        </trans-unit>
        <trans-unit id="a5d06673189a0f5f9d67757287d862777d523941" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL6</source>
          <target state="translated">LOG_LOCAL6</target>
        </trans-unit>
        <trans-unit id="f51ad7929d644389ddc043e95d9d787a20eb0f61" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL7</source>
          <target state="translated">LOG_LOCAL7</target>
        </trans-unit>
        <trans-unit id="1ca5af74225a0e933cda1a23779b6b9b7534a5c0" translate="yes" xml:space="preserve">
          <source>LOG_LPR</source>
          <target state="translated">LOG_LPR</target>
        </trans-unit>
        <trans-unit id="3266bdf7a824a1128c05ff0a6eacbb163573bfdb" translate="yes" xml:space="preserve">
          <source>LOG_MAIL</source>
          <target state="translated">LOG_MAIL</target>
        </trans-unit>
        <trans-unit id="f460581d8a89631890f08c7c200582c071d9f348" translate="yes" xml:space="preserve">
          <source>LOG_NEWS</source>
          <target state="translated">LOG_NEWS</target>
        </trans-unit>
        <trans-unit id="fd9c5faaf23df86fefa8b46f512c8f9f2f910ea4" translate="yes" xml:space="preserve">
          <source>LOG_NOTICE</source>
          <target state="translated">LOG_NOTICE</target>
        </trans-unit>
        <trans-unit id="00b0b0f7b44d7be30d92b1245948b1df8d49d79b" translate="yes" xml:space="preserve">
          <source>LOG_SYSLOG</source>
          <target state="translated">LOG_SYSLOG</target>
        </trans-unit>
        <trans-unit id="cf326c7cb4d0b7bd59e5815a628a819974d8b6a6" translate="yes" xml:space="preserve">
          <source>LOG_USER</source>
          <target state="translated">LOG_USER</target>
        </trans-unit>
        <trans-unit id="b69a6c99cd1a6e6314b53f763c30ba82bc041bc6" translate="yes" xml:space="preserve">
          <source>LOG_UUCP</source>
          <target state="translated">LOG_UUCP</target>
        </trans-unit>
        <trans-unit id="d0479a4f305480aef0fe90fae83a03f4865e7fd9" translate="yes" xml:space="preserve">
          <source>LOG_WARNING</source>
          <target state="translated">LOG_WARNING</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="011416c82c132a4f52517e4bbdc2375314f6f840" translate="yes" xml:space="preserve">
          <source>Label Options</source>
          <target state="translated">ラベルオプション</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">大容量ファイル対応</target>
        </trans-unit>
        <trans-unit id="314cf2f01043a4a7510f794394e0b8c96cda1587" translate="yes" xml:space="preserve">
          <source>Large file support is enabled in Python when the size of an &lt;code&gt;off_t&lt;/code&gt; is larger than a &lt;code&gt;long&lt;/code&gt; and the &lt;code&gt;long long&lt;/code&gt; is at least as large as an &lt;code&gt;off_t&lt;/code&gt;. It may be necessary to configure and compile Python with certain compiler flags to enable this mode. For example, it is enabled by default with recent versions of Irix, but with Solaris 2.6 and 2.7 you need to do something like:</source>
          <target state="translated">サイズ場合、大きなファイルのサポートは、Pythonで有効になっている &lt;code&gt;off_t&lt;/code&gt; ではがより大きい &lt;code&gt;long&lt;/code&gt; と &lt;code&gt;long long&lt;/code&gt; 少なくとも同じ大きさとしてある &lt;code&gt;off_t&lt;/code&gt; では。このモードを有効にするには、特定のコンパイラフラグを使用してPythonを構成およびコンパイルする必要がある場合があります。たとえば、最近のバージョンのIrixではデフォルトで有効になっていますが、Solaris 2.6および2.7では次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="b4101486e371d681731851bb447c9aa495b0e247" translate="yes" xml:space="preserve">
          <source>Later, calling &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will return an object with two attributes, &lt;code&gt;integers&lt;/code&gt; and &lt;code&gt;accumulate&lt;/code&gt;. The &lt;code&gt;integers&lt;/code&gt; attribute will be a list of one or more ints, and the &lt;code&gt;accumulate&lt;/code&gt; attribute will be either the &lt;a href=&quot;functions#sum&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; function, if &lt;code&gt;--sum&lt;/code&gt; was specified at the command line, or the &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; function if it was not.</source>
          <target state="translated">後で&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;を呼び出すと、 &lt;code&gt;integers&lt;/code&gt; と &lt;code&gt;accumulate&lt;/code&gt; 2つの属性を持つオブジェクトが返されます。 &lt;code&gt;integers&lt;/code&gt; 属性は、一つ以上のintのリストとなり、 &lt;code&gt;accumulate&lt;/code&gt; 属性のいずれかになります&lt;a href=&quot;functions#sum&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;場合、機能 &lt;code&gt;--sum&lt;/code&gt; は、コマンドライン、またはで指定された&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;それがなかった場合の機能。</target>
        </trans-unit>
        <trans-unit id="220d5efc8654e9aa0bf6695beee6bfe664735911" translate="yes" xml:space="preserve">
          <source>Latin-1 encoding with &lt;code&gt;\uXXXX&lt;/code&gt; and &lt;code&gt;\UXXXXXXXX&lt;/code&gt; for other code points. Existing backslashes are not escaped in any way. It is used in the Python pickle protocol.</source>
          <target state="translated">他のコードポイントの &lt;code&gt;\uXXXX&lt;/code&gt; および &lt;code&gt;\UXXXXXXXX&lt;/code&gt; を使用したLatin-1エンコーディング。既存のバックスラッシュは決してエスケープされません。Python pickleプロトコルで使用されます。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="5304207bb67ab38f044a44e136564dadeaba0897" translate="yes" xml:space="preserve">
          <source>Leave cbreak mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">cbreakモードを終了します。ラインバッファリングを使用して、通常の「クック」モードに戻ります。</target>
        </trans-unit>
        <trans-unit id="9b35aee8d3da8fd183e13a370b032dec769e9344" translate="yes" xml:space="preserve">
          <source>Leave echo mode. Echoing of input characters is turned off.</source>
          <target state="translated">エコーモードを解除します。入力文字のエコーをオフにします。</target>
        </trans-unit>
        <trans-unit id="f604f6318f737fd0cd2341f0f6cdfab969737efb" translate="yes" xml:space="preserve">
          <source>Leave newline mode. Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of &lt;code&gt;addch('\n')&lt;/code&gt;, which always does the equivalent of return and line feed on the virtual screen). With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.</source>
          <target state="translated">改行モードを終了します。入力時の改行から改行への変換を無効にし、出力時の改行から改行/改行への低レベルの変換を無効にします（ただし、これは常に改行と改行に相当する &lt;code&gt;addch('\n')&lt;/code&gt; の動作を変更しません）仮想画面上）。平行移動をオフにすると、cursesは垂直方向の動きを少し速くすることがあります。また、入力時にReturnキーを検出できます。</target>
        </trans-unit>
        <trans-unit id="df80f393f0c1283bf1c2011a3966c84e42251e69" translate="yes" xml:space="preserve">
          <source>Leave raw mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">rawモードのままにします。ラインバッファリングを使用して、通常の「クック」モードに戻ります。</target>
        </trans-unit>
        <trans-unit id="494064e70529e54389ad678d759801779c5c72df" translate="yes" xml:space="preserve">
          <source>Left Shift</source>
          <target state="translated">左シフト</target>
        </trans-unit>
        <trans-unit id="fa2ddfd65f207446dfb5c03f954efaeb99e51fad" translate="yes" xml:space="preserve">
          <source>Left highlight</source>
          <target state="translated">左のハイライト</target>
        </trans-unit>
        <trans-unit id="7459e2ff70b4a74b12b3b42dcc8898f1325c4607" translate="yes" xml:space="preserve">
          <source>Left side</source>
          <target state="translated">左側</target>
        </trans-unit>
        <trans-unit id="4f21b710206cb813c042db5adab0dd62ed395300" translate="yes" xml:space="preserve">
          <source>Left-arrow</source>
          <target state="translated">Left-arrow</target>
        </trans-unit>
        <trans-unit id="fe4e2dded8cbb24225a5077d86ac26e1a4e77daa" translate="yes" xml:space="preserve">
          <source>Legacy API Examples</source>
          <target state="translated">レガシー API の例</target>
        </trans-unit>
        <trans-unit id="f9e9858ae5963ad7d5dac67bab79e2781ada4b1d" translate="yes" xml:space="preserve">
          <source>Legacy API:</source>
          <target state="translated">レガシーAPI。</target>
        </trans-unit>
        <trans-unit id="e874dde2b7bd15782fc71bda63adbb0435cd8ff4" translate="yes" xml:space="preserve">
          <source>Legacy Shell Invocation Functions</source>
          <target state="translated">レガシーシェル呼び出し関数</target>
        </trans-unit>
        <trans-unit id="97830814b9202ba41e9b45589de2504e635919fe" translate="yes" xml:space="preserve">
          <source>Legacy interface</source>
          <target state="translated">レガシーインターフェース</target>
        </trans-unit>
        <trans-unit id="f3f33501b9f5989df40734cc741026886ffb8ebc" translate="yes" xml:space="preserve">
          <source>Legacy variant of the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It has interpolation disabled by default and allows for non-string section names, option names, and values via its unsafe &lt;code&gt;add_section&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, as well as the legacy &lt;code&gt;defaults=&lt;/code&gt; keyword argument handling.</source>
          <target state="translated">&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; の&lt;/a&gt;レガシーバリアント。デフォルトでは無効になっている補間があり、安全でない &lt;code&gt;add_section&lt;/code&gt; と &lt;code&gt;set&lt;/code&gt; メソッド、および従来の &lt;code&gt;defaults=&lt;/code&gt; キーワード引数処理を介して、非文字列セクション名、オプション名、値を許可します。</target>
        </trans-unit>
        <trans-unit id="66133ee14edcb4e3bbb34ddd9f2cd0c81d9a82cf" translate="yes" xml:space="preserve">
          <source>Legal values are points of the compass: &lt;code&gt;&quot;n&quot;&lt;/code&gt;, &lt;code&gt;&quot;ne&quot;&lt;/code&gt;, &lt;code&gt;&quot;e&quot;&lt;/code&gt;, &lt;code&gt;&quot;se&quot;&lt;/code&gt;, &lt;code&gt;&quot;s&quot;&lt;/code&gt;, &lt;code&gt;&quot;sw&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;nw&quot;&lt;/code&gt;, and also &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="translated">有効な値は、コンパスのポイントです： &lt;code&gt;&quot;n&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ne&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;e&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;se&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;sw&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;nw&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;center&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="905f604fb13f295392bda39869104e2dd79e9fb2" translate="yes" xml:space="preserve">
          <source>Legal values are the strings: &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;center&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;fill&quot;&lt;/code&gt;.</source>
          <target state="translated">有効な値は、文字列 &lt;code&gt;&quot;left&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;center&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;right&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;fill&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eb67484bf01ce5ec849415f285da75abc22265be" translate="yes" xml:space="preserve">
          <source>Legal values are: &lt;code&gt;'left'&lt;/code&gt;, &lt;code&gt;'right'&lt;/code&gt;, &lt;code&gt;'top'&lt;/code&gt;, &lt;code&gt;'bottom'&lt;/code&gt;.</source>
          <target state="translated">有効な値は、 &lt;code&gt;'left'&lt;/code&gt; 、 &lt;code&gt;'right'&lt;/code&gt; 、 &lt;code&gt;'top'&lt;/code&gt; 、 &lt;code&gt;'bottom'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="18beaa17df62904395685f10cb89a3d8e9391154" translate="yes" xml:space="preserve">
          <source>Legal values: &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'y'&lt;/code&gt;, &lt;code&gt;'both'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;.</source>
          <target state="translated">有効な値： &lt;code&gt;'x'&lt;/code&gt; 、 &lt;code&gt;'y'&lt;/code&gt; 、 &lt;code&gt;'both'&lt;/code&gt; 、 &lt;code&gt;'none'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="d45a6f38f95efbaf3f9f3b999e990d1c6f2db236" translate="yes" xml:space="preserve">
          <source>Length modifier (optional).</source>
          <target state="translated">長さ修飾子(オプション)。</target>
        </trans-unit>
        <trans-unit id="180a1018d9273fb3a58e3f201de1ac8a5b80b58d" translate="yes" xml:space="preserve">
          <source>Length of the network prefix, in bits.</source>
          <target state="translated">ネットワーク・プレフィックスの長さ (ビット単位)。</target>
        </trans-unit>
        <trans-unit id="2c777c5db20151b1efdf932bcbcfebad8c2efc68" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume we initialize a table as in the example given above:</source>
          <target state="translated">上記の例のようにテーブルを初期化するとします。</target>
        </trans-unit>
        <trans-unit id="6b2e260007a1afb18b8a8c65668c11667d2da6f9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go back to the &lt;code&gt;Point&lt;/code&gt; class. We stored the x and y coordinates separated via semicolons as strings in SQLite.</source>
          <target state="translated">&lt;code&gt;Point&lt;/code&gt; クラスに戻りましょう。セミコロンで区切られたx座標とy座標をSQLiteの文字列として保存しました。</target>
        </trans-unit>
        <trans-unit id="cbaa1370b8e486f03058ade144aaa5ce766835fc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s modify the above example and run two &lt;code&gt;say_after&lt;/code&gt; coroutines &lt;em&gt;concurrently&lt;/em&gt;:</source>
          <target state="translated">上記の例を変更して、2つの &lt;code&gt;say_after&lt;/code&gt; コルーチンを&lt;em&gt;同時に&lt;/em&gt;実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="a4e1bbd9caa78a7f8e196d6165ef1a43653ca2ce" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to add one to each country&amp;rsquo;s rank, and add an &lt;code&gt;updated&lt;/code&gt; attribute to the rank element:</source>
          <target state="translated">各国のランクに1を追加し、rank要素に &lt;code&gt;updated&lt;/code&gt; 属性を追加するとします。</target>
        </trans-unit>
        <trans-unit id="78596e300b339fafdb3e77e4a728b5374ceee9c7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you wanted to get the version string for a package you&amp;rsquo;ve installed using &lt;code&gt;pip&lt;/code&gt;. We start by creating a virtual environment and installing something into it:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; を使用してインストールしたパッケージのバージョン文字列を取得したいとします。まず、仮想環境を作成し、そこに何かをインストールします。</target>
        </trans-unit>
        <trans-unit id="d5ae7ea3899f66437fb7e1aa7d7675f030894483" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say your module is called &amp;ldquo;spam&amp;rdquo; and the module&amp;rsquo;s various natural language translation &lt;code&gt;.mo&lt;/code&gt; files reside in &lt;code&gt;/usr/share/locale&lt;/code&gt; in GNU &lt;strong&gt;gettext&lt;/strong&gt; format. Here&amp;rsquo;s what you would put at the top of your module:</source>
          <target state="translated">モジュールが「スパム」と呼ばれ、モジュールのさまざまな自然言語翻訳 &lt;code&gt;.mo&lt;/code&gt; ファイルがGNU &lt;strong&gt;gettext&lt;/strong&gt;形式で &lt;code&gt;/usr/share/locale&lt;/code&gt; にあるとします。モジュールの上部に配置するものは次のとおりです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04863fa8b8b6c7cb4b82a58c35cc416cac590f6a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a very basic configuration file that looks like this:</source>
          <target state="translated">次のような非常に基本的な構成ファイルを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="5ecd68b4c43876be669cbe3592b08b9f4742b506" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. We create two instances of &lt;code&gt;cell&lt;/code&gt;, and let them point to each other, and finally follow the pointer chain a few times:</source>
          <target state="translated">試してみよう。 &lt;code&gt;cell&lt;/code&gt; の 2つのインスタンスを作成し、それらを互いにポイントさせて、最後にポインターチェーンを数回たどります。</target>
        </trans-unit>
        <trans-unit id="22165bce4fbe52f349dc3381930ba2ac63b3a5cb" translate="yes" xml:space="preserve">
          <source>Letting your object adapt itself</source>
          <target state="translated">オブジェクトを適応させる</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="6460ec4ddfef711100217c8f9826fd70701f2f56" translate="yes" xml:space="preserve">
          <source>Level 2 halted</source>
          <target state="translated">レベル2停止</target>
        </trans-unit>
        <trans-unit id="60e40c81795763b2a8e72d44e5ad0f9199edc4bb" translate="yes" xml:space="preserve">
          <source>Level 2 not synchronized</source>
          <target state="translated">レベル2が同期していない</target>
        </trans-unit>
        <trans-unit id="345040e0c10ed0376f2b7122fc4d53bc220369de" translate="yes" xml:space="preserve">
          <source>Level 3 halted</source>
          <target state="translated">レベル3停止</target>
        </trans-unit>
        <trans-unit id="d42164449cc05890457a5e7c44effb895c6def14" translate="yes" xml:space="preserve">
          <source>Level 3 reset</source>
          <target state="translated">レベル3リセット</target>
        </trans-unit>
        <trans-unit id="d7e796b80646b51566de3ce1d4e141f4e53a4ec8" translate="yes" xml:space="preserve">
          <source>Levels are internally integers (as they need to be compared in the logging logic). This function is used to convert between an integer level and the level name displayed in the formatted log output by means of the &lt;code&gt;%(levelname)s&lt;/code&gt; format specifier (see &lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord attributes&lt;/a&gt;).</source>
          <target state="translated">レベルは内部的には整数です（ロギングロジックで比較する必要があるため）。この関数は、 &lt;code&gt;%(levelname)s&lt;/code&gt; 形式指定子を使用して、整数レベルとフォーマットされたログ出力に表示されるレベル名の間で変換するために使用されます（&lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord属性を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2d6380feb8c38ce90806082088bb8c2c55e37b83" translate="yes" xml:space="preserve">
          <source>Lexical scanner for Python source code.</source>
          <target state="translated">Pythonソースコード用のレキシカルスキャナ。</target>
        </trans-unit>
        <trans-unit id="392b455093b9fc95f72712c44846e250fe613928" translate="yes" xml:space="preserve">
          <source>LibreSSL &amp;gt;= 2.6.1 no longer supports NPN. The methods &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt;&lt;/a&gt; are not available.</source>
          <target state="translated">LibreSSL&amp;gt; = 2.6.1はNPNをサポートしなくなりました。&lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt; &lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt; &lt;/a&gt;メソッドは使用できません。</target>
        </trans-unit>
        <trans-unit id="091cd70ef41f8240bd7c6a2fadb08e949b8160af" translate="yes" xml:space="preserve">
          <source>LibreSSL is a fork of OpenSSL 1.0.1. The ssl module has limited support for LibreSSL. Some features are not available when the ssl module is compiled with LibreSSL.</source>
          <target state="translated">LibreSSL は OpenSSL 1.0.1 のフォークです。ssl モジュールは LibreSSL のサポートが限られています。ssl モジュールが LibreSSL でコンパイルされている場合、一部の機能は利用できません。</target>
        </trans-unit>
        <trans-unit id="8509e2f82d3801c911e6a35b8391debf72767e0a" translate="yes" xml:space="preserve">
          <source>LibreSSL support</source>
          <target state="translated">FreeSSL サポート</target>
        </trans-unit>
        <trans-unit id="d0454f8c64fa3e4e75abdf2e0c77b01474c4f39a" translate="yes" xml:space="preserve">
          <source>Licensed under the PSF License.</source>
          <target state="translated">PSFライセンスを取得。</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="b7f9700444d85258af9741b1a784bb114500ccb1" translate="yes" xml:space="preserve">
          <source>Lifts second and third stack item one position up, moves top down to position three.</source>
          <target state="translated">2 番目と 3 番目のスタックアイテムを 1 つ上の位置に持ち上げ、トップダウンして 3 番目の位置に移動します。</target>
        </trans-unit>
        <trans-unit id="128b57bf19d7494cf2406f4c9ad03a774a89db95" translate="yes" xml:space="preserve">
          <source>Lifts second, third and forth stack items one position up, moves top down to position four.</source>
          <target state="translated">2 番目、3 番目、4 番目のスタックアイテムを 1 つ上の位置に持ち上げ、トップダウンして 4 番目の位置に移動します。</target>
        </trans-unit>
        <trans-unit id="769c851ff34e416533a93e1c54c044431fc336ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt;, except that the header of the audio file is not updated.</source>
          <target state="translated">オーディオファイルのヘッダーが更新されないことを除いて、&lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; &lt;/a&gt;と同様です。</target>
        </trans-unit>
        <trans-unit id="5fba8ee1e116abbedfbf12ff32b815bda67a39bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence is not found.</source>
          <target state="translated">&lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;に似ていますが、サブシーケンスが見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="18e9f70e3e0c024db75f15d3f7632da5d6ffb708" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#bytes.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;em&gt;サブ&lt;/em&gt;シーケンス&lt;em&gt;sub&lt;/em&gt;が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を送出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4630498d706bd9a3292cd5d7227b98132b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#curses.window.erase&quot;&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/a&gt;, but also cause the whole window to be repainted upon next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.erase&quot;&gt; &lt;code&gt;erase()&lt;/code&gt; &lt;/a&gt;と同様ですが、次に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出したときにウィンドウ全体が再描画されます。</target>
        </trans-unit>
        <trans-unit id="b526a2ea540c4c9b052eb050e52db56633e28e9c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity can be set with the &lt;code&gt;-v&lt;/code&gt; command-line switch or with the optional keyword argument &lt;em&gt;verbose&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;の詳細度は &lt;code&gt;-v&lt;/code&gt; コマンドラインスイッチまたはオプションのキーワード引数&lt;em&gt;verbose&lt;/em&gt;で設定できます。</target>
        </trans-unit>
        <trans-unit id="c342450b7fbacddc0eb255ffe6a69e6f64b16e54" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, if a combination of &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; members results in no flags being set, the boolean evaluation is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;メンバーの組み合わせによってフラグが設定されない場合、ブール値の評価は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="a363ed4c02cbe749a71b8d13e6dc4264d840b400" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;, but returns a tuple of the data connection and the expected size of the data. If the expected size could not be computed, &lt;code&gt;None&lt;/code&gt; will be returned as the expected size. &lt;em&gt;cmd&lt;/em&gt; and &lt;em&gt;rest&lt;/em&gt; means the same thing as in &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;と似ていますが、データ接続のタプルと予想されるデータのサイズを返します。予想サイズを計算できなかった場合、予想サイズとして &lt;code&gt;None&lt;/code&gt; が返されます。&lt;em&gt;cmd&lt;/em&gt;と&lt;em&gt;rest&lt;/em&gt;は&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="fed2080b9205761ae5ca1cb77a5a3913089b3943" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but consider plural forms. If a translation is found, apply the plural formula to &lt;em&gt;n&lt;/em&gt;, and return the resulting message (some languages have more than two plural forms). If no translation is found, return &lt;em&gt;singular&lt;/em&gt; if &lt;em&gt;n&lt;/em&gt; is 1; return &lt;em&gt;plural&lt;/em&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;に似ていますが、複数形を検討してください。翻訳が見つかった場合は、&lt;em&gt;n&lt;/em&gt;に複数の公式を適用し、結果のメッセージを返します（一部の言語には複数の複数形があります）。翻訳が見つからない場合、&lt;em&gt;n&lt;/em&gt;が1であれば&lt;em&gt;単数を&lt;/em&gt;返します。それ以外の場合は&lt;em&gt;複数を&lt;/em&gt;返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58099ee55f530af16bd98fd8c56efead48c30f96" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;に似ていますが、指定された&lt;em&gt;ドメイン&lt;/em&gt;でメッセージを検索します。</target>
        </trans-unit>
        <trans-unit id="0cc1846db165a1893d5de2a35351debcae960593" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;が、指定されたメッセージを探し&lt;em&gt;ドメイン&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="68113eaaf87f00b3b1aab0ac0cfe07087577d9b5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.hash.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hashlib.hash.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む2倍の長さの文字列オブジェクトとして返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="f6c8b81ebf600e9993da2ea7be87e2a91a7b9a0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.shake.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hashlib.shake.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む2倍の長さの文字列オブジェクトとして返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="459945a9891e20c8dab70ede4f27fdf482e29c75" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hmac.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string twice the length containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hmac.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;と同様ですが、ダイジェストは、16進数のみを含む長さの2倍の文字列として返されます。これは、電子メールまたは他の非バイナリ環境で安全に値を交換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d34ceda7fd93b02c772dcafa4d07c2be2558ca4c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, multiple reads may be issued to the underlying raw stream, unless the latter is interactive.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;と同様に、後者がインタラクティブでない限り、基になるrawストリームに対して複数の読み取りが発行される場合があります。</target>
        </trans-unit>
        <trans-unit id="5f98ad8c9320d72e100566d3e840ecba162bb7ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt;&lt;code&gt;DICT_UPDATE&lt;/code&gt;&lt;/a&gt; but raises an exception for duplicate keys.</source>
          <target state="translated">Like &lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt; &lt;code&gt;DICT_UPDATE&lt;/code&gt; &lt;/a&gt; but raises an exception for duplicate keys.</target>
        </trans-unit>
        <trans-unit id="d6711f9956856aade671cd7cf16a76fd76e19023" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.chmod&quot;&gt;&lt;code&gt;Path.chmod()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, the symbolic link&amp;rsquo;s mode is changed rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.chmod&quot;&gt; &lt;code&gt;Path.chmod()&lt;/code&gt; &lt;/a&gt;と似ていますが、パスがシンボリックリンクを指している場合、シンボリックリンクのモードは、ターゲットのモードではなく変更されます。</target>
        </trans-unit>
        <trans-unit id="c80f0d44ded10dcee28c34bbfff9e27a30074634" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, return the symbolic link&amp;rsquo;s information rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.stat&quot;&gt; &lt;code&gt;Path.stat()&lt;/code&gt; に&lt;/a&gt;似ていますが、パスがシンボリックリンクを指している場合、ターゲットではなくシンボリックリンクの情報を返します。</target>
        </trans-unit>
        <trans-unit id="76a03d0f714bbde9a8aae83d5eb4974b1956cc4b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;CHECKED_HASH&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content. However, Python will at runtime assume the &lt;code&gt;.pyc&lt;/code&gt; file is up to date and not validate the &lt;code&gt;.pyc&lt;/code&gt; against the source file at all.</source>
          <target state="translated">&lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;CHECKED_HASH&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;.pyc&lt;/code&gt; ファイルにはソースファイルコンテンツのハッシュが含まれます。しかし、実行時にPythonの意志が前提と &lt;code&gt;.pyc&lt;/code&gt; ファイルが最新ではなく、検証され &lt;code&gt;.pyc&lt;/code&gt; ファイルを、すべてのソースファイルに対して。</target>
        </trans-unit>
        <trans-unit id="a425706908190a3e1f79c502de35dede3098f552" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding decoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#quopri.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;と同様ですが、ソース&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を受け入れ、対応するデコードされた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="54098cdee562ba9f230b42f10f40d70cf45edbf7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. By default, it sends a &lt;code&gt;False&lt;/code&gt; value to &lt;em&gt;quotetabs&lt;/em&gt; parameter of the &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;と同様ですが、ソース&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を受け入れ、対応するエンコードされた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を返します。デフォルトでは、&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;関数の&lt;em&gt;quotetabs&lt;/em&gt;パラメータに &lt;code&gt;False&lt;/code&gt; 値を送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b01d2bf404c98230b8ffd33055a42cf110e8594d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#signal.sigwaitinfo&quot;&gt;&lt;code&gt;sigwaitinfo()&lt;/code&gt;&lt;/a&gt;, but takes an additional &lt;em&gt;timeout&lt;/em&gt; argument specifying a timeout. If &lt;em&gt;timeout&lt;/em&gt; is specified as &lt;code&gt;0&lt;/code&gt;, a poll is performed. Returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if a timeout occurs.</source>
          <target state="translated">&lt;a href=&quot;#signal.sigwaitinfo&quot;&gt; &lt;code&gt;sigwaitinfo()&lt;/code&gt; &lt;/a&gt;に似ていますが、&lt;em&gt;タイムアウトを&lt;/em&gt;指定する追加の&lt;em&gt;タイムアウト&lt;/em&gt;引数を取ります。場合は&lt;em&gt;、タイムアウトを&lt;/em&gt;として指定されている &lt;code&gt;0&lt;/code&gt; 、投票が行われます。タイムアウトが発生した場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="9b428dc227aecdac34a941af1b4c9e314010ceaa" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; except it is the lowest supported version or &lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt;&lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;SSLContext.maximum_version&lt;/code&gt; &lt;/a&gt;それは最低のサポートされているバージョンまたはある除い&lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt; &lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="034005e547ceeaab4b84301bb039ff5010f896a4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring is not found.</source>
          <target state="translated">&lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;に似ていますが、部分文字列が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="fffbdca90984707f8b141e5ee4a5c9e6f40bdf60" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#str.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; に&lt;/a&gt;似ていますが、部分文字列&lt;em&gt;sub&lt;/em&gt;が見つからない場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を送出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2116b8fb57e3a35c142acd106bb28c5cbe992968" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, except that if placeholders are missing from &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt;, instead of raising a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception, the original placeholder will appear in the resulting string intact. Also, unlike with &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, any other appearances of the &lt;code&gt;$&lt;/code&gt; will simply return &lt;code&gt;$&lt;/code&gt; instead of raising &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;replace &lt;/em&gt;&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;em&gt;マッピング&lt;/em&gt;と&lt;em&gt;kwds&lt;/em&gt;にプレースホルダーがない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外が発生する代わりに、元のプレースホルダーが結果の文字列にそのまま表示されます。また、とは異なり&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;のいずれかの他の出演 &lt;code&gt;$&lt;/code&gt; は単純に戻ります &lt;code&gt;$&lt;/code&gt; を高めるのではなく、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff608d7698e75a8850f2bbedb753f4de4a82170d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt;&lt;code&gt;getstatusoutput()&lt;/code&gt;&lt;/a&gt;, except the exit code is ignored and the return value is a string containing the command&amp;rsquo;s output. Example:</source>
          <target state="translated">&lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt; &lt;code&gt;getstatusoutput()&lt;/code&gt; &lt;/a&gt;と同様ですが、終了コードは無視され、戻り値はコマンドの出力を含む文字列です。例：</target>
        </trans-unit>
        <trans-unit id="09325b0b81777f3949622af36b1caae2105c533a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; but converts to local time. If &lt;em&gt;secs&lt;/em&gt; is not provided or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the current time as returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; is used. The dst flag is set to &lt;code&gt;1&lt;/code&gt; when DST applies to the given time.</source>
          <target state="translated">&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; に&lt;/a&gt;似ていますが、現地時間に変換されます。場合&lt;em&gt;秒が&lt;/em&gt;設けられていない、またはされていない&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、によって返される現在時刻&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;使用されます。DSTが指定された時間に適用されると、dstフラグが &lt;code&gt;1&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="e80bfe37b04d21e1316c6e6f6ac9868e0d1c6f93" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;, the &lt;em&gt;readline&lt;/em&gt; argument is a callable returning a single line of input. However, &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt; expects &lt;em&gt;readline&lt;/em&gt; to return a str object rather than bytes.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;と同様に、&lt;em&gt;readline&lt;/em&gt;引数は、1行の入力を返す呼び出し可能オブジェクトです。ただし、&lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;readline&lt;/em&gt;がバイトではなくstrオブジェクトを返すことを期待しています。</target>
        </trans-unit>
        <trans-unit id="1e25dc1f7a41401d6d2742977c0ec0eb4a4dab04" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the string representation of the raised exception. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;と同様ですが、発生した例外の文字列&lt;em&gt;表現で正規表現が&lt;/em&gt;一致するかどうかもテストします。&lt;em&gt;regex&lt;/em&gt;は、正規表現オブジェクトまたは&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;での使用に適した正規表現を含む文字列です。例：</target>
        </trans-unit>
        <trans-unit id="88c91522876cdaf737cb13dc3682f59d6bfc40fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the message of the triggered warning. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt;と同様ですが、トリガーされた警告のメッセージで&lt;em&gt;正規表現が&lt;/em&gt;一致することもテストします。&lt;em&gt;regex&lt;/em&gt;は、正規表現オブジェクトまたは&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;での使用に適した正規表現を含む文字列です。例：</target>
        </trans-unit>
        <trans-unit id="71a6e3160e25bc7af2abbb4914c6e0c300c2d496" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object rather than a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, and does not perform string-to-bytes encoding.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;に似ていますが、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れ、文字列からバイトへのエンコードを実行しません。</target>
        </trans-unit>
        <trans-unit id="33be7d39b7d017d814cc31038c4a163e3894971c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces by plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;に似ていますが、URLに移動するクエリ文字列を作成するときにHTMLフォームの値を引用するために必要なように、スペースをプラス記号で置き換えます。&lt;em&gt;safeに&lt;/em&gt;含まれていない限り、元の文字列のプラス記号はエスケープされ&lt;em&gt;ます&lt;/em&gt;。また、&lt;em&gt;安全な&lt;/em&gt;デフォルトの &lt;code&gt;'/'&lt;/code&gt; もありません。</target>
        </trans-unit>
        <trans-unit id="d7dde13a692c60d9a200b59f535ca756e81d2715" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces with plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;, but also replace spaces with plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="775c6c98d7b915a29eecf32e7d3a27905fc4598c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs by spaces, as required for unquoting HTML form values.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;と同様ですが、HTMLフォーム値の引用を解除するために必要に応じて、プラス記号をスペースで置き換えます。</target>
        </trans-unit>
        <trans-unit id="7537c6b95afac876f7603d1b2014408081a6f91e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs with spaces, as required for unquoting HTML form values.</source>
          <target state="translated">Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;, but also replace plus signs with spaces, as required for unquoting HTML form values.</target>
        </trans-unit>
        <trans-unit id="f1cf5e7750804a8602426bc1702f1b0873f828cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; defines a set of events that are generated by an analysis of socket conditions after a &lt;code&gt;select()&lt;/code&gt; call. Once the polling loop has been started the &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s methods are called by the event-processing framework with no action on the part of the programmer.</source>
          <target state="translated">&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;select()&lt;/code&gt; 呼び出し後のソケット条件の分析によって生成される一連のイベントを定義します。&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;が開始されると、async_chatオブジェクトのメソッドがイベント処理フレームワークによって呼び出され、プログラマーは何もする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ccba539e91e292f5838b503000ab1e741be5ca28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; except that the elements of the &lt;em&gt;iterable&lt;/em&gt; are expected to be iterables that are unpacked as arguments.</source>
          <target state="translated">&lt;em&gt;イテラブル&lt;/em&gt;の要素が引数としてアンパックされたイテラブルであることが期待されることを除いて、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;と同様です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="779b5a441a3fe2beee9d18262802a4b2251c9ae8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, this function must be invoked in the main thread.</source>
          <target state="translated">&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;と同様に、この関数はメインスレッドで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4567b33a2aaefbaca856883085dae36ad2796c3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;connect(address)&lt;/code&gt;, but return an error indicator instead of raising an exception for errors returned by the C-level &lt;code&gt;connect()&lt;/code&gt; call (other problems, such as &amp;ldquo;host not found,&amp;rdquo; can still raise exceptions). The error indicator is &lt;code&gt;0&lt;/code&gt; if the operation succeeded, otherwise the value of the &lt;code&gt;errno&lt;/code&gt; variable. This is useful to support, for example, asynchronous connects.</source>
          <target state="translated">&lt;code&gt;connect(address)&lt;/code&gt; と同様ですが、Cレベルの &lt;code&gt;connect()&lt;/code&gt; 呼び出しによって返されたエラーに対して例外を発生させる代わりにエラーインジケーターを返します（「ホストが見つかりません」などの他の問題でも例外が発生する可能性があります）。操作が成功した場合、エラーインジケーターは &lt;code&gt;0&lt;/code&gt; です。それ以外の場合は、 &lt;code&gt;errno&lt;/code&gt; 変数の値です。これは、非同期接続などをサポートするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="6e4099930d90cd8e644b9d1a35ce1781b7e55be5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;formatdate&lt;/code&gt;, but the input is a &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. If it is a naive datetime, it is assumed to be &amp;ldquo;UTC with no information about the source timezone&amp;rdquo;, and the conventional &lt;code&gt;-0000&lt;/code&gt; is used for the timezone. If it is an aware &lt;code&gt;datetime&lt;/code&gt;, then the numeric timezone offset is used. If it is an aware timezone with offset zero, then &lt;em&gt;usegmt&lt;/em&gt; may be set to &lt;code&gt;True&lt;/code&gt;, in which case the string &lt;code&gt;GMT&lt;/code&gt; is used instead of the numeric timezone offset. This provides a way to generate standards conformant HTTP date headers.</source>
          <target state="translated">同じように &lt;code&gt;formatdate&lt;/code&gt; が、入力された&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス。ナイーブな日時の場合、「ソースタイムゾーンに関する情報のないUTC」と &lt;code&gt;-0000&lt;/code&gt; 、タイムゾーンには従来の-0000が使用されます。認識されている &lt;code&gt;datetime&lt;/code&gt; の場合、数値のタイムゾーンオフセットが使用されます。オフセットがゼロの対応タイムゾーンの場合、&lt;em&gt;usegmt&lt;/em&gt;を &lt;code&gt;True&lt;/code&gt; に設定できます。この場合、数値のタイムゾーンオフセットの代わりに文字列 &lt;code&gt;GMT&lt;/code&gt; が使用されます。これは、標準に準拠したHTTP日付ヘッダーを生成する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="e9a1056335b6d3c9144b41d21fddbcb8e38867e3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;max(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">&lt;code&gt;max(self, other)&lt;/code&gt; 似ていますが、コンテキストの丸め規則が返される前に適用され、 &lt;code&gt;NaN&lt;/code&gt; 値が通知されるか無視されるか（コンテキストと、それらが通知か非通知かによって異なります）。</target>
        </trans-unit>
        <trans-unit id="117f781381f825f29b7d7c7a130438f9e5b689da" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;min(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">&lt;code&gt;min(self, other)&lt;/code&gt; 似ていますが、コンテキストの丸めルールが返される前に適用され、 &lt;code&gt;NaN&lt;/code&gt; 値が通知されるか無視されるか（コンテキストと、それらが通知か非通知かによって異なります）。</target>
        </trans-unit>
        <trans-unit id="7679621dea96b42673a5ec004c0be808374679d1" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes the current Gregorian calendar extended in both directions; like a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes there are exactly 3600*24 seconds in every day.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;オブジェクトと同様に、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;は現在のグレゴリオ暦を両方向に拡張したものと見なします。&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトと同様に、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;は毎日正確に3600 * 24秒であると想定しています。</target>
        </trans-unit>
        <trans-unit id="10db946781916518b11ce546b2af0588ae19c249" translate="yes" xml:space="preserve">
          <source>Like all decorators, it is also possible to call &lt;code&gt;staticmethod&lt;/code&gt; as a regular function and do something with its result. This is needed in some cases where you need a reference to a function from a class body and you want to avoid the automatic transformation to instance method. For these cases, use this idiom:</source>
          <target state="translated">すべてのデコレータと同様に、 &lt;code&gt;staticmethod&lt;/code&gt; を通常の関数として呼び出して、その結果を処理することもできます。これは、クラス本体から関数への参照が必要で、インスタンスメソッドへの自動変換を避けたい場合に必要です。これらのケースでは、次のイディオムを使用します。</target>
        </trans-unit>
        <trans-unit id="870a5dd7d5496171ef6a3e2aaab1057264f79b83" translate="yes" xml:space="preserve">
          <source>Like function objects, bound method objects support getting arbitrary attributes. However, since method attributes are actually stored on the underlying function object (&lt;code&gt;meth.__func__&lt;/code&gt;), setting method attributes on bound methods is disallowed. Attempting to set an attribute on a method results in an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; being raised. In order to set a method attribute, you need to explicitly set it on the underlying function object:</source>
          <target state="translated">関数オブジェクトと同様に、バインドされたメソッドオブジェクトは任意の属性の取得をサポートします。ただし、メソッド属性は実際には基礎となる関数オブジェクト（ &lt;code&gt;meth.__func__&lt;/code&gt; ）に格納されるため、バインドされたメソッドにメソッド属性を設定することはできません。メソッドに属性を設定しようとすると、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生します。メソッド属性を設定するには、基礎となる関数オブジェクトに明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1583a91516920ea6d292abedef0a0d4133d1f95d" translate="yes" xml:space="preserve">
          <source>Like other collections, sets support &lt;code&gt;x in set&lt;/code&gt;, &lt;code&gt;len(set)&lt;/code&gt;, and &lt;code&gt;for x in
set&lt;/code&gt;. Being an unordered collection, sets do not record element position or order of insertion. Accordingly, sets do not support indexing, slicing, or other sequence-like behavior.</source>
          <target state="translated">他のコレクションと同様に、セットは &lt;code&gt;x in set&lt;/code&gt; 、 &lt;code&gt;len(set)&lt;/code&gt; 、および &lt;code&gt;for x in set&lt;/code&gt; setをサポートします。順序のないコレクションであるため、セットは要素の位置や挿入の順序を記録しません。したがって、セットはインデックス作成、スライス、またはその他のシーケンスのような動作をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="619848ebfcfc900a4a75f4e75c5ae31dd1e46688" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#pdbcommand-p&quot;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/a&gt; command, except the value of the expression is pretty-printed using the &lt;a href=&quot;pprint#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#pdbcommand-p&quot;&gt; &lt;code&gt;p&lt;/code&gt; &lt;/a&gt;コマンドと同様ですが、式の値は&lt;a href=&quot;pprint#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;モジュールを使用してきれいに出力されます。</target>
        </trans-unit>
        <trans-unit id="7f637d2b0e3d0bc308b91dbb540751ed9989d02f" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; function automatically assigns its target to the current thread.</source>
          <target state="translated">同様に、&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;関数はそのターゲットを現在のスレッドに自動的に割り当てます。</target>
        </trans-unit>
        <trans-unit id="16f0b939506acc96b15c52be3f403f4c577d5555" translate="yes" xml:space="preserve">
          <source>Limit on the number of characters in the representation of the string. Note that the &amp;ldquo;normal&amp;rdquo; representation of the string is used as the character source: if escape sequences are needed in the representation, these may be mangled when the representation is shortened. The default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">文字列の表現における文字数の制限。文字列の「通常の」表現が文字ソースとして使用されていることに注意してください。表現でエスケープシーケンスが必要な場合、表現が短縮されるとエスケープシーケンスが破損する場合があります。デフォルトは &lt;code&gt;30&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="e0da5f32d1b078b4674313813ea6b1be4783c1f3" translate="yes" xml:space="preserve">
          <source>Limits on the number of entries represented for the named object type. The default is &lt;code&gt;4&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt;&lt;code&gt;maxdict&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;5&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt;&lt;code&gt;maxarray&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;6&lt;/code&gt; for the others.</source>
          <target state="translated">名前付きオブジェクトタイプで表されるエントリ数の制限。デフォルトは &lt;code&gt;4&lt;/code&gt; 用&lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt; &lt;code&gt;maxdict&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;5&lt;/code&gt; ため&lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt; &lt;code&gt;maxarray&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;6&lt;/code&gt; 他人のために。</target>
        </trans-unit>
        <trans-unit id="5cba8dfc960db4abee81cde524f36a4c3a10d9d1" translate="yes" xml:space="preserve">
          <source>Line 5 and 6 correspond to the arguments of the method &lt;code&gt;Screen.screensize()&lt;/code&gt;.</source>
          <target state="translated">5行目と6行目は、 &lt;code&gt;Screen.screensize()&lt;/code&gt; メソッドの引数に対応しています。</target>
        </trans-unit>
        <trans-unit id="2abd199292d800fa3a80bd3c37bdfccc94f580e6" translate="yes" xml:space="preserve">
          <source>Line Feed</source>
          <target state="translated">ラインフィード</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">ラインセパレータ</target>
        </trans-unit>
        <trans-unit id="2e24c77fd923a41a63ac5dc6de543f323222cd3c" translate="yes" xml:space="preserve">
          <source>Line Tabulation</source>
          <target state="translated">ライン集計</target>
        </trans-unit>
        <trans-unit id="b6aab80f18f5fed0b9153b69b8095064354fb00e" translate="yes" xml:space="preserve">
          <source>Line buffer</source>
          <target state="translated">ラインバッファ</target>
        </trans-unit>
        <trans-unit id="4f23e2d073d67acea8f123b42f84af035e27248d" translate="yes" xml:space="preserve">
          <source>Line feed</source>
          <target state="translated">ラインフィード</target>
        </trans-unit>
        <trans-unit id="562aae5d9e971e10b07ca699f4f04a970c307d4c" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;) of the filter. If &lt;em&gt;lineno&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the filter matches any line number.</source>
          <target state="translated">フィルターの行番号（ &lt;code&gt;int&lt;/code&gt; ）。場合&lt;em&gt;LINENOは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、フィルタは、任意の行番号と一致します。</target>
        </trans-unit>
        <trans-unit id="aeb38dd24a3a71da272f1f779d0387791de3d81e" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">行番号（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2ff2293358a32428ec942d4555635cc880cd4d12" translate="yes" xml:space="preserve">
          <source>Line number at which an error occurred.</source>
          <target state="translated">エラーが発生した行番号。</target>
        </trans-unit>
        <trans-unit id="b4da991f94a24c99137fffe4424265997efd6ed0" translate="yes" xml:space="preserve">
          <source>Line number on which the error was detected. The first line is numbered &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">エラーが検出された行番号。最初の行には &lt;code&gt;1&lt;/code&gt; の番号が付けられています。</target>
        </trans-unit>
        <trans-unit id="69f2575cae166f7e141a5f9bfed26ae7b3477899" translate="yes" xml:space="preserve">
          <source>Line-endings are implemented using the codec&amp;rsquo;s &lt;a href=&quot;#codecs.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method and are included in the list entries if &lt;em&gt;keepends&lt;/em&gt; is true.</source>
          <target state="translated">&lt;em&gt;行末&lt;/em&gt;はコーデックの&lt;a href=&quot;#codecs.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;メソッドを使用して実装され、&lt;em&gt;keepends&lt;/em&gt;がtrueの場合はリストエントリに含まれます。</target>
        </trans-unit>
        <trans-unit id="302f1117893400c611682ce09d6a46e296f097b2" translate="yes" xml:space="preserve">
          <source>Lines are returned with any newlines intact, which means that the last line in a file may not have one.</source>
          <target state="translated">行は、ファイルの最後の行に改行がない場合があることを意味します。</target>
        </trans-unit>
        <trans-unit id="cf75ffeff8d12fdd995dd6674c85fc5ee7a38554" translate="yes" xml:space="preserve">
          <source>Lines are separated by calling &lt;code&gt;text.splitlines(True)&lt;/code&gt;.</source>
          <target state="translated">行は、 &lt;code&gt;text.splitlines(True)&lt;/code&gt; を呼び出すことによって区切られます。</target>
        </trans-unit>
        <trans-unit id="b6185854ec82c5419438640c3884931bbe6dbd4b" translate="yes" xml:space="preserve">
          <source>Lines beginning with &amp;lsquo;&lt;code&gt;?&lt;/code&gt;&amp;rsquo; attempt to guide the eye to intraline differences, and were not present in either input sequence. These lines can be confusing if the sequences contain tab characters.</source>
          <target state="translated">' &lt;code&gt;?&lt;/code&gt; で始まる行 '眼内の違いに目を向けようとし、どちらの入力シーケンスにも存在しませんでした。シーケンスにタブ文字が含まれている場合、これらの行は混乱する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1119cda9075f6ea9b6d77bc2c527e01b0505ac69" translate="yes" xml:space="preserve">
          <source>Lines containing only whitespace are ignored in the input and normalized to a single newline character in the output.</source>
          <target state="translated">空白のみを含む行は入力では無視され、出力では改行 1 文字に正規化されます。</target>
        </trans-unit>
        <trans-unit id="8f51211d5882b7b1d7f5bacb8c562304994eec22" translate="yes" xml:space="preserve">
          <source>Link has been severed</source>
          <target state="translated">リンクが切れました</target>
        </trans-unit>
        <trans-unit id="2e5686329f75b06ffaef20d4254ffaa821209705" translate="yes" xml:space="preserve">
          <source>Link number out of range</source>
          <target state="translated">リンク番号が範囲外</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="0a2eda05e77dfe3f8ca694538c7808e144972c9f" translate="yes" xml:space="preserve">
          <source>Linux extended attributes</source>
          <target state="translated">リナックス拡張属性</target>
        </trans-unit>
        <trans-unit id="65238285b798b8c333fd4b7618bf5f86a3d5d9d0" translate="yes" xml:space="preserve">
          <source>Linux-only support for TIPC is available using the &lt;code&gt;AF_TIPC&lt;/code&gt; address family. TIPC is an open, non-IP based networked protocol designed for use in clustered computer environments. Addresses are represented by a tuple, and the fields depend on the address type. The general tuple form is &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt;, where:</source>
          <target state="translated">LinuxのみのTIPCのサポートは、 &lt;code&gt;AF_TIPC&lt;/code&gt; アドレスファミリを使用して利用できます。 TIPCは、クラスター化されたコンピューター環境で使用するために設計されたオープンな非IPベースのネットワークプロトコルです。住所はタプルで表され、フィールドは住所の種類によって異なります。一般的なタプルの形式は &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt; 。ここで、</target>
        </trans-unit>
        <trans-unit id="6756f8fa45c66ce66565b44aeff373a153af3d17" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">&lt;code&gt;MLSD&lt;/code&gt; コマンド（&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;）を使用して、標準化された形式でディレクトリを一覧表示し&lt;strong&gt;ます&lt;/strong&gt;。場合は&lt;em&gt;、パスが&lt;/em&gt;省略されている現在のディレクトリが仮定されます。&lt;em&gt;facts&lt;/em&gt;は、必要な情報のタイプを表す文字列のリストです（例： &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ）。パスで見つかったすべてのファイルに対して2つの要素のタプルを生成するジェネレーターオブジェクトを返します。最初の要素はファイル名、2番目の要素はファイル名に関する事実を含む辞書です。このディクショナリのコンテンツは、&lt;em&gt;facts&lt;/em&gt;引数によって制限される可能性がありますが、サーバーは、要求されたすべてのファクトを返すことが保証されていません。</target>
        </trans-unit>
        <trans-unit id="52f8f2e23f573d0eb68d4dbc3d2fd2a7d074f68f" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</target>
        </trans-unit>
        <trans-unit id="12fba910c861b6473d219e30cab4ab0ddbb8c795" translate="yes" xml:space="preserve">
          <source>List all source code for the current function or frame. Interesting lines are marked as for &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の関数またはフレームのすべてのソースコードをリストします。興味深い行は&lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;ようにマークされます。</target>
        </trans-unit>
        <trans-unit id="99c1d888dd84bd6bd4003b76aee6da2697bb0b77" translate="yes" xml:space="preserve">
          <source>List and set comprehensions, generator expressions, and dictionary comprehensions. &lt;code&gt;elt&lt;/code&gt; (or &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;) is a single node representing the part that will be evaluated for each item.</source>
          <target state="translated">List and set comprehensions, generator expressions, and dictionary comprehensions. &lt;code&gt;elt&lt;/code&gt; (or &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; ) is a single node representing the part that will be evaluated for each item.</target>
        </trans-unit>
        <trans-unit id="d70266b0617125a334eb682496c42690e2f3d04c" translate="yes" xml:space="preserve">
          <source>List files in a tarfile.</source>
          <target state="translated">tarファイル内のファイルを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="5c622661583046960e0bb8731c1346ad7495dcc3" translate="yes" xml:space="preserve">
          <source>List files in a zipfile.</source>
          <target state="translated">zipファイル内のファイルを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="fa6a27ccedf9df11c9e8acab0ae9e0767d6f65fc" translate="yes" xml:space="preserve">
          <source>List mailbox names in &lt;em&gt;directory&lt;/em&gt; matching &lt;em&gt;pattern&lt;/em&gt;. &lt;em&gt;directory&lt;/em&gt; defaults to the top-level mail folder, and &lt;em&gt;pattern&lt;/em&gt; defaults to match anything. Returned data contains a list of &lt;code&gt;LIST&lt;/code&gt; responses.</source>
          <target state="translated">&lt;em&gt;ディレクトリ&lt;/em&gt;一致&lt;em&gt;パターンの&lt;/em&gt;メールボックス名を一覧表示します。&lt;em&gt;ディレクトリは&lt;/em&gt;デフォルトで最上位のメールフォルダになり、&lt;em&gt;パターンは&lt;/em&gt;デフォルトで何にでも一致します。返されるデータには、 &lt;code&gt;LIST&lt;/code&gt; 応答のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="800331fecdd25e9674ace0cfb84a1e1381cf18b8" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; objects the server is listening on.</source>
          <target state="translated">サーバーがリッスンしている&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="4bbdd0f3d0f330c45f8c92c42b67ed3353e81dd6" translate="yes" xml:space="preserve">
          <source>List of Unix shell-style wildcard test name patterns that test methods have to match to be included in test suites (see &lt;code&gt;-v&lt;/code&gt; option).</source>
          <target state="translated">テストスイートに含めるためにテストメソッドが一致する必要があるUnixシェルスタイルのワイルドカードテスト名パターンのリスト（ &lt;code&gt;-v&lt;/code&gt; オプションを参照）。</target>
        </trans-unit>
        <trans-unit id="57db87f824923c6a6e85c41dda54ae743e739bdc" translate="yes" xml:space="preserve">
          <source>List of all features.</source>
          <target state="translated">すべての機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="da2bc44930e06125e26f0c874633811a8e00c51a" translate="yes" xml:space="preserve">
          <source>List of all known property names.</source>
          <target state="translated">既知の全物件名のリスト。</target>
        </trans-unit>
        <trans-unit id="faa04fad93c99ece21b96a05b9ce1aa911971898" translate="yes" xml:space="preserve">
          <source>List of directories ignored by &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">デフォルトで&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;によって無視されるディレクトリのリスト。</target>
        </trans-unit>
        <trans-unit id="c9d8bdccc79a7bea28f18186c6779f053049d3e4" translate="yes" xml:space="preserve">
          <source>List of modes (most common values) of discrete or nomimal data.</source>
          <target state="translated">離散または公称データのモード(最も一般的な値)のリスト。</target>
        </trans-unit>
        <trans-unit id="2a6187ce53594c8b41f9b2648356dcd783d1eb99" translate="yes" xml:space="preserve">
          <source>List of strings for where to find submodules, if a package (&lt;code&gt;None&lt;/code&gt; otherwise).</source>
          <target state="translated">パッケージの場合、サブモジュールを検索する場所の文字列のリスト（それ以外の場合は &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f7e2b9e05ac716cd69cc94c5137d7e7daf29a300" translate="yes" xml:space="preserve">
          <source>List of supported TLS channel binding types. Strings in this list can be used as arguments to &lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt;&lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サポートされるTLSチャネルバインディングタイプのリスト。このリストの文字&lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt; &lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt; &lt;/a&gt;、SSLSocket.get_channel_binding（）の引数として使用できます。</target>
        </trans-unit>
        <trans-unit id="cfd0c4da7e055fb85f316a12860955e2e611d96f" translate="yes" xml:space="preserve">
          <source>List of type map file names commonly installed. These files are typically named &lt;code&gt;mime.types&lt;/code&gt; and are installed in different locations by different packages.</source>
          <target state="translated">一般的にインストールされるタイプマップファイル名のリスト。これらのファイルは通常、 &lt;code&gt;mime.types&lt;/code&gt; という名前で、さまざまなパッケージによってさまざまな場所にインストールされます。</target>
        </trans-unit>
        <trans-unit id="252590ef4c3c27b7d91456da231c614540d98ed0" translate="yes" xml:space="preserve">
          <source>List source code for the current file. Without arguments, list 11 lines around the current line or continue the previous listing. With &lt;code&gt;.&lt;/code&gt; as argument, list 11 lines around the current line. With one argument, list 11 lines around at that line. With two arguments, list the given range; if the second argument is less than the first, it is interpreted as a count.</source>
          <target state="translated">現在のファイルのソースコードをリストします。引数なしで、現在の行の周りの11行をリストするか、前のリストを続行します。と &lt;code&gt;.&lt;/code&gt; 引数として、現在の行の周りの11行をリストします。1つの引数で、その行の周りに11行をリストします。2つの引数で、指定された範囲をリストします。2番目の引数が最初の引数より小さい場合、それはカウントとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="b76073e5ceffc46ca02895c2b2a65a33093b7119" translate="yes" xml:space="preserve">
          <source>List subscribed mailbox names in directory matching pattern. &lt;em&gt;directory&lt;/em&gt; defaults to the top level directory and &lt;em&gt;pattern&lt;/em&gt; defaults to match any mailbox. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">サブスクライブしたメールボックス名をディレクトリマッチングパターンにリストします。&lt;em&gt;ディレクトリは&lt;/em&gt;デフォルトで最上位ディレクトリになり、&lt;em&gt;パターンは&lt;/em&gt;デフォルトですべてのメールボックスに一致します。返されるデータは、メッセージパーツのエンベロープとデータのタプルです。</target>
        </trans-unit>
        <trans-unit id="14794f6edf5dd70913a0dc13a15f54d846587e12" translate="yes" xml:space="preserve">
          <source>Listen for connections made to the socket. The &lt;em&gt;backlog&lt;/em&gt; argument specifies the maximum number of queued connections and should be at least 1; the maximum value is system-dependent (usually 5).</source>
          <target state="translated">ソケットへの接続を待機します。&lt;em&gt;バックログ&lt;/em&gt;引数は、キューに入れられた接続の最大数を指定し、少なくとも1であるべきです。最大値はシステムに依存します（通常は5）。</target>
        </trans-unit>
        <trans-unit id="59788472d65c6cb0cdf054e71f5b32c462ddafe5" translate="yes" xml:space="preserve">
          <source>Listener objects have the following read-only properties:</source>
          <target state="translated">リスナー・オブジェクトは、以下の読み取り専用のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="7ca23c866857250c984c4db4e11455584d8f239e" translate="yes" xml:space="preserve">
          <source>Listeners and Clients</source>
          <target state="translated">聞き手とクライアント</target>
        </trans-unit>
        <trans-unit id="98711f268cb1239cc73201ecb0f34f28471e2e46" translate="yes" xml:space="preserve">
          <source>Listing Python source files in this directory tree:</source>
          <target state="translated">このディレクトリツリーにある Python のソースファイルをリストアップします。</target>
        </trans-unit>
        <trans-unit id="78d2fd98237accde24de6f88a6a1f729f5aa17b3" translate="yes" xml:space="preserve">
          <source>Listing subdirectories:</source>
          <target state="translated">サブディレクトリをリストアップします。</target>
        </trans-unit>
        <trans-unit id="a00f1c75e1ab8588a44ac67163d8544008e2dedd" translate="yes" xml:space="preserve">
          <source>Listing the files in the resulting archive gives us:</source>
          <target state="translated">結果として得られるアーカイブ内のファイルをリストアップすることで、このような結果が得られます。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="d704786c02f4fcaf4a2e891ff8e18bad45ac10fd" translate="yes" xml:space="preserve">
          <source>Lists are mutable sequences, typically used to store collections of homogeneous items (where the precise degree of similarity will vary by application).</source>
          <target state="translated">リストは突然変異可能な配列で、一般的には同種のアイテムのコレクションを格納するために使用されます(正確な類似度はアプリケーションによって異なります)。</target>
        </trans-unit>
        <trans-unit id="c32ca8f5ba63672fe4a8182a4b217ecc9b9eb14c" translate="yes" xml:space="preserve">
          <source>Lists implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; and &lt;a href=&quot;#typesseq-mutable&quot;&gt;mutable&lt;/a&gt; sequence operations. Lists also provide the following additional method:</source>
          <target state="translated">リストは、すべての&lt;a href=&quot;#typesseq-common&quot;&gt;一般的&lt;/a&gt;で&lt;a href=&quot;#typesseq-mutable&quot;&gt;変更可能な&lt;/a&gt;シーケンス操作を実装しています。リストには、次の追加メソッドも用意されています。</target>
        </trans-unit>
        <trans-unit id="fc6230b3f52b454e7bfc16f6d295dbd8a3f5614d" translate="yes" xml:space="preserve">
          <source>Lists may be constructed in several ways:</source>
          <target state="translated">リストはいくつかの方法で構築することができます。</target>
        </trans-unit>
        <trans-unit id="c4b615b7707ee69f129d6b1543d98fed8ea5861c" translate="yes" xml:space="preserve">
          <source>Lists the names of all open windows; select one to bring it to the foreground (deiconifying it if necessary).</source>
          <target state="translated">開いているすべてのウィンドウの名前をリストアップします。</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="2b17c112445a7674729b2ac41ba9f07dc0cb6826" translate="yes" xml:space="preserve">
          <source>Load MIME information from a file named &lt;em&gt;filename&lt;/em&gt;. This uses &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; to parse the file.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;からMIME情報をロードし&lt;em&gt;ます&lt;/em&gt;。これは、&lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;を使用してファイルを解析します。</target>
        </trans-unit>
        <trans-unit id="792824da62ac18b629f8e6b4e61bfdae14c5fd20" translate="yes" xml:space="preserve">
          <source>Load MIME type information from an open file &lt;em&gt;fp&lt;/em&gt;. The file must have the format of the standard &lt;code&gt;mime.types&lt;/code&gt; files.</source>
          <target state="translated">開いているファイル&lt;em&gt;fp&lt;/em&gt;からMIMEタイプ情報をロードします。ファイルは、標準の &lt;code&gt;mime.types&lt;/code&gt; ファイルの形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="0fd53188415ccfe79d44d4578cf2a8334a3d823f" translate="yes" xml:space="preserve">
          <source>Load MIME type information from the Windows registry.</source>
          <target state="translated">Windows レジストリから MIME タイプ情報を読み込みます。</target>
        </trans-unit>
        <trans-unit id="d2ab95731c56b9a24f873b538755b0e5ea0d2829" translate="yes" xml:space="preserve">
          <source>Load a plist from a bytes object. See &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">バイトオブジェクトからplistをロードします。キーワード引数の説明については、&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b08eb074a7b195edaa59eaed1cf5e8727d68fee" translate="yes" xml:space="preserve">
          <source>Load a private key and the corresponding certificate. The &lt;em&gt;certfile&lt;/em&gt; string must be the path to a single file in PEM format containing the certificate as well as any number of CA certificates needed to establish the certificate&amp;rsquo;s authenticity. The &lt;em&gt;keyfile&lt;/em&gt; string, if present, must point to a file containing the private key in. Otherwise the private key will be taken from &lt;em&gt;certfile&lt;/em&gt; as well. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information on how the certificate is stored in the &lt;em&gt;certfile&lt;/em&gt;.</source>
          <target state="translated">秘密鍵と対応する証明書をロードします。&lt;em&gt;certfileには&lt;/em&gt;文字列は、証明書などの証明書の信頼性を確立するために必要なCA証明書の任意の数を含むPEM形式の単一ファイルへのパスでなければなりません。&lt;em&gt;キーファイル&lt;/em&gt;の文字列は、存在する場合、秘密鍵を含むファイルを指さなければならない。そうでなければ、秘密鍵から取得されます&lt;em&gt;certfileに&lt;/em&gt;同様。証明書が&lt;em&gt;certfileに&lt;/em&gt;格納される方法の詳細については、&lt;a href=&quot;#ssl-certificates&quot;&gt;証明書&lt;/a&gt;の説明を参照して&lt;em&gt;ください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c0df7eb62baff888bf529433e660c5a399082980" translate="yes" xml:space="preserve">
          <source>Load a readline history file, and append it to the history list. The default filename is &lt;code&gt;~/.history&lt;/code&gt;. This calls &lt;code&gt;read_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">readline履歴ファイルをロードして、履歴リストに追加します。デフォルトのファイル名は &lt;code&gt;~/.history&lt;/code&gt; です。これは、基礎となるライブラリの &lt;code&gt;read_history()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f58087190f63144704a753ee6b80f3cc73b183c" translate="yes" xml:space="preserve">
          <source>Load a set of &amp;ldquo;certification authority&amp;rdquo; (CA) certificates used to validate other peers&amp;rsquo; certificates when &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is other than &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. At least one of &lt;em&gt;cafile&lt;/em&gt; or &lt;em&gt;capath&lt;/em&gt; must be specified.</source>
          <target state="translated">ときに、他のピアの証明書を検証するために使用される「認証局」（CA）証明書のセットロード&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; が&lt;/a&gt;以外で&lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; を&lt;/a&gt;。&lt;em&gt;cafile&lt;/em&gt;または&lt;em&gt;capathの&lt;/em&gt;少なくとも1つを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6425be74b314ff59dd5ac88cdafe03db1813ef76" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from a filesystem path defined when building the OpenSSL library. Unfortunately, there&amp;rsquo;s no easy way to know whether this method succeeds: no error is returned if no certificates are to be found. When the OpenSSL library is provided as part of the operating system, though, it is likely to be configured properly.</source>
          <target state="translated">OpenSSLライブラリの構築時に定義されたファイルシステムパスから、デフォルトの「認証局」（CA）証明書のセットをロードします。残念ながら、このメソッドが成功したかどうかを確認する簡単な方法はありません。証明書が見つからない場合でもエラーは返されません。ただし、OpenSSLライブラリがオペレーティングシステムの一部として提供されている場合は、適切に設定されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="b124fe19c645c5969eaba65d28b149a48d7f5bc8" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from default locations. On Windows it loads CA certs from the &lt;code&gt;CA&lt;/code&gt; and &lt;code&gt;ROOT&lt;/code&gt; system stores. On other systems it calls &lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt;. In the future the method may load CA certificates from other locations, too.</source>
          <target state="translated">デフォルトの場所からデフォルトの「認証局」（CA）証明書のセットをロードします。Windowsでは、 &lt;code&gt;CA&lt;/code&gt; および &lt;code&gt;ROOT&lt;/code&gt; システムストアからCA証明書をロードします。他のシステムでは、&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt; &lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt; を&lt;/a&gt;呼び出します。今後、このメソッドは他の場所からもCA証明書をロードする可能性があります。</target>
        </trans-unit>
        <trans-unit id="792f87e11df87af3501d49b8d196fb913af1e572" translate="yes" xml:space="preserve">
          <source>Load a shared library into the process and return it. This method always returns a new instance of the library.</source>
          <target state="translated">共有ライブラリをプロセスにロードして返します。このメソッドは常にライブラリの新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="c3ea81eee343a4d2df989dde2d08b3714fcbfd81" translate="yes" xml:space="preserve">
          <source>Load a snapshot from a file.</source>
          <target state="translated">ファイルからスナップショットをロードします。</target>
        </trans-unit>
        <trans-unit id="1c7f519dc3373f6a0d8fc97719f2948be78a3852" translate="yes" xml:space="preserve">
          <source>Load configuration from any object that provides a dict-like &lt;code&gt;items()&lt;/code&gt; method. Keys are section names, values are dictionaries with keys and values that should be present in the section. If the used dictionary type preserves order, sections and their keys will be added in order. Values are automatically converted to strings.</source>
          <target state="translated">dictのような &lt;code&gt;items()&lt;/code&gt; メソッドを提供するオブジェクトから設定をロードします。キーはセクション名、値はセクションに存在する必要があるキーと値を含む辞書です。使用される辞書タイプが順序を保持する場合、セクションとそのキーが順番に追加されます。値は自動的に文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="609771080ece00742363664de393857bf53c63b0" translate="yes" xml:space="preserve">
          <source>Load cookies from a file.</source>
          <target state="translated">ファイルからクッキーを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d415a74437b2a8fde46291994b8fb27e74daafc0" translate="yes" xml:space="preserve">
          <source>Load the key generation parameters for Diffie-Hellman (DH) key exchange. Using DH key exchange improves forward secrecy at the expense of computational resources (both on the server and on the client). The &lt;em&gt;dhfile&lt;/em&gt; parameter should be the path to a file containing DH parameters in PEM format.</source>
          <target state="translated">Diffie-Hellman（DH）鍵交換の鍵生成パラメーターをロードします。DH鍵交換を使用すると、（サーバーとクライアントの両方の）計算リソースを犠牲にして、前方秘匿性が向上します。&lt;em&gt;dhfileの&lt;/em&gt;パラメータは、PEM形式のDHパラメータを含むファイルへのパスであるべきです。</target>
        </trans-unit>
        <trans-unit id="48d42fbf167299e3dd1e195e2e77c87b6142971f" translate="yes" xml:space="preserve">
          <source>Load the module specified by &lt;em&gt;fullname&lt;/em&gt;. &lt;em&gt;fullname&lt;/em&gt; must be the fully qualified (dotted) module name. It returns the imported module, or raises &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if it wasn&amp;rsquo;t found.</source>
          <target state="translated">&lt;em&gt;fullnameで&lt;/em&gt;指定されたモジュールをロードします。&lt;em&gt;fullname&lt;/em&gt;は完全修飾（ドット）モジュール名でなければなりません。インポートされたモジュールを&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; &lt;/a&gt;か、見つからなかった場合はZipImportErrorを送出します。</target>
        </trans-unit>
        <trans-unit id="a3b67eabfacc63af222593625d5483dccb09f499" translate="yes" xml:space="preserve">
          <source>Load the type map given in the file &lt;em&gt;filename&lt;/em&gt;, if it exists. The type map is returned as a dictionary mapping filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;), to strings of the form &lt;code&gt;'type/subtype'&lt;/code&gt;. If the file &lt;em&gt;filename&lt;/em&gt; does not exist or cannot be read, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">ファイル&lt;em&gt;filename&lt;/em&gt;で指定された型マップが存在する場合は、それをロードします。タイプマップは、先頭のドット（ &lt;code&gt;'.'&lt;/code&gt; ）を含むファイル名拡張子を &lt;code&gt;'type/subtype'&lt;/code&gt; 形式の文字列にマッピングする辞書として返されます。ファイル&lt;em&gt;filename&lt;/em&gt;が存在しないか、読み取れない場合は、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e5f23b0ce31d15663c44713bcd66b9c0b09a0934" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">ロード可能な拡張機能はデフォルトで無効になっています。&lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c47f6edd5e2c7e153595d9012f90395b664fad9" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">ロード可能な拡張機能はデフォルトで無効になっています。&lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e571b5d989d6291a8883f0e57e8a8c8f1bd18e89" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading are expected to provide a method called &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; which returns an object implementing this ABC&amp;rsquo;s interface. If the module specified by fullname is not a package, this method should return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. An object compatible with this ABC should only be returned when the specified module is a package.</source>
          <target state="translated">リソースの読み取りをサポートするローダーは、このABCのインターフェースを実装するオブジェクトを返す &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; と呼ばれるメソッドを提供することが期待されています。fullnameで指定されたモジュールがパッケージでない場合、このメソッドは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。このABCと互換性のあるオブジェクトは、指定されたモジュールがパッケージの場合にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="378ce4564cfc961412915083fc6fe3d3a3ac4043" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading should implement a &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; method as specified by &lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt;&lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リソースの読み取りをサポートするローダーは、&lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt; &lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt; で&lt;/a&gt;指定されている &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a57f41eadfd6d867f90958cecb3a4047f1a4c3d" translate="yes" xml:space="preserve">
          <source>Loading a library through any of these objects raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.dlopen&lt;/code&gt; with string argument &lt;code&gt;name&lt;/code&gt;, the name used to load the library.</source>
          <target state="translated">これらのオブジェクトのいずれかを介してライブラリをロードすると、ライブラリのロードに使用される &lt;code&gt;name&lt;/code&gt; 文字列引数nameを使用して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;ctypes.dlopen&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="6157b16025e97d941d88dc209da06d6279f10e6e" translate="yes" xml:space="preserve">
          <source>Loading and running tests</source>
          <target state="translated">テストの読み込みと実行</target>
        </trans-unit>
        <trans-unit id="0f19a79e96a975070aa13b1f20b3d2bdd4d9dc24" translate="yes" xml:space="preserve">
          <source>Loading dynamic link libraries</source>
          <target state="translated">ダイナミックリンクライブラリの読み込み</target>
        </trans-unit>
        <trans-unit id="d59529dbda456f2b5d95ed314e6b490be68e48e9" translate="yes" xml:space="preserve">
          <source>Loading shared libraries</source>
          <target state="translated">共有ライブラリの読み込み</target>
        </trans-unit>
        <trans-unit id="b90fef70cb5c4d40f44b0f88151132cf53bf667b" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from TOS object. TOS is popped and method and TOS are pushed when interpreter can call unbound method directly. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and method is pushed (method is bound method or something else).</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; という名前のメソッドをTOSオブジェクトからロードします。TOSがポップされ、インタプリタが非バインドメソッドを直接呼び出すことができる場合、メソッドとTOSがプッシュされます。TOSは、&lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt;によって最初の引数（ &lt;code&gt;self&lt;/code&gt; ）として使用されます。それ以外の場合は、 &lt;code&gt;NULL&lt;/code&gt; でメソッドがプッシュされます（メソッドはバインドされたメソッドなど）。</target>
        </trans-unit>
        <trans-unit id="45c0dbdf01940684c2ae00c8ba836ba0a46f724e" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from the TOS object. TOS is popped. This bytecode distinguishes two cases: if TOS has a method with the correct name, the bytecode pushes the unbound method and TOS. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt; when calling the unbound method. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and the object return by the attribute lookup are pushed.</source>
          <target state="translated">Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from the TOS object. TOS is popped. This bytecode distinguishes two cases: if TOS has a method with the correct name, the bytecode pushes the unbound method and TOS. TOS will be used as the first argument ( &lt;code&gt;self&lt;/code&gt; ) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt; when calling the unbound method. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and the object return by the attribute lookup are pushed.</target>
        </trans-unit>
        <trans-unit id="d27df2a4a2d21c1753293f40979140c7e27016e1" translate="yes" xml:space="preserve">
          <source>Loads all symbols not starting with &lt;code&gt;'_'&lt;/code&gt; directly from the module TOS to the local namespace. The module is popped after loading all names. This opcode implements &lt;code&gt;from module import *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'_'&lt;/code&gt; で始まらないすべてのシンボルをモジュールTOSからローカル名前空間に直接ロードします。すべての名前をロードした後、モジュールがポップされます。このオペコードは &lt;code&gt;from module import *&lt;/code&gt; 実装されます。</target>
        </trans-unit>
        <trans-unit id="a73db01bcd9bbe68ec1dd85d66ba7ce5f2794388" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">この要素ツリーに外部XMLセクションをロードします。&lt;em&gt;source&lt;/em&gt;は、ファイル名または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;です。&lt;em&gt;parser&lt;/em&gt;は、オプションのパーサーインスタンスです。指定しない場合、標準の&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;パーサーが使用されます。セクションルート要素を返します。</target>
        </trans-unit>
        <trans-unit id="1952c7c28c165103bccf89650bf5868d447acff4" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; parser is used. Returns the section root element.</target>
        </trans-unit>
        <trans-unit id="1f8a05fa121c3dfddca1eb9b12000164796d7f86" translate="yes" xml:space="preserve">
          <source>Loads the attribute &lt;code&gt;co_names[namei]&lt;/code&gt; from the module found in TOS. The resulting object is pushed onto the stack, to be subsequently stored by a &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; instruction.</source>
          <target state="translated">TOSにあるモジュールから属性 &lt;code&gt;co_names[namei]&lt;/code&gt; ロードします。結果のオブジェクトはスタックにプッシュされ、その後&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;命令によって格納されます。</target>
        </trans-unit>
        <trans-unit id="9b348168c8362df88f869811fab229492225da54" translate="yes" xml:space="preserve">
          <source>Loads the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Pushes a reference to the object the cell contains on the stack.</source>
          <target state="translated">セルのスロット&lt;em&gt;i&lt;/em&gt;に含まれるセルをロードし、変数ストレージを解放します。セルに含まれるオブジェクトへの参照をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="07317685209bae8dc29b1177be533689623566aa" translate="yes" xml:space="preserve">
          <source>Loads the global named &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; という名前のグローバルをスタックにロードします。</target>
        </trans-unit>
        <trans-unit id="5e4196f78acb5e15163031bb305c6c69a7881387" translate="yes" xml:space="preserve">
          <source>Local currency symbol.</source>
          <target state="translated">現地通貨記号。</target>
        </trans-unit>
        <trans-unit id="52009a3ea27db65f1cc4de20822dd34262e8738c" translate="yes" xml:space="preserve">
          <source>Local processes can also access that queue, using the code from above on the client to access it remotely:</source>
          <target state="translated">ローカルプロセスは、クライアント上の上記のコードを使用してリモートでそのキューにアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="3e985f42b4f2cb4a242c933c6cd4f71c10094544" translate="yes" xml:space="preserve">
          <source>Locale category for formatting numbers. The functions &lt;a href=&quot;#locale.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atoi&quot;&gt;&lt;code&gt;atoi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atof&quot;&gt;&lt;code&gt;atof()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected by that category. All other numeric formatting operations are not affected.</source>
          <target state="translated">数値をフォーマットするためのロケールカテゴリ。&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールの関数&lt;a href=&quot;#locale.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#locale.atoi&quot;&gt; &lt;code&gt;atoi()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#locale.atof&quot;&gt; &lt;code&gt;atof()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#locale.str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;は、そのカテゴリーの影響を受けます。他のすべての数値フォーマット操作は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="e89698268d6ca826988ca2828f9a33ea91d9b28a" translate="yes" xml:space="preserve">
          <source>Locale category for formatting of monetary values. The available options are available from the &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">金額の書式設定のためのロケールカテゴリ。利用可能なオプションは、&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt;関数から利用できます。</target>
        </trans-unit>
        <trans-unit id="04a64c4c278c2187092935ce39d2099f68cb48c8" translate="yes" xml:space="preserve">
          <source>Locale category for message display. Python currently does not support application specific locale-aware messages. Messages displayed by the operating system, like those returned by &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt; might be affected by this category.</source>
          <target state="translated">メッセージ表示のロケールカテゴリ。Pythonは現在、アプリケーション固有のロケール対応メッセージをサポートしていません。&lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; &lt;/a&gt;によって返されるメッセージなど、オペレーティングシステムによって表示されるメッセージは、このカテゴリの影響を受ける可能性があります。</target>
        </trans-unit>
        <trans-unit id="ddd49d042ef959ad8740ad1439b50170f4a67803" translate="yes" xml:space="preserve">
          <source>Locale category for sorting strings. The functions &lt;a href=&quot;#locale.strcoll&quot;&gt;&lt;code&gt;strcoll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.strxfrm&quot;&gt;&lt;code&gt;strxfrm()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected.</source>
          <target state="translated">文字列をソートするためのロケールカテゴリ。機能&lt;a href=&quot;#locale.strcoll&quot;&gt; &lt;code&gt;strcoll()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#locale.strxfrm&quot;&gt; &lt;code&gt;strxfrm()&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールが影響を受けます。</target>
        </trans-unit>
        <trans-unit id="cbbf73bf0b11794a60e800b47ab121a2dee00b07" translate="yes" xml:space="preserve">
          <source>Locale category for the character type functions. Depending on the settings of this category, the functions of module &lt;a href=&quot;string#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; dealing with case change their behaviour.</source>
          <target state="translated">文字タイプ関数のロケールカテゴリ。このカテゴリの設定に応じて、大文字と小文字を処理するモジュール&lt;a href=&quot;string#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;の関数は、その動作を変更します。</target>
        </trans-unit>
        <trans-unit id="b3402d90af0a871f59ee54dff6e494f7c57e091c" translate="yes" xml:space="preserve">
          <source>Locale category for the formatting of time. The function &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; follows these conventions.</source>
          <target state="translated">時間の書式設定のためのロケールカテゴリ。関数&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;は、これらの規則に従います。</target>
        </trans-unit>
        <trans-unit id="73b793f3c64332c43debe3f45fccfa2080cec4a8" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated month name.</source>
          <target state="translated">ロケールの月の省略名。</target>
        </trans-unit>
        <trans-unit id="c9afac89d2e328ab0ed56be9db5cfa0260851bff" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated weekday name.</source>
          <target state="translated">ロケールの省略された曜日名。</target>
        </trans-unit>
        <trans-unit id="46905c93036f1fc91beab4f6536669f4aa997a97" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date and time representation.</source>
          <target state="translated">ロケールの適切な日付と時刻の表現。</target>
        </trans-unit>
        <trans-unit id="13dd4044599b17dfb922c37d1bc883f07809d332" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date representation.</source>
          <target state="translated">ロケールの適切な日付表現。</target>
        </trans-unit>
        <trans-unit id="36487e73126def0235c7c9de6ec2356b44418976" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate time representation.</source>
          <target state="translated">ロケールの適切な時間表現。</target>
        </trans-unit>
        <trans-unit id="f2fefc48256fa82bb994918d97f4d1273ceaaa82" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s equivalent of either AM or PM.</source>
          <target state="translated">AMまたはPMのいずれかに相当するロケール。</target>
        </trans-unit>
        <trans-unit id="6fd390382c5edc4503dc946a153a0cfc7197d046" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full month name.</source>
          <target state="translated">ロケールの完全な月名。</target>
        </trans-unit>
        <trans-unit id="07ec6fcd65ab62d1a5fc3d4b40fc1f0d429bee74" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full weekday name.</source>
          <target state="translated">ロケールの完全な曜日名。</target>
        </trans-unit>
        <trans-unit id="f1fb667e5d929e9a2ab0404441ece3a2b8b4ac94" translate="yes" xml:space="preserve">
          <source>Localizing your application</source>
          <target state="translated">アプリケーションのローカライズ</target>
        </trans-unit>
        <trans-unit id="7e70bb97fb52037a6fc3c4f3daae9b44f1e4190f" translate="yes" xml:space="preserve">
          <source>Localizing your module</source>
          <target state="translated">モジュールのローカライズ</target>
        </trans-unit>
        <trans-unit id="d2e95cdee60c00152032441855294fcdb5f25216" translate="yes" xml:space="preserve">
          <source>Locate the insertion point for &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; to maintain sorted order. The parameters &lt;em&gt;lo&lt;/em&gt; and &lt;em&gt;hi&lt;/em&gt; may be used to specify a subset of the list which should be considered; by default the entire list is used. If &lt;em&gt;x&lt;/em&gt; is already present in &lt;em&gt;a&lt;/em&gt;, the insertion point will be before (to the left of) any existing entries. The return value is suitable for use as the first parameter to &lt;code&gt;list.insert()&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted.</source>
          <target state="translated">ソートされた順序を維持&lt;em&gt;する&lt;/em&gt;には&lt;em&gt;、&lt;/em&gt;&lt;em&gt;x&lt;/em&gt;の挿入ポイントを&lt;em&gt;aに配置&lt;/em&gt;します。パラメーター&lt;em&gt;lo&lt;/em&gt;および&lt;em&gt;hi&lt;/em&gt;を使用して、考慮すべきリストのサブセットを指定できます。デフォルトでは、リスト全体が使用されます。場合&lt;em&gt;、xが&lt;/em&gt;既に存在している、挿入ポイントは、既存のエントリ（の左側）の前であろう。戻り値は、&lt;em&gt;a&lt;/em&gt;がすでにソートされて&lt;em&gt;いる&lt;/em&gt;と想定して&lt;em&gt;、&lt;/em&gt; &lt;code&gt;list.insert()&lt;/code&gt; の最初のパラメーターとして使用するのに適しています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c21d4b6cbd99b64624c0ae81363ca97a7b37eac" translate="yes" xml:space="preserve">
          <source>Locates a bitmap file of the name &lt;code&gt;name.xpm&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method). By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the bitmap files in your application. When successful, it returns the complete pathname of the bitmap file, prefixed with the character &lt;code&gt;@&lt;/code&gt;. The returned value can be used to configure the &lt;code&gt;bitmap&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">&lt;code&gt;name.xpm&lt;/code&gt; または &lt;code&gt;name&lt;/code&gt; のビットマップファイルをビットマップディレクトリの1つに&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;メソッドを参照）。&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;を使用することにより、アプリケーションでビットマップファイルのパス名をハードコーディングすることを回避できます。成功すると、ビットマップファイルの完全なパス名が返され、先頭に &lt;code&gt;@&lt;/code&gt; が付きます。戻り値を使用して、TkウィジェットとTixウィジェットの &lt;code&gt;bitmap&lt;/code&gt; オプションを構成できます。</target>
        </trans-unit>
        <trans-unit id="7a6c0b8acf24a16e33c0f64184c64947bcfef879" translate="yes" xml:space="preserve">
          <source>Locates an image file of the name &lt;code&gt;name.xpm&lt;/code&gt;, &lt;code&gt;name.xbm&lt;/code&gt; or &lt;code&gt;name.ppm&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method above). If more than one file with the same name (but different extensions) exist, then the image type is chosen according to the depth of the X display: xbm images are chosen on monochrome displays and color images are chosen on color displays. By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the image files in your application. When successful, this method returns the name of the newly created image, which can be used to configure the &lt;code&gt;image&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">名前の &lt;code&gt;name.xpm&lt;/code&gt; かのビットマップディレクトリ（上記の&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;メソッドを参照）で名前name.xpm、 &lt;code&gt;name.xbm&lt;/code&gt; または &lt;code&gt;name.ppm&lt;/code&gt; の画像ファイルを探します。同じ名前（ただし拡張子が異なる）のファイルが複数存在する場合、画像タイプはXディスプレイの深度に応じて選択されます。モノクロディスプレイではxbmイメージが選択され、カラーディスプレイではカラーイメージが選択されます。&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;を使用することにより、アプリケーションで画像ファイルのパス名をハードコーディングすることを回避できます。成功すると、このメソッドは新しく作成されたイメージの名前を返します。これを使用して、TkウィジェットとTixウィジェットの &lt;code&gt;image&lt;/code&gt; オプションを構成できます。</target>
        </trans-unit>
        <trans-unit id="f8b0e21f5b3f01d9c1a093dcc7aebc48a221cf7a" translate="yes" xml:space="preserve">
          <source>Locator Objects</source>
          <target state="translated">ロケータオブジェクト</target>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="5a9e42ea8ddb21d85da434d1d4df2d2f1efa57a3" translate="yes" xml:space="preserve">
          <source>Lock Objects</source>
          <target state="translated">オブジェクトのロック</target>
        </trans-unit>
        <trans-unit id="06f960cf76802c9e596f5a165b9c306033b8c337" translate="yes" xml:space="preserve">
          <source>Lock objects have the following methods:</source>
          <target state="translated">ロックオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="0222c4646a5cac92401d4d0c07f15b59f773661e" translate="yes" xml:space="preserve">
          <source>Lock part of a file based on file descriptor &lt;em&gt;fd&lt;/em&gt; from the C runtime. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on failure. The locked region of the file extends from the current file position for &lt;em&gt;nbytes&lt;/em&gt; bytes, and may continue beyond the end of the file. &lt;em&gt;mode&lt;/em&gt; must be one of the &lt;code&gt;LK_*&lt;/code&gt; constants listed below. Multiple regions in a file may be locked at the same time, but may not overlap. Adjacent regions are not merged; they must be unlocked individually.</source>
          <target state="translated">Cランタイムからのファイル記述子&lt;em&gt;fdに&lt;/em&gt;基づいてファイルの一部をロックします。発生させ&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のを&lt;/a&gt;失敗しました。ファイルのロックされた領域は、現在のファイル位置から&lt;em&gt;nbytes&lt;/em&gt;バイト拡張され、ファイルの終わりを超えて続く場合があります。&lt;em&gt;mode&lt;/em&gt;は、以下に示す &lt;code&gt;LK_*&lt;/code&gt; 定数のいずれかでなければなりません。ファイル内の複数の領域が同時にロックされることがありますが、重複することはできません。隣接するリージョンはマージされません。個別にロック解除する必要があります。</target>
        </trans-unit>
        <trans-unit id="c528eeea30f8c7cdbf3dd9c943be567de116bc9e" translate="yes" xml:space="preserve">
          <source>Lock program segments into memory. The value of &lt;em&gt;op&lt;/em&gt; (defined in &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt;) determines which segments are locked.</source>
          <target state="translated">プログラムセグメントをメモリにロックします。&lt;em&gt;op&lt;/em&gt;の値（ &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt; で定義）は、ロックするセグメントを決定します。</target>
        </trans-unit>
        <trans-unit id="d14148792cb2e70e25dadd8e130df4def697650f" translate="yes" xml:space="preserve">
          <source>Locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">ロックは、&lt;a href=&quot;#with-locks&quot;&gt;コンテキスト管理プロトコル&lt;/a&gt;もサポートしています。</target>
        </trans-unit>
        <trans-unit id="e4911bad28d3fb7972d5e7251b010d8af4491853" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定されたバイトをロックします。バイトをロックできない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9271e320c4c74de58382f17a37df89d94c970942" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, the program immediately tries again after 1 second. If, after 10 attempts, the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定されたバイトをロックします。バイトをロックできない場合、プログラムは1秒後に直ちに再試行します。10回試行してもバイトをロックできない場合は、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="cf1602b3907bd203c789fd778d5036f56eb7eaa5" translate="yes" xml:space="preserve">
          <source>Log in as the given &lt;em&gt;user&lt;/em&gt;. The &lt;em&gt;passwd&lt;/em&gt; and &lt;em&gt;acct&lt;/em&gt; parameters are optional and default to the empty string. If no &lt;em&gt;user&lt;/em&gt; is specified, it defaults to &lt;code&gt;'anonymous'&lt;/code&gt;. If &lt;em&gt;user&lt;/em&gt; is &lt;code&gt;'anonymous'&lt;/code&gt;, the default &lt;em&gt;passwd&lt;/em&gt; is &lt;code&gt;'anonymous@'&lt;/code&gt;. This function should be called only once for each instance, after a connection has been established; it should not be called at all if a host and user were given when the instance was created. Most FTP commands are only allowed after the client has logged in. The &lt;em&gt;acct&lt;/em&gt; parameter supplies &amp;ldquo;accounting information&amp;rdquo;; few systems implement this.</source>
          <target state="translated">指定された&lt;em&gt;ユーザー&lt;/em&gt;としてログインし&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;passwdファイル&lt;/em&gt;および&lt;em&gt;acctの&lt;/em&gt;パラメータはオプションであり、空の文字列にデフォルトされています。&lt;em&gt;ユーザー&lt;/em&gt;が指定されていない場合、デフォルトで &lt;code&gt;'anonymous'&lt;/code&gt; になります。場合は&lt;em&gt;、ユーザが&lt;/em&gt;ある &lt;code&gt;'anonymous'&lt;/code&gt; 、デフォルトの&lt;em&gt;passwdが&lt;/em&gt;ある &lt;code&gt;'anonymous@'&lt;/code&gt; 。この関数は、接続が確立された後、インスタンスごとに1回だけ呼び出す必要があります。インスタンスの作成時にホストとユーザーが指定されている場合は、呼び出さないでください。ほとんどのFTPコマンドは、クライアントがログインした後でのみ許可されます&lt;em&gt;。acct&lt;/em&gt;パラメータは「アカウンティング情報」を提供します。これを実装するシステムはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="492759de42716d33cbac9e1b9827c65dd042298c" translate="yes" xml:space="preserve">
          <source>Log in on an SMTP server that requires authentication. The arguments are the username and the password to authenticate with. If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first. This method will return normally if the authentication was successful, or may raise the following exceptions:</source>
          <target state="translated">認証が必要なSMTPサーバーにログインします。引数は、認証に使用するユーザー名とパスワードです。このセッションに以前の &lt;code&gt;EHLO&lt;/code&gt; または &lt;code&gt;HELO&lt;/code&gt; コマンドがない場合、このメソッドは最初にESMTP &lt;code&gt;EHLO&lt;/code&gt; を試行します。このメソッドは、認証が成功した場合は正常に戻るか、次の例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d77829d521e5852593ca42255d86ed2e7f8595be" translate="yes" xml:space="preserve">
          <source>Log normal distribution. If you take the natural logarithm of this distribution, you&amp;rsquo;ll get a normal distribution with mean &lt;em&gt;mu&lt;/em&gt; and standard deviation &lt;em&gt;sigma&lt;/em&gt;. &lt;em&gt;mu&lt;/em&gt; can have any value, and &lt;em&gt;sigma&lt;/em&gt; must be greater than zero.</source>
          <target state="translated">ログ正規分布。この分布の自然対数を取ると、平均&lt;em&gt;mu&lt;/em&gt;および標準偏差&lt;em&gt;sigmaの&lt;/em&gt;正規分布が得られます。&lt;em&gt;muに&lt;/em&gt;は任意の値を指定でき、&lt;em&gt;シグマ&lt;/em&gt;はゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="ec346ba8e376063f18c76a6a36fb7ed2f33b4610" translate="yes" xml:space="preserve">
          <source>Log options:</source>
          <target state="translated">ログオプション。</target>
        </trans-unit>
        <trans-unit id="e403e316611e44a9d6be336eddc9b9eb85594a3c" translate="yes" xml:space="preserve">
          <source>Log the &lt;em&gt;exc_info&lt;/em&gt; tuple in the server log. &lt;em&gt;exc_info&lt;/em&gt; is a &lt;code&gt;(type, value,
traceback)&lt;/code&gt; tuple. The default implementation simply writes the traceback to the request&amp;rsquo;s &lt;code&gt;wsgi.errors&lt;/code&gt; stream and flushes it. Subclasses can override this method to change the format or retarget the output, mail the traceback to an administrator, or whatever other action may be deemed suitable.</source>
          <target state="translated">ログ&lt;em&gt;exc_info&lt;/em&gt;サーバログでタプルを。&lt;em&gt;exc_info&lt;/em&gt;は &lt;code&gt;(type, value, traceback)&lt;/code&gt; タプルです。デフォルトの実装では、トレースバックをリクエストの &lt;code&gt;wsgi.errors&lt;/code&gt; ストリームに書き込んでフラッシュするだけです。サブクラスは、このメソッドをオーバーライドして、形式を変更したり、出力のターゲットを変更したり、トレースバックを管理者にメールで送信したり、その他の適切と思われるアクションを実行したりできます。</target>
        </trans-unit>
        <trans-unit id="dc4e6d3876ad4a8a803d61a2a77cd5334fce93af" translate="yes" xml:space="preserve">
          <source>LogRecord Objects</source>
          <target state="translated">ログレコードオブジェクト</target>
        </trans-unit>
        <trans-unit id="ccb5e46040b27f71ccff505e9a6e009e5d62de5b" translate="yes" xml:space="preserve">
          <source>LogRecord attributes</source>
          <target state="translated">ログレコード属性</target>
        </trans-unit>
        <trans-unit id="fbead21275199ebeec83dafe0173b0929df9cb34" translate="yes" xml:space="preserve">
          <source>Logger Objects</source>
          <target state="translated">ロガーオブジェクト</target>
        </trans-unit>
        <trans-unit id="b5fc3005221abc4dacb66646e66e5f0b75230d22" translate="yes" xml:space="preserve">
          <source>LoggerAdapter Objects</source>
          <target state="translated">LoggerAdapter オブジェクト</target>
        </trans-unit>
        <trans-unit id="15832f53aca8e4c130be5e20c44213f1a721a48e" translate="yes" xml:space="preserve">
          <source>Loggers expose the interface that application code directly uses.</source>
          <target state="translated">ロガーは、アプリケーション コードが直接使用するインターフェイスを公開します。</target>
        </trans-unit>
        <trans-unit id="efa3718c7750545c2778f507e22c3d6f661d113d" translate="yes" xml:space="preserve">
          <source>Loggers have the following attributes and methods. Note that Loggers should &lt;em&gt;NEVER&lt;/em&gt; be instantiated directly, but always through the module-level function &lt;code&gt;logging.getLogger(name)&lt;/code&gt;. Multiple calls to &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;getLogger()&lt;/code&gt;&lt;/a&gt; with the same name will always return a reference to the same Logger object.</source>
          <target state="translated">ロガーには、次の属性とメソッドがあります。ロガーがなければならないことに注意してください&lt;em&gt;絶対&lt;/em&gt;モジュールレベル関数を介して直接、常にインスタンス化されないこと &lt;code&gt;logging.getLogger(name)&lt;/code&gt; 。同じ名前で&lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;getLogger()&lt;/code&gt; &lt;/a&gt;を複数回呼び出すと、常に同じLoggerオブジェクトへの参照が返されます。</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="718fbafd7688e11a4939390c7cefcf0e84b52cd7" translate="yes" xml:space="preserve">
          <source>Logging Cookbook</source>
          <target state="translated">ロギングクックブック</target>
        </trans-unit>
        <trans-unit id="1fbc43bf18b2478288c7467471047ecb56ddfd53" translate="yes" xml:space="preserve">
          <source>Logging Levels</source>
          <target state="translated">ロギングレベル</target>
        </trans-unit>
        <trans-unit id="1b01df6b50483f653377a29c09e0331101f1c193" translate="yes" xml:space="preserve">
          <source>Logging options of subsequent &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; calls can be set by calling &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; with no arguments if the log is not currently open.</source>
          <target state="translated">後続の&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;呼び出しのロギングオプションは、&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; を&lt;/a&gt;呼び出すことで設定できます。ログが現在開いていない場合、&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;は引数なしで&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f2c3bb3b5b0e703c74d0f552f84bc84df36cf3d0" translate="yes" xml:space="preserve">
          <source>Logical operands</source>
          <target state="translated">論理オペランド</target>
        </trans-unit>
        <trans-unit id="a5da835bb3de6e8855950138a28dea23921e5aaa" translate="yes" xml:space="preserve">
          <source>Logical operators</source>
          <target state="translated">論理演算子</target>
        </trans-unit>
        <trans-unit id="68ee364c110a032900740118e24926681c70b88f" translate="yes" xml:space="preserve">
          <source>Login name</source>
          <target state="translated">ログイン名</target>
        </trans-unit>
        <trans-unit id="4793b19c165be78b5755bf851fe44408b3928735" translate="yes" xml:space="preserve">
          <source>Logs a message with integer level &lt;em&gt;level&lt;/em&gt; on this logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">整数レベル&lt;em&gt;levelの&lt;/em&gt;メッセージをこのロガーに記録します。その他の引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="568da12654cb50668fd7df8728fdffeea5db8e4f" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;CRITICAL&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="13c90355ef29e3a334c5bf4bf41ddcfe4ea3bd96" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;CRITICAL&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="36f562459e6b0a68f0056bc85b76d0713156dd98" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on the root logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">ルートロガーにレベル &lt;code&gt;DEBUG&lt;/code&gt; のメッセージを記録します。&lt;em&gt;MSGは、&lt;/em&gt;メッセージの書式文字列であり、&lt;em&gt;argsが&lt;/em&gt;にマージされた引数である&lt;em&gt;MSG&lt;/em&gt;オペレータの書式文字列を使用して。（これは、フォーマット文字列でキーワードを1つの辞書引数とともに使用できることを意味します。）</target>
        </trans-unit>
        <trans-unit id="5a4c1194427cd766c51025f3e34a599a0511d4b3" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">このロガーにレベル &lt;code&gt;DEBUG&lt;/code&gt; のメッセージを記録します。&lt;em&gt;MSGは、&lt;/em&gt;メッセージの書式文字列であり、&lt;em&gt;argsが&lt;/em&gt;にマージされた引数である&lt;em&gt;MSG&lt;/em&gt;オペレータの書式文字列を使用して。（これは、フォーマット文字列でキーワードを1つの辞書引数とともに使用できることを意味します。）</target>
        </trans-unit>
        <trans-unit id="7ee298b777f0058b389d34b722b70a34d14afb80" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.) No % formatting operation is performed on &lt;em&gt;msg&lt;/em&gt; when no &lt;em&gt;args&lt;/em&gt; are supplied.</source>
          <target state="translated">Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.) No % formatting operation is performed on &lt;em&gt;msg&lt;/em&gt; when no &lt;em&gt;args&lt;/em&gt; are supplied.</target>
        </trans-unit>
        <trans-unit id="f28267fec34519242b4f0b061529a74d9fd484db" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;ERROR&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="063c8e0d066708dfaf5ffe371aa8fb8c4cc02f3c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This function should only be called from an exception handler.</source>
          <target state="translated">レベル &lt;code&gt;ERROR&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。例外情報がログメッセージに追加されます。この関数は、例外ハンドラーからのみ呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6423ebbe3708cdc9d0f73b8e0a2a041b8f7201cd" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベルが &lt;code&gt;ERROR&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="88872c80d5ab754d614298ef5b916093cae7f7b7" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This method should only be called from an exception handler.</source>
          <target state="translated">レベルが &lt;code&gt;ERROR&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。例外情報がログメッセージに追加されます。このメソッドは、例外ハンドラーからのみ呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d0dc5301e94745236f4d358120d631126efcea6a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;INFO&lt;/code&gt; のメッセージをルートロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="581dd2f78c21b5e17b02fc079ab480e252bfcc1d" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベル &lt;code&gt;INFO&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="4f2f699842300d31569b0cd131e0992c77e4125c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ルートロガーにレベル &lt;code&gt;WARNING&lt;/code&gt; のメッセージを記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="ff4a3eae062ed036b2645240bea04e5509ea296a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レベルが &lt;code&gt;WARNING&lt;/code&gt; のメッセージをこのロガーに記録します。引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="2899f8a5fde47519ab2a228961dc0b080847aeb5" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;em&gt;level&lt;/em&gt; on the root logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ルートロガーにレベル&lt;em&gt;levelの&lt;/em&gt;メッセージを記録します。その他の引数は&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="e88c984feb01158e83ba8164af3f59c55939f49a" translate="yes" xml:space="preserve">
          <source>Logs an accepted (successful) request. &lt;em&gt;code&lt;/em&gt; should specify the numeric HTTP code associated with the response. If a size of the response is available, then it should be passed as the &lt;em&gt;size&lt;/em&gt; parameter.</source>
          <target state="translated">受け入れられた（成功した）要求をログに記録します。&lt;em&gt;code&lt;/em&gt;は、応答に関連付けられた数値HTTP &lt;em&gt;コード&lt;/em&gt;を指定する必要があります。応答のサイズが利用可能な場合は、それを&lt;em&gt;サイズ&lt;/em&gt;パラメータとして渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="4c6dd21f141766e9553b34ec63e21d85a3b49703" translate="yes" xml:space="preserve">
          <source>Logs an arbitrary message to &lt;code&gt;sys.stderr&lt;/code&gt;. This is typically overridden to create custom error logging mechanisms. The &lt;em&gt;format&lt;/em&gt; argument is a standard printf-style format string, where the additional arguments to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt; are applied as inputs to the formatting. The client ip address and current date and time are prefixed to every message logged.</source>
          <target state="translated">任意のメッセージを &lt;code&gt;sys.stderr&lt;/code&gt; に記録します。これは通常、カスタムエラーロギングメカニズムを作成するためにオーバーライドされます。&lt;em&gt;フォーマット&lt;/em&gt;引数は標準のprintfスタイルのフォーマット文字列に追加の引数である&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;フォーマットへの入力として適用されます。ログに記録されるすべてのメッセージには、クライアントのIPアドレスと現在の日時がプレフィックスとして付加されます。</target>
        </trans-unit>
        <trans-unit id="e90924ba66bc7d377e31aed21afb101cba9a37c3" translate="yes" xml:space="preserve">
          <source>Logs an error when a request cannot be fulfilled. By default, it passes the message to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt;, so it takes the same arguments (&lt;em&gt;format&lt;/em&gt; and additional values).</source>
          <target state="translated">リクエストを処理できない場合にエラーをログに記録します。デフォルトでは、メッセージを&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;に渡すため、同じ引数（&lt;em&gt;フォーマット&lt;/em&gt;と追加の値）を取ります。</target>
        </trans-unit>
        <trans-unit id="f8ac632028735d423f992df756452f653d52c9aa" translate="yes" xml:space="preserve">
          <source>Look on the current line. with the cursor, and the line above for a filename and line number. If found, open the file if not already open, and show the line. Use this to view source lines referenced in an exception traceback and lines found by Find in Files. Also available in the context menu of the Shell window and Output windows.</source>
          <target state="translated">カーソルで現在の行を探し、上の行にファイル名と行番号を探します。見つかった場合は、まだ開いていない場合はファイルを開き、その行を表示します。例外トレースバックで参照されているソース行や、Find in Filesで見つかった行を表示する場合に使用します。シェルウィンドウや出力ウィンドウのコンテキストメニューからも利用できます。</target>
        </trans-unit>
        <trans-unit id="830541a609e4aebb4ca0ddc42697347ba279e0a5" translate="yes" xml:space="preserve">
          <source>Look up a handler function based on the &lt;code&gt;mimetype&lt;/code&gt; of &lt;em&gt;msg&lt;/em&gt; (see next paragraph), call it, passing through all arguments, and return the result of the call. The expectation is that the handler will extract the payload from &lt;em&gt;msg&lt;/em&gt; and return an object that encodes information about the extracted data.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt;の &lt;code&gt;mimetype&lt;/code&gt; に基づいてハンドラー関数を&lt;em&gt;検索し&lt;/em&gt;（次の段落を参照）、それを呼び出し、すべての引数を渡して、呼び出しの結果を返します。ハンドラーが&lt;em&gt;msg&lt;/em&gt;からペイロードを抽出し、抽出されたデータに関する情報をエンコードするオブジェクトを返すことが期待されています。</target>
        </trans-unit>
        <trans-unit id="02580224a4c7c76c987379f2bada22e0530b5592" translate="yes" xml:space="preserve">
          <source>Look up character by name. If a character with the given name is found, return the corresponding character. If not found, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">名前で文字を検索します。指定された名前の文字が見つかった場合、対応する文字を返します。見つからない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ab30e49eb23103b13863785d8c5f988a831d12c9" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id and &lt;em&gt;context&lt;/em&gt;, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">見上げて&lt;em&gt;コンテキスト&lt;/em&gt;と&lt;em&gt;メッセージ&lt;/em&gt;カタログのidをし、Unicode文字列として、対応するメッセージ文字列を返します。カタログに&lt;em&gt;メッセージ&lt;/em&gt; IDと&lt;em&gt;コンテキスト&lt;/em&gt;のエントリがなく、フォールバックが設定されている場合、ルックアップはフォールバックの&lt;a href=&quot;#gettext.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合は、&lt;em&gt;メッセージ&lt;/em&gt; IDが返されます。</target>
        </trans-unit>
        <trans-unit id="cb02656c464ac3ccae9eccf0e89b321d6923bdd6" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">見上げ&lt;em&gt;たメッセージ&lt;/em&gt;カタログにIDをし、Unicode文字列として、対応するメッセージ文字列を返します。カタログに&lt;em&gt;メッセージ&lt;/em&gt; ID のエントリがなく、フォールバックが設定されている場合、ルックアップはフォールバックの&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合は、&lt;em&gt;メッセージ&lt;/em&gt; IDが返されます。</target>
        </trans-unit>
        <trans-unit id="e3a556474e1ed457b70864b01a7298696a2ec2dd" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">指定されたエンコーディングのコーデックを&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;、そのStreamReaderクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="9d4ddc4438742263e3d5627291450220ce8cb31b" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">指定されたエンコーディングのコーデックを&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;、そのStreamWriterクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="c84e896663516d28c7c27bb365ae80312c5e169f" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its decoder function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのデコーダ関数を返します。</target>
        </trans-unit>
        <trans-unit id="eb641b1a229c64cd02ce2ebfc05ae8a7c13b0596" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its encoder function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのエンコーダ関数を返します。</target>
        </trans-unit>
        <trans-unit id="3655c5a141ca4acde5ad365207e8691d73d266bf" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental decoder class or factory function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのインクリメンタルデコーダクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="6cc163fdbcd56d75ce77c6d6d85dc890d18b4429" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental encoder class or factory function.</source>
          <target state="translated">与えられたエンコーディングのコーデックを調べ、そのインクリメンタルエンコーダクラスまたはファクトリー関数を返します。</target>
        </trans-unit>
        <trans-unit id="78b595ac3ee12e89b27df3b7a98465df00426911" translate="yes" xml:space="preserve">
          <source>Looks up the codec info in the Python codec registry and returns a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object as defined below.</source>
          <target state="translated">Pythonコーデックレジストリでコーデック情報を&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;、以下で定義されているCodecInfoオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="cf82cd9963518dc21fb6c641a8de40d76056d5d3" translate="yes" xml:space="preserve">
          <source>Lookup &lt;em&gt;name&lt;/em&gt; in the table and return a &lt;a href=&quot;#symtable.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">テーブル内の&lt;em&gt;名前&lt;/em&gt;を検索し、&lt;a href=&quot;#symtable.Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="f4485ea3acbc6dbce3acdb006f3d986acb5ab231" translate="yes" xml:space="preserve">
          <source>LookupError</source>
          <target state="translated">LookupError</target>
        </trans-unit>
        <trans-unit id="630ea782b7785663fd9d4f73dba3d3c77a23c0bd" translate="yes" xml:space="preserve">
          <source>Lookups search the underlying mappings successively until a key is found. In contrast, writes, updates, and deletions only operate on the first mapping.</source>
          <target state="translated">ルックアップは、キーが見つかるまで基本的なマッピングを連続して検索します。対照的に、書き込み、更新、削除は最初のマッピングに対してのみ動作します。</target>
        </trans-unit>
        <trans-unit id="153299db674345d8f2ca5d3d4f9e8e37247d6bf3" translate="yes" xml:space="preserve">
          <source>Loop over the format_string and return an iterable of tuples (&lt;em&gt;literal_text&lt;/em&gt;, &lt;em&gt;field_name&lt;/em&gt;, &lt;em&gt;format_spec&lt;/em&gt;, &lt;em&gt;conversion&lt;/em&gt;). This is used by &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; to break the string into either literal text, or replacement fields.</source>
          <target state="translated">format_stringをループして、反復可能なタプル（&lt;em&gt;literal_text&lt;/em&gt;、&lt;em&gt;field_name&lt;/em&gt;、&lt;em&gt;format_spec&lt;/em&gt;、&lt;em&gt;conversion&lt;/em&gt;）を&lt;em&gt;返し&lt;/em&gt;ます。これは、文字列をリテラルテキストまたは置換フィールドに分割するために&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="817f983a7edb7dba44fd8f3324b46953d7169631" translate="yes" xml:space="preserve">
          <source>Low highlight</source>
          <target state="translated">ローハイライト</target>
        </trans-unit>
        <trans-unit id="127b603a1ef011bb89cc88a210069e24596383d1" translate="yes" xml:space="preserve">
          <source>Low level interface to kevent</source>
          <target state="translated">keventへの低レベルインターフェース</target>
        </trans-unit>
        <trans-unit id="2eb47f09ef951de4242da56b37e0a0774375475b" translate="yes" xml:space="preserve">
          <source>Low median of data.</source>
          <target state="translated">データの中央値が低い</target>
        </trans-unit>
        <trans-unit id="8780223be91d8d1f6aff0eae226f7e6a9f597e78" translate="yes" xml:space="preserve">
          <source>Low-level API Index</source>
          <target state="translated">低レベルAPIインデックス</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">低レベルAPI</target>
        </trans-unit>
        <trans-unit id="8b09ad35d513c57449768a8b41dddbe56fe84f67" translate="yes" xml:space="preserve">
          <source>Low-level I/O multiplexing module.</source>
          <target state="translated">低レベルI/O多重化モジュール。</target>
        </trans-unit>
        <trans-unit id="598bc2f6658057b428f7e2f3e606eae47ac8e6d8" translate="yes" xml:space="preserve">
          <source>Low-level methods corresponding to the standard SMTP/ESMTP commands &lt;code&gt;HELP&lt;/code&gt;, &lt;code&gt;RSET&lt;/code&gt;, &lt;code&gt;NOOP&lt;/code&gt;, &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;RCPT&lt;/code&gt;, and &lt;code&gt;DATA&lt;/code&gt; are also supported. Normally these do not need to be called directly, so they are not documented here. For details, consult the module code.</source>
          <target state="translated">標準のSMTP / ESMTPコマンド &lt;code&gt;HELP&lt;/code&gt; 、 &lt;code&gt;RSET&lt;/code&gt; 、 &lt;code&gt;NOOP&lt;/code&gt; 、 &lt;code&gt;MAIL&lt;/code&gt; 、 &lt;code&gt;RCPT&lt;/code&gt; 、および &lt;code&gt;DATA&lt;/code&gt; に対応する低レベルのメソッドもサポートされています。通常、これらを直接呼び出す必要はないため、ここでは説明しません。詳細については、モジュールコードを参照してください。</target>
        </trans-unit>
        <trans-unit id="26766bff9d94e6567e710b2fea4f1511b662ea0d" translate="yes" xml:space="preserve">
          <source>Low-level terminal control interface.</source>
          <target state="translated">低レベル端末制御インターフェース。</target>
        </trans-unit>
        <trans-unit id="3037eb1a5f56e2da85ac8efecced594163214b23" translate="yes" xml:space="preserve">
          <source>Low-level time related functions.</source>
          <target state="translated">低レベルの時間関連機能。</target>
        </trans-unit>
        <trans-unit id="d9dd367f9bd9200fa80c2b2e15b69f5c2fd12a8e" translate="yes" xml:space="preserve">
          <source>Low-level transport abstraction over subprocesses. Returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">サブプロセス上の低レベルのトランスポート抽象化。&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;によって返されます：</target>
        </trans-unit>
        <trans-unit id="173e5fb322f03059e57865273bd7201fd7a87b77" translate="yes" xml:space="preserve">
          <source>Lower left of keypad</source>
          <target state="translated">キーパッドの左下</target>
        </trans-unit>
        <trans-unit id="1122f5f9b82dc0f050f315c32b632f532a7d070a" translate="yes" xml:space="preserve">
          <source>Lower right of keypad</source>
          <target state="translated">キーパッドの右下</target>
        </trans-unit>
        <trans-unit id="30c535ddb40e2b13bc291a7dfa8a8275334e95e7" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">小文字のASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; バイト値です。大文字のASCII文字は、シーケンス &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。</target>
        </trans-unit>
        <trans-unit id="50b863a5a287224249b5146b1cb8597ee4786665" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. All other byte values are uncased.</source>
          <target state="translated">小文字のASCII文字は、シーケンス &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; バイト値です。大文字のASCII文字は、シーケンス &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; バイト値です。他のすべてのバイト値は大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="2d097e417a0011309b9e3799cef284519c47f119" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation Vol. 8, No. 1, January pp.3&amp;ndash;30 1998.</source>
          <target state="translated">M.松本と西村、「メルセンヌツイスター：623次元の等分布均一疑似乱数ジェネレータ」、ACM Transactions on Modeling and Computer Simulation Vol。8、No。1、1月pp.3-30 1998年。</target>
        </trans-unit>
        <trans-unit id="f9326dba9c79149b2bfa04e09a817e946200edd7" translate="yes" xml:space="preserve">
          <source>MADV_* Constants</source>
          <target state="translated">MADV_*定数</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="83f776c9895fa9933e9c8f01b0f9175fe4aba8f4" translate="yes" xml:space="preserve">
          <source>MH &amp;amp; nmh: Email for Users &amp;amp; Programmers</source>
          <target state="translated">MH＆nmh：ユーザーとプログラマー向けのメール</target>
        </trans-unit>
        <trans-unit id="bfb78b95660e8a4437c74324bc0e18e512f5e11a" translate="yes" xml:space="preserve">
          <source>MH is a directory-based mailbox format invented for the MH Message Handling System, a mail user agent. Each message in an MH mailbox resides in its own file. An MH mailbox may contain other MH mailboxes (called &lt;em&gt;folders&lt;/em&gt;) in addition to messages. Folders may be nested indefinitely. MH mailboxes also support &lt;em&gt;sequences&lt;/em&gt;, which are named lists used to logically group messages without moving them to sub-folders. Sequences are defined in a file called &lt;code&gt;.mh_sequences&lt;/code&gt; in each folder.</source>
          <target state="translated">MHは、メールユーザーエージェントであるMHメッセージ処理システムのために考案されたディレクトリベースのメールボックス形式です。 MHメールボックス内の各メッセージは、独自のファイルに存在します。 MHメールボックスには、メッセージに加えて他のMHメールボックス（&lt;em&gt;フォルダー&lt;/em&gt;と呼ばれる）を含めることができます。フォルダは無期限にネストできます。 MHメールボックスは、&lt;em&gt;シーケンス&lt;/em&gt;もサポートし&lt;em&gt;ます&lt;/em&gt;。これは、メッセージをサブフォルダーに移動せずに論理的にグループ化するために使用される名前付きリストです。シーケンスは、各フォルダーの &lt;code&gt;.mh_sequences&lt;/code&gt; というファイルで定義されます。</target>
        </trans-unit>
        <trans-unit id="9c05b8eba754105622f4f66f9c667c959eac038c" translate="yes" xml:space="preserve">
          <source>MH messages do not support marks or flags in the traditional sense, but they do support sequences, which are logical groupings of arbitrary messages. Some mail reading programs (although not the standard &lt;strong&gt;mh&lt;/strong&gt; and &lt;strong&gt;nmh&lt;/strong&gt;) use sequences in much the same way flags are used with other formats, as follows:</source>
          <target state="translated">MHメッセージは、従来の意味でのマークまたはフラグをサポートしていませんが、任意のメッセージの論理グループであるシーケンスをサポートしています。一部のメール読み取りプログラム（標準の&lt;strong&gt;mh&lt;/strong&gt;および&lt;strong&gt;nmhで&lt;/strong&gt;はありません）は、次のように、フラグが他の形式で使用されるのとほぼ同じ方法でシーケンスを使用します。</target>
        </trans-unit>
        <trans-unit id="65da9389c1a77e41f94256ff46e83b4558f0d2c0" translate="yes" xml:space="preserve">
          <source>MIME headers all start with the prefix &amp;lsquo;Content-&amp;lsquo;. Each specific header has a certain value, described under the class for that header. Some can also take a list of supplemental parameters, which have a common format. This class serves as a base for all the MIME headers that take parameters.</source>
          <target state="translated">MIMEヘッダーはすべて、プレフィックス 'Content-'で始まります。特定の各ヘッダーには特定の値があり、そのヘッダーのクラスで説明されています。いくつかはまた、共通のフォーマットを持つ補足パラメーターのリストを取ることもできます。このクラスは、パラメーターを受け取るすべてのMIMEヘッダーのベースとして機能します。</target>
        </trans-unit>
        <trans-unit id="e780567389e1a67ac39a9aa3a2da100125cc437a" translate="yes" xml:space="preserve">
          <source>MIMEVersionHeader</source>
          <target state="translated">MIMEVersionHeader</target>
        </trans-unit>
        <trans-unit id="ac2781a30c636477d2571979c4dc8ae62e55b4a1" translate="yes" xml:space="preserve">
          <source>MMDF</source>
          <target state="translated">MMDF</target>
        </trans-unit>
        <trans-unit id="66116c893240b072c88886bdaaa797c52d0bc63e" translate="yes" xml:space="preserve">
          <source>MMDF is a single-file mailbox format invented for the Multichannel Memorandum Distribution Facility, a mail transfer agent. Each message is in the same form as an mbox message but is bracketed before and after by lines containing four Control-A (&lt;code&gt;'\001'&lt;/code&gt;) characters. As with the mbox format, the beginning of each message is indicated by a line whose first five characters are &amp;ldquo;From &amp;ldquo;, but additional occurrences of &amp;ldquo;From &amp;rdquo; are not transformed to &amp;ldquo;&amp;gt;From &amp;rdquo; when storing messages because the extra message separator lines prevent mistaking such occurrences for the starts of subsequent messages.</source>
          <target state="translated">MMDFは、メール転送エージェントであるMultichannel Memorandum Distribution Facilityのために考案された単一ファイルのメールボックス形式です。各メッセージはmboxメッセージと同じ形式ですが、4つのControl-A（ &lt;code&gt;'\001'&lt;/code&gt; ）文字を含む行の前後に括弧で囲まれます。 mbox形式と同様に、各メッセージの先頭は最初の5文字が「From」である行で示されますが、追加の「From」は、メッセージを格納するときに「&amp;gt; From」に変換されません。そのような発生を後続のメッセージの開始と間違える。</target>
        </trans-unit>
        <trans-unit id="5481121da443813ed3ac24e7900056c8bc0a3492" translate="yes" xml:space="preserve">
          <source>MS Windows</source>
          <target state="translated">エムエスウィンドウズ</target>
        </trans-unit>
        <trans-unit id="7603491c0dcf610a151e7e878f3e66902074b1e1" translate="yes" xml:space="preserve">
          <source>MS Windows Specific Services</source>
          <target state="translated">エムエスウィンドウズ特有のサービス</target>
        </trans-unit>
        <trans-unit id="6f96f1c42882c7292e1fca57e1b53cd688b380b1" translate="yes" xml:space="preserve">
          <source>Mac OS Platform</source>
          <target state="translated">マックオーエスプラットフォーム</target>
        </trans-unit>
        <trans-unit id="7bd9422fbcc45a81bb4afd061a341076dea802f9" translate="yes" xml:space="preserve">
          <source>Mac OS X can return:</source>
          <target state="translated">Mac OS Xは戻ることができます。</target>
        </trans-unit>
        <trans-unit id="2ff28b996370a24ecb0833ef2246817e7ffb3e42" translate="yes" xml:space="preserve">
          <source>Machine is not on the network</source>
          <target state="translated">マシンがネットワーク上にない</target>
        </trans-unit>
        <trans-unit id="bf55ab1cf5927f19f45290600b680716e5e32f16" translate="yes" xml:space="preserve">
          <source>Magenta (purplish red)</source>
          <target state="translated">マゼンタ(紫がかった赤</target>
        </trans-unit>
        <trans-unit id="32c97d0530e5003fff0bec696fd2fde110dbea71" translate="yes" xml:space="preserve">
          <source>Magic Mock</source>
          <target state="translated">マジックモック</target>
        </trans-unit>
        <trans-unit id="ba97bef2f5190237815682cb5c24de6d99b343b8" translate="yes" xml:space="preserve">
          <source>Magic methods &lt;em&gt;should&lt;/em&gt; be looked up on the class rather than the instance. Different versions of Python are inconsistent about applying this rule. The supported protocol methods should work with all supported versions of Python.</source>
          <target state="translated">マジックメソッド&lt;em&gt;は&lt;/em&gt;、インスタンスではなくクラスで検索する&lt;em&gt;必要&lt;/em&gt;があります。Pythonのバージョンが異なると、このルールの適用に一貫性がなくなります。サポートされているプロトコルメソッドは、サポートされているすべてのバージョンのPythonで動作するはずです。</target>
        </trans-unit>
        <trans-unit id="b04bd0c1375cb0c437085dcd22b5d776344cd11e" translate="yes" xml:space="preserve">
          <source>Magic methods that are supported but not setup by default in &lt;code&gt;MagicMock&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; でサポートされているがデフォルトでは設定されていないマジックメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9a1c07f78b75414a75fc974ca16b8c197d751801" translate="yes" xml:space="preserve">
          <source>MagicMock and magic method support</source>
          <target state="translated">MagicMockとマジックメソッドに対応</target>
        </trans-unit>
        <trans-unit id="528cb2c5c793842fe4f6bbd5e875eb9ace62e872" translate="yes" xml:space="preserve">
          <source>Mailbox objects</source>
          <target state="translated">メールボックスオブジェクト</target>
        </trans-unit>
        <trans-unit id="86634cd900d76e4a94c7afdeafd4189dde9eb547" translate="yes" xml:space="preserve">
          <source>Mailcap files are used to configure how MIME-aware applications such as mail readers and Web browsers react to files with different MIME types. (The name &amp;ldquo;mailcap&amp;rdquo; is derived from the phrase &amp;ldquo;mail capability&amp;rdquo;.) For example, a mailcap file might contain a line like &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt;. Then, if the user encounters an email message or Web document with the MIME type &lt;em&gt;video/mpeg&lt;/em&gt;, &lt;code&gt;%s&lt;/code&gt; will be replaced by a filename (usually one belonging to a temporary file) and the &lt;strong&gt;xmpeg&lt;/strong&gt; program can be automatically started to view the file.</source>
          <target state="translated">Mailcapファイルは、メールリーダーやWebブラウザなどのMIME対応アプリケーションが、さまざまなMIMEタイプのファイルにどのように反応するかを設定するために使用されます。 （「mailcap」という名前は、「メール機能」というフレーズに由来します。）たとえば、mailcapファイルには、 &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt; ような行が含まれる場合があります。 xmpeg％s。次に、ユーザーがMIMEタイプが&lt;em&gt;video / mpegの&lt;/em&gt;電子メールメッセージまたはWebドキュメントに遭遇した場合、 &lt;code&gt;%s&lt;/code&gt; はファイル名（通常は一時ファイルに属するもの）に置き換えられ、&lt;strong&gt;xmpeg&lt;/strong&gt;プログラムを自動的に起動してファイルを表示できます。</target>
        </trans-unit>
        <trans-unit id="451a9be697ddead11775c85e4cdec2e8e1e7fccf" translate="yes" xml:space="preserve">
          <source>Maildir is a directory-based mailbox format invented for the qmail mail transfer agent and now widely supported by other programs. Messages in a Maildir mailbox are stored in separate files within a common directory structure. This design allows Maildir mailboxes to be accessed and modified by multiple unrelated programs without data corruption, so file locking is unnecessary.</source>
          <target state="translated">Maildir は qmail メール転送エージェントのために考案されたディレクトリベースのメールボックス形式で、現在では他のプログラムでも広くサポートされています。Maildir メールボックス内のメッセージは、共通のディレクトリ構造の中で別々のファイルに保存されます。この設計により、Maildir メールボックスはデータが破損することなく複数の無関係なプログラムからアクセスしたり変更したりすることができるので、ファイルロックは不要です。</target>
        </trans-unit>
        <trans-unit id="b40e5216a6cda56e75561046f7fd7ba0f11c7e63" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes contain three subdirectories, namely: &lt;code&gt;tmp&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, and &lt;code&gt;cur&lt;/code&gt;. Messages are created momentarily in the &lt;code&gt;tmp&lt;/code&gt; subdirectory and then moved to the &lt;code&gt;new&lt;/code&gt; subdirectory to finalize delivery. A mail user agent may subsequently move the message to the &lt;code&gt;cur&lt;/code&gt; subdirectory and store information about the state of the message in a special &amp;ldquo;info&amp;rdquo; section appended to its file name.</source>
          <target state="translated">Maildirメールボックスには、 &lt;code&gt;tmp&lt;/code&gt; 、 &lt;code&gt;new&lt;/code&gt; 、 &lt;code&gt;cur&lt;/code&gt; の 3つのサブディレクトリがあります。メッセージは一時的に &lt;code&gt;tmp&lt;/code&gt; サブディレクトリに作成され、配信を完了するために &lt;code&gt;new&lt;/code&gt; サブディレクトリに移動されます。メールユーザーエージェントは、その後、メッセージを &lt;code&gt;cur&lt;/code&gt; サブディレクトリに移動し、メッセージの状態に関する情報を、そのファイル名に追加された特別な「情報」セクションに格納します。</target>
        </trans-unit>
        <trans-unit id="71f497ebb214b9ce15eb874a873e5a71df6ed9c7" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes do not support (or require) locking, so these methods do nothing.</source>
          <target state="translated">Maildir のメールボックスはロックをサポートしていない (または必要とする)ので、これらの方法は何もしません。</target>
        </trans-unit>
        <trans-unit id="cc72f9949f161493c90aa33b348af41b8717a0cf" translate="yes" xml:space="preserve">
          <source>MailmanProxy Objects</source>
          <target state="translated">MailmanProxy オブジェクト</target>
        </trans-unit>
        <trans-unit id="e4e1dbd94f7dcdd2adca3669f8c832e535d92107" translate="yes" xml:space="preserve">
          <source>Main module explicit relative imports</source>
          <target state="translated">メインモジュール 明示的な相対輸入</target>
        </trans-unit>
        <trans-unit id="a63ee5a0ffd4ee7e4f1505d1af22daf8da80898f" translate="yes" xml:space="preserve">
          <source>Main options</source>
          <target state="translated">主なオプション</target>
        </trans-unit>
        <trans-unit id="29c2fbf90a10af24cbd4c4648db9d6379273181c" translate="yes" xml:space="preserve">
          <source>Mainly because of backwards compatibility concerns, &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; provides also a legacy API with explicit &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt; methods. While there are valid use cases for the methods outlined below, mapping protocol access is preferred for new projects. The legacy API is at times more advanced, low-level and downright counterintuitive.</source>
          <target state="translated">主に下位互換性の問題があるため、&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;は明示的な &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; メソッドを備えたレガシーAPIも提供します。以下に概説する方法には有効な使用例がありますが、新しいプロジェクトではマッピングプロトコルアクセスが推奨されます。レガシーAPIは、より高度で低レベルであり、まったく直感的でない場合があります。</target>
        </trans-unit>
        <trans-unit id="4823e55cd98dad58bd2be122640b91ad2d5ed814" translate="yes" xml:space="preserve">
          <source>Major cross-platform (Windows, Mac OS X, Unix-like) GUI toolkits are available for Python:</source>
          <target state="translated">主要なクロスプラットフォーム(Windows、Mac OS X、Unixライク)のGUIツールキットがPythonで利用できます。</target>
        </trans-unit>
        <trans-unit id="79d238209c2cada151fcd2a72d589d9730730983" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt; and case-insensitive matching dependent on the current locale. This flag can be used only with bytes patterns. The use of this flag is discouraged as the locale mechanism is very unreliable, it only handles one &amp;ldquo;culture&amp;rdquo; at a time, and it only works with 8-bit locales. Unicode matching is already enabled by default in Python 3 for Unicode (str) patterns, and it is able to handle different locales/languages. Corresponds to the inline flag &lt;code&gt;(?L)&lt;/code&gt;.</source>
          <target state="translated">メイク &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\W&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\B&lt;/code&gt; と現在のロケールに依存して、大文字と小文字を区別しないマッチング。このフラグは、バイトパターンでのみ使用できます。ロケールメカニズムは非常に信頼性が低く、一度に1つの「カルチャ」しか処理せず、8ビットロケールでのみ機能するため、このフラグの使用はお勧めできません。 Python 3のUnicode（str）パターンでは、Unicodeマッチングがデフォルトですでに有効になっており、さまざまなロケール/言語を処理できます。インラインフラグ &lt;code&gt;(?L)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="4094168c6f13dde8d4a1402e6d2e892f00c22016" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt; and &lt;code&gt;\S&lt;/code&gt; perform ASCII-only matching instead of full Unicode matching. This is only meaningful for Unicode patterns, and is ignored for byte patterns. Corresponds to the inline flag &lt;code&gt;(?a)&lt;/code&gt;.</source>
          <target state="translated">メイク &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\W&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\B&lt;/code&gt; 、 &lt;code&gt;\d&lt;/code&gt; 、 &lt;code&gt;\D&lt;/code&gt; 、 &lt;code&gt;\s&lt;/code&gt; および &lt;code&gt;\S&lt;/code&gt; ASCIIのみの完全なUnicodeマッチングの代わりに一致行います。これはUnicodeパターンでのみ意味があり、バイトパターンでは無視されます。インラインフラグ &lt;code&gt;(?a)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="2859945e3ed955c0801940559aa8f2fa3e430461" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlCondition&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;ControlCondition&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="e78f1ddb4700c5c26bc5d606246d4a1ea1478dca" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlEvent&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;ControlEvent&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="22e44c261988ea1b3403fdf3cfd43ae89d29b9c4" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;EventMapping&lt;/code&gt; table for this control.</source>
          <target state="translated">このコントロールの &lt;code&gt;EventMapping&lt;/code&gt; テーブルにエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="4968d67864606429422562e4bfe072750713dd88" translate="yes" xml:space="preserve">
          <source>Make an iterator returning elements from the iterable and saving a copy of each. When the iterable is exhausted, return elements from the saved copy. Repeats indefinitely. Roughly equivalent to:</source>
          <target state="translated">イテレータを作成し、イテレートテーブルから要素を返し、それぞれのコピーを保存します。イテレータブルが尽きたら、保存したコピーから要素を返す。無限に繰り返す。大まかにはこれと同等。</target>
        </trans-unit>
        <trans-unit id="a9ae1a5a9224338d48d85639bd5fbf1307db3d17" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables.</source>
          <target state="translated">各イテレータの要素を集約するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="4ecc79480f8b7a91f54bcaea359c899bb7d5a944" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with &lt;em&gt;fillvalue&lt;/em&gt;. Iteration continues until the longest iterable is exhausted. Roughly equivalent to:</source>
          <target state="translated">各イテラブルの要素を集約するイテレータを作成します。&lt;em&gt;イテラブルの&lt;/em&gt;長さが不均一である場合、欠損値は&lt;em&gt;fillvalueで&lt;/em&gt;埋められます。反復は、最長の反復可能オブジェクトがなくなるまで続きます。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="f6d54f93918e62244f26c512e7a161b6bca8eb5a" translate="yes" xml:space="preserve">
          <source>Make an iterator that computes the function using arguments obtained from the iterable. Used instead of &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; when argument parameters are already grouped in tuples from a single iterable (the data has been &amp;ldquo;pre-zipped&amp;rdquo;). The difference between &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#itertools.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt; parallels the distinction between &lt;code&gt;function(a,b)&lt;/code&gt; and &lt;code&gt;function(*c)&lt;/code&gt;. Roughly equivalent to:</source>
          <target state="translated">イテラブルから取得した引数を使用して関数を計算するイテレータを作成します。引数パラメーターが単一の反復可能オブジェクトからのタプルに既にグループ化されている場合（データは「事前に圧縮」されている&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;、map（）の代わりに使用されます。&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#itertools.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt;の違いは、 &lt;code&gt;function(a,b)&lt;/code&gt; と &lt;code&gt;function(*c)&lt;/code&gt; の違いに対応しています。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="8c96615ae41b720b59370f4efd4451ca2077afbf" translate="yes" xml:space="preserve">
          <source>Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element. Note, the iterator does not produce &lt;em&gt;any&lt;/em&gt; output until the predicate first becomes false, so it may have a lengthy start-up time. Roughly equivalent to:</source>
          <target state="translated">述語が真である限り、反復可能要素から要素を削除するイテレータを作成します。その後、すべての要素を返します。イテレータは、述語が最初にfalseになるまで出力を生成しないため&lt;em&gt;、&lt;/em&gt;起動時間が長くなる可能性があることに注意してください。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="892281d3f769ea7deb689777f71449bced9b383a" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from &lt;em&gt;data&lt;/em&gt; returning only those that have a corresponding element in &lt;em&gt;selectors&lt;/em&gt; that evaluates to &lt;code&gt;True&lt;/code&gt;. Stops when either the &lt;em&gt;data&lt;/em&gt; or &lt;em&gt;selectors&lt;/em&gt; iterables has been exhausted. Roughly equivalent to:</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; と評価される&lt;em&gt;セレクターに&lt;/em&gt;対応する要素を持つ&lt;em&gt;データ&lt;/em&gt;のみを返す&lt;em&gt;データ&lt;/em&gt;から要素をフィルターするイテレータを&lt;em&gt;作成&lt;/em&gt;します。&lt;em&gt;データ&lt;/em&gt;または&lt;em&gt;セレクターの&lt;/em&gt;イテラブルのいずれかがなくなったときに停止します。次とほぼ同等：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffb72f4d4622e4e02475b473a321a110e46112f1" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from iterable returning only those for which the predicate is &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;predicate&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return the items that are false. Roughly equivalent to:</source>
          <target state="translated">述語が &lt;code&gt;False&lt;/code&gt; である要素のみを返す反復可能要素から要素をフィルタリングするイテレータを作成します。&lt;em&gt;述語&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、falseのアイテムを返します。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="a957feb62063c86973f86240f6f0031887c5e9cb" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns &lt;em&gt;object&lt;/em&gt; over and over again. Runs indefinitely unless the &lt;em&gt;times&lt;/em&gt; argument is specified. Used as argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; for invariant parameters to the called function. Also used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to create an invariant part of a tuple record.</source>
          <target state="translated">&lt;em&gt;オブジェクトを&lt;/em&gt;繰り返し返すイテレータを作成します。&lt;em&gt;times&lt;/em&gt;引数が指定されていない限り、無期限に実行されます。呼び出された関数への不変パラメーターの&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;への引数として使用されます。また、&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;とともに使用して、タプルレコードの不変部分を作成します。</target>
        </trans-unit>
        <trans-unit id="5b008cc279ea80916bda0cbd332d0aa7ba0556ec" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns accumulated sums, or accumulated results of other binary functions (specified via the optional &lt;em&gt;func&lt;/em&gt; argument).</source>
          <target state="translated">累積合計、または他のバイナリ関数（オプションの&lt;em&gt;func&lt;/em&gt;引数で指定）の累積結果を返すイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="9f714338584f0b2134e7468a019823beae5537be" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns consecutive keys and groups from the &lt;em&gt;iterable&lt;/em&gt;. The &lt;em&gt;key&lt;/em&gt; is a function computing a key value for each element. If not specified or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;key&lt;/em&gt; defaults to an identity function and returns the element unchanged. Generally, the iterable needs to already be sorted on the same key function.</source>
          <target state="translated">&lt;em&gt;iterable&lt;/em&gt;から連続したキーとグループを返すイテレータを作成します。&lt;em&gt;キーは、&lt;/em&gt;各要素のキー値を計算する関数です。指定されていないか &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;keyは&lt;/em&gt;デフォルトで単位関数になり、変更されていない要素を返します。一般的に、イテラブルは同じキー関数ですでにソートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="59c6932f4ea38a9adb405d00c88d62c4ce199417" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted. Used for treating consecutive sequences as a single sequence. Roughly equivalent to:</source>
          <target state="translated">最初のイテレータブルがなくなるまで、最初のイテレータブルから要素を返し、次のイテレータブルに進み、すべてのイテレータブルがなくなるまでイテレータを作成します。連続したシーケンスを1つのシーケンスとして扱うために使用します。大まかにはこれと同等です。</target>
        </trans-unit>
        <trans-unit id="db17bd2fa6e28e684f31b9a14e54b77456d66135" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the iterable as long as the predicate is true. Roughly equivalent to:</source>
          <target state="translated">述語が真である限り、反復可能な要素を返すイテレータを作成します。大まかにはこれと同等。</target>
        </trans-unit>
        <trans-unit id="0843933413e67d1e5cac3980b5f29ff765b66dc1" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns evenly spaced values starting with number &lt;em&gt;start&lt;/em&gt;. Often used as an argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; to generate consecutive data points. Also, used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to add sequence numbers. Roughly equivalent to:</source>
          <target state="translated">数値&lt;em&gt;startで&lt;/em&gt;始まる等間隔の値を返すイテレータを作成します。多くの場合、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; の&lt;/a&gt;引数として使用され、連続するデータポイントを生成します。また、&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;と共に使用してシーケンス番号を追加します。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="4994f0ea994acf88c67fba065692eb6b5778a17e" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns selected elements from the iterable. If &lt;em&gt;start&lt;/em&gt; is non-zero, then elements from the iterable are skipped until start is reached. Afterward, elements are returned consecutively unless &lt;em&gt;step&lt;/em&gt; is set higher than one which results in items being skipped. If &lt;em&gt;stop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then iteration continues until the iterator is exhausted, if at all; otherwise, it stops at the specified position. Unlike regular slicing, &lt;a href=&quot;#itertools.islice&quot;&gt;&lt;code&gt;islice()&lt;/code&gt;&lt;/a&gt; does not support negative values for &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, or &lt;em&gt;step&lt;/em&gt;. Can be used to extract related fields from data where the internal structure has been flattened (for example, a multi-line report may list a name field on every third line). Roughly equivalent to:</source>
          <target state="translated">iterableから選択された要素を返すイテレータを作成します。場合&lt;em&gt;startが&lt;/em&gt;ゼロでスタートが到達するまで、その後のiterableの要素はスキップされます。その後、要素が連続して返されます。ただし、&lt;em&gt;step&lt;/em&gt;が1より高く設定されている場合は、アイテムがスキップされます。&lt;em&gt;stop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、イテレータが使い果たされるまで反復が続行されます。それ以外の場合は、指定された位置で停止します。通常のスライスとは異なり、&lt;a href=&quot;#itertools.islice&quot;&gt; &lt;code&gt;islice()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;start&lt;/em&gt;、&lt;em&gt;stop&lt;/em&gt;、または&lt;em&gt;stepの&lt;/em&gt;負の値をサポートしていません&lt;em&gt;&lt;/em&gt;。内部構造がフラット化されているデータから関連フィールドを抽出するために使用できます（たとえば、複数行のレポートでは、3行ごとに名前フィールドがリストされる場合があります）。次とほぼ同等：</target>
        </trans-unit>
        <trans-unit id="617ef530212f8cbf0f6f805993299c48051459de" translate="yes" xml:space="preserve">
          <source>Make sure &lt;em&gt;nframes&lt;/em&gt; is correct, and close the file if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;. This method is called upon object collection. It will raise an exception if the output stream is not seekable and &lt;em&gt;nframes&lt;/em&gt; does not match the number of frames actually written.</source>
          <target state="translated">&lt;em&gt;nframes&lt;/em&gt;が正しいことを確認し、ファイルが&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;によって開かれた場合はファイルを閉じます。このメソッドは、オブジェクトの収集時に呼び出されます。出力ストリームがシークできず、&lt;em&gt;nframes&lt;/em&gt;が実際に書き込まれたフレームの数と一致しない場合は、例外が発生し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c69a4de6caa709ef6bb8a12e9677e657aca1ef6b" translate="yes" xml:space="preserve">
          <source>Make sure all possible values are tested including invalid ones. This makes sure that not only all valid values are acceptable but also that improper values are handled correctly.</source>
          <target state="translated">無効な値も含めて、すべての可能な値がテストされていることを確認してください。これにより、すべての有効な値が許容されるだけでなく、不適切な値が正しく処理されることを確認します。</target>
        </trans-unit>
        <trans-unit id="a627b5bf841e1ea88d28165d37b866a0870f3704" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">スクリプトが読み取りまたは書き込みに必要なファイルは、それぞれ「その他」によって読み取り可能または書き込み可能であることを確認してください。それらのモードは、読み取り可能の場合は &lt;code&gt;0o666&lt;/code&gt; 、書き込み可能の場合は &lt;code&gt;0o644&lt;/code&gt; である必要があります。これは、セキュリティ上の理由から、HTTPサーバーは特別な権限なしでユーザー「nobody」としてスクリプトを実行するためです。誰でも読み取り（書き込み、実行）できるファイルのみを読み取り（書き込み、実行）できます。実行時の現在のディレクトリも異なり（通常はサーバーのcgi-binディレクトリです）、環境変数のセットも、ログイン時に取得するものとは異なります。特に、シェルの検索パスを考慮しないでください実行可能ファイル（ &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ）またはPythonモジュール検索パス（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;）を任意の興味深いものに設定します。</target>
        </trans-unit>
        <trans-unit id="37b6b7519c1bdb855d4363f0027cc454504fbe47" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables ( &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;) to be set to anything interesting.</target>
        </trans-unit>
        <trans-unit id="5de2f6daf567300ef46271ec132a2987bda55e91" translate="yes" xml:space="preserve">
          <source>Make sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).</source>
          <target state="translated">メインモジュールが、意図しない副作用(新しいプロセスの開始など)を引き起こすことなく、新しいPythonインタプリタから安全にインポートできることを確認してください。</target>
        </trans-unit>
        <trans-unit id="9731ad27072d870a7da69ae18e9bb36d5c3dbee3" translate="yes" xml:space="preserve">
          <source>Make sure that your script is readable and executable by &amp;ldquo;others&amp;rdquo;; the Unix file mode should be &lt;code&gt;0o755&lt;/code&gt; octal (use &lt;code&gt;chmod 0755 filename&lt;/code&gt;). Make sure that the first line of the script contains &lt;code&gt;#!&lt;/code&gt; starting in column 1 followed by the pathname of the Python interpreter, for instance:</source>
          <target state="translated">スクリプトが「他の人」から読み取り可能かつ実行可能であることを確認してください。Unixファイルモードは8進数で &lt;code&gt;0o755&lt;/code&gt; にする必要があります（ &lt;code&gt;chmod 0755 filename&lt;/code&gt; を使用）。スクリプトの最初の行に &lt;code&gt;#!&lt;/code&gt; が含まれていることを確認してください。1列目から始まり、その後にPythonインタープリターのパス名が続きます。たとえば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="b965c16ca041ae1288bd1a67be9784d3d10d7ad4" translate="yes" xml:space="preserve">
          <source>Make sure the Python interpreter exists and is executable by &amp;ldquo;others&amp;rdquo;.</source>
          <target state="translated">Pythonインタープリターが存在し、「その他」が実行できることを確認してください。</target>
        </trans-unit>
        <trans-unit id="cbab57598b799819458d4a0023b9d15232b16ecd" translate="yes" xml:space="preserve">
          <source>Make sure to clean up after your tests (such as close and remove all temporary files).</source>
          <target state="translated">テストの後には必ずクリーンアップを行ってください(一時ファイルを閉じたり、すべての一時ファイルを削除したりしてください)。</target>
        </trans-unit>
        <trans-unit id="c886a4dcc067f50183f6d9e536df375c4dda88c4" translate="yes" xml:space="preserve">
          <source>Make sure you keep references to &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; objects as long as they are used from C code. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t, and if you don&amp;rsquo;t, they may be garbage collected, crashing your program when a callback is made.</source>
          <target state="translated">Cコードから使用する限り、&lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt;オブジェクトへの参照を保持するようにしてください。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;はそうではありません。もしそうでなければ、それらはガベージコレクションされ、コールバックが行われたときにプログラムをクラッシュさせる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6d98adddef5c8372a92668121d843f7b67ce4928" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;'.'&lt;/code&gt; special character match any character at all, including a newline; without this flag, &lt;code&gt;'.'&lt;/code&gt; will match anything &lt;em&gt;except&lt;/em&gt; a newline. Corresponds to the inline flag &lt;code&gt;(?s)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'.'&lt;/code&gt; を作る 特殊文字は、改行を含むすべての文字に一致します。このフラグなし、 &lt;code&gt;'.'&lt;/code&gt; 改行&lt;em&gt;以外のすべて&lt;/em&gt;と一致します。インラインフラグ &lt;code&gt;(?s)&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="1821d7bf0229ac06606d233650d7f9a8ac16a46b" translate="yes" xml:space="preserve">
          <source>Make the path absolute, resolving any symlinks. A new path object is returned:</source>
          <target state="translated">パスを絶対パスにし、シンボリックリンクを解決します。新しいパスオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="bb60557d6278b81f58c0e2a368efe17839683f2c" translate="yes" xml:space="preserve">
          <source>Make the turtle invisible. It&amp;rsquo;s a good idea to do this while you&amp;rsquo;re in the middle of doing some complex drawing, because hiding the turtle speeds up the drawing observably.</source>
          <target state="translated">カメを見えなくします。亀を非表示にすると描画速度が著しく向上するため、複雑な描画を行っている最中にこれを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8425653f95186dae7b16793ba9c5e6c775aa6fa7" translate="yes" xml:space="preserve">
          <source>Make the turtle visible.</source>
          <target state="translated">亀を見えるようにする。</target>
        </trans-unit>
        <trans-unit id="2b104edc6adc907e507b80dfe4df5940691e17d0" translate="yes" xml:space="preserve">
          <source>Make this feature the current feature of &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt;. New components are automatically added to the default feature, unless a feature is explicitly specified.</source>
          <target state="translated">この機能を&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt;の現在の機能にします。機能が明示的に指定されていない限り、新しいコンポーネントはデフォルトの機能に自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="817dde39e08bc70031f6cc0c99bde032f0727edc" translate="yes" xml:space="preserve">
          <source>Make this path a symbolic link to &lt;em&gt;target&lt;/em&gt;. Under Windows, &lt;em&gt;target_is_directory&lt;/em&gt; must be true (default &lt;code&gt;False&lt;/code&gt;) if the link&amp;rsquo;s target is a directory. Under POSIX, &lt;em&gt;target_is_directory&lt;/em&gt;&amp;rsquo;s value is ignored.</source>
          <target state="translated">このパスを&lt;em&gt;target&lt;/em&gt;へのシンボリックリンクにします。Windowsでは、リンクのターゲットがディレクトリの場合、&lt;em&gt;target_is_directory&lt;/em&gt;はtrue（デフォルトは &lt;code&gt;False&lt;/code&gt; ）でなければなりません。POSIXでは、&lt;em&gt;target_is_directory&lt;/em&gt;の値は無視されます。</target>
        </trans-unit>
        <trans-unit id="0589ca0705dbb10c03f08251a6b8ad92b9066e42" translate="yes" xml:space="preserve">
          <source>Makes a normal distribution instance with &lt;em&gt;mu&lt;/em&gt; and &lt;em&gt;sigma&lt;/em&gt; parameters estimated from the &lt;em&gt;data&lt;/em&gt; using &lt;a href=&quot;#statistics.fmean&quot;&gt;&lt;code&gt;fmean()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#statistics.stdev&quot;&gt;&lt;code&gt;stdev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#statistics.fmean&quot;&gt; &lt;code&gt;fmean()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#statistics.stdev&quot;&gt; &lt;code&gt;stdev()&lt;/code&gt; &lt;/a&gt;を使用して&lt;em&gt;データ&lt;/em&gt;から推定された&lt;em&gt;mu&lt;/em&gt;および&lt;em&gt;sigma&lt;/em&gt;パラメーターで正規分布インスタンスを&lt;em&gt;作成&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="74478c83d77f7f9d3b16b8e25a30c78af412de6d" translate="yes" xml:space="preserve">
          <source>Making a Phonebook</source>
          <target state="translated">電話帳の作成</target>
        </trans-unit>
        <trans-unit id="5c927175b3add69e1fe7dc7bfe7e29837fc73c90" translate="yes" xml:space="preserve">
          <source>Making a Windows executable</source>
          <target state="translated">Windows実行ファイルの作成</target>
        </trans-unit>
        <trans-unit id="855506ce6753b0d9a5b09ffd99dfc10fa3696ea0" translate="yes" xml:space="preserve">
          <source>Manager Widgets</source>
          <target state="translated">マネージャーウィジェット</target>
        </trans-unit>
        <trans-unit id="2a361c4c32a8b1dcdd56014985b930dd04f772a1" translate="yes" xml:space="preserve">
          <source>Manager processes will be shutdown as soon as they are garbage collected or their parent process exits. The manager classes are defined in the &lt;a href=&quot;#module-multiprocessing.managers&quot;&gt;&lt;code&gt;multiprocessing.managers&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">マネージャープロセスは、ガベージコレクションされるか、親プロセスが終了するとすぐにシャットダウンされます。managerクラスは&lt;a href=&quot;#module-multiprocessing.managers&quot;&gt; &lt;code&gt;multiprocessing.managers&lt;/code&gt; &lt;/a&gt;モジュールで定義されています：</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="146be58ae4c0ee3d8c972415be0e7c22bae315f6" translate="yes" xml:space="preserve">
          <source>Managers provide a way to create data which can be shared between different processes, including sharing over a network between processes running on different machines. A manager object controls a server process which manages &lt;em&gt;shared objects&lt;/em&gt;. Other processes can access the shared objects by using proxies.</source>
          <target state="translated">マネージャーは、異なるマシンで実行されているプロセス間でネットワークを介して共有するなど、異なるプロセス間で共有できるデータを作成する方法を提供します。マネージャオブジェクトは、&lt;em&gt;共有オブジェクト&lt;/em&gt;を管理するサーバープロセスを制御します。他のプロセスは、プロキシを使用して共有オブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9da4dac0b16742ede0cd08c5d71857dc8b235645" translate="yes" xml:space="preserve">
          <source>Manual Context Management</source>
          <target state="translated">マニュアルコンテキスト管理</target>
        </trans-unit>
        <trans-unit id="5be972ee604abf1abcdd9643e605d5e6677470aa" translate="yes" xml:space="preserve">
          <source>Manual settings</source>
          <target state="translated">手動設定</target>
        </trans-unit>
        <trans-unit id="343daa0eb5e43f021e62c3c8801d5b10743a76d4" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Linux documentation, are also defined in the socket module.</source>
          <target state="translated">これらの形式の多くの定数はLinuxのドキュメントに記載されていますが、 socketモジュールでも定義されています。</target>
        </trans-unit>
        <trans-unit id="c9a81759bd6fd007d62861d3fabb2bd9fbcb88bd" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Unix documentation on sockets and/or the IP protocol, are also defined in the socket module. They are generally used in arguments to the &lt;code&gt;setsockopt()&lt;/code&gt; and &lt;code&gt;getsockopt()&lt;/code&gt; methods of socket objects. In most cases, only those symbols that are defined in the Unix header files are defined; for a few symbols, default values are provided.</source>
          <target state="translated">ソケットやIPプロトコルに関するUnixのドキュメントに記載されているこれらの形式の多くの定数も、ソケットモジュールで定義されています。これらは通常、ソケットオブジェクトの &lt;code&gt;setsockopt()&lt;/code&gt; および &lt;code&gt;getsockopt()&lt;/code&gt; メソッドへの引数で使用されます。ほとんどの場合、Unixヘッダーファイルで定義されているシンボルのみが定義されます。いくつかのシンボルについては、デフォルト値が提供されています。</target>
        </trans-unit>
        <trans-unit id="510dd560760442cac504a2b167911b6a0ab8aa23" translate="yes" xml:space="preserve">
          <source>Many non-threadsafe asyncio APIs (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt;&lt;code&gt;loop.call_at()&lt;/code&gt;&lt;/a&gt; methods) raise an exception if they are called from a wrong thread.</source>
          <target state="translated">スレッドセーフでないasyncio API（&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt; &lt;code&gt;loop.call_at()&lt;/code&gt; &lt;/a&gt;メソッドなど）の多くは、間違ったスレッドから呼び出された場合に例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="815297a48147fd3991e217e62ae1a5520c0cbce5" translate="yes" xml:space="preserve">
          <source>Many of the above classes also have a &lt;code&gt;Unique&lt;/code&gt; variant (for example, &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt;). The only difference is that in the &lt;code&gt;Unique&lt;/code&gt; variant, &lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt;&lt;code&gt;max_count&lt;/code&gt;&lt;/a&gt; is set to 1.</source>
          <target state="translated">上記のクラスの多くには、 &lt;code&gt;Unique&lt;/code&gt; バリアントもあります（たとえば、 &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt; ）。唯一の違いは、 &lt;code&gt;Unique&lt;/code&gt; バリアントでは&lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt; &lt;code&gt;max_count&lt;/code&gt; &lt;/a&gt;が1に設定されていることです。</target>
        </trans-unit>
        <trans-unit id="2163dea9d3d8731a332014be1542cdabce604244" translate="yes" xml:space="preserve">
          <source>Many of the character sets support the same languages. They vary in individual characters (e.g. whether the EURO SIGN is supported or not), and in the assignment of characters to code positions. For the European languages in particular, the following variants typically exist:</source>
          <target state="translated">多 く のキ ャ ラ ク タ セ ッ ト は同 じ 言語に対応 し てい ます。それらは、個々のキ ャ ラ ク タ (例:EURO SIGN に対応しているか否か)や、 コ ー ド 位置へのキ ャ ラ ク タ の割 り 当て方が異な り ます。特に欧州の言語では、以下のようなバリエーションが一般的に存在します。</target>
        </trans-unit>
        <trans-unit id="30ccfa60e5e5281ef43935b1343f2bf376660936" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">次のメソッドの多くは、オプションのキーワードのみの引数&lt;em&gt;ファイルを&lt;/em&gt;取り&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;file&lt;/em&gt;引数を指定する場合は、バイナリ書き込み用に開かれた&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;か、書き込み先のディスク上のファイルの名前である必要があります。次に、メソッドはサーバーから返されたデータ（応答行と終了ドットを除く）をファイルに書き込みます。メソッドが通常返す行、タプル、またはオブジェクトのリストは空になります。</target>
        </trans-unit>
        <trans-unit id="d204b199705e1c56c7625c18f39cb3eba8456ca2" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</target>
        </trans-unit>
        <trans-unit id="ffa4bc0d6f566c5f847060ae6ead4557c906984b" translate="yes" xml:space="preserve">
          <source>Many of the not-very-useful (private to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; rather than the thing being mocked) underscore and double underscore prefixed attributes have been filtered from the result of calling &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. If you dislike this behaviour you can switch it off by setting the module level switch &lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">（にプライベート-非常に-有用ではない多くの&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;事が嘲笑されるのではなく）、アンダースコア、ダブルアンダースコアの接頭辞の属性が呼び出しの結果から除外されている&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;。この動作が&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt; &lt;code&gt;FILTER_DIR&lt;/code&gt; &lt;/a&gt;ない場合は、モジュールレベルスイッチFILTER_DIRを設定することで、この動作をオフにできます。</target>
        </trans-unit>
        <trans-unit id="d9a47225407eea7973acc57a86154fda62e2e8ed" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">多くのオペレーションには「インプレース」バージョンがあります。以下のリストは、通常の構文よりもインプレース演算子へのプリミティブなアクセスを提供する関数です。たとえば、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;ステートメント&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; は &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; と同等です。別の言い方をすると、 &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; は複合ステートメント &lt;code&gt;z = x; z += y&lt;/code&gt; と同等です。z + = y。</target>
        </trans-unit>
        <trans-unit id="9d7987eba2d592dbc971e76e99b6ece135aef826" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; . Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0775e95d12acf1c76496fc0019dec4ccce66e92a" translate="yes" xml:space="preserve">
          <source>Many other operations also produce lists, including the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; built-in.</source>
          <target state="translated">その他の多くの操作でも、&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;組み込みを含むリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="3892486ba2ca4c1adde5de5ad35763a15238b251" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the &lt;code&gt;svn&lt;/code&gt; program can invoke sub-commands like &lt;code&gt;svn
checkout&lt;/code&gt;, &lt;code&gt;svn update&lt;/code&gt;, and &lt;code&gt;svn commit&lt;/code&gt;. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; supports the creation of such sub-commands with the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method is normally called with no arguments and returns a special action object. This object has a single method, &lt;code&gt;add_parser()&lt;/code&gt;, which takes a command name and any &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor arguments, and returns an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object that can be modified as usual.</source>
          <target state="translated">多くのプログラムは、機能をいくつかのサブコマンドに分割しています。たとえば、 &lt;code&gt;svn&lt;/code&gt; プログラムは、 &lt;code&gt;svn update&lt;/code&gt; &lt;code&gt;svn checkout&lt;/code&gt; 、svn update、および &lt;code&gt;svn commit&lt;/code&gt; のようなサブコマンドを呼び出すことができます。この方法で機能を分割することは、プログラムがさまざまな種類のコマンドライン引数を必要とするいくつかの異なる機能を実行する場合に特に良い考えです。&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドを使用したこのようなサブコマンドの作成をサポートしています。&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドは、通常、引数なし戻る特別アクション・オブジェクトと呼ばれます。このオブジェクトには &lt;code&gt;add_parser()&lt;/code&gt; という単一のメソッドがあり、コマンド名と任意の&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;コンストラクターの引数。通常どおり変更できる&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="842c3a3980d59e2ccc8a6587608bb5e288adaa34" translate="yes" xml:space="preserve">
          <source>Many sites disable SMTP &lt;code&gt;VRFY&lt;/code&gt; in order to foil spammers.</source>
          <target state="translated">多くのサイトでは、スパマーを &lt;code&gt;VRFY&lt;/code&gt; ためにSMTP VRFYを無効にしています。</target>
        </trans-unit>
        <trans-unit id="84d090f9a4b10c8e70604e91d362e68e7d1715a8" translate="yes" xml:space="preserve">
          <source>Map character sets to their email properties.</source>
          <target state="translated">文字セットを電子メールのプロパティにマップします。</target>
        </trans-unit>
        <trans-unit id="7c158793b0576eb0e99170737dcf651e9b593ba3" translate="yes" xml:space="preserve">
          <source>Mapping Basic Tk into Tkinter</source>
          <target state="translated">基本的なTkをTkinterにマッピング</target>
        </trans-unit>
        <trans-unit id="29b99d5bba5dcab3d3f32602bec9b94930d68f31" translate="yes" xml:space="preserve">
          <source>Mapping Operators to Functions</source>
          <target state="translated">演算子から関数へのマッピング</target>
        </trans-unit>
        <trans-unit id="18d3adef974e9e8a9c707b5522d4ceef6e880500" translate="yes" xml:space="preserve">
          <source>Mapping Protocol Access</source>
          <target state="translated">マッピングプロトコルアクセス</target>
        </trans-unit>
        <trans-unit id="ebd82d89b582db2203963681055d49cb2fdde5e8" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; &lt;code&gt;dict&lt;/code&gt;</source>
          <target state="translated">マッピングタイプ&amp;mdash; &lt;code&gt;dict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5781654b4505c67ba0da3a9924958b822ec242bc" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; dict</source>
          <target state="translated">マッピングタイプ&amp;mdash; dict</target>
        </trans-unit>
        <trans-unit id="0bf0ef93e58f3620e84487a6484aef9dbeeb1def" translate="yes" xml:space="preserve">
          <source>Mapping class that references keys weakly. Entries in the dictionary will be discarded when there is no longer a strong reference to the key. This can be used to associate additional data with an object owned by other parts of an application without adding attributes to those objects. This can be especially useful with objects that override attribute accesses.</source>
          <target state="translated">キーを弱く参照するマッピングクラス。辞書内のエントリは、キーへの強い参照がなくなったときに破棄されます。これは、それらのオブジェクトに属性を追加することなく、アプリケーションの他の部分が所有するオブジェクトに追加のデータを関連付けるために使用することができます。これは、属性アクセスをオーバーライドするオブジェクトで特に便利です。</target>
        </trans-unit>
        <trans-unit id="d7046eea20884db0b40984559cdb957133a9a851" translate="yes" xml:space="preserve">
          <source>Mapping class that references values weakly. Entries in the dictionary will be discarded when no strong reference to the value exists any more.</source>
          <target state="translated">値を弱く参照するマッピングクラス。辞書内のエントリは、値への強い参照がこれ以上存在しない場合に破棄されます。</target>
        </trans-unit>
        <trans-unit id="15922488c98b6104b02093ae02b8e9a1520e3912" translate="yes" xml:space="preserve">
          <source>Mapping key (optional), consisting of a parenthesised sequence of characters (for example, &lt;code&gt;(somename)&lt;/code&gt;).</source>
          <target state="translated">括弧で囲まれた一連の文字で構成されるマッピングキー（オプション）（たとえば、 &lt;code&gt;(somename)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ffbd3fab4e4bbef4f2e2b4baa2dbf3d3454ab70b" translate="yes" xml:space="preserve">
          <source>Mapping protocol access is a generic name for functionality that enables using custom objects as if they were dictionaries. In case of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;, the mapping interface implementation is using the &lt;code&gt;parser['section']['option']&lt;/code&gt; notation.</source>
          <target state="translated">マッピングプロトコルアクセスは、カスタムオブジェクトを辞書のように使用できるようにする機能の総称です。&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; の&lt;/a&gt;場合、マッピングインターフェイスの実装は、 &lt;code&gt;parser['section']['option']&lt;/code&gt; 表記を使用しています。</target>
        </trans-unit>
        <trans-unit id="fc5f87a388e33c8327e76fb56366eadca8297613" translate="yes" xml:space="preserve">
          <source>Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; to the equivalent syslog names, and all other level names to &amp;lsquo;warning&amp;rsquo;.</source>
          <target state="translated">ログレベル名をsyslog優先度名にマップします。カスタムレベルを使用している場合、またはデフォルトのアルゴリズムがニーズに適していない場合は、これをオーバーライドする必要がある場合があります。デフォルトのアルゴリズムは、 &lt;code&gt;DEBUG&lt;/code&gt; 、 &lt;code&gt;INFO&lt;/code&gt; 、 &lt;code&gt;WARNING&lt;/code&gt; 、 &lt;code&gt;ERROR&lt;/code&gt; 、および &lt;code&gt;CRITICAL&lt;/code&gt; を同等のsyslog名にマップし、他のすべてのレベル名を「警告」にマップします。</target>
        </trans-unit>
        <trans-unit id="76ccf4240d86fc261192b90e86fb8e3d610a0808" translate="yes" xml:space="preserve">
          <source>Marc-Andr&amp;eacute; Lemburg</source>
          <target state="translated">マルクアンドレレンブルク</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="78b4b0fca0a8558cdba8df445fed06a9f493ddd2" translate="yes" xml:space="preserve">
          <source>Mark a protocol class as a runtime protocol.</source>
          <target state="translated">プロトコルクラスをランタイムプロトコルとしてマークします。</target>
        </trans-unit>
        <trans-unit id="bdc16c3d4446aea587c961d5bd660311653c4972" translate="yes" xml:space="preserve">
          <source>Mark all lines in the window as unchanged since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウ内のすべての行を、最後に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; を&lt;/a&gt;呼び出してから変更されていないものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="b902da44d0895caa8231cc9e0384c86417f1ce22" translate="yes" xml:space="preserve">
          <source>Mark for refresh but wait. This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen. To accomplish that, call &lt;a href=&quot;#curses.doupdate&quot;&gt;&lt;code&gt;doupdate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">更新のマークを付けますが、待機します。この関数は、ウィンドウの望ましい状態を表すデータ構造を更新しますが、物理画面の更新を強制しません。これを行うには、&lt;a href=&quot;#curses.doupdate&quot;&gt; &lt;code&gt;doupdate()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="e559ee62a3983226dcbd83616d76d03181ae0a0b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set an exception.</source>
          <target state="translated">未来を&lt;em&gt;完了&lt;/em&gt;としてマークし、例外を設定します。</target>
        </trans-unit>
        <trans-unit id="645ca0c18193b0ded87798fc215d9dd6ea2d332b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set its result.</source>
          <target state="translated">未来を&lt;em&gt;完了&lt;/em&gt;としてマークし、その結果を設定します。</target>
        </trans-unit>
        <trans-unit id="a99df56423ec62f1dfba367c986811c41a5f6a69" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as disabled.</source>
          <target state="translated">ブレークポイントを無効にします。</target>
        </trans-unit>
        <trans-unit id="e3cef4076875b3fcfd897d8fd8f8b835f2539450" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as enabled.</source>
          <target state="translated">ブレークポイントを有効にします。</target>
        </trans-unit>
        <trans-unit id="a61cfadccb7dbb909178bf6d48e30d04525fa479" translate="yes" xml:space="preserve">
          <source>Mark the graph as finished and check for cycles in the graph. If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt;&lt;code&gt;CycleError&lt;/code&gt;&lt;/a&gt; will be raised, but &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt; can still be used to obtain as many nodes as possible until cycles block more progress. After a call to this function, the graph cannot be modified, and therefore no more nodes can be added using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mark the graph as finished and check for cycles in the graph. If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt; &lt;code&gt;CycleError&lt;/code&gt; &lt;/a&gt; will be raised, but &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt; can still be used to obtain as many nodes as possible until cycles block more progress. After a call to this function, the graph cannot be modified, and therefore no more nodes can be added using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef57eb325f600134e0961a71843953dac27f2aa5" translate="yes" xml:space="preserve">
          <source>Mark the socket closed. The underlying system resource (e.g. a file descriptor) is also closed when all file objects from &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; are closed. Once that happens, all future operations on the socket object will fail. The remote end will receive no more data (after queued data is flushed).</source>
          <target state="translated">ソケットを閉じているとマークします。&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;からのすべてのファイルオブジェクトが閉じられると、基になるシステムリソース（ファイル記述子など）も閉じられます。これが発生すると、ソケットオブジェクトに対する今後の操作はすべて失敗します。リモートエンドはこれ以上データを受信しません（キューに入れられたデータがフラッシュされた後）。</target>
        </trans-unit>
        <trans-unit id="91570de3be09b7c281d418e67e319eb7eac4ceb0" translate="yes" xml:space="preserve">
          <source>Mark the test as an expected failure. If the test fails it will be considered a success. If the test passes, it will be considered a failure.</source>
          <target state="translated">テストを失敗の可能性があるものとしてマークします。テストが失敗した場合は成功とみなされます。テストが合格した場合は、失敗とみなされます。</target>
        </trans-unit>
        <trans-unit id="fb33120620b42e4c6568086b4548bf56c1a0ef93" translate="yes" xml:space="preserve">
          <source>Marked as important</source>
          <target state="translated">重要なものとしてマークされている</target>
        </trans-unit>
        <trans-unit id="07e5aae18cb637acd22f163aa224ab431ff10cb0" translate="yes" xml:space="preserve">
          <source>Marked for subsequent deletion</source>
          <target state="translated">その後の削除のためにマークされています。</target>
        </trans-unit>
        <trans-unit id="279c544e4838a63b639d33288ccef17eeb35736b" translate="yes" xml:space="preserve">
          <source>Marks a set of nodes returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt; as processed, unblocking any successor of each node in &lt;em&gt;nodes&lt;/em&gt; for being returned in the future by a call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Marks a set of nodes returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt; as processed, unblocking any successor of each node in &lt;em&gt;nodes&lt;/em&gt; for being returned in the future by a call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e44d1a49ab6471526e55a08a843c13a0050773d" translate="yes" xml:space="preserve">
          <source>Martin von L&amp;ouml;wis</source>
          <target state="translated">マーティンフォンロイス</target>
        </trans-unit>
        <trans-unit id="3a6db205066d4b1bbdc6724346fcfa1af498ef02" translate="yes" xml:space="preserve">
          <source>Mask for file owner permissions.</source>
          <target state="translated">ファイルの所有者権限のマスク。</target>
        </trans-unit>
        <trans-unit id="b5fc0001fa738ddce48f31c45c0d3794679d1545" translate="yes" xml:space="preserve">
          <source>Mask for group permissions.</source>
          <target state="translated">グループ権限のマスク。</target>
        </trans-unit>
        <trans-unit id="450210d9790fb16d1dbe9733f4212fbc9774479d" translate="yes" xml:space="preserve">
          <source>Mask for permissions for others (not in group).</source>
          <target state="translated">他の人の許可を得るためのマスク(グループ内ではない)。</target>
        </trans-unit>
        <trans-unit id="0826b4ceb6778b296bb3f36f65361f0cb844377a" translate="yes" xml:space="preserve">
          <source>Match &lt;em&gt;test&lt;/em&gt; to patterns set in &lt;a href=&quot;#test.support.set_match_tests&quot;&gt;&lt;code&gt;set_match_tests()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#test.support.set_match_tests&quot;&gt; &lt;code&gt;set_match_tests()&lt;/code&gt; で&lt;/a&gt;設定されたパターンに&lt;em&gt;テスト&lt;/em&gt;を一致させます。</target>
        </trans-unit>
        <trans-unit id="bb305e9c61f18de73442b09968fd63313bd41a06" translate="yes" xml:space="preserve">
          <source>Match Objects</source>
          <target state="translated">マッチオブジェクト</target>
        </trans-unit>
        <trans-unit id="93224cb05b372360e7ead31f8491156ed05f4cc5" translate="yes" xml:space="preserve">
          <source>Match objects always have a boolean value of &lt;code&gt;True&lt;/code&gt;. Since &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;None&lt;/code&gt; when there is no match, you can test whether there was a match with a simple &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">一致オブジェクトのブール値は常に &lt;code&gt;True&lt;/code&gt; です。以来&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;の戻り &lt;code&gt;None&lt;/code&gt; 一致しないとき、あなたはマッチがシンプルであったかどうかをテストすることができ &lt;code&gt;if&lt;/code&gt; の文：</target>
        </trans-unit>
        <trans-unit id="c7d3fdaa1b461ec568f838ede0d4a6626d22e9f8" translate="yes" xml:space="preserve">
          <source>Match objects support the following methods and attributes:</source>
          <target state="translated">マッチオブジェクトは以下のメソッドと属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="949fae956dd5c3ab00023592a8026f4d3f8d83a0" translate="yes" xml:space="preserve">
          <source>Match this path against the provided glob-style pattern. Return &lt;code&gt;True&lt;/code&gt; if matching is successful, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">このパスを、提供されたグロブスタイルのパターンと照合します。マッチングが成功した場合は &lt;code&gt;True&lt;/code&gt; を、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="179f5245f2bff101b819b11ca265a7859b9b8741" translate="yes" xml:space="preserve">
          <source>Matches Unicode whitespace characters (which includes &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;, and also many other characters, for example the non-breaking spaces mandated by typography rules in many languages). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; is matched.</source>
          <target state="translated">Unicodeの空白文字（ &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 、および他の多くの文字（たとえば、多くの言語のタイポグラフィルールで義務付けられている改行しないスペース）も含む）に一致します。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; が一致します。</target>
        </trans-unit>
        <trans-unit id="6d38947cd9f594564bec8a24b3a93f3632f7ac2c" translate="yes" xml:space="preserve">
          <source>Matches Unicode word characters; this includes most characters that can be part of a word in any language, as well as numbers and the underscore. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; is matched.</source>
          <target state="translated">Unicode単語文字に一致します。これには、任意の言語の単語の一部になる可能性のあるほとんどの文字、数字、およびアンダースコアが含まれます。場合&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、唯一 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; 一致しています。</target>
        </trans-unit>
        <trans-unit id="a02ff78bb9f573d06ae9b31f950bd8ca71d47da4" translate="yes" xml:space="preserve">
          <source>Matches any Unicode decimal digit (that is, any character in Unicode character category [Nd]). This includes &lt;code&gt;[0-9]&lt;/code&gt;, and also many other digit characters. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used only &lt;code&gt;[0-9]&lt;/code&gt; is matched.</source>
          <target state="translated">すべてのUnicode 10進数（つまり、Unicode文字カテゴリ[Nd]の任意の文字）に一致します。これには、 &lt;code&gt;[0-9]&lt;/code&gt; 、およびその他の多くの数字文字が含まれます。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、 &lt;code&gt;[0-9]&lt;/code&gt; のみが一致します。</target>
        </trans-unit>
        <trans-unit id="6faa8f9895eeaa59ee824b76c6784280c5d25e28" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a decimal digit. This is the opposite of &lt;code&gt;\d&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^0-9]&lt;/code&gt;.</source>
          <target state="translated">10進数ではない任意の文字に一致します。これは &lt;code&gt;\d&lt;/code&gt; の逆です。場合は&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これは相当になり &lt;code&gt;[^0-9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="506ee12774fd4c8b11b499d0991f2faec4d49031" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a whitespace character. This is the opposite of &lt;code&gt;\s&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">空白文字以外の任意の文字に一致します。これは &lt;code&gt;\s&lt;/code&gt; 逆です。場合&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これが等価となる &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb667e499cd951fea4ed70cad16b482c6b171c37" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a word character. This is the opposite of &lt;code&gt;\w&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters which are neither alphanumeric in the current locale nor the underscore.</source>
          <target state="translated">単語文字ではない任意の文字に一致します。これは &lt;code&gt;\w&lt;/code&gt; の逆です。場合&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; の&lt;/a&gt;フラグが使用され、これは等価となる &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt; 。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、現在のロケールで英数字でもアンダースコアでもない文字に一致します。</target>
        </trans-unit>
        <trans-unit id="d684d6a5303e5b104e9d7e1feebac2fca2e629fd" translate="yes" xml:space="preserve">
          <source>Matches any decimal digit; this is equivalent to &lt;code&gt;[0-9]&lt;/code&gt;.</source>
          <target state="translated">10進数と一致します。これは &lt;code&gt;[0-9]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1ec81b9258c564d40fd0ace5573c147f0fc89717" translate="yes" xml:space="preserve">
          <source>Matches characters considered alphanumeric in the ASCII character set; this is equivalent to &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters considered alphanumeric in the current locale and the underscore.</source>
          <target state="translated">ASCII文字セットで英数字と見なされる文字に一致します。これは &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; と同等です。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、現在のロケールとアンダースコアで英数字と見なされる文字に一致します。</target>
        </trans-unit>
        <trans-unit id="79e224040ee5cddbfb21a4d52e1d10cdcc916f03" translate="yes" xml:space="preserve">
          <source>Matches characters considered whitespace in the ASCII character set; this is equivalent to &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">ASCII文字セットで空白と見なされる文字に一致します。これは &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="a5760ea3990de7a6de7c5094a464f1ee8146a643" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; doesn&amp;rsquo;t match next. This is a &lt;em&gt;negative lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; が次に一致しない場合に一致します。これは&lt;em&gt;否定的な先読み表明&lt;/em&gt;です。たとえば、 &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; は、後に &lt;code&gt;'Asimov'&lt;/code&gt; が&lt;em&gt;ない&lt;/em&gt;場合にのみ、 &lt;code&gt;'Isaac '&lt;/code&gt; と一致します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="645a3b740373b49f15f59d4fb0d89acad2b7e416" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; matches next, but doesn&amp;rsquo;t consume any of the string. This is called a &lt;em&gt;lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; が次に一致する場合に一致しますが、文字列を消費しません。これは&lt;em&gt;先読みアサーション&lt;/em&gt;と呼ばれます。たとえば、 &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; は、後に &lt;code&gt;'Asimov'&lt;/code&gt; が続く場合にのみ、 &lt;code&gt;'Isaac '&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="9841ece5b3fb751e15c8bcf3e454136a92d6ad87" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is not preceded by a match for &lt;code&gt;...&lt;/code&gt;. This is called a &lt;em&gt;negative lookbehind assertion&lt;/em&gt;. Similar to positive lookbehind assertions, the contained pattern must only match strings of some fixed length. Patterns which start with negative lookbehind assertions may match at the beginning of the string being searched.</source>
          <target state="translated">文字列の現在の位置の前に &lt;code&gt;...&lt;/code&gt; の一致がない場合に一致します。これは&lt;em&gt;否定後読みアサーション&lt;/em&gt;と呼ばれます。肯定後読みアサーションと同様に、含まれるパターンは、一定の長さの文字列とのみ一致する必要があります。否定後読みアサーションで始まるパターンは、検索される文字列の先頭で一致する場合があります。</target>
        </trans-unit>
        <trans-unit id="47ac2333577ba84b6d03fe92bd867d24bbd26ed7" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is preceded by a match for &lt;code&gt;...&lt;/code&gt; that ends at the current position. This is called a &lt;em&gt;positive lookbehind assertion&lt;/em&gt;. &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; will find a match in &lt;code&gt;'abcdef'&lt;/code&gt;, since the lookbehind will back up 3 characters and check if the contained pattern matches. The contained pattern must only match strings of some fixed length, meaning that &lt;code&gt;abc&lt;/code&gt; or &lt;code&gt;a|b&lt;/code&gt; are allowed, but &lt;code&gt;a*&lt;/code&gt; and &lt;code&gt;a{3,4}&lt;/code&gt; are not. Note that patterns which start with positive lookbehind assertions will not match at the beginning of the string being searched; you will most likely want to use the &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; function rather than the &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">文字列の現在の位置の前に、現在の位置で終了する &lt;code&gt;...&lt;/code&gt; の一致がある場合に一致します。これは&lt;em&gt;ポジティブ後読みアサーション&lt;/em&gt;と呼ばれます。 &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; は &lt;code&gt;'abcdef'&lt;/code&gt; で一致を検索します。後読みは3文字バックアップし、含まれているパターンが一致するかどうかを確認するためです。含まれるパターンは、固定長の文字列とのみ一致する必要があります。つまり、 &lt;code&gt;abc&lt;/code&gt; または &lt;code&gt;a|b&lt;/code&gt; は許可されますが &lt;code&gt;a*&lt;/code&gt; および &lt;code&gt;a{3,4}&lt;/code&gt; は許可されません。肯定的な後読みアサーションで始まるパターンは、検索される文字列の先頭では一致しないことに注意してください。ほとんどの場合、&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;を使用します&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;関数ではなく関数：</target>
        </trans-unit>
        <trans-unit id="8552016e487b5c84ddf4be20f70b50e5f4e56d47" translate="yes" xml:space="preserve">
          <source>Matches only at the end of the string.</source>
          <target state="translated">文字列の最後にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="de268deff53557a1f18b43b0cc932e4c34479169" translate="yes" xml:space="preserve">
          <source>Matches only at the start of the string.</source>
          <target state="translated">文字列の先頭にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="c08d22497155abd5fe50f74938140c4799fbcef4" translate="yes" xml:space="preserve">
          <source>Matches the contents of the group of the same number. Groups are numbered starting from 1. For example, &lt;code&gt;(.+) \1&lt;/code&gt; matches &lt;code&gt;'the the'&lt;/code&gt; or &lt;code&gt;'55 55'&lt;/code&gt;, but not &lt;code&gt;'thethe'&lt;/code&gt; (note the space after the group). This special sequence can only be used to match one of the first 99 groups. If the first digit of &lt;em&gt;number&lt;/em&gt; is 0, or &lt;em&gt;number&lt;/em&gt; is 3 octal digits long, it will not be interpreted as a group match, but as the character with octal value &lt;em&gt;number&lt;/em&gt;. Inside the &lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt; of a character class, all numeric escapes are treated as characters.</source>
          <target state="translated">同じ番号のグループの内容に一致します。グループには1から番号が付けられます。たとえば、 &lt;code&gt;(.+) \1&lt;/code&gt; &lt;code&gt;'the the'&lt;/code&gt; または &lt;code&gt;'55 55'&lt;/code&gt; と一致しますが、 &lt;code&gt;'thethe'&lt;/code&gt; ません（グループの後のスペースに注意してください）。この特別なシーケンスは、最初の99グループの1つに一致するためにのみ使用できます。&lt;em&gt;number&lt;/em&gt;の最初の桁が0であるか、&lt;em&gt;number&lt;/em&gt;が3桁の8進数である場合、それはグループ一致として解釈されず、8進値&lt;em&gt;numberを&lt;/em&gt;持つ文字として解釈されます。文字クラスの &lt;code&gt;'['&lt;/code&gt; と &lt;code&gt;']'&lt;/code&gt; の内部では、すべての数値エスケープが文字として扱われます。</target>
        </trans-unit>
        <trans-unit id="2eb5aca7d251d2a0725128c63c23538a7b27cad2" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of word characters. Note that formally, &lt;code&gt;\b&lt;/code&gt; is defined as the boundary between a &lt;code&gt;\w&lt;/code&gt; and a &lt;code&gt;\W&lt;/code&gt; character (or vice versa), or between &lt;code&gt;\w&lt;/code&gt; and the beginning/end of the string. This means that &lt;code&gt;r'\bfoo\b'&lt;/code&gt; matches &lt;code&gt;'foo'&lt;/code&gt;, &lt;code&gt;'foo.'&lt;/code&gt;, &lt;code&gt;'(foo)'&lt;/code&gt;, &lt;code&gt;'bar foo baz'&lt;/code&gt; but not &lt;code&gt;'foobar'&lt;/code&gt; or &lt;code&gt;'foo3'&lt;/code&gt;.</source>
          <target state="translated">空の文字列に一致しますが、単語の最初または最後のみです。単語は、一連の単語文字として定義されます。正式には、 &lt;code&gt;\b&lt;/code&gt; は &lt;code&gt;\w&lt;/code&gt; と &lt;code&gt;\W&lt;/code&gt; 文字の間（またはその逆）、または &lt;code&gt;\w&lt;/code&gt; と文字列の先頭/末尾の間の境界として定義されることに注意してください。これは、 &lt;code&gt;r'\bfoo\b'&lt;/code&gt; &lt;code&gt;'foo'&lt;/code&gt; 、 &lt;code&gt;'foo.'&lt;/code&gt; 'に一致することを意味します。、 &lt;code&gt;'(foo)'&lt;/code&gt; 、 &lt;code&gt;'bar foo baz'&lt;/code&gt; ですが、 &lt;code&gt;'foobar'&lt;/code&gt; または &lt;code&gt;'foo3'&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="c04099b042264b3596a7797564409e8942492883" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only when it is &lt;em&gt;not&lt;/em&gt; at the beginning or end of a word. This means that &lt;code&gt;r'py\B'&lt;/code&gt; matches &lt;code&gt;'python'&lt;/code&gt;, &lt;code&gt;'py3'&lt;/code&gt;, &lt;code&gt;'py2'&lt;/code&gt;, but not &lt;code&gt;'py'&lt;/code&gt;, &lt;code&gt;'py.'&lt;/code&gt;, or &lt;code&gt;'py!'&lt;/code&gt;. &lt;code&gt;\B&lt;/code&gt; is just the opposite of &lt;code&gt;\b&lt;/code&gt;, so word characters in Unicode patterns are Unicode alphanumerics or the underscore, although this can be changed by using the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag. Word boundaries are determined by the current locale if the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used.</source>
          <target state="translated">空の文字列に一致しますが、単語の先頭または末尾に&lt;em&gt;ない&lt;/em&gt;場合のみです。つまり、 &lt;code&gt;r'py\B'&lt;/code&gt; &lt;code&gt;'python'&lt;/code&gt; 、 &lt;code&gt;'py3'&lt;/code&gt; 、 &lt;code&gt;'py2'&lt;/code&gt; に一致しますが、 &lt;code&gt;'py'&lt;/code&gt; 、 &lt;code&gt;'py.'&lt;/code&gt; 一致しません。、または &lt;code&gt;'py!'&lt;/code&gt; 。 &lt;code&gt;\B&lt;/code&gt; は &lt;code&gt;\b&lt;/code&gt; の正反対なので、Unicodeパターンの単語文字はUnicode英数字またはアンダースコアですが、これは&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグを使用して変更できます。&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;フラグが使用されている場合、単語の境界は現在のロケールによって決定されます。</target>
        </trans-unit>
        <trans-unit id="8ce88cc650b7fe8f97b845a2321d7c2b877f1d7c" translate="yes" xml:space="preserve">
          <source>Matches the end of the string or just before the newline at the end of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches before a newline. &lt;code&gt;foo&lt;/code&gt; matches both &amp;lsquo;foo&amp;rsquo; and &amp;lsquo;foobar&amp;rsquo;, while the regular expression &lt;code&gt;foo$&lt;/code&gt; matches only &amp;lsquo;foo&amp;rsquo;. More interestingly, searching for &lt;code&gt;foo.$&lt;/code&gt; in &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; matches &amp;lsquo;foo2&amp;rsquo; normally, but &amp;lsquo;foo1&amp;rsquo; in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode; searching for a single &lt;code&gt;$&lt;/code&gt; in &lt;code&gt;'foo\n'&lt;/code&gt; will find two (empty) matches: one just before the newline, and one at the end of the string.</source>
          <target state="translated">文字列の終わり、または文字列の終わりの改行の直前に一致します&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モードでは、改行の前にも一致します。 &lt;code&gt;foo&lt;/code&gt; は「foo」と「foobar」の両方に一致しますが、正規表現 &lt;code&gt;foo$&lt;/code&gt; は「foo」のみに一致します。さらに興味深いことに、探し &lt;code&gt;foo.$&lt;/code&gt; で &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; マッチ「foo2は」通常、しかしで「foo1は」&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モード。 &lt;code&gt;'foo\n'&lt;/code&gt; で単一の &lt;code&gt;$&lt;/code&gt; を検索すると、2つの（空の）一致が見つかります。1つは改行の直前、もう1つは文字列の末尾です。</target>
        </trans-unit>
        <trans-unit id="2f40daaf0bea10cd0df0f8186bdb340e8b731567" translate="yes" xml:space="preserve">
          <source>Matches whatever regular expression is inside the parentheses, and indicates the start and end of a group; the contents of a group can be retrieved after a match has been performed, and can be matched later in the string with the &lt;code&gt;\number&lt;/code&gt; special sequence, described below. To match the literals &lt;code&gt;'('&lt;/code&gt; or &lt;code&gt;')'&lt;/code&gt;, use &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;, or enclose them inside a character class: &lt;code&gt;[(]&lt;/code&gt;, &lt;code&gt;[)]&lt;/code&gt;.</source>
          <target state="translated">括弧内の正規表現に一致し、グループの開始と終了を示します。グループの内容は、一致の実行後に取得でき、後で説明する &lt;code&gt;\number&lt;/code&gt; 特殊シーケンスを使用して文字列内で後で一致させることができます。リテラル &lt;code&gt;'('&lt;/code&gt; または &lt;code&gt;')'&lt;/code&gt; に一致させるには、 &lt;code&gt;\(&lt;/code&gt; または &lt;code&gt;\)&lt;/code&gt; を使用するか、文字クラス &lt;code&gt;[(]&lt;/code&gt; 、 &lt;code&gt;[)]&lt;/code&gt; で囲みます。</target>
        </trans-unit>
        <trans-unit id="4b4c6577035e177562eb7b5ddae73d04f12d9983" translate="yes" xml:space="preserve">
          <source>Math argument out of domain of func</source>
          <target state="translated">funcのドメイン外の数学引数</target>
        </trans-unit>
        <trans-unit id="10aa065593dbf60ae5f473eae4958b71572dc4ff" translate="yes" xml:space="preserve">
          <source>Math result not representable</source>
          <target state="translated">数学の結果を表現できない</target>
        </trans-unit>
        <trans-unit id="50d207959d02b2a34b183cd7d25f1e0c68bf9ddb" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication</source>
          <target state="translated">行列の乗算</target>
        </trans-unit>
        <trans-unit id="e6d0832e2740dd4bc270c8fb3b3635030afe668d" translate="yes" xml:space="preserve">
          <source>Maximum digest size that the hash function can output.</source>
          <target state="translated">ハッシュ関数が出力できる最大のダイジェストサイズ。</target>
        </trans-unit>
        <trans-unit id="8b4aa5d3e601b7665580a557fd7d301ef9dff186" translate="yes" xml:space="preserve">
          <source>Maximum key size.</source>
          <target state="translated">最大キーサイズ。</target>
        </trans-unit>
        <trans-unit id="014ad729ec1a3537d14c4c998116e97cae28939e" translate="yes" xml:space="preserve">
          <source>Maximum key value</source>
          <target state="translated">最大キー値</target>
        </trans-unit>
        <trans-unit id="fa26260fb5c11969aae03fca4bf169c742f8d389" translate="yes" xml:space="preserve">
          <source>Maximum number of characters in the representation for an integer. Digits are dropped from the middle. The default is &lt;code&gt;40&lt;/code&gt;.</source>
          <target state="translated">整数表現の最大文字数。数字は真ん中から落とされます。デフォルトは &lt;code&gt;40&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f05dad23c52cc0273d437ffe0b4a8a5b8a0e80ef" translate="yes" xml:space="preserve">
          <source>Maximum number of days between changes</source>
          <target state="translated">変更間隔の最大日数</target>
        </trans-unit>
        <trans-unit id="16b74af98dc16ddf608395028b518cb175ab18cd" translate="yes" xml:space="preserve">
          <source>Maximum number of frames stored in the traceback of &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;traces&lt;/code&gt;&lt;/a&gt;: result of the &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; when the snapshot was taken.</source>
          <target state="translated">トレースバックに格納されているフレームの最大数&lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;traces&lt;/code&gt; &lt;/a&gt;：結果&lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt;スナップショットが取られました。</target>
        </trans-unit>
        <trans-unit id="3750177b2f369715ab06bcee508f2caa6b2a6f98" translate="yes" xml:space="preserve">
          <source>Maximum size of a deque or &lt;code&gt;None&lt;/code&gt; if unbounded.</source>
          <target state="translated">デックの最大サイズ、または制限が &lt;code&gt;None&lt;/code&gt; 場合はNone。</target>
        </trans-unit>
        <trans-unit id="edc09d71b5252f3ee59a839aac0b3a820b72242c" translate="yes" xml:space="preserve">
          <source>May be set to &amp;ldquo;normal&amp;rdquo; or &amp;ldquo;disabled&amp;rdquo; to control the &amp;ldquo;disabled&amp;rdquo; state bit. This is a write-only option: setting it changes the widget state, but the &lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt;&lt;code&gt;Widget.state()&lt;/code&gt;&lt;/a&gt; method does not affect this option.</source>
          <target state="translated">「通常」または「無効」に設定して、「無効」状態ビットを制御できます。これは書き込み専用オプションです。設定するとウィジェットの状態が変更されますが、&lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt; &lt;code&gt;Widget.state()&lt;/code&gt; &lt;/a&gt;メソッドはこのオプションに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="44a80b227c8f186870813bca412da9ebe084f150" translate="yes" xml:space="preserve">
          <source>May be used to specify a custom widget style.</source>
          <target state="translated">カスタムウィジェットのスタイルを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="31c4d73c6f4d4e4fbb6fe638e8af4924410068ed" translate="yes" xml:space="preserve">
          <source>May raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上げることができる&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="16093585733797b25f46218a91e9a1ef038fedd8" translate="yes" xml:space="preserve">
          <source>Measures of spread</source>
          <target state="translated">普及対策</target>
        </trans-unit>
        <trans-unit id="b628e9468e6b5c28d9838c0202c4f602cfb4f6b1" translate="yes" xml:space="preserve">
          <source>Measures the agreement between two normal probability distributions. Returns a value between 0.0 and 1.0 giving &lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;the overlapping area for the two probability density functions&lt;/a&gt;.</source>
          <target state="translated">2つの正規確率分布間の一致を測定します。&lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;2つの確率密度関数の重複領域&lt;/a&gt;を示す 0.0〜1.0の値を返します。</target>
        </trans-unit>
        <trans-unit id="2898c2eb7b2e66e1c44ea89bdae559774210425b" translate="yes" xml:space="preserve">
          <source>Median (middle value) of data.</source>
          <target state="translated">データの中央値(中間値)。</target>
        </trans-unit>
        <trans-unit id="b6a8553e4cbb05abe2fbc605e92f832712ef5d58" translate="yes" xml:space="preserve">
          <source>Median, or 50th percentile, of grouped data.</source>
          <target state="translated">グループ化されたデータの中央値、または50パーセンタイル。</target>
        </trans-unit>
        <trans-unit id="47c80fcea8456971f1641f17561f060ec99c498a" translate="yes" xml:space="preserve">
          <source>Member values can be anything: &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.. If the exact value is unimportant you may use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; instances and an appropriate value will be chosen for you. Care must be taken if you mix &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; with other values.</source>
          <target state="translated">メンバーの値は何でもかまいません：&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;など。正確な値が重要でない場合は、&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;インスタンスを使用でき、適切な値が選択されます。&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;を他の値と混合する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="f10615a852f71e51e70484e62589e76d80a6cbee" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;タプルとしての呼び出しを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd0eafe15e6e45f2a4f843e0333ccf3a417c5e3c" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;タプルとしての呼び出しを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ba39158a8386393f5da73f9deb9c5f902a6dd693" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; の&lt;/a&gt;メンバーは&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトです。これらは、個々の引数を取得するタプルとしてアンパックできます。&lt;a href=&quot;#calls-as-tuples&quot;&gt;タプルとしての呼び出しを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5d52065f33aba0940b046e017d4e1dcd357c9062" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">母集団のメンバーは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ&lt;/a&gt;可能である必要も、一意である必要もありません。母集団にリピートが含まれている場合、各オカレンスはサンプルでの可能な選択です。</target>
        </trans-unit>
        <trans-unit id="b7e64c99814ae5c318f3597600e15beb2186266e" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</target>
        </trans-unit>
        <trans-unit id="1e0dfc18cc7a4d06e7cad57a7f6fafa7090ff04a" translate="yes" xml:space="preserve">
          <source>Memory BIO Support</source>
          <target state="translated">メモリBIOサポート</target>
        </trans-unit>
        <trans-unit id="e80f9fe1d0c17d864aa78913d1c28ea30f56c51b" translate="yes" xml:space="preserve">
          <source>Memory Views</source>
          <target state="translated">メモリの表示</target>
        </trans-unit>
        <trans-unit id="906b5cd58552183dba7d71de987e1f1ddd52b1ec" translate="yes" xml:space="preserve">
          <source>Memory allocator API violation</source>
          <target state="translated">メモリアロケータAPI違反</target>
        </trans-unit>
        <trans-unit id="f72fc48377945075aece3d0f77f039dde8e3ab08" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">メモリマップファイルオブジェクトは、&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;両方のように動作します。&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;が期待されるほとんどの場所でmmapオブジェクトを使用できます。たとえば、&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;モジュールを使用して、メモリマップファイルを検索できます。 &lt;code&gt;obj[index] = 97&lt;/code&gt; 実行して1バイトを変更するか、スライスに割り当てることによってサブシーケンスを変更することもできます： &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; 。また、現在のファイル位置からデータを読み書きしたり、ファイルを介して別の位置に &lt;code&gt;seek()&lt;/code&gt; したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="ff563e3596f9ee71c70e8e02d53ed09fdac683ea" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt; , or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; . You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</target>
        </trans-unit>
        <trans-unit id="05dce2bca4952d4d30be9caea65daf4119c522a0" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects support the following methods:</source>
          <target state="translated">メモリマップされたファイルオブジェクトは、以下のメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ccdfc54c3dfcff33f3b84cd29c470c9f9dd72513" translate="yes" xml:space="preserve">
          <source>MemoryError</source>
          <target state="translated">MemoryError</target>
        </trans-unit>
        <trans-unit id="042180098555538da1846becefee4991e4e008c7" translate="yes" xml:space="preserve">
          <source>MemoryHandler</source>
          <target state="translated">MemoryHandler</target>
        </trans-unit>
        <trans-unit id="3a9d4b4b179ca00907fee8d914427c890923e689" translate="yes" xml:space="preserve">
          <source>Menu indexes (menu.invoke(), menu.entryconfig(), etc.)</source>
          <target state="translated">メニューインデックス (menu.invoke()、menu.entryconfig()など)</target>
        </trans-unit>
        <trans-unit id="e7c3800e31ff2e7695b9f5bed95a6de6715dca44" translate="yes" xml:space="preserve">
          <source>Menus</source>
          <target state="translated">Menus</target>
        </trans-unit>
        <trans-unit id="cc82aa47255cb19590a5531d1e61e840f195f669" translate="yes" xml:space="preserve">
          <source>Merge in data from another &lt;a href=&quot;#trace.CoverageResults&quot;&gt;&lt;code&gt;CoverageResults&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">別の&lt;a href=&quot;#trace.CoverageResults&quot;&gt; &lt;code&gt;CoverageResults&lt;/code&gt; &lt;/a&gt;オブジェクトのデータをマージします。</target>
        </trans-unit>
        <trans-unit id="fc96ea9dd703090ebbbff6f4d36c249d4f4d2c14" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">複数のソート済み入力を単一のソート済み出力にマージします（たとえば、複数のログファイルのタイムスタンプ付きのエントリをマージします）。ソートされた値の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;反復子&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="464d8b2c9358d3daab907884b63ea2624a1a5cc2" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="80b747cc58c65b15d89258f4e17a95d87d10f509" translate="yes" xml:space="preserve">
          <source>Message object structures can be created in one of two ways: they can be created from whole cloth by creating an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object, adding headers using the dictionary interface, and adding payload(s) using &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and related methods, or they can be created by parsing a serialized representation of the email message.</source>
          <target state="translated">メッセージオブジェクトの構造は、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、ディクショナリインターフェースを使用してヘッダーを追加し、&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;および関連メソッドを使用してペイロードを追加することで、布全体から作成できます。電子メールメッセージのシリアル化された表現を解析して作成されます。</target>
        </trans-unit>
        <trans-unit id="7e80a85b81acb5bcf8134a2999833f3f872f8a62" translate="yes" xml:space="preserve">
          <source>Message objects</source>
          <target state="translated">メッセージオブジェクト</target>
        </trans-unit>
        <trans-unit id="6bf991e7854ed942e57f7a8ae958526d710e4851" translate="yes" xml:space="preserve">
          <source>Message too long</source>
          <target state="translated">メッセージが長すぎる</target>
        </trans-unit>
        <trans-unit id="ae3fac3d770c2302e7b6a1ae541c61804b4bbb02" translate="yes" xml:space="preserve">
          <source>MessageIDHeader</source>
          <target state="translated">MessageIDHeader</target>
        </trans-unit>
        <trans-unit id="8ca731184f3581459cebf23959eca61bfdee5621" translate="yes" xml:space="preserve">
          <source>Messages in a Babyl mailbox have two sets of headers, original headers and so-called visible headers. Visible headers are typically a subset of the original headers that have been reformatted or abridged to be more attractive. Each message in a Babyl mailbox also has an accompanying list of &lt;em&gt;labels&lt;/em&gt;, or short strings that record extra information about the message, and a list of all user-defined labels found in the mailbox is kept in the Babyl options section.</source>
          <target state="translated">Babylメールボックスのメッセージには、元のヘッダーといわゆる可視ヘッダーの2つのヘッダーセットがあります。可視ヘッダーは通常、より魅力的になるように再フォーマットまたは要約された元のヘッダーのサブセットです。 Babylメールボックス内の各メッセージには、&lt;em&gt;ラベル&lt;/em&gt;に関する付随するリスト、またはメッセージに関する追加情報を記録する短い文字列もあり、メールボックスにあるすべてのユーザー定義ラベルのリストは、Babylオプションセクションに保持されます。</target>
        </trans-unit>
        <trans-unit id="1677ab0cd3601cac9f7ad62eb5f484d8b6a9b975" translate="yes" xml:space="preserve">
          <source>Messages in an mbox mailbox are stored together in a single file. The sender&amp;rsquo;s envelope address and the time of delivery are typically stored in a line beginning with &amp;ldquo;From &amp;rdquo; that is used to indicate the start of a message, though there is considerable variation in the exact format of this data among mbox implementations. Flags that indicate the state of the message, such as whether it has been read or marked as important, are typically stored in &lt;em&gt;Status&lt;/em&gt; and &lt;em&gt;X-Status&lt;/em&gt; headers.</source>
          <target state="translated">mboxメールボックス内のメッセージは、1つのファイルにまとめて保存されます。送信者のエンベロープアドレスと配信時間は通常、メッセージの開始を示すために使用される「From」で始まる行に格納されますが、mbox実装間でこのデータの正確な形式にはかなりのばらつきがあります。そのようなことが読み取りまたは重要としてマークされているかどうかなど、メッセージの状態を示すフラグは、通常に格納されている&lt;em&gt;状況&lt;/em&gt;と&lt;em&gt;X-ステータス&lt;/em&gt;ヘッダ。</target>
        </trans-unit>
        <trans-unit id="ce502b237ed2952032c06cc66fddcfdbf0466da2" translate="yes" xml:space="preserve">
          <source>Messages may be added to a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance using the set-like method &lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and removed using a &lt;code&gt;del&lt;/code&gt; statement or the set-like methods &lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メッセージは、set-likeメソッド&lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;インスタンスに追加し、 &lt;code&gt;del&lt;/code&gt; ステートメントまたはset-likeメソッド&lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; を&lt;/a&gt;使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="4b1f88ec82e011a2e8176b28aacc80eda529a767" translate="yes" xml:space="preserve">
          <source>Metaclass for defining Abstract Base Classes (ABCs).</source>
          <target state="translated">抽象基底クラス(ABC)を定義するためのメタクラス。</target>
        </trans-unit>
        <trans-unit id="a49c9e99a5c2fca29b2700a9772373e6a22ccee7" translate="yes" xml:space="preserve">
          <source>Metaclasses</source>
          <target state="translated">Metaclasses</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="1ad6284b73b0f911633f1c682d1bd1a0d2a1d3e3" translate="yes" xml:space="preserve">
          <source>Method Name</source>
          <target state="translated">メソッド名</target>
        </trans-unit>
        <trans-unit id="7397c74c7f3015f9c8b78018a46b8693a78d3d77" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called before &lt;code&gt;tearDown()&lt;/code&gt;. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt;&lt;code&gt;asyncSetUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">テストメソッドが呼び出され、結果が記録された直後に呼び出されるメソッド。これは &lt;code&gt;tearDown()&lt;/code&gt; の前に呼び出されます。これは、テストメソッドで例外が発生した場合でも呼び出されるため、サブクラスの実装では、内部状態のチェックに特に注意が必要になる場合があります。このメソッドによって生成された&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;以外の例外は、テストの失敗ではなく追加のエラーと見なされます（したがって、報告されるエラーの総数が増加します）。このメソッドは、テストメソッドの結果に関係なく、&lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt; &lt;code&gt;asyncSetUp()&lt;/code&gt; &lt;/a&gt;が成功した場合にのみ呼び出されます。デフォルトの実装では何も行われません。</target>
        </trans-unit>
        <trans-unit id="5dbbd8f81d018eed640981cd64112d0d9e54bc10" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">テストメソッドが呼び出され、結果が記録された直後に呼び出されるメソッド。これは、テストメソッドで例外が発生した場合でも呼び出されるため、サブクラスの実装では、内部状態のチェックに特に注意が必要になる場合があります。このメソッドによって生成された&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;以外の例外は、テストの失敗ではなく追加のエラーと見なされます（したがって、報告されるエラーの総数が増加します）。このメソッドは、テストメソッドの結果に関係なく、&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;が成功した場合にのみ呼び出されます。デフォルトの実装では何も行われません。</target>
        </trans-unit>
        <trans-unit id="649399ca8ea45b90bb86cca66b9e51f7b179886c" translate="yes" xml:space="preserve">
          <source>Method called on an input line when the command prefix is not recognized. If this method is not overridden, it prints an error message and returns.</source>
          <target state="translated">コマンドの接頭辞が認識されない場合に入力行で呼び出されるメソッド。このメソッドがオーバーライドされていない場合は、エラーメッセージを表示して戻ります。</target>
        </trans-unit>
        <trans-unit id="b83ae09e4143ec55d36cfc4cb6caafc420c049b4" translate="yes" xml:space="preserve">
          <source>Method called to complete an input line when no command-specific &lt;code&gt;complete_*()&lt;/code&gt; method is available. By default, it returns an empty list.</source>
          <target state="translated">コマンド固有の &lt;code&gt;complete_*()&lt;/code&gt; メソッドが使用できない場合に、入力行を完了するために呼び出されるメソッド。デフォルトでは、空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e63efa71573eeb573342934f9e04a35f636518cc" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called after &lt;code&gt;setUp()&lt;/code&gt;. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">テストフィクスチャを準備するために呼び出されるメソッド。これは &lt;code&gt;setUp()&lt;/code&gt; の後に呼び出されます。これは、テストメソッドを呼び出す直前に呼び出されます。&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;以外の場合、このメソッドによって発生した例外は、テストの失敗ではなくエラーと見なされます。デフォルトの実装では何も行われません。</target>
        </trans-unit>
        <trans-unit id="8ba475e032ec26577941b02aa8180ec211fee641" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">テストフィクスチャを準備するために呼び出されるメソッド。これは、テストメソッドを呼び出す直前に呼び出されます。&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;以外の場合、このメソッドによって発生した例外は、テストの失敗ではなくエラーと見なされます。デフォルトの実装では何も行われません。</target>
        </trans-unit>
        <trans-unit id="37a3391d3e50f08fbc5f1dc6bfe9fb76fdbd1e6e" translate="yes" xml:space="preserve">
          <source>Method called when a processing instruction is encountered. The &lt;em&gt;data&lt;/em&gt; parameter will contain the entire processing instruction. For example, for the processing instruction &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt;, this method would be called as &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt;. It is intended to be overridden by a derived class; the base class implementation does nothing.</source>
          <target state="translated">処理命令が発生したときに呼び出されるメソッド。&lt;em&gt;データ&lt;/em&gt;パラメータは、全体の処理命令が含まれています。たとえば、処理命令 &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt; の場合、このメソッドは &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt; として呼び出されます。派生クラスによってオーバーライドされることを意図しています。基本クラスの実装は何もしません。</target>
        </trans-unit>
        <trans-unit id="0288a5f7ccd8cc496ea12f8fbcdaa51a282fa56f" translate="yes" xml:space="preserve">
          <source>Method called when an empty line is entered in response to the prompt. If this method is not overridden, it repeats the last nonempty command entered.</source>
          <target state="translated">プロンプトに応答して空行が入力されたときに呼び出されるメソッド。このメソッドがオーバーライドされていない場合、最後に入力された空でないコマンドを繰り返します。</target>
        </trans-unit>
        <trans-unit id="e24fcca75d4001a50a3952dc15cf0af185ccf066" translate="yes" xml:space="preserve">
          <source>Method of</source>
          <target state="translated">方法</target>
        </trans-unit>
        <trans-unit id="c7659f5d6aa5a918feaa57fcebe08395c1db51d9" translate="yes" xml:space="preserve">
          <source>Method representing the process&amp;rsquo;s activity.</source>
          <target state="translated">プロセスのアクティビティを表すメソッド。</target>
        </trans-unit>
        <trans-unit id="599bc23d73a1edefe369be9db61c7ca34ff8a7cb" translate="yes" xml:space="preserve">
          <source>Method representing the thread&amp;rsquo;s activity.</source>
          <target state="translated">スレッドのアクティビティを表すメソッド。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="8d4aa5000379004bcc4aff6105bab534cc12d577" translate="yes" xml:space="preserve">
          <source>Methods and attributes for &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;ldquo;Optional Platform-Specific File Handling&amp;rdquo; feature:</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;の「オプションのプラットフォーム固有のファイル処理」機能のメソッドと属性：</target>
        </trans-unit>
        <trans-unit id="0da2ffd7bd9a87acd1c5cd9576e17a1cb3b019f6" translate="yes" xml:space="preserve">
          <source>Methods and attributes for customizing exception handling:</source>
          <target state="translated">例外処理をカスタマイズするためのメソッドと属性。</target>
        </trans-unit>
        <trans-unit id="1f97bbd5be402e144dea36fabf7319751aeb1da1" translate="yes" xml:space="preserve">
          <source>Methods and properties</source>
          <target state="translated">メソッドとプロパティ</target>
        </trans-unit>
        <trans-unit id="b954e3daaa50f78aaaff2c7fa0f441c94145e8b7" translate="yes" xml:space="preserve">
          <source>Methods and their defaults:</source>
          <target state="translated">メソッドとそのデフォルト。</target>
        </trans-unit>
        <trans-unit id="7cc2af8c2f86f770582029b10e3b40de2255d2a7" translate="yes" xml:space="preserve">
          <source>Methods are functions that are called using the attribute notation. There are two flavors: built-in methods (such as &lt;code&gt;append()&lt;/code&gt; on lists) and class instance methods. Built-in methods are described with the types that support them.</source>
          <target state="translated">メソッドは、属性表記を使用して呼び出される関数です。フレーバーには、組み込みメソッド（リストの &lt;code&gt;append()&lt;/code&gt; など）とクラスインスタンスメソッドの2つがあります。組み込みメソッドは、それらをサポートする型で説明されています。</target>
        </trans-unit>
        <trans-unit id="157469193b5d41d954e73f13258439fe6beb778e" translate="yes" xml:space="preserve">
          <source>Methods described in this subsections are low-level. In regular async/await code consider using the high-level &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt;&lt;/a&gt; convenience functions instead.</source>
          <target state="translated">このサブセクションで説明する方法は低レベルです。通常のasync / awaitコードでは、代わりに高レベルの&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt; &lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt; &lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt; &lt;/a&gt;コンビニエンス関数の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="0965a16d87bebafaef05da87be1917226fdd0b9d" translate="yes" xml:space="preserve">
          <source>Methods implemented via descriptors that also pass one of the other tests return &lt;code&gt;False&lt;/code&gt; from the &lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt;&lt;code&gt;ismethoddescriptor()&lt;/code&gt;&lt;/a&gt; test, simply because the other tests promise more &amp;ndash; you can, e.g., count on having the &lt;code&gt;__func__&lt;/code&gt; attribute (etc) when an object passes &lt;a href=&quot;#inspect.ismethod&quot;&gt;&lt;code&gt;ismethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他のテストの1つにも合格する記述子を介して実装されたメソッドは、&lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt; &lt;code&gt;ismethoddescriptor()&lt;/code&gt; &lt;/a&gt;テストから &lt;code&gt;False&lt;/code&gt; を返します。これは、他のテストがより多くのことを約束しているためです。たとえば、オブジェクトが&lt;a href=&quot;#inspect.ismethod&quot;&gt; &lt;code&gt;ismethod()&lt;/code&gt; を&lt;/a&gt;渡すときに &lt;code&gt;__func__&lt;/code&gt; 属性（など）。</target>
        </trans-unit>
        <trans-unit id="e9100cdec520f2115d829aad91ecbf2d3a3c46d0" translate="yes" xml:space="preserve">
          <source>Methods in the first group (running the test) are:</source>
          <target state="translated">最初のグループ(テストを実行する)のメソッドは</target>
        </trans-unit>
        <trans-unit id="5a45ab4a3e2a82c9598ef6d35c55326d75ba801c" translate="yes" xml:space="preserve">
          <source>Methods of RawTurtle/Turtle and corresponding functions</source>
          <target state="translated">RawTurtle/タートルの方法と対応機能</target>
        </trans-unit>
        <trans-unit id="02c2ec68b20d39a2feafa7d1d898a028041eb4f1" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen</source>
          <target state="translated">タートルスクリーン/スクリーンの方法</target>
        </trans-unit>
        <trans-unit id="020f9d7bdaf4f831aeffeaaaeea5da2050a62b4e" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen and corresponding functions</source>
          <target state="translated">タートルスクリーン/スクリーンの方法と対応機能</target>
        </trans-unit>
        <trans-unit id="74870948cfdac56fe627ac3f9017759f080dd5ad" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen</source>
          <target state="translated">スクリーン特有の方法</target>
        </trans-unit>
        <trans-unit id="ed10df094e649397ec44790d691389289e610494" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen, not inherited from TurtleScreen</source>
          <target state="translated">TurtleScreenからは継承されないScreen専用のメソッド</target>
        </trans-unit>
        <trans-unit id="c659b6a8d84e8b57729160efb981e97738f69a55" translate="yes" xml:space="preserve">
          <source>Microsecond as a decimal number, zero-padded on the left.</source>
          <target state="translated">マイクロ秒を10進数にして、左にゼロパッドを入れています。</target>
        </trans-unit>
        <trans-unit id="27380d20cf0052fb068648454674c0487d921401" translate="yes" xml:space="preserve">
          <source>Mike Clarkson converted the documentation to LaTeX, and compiled the User Interface chapter of the reference manual.</source>
          <target state="translated">Mike Clarkson氏は、ドキュメントをLaTeXに変換し、リファレンスマニュアルのUser Interfaceの章をまとめました。</target>
        </trans-unit>
        <trans-unit id="27af939f79765f408e27d70736e746c0d48d9a0c" translate="yes" xml:space="preserve">
          <source>Millisecond portion of the time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created.</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;が作成された時刻のミリ秒部分。</target>
        </trans-unit>
        <trans-unit id="dccbd93c0e8d8f9988adced2fe258f1e1532b0c5" translate="yes" xml:space="preserve">
          <source>MimeTypes Objects</source>
          <target state="translated">MimeTypes オブジェクト</target>
        </trans-unit>
        <trans-unit id="9efbdba622b2dadfd43fa42e2a291351db71d49c" translate="yes" xml:space="preserve">
          <source>Minimal number of days between changes</source>
          <target state="translated">変更間隔の最小日数</target>
        </trans-unit>
        <trans-unit id="10937ed4b37b67fa14b13edd3d7e271abb8fa9aa" translate="yes" xml:space="preserve">
          <source>Minimum field width (optional). If specified as an &lt;code&gt;'*'&lt;/code&gt; (asterisk), the actual width is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the object to convert comes after the minimum field width and optional precision.</source>
          <target state="translated">最小フィールド幅（オプション）。 &lt;code&gt;'*'&lt;/code&gt; （アスタリスク）として指定した場合、実際の幅は&lt;em&gt;values&lt;/em&gt;のタプルの次の要素から読み取られ、変換するオブジェクトは最小フィールド幅とオプションの精度の後に来ます。</target>
        </trans-unit>
        <trans-unit id="b823f84a7a7baed339dafffa8b2988e08ee82d18" translate="yes" xml:space="preserve">
          <source>Minimum key value</source>
          <target state="translated">最小キー値</target>
        </trans-unit>
        <trans-unit id="b9bea4e62057406a848ed5d0422b9238d8ab04ce" translate="yes" xml:space="preserve">
          <source>Minimum size in bytes</source>
          <target state="translated">最小サイズ(バイト数</target>
        </trans-unit>
        <trans-unit id="6506540f28a982451f07fe2b992f3fdcae62b53d" translate="yes" xml:space="preserve">
          <source>Minus corresponds to the unary prefix minus operator in Python.</source>
          <target state="translated">MinusはPythonの単項接頭辞マイナス演算子に相当します。</target>
        </trans-unit>
        <trans-unit id="2b6196c452bc75192cad3b9bbe7b45fccf953c66" translate="yes" xml:space="preserve">
          <source>Minute as a decimal number [00,59].</source>
          <target state="translated">10進数[00,59]での分。</target>
        </trans-unit>
        <trans-unit id="04796ca1f6aacaabf17bb7220586582c19201712" translate="yes" xml:space="preserve">
          <source>Minute as a zero-padded decimal number.</source>
          <target state="translated">分をゼロパッド10進数にしたものです。</target>
        </trans-unit>
        <trans-unit id="092f99ea11a34a8490e7a767a83a42fc45634f82" translate="yes" xml:space="preserve">
          <source>Minutes</source>
          <target state="translated">Minutes</target>
        </trans-unit>
        <trans-unit id="edb2ab561b48557288fb17a60a42f5fe203a8b9c" translate="yes" xml:space="preserve">
          <source>Minutes (zero-based)</source>
          <target state="translated">分(ゼロベース</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="e34e8783c8b5d62f8e56a6c5cad9c3189996ba14" translate="yes" xml:space="preserve">
          <source>Miscellaneous Services</source>
          <target state="translated">その他のサービス</target>
        </trans-unit>
        <trans-unit id="43274253a78afe031d6f6358c749c28e750ad3ba" translate="yes" xml:space="preserve">
          <source>Miscellaneous System Information</source>
          <target state="translated">その他のシステム情報</target>
        </trans-unit>
        <trans-unit id="2cacc40bbba670255923cac65963686bb7f6e8fa" translate="yes" xml:space="preserve">
          <source>Miscellaneous Widgets</source>
          <target state="translated">その他のウィジェット</target>
        </trans-unit>
        <trans-unit id="b80881a19ff8cf751c3f41f6a0bbae4d2fa4b957" translate="yes" xml:space="preserve">
          <source>Miscellaneous methods and attributes:</source>
          <target state="translated">その他の方法と属性。</target>
        </trans-unit>
        <trans-unit id="1be5ce0f6da11db26ce77b075f6f409fed55bed0" translate="yes" xml:space="preserve">
          <source>Mitigating round-off error with increased precision</source>
          <target state="translated">精度を上げて丸め込み誤差を軽減</target>
        </trans-unit>
        <trans-unit id="fbb183ab6d5eb981bdb6b26cfc5bc04b44dbf9ef" translate="yes" xml:space="preserve">
          <source>Mix the given &lt;em&gt;bytes&lt;/em&gt; into the SSL pseudo-random number generator. The parameter &lt;em&gt;entropy&lt;/em&gt; (a float) is a lower bound on the entropy contained in string (so you can always use &lt;code&gt;0.0&lt;/code&gt;). See &lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt; for more information on sources of entropy.</source>
          <target state="translated">指定された&lt;em&gt;バイト&lt;/em&gt;をSSL疑似乱数ジェネレーターに混合し&lt;em&gt;ます&lt;/em&gt;。パラメータ&lt;em&gt;entropy&lt;/em&gt;（float）は、stringに含まれるエントロピーの下限です（したがって、常に &lt;code&gt;0.0&lt;/code&gt; を使用できます）。エントロピーのソースの詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="08cde62b7bf975bbde5b97246a5722dd5b75c745" translate="yes" xml:space="preserve">
          <source>Mixer Device Objects</source>
          <target state="translated">ミキサーデバイスオブジェクト</target>
        </trans-unit>
        <trans-unit id="1cdbdedcba3074069f36e236c409fb7bd1ae38c6" translate="yes" xml:space="preserve">
          <source>Mixin Methods</source>
          <target state="translated">ミキシング方法</target>
        </trans-unit>
        <trans-unit id="9cb6196c924e579cfebfa9d20714ab12efb27976" translate="yes" xml:space="preserve">
          <source>Mixin Methods and Properties</source>
          <target state="translated">ミキシンのメソッドとプロパティ</target>
        </trans-unit>
        <trans-unit id="eff64571433b5d5f6c30bbfd893c2be61001c6a7" translate="yes" xml:space="preserve">
          <source>Mock Patching Methods</source>
          <target state="translated">モックパッチングの方法</target>
        </trans-unit>
        <trans-unit id="a3f6662904906028997ca7c9f0b62eded70f9d87" translate="yes" xml:space="preserve">
          <source>Mock allows you to assign functions (or other Mock instances) to magic methods and they will be called appropriately. The &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class is just a Mock variant that has all of the magic methods pre-created for you (well, all the useful ones anyway).</source>
          <target state="translated">Mockでは、関数（または他のMockインスタンス）を魔法のメソッドに割り当てることができ、それらは適切に呼び出されます。&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; の&lt;/a&gt;クラスは（よくとにかくすべての有用なもの）あなたのための魔法のメソッドのすべてがいる事前に作成しただけでモック変異体です。</target>
        </trans-unit>
        <trans-unit id="cd40a569044d5954e317d074d7665541eb9c7c41" translate="yes" xml:space="preserve">
          <source>Mock for Method Calls on an Object</source>
          <target state="translated">オブジェクトのメソッド呼び出しのモック</target>
        </trans-unit>
        <trans-unit id="ad02912ae468a4be2e695c5d469c4a5f0380c99b" translate="yes" xml:space="preserve">
          <source>Mock has many other ways you can configure it and control its behaviour. For example the &lt;em&gt;spec&lt;/em&gt; argument configures the mock to take its specification from another object. Attempting to access attributes or methods on the mock that don&amp;rsquo;t exist on the spec will fail with an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mockには、それを構成してその動作を制御する方法が他にもたくさんあります。たとえば、&lt;em&gt;spec&lt;/em&gt;引数は、別のオブジェクトから仕様を取得するようにモックを構成します。仕様に存在しないモックの属性またはメソッドにアクセスしようとすると、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="6465c7a575090539f19523ea47c493eba308187f" translate="yes" xml:space="preserve">
          <source>Mock is very easy to use and is designed for use with &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;. Mock is based on the &amp;lsquo;action -&amp;gt; assertion&amp;rsquo; pattern instead of &amp;lsquo;record -&amp;gt; replay&amp;rsquo; used by many mocking frameworks.</source>
          <target state="translated">Mockは非常に使いやすく、&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;で使用するように設計されています。モックは、多くのモックフレームワークで使用されている「記録-&amp;gt;再生」ではなく、「アクション-&amp;gt;アサーション」パターンに基づいています。</target>
        </trans-unit>
        <trans-unit id="a33279ac6a1d4f11a964719fd8b938904220c3f2" translate="yes" xml:space="preserve">
          <source>Mock names and the name attribute</source>
          <target state="translated">モック名とname属性</target>
        </trans-unit>
        <trans-unit id="297d74ca0e3cf788f8845b7bffff3c689ae98bb8" translate="yes" xml:space="preserve">
          <source>Mock objects are callable. The call will return the value set as the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; attribute. The default return value is a new Mock object; it is created the first time the return value is accessed (either explicitly or by calling the Mock) - but it is stored and the same one returned each time.</source>
          <target state="translated">モックオブジェクトは呼び出し可能です。呼び出しは、&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt;属性として設定された値を返します。デフォルトの戻り値は新しいMockオブジェクトです。戻り値が最初にアクセスされたときに（明示的にまたはMockを呼び出すことによって）作成されますが、保存され、毎回同じものが返されます。</target>
        </trans-unit>
        <trans-unit id="f9d9cf297397c83b1c1f81d316fa2ec3e341da36" translate="yes" xml:space="preserve">
          <source>Mock objects create attributes on demand. This allows them to pretend to be objects of any type.</source>
          <target state="translated">モックオブジェクトは、必要に応じて属性を作成します。これにより、任意のタイプのオブジェクトのふりをすることができます。</target>
        </trans-unit>
        <trans-unit id="e775774d5b183cd27cc35f774581d60bd2a447c3" translate="yes" xml:space="preserve">
          <source>Mock objects that use a class or an instance as a &lt;code&gt;spec&lt;/code&gt; or &lt;code&gt;spec_set&lt;/code&gt; are able to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests:</source>
          <target state="translated">クラスまたはインスタンスを &lt;code&gt;spec&lt;/code&gt; または &lt;code&gt;spec_set&lt;/code&gt; として使用するモックオブジェクトは、&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;テストに合格できます。</target>
        </trans-unit>
        <trans-unit id="f9e1deeb7a9ee5f850fe86eecbde6fcdcdde263d" translate="yes" xml:space="preserve">
          <source>Mock subclasses and their attributes</source>
          <target state="translated">モックサブクラスとその属性</target>
        </trans-unit>
        <trans-unit id="7d6354b13984c9353fd8091e3574d84d2ae7bff2" translate="yes" xml:space="preserve">
          <source>Mock supports the mocking of Python &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt;. The easiest way of using magic methods is with the &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class. It allows you to do things like:</source>
          <target state="translated">モックは、Python &lt;a href=&quot;#magic-methods&quot;&gt;マジックメソッドの&lt;/a&gt;モックをサポートしています。マジックメソッドを使用する最も簡単な方法は、&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;クラスを使用することです。次のようなことができます。</target>
        </trans-unit>
        <trans-unit id="442dbf157ba95db3e914bc2e408149e5cd398207" translate="yes" xml:space="preserve">
          <source>Mocking Classes</source>
          <target state="translated">モッキングクラス</target>
        </trans-unit>
        <trans-unit id="9c8d301fe549f44ad1715a27813e8f92b2397116" translate="yes" xml:space="preserve">
          <source>Mocking Magic Methods</source>
          <target state="translated">モッキングマジックの方法</target>
        </trans-unit>
        <trans-unit id="c72f61e205c323791b33c0bccba66e2eb04fbb68" translate="yes" xml:space="preserve">
          <source>Mocking Unbound Methods</source>
          <target state="translated">束縛されていない方法をモックする</target>
        </trans-unit>
        <trans-unit id="c0498faab975f9dec8b132168e6c508f7f74f956" translate="yes" xml:space="preserve">
          <source>Mocking a Generator Method</source>
          <target state="translated">ジェネレーターの方法をコケにする</target>
        </trans-unit>
        <trans-unit id="631d0520a6e791d2c5663b5421225becab5962da" translate="yes" xml:space="preserve">
          <source>Mocking a dictionary with MagicMock</source>
          <target state="translated">MagicMockで辞書をあざ笑う</target>
        </trans-unit>
        <trans-unit id="a35b06a5a88f1663407e0afcc28d593f48d020de" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous context manager</source>
          <target state="translated">非同期コンテキストマネージャをモックする</target>
        </trans-unit>
        <trans-unit id="9a90be214817c7625129004dae96c161fa6d1b8f" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous iterators</source>
          <target state="translated">非同期イテレータのモッキング</target>
        </trans-unit>
        <trans-unit id="21c9b59bfaaa2939d61edf0de7e54d2b77191fcb" translate="yes" xml:space="preserve">
          <source>Mocking chained calls</source>
          <target state="translated">モッキングチェーンコール</target>
        </trans-unit>
        <trans-unit id="077151c5dfce974cc6f624aaa441016501984bcd" translate="yes" xml:space="preserve">
          <source>Mocking context managers with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; is common enough and fiddly enough that a helper function is useful.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; で&lt;/a&gt;コンテキストマネージャーをモックすることは、ヘルパー関数が役立つほど一般的であり、手間がかかります。</target>
        </trans-unit>
        <trans-unit id="7c7ee5cc465310c6d4c3ad7b378ba9b12a5a62d8" translate="yes" xml:space="preserve">
          <source>Mocking imports with patch.dict</source>
          <target state="translated">patch.dict でインポートをモックする</target>
        </trans-unit>
        <trans-unit id="365779533ffb4a7f946eeb0ebce48c8d4a000a5b" translate="yes" xml:space="preserve">
          <source>Mocks can also be called with arbitrary keyword arguments. These will be used to set attributes on the mock after it is created. See the &lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">モックは、任意のキーワード引数で呼び出すこともできます。これらは、モックの作成後にモックの属性を設定するために使用されます。詳細については、&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt; &lt;code&gt;configure_mock()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="2cbdd4fc62fd73dd9af51cb0370400f47d6de4ca" translate="yes" xml:space="preserve">
          <source>Mocks created for you by &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; are automatically given names. To attach mocks that have names to a parent you use the &lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt;&lt;code&gt;attach_mock()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;によって作成されたモックには、自動的に名前が付けられます。名前を持つモックを親にアタッチするには、&lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt; &lt;code&gt;attach_mock()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="de84d7a663bae517f4b489470b51febd30e66c30" translate="yes" xml:space="preserve">
          <source>Mode &amp;ldquo;standard&amp;rdquo; is compatible with old &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt;. Mode &amp;ldquo;logo&amp;rdquo; is compatible with most Logo turtle graphics. Mode &amp;ldquo;world&amp;rdquo; uses user-defined &amp;ldquo;world coordinates&amp;rdquo;. &lt;strong&gt;Attention&lt;/strong&gt;: in this mode angles appear distorted if &lt;code&gt;x/y&lt;/code&gt; unit-ratio doesn&amp;rsquo;t equal 1.</source>
          <target state="translated">モード「標準」は古い&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;と互換性があります。モード「ロゴ」は、ほとんどのロゴカメグラフィックと互換性があります。モード「ワールド」は、ユーザー定義の「ワールド座標」を使用します。&lt;strong&gt;注意&lt;/strong&gt;：このモードでは、 &lt;code&gt;x/y&lt;/code&gt; 単位比が1に等しくない場合、角度が歪んで表示されます。</target>
        </trans-unit>
        <trans-unit id="92d399cc66de7cf367f31ade723cb8b6691c5bdf" translate="yes" xml:space="preserve">
          <source>Models which represent a series of models which follow one after the other are indicated with this model type. This is used for models such as &lt;code&gt;(A, B, C)&lt;/code&gt;.</source>
          <target state="translated">次々と続く一連のモデルを表すモデルは、このモデルタイプで示されます。これは &lt;code&gt;(A, B, C)&lt;/code&gt; などのモデルに使用されます。</target>
        </trans-unit>
        <trans-unit id="59ce22dee5a92a32f030e3b34445688bcbabd4d7" translate="yes" xml:space="preserve">
          <source>Modern Tkinter for Busy Python Developers</source>
          <target state="translated">忙しいPython開発者のためのモダンなTkinter</target>
        </trans-unit>
        <trans-unit id="59eeb274f6d5a5d8796b7fb0f22a558b81af0ba0" translate="yes" xml:space="preserve">
          <source>Modern macOS versions are fully supported.</source>
          <target state="translated">最近のmacOSのバージョンは完全にサポートされています。</target>
        </trans-unit>
        <trans-unit id="77c81a24b3232f4341cb83b7f39ce945fe4ff3fb" translate="yes" xml:space="preserve">
          <source>Modified by the user</source>
          <target state="translated">ユーザーによって変更された</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="32cd9ef050293cc9b2ea16140453d0cb9eba9e0e" translate="yes" xml:space="preserve">
          <source>Modifies an already registered fd. This has the same effect as &lt;code&gt;register(fd, eventmask)&lt;/code&gt;. Attempting to modify a file descriptor that was never registered causes an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception with errno &lt;code&gt;ENOENT&lt;/code&gt; to be raised.</source>
          <target state="translated">すでに登録されているfdを変更します。これは、 &lt;code&gt;register(fd, eventmask)&lt;/code&gt; と同じ効果があります。登録されたことのないファイル記述子を変更しようとすると、errno &lt;code&gt;ENOENT&lt;/code&gt; の&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="6cc4f46aa243a25741c6b3f64809ea24113b97cc" translate="yes" xml:space="preserve">
          <source>Modifies the message and/or keyword arguments passed to a logging call in order to insert contextual information. This implementation takes the object passed as &lt;em&gt;extra&lt;/em&gt; to the constructor and adds it to &lt;em&gt;kwargs&lt;/em&gt; using key &amp;lsquo;extra&amp;rsquo;. The return value is a (&lt;em&gt;msg&lt;/em&gt;, &lt;em&gt;kwargs&lt;/em&gt;) tuple which has the (possibly modified) versions of the arguments passed in.</source>
          <target state="translated">コンテキスト情報を挿入するために、ロギング呼び出しに渡されるメッセージおよび/またはキーワード引数を変更します。この実装は、コンストラクターに&lt;em&gt;エクストラ&lt;/em&gt;として渡されたオブジェクトを&lt;em&gt;取得&lt;/em&gt;し、キー 'extra'を使用して&lt;em&gt;kwargsに&lt;/em&gt;追加します。戻り値は、渡された引数の（変更された可能性がある）バージョンを持つ（&lt;em&gt;msg&lt;/em&gt;、&lt;em&gt;kwargs&lt;/em&gt;）タプルです。</target>
        </trans-unit>
        <trans-unit id="32de46524638c4aca576e999a7d9c22055939413" translate="yes" xml:space="preserve">
          <source>Modify a registered file descriptor.</source>
          <target state="translated">登録されているファイルディスクリプタを変更します。</target>
        </trans-unit>
        <trans-unit id="3fd4218c1234d8d4fd1679ae718d689ef01b2df1" translate="yes" xml:space="preserve">
          <source>Modify attributes of the font.</source>
          <target state="translated">フォントの属性を変更します。</target>
        </trans-unit>
        <trans-unit id="4578c669df0697b22dfd8c519fd4e58ce7cdd60a" translate="yes" xml:space="preserve">
          <source>Modify or inquire widget state. If &lt;em&gt;statespec&lt;/em&gt; is specified, sets the widget state according to it and return a new &lt;em&gt;statespec&lt;/em&gt; indicating which flags were changed. If &lt;em&gt;statespec&lt;/em&gt; is not specified, returns the currently-enabled state flags.</source>
          <target state="translated">ウィジェットの状態を変更または照会します。&lt;em&gt;statespec&lt;/em&gt;が指定されている場合、それに応じてウィジェットの状態を設定し、変更されたフラグを示す新しい&lt;em&gt;statespec&lt;/em&gt;を返します。&lt;em&gt;statespec&lt;/em&gt;が指定されていない場合、現在有効な状態フラグを返します。</target>
        </trans-unit>
        <trans-unit id="0e86176ca1442040dd82f620317ec50cbc92d6c8" translate="yes" xml:space="preserve">
          <source>Modify the filename of a log file when rotating.</source>
          <target state="translated">回転時のログファイルのファイル名を変更します。</target>
        </trans-unit>
        <trans-unit id="bf1c865f30cbb3976816405737bd964fbc2fa0de" translate="yes" xml:space="preserve">
          <source>Modify the view, by calling &lt;code&gt;MsiViewModify()&lt;/code&gt;. &lt;em&gt;kind&lt;/em&gt; can be one of &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt;, &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt;, or &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MsiViewModify()&lt;/code&gt; を呼び出して、ビューを変更します。&lt;em&gt;種類は、&lt;/em&gt;のいずれかになります &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt; 、 &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt; 、または &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf8f52d6faa8b1275eba9c831dbbef1ed90879cc" translate="yes" xml:space="preserve">
          <source>Modifying an XML File</source>
          <target state="translated">XML ファイルの修正</target>
        </trans-unit>
        <trans-unit id="84c3d768a8d5770c62abdea208959d6592bb41c2" translate="yes" xml:space="preserve">
          <source>Modifying this dictionary does not affect the string environment passed on by &lt;a href=&quot;os#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt;; if you need to change the environment, pass &lt;code&gt;environ&lt;/code&gt; to &lt;a href=&quot;os#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt; or add variable assignments and export statements to the command string for &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この辞書を変更しても、&lt;a href=&quot;os#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;によって渡される文字列環境には影響しません。環境を変更する必要がある場合は、 &lt;code&gt;environ&lt;/code&gt; を&lt;a href=&quot;os#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; に&lt;/a&gt;渡すか、変数割り当てとエクスポートステートメントを&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;のコマンド文字列に追加します。</target>
        </trans-unit>
        <trans-unit id="978b5a43a650471c75f8350ef7774ba329f2f3fe" translate="yes" xml:space="preserve">
          <source>Module (name portion of &lt;code&gt;filename&lt;/code&gt;).</source>
          <target state="translated">モジュール（ &lt;code&gt;filename&lt;/code&gt; の名前部分）。</target>
        </trans-unit>
        <trans-unit id="b4a2aa27448f7d0da42e7887a48a75e0b25fb6eb" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;#module-aifc&quot;&gt;&lt;code&gt;aifc&lt;/code&gt;&lt;/a&gt; defines the following function:</source>
          <target state="translated">モジュール&lt;a href=&quot;#module-aifc&quot;&gt; &lt;code&gt;aifc&lt;/code&gt; &lt;/a&gt;は以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="2e90a7416ba8632b458a1755a2a52518580a6402" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; This describes how to use .pth files to extend &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュール&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;これは拡張し.pthファイルを使用する方法について説明&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">モジュールAPI</target>
        </trans-unit>
        <trans-unit id="9c3f2aba6913de8da00faed8e2df2428bb1257b7" translate="yes" xml:space="preserve">
          <source>Module Attributes</source>
          <target state="translated">モジュール属性</target>
        </trans-unit>
        <trans-unit id="d4c1069b1d33fd7a5bbcf140560e3a8a4cc1d1fd" translate="yes" xml:space="preserve">
          <source>Module Contents</source>
          <target state="translated">モジュールの内容</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">モジュール機能</target>
        </trans-unit>
        <trans-unit id="34bdda02dde5bc12bbc7235959c04177e16c821e" translate="yes" xml:space="preserve">
          <source>Module Interface</source>
          <target state="translated">モジュールインタフェース</target>
        </trans-unit>
        <trans-unit id="92fdd8d530e964e456294b900fa883ff826caa46" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;deprecated&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このインポート中、モジュールとパッケージの非推奨メッセージは抑制されます。</target>
        </trans-unit>
        <trans-unit id="37e90fc9b9d2ea5592629e3ac0763109ff09df33" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;. If a module is required on a platform but optional for others, set &lt;em&gt;required_on&lt;/em&gt; to an iterable of platform prefixes which will be compared against &lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;deprecated&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このインポート中、モジュールとパッケージの非推奨メッセージは抑制されます。モジュールがプラットフォームで必要であるが他のプラットフォームではオプションである場合、&lt;em&gt;required_on&lt;/em&gt;を&lt;a href=&quot;sys#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt;と比較されるプラットフォームの接頭辞の反復可能に設定します。</target>
        </trans-unit>
        <trans-unit id="8fb52752185bff1afa3095dd1ee054b10a8741dd" translate="yes" xml:space="preserve">
          <source>Module contents</source>
          <target state="translated">モジュールの内容</target>
        </trans-unit>
        <trans-unit id="92e9d0a965eb0a3f69212e87aeb376c3817bace5" translate="yes" xml:space="preserve">
          <source>Module docs for core modules are assumed to reside in &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; are the major and minor version numbers of the Python interpreter. This can be overridden by setting the &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; environment variable to a different URL or to a local directory containing the Library Reference Manual pages.</source>
          <target state="translated">コアモジュールのモジュールドキュメントは、 &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; あると想定されています &lt;code&gt;X&lt;/code&gt; と &lt;code&gt;Y&lt;/code&gt; は、Pythonインタープリターのメジャーバージョン番号とマイナーバージョン番号です。これは、 &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; 環境変数を別のURLまたはライブラリリファレンスマニュアルページを含むローカルディレクトリに設定することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="1ef1dd98e4cfd7a9708f2569eff22f5637fb8bc6" translate="yes" xml:space="preserve">
          <source>Module functions and constants</source>
          <target state="translated">モジュールの関数と定数</target>
        </trans-unit>
        <trans-unit id="9ef7884387f3e4f0b36275d92cdf793323d304a1" translate="yes" xml:space="preserve">
          <source>Module which provides function to parse and escape command lines.</source>
          <target state="translated">コマンドラインを解析したり、エスケープしたりする機能を提供するモジュールです。</target>
        </trans-unit>
        <trans-unit id="c383a8897cd1716700d1c6ce4d55ad2fcebbab29" translate="yes" xml:space="preserve">
          <source>Module-Level Attributes</source>
          <target state="translated">モジュールレベルの属性</target>
        </trans-unit>
        <trans-unit id="f6833370d46becabc41cf08b0e482dee5c655b31" translate="yes" xml:space="preserve">
          <source>Module-Level Functions</source>
          <target state="translated">モジュールレベルの機能</target>
        </trans-unit>
        <trans-unit id="72f4be7481838d35b49b8de2e9a7fee6249d8e61" translate="yes" xml:space="preserve">
          <source>Module-level decorators, classes, and functions</source>
          <target state="translated">モジュールレベルのデコレータ、クラス、関数</target>
        </trans-unit>
        <trans-unit id="0912cb95ac0d180a81219825c72ec9eb605ea300" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.application&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.application&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb79c7e1617398068225f2820c0c3459cc440e65" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.audio&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.audio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94725cd99078c801f5574ad6d6ea78ee9a024ea3" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.base&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ea4be398009cc8d6de590b862d7f3009c1b810f" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.image&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93b775199744840d67da16eb9ccb4cd9bbae2050" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.message&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.message&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="441e7562ed5fe7a1630841c1a22bdc73a4f3d757" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.multipart&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.multipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d510569ecc8d71a91a86a65c09928a0f4ef8f5d5" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127f26a281cad66280273f6515132d982225e9cf" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.text&lt;/code&gt;</source>
          <target state="translated">モジュール： &lt;code&gt;email.mime.text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dc7c7ee2e220614ae05c4256b05b12812ad8cf9" translate="yes" xml:space="preserve">
          <source>ModuleNotFoundError</source>
          <target state="translated">ModuleNotFoundError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="7ce8b9ff9d2e4b6f5530707c5224f523b8323151" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt;&lt;code&gt;tkinter.messagebox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt;</source>
          <target state="translated">Modules &lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt; &lt;code&gt;tkinter.messagebox&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e118e0912a01f24a429ac2012ae97cc544249d59" translate="yes" xml:space="preserve">
          <source>Modules built into the interpreter are written like this: &lt;code&gt;&amp;lt;module 'sys'
(built-in)&amp;gt;&lt;/code&gt;. If loaded from a file, they are written as &lt;code&gt;&amp;lt;module 'os' from
'/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">インタープリターに組み込まれているモジュールは、 &lt;code&gt;&amp;lt;module 'sys' (built-in)&amp;gt;&lt;/code&gt; ように記述されています。ファイルからロードされた場合、それらは &lt;code&gt;&amp;lt;module 'os' from '/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt; として書き込まれます。</target>
        </trans-unit>
        <trans-unit id="1911b7883b819819b6db37c8e8e2824d20e1cc32" translate="yes" xml:space="preserve">
          <source>Modules or packages can customize how tests are loaded from them during normal test runs or test discovery by implementing a function called &lt;code&gt;load_tests&lt;/code&gt;.</source>
          <target state="translated">モジュールまたはパッケージは、 &lt;code&gt;load_tests&lt;/code&gt; と呼ばれる関数を実装することにより、通常のテスト実行またはテストディスカバリ中にそれらからテストをロードする方法をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="87a40520b4026078c79efca77f06437b79124739" translate="yes" xml:space="preserve">
          <source>Modulo</source>
          <target state="translated">Modulo</target>
        </trans-unit>
        <trans-unit id="5d0d78dc5224fd4f6862f5f7a9fb54a486fd390b" translate="yes" xml:space="preserve">
          <source>Monitor for completion with a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ループで完了を監視します。</target>
        </trans-unit>
        <trans-unit id="ed5abdf1184868f05915cfc662a0097b73af5db0" translate="yes" xml:space="preserve">
          <source>Monitor for completion.</source>
          <target state="translated">完成度を監視する。</target>
        </trans-unit>
        <trans-unit id="496c793822576e70e527412a984554382d2aebe7" translate="yes" xml:space="preserve">
          <source>Month (one-based)</source>
          <target state="translated">月(ワンベース</target>
        </trans-unit>
        <trans-unit id="742b33d400ddeeabce686bc1c2413ddb0c448e2a" translate="yes" xml:space="preserve">
          <source>Month as a decimal number [01,12].</source>
          <target state="translated">月を10進数で表す [01,12]。</target>
        </trans-unit>
        <trans-unit id="f2ebd646406d99068e09d2f4e14fbbffed228a7d" translate="yes" xml:space="preserve">
          <source>Month as a zero-padded decimal number.</source>
          <target state="translated">月をゼロパッド10進数にしたもの。</target>
        </trans-unit>
        <trans-unit id="4b69dcb0d93760210c273e2a1abcde796903be87" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s abbreviated name.</source>
          <target state="translated">ロケールの省略名としての月。</target>
        </trans-unit>
        <trans-unit id="fea5423e8f5a25290885c0d0e12a775f3fd61281" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s full name.</source>
          <target state="translated">ロケールのフルネームとしての月。</target>
        </trans-unit>
        <trans-unit id="e202399e2af6ae3d8e2fdbf89c95c2518eee70d8" translate="yes" xml:space="preserve">
          <source>More advanced customization may be achieved by overriding default values of these parser attributes. The defaults are defined on the classes, so they may be overridden by subclasses or by attribute assignment.</source>
          <target state="translated">これらのパーサ属性のデフォルト値をオーバーライドすることで、より高度なカスタマイズが可能になります。デフォルト値はクラスで定義されているので、サブクラスや属性の割り当てによってオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="76f2ac8fa6191d0a7752f0403130e23050b322b6" translate="yes" xml:space="preserve">
          <source>More complex argument matching</source>
          <target state="translated">より複雑な引数マッチング</target>
        </trans-unit>
        <trans-unit id="a4edbe5aa58310b4837dc402b6725527f1000abe" translate="yes" xml:space="preserve">
          <source>More condensed:</source>
          <target state="translated">もっと凝縮されている。</target>
        </trans-unit>
        <trans-unit id="af27293770923a34ccc5524c23d8989922e0488b" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;hexversion&lt;/code&gt; の詳細については、&lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;APIおよびABIバージョン管理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bea97050a9753fa861ba82b70cd980e773dd094e" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="35c58ae0fd8a7e1329fa05386d5d2de6a083afbd" translate="yes" xml:space="preserve">
          <source>More drawing control</source>
          <target state="translated">より多くの描画制御</target>
        </trans-unit>
        <trans-unit id="f73f1a20168b82e8d86b3b46baab234a74659e99" translate="yes" xml:space="preserve">
          <source>More examples of working with &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;その他の例：</target>
        </trans-unit>
        <trans-unit id="bda595d7c3822cdddfd4e7f95e4ba1fe77eef18d" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">色空間の詳細については、&lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http：//poynton.ca/ColorFAQ.html&lt;/a&gt;および&lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htmを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebd0327ac3aa99b06dcfeba3d93e47172fbb094e" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;https://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">More information about color spaces can be found at &lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;https://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1cf8e91c8e08ed18b8e45a5ac7ba72687719075d" translate="yes" xml:space="preserve">
          <source>More information about this feature, including a list of recognized options, can be found in the &lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URI documentation&lt;/a&gt;.</source>
          <target state="translated">認識されるオプションのリストなど、この機能の詳細については、&lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URIのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="7f7f884738e96b308c393050b48c8b8755a6d24c" translate="yes" xml:space="preserve">
          <source>More object-oriented interface to dates and times.</source>
          <target state="translated">日付や時刻をよりオブジェクト指向のインターフェイスに。</target>
        </trans-unit>
        <trans-unit id="b4302b5e109b770c6a0ea76fbd2882a8bc6db8b6" translate="yes" xml:space="preserve">
          <source>More picklability</source>
          <target state="translated">より多くの酸洗性</target>
        </trans-unit>
        <trans-unit id="0d62cf081bc641ff89c8b59069e0d5d811e8757a" translate="yes" xml:space="preserve">
          <source>More precisely, if &lt;code&gt;x&lt;/code&gt; is nonzero, then &lt;code&gt;x.bit_length()&lt;/code&gt; is the unique positive integer &lt;code&gt;k&lt;/code&gt; such that &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt;. Equivalently, when &lt;code&gt;abs(x)&lt;/code&gt; is small enough to have a correctly rounded logarithm, then &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is zero, then &lt;code&gt;x.bit_length()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合は、より正確には、 &lt;code&gt;x&lt;/code&gt; がゼロで、次いで &lt;code&gt;x.bit_length()&lt;/code&gt; は、ユニークな正の整数であり、 &lt;code&gt;k&lt;/code&gt; のように &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt; 。同様に、 &lt;code&gt;abs(x)&lt;/code&gt; が正しく丸められた対数を持つほど小さい場合、 &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt; ます。場合 &lt;code&gt;x&lt;/code&gt; ゼロであり、その後 &lt;code&gt;x.bit_length()&lt;/code&gt; を返す &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ced1f1a5abe7721a13a8ffbf16d63ff492b8f140" translate="yes" xml:space="preserve">
          <source>More precisely, the expression &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; is always true at runtime.</source>
          <target state="translated">より正確には、式 &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; は実行時に常にtrueです。</target>
        </trans-unit>
        <trans-unit id="afcfcf646cf0d59e75aa3efa0a7dca7907775b81" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">より洗練されたコンテキストマネージャは「再入可能」かもしれません。これらのコンテキストマネージャーは、複数の&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用できるだけでなく、すでに同じコンテキストマネージャーを使用し&lt;em&gt;て&lt;/em&gt;いる &lt;code&gt;with&lt;/code&gt; ステートメント&lt;em&gt;内で&lt;/em&gt;も使用&lt;em&gt;でき&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="05a30554854e73f54c7ece4a3f1e002fd46afc4d" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</target>
        </trans-unit>
        <trans-unit id="bec52d0bf3df1fe2b7028c4e46728b05b6585a7b" translate="yes" xml:space="preserve">
          <source>More sophisticated specification of which elements to look for is possible by using &lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt;を使用することで、検索する要素のより高度な指定が可能です。</target>
        </trans-unit>
        <trans-unit id="44cce591f12835a93d72e2725773defea428923d" translate="yes" xml:space="preserve">
          <source>Moreover, by subclassing a special class &lt;a href=&quot;#typing.Protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt;, a user can define new custom protocols to fully enjoy structural subtyping (see examples below).</source>
          <target state="translated">さらに、特別なクラス&lt;a href=&quot;#typing.Protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; を&lt;/a&gt;サブクラス化することにより、ユーザーは新しいカスタムプロトコルを定義して、構造的なサブタイピングを完全に楽しむことができます（以下の例を参照）。</target>
        </trans-unit>
        <trans-unit id="c7c6427f00dc397938f8e9415a2f590774699402" translate="yes" xml:space="preserve">
          <source>Moreover, if you output the 0&amp;rsquo;th item on disk and get an input which may not fit in the current tournament (because the value &amp;ldquo;wins&amp;rdquo; over the last output value), it cannot fit in the heap, so the size of the heap decreases. The freed memory could be cleverly reused immediately for progressively building a second heap, which grows at exactly the same rate the first heap is melting. When the first heap completely vanishes, you switch heaps and start a new run. Clever and quite effective!</source>
          <target state="translated">さらに、ディスク上の0番目のアイテムを出力し、現在のトーナメントに収まらない可能性がある入力を取得した場合（値が最後の出力値よりも「勝つ」ため）、ヒープに収まらないため、ヒープが減少します。解放されたメモリは、2番目のヒープを徐々に構築するためにすぐに再利用できます。2番目のヒープは、最初のヒープが溶けているのとまったく同じ速度で成長します。最初のヒープが完全に消えたら、ヒープを切り替えて新しい実行を開始します。賢くて非常に効果的です！</target>
        </trans-unit>
        <trans-unit id="223a97db4a13581b9f40926ba9bf06631a533426" translate="yes" xml:space="preserve">
          <source>Morsel Objects</source>
          <target state="translated">モーゼルオブジェクト</target>
        </trans-unit>
        <trans-unit id="aab9d541f9999319a8925c74373dfaf9120edff4" translate="yes" xml:space="preserve">
          <source>Morsels are dictionary-like objects, whose set of keys is constant &amp;mdash; the valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes, which are</source>
          <target state="translated">モーセルは辞書のようなオブジェクトであり、そのキーのセットは一定です&amp;mdash;有効な&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性は、</target>
        </trans-unit>
        <trans-unit id="12e365ba43d20a735f475457d6d67ad170f2ddc0" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; actions add some value as an attribute of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. The name of this attribute is determined by the &lt;code&gt;dest&lt;/code&gt; keyword argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;. For positional argument actions, &lt;code&gt;dest&lt;/code&gt; is normally supplied as the first argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ほとんどの&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;アクションは、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトの属性としていくつかの値を追加します。この属性の名前は、&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dest&lt;/code&gt; キーワード引数によって決定されます。位置引数アクションの場合、通常、 &lt;code&gt;dest&lt;/code&gt; は&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; の&lt;/a&gt;最初の引数として提供されます。</target>
        </trans-unit>
        <trans-unit id="0b8a1ba8e18b5f5019a5d4312dc314b8b2c9954f" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclasses should be able to inherit the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation without problems. It&amp;rsquo;s strong enough to handle fixed-offset time zones, and time zones accounting for both standard and daylight time, and the latter even if the DST transition times differ in different years. An example of a time zone the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation may not handle correctly in all cases is one where the standard offset (from UTC) depends on the specific date and time passed, which can happen for political reasons. The default implementations of &lt;code&gt;astimezone()&lt;/code&gt; and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; may not produce the result you want if the result is one of the hours straddling the moment the standard offset changes.</source>
          <target state="translated">ほとんどの&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスは、デフォルトの&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;実装を問題なく継承できるはずです。これは、固定オフセットのタイムゾーン、および標準時間と夏時間の両方に対応するタイムゾーンを処理するのに十分な強さであり、夏時間の移行時間が異なる年でも異なる場合でも後者に​​なります。デフォルトの&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;実装がすべてのケースで正しく処理できないタイムゾーンの例は、（UTCからの）標準オフセットが、渡された特定の日時に依存する場合です。これは、政治的な理由で発生する可能性があります。 &lt;code&gt;astimezone()&lt;/code&gt; と&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;のデフォルトの実装では、標準オフセットが変化する瞬間にまたがる時間の1つである場合、期待する結果が得られない場合があります。</target>
        </trans-unit>
        <trans-unit id="fa3c05e44820db4266ade0ef0b637c16f15b20d4" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; methods will raise either &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; if an I/O operation would block. &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; will be raised if a read operation on the underlying socket is necessary, and &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; for a write operation on the underlying socket. Note that attempts to &lt;em&gt;write&lt;/em&gt; to an SSL socket may require &lt;em&gt;reading&lt;/em&gt; from the underlying socket first, and attempts to &lt;em&gt;read&lt;/em&gt; from the SSL socket may require a prior &lt;em&gt;write&lt;/em&gt; to the underlying socket.</source>
          <target state="translated">ほとんどの&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;メソッドは、I / O操作がブロックした場合、&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; の&lt;/a&gt;いずれかを発生させます。基礎となるソケットでの読み取り操作が必要な場合は&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;が発生し、基礎となるソケットでの書き込み操作には&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; が発生&lt;/a&gt;します。しようとするノート&lt;em&gt;ライト&lt;/em&gt; SSLソケットには、必要とするかもしれない&lt;em&gt;読ん&lt;/em&gt;第1の下地ソケットから、とする試み&lt;em&gt;読み取る&lt;/em&gt; SSLソケットからは、従来必要とし得る&lt;em&gt;書き込み&lt;/em&gt;下層のソケットにあります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd522bac8b9e11ce49eeb2583e8f07839a03488c" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; scheduling functions don&amp;rsquo;t allow passing keyword arguments. To do that, use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ほとんどの&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;スケジューリング関数では、キーワード引数を渡すことができません。これを行うには、&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="bd51bb63feffbfa7148f18472384cc0b94c13ee7" translate="yes" xml:space="preserve">
          <source>Most HTTP servers buffer the output from CGI scripts until the script is completed. This means that it is not possible to display a progress report on the client&amp;rsquo;s display while the script is running.</source>
          <target state="translated">ほとんどのHTTPサーバーは、CGIスクリプトからの出力を、スクリプトが完了するまでバッファリングします。つまり、スクリプトの実行中は、クライアントのディスプレイに進捗レポートを表示することはできません。</target>
        </trans-unit>
        <trans-unit id="89262a759f5c4450ccbba1d7e972a20eb9d6f62d" translate="yes" xml:space="preserve">
          <source>Most Python users will &lt;em&gt;not&lt;/em&gt; want to use this module directly, but instead use the cross-version tools maintained by the Python Packaging Authority. In particular, &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt; is an enhanced alternative to &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; that provides:</source>
          <target state="translated">ほとんどのPythonユーザーはなり&lt;em&gt;ません&lt;/em&gt;、直接このモジュールを使用するが、代わりにPythonのパッケージング機関によって維持され、クロスバージョンのツールを使用します。特に、&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt;は、以下を提供する&lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; の&lt;/a&gt;拡張版です。</target>
        </trans-unit>
        <trans-unit id="b4ff9c4f943c838658554972d2715c1911832530" translate="yes" xml:space="preserve">
          <source>Most built-in types implement the following options for format specifications, although some of the formatting options are only supported by the numeric types.</source>
          <target state="translated">ほとんどの組み込み型は、書式指定のための以下のオプションを実装していますが、いくつかの書式オプションは数値型でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="4671a5faa2bb50d6521e2b74a0ac603b3e8ea2c0" translate="yes" xml:space="preserve">
          <source>Most built-in types support a common formatting mini-language, which is described in the next section.</source>
          <target state="translated">ほとんどの組み込み型は、次のセクションで説明する共通の書式設定ミニ言語をサポートしています。</target>
        </trans-unit>
        <trans-unit id="9f333f2038f1ecde46179e5361647a36ea955c1a" translate="yes" xml:space="preserve">
          <source>Most calls to the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor will use the &lt;code&gt;description=&lt;/code&gt; keyword argument. This argument gives a brief description of what the program does and how it works. In help messages, the description is displayed between the command-line usage string and the help messages for the various arguments:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;コンストラクターへのほとんどの呼び出しは、 &lt;code&gt;description=&lt;/code&gt; キーワード引数を使用します。この引数は、プログラムの機能と動作の簡単な説明を提供します。ヘルプメッセージでは、コマンドラインの使用方法の文字列とさまざまな引数のヘルプメッセージの間に説明が表示されます。</target>
        </trans-unit>
        <trans-unit id="d721b333c77edec8818b7d94960eeed847aceea5" translate="yes" xml:space="preserve">
          <source>Most command-line options will use &lt;code&gt;-&lt;/code&gt; as the prefix, e.g. &lt;code&gt;-f/--foo&lt;/code&gt;. Parsers that need to support different or additional prefix characters, e.g. for options like &lt;code&gt;+f&lt;/code&gt; or &lt;code&gt;/foo&lt;/code&gt;, may specify them using the &lt;code&gt;prefix_chars=&lt;/code&gt; argument to the ArgumentParser constructor:</source>
          <target state="translated">ほとんどのコマンドラインオプションは、接頭辞として &lt;code&gt;-&lt;/code&gt; を使用します（例： &lt;code&gt;-f/--foo&lt;/code&gt; 。 &lt;code&gt;+f&lt;/code&gt; や &lt;code&gt;/foo&lt;/code&gt; などのオプションの場合、異なるまたは追加のプレフィックス文字をサポートする必要があるパーサーは、ArgumentParserコンストラクターの &lt;code&gt;prefix_chars=&lt;/code&gt; 引数を使用してそれらを指定できます。</target>
        </trans-unit>
        <trans-unit id="8c59d2f4304b47bbe5f9025fc2719f37eb21fc59" translate="yes" xml:space="preserve">
          <source>Most commands are available as &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; classes. Change &amp;lsquo;8.6&amp;rsquo; to match the version of your Tcl/Tk installation.</source>
          <target state="translated">ほとんどのコマンドはとして用意されてい&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;クラス。 Tcl / Tkインストールのバージョンと一致するように「8.6」を変更します。</target>
        </trans-unit>
        <trans-unit id="09e1be6a3a08fdd80447facaa6e35fc4dcf067a7" translate="yes" xml:space="preserve">
          <source>Most configuration options apply to all windows or all future windows. The option items below only apply to the active window.</source>
          <target state="translated">ほとんどの設定オプションは、すべてのウィンドウまたは将来のすべてのウィンドウに適用されます。以下のオプション項目は、アクティブなウィンドウにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="5d738b94492588389087414a01d9272752be1e6c" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">ほとんどのコンテキストマネージャは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで1回だけ有効に使用できるように記述されています。これらの使い捨てコンテキストマネージャーは、使用するたびに新しく作成する必要があります。2回目に使用しようとすると、例外がトリガーされるか、正しく機能しません。</target>
        </trans-unit>
        <trans-unit id="23350a9beba010cf4d08f3543501ebbc29d7d449" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</target>
        </trans-unit>
        <trans-unit id="acd4fa21da07450f40a52f6949201b55436a1a6a" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; の&lt;/a&gt;ほとんどの実装は、おそらく次の2つのいずれかのようになります。</target>
        </trans-unit>
        <trans-unit id="aea2023d714ec31a854470fd3ecf8d9355c053c4" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">最も重要なのは、内部パーサーによって処理されるPython文法をよく理解することです。言語構文の詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;Python言語リファレンスを参照してください&lt;/a&gt;。パーサー自体は、標準のPythonディストリビューションの &lt;code&gt;Grammar/Grammar&lt;/code&gt; ファイルで定義されている文法仕様から作成されます。このモジュールによって作成されたSTオブジェクトに格納された解析ツリーは、以下に説明する&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;関数によって作成されたときの内部パーサーからの実際の出力です。&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;によって作成されたSTオブジェクトそれらの構造を忠実にシミュレートします。 「正しい」と見なされるシーケンスの値は、言語の正式な文法が改訂されるため、Pythonのバージョンによって異なることに注意してください。ただし、コードを1つのPythonバージョンから別のバージョンにソーステキストとして転送すると、常にターゲットバージョンで正しい解析ツリーを作成できます。唯一の制限は、古いバージョンのインタープリターに移行すると、より新しい言語構成がサポートされないことです。パースツリーは通常、あるバージョンから別のバージョンに互換性がありませんが、ソースコードは通常、メジャーリリースシリーズ内で上位互換性があります。</target>
        </trans-unit>
        <trans-unit id="9a4d8998d8b1d8d4c5a06a28620ed45ee9d8c662" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</target>
        </trans-unit>
        <trans-unit id="91b41d0992c76daa7e6ce1cb34f492287f10c4f0" translate="yes" xml:space="preserve">
          <source>Most locales do not define this value. An example of a locale which does define this value is the Japanese one. In Japan, the traditional representation of dates includes the name of the era corresponding to the then-emperor&amp;rsquo;s reign.</source>
          <target state="translated">ほとんどのロケールはこの値を定義していません。この値を定義するロケールの例は、日本語のロケールです。日本では、日付の伝統的な表現には、当時の天皇の治世に対応する時代の名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="7e2559cd2f7c66c93f9db240a7fc5efb17e9d6cc" translate="yes" xml:space="preserve">
          <source>Most messages with a content type of &lt;em&gt;message/*&lt;/em&gt; (such as &lt;em&gt;message/delivery-status&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt;) will also be parsed as container object containing a list payload of length 1. Their &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method will return &lt;code&gt;True&lt;/code&gt;. The single element yielded by &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will be a sub-message object.</source>
          <target state="translated">コンテンツタイプが&lt;em&gt;message / *の&lt;/em&gt;ほとんどのメッセージ（&lt;em&gt;message / delivery-status&lt;/em&gt;や&lt;em&gt;message / rfc822など&lt;/em&gt;）も、長さ1のリストペイロードを含むコンテナオブジェクトとして解析されます。それらの&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;True&lt;/code&gt; を返します。&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;によって生成される単一の要素はサブメッセージオブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="0bbab5f6cfbae51ba73420b5d82749fd2992f95e" translate="yes" xml:space="preserve">
          <source>Most non-&lt;em&gt;multipart&lt;/em&gt; type messages are parsed as a single message object with a string payload. These objects will return &lt;code&gt;False&lt;/code&gt; for &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will yield an empty list.</source>
          <target state="translated">ほとんどの非&lt;em&gt;マルチパート&lt;/em&gt;タイプのメッセージは、文字列のペイロードを持つ単一のメッセージオブジェクトとして解析されます。これらのオブジェクトは&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;に対して &lt;code&gt;False&lt;/code&gt; を返し、&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;は空のリストを生成します。</target>
        </trans-unit>
        <trans-unit id="c2841625ce82d29906f55ae50358119d7bcc13ad" translate="yes" xml:space="preserve">
          <source>Most of connection oriented event loop methods (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;) usually accept a &lt;em&gt;protocol_factory&lt;/em&gt; argument used to create a &lt;em&gt;Protocol&lt;/em&gt; object for an accepted connection, represented by a &lt;em&gt;Transport&lt;/em&gt; object. Such methods usually return a tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt;.</source>
          <target state="translated">ほとんどの接続指向のイベントループメソッド（&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; など&lt;/a&gt;）は、通常、&lt;em&gt;Transport&lt;/em&gt;オブジェクトによって表される、受け入れられた接続の&lt;em&gt;Protocol&lt;/em&gt;オブジェクトを作成するために使用される&lt;em&gt;protocol_factory&lt;/em&gt;引数を受け入れます。そのようなメソッドは通常 &lt;code&gt;(transport, protocol)&lt;/code&gt; タプルを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81f7d7d5c7660933a30dd70b5115a9493350bf31" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a Turtle instance called &lt;code&gt;turtle&lt;/code&gt;.</source>
          <target state="translated">このセクションのほとんどの例は、 &lt;code&gt;turtle&lt;/code&gt; と呼ばれるTurtleインスタンスを参照しています。</target>
        </trans-unit>
        <trans-unit id="00f06901ce4c8554bb321be3baaa0d6f5ae7c8b3" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a TurtleScreen instance called &lt;code&gt;screen&lt;/code&gt;.</source>
          <target state="translated">このセクションのほとんどの例は、 &lt;code&gt;screen&lt;/code&gt; というTurtleScreenインスタンスを参照しています。</target>
        </trans-unit>
        <trans-unit id="6a2fb976c0f061ef5f5627769d911fef317c03b7" translate="yes" xml:space="preserve">
          <source>Most of the random module&amp;rsquo;s algorithms and seeding functions are subject to change across Python versions, but two aspects are guaranteed not to change:</source>
          <target state="translated">randomモジュールのアルゴリズムとシード関数のほとんどは、Pythonバージョン間で変更される可能性がありますが、2つの側面が変更されないことが保証されています。</target>
        </trans-unit>
        <trans-unit id="7745b7926e51bd60c61099df7ea2085b449eedf0" translate="yes" xml:space="preserve">
          <source>Most of the standard escapes supported by Python string literals are also accepted by the regular expression parser:</source>
          <target state="translated">Python の文字列リテラルでサポートされている標準エスケープのほとんどは、正規表現パーサでも受け入れられます。</target>
        </trans-unit>
        <trans-unit id="566d54a039879a714c6a3632228f8ac12ebf75df" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; is all you really need, but a number of additional modules are available as well. The Tk interface is located in a binary module named &lt;code&gt;_tkinter&lt;/code&gt;. This module contains the low-level interface to Tk, and should never be used directly by application programmers. It is usually a shared library (or DLL), but might in some cases be statically linked with the Python interpreter.</source>
          <target state="translated">ほとんどの場合、本当に必要なのは&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;だけですが、多数の追加モジュールも利用できます。Tkインターフェイスは &lt;code&gt;_tkinter&lt;/code&gt; という名前のバイナリモジュールにあります。このモジュールにはTkへの低レベルのインターフェースが含まれているため、アプリケーションプログラマーが直接使用することはできません。通常は共有ライブラリ（またはDLL）ですが、場合によっては、Pythonインタープリターと静的にリンクされることがあります。</target>
        </trans-unit>
        <trans-unit id="cd5bad467beb5b7fbd87a238c1288e8d07b19cf1" translate="yes" xml:space="preserve">
          <source>Most of the time, the attributes of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will be fully determined by inspecting the command-line arguments and the argument actions. &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; allows some additional attributes that are determined without any inspection of the command line to be added:</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトの属性は、コマンドライン引数と引数アクションを調べることによって完全に決定されます。&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; を&lt;/a&gt;使用すると、コマンドラインを検査せずに決定される追加の属性を追加できます。</target>
        </trans-unit>
        <trans-unit id="1089f5c7ed3d0c68bfe01bebe0674b2ea0fa5e89" translate="yes" xml:space="preserve">
          <source>Most of these reflect information in the XML document that is not of general utility to most DOM users.</source>
          <target state="translated">これらのほとんどは、ほとんどの DOM ユーザにとって一般的に有用ではない XML ドキュメントの情報を反映しています。</target>
        </trans-unit>
        <trans-unit id="13b592a4e1b821b7d19f58aba800d1b83c05c87f" translate="yes" xml:space="preserve">
          <source>Most often, CGI scripts live in the server&amp;rsquo;s special &lt;code&gt;cgi-bin&lt;/code&gt; directory. The HTTP server places all sorts of information about the request (such as the client&amp;rsquo;s hostname, the requested URL, the query string, and lots of other goodies) in the script&amp;rsquo;s shell environment, executes the script, and sends the script&amp;rsquo;s output back to the client.</source>
          <target state="translated">ほとんどの場合、CGIスクリプトはサーバーの特別な &lt;code&gt;cgi-bin&lt;/code&gt; ディレクトリにあります。HTTPサーバーは、リクエストに関するあらゆる種類の情報（クライアントのホスト名、リクエストされたURL、クエリ文字列、その他のさまざまな機能など）をスクリプトのシェル環境に配置し、スクリプトを実行して、スクリプトの出力をスクリプトに送り返しますクライアント。</target>
        </trans-unit>
        <trans-unit id="84948582795acb691856110e5ae66ef32acdd219" translate="yes" xml:space="preserve">
          <source>Most parsing functions provided by this module require the whole document to be read at once before returning any result. It is possible to use an &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and feed data into it incrementally, but it is a push API that calls methods on a callback target, which is too low-level and inconvenient for most needs. Sometimes what the user really wants is to be able to parse XML incrementally, without blocking operations, while enjoying the convenience of fully constructed &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このモジュールが提供するほとんどの解析関数では、結果を返す前にドキュメント全体を一度に読み取る必要があります。&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;を使用してデータを段階的にフィードすることは可能ですが、コールバックターゲットでメソッドを呼び出すのはプッシュAPIであり、低レベルであり、ほとんどのニーズに不便です。ユーザーが本当に望んでいるのは、完全に構築された&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;オブジェクトの利便性を享受しながら、操作をブロックすることなくXMLを段階的に解析できることです。</target>
        </trans-unit>
        <trans-unit id="793641b11ec9edf6536ef14e14a17a202ba37fd0" translate="yes" xml:space="preserve">
          <source>Most programs adjust the current context only once, at the beginning of the program. And, in many applications, data is converted to &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; with a single cast inside a loop. With context set and decimals created, the bulk of the program manipulates the data no differently than with other Python numeric types.</source>
          <target state="translated">ほとんどのプログラムは、プログラムの開始時に現在のコンテキストを一度だけ調整します。また、多くのアプリケーションでは、ループ内での1回のキャストでデータが&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; に&lt;/a&gt;変換されます。コンテキストセットと10進数が作成されると、プログラムの大部分は他のPython数値型と同じようにデータを操作します。</target>
        </trans-unit>
        <trans-unit id="bed33f38a8121d67d831a08ac6160cf7fca8b25f" translate="yes" xml:space="preserve">
          <source>Most programs should find that using one of these weak container types or &lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; is all they need &amp;ndash; it&amp;rsquo;s not usually necessary to create your own weak references directly. The low-level machinery is exposed by the &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module for the benefit of advanced uses.</source>
          <target state="translated">ほとんどのプログラムでは、これらのウィークコンテナータイプまたは&lt;a href=&quot;#weakref.finalize&quot;&gt; &lt;code&gt;finalize&lt;/code&gt; &lt;/a&gt;いずれかを使用するだけで十分であることがわかります。通常、独自のウィークリファレンスを直接作成する必要はありません。低レベルの機構は、高度な使用のために&lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;モジュールによって公開されます。</target>
        </trans-unit>
        <trans-unit id="1e33a7247ba2cdbfe9e4c5eadcda0b6fb6940dfb" translate="yes" xml:space="preserve">
          <source>Most tkinter programs run &lt;code&gt;root.mainloop()&lt;/code&gt;, which usually does not return until the tk app is destroyed. If the program is run with &lt;code&gt;python -i&lt;/code&gt; or from an IDLE editor, a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; shell prompt does not appear until &lt;code&gt;mainloop()&lt;/code&gt; returns, at which time there is nothing left to interact with.</source>
          <target state="translated">ほとんどの &lt;code&gt;root.mainloop()&lt;/code&gt; プログラムはroot.mainloop（）を実行します。これは通常、tkアプリが破棄されるまで戻りません。プログラムが &lt;code&gt;python -i&lt;/code&gt; またはIDLEエディターから実行される場合、 &lt;code&gt;mainloop()&lt;/code&gt; が戻るまで &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; シェルプロンプトは表示されません。このとき、操作するものは何もありません。</target>
        </trans-unit>
        <trans-unit id="467bcc5b3e2170db615ed243a7771ae192662925" translate="yes" xml:space="preserve">
          <source>Most users should use &lt;a href=&quot;subprocess#subprocess.run&quot;&gt;&lt;code&gt;subprocess.run()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ほとんどのユーザーは、&lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;subprocess#subprocess.run&quot;&gt; &lt;code&gt;subprocess.run()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7022d092d568159a8deb2f5345b042987cdc731a" translate="yes" xml:space="preserve">
          <source>Mouse event has occurred</source>
          <target state="translated">マウスイベントが発生しました</target>
        </trans-unit>
        <trans-unit id="76cdb950721642b6b8596d36d5a39f7705028b99" translate="yes" xml:space="preserve">
          <source>Move</source>
          <target state="translated">Move</target>
        </trans-unit>
        <trans-unit id="59b381f9ae62e71a6e656f888600974d66a2a445" translate="yes" xml:space="preserve">
          <source>Move a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; pyc file to its legacy pyc location and return the file system path to the legacy pyc file. The &lt;em&gt;source&lt;/em&gt; value is the file system path to the source file. It does not need to exist, however the PEP 3147/488 pyc file must exist.</source>
          <target state="translated">移動&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;そのレガシーPYCの場所にPYCファイルをレガシーPYCファイルへのファイルシステムパスを返します。&lt;em&gt;ソース&lt;/em&gt;値は、ソース・ファイルへのファイル・システム・パスです。存在する必要はありませんが、PEP 3147/488 pycファイルが存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="34fb02884cc45eb332edf96e82c7d3d89690c570" translate="yes" xml:space="preserve">
          <source>Move an existing &lt;em&gt;key&lt;/em&gt; to either end of an ordered dictionary. The item is moved to the right end if &lt;em&gt;last&lt;/em&gt; is true (the default) or to the beginning if &lt;em&gt;last&lt;/em&gt; is false. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;key&lt;/em&gt; does not exist:</source>
          <target state="translated">既存の&lt;em&gt;キー&lt;/em&gt;を順序付けされた辞書のいずれかの端に移動します。アイテムは、&lt;em&gt;last&lt;/em&gt;がtrue（デフォルト）の場合は右端に移動し、&lt;em&gt;last&lt;/em&gt;がfalseの場合は最初に移動します。発生させ&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外が&lt;/a&gt;あれば&lt;em&gt;、キーが&lt;/em&gt;存在しません：</target>
        </trans-unit>
        <trans-unit id="a9241b7a62db251595ec94a8670f8492cc79c5f0" translate="yes" xml:space="preserve">
          <source>Move and draw</source>
          <target state="translated">移動と描画</target>
        </trans-unit>
        <trans-unit id="ef3b0cebd03fd191bbc4cb8897a06eaaba33d4fe" translate="yes" xml:space="preserve">
          <source>Move cursor to &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">カーソルを &lt;code&gt;(new_y, new_x)&lt;/code&gt; 移動します。</target>
        </trans-unit>
        <trans-unit id="601b26f56eb7f3dd5627e0542377e2380db7e481" translate="yes" xml:space="preserve">
          <source>Move cursor to the line number requested and make that line visible.</source>
          <target state="translated">カーソルを要求された行番号に移動し、その行を表示させます。</target>
        </trans-unit>
        <trans-unit id="00de7b574f0ca4dca2db05f7ac95cf8fa926cd45" translate="yes" xml:space="preserve">
          <source>Move operations do nothing if the cursor is at an edge where the movement is not possible. The following synonyms are supported where possible:</source>
          <target state="translated">カーソルが移動できないエッジにある場合、移動操作は何もしません。可能な限り、以下の同義語がサポートされています。</target>
        </trans-unit>
        <trans-unit id="f14c08ec9cc70b053ef1452c74150f8bece0b93f" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels down in the stack trace (to a newer frame).</source>
          <target state="translated">スタックトレースで現在のフレーム&lt;em&gt;カウント&lt;/em&gt;（デフォルトは1）のレベルを（新しいフレームに）移動します。</target>
        </trans-unit>
        <trans-unit id="1f999beea6e1d8614d33e214187f8c14de783371" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels up in the stack trace (to an older frame).</source>
          <target state="translated">スタックトレースで現在のフレーム&lt;em&gt;カウント&lt;/em&gt;（デフォルトは1）のレベルを（古いフレームに）移動します。</target>
        </trans-unit>
        <trans-unit id="cbcadba9b748dd50e27e7929dd7eba8bdc251d08" translate="yes" xml:space="preserve">
          <source>Move the cursor to the beginning of the line requested and make that line visible. A request past the end of the file goes to the end. Clear any selection and update the line and column status.</source>
          <target state="translated">要求された行の先頭にカーソルを移動させ、その行を表示させます。ファイルの最後を過ぎたリクエストは、最後に移動します。選択範囲をクリアし、行と列の状態を更新します。</target>
        </trans-unit>
        <trans-unit id="bddc2d8cac88c0e16d0d15e699390e1c93202c14" translate="yes" xml:space="preserve">
          <source>Move the panel to the screen coordinates &lt;code&gt;(y, x)&lt;/code&gt;.</source>
          <target state="translated">パネルを画面座標 &lt;code&gt;(y, x)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="366616b5769d49d8c4989ea2123f0635dfd476c9" translate="yes" xml:space="preserve">
          <source>Move the turtle backward by &lt;em&gt;distance&lt;/em&gt;, opposite to the direction the turtle is headed. Do not change the turtle&amp;rsquo;s heading.</source>
          <target state="translated">タートルが向いている方向とは反対に、タートルを&lt;em&gt;距離だけ&lt;/em&gt;後方に移動します。カメの向きを変えないでください。</target>
        </trans-unit>
        <trans-unit id="5bb8f30d63462cf640df95fdfb728a8ffba5f530" translate="yes" xml:space="preserve">
          <source>Move the turtle forward by the specified &lt;em&gt;distance&lt;/em&gt;, in the direction the turtle is headed.</source>
          <target state="translated">タートルが向いている方向に、タートルを指定された&lt;em&gt;距離だけ&lt;/em&gt;前方に移動します。</target>
        </trans-unit>
        <trans-unit id="606392f9ada71eee7694589f863fe49c6c953eb7" translate="yes" xml:space="preserve">
          <source>Move the window inside its parent window. The screen-relative parameters of the window are not changed. This routine is used to display different parts of the parent window at the same physical position on the screen.</source>
          <target state="translated">親ウィンドウの内側にウィンドウを移動します。ウィンドウの画面関連パラメータは変更されません。このルーチンは、親ウィンドウの異なる部分を画面上の同じ物理的位置に表示するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9b4cc9d6cf91904a69809b29953b1b97a8cb436c" translate="yes" xml:space="preserve">
          <source>Move the window so its upper-left corner is at &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">左上隅が &lt;code&gt;(new_y, new_x)&lt;/code&gt; なるようにウィンドウを移動します。</target>
        </trans-unit>
        <trans-unit id="9ae1c0cedf7a7f6220f5e9b65d8d117ba2c19e75" translate="yes" xml:space="preserve">
          <source>Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle&amp;rsquo;s orientation.</source>
          <target state="translated">カメを絶対位置に移動します。ペンが下がっている場合は、線を引きます。カメの向きを変えないでください。</target>
        </trans-unit>
        <trans-unit id="22468681bb2cde570129a7bbf809a05431bc555d" translate="yes" xml:space="preserve">
          <source>Move turtle to the origin &amp;ndash; coordinates (0,0) &amp;ndash; and set its heading to its start-orientation (which depends on the mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">亀を原点（座標（0,0））に移動し、その向きを開始方向に設定し&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;モードによって異なります。mode（）を参照）。</target>
        </trans-unit>
        <trans-unit id="5be33704c954094f90870e7ed96a149ee7bd9c74" translate="yes" xml:space="preserve">
          <source>Moves &lt;em&gt;item&lt;/em&gt; to position &lt;em&gt;index&lt;/em&gt; in &lt;em&gt;parent&lt;/em&gt;&amp;rsquo;s list of children.</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;を&lt;em&gt;親&lt;/em&gt;の子のリスト内の位置&lt;em&gt;インデックス&lt;/em&gt;に移動し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d83016dd56e9bf9199d175870ff56ee77659cfb7" translate="yes" xml:space="preserve">
          <source>Mozilla</source>
          <target state="translated">Mozilla</target>
        </trans-unit>
        <trans-unit id="77bb2f79a7eb833c24226c0fc4afbc0065f7bae3" translate="yes" xml:space="preserve">
          <source>Mozilla&amp;rsquo;s Server Side TLS recommendations</source>
          <target state="translated">Mozillaのサーバー側TLSの推奨事項</target>
        </trans-unit>
        <trans-unit id="34e4e3490cfd5d827b6939f20b6812fc7ab81c0a" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt;&lt;code&gt;LOAD_DEREF&lt;/code&gt;&lt;/a&gt; but first checks the locals dictionary before consulting the cell. This is used for loading free variables in class bodies.</source>
          <target state="translated">&lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt; &lt;code&gt;LOAD_DEREF&lt;/code&gt; に&lt;/a&gt;よく似ていますが、セルを調べる前にまずローカル辞書をチェックします。これは、クラス本体に自由変数をロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="330f90a4a7f8697f732d832206c87a0c80b1e817" translate="yes" xml:space="preserve">
          <source>Multi-dimensional arrays:</source>
          <target state="translated">多次元配列。</target>
        </trans-unit>
        <trans-unit id="e286be50d1c645889d37cc60a961288d4708698c" translate="yes" xml:space="preserve">
          <source>Multi-phase extension module initialization</source>
          <target state="translated">多相拡張モジュールの初期化</target>
        </trans-unit>
        <trans-unit id="3a17483ef417b9f9729e4d5407d6224ba50cae48" translate="yes" xml:space="preserve">
          <source>Multi-processing</source>
          <target state="translated">Multi-processing</target>
        </trans-unit>
        <trans-unit id="4df9252fd5d4911ee5eb1c96d25797e8cf043b28" translate="yes" xml:space="preserve">
          <source>Multi-threading</source>
          <target state="translated">Multi-threading</target>
        </trans-unit>
        <trans-unit id="775f46e5feac2a655ca3c0f4647af4e10f6b1405" translate="yes" xml:space="preserve">
          <source>MultiCall Objects</source>
          <target state="translated">マルチコールオブジェクト</target>
        </trans-unit>
        <trans-unit id="d9e13b473f0ae3bd1e957746112d999190ceed57" translate="yes" xml:space="preserve">
          <source>Multihop attempted</source>
          <target state="translated">マルチホップの試み</target>
        </trans-unit>
        <trans-unit id="82dabd0bba3a5f611035c568eaa03187a7117693" translate="yes" xml:space="preserve">
          <source>Multimedia</source>
          <target state="translated">Multimedia</target>
        </trans-unit>
        <trans-unit id="4e13023947484ddbe09e9dcd00133156cd68392c" translate="yes" xml:space="preserve">
          <source>Multimedia Services</source>
          <target state="translated">マルチメディアサービス</target>
        </trans-unit>
        <trans-unit id="bb2ec50bee2ac650f14f5c5ab53fb76fb7fa35c2" translate="yes" xml:space="preserve">
          <source>Multiple commands may be entered on a single line, separated by &lt;code&gt;;;&lt;/code&gt;. (A single &lt;code&gt;;&lt;/code&gt; is not used as it is the separator for multiple commands in a line that is passed to the Python parser.) No intelligence is applied to separating the commands; the input is split at the first &lt;code&gt;;;&lt;/code&gt; pair, even if it is in the middle of a quoted string.</source>
          <target state="translated">複数のコマンドを &lt;code&gt;;;&lt;/code&gt; で区切って1行で入力できます。。（単一の &lt;code&gt;;&lt;/code&gt; は、Pythonパーサーに渡される行内の複数のコマンドの区切り文字であるため使用されません。）コマンドを分離するためのインテリジェンスは適用されません。入力は最初に分割されます &lt;code&gt;;;&lt;/code&gt; 引用符で囲まれた文字列の途中であっても、ペアになります。</target>
        </trans-unit>
        <trans-unit id="3d09adb7f1de6110bb767281eb6fabdd98f6a2d7" translate="yes" xml:space="preserve">
          <source>Multiple directives can be used on a single physical line, separated by commas:</source>
          <target state="translated">複数のディレクティブをカンマで区切って、1つの物理行で使用することができます。</target>
        </trans-unit>
        <trans-unit id="43f323662dad6544bb6a1fc9e74c9e4f71909ea4" translate="yes" xml:space="preserve">
          <source>Multiple nodes in &lt;code&gt;targets&lt;/code&gt; represents assigning the same value to each. Unpacking is represented by putting a &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; within &lt;code&gt;targets&lt;/code&gt;.</source>
          <target state="translated">Multiple nodes in &lt;code&gt;targets&lt;/code&gt; represents assigning the same value to each. Unpacking is represented by putting a &lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; within &lt;code&gt;targets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7299187e78acfeb10e1b49723ae100be4c64b0fe" translate="yes" xml:space="preserve">
          <source>Multiple notebooks in a single toplevel may be enabled for traversal, including nested notebooks. However, notebook traversal only works properly if all panes have the notebook they are in as master.</source>
          <target state="translated">1つのトップレベル内の複数のノートブックは、ネストされたノートブックを含めて、トラバーサルを有効にすることができます。ただし、ノートブックの探索は、すべてのペインがそのノートブックをマスターとして使用している場合にのみ正常に動作します。</target>
        </trans-unit>
        <trans-unit id="5162321020c32ce61d50bae28086dd890680e982" translate="yes" xml:space="preserve">
          <source>Multiple paths can be given to &lt;code&gt;venv&lt;/code&gt;, in which case an identical virtual environment will be created, according to the given options, at each provided path.</source>
          <target state="translated">&lt;code&gt;venv&lt;/code&gt; に複数のパスを与えることができます。その場合、与えられた各パスで、与えられたオプションに従って、同一の仮想環境が作成されます。</target>
        </trans-unit>
        <trans-unit id="4573ed2f0edb61983a51e72e312c05e99fea31c4" translate="yes" xml:space="preserve">
          <source>Multiple scripts demonstrating different features of the &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module. Examples can be accessed via the Examples menu. They can also be run standalone.</source>
          <target state="translated">&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;モジュールのさまざまな機能を示す複数のスクリプト。例には、[例]メニューからアクセスできます。スタンドアロンで実行することもできます。</target>
        </trans-unit>
        <trans-unit id="a66007c83d7e252602c3da75c4c341aa9e54c57e" translate="yes" xml:space="preserve">
          <source>Multiple type annotations are supported (&lt;code&gt;Annotated&lt;/code&gt; supports variadic arguments):</source>
          <target state="translated">Multiple type annotations are supported ( &lt;code&gt;Annotated&lt;/code&gt; supports variadic arguments):</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="7a49abf6458e7554b14dad6ea5826909852a08c1" translate="yes" xml:space="preserve">
          <source>Multithreaded version of &lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt;&lt;code&gt;interact()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt; &lt;code&gt;interact()&lt;/code&gt; の&lt;/a&gt;マルチスレッドバージョン。</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="cab30ed902fc7da4b75c082dca1f14cef46149ff" translate="yes" xml:space="preserve">
          <source>Multithreading note: When two threads call this function simultaneously, it is possible that they will receive the same return value. This can be avoided in three ways. 1) Have each thread use a different instance of the random number generator. 2) Put locks around all calls. 3) Use the slower, but thread-safe &lt;a href=&quot;#random.normalvariate&quot;&gt;&lt;code&gt;normalvariate()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">Multithreading note: When two threads call this function simultaneously, it is possible that they will receive the same return value. This can be avoided in three ways. 1) Have each thread use a different instance of the random number generator. 2) Put locks around all calls. 3) Use the slower, but thread-safe &lt;a href=&quot;#random.normalvariate&quot;&gt; &lt;code&gt;normalvariate()&lt;/code&gt; &lt;/a&gt; function instead.</target>
        </trans-unit>
        <trans-unit id="e84051d950065a19888b9a4b65dd834b3ca5708a" translate="yes" xml:space="preserve">
          <source>Must accept a request from the socket, and return a 2-tuple containing the &lt;em&gt;new&lt;/em&gt; socket object to be used to communicate with the client, and the client&amp;rsquo;s address.</source>
          <target state="translated">ソケットからの要求を受け入れ、クライアントとの通信に使用する&lt;em&gt;新しい&lt;/em&gt;ソケットオブジェクトとクライアントのアドレスを含む2タプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="4747a0250917ddc1dc2a0d4fc6b92b4e01de5dd8" translate="yes" xml:space="preserve">
          <source>Must be called if the programmer wants to use colors, and before any other color manipulation routine is called. It is good practice to call this routine right after &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プログラマーが色を使用したい場合で、他の色操作ルーチンが呼び出される前に呼び出す必要があります。&lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; の&lt;/a&gt;直後にこのルーチンを呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ff7e72021a763f0ee5ccf9301a43b444b5e95394" translate="yes" xml:space="preserve">
          <source>Must be one of: &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, or &lt;code&gt;&quot;word&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;none&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;char&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;word&quot;&lt;/code&gt; のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="ebf1dc0566c10e0139b5df0505eb1e78b6fd3569" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">反復を停止するには、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;非同期イテレータ&lt;/a&gt;オブジェクトの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt;メソッドで発生させる必要があります。</target>
        </trans-unit>
        <trans-unit id="bc41839a8b9fd667d2f66f5bddeaaf2f835151c4" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">Must be raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</target>
        </trans-unit>
        <trans-unit id="adf6c9fd4760a31bfbf5ba31fc932d1f5a3f031e" translate="yes" xml:space="preserve">
          <source>Must be zero.</source>
          <target state="translated">ゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ae91554455709a10c47572fb3081826f1c8d9b10" translate="yes" xml:space="preserve">
          <source>Must return a Boolean value; if the value is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the request will be processed, and if it&amp;rsquo;s &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, the request will be denied. This function can be overridden to implement access controls for a server. The default implementation always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ブール値を返す必要があります。値が&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、リクエストは処理され、&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、リクエストは拒否されます。この関数をオーバーライドして、サーバーのアクセス制御を実装できます。デフォルトの実装は常に&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="6a5c56949118e7bbfa4e5df14253fa9c206b4ced" translate="yes" xml:space="preserve">
          <source>Mutable Sequence Types</source>
          <target state="translated">可変シーケンスタイプ</target>
        </trans-unit>
        <trans-unit id="59a777ead597ed74ce5de4536307c0d1ace10414" translate="yes" xml:space="preserve">
          <source>Mutable default values</source>
          <target state="translated">Mutableデフォルト値</target>
        </trans-unit>
        <trans-unit id="bd89464f515bc7c1945f885ef807721ee91c256b" translate="yes" xml:space="preserve">
          <source>Mutual exclusion</source>
          <target state="translated">相互排除</target>
        </trans-unit>
        <trans-unit id="e48c93a9558b1df10e9386a808b36396efbdc949" translate="yes" xml:space="preserve">
          <source>Mutually exclusive options for whitespace control.</source>
          <target state="translated">ホワイトスペース制御のための相互に排他的なオプション。</target>
        </trans-unit>
        <trans-unit id="f1dae7604a00897f0a4fd9c9086372f8cb686e88" translate="yes" xml:space="preserve">
          <source>MyStruct(4, 6)</source>
          <target state="translated">MyStruct(4,6)</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="f3b6e147d97b483fedd25cc8dfa6e8453dae0246" translate="yes" xml:space="preserve">
          <source>NNTP (Net News Transport Protocol) client</source>
          <target state="translated">エヌエヌティーピークライアント</target>
        </trans-unit>
        <trans-unit id="79c75ca6272ee59fef0850ac71420be0538f2b61" translate="yes" xml:space="preserve">
          <source>NNTP Objects</source>
          <target state="translated">NNTP オブジェクト</target>
        </trans-unit>
        <trans-unit id="d1dc5a1761f453c4a0fd7017ba832bc17fd8ad13" translate="yes" xml:space="preserve">
          <source>NOOP</source>
          <target state="translated">NOOP</target>
        </trans-unit>
        <trans-unit id="36bdc187848ec66c05c294f3ec9cf824ecdaa127" translate="yes" xml:space="preserve">
          <source>NOTE: This function is part of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt; and works with strings. It does not check or access the underlying file structure.</source>
          <target state="translated">NOTE: This function is part of &lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt; and works with strings. It does not check or access the underlying file structure.</target>
        </trans-unit>
        <trans-unit id="51374517cce15cf30e5fafe081ab605aef775d59" translate="yes" xml:space="preserve">
          <source>NTEventLogHandler</source>
          <target state="translated">NTEventLogHandler</target>
        </trans-unit>
        <trans-unit id="96cd9da0c6e1ccdfcc159d790597f9c5ab44b9f9" translate="yes" xml:space="preserve">
          <source>Naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances are assumed to represent local time and this method relies on the platform C &lt;code&gt;mktime()&lt;/code&gt; function to perform the conversion. Since &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; supports wider range of values than &lt;code&gt;mktime()&lt;/code&gt; on many platforms, this method may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; for times far in the past or far in the future.</source>
          <target state="translated">単純な&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンスは現地時間を表すと想定されており、このメソッドはプラットフォームCの &lt;code&gt;mktime()&lt;/code&gt; 関数に依存して変換を実行します。多くのプラットフォームでは、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;mktime()&lt;/code&gt; より広い範囲の値をサポートしているため、このメソッドは、過去または未来の時間で&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;を発生させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="c27442e14dcf480c5096062467b3aa70532fef60" translate="yes" xml:space="preserve">
          <source>Name (string)</source>
          <target state="translated">名前(文字列</target>
        </trans-unit>
        <trans-unit id="f749babb57e6226126151fa3ff0dcb49a37a4566" translate="yes" xml:space="preserve">
          <source>Name and version of the thread library. It is a string, or &lt;code&gt;None&lt;/code&gt; if this information is unknown.</source>
          <target state="translated">スレッドライブラリの名前とバージョン。文字列です。この情報が不明な場合は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bd0eba018b32a3fc8bf5757f41e9d39ed4d796bd" translate="yes" xml:space="preserve">
          <source>Name not unique on network</source>
          <target state="translated">ネットワーク上で一意ではない名前</target>
        </trans-unit>
        <trans-unit id="6b9e670759af04e3a29cb11b387ac0af4c4ba79a" translate="yes" xml:space="preserve">
          <source>Name of a file to accumulate counts over several tracing runs. Should be used with the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">いくつかのトレース実行でカウントを累積するファイルの名前。&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt;オプションと一緒に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f41d04af7c00689d29db73e5e39ccec3d7f4baa" translate="yes" xml:space="preserve">
          <source>Name of a file where the output should be written.</source>
          <target state="translated">出力を書き込むファイル名。</target>
        </trans-unit>
        <trans-unit id="909d50c1d59e7f6872cd42d8d690e7a67cfddf5e" translate="yes" xml:space="preserve">
          <source>Name of function containing the logging call.</source>
          <target state="translated">ロギングコールを含む関数の名前。</target>
        </trans-unit>
        <trans-unit id="a4e437038133290bc84db0a7901dbdac884887ac" translate="yes" xml:space="preserve">
          <source>Name of the &lt;code&gt;ndbm&lt;/code&gt; implementation library used.</source>
          <target state="translated">使用される &lt;code&gt;ndbm&lt;/code&gt; 実装ライブラリの名前。</target>
        </trans-unit>
        <trans-unit id="b82dd6dc18736a73581a12357aabc36155aa0044" translate="yes" xml:space="preserve">
          <source>Name of the ZIP file.</source>
          <target state="translated">ZIPファイルの名前。</target>
        </trans-unit>
        <trans-unit id="7bd737364faf0eec56bb0fc421ccc3c610d6ed65" translate="yes" xml:space="preserve">
          <source>Name of the archive member.</source>
          <target state="translated">アーカイブメンバーの名前。</target>
        </trans-unit>
        <trans-unit id="2c902fcfc808584d112a3ceeb4eb2bc1f3619bea" translate="yes" xml:space="preserve">
          <source>Name of the file in the archive.</source>
          <target state="translated">アーカイブ内のファイル名。</target>
        </trans-unit>
        <trans-unit id="3f4f64a593b458f13706273b6df06d01e90dabff" translate="yes" xml:space="preserve">
          <source>Name of the file in which the class is defined.</source>
          <target state="translated">クラスが定義されているファイル名。</target>
        </trans-unit>
        <trans-unit id="52c4cd4fff87ccdc917ab79849a30f112d326420" translate="yes" xml:space="preserve">
          <source>Name of the file in which the function is defined.</source>
          <target state="translated">関数が定義されているファイル名。</target>
        </trans-unit>
        <trans-unit id="479b58a3698cd8bdd2749e826438a6efb9a37443" translate="yes" xml:space="preserve">
          <source>Name of the kernel filter.</source>
          <target state="translated">カーネルフィルタの名前。</target>
        </trans-unit>
        <trans-unit id="557389192cfcd5c2bf918ddbf712bd3b1d343b90" translate="yes" xml:space="preserve">
          <source>Name of the lock implementation:</source>
          <target state="translated">ロックの実装名。</target>
        </trans-unit>
        <trans-unit id="e5bcc652602bbe94f6a9ebcc11b4cb38e6c0ea60" translate="yes" xml:space="preserve">
          <source>Name of the logger used to log the call.</source>
          <target state="translated">呼び出しの記録に使用されるロガーの名前。</target>
        </trans-unit>
        <trans-unit id="1ac5bb9ec4a87c7e2e4d424b152dffc6dceb92f8" translate="yes" xml:space="preserve">
          <source>Name of the module the loader supports.</source>
          <target state="translated">ローダがサポートするモジュールの名前。</target>
        </trans-unit>
        <trans-unit id="88649ef30eca2eef544db1a703bfa26a7680062b" translate="yes" xml:space="preserve">
          <source>Name of the place from which the module is loaded, e.g. &amp;ldquo;builtin&amp;rdquo; for built-in modules and the filename for modules loaded from source. Normally &amp;ldquo;origin&amp;rdquo; should be set, but it may be &lt;code&gt;None&lt;/code&gt; (the default) which indicates it is unspecified (e.g. for namespace packages).</source>
          <target state="translated">モジュールのロード元の場所の名前。たとえば、組み込みモジュールの場合は「builtin」、ソースからロードされたモジュールの場合はファイル名。通常は「origin」を設定する必要がありますが、指定しないことを示す &lt;code&gt;None&lt;/code&gt; （デフォルト）にすることもできます（たとえば、名前空間パッケージの場合）。</target>
        </trans-unit>
        <trans-unit id="e3bd6f6c479eab3e41e2c002fa4ce6ad97ac5a4a" translate="yes" xml:space="preserve">
          <source>Name of the platform-specific library directory. It is used to build the path of standard library and the paths of installed extension modules.</source>
          <target state="translated">プラットフォーム固有のライブラリディレクトリの名前。標準ライブラリのパスとインストールされている拡張モジュールのパスを構築するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3add1cd07c9747dd5701cddb479a22e098f8ef27" translate="yes" xml:space="preserve">
          <source>Name of the target file name, which is only present in &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects of type &lt;code&gt;LNKTYPE&lt;/code&gt; and &lt;code&gt;SYMTYPE&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;LNKTYPE&lt;/code&gt; および &lt;code&gt;SYMTYPE&lt;/code&gt; の&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトにのみ存在するターゲットファイル名の名前。</target>
        </trans-unit>
        <trans-unit id="8c8a8acd0a715e63879cf8add7d8952be75bc26b" translate="yes" xml:space="preserve">
          <source>Name of the thread implementation:</source>
          <target state="translated">スレッドの実装名。</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="9aded8be679f83c11f74ee1bff7f85682a20e807" translate="yes" xml:space="preserve">
          <source>Named groups can also be referred to by their index:</source>
          <target state="translated">名前付きグループは、そのインデックスで参照することもできます。</target>
        </trans-unit>
        <trans-unit id="c28e1ee5f518cf29efb67d882148a0b1e5416250" translate="yes" xml:space="preserve">
          <source>Named groups can be referenced in three contexts. If the pattern is &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; (i.e. matching a string quoted with either single or double quotes):</source>
          <target state="translated">名前付きグループは、3つのコンテキストで参照できます。パターンが &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; （つまり、単一引用符または二重引用符で引用された文字列に一致）：</target>
        </trans-unit>
        <trans-unit id="f16a4120b764cba8959d773cf7f3b0e19c88a175" translate="yes" xml:space="preserve">
          <source>Named tuple instances do not have per-instance dictionaries, so they are lightweight and require no more memory than regular tuples.</source>
          <target state="translated">名前付きタプルインスタンスはインスタンスごとの辞書を持たないので、通常のタプルよりも軽量でメモリを必要としません。</target>
        </trans-unit>
        <trans-unit id="f512fe216c8d2627c3f288b9c1b60f1f0813d360" translate="yes" xml:space="preserve">
          <source>Named tuples are especially useful for assigning field names to result tuples returned by the &lt;a href=&quot;csv#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; modules:</source>
          <target state="translated">名前付きタプルは、&lt;a href=&quot;csv#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールによって返される結果タプルにフィールド名を割り当てる場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="d560ba60fd40808c605c894ca61edab52b60a8f7" translate="yes" xml:space="preserve">
          <source>Named tuples assign meaning to each position in a tuple and allow for more readable, self-documenting code. They can be used wherever regular tuples are used, and they add the ability to access fields by name instead of position index.</source>
          <target state="translated">名前付きタプルは、タプルの各位置に意味を割り当て、より読みやすく、自己文書化されたコードを作成することができます。名前付きタプルは、通常のタプルが使用されている場所であればどこでも使用することができ、位置インデックスの代わりに名前でフィールドにアクセスする機能が追加されます。</target>
        </trans-unit>
        <trans-unit id="138d23bf87d91f2cf8e499a38b28a27198431782" translate="yes" xml:space="preserve">
          <source>NamedNodeMap Objects</source>
          <target state="translated">NamedNodeMap オブジェクト</target>
        </trans-unit>
        <trans-unit id="79151ef5523cbb3688933e1d2359c827b97b6dba" translate="yes" xml:space="preserve">
          <source>Names in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, such that the type differs between the directories, or names for which &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; reports an error.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;両方の名前。タイプがディレクトリ間で異なるか、&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;がエラーを報告する名前。</target>
        </trans-unit>
        <trans-unit id="0a0bec580c91a0db0dd9741e0f59ccc6c55e7006" translate="yes" xml:space="preserve">
          <source>Namespace-aware variant of &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, which will be passed to &lt;code&gt;startElementNS()&lt;/code&gt;. It is derived from &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, but understands attribute names as two-tuples of &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localname&lt;/em&gt;. In addition, it provides a number of methods expecting qualified names as they appear in the original document. This class implements the &lt;code&gt;AttributesNS&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-ns-objects&quot;&gt;The AttributesNS Interface&lt;/a&gt;).</source>
          <target state="translated">名前空間を認識する&lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; の&lt;/a&gt;バリアント。これは &lt;code&gt;startElementNS()&lt;/code&gt; に渡されます。これは&lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt;から派生していますが、属性名を&lt;em&gt;namespaceURI&lt;/em&gt;と&lt;em&gt;localnameの&lt;/em&gt; 2つのタプルとして理解します。さらに、元のドキュメントに表示される修飾名を期待する多くのメソッドを提供します。このクラスを実装 &lt;code&gt;AttributesNS&lt;/code&gt; のインターフェース（セクションを参照&lt;a href=&quot;#attributes-ns-objects&quot;&gt;ザ・AttributesNSインタフェース&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3fac676b9daa5e7147af0e960a2d8869c1122f19" translate="yes" xml:space="preserve">
          <source>Naming your mocks</source>
          <target state="translated">モックに名前をつける</target>
        </trans-unit>
        <trans-unit id="388dc744456493550fdfa18219ddbd88540e38ab" translate="yes" xml:space="preserve">
          <source>Native Load/Save Dialogs</source>
          <target state="translated">ネイティブロード/セーブダイアログ</target>
        </trans-unit>
        <trans-unit id="3e8980fc43ff1044a18189e78dedc1df9a62b49e" translate="yes" xml:space="preserve">
          <source>Native byte order is big-endian or little-endian, depending on the host system. For example, Intel x86 and AMD64 (x86-64) are little-endian; Motorola 68000 and PowerPC G5 are big-endian; ARM and Intel Itanium feature switchable endianness (bi-endian). Use &lt;code&gt;sys.byteorder&lt;/code&gt; to check the endianness of your system.</source>
          <target state="translated">ホストシステムに応じて、ネイティブバイトオーダーはビッグエンディアンまたはリトルエンディアンです。たとえば、Intel x86およびAMD64（x86-64）はリトルエンディアンです。Motorola 68000とPowerPC G5はビッグエンディアンです。ARMとIntel Itaniumは、切り替え可能なエンディアン（バイエンディアン）を備えています。 &lt;code&gt;sys.byteorder&lt;/code&gt; を使用して、システムのエンディアンを確認します。</target>
        </trans-unit>
        <trans-unit id="48f10fdc477f6339c64bce4467bf56cec228d333" translate="yes" xml:space="preserve">
          <source>Native size and alignment are determined using the C compiler&amp;rsquo;s &lt;code&gt;sizeof&lt;/code&gt; expression. This is always combined with native byte order.</source>
          <target state="translated">ネイティブサイズと配置は、Cコンパイラの &lt;code&gt;sizeof&lt;/code&gt; 式を使用して決定されます。これは常にネイティブバイトオーダーと組み合わされます。</target>
        </trans-unit>
        <trans-unit id="517a1d8d49b78127b5bb2acf6015f7707345aa2e" translate="yes" xml:space="preserve">
          <source>Navigating inside a directory tree:</source>
          <target state="translated">ディレクトリツリー内を移動します。</target>
        </trans-unit>
        <trans-unit id="987fc48a30ea30d92d41a6019a3ed94eb415d66d" translate="yes" xml:space="preserve">
          <source>Negation (Arithmetic)</source>
          <target state="translated">否定(算数</target>
        </trans-unit>
        <trans-unit id="627e9d13ddc6c294f7ec2e115eee5c51e4b0a37a" translate="yes" xml:space="preserve">
          <source>Negation (Logical)</source>
          <target state="translated">否定(論理的</target>
        </trans-unit>
        <trans-unit id="b55a8cef5977e78a89ae2e69772eef902ec4a5a5" translate="yes" xml:space="preserve">
          <source>Negative acknowledgement</source>
          <target state="translated">否定的な認識</target>
        </trans-unit>
        <trans-unit id="34c7643d5f745ab08c69c16dd12140498edf58a7" translate="yes" xml:space="preserve">
          <source>Negative shift counts are illegal and cause a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">負のシフトカウントは不正であり、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="cca6e5f1a6c7a865ba230eeff90e2702a0fd7fe3" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;Annotated&lt;/code&gt; types are flattened, with metadata ordered starting with the innermost annotation:</source>
          <target state="translated">Nested &lt;code&gt;Annotated&lt;/code&gt; types are flattened, with metadata ordered starting with the innermost annotation:</target>
        </trans-unit>
        <trans-unit id="32487c26ecab149a196fce5321757c6b3bf4b876" translate="yes" xml:space="preserve">
          <source>Nested structures can also be initialized in the constructor in several ways:</source>
          <target state="translated">入れ子になった構造体は、いくつかの方法でコンストラクタで初期化することもできます。</target>
        </trans-unit>
        <trans-unit id="6b24ed9821e96a2648c5646b75130ceb97178a4c" translate="yes" xml:space="preserve">
          <source>Nesting Patch Decorators</source>
          <target state="translated">ネスティングパッチデコレーター</target>
        </trans-unit>
        <trans-unit id="ea31f50cab713b0f124052f1b7a16defcb810ab2" translate="yes" xml:space="preserve">
          <source>Nesting Patches</source>
          <target state="translated">ネスティングパッチ</target>
        </trans-unit>
        <trans-unit id="48f4eff85da085dead78d399f32b4afe378e5d2d" translate="yes" xml:space="preserve">
          <source>Nesting arguments and more complex examples:</source>
          <target state="translated">引数のネスティングとより複雑な例</target>
        </trans-unit>
        <trans-unit id="387c36a7e2c55b1e37b061b1ad887cc307968414" translate="yes" xml:space="preserve">
          <source>Netscape protocol strictness switches:</source>
          <target state="translated">Netscapeのプロトコル厳格化スイッチ。</target>
        </trans-unit>
        <trans-unit id="8baad1cbc284c12f56ea33b670eb34325f6b8199" translate="yes" xml:space="preserve">
          <source>Network IO</source>
          <target state="translated">ネットワークIO</target>
        </trans-unit>
        <trans-unit id="82a92bfa4dd74a7c277b6e280e7993e24e6bd37b" translate="yes" xml:space="preserve">
          <source>Network dropped connection because of reset</source>
          <target state="translated">リセットによりネットワークの接続が切断された</target>
        </trans-unit>
        <trans-unit id="ea849e260b8735345217e4f53f113c9fcde5b394" translate="yes" xml:space="preserve">
          <source>Network is down</source>
          <target state="translated">ネットワークがダウンしています</target>
        </trans-unit>
        <trans-unit id="d34a1412dd6535ceabe7960d72728113a96b875c" translate="yes" xml:space="preserve">
          <source>Network is unreachable</source>
          <target state="translated">ネットワークに接続できない</target>
        </trans-unit>
        <trans-unit id="f1187f91a6b9526e3ad1f52e3394c4d7df1155f3" translate="yes" xml:space="preserve">
          <source>Network location part</source>
          <target state="translated">ネットワークロケーション部</target>
        </trans-unit>
        <trans-unit id="a94bfe6962e04d8964bb10b7ee9c6ed49863a34f" translate="yes" xml:space="preserve">
          <source>Network objects</source>
          <target state="translated">ネットワークオブジェクト</target>
        </trans-unit>
        <trans-unit id="d002009562d56b5b62febaf56a1d9b00d7976530" translate="yes" xml:space="preserve">
          <source>Network objects can act as containers of addresses. Some examples:</source>
          <target state="translated">ネットワークオブジェクトは、アドレスのコンテナとして機能することができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="20fcf7eba0d4de1e05964bd5839c098f8acebea8" translate="yes" xml:space="preserve">
          <source>Network objects can be compared with the usual set of logical operators. Network objects are ordered first by network address, then by net mask.</source>
          <target state="translated">ネットワークオブジェクトは、通常の論理演算子のセットと比較することができます。ネットワークオブジェクトは、最初にネットワークアドレス、次にネットマスクの順に並べられます。</target>
        </trans-unit>
        <trans-unit id="9fb3a6d9875537b1c0c38a2431cc632cb829f8a7" translate="yes" xml:space="preserve">
          <source>Network objects can be iterated to list all the addresses belonging to the network. For iteration, &lt;em&gt;all&lt;/em&gt; hosts are returned, including unusable hosts (for usable hosts, use the &lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt;&lt;code&gt;hosts()&lt;/code&gt;&lt;/a&gt; method). An example:</source>
          <target state="translated">ネットワークオブジェクトを反復して、ネットワークに属するすべてのアドレスをリストできます。反復の場合、使用できないホストを含​​む&lt;em&gt;すべての&lt;/em&gt;ホストが返されます（使用可能なホストの場合は、&lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt; &lt;code&gt;hosts()&lt;/code&gt; &lt;/a&gt;メソッドを使用します）。例：</target>
        </trans-unit>
        <trans-unit id="1c620c8b990249735711860cb7b51cafd949fab4" translate="yes" xml:space="preserve">
          <source>Network objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">ネットワークオブジェクトは、いくつかの演算子をサポートしています。特に明記されていない限り、演算子は互換性のあるオブジェクト間でのみ適用することができます(すなわち、IPv4とIPv4、IPv6とIPv6)。</target>
        </trans-unit>
        <trans-unit id="94d3480ab302bd240a4a2e92c94a41facba908a0" translate="yes" xml:space="preserve">
          <source>Networking &amp;amp; Interprocess Communication</source>
          <target state="translated">ネットワーキングとプロセス間通信</target>
        </trans-unit>
        <trans-unit id="173aff8fcb77fae19c3b7a5cfe41672fc9b21ae0" translate="yes" xml:space="preserve">
          <source>Networking and IPC</source>
          <target state="translated">ネットワークとIPC</target>
        </trans-unit>
        <trans-unit id="7696b1c0a533c955797df8c40d2eb34ddf93894d" translate="yes" xml:space="preserve">
          <source>Networking and Interprocess Communication</source>
          <target state="translated">ネットワークとプロセス間通信</target>
        </trans-unit>
        <trans-unit id="4136d3e620eed1009afaac5766d22a562ea45d95" translate="yes" xml:space="preserve">
          <source>Networks as containers of addresses</source>
          <target state="translated">アドレスのコンテナとしてのネットワーク</target>
        </trans-unit>
        <trans-unit id="1b2021fe3ae1d663f2ee43b16a7c7f0fc183cecc" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;.</source>
          <target state="translated">事前の検査なしに、信頼できないソースからアーカイブを抽出しないでください。&lt;em&gt;パスの&lt;/em&gt;外にファイルが作成される可能性があります。たとえば、 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 始まる絶対ファイル名または2つのドット &lt;code&gt;&quot;..&quot;&lt;/code&gt; 始まるファイル名を持つメンバー。</target>
        </trans-unit>
        <trans-unit id="c62e809819381e83090bced1e2173f918be1f3b0" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;. This module attempts to prevent that. See &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; note.</source>
          <target state="translated">事前の検査なしに、信頼できないソースからアーカイブを抽出しないでください。&lt;em&gt;パスの&lt;/em&gt;外にファイルが作成される可能性があります。たとえば、 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 始まる絶対ファイル名または2つのドット &lt;code&gt;&quot;..&quot;&lt;/code&gt; 始まるファイル名を持つメンバー。このモジュールはそれを防止しようとします。&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; の&lt;/a&gt;注を参照してください。</target>
        </trans-unit>
        <trans-unit id="ccaf85ee75327fc748e39faca2166199011de41a" translate="yes" xml:space="preserve">
          <source>New File</source>
          <target state="translated">新規ファイル</target>
        </trans-unit>
        <trans-unit id="409292424eb18087ed2f720f75aa3dc7008467fa" translate="yes" xml:space="preserve">
          <source>New Import Hooks</source>
          <target state="translated">新規輸入フック</target>
        </trans-unit>
        <trans-unit id="f67997d268c1af98301a345d50239d3f892a0eb7" translate="yes" xml:space="preserve">
          <source>New Indent Width</source>
          <target state="translated">新しいインデント幅</target>
        </trans-unit>
        <trans-unit id="12a8cecf358397da137dcdd0fe30e38555ec9cfd" translate="yes" xml:space="preserve">
          <source>New contexts can also be created using the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor described below. In addition, the module provides three pre-made contexts:</source>
          <target state="translated">新しいコンテキストは、以下で説明する&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成することもできます。さらに、モジュールは3つの事前に作成されたコンテキストを提供します。</target>
        </trans-unit>
        <trans-unit id="7a1d94154a6598cae8341b022c23e40f99e28431" translate="yes" xml:space="preserve">
          <source>New hash objects are created by calling constructor functions:</source>
          <target state="translated">新しいハッシュオブジェクトはコンストラクタ関数を呼び出すことで作成されます。</target>
        </trans-unit>
        <trans-unit id="f0e3ef54012ca2003232ea452f70d451c14796eb" translate="yes" xml:space="preserve">
          <source>New in</source>
          <target state="translated">新品</target>
        </trans-unit>
        <trans-unit id="3044731cb14928152cff1cf7dc1f4fa6c076e116" translate="yes" xml:space="preserve">
          <source>New in version 3.1.</source>
          <target state="translated">バージョン3.1の新機能。</target>
        </trans-unit>
        <trans-unit id="3490f0090dbcdc45af81e4d62ca30e6b962ba596" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRaisesRegexp&lt;/code&gt;.</source>
          <target state="translated">バージョン3.1の新機能： &lt;code&gt;assertRaisesRegexp&lt;/code&gt; という名前で追加されました。</target>
        </trans-unit>
        <trans-unit id="5aaafe02546b7ea7e8be1083e6726b39beceb3be" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRegexpMatches&lt;/code&gt;.</source>
          <target state="translated">バージョン3.1の新機能： &lt;code&gt;assertRegexpMatches&lt;/code&gt; という名前で追加されました。</target>
        </trans-unit>
        <trans-unit id="0cdd0395e78a0dc6664ff5b4d4ec37a63a481081" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;'surrogateescape'&lt;/code&gt; and &lt;code&gt;'surrogatepass'&lt;/code&gt; error handlers.</source>
          <target state="translated">バージョン3.1の新機能： &lt;code&gt;'surrogateescape'&lt;/code&gt; および &lt;code&gt;'surrogatepass'&lt;/code&gt; エラーハンドラー。</target>
        </trans-unit>
        <trans-unit id="32c6d6c31b4876c85b341703ff1176d48fc1033d" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;SEEK_*&lt;/code&gt; constants.</source>
          <target state="translated">バージョン3.1の新機能： &lt;code&gt;SEEK_*&lt;/code&gt; 定数。</target>
        </trans-unit>
        <trans-unit id="ff81f06c49fb2cc34747b6d94a1ad63a6cf4f4f3" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;em&gt;skip&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.1の新機能：&lt;em&gt;スキップ&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="aec3464ceeab8cf46a16efea3d5d6d17ad876e19" translate="yes" xml:space="preserve">
          <source>New in version 3.2.</source>
          <target state="translated">バージョン3.2の新機能。</target>
        </trans-unit>
        <trans-unit id="db31bd421783154e9fc48afcb4954a828a5d37e2" translate="yes" xml:space="preserve">
          <source>New in version 3.2.3: The &lt;code&gt;hash_randomization&lt;/code&gt; attribute.</source>
          <target state="translated">バージョン3.2.3の新機能： &lt;code&gt;hash_randomization&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c0dcdf7c449d4eea6b69af79b67c72ca17c53ff2" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.fromstring&quot;&gt;&lt;code&gt;fromstring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">バージョン3.2の新機能：明確にするために、&lt;a href=&quot;#array.array.fromstring&quot;&gt; &lt;code&gt;fromstring()&lt;/code&gt; &lt;/a&gt;はfrombytes（）に名前が変更され&lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="488e827468c8402f0be6892563ca51a7f7278aa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.tostring&quot;&gt;&lt;code&gt;tostring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">バージョン3.2の新機能：&lt;a href=&quot;#array.array.tostring&quot;&gt; &lt;code&gt;tostring()&lt;/code&gt; &lt;/a&gt;名前に変更された&lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt;明確にするため。</target>
        </trans-unit>
        <trans-unit id="65be5f1abc346b5a084ab6611d2dcd14b97b4c5c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt;&lt;code&gt;assertNotRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.2の新機能：&lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt; &lt;code&gt;assertNotRegex()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9df3735582c48b073e7a16fa82ca6c9e225bf665" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;fromstring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">New in version 3.2: &lt;code&gt;fromstring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt; for clarity.</target>
        </trans-unit>
        <trans-unit id="8b17191ede606c26b4c8116dfbc25448c9f8f280" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;pdb.py&lt;/code&gt; now accepts a &lt;code&gt;-c&lt;/code&gt; option that executes commands as if given in a &lt;code&gt;.pdbrc&lt;/code&gt; file, see &lt;a href=&quot;#debugger-commands&quot;&gt;Debugger Commands&lt;/a&gt;.</source>
          <target state="translated">バージョン3.2の新機能： &lt;code&gt;pdb.py&lt;/code&gt; が、 &lt;code&gt;.pdbrc&lt;/code&gt; ファイルで指定されているかのようにコマンドを実行する &lt;code&gt;-c&lt;/code&gt; オプションを受け入れるようになりました。「&lt;a href=&quot;#debugger-commands&quot;&gt;デバッガーコマンド&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="95685927977b9dcf02e0264bd2425c95cb43cd4d" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;tostring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">New in version 3.2: &lt;code&gt;tostring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt; for clarity.</target>
        </trans-unit>
        <trans-unit id="fc5a5d84b89ad5a4ba8ce3020321268ef0fa4d48" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;body&lt;/em&gt; can now be an iterable.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;body&lt;/em&gt;を反復可能にすることができます。</target>
        </trans-unit>
        <trans-unit id="8a92a77a7766db733546c9b77cd133915e1079c0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;data&lt;/em&gt; can be an iterable object.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;データ&lt;/em&gt;は反復可能なオブジェクトに&lt;em&gt;する&lt;/em&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="492fab092548a082cfe9773b6e25423f9e425e63" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;maxtasksperchild&lt;/em&gt;</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;maxtasksperchild&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9af04aa0a51b0152280c245269d849a5d155aaa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added support for the context management protocol.</source>
          <target state="translated">バージョン3.2の新機能:コンテキスト管理プロトコルのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="c7e70655ae33c518c88446ef6624470fc4ce9d29" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added the ability to use &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; as a context manager.</source>
          <target state="translated">バージョン3.2の新機能：&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;をコンテキストマネージャーとして使用する機能が追加されました。</target>
        </trans-unit>
        <trans-unit id="d09766d62b8d99b219d60b276118965866ee5426" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Automatic addition of the &lt;code&gt;__wrapped__&lt;/code&gt; attribute.</source>
          <target state="translated">バージョン3.2の新機能： &lt;code&gt;__wrapped__&lt;/code&gt; 属性の自動追加。</target>
        </trans-unit>
        <trans-unit id="6a2cb5a7143cca2378773c116c1731a3835404ed" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Context manager support.</source>
          <target state="translated">バージョン3.2の新機能:コンテキストマネージャのサポート。</target>
        </trans-unit>
        <trans-unit id="e4691f22ec6af8115c8ef643b32bf896e13020ae" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Copying of the &lt;code&gt;__annotations__&lt;/code&gt; attribute by default.</source>
          <target state="translated">バージョン3.2の新機能：デフォルトでの &lt;code&gt;__annotations__&lt;/code&gt; 属性のコピー。</target>
        </trans-unit>
        <trans-unit id="d43b8283dd2a98a7af1fa11e7c76adbd21232c7c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">バージョン3.2の新機能：オプションの &lt;code&gt;source&lt;/code&gt; および &lt;code&gt;lineno&lt;/code&gt; 属性と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;への引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="00f6a39f554667e5933437ffc7d786f06f42d1ca" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; were added.</target>
        </trans-unit>
        <trans-unit id="fafccb4e9a5405ae3b834787685cd7c2b125b7e3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Replaces &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.2の新機能：&lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; を&lt;/a&gt;置き換えます。</target>
        </trans-unit>
        <trans-unit id="28b0f51bd56d33241ea9b5ddcc94c77be36c2020" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the &lt;code&gt;rot_13&lt;/code&gt; text transform.</source>
          <target state="translated">バージョン3.2の新機能： &lt;code&gt;rot_13&lt;/code&gt; テキスト変換の復元。</target>
        </trans-unit>
        <trans-unit id="970ab611ee1b762f1709817732af44838b6f66a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the binary transforms.</source>
          <target state="translated">バージョン3.2の新機能:バイナリ変換の復元。</target>
        </trans-unit>
        <trans-unit id="9dcceb3168131b28f25a8473e7a17f54fc795c88" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; marker.</source>
          <target state="translated">バージョン3.2の新機能： &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; マーカー。</target>
        </trans-unit>
        <trans-unit id="b402819ef1b2aed8bcd076ddf219c4cc93fd00a5" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;annotate&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;annotate&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="e55bd4f980e8fc073a71ff35dfc24e9dd75e20d9" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;autojunk&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;autojunk&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="2de34420d3f8e77e82c57b967288676e7b162df3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;bjunk&lt;/em&gt; and &lt;em&gt;bpopular&lt;/em&gt; attributes.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;bjunk&lt;/em&gt;および&lt;em&gt;bpopular&lt;/em&gt;属性。</target>
        </trans-unit>
        <trans-unit id="07dfce94408fc7eb43edf07bf810590d083842d0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;encoding&lt;/em&gt; parameter. Previously, all files were read using the default encoding for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;エンコーディング&lt;/em&gt;パラメータ。以前は、すべてのファイルは&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; の&lt;/a&gt;デフォルトのエンコーディングを使用して読み取られていました。</target>
        </trans-unit>
        <trans-unit id="e00307d0d1ac1787c787512ca063499efdae81fb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;exist_ok&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;exist_ok&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="5eff261c50725aaf56234c60b7ad321e0b6d7a28" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;nosigint&lt;/em&gt; argument. Previously, a SIGINT handler was never set by Pdb.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;nosigint&lt;/em&gt;引数。以前は、SIGINTハンドラーはPdbによって設定されていませんでした。</target>
        </trans-unit>
        <trans-unit id="d9d3ff17279278f1fbe533d1cb8d4a4e101a51cb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;最適化&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="e360c3f1e3102b0b5025a254db53852cc697487a" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;short_empty_elements&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.2の新機能：&lt;em&gt;short_empty_elements&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="0d065c9ae385620cf6d16a31d56d0cbb370df8a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The command-line options &lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; were added.</source>
          <target state="translated">バージョン3.2の新機能：コマンドラインオプション &lt;code&gt;-b&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt; および &lt;code&gt;-f&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="a75b199eafd71fb28b679c45575e353e48ba2b36" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This class was previously named &lt;code&gt;_TextTestResult&lt;/code&gt;. The old name still exists as an alias but is deprecated.</source>
          <target state="translated">バージョン3.2の新機能：このクラスは、以前は &lt;code&gt;_TextTestResult&lt;/code&gt; という名前でした。古い名前はエイリアスとしてまだ存在しますが、非推奨です。</target>
        </trans-unit>
        <trans-unit id="82b107c9c10c5a55aee4a0e3debb2416f6131861" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt;&lt;code&gt;getLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">バージョン3.2の新機能：この関数は&lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt; &lt;code&gt;getLogRecordFactory()&lt;/code&gt; &lt;/a&gt;とともに提供され、開発者がロギングイベントを表す&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;構築方法をより詳細に制御できるようにします。</target>
        </trans-unit>
        <trans-unit id="196f39022abdb30b19d21c28520cda8cdeace93c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt;&lt;code&gt;setLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">バージョン3.2の新機能：この関数は&lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt; &lt;code&gt;setLogRecordFactory()&lt;/code&gt; &lt;/a&gt;とともに提供され、開発者はロギングイベントを表す&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;構築方法をより詳細に制御できます。</target>
        </trans-unit>
        <trans-unit id="5feff224bf3a58e8d61eacdd8a8522e0dbed87b0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function was first removed in Python 3.0 and then brought back in Python 3.2.</source>
          <target state="translated">バージョン3.2の新機能:この関数はPython 3.0で削除され、Python 3.2で復活しました。</target>
        </trans-unit>
        <trans-unit id="da106e3ee3289214b471fcbb56de045708a54150" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Windows support.</source>
          <target state="translated">バージョン3.2の新機能:Windowsのサポート。</target>
        </trans-unit>
        <trans-unit id="e656aeccfdd3bd906cae00fa7c0478f89eb5d3a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3.</source>
          <target state="translated">バージョン3.3の新機能。</target>
        </trans-unit>
        <trans-unit id="f3e98ffdcb282b0853dcb031735ce601012ab4f1" translate="yes" xml:space="preserve">
          <source>New in version 3.3: &lt;code&gt;clear()&lt;/code&gt; and &lt;code&gt;copy()&lt;/code&gt; methods.</source>
          <target state="translated">バージョン3.3の新機能： &lt;code&gt;clear()&lt;/code&gt; および &lt;code&gt;copy()&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="c5e4a238bfa33077d729fa48ecf1b789826f4102" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as a file descriptor on some platforms.</source>
          <target state="translated">バージョン3.3の新機能：一部のプラットフォームでファイル記述子として&lt;em&gt;パス&lt;/em&gt;を指定するためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="16af71ee4e36ec0cae6b181b694b7f51956f7a0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor for &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.3の新機能：&lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; の&lt;/a&gt;オープンファイル記述子として&lt;em&gt;パス&lt;/em&gt;を指定するためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="038d2a2d4a390798684aa8f618e2a86258a63438" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.3の新機能：開いているファイル記述子としての&lt;em&gt;パス&lt;/em&gt;、および&lt;em&gt;dir_fd&lt;/em&gt;と&lt;em&gt;follow_symlinks&lt;/em&gt;引数を指定するためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c61f8f029e31102256de167c06ecfbdb5b027ab4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt;, &lt;em&gt;follow_symlinks&lt;/em&gt;, and &lt;em&gt;ns&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.3の新機能：オープンファイル記述子としての&lt;em&gt;パス&lt;/em&gt;、および&lt;em&gt;dir_fd&lt;/em&gt;、&lt;em&gt;follow_symlinks&lt;/em&gt;、および&lt;em&gt;ns&lt;/em&gt;パラメーターを指定するためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c25592d4be380fcbfc21e2a7e95a3669a8c8becd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor.</source>
          <target state="translated">バージョン3.3の新機能：開いているファイル記述子として&lt;em&gt;パス&lt;/em&gt;を指定するためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="76739bbab39d5c2710046bf45eec1397909326fd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for unary plus, unary minus, and in-place multiset operations.</source>
          <target state="translated">バージョン3.3の新機能:単項プラス、単項マイナス、インプレースマルチセット操作のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="046d02c5d1094d36422bcd5465bc69373e23f681" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt;&lt;code&gt;st_atime_ns&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt;&lt;code&gt;st_mtime_ns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt;&lt;code&gt;st_ctime_ns&lt;/code&gt;&lt;/a&gt; members.</source>
          <target state="translated">バージョン3.3の新機能：&lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt; &lt;code&gt;st_atime_ns&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt; &lt;code&gt;st_mtime_ns&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt; &lt;code&gt;st_ctime_ns&lt;/code&gt; &lt;/a&gt;メンバーが追加されました。</target>
        </trans-unit>
        <trans-unit id="7a588e30cae71f1b15d920765c3d80c0bf7800b8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments, specifying a file descriptor instead of a path.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;dir_fd&lt;/em&gt;および&lt;em&gt;follow_symlinks&lt;/em&gt;引数を追加し、パスの代わりにファイル記述子を指定しました。</target>
        </trans-unit>
        <trans-unit id="216100c31adc18c23bb9e9b560bc677eca6633bd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; argument, and now allow &lt;em&gt;target_is_directory&lt;/em&gt; on non-Windows platforms.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;dir_fd&lt;/em&gt;引数が追加され、Windows以外のプラットフォームで&lt;em&gt;target_is_directory&lt;/em&gt;が許可されるように&lt;em&gt;なり&lt;/em&gt;ました。</target>
        </trans-unit>
        <trans-unit id="cb1fa9f44f4b3e986271d3360090ef64263dfa98" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;src_dir_fd&lt;/em&gt;, &lt;em&gt;dst_dir_fd&lt;/em&gt;, and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;src_dir_fd&lt;/em&gt;、&lt;em&gt;dst_dir_fd&lt;/em&gt;、および&lt;em&gt;follow_symlinks&lt;/em&gt;引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="690563f7aa9f77702829a99858275338d41ffc11" translate="yes" xml:space="preserve">
          <source>New in version 3.3: All the above &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; subclasses were added.</source>
          <target state="translated">バージョン3.3の新機能：上記のすべての&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;サブクラスが追加されました。</target>
        </trans-unit>
        <trans-unit id="d7c35a84efd3292c4e322bb6cd08bf0c445e5d0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Connection objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the connection object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.3の新機能：接続オブジェクトは、コンテキスト管理プロトコルをサポートするようになりました。「&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャーのタイプ」を&lt;/a&gt;参照してください。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;は接続オブジェクトを返し、&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="43b79ec2cfdf493c4c7ba024e42791b064af21b0" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Formerly, this module was part of the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">バージョン3.3の新機能：以前は、このモジュールは&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールの一部でした。</target>
        </trans-unit>
        <trans-unit id="7ebcbd28e34b67cd966b999669d0242ada456632" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Listener objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the listener object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.3の新機能：リスナーオブジェクトは、コンテキスト管理プロトコルをサポートするようになりました。「&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャーのタイプ」を&lt;/a&gt;参照してください。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;はリスナーオブジェクトを返し、&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="70103fb68f7f0cfa32aba69ba39031a736a2d76b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Pool objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the pool object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.3の新機能：プールオブジェクトは、コンテキスト管理プロトコルをサポートするようになりました。「&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャーのタイプ」を&lt;/a&gt;参照してください。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;はプールオブジェクトを返し、&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="0564ad09da5d11fa74ab8521856c7a0ee08a4a38" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;.</source>
          <target state="translated">バージョン3.3の新機能：一部のオペレーティングシステムでは、 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; や &lt;code&gt;os.SEEK_DATA&lt;/code&gt; などの追加の値をサポートできます。</target>
        </trans-unit>
        <trans-unit id="28848c417a2cec6f368a3d64351da7441b8eda2f" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;. The valid values for a file could depend on it being open in text or binary mode.</source>
          <target state="translated">バージョン3.3の新機能：一部のオペレーティングシステムでは、 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; や &lt;code&gt;os.SEEK_DATA&lt;/code&gt; などの追加の値をサポートできます。ファイルの有効な値は、テキストモードまたはバイナリモードで開いているかどうかによって異なります。</target>
        </trans-unit>
        <trans-unit id="e8db3552cce786db5f51c5e10688a0e7ea38316b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Support for Chrome/Chromium has been added.</source>
          <target state="translated">バージョン3.3の新機能:Chrome/Chromiumのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="e3a14a6878f1d57e3a61755e1e35f512ac6cf6a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#range.start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#range.stop&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#range.step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">バージョン3.3の新機能：&lt;a href=&quot;#range.start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#range.stop&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#range.step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="738beaa1df24e84cceeec4368cebe369172c2a07" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt; base class was added.</source>
          <target state="translated">バージョン3.3の新機能：&lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; &lt;/a&gt;基本クラスが追加されました。</target>
        </trans-unit>
        <trans-unit id="bd2ee4ce23d4cda751ffdf5ed2ab607d0320d229" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;dir_fd&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="8bbb7dcfc93a3256da3e77e30128896f8934e79e" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;dir_fd&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="8e3679a20a6466e36ee13269b95778590402cdc8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;follow_symlinks&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;follow_symlinks&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="f5a1bcb4d58f63caf511ef4af7b5a61495f919de" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;src_dir_fd&lt;/em&gt; and &lt;em&gt;dst_dir_fd&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;src_dir_fd&lt;/em&gt;および&lt;em&gt;dst_dir_fd&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="959865bf3e479ce8479a65e679ed0d30ba7e0c4b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;timeout&lt;/em&gt; argument was added.</source>
          <target state="translated">バージョン3.3の新機能：&lt;em&gt;タイムアウト&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="ff5f89afe35355ca3e836deef3c91bc2e3c948b4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: This error used to be a subtype of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.3の新機能：このエラーは、以前は&lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; の&lt;/a&gt;サブタイプでしたが、現在は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; の&lt;/a&gt;エイリアスになっています。</target>
        </trans-unit>
        <trans-unit id="41224dc3ad1482785fdd83d4be25d59287870563" translate="yes" xml:space="preserve">
          <source>New in version 3.4.</source>
          <target state="translated">バージョン3.4の新機能。</target>
        </trans-unit>
        <trans-unit id="c2d2413b8a3a54c5ac894c0e648d044eed2cfc3a" translate="yes" xml:space="preserve">
          <source>New in version 3.4.2.</source>
          <target state="translated">バージョン3.4.2の新機能。</target>
        </trans-unit>
        <trans-unit id="3d45319c8b08d09575a413772fc1dfd31f6be0bd" translate="yes" xml:space="preserve">
          <source>New in version 3.4.4.</source>
          <target state="translated">バージョン3.4.4の新機能。</target>
        </trans-unit>
        <trans-unit id="d3fc5c5c6b68de9938f037f211d874194800b33d" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;--bind&lt;/code&gt; argument was introduced.</source>
          <target state="translated">バージョン3.4の新機能：-- &lt;code&gt;--bind&lt;/code&gt; 引数が導入されました。</target>
        </trans-unit>
        <trans-unit id="04e6b7704b4197ee6a706885b339be509977b09a" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;fish&lt;/code&gt; and &lt;code&gt;csh&lt;/code&gt; activation scripts.</source>
          <target state="translated">バージョン3.4の新機能： &lt;code&gt;fish&lt;/code&gt; および &lt;code&gt;csh&lt;/code&gt; アクティベーションスクリプト。</target>
        </trans-unit>
        <trans-unit id="07c6d19e4ee989f8d0d6e80bb2cbc4015ab1781f" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;em&gt;context&lt;/em&gt;</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;コンテキスト&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="936964700ac0e4fd4816f6dbc756a4bbb96008b9" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Support for detecting non-root mount points on Windows.</source>
          <target state="translated">バージョン 3.4 の新機能。Windows上の非ルートマウントポイントの検出をサポート。</target>
        </trans-unit>
        <trans-unit id="abf63dbf0eed08509d121c30dc1546ccdf810093" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;code&gt;-o&lt;/code&gt; command line option.</source>
          <target state="translated">バージョン3.4の新機能： &lt;code&gt;-o&lt;/code&gt; コマンドラインオプション。</target>
        </trans-unit>
        <trans-unit id="66caeee5dc102404c5331845b0c15981aad98a8a" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;em&gt;default&lt;/em&gt; keyword-only argument.</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;デフォルトの&lt;/em&gt;キーワードのみの引数。</target>
        </trans-unit>
        <trans-unit id="4a4446cd72af1035874858d7979681228958c99b" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;em&gt;encodings&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; keyword arguments.</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;encodings&lt;/em&gt;および&lt;em&gt;errors&lt;/em&gt;キーワード引数。</target>
        </trans-unit>
        <trans-unit id="6d2024551b24076a993344063174df6ead408974" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;em&gt;filterfunc&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;filterfunc&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="b83a71ae56ef44ebfee3c63e25b3ec77ed9bfc29" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;em&gt;map&lt;/em&gt; constructor argument.</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;マップ&lt;/em&gt;コンストラクター引数。</target>
        </trans-unit>
        <trans-unit id="8101eef7ac9068476ab49bb67e1a8ce316c1da05" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The &lt;em&gt;short_empty_elements&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.4の新機能：&lt;em&gt;short_empty_elements&lt;/em&gt;パラメーター。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
