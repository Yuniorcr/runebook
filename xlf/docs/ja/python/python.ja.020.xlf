<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="d5ccd58d50569e63a71978a9091c82e6394a9a4f" translate="yes" xml:space="preserve">
          <source>Sequences representing terminal tokens may be represented as either two-element lists of the form &lt;code&gt;(1, 'name')&lt;/code&gt; or as three-element lists of the form &lt;code&gt;(1,
'name', 56)&lt;/code&gt;. If the third element is present, it is assumed to be a valid line number. The line number may be specified for any subset of the terminal symbols in the input tree.</source>
          <target state="translated">端末トークンを表すシーケンスは、形式 &lt;code&gt;(1, 'name')&lt;/code&gt; 2要素リストまたは形式 &lt;code&gt;(1, 'name', 56)&lt;/code&gt; 3要素リストとして表すことができます。3番目の要素が存在する場合、それは有効な行番号と見なされます。行番号は、入力ツリーの終端記号のサブセットに指定できます。</target>
        </trans-unit>
        <trans-unit id="36d6bf1e8e8a8482a74fed284c2fd37898400913" translate="yes" xml:space="preserve">
          <source>Serialization is a more primitive notion than persistence; although &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; reads and writes file objects, it does not handle the issue of naming persistent objects, nor the (even more complicated) issue of concurrent access to persistent objects. The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module can transform a complex object into a byte stream and it can transform the byte stream into an object with the same internal structure. Perhaps the most obvious thing to do with these byte streams is to write them onto a file, but it is also conceivable to send them across a network or store them in a database. The &lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt; module provides a simple interface to pickle and unpickle objects on DBM-style database files.</source>
          <target state="translated">シリアライゼーションは、永続化というより原始的な概念です。が、&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;ファイルオブジェクトを読み取り、書き込み、それが永続的なオブジェクトに名前を付けるの問題、また永続オブジェクトへの同時アクセスの（さらに複雑）な問題を扱いません。&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは、バイトストリームに複雑なオブジェクトを変換することができ、それは、同じ内部構造を持つオブジェクトにバイトストリームを変換することができます。おそらくこれらのバイトストリームで行う最も明白なことは、それらをファイルに書き込むことですが、ネットワークを介して送信したり、データベースに保存したりすることも考えられます。&lt;a href=&quot;shelve#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt;モジュールは、DBM形式のデータベースファイル上のピクルス化したりunpickle化したりオブジェクトへのシンプルなインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="05657b35e8dc788292edb60a3e95f42c6235d981" translate="yes" xml:space="preserve">
          <source>Serialize &lt;em&gt;obj&lt;/em&gt; as a JSON formatted stream to &lt;em&gt;fp&lt;/em&gt; (a &lt;code&gt;.write()&lt;/code&gt;-supporting &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;) using this &lt;a href=&quot;#py-to-json-table&quot;&gt;conversion table&lt;/a&gt;.</source>
          <target state="translated">シリアライズ&lt;em&gt;OBJ&lt;/em&gt;にJSONフォーマットのストリームとして&lt;em&gt;FP&lt;/em&gt;（ &lt;code&gt;.write()&lt;/code&gt; -supporting &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトを&lt;/a&gt;、この使用して）&lt;a href=&quot;#py-to-json-table&quot;&gt;変換テーブル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87e897b6168206bd1d8ec3588a3cf91315056cf6" translate="yes" xml:space="preserve">
          <source>Serialize &lt;em&gt;obj&lt;/em&gt; as a JSON formatted stream to &lt;em&gt;fp&lt;/em&gt; (a &lt;code&gt;.write()&lt;/code&gt;-supporting &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;) using this &lt;a href=&quot;#py-to-json-table&quot;&gt;conversion table&lt;/a&gt;.</source>
          <target state="translated">シリアライズ&lt;em&gt;OBJ&lt;/em&gt;にJSONフォーマットのストリームとして&lt;em&gt;FP&lt;/em&gt;（ &lt;code&gt;.write()&lt;/code&gt; -supporting&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-like-object&quot;&gt;ファイルのようなオブジェクトを&lt;/a&gt;、この使用して）&lt;a href=&quot;#py-to-json-table&quot;&gt;変換テーブル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d1918dbb0e980a99deaf541ebf37e8d52bbc9d3" translate="yes" xml:space="preserve">
          <source>Serialize &lt;em&gt;obj&lt;/em&gt; to a JSON formatted &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; using this &lt;a href=&quot;#py-to-json-table&quot;&gt;conversion table&lt;/a&gt;. The arguments have the same meaning as in &lt;a href=&quot;#json.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シリアライズ&lt;em&gt;OBJ&lt;/em&gt; JSONにフォーマット&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;使用してこの&lt;a href=&quot;#py-to-json-table&quot;&gt;変換テーブルを&lt;/a&gt;。引数は、&lt;a href=&quot;#json.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="edf048c9f8b7d7d20b45b0d0069273eed792d36c" translate="yes" xml:space="preserve">
          <source>Server Creation Notes</source>
          <target state="translated">サーバー作成時の注意事項</target>
        </trans-unit>
        <trans-unit id="d5b379c75de57ca42fac3ec0e4e15f482dbc3ecf" translate="yes" xml:space="preserve">
          <source>Server Objects</source>
          <target state="translated">サーバーオブジェクト</target>
        </trans-unit>
        <trans-unit id="d9240d3eec9bb5be632edbe4177d34425faad1b3" translate="yes" xml:space="preserve">
          <source>Server classes have the same external methods and attributes, no matter what network protocol they use.</source>
          <target state="translated">サーバークラスは、どのようなネットワークプロトコルを使用していても、同じ外部メソッドと属性を持っています。</target>
        </trans-unit>
        <trans-unit id="11e0cc88f646a5690338b6238786f312c43e254d" translate="yes" xml:space="preserve">
          <source>Server code:</source>
          <target state="translated">サーバーコード。</target>
        </trans-unit>
        <trans-unit id="561a2f0bab77c4edc157115288d4695158be0e47" translate="yes" xml:space="preserve">
          <source>Server objects are created by &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt;&lt;code&gt;start_unix_server()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">サーバーオブジェクトは、&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.loop.create_unix_server&quot;&gt; &lt;code&gt;loop.create_unix_server()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt; &lt;code&gt;start_unix_server()&lt;/code&gt; &lt;/a&gt;関数によって作成されます。</target>
        </trans-unit>
        <trans-unit id="36dac53af094ca8933bed2a1ed17adcb32c79a5c" translate="yes" xml:space="preserve">
          <source>Server process managers are more flexible than using shared memory objects because they can be made to support arbitrary object types. Also, a single manager can be shared by processes on different computers over a network. They are, however, slower than using shared memory.</source>
          <target state="translated">サーバプロセスマネージャは、任意のオブジェクトタイプに対応させることができるため、共有メモリオブジェクトを使用するよりも柔軟性が高い。また、ネットワークを介して異なるコンピュータ上のプロセスで単一のマネージャを共有することができます。しかし、共有メモリを使用するよりは遅くなります。</target>
        </trans-unit>
        <trans-unit id="bef6a61d358478fd5303856f7293562e581bc9ff" translate="yes" xml:space="preserve">
          <source>Server socket example listening on localhost IPv4:</source>
          <target state="translated">ローカルホストのIPv4でリッスンしているサーバソケットの例。</target>
        </trans-unit>
        <trans-unit id="426af15533ff5675a8cbb1f78fd5055c1f671135" translate="yes" xml:space="preserve">
          <source>Server-side operation</source>
          <target state="translated">サーバー側の運用</target>
        </trans-unit>
        <trans-unit id="05a15f6da0686d4c01d6ae46f46a570619db03c8" translate="yes" xml:space="preserve">
          <source>Server:</source>
          <target state="translated">Server:</target>
        </trans-unit>
        <trans-unit id="c034ab720ffcced2f7d761cfa5ce454564850601" translate="yes" xml:space="preserve">
          <source>ServerProxy Objects</source>
          <target state="translated">ServerProxy オブジェクト</target>
        </trans-unit>
        <trans-unit id="bdcb0d79b6d86c18c0015cc7924707d73a279502" translate="yes" xml:space="preserve">
          <source>Servers that support the XML introspection API support some common methods grouped under the reserved &lt;code&gt;system&lt;/code&gt; attribute:</source>
          <target state="translated">XMLイントロスペクションAPIをサポートするサーバーは、予約済み &lt;code&gt;system&lt;/code&gt; 属性の下にグループ化されたいくつかの一般的なメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="06aedbc7c62125c561bccaf3876cc69f519775be" translate="yes" xml:space="preserve">
          <source>Session object used by &lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">が使用するSessionオブジェクト&lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22e69cc0d11d13db91cf3230d2db8866659561fd" translate="yes" xml:space="preserve">
          <source>Session tickets are no longer sent as part of the initial handshake and are handled differently. &lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt;&lt;code&gt;SSLSocket.session&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSession&quot;&gt;&lt;code&gt;SSLSession&lt;/code&gt;&lt;/a&gt; are not compatible with TLS 1.3.</source>
          <target state="translated">セッションチケットは、初期ハンドシェイクの一部として送信されなくなり、別の方法で処理されます。&lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt; &lt;code&gt;SSLSocket.session&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLSession&quot;&gt; &lt;code&gt;SSLSession&lt;/code&gt; &lt;/a&gt;はTLS 1.3と互換性がありません。</target>
        </trans-unit>
        <trans-unit id="cd3ecc3030839f01b6a696b411b14818e3c11033" translate="yes" xml:space="preserve">
          <source>Set &amp;ldquo;info&amp;rdquo; to &lt;em&gt;info&lt;/em&gt;, which should be a string.</source>
          <target state="translated">設定するには、「情報」&lt;em&gt;の情報&lt;/em&gt;文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="16456bb95e8e7d22a54f67fa35be834c21a0b4b5" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ANNOTATION&lt;/code&gt;s for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">&lt;em&gt;メールボックスに&lt;/em&gt; &lt;code&gt;ANNOTATION&lt;/code&gt; を設定し&lt;em&gt;ます&lt;/em&gt;。このメソッドは非標準ですが、 &lt;code&gt;Cyrus&lt;/code&gt; サーバーでサポートされています。</target>
        </trans-unit>
        <trans-unit id="7606500d0bbbfcd3e4af59d5fd72d15d64902790" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;d[key]&lt;/code&gt; to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;d[key]&lt;/code&gt; を&lt;em&gt;valueに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4f68a6dfd2b8337e6b46d26e232d1570a1d4a689" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;callback&lt;/em&gt; as the handler for the &lt;em&gt;signum&lt;/em&gt; signal.</source>
          <target state="translated">&lt;em&gt;signum&lt;/em&gt;シグナルのハンドラーとして&lt;em&gt;コールバック&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5683c12ea608832893ddd12f2584d0478e288bd9" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;executor&lt;/em&gt; as the default executor used by &lt;a href=&quot;#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;run_in_executor()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;executor&lt;/em&gt; should be an instance of &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;executor&lt;/em&gt;を&lt;a href=&quot;#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;run_in_executor()&lt;/code&gt; が&lt;/a&gt;使用するデフォルトの&lt;em&gt;executor&lt;/em&gt;として設定します。&lt;em&gt;executor&lt;/em&gt;は&lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; の&lt;/a&gt;インスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="f3aef32390e5b87045eda85ae39945cc80290d99" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;field&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt; through &lt;code&gt;MsiRecordSetInteger()&lt;/code&gt;. Both &lt;em&gt;field&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be an integer.</source>
          <target state="translated">&lt;code&gt;MsiRecordSetInteger()&lt;/code&gt; を使用して&lt;em&gt;フィールド&lt;/em&gt;を&lt;em&gt;値に&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;フィールド&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;はどちらも整数でなければなりません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d366870c4e5df1be6bcf128bb06e1ffc0ec7d0d8" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;field&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt; through &lt;code&gt;MsiRecordSetString()&lt;/code&gt;. &lt;em&gt;field&lt;/em&gt; must be an integer; &lt;em&gt;value&lt;/em&gt; a string.</source>
          <target state="translated">&lt;code&gt;MsiRecordSetString()&lt;/code&gt; を使用して&lt;em&gt;フィールド&lt;/em&gt;を&lt;em&gt;値に&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;フィールド&lt;/em&gt;は整数でなければなりません。文字列の&lt;em&gt;値&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d711f7353ba2f5f998919cb9262466cecdaec0" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;field&lt;/em&gt; to the contents of the file named &lt;em&gt;value&lt;/em&gt;, through &lt;code&gt;MsiRecordSetStream()&lt;/code&gt;. &lt;em&gt;field&lt;/em&gt; must be an integer; &lt;em&gt;value&lt;/em&gt; a string.</source>
          <target state="translated">&lt;code&gt;MsiRecordSetStream()&lt;/code&gt; を使用して、&lt;em&gt;value&lt;/em&gt;という名前のファイルの内容に&lt;em&gt;フィールド&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;フィールド&lt;/em&gt;は整数でなければなりません。文字列の&lt;em&gt;値&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="022a30e7abf3656081450d882a3da11840f7f280" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;handler&lt;/em&gt; as the new event loop exception handler.</source>
          <target state="translated">&lt;em&gt;ハンドラー&lt;/em&gt;を新しいイベントループ例外&lt;em&gt;ハンドラー&lt;/em&gt;として設定します。</target>
        </trans-unit>
        <trans-unit id="e9b877a6c3701eb40653ee8833a3138ce761d471" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;loop&lt;/em&gt; as a current event loop for the current OS thread.</source>
          <target state="translated">現在のOSスレッドの現在のイベント&lt;em&gt;ループ&lt;/em&gt;として&lt;em&gt;ループ&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cf681a6f73b65347c55bff90c5c725445f3c193a" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;n&lt;/em&gt; to 4 for quartiles (the default). Set &lt;em&gt;n&lt;/em&gt; to 10 for deciles. Set &lt;em&gt;n&lt;/em&gt; to 100 for percentiles which gives the 99 cuts points that separate &lt;em&gt;data&lt;/em&gt; into 100 equal sized groups. Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;n&lt;/em&gt; is not least 1.</source>
          <target state="translated">四分位数の&lt;em&gt;場合はn&lt;/em&gt;を4に設定します（デフォルト）。セット&lt;em&gt;のn&lt;/em&gt;十分位数は10に。パーセンタイルの&lt;em&gt;n&lt;/em&gt;を100に設定すると、&lt;em&gt;データ&lt;/em&gt;を100の等しいサイズのグループに分ける99のカットポイントが得られ&lt;em&gt;ます&lt;/em&gt;。レイズ&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; は&lt;/a&gt;場合&lt;em&gt;nは&lt;/em&gt; 1以上ではありません。</target>
        </trans-unit>
        <trans-unit id="fb67a02589eac04e6e135bbe4bbebebe7bad84c2" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;n&lt;/em&gt; to 4 for quartiles (the default). Set &lt;em&gt;n&lt;/em&gt; to 10 for deciles. Set &lt;em&gt;n&lt;/em&gt; to 100 for percentiles which gives the 99 cuts points that separate the normal distribution into 100 equal sized groups.</source>
          <target state="translated">四分位数の&lt;em&gt;場合はn&lt;/em&gt;を4に設定します（デフォルト）。セット&lt;em&gt;のn&lt;/em&gt;十分位数は10に。パーセンタイルの&lt;em&gt;n&lt;/em&gt;を100に設定すると、正規分布を100の等しいサイズのグループに分離する99のカットポイントが得られます。</target>
        </trans-unit>
        <trans-unit id="635cde80ec891f5dec8810fa6248e4c5d89aa59b" translate="yes" xml:space="preserve">
          <source>Set &lt;em&gt;pwd&lt;/em&gt; as default password to extract encrypted files.</source>
          <target state="translated">セット&lt;em&gt;PWD&lt;/em&gt;暗号化されたファイルを抽出するために、デフォルトのパスワードとして。</target>
        </trans-unit>
        <trans-unit id="4f970b415fd6937ee3d26fbdcb5b36b9b44a3bc6" translate="yes" xml:space="preserve">
          <source>Set Breakpoint</source>
          <target state="translated">ブレークポイントの設定</target>
        </trans-unit>
        <trans-unit id="9defdb947f4b08ab1bcf41dc0f856b8b295f95f8" translate="yes" xml:space="preserve">
          <source>Set Edge Trigger behavior, the default is Level Trigger behavior</source>
          <target state="translated">エッジトリガーの動作を設定します。</target>
        </trans-unit>
        <trans-unit id="40166923dafd695538e9dcf2d327021c01b2ba25" translate="yes" xml:space="preserve">
          <source>Set Types &amp;mdash; &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;frozenset&lt;/code&gt;</source>
          <target state="translated">セットタイプ&amp;mdash; &lt;code&gt;set&lt;/code&gt; 、 &lt;code&gt;frozenset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c612ccf3a916aa89950c6a58419b199b0f2f08e" translate="yes" xml:space="preserve">
          <source>Set Types &amp;mdash; set, frozenset</source>
          <target state="translated">セットタイプ&amp;mdash;セット、フローズンセット</target>
        </trans-unit>
        <trans-unit id="1c369e7a0a71d40475e57ddf2de9304667d38539" translate="yes" xml:space="preserve">
          <source>Set UID bit.</source>
          <target state="translated">UIDビットを設定します。</target>
        </trans-unit>
        <trans-unit id="e62fd3dfe422aabd5425a4ca6cda6a02d7b5ab18" translate="yes" xml:space="preserve">
          <source>Set a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; if policy says it&amp;rsquo;s OK to do so.</source>
          <target state="translated">ポリシーで許可されている場合は、&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="b2b93c4d8cce170887a56495238f98e6e8d44ba3" translate="yes" xml:space="preserve">
          <source>Set a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt;, without checking with policy to see whether or not it should be set.</source>
          <target state="translated">設定する&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;、それを設定すべきかどうかのポリシーのチェックをせずに、。</target>
        </trans-unit>
        <trans-unit id="1b3b19b19213c0bae1feff6d44d4c0d4f45aa0d8" translate="yes" xml:space="preserve">
          <source>Set a breakpoint on the current line.</source>
          <target state="translated">現在の行にブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="65c359333072d422fc0d2bd09be155c3b1a8fadc" translate="yes" xml:space="preserve">
          <source>Set a callable which is used to create a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;作成に使用される呼び出し可能オブジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="44825c6e24e2162f47cc30cfc87d40a49ecf8f1d" translate="yes" xml:space="preserve">
          <source>Set a factory used by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt;&lt;code&gt;loop.create_task()&lt;/code&gt;&lt;/a&gt; to create &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Tasks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_task&quot;&gt; &lt;code&gt;loop.create_task()&lt;/code&gt; で&lt;/a&gt;使用するファクトリを設定して&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Tasks&lt;/code&gt; &lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="c89e0adb5c5d30817d64abcec09ff08cf9e61887" translate="yes" xml:space="preserve">
          <source>Set a new &lt;em&gt;condition&lt;/em&gt; for the breakpoint, an expression which must evaluate to true before the breakpoint is honored. If &lt;em&gt;condition&lt;/em&gt; is absent, any existing condition is removed; i.e., the breakpoint is made unconditional.</source>
          <target state="translated">ブレークポイントが受け入れられる前にtrueと評価される必要がある式である、ブレークポイントに新しい&lt;em&gt;条件&lt;/em&gt;を設定します。場合は&lt;em&gt;条件が&lt;/em&gt;存在しない、既存の条件が削除されます。つまり、ブレークポイントは無条件になります。</target>
        </trans-unit>
        <trans-unit id="0e049fe336ffb7d3c9b6e2d92caa1c6eea6ee74f" translate="yes" xml:space="preserve">
          <source>Set a new breakpoint. If the &lt;em&gt;lineno&lt;/em&gt; line doesn&amp;rsquo;t exist for the &lt;em&gt;filename&lt;/em&gt; passed as argument, return an error message. The &lt;em&gt;filename&lt;/em&gt; should be in canonical form, as described in the &lt;a href=&quot;#bdb.Bdb.canonic&quot;&gt;&lt;code&gt;canonic()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">新しいブレークポイントを設定します。引数として渡された&lt;em&gt;ファイル名に&lt;/em&gt;&lt;em&gt;lineno&lt;/em&gt;行が存在しない場合は、エラーメッセージを返します。&lt;em&gt;ファイル名&lt;/em&gt;に記載されているように、標準形であるべきである&lt;a href=&quot;#bdb.Bdb.canonic&quot;&gt; &lt;code&gt;canonic()&lt;/code&gt; &lt;/a&gt;メソッド。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f43a2e34c6b2cc5e82eb9a7d928ec44badf7a25" translate="yes" xml:space="preserve">
          <source>Set a new exception handler.</source>
          <target state="translated">新しい例外ハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="da67b8e1dd439507190eceb0706417ed160c953d" translate="yes" xml:space="preserve">
          <source>Set a new process-wide policy.</source>
          <target state="translated">新しいプロセス全体のポリシーを設定します。</target>
        </trans-unit>
        <trans-unit id="93c271983fb753ff0f31b1b586cd24a561b65685" translate="yes" xml:space="preserve">
          <source>Set a new protocol.</source>
          <target state="translated">新しいプロトコルを設定します。</target>
        </trans-unit>
        <trans-unit id="7dc3ca6377d4dcbd41dda9699dab9cd6b9acf0af" translate="yes" xml:space="preserve">
          <source>Set a parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header. If the parameter already exists in the header, its value will be replaced with &lt;em&gt;value&lt;/em&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header as not yet been defined for this message, it will be set to &lt;em&gt;text/plain&lt;/em&gt; and the new parameter value will be appended as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーにパラメーターを設定します。パラメータがヘッダーにすでに存在する場合、その値はvalueに置き換えられ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーがこのメッセージに対してまだ定義されていない場合、それは&lt;em&gt;text / plainに&lt;/em&gt;設定され、新しいパラメーター値が&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;に従って追加され&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4e909672f1540d61639712ce80a99601a53ebb1d" translate="yes" xml:space="preserve">
          <source>Set a parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header. If the parameter already exists in the header, replace its value with &lt;em&gt;value&lt;/em&gt;. When &lt;em&gt;header&lt;/em&gt; is &lt;code&gt;Content-Type&lt;/code&gt; (the default) and the header does not yet exist in the message, add it, set its value to &lt;em&gt;text/plain&lt;/em&gt;, and append the new parameter value. Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative header to &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーにパラメーターを設定します。パラメータがヘッダーにすでに存在する場合は、その値を&lt;em&gt;valueに&lt;/em&gt;置き換え&lt;em&gt;ます&lt;/em&gt;。ときに&lt;em&gt;ヘッダが&lt;/em&gt;ある &lt;code&gt;Content-Type&lt;/code&gt; （デフォルト）とヘッダがまだメッセージ内に存在していない、に設定し、その値を、それを追加し&lt;em&gt;、テキスト/平野&lt;/em&gt;、新しいパラメータ値を追加します。オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は、&lt;em&gt;Content-Typeの&lt;/em&gt;代替ヘッダーを指定します。</target>
        </trans-unit>
        <trans-unit id="c9b218cb3c450712fb0d7d4b94904befbc2a9525" translate="yes" xml:space="preserve">
          <source>Set a profile function for all threads started from the &lt;a href=&quot;#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. The &lt;em&gt;func&lt;/em&gt; will be passed to &lt;a href=&quot;sys#sys.setprofile&quot;&gt;&lt;code&gt;sys.setprofile()&lt;/code&gt;&lt;/a&gt; for each thread, before its &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">&lt;a href=&quot;#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールから開始されたすべてのスレッドのプロファイル関数を設定します。&lt;em&gt;funcが&lt;/em&gt;に渡されます&lt;a href=&quot;sys#sys.setprofile&quot;&gt; &lt;code&gt;sys.setprofile()&lt;/code&gt; &lt;/a&gt;その前に、スレッドごとに&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="55161be225d12252b49c23bbe6e4128e58acedc6" translate="yes" xml:space="preserve">
          <source>Set a property through &lt;code&gt;MsiSummaryInfoSetProperty()&lt;/code&gt;. &lt;em&gt;field&lt;/em&gt; can have the same values as in &lt;a href=&quot;#msilib.SummaryInformation.GetProperty&quot;&gt;&lt;code&gt;GetProperty()&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;value&lt;/em&gt; is the new value of the property. Possible value types are integer and string.</source>
          <target state="translated">&lt;code&gt;MsiSummaryInfoSetProperty()&lt;/code&gt; を使用してプロパティを設定します。&lt;em&gt;フィールドは、&lt;/em&gt;と同じ値を有することができる&lt;a href=&quot;#msilib.SummaryInformation.GetProperty&quot;&gt; &lt;code&gt;GetProperty()&lt;/code&gt; &lt;/a&gt;、&lt;em&gt;値は&lt;/em&gt;プロパティの新しい値です。可能な値のタイプは整数と文字列です。</target>
        </trans-unit>
        <trans-unit id="ee582a3c49f219c92b883fb81ed1c70dee91931f" translate="yes" xml:space="preserve">
          <source>Set a scheduling parameters for the process with PID &lt;em&gt;pid&lt;/em&gt;. A &lt;em&gt;pid&lt;/em&gt; of 0 means the calling process. &lt;em&gt;param&lt;/em&gt; is a &lt;a href=&quot;#os.sched_param&quot;&gt;&lt;code&gt;sched_param&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">PID &lt;em&gt;pidで&lt;/em&gt;プロセスのスケジューリングパラメータを設定します。&lt;em&gt;PID&lt;/em&gt; 0手段呼び出し元のプロセスの。&lt;em&gt;param&lt;/em&gt;は&lt;a href=&quot;#os.sched_param&quot;&gt; &lt;code&gt;sched_param&lt;/code&gt; &lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="a55515e5e8049842efc9c1305223401122065db4" translate="yes" xml:space="preserve">
          <source>Set a task factory that will be used by &lt;a href=&quot;#asyncio.loop.create_task&quot;&gt;&lt;code&gt;loop.create_task()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.create_task&quot;&gt; &lt;code&gt;loop.create_task()&lt;/code&gt; で&lt;/a&gt;使用されるタスクファクトリを設定します。</target>
        </trans-unit>
        <trans-unit id="76c9cc9d2f7e0dd8c5903e9ad7cf6627f8f8a76c" translate="yes" xml:space="preserve">
          <source>Set a timeout on blocking socket operations. The &lt;em&gt;value&lt;/em&gt; argument can be a nonnegative floating point number expressing seconds, or &lt;code&gt;None&lt;/code&gt;. If a non-zero value is given, subsequent socket operations will raise a &lt;a href=&quot;#socket.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; exception if the timeout period &lt;em&gt;value&lt;/em&gt; has elapsed before the operation has completed. If zero is given, the socket is put in non-blocking mode. If &lt;code&gt;None&lt;/code&gt; is given, the socket is put in blocking mode.</source>
          <target state="translated">ソケット操作のブロックにタイムアウトを設定します。&lt;em&gt;値の&lt;/em&gt;引数は非負の浮動小数点の秒を表す数、またはすることができ &lt;code&gt;None&lt;/code&gt; 。ゼロ以外の値が指定された場合、操作が完了する前にタイムアウト期間の&lt;em&gt;値&lt;/em&gt;が経過すると、後続のソケット操作で&lt;a href=&quot;#socket.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;例外が発生します。ゼロが指定された場合、ソケットは非ブロッキングモードになります。場合 &lt;code&gt;None&lt;/code&gt; 指定されていない、ソケットはブロッキングモードに置かれています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f09352cf9bb4dd9f3a7b6467b032356525f511f" translate="yes" xml:space="preserve">
          <source>Set a trace function for all threads started from the &lt;a href=&quot;#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. The &lt;em&gt;func&lt;/em&gt; will be passed to &lt;a href=&quot;sys#sys.settrace&quot;&gt;&lt;code&gt;sys.settrace()&lt;/code&gt;&lt;/a&gt; for each thread, before its &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">&lt;a href=&quot;#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールから開始されたすべてのスレッドのトレース関数を設定します。&lt;em&gt;funcが&lt;/em&gt;に渡されます&lt;a href=&quot;sys#sys.settrace&quot;&gt; &lt;code&gt;sys.settrace()&lt;/code&gt; &lt;/a&gt;その前に、スレッドごとに&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6633b4558b29b08c91603c58d9104e72422bb45e" translate="yes" xml:space="preserve">
          <source>Set all fields of the record to 0, through &lt;code&gt;MsiRecordClearData()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MsiRecordClearData()&lt;/code&gt; を使用して、レコードのすべてのフィールドを0に設定します。</target>
        </trans-unit>
        <trans-unit id="40dd67f26159b4b1fcc9eb02d28cd54cf3de25f1" translate="yes" xml:space="preserve">
          <source>Set all the above parameters at once. The argument is a tuple consisting of the various parameters. This means that it is possible to use the result of a &lt;a href=&quot;#aifc.aifc.getparams&quot;&gt;&lt;code&gt;getparams()&lt;/code&gt;&lt;/a&gt; call as argument to &lt;a href=&quot;#aifc.aifc.setparams&quot;&gt;&lt;code&gt;setparams()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上記のパラメータをすべて一度に設定します。引数は、さまざまなパラメーターで構成されるタプルです。結果に使用することが可能であることをこれは意味&lt;a href=&quot;#aifc.aifc.getparams&quot;&gt; &lt;code&gt;getparams()&lt;/code&gt; &lt;/a&gt;の引数として呼び出しを&lt;a href=&quot;#aifc.aifc.setparams&quot;&gt; &lt;code&gt;setparams()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e33a13e5e1e1a010a7e7d0017636d769f1b4e23e" translate="yes" xml:space="preserve">
          <source>Set an &lt;code&gt;ACL&lt;/code&gt; for &lt;em&gt;mailbox&lt;/em&gt;. The method is non-standard, but is supported by the &lt;code&gt;Cyrus&lt;/code&gt; server.</source>
          <target state="translated">&lt;em&gt;メールボックスの&lt;/em&gt; &lt;code&gt;ACL&lt;/code&gt; を設定し&lt;em&gt;ます&lt;/em&gt;。このメソッドは非標準ですが、 &lt;code&gt;Cyrus&lt;/code&gt; サーバーでサポートされています。</target>
        </trans-unit>
        <trans-unit id="0b8a13a10aa8dfba1b27e128e2f28694aca0ef4a" translate="yes" xml:space="preserve">
          <source>Set an attribute value from a string, given a &lt;em&gt;namespaceURI&lt;/em&gt; and a &lt;em&gt;qname&lt;/em&gt;. Note that a qname is the whole attribute name. This is different than above.</source>
          <target state="translated">&lt;em&gt;namespaceURI&lt;/em&gt;と&lt;em&gt;qnameを&lt;/em&gt;指定して、文字列から属性値を設定します。qnameは属性名全体であることに注意してください。これは上記とは異なります。</target>
        </trans-unit>
        <trans-unit id="d05c4f475722a09503f84631dd185646005343f9" translate="yes" xml:space="preserve">
          <source>Set an attribute value from a string.</source>
          <target state="translated">文字列から属性値を設定します。</target>
        </trans-unit>
        <trans-unit id="2a99793e9c117bae418cc94a710fa2f4d27b31c2" translate="yes" xml:space="preserve">
          <source>Set and return the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;属性を設定して返します。</target>
        </trans-unit>
        <trans-unit id="86b8753b0aa0549f10c5aa477ed7498641de1d30" translate="yes" xml:space="preserve">
          <source>Set angle measurement units, i.e. set number of &amp;ldquo;degrees&amp;rdquo; for a full circle. Default value is 360 degrees.</source>
          <target state="translated">角度測定単位を設定します。つまり、完全な円の「度」の数を設定します。デフォルト値は360度です。</target>
        </trans-unit>
        <trans-unit id="e704016814c3f4a7a1ea79efd71dc75229a29120" translate="yes" xml:space="preserve">
          <source>Set attributes on the mock through keyword arguments.</source>
          <target state="translated">キーワード引数でモックの属性を設定します。</target>
        </trans-unit>
        <trans-unit id="a9f59f77cd31615baaf818d72eb7a98dba3f7752" translate="yes" xml:space="preserve">
          <source>Set background image or return name of current backgroundimage. If &lt;em&gt;picname&lt;/em&gt; is a filename, set the corresponding image as background. If &lt;em&gt;picname&lt;/em&gt; is &lt;code&gt;&quot;nopic&quot;&lt;/code&gt;, delete background image, if present. If &lt;em&gt;picname&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return the filename of the current backgroundimage.</source>
          <target state="translated">背景画像を設定するか、現在の背景画像の名前を返します。&lt;em&gt;picname&lt;/em&gt;がファイル名の場合、対応する画像を背景として設定します。&lt;em&gt;picname&lt;/em&gt;が &lt;code&gt;&quot;nopic&quot;&lt;/code&gt; の場合、背景画像があれば削除します。&lt;em&gt;picname&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在の背景画像のファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="1986f3056cb6d04b738056ecaada19cee46f20af" translate="yes" xml:space="preserve">
          <source>Set blocking or non-blocking mode of the socket: if &lt;em&gt;flag&lt;/em&gt; is false, the socket is set to non-blocking, else to blocking mode.</source>
          <target state="translated">ソケットのブロックモードまたは非ブロックモードを設定します。&lt;em&gt;フラグ&lt;/em&gt;がfalseの場合、ソケットは非ブロックに設定され、それ以外の場合はブロックモードに設定されます。</target>
        </trans-unit>
        <trans-unit id="fcd20025f1c6ccfda56648d62ee9d97c887d2963" translate="yes" xml:space="preserve">
          <source>Set blocking or non-blocking read behavior for the window. If &lt;em&gt;delay&lt;/em&gt; is negative, blocking read is used (which will wait indefinitely for input). If &lt;em&gt;delay&lt;/em&gt; is zero, then non-blocking read is used, and &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;-1&lt;/code&gt; if no input is waiting. If &lt;em&gt;delay&lt;/em&gt; is positive, then &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will block for &lt;em&gt;delay&lt;/em&gt; milliseconds, and return &lt;code&gt;-1&lt;/code&gt; if there is still no input at the end of that time.</source>
          <target state="translated">ウィンドウのブロックまたは非ブロック読み取り動作を設定します。&lt;em&gt;delay&lt;/em&gt;が負の場合、ブロッキング読み取りが使用されます（入力を無期限に待機します）。場合&lt;em&gt;遅延は&lt;/em&gt;ゼロであり、その後、非ブロッキングリードが使用され、&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;戻ります &lt;code&gt;-1&lt;/code&gt; 入力が待機されていない場合。場合は&lt;em&gt;遅延が&lt;/em&gt;肯定的である場合、&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;のためにブロックします&lt;em&gt;遅延&lt;/em&gt;、ミリ秒と返す &lt;code&gt;-1&lt;/code&gt; まだその時の最後に入力がない場合。</target>
        </trans-unit>
        <trans-unit id="a301b73d0da5f5ed137a7ad3f1dc7bd6fcf3eade" translate="yes" xml:space="preserve">
          <source>Set by &lt;a href=&quot;#test.support.set_memlimit&quot;&gt;&lt;code&gt;set_memlimit()&lt;/code&gt;&lt;/a&gt; as the memory limit for big memory tests. Limited by &lt;a href=&quot;#test.support.MAX_Py_ssize_t&quot;&gt;&lt;code&gt;MAX_Py_ssize_t&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">大きなメモリテストのメモリ制限として&lt;a href=&quot;#test.support.set_memlimit&quot;&gt; &lt;code&gt;set_memlimit()&lt;/code&gt; で&lt;/a&gt;設定します。&lt;a href=&quot;#test.support.MAX_Py_ssize_t&quot;&gt; &lt;code&gt;MAX_Py_ssize_t&lt;/code&gt; &lt;/a&gt;によって制限されます。</target>
        </trans-unit>
        <trans-unit id="e5945b43363f78a44983a89b280e78334ade5bcc" translate="yes" xml:space="preserve">
          <source>Set by &lt;a href=&quot;#test.support.set_memlimit&quot;&gt;&lt;code&gt;set_memlimit()&lt;/code&gt;&lt;/a&gt; as the memory limit for big memory tests. Not limited by &lt;a href=&quot;#test.support.MAX_Py_ssize_t&quot;&gt;&lt;code&gt;MAX_Py_ssize_t&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">大きなメモリテストのメモリ制限として&lt;a href=&quot;#test.support.set_memlimit&quot;&gt; &lt;code&gt;set_memlimit()&lt;/code&gt; で&lt;/a&gt;設定します。&lt;a href=&quot;#test.support.MAX_Py_ssize_t&quot;&gt; &lt;code&gt;MAX_Py_ssize_t&lt;/code&gt; &lt;/a&gt;による制限はありません。</target>
        </trans-unit>
        <trans-unit id="3aea063b573fe0c9605f82dcc083008e98c28df7" translate="yes" xml:space="preserve">
          <source>Set bytecode counter to &lt;em&gt;target&lt;/em&gt;.</source>
          <target state="translated">バイトコードカウンタを&lt;em&gt;targetに&lt;/em&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="72805ede022cc109e46d2e90a2539f63072e52b0" translate="yes" xml:space="preserve">
          <source>Set class that keeps weak references to its elements. An element will be discarded when no strong reference to it exists any more.</source>
          <target state="translated">要素への弱い参照を保持するクラスを設定します。要素への強い参照が存在しなくなると、その要素は破棄されます。</target>
        </trans-unit>
        <trans-unit id="4d9e23b7ee50405d62d39060a80ad679e1773bcb" translate="yes" xml:space="preserve">
          <source>Set default values for missing arguments.</source>
          <target state="translated">欠落した引数のデフォルト値を設定します。</target>
        </trans-unit>
        <trans-unit id="c7a902482be02e2eecf0a84cafb4a0219a79c4d0" translate="yes" xml:space="preserve">
          <source>Set during Python startup, before &lt;code&gt;site.py&lt;/code&gt; is run, to the same value as &lt;a href=&quot;#sys.exec_prefix&quot;&gt;&lt;code&gt;exec_prefix&lt;/code&gt;&lt;/a&gt;. If not running in a &lt;a href=&quot;venv#venv-def&quot;&gt;virtual environment&lt;/a&gt;, the values will stay the same; if &lt;code&gt;site.py&lt;/code&gt; finds that a virtual environment is in use, the values of &lt;a href=&quot;#sys.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sys.exec_prefix&quot;&gt;&lt;code&gt;exec_prefix&lt;/code&gt;&lt;/a&gt; will be changed to point to the virtual environment, whereas &lt;a href=&quot;#sys.base_prefix&quot;&gt;&lt;code&gt;base_prefix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sys.base_exec_prefix&quot;&gt;&lt;code&gt;base_exec_prefix&lt;/code&gt;&lt;/a&gt; will remain pointing to the base Python installation (the one which the virtual environment was created from).</source>
          <target state="translated">Pythonの起動時に、 &lt;code&gt;site.py&lt;/code&gt; が実行される前に、exec_prefixと同じ値に&lt;a href=&quot;#sys.exec_prefix&quot;&gt; &lt;code&gt;exec_prefix&lt;/code&gt; &lt;/a&gt;ます。&lt;a href=&quot;venv#venv-def&quot;&gt;仮想環境&lt;/a&gt;で実行されていない場合、値は同じままです。場合 &lt;code&gt;site.py&lt;/code&gt; 発見は、仮想環境が使用中であること、の値は&lt;a href=&quot;#sys.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#sys.exec_prefix&quot;&gt; &lt;code&gt;exec_prefix&lt;/code&gt; &lt;/a&gt;に対し、仮想環境を指すように変更され&lt;a href=&quot;#sys.base_prefix&quot;&gt; &lt;code&gt;base_prefix&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#sys.base_exec_prefix&quot;&gt; &lt;code&gt;base_exec_prefix&lt;/code&gt; は、&lt;/a&gt;仮想環境が作成されたベースのPythonインストール（一方を指して残りますから）。</target>
        </trans-unit>
        <trans-unit id="0be46d2439cc44584dcd6475eb21058ef11b4950" translate="yes" xml:space="preserve">
          <source>Set during Python startup, before &lt;code&gt;site.py&lt;/code&gt; is run, to the same value as &lt;a href=&quot;#sys.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt;. If not running in a &lt;a href=&quot;venv#venv-def&quot;&gt;virtual environment&lt;/a&gt;, the values will stay the same; if &lt;code&gt;site.py&lt;/code&gt; finds that a virtual environment is in use, the values of &lt;a href=&quot;#sys.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sys.exec_prefix&quot;&gt;&lt;code&gt;exec_prefix&lt;/code&gt;&lt;/a&gt; will be changed to point to the virtual environment, whereas &lt;a href=&quot;#sys.base_prefix&quot;&gt;&lt;code&gt;base_prefix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sys.base_exec_prefix&quot;&gt;&lt;code&gt;base_exec_prefix&lt;/code&gt;&lt;/a&gt; will remain pointing to the base Python installation (the one which the virtual environment was created from).</source>
          <target state="translated">Pythonの起動時に、 &lt;code&gt;site.py&lt;/code&gt; が実行される&lt;a href=&quot;#sys.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;、prefixと同じ値に設定されます。&lt;a href=&quot;venv#venv-def&quot;&gt;仮想環境&lt;/a&gt;で実行されていない場合、値は同じままです。場合 &lt;code&gt;site.py&lt;/code&gt; 発見は、仮想環境が使用中であること、の値は&lt;a href=&quot;#sys.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#sys.exec_prefix&quot;&gt; &lt;code&gt;exec_prefix&lt;/code&gt; &lt;/a&gt;に対し、仮想環境を指すように変更され&lt;a href=&quot;#sys.base_prefix&quot;&gt; &lt;code&gt;base_prefix&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#sys.base_exec_prefix&quot;&gt; &lt;code&gt;base_exec_prefix&lt;/code&gt; は、&lt;/a&gt;仮想環境が作成されたベースのPythonインストール（一方を指して残りますから）。</target>
        </trans-unit>
        <trans-unit id="369832807f6982871a690060f0cddfa27385254e" translate="yes" xml:space="preserve">
          <source>Set elements, like dictionary keys, must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;.</source>
          <target state="translated">辞書キーのようなセット要素は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ&lt;/a&gt;可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="20cc2d7be2092a263339d7a88a6fda845fae83c6" translate="yes" xml:space="preserve">
          <source>Set elements, like dictionary keys, must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;.</source>
          <target state="translated">辞書キーなどのセット要素は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;ハッシュ&lt;/a&gt;可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="3753cf451a49fa1a755fcbd86c642987fa16155b" translate="yes" xml:space="preserve">
          <source>Set fillcolor to &lt;em&gt;colorstring&lt;/em&gt;, which is a Tk color specification string, such as &lt;code&gt;&quot;red&quot;&lt;/code&gt;, &lt;code&gt;&quot;yellow&quot;&lt;/code&gt;, or &lt;code&gt;&quot;#33cc8c&quot;&lt;/code&gt;.</source>
          <target state="translated">fillcolorを&lt;em&gt;colorstring&lt;/em&gt;に設定し&lt;em&gt;ます&lt;/em&gt;。これは、 &lt;code&gt;&quot;red&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;yellow&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;#33cc8c&quot;&lt;/code&gt; などのTk色指定文字列です。</target>
        </trans-unit>
        <trans-unit id="fdd2e7a42d97dcf0083833c3dd953b7857bb5f4d" translate="yes" xml:space="preserve">
          <source>Set fillcolor to the RGB color represented by &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt;. Each of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt; must be in the range 0..colormode.</source>
          <target state="translated">fillcolorを、&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bで&lt;/em&gt;表されるRGBカラーに設定します。&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;それぞれは、0..colormodeの範囲内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f1967269f8e87c4d06f07ba52a927822c4fa554d" translate="yes" xml:space="preserve">
          <source>Set fillcolor to the RGB color represented by the tuple of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt;. Each of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt; must be in the range 0..colormode, where colormode is either 1.0 or 255 (see &lt;a href=&quot;#turtle.colormode&quot;&gt;&lt;code&gt;colormode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">fillcolorを、&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;タプルで表されるRGBカラーに設定します。&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;それぞれは、0..colormodeの範囲内でなければなりません。ここで、colormodeは1.0または255です（&lt;a href=&quot;#turtle.colormode&quot;&gt; &lt;code&gt;colormode()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="14b3ea9e0be7df03477d73f38b59228f473ed7d6" translate="yes" xml:space="preserve">
          <source>Set focus on TurtleScreen (in order to collect key-events). Dummy arguments are provided in order to be able to pass &lt;a href=&quot;#turtle.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; to the onclick method.</source>
          <target state="translated">TurtleScreenにフォーカスを設定します（キーイベントを収集するため）。&lt;a href=&quot;#turtle.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;をonclickメソッドに渡すことができるように、ダミー引数が提供されています。</target>
        </trans-unit>
        <trans-unit id="c6d63831cbabaeb6b58ffc3a81c41d793319c4a1" translate="yes" xml:space="preserve">
          <source>Set maximum number of cached connections to &lt;em&gt;m&lt;/em&gt;.</source>
          <target state="translated">キャッシュされる接続の最大数を&lt;em&gt;mに設定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="47a5478e91687aad7863b866e75c880a57f64f45" translate="yes" xml:space="preserve">
          <source>Set new high and low water marks for write flow control.</source>
          <target state="translated">書き込みフロー制御のために、新たにハイウォーターマークとローウォーターマークを設定します。</target>
        </trans-unit>
        <trans-unit id="63b236424574e1c59ef1e6f35c86b4b793bbd9e8" translate="yes" xml:space="preserve">
          <source>Set one-shot behavior. After one event is pulled out, the fd is internally disabled</source>
          <target state="translated">ワンショットの挙動を設定します。イベントを1回引いた後、FDを内部的に無効化する</target>
        </trans-unit>
        <trans-unit id="edf84fdec0068753c94ca5b3479df378199086c7" translate="yes" xml:space="preserve">
          <source>Set or disable undobuffer. If &lt;em&gt;size&lt;/em&gt; is an integer an empty undobuffer of given size is installed. &lt;em&gt;size&lt;/em&gt; gives the maximum number of turtle actions that can be undone by the &lt;a href=&quot;#turtle.undo&quot;&gt;&lt;code&gt;undo()&lt;/code&gt;&lt;/a&gt; method/function. If &lt;em&gt;size&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the undobuffer is disabled.</source>
          <target state="translated">アンドゥバッファを設定または無効にします。&lt;em&gt;サイズ&lt;/em&gt;が整数の場合、指定されたサイズの空のアンドゥバッファがインストールされます。&lt;em&gt;size&lt;/em&gt;は、&lt;a href=&quot;#turtle.undo&quot;&gt; &lt;code&gt;undo()&lt;/code&gt; &lt;/a&gt;メソッド/関数によって元に戻すことができる亀のアクションの最大数を示します。場合は&lt;em&gt;サイズが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、undobufferが無効になっています。</target>
        </trans-unit>
        <trans-unit id="7922c728402a8301d9453fbbfb9b84ac0b54bc91" translate="yes" xml:space="preserve">
          <source>Set or get the word delimiters for completion. These determine the start of the word to be considered for completion (the completion scope). These functions access the &lt;code&gt;rl_completer_word_break_characters&lt;/code&gt; variable in the underlying library.</source>
          <target state="translated">補完する単語の区切り文字を設定または取得します。これらは、補完の対象となる単語の始まり（補完範囲）を決定します。これらの関数は、基盤となるライブラリの &lt;code&gt;rl_completer_word_break_characters&lt;/code&gt; 変数にアクセスします。</target>
        </trans-unit>
        <trans-unit id="5822c5070aa29cb9c60f3804775de09a6b2a78c6" translate="yes" xml:space="preserve">
          <source>Set or remove the completer function. If &lt;em&gt;function&lt;/em&gt; is specified, it will be used as the new completer function; if omitted or &lt;code&gt;None&lt;/code&gt;, any completer function already installed is removed. The completer function is called as &lt;code&gt;function(text, state)&lt;/code&gt;, for &lt;em&gt;state&lt;/em&gt; in &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &amp;hellip;, until it returns a non-string value. It should return the next possible completion starting with &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">コンプリーター関数を設定または削除します。&lt;em&gt;function&lt;/em&gt;が指定されている場合、それは新しい完了関数として使用されます。省略されるか &lt;code&gt;None&lt;/code&gt; の場合、すでにインストールされているコンプリーター関数は削除されます。コンプリータ関数は次のように呼ばれる &lt;code&gt;function(text, state)&lt;/code&gt; のために、&lt;em&gt;状態&lt;/em&gt;で &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;2&lt;/code&gt; 、...、それは文字列以外の値を返すまで。&lt;em&gt;textで&lt;/em&gt;始まる次の可能な補完を返す必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="72842896bc24a4f718d99ae48cf775f902a6b4e8" translate="yes" xml:space="preserve">
          <source>Set or remove the completion display function. If &lt;em&gt;function&lt;/em&gt; is specified, it will be used as the new completion display function; if omitted or &lt;code&gt;None&lt;/code&gt;, any completion display function already installed is removed. This sets or clears the &lt;code&gt;rl_completion_display_matches_hook&lt;/code&gt; callback in the underlying library. The completion display function is called as &lt;code&gt;function(substitution, [matches], longest_match_length)&lt;/code&gt; once each time matches need to be displayed.</source>
          <target state="translated">完了表示機能を設定または削除します。&lt;em&gt;function&lt;/em&gt;が指定されている場合、それは新しい完了表示関数として使用されます。省略するか &lt;code&gt;None&lt;/code&gt; の場合、すでにインストールされている完了表示機能は削除されます。これは、基礎となるライブラリの &lt;code&gt;rl_completion_display_matches_hook&lt;/code&gt; コールバックを設定またはクリアします。完了を表示する関数は &lt;code&gt;function(substitution, [matches], longest_match_length)&lt;/code&gt; 表示する必要があるたびにfunction（substitution、[matches]、longest_match_length）として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0e7fd6363f8e1437412ed0f72399101d45f9bed2" translate="yes" xml:space="preserve">
          <source>Set or remove the function invoked by the &lt;code&gt;rl_pre_input_hook&lt;/code&gt; callback of the underlying library. If &lt;em&gt;function&lt;/em&gt; is specified, it will be used as the new hook function; if omitted or &lt;code&gt;None&lt;/code&gt;, any function already installed is removed. The hook is called with no arguments after the first prompt has been printed and just before readline starts reading input characters. This function only exists if Python was compiled for a version of the library that supports it.</source>
          <target state="translated">基本となるライブラリの &lt;code&gt;rl_pre_input_hook&lt;/code&gt; コールバックによって呼び出される関数を設定または削除します。&lt;em&gt;function&lt;/em&gt;が指定されている場合、それは新しいフック関数として使用されます。省略されるか &lt;code&gt;None&lt;/code&gt; の場合、すでにインストールされている機能は削除されます。最初のプロンプトが出力された後、readlineが入力文字の読み取りを開始する直前に、フックは引数なしで呼び出されます。この関数は、Pythonがそれをサポートするライブラリのバージョン用にコンパイルされている場合にのみ存在します。</target>
        </trans-unit>
        <trans-unit id="03bb3bb6e82a25cb89c1352df4b37cc5f2ed2893" translate="yes" xml:space="preserve">
          <source>Set or remove the function invoked by the &lt;code&gt;rl_startup_hook&lt;/code&gt; callback of the underlying library. If &lt;em&gt;function&lt;/em&gt; is specified, it will be used as the new hook function; if omitted or &lt;code&gt;None&lt;/code&gt;, any function already installed is removed. The hook is called with no arguments just before readline prints the first prompt.</source>
          <target state="translated">基礎となるライブラリの &lt;code&gt;rl_startup_hook&lt;/code&gt; コールバックによって呼び出される関数を設定または削除します。&lt;em&gt;function&lt;/em&gt;が指定されている場合、それは新しいフック関数として使用されます。省略されるか &lt;code&gt;None&lt;/code&gt; の場合、すでにインストールされている機能は削除されます。readlineが最初のプロンプトを出力する直前に、フックは引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c7c603884682861bb9cfbd36edf0a40d45e38fba" translate="yes" xml:space="preserve">
          <source>Set or return background color of the TurtleScreen.</source>
          <target state="translated">TurtleScreenの背景色を設定します。</target>
        </trans-unit>
        <trans-unit id="a3064d8e000a388ec5e6071ef00b80736cf34bf0" translate="yes" xml:space="preserve">
          <source>Set or return the current shearfactor. Shear the turtleshape according to the given shearfactor shear, which is the tangent of the shear angle. Do &lt;em&gt;not&lt;/em&gt; change the turtle&amp;rsquo;s heading (direction of movement). If shear is not given: return the current shearfactor, i. e. the tangent of the shear angle, by which lines parallel to the heading of the turtle are sheared.</source>
          <target state="translated">現在のシアファクターを設定または返します。与えられたシアファクターシア（剪断角の正接）に従って亀の形を剪断します。カメの向き（移動方向）を変更し&lt;em&gt;ないで&lt;/em&gt;ください。せん断が与えられていない場合：現在のせん断係数、つまり、亀の方位に平行な線がせん断されるせん断角度の正接を返します。</target>
        </trans-unit>
        <trans-unit id="0fd209e2a11203c677ad3b1fa83b8b60e9f09930" translate="yes" xml:space="preserve">
          <source>Set or return the current tilt-angle. If angle is given, rotate the turtleshape to point in the direction specified by angle, regardless of its current tilt-angle. Do &lt;em&gt;not&lt;/em&gt; change the turtle&amp;rsquo;s heading (direction of movement). If angle is not given: return the current tilt-angle, i. e. the angle between the orientation of the turtleshape and the heading of the turtle (its direction of movement).</source>
          <target state="translated">現在の傾斜角度を設定または返します。角度が指定されている場合、現在の傾斜角度に関係なく、亀の形を回転して、角度で指定された方向を指します。カメの向き（移動方向）を変更し&lt;em&gt;ないで&lt;/em&gt;ください。角度が指定されていない場合：現在の傾斜角度、つまり亀の形の向きと亀の向き（その移動方向）の間の角度を返します。</target>
        </trans-unit>
        <trans-unit id="b2a2b8343dca41f6807ee4a13bb09b5b004a414e" translate="yes" xml:space="preserve">
          <source>Set or return the current transformation matrix of the turtle shape.</source>
          <target state="translated">亀の形状の現在の変換行列を設定または返します。</target>
        </trans-unit>
        <trans-unit id="a97870324a01c159842e47e33ce19e0d5bc1c087" translate="yes" xml:space="preserve">
          <source>Set or return the desired number of lines to save in the history file. The &lt;a href=&quot;#readline.write_history_file&quot;&gt;&lt;code&gt;write_history_file()&lt;/code&gt;&lt;/a&gt; function uses this value to truncate the history file, by calling &lt;code&gt;history_truncate_file()&lt;/code&gt; in the underlying library. Negative values imply unlimited history file size.</source>
          <target state="translated">履歴ファイルに保存する目的の行数を設定または返します。&lt;a href=&quot;#readline.write_history_file&quot;&gt; &lt;code&gt;write_history_file()&lt;/code&gt; &lt;/a&gt;関数は呼び出すことで、履歴ファイルを切り捨てるには、この値を使用し &lt;code&gt;history_truncate_file()&lt;/code&gt; 基本的なライブラリに。負の値は、無制限の履歴ファイルサイズを意味します。</target>
        </trans-unit>
        <trans-unit id="538c0e77ccc937628206815d7cb079e9a22bee2c" translate="yes" xml:space="preserve">
          <source>Set or return the drawing &lt;em&gt;delay&lt;/em&gt; in milliseconds. (This is approximately the time interval between two consecutive canvas updates.) The longer the drawing delay, the slower the animation.</source>
          <target state="translated">描画&lt;em&gt;遅延&lt;/em&gt;をミリ秒単位で設定または返します。（これは、2つの連続したキャンバスの更新間のおおよその時間間隔です。）描画遅延が長いほど、アニメーションが遅くなります。</target>
        </trans-unit>
        <trans-unit id="5c4edc16a79c8d163f1f83aab8b2571f2006df2c" translate="yes" xml:space="preserve">
          <source>Set pencolor to &lt;em&gt;colorstring&lt;/em&gt;, which is a Tk color specification string, such as &lt;code&gt;&quot;red&quot;&lt;/code&gt;, &lt;code&gt;&quot;yellow&quot;&lt;/code&gt;, or &lt;code&gt;&quot;#33cc8c&quot;&lt;/code&gt;.</source>
          <target state="translated">pencolorを&lt;em&gt;colorstring&lt;/em&gt;に設定し&lt;em&gt;ます&lt;/em&gt;。これは、 &lt;code&gt;&quot;red&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;yellow&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;#33cc8c&quot;&lt;/code&gt; などのTk色指定文字列です。</target>
        </trans-unit>
        <trans-unit id="32616d676c8b9c2a28a3a08f948b186899399497" translate="yes" xml:space="preserve">
          <source>Set pencolor to the RGB color represented by &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt;. Each of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt; must be in the range 0..colormode.</source>
          <target state="translated">pencolorを&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bで&lt;/em&gt;表されるRGBカラーに設定します。&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;それぞれは、0..colormodeの範囲内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3fbae511044aa2c2b0220a7696052e3564e9cab5" translate="yes" xml:space="preserve">
          <source>Set pencolor to the RGB color represented by the tuple of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt;. Each of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, and &lt;em&gt;b&lt;/em&gt; must be in the range 0..colormode, where colormode is either 1.0 or 255 (see &lt;a href=&quot;#turtle.colormode&quot;&gt;&lt;code&gt;colormode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">pencolorを、&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;タプルで表されるRGBカラーに設定します。&lt;em&gt;r&lt;/em&gt;、&lt;em&gt;g&lt;/em&gt;、および&lt;em&gt;bの&lt;/em&gt;それぞれは、0..colormodeの範囲内でなければなりません。ここで、colormodeは1.0または255です（&lt;a href=&quot;#turtle.colormode&quot;&gt; &lt;code&gt;colormode()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d831d623a8a8457674f8e727be05a5741c7d4f95" translate="yes" xml:space="preserve">
          <source>Set program scheduling priority. The value &lt;em&gt;which&lt;/em&gt; is one of &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;, and &lt;em&gt;who&lt;/em&gt; is interpreted relative to &lt;em&gt;which&lt;/em&gt; (a process identifier for &lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt;&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;/a&gt;, process group identifier for &lt;a href=&quot;#os.PRIO_PGRP&quot;&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;/a&gt;, and a user ID for &lt;a href=&quot;#os.PRIO_USER&quot;&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;&lt;/a&gt;). A zero value for &lt;em&gt;who&lt;/em&gt; denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process. &lt;em&gt;priority&lt;/em&gt; is a value in the range -20 to 19. The default priority is 0; lower priorities cause more favorable scheduling.</source>
          <target state="translated">プログラムのスケジューリング優先順位を設定します。値の一つである&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;、そしてに対して解釈さ&lt;em&gt;れる&lt;/em&gt;（のためのプロセス識別子&lt;a href=&quot;#os.PRIO_PROCESS&quot;&gt; &lt;code&gt;PRIO_PROCESS&lt;/code&gt; &lt;/a&gt;、ためのプロセスグループ識別子&lt;a href=&quot;#os.PRIO_PGRP&quot;&gt; &lt;code&gt;PRIO_PGRP&lt;/code&gt; &lt;/a&gt;、及びためのユーザID &lt;a href=&quot;#os.PRIO_USER&quot;&gt; &lt;code&gt;PRIO_USER&lt;/code&gt; &lt;/a&gt;）。&lt;em&gt;who&lt;/em&gt;のゼロ値は、（それぞれ）呼び出しプロセス、呼び出しプロセスのプロセスグループ、または呼び出しプロセスの実際のユーザーIDを示します。&lt;em&gt;優先度&lt;/em&gt;は-20〜19の範囲の値です。デフォルトの優先度は0です。優先度が低いほど、スケジューリングが有利になります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a65fc19b8eda212f0ef5d39cb4b7248adb887a50" translate="yes" xml:space="preserve">
          <source>Set resizemode to one of the values: &amp;ldquo;auto&amp;rdquo;, &amp;ldquo;user&amp;rdquo;, &amp;ldquo;noresize&amp;rdquo;. If &lt;em&gt;rmode&lt;/em&gt; is not given, return current resizemode. Different resizemodes have the following effects:</source>
          <target state="translated">resizemodeを「auto」、「user」、「noresize」のいずれかの値に設定します。&lt;em&gt;rmode&lt;/em&gt;が指定されていない場合は、現在のサイズ変更モードを返します。さまざまなサイズ変更モードには次の効果があります。</target>
        </trans-unit>
        <trans-unit id="761d4fb71ab5fea96d3432e5e00ee3c2e241f9b5" translate="yes" xml:space="preserve">
          <source>Set signal handlers for SIGINT and SIGTERM</source>
          <target state="translated">SIGINTとSIGTERMのシグナルハンドラを設定する</target>
        </trans-unit>
        <trans-unit id="f5962bd24a562e2f5533414a2c76c8f52153d9fe" translate="yes" xml:space="preserve">
          <source>Set tab</source>
          <target state="translated">タブの設定</target>
        </trans-unit>
        <trans-unit id="490cfa3628efcea2b65e656756bdcc195037597f" translate="yes" xml:space="preserve">
          <source>Set the &amp;ldquo;From &amp;rdquo; line to &lt;em&gt;from_&lt;/em&gt;, which should be specified without a leading &amp;ldquo;From &amp;rdquo; or trailing newline. For convenience, &lt;em&gt;time_&lt;/em&gt; may be specified and will be formatted appropriately and appended to &lt;em&gt;from_&lt;/em&gt;. If &lt;em&gt;time_&lt;/em&gt; is specified, it should be a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; instance, a tuple suitable for passing to &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;True&lt;/code&gt; (to use &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">「From」行を&lt;em&gt;from_&lt;/em&gt;に設定します。これは、先頭の「From」または末尾の改行なしで指定する必要があります。便宜上、&lt;em&gt;time_&lt;/em&gt;を指定することができ、適切にフォーマットされて&lt;em&gt;from_に&lt;/em&gt;追加され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;time_&lt;/em&gt;を指定する場合は、&lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt;インスタンス、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; に&lt;/a&gt;渡すのに適したタプル、または &lt;code&gt;True&lt;/code&gt; （&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;を使用する）にする必要があります。</target>
        </trans-unit>
        <trans-unit id="7145ce33dbb10bb6736f84022ca24a0ea5e536e6" translate="yes" xml:space="preserve">
          <source>Set the &amp;ldquo;background&amp;rdquo; set of attributes to &lt;em&gt;attr&lt;/em&gt;. This set is initially &lt;code&gt;0&lt;/code&gt; (no attributes).</source>
          <target state="translated">属性の「バックグラウンド」セットを&lt;em&gt;attrに&lt;/em&gt;設定します。このセットは最初は &lt;code&gt;0&lt;/code&gt; （属性なし）です。</target>
        </trans-unit>
        <trans-unit id="8659acdbba825f95d5ed71f7961ea40c446278bd" translate="yes" xml:space="preserve">
          <source>Set the &amp;ldquo;inheritable&amp;rdquo; flag of the specified file descriptor.</source>
          <target state="translated">指定されたファイル記述子の「継承可能」フラグを設定します。</target>
        </trans-unit>
        <trans-unit id="8931b792a78117e1dae82ff8ba49b9adfd0daecf" translate="yes" xml:space="preserve">
          <source>Set the &amp;ldquo;inheritable&amp;rdquo; flag of the specified handle.</source>
          <target state="translated">指定されたハンドルの「継承可能」フラグを設定します。</target>
        </trans-unit>
        <trans-unit id="9c465d03f8af300a0e61845e5001cd63917e1d35" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; instance to be used.</source>
          <target state="translated">使用する&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;インスタンスを設定します。</target>
        </trans-unit>
        <trans-unit id="aafaa0f7f14efb98a5c5b8f115c7d6e6063e452a" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; reporting flags to use.</source>
          <target state="translated">使用する&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;レポートフラグを設定します。</target>
        </trans-unit>
        <trans-unit id="8b9b1925e15ed0db3d24ff196c7c12cfdf764377" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;os#fd-inheritance&quot;&gt;inheritable flag&lt;/a&gt; of the socket&amp;rsquo;s file descriptor or socket&amp;rsquo;s handle.</source>
          <target state="translated">ソケットのファイル記述子またはソケットのハンドルの&lt;a href=&quot;os#fd-inheritance&quot;&gt;継承可能なフラグ&lt;/a&gt;を設定します。</target>
        </trans-unit>
        <trans-unit id="e02f5d132cd6e0c179c5adbce8cd561827287a71" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;sys#sys.setswitchinterval&quot;&gt;&lt;code&gt;sys.setswitchinterval()&lt;/code&gt;&lt;/a&gt; to the given &lt;em&gt;interval&lt;/em&gt;. Defines a minimum interval for Android systems to prevent the system from hanging.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.setswitchinterval&quot;&gt; &lt;code&gt;sys.setswitchinterval()&lt;/code&gt; &lt;/a&gt;を指定された&lt;em&gt;間隔に&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。システムがハングするのを防ぐために、Androidシステムの最小間隔を定義します。</target>
        </trans-unit>
        <trans-unit id="9440f51c0b3c2a8c437d21b8cd52784bb2a41218" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;botframe&lt;/code&gt;, &lt;code&gt;stopframe&lt;/code&gt;, &lt;code&gt;returnframe&lt;/code&gt; and &lt;code&gt;quitting&lt;/code&gt; attributes with values ready to start debugging.</source>
          <target state="translated">設定し &lt;code&gt;botframe&lt;/code&gt; 、 &lt;code&gt;stopframe&lt;/code&gt; 、 &lt;code&gt;returnframe&lt;/code&gt; をし、 &lt;code&gt;quitting&lt;/code&gt; 値を持つ属性は、デバッグを開始する準備ができて。</target>
        </trans-unit>
        <trans-unit id="6ddb4787d620cac7965144e966ad44035c751f33" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;boundary&lt;/code&gt; parameter of the &lt;em&gt;Content-Type&lt;/em&gt; header to &lt;em&gt;boundary&lt;/em&gt;. &lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; will always quote &lt;em&gt;boundary&lt;/em&gt; if necessary. A &lt;a href=&quot;email.errors#email.errors.HeaderParseError&quot;&gt;&lt;code&gt;HeaderParseError&lt;/code&gt;&lt;/a&gt; is raised if the message object has no &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">設定し &lt;code&gt;boundary&lt;/code&gt; のパラメータ&lt;em&gt;のContent-Type&lt;/em&gt;のヘッダー&lt;em&gt;の境界を&lt;/em&gt;。&lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;は、必要に応じて常に&lt;em&gt;境界&lt;/em&gt;を引用します。A &lt;a href=&quot;email.errors#email.errors.HeaderParseError&quot;&gt; &lt;code&gt;HeaderParseError&lt;/code&gt; は、&lt;/a&gt;メッセージ・オブジェクトが持っていない場合に上昇する&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダを。</target>
        </trans-unit>
        <trans-unit id="3b0917c8e267e6a572157015758e3d0e5c1427e8" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;boundary&lt;/code&gt; parameter of the &lt;em&gt;Content-Type&lt;/em&gt; header to &lt;em&gt;boundary&lt;/em&gt;. &lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; will always quote &lt;em&gt;boundary&lt;/em&gt; if necessary. A &lt;a href=&quot;email.errors#email.errors.HeaderParseError&quot;&gt;&lt;code&gt;HeaderParseError&lt;/code&gt;&lt;/a&gt; is raised if the message object has no &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">設定し &lt;code&gt;boundary&lt;/code&gt; のパラメータ&lt;em&gt;のContent-Type&lt;/em&gt;のヘッダー&lt;em&gt;の境界を&lt;/em&gt;。&lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;は、必要に応じて常に&lt;em&gt;境界&lt;/em&gt;を引用します。A &lt;a href=&quot;email.errors#email.errors.HeaderParseError&quot;&gt; &lt;code&gt;HeaderParseError&lt;/code&gt; は、&lt;/a&gt;メッセージ・オブジェクトが持っていない場合に上昇する&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダを。</target>
        </trans-unit>
        <trans-unit id="8384ec6acec0de45fb2441be18b5c3e7c704e2d2" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;dev_mode&lt;/code&gt; attribute of &lt;a href=&quot;sys#sys.flags&quot;&gt;&lt;code&gt;sys.flags&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">設定し &lt;code&gt;dev_mode&lt;/code&gt; のの属性&lt;a href=&quot;sys#sys.flags&quot;&gt; &lt;code&gt;sys.flags&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e676252bc708f22adb4313e6f259b7265d67b7c6" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;environ&lt;/code&gt; attribute to a fully-populated WSGI environment. The default implementation uses all of the above methods and attributes, plus the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.get_stdin&quot;&gt;&lt;code&gt;get_stdin()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wsgiref.handlers.BaseHandler.get_stderr&quot;&gt;&lt;code&gt;get_stderr()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#wsgiref.handlers.BaseHandler.add_cgi_vars&quot;&gt;&lt;code&gt;add_cgi_vars()&lt;/code&gt;&lt;/a&gt; methods and the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt;&lt;code&gt;wsgi_file_wrapper&lt;/code&gt;&lt;/a&gt; attribute. It also inserts a &lt;code&gt;SERVER_SOFTWARE&lt;/code&gt; key if not present, as long as the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt;&lt;code&gt;origin_server&lt;/code&gt;&lt;/a&gt; attribute is a true value and the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.server_software&quot;&gt;&lt;code&gt;server_software&lt;/code&gt;&lt;/a&gt; attribute is set.</source>
          <target state="translated">&lt;code&gt;environ&lt;/code&gt; 属性を完全に設定されたWSGI環境に設定します。デフォルトの実装では、上記のすべてのメソッドと属性に加えて、&lt;a href=&quot;#wsgiref.handlers.BaseHandler.get_stdin&quot;&gt; &lt;code&gt;get_stdin()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#wsgiref.handlers.BaseHandler.get_stderr&quot;&gt; &lt;code&gt;get_stderr()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#wsgiref.handlers.BaseHandler.add_cgi_vars&quot;&gt; &lt;code&gt;add_cgi_vars()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt; &lt;code&gt;wsgi_file_wrapper&lt;/code&gt; &lt;/a&gt;属性を使用します。&lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt; &lt;code&gt;origin_server&lt;/code&gt; &lt;/a&gt;属性がtrue値であり、&lt;a href=&quot;#wsgiref.handlers.BaseHandler.server_software&quot;&gt; &lt;code&gt;server_software&lt;/code&gt; &lt;/a&gt;属性が設定されている限り、存在しない場合は &lt;code&gt;SERVER_SOFTWARE&lt;/code&gt; キーも挿入します。</target>
        </trans-unit>
        <trans-unit id="600370c50cbf9d6047ed528116e1b5194bfa741e" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;quitting&lt;/code&gt; attribute to &lt;code&gt;True&lt;/code&gt;. This raises &lt;a href=&quot;#bdb.BdbQuit&quot;&gt;&lt;code&gt;BdbQuit&lt;/code&gt;&lt;/a&gt; in the next call to one of the &lt;code&gt;dispatch_*()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;quitting&lt;/code&gt; 属性を &lt;code&gt;True&lt;/code&gt; に設定します。これにより、次の &lt;code&gt;dispatch_*()&lt;/code&gt; メソッドの呼び出しで&lt;a href=&quot;#bdb.BdbQuit&quot;&gt; &lt;code&gt;BdbQuit&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="b530ff3918da9c0f48fc3dbd5281c2f2eae5136a" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;quota&lt;/code&gt;&lt;em&gt;root&lt;/em&gt;&amp;rsquo;s resource &lt;em&gt;limits&lt;/em&gt;. This method is part of the IMAP4 QUOTA extension defined in rfc2087.</source>
          <target state="translated">設定し &lt;code&gt;quota&lt;/code&gt; &lt;em&gt;ルート&lt;/em&gt;のリソース&lt;em&gt;制限を&lt;/em&gt;。このメソッドは、rfc2087で定義されているIMAP4 QUOTA拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="05a76eb78286d4c2a3abbe682f2d7d9894d0c05d" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;featurename&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;. If the feature is not recognized, &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; is raised. If the feature or its setting is not supported by the parser, &lt;em&gt;SAXNotSupportedException&lt;/em&gt; is raised.</source>
          <target state="translated">&lt;em&gt;featurename&lt;/em&gt;を&lt;em&gt;valueに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。機能が認識されない場合、 &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; が発生します。機能またはその設定がパーサーでサポートされていない場合、&lt;em&gt;SAXNotSupportedException&lt;/em&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="c283032e91540377fbdc2025a80e0d5f3ca490ad" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;high&lt;/em&gt; and &lt;em&gt;low&lt;/em&gt; watermarks for write flow control.</source>
          <target state="translated">書き込みフロー制御の&lt;em&gt;最高水準点&lt;/em&gt;と&lt;em&gt;最低&lt;/em&gt;水準点を設定します。</target>
        </trans-unit>
        <trans-unit id="94bcddec1a9b01cd741dc8d63865ca7ea21f6518" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;key&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; and &lt;em&gt;coded_value&lt;/em&gt; attributes.</source>
          <target state="translated">設定する&lt;em&gt;キー&lt;/em&gt;、&lt;em&gt;値&lt;/em&gt;と&lt;em&gt;coded_value&lt;/em&gt;属性を。</target>
        </trans-unit>
        <trans-unit id="18b07451965c6a4786e177517c1f9fd82442a1ca" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;propertyname&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;. If the property is not recognized, &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; is raised. If the property or its setting is not supported by the parser, &lt;em&gt;SAXNotSupportedException&lt;/em&gt; is raised.</source>
          <target state="translated">&lt;em&gt;propertyname&lt;/em&gt;を&lt;em&gt;valueに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。プロパティが認識されない場合、 &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; が発生します。プロパティまたはその設定がパーサーでサポートされていない場合、&lt;em&gt;SAXNotSupportedException&lt;/em&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="680d3b6740539751b2705f43d423f4fc9a797419" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;table&lt;/em&gt; argument to &lt;code&gt;None&lt;/code&gt; for translations that only delete characters:</source>
          <target state="translated">文字のみを削除する翻訳の場合は、&lt;em&gt;テーブル&lt;/em&gt;引数を &lt;code&gt;None&lt;/code&gt; に設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8e3ca51ecafaa59c61a5668a2e2af593fb89a17" translate="yes" xml:space="preserve">
          <source>Set the access and modified times of the file specified by &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pathで&lt;/em&gt;指定されたファイルのアクセス時刻と変更時刻を設定します。</target>
        </trans-unit>
        <trans-unit id="e7ed725e1c19c6620d29d578daaf8e9b20fb6bf0" translate="yes" xml:space="preserve">
          <source>Set the angle measurement units to radians. Equivalent to &lt;code&gt;degrees(2*math.pi)&lt;/code&gt;.</source>
          <target state="translated">角度測定単位をラジアンに設定します。相当 &lt;code&gt;degrees(2*math.pi)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c03552753caaed8353a6a5c699cbb6ed21845d7d" translate="yes" xml:space="preserve">
          <source>Set the attribute &lt;em&gt;key&lt;/em&gt; on the element to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">要素の属性&lt;em&gt;キー&lt;/em&gt;を&lt;em&gt;value&lt;/em&gt;に設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="68657e4847dc0b7bc3826b03160c57f81e9e2297" translate="yes" xml:space="preserve">
          <source>Set the attributes of &lt;em&gt;num&lt;/em&gt; characters at the current cursor position, or at position &lt;code&gt;(y, x)&lt;/code&gt; if supplied. If &lt;em&gt;num&lt;/em&gt; is not given or is &lt;code&gt;-1&lt;/code&gt;, the attribute will be set on all the characters to the end of the line. This function moves cursor to position &lt;code&gt;(y, x)&lt;/code&gt; if supplied. The changed line will be touched using the &lt;a href=&quot;#curses.window.touchline&quot;&gt;&lt;code&gt;touchline()&lt;/code&gt;&lt;/a&gt; method so that the contents will be redisplayed by the next window refresh.</source>
          <target state="translated">現在のカーソル位置または指定されている場合は位置 &lt;code&gt;(y, x)&lt;/code&gt; に&lt;em&gt;num&lt;/em&gt;文字の属性を設定します。場合&lt;em&gt;numを&lt;/em&gt;与えられたかされないが &lt;code&gt;-1&lt;/code&gt; 、属性が行の最後にすべての文字に設定されます。この関数は、指定されている場合 &lt;code&gt;(y, x)&lt;/code&gt; カーソルを位置（y、x）に移動します。変更された行は&lt;a href=&quot;#curses.window.touchline&quot;&gt; &lt;code&gt;touchline()&lt;/code&gt; &lt;/a&gt;メソッドを使用してタッチされ、コンテンツは次のウィンドウのリフレッシュによって再表示されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6f2ae0eb42ca2de485463fc4e9f58fc6d56115d" translate="yes" xml:space="preserve">
          <source>Set the available ciphers for sockets created with this context. It should be a string in the &lt;a href=&quot;https://www.openssl.org/docs/manmaster/man1/ciphers.html&quot;&gt;OpenSSL cipher list format&lt;/a&gt;. If no cipher can be selected (because compile-time options or other configuration forbids use of all the specified ciphers), an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">このコンテキストで作成されたソケットに使用可能な暗号を設定します。&lt;a href=&quot;https://www.openssl.org/docs/manmaster/man1/ciphers.html&quot;&gt;OpenSSL暗号リスト形式の&lt;/a&gt;文字列である必要があります。暗号を選択できない場合（コンパイル時のオプションまたはその他の構成により、指定されたすべての暗号の使用が禁止されているため）、&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="88983f735d0d4c38a913e5bad4df21cc863eef4a" translate="yes" xml:space="preserve">
          <source>Set the background property of the window to the character &lt;em&gt;ch&lt;/em&gt;, with attributes &lt;em&gt;attr&lt;/em&gt;. The change is then applied to every character position in that window:</source>
          <target state="translated">属性&lt;em&gt;attr&lt;/em&gt;を使用して、ウィンドウのbackgroundプロパティを文字&lt;em&gt;ch&lt;/em&gt;に設定します。次に、そのウィンドウ内のすべての文字位置に変更が適用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3beb3fa3817b88405517064d8d509bff653a23d2" translate="yes" xml:space="preserve">
          <source>Set the blocking mode of the specified file descriptor. Set the &lt;a href=&quot;#os.O_NONBLOCK&quot;&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag if blocking is &lt;code&gt;False&lt;/code&gt;, clear the flag otherwise.</source>
          <target state="translated">指定されたファイル記述子のブロッキングモードを設定します。ブロッキングが &lt;code&gt;False&lt;/code&gt; の場合は&lt;a href=&quot;#os.O_NONBLOCK&quot;&gt; &lt;code&gt;O_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグを設定し、それ以外の場合はフラグをクリアします。</target>
        </trans-unit>
        <trans-unit id="866f055b9d79d777daed87404afc64d9187e25b1" translate="yes" xml:space="preserve">
          <source>Set the byte stream (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;) for this input source.</source>
          <target state="translated">この入力ソースのバイトストリーム（&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;）を設定します。</target>
        </trans-unit>
        <trans-unit id="248fe756d2059b0e2d80f43d54e3b4c5f7ca8a1a" translate="yes" xml:space="preserve">
          <source>Set the byte stream (a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;) for this input source.</source>
          <target state="translated">この入力ソースのバイトストリーム（&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;）を設定します。</target>
        </trans-unit>
        <trans-unit id="a76a42b46805ce18f2a107f44621d55dd8a3bb27" translate="yes" xml:space="preserve">
          <source>Set the character set of the payload to &lt;em&gt;charset&lt;/em&gt;, which can either be a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt;), a string naming a character set, or &lt;code&gt;None&lt;/code&gt;. If it is a string, it will be converted to a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance. If &lt;em&gt;charset&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;charset&lt;/code&gt; parameter will be removed from the &lt;em&gt;Content-Type&lt;/em&gt; header (the message will not be otherwise modified). Anything else will generate a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ペイロードの&lt;em&gt;文字セット&lt;/em&gt;を&lt;em&gt;charsetに&lt;/em&gt;設定します&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンス（email.charsetを参照）、文字セットを指定する文字列、または &lt;code&gt;None&lt;/code&gt; のいずれかです。文字列の場合は、&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスに変換されます。場合&lt;em&gt;文字セットが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、 &lt;code&gt;charset&lt;/code&gt; パラメータから削除される予定&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダ（メッセージは、そうでなければ変更されません）。それ以外のものは&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;を生成します。</target>
        </trans-unit>
        <trans-unit id="6fd47d9d73d4d90d4be17786ba49c8e38ff823b6" translate="yes" xml:space="preserve">
          <source>Set the character stream (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-file&quot;&gt;text file&lt;/a&gt;) for this input source.</source>
          <target state="translated">この入力ソースの文字ストリーム（&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-file&quot;&gt;テキストファイル&lt;/a&gt;）を設定します。</target>
        </trans-unit>
        <trans-unit id="ffd0ab356eeb719b33d5fac82b005018c8d08356" translate="yes" xml:space="preserve">
          <source>Set the character stream (a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-file&quot;&gt;text file&lt;/a&gt;) for this input source.</source>
          <target state="translated">この入力ソースの文字ストリーム（&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-file&quot;&gt;テキストファイル&lt;/a&gt;）を設定します。</target>
        </trans-unit>
        <trans-unit id="5e5c489cb0c62865f93e7ccc9b63c62195389318" translate="yes" xml:space="preserve">
          <source>Set the chunk&amp;rsquo;s current position. The &lt;em&gt;whence&lt;/em&gt; argument is optional and defaults to &lt;code&gt;0&lt;/code&gt; (absolute file positioning); other values are &lt;code&gt;1&lt;/code&gt; (seek relative to the current position) and &lt;code&gt;2&lt;/code&gt; (seek relative to the file&amp;rsquo;s end). There is no return value. If the underlying file does not allow seek, only forward seeks are allowed.</source>
          <target state="translated">チャンクの現在位置を設定します。&lt;em&gt;そこからの&lt;/em&gt;引数はオプションであり、デフォルトは &lt;code&gt;0&lt;/code&gt; （ファイルの絶対位置）その他の値は、 &lt;code&gt;1&lt;/code&gt; （現在の位置からの相対位置）と &lt;code&gt;2&lt;/code&gt; （ファイルの末尾からの相対位置）です。戻り値はありません。基になるファイルがシークを許可しない場合、フォワードシークのみが許可されます。</target>
        </trans-unit>
        <trans-unit id="ca9746003d7805e87fd2553c4e7f2821346c7f32" translate="yes" xml:space="preserve">
          <source>Set the compression type and description. At the moment, only compression type &lt;code&gt;NONE&lt;/code&gt; is supported, meaning no compression.</source>
          <target state="translated">圧縮タイプと説明を設定します。現時点では、圧縮タイプ &lt;code&gt;NONE&lt;/code&gt; のみがサポートされています。つまり、圧縮は行われません。</target>
        </trans-unit>
        <trans-unit id="f0ef3d010f552801b40fd36bf84682700d59f989" translate="yes" xml:space="preserve">
          <source>Set the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt;. If no &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; is set, content events will be discarded.</source>
          <target state="translated">現在の&lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; を&lt;/a&gt;設定します。&lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;が設定されていない場合、コンテンツイベントは破棄されます。</target>
        </trans-unit>
        <trans-unit id="c3442403fb7a21dd05db0da36a00107e4cc137ff" translate="yes" xml:space="preserve">
          <source>Set the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.DTDHandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt;. If no &lt;a href=&quot;xml.sax.handler#xml.sax.handler.DTDHandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt; is set, DTD events will be discarded.</source>
          <target state="translated">現在の&lt;a href=&quot;xml.sax.handler#xml.sax.handler.DTDHandler&quot;&gt; &lt;code&gt;DTDHandler&lt;/code&gt; を&lt;/a&gt;設定します。&lt;a href=&quot;xml.sax.handler#xml.sax.handler.DTDHandler&quot;&gt; &lt;code&gt;DTDHandler&lt;/code&gt; &lt;/a&gt;が設定されていない場合、DTDイベントは破棄されます。</target>
        </trans-unit>
        <trans-unit id="b4715526aedb97d4e82742d7163c4ee9a382b022" translate="yes" xml:space="preserve">
          <source>Set the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.EntityResolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt;. If no &lt;a href=&quot;xml.sax.handler#xml.sax.handler.EntityResolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt; is set, attempts to resolve an external entity will result in opening the system identifier for the entity, and fail if it is not available.</source>
          <target state="translated">現在の&lt;a href=&quot;xml.sax.handler#xml.sax.handler.EntityResolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; を&lt;/a&gt;設定します。&lt;a href=&quot;xml.sax.handler#xml.sax.handler.EntityResolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt;が設定されていない場合、外部エンティティを解決しようとすると、エンティティのシステム識別子が開かれ、使用できない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="d1a63b1a99de5e2e69c58a4b0866cb6742888167" translate="yes" xml:space="preserve">
          <source>Set the current child process watcher to &lt;em&gt;watcher&lt;/em&gt;.</source>
          <target state="translated">現在の子プロセスウォッチャーを&lt;em&gt;watcherに設定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2a4c8ad1e0ff8ad1778dbc9070b312063e515c97" translate="yes" xml:space="preserve">
          <source>Set the current child watcher to &lt;em&gt;watcher&lt;/em&gt; for the current policy. &lt;em&gt;watcher&lt;/em&gt; must implement methods defined in the &lt;a href=&quot;#asyncio.AbstractChildWatcher&quot;&gt;&lt;code&gt;AbstractChildWatcher&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">現在、子ウォッチャーを設定&lt;em&gt;ウォッチャー&lt;/em&gt;現在のポリシーのために。&lt;em&gt;ウォッチャー&lt;/em&gt;は、&lt;a href=&quot;#asyncio.AbstractChildWatcher&quot;&gt; &lt;code&gt;AbstractChildWatcher&lt;/code&gt; &lt;/a&gt;基本クラスで定義されたメソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="af0f7bfd30e44aadec5c10882dc17936ed02cf6c" translate="yes" xml:space="preserve">
          <source>Set the current context for the active thread to &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="translated">アクティブなスレッドの現在のコンテキストを&lt;em&gt;cに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7c4e1bb7eee2657b00c999c8699b14ba8a279b21" translate="yes" xml:space="preserve">
          <source>Set the current directory on the server.</source>
          <target state="translated">サーバ上のカレントディレクトリを設定します。</target>
        </trans-unit>
        <trans-unit id="90f7bb596599d781968f2f13afeade77fb8fc365" translate="yes" xml:space="preserve">
          <source>Set the current error handler. If no &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt; is set, errors will be raised as exceptions, and warnings will be printed.</source>
          <target state="translated">現在のエラーハンドラを設定します。&lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;が設定されていない場合、エラーは例外として発生し、警告が出力されます。</target>
        </trans-unit>
        <trans-unit id="cdc67f3e16a2020a26c470c5d5cd2553a6d7cfe1" translate="yes" xml:space="preserve">
          <source>Set the current numeric umask and return the previous umask.</source>
          <target state="translated">現在の数値のumaskを設定し、前のumaskを返します。</target>
        </trans-unit>
        <trans-unit id="698c07738aeb696890ca508eb438dd3222bede73" translate="yes" xml:space="preserve">
          <source>Set the current position of file descriptor &lt;em&gt;fd&lt;/em&gt; to position &lt;em&gt;pos&lt;/em&gt;, modified by &lt;em&gt;how&lt;/em&gt;: &lt;a href=&quot;#os.SEEK_SET&quot;&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;0&lt;/code&gt; to set the position relative to the beginning of the file; &lt;a href=&quot;#os.SEEK_CUR&quot;&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;1&lt;/code&gt; to set it relative to the current position; &lt;a href=&quot;#os.SEEK_END&quot;&gt;&lt;code&gt;SEEK_END&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;2&lt;/code&gt; to set it relative to the end of the file. Return the new cursor position in bytes, starting from the beginning.</source>
          <target state="translated">ファイルディスクリプタの現在位置を設定し&lt;em&gt;、FDに&lt;/em&gt;位置する&lt;em&gt;POS&lt;/em&gt;によって変更、&lt;em&gt;どのように&lt;/em&gt;：&lt;a href=&quot;#os.SEEK_SET&quot;&gt; &lt;code&gt;SEEK_SET&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;0&lt;/code&gt; のファイルの先頭に位置を設定します。&lt;a href=&quot;#os.SEEK_CUR&quot;&gt; &lt;code&gt;SEEK_CUR&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;1&lt;/code&gt; は、現在の位置を基準にして設定します。&lt;a href=&quot;#os.SEEK_END&quot;&gt; &lt;code&gt;SEEK_END&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;2&lt;/code&gt; 。ファイルの終わりを基準にして設定します。新しいカーソル位置を最初からバイト単位で返します。</target>
        </trans-unit>
        <trans-unit id="7602d4590e3f3662b25f9a8992377cd12c74cc46" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo; group id.</source>
          <target state="translated">現在のプロセスのグループIDを設定します。</target>
        </trans-unit>
        <trans-unit id="214b4fed50568ce34150e0c8b0f014575e3bcff8" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s effective group id.</source>
          <target state="translated">現在のプロセスの実効グループIDを設定します。</target>
        </trans-unit>
        <trans-unit id="7d0f2d2d0528dff956e6eac5e376937c908e145b" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s effective user id.</source>
          <target state="translated">現在のプロセスの実効ユーザーIDを設定します。</target>
        </trans-unit>
        <trans-unit id="831c5b232f35fbf3e43302d3d254f11409d2045b" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s real and effective group ids.</source>
          <target state="translated">現在のプロセスの実際の有効なグループIDを設定します。</target>
        </trans-unit>
        <trans-unit id="46ba729ee67ad42ea86c42a397578cd92d3d15a8" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s real and effective user ids.</source>
          <target state="translated">現在のプロセスの実際の有効なユーザーIDを設定します。</target>
        </trans-unit>
        <trans-unit id="091348809cb42e618d87d13789d0f252bce900c9" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s real, effective, and saved group ids.</source>
          <target state="translated">現在のプロセスの実際の、有効な、保存されたグループIDを設定します。</target>
        </trans-unit>
        <trans-unit id="137d89dc47244fe25932905f82b4b8c844974c76" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s real, effective, and saved user ids.</source>
          <target state="translated">現在のプロセスの実際の有効なユーザーIDを設定します。</target>
        </trans-unit>
        <trans-unit id="a0b21b3a04d461e8a5007036beae0da7ae1f8ee2" translate="yes" xml:space="preserve">
          <source>Set the current process&amp;rsquo;s user id.</source>
          <target state="translated">現在のプロセスのユーザーIDを設定します。</target>
        </trans-unit>
        <trans-unit id="eb8e2260f5218a32062f82598bda950fa4a5ae9a" translate="yes" xml:space="preserve">
          <source>Set the current process-wide policy to &lt;em&gt;policy&lt;/em&gt;.</source>
          <target state="translated">現在のプロセス全体のポリシーを&lt;em&gt;policyに設定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dd29dbea7181ab1fec55117570723cc8a9de34bf" translate="yes" xml:space="preserve">
          <source>Set the current value of the ctypes-private copy of the system &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; variable in the calling thread to &lt;em&gt;value&lt;/em&gt; and return the previous value.</source>
          <target state="translated">システムのctypesのプライベートコピーの現在の値を設定&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;に呼び出したスレッド内の変数&lt;em&gt;値を&lt;/em&gt;、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="e7cb8fe23f4eb701cec0d83225ee533ef0de5856" translate="yes" xml:space="preserve">
          <source>Set the cursor state. &lt;em&gt;visibility&lt;/em&gt; can be set to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, or &lt;code&gt;2&lt;/code&gt;, for invisible, normal, or very visible. If the terminal supports the visibility requested, return the previous cursor state; otherwise raise an exception. On many terminals, the &amp;ldquo;visible&amp;rdquo; mode is an underline cursor and the &amp;ldquo;very visible&amp;rdquo; mode is a block cursor.</source>
          <target state="translated">カーソルの状態を設定します。&lt;em&gt;視認性&lt;/em&gt;に設定することができる &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; 、又は &lt;code&gt;2&lt;/code&gt; 、目に見えない正常、または非常に目に見えるため、。端末が要求された可視性をサポートしている場合、以前のカーソル状態を返します。それ以外の場合は例外を発生させます。多くの端末では、「可視」モードは下線カーソルであり、「非常に可視」モードはブロックカーソルです。</target>
        </trans-unit>
        <trans-unit id="8317498495f14d361bc4f6f78387f1bde589bfc6" translate="yes" xml:space="preserve">
          <source>Set the curve name for Elliptic Curve-based Diffie-Hellman (ECDH) key exchange. ECDH is significantly faster than regular DH while arguably as secure. The &lt;em&gt;curve_name&lt;/em&gt; parameter should be a string describing a well-known elliptic curve, for example &lt;code&gt;prime256v1&lt;/code&gt; for a widely supported curve.</source>
          <target state="translated">楕円曲線ベースのDiffie-Hellman（ECDH）鍵交換の曲線名を設定します。ECDHは通常のDHよりもかなり高速ですが、間違いなく安全です。&lt;em&gt;curve_nameの&lt;/em&gt;パラメータは、例えば、よく知られた楕円曲線を記述する文字列であるべき &lt;code&gt;prime256v1&lt;/code&gt; 広くサポートされている曲線について。</target>
        </trans-unit>
        <trans-unit id="dbda37d142852e935e0fb158784c5112051bd4d0" translate="yes" xml:space="preserve">
          <source>Set the debug level. The higher the value of &lt;em&gt;debuglevel&lt;/em&gt;, the more debug output you get (on &lt;code&gt;sys.stdout&lt;/code&gt;).</source>
          <target state="translated">デバッグレベルを設定します。&lt;em&gt;debuglevel&lt;/em&gt;の値が高いほど、（ &lt;code&gt;sys.stdout&lt;/code&gt; で）より多くのデバッグ出力が得られます。</target>
        </trans-unit>
        <trans-unit id="b92ce9519acb41e812e97c481059a058e279b156" translate="yes" xml:space="preserve">
          <source>Set the debug mode of the event loop.</source>
          <target state="translated">イベントループのデバッグモードを設定します。</target>
        </trans-unit>
        <trans-unit id="fd841a8ada01ffca281d49cfe717569b04bca350" translate="yes" xml:space="preserve">
          <source>Set the debug output level. A value of 1 or &lt;code&gt;True&lt;/code&gt; for &lt;em&gt;level&lt;/em&gt; results in debug messages for connection and for all messages sent to and received from the server. A value of 2 for &lt;em&gt;level&lt;/em&gt; results in these messages being timestamped.</source>
          <target state="translated">デバッグ出力レベルを設定します。1かの値が &lt;code&gt;True&lt;/code&gt; のための&lt;em&gt;レベルの&lt;/em&gt;接続のために、すべてのメッセージのデバッグメッセージの結果はに送信され、サーバーから受信しました。&lt;em&gt;levelの&lt;/em&gt;値が2の場合、これらのメッセージにはタイムスタンプが付けられます。</target>
        </trans-unit>
        <trans-unit id="e0c18387baf855149bf9964ecec0432de522b9b2" translate="yes" xml:space="preserve">
          <source>Set the debugging level. The default debug level is &lt;code&gt;0&lt;/code&gt;, meaning no debugging output is printed. Any value greater than &lt;code&gt;0&lt;/code&gt; will cause all currently defined debug output to be printed to stdout. The &lt;code&gt;debuglevel&lt;/code&gt; is passed to any new &lt;a href=&quot;#http.client.HTTPResponse&quot;&gt;&lt;code&gt;HTTPResponse&lt;/code&gt;&lt;/a&gt; objects that are created.</source>
          <target state="translated">デバッグレベルを設定します。デフォルトのデバッグレベルは &lt;code&gt;0&lt;/code&gt; で、デバッグ出力は出力されません。 &lt;code&gt;0&lt;/code&gt; より大きい値を指定すると、現在定義されているすべてのデバッグ出力がstdoutに出力されます。 &lt;code&gt;debuglevel&lt;/code&gt; 任意の新しいに渡され&lt;a href=&quot;#http.client.HTTPResponse&quot;&gt; &lt;code&gt;HTTPResponse&lt;/code&gt; &lt;/a&gt;作成されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="105422e0ab284332f48ea67a8a2cc1f0d1643215" translate="yes" xml:space="preserve">
          <source>Set the default content type. &lt;em&gt;ctype&lt;/em&gt; should either be &lt;em&gt;text/plain&lt;/em&gt; or &lt;em&gt;message/rfc822&lt;/em&gt;, although this is not enforced. The default content type is not stored in the &lt;em&gt;Content-Type&lt;/em&gt; header, so it only affects the return value of the &lt;code&gt;get_content_type&lt;/code&gt; methods when no &lt;em&gt;Content-Type&lt;/em&gt; header is present in the message.</source>
          <target state="translated">デフォルトのコンテンツタイプを設定します。&lt;em&gt;ctype&lt;/em&gt;は&lt;em&gt;text / plain&lt;/em&gt;または&lt;em&gt;message / rfc822&lt;/em&gt;でなければなりませんが、これは強制されていません。デフォルトのコンテンツタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに格納されないため、メッセージに&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーが存在しない場合にのみ &lt;code&gt;get_content_type&lt;/code&gt; メソッドの戻り値に影響します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd01658d88e02bb73777850ebb8b41a80b208c37" translate="yes" xml:space="preserve">
          <source>Set the default content type. &lt;em&gt;ctype&lt;/em&gt; should either be &lt;em&gt;text/plain&lt;/em&gt; or &lt;em&gt;message/rfc822&lt;/em&gt;, although this is not enforced. The default content type is not stored in the &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">デフォルトのコンテンツタイプを設定します。&lt;em&gt;ctype&lt;/em&gt;は&lt;em&gt;text / plain&lt;/em&gt;または&lt;em&gt;message / rfc822&lt;/em&gt;でなければなりませんが、これは強制されていません。デフォルトのコンテンツタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに保存されません。</target>
        </trans-unit>
        <trans-unit id="05563a18782b88920b5f8849caff09a55e2d1921" translate="yes" xml:space="preserve">
          <source>Set the default executor for &lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;loop.run_in_executor()&lt;/code&gt; の&lt;/a&gt;デフォルトの実行プログラムを設定します。</target>
        </trans-unit>
        <trans-unit id="06ce36ba27e6d40123b6b212d23261cf0e094181" translate="yes" xml:space="preserve">
          <source>Set the default timeout in seconds (float) for new socket objects. When the socket module is first imported, the default is &lt;code&gt;None&lt;/code&gt;. See &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; for possible values and their respective meanings.</source>
          <target state="translated">新しいソケットオブジェクトのデフォルトのタイムアウトを秒単位（float）で設定します。ソケットモジュールが最初にインポートされたときのデフォルトは &lt;code&gt;None&lt;/code&gt; です。可能な値とそれぞれの意味については、&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f93875ef3e496da77f263c0ef70ccbb6aa0511aa" translate="yes" xml:space="preserve">
          <source>Set the delivery date of the message to &lt;em&gt;date&lt;/em&gt;, a floating-point number representing seconds since the epoch.</source>
          <target state="translated">メッセージの配達日を設定する&lt;em&gt;日付&lt;/em&gt;、エポックからの秒数を表す浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="7324d5c8261b85cfb4eb2f3ff6395b1ac1f6a867" translate="yes" xml:space="preserve">
          <source>Set the description used in the generated HTML documentation. This description will appear as a paragraph, below the server name, in the documentation.</source>
          <target state="translated">生成される HTML ドキュメントで使用する説明を設定します。この説明は、ドキュメントのサーバー名の下の段落として表示されます。</target>
        </trans-unit>
        <trans-unit id="6e027661a06ccc62e7c9bdeb04a78b98742b9256" translate="yes" xml:space="preserve">
          <source>Set the entire message object&amp;rsquo;s payload to &lt;em&gt;payload&lt;/em&gt;. It is the client&amp;rsquo;s responsibility to ensure the payload invariants. Optional &lt;em&gt;charset&lt;/em&gt; sets the message&amp;rsquo;s default character set; see &lt;a href=&quot;#email.message.Message.set_charset&quot;&gt;&lt;code&gt;set_charset()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">メッセージオブジェクト全体のペイロードを&lt;em&gt;payloadに&lt;/em&gt;設定します。ペイロードの不変を保証するのはクライアントの責任です。オプションの&lt;em&gt;文字&lt;/em&gt;セットは、メッセージのデフォルトの文字セットを設定します。詳細については、&lt;a href=&quot;#email.message.Message.set_charset&quot;&gt; &lt;code&gt;set_charset()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="09f42958b7bbdf34498ec6d61a53cc4cc8e62dcb" translate="yes" xml:space="preserve">
          <source>Set the environment variable named &lt;em&gt;key&lt;/em&gt; to the string &lt;em&gt;value&lt;/em&gt;. Such changes to the environment affect subprocesses started with &lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;という名前の環境変数を文字列&lt;em&gt;値に&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。環境に対するこのような変更は、&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.fork&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; で&lt;/a&gt;開始されたサブプロセスに影響します。</target>
        </trans-unit>
        <trans-unit id="d046c6a3ace05f741a5310d2e2b65e879b565379" translate="yes" xml:space="preserve">
          <source>Set the event loop as current via the current policy.</source>
          <target state="translated">イベントループをカレントポリシー経由でカレントに設定します。</target>
        </trans-unit>
        <trans-unit id="e74c64b8486c150a0d28521ade03d934cecce332" translate="yes" xml:space="preserve">
          <source>Set the event loop for the current context to &lt;em&gt;loop&lt;/em&gt;.</source>
          <target state="translated">現在のコンテキストのイベントループをloopに設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="04399466d26198be96c6af2375290024fffa99fa" translate="yes" xml:space="preserve">
          <source>Set the event.</source>
          <target state="translated">イベントを設定します。</target>
        </trans-unit>
        <trans-unit id="e8fa6022b254eef509163a26290459400ae8c3e8" translate="yes" xml:space="preserve">
          <source>Set the extended filesystem attribute &lt;em&gt;attribute&lt;/em&gt; on &lt;em&gt;path&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt;. &lt;em&gt;attribute&lt;/em&gt; must be a bytes or str with no embedded NULs (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface). If it is a str, it is encoded with the filesystem encoding. &lt;em&gt;flags&lt;/em&gt; may be &lt;a href=&quot;#os.XATTR_REPLACE&quot;&gt;&lt;code&gt;XATTR_REPLACE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.XATTR_CREATE&quot;&gt;&lt;code&gt;XATTR_CREATE&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#os.XATTR_REPLACE&quot;&gt;&lt;code&gt;XATTR_REPLACE&lt;/code&gt;&lt;/a&gt; is given and the attribute does not exist, &lt;code&gt;EEXISTS&lt;/code&gt; will be raised. If &lt;a href=&quot;#os.XATTR_CREATE&quot;&gt;&lt;code&gt;XATTR_CREATE&lt;/code&gt;&lt;/a&gt; is given and the attribute already exists, the attribute will not be created and &lt;code&gt;ENODATA&lt;/code&gt; will be raised.</source>
          <target state="translated">拡張ファイルシステム属性セット&lt;em&gt;の属性&lt;/em&gt;上&lt;em&gt;のパス&lt;/em&gt;に&lt;em&gt;値を&lt;/em&gt;。&lt;em&gt;属性&lt;/em&gt;は、NULが埋め込まれていないバイトまたはstrでなければなりません（&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを介して直接的または間接的に）。 strの場合、ファイルシステムエンコーディングでエンコードされます。&lt;em&gt;フラグ&lt;/em&gt;は&lt;a href=&quot;#os.XATTR_REPLACE&quot;&gt; &lt;code&gt;XATTR_REPLACE&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.XATTR_CREATE&quot;&gt; &lt;code&gt;XATTR_CREATE&lt;/code&gt; &lt;/a&gt;です。場合&lt;a href=&quot;#os.XATTR_REPLACE&quot;&gt; &lt;code&gt;XATTR_REPLACE&lt;/code&gt; が&lt;/a&gt;与えられ、属性が存在しない、 &lt;code&gt;EEXISTS&lt;/code&gt; が発生します。場合&lt;a href=&quot;#os.XATTR_CREATE&quot;&gt; &lt;code&gt;XATTR_CREATE&lt;/code&gt; が&lt;/a&gt;与えられ、属性がすでに存在している、属性が作成されず、 &lt;code&gt;ENODATA&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="4ac1e30224fb26cb6745ec81c853db0d02f67e45" translate="yes" xml:space="preserve">
          <source>Set the file filter.</source>
          <target state="translated">ファイルフィルタを設定します。</target>
        </trans-unit>
        <trans-unit id="f2c661d5cdd68798e199a9f0ae58fd7779af2453" translate="yes" xml:space="preserve">
          <source>Set the file pointer to the specified position.</source>
          <target state="translated">指定した位置にファイルポインタを設定します。</target>
        </trans-unit>
        <trans-unit id="b90f94d3cfe65b1812f9b90d05aa392932150556" translate="yes" xml:space="preserve">
          <source>Set the file&amp;rsquo;s current position. &lt;em&gt;whence&lt;/em&gt; argument is optional and defaults to &lt;code&gt;os.SEEK_SET&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; (absolute file positioning); other values are &lt;code&gt;os.SEEK_CUR&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; (seek relative to the current position) and &lt;code&gt;os.SEEK_END&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; (seek relative to the file&amp;rsquo;s end).</source>
          <target state="translated">ファイルの現在位置を設定します。&lt;em&gt;whence&lt;/em&gt;引数はオプションであり、デフォルトは &lt;code&gt;os.SEEK_SET&lt;/code&gt; または &lt;code&gt;0&lt;/code&gt; （絶対ファイル配置）です。その他の値は、 &lt;code&gt;os.SEEK_CUR&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; （現在の位置からの相対位置）および &lt;code&gt;os.SEEK_END&lt;/code&gt; または &lt;code&gt;2&lt;/code&gt; （ファイルの末尾からの相対位置）です。</target>
        </trans-unit>
        <trans-unit id="2cbace295ce4739a17f4cde4eebc2a35a7665ded" translate="yes" xml:space="preserve">
          <source>Set the first sequence to be compared. The second sequence to be compared is not changed.</source>
          <target state="translated">比較する最初のシーケンスを設定します。比較する 2 番目のシーケンスは変更しません。</target>
        </trans-unit>
        <trans-unit id="404166c2e1aa2a80874beb3799b187149a41d114" translate="yes" xml:space="preserve">
          <source>Set the flag(s) specified by &lt;em&gt;flag&lt;/em&gt; without changing other flags. To add more than one flag at a time, &lt;em&gt;flag&lt;/em&gt; may be a string of more than one character.</source>
          <target state="translated">他のフラグを変更せずに、&lt;em&gt;flagで&lt;/em&gt;指定された&lt;em&gt;フラグ&lt;/em&gt;を設定します。一度に複数のフラグを追加する場合、&lt;em&gt;flag&lt;/em&gt;は複数の文字の文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="d0debd1552ccb5cdfae64f0c8675ee4701ae9726" translate="yes" xml:space="preserve">
          <source>Set the flag(s) specified by &lt;em&gt;flag&lt;/em&gt; without changing other flags. To add more than one flag at a time, &lt;em&gt;flag&lt;/em&gt; may be a string of more than one character. The current &amp;ldquo;info&amp;rdquo; is overwritten whether or not it contains experimental information rather than flags.</source>
          <target state="translated">他のフラグを変更せずに、&lt;em&gt;flagで&lt;/em&gt;指定された&lt;em&gt;フラグ&lt;/em&gt;を設定します。一度に複数のフラグを追加する場合、&lt;em&gt;flag&lt;/em&gt;は複数の文字の文字列にすることができます。現在の「情報」は、フラグではなく実験的な情報が含まれているかどうかにかかわらず上書きされます。</target>
        </trans-unit>
        <trans-unit id="d68cfe6f92ba812fee901f97245e6550aee7a776" translate="yes" xml:space="preserve">
          <source>Set the flags of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;flags&lt;/em&gt;, like &lt;a href=&quot;#os.chflags&quot;&gt;&lt;code&gt;chflags()&lt;/code&gt;&lt;/a&gt;, but do not follow symbolic links. As of Python 3.3, this is equivalent to &lt;code&gt;os.chflags(path, flags, follow_symlinks=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;のフラグを&lt;a href=&quot;#os.chflags&quot;&gt; &lt;code&gt;chflags()&lt;/code&gt; の&lt;/a&gt;ように数値&lt;em&gt;フラグ&lt;/em&gt;に設定し&lt;em&gt;ます&lt;/em&gt;が、シンボリックリンクをたどらないでください。Python 3.3以降、これは &lt;code&gt;os.chflags(path, flags, follow_symlinks=False)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="0bca6eb4f0b284f7c9a73a7da8e6ad177daa3a28" translate="yes" xml:space="preserve">
          <source>Set the flags of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;flags&lt;/em&gt;. &lt;em&gt;flags&lt;/em&gt; may take a combination (bitwise OR) of the following values (as defined in the &lt;a href=&quot;stat#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module):</source>
          <target state="translated">&lt;em&gt;パス&lt;/em&gt;のフラグを数値&lt;em&gt;フラグに&lt;/em&gt;設定します。&lt;em&gt;フラグ&lt;/em&gt;は、（&lt;a href=&quot;stat#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;モジュールで定義されている）以下の値の組み合わせ（ビットごとのOR）を取ることができます。</target>
        </trans-unit>
        <trans-unit id="d5057d58203fbb90cc11525e7d60451732f64f37" translate="yes" xml:space="preserve">
          <source>Set the flags specified by &lt;em&gt;flags&lt;/em&gt; and unset all others.</source>
          <target state="translated">flagsで指定された&lt;em&gt;フラグ&lt;/em&gt;を設定し、その他の&lt;em&gt;フラグは&lt;/em&gt;すべて解除します。</target>
        </trans-unit>
        <trans-unit id="40e3a2b710dfa64240e5e282ba51a8026a122ba4" translate="yes" xml:space="preserve">
          <source>Set the flags specified by &lt;em&gt;flags&lt;/em&gt; and unset all others. Parameter &lt;em&gt;flags&lt;/em&gt; should be the concatenation in any order of zero or more occurrences of each of &lt;code&gt;'R'&lt;/code&gt;, &lt;code&gt;'O'&lt;/code&gt;, &lt;code&gt;'D'&lt;/code&gt;, &lt;code&gt;'F'&lt;/code&gt;, and &lt;code&gt;'A'&lt;/code&gt;.</source>
          <target state="translated">flagsで指定された&lt;em&gt;フラグ&lt;/em&gt;を設定し、その他の&lt;em&gt;フラグは&lt;/em&gt;すべて解除します。パラメーター&lt;em&gt;フラグ&lt;/em&gt;は、 &lt;code&gt;'R'&lt;/code&gt; 、 &lt;code&gt;'O'&lt;/code&gt; 、 &lt;code&gt;'D'&lt;/code&gt; 、 &lt;code&gt;'F'&lt;/code&gt; 、および &lt;code&gt;'A'&lt;/code&gt; のそれぞれが0回以上出現する任意の順序の連結である必要があります。</target>
        </trans-unit>
        <trans-unit id="defa0f7b265e5bc82b5265adc1569c9c2ca53819" translate="yes" xml:space="preserve">
          <source>Set the flags used by the interpreter for &lt;code&gt;dlopen()&lt;/code&gt; calls, such as when the interpreter loads extension modules. Among other things, this will enable a lazy resolving of symbols when importing a module, if called as &lt;code&gt;sys.setdlopenflags(0)&lt;/code&gt;. To share symbols across extension modules, call as &lt;code&gt;sys.setdlopenflags(os.RTLD_GLOBAL)&lt;/code&gt;. Symbolic names for the flag values can be found in the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module (&lt;code&gt;RTLD_xxx&lt;/code&gt; constants, e.g. &lt;a href=&quot;os#os.RTLD_LAZY&quot;&gt;&lt;code&gt;os.RTLD_LAZY&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">インタープリターが拡張モジュールをロードするときなど、インタープリターが &lt;code&gt;dlopen()&lt;/code&gt; 呼び出しに使用するフラグを設定します。特に、これは &lt;code&gt;sys.setdlopenflags(0)&lt;/code&gt; として呼び出された場合、モジュールのインポート時にシンボルの遅延解決を可能にします。拡張モジュール間でシンボルを共有するには、 &lt;code&gt;sys.setdlopenflags(os.RTLD_GLOBAL)&lt;/code&gt; として呼び出します。フラグ値の記号名は、&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールにあります（ &lt;code&gt;RTLD_xxx&lt;/code&gt; 定数、例えば&lt;a href=&quot;os#os.RTLD_LAZY&quot;&gt; &lt;code&gt;os.RTLD_LAZY&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="70239c439ede49d5ba6335f39040d02ed5b99b33" translate="yes" xml:space="preserve">
          <source>Set the frame rate to &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">フレームレートを&lt;em&gt;nに&lt;/em&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="d3214bc52c528d0429f37e081fd23c93c3b3d966" translate="yes" xml:space="preserve">
          <source>Set the garbage collection debugging flags. Debugging information will be written to &lt;code&gt;sys.stderr&lt;/code&gt;. See below for a list of debugging flags which can be combined using bit operations to control debugging.</source>
          <target state="translated">ガベージコレクションのデバッグフラグを設定します。デバッグ情報は &lt;code&gt;sys.stderr&lt;/code&gt; に書き込まれます。デバッグを制御するビット操作を使用して組み合わせることができるデバッグフラグのリストについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="c01ee23914c820b1cbc2c480e6fd913b5a94048c" translate="yes" xml:space="preserve">
          <source>Set the garbage collection thresholds (the collection frequency). Setting &lt;em&gt;threshold0&lt;/em&gt; to zero disables collection.</source>
          <target state="translated">ガベージコレクションのしきい値（収集頻度）を設定します。&lt;em&gt;threshold0&lt;/em&gt;をゼロに設定すると、収集が無効になります。</target>
        </trans-unit>
        <trans-unit id="d54a571d207bcdbd4b9d2ed94539f54c77e65869" translate="yes" xml:space="preserve">
          <source>Set the handler for signal &lt;em&gt;signalnum&lt;/em&gt; to the function &lt;em&gt;handler&lt;/em&gt;. &lt;em&gt;handler&lt;/em&gt; can be a callable Python object taking two arguments (see below), or one of the special values &lt;a href=&quot;#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt;. The previous signal handler will be returned (see the description of &lt;a href=&quot;#signal.getsignal&quot;&gt;&lt;code&gt;getsignal()&lt;/code&gt;&lt;/a&gt; above). (See the Unix man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt; for further information.)</source>
          <target state="translated">シグナル&lt;em&gt;signalnum&lt;/em&gt;のハンドラーを関数&lt;em&gt;handlerに設定し&lt;/em&gt;ます。&lt;em&gt;handler&lt;/em&gt;は、2つの引数（以下を参照）を取る呼び出し可能なPythonオブジェクト、または特別な値&lt;a href=&quot;#signal.SIG_IGN&quot;&gt; &lt;code&gt;signal.SIG_IGN&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;signal.SIG_DFL&lt;/code&gt; の&lt;/a&gt;いずれかです。以前のシグナルハンドラが返されます（上記の&lt;a href=&quot;#signal.getsignal&quot;&gt; &lt;code&gt;getsignal()&lt;/code&gt; の&lt;/a&gt;説明を参照）。 （詳細については、Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal（2）&lt;/a&gt;&lt;/em&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="45f917f88d2ebb2f7d8d94201ba78c80029595fe" translate="yes" xml:space="preserve">
          <source>Set the host and the port for HTTP Connect Tunnelling. This allows running the connection through a proxy server.</source>
          <target state="translated">HTTP Connect Tunnelling のホストとポートを設定します。これにより、プロキシサーバーを介して接続を実行することができます。</target>
        </trans-unit>
        <trans-unit id="b86132af1089b93a12178ace1d968c1e262b2dee" translate="yes" xml:space="preserve">
          <source>Set the ignore count for the given breakpoint number. If count is omitted, the ignore count is set to 0. A breakpoint becomes active when the ignore count is zero. When non-zero, the count is decremented each time the breakpoint is reached and the breakpoint is not disabled and any associated condition evaluates to true.</source>
          <target state="translated">指定されたブレークポイント番号の無視カウントを設定します。無視カウントを省略すると、無視カウントは 0 に設定されます。 無視カウントが 0 のとき、ブレークポイントはアクティブになります。ゼロ以外の場合、ブレークポイントに到達するたびにカウントはデクリメントされ、ブレークポイントは無効化されず、関連する条件はすべて真として評価されます。</target>
        </trans-unit>
        <trans-unit id="0e49b211866543c61d93dad5f7e614604b352f9d" translate="yes" xml:space="preserve">
          <source>Set the instance&amp;rsquo;s debugging level. This controls the amount of debugging output printed. The default, &lt;code&gt;0&lt;/code&gt;, produces no debugging output. A value of &lt;code&gt;1&lt;/code&gt; produces a moderate amount of debugging output, generally a single line per request or response. A value of &lt;code&gt;2&lt;/code&gt; or higher produces the maximum amount of debugging output, logging each line sent and received on the connection (including message text).</source>
          <target state="translated">インスタンスのデバッグレベルを設定します。これは、出力されるデバッグ出力の量を制御します。デフォルトの &lt;code&gt;0&lt;/code&gt; は、デバッグ出力を生成しません。値が &lt;code&gt;1&lt;/code&gt; の場合、適度な量のデバッグ出力が生成されます。通常、要求または応答ごとに1行です。 &lt;code&gt;2&lt;/code&gt; 以上の値を指定すると、デバッグ出力の最大量が生成され、接続で送受信された各行がログに記録されます（メッセージテキストを含む）。</target>
        </trans-unit>
        <trans-unit id="505e9b1391f1816100a0b24c02185fdcc335a574" translate="yes" xml:space="preserve">
          <source>Set the instance&amp;rsquo;s debugging level. This controls the amount of debugging output printed. The default, &lt;code&gt;0&lt;/code&gt;, produces no debugging output. A value of &lt;code&gt;1&lt;/code&gt; produces a moderate amount of debugging output, generally a single line per request. A value of &lt;code&gt;2&lt;/code&gt; or higher produces the maximum amount of debugging output, logging each line sent and received on the control connection.</source>
          <target state="translated">インスタンスのデバッグレベルを設定します。これは、出力されるデバッグ出力の量を制御します。デフォルトの &lt;code&gt;0&lt;/code&gt; は、デバッグ出力を生成しません。値が &lt;code&gt;1&lt;/code&gt; の場合、適度な量のデバッグ出力が生成されます。通常、リクエストごとに1行です。値が &lt;code&gt;2&lt;/code&gt; 以上の場合、デバッグ出力の最大量が生成され、制御接続で送受信された各行がログに記録されます。</target>
        </trans-unit>
        <trans-unit id="6168e3a63353167b8bd859384828154a9652ec93" translate="yes" xml:space="preserve">
          <source>Set the internal flag to true. All threads waiting for it to become true are awakened. Threads that call &lt;a href=&quot;#threading.Event.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; once the flag is true will not block at all.</source>
          <target state="translated">内部フラグをtrueに設定します。それが真になるのを待っているすべてのスレッドが起こされます。フラグがtrueになると&lt;a href=&quot;#threading.Event.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;を呼び出すスレッドはブロックされません。</target>
        </trans-unit>
        <trans-unit id="a49ab1107f1d9d7efa949ce12bcc5c177e6000b1" translate="yes" xml:space="preserve">
          <source>Set the interpreter&amp;rsquo;s &amp;ldquo;check interval&amp;rdquo;. This integer value determines how often the interpreter checks for periodic things such as thread switches and signal handlers. The default is &lt;code&gt;100&lt;/code&gt;, meaning the check is performed every 100 Python virtual instructions. Setting it to a larger value may increase performance for programs using threads. Setting it to a value &lt;code&gt;&amp;lt;=&lt;/code&gt; 0 checks every virtual instruction, maximizing responsiveness as well as overhead.</source>
          <target state="translated">インタプリタの「チェック間隔」を設定します。この整数値は、インタープリターがスレッドスイッチやシグナルハンドラーなどの定期的なものをチェックする頻度を決定します。デフォルトは &lt;code&gt;100&lt;/code&gt; です。つまり、チェックは100のPython仮想命令ごとに実行されます。大きな値に設定すると、スレッドを使用するプログラムのパフォーマンスが向上する場合があります。値に設定する &lt;code&gt;&amp;lt;=&lt;/code&gt; オーバーヘッドならびに応答性を最大限0チェック全ての仮想命令。</target>
        </trans-unit>
        <trans-unit id="30e4276e110aac5ff4aaa4c604f4466559d1b61b" translate="yes" xml:space="preserve">
          <source>Set the interpreter&amp;rsquo;s thread switch interval (in seconds). This floating-point value determines the ideal duration of the &amp;ldquo;timeslices&amp;rdquo; allocated to concurrently running Python threads. Please note that the actual value can be higher, especially if long-running internal functions or methods are used. Also, which thread becomes scheduled at the end of the interval is the operating system&amp;rsquo;s decision. The interpreter doesn&amp;rsquo;t have its own scheduler.</source>
          <target state="translated">インタプリタのスレッド切り替え間隔（秒単位）を設定します。この浮動小数点値は、同時に実行されるPythonスレッドに割り当てられる「タイムスライス」の理想的な期間を決定します。特に実行時間の長い内部関数またはメソッドが使用されている場合は、実際の値が高くなる可能性があることに注意してください。また、間隔の最後にスケジュールされるスレッドは、オペレーティングシステムの決定です。インタプリタには独自のスケジューラはありません。</target>
        </trans-unit>
        <trans-unit id="1d85d5a5b67c8a0a68568eb9a7e0072d07168335" translate="yes" xml:space="preserve">
          <source>Set the key audio sampling parameters&amp;mdash;sample format, number of channels, and sampling rate&amp;mdash;in one method call. &lt;em&gt;format&lt;/em&gt;, &lt;em&gt;nchannels&lt;/em&gt;, and &lt;em&gt;samplerate&lt;/em&gt; should be as specified in the &lt;a href=&quot;#ossaudiodev.oss_audio_device.setfmt&quot;&gt;&lt;code&gt;setfmt()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ossaudiodev.oss_audio_device.channels&quot;&gt;&lt;code&gt;channels()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ossaudiodev.oss_audio_device.speed&quot;&gt;&lt;code&gt;speed()&lt;/code&gt;&lt;/a&gt; methods. If &lt;em&gt;strict&lt;/em&gt; is true, &lt;a href=&quot;#ossaudiodev.oss_audio_device.setparameters&quot;&gt;&lt;code&gt;setparameters()&lt;/code&gt;&lt;/a&gt; checks to see if each parameter was actually set to the requested value, and raises &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt; if not. Returns a tuple (&lt;em&gt;format&lt;/em&gt;, &lt;em&gt;nchannels&lt;/em&gt;, &lt;em&gt;samplerate&lt;/em&gt;) indicating the parameter values that were actually set by the device driver (i.e., the same as the return values of &lt;a href=&quot;#ossaudiodev.oss_audio_device.setfmt&quot;&gt;&lt;code&gt;setfmt()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ossaudiodev.oss_audio_device.channels&quot;&gt;&lt;code&gt;channels()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ossaudiodev.oss_audio_device.speed&quot;&gt;&lt;code&gt;speed()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">1つのメソッド呼び出しで、主要なオーディオサンプリングパラメーター（サンプル形式、チャネル数、およびサンプリングレート）を設定します。&lt;em&gt;format&lt;/em&gt;、&lt;em&gt;nchannels&lt;/em&gt;、および&lt;em&gt;samplerate&lt;/em&gt;は、&lt;a href=&quot;#ossaudiodev.oss_audio_device.setfmt&quot;&gt; &lt;code&gt;setfmt()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ossaudiodev.oss_audio_device.channels&quot;&gt; &lt;code&gt;channels()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#ossaudiodev.oss_audio_device.speed&quot;&gt; &lt;code&gt;speed()&lt;/code&gt; &lt;/a&gt;メソッドで指定されているとおりにする必要があります。もし&lt;em&gt;厳密には&lt;/em&gt;真である&lt;a href=&quot;#ossaudiodev.oss_audio_device.setparameters&quot;&gt; &lt;code&gt;setparameters()&lt;/code&gt; &lt;/a&gt;各パラメータが実際に要求された値に設定されたかどうかを調べ、そして上げる&lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; し&lt;/a&gt;ていない場合。デバイスドライバーによって実際に設定されたパラメーター値を示すタプル（&lt;em&gt;format&lt;/em&gt;、&lt;em&gt;nchannels&lt;/em&gt;、&lt;em&gt;samplerate&lt;/em&gt;）を返します（つまり、&lt;a href=&quot;#ossaudiodev.oss_audio_device.setfmt&quot;&gt; &lt;code&gt;setfmt()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ossaudiodev.oss_audio_device.channels&quot;&gt; &lt;code&gt;channels()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#ossaudiodev.oss_audio_device.speed&quot;&gt; &lt;code&gt;speed()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="199ac3bffd5dec6e04c4399dbadbfc4ec75b4714" translate="yes" xml:space="preserve">
          <source>Set the line thickness to &lt;em&gt;width&lt;/em&gt; or return it. If resizemode is set to &amp;ldquo;auto&amp;rdquo; and turtleshape is a polygon, that polygon is drawn with the same line thickness. If no argument is given, the current pensize is returned.</source>
          <target state="translated">線の太さを&lt;em&gt;幅に&lt;/em&gt;設定するか返します。resizemodeが「auto」に設定されていて、亀の形がポリゴンの場合、そのポリゴンは同じ線の太さで描画されます。引数を指定しない場合、現在のペンサイズが返されます。</target>
        </trans-unit>
        <trans-unit id="3fab667989389cfe635d4dd7d69286a017106a8f" translate="yes" xml:space="preserve">
          <source>Set the line-end translation mode for the file descriptor &lt;em&gt;fd&lt;/em&gt;. To set it to text mode, &lt;em&gt;flags&lt;/em&gt; should be &lt;a href=&quot;os#os.O_TEXT&quot;&gt;&lt;code&gt;os.O_TEXT&lt;/code&gt;&lt;/a&gt;; for binary, it should be &lt;a href=&quot;os#os.O_BINARY&quot;&gt;&lt;code&gt;os.O_BINARY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdの&lt;/em&gt;行末変換モードを設定します。テキストモードに設定するには、&lt;em&gt;フラグ&lt;/em&gt;は&lt;a href=&quot;os#os.O_TEXT&quot;&gt; &lt;code&gt;os.O_TEXT&lt;/code&gt; である&lt;/a&gt;必要があります。バイナリの場合は、&lt;a href=&quot;os#os.O_BINARY&quot;&gt; &lt;code&gt;os.O_BINARY&lt;/code&gt; &lt;/a&gt;にする必要があります。</target>
        </trans-unit>
        <trans-unit id="dedce948dfb2ae9173a9db60a569ddd77b2ad41b" translate="yes" xml:space="preserve">
          <source>Set the list of labels on the message to &lt;em&gt;labels&lt;/em&gt;.</source>
          <target state="translated">メッセージにラベルのリストを設定し&lt;em&gt;たラベル&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8415dfc920cd5953f81d1b6f6257f8bb63960ae2" translate="yes" xml:space="preserve">
          <source>Set the list of sequences that include this message.</source>
          <target state="translated">このメッセージを含むシーケンスのリストを設定します。</target>
        </trans-unit>
        <trans-unit id="908f73719abcea6542ac7b3941eec8f149cdf746" translate="yes" xml:space="preserve">
          <source>Set the list of supplemental group ids associated with the current process to &lt;em&gt;groups&lt;/em&gt;. &lt;em&gt;groups&lt;/em&gt; must be a sequence, and each element must be an integer identifying a group. This operation is typically available only to the superuser.</source>
          <target state="translated">現在のプロセスに関連付けられている補足グループIDのリストを&lt;em&gt;groupsに設定し&lt;/em&gt;ます。&lt;em&gt;groups&lt;/em&gt;はシーケンスでなければならず、各要素はグループを識別する整数でなければなりません。この操作は通常、スーパーユーザーのみが使用できます。</target>
        </trans-unit>
        <trans-unit id="7b3078d487135eda9d80055d10ccd9d43f7fca1e" translate="yes" xml:space="preserve">
          <source>Set the machine&amp;rsquo;s hostname to &lt;em&gt;name&lt;/em&gt;. This will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t have enough rights.</source>
          <target state="translated">マシンのホスト名を&lt;em&gt;nameに&lt;/em&gt;設定します。十分な権限がない場合は、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="61adaf39e41773439abec3e7e5efe42792d361e7" translate="yes" xml:space="preserve">
          <source>Set the main type and subtype for the &lt;em&gt;Content-Type&lt;/em&gt; header. &lt;em&gt;type&lt;/em&gt; must be a string in the form &lt;em&gt;maintype/subtype&lt;/em&gt;, otherwise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーのメインタイプとサブタイプを設定します。&lt;em&gt;type&lt;/em&gt;は&lt;em&gt;maintype / subtype&lt;/em&gt;の形式の文字列である必要があります。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="174d61ea31869fc261f97335eb08451c1a655f58" translate="yes" xml:space="preserve">
          <source>Set the maximum depth of the Python interpreter stack to &lt;em&gt;limit&lt;/em&gt;. This limit prevents infinite recursion from causing an overflow of the C stack and crashing Python.</source>
          <target state="translated">Pythonインタープリタースタックの最大深度を&lt;em&gt;limitに設定し&lt;/em&gt;ます。この制限により、無限再帰によってCスタックがオーバーフローしてPythonがクラッシュするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="e2ae62c79c3148af8ab2fb3e426be21dec2dfd7c" translate="yes" xml:space="preserve">
          <source>Set the maximum time in milliseconds that can elapse between press and release events in order for them to be recognized as a click, and return the previous interval value. The default value is 200 msec, or one fifth of a second.</source>
          <target state="translated">プレスイベントとリリースイベントがクリックと認識されるまでの最大時間をミリ秒単位で設定し、前の間隔の値に戻します。デフォルト値は200ミリ秒(1/5秒)です。</target>
        </trans-unit>
        <trans-unit id="24ec1c7dcc28445074df1084800ea61ab24d509a" translate="yes" xml:space="preserve">
          <source>Set the message&amp;rsquo;s envelope header to &lt;em&gt;unixfrom&lt;/em&gt;, which should be a string.</source>
          <target state="translated">メッセージのエンベロープヘッダーを&lt;em&gt;unixfrom&lt;/em&gt;に設定します。これは文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9bb06626e891c4f43ac3503694535d7d839939bd" translate="yes" xml:space="preserve">
          <source>Set the message&amp;rsquo;s envelope header to &lt;em&gt;unixfrom&lt;/em&gt;, which should be a string. (See &lt;a href=&quot;mailbox#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; for a brief description of this header.)</source>
          <target state="translated">メッセージのエンベロープヘッダーを&lt;em&gt;unixfrom&lt;/em&gt;に設定します。これは文字列でなければなりません。（このヘッダーの簡単な説明については、&lt;a href=&quot;mailbox#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="e1f9eb3206a4017c19a511f2fd210e4964ab65d2" translate="yes" xml:space="preserve">
          <source>Set the message&amp;rsquo;s visible headers to be the same as the headers in &lt;em&gt;message&lt;/em&gt;. Parameter &lt;em&gt;visible&lt;/em&gt; should be a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance, an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, a string, or a file-like object (which should be open in text mode).</source>
          <target state="translated">メッセージの表示ヘッダーをmessageのヘッダーと同じになるように設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;visible&lt;/em&gt;パラメータは、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;インスタンス、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;インスタンス、文字列、またはファイルのようなオブジェクト（テキストモードで開く必要があります）である必要があります。</target>
        </trans-unit>
        <trans-unit id="2fd08afbf81a1298d49c6870a31bb0f63c088dd9" translate="yes" xml:space="preserve">
          <source>Set the method which should be used to start child processes. &lt;em&gt;method&lt;/em&gt; can be &lt;code&gt;'fork'&lt;/code&gt;, &lt;code&gt;'spawn'&lt;/code&gt; or &lt;code&gt;'forkserver'&lt;/code&gt;.</source>
          <target state="translated">子プロセスの開始に使用するメソッドを設定します。&lt;em&gt;method&lt;/em&gt;は &lt;code&gt;'fork'&lt;/code&gt; 、 &lt;code&gt;'spawn'&lt;/code&gt; 、または &lt;code&gt;'forkserver'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="891f91896c1aa859e431a24b73aba6f7856db6f6" translate="yes" xml:space="preserve">
          <source>Set the mouse events to be reported, and return a tuple &lt;code&gt;(availmask,
oldmask)&lt;/code&gt;. &lt;em&gt;availmask&lt;/em&gt; indicates which of the specified mouse events can be reported; on complete failure it returns &lt;code&gt;0&lt;/code&gt;. &lt;em&gt;oldmask&lt;/em&gt; is the previous value of the given window&amp;rsquo;s mouse event mask. If this function is never called, no mouse events are ever reported.</source>
          <target state="translated">報告するマウスイベントを設定し、タプル &lt;code&gt;(availmask, oldmask)&lt;/code&gt; ます。&lt;em&gt;availmask&lt;/em&gt;は、指定されたマウスイベントのどれを報告できるかを示します。完全に失敗すると &lt;code&gt;0&lt;/code&gt; を返します。&lt;em&gt;oldmask&lt;/em&gt;は、指定されたウィンドウのマウスイベントマスクの以前の値です。この関数が呼び出されない場合、マウスイベントは報告されません。</target>
        </trans-unit>
        <trans-unit id="9ddf33369424abe2e0a20a7e188d93158431167d" translate="yes" xml:space="preserve">
          <source>Set the name of the Task.</source>
          <target state="translated">タスクの名前を設定します。</target>
        </trans-unit>
        <trans-unit id="f34d97d28883459de806541333352e0b8ea7fc8d" translate="yes" xml:space="preserve">
          <source>Set the name used in the generated HTML documentation. This name will appear at the top of the generated documentation inside a &amp;ldquo;h1&amp;rdquo; element.</source>
          <target state="translated">生成されたHTMLドキュメントで使用される名前を設定します。この名前は、「h1」要素内の生成されたドキュメントの上部に表示されます。</target>
        </trans-unit>
        <trans-unit id="2cc3cab5e4e2c8f59a0fa1a29e8ab0bd9fa180a5" translate="yes" xml:space="preserve">
          <source>Set the next line that will be executed. Only available in the bottom-most frame. This lets you jump back and execute code again, or jump forward to skip code that you don&amp;rsquo;t want to run.</source>
          <target state="translated">実行する次の行を設定します。一番下のフレームでのみ使用できます。これにより、ジャンプしてコードを再度実行したり、ジャンプして実行したくないコードをスキップしたりできます。</target>
        </trans-unit>
        <trans-unit id="a6d7a7569762fa40ac9bef20123aef3ac6417ac8" translate="yes" xml:space="preserve">
          <source>Set the number of channels.</source>
          <target state="translated">チャンネル数を設定します。</target>
        </trans-unit>
        <trans-unit id="71678fa908e91371ad4c8b1bb2b9d6783ab879bb" translate="yes" xml:space="preserve">
          <source>Set the number of frames to &lt;em&gt;n&lt;/em&gt;. This will be changed later if the number of frames actually written is different (this update attempt will raise an error if the output stream is not seekable).</source>
          <target state="translated">フレーム数を&lt;em&gt;nに&lt;/em&gt;設定します。実際に書き込まれたフレームの数が異なる場合、これは後で変更されます（出力ストリームがシークできない場合、この更新試行はエラーを発生させます）。</target>
        </trans-unit>
        <trans-unit id="c45dc1e0e90feb69a596a5dc482f1dcbca284e2f" translate="yes" xml:space="preserve">
          <source>Set the number of output channels to &lt;em&gt;nchannels&lt;/em&gt;. A value of 1 indicates monophonic sound, 2 stereophonic. Some devices may have more than 2 channels, and some high-end devices may not support mono. Returns the number of channels the device was set to.</source>
          <target state="translated">出力チャネルの数を&lt;em&gt;nchannelsに設定し&lt;/em&gt;ます。値1はモノラルサウンド、2はステレオフォニックを示します。一部のデバイスには3つ以上のチャネルがあり、一部のハイエンドデバイスはモノラルをサポートしない場合があります。デバイスに設定されたチャネルの数を返します。</target>
        </trans-unit>
        <trans-unit id="2d320270a5f8c011a286a692630aeb5321d255f5" translate="yes" xml:space="preserve">
          <source>Set the orientation of the turtle to &lt;em&gt;to_angle&lt;/em&gt;. Here are some common directions in degrees:</source>
          <target state="translated">カメの向きを&lt;em&gt;to_angleに設定し&lt;/em&gt;ます。度単位の一般的な方向は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c14a5bad41928c5ffb62a326d9f74a95662bfd07" translate="yes" xml:space="preserve">
          <source>Set the panel&amp;rsquo;s user pointer to &lt;em&gt;obj&lt;/em&gt;. This is used to associate an arbitrary piece of data with the panel, and can be any Python object.</source>
          <target state="translated">パネルのユーザーポインターを&lt;em&gt;objに設定し&lt;/em&gt;ます。これは、任意のデータをパネルに関連付けるために使用され、任意のPythonオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="4ecac1efab7f6dc73cf31e4072c48f7d9c64afdf" translate="yes" xml:space="preserve">
          <source>Set the peak size of memory blocks traced by the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module to the current size.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールによってトレースされるメモリブロックのピークサイズを現在のサイズに設定します。</target>
        </trans-unit>
        <trans-unit id="e98bb7b1ff5b48534b267fcd5bac0630a4522be3" translate="yes" xml:space="preserve">
          <source>Set the priority mask to &lt;em&gt;maskpri&lt;/em&gt; and return the previous mask value. Calls to &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; with a priority level not set in &lt;em&gt;maskpri&lt;/em&gt; are ignored. The default is to log all priorities. The function &lt;code&gt;LOG_MASK(pri)&lt;/code&gt; calculates the mask for the individual priority &lt;em&gt;pri&lt;/em&gt;. The function &lt;code&gt;LOG_UPTO(pri)&lt;/code&gt; calculates the mask for all priorities up to and including &lt;em&gt;pri&lt;/em&gt;.</source>
          <target state="translated">優先度マスクを&lt;em&gt;maskpriに&lt;/em&gt;設定し、以前のマスク値を返します。&lt;em&gt;maskpriに&lt;/em&gt;設定されていない優先順位レベルでの&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; の&lt;/a&gt;呼び出しは無視されます。デフォルトでは、すべての優先順位をログに記録します。関数 &lt;code&gt;LOG_MASK(pri)&lt;/code&gt; は、個々の優先順位&lt;em&gt;priの&lt;/em&gt;マスクを計算します。関数 &lt;code&gt;LOG_UPTO(pri)&lt;/code&gt; 最大を含む全ての優先順位のためのマスクを計算&lt;em&gt;PRI&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a52f6e256cc376ed517ac68faaf286a7d4208037" translate="yes" xml:space="preserve">
          <source>Set the process group associated with the terminal given by &lt;em&gt;fd&lt;/em&gt; (an open file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt;) to &lt;em&gt;pg&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt;（&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;によって返されるオープンファイル記述子）によって指定された端末に関連付けられたプロセスグループを&lt;em&gt;pgに設定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cd205e5b602b9219b6e88afa2e8591dd9462a952" translate="yes" xml:space="preserve">
          <source>Set the root logger level to the specified &lt;a href=&quot;#levels&quot;&gt;level&lt;/a&gt;.</source>
          <target state="translated">ルートロガーレベルを指定された&lt;a href=&quot;#levels&quot;&gt;レベルに&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="9ea36e706e9ad2d0ed86d6fb51be7413b5509330" translate="yes" xml:space="preserve">
          <source>Set the sample width to &lt;em&gt;n&lt;/em&gt; bytes.</source>
          <target state="translated">サンプル幅を&lt;em&gt;n&lt;/em&gt;バイトに設定します。</target>
        </trans-unit>
        <trans-unit id="c7dac2d02a414a101d0444c25110d1c4afe13983" translate="yes" xml:space="preserve">
          <source>Set the scheduling policy for the process with PID &lt;em&gt;pid&lt;/em&gt;. A &lt;em&gt;pid&lt;/em&gt; of 0 means the calling process. &lt;em&gt;policy&lt;/em&gt; is one of the scheduling policy constants above. &lt;em&gt;param&lt;/em&gt; is a &lt;a href=&quot;#os.sched_param&quot;&gt;&lt;code&gt;sched_param&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">PID &lt;em&gt;pid&lt;/em&gt;を使用して、プロセスのスケジューリングポリシーを設定します。&lt;em&gt;PID&lt;/em&gt; 0手段呼び出し元のプロセスの。&lt;em&gt;policy&lt;/em&gt;は、上記のスケジューリングポリシー定数の1つです。&lt;em&gt;param&lt;/em&gt;は&lt;a href=&quot;#os.sched_param&quot;&gt; &lt;code&gt;sched_param&lt;/code&gt; &lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="f97602946fd87a1e16a2f0d0ff9f0021fd78772d" translate="yes" xml:space="preserve">
          <source>Set the scrolling region from line &lt;em&gt;top&lt;/em&gt; to line &lt;em&gt;bottom&lt;/em&gt;. All scrolling actions will take place in this region.</source>
          <target state="translated">スクロール領域を行&lt;em&gt;上部&lt;/em&gt;から行&lt;em&gt;下部に設定し&lt;/em&gt;ます。すべてのスクロールアクションはこの領域で行われます。</target>
        </trans-unit>
        <trans-unit id="93782ef6e388f29b4320ac44b55d880764df238d" translate="yes" xml:space="preserve">
          <source>Set the second sequence to be compared. The first sequence to be compared is not changed.</source>
          <target state="translated">比較する 2 番目のシーケンスを設定します。比較する最初のシーケンスは変更されません。</target>
        </trans-unit>
        <trans-unit id="d40789959103e5cbf7ce1ad1ac909481f37bb4f8" translate="yes" xml:space="preserve">
          <source>Set the sequence of allowed domains, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">許可するドメインのシーケンス、または&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を設定します。</target>
        </trans-unit>
        <trans-unit id="431ad03e7406df2865ae187ad4642c53f0b014ff" translate="yes" xml:space="preserve">
          <source>Set the sequence of blocked domains.</source>
          <target state="translated">ブロックされたドメインの順番を設定します。</target>
        </trans-unit>
        <trans-unit id="b1ad4bc007e2ff36cbc17f5faf3f2edb04207f6f" translate="yes" xml:space="preserve">
          <source>Set the size and position of the main window. Default values of arguments are stored in the configuration dictionary and can be changed via a &lt;code&gt;turtle.cfg&lt;/code&gt; file.</source>
          <target state="translated">メインウィンドウのサイズと位置を設定します。引数のデフォルト値は設定辞書に保存されており、 &lt;code&gt;turtle.cfg&lt;/code&gt; ファイルを介して変更できます。</target>
        </trans-unit>
        <trans-unit id="563435aee3b27deb5b4a12308c0c2763154dd422" translate="yes" xml:space="preserve">
          <source>Set the state of the decoder to &lt;em&gt;state&lt;/em&gt;. &lt;em&gt;state&lt;/em&gt; must be a decoder state returned by &lt;a href=&quot;#codecs.IncrementalDecoder.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デコーダーの状態をstateに設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;state&lt;/em&gt;は、&lt;a href=&quot;#codecs.IncrementalDecoder.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt;によって返されるデコーダー&lt;em&gt;状態で&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="c3542248e54cf33a6afbbeb16df16912d250dfaf" translate="yes" xml:space="preserve">
          <source>Set the state of the encoder to &lt;em&gt;state&lt;/em&gt;. &lt;em&gt;state&lt;/em&gt; must be an encoder state returned by &lt;a href=&quot;#codecs.IncrementalEncoder.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エンコーダーの状態をstateに設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;state&lt;/em&gt;は、&lt;a href=&quot;#codecs.IncrementalEncoder.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt;によって返されるエンコーダー&lt;em&gt;状態で&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="b0fc9642c53e7db36d896df0f50e46323ba12502" translate="yes" xml:space="preserve">
          <source>Set the subdirectory the message should be stored in. Parameter &lt;em&gt;subdir&lt;/em&gt; must be either &amp;ldquo;new&amp;rdquo; or &amp;ldquo;cur&amp;rdquo;.</source>
          <target state="translated">メッセージを保存するサブディレクトリを設定し&lt;em&gt;ます&lt;/em&gt;。パラメータ&lt;em&gt;subdir&lt;/em&gt;は「new」または「cur」のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="9301cbd1965487f4b22321e0955ffb7dbfe8b7e6" translate="yes" xml:space="preserve">
          <source>Set the system&amp;rsquo;s profile function, which allows you to implement a Python source code profiler in Python. See chapter &lt;a href=&quot;profile#profile&quot;&gt;The Python Profilers&lt;/a&gt; for more information on the Python profiler. The system&amp;rsquo;s profile function is called similarly to the system&amp;rsquo;s trace function (see &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt;), but it is called with different events, for example it isn&amp;rsquo;t called for each executed line of code (only on call and return, but the return event is reported even when an exception has been set). The function is thread-specific, but there is no way for the profiler to know about context switches between threads, so it does not make sense to use this in the presence of multiple threads. Also, its return value is not used, so it can simply return &lt;code&gt;None&lt;/code&gt;. Error in the profile function will cause itself unset.</source>
          <target state="translated">システムのプロファイル関数を設定します。これにより、PythonソースコードプロファイラーをPythonに実装できます。&lt;a href=&quot;profile#profile&quot;&gt;Pythonプロファイラ&lt;/a&gt;の詳細については、「Pythonプロファイラ」の章を参照してください。システムのプロファイル関数は、システムのトレース関数（&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; を&lt;/a&gt;参照）と同様に呼び出されますが、異なるイベントで呼び出されます。たとえば、実行されたコードの各行に対しては呼び出されません（呼び出し時と戻り時のみ、ただしreturn例外が設定されている場合でもイベントが報告されます）。関数はスレッド固有ですが、プロファイラーがスレッド間のコンテキスト切り替えについて知る方法がないため、複数のスレッドがある場合にこれを使用しても意味がありません。また、その戻り値は使用されないため、単に &lt;code&gt;None&lt;/code&gt; を返すことができます。プロファイル関数にエラーがあると、それ自体が設定解除されます。</target>
        </trans-unit>
        <trans-unit id="656c259145d692777931ee438b6611ab875a7443" translate="yes" xml:space="preserve">
          <source>Set the system&amp;rsquo;s trace function, which allows you to implement a Python source code debugger in Python. The function is thread-specific; for a debugger to support multiple threads, it must register a trace function using &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt; for each thread being debugged or use &lt;a href=&quot;threading#threading.settrace&quot;&gt;&lt;code&gt;threading.settrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムのトレース関数を設定します。これにより、PythonソースコードデバッガーをPythonに実装できます。関数はスレッド固有です。デバッガーが複数のスレッドをサポートするには、デバッグする&lt;a href=&quot;threading#threading.settrace&quot;&gt; &lt;code&gt;threading.settrace()&lt;/code&gt; &lt;/a&gt;ごとに&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; &lt;/a&gt;を使用してトレース関数を登録するか、threading.settrace（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f2ab02dfa8e6817a04d5818e48751dcf77e8ae29" translate="yes" xml:space="preserve">
          <source>Set the time of the specified clock &lt;em&gt;clk_id&lt;/em&gt;. Currently, &lt;a href=&quot;#time.CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt; is the only accepted value for &lt;em&gt;clk_id&lt;/em&gt;.</source>
          <target state="translated">指定されたクロックの時刻を設定します&lt;em&gt;clk_id&lt;/em&gt;。現在、&lt;a href=&quot;#time.CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; は&lt;/a&gt;のためにのみ認められた値である&lt;em&gt;たclk_id&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="090d2f4651b77c84e29f7451ba0f1dd204357b57" translate="yes" xml:space="preserve">
          <source>Set the title used in the generated HTML documentation. This title will be used inside the HTML &amp;ldquo;title&amp;rdquo; element.</source>
          <target state="translated">生成されたHTMLドキュメントで使用されるタイトルを設定します。このタイトルは、HTMLの「title」要素内で使用されます。</target>
        </trans-unit>
        <trans-unit id="3569645e136f173ed24dc762812fab9041a17fdc" translate="yes" xml:space="preserve">
          <source>Set the tty attributes for file descriptor &lt;em&gt;fd&lt;/em&gt; from the &lt;em&gt;attributes&lt;/em&gt;, which is a list like the one returned by &lt;a href=&quot;#termios.tcgetattr&quot;&gt;&lt;code&gt;tcgetattr()&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;when&lt;/em&gt; argument determines when the attributes are changed: &lt;code&gt;TCSANOW&lt;/code&gt; to change immediately, &lt;code&gt;TCSADRAIN&lt;/code&gt; to change after transmitting all queued output, or &lt;code&gt;TCSAFLUSH&lt;/code&gt; to change after transmitting all queued output and discarding all queued input.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fd&lt;/em&gt;のtty属性をattributes から設定し&lt;em&gt;ます&lt;/em&gt;。これは、&lt;a href=&quot;#termios.tcgetattr&quot;&gt; &lt;code&gt;tcgetattr()&lt;/code&gt; &lt;/a&gt;によって返されるリストのようなリストです。&lt;em&gt;とき&lt;/em&gt;の引数は、属性が変更されたときに決定されます。 &lt;code&gt;TCSANOW&lt;/code&gt; は、すぐに変更する &lt;code&gt;TCSADRAIN&lt;/code&gt; をすべてキューに入れられた出力を送信した後に変更する、または &lt;code&gt;TCSAFLUSH&lt;/code&gt; は、すべてのキューに入れられた出力を送信すると、すべてのキューに入れられた入力を破棄した後に変更します。</target>
        </trans-unit>
        <trans-unit id="2425315e115f5f95d57b2f86f6eacb6fcaaf303e" translate="yes" xml:space="preserve">
          <source>Set the turtle&amp;rsquo;s first coordinate to &lt;em&gt;x&lt;/em&gt;, leave second coordinate unchanged.</source>
          <target state="translated">カメの最初の座標を&lt;em&gt;x&lt;/em&gt;に設定し、2番目の座標は変更しないでください。</target>
        </trans-unit>
        <trans-unit id="76ecfd453d46977da6d665c260843e181694a165" translate="yes" xml:space="preserve">
          <source>Set the turtle&amp;rsquo;s second coordinate to &lt;em&gt;y&lt;/em&gt;, leave first coordinate unchanged.</source>
          <target state="translated">カメの2番目の座標を&lt;em&gt;y&lt;/em&gt;に設定し、最初の座標は変更しません。</target>
        </trans-unit>
        <trans-unit id="1db3de118a72fc848b3a28d33390bf418d502de7" translate="yes" xml:space="preserve">
          <source>Set the turtle&amp;rsquo;s speed to an integer value in the range 0..10. If no argument is given, return current speed.</source>
          <target state="translated">タートルの速度を0〜10の範囲の整数値に設定します。引数を指定しない場合、現在の速度を返します。</target>
        </trans-unit>
        <trans-unit id="c6288c17aec2895516f22786647b50660a214bcd" translate="yes" xml:space="preserve">
          <source>Set the two sequences to be compared.</source>
          <target state="translated">比較する 2 つのシーケンスを設定します。</target>
        </trans-unit>
        <trans-unit id="8ad83a375e32b428d89b1906d491569ab9756863" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;em&gt;a&lt;/em&gt; at index &lt;em&gt;b&lt;/em&gt; to &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="translated">値を設定したインデックスで&lt;em&gt;B&lt;/em&gt;に&lt;em&gt;、C&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32d5af4efadd1c98af31dda019abbe2c726c0284" translate="yes" xml:space="preserve">
          <source>Set the value of the given socket option (see the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/setsockopt(2)&quot;&gt;setsockopt(2)&lt;/a&gt;&lt;/em&gt;). The needed symbolic constants are defined in the &lt;a href=&quot;#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module (&lt;code&gt;SO_*&lt;/code&gt; etc.). The value can be an integer, &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; representing a buffer. In the later case it is up to the caller to ensure that the bytestring contains the proper bits (see the optional built-in module &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; for a way to encode C structures as bytestrings). When &lt;em&gt;value&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;optlen&lt;/em&gt; argument is required. It&amp;rsquo;s equivalent to call &lt;code&gt;setsockopt()&lt;/code&gt; C function with &lt;code&gt;optval=NULL&lt;/code&gt; and &lt;code&gt;optlen=optlen&lt;/code&gt;.</source>
          <target state="translated">指定されたソケットオプションの値を設定します（UNIXのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/setsockopt(2)&quot;&gt;setsockopt（2）を&lt;/a&gt;&lt;/em&gt;参照）。必要な記号定数は、&lt;a href=&quot;#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;モジュール（ &lt;code&gt;SO_*&lt;/code&gt; など）で定義されています。値は整数、 &lt;code&gt;None&lt;/code&gt; 、またはバッファを表す&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;です。後者の場合、バイト文字列に適切なビットが含まれていることを確認するのは呼び出し側の責任です（C構造体をバイト文字列としてエンコードする方法については、オプションの組み込みモジュール&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;を参照してください）。&lt;em&gt;値&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、&lt;em&gt;optlen&lt;/em&gt;引数が必要です。これは、 &lt;code&gt;optval=NULL&lt;/code&gt; を指定して &lt;code&gt;setsockopt()&lt;/code&gt; C関数を呼び出し、 &lt;code&gt;optlen=optlen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="151037e3d5f5574775b2fdf388d5a73ec487343b" translate="yes" xml:space="preserve">
          <source>Set the value of the given socket option (see the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/setsockopt(2)&quot;&gt;setsockopt(2)&lt;/a&gt;&lt;/em&gt;). The needed symbolic constants are defined in the &lt;a href=&quot;#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module (&lt;code&gt;SO_*&lt;/code&gt; etc.). The value can be an integer, &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; representing a buffer. In the later case it is up to the caller to ensure that the bytestring contains the proper bits (see the optional built-in module &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; for a way to encode C structures as bytestrings). When &lt;em&gt;value&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;optlen&lt;/em&gt; argument is required. It&amp;rsquo;s equivalent to call &lt;code&gt;setsockopt()&lt;/code&gt; C function with &lt;code&gt;optval=NULL&lt;/code&gt; and &lt;code&gt;optlen=optlen&lt;/code&gt;.</source>
          <target state="translated">指定されたソケットオプションの値を設定します（Unixのマニュアルページ&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/setsockopt(2)&quot;&gt;setsockopt（2）を&lt;/a&gt;&lt;/em&gt;参照）。必要なシンボリック定数は、&lt;a href=&quot;#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;モジュール（ &lt;code&gt;SO_*&lt;/code&gt; など）で定義されています。値は、整数、 &lt;code&gt;None&lt;/code&gt; 、またはバッファを表す&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトに&lt;/a&gt;することができます。後者の場合、バイト文字列に適切なビットが含まれていることを確認するのは呼び出し元の責任です（C構造体をバイト文字列としてエンコードする方法については、オプションの組み込みモジュール&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;を参照してください）。&lt;em&gt;値&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、&lt;em&gt;optlen&lt;/em&gt;引数が必要です。これは、 &lt;code&gt;optval=NULL&lt;/code&gt; を指定して &lt;code&gt;setsockopt()&lt;/code&gt; C関数を呼び出すのと同じです。 &lt;code&gt;optlen=optlen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="848f8a34cc71de9857bcf6f086c5cf9eb1c49d9c" translate="yes" xml:space="preserve">
          <source>Set the value of the named cookie-attribute.</source>
          <target state="translated">指定されたクッキー属性の値を設定します。</target>
        </trans-unit>
        <trans-unit id="a1dd369491c560db0abd32743084d6573af85b04" translate="yes" xml:space="preserve">
          <source>Set the values for &lt;a href=&quot;#test.support.max_memuse&quot;&gt;&lt;code&gt;max_memuse&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#test.support.real_max_memuse&quot;&gt;&lt;code&gt;real_max_memuse&lt;/code&gt;&lt;/a&gt; for big memory tests.</source>
          <target state="translated">大容量メモリテストの&lt;a href=&quot;#test.support.max_memuse&quot;&gt; &lt;code&gt;max_memuse&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#test.support.real_max_memuse&quot;&gt; &lt;code&gt;real_max_memuse&lt;/code&gt; の&lt;/a&gt;値を設定します。</target>
        </trans-unit>
        <trans-unit id="a3343476f65992b412887bfdda4cf6ac88310906" translate="yes" xml:space="preserve">
          <source>Set the virtual screen cursor to &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt;. If &lt;em&gt;y&lt;/em&gt; and &lt;em&gt;x&lt;/em&gt; are both &lt;code&gt;-1&lt;/code&gt;, then &lt;a href=&quot;#curses.window.leaveok&quot;&gt;&lt;code&gt;leaveok&lt;/code&gt;&lt;/a&gt; is set &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">仮想画面カーソルを&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;xに&lt;/em&gt;設定します。場合&lt;em&gt;のy&lt;/em&gt;と&lt;em&gt;xが&lt;/em&gt;両方とも &lt;code&gt;-1&lt;/code&gt; 、その後、&lt;a href=&quot;#curses.window.leaveok&quot;&gt; &lt;code&gt;leaveok&lt;/code&gt; &lt;/a&gt;設定されている &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d991094ca9251ecbee6c74a3505e7015c600700c" translate="yes" xml:space="preserve">
          <source>Set the wakeup file descriptor to &lt;em&gt;fd&lt;/em&gt;. When a signal is received, the signal number is written as a single byte into the fd. This can be used by a library to wakeup a poll or select call, allowing the signal to be fully processed.</source>
          <target state="translated">ウェイクアップファイル記述子を&lt;em&gt;fdに&lt;/em&gt;設定します。シグナルが受信されると、シグナル番号が1バイトとしてfdに書き込まれます。ライブラリでこれを使用して、ポーリングまたは選択呼び出しをウェイクアップし、信号を完全に処理できます。</target>
        </trans-unit>
        <trans-unit id="3f1c0efe2b5b2dd6024abec26463e860d1e7e52d" translate="yes" xml:space="preserve">
          <source>Set the window&amp;rsquo;s background. A window&amp;rsquo;s background consists of a character and any combination of attributes. The attribute part of the background is combined (OR&amp;rsquo;ed) with all non-blank characters that are written into the window. Both the character and attribute parts of the background are combined with the blank characters. The background becomes a property of the character and moves with the character through any scrolling and insert/delete line/character operations.</source>
          <target state="translated">ウィンドウの背景を設定します。ウィンドウの背景は、文字と属性の組み合わせで構成されます。背景の属性部分は、ウィンドウに書き込まれるすべての非空白文字と結合（OR）されます。背景の文字部分と属性部分の両方が空白文字と組み合わされます。背景は文字のプロパティになり、スクロールおよび行/文字の挿入/削除操作を通じて文字とともに移動します。</target>
        </trans-unit>
        <trans-unit id="ace4faeb85008716d0f39f39aa6a6ad35eb1957f" translate="yes" xml:space="preserve">
          <source>Set this to configure the value returned by calling the mock:</source>
          <target state="translated">これを設定すると、モックを呼び出したときに返される値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="55a42672b58fcb0518e37625e8c653fda805efdf" translate="yes" xml:space="preserve">
          <source>Set timeout of connections to &lt;em&gt;t&lt;/em&gt; seconds.</source>
          <target state="translated">接続のタイムアウトを&lt;em&gt;t&lt;/em&gt;秒に設定します。</target>
        </trans-unit>
        <trans-unit id="92b4abc155157700b0b4c22a8efa36eee30ad5ed" translate="yes" xml:space="preserve">
          <source>Set title of turtle window to &lt;em&gt;titlestring&lt;/em&gt;.</source>
          <target state="translated">タートルウィンドウのタイトルを&lt;em&gt;titlestringに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5f71e74e4e6eb93436465c8d89dc97af15657183" translate="yes" xml:space="preserve">
          <source>Set to &lt;a href=&quot;os#os.getcwd&quot;&gt;&lt;code&gt;os.getcwd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;os#os.getcwd&quot;&gt; &lt;code&gt;os.getcwd()&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="c01c9a3a4ed30fcb80a9cb01a5ada9a14bf29300" translate="yes" xml:space="preserve">
          <source>Set to &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="160f25929b3c8a120e34d6c14a60038e773db853" translate="yes" xml:space="preserve">
          <source>Set to &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt; for big memory tests.</source>
          <target state="translated">大きなメモリテストの&lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;は、sys.maxsizeに設定します。</target>
        </trans-unit>
        <trans-unit id="a117f3364d8e155538763023ca84c8639c1a120e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; if IPV6 is enabled on this host, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">このホストでIPV6が有効になっている場合は &lt;code&gt;True&lt;/code&gt; に設定し、そうでない場合は &lt;code&gt;False&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="6c92f363487be64972b87687c6915a4aa05fed0e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; if IPv6 is enabled on this host, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">このホストでIPv6が有効になっている場合は &lt;code&gt;True&lt;/code&gt; に設定し、そうでない場合は &lt;code&gt;False&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="cf98d809c86d4b1b985d3a4eb41068cea2561df8" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; when the execution of tests should stop by &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テストの実行を&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; で&lt;/a&gt;停止する必要がある場合は &lt;code&gt;True&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="1c4f9993f85772f1443a3809deaa26dba73e1f5f" translate="yes" xml:space="preserve">
          <source>Set to a filename (bytes type) that should not be able to be decoded by file system encoding in strict mode. It may be &lt;code&gt;None&lt;/code&gt; if it&amp;rsquo;s not possible to generate such a filename.</source>
          <target state="translated">strictモードのファイルシステムエンコーディングでデコードできないようにするファイル名（バイトタイプ）に設定します。このようなファイル名を生成できない場合は、 &lt;code&gt;None&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="a4efa3953571a605f7176e551c395ca15cb470a3" translate="yes" xml:space="preserve">
          <source>Set to a filename (str type) that should not be able to be encoded by file system encoding in strict mode. It may be &lt;code&gt;None&lt;/code&gt; if it&amp;rsquo;s not possible to generate such a filename.</source>
          <target state="translated">strictモードのファイルシステムエンコーディングでエンコードできないようにするファイル名（strタイプ）に設定します。このようなファイル名を生成できない場合は、 &lt;code&gt;None&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="3b9978fac1e8422b4ad0dc19db8c912ddbc6b2fb" translate="yes" xml:space="preserve">
          <source>Set to a filename containing the &lt;a href=&quot;#test.support.FS_NONASCII&quot;&gt;&lt;code&gt;FS_NONASCII&lt;/code&gt;&lt;/a&gt; character.</source>
          <target state="translated">&lt;a href=&quot;#test.support.FS_NONASCII&quot;&gt; &lt;code&gt;FS_NONASCII&lt;/code&gt; &lt;/a&gt;文字を含むファイル名に設定します。</target>
        </trans-unit>
        <trans-unit id="5467a87401c9e96e39286fad200a86f39ce5cc72" translate="yes" xml:space="preserve">
          <source>Set to a name that is safe to use as the name of a temporary file. Any temporary file that is created should be closed and unlinked (removed).</source>
          <target state="translated">テンポラリファイルの名前として使用しても安全な名前に設定します。作成されたテンポラリファイルはすべて閉じてリンクを解除(削除)する必要があります。</target>
        </trans-unit>
        <trans-unit id="0772d594f6885553d1599c011e590dde49f533b2" translate="yes" xml:space="preserve">
          <source>Set to a non-ASCII name for a temporary file.</source>
          <target state="translated">テンポラリファイルの非ASCII名を設定します。</target>
        </trans-unit>
        <trans-unit id="753a43dc73acbff78b274f883d486f2e53fe07bc" translate="yes" xml:space="preserve">
          <source>Set to the &lt;code&gt;data&lt;/code&gt; directory within the test package.</source>
          <target state="translated">テストパッケージ内の &lt;code&gt;data&lt;/code&gt; ディレクトリに設定します。</target>
        </trans-unit>
        <trans-unit id="d7edbdc895f9f3a9d2081f358d1990bc775d999b" translate="yes" xml:space="preserve">
          <source>Set to the top level directory for the test package.</source>
          <target state="translated">テストパッケージの最上位ディレクトリを設定します。</target>
        </trans-unit>
        <trans-unit id="04e56175104ed7296476122ab3c1d147bf594730" translate="yes" xml:space="preserve">
          <source>Set to the top level directory that contains &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;を含む最上位ディレクトリに設定します。</target>
        </trans-unit>
        <trans-unit id="66680c88c3722fbd37441c57440c77a9b4bda1f3" translate="yes" xml:space="preserve">
          <source>Set turtle mode (&amp;ldquo;standard&amp;rdquo;, &amp;ldquo;logo&amp;rdquo; or &amp;ldquo;world&amp;rdquo;) and perform reset. If mode is not given, current mode is returned.</source>
          <target state="translated">タートルモード（「標準」、「ロゴ」、または「ワールド」）を設定し、リセットを実行します。モードが指定されていない場合、現在のモードが返されます。</target>
        </trans-unit>
        <trans-unit id="b95bf835e3ae43a44c2f2e245868a875a31ee8f1" translate="yes" xml:space="preserve">
          <source>Set turtle shape to shape with given &lt;em&gt;name&lt;/em&gt; or, if name is not given, return name of current shape. Shape with &lt;em&gt;name&lt;/em&gt; must exist in the TurtleScreen&amp;rsquo;s shape dictionary. Initially there are the following polygon shapes: &amp;ldquo;arrow&amp;rdquo;, &amp;ldquo;turtle&amp;rdquo;, &amp;ldquo;circle&amp;rdquo;, &amp;ldquo;square&amp;rdquo;, &amp;ldquo;triangle&amp;rdquo;, &amp;ldquo;classic&amp;rdquo;. To learn about how to deal with shapes see Screen method &lt;a href=&quot;#turtle.register_shape&quot;&gt;&lt;code&gt;register_shape()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タートルシェイプを指定された&lt;em&gt;名前の&lt;/em&gt;シェイプに設定します。名前が指定されていない場合は、現在のシェイプの名前を返します。&lt;em&gt;名前のある&lt;/em&gt;シェイプは、TurtleScreenのシェイプディクショナリに存在している必要があります。最初は、「矢印」、「カメ」、「円」、「正方形」、「三角形」、「クラシック」のポリゴンシェイプがあります。形状の処理方法については、画面メソッド&lt;a href=&quot;#turtle.register_shape&quot;&gt; &lt;code&gt;register_shape()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a801e00d2747989f34402253e4a166632215736a" translate="yes" xml:space="preserve">
          <source>Set up a secure control connection by using TLS or SSL, depending on what is specified in the &lt;a href=&quot;#ftplib.FTP_TLS.ssl_version&quot;&gt;&lt;code&gt;ssl_version&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP_TLS.ssl_version&quot;&gt; &lt;code&gt;ssl_version&lt;/code&gt; &lt;/a&gt;属性での指定に応じて、TLSまたはSSLを使用して安全な制御接続をセットアップします。</target>
        </trans-unit>
        <trans-unit id="8a5a46d90a455c90c8cacc144560c71b8486ae70" translate="yes" xml:space="preserve">
          <source>Set up clear text data connection.</source>
          <target state="translated">クリアテキストデータ接続を設定します。</target>
        </trans-unit>
        <trans-unit id="d56ee33d08129e505003b8a78c628ba64683baf4" translate="yes" xml:space="preserve">
          <source>Set up secure data connection.</source>
          <target state="translated">安全なデータ接続を設定します。</target>
        </trans-unit>
        <trans-unit id="12a984e0b40fba7d9e50ead822afd90fe90cabb0" translate="yes" xml:space="preserve">
          <source>Set up the environment based on &lt;em&gt;env_vars&lt;/em&gt; for running the interpreter in a subprocess. The values can include &lt;code&gt;__isolated&lt;/code&gt;, &lt;code&gt;__cleanenv&lt;/code&gt;, &lt;code&gt;__cwd&lt;/code&gt;, and &lt;code&gt;TERM&lt;/code&gt;.</source>
          <target state="translated">サブプロセスでインタープリターを実行するために、&lt;em&gt;env_vars&lt;/em&gt;に基づいて環境をセットアップします。値には、 &lt;code&gt;__isolated&lt;/code&gt; 、 &lt;code&gt;__cleanenv&lt;/code&gt; 、 &lt;code&gt;__cwd&lt;/code&gt; 、および &lt;code&gt;TERM&lt;/code&gt; を含めることができます。</target>
        </trans-unit>
        <trans-unit id="3ac24052e0b4c1c7b9ab9a47574484a717c403e7" translate="yes" xml:space="preserve">
          <source>Set up user-defined coordinate system and switch to mode &amp;ldquo;world&amp;rdquo; if necessary. This performs a &lt;code&gt;screen.reset()&lt;/code&gt;. If mode &amp;ldquo;world&amp;rdquo; is already active, all drawings are redrawn according to the new coordinates.</source>
          <target state="translated">ユーザー定義の座標系を設定し、必要に応じてモード「ワールド」に切り替えます。これは &lt;code&gt;screen.reset()&lt;/code&gt; を実行します。モード「ワールド」がすでにアクティブな場合、すべての図面は新しい座標に従って再描画されます。</target>
        </trans-unit>
        <trans-unit id="3a75daea9c4325e2c608cc2fa446fab7ad626810" translate="yes" xml:space="preserve">
          <source>Set when tests can be skipped when they are not useful for PGO.</source>
          <target state="translated">PGOでテストが役に立たないときにテストをスキップできるかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="3c59a299c5a44a0a45a2ce459f8135c7b5e88939" translate="yes" xml:space="preserve">
          <source>Set-group-ID bit. This bit has several special uses. For a directory it indicates that BSD semantics is to be used for that directory: files created there inherit their group ID from the directory, not from the effective group ID of the creating process, and directories created there will also get the &lt;a href=&quot;#stat.S_ISGID&quot;&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;/a&gt; bit set. For a file that does not have the group execution bit (&lt;a href=&quot;#stat.S_IXGRP&quot;&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;/a&gt;) set, the set-group-ID bit indicates mandatory file/record locking (see also &lt;a href=&quot;#stat.S_ENFMT&quot;&gt;&lt;code&gt;S_ENFMT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">グループIDビットを設定します。このビットにはいくつかの特別な用途があります。ディレクトリの場合、BSDセマンティクスがそのディレクトリに使用されることを示します。そこで作成されたファイルは、作成プロセスの有効なグループIDではなく、ディレクトリからグループIDを継承し、そこに作成されたディレクトリも&lt;a href=&quot;#stat.S_ISGID&quot;&gt; &lt;code&gt;S_ISGID&lt;/code&gt; &lt;/a&gt;ビットセットを取得します。グループ実行ビット（&lt;a href=&quot;#stat.S_IXGRP&quot;&gt; &lt;code&gt;S_IXGRP&lt;/code&gt; &lt;/a&gt;）が設定されていないファイルの場合、set-group-IDビットは必須のファイル/レコードロックを示します（&lt;a href=&quot;#stat.S_ENFMT&quot;&gt; &lt;code&gt;S_ENFMT&lt;/code&gt; &lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="48dae0c163d705d9b30ad168fb837c5caf6894d8" translate="yes" xml:space="preserve">
          <source>Sets all of &lt;em&gt;item&lt;/em&gt;&amp;rsquo;s ancestors open option to &lt;code&gt;True&lt;/code&gt;, and scrolls the widget if necessary so that &lt;em&gt;item&lt;/em&gt; is within the visible portion of the tree.</source>
          <target state="translated">&lt;em&gt;アイテム&lt;/em&gt;の祖先の開くオプションをすべて &lt;code&gt;True&lt;/code&gt; に設定し、必要に応じてウィジェットをスクロールして、&lt;em&gt;アイテム&lt;/em&gt;がツリーの表示部分内に収まるようにします。</target>
        </trans-unit>
        <trans-unit id="9e1a3b47b4b6ad72275d8bc6f3a5d849bd22059d" translate="yes" xml:space="preserve">
          <source>Sets can be created by several means:</source>
          <target state="translated">セットはいくつかの方法で作成することができます。</target>
        </trans-unit>
        <trans-unit id="ecd830fc921219ca823aa01c7fd91a4b504dcb6b" translate="yes" xml:space="preserve">
          <source>Sets given interval timer (one of &lt;a href=&quot;#signal.ITIMER_REAL&quot;&gt;&lt;code&gt;signal.ITIMER_REAL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.ITIMER_VIRTUAL&quot;&gt;&lt;code&gt;signal.ITIMER_VIRTUAL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.ITIMER_PROF&quot;&gt;&lt;code&gt;signal.ITIMER_PROF&lt;/code&gt;&lt;/a&gt;) specified by &lt;em&gt;which&lt;/em&gt; to fire after &lt;em&gt;seconds&lt;/em&gt; (float is accepted, different from &lt;a href=&quot;#signal.alarm&quot;&gt;&lt;code&gt;alarm()&lt;/code&gt;&lt;/a&gt;) and after that every &lt;em&gt;interval&lt;/em&gt; seconds (if &lt;em&gt;interval&lt;/em&gt; is non-zero). The interval timer specified by &lt;em&gt;which&lt;/em&gt; can be cleared by setting &lt;em&gt;seconds&lt;/em&gt; to zero.</source>
          <target state="translated">インターバルタイマ（の1つの所与のセット&lt;a href=&quot;#signal.ITIMER_REAL&quot;&gt; &lt;code&gt;signal.ITIMER_REAL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.ITIMER_VIRTUAL&quot;&gt; &lt;code&gt;signal.ITIMER_VIRTUAL&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#signal.ITIMER_PROF&quot;&gt; &lt;code&gt;signal.ITIMER_PROF&lt;/code&gt; が&lt;/a&gt;）で指定され&lt;em&gt;た&lt;/em&gt;後、火に&lt;em&gt;秒&lt;/em&gt;（フロートは、異なる受け入れられている&lt;a href=&quot;#signal.alarm&quot;&gt; &lt;code&gt;alarm()&lt;/code&gt; &lt;/a&gt;）とその後のすべての&lt;em&gt;間隔&lt;/em&gt;秒（あれば&lt;em&gt;間隔が&lt;/em&gt;ゼロでありません）。インターバルタイマーがで指定さ&lt;em&gt;れた&lt;/em&gt;設定でクリアすることができます&lt;em&gt;秒を&lt;/em&gt;ゼロに。</target>
        </trans-unit>
        <trans-unit id="6910c62f5a1f09c2eb9085862a38a03dc430d984" translate="yes" xml:space="preserve">
          <source>Sets new limits of consumption of &lt;em&gt;resource&lt;/em&gt;. The &lt;em&gt;limits&lt;/em&gt; argument must be a tuple &lt;code&gt;(soft, hard)&lt;/code&gt; of two integers describing the new limits. A value of &lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt;&lt;code&gt;RLIM_INFINITY&lt;/code&gt;&lt;/a&gt; can be used to request a limit that is unlimited.</source>
          <target state="translated">&lt;em&gt;リソース&lt;/em&gt;の消費の新しい制限を設定します。&lt;em&gt;制限&lt;/em&gt;引数はタプルでなければならない &lt;code&gt;(soft, hard)&lt;/code&gt; 新しい制限を記述する二つの整数の。&lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt; &lt;code&gt;RLIM_INFINITY&lt;/code&gt; &lt;/a&gt;の値を使用して、無制限の制限を要求できます。</target>
        </trans-unit>
        <trans-unit id="c6dc62781ab15c31b38671c6284742b53f39b4ea" translate="yes" xml:space="preserve">
          <source>Sets or resets the time zone search path (&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt;&lt;code&gt;TZPATH&lt;/code&gt;&lt;/a&gt;) for the module. When called with no arguments, &lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt;&lt;code&gt;TZPATH&lt;/code&gt;&lt;/a&gt; is set to the default value.</source>
          <target state="translated">モジュールのタイムゾーン検索パス（&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt; &lt;code&gt;TZPATH&lt;/code&gt; &lt;/a&gt;）を設定またはリセットします。引数なしで呼び出されると、&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt; &lt;code&gt;TZPATH&lt;/code&gt; &lt;/a&gt;はデフォルト値に設定されます。</target>
        </trans-unit>
        <trans-unit id="018b684b7ae1b5d1dc608b8ec9af4a59497bb311" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; for this handler to &lt;em&gt;fmt&lt;/em&gt;.</source>
          <target state="translated">このハンドラーの&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;を&lt;em&gt;fmtに&lt;/em&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="d185afb9f401cf94bf70d67a5f61295fb8a9ef0e" translate="yes" xml:space="preserve">
          <source>Sets the URL referring to a &lt;code&gt;robots.txt&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;robots.txt&lt;/code&gt; ファイルを参照するURLを設定します。</target>
        </trans-unit>
        <trans-unit id="5d9497c5466d0c2d30987cdd44415daf1adcc340" translate="yes" xml:space="preserve">
          <source>Sets the base to be used for resolving relative URIs in system identifiers in declarations. Resolving relative identifiers is left to the application: this value will be passed through as the &lt;em&gt;base&lt;/em&gt; argument to the &lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt;&lt;code&gt;ExternalEntityRefHandler()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#xml.parsers.expat.xmlparser.NotationDeclHandler&quot;&gt;&lt;code&gt;NotationDeclHandler()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler&quot;&gt;&lt;code&gt;UnparsedEntityDeclHandler()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">宣言内のシステム識別子の相対URIを解決するために使用されるベースを設定します。相対識別子の解決はアプリケーションに委ねられます。この値は、&lt;em&gt;ベース&lt;/em&gt;引数として&lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt; &lt;code&gt;ExternalEntityRefHandler()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#xml.parsers.expat.xmlparser.NotationDeclHandler&quot;&gt; &lt;code&gt;NotationDeclHandler()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler&quot;&gt; &lt;code&gt;UnparsedEntityDeclHandler()&lt;/code&gt; &lt;/a&gt;関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="8603ca8c4f3eae5545621cb8dd2f5cbd14a1b3b2" translate="yes" xml:space="preserve">
          <source>Sets the callable &lt;em&gt;application&lt;/em&gt; as the WSGI application that will receive requests.</source>
          <target state="translated">呼び出し可能な&lt;em&gt;アプリケーション&lt;/em&gt;を、リクエストを受信するWSGI &lt;em&gt;アプリケーション&lt;/em&gt;として設定します。</target>
        </trans-unit>
        <trans-unit id="1b9fbdd9734cb45726066c69999cdf062cb9dc03" translate="yes" xml:space="preserve">
          <source>Sets the character encoding of this &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;文字エンコーディングを設定します。</target>
        </trans-unit>
        <trans-unit id="01d540cd32f0969318979fe8d24e60cc8d58a311" translate="yes" xml:space="preserve">
          <source>Sets the data buffer unpack position to &lt;em&gt;position&lt;/em&gt;. You should be careful about using &lt;a href=&quot;#xdrlib.Unpacker.get_position&quot;&gt;&lt;code&gt;get_position()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xdrlib.Unpacker.set_position&quot;&gt;&lt;code&gt;set_position()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データバッファーの解凍位置を&lt;em&gt;positionに&lt;/em&gt;設定します。&lt;a href=&quot;#xdrlib.Unpacker.get_position&quot;&gt; &lt;code&gt;get_position()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#xdrlib.Unpacker.set_position&quot;&gt; &lt;code&gt;set_position()&lt;/code&gt; の&lt;/a&gt;使用には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="4e8efd8a847189ae68215595001564b99e7c6ecc" translate="yes" xml:space="preserve">
          <source>Sets the instance&amp;rsquo;s stream to the specified value, if it is different. The old stream is flushed before the new stream is set.</source>
          <target state="translated">インスタンスのストリームが異なる場合は、指定された値に設定します。新しいストリームが設定される前に、古いストリームがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="947a2f13a42cb0ed7100cd24d24e1fb05500dad5" translate="yes" xml:space="preserve">
          <source>Sets the internal state to &lt;code&gt;DATA&lt;/code&gt; and stores remaining lines from the client in &lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt;&lt;code&gt;received_data&lt;/code&gt;&lt;/a&gt; until the terminator &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt; is received.</source>
          <target state="translated">内部状態を &lt;code&gt;DATA&lt;/code&gt; に設定し、ターミネータ &lt;code&gt;&quot;\r\n.\r\n&quot;&lt;/code&gt; が受信されるまで、クライアントからの残りの行を&lt;a href=&quot;#smtpd.SMTPChannel.received_data&quot;&gt; &lt;code&gt;received_data&lt;/code&gt; に&lt;/a&gt;格納します。</target>
        </trans-unit>
        <trans-unit id="2659c5a1c15226de0fda7e071e06d96605883a67" translate="yes" xml:space="preserve">
          <source>Sets the locale for &lt;em&gt;category&lt;/em&gt; to the default setting.</source>
          <target state="translated">&lt;em&gt;カテゴリー&lt;/em&gt;のロケールをデフォルト設定に設定します。</target>
        </trans-unit>
        <trans-unit id="bd43aeca3a4b2017ab88d98b358e38d4f96bdff5" translate="yes" xml:space="preserve">
          <source>Sets the number of columns used by the curses library when converting a tab character to spaces as it adds the tab to a window.</source>
          <target state="translated">ウィンドウにタブを追加する際にタブ文字をスペースに変換する際に、curses ライブラリが使用する列数を設定します。</target>
        </trans-unit>
        <trans-unit id="ad49af8ae0d0490da41ef2bb4349338e32b931ea" translate="yes" xml:space="preserve">
          <source>Sets the number of milliseconds to wait after reading an escape character, to distinguish between an individual escape character entered on the keyboard from escape sequences sent by cursor and function keys.</source>
          <target state="translated">エスケープ文字を読み込んだ後に待機するミリ秒数を設定し、キーボードに入力された個々のエスケープ文字と、カーソルキーやファンクションキーで送られてくるエスケープシーケンスを区別します。</target>
        </trans-unit>
        <trans-unit id="4eb29968db67c09b0363361ffe9449bfa7890e8b" translate="yes" xml:space="preserve">
          <source>Sets the path of the Python interpreter to use when starting a child process. (By default &lt;a href=&quot;sys#sys.executable&quot;&gt;&lt;code&gt;sys.executable&lt;/code&gt;&lt;/a&gt; is used). Embedders will probably need to do some thing like</source>
          <target state="translated">子プロセスを開始するときに使用するPythonインタープリターのパスを設定します。（デフォルトでは&lt;a href=&quot;sys#sys.executable&quot;&gt; &lt;code&gt;sys.executable&lt;/code&gt; &lt;/a&gt;が使用されます）。埋め込み者はおそらく次のようなことをする必要があります</target>
        </trans-unit>
        <trans-unit id="59df0fce3a83627e6ad8fb351df58bf3748789d9" translate="yes" xml:space="preserve">
          <source>Sets the public identifier of this &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;公開識別子を設定します。</target>
        </trans-unit>
        <trans-unit id="7ef6aa2b448dcbbddc71f8257bdbb68d170f1690" translate="yes" xml:space="preserve">
          <source>Sets the result of the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;result&lt;/em&gt;.</source>
          <target state="translated">関連した作業の結果を設定し&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;ために&lt;em&gt;結果が&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="52884d1b940e2db56e697c6b3c16f79b850d9066" translate="yes" xml:space="preserve">
          <source>Sets the result of the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;&lt;em&gt;exception&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;に関連付けられた作業の結果を&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;&lt;em&gt;例外に設定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="93cb93aa208194a970bf94f91717ffd8cd3ce879" translate="yes" xml:space="preserve">
          <source>Sets the system identifier of this &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;システム識別子を設定します。</target>
        </trans-unit>
        <trans-unit id="0b859b8eb4bbf72a52bcc2b8afa5d634b543fa75" translate="yes" xml:space="preserve">
          <source>Sets the target handler for this handler.</source>
          <target state="translated">このハンドラのターゲットハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="e420cde8638a0a26db4f6d22ca3a3ee267ef54d1" translate="yes" xml:space="preserve">
          <source>Sets the terminating condition to be recognized on the channel. &lt;code&gt;term&lt;/code&gt; may be any of three types of value, corresponding to three different ways to handle incoming protocol data.</source>
          <target state="translated">チャネルで認識される終了条件を設定します。 &lt;code&gt;term&lt;/code&gt; は3種類の値のいずれかで、着信プロトコルデータを処理する3つの異なる方法に対応します。</target>
        </trans-unit>
        <trans-unit id="c070552761cbcaf889c1ba8425dbfaa5ea91bc8f" translate="yes" xml:space="preserve">
          <source>Sets the threshold for this handler to &lt;em&gt;level&lt;/em&gt;. Logging messages which are less severe than &lt;em&gt;level&lt;/em&gt; will be ignored. When a handler is created, the level is set to &lt;code&gt;NOTSET&lt;/code&gt; (which causes all messages to be processed).</source>
          <target state="translated">このハンドラーのしきい値を&lt;em&gt;levelに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;レベル&lt;/em&gt;より重大&lt;em&gt;度の&lt;/em&gt;低いログメッセージは無視されます。ハンドラーが作成されると、レベルは &lt;code&gt;NOTSET&lt;/code&gt; に設定されます（これにより、すべてのメッセージが処理されます）。</target>
        </trans-unit>
        <trans-unit id="c6f1863ed82644c8446332a52f9c7741b164fc72" translate="yes" xml:space="preserve">
          <source>Sets the threshold for this logger to &lt;em&gt;level&lt;/em&gt;. Logging messages which are less severe than &lt;em&gt;level&lt;/em&gt; will be ignored; logging messages which have severity &lt;em&gt;level&lt;/em&gt; or higher will be emitted by whichever handler or handlers service this logger, unless a handler&amp;rsquo;s level has been set to a higher severity level than &lt;em&gt;level&lt;/em&gt;.</source>
          <target state="translated">このロガーのしきい値を&lt;em&gt;levelに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;レベル&lt;/em&gt;より重大&lt;em&gt;度&lt;/em&gt;が低いロギングメッセージは無視されます。重大度&lt;em&gt;レベル&lt;/em&gt;以上のロギングメッセージは、ハンドラーのレベルがlevelよりも高い重大度レベルに設定されていない限り、このロガーにサービスを提供するハンドラーによって発行され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f9518644f178c489d60dfebc69f546c1c026c8b5" translate="yes" xml:space="preserve">
          <source>Sets the time the &lt;code&gt;robots.txt&lt;/code&gt; file was last fetched to the current time.</source>
          <target state="translated">時間設定 &lt;code&gt;robots.txt&lt;/code&gt; ファイルは、現在の時刻に最後のフェッチを。</target>
        </trans-unit>
        <trans-unit id="54f13cbf5fe4209543f0c409f29fe2808ce8969d" translate="yes" xml:space="preserve">
          <source>Sets the value of the combobox to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">コンボボックスの値をvalueに設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e6b2d3bf1ccddde28ce5bfcaf37c49ff751652cc" translate="yes" xml:space="preserve">
          <source>Sets the value of the spinbox to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">スピンボックスの値をvalueに設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1e49aa03e1697c1b4d42b8b73a1e7b197cf06da6" translate="yes" xml:space="preserve">
          <source>Sets the volume for a given mixer control to &lt;code&gt;(left,right)&lt;/code&gt;. &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; must be ints and between 0 (silent) and 100 (full volume). On success, the new volume is returned as a 2-tuple. Note that this may not be exactly the same as the volume specified, because of the limited resolution of some soundcard&amp;rsquo;s mixers.</source>
          <target state="translated">指定されたミキサーコントロールのボリュームを &lt;code&gt;(left,right)&lt;/code&gt; ます。 &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; は整数で、0（サイレント）から100（フルボリューム）の間でなければなりません。成功すると、新しいボリュームは2タプルとして返されます。一部のサウンドカードのミキサーの解像度は限られているため、これは指定されたボリュームと正確に同じではない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ae67dfbb858ec28a5cd5cf112ffa23cc80551a26" translate="yes" xml:space="preserve">
          <source>Sets the weekday (&lt;code&gt;0&lt;/code&gt; is Monday, &lt;code&gt;6&lt;/code&gt; is Sunday) to start each week. The values &lt;code&gt;MONDAY&lt;/code&gt;, &lt;code&gt;TUESDAY&lt;/code&gt;, &lt;code&gt;WEDNESDAY&lt;/code&gt;, &lt;code&gt;THURSDAY&lt;/code&gt;, &lt;code&gt;FRIDAY&lt;/code&gt;, &lt;code&gt;SATURDAY&lt;/code&gt;, and &lt;code&gt;SUNDAY&lt;/code&gt; are provided for convenience. For example, to set the first weekday to Sunday:</source>
          <target state="translated">平日（ &lt;code&gt;0&lt;/code&gt; は月曜日、 &lt;code&gt;6&lt;/code&gt; は日曜日）を毎週開始するように設定します。値 &lt;code&gt;MONDAY&lt;/code&gt; 、 &lt;code&gt;TUESDAY&lt;/code&gt; 、 &lt;code&gt;WEDNESDAY&lt;/code&gt; 、 &lt;code&gt;THURSDAY&lt;/code&gt; 、 &lt;code&gt;FRIDAY&lt;/code&gt; 、 &lt;code&gt;SATURDAY&lt;/code&gt; 、および &lt;code&gt;SUNDAY&lt;/code&gt; は、便宜上提供されています。たとえば、最初の平日を日曜日に設定するには：</target>
        </trans-unit>
        <trans-unit id="7504cf292d9fa0f75139906af791d336fb1abfd4" translate="yes" xml:space="preserve">
          <source>Sets up a new event loop to run the test, collecting the result into the &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object passed as &lt;em&gt;result&lt;/em&gt;. If &lt;em&gt;result&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, a temporary result object is created (by calling the &lt;code&gt;defaultTestResult()&lt;/code&gt; method) and used. The result object is returned to &lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s caller. At the end of the test all the tasks in the event loop are cancelled.</source>
          <target state="translated">テストを実行するための新しいイベントループ設定し、に結果を収集&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; の&lt;/a&gt;として渡されたオブジェクト&lt;em&gt;の結果&lt;/em&gt;。場合は&lt;em&gt;結果は&lt;/em&gt;省略していないか、され &lt;code&gt;None&lt;/code&gt; 、一時的な結果オブジェクトは、（呼び出すことによって作成された &lt;code&gt;defaultTestResult()&lt;/code&gt; メソッドを）して使用します。結果オブジェクトは&lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;の呼び出し元に返されます。テストの最後に、イベントループ内のすべてのタスクがキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="31f58b476dcbe24500a436ec4eb881e410e457d4" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt; clears it:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;None&lt;/code&gt; に設定するとクリアされます：</target>
        </trans-unit>
        <trans-unit id="8e074d869a7fcbae38917fe1d519600b714c906e" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONHOME&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONHOME&lt;/code&gt;&lt;/a&gt; is one way to get most of the testsuite to run in that situation. &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt; or &lt;code id=&quot;index-4&quot;&gt;PYTHONUSERSITE&lt;/code&gt; are other common environment variables that might impact whether or not the interpreter can start.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONHOME&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONHOME&lt;/code&gt; を&lt;/a&gt;設定することは、ほとんどのテストスイートをその状況で実行するための1つの方法です。&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;または &lt;code id=&quot;index-4&quot;&gt;PYTHONUSERSITE&lt;/code&gt; は、インタープリターが開始できるかどうかに影響を与える可能性がある他の一般的な環境変数です。</target>
        </trans-unit>
        <trans-unit id="d426d9a0883b176efe71bdf6317322552ccacd92" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONHOME&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONHOME&lt;/code&gt;&lt;/a&gt; is one way to get most of the testsuite to run in that situation. &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt; or &lt;code id=&quot;index-4&quot;&gt;PYTHONUSERSITE&lt;/code&gt; are other common environment variables that might impact whether or not the interpreter can start.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONHOME&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONHOME&lt;/code&gt; を&lt;/a&gt;設定することは、そのような状況でほとんどのテストスイートを実行するための1つの方法です。&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;または &lt;code id=&quot;index-4&quot;&gt;PYTHONUSERSITE&lt;/code&gt; は、インタープリターが起動できるかどうかに影響を与える可能性のある他の一般的な環境変数です。</target>
        </trans-unit>
        <trans-unit id="5b56f55b8ea9677f9726bc43a8594b89f5a56847" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;maxDiff&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt; means that there is no maximum length of diffs.</source>
          <target state="translated">&lt;code&gt;maxDiff&lt;/code&gt; を &lt;code&gt;None&lt;/code&gt; に設定すると、差分の最大長がなくなります。</target>
        </trans-unit>
        <trans-unit id="fd8a5d282621eb39ec429337b0eb24a8401552fe" translate="yes" xml:space="preserve">
          <source>Setting &lt;em&gt;preferred&lt;/em&gt; to &lt;code&gt;True&lt;/code&gt; makes this browser a preferred result for a &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; call with no argument. Otherwise, this entry point is only useful if you plan to either set the &lt;code id=&quot;index-1&quot;&gt;BROWSER&lt;/code&gt; variable or call &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; with a nonempty argument matching the name of a handler you declare.</source>
          <target state="translated">&lt;em&gt;preferred&lt;/em&gt;を &lt;code&gt;True&lt;/code&gt; に設定すると、このブラウザは引数なしの&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;呼び出しの優先結果になります。それ以外の場合、このエントリポイントは、 &lt;code id=&quot;index-1&quot;&gt;BROWSER&lt;/code&gt; 変数を設定するか、宣言するハンドラーの名前と一致する空でない引数を指定して&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;を呼び出す場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="fecb9063de85fe9ddb60c636094793fc01ab8d40" translate="yes" xml:space="preserve">
          <source>Setting &lt;em&gt;subdir&lt;/em&gt; indicates a relative path to use to find the file rather than looking directly in the path directories.</source>
          <target state="translated">&lt;em&gt;subdirの&lt;/em&gt;設定は、パスディレクトリを直接調べるのではなく、ファイルを見つけるために使用する相対パスを示します。</target>
        </trans-unit>
        <trans-unit id="95a6b6c235c39a038f8049a741fbc0252977c366" translate="yes" xml:space="preserve">
          <source>Setting &lt;em&gt;terse&lt;/em&gt; to true causes the function to return only the absolute minimum information needed to identify the platform.</source>
          <target state="translated">&lt;em&gt;terse&lt;/em&gt;をtrueに設定すると、関数はプラットフォームの識別に必要な最小限の情報のみを返します。</target>
        </trans-unit>
        <trans-unit id="3d66080c1492aab7fc0971fbb8ab25b75e9480cf" translate="yes" xml:space="preserve">
          <source>Setting Options</source>
          <target state="translated">設定オプション</target>
        </trans-unit>
        <trans-unit id="5ced6b8823e0bcd9c9bb7eec6867b4b857e50fcc" translate="yes" xml:space="preserve">
          <source>Setting Return Values and Attributes</source>
          <target state="translated">戻り値と属性の設定</target>
        </trans-unit>
        <trans-unit id="486167ee875d905b7d75ab5187d98db03329e968" translate="yes" xml:space="preserve">
          <source>Setting a count to zero does not remove an element from a counter. Use &lt;code&gt;del&lt;/code&gt; to remove it entirely:</source>
          <target state="translated">カウントをゼロに設定しても、要素はカウンターから削除されません。 &lt;code&gt;del&lt;/code&gt; を使用して完全に削除します。</target>
        </trans-unit>
        <trans-unit id="7f1f6ec77e944d4613f556410971b1985e76bab0" translate="yes" xml:space="preserve">
          <source>Setting a header on a &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; results in that header being parsed and a header object created.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;ヘッダーを設定すると、そのヘッダーが解析され、ヘッダーオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="805871e166a4ca56cbda69a513f996747de28e0a" translate="yes" xml:space="preserve">
          <source>Setting and measurement</source>
          <target state="translated">設定と測定</target>
        </trans-unit>
        <trans-unit id="00a7fadcd38843ef2ff76af16386d79109291c17" translate="yes" xml:space="preserve">
          <source>Setting both &lt;em&gt;altinstall&lt;/em&gt; and &lt;em&gt;default_pip&lt;/em&gt; will trigger &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;altinstall&lt;/em&gt;と&lt;em&gt;default_pipの&lt;/em&gt;両方を設定すると、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="1c8253f86ad03a3820e8f6f30ad8d5104b73641f" translate="yes" xml:space="preserve">
          <source>Setting it makes the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module parse the declared type for each column it returns. It will parse out the first word of the declared type, i. e. for &amp;ldquo;integer primary key&amp;rdquo;, it will parse out &amp;ldquo;integer&amp;rdquo;, or for &amp;ldquo;number(10)&amp;rdquo; it will parse out &amp;ldquo;number&amp;rdquo;. Then for that column, it will look into the converters dictionary and use the converter function registered for that type there.</source>
          <target state="translated">これを設定すると、&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールは、返される各列の宣言された型を解析します。宣言された型の最初の単語を解析します。つまり、「整数の主キー」の場合は「整数」を解析し、「number（10）」の場合は「数値」を解析します。次に、その列については、コンバーター辞書を調べて、その型に登録されているコンバーター関数をそこで使用します。</target>
        </trans-unit>
        <trans-unit id="c7249c831249183ea43b406a71d4a8be59187db3" translate="yes" xml:space="preserve">
          <source>Setting preferences</source>
          <target state="translated">プリファレンスの設定</target>
        </trans-unit>
        <trans-unit id="dc1efcb81ed66050f22c805a11eab028946fac43" translate="yes" xml:space="preserve">
          <source>Setting the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; makes the &lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; useful for counting (like a bag or multiset in other languages):</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; に&lt;/a&gt;設定すると、（他の言語のバッグまたはマルチセットのように）&lt;a href=&quot;#collections.defaultdict&quot;&gt; &lt;code&gt;defaultdict&lt;/code&gt; &lt;/a&gt;がカウントに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d80f4de700c8430efca2d77a1fa3af42c0fa4b96" translate="yes" xml:space="preserve">
          <source>Setting the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; makes the &lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; useful for building a dictionary of sets:</source>
          <target state="translated">設定&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; を&lt;/a&gt;に&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;になり&lt;a href=&quot;#collections.defaultdict&quot;&gt; &lt;code&gt;defaultdict&lt;/code&gt; が&lt;/a&gt;セットの辞書を構築するために有用：</target>
        </trans-unit>
        <trans-unit id="a4346e90dc9c3c3e9a9f7a268b57203fb104147c" translate="yes" xml:space="preserve">
          <source>Setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt; &lt;/a&gt;環境変数を &lt;code&gt;1&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="2e30894250d5becfb8dcee4346f6efe3fbff01ab" translate="yes" xml:space="preserve">
          <source>Setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt; &lt;/a&gt;環境変数を &lt;code&gt;1&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="254fd89fc2961125f9261f1a21e2847ce4e0b1a2" translate="yes" xml:space="preserve">
          <source>Setting the &lt;em&gt;method&lt;/em&gt; to &amp;ldquo;inclusive&amp;rdquo; is used for describing population data or for samples that are known to include the most extreme values from the population. The minimum value in &lt;em&gt;data&lt;/em&gt; is treated as the 0th percentile and the maximum value is treated as the 100th percentile. The portion of the population falling below the &lt;em&gt;i-th&lt;/em&gt; of &lt;em&gt;m&lt;/em&gt; sorted data points is computed as &lt;code&gt;(i - 1) / (m - 1)&lt;/code&gt;. Given 11 sample values, the method sorts them and assigns the following percentiles: 0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100%.</source>
          <target state="translated">&lt;em&gt;メソッド&lt;/em&gt;を「包括的」に設定する&lt;em&gt;こと&lt;/em&gt;は、母集団データを記述するため、または母集団からの最も極端な値を含むことがわかっているサンプルに対して使用されます。&lt;em&gt;データ&lt;/em&gt;の最小値は0パーセンタイルとして扱われ、最大値は100パーセンタイルとして扱われます。母集団のうち、&lt;em&gt;m &lt;/em&gt;&lt;em&gt;番目&lt;/em&gt;にソートされたデータポイントの&lt;em&gt;i番目&lt;/em&gt;を下回る部分は、 &lt;code&gt;(i - 1) / (m - 1)&lt;/code&gt; として計算されます。11個のサンプル値が与えられると、メソッドはそれらをソートし、次の百分位数を割り当てます：0％、10％、20％、30％、40％、50％、60％、70％、80％、90％、100％。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4c317120dd048f1fec3a2e455878a48b973b81e" translate="yes" xml:space="preserve">
          <source>Setting the &lt;em&gt;spec&lt;/em&gt; of a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; to an async function will result in a coroutine object being returned after calling.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;仕様&lt;/em&gt;を非同期関数に設定すると、呼び出し後にコルーチンオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="c49ef6b17f4cd9fb9ab9185c90ac4e88a9dbf787" translate="yes" xml:space="preserve">
          <source>Setting the &lt;em&gt;spec&lt;/em&gt; of a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; to a class with asynchronous and synchronous functions will automatically detect the synchronous functions and set them as &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; (if the parent mock is &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;) or &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; (if the parent mock is &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;). All asynchronous functions will be &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定&lt;em&gt;仕様&lt;/em&gt;の&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;、又は&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; を&lt;/a&gt;自動的に同期機能を検出し、それらを設定し、非同期および同期機能を持つクラスに&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;（親偽である場合&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;又は）&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;（親偽である場合&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;） 。すべての非同期関数は&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="cb92dd86314563e7cf841018212505adfa4d2e10" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a non-zero integer causes the attributes to be reported as a list rather than a dictionary. The attributes are presented in the order found in the document text. For each attribute, two list entries are presented: the attribute name and the attribute value. (Older versions of this module also used this format.) By default, this attribute is false; it may be changed at any time.</source>
          <target state="translated">この属性を 0 以外の整数に設定すると、属性は辞書ではなくリストとして報告されます。属性は、文書テキストの中にある順序で表示されます。各属性について、2つのリスト・エントリが表示されます:属性名と属性値です。(このモジュールの古いバージョンでは、この形式も使用していました。)デフォルトでは、この属性はfalseです。</target>
        </trans-unit>
        <trans-unit id="9ba3695a232c38abdae756823d10da7b1c41bf22" translate="yes" xml:space="preserve">
          <source>Setting this makes the SQLite interface parse the column name for each column it returns. It will look for a string formed [mytype] in there, and then decide that &amp;lsquo;mytype&amp;rsquo; is the type of the column. It will try to find an entry of &amp;lsquo;mytype&amp;rsquo; in the converters dictionary and then use the converter function found there to return the value. The column name found in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt; does not include the type, i. e. if you use something like &lt;code&gt;'as &quot;Expiration date [datetime]&quot;'&lt;/code&gt; in your SQL, then we will parse out everything until the first &lt;code&gt;'['&lt;/code&gt; for the column name and strip the preceeding space: the column name would simply be &amp;ldquo;Expiration date&amp;rdquo;.</source>
          <target state="translated">これを設定すると、SQLiteインターフェイスは返される各列の列名を解析します。そこで[mytype]で形成された文字列を探し、「mytype」が列のタイプであると判断します。コンバーターディクショナリで「mytype」のエントリを見つけようとし、そこで見つかったコンバーター関数を使用して値を返します。&lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; にある&lt;/a&gt;列名にはタイプが含まれていません。つまり、SQLで &lt;code&gt;'as &quot;Expiration date [datetime]&quot;'&lt;/code&gt; ようなものを使用すると、列名の最初の &lt;code&gt;'['&lt;/code&gt; まですべてが解析されます。前のスペースを削除します。列名は単に「有効期限」になります。</target>
        </trans-unit>
        <trans-unit id="d582b6284d4acdded4b3f829d615649a70dd8d06" translate="yes" xml:space="preserve">
          <source>Setting this makes the SQLite interface parse the column name for each column it returns. It will look for a string formed [mytype] in there, and then decide that &amp;lsquo;mytype&amp;rsquo; is the type of the column. It will try to find an entry of &amp;lsquo;mytype&amp;rsquo; in the converters dictionary and then use the converter function found there to return the value. The column name found in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt; is only the first word of the column name, i. e. if you use something like &lt;code&gt;'as &quot;x [datetime]&quot;'&lt;/code&gt; in your SQL, then we will parse out everything until the first blank for the column name: the column name would simply be &amp;ldquo;x&amp;rdquo;.</source>
          <target state="translated">これを設定すると、SQLiteインターフェースは、返される各列の列名を解析します。そこから[mytype]という形式の文字列を探し、 'mytype'が列のタイプであると判断します。コンバーターの辞書で 'mytype'のエントリを見つけ、そこにあるコンバーター関数を使用して値を返します。見つかった列名&lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; は、&lt;/a&gt;列名の最初の単語だけ、つまり、あなたのようなものを使用した場合である &lt;code&gt;'as &quot;x [datetime]&quot;'&lt;/code&gt; あなたのSQLで、我々は列の最初の空白までのすべてを解析しますname：列名は単に「x」になります。</target>
        </trans-unit>
        <trans-unit id="856d2e5d7bc75119ccf7c8b21cc71d3553484591" translate="yes" xml:space="preserve">
          <source>Setting this to true causes the &lt;code&gt;xmlparser&lt;/code&gt; object to buffer textual content returned by Expat to avoid multiple calls to the &lt;a href=&quot;#xml.parsers.expat.xmlparser.CharacterDataHandler&quot;&gt;&lt;code&gt;CharacterDataHandler()&lt;/code&gt;&lt;/a&gt; callback whenever possible. This can improve performance substantially since Expat normally breaks character data into chunks at every line ending. This attribute is false by default, and may be changed at any time.</source>
          <target state="translated">これをtrueに設定すると、 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクトはExpatから返されたテキストコンテンツをバッファリングし、&lt;a href=&quot;#xml.parsers.expat.xmlparser.CharacterDataHandler&quot;&gt; &lt;code&gt;CharacterDataHandler()&lt;/code&gt; &lt;/a&gt;コールバックへの複数の呼び出しを可能な限り回避します。 Expatは通常、すべての行末で文字データをチャンクに分割するため、これによりパフォーマンスが大幅に向上します。この属性はデフォルトではfalseであり、いつでも変更できます。</target>
        </trans-unit>
        <trans-unit id="78781e92de67fb1555061fc7105d0efeff886356" translate="yes" xml:space="preserve">
          <source>Setting up an importer</source>
          <target state="translated">インポーターの設定</target>
        </trans-unit>
        <trans-unit id="0e2d7406f258a67410ffa1560c415d047fe8e78f" translate="yes" xml:space="preserve">
          <source>Settings and special methods</source>
          <target state="translated">設定と特殊な方法</target>
        </trans-unit>
        <trans-unit id="0d9dd96313206e0ff1837da141a054e50731372b" translate="yes" xml:space="preserve">
          <source>Settings for measurement</source>
          <target state="translated">測定のための設定</target>
        </trans-unit>
        <trans-unit id="6505138cf3f32b24becef0e4ea0496a9d91e7dd5" translate="yes" xml:space="preserve">
          <source>Several &lt;a href=&quot;#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; functions (and methods of &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;) take a &lt;em&gt;buffer&lt;/em&gt; argument. This refers to objects that implement the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;Buffer Protocol&lt;/a&gt; and provide either a readable or read-writable buffer. The most common types used for that purpose are &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, but many other types that can be viewed as an array of bytes implement the buffer protocol, so that they can be read/filled without additional copying from a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">いくつかの&lt;a href=&quot;#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;関数（および&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; の&lt;/a&gt;メソッド）は、&lt;em&gt;バッファー&lt;/em&gt;引数を取ります。これは、&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファープロトコル&lt;/a&gt;を実装し、読み取り可能または読み取り/書き込み可能なバッファーを提供するオブジェクトを指します。その目的で使用される最も一般的なタイプは、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;ですが、バイトの配列として表示できる他の多くのタイプは、バッファープロトコルを実装しているため、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトから追加のコピーを行わなくても、それらを読み書きできます。</target>
        </trans-unit>
        <trans-unit id="d828ce93abffa32b9e9276a7e9cd5d21e637164a" translate="yes" xml:space="preserve">
          <source>Several &lt;a href=&quot;#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; functions (and methods of &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;) take a &lt;em&gt;buffer&lt;/em&gt; argument. This refers to objects that implement the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;Buffer Protocol&lt;/a&gt; and provide either a readable or read-writable buffer. The most common types used for that purpose are &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, but many other types that can be viewed as an array of bytes implement the buffer protocol, so that they can be read/filled without additional copying from a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">いくつかの&lt;a href=&quot;#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;関数（および&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; の&lt;/a&gt;メソッド）は、&lt;em&gt;バッファー&lt;/em&gt;引数を取ります。これは、&lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;バッファプロトコル&lt;/a&gt;を実装し、読み取り可能または読み取り/書き込み可能なバッファを提供するオブジェクトを指します。その目的で使用される最も一般的なタイプは&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;ですが、bytesの配列として表示できる他の多くのタイプは、バッファープロトコルを実装しているため、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトから追加でコピーすることなく読み取り/入力できます。</target>
        </trans-unit>
        <trans-unit id="c4f9e671eb8b5d00f794ba28d882b4c0dbc9706c" translate="yes" xml:space="preserve">
          <source>Several additional directives not required by the C89 standard are included for convenience. These parameters all correspond to ISO 8601 date values.</source>
          <target state="translated">C89規格では必要とされていないいくつかの追加指令が便宜上含まれています。これらのパラメータはすべてISO 8601の日付値に対応しています。</target>
        </trans-unit>
        <trans-unit id="ec55a459d99bf5db3e8a286fd711628eaa5a864a" translate="yes" xml:space="preserve">
          <source>Several built-in types such as &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; do not directly support weak references but can add support through subclassing:</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;などのいくつかの組み込み型は、弱い参照を直接サポートしていませんが、サブクラス化を通じてサポートを追加できます。</target>
        </trans-unit>
        <trans-unit id="1f5706b5bc15effc2b956b8f2b1907b6ec8c5843" translate="yes" xml:space="preserve">
          <source>Several constants are available to extract corresponding attributes returned by some methods.</source>
          <target state="translated">いくつかのメソッドによって返される対応する属性を抽出するために、いくつかの定数が利用可能です。</target>
        </trans-unit>
        <trans-unit id="6c201d864de660b676fc42c2fe92ab9c12f873f6" translate="yes" xml:space="preserve">
          <source>Several functions convert doctests to executable Python programs, which can be run under the Python debugger, &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">いくつかの関数は、doctestを実行可能なPythonプログラムに変換します。これは、Pythonデバッガー&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;で実行できます。</target>
        </trans-unit>
        <trans-unit id="864d946e0971e8436b1353d53069ce73327f33e1" translate="yes" xml:space="preserve">
          <source>Several input formats are allowed. They use 0 to 3 arguments as follows:</source>
          <target state="translated">いくつかの入力フォーマットが許可されています。それらは以下のように0から3の引数を使用します。</target>
        </trans-unit>
        <trans-unit id="8e0331438d60df9a75cefb0d9ed83f769ffff301" translate="yes" xml:space="preserve">
          <source>Several mathematical operations are provided for combining &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects to produce multisets (counters that have counts greater than zero). Addition and subtraction combine counters by adding or subtracting the counts of corresponding elements. Intersection and union return the minimum and maximum of corresponding counts. Each operation can accept inputs with signed counts, but the output will exclude results with counts of zero or less.</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;オブジェクトを組み合わせてマルチセット（ゼロより大きいカウントを持つカウンター）を生成するために、いくつかの数学演算が提供されています。加算と減算は、対応する要素のカウントを加算または減算することにより、カウンターを組み合わせます。Intersectionとunionは、対応するカウントの最小値と最大値を返します。各操作は、符号付きカウントの入力を受け入れることができますが、出力は、カウントがゼロ以下の結果を除外します。</target>
        </trans-unit>
        <trans-unit id="3bdfa08282ce78e991d65471e491732749b84e2f" translate="yes" xml:space="preserve">
          <source>Several methods are available in two flavors: one for handling text files and another for binary files. These are named for the command which is used followed by &lt;code&gt;lines&lt;/code&gt; for the text version or &lt;code&gt;binary&lt;/code&gt; for the binary version.</source>
          <target state="translated">テキストファイルを処理する方法とバイナリファイルを処理する方法の2種類の方法がいくつかあります。これらは続い使用されるコマンドの名前が付いている &lt;code&gt;lines&lt;/code&gt; のテキストバージョンまたはのための &lt;code&gt;binary&lt;/code&gt; バイナリバージョンのために。</target>
        </trans-unit>
        <trans-unit id="a4c0f1103bd5ba4e6bc0efc395a280ccf5213101" translate="yes" xml:space="preserve">
          <source>Several of the ABCs are also useful as mixins that make it easier to develop classes supporting container APIs. For example, to write a class supporting the full &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; API, it is only necessary to supply the three underlying abstract methods: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;. The ABC supplies the remaining methods such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__and__&quot;&gt;&lt;code&gt;__and__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;isdisjoint()&lt;/code&gt;:</source>
          <target state="translated">ABCのいくつかは、コンテナAPIをサポートするクラスの開発を容易にするミックスインとしても役立ちます。たとえば、完全な&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; APIをサポートするクラスを作成するには、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、__ iter &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;の3つの基礎となる抽象メソッドを提供するだけで十分です。ABCは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__and__&quot;&gt; &lt;code&gt;__and__()&lt;/code&gt; &lt;/a&gt;や &lt;code&gt;isdisjoint()&lt;/code&gt; などの残りのメソッドを提供します：</target>
        </trans-unit>
        <trans-unit id="8f7e577c383a787a7f13f3bc9b4ebcd42c16cecc" translate="yes" xml:space="preserve">
          <source>Several of the ABCs are also useful as mixins that make it easier to develop classes supporting container APIs. For example, to write a class supporting the full &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; API, it is only necessary to supply the three underlying abstract methods: &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;. The ABC supplies the remaining methods such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__and__&quot;&gt;&lt;code&gt;__and__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;isdisjoint()&lt;/code&gt;:</source>
          <target state="translated">ABCのいくつかは、コンテナAPIをサポートするクラスの開発を容易にするミックスインとしても役立ちます。たとえば、完全な&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; APIをサポートするクラスを作成するには、基礎となる3つの抽象メソッド&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、__ iter &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;ます。 ABCは、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__and__&quot;&gt; &lt;code&gt;__and__()&lt;/code&gt; &lt;/a&gt;や &lt;code&gt;isdisjoint()&lt;/code&gt; などの残りのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="c07c37484aa302fae5f67f60bcb0a4e6814331ff" translate="yes" xml:space="preserve">
          <source>Several operating systems (including AIX, HP-UX, Irix and Solaris) provide support for files that are larger than 2 GiB from a C programming model where &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;long&lt;/code&gt; are 32-bit values. This is typically accomplished by defining the relevant size and offset types as 64-bit values. Such files are sometimes referred to as &lt;em&gt;large files&lt;/em&gt;.</source>
          <target state="translated">いくつかのオペレーティングシステム（AIX、HP-UX、Irix、Solarisを含む）は、 &lt;code&gt;int&lt;/code&gt; および &lt;code&gt;long&lt;/code&gt; が32ビット値であるCプログラミングモデルの2 GiBより大きいファイルをサポートしています。これは通常、関連するサイズとオフセットタイプを64ビット値として定義することで実現されます。このようなファイルは、「&lt;em&gt;大きなファイル」&lt;/em&gt;と呼ばれることもあり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c78ce63abbf64f9ea473f3c73ccfd1f6e326ee7" translate="yes" xml:space="preserve">
          <source>Several server implementations are present; one is a generic do-nothing implementation, which can be overridden, while the other two offer specific mail-sending strategies.</source>
          <target state="translated">いくつかのサーバ実装が存在します。1つはオーバーライド可能な一般的なdo-nothing実装で、他の2つは特定のメール送信戦略を提供しています。</target>
        </trans-unit>
        <trans-unit id="90c693189dcde7963447903d8c35fa5ae9a14ee5" translate="yes" xml:space="preserve">
          <source>Several short options can be joined together, using only a single &lt;code&gt;-&lt;/code&gt; prefix, as long as only the last option (or none of them) requires a value:</source>
          <target state="translated">最後のオプションのみ（またはそれらのオプションなし）に値が必要である限り、単一の &lt;code&gt;-&lt;/code&gt; プレフィックスのみを使用して、いくつかの短いオプションを結合できます。</target>
        </trans-unit>
        <trans-unit id="19954f591f513ee02c46a3eb6507fc91c7950183" translate="yes" xml:space="preserve">
          <source>Several variations of the mbox format exist to address perceived shortcomings in the original. In the interest of compatibility, &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; implements the original format, which is sometimes referred to as &lt;em&gt;mboxo&lt;/em&gt;. This means that the &lt;em&gt;Content-Length&lt;/em&gt; header, if present, is ignored and that any occurrences of &amp;ldquo;From &amp;rdquo; at the beginning of a line in a message body are transformed to &amp;ldquo;&amp;gt;From &amp;rdquo; when storing the message, although occurrences of &amp;ldquo;&amp;gt;From &amp;rdquo; are not transformed to &amp;ldquo;From &amp;rdquo; when reading the message.</source>
          <target state="translated">オリジナルで認識されている欠点に対処するために、mboxフォーマットにはいくつかのバリエーションがあります。互換性のために、&lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt;は元の形式を実装します。これは、&lt;em&gt;mboxo&lt;/em&gt;と呼ばれることもあります。つまり、&lt;em&gt;Content-Length&lt;/em&gt;ヘッダーは存在しても無視され、メッセージ本文の行の先頭にある「From」は、メッセージの保存時に「&amp;gt; From」に変換されますが、「&amp;gt; Fromメッセージを読んでも、「」は「From」に変換されません。</target>
        </trans-unit>
        <trans-unit id="311a3d42f7b3ceaa28808f8fb2c7cf8b32e16e11" translate="yes" xml:space="preserve">
          <source>Shadow password database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;spwd&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;shadow.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">シャドウパスワードデータベースエントリはタプルのようなオブジェクトとして報告され、その属性は &lt;code&gt;spwd&lt;/code&gt; 構造のメンバーに対応します（以下の属性フィールド、 &lt;code&gt;&amp;lt;shadow.h&amp;gt;&lt;/code&gt; を参照）：</target>
        </trans-unit>
        <trans-unit id="7c288356a42d8971deea2ec45a92c820751d0993" translate="yes" xml:space="preserve">
          <source>Shallow and deep object copying.</source>
          <target state="translated">浅いオブジェクトと深いオブジェクトのコピー。</target>
        </trans-unit>
        <trans-unit id="8c5c1b24491bd7f82e552699adaa65e0c00a5846" translate="yes" xml:space="preserve">
          <source>Shallow copies of dictionaries can be made using &lt;a href=&quot;stdtypes#dict.copy&quot;&gt;&lt;code&gt;dict.copy()&lt;/code&gt;&lt;/a&gt;, and of lists by assigning a slice of the entire list, for example, &lt;code&gt;copied_list = original_list[:]&lt;/code&gt;.</source>
          <target state="translated">辞書の浅いコピーは、&lt;a href=&quot;stdtypes#dict.copy&quot;&gt; &lt;code&gt;dict.copy()&lt;/code&gt; &lt;/a&gt;を使用して作成できます。また、リスト全体のスライスを割り当てることで、リストのコピーを作成できます（たとえば、 &lt;code&gt;copied_list = original_list[:]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06ac6d66c45e2ae5e865e04b4334d673f09a6114" translate="yes" xml:space="preserve">
          <source>Shared &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; Objects</source>
          <target state="translated">共有&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;オブジェクト</target>
        </trans-unit>
        <trans-unit id="6ef3a0c23c944ab10a1f4dfd2f1004814f4730b1" translate="yes" xml:space="preserve">
          <source>Shared fixtures are not intended to work with suites with non-standard ordering. A &lt;code&gt;BaseTestSuite&lt;/code&gt; still exists for frameworks that don&amp;rsquo;t want to support shared fixtures.</source>
          <target state="translated">共有フィクスチャは、標準以外の順序のスイートで機能することを意図していません。A &lt;code&gt;BaseTestSuite&lt;/code&gt; はまだ共有備品をサポートしたくないフレームワークのために存在します。</target>
        </trans-unit>
        <trans-unit id="a0ddd119f968d66b0c03c3878f3cf6d74bfbe9f7" translate="yes" xml:space="preserve">
          <source>Shared libraries can also be loaded by using one of the prefabricated objects, which are instances of the &lt;a href=&quot;#ctypes.LibraryLoader&quot;&gt;&lt;code&gt;LibraryLoader&lt;/code&gt;&lt;/a&gt; class, either by calling the &lt;code&gt;LoadLibrary()&lt;/code&gt; method, or by retrieving the library as attribute of the loader instance.</source>
          <target state="translated">共有ライブラリは、 &lt;code&gt;LoadLibrary()&lt;/code&gt; メソッドを呼び出すか、またはローダーインスタンスの属性としてライブラリを取得することにより、&lt;a href=&quot;#ctypes.LibraryLoader&quot;&gt; &lt;code&gt;LibraryLoader&lt;/code&gt; &lt;/a&gt;クラスのインスタンスであるプレハブオブジェクトの1つを使用してロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="1cf9be7deadbe1f5601b63ad213cb5ef6c0bd443" translate="yes" xml:space="preserve">
          <source>Sharing state between processes</source>
          <target state="translated">プロセス間で状態を共有</target>
        </trans-unit>
        <trans-unit id="d659bb358d512ce8fc1c9670e19c39ab24495bc6" translate="yes" xml:space="preserve">
          <source>Shelf objects support all methods supported by dictionaries. This eases the transition from dictionary based scripts to those requiring persistent storage.</source>
          <target state="translated">シェルフオブジェクトは、辞書でサポートされているすべてのメソッドをサポートしています。これにより、辞書ベースのスクリプトから永続的なストレージを必要とするスクリプトへの移行が容易になります。</target>
        </trans-unit>
        <trans-unit id="bdc1fd5d3c0f3dcfd55d010426e61bf9451e680d" translate="yes" xml:space="preserve">
          <source>Shell</source>
          <target state="translated">Shell</target>
        </trans-unit>
        <trans-unit id="2130ea835410af26e6cd9dc0e706c5fc61e490f5" translate="yes" xml:space="preserve">
          <source>Shell and Output windows also have the following.</source>
          <target state="translated">また、シェルウィンドウや出力ウィンドウには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="ed9e8f6ef8cfef16ffd399fb5b9a69b1ea6778db" translate="yes" xml:space="preserve">
          <source>Shell has a special facility for squeezing output lines down to a &amp;lsquo;Squeezed text&amp;rsquo; label. This is done automatically for output over N lines (N = 50 by default). N can be changed in the PyShell section of the General page of the Settings dialog. Output with fewer lines can be squeezed by right clicking on the output. This can be useful lines long enough to slow down scrolling.</source>
          <target state="translated">シェルには、出力行を「スクイーズされたテキスト」ラベルまでスクイーズするための特別な機能があります。これは、N行の出力に対して自動的に行われます（デフォルトではN = 50）。Nは、設定ダイアログの一般ページのPyShellセクションで変更できます。行数の少ない出力は、出力を右クリックすることで圧縮できます。これは、スクロールを遅くするのに十分な長さの有用な行になることがあります。</target>
        </trans-unit>
        <trans-unit id="ce965768fcd82bcdacc8a74338055367911971de" translate="yes" xml:space="preserve">
          <source>Shell menu (Shell window only)</source>
          <target state="translated">シェルメニュー(シェルウィンドウのみ</target>
        </trans-unit>
        <trans-unit id="508958d2d5d0da0b170df313854c89dd3d37b597" translate="yes" xml:space="preserve">
          <source>Shell-style filename (not path) expansion</source>
          <target state="translated">シェル形式のファイル名 (パスではなく)の展開</target>
        </trans-unit>
        <trans-unit id="67e770064af5bebc0baa4d6a09a83653d2c3ebbd" translate="yes" xml:space="preserve">
          <source>Shield from cancellation.</source>
          <target state="translated">キャンセルからのシールド。</target>
        </trans-unit>
        <trans-unit id="521f5652c218b4a3f7aa7865f9290b97708aacb9" translate="yes" xml:space="preserve">
          <source>Shielding From Cancellation</source>
          <target state="translated">キャンセルからのシールド</target>
        </trans-unit>
        <trans-unit id="329ab0076b14cbda9915ea450e7c2bd0225d7c88" translate="yes" xml:space="preserve">
          <source>Shift a single name from &lt;code&gt;PATH_INFO&lt;/code&gt; to &lt;code&gt;SCRIPT_NAME&lt;/code&gt; and return the name. The &lt;em&gt;environ&lt;/em&gt; dictionary is &lt;em&gt;modified&lt;/em&gt; in-place; use a copy if you need to keep the original &lt;code&gt;PATH_INFO&lt;/code&gt; or &lt;code&gt;SCRIPT_NAME&lt;/code&gt; intact.</source>
          <target state="translated">単一の名前を &lt;code&gt;PATH_INFO&lt;/code&gt; から &lt;code&gt;SCRIPT_NAME&lt;/code&gt; にシフトし、名前を返します。&lt;em&gt;環境&lt;/em&gt;辞書はその場で&lt;em&gt;変更さ&lt;/em&gt;れます。元の &lt;code&gt;PATH_INFO&lt;/code&gt; または &lt;code&gt;SCRIPT_NAME&lt;/code&gt; をそのまま保持する必要がある場合は、コピーを使用してください。</target>
        </trans-unit>
        <trans-unit id="b8e79ee05dd3f63bc26f922e73b9cdbe827f91aa" translate="yes" xml:space="preserve">
          <source>Shift selected lines left by the indent width (default 4 spaces).</source>
          <target state="translated">選択した行をインデント幅(デフォルトは4スペース)だけ左にシフトします。</target>
        </trans-unit>
        <trans-unit id="28f42a54f7c229f3dd45fae5dcda0b47f1a4c0fe" translate="yes" xml:space="preserve">
          <source>Shift selected lines right by the indent width (default 4 spaces).</source>
          <target state="translated">選択した行をインデント幅(デフォルトは4スペース)だけ右にシフトします。</target>
        </trans-unit>
        <trans-unit id="7d49f2d6462fe2de07162d6eef2c71f566d8d763" translate="yes" xml:space="preserve">
          <source>Shift-Control-Tab</source>
          <target state="translated">Shift-Control-Tab</target>
        </trans-unit>
        <trans-unit id="049be1b96e873a4b868b25afd6653b88a07ec859" translate="yes" xml:space="preserve">
          <source>Shift-in, resume default character set</source>
          <target state="translated">シフトイン、デフォルトの文字セットを再開</target>
        </trans-unit>
        <trans-unit id="69ac704287a6119586da24ee25fd1b6569e3deba" translate="yes" xml:space="preserve">
          <source>Shift-out, begin alternate character set</source>
          <target state="translated">シフトアウト、代替文字セットの開始</target>
        </trans-unit>
        <trans-unit id="58da49dbbbbf40be526cefedb4258d6e93f24619" translate="yes" xml:space="preserve">
          <source>Shifted Beg (beginning)</source>
          <target state="translated">シフトベグ(先頭)</target>
        </trans-unit>
        <trans-unit id="82ffd0ccd6710b0ca95e294ff65028e7d8ad747a" translate="yes" xml:space="preserve">
          <source>Shifted Cancel</source>
          <target state="translated">シフト キャンセル</target>
        </trans-unit>
        <trans-unit id="393688c9a6d3ae43a1f9055dec507e5478e1d896" translate="yes" xml:space="preserve">
          <source>Shifted Clear line</source>
          <target state="translated">シフト クリアライン</target>
        </trans-unit>
        <trans-unit id="c216d3b0de16bfe7b495c5e6ca5cb7599685ffe8" translate="yes" xml:space="preserve">
          <source>Shifted Command</source>
          <target state="translated">シフトされたコマンド</target>
        </trans-unit>
        <trans-unit id="a85562d8239e3876bc335fe2ad08d01fbed03e94" translate="yes" xml:space="preserve">
          <source>Shifted Copy</source>
          <target state="translated">シフトされたコピー</target>
        </trans-unit>
        <trans-unit id="509e0eb13c14fc7226653c19daff4e7882faeb8b" translate="yes" xml:space="preserve">
          <source>Shifted Create</source>
          <target state="translated">シフトされた作成</target>
        </trans-unit>
        <trans-unit id="5b4ae01604c3d589229968af3b0a2c8e13e9b8e9" translate="yes" xml:space="preserve">
          <source>Shifted Delete char</source>
          <target state="translated">シフト削除 char</target>
        </trans-unit>
        <trans-unit id="225e195ff38150e7f0691c0aa2a68093d2231b35" translate="yes" xml:space="preserve">
          <source>Shifted Delete line</source>
          <target state="translated">シフト削除行</target>
        </trans-unit>
        <trans-unit id="9684eccb773ea3266f2e40050c9d5053ee6c63f2" translate="yes" xml:space="preserve">
          <source>Shifted End</source>
          <target state="translated">シフトエンド</target>
        </trans-unit>
        <trans-unit id="74a4a49d65beca93b3a1c5b81a5d817b343a16e2" translate="yes" xml:space="preserve">
          <source>Shifted Exit</source>
          <target state="translated">シフト終了</target>
        </trans-unit>
        <trans-unit id="462099613d3fbf4ae2e23d1c175cc9326d3905f6" translate="yes" xml:space="preserve">
          <source>Shifted Find</source>
          <target state="translated">シフトされた検索</target>
        </trans-unit>
        <trans-unit id="92c860c9b5521475205bf18f312e8964e8b53dad" translate="yes" xml:space="preserve">
          <source>Shifted Help</source>
          <target state="translated">シフトされたヘルプ</target>
        </trans-unit>
        <trans-unit id="c20706c852475221fef81fbc8ad3b29c60b73667" translate="yes" xml:space="preserve">
          <source>Shifted Home</source>
          <target state="translated">シフトホーム</target>
        </trans-unit>
        <trans-unit id="132723a497c6bfeb96eb8b02c3a4dfb23e2b3a35" translate="yes" xml:space="preserve">
          <source>Shifted Input</source>
          <target state="translated">シフト入力</target>
        </trans-unit>
        <trans-unit id="1de1d598d66472d4bd3c120fdfd4abbd6aa2b6bc" translate="yes" xml:space="preserve">
          <source>Shifted Left arrow</source>
          <target state="translated">左矢印をシフト</target>
        </trans-unit>
        <trans-unit id="fd4e7cca24a4f5b7bd2de5de6372e1dc1c3a1054" translate="yes" xml:space="preserve">
          <source>Shifted Message</source>
          <target state="translated">シフトされたメッセージ</target>
        </trans-unit>
        <trans-unit id="99b56ff8a954c3516e3a16bb39201930d647f0bf" translate="yes" xml:space="preserve">
          <source>Shifted Move</source>
          <target state="translated">シフト移動</target>
        </trans-unit>
        <trans-unit id="c14f3bea5e452ec84d1cdc531b6652acf027b704" translate="yes" xml:space="preserve">
          <source>Shifted Next</source>
          <target state="translated">次のシフト</target>
        </trans-unit>
        <trans-unit id="4097ca52c0bdb590b16d215bdeed929a46a8eda5" translate="yes" xml:space="preserve">
          <source>Shifted Options</source>
          <target state="translated">シフトされたオプション</target>
        </trans-unit>
        <trans-unit id="4c16234f22aa41d6c5f76984603271614a30285f" translate="yes" xml:space="preserve">
          <source>Shifted Prev</source>
          <target state="translated">シフトされた前</target>
        </trans-unit>
        <trans-unit id="4413f26327df89a352b082c47907cf8cffdb4955" translate="yes" xml:space="preserve">
          <source>Shifted Print</source>
          <target state="translated">シフトされた印刷</target>
        </trans-unit>
        <trans-unit id="0a6542c3bd3e183c8ea8c2fc01637cce5cf38239" translate="yes" xml:space="preserve">
          <source>Shifted Redo</source>
          <target state="translated">シフトしたやり直し</target>
        </trans-unit>
        <trans-unit id="f506f91d1a04cf727c7b673c67058d838848f523" translate="yes" xml:space="preserve">
          <source>Shifted Replace</source>
          <target state="translated">シフト置換</target>
        </trans-unit>
        <trans-unit id="b4b3552a1df8ae0db2ec7d6963ba6698f2b54bda" translate="yes" xml:space="preserve">
          <source>Shifted Resume</source>
          <target state="translated">シフトされた履歴書</target>
        </trans-unit>
        <trans-unit id="51610f566b73a52d868f862e0bd78b345a7a26be" translate="yes" xml:space="preserve">
          <source>Shifted Right arrow</source>
          <target state="translated">右矢印をシフト</target>
        </trans-unit>
        <trans-unit id="5b39013969da4e8c8a4d5205a412f56c2c38ae9e" translate="yes" xml:space="preserve">
          <source>Shifted Save</source>
          <target state="translated">シフト保存</target>
        </trans-unit>
        <trans-unit id="7089080fae7e82ab02f05a72598fde667d637e33" translate="yes" xml:space="preserve">
          <source>Shifted Suspend</source>
          <target state="translated">シフトサスペンド</target>
        </trans-unit>
        <trans-unit id="43a0f82fa0a120416a5df8534fd9b8b80889c4c7" translate="yes" xml:space="preserve">
          <source>Shifted Undo</source>
          <target state="translated">シフト元に戻す</target>
        </trans-unit>
        <trans-unit id="d364c43e39d7d0fc4ebb8d79c1d493c8024e36a8" translate="yes" xml:space="preserve">
          <source>Short explanation of selected entries:</source>
          <target state="translated">選択されたエントリーの簡単な説明。</target>
        </trans-unit>
        <trans-unit id="45abc573a7ddef5888e1a41026904b0b082545a8" translate="yes" xml:space="preserve">
          <source>Should be called after &lt;a href=&quot;#asyncio.StreamWriter.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; to wait until the underlying connection is closed.</source>
          <target state="translated">基本となる接続が閉じるまで待機するには、&lt;a href=&quot;#asyncio.StreamWriter.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; の&lt;/a&gt;後に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="558ff0e90777187b7a198ffa76b893c9dddf4782" translate="yes" xml:space="preserve">
          <source>Should be called after a request is sent to get the response from the server. Returns an &lt;a href=&quot;#http.client.HTTPResponse&quot;&gt;&lt;code&gt;HTTPResponse&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">サーバーから応答を取得するために要求が送信された後に呼び出されます。&lt;a href=&quot;#http.client.HTTPResponse&quot;&gt; &lt;code&gt;HTTPResponse&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="d6c3e38f1722c7437d29e2c9fe3b429deee17e1f" translate="yes" xml:space="preserve">
          <source>Should be used in conjunction with &lt;a href=&quot;#inspect.Signature.parameters&quot;&gt;&lt;code&gt;Signature.parameters&lt;/code&gt;&lt;/a&gt; for any argument processing purposes.</source>
          <target state="translated">引数処理の目的で、&lt;a href=&quot;#inspect.Signature.parameters&quot;&gt; &lt;code&gt;Signature.parameters&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​する必要があります。</target>
        </trans-unit>
        <trans-unit id="26b88051e3080f84d29730f1968470d5f15c1a18" translate="yes" xml:space="preserve">
          <source>Should more specific control be necessary, the following attributes are available:</source>
          <target state="translated">より具体的な制御が必要な場合は、以下の属性が利用可能です。</target>
        </trans-unit>
        <trans-unit id="02626dff222a245984fe106f2b80b98e9b907cf6" translate="yes" xml:space="preserve">
          <source>Should only return the path to the source file; sourceless loading is not supported.</source>
          <target state="translated">ソースファイルへのパスのみを返す必要があり、ソースレスロードはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="950869d49b476ab6cee2c4b6dd15f40129ffcbf1" translate="yes" xml:space="preserve">
          <source>Show Completions</source>
          <target state="translated">完成品を表示</target>
        </trans-unit>
        <trans-unit id="c6c92f6c927fbf3d685c9072673f5bf6162ab87d" translate="yes" xml:space="preserve">
          <source>Show call tip</source>
          <target state="translated">コールチップを表示</target>
        </trans-unit>
        <trans-unit id="b0e8483e27e6c07161967d31e3dfcd7a67c0f0b3" translate="yes" xml:space="preserve">
          <source>Show functions, classes, and methods in the current Editor file in a tree structure. In the shell, open a module first.</source>
          <target state="translated">現在のEditorファイル内の関数、クラス、メソッドをツリー構造で表示します。シェルでは、まずモジュールを開きます。</target>
        </trans-unit>
        <trans-unit id="c90d0a93fe16eda9bab618aca4d36db4f0bb3e71" translate="yes" xml:space="preserve">
          <source>Show local variables in tracebacks.</source>
          <target state="translated">トレースバックでローカル変数を表示します。</target>
        </trans-unit>
        <trans-unit id="dd60837c75a25a0a4ff65a8a83b5452cbf7b7792" translate="yes" xml:space="preserve">
          <source>Show my ACLs for a mailbox (i.e. the rights that I have on mailbox).</source>
          <target state="translated">メールボックスのACLを表示する(メールボックスの権利を表示する)。</target>
        </trans-unit>
        <trans-unit id="abb43acd9ea1a8dc923bfa7f1c9bdb5183b5ff10" translate="yes" xml:space="preserve">
          <source>Show surrounding parens</source>
          <target state="translated">周囲のパレンを表示する</target>
        </trans-unit>
        <trans-unit id="272220b2286419ce40c8a6067e89129cfaa1af5d" translate="yes" xml:space="preserve">
          <source>Show sys.path directories, modules, functions, classes and methods in a tree structure.</source>
          <target state="translated">ツリー構造でsys.pathディレクトリ、モジュール、関数、クラス、メソッドを表示します。</target>
        </trans-unit>
        <trans-unit id="186cd0d84616c9d9b0779f85e853b66afce8714c" translate="yes" xml:space="preserve">
          <source>Show the help message and exit.</source>
          <target state="translated">ヘルプメッセージを表示して終了します。</target>
        </trans-unit>
        <trans-unit id="d0be8ade0d3edce556311e01a5e72dafcd824014" translate="yes" xml:space="preserve">
          <source>Show the help message.</source>
          <target state="translated">ヘルプメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="066390e6bed222ab88a2ed7be1dcd29eed8d6db7" translate="yes" xml:space="preserve">
          <source>Show the stack traceback of the last exception in a tree widget, with access to locals and globals.</source>
          <target state="translated">ツリーウィジェットの最後の例外のスタックトレースバックを表示します。</target>
        </trans-unit>
        <trans-unit id="2c4ba2c7bb2daf2f1a721e1ebac02f3ce70a67cc" translate="yes" xml:space="preserve">
          <source>Show/Hide Code Context (Editor Window only)</source>
          <target state="translated">コードコンテキストの表示/非表示 (エディタウィンドウのみ)</target>
        </trans-unit>
        <trans-unit id="27ff38018fb65a02d75225ed57af9b3469997580" translate="yes" xml:space="preserve">
          <source>Show/Hide Line Numbers (Editor Window only)</source>
          <target state="translated">行番号の表示/非表示 (エディタウィンドウのみ)</target>
        </trans-unit>
        <trans-unit id="aa1794e68f00447b42b53ae20849873c88b83117" translate="yes" xml:space="preserve">
          <source>Shuffle the sequence &lt;em&gt;x&lt;/em&gt; in place.</source>
          <target state="translated">シーケンス&lt;em&gt;x&lt;/em&gt;を所定の位置に入れ替えます。</target>
        </trans-unit>
        <trans-unit id="99bedd39e27998b2681c8012292f4a2f14178934" translate="yes" xml:space="preserve">
          <source>Shut down one or both halves of the connection. If &lt;em&gt;how&lt;/em&gt; is &lt;code&gt;SHUT_RD&lt;/code&gt;, further receives are disallowed. If &lt;em&gt;how&lt;/em&gt; is &lt;code&gt;SHUT_WR&lt;/code&gt;, further sends are disallowed. If &lt;em&gt;how&lt;/em&gt; is &lt;code&gt;SHUT_RDWR&lt;/code&gt;, further sends and receives are disallowed.</source>
          <target state="translated">接続の片方または両方をシャットダウンします。 &lt;code&gt;SHUT_RD&lt;/code&gt; が&lt;em&gt;どのようになって&lt;/em&gt;いる場合、それ以上の受信は許可されません。 &lt;code&gt;SHUT_WR&lt;/code&gt; が&lt;em&gt;どのようになって&lt;/em&gt;いる場合、それ以上の送信は許可されません。 &lt;code&gt;SHUT_RDWR&lt;/code&gt; が&lt;em&gt;どのようになって&lt;/em&gt;いる場合、これ以上の送受信は許可されません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4c25d4b8537aa1007026a07902214931abdcef6" translate="yes" xml:space="preserve">
          <source>Shut the turtlegraphics window.</source>
          <target state="translated">turtlegraphicsウィンドウを閉じます。</target>
        </trans-unit>
        <trans-unit id="ee3fa56501c4cd037eb6ae10c2abe0278e3c0dc7" translate="yes" xml:space="preserve">
          <source>Shutdown connection to server. Returns server &lt;code&gt;BYE&lt;/code&gt; response.</source>
          <target state="translated">サーバーへの接続をシャットダウンします。サーバー &lt;code&gt;BYE&lt;/code&gt; 応答を返します。</target>
        </trans-unit>
        <trans-unit id="df3ca9000b1fec86815ae3ae889dd5b2ad9fa47b" translate="yes" xml:space="preserve">
          <source>Side effect functions and iterables</source>
          <target state="translated">副作用機能とイテレーション</target>
        </trans-unit>
        <trans-unit id="89ebddafc08b7d0f55bcdf4847cef7e2a369097b" translate="yes" xml:space="preserve">
          <source>Signal Handling</source>
          <target state="translated">信号処理</target>
        </trans-unit>
        <trans-unit id="d775a2304564a8e4f585e8b25510813fb54ca31f" translate="yes" xml:space="preserve">
          <source>Signal end of drag when the release pattern is triggered.</source>
          <target state="translated">リリースパターンがトリガーされたときのドラッグ終了のシグナル。</target>
        </trans-unit>
        <trans-unit id="f6b5f10797c0da1545ef05ef7682bb08cc6ec2e5" translate="yes" xml:space="preserve">
          <source>Signal the executor that it should free any resources that it is using when the currently pending futures are done executing. Calls to &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt;&lt;code&gt;Executor.submit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#concurrent.futures.Executor.map&quot;&gt;&lt;code&gt;Executor.map()&lt;/code&gt;&lt;/a&gt; made after shutdown will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在保留中のフューチャーの実行が完了したときに使用しているすべてのリソースを解放する必要があることをエグゼキューターに通知します。シャットダウン後に&lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt; &lt;code&gt;Executor.submit()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#concurrent.futures.Executor.map&quot;&gt; &lt;code&gt;Executor.map()&lt;/code&gt; を&lt;/a&gt;呼び出すと、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6784a4e0e0fb857fe5f2c9a201b765280e5f2a3f" translate="yes" xml:space="preserve">
          <source>Signal the parser that the data stream is terminated. Unlike &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.close&quot;&gt;&lt;code&gt;XMLParser.close()&lt;/code&gt;&lt;/a&gt;, this method always returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. Any events not yet retrieved when the parser is closed can still be read with &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;read_events()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データストリームが終了したことをパーサーに通知します。&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.close&quot;&gt; &lt;code&gt;XMLParser.close()&lt;/code&gt; &lt;/a&gt;とは異なり、このメソッドは常に&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。パーサーを閉じたときにまだ取得されていないイベントは、&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;read_events()&lt;/code&gt; &lt;/a&gt;読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="3c1b0d683fb236eadc03cf8e547bed977d0f0b89" translate="yes" xml:space="preserve">
          <source>Signaled whenever rounding discards digits; even if those digits are zero (such as rounding &lt;code&gt;5.00&lt;/code&gt; to &lt;code&gt;5.0&lt;/code&gt;). If not trapped, returns the result unchanged. This signal is used to detect loss of significant digits.</source>
          <target state="translated">丸めが桁を破棄するたびに通知されます。それらの桁がゼロであっても（ &lt;code&gt;5.00&lt;/code&gt; から &lt;code&gt;5.0&lt;/code&gt; に丸めるなど）トラップされない場合、結果を変更せずに返します。この信号は、有効数字の損失を検出するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="f94e984515006168858ff477f78f23acaadfd3f1" translate="yes" xml:space="preserve">
          <source>Signals a test failure unconditionally, with &lt;em&gt;msg&lt;/em&gt; or &lt;code&gt;None&lt;/code&gt; for the error message.</source>
          <target state="translated">無条件にテストエラーを通知します。エラーメッセージは&lt;em&gt;msg&lt;/em&gt;または &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6ebde7ce727b33ecdcaf04e529b1a336505fd7c7" translate="yes" xml:space="preserve">
          <source>Signals and threads</source>
          <target state="translated">シグナルとスレッド</target>
        </trans-unit>
        <trans-unit id="74f2aa049314ee6278df35def3a68b2e5fb0ee2f" translate="yes" xml:space="preserve">
          <source>Signals are groups of exceptional conditions arising during the course of computation. Depending on the needs of the application, signals may be ignored, considered as informational, or treated as exceptions. The signals in the decimal module are: &lt;a href=&quot;#decimal.Clamped&quot;&gt;&lt;code&gt;Clamped&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Overflow&quot;&gt;&lt;code&gt;Overflow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Underflow&quot;&gt;&lt;code&gt;Underflow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">信号は、計算の過程で発生する例外的な状態のグループです。アプリケーションのニーズに応じて、シグナルは無視されるか、情報として見なされるか、または例外として扱われます。小数モジュールに信号である：&lt;a href=&quot;#decimal.Clamped&quot;&gt; &lt;code&gt;Clamped&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; が&lt;/a&gt;、&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.Overflow&quot;&gt; &lt;code&gt;Overflow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.Underflow&quot;&gt; &lt;code&gt;Underflow&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6a6acc44a1281f21e68d21aa6416565ae6a7ae2" translate="yes" xml:space="preserve">
          <source>Signals represent conditions that arise during computation. Each corresponds to one context flag and one context trap enabler.</source>
          <target state="translated">シグナルは、計算中に発生する条件を表します。それぞれが1つのコンテキストフラグと1つのコンテキストトラップイネーブラーに対応しています。</target>
        </trans-unit>
        <trans-unit id="abdd6f7b9c1f7dc29fdf946f865e9430a79ecb80" translate="yes" xml:space="preserve">
          <source>Signals the division of a non-infinite number by zero.</source>
          <target state="translated">不定数を0で割ることを示します。</target>
        </trans-unit>
        <trans-unit id="438654c0a8fe852abec0c8f80993f14596a414e7" translate="yes" xml:space="preserve">
          <source>Signals the end of an element in namespace mode.</source>
          <target state="translated">名前空間モードの要素の終了を通知します。</target>
        </trans-unit>
        <trans-unit id="910595457704d36d1467c5c08058c86f08476283" translate="yes" xml:space="preserve">
          <source>Signals the end of an element in non-namespace mode.</source>
          <target state="translated">非名前空間モードでの要素の終了を通知します。</target>
        </trans-unit>
        <trans-unit id="e82593df3d91f2a13cde26a50c42ba62b61c48b6" translate="yes" xml:space="preserve">
          <source>Signals the start of an element in namespace mode.</source>
          <target state="translated">名前空間モードでの要素の開始を通知します。</target>
        </trans-unit>
        <trans-unit id="652110d910fbc30144ae5254d7054b576cbf0f31" translate="yes" xml:space="preserve">
          <source>Signals the start of an element in non-namespace mode.</source>
          <target state="translated">非名前空間モードでの要素の開始を通知します。</target>
        </trans-unit>
        <trans-unit id="98b50c65d64445f394aac632a958ffe88a30aa04" translate="yes" xml:space="preserve">
          <source>Signals when non-zero digits were discarded during rounding. The rounded result is returned. The signal flag or trap is used to detect when results are inexact.</source>
          <target state="translated">丸めの際に 0 以外の桁が破棄された場合に通知します。丸められた結果が返されます。シグナルフラグまたはトラップは、結果が不正確な場合の検出に使用されます。</target>
        </trans-unit>
        <trans-unit id="2f32be1dc74166373c988ec03b0bd86f0a576919" translate="yes" xml:space="preserve">
          <source>Signature</source>
          <target state="translated">Signature</target>
        </trans-unit>
        <trans-unit id="164fb2b0bf791f12a379cfb132c73bd46c82477b" translate="yes" xml:space="preserve">
          <source>Signature objects are &lt;em&gt;immutable&lt;/em&gt;. Use &lt;a href=&quot;#inspect.Signature.replace&quot;&gt;&lt;code&gt;Signature.replace()&lt;/code&gt;&lt;/a&gt; to make a modified copy.</source>
          <target state="translated">署名オブジェクトは&lt;em&gt;不変&lt;/em&gt;です。&lt;a href=&quot;#inspect.Signature.replace&quot;&gt; &lt;code&gt;Signature.replace()&lt;/code&gt; &lt;/a&gt;を使用して、変更されたコピーを作成します。</target>
        </trans-unit>
        <trans-unit id="8b24ba1cf842e93056d1d49c0c6db474998ff64e" translate="yes" xml:space="preserve">
          <source>Signatures themselves are restricted to the top level parameters expected by a method. For instance if a method expects one array of structs as a parameter, and it returns a string, its signature is simply &amp;ldquo;string, array&amp;rdquo;. If it expects three integers and returns a string, its signature is &amp;ldquo;string, int, int, int&amp;rdquo;.</source>
          <target state="translated">署名自体は、メソッドが期待する最上位のパラメーターに制限されています。たとえば、メソッドがパラメータとして構造体の1つの配列を期待し、文字列を返す場合、そのシグネチャは単に「文字列、配列」です。3つの整数を想定して文字列を返す場合、その署名は「string、int、int、int」です。</target>
        </trans-unit>
        <trans-unit id="a20c0971e2641d8ffd6fc1164723ce08017e7c6c" translate="yes" xml:space="preserve">
          <source>Signed hexadecimal (lowercase).</source>
          <target state="translated">符号付き16進数(小文字)。</target>
        </trans-unit>
        <trans-unit id="2d974a1ff61af88b463d564567a4fa716424eb04" translate="yes" xml:space="preserve">
          <source>Signed hexadecimal (uppercase).</source>
          <target state="translated">符号付き16進数(大文字)。</target>
        </trans-unit>
        <trans-unit id="cc765d79aee4326834114893cf12702f89dd7ff0" translate="yes" xml:space="preserve">
          <source>Signed integer decimal.</source>
          <target state="translated">符号付き整数10進数。</target>
        </trans-unit>
        <trans-unit id="933a97a7596f73f8f7be58f070f6cf49c76334eb" translate="yes" xml:space="preserve">
          <source>Signed octal value.</source>
          <target state="translated">符号付き8進数値。</target>
        </trans-unit>
        <trans-unit id="88e78f9d1443acf3387c94f096e3487f192829b6" translate="yes" xml:space="preserve">
          <source>Signed, 16-bit audio, big-endian byte order (as used by 68k, PowerPC, Sparc)</source>
          <target state="translated">符号付き、16ビットオーディオ、ビッグエンディアンバイト順(68k、PowerPC、Sparcで使用されているもの</target>
        </trans-unit>
        <trans-unit id="7d975e24f04b1cfa65844b72b53bcde092e45719" translate="yes" xml:space="preserve">
          <source>Signed, 16-bit audio, little-endian byte order (as used by Intel processors)</source>
          <target state="translated">符号付き、16ビットオーディオ、リトルエンディアンバイトオーダー(Intelプロセッサで使用されているもの</target>
        </trans-unit>
        <trans-unit id="747554cd1b6828df83b31487a5e7a1f1ee3fb57b" translate="yes" xml:space="preserve">
          <source>Signed, 8 bit audio</source>
          <target state="translated">サイン入り、8ビットオーディオ</target>
        </trans-unit>
        <trans-unit id="9343b5ec2da7b583cd308f6a454ee1afffa97306" translate="yes" xml:space="preserve">
          <source>Signoff: commit changes, unlock mailbox, drop connection.</source>
          <target state="translated">サインオフ:変更のコミット、メールボックスのロック解除、接続の解除</target>
        </trans-unit>
        <trans-unit id="44d3cdbbb387e94356e39ea2bb45b77e5b9dd079" translate="yes" xml:space="preserve">
          <source>Silimarly, explicitly stating the &lt;em&gt;standalone&lt;/em&gt; argument causes the standalone document declarations to be added to the prologue of the XML document. If the value is set to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;standalone=&amp;rdquo;yes&amp;rdquo;&lt;/code&gt; is added, otherwise it is set to &lt;code&gt;&amp;ldquo;no&amp;rdquo;&lt;/code&gt;. Not stating the argument will omit the declaration from the document.</source>
          <target state="translated">同様に、&lt;em&gt;スタンドアロン&lt;/em&gt;引数を明示的に指定すると、スタンドアロンドキュメント宣言がXMLドキュメントのプロローグに追加されます。値が &lt;code&gt;True&lt;/code&gt; に設定されている場合、 &lt;code&gt;standalone=&amp;rdquo;yes&amp;rdquo;&lt;/code&gt; が追加され、それ以外の場合は &lt;code&gt;&amp;ldquo;no&amp;rdquo;&lt;/code&gt; 設定されます。引数を記載しないと、文書から宣言が省略されます。</target>
        </trans-unit>
        <trans-unit id="65ddfba74a615c02333548ffbb600c342c227d91" translate="yes" xml:space="preserve">
          <source>Similar functionality (accepting only text string arguments, but more liberal towards whitespace) is also accessible using the &lt;a href=&quot;stdtypes#bytes.fromhex&quot;&gt;&lt;code&gt;bytes.fromhex()&lt;/code&gt;&lt;/a&gt; class method.</source>
          <target state="translated">同様の機能（テキスト文字列引数のみを受け入れますが、空白に対してより寛大です）も、&lt;a href=&quot;stdtypes#bytes.fromhex&quot;&gt; &lt;code&gt;bytes.fromhex()&lt;/code&gt; &lt;/a&gt;クラスメソッドを使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e23f0d52d04c3c809bcdfe944e35ea8ab09a51f9" translate="yes" xml:space="preserve">
          <source>Similar functionality (but returning a text string) is also conveniently accessible using the &lt;a href=&quot;stdtypes#bytes.hex&quot;&gt;&lt;code&gt;bytes.hex()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">同様の機能（ただしテキスト文字列を返す）にも、&lt;a href=&quot;stdtypes#bytes.hex&quot;&gt; &lt;code&gt;bytes.hex()&lt;/code&gt; &lt;/a&gt;メソッドを使用して簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="31ef2923d1e483b0ff10c7022c1fde406948af0a" translate="yes" xml:space="preserve">
          <source>Similar restrictions apply if a pool or manager is created in the main module.</source>
          <target state="translated">プールまたはマネージャがメインモジュールで作成されている場合も、同様の制限が適用されます。</target>
        </trans-unit>
        <trans-unit id="3877611b4ee33ca6d1158f43ea74054340be36dd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; but works with the &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket family.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;ソケットファミリで動作します。</target>
        </trans-unit>
        <trans-unit id="9295809bde53b048f9f8435e248bb0e60e4a7209" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; but operates on Unix sockets.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; に&lt;/a&gt;似ていますが、Unixソケットで動作します。</target>
        </trans-unit>
        <trans-unit id="b1ee2db700fee6fc88e30b66fac8d59ec3a1fa3e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; but works with Unix sockets.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; に&lt;/a&gt;似ていますが、Unixソケットで動作します。</target>
        </trans-unit>
        <trans-unit id="1f63789a7691077c27fbcc09ebaf3e40cf0a610e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#bisect.bisect_left&quot;&gt;&lt;code&gt;bisect_left()&lt;/code&gt;&lt;/a&gt;, but returns an insertion point which comes after (to the right of) any existing entries of &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;#bisect.bisect_left&quot;&gt; &lt;code&gt;bisect_left()&lt;/code&gt; &lt;/a&gt;が、戻った後（の右側）の既存のエントリ付属挿入点&lt;em&gt;Xが&lt;/em&gt;で。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02b81bc3f3e218b3ee0e995b4053a0147415677c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#bisect.insort_left&quot;&gt;&lt;code&gt;insort_left()&lt;/code&gt;&lt;/a&gt;, but inserting &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; after any existing entries of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#bisect.insort_left&quot;&gt; &lt;code&gt;insort_left()&lt;/code&gt; に&lt;/a&gt;似ていますが、既存の&lt;em&gt;xの&lt;/em&gt;エントリの後に&lt;em&gt;x&lt;/em&gt;を&lt;em&gt;a&lt;/em&gt;に挿入します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3567974e9f86228444f19774dd9ebbb56e46af4f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt;, but creates an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;非同期のコンテキストマネージャを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="0d25c5f31f0e816c5993ee1e1d7325defb1dc5b8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt;, but creates an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;非同期コンテキストマネージャーを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="e353f2752e32870a6f031df63c4ed784a0c06843" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt;&lt;code&gt;redirect_stdout()&lt;/code&gt;&lt;/a&gt; but redirecting &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; to another file or file-like object.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt; &lt;code&gt;redirect_stdout()&lt;/code&gt; に&lt;/a&gt;似てい&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;が、sys.stderrを別のファイルまたはファイルのようなオブジェクトにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="d360de5c9ecbc2e21f27b7218caa96e1fcdf21f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#curses.window.border&quot;&gt;&lt;code&gt;border()&lt;/code&gt;&lt;/a&gt;, but both &lt;em&gt;ls&lt;/em&gt; and &lt;em&gt;rs&lt;/em&gt; are &lt;em&gt;vertch&lt;/em&gt; and both &lt;em&gt;ts&lt;/em&gt; and &lt;em&gt;bs&lt;/em&gt; are &lt;em&gt;horch&lt;/em&gt;. The default corner characters are always used by this function.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.border&quot;&gt; &lt;code&gt;border()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;em&gt;ls&lt;/em&gt;と&lt;em&gt;rs&lt;/em&gt;はどちらも&lt;em&gt;vertch&lt;/em&gt;で、&lt;em&gt;ts&lt;/em&gt;と&lt;em&gt;bs&lt;/em&gt;は&lt;em&gt;どちら&lt;/em&gt;も&lt;em&gt;horch&lt;/em&gt;です。この関数では、デフォルトのコーナー文字が常に使用されます。</target>
        </trans-unit>
        <trans-unit id="e0ee435c64672224f80653f38a4984ac5e55e998" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#html.parser.HTMLParser.handle_starttag&quot;&gt;&lt;code&gt;handle_starttag()&lt;/code&gt;&lt;/a&gt;, but called when the parser encounters an XHTML-style empty tag (&lt;code&gt;&amp;lt;img ... /&amp;gt;&lt;/code&gt;). This method may be overridden by subclasses which require this particular lexical information; the default implementation simply calls &lt;a href=&quot;#html.parser.HTMLParser.handle_starttag&quot;&gt;&lt;code&gt;handle_starttag()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#html.parser.HTMLParser.handle_endtag&quot;&gt;&lt;code&gt;handle_endtag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#html.parser.HTMLParser.handle_starttag&quot;&gt; &lt;code&gt;handle_starttag()&lt;/code&gt; に&lt;/a&gt;似ていますが、パーサーがXHTMLスタイルの空のタグ（ &lt;code&gt;&amp;lt;img ... /&amp;gt;&lt;/code&gt; ）に遭遇したときに呼び出されます。このメソッドは、この特定の字句情報を必要とするサブクラスによってオーバーライドされる場合があります。デフォルトの実装では、単に&lt;a href=&quot;#html.parser.HTMLParser.handle_starttag&quot;&gt; &lt;code&gt;handle_starttag()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#html.parser.HTMLParser.handle_endtag&quot;&gt; &lt;code&gt;handle_endtag()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="34173a9c1e0763651cdfe54a32c8801500761964" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#msvcrt.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt;, but the keypress will be echoed if it represents a printable character.</source>
          <target state="translated">&lt;a href=&quot;#msvcrt.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; に&lt;/a&gt;似ていますが、印刷可能な文字を表す場合、キーを押したときにエコーされます。</target>
        </trans-unit>
        <trans-unit id="6f638960f91d7cb5e89acce6d96a92b8b04ae89d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt; except that the system searches for the &lt;em&gt;executable&lt;/em&gt; file in the list of directories specified by the &lt;code id=&quot;index-31&quot;&gt;PATH&lt;/code&gt; environment variable (in the same way as for &lt;code&gt;execvp(3)&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; に&lt;/a&gt;似ていますが、システムが &lt;code id=&quot;index-31&quot;&gt;PATH&lt;/code&gt; 環境変数で指定されたディレクトリのリストで&lt;em&gt;実行可能&lt;/em&gt;ファイルを検索する点が異なります（ &lt;code&gt;execvp(3)&lt;/code&gt; の場合と同じ）。</target>
        </trans-unit>
        <trans-unit id="8c47ed224e2b99d1730f9031aa14bfaf97084ce9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt; except that the system searches for the &lt;em&gt;executable&lt;/em&gt; file in the list of directories specified by the &lt;code id=&quot;index-33&quot;&gt;PATH&lt;/code&gt; environment variable (in the same way as for &lt;code&gt;execvp(3)&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; &lt;/a&gt;と同様ですが、システムが &lt;code id=&quot;index-33&quot;&gt;PATH&lt;/code&gt; 環境変数で指定されたディレクトリのリストで&lt;em&gt;実行可能&lt;/em&gt;ファイルを検索する点が異なります（ &lt;code&gt;execvp(3)&lt;/code&gt; の場合と同じ方法）。</target>
        </trans-unit>
        <trans-unit id="3e3ae37df712e8eb6212c3fde640d37b41bed3c7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt;, except a 3-element tuple, containing the child&amp;rsquo;s process id, exit status indication, and resource usage information is returned. Refer to &lt;a href=&quot;resource#module-resource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;resource#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; for details on resource usage information. The arguments to &lt;a href=&quot;#os.wait4&quot;&gt;&lt;code&gt;wait4()&lt;/code&gt;&lt;/a&gt; are the same as those provided to &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; に&lt;/a&gt;似ていますが、子のプロセスID、終了ステータスの表示、およびリソース使用状況の情報を含む3要素のタプルが返されます。&lt;a href=&quot;resource#module-resource&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt;参照してください。リソース使用状況の詳細については、&lt;a href=&quot;resource#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;a href=&quot;#os.wait4&quot;&gt; &lt;code&gt;wait4()&lt;/code&gt; &lt;/a&gt;の引数は、&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; に&lt;/a&gt;提供されるものと同じです。</target>
        </trans-unit>
        <trans-unit id="ac4eecfb3999124d14461c67741083d16630e9b6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt;, except no process id argument is given and a 3-element tuple containing the child&amp;rsquo;s process id, exit status indication, and resource usage information is returned. Refer to &lt;a href=&quot;resource#module-resource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;resource#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; for details on resource usage information. The option argument is the same as that provided to &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.wait4&quot;&gt;&lt;code&gt;wait4()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;と同様ですが、プロセスID引数が指定されておらず、子のプロセスID、終了ステータス表示、およびリソース使用状況情報を含む3要素のタプルが返されます。&lt;a href=&quot;resource#module-resource&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt;参照してください。リソース使用状況の詳細については、&lt;a href=&quot;resource#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;を参照してください。オプション引数は、&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.wait4&quot;&gt; &lt;code&gt;wait4()&lt;/code&gt; に&lt;/a&gt;提供されるものと同じです。</target>
        </trans-unit>
        <trans-unit id="8dbc5ae8e16d5f86712662ee8740655f5eb4ccd2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt;&lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt;&lt;/a&gt;, but provides access to a raw hardware-based time that is not subject to NTP adjustments.</source>
          <target state="translated">&lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt; &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; &lt;/a&gt;に似ていますが、NTP調整の影響を受けない、ハードウェアベースの生の時間へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="3e2bbdf76c630d5e2d9b0e34c80668a08d172683" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.clock_gettime&quot;&gt;&lt;code&gt;clock_gettime()&lt;/code&gt;&lt;/a&gt; but return time as nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.clock_gettime&quot;&gt; &lt;code&gt;clock_gettime()&lt;/code&gt; に&lt;/a&gt;似ていますが、時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="6967e9205b1229b5a3b07f11680b2db4b5d1b8da" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.clock_settime&quot;&gt;&lt;code&gt;clock_settime()&lt;/code&gt;&lt;/a&gt; but set time with nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.clock_settime&quot;&gt; &lt;code&gt;clock_settime()&lt;/code&gt; に&lt;/a&gt;似ていますが、ナノ秒で時間を設定します。</target>
        </trans-unit>
        <trans-unit id="d89d7f2d03e6ca5e87995162356fa142644bbfd9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.monotonic&quot;&gt;&lt;code&gt;monotonic()&lt;/code&gt;&lt;/a&gt;, but return time as nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.monotonic&quot;&gt; &lt;code&gt;monotonic()&lt;/code&gt; に&lt;/a&gt;似ていますが、時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="1056d584b29d20262d43c1c615b113b940bbe22b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.perf_counter&quot;&gt;&lt;code&gt;perf_counter()&lt;/code&gt;&lt;/a&gt;, but return time as nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.perf_counter&quot;&gt; &lt;code&gt;perf_counter()&lt;/code&gt; に&lt;/a&gt;似ていますが、時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="d35d95dc909cbba90e4e5e973be8a9f8102fd4b7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.process_time&quot;&gt;&lt;code&gt;process_time()&lt;/code&gt;&lt;/a&gt; but return time as nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.process_time&quot;&gt; &lt;code&gt;process_time()&lt;/code&gt; に&lt;/a&gt;似ていますが、時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="5ba0395e9c881a2b4aa5baf1583455cca6797ec3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.thread_time&quot;&gt;&lt;code&gt;thread_time()&lt;/code&gt;&lt;/a&gt; but return time as nanoseconds.</source>
          <target state="translated">&lt;a href=&quot;#time.thread_time&quot;&gt; &lt;code&gt;thread_time()&lt;/code&gt; に&lt;/a&gt;似ていますが、時間をナノ秒で返します。</target>
        </trans-unit>
        <trans-unit id="2b484840ee58e8470a1d9f00ed18040fa9c7d59f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; but returns time as an integer number of nanoseconds since the &lt;a href=&quot;#epoch&quot;&gt;epoch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;a href=&quot;#epoch&quot;&gt;エポック&lt;/a&gt;以降のナノ秒数の整数として時間を返します。</target>
        </trans-unit>
        <trans-unit id="a7e8c487ce3226e4b866fb0f1e4bc6b587b71bdf" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#unittest.TestLoader.loadTestsFromName&quot;&gt;&lt;code&gt;loadTestsFromName()&lt;/code&gt;&lt;/a&gt;, but takes a sequence of names rather than a single name. The return value is a test suite which supports all the tests defined for each name.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader.loadTestsFromName&quot;&gt; &lt;code&gt;loadTestsFromName()&lt;/code&gt; に&lt;/a&gt;似ていますが、単一の名前ではなく一連の名前を取ります。戻り値は、各名前に対して定義されたすべてのテストをサポートするテストスイートです。</target>
        </trans-unit>
        <trans-unit id="756d76b7ed81de354236109f3fa62c4f267306f5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt;&lt;code&gt;BaseCGIHandler&lt;/code&gt;&lt;/a&gt;, but designed for use with HTTP origin servers. If you are writing an HTTP server implementation, you will probably want to subclass this instead of &lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt;&lt;code&gt;BaseCGIHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt; &lt;code&gt;BaseCGIHandler&lt;/code&gt; &lt;/a&gt;に似ていますが、HTTPオリジンサーバーで使用するように設計されています。HTTPサーバーの実装を記述している場合は、おそらく&lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt; &lt;code&gt;BaseCGIHandler&lt;/code&gt; &lt;/a&gt;ではなく、これをサブクラス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="97618729b799c0106597c60bb41ab27082955783" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt;, but instead of using the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; modules, the CGI environment and I/O streams are specified explicitly. The &lt;em&gt;multithread&lt;/em&gt; and &lt;em&gt;multiprocess&lt;/em&gt; values are used to set the &lt;code&gt;wsgi.multithread&lt;/code&gt; and &lt;code&gt;wsgi.multiprocess&lt;/code&gt; flags for any applications run by the handler instance.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; &lt;/a&gt;に似ていますが、&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールを使用する代わりに、CGI環境とI / Oストリームを明示的に指定します。&lt;em&gt;マルチスレッド&lt;/em&gt;と&lt;em&gt;マルチプロセス&lt;/em&gt;値が設定するために使用されている &lt;code&gt;wsgi.multithread&lt;/code&gt; と &lt;code&gt;wsgi.multiprocess&lt;/code&gt; ハンドラのインスタンスで実行するアプリケーションのためのフラグを。</target>
        </trans-unit>
        <trans-unit id="cdc4138162b1160bbcbc39974fc33e7998ebdc90" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#wsgiref.util.request_uri&quot;&gt;&lt;code&gt;request_uri()&lt;/code&gt;&lt;/a&gt;, except that the &lt;code&gt;PATH_INFO&lt;/code&gt; and &lt;code&gt;QUERY_STRING&lt;/code&gt; variables are ignored. The result is the base URI of the application object addressed by the request.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.util.request_uri&quot;&gt; &lt;code&gt;request_uri()&lt;/code&gt; に&lt;/a&gt;似ていますが、 &lt;code&gt;PATH_INFO&lt;/code&gt; および &lt;code&gt;QUERY_STRING&lt;/code&gt; 変数が無視される点が異なります。結果は、リクエストによってアドレス指定されたアプリケーションオブジェクトのベースURIです。</target>
        </trans-unit>
        <trans-unit id="da47e10d2aa30954d037b1a5f5fc1673f2b8c5e3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#xml.sax.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;, but parses from a buffer &lt;em&gt;string&lt;/em&gt; received as a parameter. &lt;em&gt;string&lt;/em&gt; must be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instance or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; に&lt;/a&gt;似ていますが、パラメータとして受け取ったバッファ&lt;em&gt;文字列&lt;/em&gt;から解析します。&lt;em&gt;string&lt;/em&gt;は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;インスタンスまたは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objectで&lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="a8ac18b8f5ba90df1b39930fa57f3e4d779a0eeb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#xml.sax.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;, but parses from a buffer &lt;em&gt;string&lt;/em&gt; received as a parameter. &lt;em&gt;string&lt;/em&gt; must be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instance or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; に&lt;/a&gt;似ていますが、パラメーターとして受け取ったバッファー&lt;em&gt;文字列&lt;/em&gt;から解析します。&lt;em&gt;文字列&lt;/em&gt;は、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;インスタンスまたは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトで&lt;/a&gt;ある必要があります。</target>
        </trans-unit>
        <trans-unit id="7548b19707d085519fd21fd17e5aadf5e09e5bdd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#xml.sax.saxutils.escape&quot;&gt;&lt;code&gt;escape()&lt;/code&gt;&lt;/a&gt;, but also prepares &lt;em&gt;data&lt;/em&gt; to be used as an attribute value. The return value is a quoted version of &lt;em&gt;data&lt;/em&gt; with any additional required replacements. &lt;a href=&quot;#xml.sax.saxutils.quoteattr&quot;&gt;&lt;code&gt;quoteattr()&lt;/code&gt;&lt;/a&gt; will select a quote character based on the content of &lt;em&gt;data&lt;/em&gt;, attempting to avoid encoding any quote characters in the string. If both single- and double-quote characters are already in &lt;em&gt;data&lt;/em&gt;, the double-quote characters will be encoded and &lt;em&gt;data&lt;/em&gt; will be wrapped in double-quotes. The resulting string can be used directly as an attribute value:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.saxutils.escape&quot;&gt; &lt;code&gt;escape()&lt;/code&gt; に&lt;/a&gt;似ていますが、属性値として使用する&lt;em&gt;データ&lt;/em&gt;も準備します。戻り値は、必要な追加の置換が行われた引用バージョンの&lt;em&gt;データ&lt;/em&gt;です。&lt;a href=&quot;#xml.sax.saxutils.quoteattr&quot;&gt; &lt;code&gt;quoteattr()&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;データ&lt;/em&gt;の内容に基づいて引用文字を選択し、文字列内の引用文字のエンコードを回避しようとします。一重引用符と二重引用符の両方が既に&lt;em&gt;data&lt;/em&gt;に含まれている&lt;em&gt;場合&lt;/em&gt;、二重引用符の文字はエンコードされ、&lt;em&gt;データ&lt;/em&gt;は二重引用符で囲まれます。結果の文字列は、属性値として直接使用できます。</target>
        </trans-unit>
        <trans-unit id="8d69e9ab70da251669fb63d33b8bf449bcdedab6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map(func, *iterables)&lt;/code&gt;&lt;/a&gt; except:</source>
          <target state="translated">&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map(func, *iterables)&lt;/code&gt; &lt;/a&gt;似ていますが、次の点が異なります。</target>
        </trans-unit>
        <trans-unit id="29e633c5d185e694efd4a3c2a05c0f7674d48e96" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;%U&lt;/code&gt; and &lt;code&gt;%W&lt;/code&gt;, &lt;code&gt;%V&lt;/code&gt; is only used in calculations when the day of the week and the ISO year (&lt;code&gt;%G&lt;/code&gt;) are specified in a &lt;code&gt;strptime()&lt;/code&gt; format string. Also note that &lt;code&gt;%G&lt;/code&gt; and &lt;code&gt;%Y&lt;/code&gt; are not interchangeable.</source>
          <target state="translated">&lt;code&gt;%U&lt;/code&gt; および &lt;code&gt;%W&lt;/code&gt; と同様に、 &lt;code&gt;%V&lt;/code&gt; は、 &lt;code&gt;strptime()&lt;/code&gt; フォーマット文字列で曜日とISO年（ &lt;code&gt;%G&lt;/code&gt; ）が指定されている場合の計算でのみ使用されます。また、 &lt;code&gt;%G&lt;/code&gt; と &lt;code&gt;%Y&lt;/code&gt; は互換性がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="64220e037d4801234a145a4578ae3b2b0ebd8ea2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;'g'&lt;/code&gt;, except that fixed-point notation, when used, has at least one digit past the decimal point. The default precision is as high as needed to represent the particular value. The overall effect is to match the output of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; as altered by the other format modifiers.</source>
          <target state="translated">&lt;code&gt;'g'&lt;/code&gt; に似ていますが、固定小数点表記を使用すると、小数点の後に少なくとも1桁が続く点が異なります。デフォルトの精度は、特定の値を表すのに必要なだけ高くなります。全体的な効果は、他のフォーマット修飾子によって変更された&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; の&lt;/a&gt;出力と一致することです。</target>
        </trans-unit>
        <trans-unit id="2957aa477e3691799685c3b95a3d1e3e685342b9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;callback()&lt;/code&gt; but expects a coroutine function.</source>
          <target state="translated">&lt;code&gt;callback()&lt;/code&gt; に似ていますが、コルーチン関数が必要です。</target>
        </trans-unit>
        <trans-unit id="8b648257a94e8ca109eb983ff849a894de96b304" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;close()&lt;/code&gt; but properly handles awaitables.</source>
          <target state="translated">&lt;code&gt;close()&lt;/code&gt; に似ていますが、awaitableを適切に処理します。</target>
        </trans-unit>
        <trans-unit id="bc529f6489e14f87299b0bd9c10a053c37aa076c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;enter_context()&lt;/code&gt; but expects an asynchronous context manager.</source>
          <target state="translated">&lt;code&gt;enter_context()&lt;/code&gt; に似ていますが、非同期のコンテキストマネージャを想定しています。</target>
        </trans-unit>
        <trans-unit id="26c530f4bc2c235b0e9a9eb22a4ffb50eeddf75a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;push()&lt;/code&gt; but expects either an asynchronous context manager or a coroutine function.</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; に似ていますが、非同期コンテキストマネージャまたはコルーチン関数のいずれかを想定しています。</target>
        </trans-unit>
        <trans-unit id="25ff7485d45fb3edea1b81e6050240aa3972e86a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;sorted(itertools.chain(*iterables))&lt;/code&gt; but returns an iterable, does not pull the data into memory all at once, and assumes that each of the input streams is already sorted (smallest to largest).</source>
          <target state="translated">&lt;code&gt;sorted(itertools.chain(*iterables))&lt;/code&gt; 似ていますが、イテラブルを返し、データを一度にメモリにプルせず、各入力ストリームがすでにソートされている（最小から最大）と想定しています。</target>
        </trans-unit>
        <trans-unit id="c2b9a82ca26783a1f12573252df7ec24d8921c2c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;str.format(**mapping)&lt;/code&gt;, except that &lt;code&gt;mapping&lt;/code&gt; is used directly and not copied to a &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This is useful if for example &lt;code&gt;mapping&lt;/code&gt; is a dict subclass:</source>
          <target state="translated">&lt;code&gt;str.format(**mapping)&lt;/code&gt; に似ていますが、 &lt;code&gt;mapping&lt;/code&gt; が直接使用され、&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; に&lt;/a&gt;コピーされない点が異なります。これは、たとえば &lt;code&gt;mapping&lt;/code&gt; がdictサブクラスである場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4d68c6684d2d30f5b69ce627e5381a97bfad4e5f" translate="yes" xml:space="preserve">
          <source>Similar to Process IDs, Thread IDs are only valid (guaranteed unique system-wide) from the time the thread is created until the thread has been terminated.</source>
          <target state="translated">プロセスIDと同様に、スレッドIDはスレッドが作成されてからスレッドが終了するまでの間のみ有効です(システム全体で一意性が保証されています)。</target>
        </trans-unit>
        <trans-unit id="c6d2a1b263afb17001a893f9c5dea5347576f213" translate="yes" xml:space="preserve">
          <source>Similar to regular parentheses, but the substring matched by the group is accessible via the symbolic group name &lt;em&gt;name&lt;/em&gt;. Group names must be valid Python identifiers, and each group name must be defined only once within a regular expression. A symbolic group is also a numbered group, just as if the group were not named.</source>
          <target state="translated">通常の括弧に似ていますが、グループに一致する部分文字列には、シンボリックグループ名&lt;em&gt;nameを&lt;/em&gt;介してアクセスできます。グループ名は有効なPython識別子である必要があり、各グループ名は正規表現内で1回だけ定義する必要があります。シンボリックグループは、グループに名前が付けられなかったかのように、番号付きグループでもあります。</target>
        </trans-unit>
        <trans-unit id="e816c9501a126c430c81c91ea67a4024ae73bd54" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#decimal.Decimal.max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; method, but the comparison is done using the absolute values of the operands.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;メソッドに似ていますが、比較はオペランドの絶対値を使用して行われます。</target>
        </trans-unit>
        <trans-unit id="b2f34e76412ca257f32ed0f2f907c1a9566acdc8" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#decimal.Decimal.min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; method, but the comparison is done using the absolute values of the operands.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;メソッドに似ていますが、比較はオペランドの絶対値を使用して行われます。</target>
        </trans-unit>
        <trans-unit id="983c82a1b1fdd09d958df28170f0a626803a592e" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method, except it takes a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; instead of a file-like object. Calling this method on a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is equivalent to wrapping &lt;em&gt;bytes&lt;/em&gt; in a &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; instance first and calling &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">類似&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッド、それが取る以外&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;のバイトのようなオブジェクトを&lt;/a&gt;代わりにファイルのようなオブジェクトの。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトで&lt;/a&gt;このメソッドを呼び出すことは、最初に&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;インスタンスで&lt;em&gt;バイト&lt;/em&gt;をラップして&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="7abc9957cc65fc740d7a515d6b508bb16cc349f4" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method, except it takes a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; instead of a file-like object. Calling this method on a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is equivalent to wrapping &lt;em&gt;bytes&lt;/em&gt; in a &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; instance first and calling &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">類似&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッド、それが取る以外&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;のバイトのようなオブジェクトを&lt;/a&gt;代わりにファイルのようなオブジェクトの。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトで&lt;/a&gt;このメソッドを呼び出すことは、最初に&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;インスタンスで&lt;em&gt;バイト&lt;/em&gt;をラップして&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="692e6ee73aa96acd387047d171cdd95ed255ecc2" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#email.parser.Parser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method, except it takes a string object instead of a file-like object. Calling this method on a string is equivalent to wrapping &lt;em&gt;text&lt;/em&gt; in a &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; instance first and calling &lt;a href=&quot;#email.parser.Parser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.parser.Parser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッドに似ていますが、ファイルのようなオブジェクトではなく文字列オブジェクトを受け取る点が異なります。文字列でこのメソッドを呼び出すことは、最初に&lt;a href=&quot;io#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;インスタンスで&lt;em&gt;テキスト&lt;/em&gt;をラップして&lt;a href=&quot;#email.parser.Parser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="2b8e7d72184110bde22d0980e960ab1d9a913506" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#mimetypes.guess_all_extensions&quot;&gt;&lt;code&gt;guess_all_extensions()&lt;/code&gt;&lt;/a&gt; function, using the tables stored as part of the object.</source>
          <target state="translated">オブジェクトの一部として格納されているテーブルを使用して、&lt;a href=&quot;#mimetypes.guess_all_extensions&quot;&gt; &lt;code&gt;guess_all_extensions()&lt;/code&gt; &lt;/a&gt;関数に似ています。</target>
        </trans-unit>
        <trans-unit id="5c5ef2cf455c87e87d6cc42684800b7c27cb1d86" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#mimetypes.guess_extension&quot;&gt;&lt;code&gt;guess_extension()&lt;/code&gt;&lt;/a&gt; function, using the tables stored as part of the object.</source>
          <target state="translated">&lt;a href=&quot;#mimetypes.guess_extension&quot;&gt; &lt;code&gt;guess_extension()&lt;/code&gt; &lt;/a&gt;関数と同様に、オブジェクトの一部として格納されているテーブルを使用します。</target>
        </trans-unit>
        <trans-unit id="37027e04660149aca39721d2674396f85ea73981" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#mimetypes.guess_type&quot;&gt;&lt;code&gt;guess_type()&lt;/code&gt;&lt;/a&gt; function, using the tables stored as part of the object.</source>
          <target state="translated">&lt;a href=&quot;#mimetypes.guess_type&quot;&gt; &lt;code&gt;guess_type()&lt;/code&gt; &lt;/a&gt;関数と同様に、オブジェクトの一部として格納されているテーブルを使用します。</target>
        </trans-unit>
        <trans-unit id="05b96e4a92246077c4de8b614d0e2a981f6dd553" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#re.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern, but also accepts optional &lt;em&gt;pos&lt;/em&gt; and &lt;em&gt;endpos&lt;/em&gt; parameters that limit the search region like for &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#re.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt;関数と同様に、コンパイルされたパターンを使用しますが、&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; の&lt;/a&gt;ように検索領域を制限するオプションの&lt;em&gt;pos&lt;/em&gt;および&lt;em&gt;endpos&lt;/em&gt;パラメータも受け入れます。</target>
        </trans-unit>
        <trans-unit id="a59b6ad2ab9500c4b43a70c566f9c02ac5f1eb35" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#re.finditer&quot;&gt;&lt;code&gt;finditer()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern, but also accepts optional &lt;em&gt;pos&lt;/em&gt; and &lt;em&gt;endpos&lt;/em&gt; parameters that limit the search region like for &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#re.finditer&quot;&gt; &lt;code&gt;finditer()&lt;/code&gt; &lt;/a&gt;関数と同様に、コンパイルされたパターンを使用しますが、&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; の&lt;/a&gt;ように検索領域を制限するオプションの&lt;em&gt;pos&lt;/em&gt;および&lt;em&gt;endpos&lt;/em&gt;パラメーターも受け入れます。</target>
        </trans-unit>
        <trans-unit id="d538d2946b600054120aa7669dcbeda80b1b0bbb" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;traceback#traceback.format_tb&quot;&gt;&lt;code&gt;traceback.format_tb()&lt;/code&gt;&lt;/a&gt; function, except that &lt;a href=&quot;#tracemalloc.Traceback.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; does not include newlines.</source>
          <target state="translated">&lt;a href=&quot;traceback#traceback.format_tb&quot;&gt; &lt;code&gt;traceback.format_tb()&lt;/code&gt; &lt;/a&gt;関数に似ていますが、&lt;a href=&quot;#tracemalloc.Traceback.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;に改行が含まれていない点が異なります。</target>
        </trans-unit>
        <trans-unit id="cc97f15350470fa39f13d09995f0349842369a55" translate="yes" xml:space="preserve">
          <source>Similar to the corresponding functions without the &lt;code&gt;p&lt;/code&gt; in the prefix (that is, &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.dgettext&quot;&gt;&lt;code&gt;dgettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.dngettext&quot;&gt;&lt;code&gt;dngettext()&lt;/code&gt;&lt;/a&gt;), but the translation is restricted to the given message &lt;em&gt;context&lt;/em&gt;.</source>
          <target state="translated">接頭辞に &lt;code&gt;p&lt;/code&gt; がない対応する関数（つまり、&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#gettext.dgettext&quot;&gt; &lt;code&gt;dgettext()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#gettext.dngettext&quot;&gt; &lt;code&gt;dngettext()&lt;/code&gt; &lt;/a&gt;）に似ていますが、変換は指定されたメッセージ&lt;em&gt;コンテキストに&lt;/em&gt;制限され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1f51cdae5d88649fc79d7c4c10c63308faf60f4f" translate="yes" xml:space="preserve">
          <source>Similarly if a test is from a different module from the previous test then &lt;code&gt;tearDownModule&lt;/code&gt; from the previous module is run, followed by &lt;code&gt;setUpModule&lt;/code&gt; from the new module.</source>
          <target state="translated">同様に、テストが前のテストとは異なるモジュールからのものである場合、前のモジュールからの &lt;code&gt;tearDownModule&lt;/code&gt; が実行され、その後に新しいモジュールからの &lt;code&gt;setUpModule&lt;/code&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="5d6ccb5c4b6a1135496f81e212f239fe760f74a3" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt;&lt;code&gt;DocFileSuite()&lt;/code&gt;&lt;/a&gt; creates a &lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; out of &lt;code&gt;doctest.DocFileCase&lt;/code&gt; instances, and &lt;code&gt;DocFileCase&lt;/code&gt; is a subclass of &lt;code&gt;DocTestCase&lt;/code&gt;.</source>
          <target state="translated">同様に、&lt;a href=&quot;#doctest.DocFileSuite&quot;&gt; &lt;code&gt;DocFileSuite()&lt;/code&gt; が&lt;/a&gt;作成&lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; インスタンスを&lt;/a&gt;外 &lt;code&gt;doctest.DocFileCase&lt;/code&gt; のインスタンス、及び &lt;code&gt;DocFileCase&lt;/code&gt; でのサブクラスで &lt;code&gt;DocTestCase&lt;/code&gt; について。</target>
        </trans-unit>
        <trans-unit id="b35a75ad28e92dd0ccafd55a96734adb6821cea4" translate="yes" xml:space="preserve">
          <source>Similarly, although &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt;&lt;code&gt;st_atime_ns&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt;&lt;code&gt;st_mtime_ns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt;&lt;code&gt;st_ctime_ns&lt;/code&gt;&lt;/a&gt; are always expressed in nanoseconds, many systems do not provide nanosecond precision. On systems that do provide nanosecond precision, the floating-point object used to store &lt;a href=&quot;#os.stat_result.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt; cannot preserve all of it, and as such will be slightly inexact. If you need the exact timestamps you should always use &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt;&lt;code&gt;st_atime_ns&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt;&lt;code&gt;st_mtime_ns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt;&lt;code&gt;st_ctime_ns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同様に、&lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt; &lt;code&gt;st_atime_ns&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt; &lt;code&gt;st_mtime_ns&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt; &lt;code&gt;st_ctime_ns&lt;/code&gt; &lt;/a&gt;は常にナノ秒で表されますが、多くのシステムはナノ秒の精度を提供しません。ナノ秒の精度を提供するシステムでは、&lt;a href=&quot;#os.stat_result.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.stat_result.st_ctime&quot;&gt; &lt;code&gt;st_ctime&lt;/code&gt; &lt;/a&gt;を格納するために使用される浮動小数点オブジェクトは、そのすべてを保持することができないため、わずかに不正確になります。正確なタイムスタンプが必要な場合は、常に&lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt; &lt;code&gt;st_atime_ns&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt; &lt;code&gt;st_mtime_ns&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt; &lt;code&gt;st_ctime_ns&lt;/code&gt; を&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2336d01892a0a8465dd14ed13b352ccbd2d6a8d0" translate="yes" xml:space="preserve">
          <source>Similarly, calling &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; on a path gives the raw filesystem path as a bytes object, as encoded by &lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">同様に、パスで&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;を呼び出すと、未加工のファイルシステムパスが&lt;a href=&quot;os#os.fsencode&quot;&gt; &lt;code&gt;os.fsencode()&lt;/code&gt; で&lt;/a&gt;エンコードされたバイトオブジェクトとして提供されます。</target>
        </trans-unit>
        <trans-unit id="756c7b8856bde88b433b7d3e0160c75d35263425" translate="yes" xml:space="preserve">
          <source>Similarly, classes are pickled by named reference, so the same restrictions in the unpickling environment apply. Note that none of the class&amp;rsquo;s code or data is pickled, so in the following example the class attribute &lt;code&gt;attr&lt;/code&gt; is not restored in the unpickling environment:</source>
          <target state="translated">同様に、クラスは名前付き参照によってピクル化されるため、アンピッキング環境での同じ制限が適用されます。クラスのコードまたはデータはピクル化されないため、次の例では、クラス属性 &lt;code&gt;attr&lt;/code&gt; はunpickling環境で復元されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4faf9af8194010c17e415dc594897e355ed35371" translate="yes" xml:space="preserve">
          <source>Similarly, dict and list proxies may be nested inside one another:</source>
          <target state="translated">同様に、dictプロキシとリストプロキシは互いに入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="dbe0eaff5b5d57a1f55905b517f6baf1d74df8f0" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function respects the &lt;a href=&quot;sys#sys.pycache_prefix&quot;&gt;&lt;code&gt;sys.pycache_prefix&lt;/code&gt;&lt;/a&gt; setting. The generated bytecode cache will only be useful if &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; is run with the same &lt;a href=&quot;sys#sys.pycache_prefix&quot;&gt;&lt;code&gt;sys.pycache_prefix&lt;/code&gt;&lt;/a&gt; (if any) that will be used at runtime.</source>
          <target state="translated">同様に、&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;関数は&lt;a href=&quot;sys#sys.pycache_prefix&quot;&gt; &lt;code&gt;sys.pycache_prefix&lt;/code&gt; &lt;/a&gt;設定を尊重します。生成されたバイトコードキャッシュは、&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;が実行時に使用されるのと同じ&lt;a href=&quot;sys#sys.pycache_prefix&quot;&gt; &lt;code&gt;sys.pycache_prefix&lt;/code&gt; &lt;/a&gt;（存在する場合）で実行される場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="9e4125802473f849d87532d2dffcbc269d746b48" translate="yes" xml:space="preserve">
          <source>Similarly, the second letter can be either of &lt;code&gt;'-'&lt;/code&gt; (which means the command writes to standard output), &lt;code&gt;'f'&lt;/code&gt; (which means the command writes a file on the command line) or &lt;code&gt;'.'&lt;/code&gt; (which means the command does not write anything, and hence must be last.)</source>
          <target state="translated">同様に、2番目の文字は &lt;code&gt;'-'&lt;/code&gt; （コマンドが標準出力に書き込むことを意味する）、 &lt;code&gt;'f'&lt;/code&gt; （コマンドがコマンドラインにファイルを書き込むことを意味する）、または &lt;code&gt;'.'&lt;/code&gt; いずれかになります。（つまり、コマンドは何も書き込まないため、最後でなければなりません。）</target>
        </trans-unit>
        <trans-unit id="b40e532baebc5262ad3df24630ff414d6035c671" translate="yes" xml:space="preserve">
          <source>Similarly, we can provide a &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; method that tidies up after the test method has been run:</source>
          <target state="translated">同様に、テストメソッドが実行された後に&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;メソッドを提供できます。</target>
        </trans-unit>
        <trans-unit id="4051b06985bee20c9ed1d32fd5035c21ede5ecec" translate="yes" xml:space="preserve">
          <source>Similarly, when a help message is requested from a subparser, only the help for that particular parser will be printed. The help message will not include parent parser or sibling parser messages. (A help message for each subparser command, however, can be given by supplying the &lt;code&gt;help=&lt;/code&gt; argument to &lt;code&gt;add_parser()&lt;/code&gt; as above.)</source>
          <target state="translated">同様に、サブパーサーからヘルプメッセージが要求されると、その特定のパーサーのヘルプのみが出力されます。ヘルプメッセージには、親パーサーまたは兄弟パーサーメッセージは含まれません。（ただし、各サブパーサーコマンドのヘルプメッセージは、上記のように &lt;code&gt;add_parser()&lt;/code&gt; に &lt;code&gt;help=&lt;/code&gt; 引数を指定することで表示できます。）</target>
        </trans-unit>
        <trans-unit id="2a9d0d2a55b97fc97875319db75b358ff5cac5c6" translate="yes" xml:space="preserve">
          <source>Similarly, when class instances are pickled, their class&amp;rsquo;s code and data are not pickled along with them. Only the instance data are pickled. This is done on purpose, so you can fix bugs in a class or add methods to the class and still load objects that were created with an earlier version of the class. If you plan to have long-lived objects that will see many versions of a class, it may be worthwhile to put a version number in the objects so that suitable conversions can be made by the class&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">同様に、クラスインスタンスがピクルされるとき、それらのクラスのコードとデータは一緒にピクルされません。インスタンスデータのみがピクルされます。これは意図的に行われるため、クラスのバグを修正したり、クラスにメソッドを追加したりしながら、以前のバージョンのクラスで作成されたオブジェクトを引き続きロードできます。クラスの多くのバージョンを表示する長期間存続するオブジェクトを計画している場合、クラスの&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;メソッドによって適切な変換を行うことができるように、オブジェクトにバージョン番号を入れることは価値があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="de0cb186754b69394364b66898d5fe574932b9d3" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It implements the &lt;code&gt;__fspath__()&lt;/code&gt; method which just returns the &lt;em&gt;path&lt;/em&gt; argument. If &lt;em&gt;path&lt;/em&gt; is an exception, it will be raised in &lt;code&gt;__fspath__()&lt;/code&gt;.</source>
          <target state="translated">単純な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;。&lt;em&gt;パス&lt;/em&gt;引数を返すだけの &lt;code&gt;__fspath__()&lt;/code&gt; メソッドを実装します。&lt;em&gt;path&lt;/em&gt;が例外の場合、 &lt;code&gt;__fspath__()&lt;/code&gt; ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ae4e39698c49cdc01551777f287ebae73a5c0be" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It implements the &lt;code&gt;__fspath__()&lt;/code&gt; method which just returns the &lt;em&gt;path&lt;/em&gt; argument. If &lt;em&gt;path&lt;/em&gt; is an exception, it will be raised in &lt;code&gt;__fspath__()&lt;/code&gt;.</source>
          <target state="translated">単純な&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;。&lt;em&gt;パス&lt;/em&gt;引数を返すだけの &lt;code&gt;__fspath__()&lt;/code&gt; メソッドを実装します。&lt;em&gt;パス&lt;/em&gt;が例外の場合、 &lt;code&gt;__fspath__()&lt;/code&gt; ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5ee8e9a6db5e94cf2cfabbb5af30ac13cad9bdc" translate="yes" xml:space="preserve">
          <source>Simple JSON decoder.</source>
          <target state="translated">シンプルなJSONデコーダ。</target>
        </trans-unit>
        <trans-unit id="fa908d7acaf0597256d3feec42b0eb5d009f36b8" translate="yes" xml:space="preserve">
          <source>Simple Smalltalk Testing: With Patterns</source>
          <target state="translated">シンプルなSmalltalkテスト。パターンを使って</target>
        </trans-unit>
        <trans-unit id="64c4ca3873f3698fb6afc843b092773c21b40832" translate="yes" xml:space="preserve">
          <source>Simple Usage: Checking Examples in Docstrings</source>
          <target state="translated">簡単な使い方。Docstringsで例をチェックする</target>
        </trans-unit>
        <trans-unit id="bb0087c40231a326c56c8c81a402e34313a94d79" translate="yes" xml:space="preserve">
          <source>Simple Usage: Checking Examples in a Text File</source>
          <target state="translated">簡単な使い方。テキストファイルで例題を確認する</target>
        </trans-unit>
        <trans-unit id="2acf7ab78e355b087170e42fb7d6ec19c8979ea6" translate="yes" xml:space="preserve">
          <source>Simple class used by default by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; to create an object holding attributes and return it.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; が&lt;/a&gt;デフォルトで使用する単純なクラスで、属性を保持するオブジェクトを作成してそれを返します。</target>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="7f2cda2e5c17af617c0e9d4e72a9b434a79acf05" translate="yes" xml:space="preserve">
          <source>Simple example querying HTTP headers of the URL passed on the command line:</source>
          <target state="translated">コマンドラインで渡された URL の HTTP ヘッダを問い合わせる簡単な例です。</target>
        </trans-unit>
        <trans-unit id="563523c7fb9aeb90cd3ca9914f9f94d5abfe8ef0" translate="yes" xml:space="preserve">
          <source>Simple example:</source>
          <target state="translated">簡単な例です。</target>
        </trans-unit>
        <trans-unit id="154f5b20b468a68def59d966d636a30b33d38e25" translate="yes" xml:space="preserve">
          <source>Simple fractions are also easier for people to understand, and that makes for better documentation.</source>
          <target state="translated">単純な分数は、人々にとっても理解しやすく、より良い文書になります。</target>
        </trans-unit>
        <trans-unit id="9dac073505af0fadf10ac9b1b567057b56841729" translate="yes" xml:space="preserve">
          <source>Simple hashing</source>
          <target state="translated">シンプルなハッシュ</target>
        </trans-unit>
        <trans-unit id="59e0683587eec60366af47331f1f09fc9d08ace9" translate="yes" xml:space="preserve">
          <source>Simple lightweight unbounded function cache. Sometimes called &lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;&amp;ldquo;memoize&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">シンプルで軽量な無制限の関数キャッシュ。&lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;「メモ化」&lt;/a&gt;と呼ばれることもあります。</target>
        </trans-unit>
        <trans-unit id="7dbbb2928e66007e713d26c9f8e6315e330db3ed" translate="yes" xml:space="preserve">
          <source>SimpleQueue Objects</source>
          <target state="translated">SimpleQueue オブジェクト</target>
        </trans-unit>
        <trans-unit id="ddf47e51c53968aa553c5270183df916b480b1fc" translate="yes" xml:space="preserve">
          <source>SimpleXMLRPCServer Example</source>
          <target state="translated">SimpleXMLRPCServerの例</target>
        </trans-unit>
        <trans-unit id="36b3841059ab6bcce9cabc0f0f35baeac3298f0c" translate="yes" xml:space="preserve">
          <source>SimpleXMLRPCServer Objects</source>
          <target state="translated">SimpleXMLRPCServer オブジェクト</target>
        </trans-unit>
        <trans-unit id="e03f20a90b59b059ccb5f39b63fa73e127da8ce9" translate="yes" xml:space="preserve">
          <source>Simplified Chinese</source>
          <target state="translated">簡体字</target>
        </trans-unit>
        <trans-unit id="63d3ff2add874787af451abe6f2dd2622136e886" translate="yes" xml:space="preserve">
          <source>Simulate the effect of a &lt;a href=&quot;signal#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt; signal arriving in the main thread. A thread can use this function to interrupt the main thread.</source>
          <target state="translated">メインスレッドに到着する&lt;a href=&quot;signal#signal.SIGINT&quot;&gt; &lt;code&gt;signal.SIGINT&lt;/code&gt; &lt;/a&gt;シグナルの効果をシミュレートします。スレッドはこの関数を使用してメインスレッドに割り込むことができます。</target>
        </trans-unit>
        <trans-unit id="19797a2d454f443d4eb1b9cfd7d79d3e252de091" translate="yes" xml:space="preserve">
          <source>Simulate the effect of a &lt;code&gt;signal.SIGINT&lt;/code&gt; signal arriving in the main thread. A thread can use this function to interrupt the main thread.</source>
          <target state="translated">メインスレッドに到着する &lt;code&gt;signal.SIGINT&lt;/code&gt; シグナルの効果をシミュレートします。スレッドはこの関数を使用して、メインスレッドに割り込むことができます。</target>
        </trans-unit>
        <trans-unit id="250068952d630cb7360431c5a2ed9bfdb1837550" translate="yes" xml:space="preserve">
          <source>Simulating scanf()</source>
          <target state="translated">scanf()のシミュレーション</target>
        </trans-unit>
        <trans-unit id="10e5d5994d818bbb58359ba7a5d71d6ca1d545b1" translate="yes" xml:space="preserve">
          <source>Simulation of arrival times and service deliveries for a multiserver queue:</source>
          <target state="translated">マルチサーバキューの到着時間とサービスの提供をシミュレーションします。</target>
        </trans-unit>
        <trans-unit id="19750f9b06cf8ba133f3692ad3015abb5de91b30" translate="yes" xml:space="preserve">
          <source>Simulation of arrival times and service deliveries in a single server queue:</source>
          <target state="translated">単一のサーバーキュー内の到着時間とサービスの配信をシミュレーションします。</target>
        </trans-unit>
        <trans-unit id="01388003deec7557afcdd639eeb0e213ed15ea95" translate="yes" xml:space="preserve">
          <source>Simulations:</source>
          <target state="translated">Simulations:</target>
        </trans-unit>
        <trans-unit id="315467a59db7210a4d319e887560d83f1f71646f" translate="yes" xml:space="preserve">
          <source>Since &amp;ldquo;name&amp;rdquo; is an argument to the &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; constructor, if you want your mock object to have a &amp;ldquo;name&amp;rdquo; attribute you can&amp;rsquo;t just pass it in at creation time. There are two alternatives. One option is to use &lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">「name」は&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;コンストラクタの引数であるため、モックオブジェクトに「name」属性を持たせたい場合は、作成時に渡すことはできません。2つの選択肢があります。1つのオプションは&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt; &lt;code&gt;configure_mock()&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="ef35266432307c8514ba6cf6893dbf4e17003c3d" translate="yes" xml:space="preserve">
          <source>Since 2 hexadecimal digits correspond precisely to a single byte, hexadecimal numbers are a commonly used format for describing binary data. Accordingly, the bytearray type has an additional class method to read data in that format:</source>
          <target state="translated">16 進数の 2 桁が 1 バイトに正確に対応するため、16 進数はバイナリデータを記述するために一般的に使用されるフォーマットである。そのため、バイトアレイ型には、この形式のデータを読み込むためのクラスメソッドが追加されています。</target>
        </trans-unit>
        <trans-unit id="1312a49bcfb8d645c31252966bf586fc59b7effd" translate="yes" xml:space="preserve">
          <source>Since 2 hexadecimal digits correspond precisely to a single byte, hexadecimal numbers are a commonly used format for describing binary data. Accordingly, the bytes type has an additional class method to read data in that format:</source>
          <target state="translated">16進数の2桁が1バイトに正確に対応しているので、16進数はバイナリデータを記述するために一般的に使用されるフォーマットです。したがって、バイト型には、この形式のデータを読み込むためのクラスメソッドが追加されています。</target>
        </trans-unit>
        <trans-unit id="fe4469f655ace0569436edd539307a644d0cf177" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#os.fwalk&quot;&gt;&lt;code&gt;fwalk()&lt;/code&gt;&lt;/a&gt; yields file descriptors, those are only valid until the next iteration step, so you should duplicate them (e.g. with &lt;a href=&quot;#os.dup&quot;&gt;&lt;code&gt;dup()&lt;/code&gt;&lt;/a&gt;) if you want to keep them longer.</source>
          <target state="translated">以来&lt;a href=&quot;#os.fwalk&quot;&gt; &lt;code&gt;fwalk()&lt;/code&gt; は&lt;/a&gt;ファイル記述子を生成します（例えば、それらを複製する必要がありますので、それらは、次の反復ステップまでのみ有効です&lt;a href=&quot;#os.dup&quot;&gt; &lt;code&gt;dup()&lt;/code&gt; &lt;/a&gt;あなたが長く、それらを保持する場合）。</target>
        </trans-unit>
        <trans-unit id="ad7a03c58912db6d65d3a00ef0ebf77390c87a69" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;constants#exit&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt; ultimately &amp;ldquo;only&amp;rdquo; raises an exception, it will only exit the process when called from the main thread, and the exception is not intercepted.</source>
          <target state="translated">ため&lt;a href=&quot;constants#exit&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt;最終的に「のみ」例外が発生し、メインスレッドから呼び出された場合にのみ、プロセスを終了し、例外が傍受されていません。</target>
        </trans-unit>
        <trans-unit id="d02aa53cbc0a5307ca9607147ffb3cc4dd538161" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; is used to open a CSV file for reading, the file will by default be decoded into unicode using the system default encoding (see &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt;). To decode a file using a different encoding, use the &lt;code&gt;encoding&lt;/code&gt; argument of open:</source>
          <target state="translated">ので&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;読み取るためのCSVファイルを開くために使用され、ファイルはデフォルトでシステムのデフォルトのエンコーディングを使用してユニコードにデコードされる（参照&lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt;）。別のエンコーディングを使用してファイルをデコードするには、openの &lt;code&gt;encoding&lt;/code&gt; 引数を使用します。</target>
        </trans-unit>
        <trans-unit id="357a557e5f2e4d106c14f624ed99300e092b1864" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Message.add_payload()&lt;/code&gt; is deprecated, this exception is rarely raised in practice. However the exception may also be raised if the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; method is called on an instance of a class derived from &lt;a href=&quot;email.mime#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt; (e.g. &lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">以来 &lt;code&gt;Message.add_payload()&lt;/code&gt; 推奨されません、この例外は、実際にはほとんど発生しません。ただし、&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;email.mime#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;から派生したクラスのインスタンス（&lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; など&lt;/a&gt;）で呼び出された場合も、例外が発生することがあります。</target>
        </trans-unit>
        <trans-unit id="fc0620ab71c5d3eeb22b070a0df04492744336eb" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;table&lt;/code&gt; is a &lt;code&gt;pointer&lt;/code&gt; to the array of &lt;code&gt;struct_frozen&lt;/code&gt; records, we can iterate over it, but we just have to make sure that our loop terminates, because pointers have no size. Sooner or later it would probably crash with an access violation or whatever, so it&amp;rsquo;s better to break out of the loop when we hit the &lt;code&gt;NULL&lt;/code&gt; entry:</source>
          <target state="translated">&lt;code&gt;table&lt;/code&gt; は &lt;code&gt;struct_frozen&lt;/code&gt; レコードの配列への &lt;code&gt;pointer&lt;/code&gt; ので、繰り返し処理できますが、ポインタにはサイズがないため、ループが終了することを確認する必要があります。遅かれ早かれ、アクセス違反などでクラッシュする可能性があるため、 &lt;code&gt;NULL&lt;/code&gt; エントリに到達したときにループから抜け出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="15c6f1f6a327f671cf1b3ea7c2b08ac6261e5ca5" translate="yes" xml:space="preserve">
          <source>Since Python 3.2 and 2.7.9, it is recommended to use the &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt; of an &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; instance to wrap sockets as &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; objects. The helper functions &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; returns a new context with secure default settings. The old &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt; function is deprecated since it is both inefficient and has no support for server name indication (SNI) and hostname matching.</source>
          <target state="translated">Python 3.2および2.7.9以降、ソケットを&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;オブジェクトとしてラップするには、&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。ヘルパー関数&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;は、安全なデフォルト設定で新しいコンテキストを返します。古い&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;関数は非効率的であり、サーバー名表示（SNI）とホスト名のマッチングをサポートしていないため、非推奨になりました。</target>
        </trans-unit>
        <trans-unit id="a1d89f118e533d8b3a026d92c8ee4f2fd6f7e5bb" translate="yes" xml:space="preserve">
          <source>Since Python 3.7.1, external general entities are no longer processed by default.</source>
          <target state="translated">Python 3.7.1以降、外部の一般実体はデフォルトでは処理されなくなりました。</target>
        </trans-unit>
        <trans-unit id="c5e432a3edef78821fdd1b0008a825671b20a0da" translate="yes" xml:space="preserve">
          <source>Since Python strings have an explicit length, &lt;code&gt;%s&lt;/code&gt; conversions do not assume that &lt;code&gt;'\0'&lt;/code&gt; is the end of the string.</source>
          <target state="translated">Python文字列には明示的な長さがあるため、 &lt;code&gt;%s&lt;/code&gt; 変換では &lt;code&gt;'\0'&lt;/code&gt; が文字列の終わりであるとは想定されません。</target>
        </trans-unit>
        <trans-unit id="1041bd0b5ab7272fc90e35bf896587dd85558276" translate="yes" xml:space="preserve">
          <source>Since a dictionary is used to cache results, the positional and keyword arguments to the function must be hashable.</source>
          <target state="translated">辞書は結果をキャッシュするために使用されるので、関数の位置引数とキーワード引数はハッシュ可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="952a616691c04cbe1c1e50c4d2e37b190e74df04" translate="yes" xml:space="preserve">
          <source>Since a few &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; extensions allow different values, with different sizes in the &lt;em&gt;salt&lt;/em&gt;, it is recommended to use the full crypted password as salt when checking for a password.</source>
          <target state="translated">いくつかの&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;拡張では、&lt;em&gt;saltの&lt;/em&gt;サイズが異なるさまざまな値が許可されているため、パスワードをチェックするときは、フル暗号化パスワードをソルトとして使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b1539d467b3b3f4d8523f4c58281fddccdcdc7d2" translate="yes" xml:space="preserve">
          <source>Since a named tuple is a regular Python class, it is easy to add or change functionality with a subclass. Here is how to add a calculated field and a fixed-width print format:</source>
          <target state="translated">名前付きタプルは通常のPythonクラスなので、サブクラスで機能を追加したり変更したりするのは簡単です。ここでは、計算フィールドと固定幅の印刷形式を追加する方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="52a7825472580381e91e01e7d3fdd4963d26ce3d" translate="yes" xml:space="preserve">
          <source>Since bytearray objects are sequences of integers (akin to a list), for a bytearray object &lt;em&gt;b&lt;/em&gt;, &lt;code&gt;b[0]&lt;/code&gt; will be an integer, while &lt;code&gt;b[0:1]&lt;/code&gt; will be a bytearray object of length 1. (This contrasts with text strings, where both indexing and slicing will produce a string of length 1)</source>
          <target state="translated">バイト配列オブジェクトは整数のシーケンス（リストと同様）であるため、バイト配列オブジェクト&lt;em&gt;bの&lt;/em&gt;場合、 &lt;code&gt;b[0]&lt;/code&gt; は整数、 &lt;code&gt;b[0:1]&lt;/code&gt; は長さ1のバイト配列オブジェクトになります（これはテキストと対照的です）文字列。インデックス付けとスライスの両方で長さ1の文字列が生成されます。</target>
        </trans-unit>
        <trans-unit id="a6d3499f819f892b52f3d0d48a7054c964362dbe" translate="yes" xml:space="preserve">
          <source>Since bytes objects are sequences of integers (akin to a tuple), for a bytes object &lt;em&gt;b&lt;/em&gt;, &lt;code&gt;b[0]&lt;/code&gt; will be an integer, while &lt;code&gt;b[0:1]&lt;/code&gt; will be a bytes object of length 1. (This contrasts with text strings, where both indexing and slicing will produce a string of length 1)</source>
          <target state="translated">バイトオブジェクトは整数のシーケンス（タプルと同様）であるため、バイトオブジェクト&lt;em&gt;bの&lt;/em&gt;場合、 &lt;code&gt;b[0]&lt;/code&gt; は整数、 &lt;code&gt;b[0:1]&lt;/code&gt; は長さ1のバイトオブジェクトになります（これはテキストと対照的です）文字列。インデックス付けとスライスの両方で長さ1の文字列が生成されます。</target>
        </trans-unit>
        <trans-unit id="5b1dca3eb821d6e784f84f770ef002c6be01a7d3" translate="yes" xml:space="preserve">
          <source>Since creating a message object structure from a string or a file object is such a common task, four functions are provided as a convenience. They are available in the top-level &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package namespace.</source>
          <target state="translated">文字列またはファイルオブジェクトからメッセージオブジェクト構造を作成することは一般的なタスクであるため、便宜上、4つの関数が用意されています。これらは、最上位の&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージ名前空間で使用できます。</target>
        </trans-unit>
        <trans-unit id="36906f960023d0ad13a2669eb2a5b1934be4f750" translate="yes" xml:space="preserve">
          <source>Since default &lt;em&gt;flags&lt;/em&gt; is &lt;code&gt;re.IGNORECASE&lt;/code&gt;, pattern &lt;code&gt;[a-z]&lt;/code&gt; can match with some non-ASCII characters. That&amp;rsquo;s why we use the local &lt;code&gt;a&lt;/code&gt; flag here.</source>
          <target state="translated">デフォルトの&lt;em&gt;フラグ&lt;/em&gt;は &lt;code&gt;re.IGNORECASE&lt;/code&gt; であるため、パターン &lt;code&gt;[a-z]&lt;/code&gt; は一部の非ASCII文字と一致する可能性があります。そのため、ここではローカル &lt;code&gt;a&lt;/code&gt; フラグを使用しています。</target>
        </trans-unit>
        <trans-unit id="34d13720e18a294541b66291b515187eae47983b" translate="yes" xml:space="preserve">
          <source>Since different operating systems have different path name conventions, there are several versions of this module in the standard library. The &lt;a href=&quot;#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module is always the path module suitable for the operating system Python is running on, and therefore usable for local paths. However, you can also import and use the individual modules if you want to manipulate a path that is &lt;em&gt;always&lt;/em&gt; in one of the different formats. They all have the same interface:</source>
          <target state="translated">オペレーティングシステムが異なればパス名の規則も異なるため、標準ライブラリにはこのモジュールのいくつかのバージョンがあります。&lt;a href=&quot;#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; の&lt;/a&gt;モジュールは常にPythonが上で稼働しているオペレーティングシステムに適した、およびローカルパスの従って使用可能なパス・モジュールです。ただし、&lt;em&gt;常に&lt;/em&gt;異なる形式のいずれかであるパスを操作する場合は、個々のモジュールをインポートして使用することもできます。それらはすべて同じインターフェースを持っています：</target>
        </trans-unit>
        <trans-unit id="c5936c5341e011750301a7e00d592b72a1b468c6" translate="yes" xml:space="preserve">
          <source>Since message ids are read as Unicode strings too, all &lt;code&gt;*gettext()&lt;/code&gt; methods will assume message ids as Unicode strings, not byte strings.</source>
          <target state="translated">メッセージIDもUnicode文字列として読み取られるため、すべての &lt;code&gt;*gettext()&lt;/code&gt; メソッドはメッセージIDをバイト文字列ではなくUnicode文字列と見なします。</target>
        </trans-unit>
        <trans-unit id="4c96807532aeb747f2bb92d1bbb194774c491add" translate="yes" xml:space="preserve">
          <source>Since normal distributions arise from additive effects of independent variables, it is possible to &lt;a href=&quot;https://en.wikipedia.org/wiki/Sum_of_normally_distributed_random_variables&quot;&gt;add and subtract two independent normally distributed random variables&lt;/a&gt; represented as instances of &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">正規分布は独立変数の相加効果から生じるため、&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; の&lt;/a&gt;インスタンスとして表される&lt;a href=&quot;https://en.wikipedia.org/wiki/Sum_of_normally_distributed_random_variables&quot;&gt;2つの独立した正規分布確率変数&lt;/a&gt;を加算および減算することができます。例えば：</target>
        </trans-unit>
        <trans-unit id="3cf005a3b1d1a01456aaab279bae0fa94262f2c3" translate="yes" xml:space="preserve">
          <source>Since preparing a record for sending it to a Web server is not the same as a generic formatting operation, using &lt;a href=&quot;logging#logging.Handler.setFormatter&quot;&gt;&lt;code&gt;setFormatter()&lt;/code&gt;&lt;/a&gt; to specify a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt; has no effect. Instead of calling &lt;a href=&quot;logging#logging.Handler.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, this handler calls &lt;a href=&quot;#logging.handlers.HTTPHandler.mapLogRecord&quot;&gt;&lt;code&gt;mapLogRecord()&lt;/code&gt;&lt;/a&gt; and then &lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; to encode the dictionary in a form suitable for sending to a Web server.</source>
          <target state="translated">レコードをWebサーバーに送信するための準備は一般的なフォーマット操作と同じではないため、&lt;a href=&quot;logging#logging.Handler.setFormatter&quot;&gt; &lt;code&gt;setFormatter()&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt; &lt;code&gt;HTTPHandler&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;を指定しても効果はありません。代わりに、呼び出し元の&lt;a href=&quot;logging#logging.Handler.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;、このハンドラが呼び出されます&lt;a href=&quot;#logging.handlers.HTTPHandler.mapLogRecord&quot;&gt; &lt;code&gt;mapLogRecord()&lt;/code&gt; &lt;/a&gt;、その後&lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;、Webサーバへの送信に適した形式で辞書をエンコードします。</target>
        </trans-unit>
        <trans-unit id="a2de5a971ba2250f98a54d37f53532f56117471c" translate="yes" xml:space="preserve">
          <source>Since registered callbacks are invoked in the reverse order of registration, this ends up behaving as if multiple nested &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements had been used with the registered set of callbacks. This even extends to exception handling - if an inner callback suppresses or replaces an exception, then outer callbacks will be passed arguments based on that updated state.</source>
          <target state="translated">登録されたコールバックは登録と逆の順序で呼び出されるため、登録されたコールバックのセットで複数のネストされた&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントが使用されたかのように動作します。これは例外処理にも拡張されます。内部コールバックが例外を抑制または置換した場合、外部コールバックにはその更新された状態に基づいて引数が渡されます。</target>
        </trans-unit>
        <trans-unit id="897a22f859609d958cfa78ba2cdbc592bdce1e7d" translate="yes" xml:space="preserve">
          <source>Since registered callbacks are invoked in the reverse order of registration, this ends up behaving as if multiple nested &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements had been used with the registered set of callbacks. This even extends to exception handling - if an inner callback suppresses or replaces an exception, then outer callbacks will be passed arguments based on that updated state.</source>
          <target state="translated">登録されたコールバックは登録の逆の順序で呼び出されるため、これは、登録されたコールバックのセットで複数のネストされ&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントが使用されたかのように動作することになります。これは例外処理にも拡張されます。内部コールバックが例外を抑制または置換する場合、外部コールバックにはその更新された状態に基づいて引数が渡されます。</target>
        </trans-unit>
        <trans-unit id="221f1a1801c5248ca6fd54e0085d13ae28f9178f" translate="yes" xml:space="preserve">
          <source>Since sets only define partial ordering (subset relationships), the output of the &lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;list.sort()&lt;/code&gt;&lt;/a&gt; method is undefined for lists of sets.</source>
          <target state="translated">セットは部分的な順序付け（サブセット関係）のみを定義するため、リストのリストの場合、&lt;a href=&quot;#list.sort&quot;&gt; &lt;code&gt;list.sort()&lt;/code&gt; &lt;/a&gt;メソッドの出力は未定義です。</target>
        </trans-unit>
        <trans-unit id="82801e4cdb42f47974c364f56bdb28105f46f33d" translate="yes" xml:space="preserve">
          <source>Since some set operations create new sets, the default mixin methods need a way to create new instances from an iterable. The class constructor is assumed to have a signature in the form &lt;code&gt;ClassName(iterable)&lt;/code&gt;. That assumption is factored-out to an internal classmethod called &lt;code&gt;_from_iterable()&lt;/code&gt; which calls &lt;code&gt;cls(iterable)&lt;/code&gt; to produce a new set. If the &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; mixin is being used in a class with a different constructor signature, you will need to override &lt;code&gt;_from_iterable()&lt;/code&gt; with a classmethod that can construct new instances from an iterable argument.</source>
          <target state="translated">一部のセット操作では新しいセットが作成されるため、デフォルトのミックスインメソッドでは、イテラブルから新しいインスタンスを作成する方法が必要です。クラスコンストラクターは、 &lt;code&gt;ClassName(iterable)&lt;/code&gt; の形式のシグネチャを持つと想定されます。その仮定は、 &lt;code&gt;cls(iterable)&lt;/code&gt; を呼び出して新しいセットを生成する &lt;code&gt;_from_iterable()&lt;/code&gt; と呼ばれる内部クラスメソッドに因数分解されます。&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;ミックスインが異なるコンストラクターシグネチャを持つクラスで使用されている場合は、 &lt;code&gt;_from_iterable()&lt;/code&gt; を、反復可能な引数から新しいインスタンスを構築できるclassmethodでオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="a7081da272e9568d9f4138c64be3eb7b99abf984" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;#shlex.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; function instantiates a &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance, passing &lt;code&gt;None&lt;/code&gt; for &lt;em&gt;s&lt;/em&gt; will read the string to split from standard input.</source>
          <target state="translated">以来、&lt;a href=&quot;#shlex.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;関数は、インスタンス化&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;インスタンスを通過しない &lt;code&gt;None&lt;/code&gt; ため&lt;em&gt;Sは&lt;/em&gt;標準入力から分割する文字列を読み込みます。</target>
        </trans-unit>
        <trans-unit id="065af73ef30904b10c937ddfd3bafbb7434f5ab3" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; class is derived from the built-in &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class, to turn a warning into an error we simply raise &lt;code&gt;category(message)&lt;/code&gt;.</source>
          <target state="translated">以来&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;クラス内蔵の由来れる&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;我々は単に上げるエラーに警告を回すために、クラス &lt;code&gt;category(message)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac6074228f7eb46c8cb8e7b8fb65506ceb74d75b" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;Annotated&lt;/code&gt; type allows you to put several annotations of the same (or different) type(s) on any node, the tools or libraries consuming those annotations are in charge of dealing with potential duplicates. For example, if you are doing value range analysis you might allow this:</source>
          <target state="translated">以来 &lt;code&gt;Annotated&lt;/code&gt; タイプは、あなたが任意のノード上で同じ（または異なる）タイプのいくつかの注釈を配置することができます、これらの注釈を消費するツールやライブラリは、潜在的な重複を扱う担当しています。たとえば、値の範囲の分析を行う場合は、次のことを許可できます。</target>
        </trans-unit>
        <trans-unit id="fec28510123790c1f80c03bb582e541ea42b8c63" translate="yes" xml:space="preserve">
          <source>Since the RFC permits RFC-compliant parsers to accept input texts that are not RFC-compliant, this module&amp;rsquo;s deserializer is technically RFC-compliant under default settings.</source>
          <target state="translated">RFCはRFC準拠のパーサーがRFC準拠ではない入力テキストを受け入れることを許可するため、このモジュールのデシリアライザーは技術的にデフォルト設定でRFC準拠です。</target>
        </trans-unit>
        <trans-unit id="216569eabf8f4e0a89c4bdcfaf5a32fb51a2a671" translate="yes" xml:space="preserve">
          <source>Since the document is treated as a &amp;ldquo;flat&amp;rdquo; stream of events, the document &amp;ldquo;tree&amp;rdquo; is implicitly traversed and the desired elements are found regardless of their depth in the tree. In other words, one does not need to consider hierarchical issues such as recursive searching of the document nodes, although if the context of elements were important, one would either need to maintain some context-related state (i.e. remembering where one is in the document at any given point) or to make use of the &lt;a href=&quot;#xml.dom.pulldom.DOMEventStream.expandNode&quot;&gt;&lt;code&gt;DOMEventStream.expandNode()&lt;/code&gt;&lt;/a&gt; method and switch to DOM-related processing.</source>
          <target state="translated">ドキュメントはイベントの「フラットな」ストリームとして扱われるため、ドキュメントの「ツリー」が暗黙的にトラバースされ、ツリーの深さに関係なく目的の要素が見つかります。つまり、要素のコンテキストが重要な場合は、コンテキスト関連の状態を維持する必要があります（つまり、ドキュメント内のどこにあるかを覚えておく必要があります）。任意の時点で）、または&lt;a href=&quot;#xml.dom.pulldom.DOMEventStream.expandNode&quot;&gt; &lt;code&gt;DOMEventStream.expandNode()&lt;/code&gt; &lt;/a&gt;メソッドを使用してDOM関連の処理に切り替えます。</target>
        </trans-unit>
        <trans-unit id="233a5cac0f9f077a7bf3bfaefee54c4551a7fa6b" translate="yes" xml:space="preserve">
          <source>Since the lines showing the position of the error come before the exception type and detail, they are not checked by doctest. For example, the following test would pass, even though it puts the &lt;code&gt;^&lt;/code&gt; marker in the wrong location:</source>
          <target state="translated">エラーの位置を示す行は、例外のタイプと詳細の前にあるため、doctestではチェックされません。たとえば、次のテストでは、 &lt;code&gt;^&lt;/code&gt; マーカーが間違った場所に配置されていても合格します。</target>
        </trans-unit>
        <trans-unit id="30e1e34e50e8cab570764ee4bc9a6e69ed254380" translate="yes" xml:space="preserve">
          <source>Since the sentence detection algorithm relies on &lt;code&gt;string.lowercase&lt;/code&gt; for the definition of &amp;ldquo;lowercase letter&amp;rdquo;, and a convention of using two spaces after a period to separate sentences on the same line, it is specific to English-language texts.</source>
          <target state="translated">文検出アルゴリズムは、「小文字」の定義に &lt;code&gt;string.lowercase&lt;/code&gt; を使用し、ピリオドの後に2つのスペースを使用して同じ行の文を区切る規則に依存しているため、英語のテキストに固有です。</target>
        </trans-unit>
        <trans-unit id="50a28ef3ba021603a23c1bd3639fef81092ab93e" translate="yes" xml:space="preserve">
          <source>Since the sentence detection algorithm relies on &lt;code&gt;string.lowercase&lt;/code&gt; for the definition of &amp;ldquo;lowercase letter,&amp;rdquo; and a convention of using two spaces after a period to separate sentences on the same line, it is specific to English-language texts.</source>
          <target state="translated">文の検出アルゴリズムは、「小文字」の定義を &lt;code&gt;string.lowercase&lt;/code&gt; に依存し、ピリオドの後に2つのスペースを使用して同じ行の文を区切るという慣習のため、これは英語のテキストに固有です。</target>
        </trans-unit>
        <trans-unit id="35b21f9fb9e937574056d8f729c7283c3782d977" translate="yes" xml:space="preserve">
          <source>Since there is no separate &amp;ldquo;character&amp;rdquo; type, indexing a string produces strings of length 1. That is, for a non-empty string &lt;em&gt;s&lt;/em&gt;, &lt;code&gt;s[0] == s[0:1]&lt;/code&gt;.</source>
          <target state="translated">個別の「文字」タイプがないため、文字列にインデックスを付けると、長さが1の文字列が生成されます。つまり、空でない文字列&lt;em&gt;sの&lt;/em&gt;場合、 &lt;code&gt;s[0] == s[0:1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="53de51d09b99027d30246a8317ae25e8dd577b46" translate="yes" xml:space="preserve">
          <source>Since these types are mutable, their value can also be changed afterwards:</source>
          <target state="translated">これらの型は変異可能なので、後から値を変更することもできます。</target>
        </trans-unit>
        <trans-unit id="ab96ad07577c80eb78564677fbafe39c8f1f6809" translate="yes" xml:space="preserve">
          <source>Since this task is so common, config parsers provide a range of handy getter methods to handle integers, floats and booleans. The last one is the most interesting because simply passing the value to &lt;code&gt;bool()&lt;/code&gt; would do no good since &lt;code&gt;bool('False')&lt;/code&gt; is still &lt;code&gt;True&lt;/code&gt;. This is why config parsers also provide &lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt;&lt;code&gt;getboolean()&lt;/code&gt;&lt;/a&gt;. This method is case-insensitive and recognizes Boolean values from &lt;code&gt;'yes'&lt;/code&gt;/&lt;code&gt;'no'&lt;/code&gt;, &lt;code&gt;'on'&lt;/code&gt;/&lt;code&gt;'off'&lt;/code&gt;, &lt;code&gt;'true'&lt;/code&gt;/&lt;code&gt;'false'&lt;/code&gt; and &lt;code&gt;'1'&lt;/code&gt;/&lt;code&gt;'0'&lt;/code&gt;&lt;a href=&quot;#id14&quot; id=&quot;id3&quot;&gt;1&lt;/a&gt;. For example:</source>
          <target state="translated">このタスクは非常に一般的であるため、構成パーサーは、整数、浮動小数点数、ブール値を処理するための便利なゲッターメソッドを提供します。 &lt;code&gt;bool('False')&lt;/code&gt; はまだ &lt;code&gt;True&lt;/code&gt; なので、値を &lt;code&gt;bool()&lt;/code&gt; に渡すだけでは効果がないため、最後のものは最も興味深いものです。これが、構成パーサーが&lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt; &lt;code&gt;getboolean()&lt;/code&gt; &lt;/a&gt;も提供する理由です。このメソッドは大文字と小文字を区別せず、 &lt;code&gt;'yes'&lt;/code&gt; / &lt;code&gt;'no'&lt;/code&gt; 、 &lt;code&gt;'on'&lt;/code&gt; / &lt;code&gt;'off'&lt;/code&gt; 、 &lt;code&gt;'true'&lt;/code&gt; / &lt;code&gt;'false'&lt;/code&gt; 、および &lt;code&gt;'1'&lt;/code&gt; / &lt;code&gt;'0'&lt;/code&gt; ブール値を認識します&lt;a href=&quot;#id14&quot; id=&quot;id3&quot;&gt;1&lt;/a&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="912cbafbd8f913f723acd583014d7552e515c4c7" translate="yes" xml:space="preserve">
          <source>Since type information about objects kept in containers cannot be statically inferred in a generic way, abstract base classes have been extended to support subscription to denote expected types for container elements.</source>
          <target state="translated">コンテナに格納されているオブジェクトの型情報は、一般的な方法では統計的に推論できないため、抽象基底クラスは、コンテナ要素の期待される型を表すためにサブスクリプションをサポートするように拡張されています。</target>
        </trans-unit>
        <trans-unit id="912bf3f7c8f4697ede9749f5ea6c80cc0d9e7ad9" translate="yes" xml:space="preserve">
          <source>Since version 5.4, the ncurses library decides how to interpret non-ASCII data using the &lt;code&gt;nl_langinfo&lt;/code&gt; function. That means that you have to call &lt;a href=&quot;locale#locale.setlocale&quot;&gt;&lt;code&gt;locale.setlocale()&lt;/code&gt;&lt;/a&gt; in the application and encode Unicode strings using one of the system&amp;rsquo;s available encodings. This example uses the system&amp;rsquo;s default encoding:</source>
          <target state="translated">バージョン5.4以降、ncursesライブラリは、 &lt;code&gt;nl_langinfo&lt;/code&gt; 関数を使用して非ASCIIデータを解釈する方法を決定します。つまり、アプリケーションで&lt;a href=&quot;locale#locale.setlocale&quot;&gt; &lt;code&gt;locale.setlocale()&lt;/code&gt; &lt;/a&gt;を呼び出し、システムで利用可能なエンコーディングの1つを使用してUnicode文字列をエンコードする必要があります。この例では、システムのデフォルトのエンコーディングを使用しています。</target>
        </trans-unit>
        <trans-unit id="7a6f579d33b872878721c092b931bef566b3db44" translate="yes" xml:space="preserve">
          <source>Since you don&amp;rsquo;t know how many bytes are available for reading, you may not want to use the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; methods, since these will insist on reading a predefined number of bytes. For sockets, the &lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;socket#socket.socket.recvfrom&quot;&gt;&lt;code&gt;recvfrom()&lt;/code&gt;&lt;/a&gt; methods will work fine; for other files, use raw reads or &lt;code&gt;os.read(file.fileno(), maxbytecount)&lt;/code&gt;.</source>
          <target state="translated">読み取りに使用できるバイト数がわからないため、&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;io#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;メソッドを使用したくない場合があります。これらのメソッドは、事前定義されたバイト数の読み取りを要求するためです。ソケットの場合、&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;socket#socket.socket.recvfrom&quot;&gt; &lt;code&gt;recvfrom()&lt;/code&gt; &lt;/a&gt;メソッドは正常に機能します。他のファイルの場合は、未加工の読み取りまたは &lt;code&gt;os.read(file.fileno(), maxbytecount)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="b29eba92524642f3d096b1ea0cea813f700d8b6b" translate="yes" xml:space="preserve">
          <source>Single byte (accepts integer or single byte objects).</source>
          <target state="translated">シングルバイト(整数またはシングルバイトのオブジェクトを受け付ける)。</target>
        </trans-unit>
        <trans-unit id="57690ea62c9d97c5e83e533866910f5cb3f277d9" translate="yes" xml:space="preserve">
          <source>Single character (accepts integer or single character string).</source>
          <target state="translated">1文字(整数または1文字の文字列を受け付けます)。</target>
        </trans-unit>
        <trans-unit id="555cb7938fa7b221230e57ee2b53c4912e5bc798" translate="yes" xml:space="preserve">
          <source>Single mode (most common value) of discrete or nominal data.</source>
          <target state="translated">離散データまたは公称データのシングルモード(最も一般的な値)。</target>
        </trans-unit>
        <trans-unit id="9ef558abf0cb97133cddfde63b4e283b237e9dea" translate="yes" xml:space="preserve">
          <source>Single quotes: &lt;code&gt;'allows embedded &quot;double&quot; quotes'&lt;/code&gt;</source>
          <target state="translated">単一引用符： &lt;code&gt;'allows embedded &quot;double&quot; quotes'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31de4d8526188c1901f878b6d84bc908253e004f" translate="yes" xml:space="preserve">
          <source>Single quotes: &lt;code&gt;b'still allows embedded &quot;double&quot; quotes'&lt;/code&gt;</source>
          <target state="translated">一重引用符： &lt;code&gt;b'still allows embedded &quot;double&quot; quotes'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b45b6e4ed3e8cb5e59b986dd4ca2ce78da9442c" translate="yes" xml:space="preserve">
          <source>Single use, reusable and reentrant context managers</source>
          <target state="translated">シングルユース、再利用可能、リエントラントなコンテキストマネージャー</target>
        </trans-unit>
        <trans-unit id="11da8844e71d7186e3237e13c96d45c0da5d832b" translate="yes" xml:space="preserve">
          <source>SingleAddressHeader</source>
          <target state="translated">SingleAddressHeader</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="6420be377223f1f7dc305b60eae93c358cc0da33" translate="yes" xml:space="preserve">
          <source>Size in bytes of a plain file; amount of data waiting on some special files.</source>
          <target state="translated">プレーンファイルのバイト単位のサイズ。</target>
        </trans-unit>
        <trans-unit id="e88c3aeaceef44080e007ca9d259bb40dff2b1c5" translate="yes" xml:space="preserve">
          <source>Size in bytes.</source>
          <target state="translated">バイト単位のサイズ。</target>
        </trans-unit>
        <trans-unit id="322b7788474b9d1213bbb55e24efb57c0da11672" translate="yes" xml:space="preserve">
          <source>Size of chunk in big-endian byte order, not including the header</source>
          <target state="translated">ビッグエンディアンバイト順のチャンクのサイズ。</target>
        </trans-unit>
        <trans-unit id="a2cd5cd3bb871a24f99f5cd7ce489da45f73c8de" translate="yes" xml:space="preserve">
          <source>Size of the compressed data.</source>
          <target state="translated">圧縮されたデータのサイズ。</target>
        </trans-unit>
        <trans-unit id="440dc47d64df7a779f3f21a776227ed51bd918f3" translate="yes" xml:space="preserve">
          <source>Size of the file in bytes, if it is a regular file or a symbolic link. The size of a symbolic link is the length of the pathname it contains, without a terminating null byte.</source>
          <target state="translated">ファイルのサイズをバイト単位で指定します。シンボリックリンクのサイズは、それが含むパス名の長さで、終端のヌルバイトは含まれていません。</target>
        </trans-unit>
        <trans-unit id="520c0beadde299c8d072bac6626d3c08ca1b8bcc" translate="yes" xml:space="preserve">
          <source>Size of the memory block in bytes (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">バイト単位のメモリブロックのサイズ（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a37ac532d145635fda038e5edffdbcc177f58f50" translate="yes" xml:space="preserve">
          <source>Size of the uncompressed file.</source>
          <target state="translated">非圧縮ファイルのサイズ。</target>
        </trans-unit>
        <trans-unit id="8f68b7271130712fd6389d29bd7e4918c8c99bc5" translate="yes" xml:space="preserve">
          <source>Sizegrip</source>
          <target state="translated">Sizegrip</target>
        </trans-unit>
        <trans-unit id="0e1c4195084872a319c4c258bbd010a7f44664a4" translate="yes" xml:space="preserve">
          <source>Skip the decorated test if &lt;em&gt;condition&lt;/em&gt; is true.</source>
          <target state="translated">&lt;em&gt;条件&lt;/em&gt;が真の場合、装飾されたテストをスキップします。</target>
        </trans-unit>
        <trans-unit id="ddb423384e5420b1b8d108fd8e9aea943430df4d" translate="yes" xml:space="preserve">
          <source>Skip the decorated test unless &lt;em&gt;condition&lt;/em&gt; is true.</source>
          <target state="translated">&lt;em&gt;条件&lt;/em&gt;が真でない限り、装飾されたテストをスキップします。</target>
        </trans-unit>
        <trans-unit id="49f97d41c08e786723ab65b33aaf806767e701c5" translate="yes" xml:space="preserve">
          <source>Skip to the end of the chunk. All further calls to &lt;a href=&quot;#chunk.Chunk.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; for the chunk will return &lt;code&gt;b''&lt;/code&gt;. If you are not interested in the contents of the chunk, this method should be called so that the file points to the start of the next chunk.</source>
          <target state="translated">チャンクの最後までスキップします。チャンクに対して&lt;a href=&quot;#chunk.Chunk.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;をさらに呼び出すと、 &lt;code&gt;b''&lt;/code&gt; が返されます。チャンクの内容に関心がない場合は、このメソッドを呼び出して、ファイルが次のチャンクの先頭を指すようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="6582597e85df2342a60c8d67fd7b6981edec9724" translate="yes" xml:space="preserve">
          <source>Skipped tests will not have &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; run around them. Skipped classes will not have &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; run. Skipped modules will not have &lt;code&gt;setUpModule()&lt;/code&gt; or &lt;code&gt;tearDownModule()&lt;/code&gt; run.</source>
          <target state="translated">スキップされたテストでは、&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; が&lt;/a&gt;実行されません。スキップされたクラスは、&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; を&lt;/a&gt;実行しません。スキップされたモジュールは、 &lt;code&gt;setUpModule()&lt;/code&gt; または &lt;code&gt;tearDownModule()&lt;/code&gt; を実行しません。</target>
        </trans-unit>
        <trans-unit id="aba1290d98e5b3da0f1bfe3155a9286efbcf186f" translate="yes" xml:space="preserve">
          <source>Skipping a test is simply a matter of using the &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; or one of its conditional variants, calling &lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt;&lt;code&gt;TestCase.skipTest()&lt;/code&gt;&lt;/a&gt; within a &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; or test method, or raising &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">テストのスキップは、単に&lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;またはその条件付きバリアントの1つを使用するか、&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;またはテストメソッド内で&lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt; &lt;code&gt;TestCase.skipTest()&lt;/code&gt; を&lt;/a&gt;呼び出すか、&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; を&lt;/a&gt;直接発生させることです。</target>
        </trans-unit>
        <trans-unit id="7465f1b1b4fedff19b7ddc6a668432567aa69274" translate="yes" xml:space="preserve">
          <source>Skipping a test is simply a matter of using the &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; or one of its conditional variants, calling &lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt;&lt;code&gt;TestCase.skipTest()&lt;/code&gt;&lt;/a&gt; within a &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; or test method, or raising &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">テストをスキップするには、&lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;またはその条件付きバリアントの1つを使用するか、&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;またはtestメソッド内で&lt;a href=&quot;#unittest.TestCase.skipTest&quot;&gt; &lt;code&gt;TestCase.skipTest()&lt;/code&gt; を&lt;/a&gt;呼び出すか、&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; を&lt;/a&gt;直接起動するだけです。</target>
        </trans-unit>
        <trans-unit id="c117ad5aeb712747055a74b6fb87baf354bbd169" translate="yes" xml:space="preserve">
          <source>Skipping code for error cases, the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation acts like:</source>
          <target state="translated">エラーケースのコードをスキップすると、デフォルトの&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;実装は次のように動作します。</target>
        </trans-unit>
        <trans-unit id="3646c7e5c1a12b2acde6a35dc0aa68a4abff33b4" translate="yes" xml:space="preserve">
          <source>Skipping tests and expected failures</source>
          <target state="translated">飛び級テストと予想される失敗</target>
        </trans-unit>
        <trans-unit id="82754d73f24bb3b7d35592778b6dcd91eafa6b25" translate="yes" xml:space="preserve">
          <source>Sleep for &lt;em&gt;ms&lt;/em&gt; milliseconds.</source>
          <target state="translated">&lt;em&gt;ms&lt;/em&gt;ミリ秒間スリープします。</target>
        </trans-unit>
        <trans-unit id="a6ba83b96ca56e9b877d88c9cbb0ea782a7dd6e6" translate="yes" xml:space="preserve">
          <source>Sleep for a number of seconds.</source>
          <target state="translated">何秒かスリープします。</target>
        </trans-unit>
        <trans-unit id="dd43b59ee118fca8a0c08fafd9a8e0a347b7c213" translate="yes" xml:space="preserve">
          <source>Sleeping</source>
          <target state="translated">Sleeping</target>
        </trans-unit>
        <trans-unit id="a0df26eef26b911129ac12ddd049f8bf3a563c5f" translate="yes" xml:space="preserve">
          <source>Slice Assignment</source>
          <target state="translated">スライス課題</target>
        </trans-unit>
        <trans-unit id="3cea1019fece6b3b08d532b31ddf17e0d657c0f5" translate="yes" xml:space="preserve">
          <source>Slice Deletion</source>
          <target state="translated">スライス削除</target>
        </trans-unit>
        <trans-unit id="0b8d3bff7b282e8424f968f9e948b9dc2006e7fb" translate="yes" xml:space="preserve">
          <source>Slicing</source>
          <target state="translated">Slicing</target>
        </trans-unit>
        <trans-unit id="b08ae37ed0218a85800a574ce852c8c93ad73b28" translate="yes" xml:space="preserve">
          <source>Snapshot</source>
          <target state="translated">Snapshot</target>
        </trans-unit>
        <trans-unit id="5361bd0549c18cafe30d983735d8a17fb1d313d3" translate="yes" xml:space="preserve">
          <source>Snapshot of traces of memory blocks allocated by Python.</source>
          <target state="translated">Pythonで割り当てられたメモリブロックのトレースのスナップショット。</target>
        </trans-unit>
        <trans-unit id="eed3db68d4ddc766c6f82fc89407961f8a3e7c96" translate="yes" xml:space="preserve">
          <source>So both ways of creating a &lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; run instances of &lt;code&gt;DocTestCase&lt;/code&gt;. This is important for a subtle reason: when you run &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; functions yourself, you can control the &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; options in use directly, by passing option flags to &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; functions. However, if you&amp;rsquo;re writing a &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; framework, &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; ultimately controls when and how tests get run. The framework author typically wants to control &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; reporting options (perhaps, e.g., specified by command line options), but there&amp;rsquo;s no way to pass options through &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; test runners.</source>
          <target state="translated">作成の両方の方法だから、&lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; インスタンス&lt;/a&gt;の実行インスタンス &lt;code&gt;DocTestCase&lt;/code&gt; についてを。これは微妙な理由で重要です。自分で&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;関数を実行する場合、オプションフラグを&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;関数に渡すことにより、使用中の&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;オプションを直接制御できます。ただし、&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;フレームワークを作成している場合、&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; は&lt;/a&gt;最終的にテストを実行するタイミングと方法を制御します。フレームワークの作成者は通常、&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;レポートオプション（たとえば、コマンドラインオプションで指定）を制御することを望んでい&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;介してオプションをdoctestテストランナーに渡す方法はありません。</target>
        </trans-unit>
        <trans-unit id="d390e8cd42700d94bc6674684990fa2976306af5" translate="yes" xml:space="preserve">
          <source>So for example, the field expression &amp;lsquo;0.name&amp;rsquo; would cause &lt;a href=&quot;#string.Formatter.get_value&quot;&gt;&lt;code&gt;get_value()&lt;/code&gt;&lt;/a&gt; to be called with a &lt;em&gt;key&lt;/em&gt; argument of 0. The &lt;code&gt;name&lt;/code&gt; attribute will be looked up after &lt;a href=&quot;#string.Formatter.get_value&quot;&gt;&lt;code&gt;get_value()&lt;/code&gt;&lt;/a&gt; returns by calling the built-in &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">したがって、たとえば、フィールド式「0.name」を引き起こす&lt;a href=&quot;#string.Formatter.get_value&quot;&gt; &lt;code&gt;get_value()&lt;/code&gt; &lt;/a&gt;と呼ばれるように&lt;em&gt;、キー&lt;/em&gt; 0の引数 &lt;code&gt;name&lt;/code&gt; 属性が後に検索されます&lt;a href=&quot;#string.Formatter.get_value&quot;&gt; &lt;code&gt;get_value()&lt;/code&gt; &lt;/a&gt;内蔵の呼び出しによってリターン&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;関数を。</target>
        </trans-unit>
        <trans-unit id="3dbe0909e3f34ac9e147ba359e34b81eee5c1319" translate="yes" xml:space="preserve">
          <source>So for instance</source>
          <target state="translated">だから、例えば</target>
        </trans-unit>
        <trans-unit id="36fc30b890e281684866766f10c1a438948c9f20" translate="yes" xml:space="preserve">
          <source>So manipulating this pointer could even prove useful. To restrict the example size, we show only how this table can be read with &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">そのため、このポインタを操作することで、さらに便利になる場合があります。サンプルのサイズを制限するために、このテーブルを&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;で読み取る方法のみを示します。</target>
        </trans-unit>
        <trans-unit id="ddee44e40bb54ed03c000b82fa00c6414992d963" translate="yes" xml:space="preserve">
          <source>So our callback function receives pointers to integers, and must return an integer. First we create the &lt;code&gt;type&lt;/code&gt; for the callback function:</source>
          <target state="translated">したがって、コールバック関数は整数へのポインターを受け取り、整数を返す必要があります。まず、コールバック関数の &lt;code&gt;type&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ed03469651c0c7bf7f9c07b1c03c546a6b51efcd" translate="yes" xml:space="preserve">
          <source>So someone living in Japan may have &lt;code&gt;JST&lt;/code&gt;, &lt;code&gt;UTC&lt;/code&gt;, and &lt;code&gt;GMT&lt;/code&gt; as valid values, but probably not &lt;code&gt;EST&lt;/code&gt;. It will raise &lt;code&gt;ValueError&lt;/code&gt; for invalid values.</source>
          <target state="translated">したがって、日本に住んでいる人は、有効な値として &lt;code&gt;JST&lt;/code&gt; 、 &lt;code&gt;UTC&lt;/code&gt; 、および &lt;code&gt;GMT&lt;/code&gt; を持っている可能性がありますが、おそらく &lt;code&gt;EST&lt;/code&gt; は持っていません。これは、発生します &lt;code&gt;ValueError&lt;/code&gt; 無効な値のために。</target>
        </trans-unit>
        <trans-unit id="e12fff6bc0f0cbfe14b3f284566d60f52ff9fa02" translate="yes" xml:space="preserve">
          <source>So, &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; can be used to assign to the &lt;code&gt;values&lt;/code&gt; field of &lt;code&gt;Bar&lt;/code&gt; the structure:</source>
          <target state="translated">したがって、&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;Bar&lt;/code&gt; の &lt;code&gt;values&lt;/code&gt; フィールドに構造を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="53e7af15a67c28699b6b7c4748ac93b3d20d777c" translate="yes" xml:space="preserve">
          <source>So, for example, consider the following YAML snippet:</source>
          <target state="translated">そこで、例えば、以下のYAMLスニペットを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="4b33dadfec72d1b17aa57bf332e3610b6b752549" translate="yes" xml:space="preserve">
          <source>Soapbox</source>
          <target state="translated">Soapbox</target>
        </trans-unit>
        <trans-unit id="1215542c657a3aeb2e3ac8633a7ce8f1077f3f58" translate="yes" xml:space="preserve">
          <source>Socket Objects</source>
          <target state="translated">ソケットオブジェクト</target>
        </trans-unit>
        <trans-unit id="575cff1362162b9a747a060d75dee21348626099" translate="yes" xml:space="preserve">
          <source>Socket creation</source>
          <target state="translated">ソケット作成</target>
        </trans-unit>
        <trans-unit id="7f60b37edcea747ab28a849c243acf4a193e2685" translate="yes" xml:space="preserve">
          <source>Socket families</source>
          <target state="translated">ソケットファミリー</target>
        </trans-unit>
        <trans-unit id="48512772d3046ed48e0ade51ed81e170e4a625ba" translate="yes" xml:space="preserve">
          <source>Socket objects also have these (read-only) attributes that correspond to the values given to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">ソケットオブジェクトには、&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;コンストラクターに指定された値に対応するこれらの（読み取り専用）属性もあります。</target>
        </trans-unit>
        <trans-unit id="b850b856fdc72d202b5e805adf1fd8f99a1eeb67" translate="yes" xml:space="preserve">
          <source>Socket objects have the following methods. Except for &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt;, these correspond to Unix system calls applicable to sockets.</source>
          <target state="translated">Socketオブジェクトには以下のメソッドがあります。&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; を&lt;/a&gt;除き、これらはソケットに適用可能なUnixシステムコールに対応します。</target>
        </trans-unit>
        <trans-unit id="ba3a2f86cdfbc4d51c8dd0104aa25dd69c9ae5eb" translate="yes" xml:space="preserve">
          <source>Socket operation on non-socket</source>
          <target state="translated">非ソケットでのソケット操作</target>
        </trans-unit>
        <trans-unit id="1d0a063107fb2a5027e2f89664a6337ddcb70691" translate="yes" xml:space="preserve">
          <source>Socket type not supported</source>
          <target state="translated">ソケットタイプはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="5bedda872ecdb70c2a2d140ada477f5b294eb6f0" translate="yes" xml:space="preserve">
          <source>Socket.</source>
          <target state="translated">Socket.</target>
        </trans-unit>
        <trans-unit id="d740a23427e188e3df3355643cd06a5a8c258af2" translate="yes" xml:space="preserve">
          <source>SocketHandler</source>
          <target state="translated">SocketHandler</target>
        </trans-unit>
        <trans-unit id="508c36b3241ae34627fb1cadebb1f27b16e0f61a" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="translated">Sockets</target>
        </trans-unit>
        <trans-unit id="f87b5f0266ad35849c674a8ef3363ffca136c863" translate="yes" xml:space="preserve">
          <source>Sockets are automatically closed when they are garbage-collected, but it is recommended to &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; them explicitly, or to use a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement around them.</source>
          <target state="translated">ソケットはガベージコレクションされると自動的にクローズされますが、明示的に&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;するか、ソケットの周りに&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2d01635bde1f394795fa2c6f9249e61cc7364b53" translate="yes" xml:space="preserve">
          <source>Sockets are automatically closed when they are garbage-collected, but it is recommended to &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; them explicitly, or to use a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement around them.</source>
          <target state="translated">ソケットはガベージコレクションされると自動的に閉じられますが、明示的に&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;するか、ソケットの周りに&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b302d24b1c2748afa2a7d5ad4733b259d3f55ac8" translate="yes" xml:space="preserve">
          <source>Soft (partial) reset (unreliable)</source>
          <target state="translated">ソフト(部分)リセット(信頼性なし</target>
        </trans-unit>
        <trans-unit id="6fdc86353a6e625947ea26aca29842dff1c18029" translate="yes" xml:space="preserve">
          <source>Software Packaging &amp;amp; Distribution</source>
          <target state="translated">ソフトウェアのパッケージ化と配布</target>
        </trans-unit>
        <trans-unit id="0489d43e9ca7ac6ab4ba7c5e2e8d5d728e1838bd" translate="yes" xml:space="preserve">
          <source>Software Packaging and Distribution</source>
          <target state="translated">ソフトウェアのパッケージングと配布</target>
        </trans-unit>
        <trans-unit id="da7e8a5db4d27cd8e808680b636e1905c8ab337a" translate="yes" xml:space="preserve">
          <source>Software caused connection abort</source>
          <target state="translated">ソフトウェアが原因で接続が中断した</target>
        </trans-unit>
        <trans-unit id="b327aa722878b69a2be1c754ff3f4a024bbdc69d" translate="yes" xml:space="preserve">
          <source>Solaris and derivatives have &lt;code&gt;/dev/poll&lt;/code&gt;. While &lt;code&gt;select()&lt;/code&gt; is O(highest file descriptor) and &lt;code&gt;poll()&lt;/code&gt; is O(number of file descriptors), &lt;code&gt;/dev/poll&lt;/code&gt; is O(active file descriptors).</source>
          <target state="translated">Solarisとその派生物には &lt;code&gt;/dev/poll&lt;/code&gt; があります。一方で &lt;code&gt;select()&lt;/code&gt; を O（最高ファイルディスクリプタ）とである &lt;code&gt;poll()&lt;/code&gt; O（ファイル記述子の数）され、 &lt;code&gt;/dev/poll&lt;/code&gt; O（アクティブファイルディスクリプタ）です。</target>
        </trans-unit>
        <trans-unit id="998c333aa8ce0e139b409093ba1131062fbcf8bd" translate="yes" xml:space="preserve">
          <source>Solaris message catalog support</source>
          <target state="translated">Solaris メッセージカタログのサポート</target>
        </trans-unit>
        <trans-unit id="746314fb264ea6eec4bf113850f0134670017766" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; implementations, like &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt;, may not have the concept of an underlying buffer and calling this method will raise &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; Base&lt;/a&gt;などの一部の&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt;実装には、基礎となるバッファの概念がない場合があり、このメソッドを呼び出すと&lt;a href=&quot;#io.UnsupportedOperation&quot;&gt; &lt;code&gt;UnsupportedOperation&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3d6fc76fcbbc138b8e0f7902ff34457aaacbd05a" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; methods implemented by &lt;a href=&quot;#mailbox.Babyl&quot;&gt;&lt;code&gt;Babyl&lt;/code&gt;&lt;/a&gt; deserve special remarks:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Babyl&quot;&gt; &lt;code&gt;Babyl&lt;/code&gt; &lt;/a&gt;によって実装されたいくつかの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;メソッドは特別な注意に値します：</target>
        </trans-unit>
        <trans-unit id="9e1be1c56f561a506069b66c73a4209af2b1e801" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; methods implemented by &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; deserve special remarks:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt;によって実装されたいくつかの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;メソッドは、特別な注意に値します。</target>
        </trans-unit>
        <trans-unit id="1744956292619e2fdcf544eda0a358f99159f7a7" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; methods implemented by &lt;a href=&quot;#mailbox.MMDF&quot;&gt;&lt;code&gt;MMDF&lt;/code&gt;&lt;/a&gt; deserve special remarks:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MMDF&quot;&gt; &lt;code&gt;MMDF&lt;/code&gt; &lt;/a&gt;によって実装されるいくつかの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;メソッドは、特別な注意に値します。</target>
        </trans-unit>
        <trans-unit id="b74b1e0d3cd606bb3b62dafd7e61e30fe8a3e3a2" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; methods implemented by &lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; deserve special remarks:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt;によって実装されるいくつかの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;メソッドは特別な注意に値します：</target>
        </trans-unit>
        <trans-unit id="7cccc89378e1146e171b570397c46876b56f6950" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; methods implemented by &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; deserve special remarks:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt;によって実装されるいくつかの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;メソッドは特別な注意に値します：</target>
        </trans-unit>
        <trans-unit id="858a4ec383f8552f9b9c1c335cca4d2e83354d57" translate="yes" xml:space="preserve">
          <source>Some HTTP redirections require action from this module&amp;rsquo;s client code. If this is the case, &lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; is raised. See &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt; for details of the precise meanings of the various redirection codes.</source>
          <target state="translated">一部のHTTPリダイレクトでは、このモジュールのクライアントコードからのアクションが必要です。この場合、&lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;が発生します。参照してください。&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2616を&lt;/strong&gt;&lt;/a&gt;様々なリダイレクトコードの厳密な意味の詳細については。</target>
        </trans-unit>
        <trans-unit id="bc4270079f833fcf4aba6deaccfd8459f851bc02" translate="yes" xml:space="preserve">
          <source>Some JSON deserializer implementations may set limits on:</source>
          <target state="translated">いくつかのJSONデシリアライザの実装では、制限を設定することができます。</target>
        </trans-unit>
        <trans-unit id="069bda433c6521ce300c72fd8fb3c2ad06ed1b07" translate="yes" xml:space="preserve">
          <source>Some XML libraries like Python&amp;rsquo;s &lt;a href=&quot;xml.dom.pulldom#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt; retrieve document type definitions from remote or local locations. The feature has similar implications as the external entity expansion issue.</source>
          <target state="translated">Pythonの&lt;a href=&quot;xml.dom.pulldom#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; &lt;/a&gt;などの一部のXMLライブラリは、リモートまたはローカルの場所からドキュメントタイプ定義を取得します。この機能には、外部エンティティの拡張の問題と同様の影響があります。</target>
        </trans-unit>
        <trans-unit id="461553fb958b4ff465ef8bda50c5d9e441006a32" translate="yes" xml:space="preserve">
          <source>Some additional functions and data items are available for controlling the behavior of the module.</source>
          <target state="translated">モジュールの動作を制御するために、いくつかの追加関数とデータ項目が用意されています。</target>
        </trans-unit>
        <trans-unit id="2954200983076dc81c1cfed17400d0763a86823d" translate="yes" xml:space="preserve">
          <source>Some algorithms have known hash collision weaknesses, refer to the &amp;ldquo;See also&amp;rdquo; section at the end.</source>
          <target state="translated">一部のアルゴリズムにはハッシュ衝突の弱点が知られています。最後の「関連項目」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9d93c037a8a53574c038246c9a7e3b6cc4f7ee1f" translate="yes" xml:space="preserve">
          <source>Some applications are simply impossible in an event driven model with no access to a tree. Of course you could build some sort of tree yourself in SAX events, but the DOM allows you to avoid writing that code. The DOM is a standard tree representation for XML data.</source>
          <target state="translated">アプリケーションの中には、ツリーにアクセスできないイベント駆動モデルでは、単に不可能なものもあります。もちろん、SAX イベントで何らかのツリーを自分で構築することもできますが、DOM を使えばそのようなコードを書く必要がありません。DOM は XML データの標準的なツリー表現です。</target>
        </trans-unit>
        <trans-unit id="bf9adeaaf6184c28c136af80fd9dc4d94119c4ba" translate="yes" xml:space="preserve">
          <source>Some behavior may be platform dependent, since calls are made to the operating system socket APIs.</source>
          <target state="translated">オペレーティングシステムのソケットAPIへの呼び出しが行われるため、一部の動作はプラットフォームに依存する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6123ae6a320c13d19219c044eb0bd27fd70af0b1" translate="yes" xml:space="preserve">
          <source>Some behavior may be platform dependent, since calls are made to the operating system socket APIs. The installed version of OpenSSL may also cause variations in behavior. For example, TLSv1.1 and TLSv1.2 come with openssl version 1.0.1.</source>
          <target state="translated">オペレーティングシステムのソケット API を呼び出すため、一部の動作はプラットフォームに依存する可能性があります。また、インストールされている OpenSSL のバージョンによっても動作が異なる場合があります。例えば、TLSv1.1 と TLSv1.2 は openssl のバージョン 1.0.1 で提供されています。</target>
        </trans-unit>
        <trans-unit id="5980930c2354794e06487403bbbdb41b5401c779" translate="yes" xml:space="preserve">
          <source>Some buffers, like &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, do not have the concept of a single raw stream to return from this method. They raise &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;などの一部のバッファーには、このメソッドから返される単一のrawストリームの概念がありません。彼らは上げ&lt;a href=&quot;#io.UnsupportedOperation&quot;&gt; &lt;code&gt;UnsupportedOperation&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e739a715ac0baef30de59b5caa881c1120584f43" translate="yes" xml:space="preserve">
          <source>Some bytes and bytearray operations assume the use of ASCII compatible binary formats, and hence should be avoided when working with arbitrary binary data. These restrictions are covered below.</source>
          <target state="translated">いくつかのバイトやバイトアレイ操作は、ASCII互換のバイナリフォーマットを使用することを前提としているため、任意のバイナリデータを扱う際には避けた方が良いでしょう。これらの制限については以下で説明します。</target>
        </trans-unit>
        <trans-unit id="477ef1d156a40d10180dd0829a13e4e3708a27d9" translate="yes" xml:space="preserve">
          <source>Some callables may not be introspectable in certain implementations of Python. For example, in CPython, some built-in functions defined in C provide no metadata about their arguments.</source>
          <target state="translated">Pythonの特定の実装では、いくつかのコールアブルはイントロスペクトできないかもしれません。例えば、CPythonでは、Cで定義されているいくつかの組み込み関数は引数のメタデータを提供しません。</target>
        </trans-unit>
        <trans-unit id="324bfdeb0312d42d84afb2e22d42ceba447a5dc2" translate="yes" xml:space="preserve">
          <source>Some character sets must be converted before they can be used in email headers or bodies. If the &lt;em&gt;input_charset&lt;/em&gt; is one of them, this attribute will contain the name of the character set output will be converted to. Otherwise, it will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">一部の文字セットは、電子メールのヘッダーまたは本文で使用する前に変換する必要があります。場合&lt;em&gt;input_charsetは&lt;/em&gt;そのうちの一つである、この属性は、に変換される文字セットの出力の名前が含まれます。それ以外の場合は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="6e469b1049493e95933ce98692c1420227f07982" translate="yes" xml:space="preserve">
          <source>Some characters, like &lt;code&gt;'|'&lt;/code&gt; or &lt;code&gt;'('&lt;/code&gt;, are special. Special characters either stand for classes of ordinary characters, or affect how the regular expressions around them are interpreted.</source>
          <target state="translated">&lt;code&gt;'|'&lt;/code&gt; などの一部の文字 または &lt;code&gt;'('&lt;/code&gt; は特殊です。特殊文字は、通常の文字のクラスを表すか、それらの周囲の正規表現の解釈に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="ba0a0ebaa5593ce4164e9b3553c1fd55bd0de943" translate="yes" xml:space="preserve">
          <source>Some collection classes are mutable. The methods that add, subtract, or rearrange their members in place, and don&amp;rsquo;t return a specific item, never return the collection instance itself but &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">一部のコレクションクラスは変更可能です。メンバーを所定の位置に追加、削除、または再配置し、特定のアイテムを返さないメソッドは、コレクションインスタンス自体を返すのではなく、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="db1c8eb93e61e194222c014b68754b481b8793b8" translate="yes" xml:space="preserve">
          <source>Some command-line arguments should be selected from a restricted set of values. These can be handled by passing a container object as the &lt;em&gt;choices&lt;/em&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;. When the command line is parsed, argument values will be checked, and an error message will be displayed if the argument was not one of the acceptable values:</source>
          <target state="translated">一部のコマンドライン引数は、制限された値のセットから選択する必要があります。これらは、&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;選択肢&lt;/em&gt;キーワード引数としてコンテナオブジェクトを渡すことで処理できます。コマンドラインが解析されると、引数の値がチェックされ、引数が許容値の1つでない場合はエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="86963104a1d2252987f375d6b94d0224236c6d13" translate="yes" xml:space="preserve">
          <source>Some configuration files are known to include settings without values, but which otherwise conform to the syntax supported by &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;allow_no_value&lt;/em&gt; parameter to the constructor can be used to indicate that such values should be accepted:</source>
          <target state="translated">一部の構成ファイルには、値のない設定が含まれていることがわかっていますが、それ以外は&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; で&lt;/a&gt;サポートされている構文に準拠しています。コンストラクターの&lt;em&gt;allow_no_value&lt;/em&gt;パラメーターを使用して、そのような値を受け入れる必要があることを示すことができます。</target>
        </trans-unit>
        <trans-unit id="382f9a23438232754aeea047f21ca344f1caea98" translate="yes" xml:space="preserve">
          <source>Some constants are available to specify character cell attributes. The exact constants available are system dependent.</source>
          <target state="translated">文字セル属性を指定するために利用できる定数がいくつかあります。利用できる正確な定数はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="7cb7c82b2832b91b67f46b3b5998672c3febbba5" translate="yes" xml:space="preserve">
          <source>Some convenience constants are also provided:</source>
          <target state="translated">いくつかの便利な定数も用意されています。</target>
        </trans-unit>
        <trans-unit id="4d66ad30e7544773f1e166b93c6b7b0b2c48a93f" translate="yes" xml:space="preserve">
          <source>Some curses routines that return an integer, such as &lt;a href=&quot;#curses.napms&quot;&gt;&lt;code&gt;napms()&lt;/code&gt;&lt;/a&gt;, return &lt;a href=&quot;#curses.OK&quot;&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/a&gt; upon success.</source>
          <target state="translated">&lt;a href=&quot;#curses.napms&quot;&gt; &lt;code&gt;napms()&lt;/code&gt; &lt;/a&gt;などの整数を返す一部のcursesルーチンは、成功すると&lt;a href=&quot;#curses.OK&quot;&gt; &lt;code&gt;OK&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="2c92b303819f8ae9d7e5faa8741a635498db3788" translate="yes" xml:space="preserve">
          <source>Some curses routines that return an integer, such as &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt;, return &lt;a href=&quot;#curses.ERR&quot;&gt;&lt;code&gt;ERR&lt;/code&gt;&lt;/a&gt; upon failure.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;などの整数を返す一部のcursesルーチンは、失敗すると&lt;a href=&quot;#curses.ERR&quot;&gt; &lt;code&gt;ERR&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ec961e8723a2544733b5d440b67888087c355f94" translate="yes" xml:space="preserve">
          <source>Some details you should read once, but won&amp;rsquo;t need to remember:</source>
          <target state="translated">一度読む必要があるが覚えておく必要のない詳細：</target>
        </trans-unit>
        <trans-unit id="dd9b0eb53fe133d1b036f186373a577e3b67aec1" translate="yes" xml:space="preserve">
          <source>Some differences from &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; still remain:</source>
          <target state="translated">&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; との&lt;/a&gt;いくつかの違いはまだ残っています：</target>
        </trans-unit>
        <trans-unit id="e661e6b84513de22d4c72503c2be504923dfafa1" translate="yes" xml:space="preserve">
          <source>Some email package methods accept a &lt;em&gt;policy&lt;/em&gt; keyword argument, allowing the policy to be overridden for that method. For example, the following code uses the &lt;a href=&quot;email.compat32-message#email.message.Message.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;msg&lt;/em&gt; object from the previous example and writes the message to a file using the native line separators for the platform on which it is running:</source>
          <target state="translated">一部の電子メールパッケージメソッドは&lt;em&gt;ポリシー&lt;/em&gt;キーワード引数を受け入れ、そのメソッドのポリシーをオーバーライドできるようにします。たとえば、次のコードは、前の例の&lt;em&gt;msg&lt;/em&gt;オブジェクトの&lt;a href=&quot;email.compat32-message#email.message.Message.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt;メソッドを使用し、それが実行されているプラ​​ットフォームのネイティブ行区切り文字を使用してメッセージをファイルに書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae96a67544f4a559de0d9571f9755fc08f7af089" translate="yes" xml:space="preserve">
          <source>Some example usage:</source>
          <target state="translated">使用例をいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="e90c87a504e9a00e3d5b0798ff228a10c31f6199" translate="yes" xml:space="preserve">
          <source>Some examples of use:</source>
          <target state="translated">使用例をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="dfea6f5ecfc0d1c82193edfc9084bd4b9ca9553c" translate="yes" xml:space="preserve">
          <source>Some facts and figures:</source>
          <target state="translated">いくつかの事実と数字。</target>
        </trans-unit>
        <trans-unit id="e7644cbbf1148de29da47da02a871bc5f374ccd0" translate="yes" xml:space="preserve">
          <source>Some hints on localizing your Python modules and applications are also given.</source>
          <target state="translated">また、Pythonモジュールやアプリケーションをローカライズする際のヒントも紹介しています。</target>
        </trans-unit>
        <trans-unit id="8fcc2a89c40ddcf069d02f6c35d8a060b872d27b" translate="yes" xml:space="preserve">
          <source>Some non-standards-compliant messages may not be internally consistent about their &lt;em&gt;multipart&lt;/em&gt;-edness. Such messages may have a &lt;em&gt;Content-Type&lt;/em&gt; header of type &lt;em&gt;multipart&lt;/em&gt;, but their &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method may return &lt;code&gt;False&lt;/code&gt;. If such messages were parsed with the &lt;a href=&quot;#email.parser.FeedParser&quot;&gt;&lt;code&gt;FeedParser&lt;/code&gt;&lt;/a&gt;, they will have an instance of the &lt;code&gt;MultipartInvariantViolationDefect&lt;/code&gt; class in their &lt;em&gt;defects&lt;/em&gt; attribute list. See &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">標準に準拠していないメッセージの中には、&lt;em&gt;マルチパート&lt;/em&gt;版について内部的に一貫していないものがあります。このようなメッセージには、&lt;em&gt;multipart &lt;/em&gt;&lt;em&gt;型のContent-Type&lt;/em&gt;ヘッダーが含まれる場合がありますが、それらの&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;False&lt;/code&gt; を返す場合があります。そのようなメッセージが&lt;a href=&quot;#email.parser.FeedParser&quot;&gt; &lt;code&gt;FeedParser&lt;/code&gt; &lt;/a&gt;で解析された場合、それらの&lt;em&gt;欠陥&lt;/em&gt;属性リストには &lt;code&gt;MultipartInvariantViolationDefect&lt;/code&gt; クラスのインスタンスが含まれます。詳細については、&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4d93719288bc013ae713244c42dae0cceef77bf" translate="yes" xml:space="preserve">
          <source>Some notes related to the use of &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;の使用に関する注意事項：</target>
        </trans-unit>
        <trans-unit id="d055c68a1f9a30858c019d3e129bcbba97c82e3a" translate="yes" xml:space="preserve">
          <source>Some of these may not be available on all Unix platforms, since there is some variation. These constants are defined where they are defined by the underlying platform.</source>
          <target state="translated">これらの中には、いくつかのバリエーションがあるため、すべてのUnixプラットフォームで利用できないものもあるかもしれません。これらの定数は、基礎となるプラットフォームで定義されているところで定義されています。</target>
        </trans-unit>
        <trans-unit id="75a902aa6c33919bdd53e123902d6da79a76dc04" translate="yes" xml:space="preserve">
          <source>Some of this package&amp;rsquo;s functionality requires a functioning shared semaphore implementation on the host operating system. Without one, the &lt;code&gt;multiprocessing.synchronize&lt;/code&gt; module will be disabled, and attempts to import it will result in an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt; for additional information.</source>
          <target state="translated">このパッケージの機能の一部には、ホストオペレーティングシステム上で機能する共有セマフォの実装が必要です。これがないと、 &lt;code&gt;multiprocessing.synchronize&lt;/code&gt; モジュールが無効になり、それをインポートしようとすると&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; が発生し&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="91c98dc04a804ec998fcf050085ad0cc7a4b97f0" translate="yes" xml:space="preserve">
          <source>Some operations are indeterminate and return &lt;code&gt;NaN&lt;/code&gt;, or if the &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt; signal is trapped, raise an exception. For example, &lt;code&gt;0/0&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt; which means &amp;ldquo;not a number&amp;rdquo;. This variety of &lt;code&gt;NaN&lt;/code&gt; is quiet and, once created, will flow through other computations always resulting in another &lt;code&gt;NaN&lt;/code&gt;. This behavior can be useful for a series of computations that occasionally have missing inputs &amp;mdash; it allows the calculation to proceed while flagging specific results as invalid.</source>
          <target state="translated">一部の操作は不確定であり、 &lt;code&gt;NaN&lt;/code&gt; を返します。または、&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;シグナルがトラップされた場合は、例外を発生させます。たとえば、 &lt;code&gt;0/0&lt;/code&gt; は「数値ではない」という意味の &lt;code&gt;NaN&lt;/code&gt; を返します。このさまざまな &lt;code&gt;NaN&lt;/code&gt; は静かで、いったん作成されると、他の計算を通過して常に別の &lt;code&gt;NaN&lt;/code&gt; を生成します。この動作は、入力が欠落することがある一連の計算に役立ちます。これにより、特定の結果に無効のフラグを付けながら計算を続行できます。</target>
        </trans-unit>
        <trans-unit id="7b557c51edcda0e4f442b7c9330f85f6f453f537" translate="yes" xml:space="preserve">
          <source>Some operations are supported by several object types; in particular, practically all objects can be compared for equality, tested for truth value, and converted to a string (with the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function or the slightly different &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; function). The latter function is implicitly used when an object is written by the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">一部の操作は、いくつかのオブジェクトタイプでサポートされています。特に、実質的にすべてのオブジェクトの同等性を比較し、真理値をテストし、文字列に変換できます（&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;関数または少し異なる&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;関数を使用）。後者の関数は、オブジェクトが&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数によって書き込まれるときに暗黙的に使用されます。</target>
        </trans-unit>
        <trans-unit id="a1c79bf084b2f648a7e93a38d6567750a085a470" translate="yes" xml:space="preserve">
          <source>Some options and methods for menus manipulate specific menu entries. Anytime a menu index is needed for an option or a parameter, you may pass in:</source>
          <target state="translated">メニューのオプションやメソッドの中には、特定のメニュー項目を操作するものがあります。オプションやパラメータのためにメニューインデックスが必要なときはいつでも、ここに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9757ab2b3daeeb0763d93b2e5a1ee3458914d6b5" translate="yes" xml:space="preserve">
          <source>Some options, like &lt;code&gt;bg&lt;/code&gt; are synonyms for common options with long names (&lt;code&gt;bg&lt;/code&gt; is shorthand for &amp;ldquo;background&amp;rdquo;). Passing the &lt;code&gt;config()&lt;/code&gt; method the name of a shorthand option will return a 2-tuple, not 5-tuple. The 2-tuple passed back will contain the name of the synonym and the &amp;ldquo;real&amp;rdquo; option (such as &lt;code&gt;('bg', 'background')&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;bg&lt;/code&gt; などの一部のオプションは、長い名前を持つ一般的なオプションの同義語です（ &lt;code&gt;bg&lt;/code&gt; は「背景」の省略形です）。 &lt;code&gt;config()&lt;/code&gt; メソッドに短縮オプションの名前を渡すと、5タプルではなく2タプルが返されます。返される2タプルには、同義語の名前と「実際の」オプション（ &lt;code&gt;('bg', 'background')&lt;/code&gt; ）が含まれます。</target>
        </trans-unit>
        <trans-unit id="e358554c81bdb6a2f86dd431203386a388bd8ba2" translate="yes" xml:space="preserve">
          <source>Some other ways to execute the regression tests depend on what platform the tests are being executed on. On Unix, you can run &lt;strong&gt;make test&lt;/strong&gt; at the top-level directory where Python was built. On Windows, executing &lt;strong&gt;rt.bat&lt;/strong&gt; from your &lt;code&gt;PCbuild&lt;/code&gt; directory will run all regression tests.</source>
          <target state="translated">回帰テストを実行する他のいくつかの方法は、テストが実行されているプラ​​ットフォームによって異なります。Unixでは、Pythonがビルドされた最上位ディレクトリで&lt;strong&gt;make test&lt;/strong&gt;を実行できます。Windowsでは、実行&lt;strong&gt;rt.bat&lt;/strong&gt;あなたから &lt;code&gt;PCbuild&lt;/code&gt; のディレクトリには、すべての回帰テストを実行します。</target>
        </trans-unit>
        <trans-unit id="55b74d29b4c99cc5fe31ca416b8eb37b6d6db4a8" translate="yes" xml:space="preserve">
          <source>Some programs like to display additional description of the program after the description of the arguments. Such text can be specified using the &lt;code&gt;epilog=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">いくつかのプログラムは、引数の説明の後にプログラムの追加の説明を表示したいです。このようなテキストは、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;epilog=&lt;/code&gt; 引数を使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="2c4a9ce4504d6496bf2f58b837514e16cc8f33aa" translate="yes" xml:space="preserve">
          <source>Some rules:</source>
          <target state="translated">いくつかのルールがあります。</target>
        </trans-unit>
        <trans-unit id="5d35558b2d888eed90d62a1ef3c06171e23d8b85" translate="yes" xml:space="preserve">
          <source>Some sequence types (such as &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;) only support item sequences that follow specific patterns, and hence don&amp;rsquo;t support sequence concatenation or repetition.</source>
          <target state="translated">一部のシーケンスタイプ（&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;など）は、特定のパターンに従うアイテムシーケンスのみをサポートしているため、シーケンスの連結または繰り返しをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6019a76104eb5cbcb6da25b722ed299ac8ea916b" translate="yes" xml:space="preserve">
          <source>Some shared libraries not only export functions, they also export variables. An example in the Python library itself is the &lt;a href=&quot;https://docs.python.org/3.8/c-api/init.html#c.Py_OptimizeFlag&quot;&gt;&lt;code&gt;Py_OptimizeFlag&lt;/code&gt;&lt;/a&gt;, an integer set to 0, 1, or 2, depending on the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt; flag given on startup.</source>
          <target state="translated">一部の共有ライブラリは、関数をエクスポートするだけでなく、変数もエクスポートします。Pythonライブラリ自体の例は&lt;a href=&quot;https://docs.python.org/3.8/c-api/init.html#c.Py_OptimizeFlag&quot;&gt; &lt;code&gt;Py_OptimizeFlag&lt;/code&gt; &lt;/a&gt;で、起動時に指定された&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;フラグに応じて0、1、または2に設定された整数です。</target>
        </trans-unit>
        <trans-unit id="50223e1580d8c9c20d9ff6556d5b1f7567815e2e" translate="yes" xml:space="preserve">
          <source>Some shared libraries not only export functions, they also export variables. An example in the Python library itself is the &lt;a href=&quot;https://docs.python.org/3.9/c-api/init.html#c.Py_OptimizeFlag&quot;&gt;&lt;code&gt;Py_OptimizeFlag&lt;/code&gt;&lt;/a&gt;, an integer set to 0, 1, or 2, depending on the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt; flag given on startup.</source>
          <target state="translated">一部の共有ライブラリは、関数をエクスポートするだけでなく、変数もエクスポートします。Pythonライブラリ自体の例は、起動時に指定された&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;フラグに応じて、0、1、または2に設定された整数である&lt;a href=&quot;https://docs.python.org/3.9/c-api/init.html#c.Py_OptimizeFlag&quot;&gt; &lt;code&gt;Py_OptimizeFlag&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5815d68e03ac19235c3460f5c1e7c11be8396355" translate="yes" xml:space="preserve">
          <source>Some simple format string examples:</source>
          <target state="translated">いくつかの簡単なフォーマット文字列の例。</target>
        </trans-unit>
        <trans-unit id="f37c7f4b4f8ebe756b6b52ddadae511dba75e467" translate="yes" xml:space="preserve">
          <source>Some support for logging is available. Note, however, that the &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package does not use process shared locks so it is possible (depending on the handler type) for messages from different processes to get mixed up.</source>
          <target state="translated">ロギングの一部のサポートが利用可能です。ただし、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージはプロセス共有ロックを使用しないため、（ハンドラーのタイプによっては）異なるプロセスからのメッセージが混同される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0c33aef196b51c22bd3bbd63fea24a0411f546a2" translate="yes" xml:space="preserve">
          <source>Some systems do not indicate the truncated length of ancillary data items which have been only partially received. If an item appears to extend beyond the end of the buffer, &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; will issue a &lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt;, and will return the part of it which is inside the buffer provided it has not been truncated before the start of its associated data.</source>
          <target state="translated">一部のシステムは、部分的にしか受信されていない補助データ項目の切り捨てられた長さを示しません。アイテムがバッファーの終わりを超えて拡張しているように見える場合、&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt;を発行し、関連データの開始前に切り捨てられていなければ、バッファー内にあるその一部を返します。</target>
        </trans-unit>
        <trans-unit id="eb4d3732f1b0979ebe6f2671341189090bfecdec" translate="yes" xml:space="preserve">
          <source>Some systems truncate &lt;code&gt;nodename&lt;/code&gt; to 8 characters or to the leading component; a better way to get the hostname is &lt;a href=&quot;socket#socket.gethostname&quot;&gt;&lt;code&gt;socket.gethostname()&lt;/code&gt;&lt;/a&gt; or even &lt;code&gt;socket.gethostbyaddr(socket.gethostname())&lt;/code&gt;.</source>
          <target state="translated">一部のシステムでは、 &lt;code&gt;nodename&lt;/code&gt; が8文字または先頭のコンポーネントに切り捨てられます。ホスト名を取得するより良い方法は、&lt;a href=&quot;socket#socket.gethostname&quot;&gt; &lt;code&gt;socket.gethostname()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;socket.gethostbyaddr(socket.gethostname())&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f062b696dd3b4a1f08358e48a84e2f7596b6f20c" translate="yes" xml:space="preserve">
          <source>Some token (such as a start tag) was not closed before the end of the stream or the next token was encountered.</source>
          <target state="translated">一部のトークン(スタートタグなど)は、ストリームの終了前に閉じられなかったり、次のトークンに遭遇したりしました。</target>
        </trans-unit>
        <trans-unit id="f3063727447b41cfade1bf948ae9713b8965fb1f" translate="yes" xml:space="preserve">
          <source>Some transports, including SSL, don&amp;rsquo;t support half-closed connections, in which case returning true from this method will result in the connection being closed.</source>
          <target state="translated">SSLを含む一部のトランスポートは、ハーフクローズ接続をサポートしていません。その場合、このメソッドからtrueを返すと、接続がクローズされます。</target>
        </trans-unit>
        <trans-unit id="d0a3cd1b0c707cb6d5777effd7a33be1d19c0ee9" translate="yes" xml:space="preserve">
          <source>Some unspecified syntax error was encountered.</source>
          <target state="translated">いくつかの指定されていない構文エラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="d2b4211a29bf3ed2ac07b85e45f10b862862be5c" translate="yes" xml:space="preserve">
          <source>Some useful Emacs bindings are inherited from Tcl/Tk:</source>
          <target state="translated">いくつかの便利な Emacs バインディングは Tcl/Tk から継承されています。</target>
        </trans-unit>
        <trans-unit id="92f5f36b05a235aac1e48a14317ed367e98521ab" translate="yes" xml:space="preserve">
          <source>Some users will find that they have existing test code that they would like to run from &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;, without converting every old test function to a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">一部のユーザーは、古いテスト関数をすべて&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;サブクラスに変換せずに、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;から実行したい既存のテストコードがあることに気付くでしょう。</target>
        </trans-unit>
        <trans-unit id="bb005e8220af0e93aabf3b042a1cb8709cdddb84" translate="yes" xml:space="preserve">
          <source>Some ways to invoke foreign function calls may raise an auditing event &lt;code&gt;ctypes.call_function&lt;/code&gt; with arguments &lt;code&gt;function pointer&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt;.</source>
          <target state="translated">外部関数呼び出しを呼び出すためのいくつかの方法では、引数 &lt;code&gt;function pointer&lt;/code&gt; と &lt;code&gt;arguments&lt;/code&gt; を含む監査イベント &lt;code&gt;ctypes.call_function&lt;/code&gt; が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="3afe582287f97ef2d02674fa2b4ef3be293e8d8d" translate="yes" xml:space="preserve">
          <source>Something other than whitespace occurred after the document element.</source>
          <target state="translated">ドキュメント要素の後に空白以外の何かが発生しました。</target>
        </trans-unit>
        <trans-unit id="1799711571f70bda7a602563ea0aab357654f2d5" translate="yes" xml:space="preserve">
          <source>Sometimes (e.g. when using &lt;a href=&quot;#parents&quot;&gt;parents&lt;/a&gt;) it may be useful to simply override any older arguments with the same option string. To get this behavior, the value &lt;code&gt;'resolve'&lt;/code&gt; can be supplied to the &lt;code&gt;conflict_handler=&lt;/code&gt; argument of &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">時々（たとえば、&lt;a href=&quot;#parents&quot;&gt;parents&lt;/a&gt;を使用する場合）、同じオプション文字列で古い引数を単にオーバーライドすると便利な場合があります。この動作を実現するには、値 &lt;code&gt;'resolve'&lt;/code&gt; を&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;conflict_handler=&lt;/code&gt; 引数に指定できます。</target>
        </trans-unit>
        <trans-unit id="d18328aefc93c40311f1163c07618fc8d50ccb76" translate="yes" xml:space="preserve">
          <source>Sometimes a C api function expects a &lt;em&gt;pointer&lt;/em&gt; to a data type as parameter, probably to write into the corresponding location, or if the data is too large to be passed by value. This is also known as &lt;em&gt;passing parameters by reference&lt;/em&gt;.</source>
          <target state="translated">時々、C api関数は、おそらく対応する場所に書き込むため、またはデータが大きすぎて値で渡すことができない場合、パラメーターとしてデータ型への&lt;em&gt;ポインター&lt;/em&gt;を期待します。これは&lt;em&gt;、参照渡しパラメーター&lt;/em&gt;とも呼ば&lt;em&gt;れます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9246ff7838479f109744c1c53f0fe88f0aee363" translate="yes" xml:space="preserve">
          <source>Sometimes a script may only parse a few of the command-line arguments, passing the remaining arguments on to another script or program. In these cases, the &lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt;&lt;code&gt;parse_known_args()&lt;/code&gt;&lt;/a&gt; method can be useful. It works much like &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; except that it does not produce an error when extra arguments are present. Instead, it returns a two item tuple containing the populated namespace and the list of remaining argument strings.</source>
          <target state="translated">スクリプトがコマンドライン引数の一部のみを解析し、残りの引数を別のスクリプトまたはプログラムに渡す場合があります。このような場合、&lt;a href=&quot;#argparse.ArgumentParser.parse_known_args&quot;&gt; &lt;code&gt;parse_known_args()&lt;/code&gt; &lt;/a&gt;メソッドが役立ちます。余分な引数が存在するときにエラーを生成しないことを除いて、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; と&lt;/a&gt;ほとんど同じように機能します。代わりに、入力された名前空間と残りの引数文字列のリストを含む2つの項目タプルを返します。</target>
        </trans-unit>
        <trans-unit id="3d2526df93c8ba0b196508aa151c14e075f97491" translate="yes" xml:space="preserve">
          <source>Sometimes ctypes data instances do not own the memory block they contain, instead they share part of the memory block of a base object. The &lt;a href=&quot;#ctypes._CData._b_base_&quot;&gt;&lt;code&gt;_b_base_&lt;/code&gt;&lt;/a&gt; read-only member is the root ctypes object that owns the memory block.</source>
          <target state="translated">場合によっては、ctypesデータインスタンスはそれらが含むメモリブロックを所有せず、代わりにベースオブジェクトのメモリブロックの一部を共有します。&lt;a href=&quot;#ctypes._CData._b_base_&quot;&gt; &lt;code&gt;_b_base_&lt;/code&gt; は&lt;/a&gt;リードオンリーメンバーは、メモリブロックを所有するルートのctypesオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="15578b22d3377ad5d4b37a96c789aa5b733b9ccf" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to be able to reproduce the sequences given by a pseudo random number generator. By re-using a seed value, the same sequence should be reproducible from run to run as long as multiple threads are not running.</source>
          <target state="translated">擬似乱数発生器によって与えられたシーケンスを再現できると便利な場合があります。シード値を再利用することで、複数のスレッドが実行されていない限り、同じシーケンスを実行から実行まで再現できるはずです。</target>
        </trans-unit>
        <trans-unit id="22d647cacfb33b27fb927976c792830e4a0124f3" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to be able to reproduce the sequences given by a pseudo-random number generator. By re-using a seed value, the same sequence should be reproducible from run to run as long as multiple threads are not running.</source>
          <target state="translated">擬似乱数発生器によって与えられたシーケンスを再現できると便利な場合があります。シード値を再利用することで、複数のスレッドが実行されていない限り、同じシーケンスを実行から実行まで再現できるはずです。</target>
        </trans-unit>
        <trans-unit id="7f8079da8161ac16ffb6db52c1c908288cfea4b5" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to force hash function to produce different digests for the same input for different purposes. Quoting the authors of the Skein hash function:</source>
          <target state="translated">同じ入力に対して、異なる目的のために異なるダイジェストを生成するために、ハッシュ関数を強制的に生成することが有用な場合があります。Skeinのハッシュ関数の作者を引用します。</target>
        </trans-unit>
        <trans-unit id="0a21da0febebbf48386da7e5184c0de907bc2665" translate="yes" xml:space="preserve">
          <source>Sometimes it may be useful to have an ArgumentParser parse arguments other than those of &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;. This can be accomplished by passing a list of strings to &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. This is useful for testing at the interactive prompt:</source>
          <target state="translated">ArgumentParserが&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;以外の引数を解析すると便利な場合があります。これは、文字列のリストを&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; に&lt;/a&gt;渡すことで実現できます。これは、対話型プロンプトでのテストに役立ちます。</target>
        </trans-unit>
        <trans-unit id="7ca8cc1698144dc6c714e98990a4fcdb60af1ec6" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s useful to access members in enumerations programmatically (i.e. situations where &lt;code&gt;Color.RED&lt;/code&gt; won&amp;rsquo;t do because the exact color is not known at program-writing time). &lt;code&gt;Enum&lt;/code&gt; allows such access:</source>
          <target state="translated">プログラムで列挙型のメンバーにアクセスすると便利な場合があります（つまり、正確な色がプログラムの作成時に不明であるため、 &lt;code&gt;Color.RED&lt;/code&gt; が機能しない状況）。 &lt;code&gt;Enum&lt;/code&gt; はそのようなアクセスを許可します：</target>
        </trans-unit>
        <trans-unit id="0c2b8c3f100c59b30dc2eb0ad807dd3f46a25b2f" translate="yes" xml:space="preserve">
          <source>Sometimes when testing you need to test that a specific object is passed as an argument to another method, or returned. It can be common to create named sentinel objects to test this. &lt;a href=&quot;#unittest.mock.sentinel&quot;&gt;&lt;code&gt;sentinel&lt;/code&gt;&lt;/a&gt; provides a convenient way of creating and testing the identity of objects like this.</source>
          <target state="translated">テスト時に、特定のオブジェクトが引数として別のメソッドに渡されるか、返されるかをテストする必要がある場合があります。これをテストするために名前付きの番兵オブジェクトを作成することは一般的です。&lt;a href=&quot;#unittest.mock.sentinel&quot;&gt; &lt;code&gt;sentinel&lt;/code&gt; &lt;/a&gt;は、このようなオブジェクトのアイデンティティを作成およびテストする便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="b0c62e7b4bd4a77b63d061dd6cab92f3099515c5" translate="yes" xml:space="preserve">
          <source>Sometimes you have instances of incompatible types. In C, you can cast one type into another type. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; provides a &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; function which can be used in the same way. The &lt;code&gt;Bar&lt;/code&gt; structure defined above accepts &lt;code&gt;POINTER(c_int)&lt;/code&gt; pointers or &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt; arrays for its &lt;code&gt;values&lt;/code&gt; field, but not instances of other types:</source>
          <target state="translated">互換性のない型のインスタンスがある場合があります。Cでは、ある型を別の型にキャストできます。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;は、同じ方法で使用できる&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;関数を提供します。 &lt;code&gt;Bar&lt;/code&gt; 上記で定義された構造が受け入れ &lt;code&gt;POINTER(c_int)&lt;/code&gt; ポインタまたは&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; の&lt;/a&gt;そのための配列を &lt;code&gt;values&lt;/code&gt; フィールドではなく、他のタイプのインスタンス。</target>
        </trans-unit>
        <trans-unit id="1de7295cef05fd67542475d8c62ea31844fe3695" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to make assertions about &lt;em&gt;some&lt;/em&gt; of the arguments in a call to mock, but either not care about some of the arguments or want to pull them individually out of &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt; and make more complex assertions on them.</source>
          <target state="translated">モックの呼び出しで&lt;em&gt;一部&lt;/em&gt;の引数についてアサーションを作成する必要がある場合がありますが、&lt;em&gt;一部&lt;/em&gt;の引数については気にしないか、&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;call_args&lt;/code&gt; &lt;/a&gt;から個別に引き出してより複雑なアサーションを作成したい場合があります。</target>
        </trans-unit>
        <trans-unit id="a159f0dbf3d6a953ee1c7edc40941864b8a1a37d" translate="yes" xml:space="preserve">
          <source>Sometimes, &lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt;&lt;code&gt;dispatch_table&lt;/code&gt;&lt;/a&gt; may not be flexible enough. In particular we may want to customize pickling based on another criterion than the object&amp;rsquo;s type, or we may want to customize the pickling of functions and classes.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt; &lt;code&gt;dispatch_table&lt;/code&gt; &lt;/a&gt;は十分な柔軟性がない場合があります。特に、オブジェクトのタイプ以外の基準に基づいて酸洗いをカスタマイズしたい場合や、関数やクラスの酸洗いをカスタマイズしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="ceee75dfd6c7c4dc9508eb500640f22b782d5e56" translate="yes" xml:space="preserve">
          <source>Sometimes, dlls export functions with names which aren&amp;rsquo;t valid Python identifiers, like &lt;code&gt;&quot;??2@YAPAXI@Z&quot;&lt;/code&gt;. In this case you have to use &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; to retrieve the function:</source>
          <target state="translated">時々、 &lt;code&gt;&quot;??2@YAPAXI@Z&quot;&lt;/code&gt; ような有効なPython識別子ではない名前の関数をエクスポートします。この場合、関数を取得するには&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6a2cdf43fc01da6485e4ca8da94db3b1e65a672" translate="yes" xml:space="preserve">
          <source>Sometimes, for example when dealing with a particularly long argument lists, it may make sense to keep the list of arguments in a file rather than typing it out at the command line. If the &lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; argument is given to the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor, then arguments that start with any of the specified characters will be treated as files, and will be replaced by the arguments they contain. For example:</source>
          <target state="translated">ときどき、たとえば、特に長い引数リストを扱う場合、引数のリストをコマンドラインで入力するのではなく、ファイルに保持する方が理にかなっている場合があります。場合 &lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; 引数がに与えられ&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt;コンストラクタは、指定された文字のいずれかで始まる引数はファイルとして扱われ、そこに含まれる引数によって置き換えられます。例えば：</target>
        </trans-unit>
        <trans-unit id="25f7dce8656405c9c7ae740a340d9cd3cd6f2dd5" translate="yes" xml:space="preserve">
          <source>Sometimes, several parsers share a common set of arguments. Rather than repeating the definitions of these arguments, a single parser with all the shared arguments and passed to &lt;code&gt;parents=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; can be used. The &lt;code&gt;parents=&lt;/code&gt; argument takes a list of &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects, collects all the positional and optional actions from them, and adds these actions to the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object being constructed:</source>
          <target state="translated">場合によっては、いくつかのパーサーが共通の引数セットを共有します。これらの引数の定義を繰り返すのではなく、すべての共有引数を持ち、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;parents=&lt;/code&gt; 引数に渡される単一のパーサーを使用できます。 &lt;code&gt;parents=&lt;/code&gt; 引数はリストの受け取り&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;オブジェクトを、それらのすべての位置とオプションのアクションを収集し、これらのアクションを追加し&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt;オブジェクトが構築されています：</target>
        </trans-unit>
        <trans-unit id="e85971c3dfc185a692de90d85dca37587c22b422" translate="yes" xml:space="preserve">
          <source>Sort has two arguments before the &lt;em&gt;search_criterion&lt;/em&gt; argument(s); a parenthesized list of &lt;em&gt;sort_criteria&lt;/em&gt;, and the searching &lt;em&gt;charset&lt;/em&gt;. Note that unlike &lt;code&gt;search&lt;/code&gt;, the searching &lt;em&gt;charset&lt;/em&gt; argument is mandatory. There is also a &lt;code&gt;uid sort&lt;/code&gt; command which corresponds to &lt;code&gt;sort&lt;/code&gt; the way that &lt;code&gt;uid search&lt;/code&gt; corresponds to &lt;code&gt;search&lt;/code&gt;. The &lt;code&gt;sort&lt;/code&gt; command first searches the mailbox for messages that match the given searching criteria using the charset argument for the interpretation of strings in the searching criteria. It then returns the numbers of matching messages.</source>
          <target state="translated">Sortには、&lt;em&gt;search_criterion&lt;/em&gt;引数の前に2つの引数があります。括弧で&lt;em&gt;囲まれたsort_criteriaの&lt;/em&gt;リスト、および検索&lt;em&gt;文字セット&lt;/em&gt;。 &lt;code&gt;search&lt;/code&gt; とは異なり、searching &lt;em&gt;charset&lt;/em&gt;引数は必須です。 &lt;code&gt;uid search&lt;/code&gt; がsearchに対応する方法を &lt;code&gt;sort&lt;/code&gt; するために対応する &lt;code&gt;uid sort&lt;/code&gt; コマンドもあり &lt;code&gt;search&lt;/code&gt; 。 &lt;code&gt;sort&lt;/code&gt; 、検索条件の文字列の解釈のためのcharset引数を使用して、指定された検索条件に一致するメッセージのためのコマンド最初に検索ボックス。次に、一致するメッセージの数を返します。</target>
        </trans-unit>
        <trans-unit id="8abcbc7e95beb562f6c793694275da711593f81a" translate="yes" xml:space="preserve">
          <source>Sort stability: how do you get two tasks with equal priorities to be returned in the order they were originally added?</source>
          <target state="translated">ソートの安定性:優先順位が同じ2つのタスクを、元々追加されていた順番に戻すにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="e03c3dc5acefdf2ee00e5f6a1e5c29f1f69fcb77" translate="yes" xml:space="preserve">
          <source>Sort the output of dictionaries alphabetically by key.</source>
          <target state="translated">辞書の出力をキーごとにアルファベット順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="d4967560e47cea508b625f6ea18e37a2dbc5af00" translate="yes" xml:space="preserve">
          <source>SortKey.CALLS</source>
          <target state="translated">SortKey.CALLS</target>
        </trans-unit>
        <trans-unit id="987c8ebb2211db9972145e221416483cd5acd7b8" translate="yes" xml:space="preserve">
          <source>SortKey.CUMULATIVE</source>
          <target state="translated">SortKey.CUMULATIVE</target>
        </trans-unit>
        <trans-unit id="3ac97d28a4a00a256b70eba8156887bc355e2d87" translate="yes" xml:space="preserve">
          <source>SortKey.FILENAME</source>
          <target state="translated">SortKey.FILENAME</target>
        </trans-unit>
        <trans-unit id="b42f0b8e7acb8ab4c014d91340b612caa1914354" translate="yes" xml:space="preserve">
          <source>SortKey.LINE</source>
          <target state="translated">SortKey.LINE</target>
        </trans-unit>
        <trans-unit id="8d0d62909d55ac33a92547c97f319ba1fcea9435" translate="yes" xml:space="preserve">
          <source>SortKey.NAME</source>
          <target state="translated">SortKey.NAME</target>
        </trans-unit>
        <trans-unit id="fe976daf84bef1e6e5a741e4b162ac9b98ae9f2a" translate="yes" xml:space="preserve">
          <source>SortKey.NFL</source>
          <target state="translated">SortKey.NFL</target>
        </trans-unit>
        <trans-unit id="7f9d210f8fc489e4276505f39665ab50b9603ade" translate="yes" xml:space="preserve">
          <source>SortKey.PCALLS</source>
          <target state="translated">SortKey.PCALLS</target>
        </trans-unit>
        <trans-unit id="2dd56b85b2f7ffb93983fc4454fe096c751e1ad3" translate="yes" xml:space="preserve">
          <source>SortKey.STDNAME</source>
          <target state="translated">SortKey.STDNAME</target>
        </trans-unit>
        <trans-unit id="44d3a2023ef119ca14e8f0dd06196bd96b090c0d" translate="yes" xml:space="preserve">
          <source>SortKey.TIME</source>
          <target state="translated">SortKey.TIME</target>
        </trans-unit>
        <trans-unit id="70b83197f8f59eb43007c3f7514cf8db3ff006ad" translate="yes" xml:space="preserve">
          <source>Source line number (count of newlines seen so far plus one).</source>
          <target state="translated">ソース行数(これまでに見た改行数+1)。</target>
        </trans-unit>
        <trans-unit id="89e25188eeebf99cf2ba5a80b7b7c15e2361f6b9" translate="yes" xml:space="preserve">
          <source>Source line number where the logging call was issued (if available).</source>
          <target state="translated">ロギングコールが発行された発信元回線番号(利用可能な場合)。</target>
        </trans-unit>
        <trans-unit id="1da15f4cd342d0b44706e32f72aaa4da1c6a3619" translate="yes" xml:space="preserve">
          <source>Source values are split into lines using &lt;a href=&quot;stdtypes#str.splitlines&quot;&gt;&lt;code&gt;splitlines()&lt;/code&gt;&lt;/a&gt;. If the value is not to be refolded, the lines are rejoined using the &lt;code&gt;linesep&lt;/code&gt; from the policy and returned. The exception is lines containing non-ascii binary data. In that case the value is refolded regardless of the &lt;code&gt;refold_source&lt;/code&gt; setting, which causes the binary data to be CTE encoded using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset.</source>
          <target state="translated">ソース値は&lt;a href=&quot;stdtypes#str.splitlines&quot;&gt; &lt;code&gt;splitlines()&lt;/code&gt; &lt;/a&gt;を使用して行に分割されます。値を再 &lt;code&gt;linesep&lt;/code&gt; しない場合、行はポリシーのlinesepを使用して再結合され、返されます。例外は、非ASCIIバイナリデータを含む行です。その場合、値は &lt;code&gt;refold_source&lt;/code&gt; 設定に関係なく再折りたたみされ、これによりバイナリデータが &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してCTEエンコードされます。</target>
        </trans-unit>
        <trans-unit id="1212949e20c3ff1a6de9ad904906ecea0d5062b3" translate="yes" xml:space="preserve">
          <source>South-Eastern Europe</source>
          <target state="translated">南東欧</target>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="5ee3a8d5053b9c3274bdcfa78f5671ff5fd511cf" translate="yes" xml:space="preserve">
          <source>Space between two columns headings.</source>
          <target state="translated">2つの列の見出しの間のスペース。</target>
        </trans-unit>
        <trans-unit id="9fe71c22cbcf9bae7424032c4fa8b869158c678c" translate="yes" xml:space="preserve">
          <source>Spawn a process, and connect its controlling terminal with the current process&amp;rsquo;s standard io. This is often used to baffle programs which insist on reading from the controlling terminal. It is expected that the process spawned behind the pty will eventually terminate, and when it does &lt;em&gt;spawn&lt;/em&gt; will return.</source>
          <target state="translated">プロセスを生成し、その制御端末を現在のプロセスの標準入出力に接続します。これは、制御端末からの読み取りを要求するプログラムを邪魔するためによく使用されます。ptyの背後で生成されたプロセスは最終的に終了し、それが&lt;em&gt;生成&lt;/em&gt;されると戻ることが予想され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bba2897741199b9b18aae00b7d3671bf316bdd32" translate="yes" xml:space="preserve">
          <source>Spawn a subprocess from a shell command.</source>
          <target state="translated">シェルコマンドからサブプロセスを起動します。</target>
        </trans-unit>
        <trans-unit id="d775ac05a10b882283937a83ee7adffd9ac69b2d" translate="yes" xml:space="preserve">
          <source>Spawn a subprocess.</source>
          <target state="translated">サブプロセスを起動します。</target>
        </trans-unit>
        <trans-unit id="ff92bc426617806367a8983a7520a60bb7e0d83b" translate="yes" xml:space="preserve">
          <source>Spawning a subprocess with &lt;em&gt;inactive&lt;/em&gt; current child watcher raises &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;非アクティブな&lt;/em&gt;現在の子ウォッチャーでサブプロセスを生成すると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9898b37c34a88e00f23e82b5e3dc9a1701903a0c" translate="yes" xml:space="preserve">
          <source>Special Attributes</source>
          <target state="translated">特殊属性</target>
        </trans-unit>
        <trans-unit id="472d1f415e5c961f252555cf0ab894dbe42e07fd" translate="yes" xml:space="preserve">
          <source>Special Attributes of Generic Alias</source>
          <target state="translated">汎用エイリアスの特殊属性</target>
        </trans-unit>
        <trans-unit id="a16be7a568dd718eb4245ce37f3711c64d9d2882" translate="yes" xml:space="preserve">
          <source>Special Turtle methods</source>
          <target state="translated">特殊なタートルメソッド</target>
        </trans-unit>
        <trans-unit id="7fc1dd1f685daaf846be31cdd4523f105cd068d3" translate="yes" xml:space="preserve">
          <source>Special cases follow IEEE 754: in particular, &lt;code&gt;remainder(x, math.inf)&lt;/code&gt; is &lt;em&gt;x&lt;/em&gt; for any finite &lt;em&gt;x&lt;/em&gt;, and &lt;code&gt;remainder(x, 0)&lt;/code&gt; and &lt;code&gt;remainder(math.inf, x)&lt;/code&gt; raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; for any non-NaN &lt;em&gt;x&lt;/em&gt;. If the result of the remainder operation is zero, that zero will have the same sign as &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">特別な場合には、IEEE 754は、次のとおり、特に、 &lt;code&gt;remainder(x, math.inf)&lt;/code&gt; ある&lt;em&gt;X&lt;/em&gt;任意の有限のため&lt;em&gt;のx&lt;/em&gt;、及び &lt;code&gt;remainder(x, 0)&lt;/code&gt; と &lt;code&gt;remainder(math.inf, x)&lt;/code&gt; 上昇&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;以外のNaN用&lt;em&gt;xは&lt;/em&gt;。剰余演算の結果がゼロの場合、そのゼロの符号は&lt;em&gt;x&lt;/em&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="6284efc19c32439a9b02eef2bcc7225177806bf7" translate="yes" xml:space="preserve">
          <source>Special characters lose their special meaning inside sets. For example, &lt;code&gt;[(+*)]&lt;/code&gt; will match any of the literal characters &lt;code&gt;'('&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, &lt;code&gt;'*'&lt;/code&gt;, or &lt;code&gt;')'&lt;/code&gt;.</source>
          <target state="translated">セット内では、特殊文字の特別な意味が失われます。たとえば、 &lt;code&gt;[(+*)]&lt;/code&gt; はリテラル文字 &lt;code&gt;'('&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、 &lt;code&gt;'*'&lt;/code&gt; 、または &lt;code&gt;')'&lt;/code&gt; のいずれかに一致します。</target>
        </trans-unit>
        <trans-unit id="439f8184663706848fc53b9bcc87343ac0ece901" translate="yes" xml:space="preserve">
          <source>Special construct to add type hints to a dictionary. At runtime it is a plain &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ディクショナリに型ヒントを追加するための特別な構造。実行時には、それは明白な&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="24e0ab60a65b0eb143f02e6de6eab1d161a2e5b9" translate="yes" xml:space="preserve">
          <source>Special forms</source>
          <target state="translated">特殊フォーム</target>
        </trans-unit>
        <trans-unit id="cb5cdb4d83d13dcb9044f5371c6dcdabd5610f8d" translate="yes" xml:space="preserve">
          <source>Special functions</source>
          <target state="translated">特殊機能</target>
        </trans-unit>
        <trans-unit id="e0a97b49e05add85db30c5fecd2305e19d54a859" translate="yes" xml:space="preserve">
          <source>Special reducer that can be defined in &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; subclasses. This method has priority over any reducer in the &lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt;&lt;code&gt;dispatch_table&lt;/code&gt;&lt;/a&gt;. It should conform to the same interface as a &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method, and can optionally return &lt;code&gt;NotImplemented&lt;/code&gt; to fallback on &lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt;&lt;code&gt;dispatch_table&lt;/code&gt;&lt;/a&gt;-registered reducers to pickle &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;サブクラスで定義できる特別なレデューサー。このメソッドは、&lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt; &lt;code&gt;dispatch_table&lt;/code&gt; &lt;/a&gt;のどのレデューサーよりも優先されます。これは、&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;メソッドと同じインターフェースに準拠する必要があり、オプションで &lt;code&gt;NotImplemented&lt;/code&gt; を返して、dispatch_tableに登録さ&lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt; &lt;code&gt;dispatch_table&lt;/code&gt; &lt;/a&gt;レデューサーをピクルして &lt;code&gt;obj&lt;/code&gt; にフォールバックできます。</target>
        </trans-unit>
        <trans-unit id="2a049ece38a02593606ddb5ea9dc950f6b4d3342" translate="yes" xml:space="preserve">
          <source>Special requirement for pickling: A &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass must have an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method that can be called with no arguments, otherwise it can be pickled but possibly not unpickled again. This is a technical requirement that may be relaxed in the future.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;化の特別な要件：tzinfoサブクラスには、引数なしで呼び出すことができる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドが必要です。これは、将来的に緩和される可能性のある技術要件です。</target>
        </trans-unit>
        <trans-unit id="969bccd18a31c053b37aa7bd04cae6735823c0e5" translate="yes" xml:space="preserve">
          <source>Special requirement for pickling: A &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass must have an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method that can be called with no arguments, otherwise it can be pickled but possibly not unpickled again. This is a technical requirement that may be relaxed in the future.</source>
          <target state="translated">ピクルス化の特別な要件：&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスには、引数なしで呼び出すことができる&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドが必要です。そうでない場合、ピクルス化できますが、再度ピクルス解除できない可能性があります。これは、将来緩和される可能性のある技術要件です。</target>
        </trans-unit>
        <trans-unit id="2a65697c4a309cb3f242e3affa556c05a3ff24ae" translate="yes" xml:space="preserve">
          <source>Special type construct to mark class variables.</source>
          <target state="translated">クラス変数をマークするための特殊な型構造体。</target>
        </trans-unit>
        <trans-unit id="c0379749db1635445d14937c7202fb1a90298230" translate="yes" xml:space="preserve">
          <source>Special type indicating an unconstrained type.</source>
          <target state="translated">制約のない型を示す特殊型。</target>
        </trans-unit>
        <trans-unit id="5d87f6b4eed9f1fef68f5f497eb277153373402e" translate="yes" xml:space="preserve">
          <source>Special type indicating that a function never returns. For example:</source>
          <target state="translated">関数が戻らないことを示す特殊な型。例えば</target>
        </trans-unit>
        <trans-unit id="0df101b56f09547631b13163646cd2fbeaed31ae" translate="yes" xml:space="preserve">
          <source>Special types</source>
          <target state="translated">特殊タイプ</target>
        </trans-unit>
        <trans-unit id="de19dde0c79828ccc76a085965f83d8cfc22805c" translate="yes" xml:space="preserve">
          <source>Special typing primitives</source>
          <target state="translated">特殊な型付けプリミティブ</target>
        </trans-unit>
        <trans-unit id="9509eb7ad962254adfb6cb3721d3a0603778fa95" translate="yes" xml:space="preserve">
          <source>Special value that can be used as the &lt;em&gt;stderr&lt;/em&gt; argument and indicates that standard error should be redirected into standard output.</source>
          <target state="translated">&lt;em&gt;stderr&lt;/em&gt;引数として使用でき、標準エラーを標準出力にリダイレクトする必要があることを示す特別な値。</target>
        </trans-unit>
        <trans-unit id="cf58d1a8a41a3090ce7e005d9030fa5c2d663686" translate="yes" xml:space="preserve">
          <source>Special value that can be used as the &lt;em&gt;stderr&lt;/em&gt; argument to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; and indicates that standard error should go into the same handle as standard output.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;stderr&lt;/em&gt;引数として使用でき、標準エラーが標準出力と同じハンドルに入る必要があることを示す特別な値。</target>
        </trans-unit>
        <trans-unit id="32feadce28c31f1034e46945d15f776b6c88d6e6" translate="yes" xml:space="preserve">
          <source>Special value that can be used as the &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; argument to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; and indicates that a pipe to the standard stream should be opened. Most useful with &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;stdin&lt;/em&gt;、&lt;em&gt;stdout&lt;/em&gt;または&lt;em&gt;stderr&lt;/em&gt;引数として使用できる特別な値で、標準ストリームへのパイプを開く必要があることを示します。&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; で&lt;/a&gt;最も役立ちます。</target>
        </trans-unit>
        <trans-unit id="6fc0896e3d2fa8f048f2e82c3c2e341a39ddb28a" translate="yes" xml:space="preserve">
          <source>Special value that can be used as the &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; argument to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; and indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;stdin&lt;/em&gt;、&lt;em&gt;stdout&lt;/em&gt;または&lt;em&gt;stderr&lt;/em&gt;引数として使用できる特別な値で、特別なファイル&lt;a href=&quot;os#os.devnull&quot;&gt; &lt;code&gt;os.devnull&lt;/code&gt; &lt;/a&gt;が使用されることを示します。</target>
        </trans-unit>
        <trans-unit id="3f57b83b969dc1d4411e1681c1061734e71f8995" translate="yes" xml:space="preserve">
          <source>Special value that can be used as the &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; argument to process creation functions. It indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used for the corresponding subprocess stream.</source>
          <target state="translated">プロセス作成関数の&lt;em&gt;stdin&lt;/em&gt;、&lt;em&gt;stdout、&lt;/em&gt;または&lt;em&gt;stderr&lt;/em&gt;引数として使用できる特別な値。これは、特殊ファイル&lt;a href=&quot;os#os.devnull&quot;&gt; &lt;code&gt;os.devnull&lt;/code&gt; &lt;/a&gt;が対応するサブプロセスストリームに使用されることを示しています。</target>
        </trans-unit>
        <trans-unit id="408bfb9a5523fa7d21d2b66aaa9b87815caeb533" translate="yes" xml:space="preserve">
          <source>Special value which should be returned by the binary special methods (e.g. &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__rsub__&quot;&gt;&lt;code&gt;__rsub__()&lt;/code&gt;&lt;/a&gt;, etc.) to indicate that the operation is not implemented with respect to the other type; may be returned by the in-place binary special methods (e.g. &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__imul__&quot;&gt;&lt;code&gt;__imul__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iand__&quot;&gt;&lt;code&gt;__iand__()&lt;/code&gt;&lt;/a&gt;, etc.) for the same purpose. Its truth value is true.</source>
          <target state="translated">バイナリ特別なメソッドによって返さなければならない特別な値（例えば&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;）（__&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__rsub__&quot;&gt; &lt;code&gt;__rsub__()&lt;/code&gt; &lt;/a&gt;操作は、他のタイプに対して実装されていないことを示すために、等）。（例えば、インプレースバイナリ特殊な方法で返されることがあります&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__imul__&quot;&gt; &lt;code&gt;__imul__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iand__&quot;&gt; &lt;code&gt;__iand__()&lt;/code&gt; &lt;/a&gt;同じ目的のために、など）。その真理値は真実です。</target>
        </trans-unit>
        <trans-unit id="a5e1d8d5008809656b8b9a4518730bbad408b200" translate="yes" xml:space="preserve">
          <source>Special value which should be returned by the binary special methods (e.g. &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__rsub__&quot;&gt;&lt;code&gt;__rsub__()&lt;/code&gt;&lt;/a&gt;, etc.) to indicate that the operation is not implemented with respect to the other type; may be returned by the in-place binary special methods (e.g. &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__imul__&quot;&gt;&lt;code&gt;__imul__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iand__&quot;&gt;&lt;code&gt;__iand__()&lt;/code&gt;&lt;/a&gt;, etc.) for the same purpose. It should not be evaluated in a boolean context.</source>
          <target state="translated">バイナリ特別なメソッドによって返さなければならない特別な値（例えば&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;）（__&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__rsub__&quot;&gt; &lt;code&gt;__rsub__()&lt;/code&gt; &lt;/a&gt;操作は、他のタイプに対して実装されていないことを示すために、等）。同じ目的で、インプレースのバイナリ特殊メソッド（&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__imul__&quot;&gt; &lt;code&gt;__imul__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iand__&quot;&gt; &lt;code&gt;__iand__()&lt;/code&gt; &lt;/a&gt;など）によって返される場合があります。ブール値のコンテキストで評価するべきではありません。</target>
        </trans-unit>
        <trans-unit id="49acba3ffb7180cd7efe38b435fb88fbe90f135f" translate="yes" xml:space="preserve">
          <source>Special values</source>
          <target state="translated">特別な値</target>
        </trans-unit>
        <trans-unit id="4117b5af76507fee20fece973f0c1b723b96a66c" translate="yes" xml:space="preserve">
          <source>Specialized version of &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;#socket.AF_ALG&quot;&gt;&lt;code&gt;AF_ALG&lt;/code&gt;&lt;/a&gt; socket. Set mode, IV, AEAD associated data length and flags for &lt;a href=&quot;#socket.AF_ALG&quot;&gt;&lt;code&gt;AF_ALG&lt;/code&gt;&lt;/a&gt; socket.</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_ALG&quot;&gt; &lt;code&gt;AF_ALG&lt;/code&gt; &lt;/a&gt;ソケット専用の&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;です。&lt;a href=&quot;#socket.AF_ALG&quot;&gt; &lt;code&gt;AF_ALG&lt;/code&gt; &lt;/a&gt;ソケットのモード、IV、AEADに関連するデータ長とフラグを設定します。</target>
        </trans-unit>
        <trans-unit id="14026a853a512473bc57990d36bdf05c63e852d3" translate="yes" xml:space="preserve">
          <source>Specialized versions of &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; objects can be created through subclassing. This is used in the implementation of the &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; to reduce the memory overhead for each entry in the mapping. This may be most useful to associate additional information with a reference, but could also be used to insert additional processing on calls to retrieve the referent.</source>
          <target state="translated">&lt;a href=&quot;#weakref.ref&quot;&gt; &lt;code&gt;ref&lt;/code&gt; &lt;/a&gt;オブジェクトの特殊なバージョンは、サブクラス化によって作成できます。これは&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; &lt;/a&gt;の実装で使用され、マッピングの各エントリのメモリオーバーヘッドを削減します。これは、追加情報を参照に関連付けるのに最も役立ちますが、参照先を取得するための呼び出しに追加処理を挿入するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="d7ea4bee4aafb596b91719334abdaacf5e545a6d" translate="yes" xml:space="preserve">
          <source>Specializing JSON object decoding:</source>
          <target state="translated">JSONオブジェクトのデコードに特化しています。</target>
        </trans-unit>
        <trans-unit id="b331e35b2962ec93d0df01181685c709c0e5ddcb" translate="yes" xml:space="preserve">
          <source>Specific platforms listed alphabetically, with Linux included in the Unix section.</source>
          <target state="translated">特定のプラットフォームはアルファベット順に表示され、LinuxはUnixセクションに含まれています。</target>
        </trans-unit>
        <trans-unit id="12eca84f7dfba74e53d3c44fb7b93e41839b22bd" translate="yes" xml:space="preserve">
          <source>Specifically, this function supports strings in the format:</source>
          <target state="translated">具体的には、文字列のフォーマットをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d8205480e242ef43a754238376f731406d189741" translate="yes" xml:space="preserve">
          <source>Specifies a format string that should be used by &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_error&quot;&gt;&lt;code&gt;send_error()&lt;/code&gt;&lt;/a&gt; method for building an error response to the client. The string is filled by default with variables from &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.responses&quot;&gt;&lt;code&gt;responses&lt;/code&gt;&lt;/a&gt; based on the status code that passed to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_error&quot;&gt;&lt;code&gt;send_error()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クライアントへのエラー応答を構築するために&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_error&quot;&gt; &lt;code&gt;send_error()&lt;/code&gt; &lt;/a&gt;メソッドで使用されるフォーマット文字列を指定します。文字列には、デフォルトで&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_error&quot;&gt; &lt;code&gt;send_error()&lt;/code&gt; に&lt;/a&gt;渡されたステータスコードに基づく&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.responses&quot;&gt; &lt;code&gt;responses&lt;/code&gt; &lt;/a&gt;からの変数が入力されます。</target>
        </trans-unit>
        <trans-unit id="7e0917f04440ac33cbaa4e66e820eeaff23bcd37" translate="yes" xml:space="preserve">
          <source>Specifies a list of elements to place inside the element. Each element is a tuple (or other sequence type) where the first item is the layout name, and the other is a &lt;a href=&quot;#layouts&quot;&gt;Layout&lt;/a&gt;.</source>
          <target state="translated">要素内に配置する要素のリストを指定します。各要素はタプル（または他のシーケンスタイプ）であり、最初の項目はレイアウト名で、もう1つは&lt;a href=&quot;#layouts&quot;&gt;Layout&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="018c8b57adcd00bd878170e791751329124e62ea" translate="yes" xml:space="preserve">
          <source>Specifies a minimum height for the element. If less than zero, the base image&amp;rsquo;s height is used as a default.</source>
          <target state="translated">要素の最小の高さを指定します。ゼロ未満の場合、基本画像の高さがデフォルトとして使用されます。</target>
        </trans-unit>
        <trans-unit id="64f9a98cf6e5ca512da99bff9dd759395416197f" translate="yes" xml:space="preserve">
          <source>Specifies a minimum width for the element. If less than zero, the base image&amp;rsquo;s width is used as a default.</source>
          <target state="translated">要素の最小幅を指定します。ゼロ未満の場合、基本画像の幅がデフォルトとして使用されます。</target>
        </trans-unit>
        <trans-unit id="c43332681be5f6729b82d951487119b87e2ce5b5" translate="yes" xml:space="preserve">
          <source>Specifies a name whose value is linked to the widget value. Whenever the value associated with that name changes, the widget value is updated, and vice versa. See &lt;code&gt;tkinter.StringVar&lt;/code&gt;.</source>
          <target state="translated">値がウィジェット値にリンクされている名前を指定します。その名前に関連付けられた値が変更されるたびに、ウィジェットの値が更新され、その逆も同様です。 &lt;code&gt;tkinter.StringVar&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="26e12685525b80973f9d447e19a18900c0123a8d" translate="yes" xml:space="preserve">
          <source>Specifies a name whose value will be used in place of the text option resource.</source>
          <target state="translated">テキス ト オプシ ョ ン リ ソ ースの代わりに値が使われる名前を指定します。</target>
        </trans-unit>
        <trans-unit id="976d05bc6fae40e68306d59998cc188e255f4f91" translate="yes" xml:space="preserve">
          <source>Specifies a text string to be displayed inside the widget.</source>
          <target state="translated">ウィジェット内に表示する文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="353215be2428ffa52a6eb6c3bdcebe9a8035534a" translate="yes" xml:space="preserve">
          <source>Specifies a text to be displayed in the tab.</source>
          <target state="translated">タブに表示するテキストを指定します。</target>
        </trans-unit>
        <trans-unit id="126ae85ad3c94c7e6770ac02486660ebbc42238a" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt;-like class to parse HTTP headers. Typically, this is not overridden, and it defaults to &lt;code&gt;http.client.HTTPMessage&lt;/code&gt;.</source>
          <target state="translated">HTTPヘッダーを解析する&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; の&lt;/a&gt;ようなクラスを指定します。通常、これはオーバーライドされません。デフォルトは &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2078b46b6757014cae2d7e2342d6b921eec255bb" translate="yes" xml:space="preserve">
          <source>Specifies an image to display in the tab. See the option image described in &lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt;&lt;code&gt;Widget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タブに表示する画像を指定します。&lt;a href=&quot;#tkinter.ttk.Widget&quot;&gt; &lt;code&gt;Widget&lt;/code&gt; &lt;/a&gt;説明されているオプション画像を参照してください。</target>
        </trans-unit>
        <trans-unit id="a0d36188d7db646a4c0662dc3f4c6a7b4caf5326" translate="yes" xml:space="preserve">
          <source>Specifies an image to display to the right of the column heading.</source>
          <target state="translated">列の見出しの右に表示する画像を指定します。</target>
        </trans-unit>
        <trans-unit id="43182f683d0a37e8545820d82dcba48bbe6bfb29" translate="yes" xml:space="preserve">
          <source>Specifies an image to display. This is a list of 1 or more elements. The first element is the default image name. The rest of the list if a sequence of statespec/value pairs as defined by &lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt;&lt;code&gt;Style.map()&lt;/code&gt;&lt;/a&gt;, specifying different images to use when the widget is in a particular state or a combination of states. All images in the list should have the same size.</source>
          <target state="translated">表示する画像を指定します。これは、1つ以上の要素のリストです。最初の要素はデフォルトの画像名です。リストの残りの部分は、&lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt; &lt;code&gt;Style.map()&lt;/code&gt; &lt;/a&gt;で定義された一連のstatespec / valueペアであり、ウィジェットが特定の状態または状態の組み合わせにあるときに使用するさまざまな画像を指定します。リスト内のすべての画像は同じサイズでなければなりません。</target>
        </trans-unit>
        <trans-unit id="d68f914288f69da885ae4592d4a87e527ae5349f" translate="yes" xml:space="preserve">
          <source>Specifies an input parameter to the function.</source>
          <target state="translated">関数への入力パラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="4b33be62cbaf32137f3e77ae27c3043b680316b7" translate="yes" xml:space="preserve">
          <source>Specifies an integer value indicating the desired width of the entry window, in average-size characters of the widget&amp;rsquo;s font.</source>
          <target state="translated">ウィジェットのフォントの平均サイズの文字で、入力ウィンドウの希望の幅を示す整数値を指定します。</target>
        </trans-unit>
        <trans-unit id="f41ae7d78e5e548240c8d1be74d10298967a9444" translate="yes" xml:space="preserve">
          <source>Specifies how the child window is positioned within the pane area. Value is a string containing zero or more of the characters &amp;ldquo;n&amp;rdquo;, &amp;ldquo;s&amp;rdquo;, &amp;ldquo;e&amp;rdquo; or &amp;ldquo;w&amp;rdquo;. Each letter refers to a side (north, south, east or west) that the child window will stick to, as per the &lt;code&gt;grid()&lt;/code&gt; geometry manager.</source>
          <target state="translated">子ウィンドウをペイン領域内に配置する方法を指定します。値は、「n」、「s」、「e」、または「w」の文字を0個以上含む文字列です。各文字は、 &lt;code&gt;grid()&lt;/code&gt; ジオメトリマネージャのように、子ウィンドウが固定される側（北、南、東、または西）を参照します。</target>
        </trans-unit>
        <trans-unit id="9784315f481b68437898caf6a5ae096ea2c1931c" translate="yes" xml:space="preserve">
          <source>Specifies how the heading text should be aligned. One of the standard Tk anchor values.</source>
          <target state="translated">見出しテキストをどのように整列させるかを指定します。Tkアンカーの標準値の一つ。</target>
        </trans-unit>
        <trans-unit id="2e2c27ea7720c63dfae62883b41d0531adf492d9" translate="yes" xml:space="preserve">
          <source>Specifies how the image is placed within the final parcel. spec contains zero or more characters &amp;ldquo;n&amp;rdquo;, &amp;ldquo;s&amp;rdquo;, &amp;ldquo;w&amp;rdquo;, or &amp;ldquo;e&amp;rdquo;.</source>
          <target state="translated">最終的な区画内での画像の配置方法を指定します。specには0個以上の文字「n」、「s」、「w」、または「e」が含まれています。</target>
        </trans-unit>
        <trans-unit id="48c6cde39b45eef6e540ae2ed22146b9cf466781" translate="yes" xml:space="preserve">
          <source>Specifies how the text in this column should be aligned with respect to the cell.</source>
          <target state="translated">この列のテキストをセルに対してどのように整列させるかを指定します。</target>
        </trans-unit>
        <trans-unit id="915af3c59afec5f4abb33d06b6b3f34a0a13779b" translate="yes" xml:space="preserve">
          <source>Specifies how the text is aligned within the widget. One of &amp;ldquo;left&amp;rdquo;, &amp;ldquo;center&amp;rdquo;, or &amp;ldquo;right&amp;rdquo;.</source>
          <target state="translated">ウィジェット内でのテキストの配置方法を指定します。「左」、「中央」、または「右」のいずれか。</target>
        </trans-unit>
        <trans-unit id="77ceb2bc3b057632dd4ed2135df410f2430ae776" translate="yes" xml:space="preserve">
          <source>Specifies how to display the image relative to the text, in the case both options text and image are present. See &lt;a href=&quot;#label-options&quot;&gt;Label Options&lt;/a&gt; for legal values.</source>
          <target state="translated">オプションのテキストと画像の両方が存在する場合に、テキストを基準に画像を表示する方法を指定します。有効な値については、&lt;a href=&quot;#label-options&quot;&gt;ラベルオプション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1e1eeec260ae4b3dbd9caa3179ea9ad805b96046" translate="yes" xml:space="preserve">
          <source>Specifies how to display the image relative to the text, in the case both text and images options are present. Valid values are:</source>
          <target state="translated">テキス ト と images オプシ ョ ンの両方が存在する場合に、 テキス ト に対 し て画像を相対的に表示する方法を指定します。有効な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cf3e2a7bb1d3174c51fc528bdc12ae799b570b2b" translate="yes" xml:space="preserve">
          <source>Specifies that a FileHandler be created, using the specified filename, rather than a StreamHandler.</source>
          <target state="translated">StreamHandlerではなく、指定されたファイル名を使用してFileHandlerを作成することを指定します。</target>
        </trans-unit>
        <trans-unit id="53cf255fe4585be294f7e4b711804270d11f3bc1" translate="yes" xml:space="preserve">
          <source>Specifies that exactly &lt;em&gt;m&lt;/em&gt; copies of the previous RE should be matched; fewer matches cause the entire RE not to match. For example, &lt;code&gt;a{6}&lt;/code&gt; will match exactly six &lt;code&gt;'a'&lt;/code&gt; characters, but not five.</source>
          <target state="translated">前のREの正確に&lt;em&gt;m個の&lt;/em&gt;コピーを一致させる必要があることを指定します。一致が少ないと、RE全体が一致しなくなります。たとえば、 &lt;code&gt;a{6}&lt;/code&gt; は正確に6つの &lt;code&gt;'a'&lt;/code&gt; 文字に一致しますが、5つには一致しません。</target>
        </trans-unit>
        <trans-unit id="8eb658f66983910db4c5ba83e1c5e4ed1f9569bc" translate="yes" xml:space="preserve">
          <source>Specifies that the &lt;a href=&quot;#subprocess.STARTUPINFO.hStdInput&quot;&gt;&lt;code&gt;STARTUPINFO.hStdInput&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.STARTUPINFO.hStdOutput&quot;&gt;&lt;code&gt;STARTUPINFO.hStdOutput&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#subprocess.STARTUPINFO.hStdError&quot;&gt;&lt;code&gt;STARTUPINFO.hStdError&lt;/code&gt;&lt;/a&gt; attributes contain additional information.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.hStdInput&quot;&gt; &lt;code&gt;STARTUPINFO.hStdInput&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#subprocess.STARTUPINFO.hStdOutput&quot;&gt; &lt;code&gt;STARTUPINFO.hStdOutput&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#subprocess.STARTUPINFO.hStdError&quot;&gt; &lt;code&gt;STARTUPINFO.hStdError&lt;/code&gt; &lt;/a&gt;属性に追加情報が含まれることを指定します。</target>
        </trans-unit>
        <trans-unit id="de610471c5a7d37c877946b0566346cf1ddebe83" translate="yes" xml:space="preserve">
          <source>Specifies that the &lt;a href=&quot;#subprocess.STARTUPINFO.wShowWindow&quot;&gt;&lt;code&gt;STARTUPINFO.wShowWindow&lt;/code&gt;&lt;/a&gt; attribute contains additional information.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.wShowWindow&quot;&gt; &lt;code&gt;STARTUPINFO.wShowWindow&lt;/code&gt; &lt;/a&gt;属性に追加情報が含まれることを指定します。</target>
        </trans-unit>
        <trans-unit id="b9c0f814494f6302ef547f80d658df951336f80c" translate="yes" xml:space="preserve">
          <source>Specifies the Content-Type HTTP header of error responses sent to the client. The default value is &lt;code&gt;'text/html'&lt;/code&gt;.</source>
          <target state="translated">クライアントに送信されるエラー応答のContent-Type HTTPヘッダーを指定します。デフォルト値は &lt;code&gt;'text/html'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4088295243047df3d3639ae32be9ffb52787b43a" translate="yes" xml:space="preserve">
          <source>Specifies the UUID layout given in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;で指定されているUUIDレイアウトを指定し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e5adb8997fff4b448a0cd14910c3b1ea713be892" translate="yes" xml:space="preserve">
          <source>Specifies the amount of extra space to add around the outside of the notebook. The padding is a list up to four length specifications left top right bottom. If fewer than four elements are specified, bottom defaults to top, right defaults to left, and top defaults to left.</source>
          <target state="translated">ノートの外側の周りに追加する余白の量を指定します。パディングは、左上右下の4つの長さ指定までのリストです。指定された要素が4つ未満の場合は、bottomが上、右が左、上が左となります。</target>
        </trans-unit>
        <trans-unit id="bbd57e482de7a3d46468ab0eb7268dd096518899" translate="yes" xml:space="preserve">
          <source>Specifies the amount of extra space to add between the notebook and this pane. Syntax is the same as for the option padding used by this widget.</source>
          <target state="translated">ノートブックとこのペインの間に追加する余分なスペースの量を指定します。構文は、このウィジェットで使用されるオプションのパディングと同じです。</target>
        </trans-unit>
        <trans-unit id="ba5044196ca2328cc6260bf6ce68384d29d75480" translate="yes" xml:space="preserve">
          <source>Specifies the cell or item background color.</source>
          <target state="translated">セルまたはアイテムの背景色を指定します。</target>
        </trans-unit>
        <trans-unit id="152ce2c073d17f93640a27333c5747df7b50d550" translate="yes" xml:space="preserve">
          <source>Specifies the element&amp;rsquo;s interior padding. Defaults to border&amp;rsquo;s value if not specified.</source>
          <target state="translated">要素の内部パディングを指定します。指定しない場合、デフォルトで境界線の値になります。</target>
        </trans-unit>
        <trans-unit id="de45dee67414c18eccd4391ef952643a754acd59" translate="yes" xml:space="preserve">
          <source>Specifies the font to use when drawing text.</source>
          <target state="translated">テキストを描画する際に使用するフォントを指定します。</target>
        </trans-unit>
        <trans-unit id="68913ab6f76e864d459863056a9973e0ee16b5a3" translate="yes" xml:space="preserve">
          <source>Specifies the height of the pop-down listbox, in rows.</source>
          <target state="translated">ポップダウン リストボックスの高さを行単位で指定します。</target>
        </trans-unit>
        <trans-unit id="80410b93690bae8e655b6dd6a6b7a1f612d0a77b" translate="yes" xml:space="preserve">
          <source>Specifies the index (0-based) of a character to underline in the text string. The underlined character is used for mnemonic activation if &lt;a href=&quot;#tkinter.ttk.Notebook.enable_traversal&quot;&gt;&lt;code&gt;Notebook.enable_traversal()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">テキスト文字列で下線を引く文字のインデックス（0ベース）を指定します。下線が引かれた文字は、&lt;a href=&quot;#tkinter.ttk.Notebook.enable_traversal&quot;&gt; &lt;code&gt;Notebook.enable_traversal()&lt;/code&gt; &lt;/a&gt;が呼び出された場合のニーモニックアクティベーションに使用されます。</target>
        </trans-unit>
        <trans-unit id="c20200a3a04c4cb1180b18486789662d10b28115" translate="yes" xml:space="preserve">
          <source>Specifies the internal padding for the widget. The padding is a list of up to four length specifications.</source>
          <target state="translated">ウィジェットの内部パディングを指定します。パディングは最大4つの長さ指定のリストです。</target>
        </trans-unit>
        <trans-unit id="670de2ba7aef868baad3035383198c2a3ed477d9" translate="yes" xml:space="preserve">
          <source>Specifies the item image, in case the item&amp;rsquo;s image option is empty.</source>
          <target state="translated">アイテムの画像オプションが空の場合にアイテムの画像を指定します。</target>
        </trans-unit>
        <trans-unit id="8ebf1c2641f772c220c063d7e4a067fe1463f346" translate="yes" xml:space="preserve">
          <source>Specifies the length of the long axis of the progress bar (width if horizontal, height if vertical).</source>
          <target state="translated">プログレスバーの長軸の長さを指定します(水平の場合は幅、垂直の場合は高さ)。</target>
        </trans-unit>
        <trans-unit id="fb436c06e09636be8dc845715cb9ece15bdd42c3" translate="yes" xml:space="preserve">
          <source>Specifies the list of values to display in the drop-down listbox.</source>
          <target state="translated">ドロップダウン リストボックスに表示する値のリストを指定します。</target>
        </trans-unit>
        <trans-unit id="5d38873be72c6d59f9b2bfff97ade564f7f596c2" translate="yes" xml:space="preserve">
          <source>Specifies the mouse cursor to be used for the widget. If set to the empty string (the default), the cursor is inherited for the parent widget.</source>
          <target state="translated">ウィジェットで使用するマウスカーソルを指定します。空の文字列(デフォルト)に設定された場合、カーソルは親ウィジェットに継承されます。</target>
        </trans-unit>
        <trans-unit id="f964c4a5657a4339567508998b411666aa329291" translate="yes" xml:space="preserve">
          <source>Specifies the number of rows which should be visible. Note: the requested width is determined from the sum of the column widths.</source>
          <target state="translated">表示する行の数を指定します。注意:要求された幅は、列の幅の合計から決定されます。</target>
        </trans-unit>
        <trans-unit id="310e1d3ca0dafa97ea9ecdfe10139e2a46a8f994" translate="yes" xml:space="preserve">
          <source>Specifies the server software version. You may want to override this. The format is multiple whitespace-separated strings, where each string is of the form name[/version]. For example, &lt;code&gt;'BaseHTTP/0.2'&lt;/code&gt;.</source>
          <target state="translated">サーバーソフトウェアのバージョンを指定します。これをオーバーライドすることができます。形式は空白で区切られた複数の文字列で、各文字列はname [/ version]の形式です。たとえば、 &lt;code&gt;'BaseHTTP/0.2'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d8408eaa82dbe2ae28faae74a6c12154e9bf24ab" translate="yes" xml:space="preserve">
          <source>Specifies the text foreground color.</source>
          <target state="translated">テキストの前景色を指定します。</target>
        </trans-unit>
        <trans-unit id="787c3f555b26c80a355f5c3fcee53b395a557795" translate="yes" xml:space="preserve">
          <source>Specifies the type of each element in the array.</source>
          <target state="translated">配列の各要素の型を指定します。</target>
        </trans-unit>
        <trans-unit id="c85284c772b17d2a337e0444234d8e8cd137f92d" translate="yes" xml:space="preserve">
          <source>Specifies the type pointed to.</source>
          <target state="translated">指された型を指定します。</target>
        </trans-unit>
        <trans-unit id="8d4b1150d609cbd9553019bfcb3e24207c154189" translate="yes" xml:space="preserve">
          <source>Specifies the window class. The class is used when querying the option database for the window&amp;rsquo;s other options, to determine the default bindtags for the window, and to select the widget&amp;rsquo;s default layout and style. This option is read-only, and may only be specified when the window is created.</source>
          <target state="translated">ウィンドウクラスを指定します。このクラスは、ウィンドウの他のオプションについてオプションデータベースをクエリするときに使用され、ウィンドウのデフォルトのバインドタグを決定し、ウィジェットのデフォルトのレイアウトとスタイルを選択します。このオプションは読み取り専用であり、ウィンドウの作成時にのみ指定できます。</target>
        </trans-unit>
        <trans-unit id="3ac270d58d3d09827c6b2a75ab778046df1b4b13" translate="yes" xml:space="preserve">
          <source>Specifies where the element is placed inside its allocated parcel.</source>
          <target state="translated">割り当てられた区画内のどこに要素を配置するかを指定します。</target>
        </trans-unit>
        <trans-unit id="0161fa94f8728c63b36c9c7588c68f2a31238f74" translate="yes" xml:space="preserve">
          <source>Specifies whether the column&amp;rsquo;s width should be adjusted when the widget is resized.</source>
          <target state="translated">ウィジェットのサイズが変更されたときに列の幅を調整するかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="9e7fda47535032815e728aba81844564a4b12575" translate="yes" xml:space="preserve">
          <source>Specifies which side of the cavity to place the element; one of top, right, bottom or left. If omitted, the element occupies the entire cavity.</source>
          <target state="translated">エレメントを配置する面を指定します。省略した場合、要素は空洞全体を占める。</target>
        </trans-unit>
        <trans-unit id="e613013b32efa54d63d1f092553a78ddb9a78431" translate="yes" xml:space="preserve">
          <source>Specify a list of commands for breakpoint number &lt;em&gt;bpnumber&lt;/em&gt;. The commands themselves appear on the following lines. Type a line containing just &lt;code&gt;end&lt;/code&gt; to terminate the commands. An example:</source>
          <target state="translated">ブレークポイント番号&lt;em&gt;bpnumberの&lt;/em&gt;コマンドのリストを指定します。コマンド自体は次の行に表示されます。コマンドを終了するには、 &lt;code&gt;end&lt;/code&gt; だけを含む行を入力します。例：</target>
        </trans-unit>
        <trans-unit id="89c2f57c2c3b4b82273cf49d9b8e563bfc71d26d" translate="yes" xml:space="preserve">
          <source>Specify that the file descriptor &lt;em&gt;fd&lt;/em&gt; be used for typeahead checking. If &lt;em&gt;fd&lt;/em&gt; is &lt;code&gt;-1&lt;/code&gt;, then no typeahead checking is done.</source>
          <target state="translated">先行入力チェックにファイル記述子&lt;em&gt;fd&lt;/em&gt;を使用することを指定します。&lt;em&gt;fd&lt;/em&gt;が &lt;code&gt;-1&lt;/code&gt; の場合、先行入力チェックは行われません。</target>
        </trans-unit>
        <trans-unit id="7d040c4934d9dc9f99749c70e858398a0c0d775c" translate="yes" xml:space="preserve">
          <source>Specify the compression type. If not specified, the audio data will not be compressed. In AIFF files, compression is not possible. The name parameter should be a human-readable description of the compression type as a bytes array, the type parameter should be a bytes array of length 4. Currently the following compression types are supported: &lt;code&gt;b'NONE'&lt;/code&gt;, &lt;code&gt;b'ULAW'&lt;/code&gt;, &lt;code&gt;b'ALAW'&lt;/code&gt;, &lt;code&gt;b'G722'&lt;/code&gt;.</source>
          <target state="translated">圧縮タイプを指定します。指定しない場合、オーディオデータは圧縮されません。 AIFFファイルでは、圧縮はできません。 nameパラメータは、人間が読める形式の圧縮タイプをバイト配列として記述したものでなければなりません &lt;code&gt;b'NONE'&lt;/code&gt; パラメータは、長さ4のバイト配列でなければなりません。現在、次の圧縮タイプがサポートされています：b'NONE '、 &lt;code&gt;b'ULAW'&lt;/code&gt; 、 &lt;code&gt;b'ALAW'&lt;/code&gt; 、 &lt;code&gt;b'G722'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a248bf893e97c59d3ebcf8037acd204dcc7d672" translate="yes" xml:space="preserve">
          <source>Specify the number of channels in the audio file.</source>
          <target state="translated">音声ファイルのチャンネル数を指定します。</target>
        </trans-unit>
        <trans-unit id="087d540b4b1a34602f6d59560010b6bbe7dd511f" translate="yes" xml:space="preserve">
          <source>Specify the number of frames that are to be written to the audio file. If this parameter is not set, or not set correctly, the file needs to support seeking.</source>
          <target state="translated">オーディオファイルに書き込むフレーム数を指定します。このパラメータが設定されていない場合、または正しく設定されていない場合、ファイルはシークをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="0ce4648d53df6b1f8383558574699782c046c70c" translate="yes" xml:space="preserve">
          <source>Specify the sampling frequency in frames per second.</source>
          <target state="translated">サンプリング周波数を 1 秒あたりのフレーム数で指定します。</target>
        </trans-unit>
        <trans-unit id="53d53d953ff2ebb6a3917cb29bf56aae6b8d332a" translate="yes" xml:space="preserve">
          <source>Specify the size in bytes of audio samples.</source>
          <target state="translated">オーディオサンプルのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="01c9a24ace5b8ffe7af5e5954a8d577295e0f30b" translate="yes" xml:space="preserve">
          <source>Specify what kind of code must be compiled, like the &lt;em&gt;mode&lt;/em&gt; argument in &lt;a href=&quot;#ast.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ast.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;mode&lt;/em&gt;引数のように、コンパイルする必要のあるコードの種類を指定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2e270bb8a669c5a3a2ea7b0638dd34e5df6a6668" translate="yes" xml:space="preserve">
          <source>Specify which protocols the socket should advertise during the SSL/TLS handshake. It should be a list of ASCII strings, like &lt;code&gt;['http/1.1',
'spdy/2']&lt;/code&gt;, ordered by preference. The selection of a protocol will happen during the handshake, and will play out according to &lt;a href=&quot;https://tools.ietf.org/html/rfc7301.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7301&lt;/strong&gt;&lt;/a&gt;. After a successful handshake, the &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; method will return the agreed-upon protocol.</source>
          <target state="translated">SSL / TLSハンドシェイク中にソケットが通知するプロトコルを指定します。 &lt;code&gt;['http/1.1', 'spdy/2']&lt;/code&gt; ようなASCII文字列のリストを、優先順に並べる必要があります。プロトコルの選択はハンドシェイク中に行われ、&lt;a href=&quot;https://tools.ietf.org/html/rfc7301.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 7301&lt;/strong&gt;&lt;/a&gt;に従って再生され&lt;strong&gt;ます&lt;/strong&gt;。ハンドシェイクが成功した後、&lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt;メソッドは合意されたプロトコルを返します。</target>
        </trans-unit>
        <trans-unit id="e22bf1a1affe385304ceae6424b74a7ec7165ca6" translate="yes" xml:space="preserve">
          <source>Specify which protocols the socket should advertise during the SSL/TLS handshake. It should be a list of strings, like &lt;code&gt;['http/1.1', 'spdy/2']&lt;/code&gt;, ordered by preference. The selection of a protocol will happen during the handshake, and will play out according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&quot;&gt;Application Layer Protocol Negotiation&lt;/a&gt;. After a successful handshake, the &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt;&lt;/a&gt; method will return the agreed-upon protocol.</source>
          <target state="translated">SSL / TLSハンドシェイク中にソケットが通知するプロトコルを指定します。これは、 &lt;code&gt;['http/1.1', 'spdy/2']&lt;/code&gt; ような文字列のリストで、優先順に並べられている必要があります。プロトコルの選択はハンドシェイク中に行われ、&lt;a href=&quot;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&quot;&gt;アプリケーション層プロトコルネゴシエーション&lt;/a&gt;に従って行われます。ハンドシェイクが成功すると、&lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt; &lt;/a&gt;メソッドは合意されたプロトコルを返します。</target>
        </trans-unit>
        <trans-unit id="0c3905632fc46ed173f0cab3a43fe68c6c8ef5d6" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;-k&lt;/code&gt; flag before the argument will search the synopsis lines of all available modules for the keyword given as the argument, again in a manner similar to the Unix &lt;strong&gt;man&lt;/strong&gt; command. The synopsis line of a module is the first line of its documentation string.</source>
          <target state="translated">引数の前に &lt;code&gt;-k&lt;/code&gt; フラグを指定すると、UNIXの&lt;strong&gt;man&lt;/strong&gt;コマンドと同様の方法で、引数として指定されたキーワードを使用可能なすべてのモジュールの概要行で検索します。モジュールの概要行は、ドキュメント文字列の最初の行です。</target>
        </trans-unit>
        <trans-unit id="07727018a2c9b3660d85ee9a0933a42c201859e2" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;-w&lt;/code&gt; flag before the argument will cause HTML documentation to be written out to a file in the current directory, instead of displaying text on the console.</source>
          <target state="translated">引数の前に &lt;code&gt;-w&lt;/code&gt; フラグを指定すると、コンソールにテキストを表示する代わりに、HTMLドキュメントが現在のディレクトリのファイルに書き出されます。</target>
        </trans-unit>
        <trans-unit id="03d4a6ac4d171c9ccdf6cae66fad8d57ecea582f" translate="yes" xml:space="preserve">
          <source>Specifying a format protects against incompatible argument types (just as a prototype for a C function), and tries to convert the arguments to valid types:</source>
          <target state="translated">フォーマットを指定すると、互換性のない引数の型から保護され(C関数のプロトタイプのように)、引数を有効な型に変換しようとします。</target>
        </trans-unit>
        <trans-unit id="775251ff8acc87433d7ba486cdfbc13ea6154c5f" translate="yes" xml:space="preserve">
          <source>Specifying an empty list for &lt;em&gt;files&lt;/em&gt; will prevent the system defaults from being applied: only the well-known values will be present from a built-in list.</source>
          <target state="translated">&lt;em&gt;ファイルに&lt;/em&gt;空のリストを指定すると、システムデフォルトが適用されなくなります。組み込みのリストからは、既知の値のみが存在します。</target>
        </trans-unit>
        <trans-unit id="59ca5dc88e7f5b93fd6a72831833d0af7688a94f" translate="yes" xml:space="preserve">
          <source>Specifying any command resuming execution (currently &lt;a href=&quot;#pdbcommand-continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pdbcommand-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pdbcommand-return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pdbcommand-jump&quot;&gt;&lt;code&gt;jump&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pdbcommand-quit&quot;&gt;&lt;code&gt;quit&lt;/code&gt;&lt;/a&gt; and their abbreviations) terminates the command list (as if that command was immediately followed by end). This is because any time you resume execution (even with a simple next or step), you may encounter another breakpoint&amp;mdash;which could have its own command list, leading to ambiguities about which list to execute.</source>
          <target state="translated">実行を再開するコマンド（現在&lt;a href=&quot;#pdbcommand-continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pdbcommand-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pdbcommand-return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pdbcommand-jump&quot;&gt; &lt;code&gt;jump&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pdbcommand-quit&quot;&gt; &lt;code&gt;quit&lt;/code&gt; &lt;/a&gt;とその省略形）を指定すると、コマンドリストが終了します（そのコマンドの直後にendが続いているかのように）。これは、実行を再開するたびに（単純なnextまたはstepを使用しても）、別のブレークポイントが発生する可能性があるためです。ブレークポイントには独自のコマンドリストがあり、実行するリストが不明確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7d5e28b2d0975412c4405c7fc87bb76a3de58c25" translate="yes" xml:space="preserve">
          <source>Specifying custom filter chains</source>
          <target state="translated">カスタムフィルタチェーンの指定</target>
        </trans-unit>
        <trans-unit id="4495875b17100ed38611d69f282920f6eb4bc0ee" translate="yes" xml:space="preserve">
          <source>Specifying the Interpreter</source>
          <target state="translated">インタープリタの指定</target>
        </trans-unit>
        <trans-unit id="1653f666da4877629faf479e124639417cb66081" translate="yes" xml:space="preserve">
          <source>Specifying the required argument types (function prototypes)</source>
          <target state="translated">必要な引数型の指定(関数プロトタイプ</target>
        </trans-unit>
        <trans-unit id="bdb3310a772456a9074abc391cdd047bed9d5e78" translate="yes" xml:space="preserve">
          <source>Speeds from 1 to 10 enforce increasingly faster animation of line drawing and turtle turning.</source>
          <target state="translated">1 から 10 までの速度は、線画と亀の回転のアニメーションをますます高速化します。</target>
        </trans-unit>
        <trans-unit id="606b50a9d48bc841e496361aa97f19420b7436a5" translate="yes" xml:space="preserve">
          <source>Spinbox</source>
          <target state="translated">Spinbox</target>
        </trans-unit>
        <trans-unit id="d1120ba5605126227d0f7a27a6f349fed10b3e71" translate="yes" xml:space="preserve">
          <source>Split &lt;em&gt;string&lt;/em&gt; by the occurrences of &lt;em&gt;pattern&lt;/em&gt;. If capturing parentheses are used in &lt;em&gt;pattern&lt;/em&gt;, then the text of all groups in the pattern are also returned as part of the resulting list. If &lt;em&gt;maxsplit&lt;/em&gt; is nonzero, at most &lt;em&gt;maxsplit&lt;/em&gt; splits occur, and the remainder of the string is returned as the final element of the list.</source>
          <target state="translated">&lt;em&gt;string&lt;/em&gt;を&lt;em&gt;pattern&lt;/em&gt;の出現によって分割し&lt;em&gt;ます&lt;/em&gt;。キャプチャ括弧が&lt;em&gt;pattern&lt;/em&gt;で使用されている場合、&lt;em&gt;パターン&lt;/em&gt;内のすべてのグループのテキストも結果のリストの一部として返されます。場合&lt;em&gt;maxsplit個が&lt;/em&gt;非ゼロである、最大で&lt;em&gt;maxsplit個&lt;/em&gt;の分割発生し、残りの文字列は、リストの最後の要素として返されます。</target>
        </trans-unit>
        <trans-unit id="624e4f54a92b5f62cf410586e8595dd51455052c" translate="yes" xml:space="preserve">
          <source>Split the argument into words using &lt;a href=&quot;stdtypes#str.split&quot;&gt;&lt;code&gt;str.split()&lt;/code&gt;&lt;/a&gt;, capitalize each word using &lt;a href=&quot;stdtypes#str.capitalize&quot;&gt;&lt;code&gt;str.capitalize()&lt;/code&gt;&lt;/a&gt;, and join the capitalized words using &lt;a href=&quot;stdtypes#str.join&quot;&gt;&lt;code&gt;str.join()&lt;/code&gt;&lt;/a&gt;. If the optional second argument &lt;em&gt;sep&lt;/em&gt; is absent or &lt;code&gt;None&lt;/code&gt;, runs of whitespace characters are replaced by a single space and leading and trailing whitespace are removed, otherwise &lt;em&gt;sep&lt;/em&gt; is used to split and join the words.</source>
          <target state="translated">使用して単語に引数を分割&lt;a href=&quot;stdtypes#str.split&quot;&gt; &lt;code&gt;str.split()&lt;/code&gt; を&lt;/a&gt;使用して、各単語を大文字&lt;a href=&quot;stdtypes#str.capitalize&quot;&gt; &lt;code&gt;str.capitalize()&lt;/code&gt; &lt;/a&gt;、および使用して大文字の単語を参加&lt;a href=&quot;stdtypes#str.join&quot;&gt; &lt;code&gt;str.join()&lt;/code&gt; &lt;/a&gt;。オプションの2番目の引数&lt;em&gt;sep&lt;/em&gt;が存在しないか &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;一連&lt;/em&gt;の空白文字は1つのスペースに置き換えられ、先頭と末尾の空白が削除されます。それ以外の場合は、&lt;em&gt;sep&lt;/em&gt;を使用して単語を分割および結合します。</target>
        </trans-unit>
        <trans-unit id="34df959ff365ee0214500aac1f0e146cbda9c2da" translate="yes" xml:space="preserve">
          <source>Split the binary sequence into subsequences of the same type, using &lt;em&gt;sep&lt;/em&gt; as the delimiter string. If &lt;em&gt;maxsplit&lt;/em&gt; is given and non-negative, at most &lt;em&gt;maxsplit&lt;/em&gt; splits are done (thus, the list will have at most &lt;code&gt;maxsplit+1&lt;/code&gt; elements). If &lt;em&gt;maxsplit&lt;/em&gt; is not specified or is &lt;code&gt;-1&lt;/code&gt;, then there is no limit on the number of splits (all possible splits are made).</source>
          <target state="translated">区切り文字列として&lt;em&gt;sep&lt;/em&gt;を使用して、バイナリシーケンスを同じタイプのサブシーケンスに分割します。&lt;em&gt;maxsplit&lt;/em&gt;が指定され、負でない場合、最大で&lt;em&gt;maxsplit&lt;/em&gt;分割が行われます（したがって、リストには最大で &lt;code&gt;maxsplit+1&lt;/code&gt; 要素が含まれます）。場合&lt;em&gt;maxsplit個が&lt;/em&gt;指定され又はされないが、 &lt;code&gt;-1&lt;/code&gt; 、その後、分割数（すべての可能な分割が行われる）に制限はありません。</target>
        </trans-unit>
        <trans-unit id="8a11cfbe31ec9d3ea4209807b8db5ef56a2d393d" translate="yes" xml:space="preserve">
          <source>Split the binary sequence into subsequences of the same type, using &lt;em&gt;sep&lt;/em&gt; as the delimiter string. If &lt;em&gt;maxsplit&lt;/em&gt; is given, at most &lt;em&gt;maxsplit&lt;/em&gt; splits are done, the &lt;em&gt;rightmost&lt;/em&gt; ones. If &lt;em&gt;sep&lt;/em&gt; is not specified or &lt;code&gt;None&lt;/code&gt;, any subsequence consisting solely of ASCII whitespace is a separator. Except for splitting from the right, &lt;a href=&quot;#bytearray.rsplit&quot;&gt;&lt;code&gt;rsplit()&lt;/code&gt;&lt;/a&gt; behaves like &lt;a href=&quot;#bytearray.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; which is described in detail below.</source>
          <target state="translated">区切り文字列として&lt;em&gt;sep&lt;/em&gt;を使用して、バイナリシーケンスを同じタイプのサブシーケンスに分割します。場合&lt;em&gt;maxsplit個が&lt;/em&gt;与えられ、最大で&lt;em&gt;maxsplit個&lt;/em&gt;の分割、行われ&lt;em&gt;右端の&lt;/em&gt;ものを。&lt;em&gt;sep&lt;/em&gt;が指定されていないか &lt;code&gt;None&lt;/code&gt; の場合、ASCII空白のみで構成されるサブシーケンスは区切り文字になります。右から分割することを除いて、&lt;a href=&quot;#bytearray.rsplit&quot;&gt; &lt;code&gt;rsplit()&lt;/code&gt; &lt;/a&gt;は、以下で詳細に説明する&lt;a href=&quot;#bytearray.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; の&lt;/a&gt;ように動作します。</target>
        </trans-unit>
        <trans-unit id="9c120c2488b7f6b7649865a9e3b8f08a7da3cd29" translate="yes" xml:space="preserve">
          <source>Split the pathname &lt;em&gt;path&lt;/em&gt; into a pair &lt;code&gt;(drive, tail)&lt;/code&gt; where &lt;em&gt;drive&lt;/em&gt; is either a mount point or the empty string. On systems which do not use drive specifications, &lt;em&gt;drive&lt;/em&gt; will always be the empty string. In all cases, &lt;code&gt;drive
+ tail&lt;/code&gt; will be the same as &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">パス名&lt;em&gt;パス&lt;/em&gt;をペア &lt;code&gt;(drive, tail)&lt;/code&gt; に分割します。&lt;em&gt;ドライブ&lt;/em&gt;はマウントポイントまたは空の文字列です。ドライブ指定を使用しないシステムでは、&lt;em&gt;ドライブ&lt;/em&gt;は常に空の文字列になります。すべての場合において、 &lt;code&gt;drive + tail&lt;/code&gt; は&lt;em&gt;パス&lt;/em&gt;と同じになり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="002ced4b0d06d7c70fa5187bdcf4b832097c6d2e" translate="yes" xml:space="preserve">
          <source>Split the pathname &lt;em&gt;path&lt;/em&gt; into a pair &lt;code&gt;(root, ext)&lt;/code&gt; such that &lt;code&gt;root + ext ==
path&lt;/code&gt;, and &lt;em&gt;ext&lt;/em&gt; is empty or begins with a period and contains at most one period. Leading periods on the basename are ignored; &lt;code&gt;splitext('.cshrc')&lt;/code&gt; returns &lt;code&gt;('.cshrc', '')&lt;/code&gt;.</source>
          <target state="translated">パス名分割&lt;em&gt;経路を&lt;/em&gt;ペアに &lt;code&gt;(root, ext)&lt;/code&gt; ように &lt;code&gt;root + ext == path&lt;/code&gt; 、および&lt;em&gt;extは&lt;/em&gt;空であるか周期で始まり、多くても1つの期間に含まれています。ベース名の先頭のピリオドは無視されます。 &lt;code&gt;splitext('.cshrc')&lt;/code&gt; は &lt;code&gt;('.cshrc', '')&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f1b6df4cdbaa5746a7f5aa657a698f89ba25c431" translate="yes" xml:space="preserve">
          <source>Split the pathname &lt;em&gt;path&lt;/em&gt; into a pair, &lt;code&gt;(head, tail)&lt;/code&gt; where &lt;em&gt;tail&lt;/em&gt; is the last pathname component and &lt;em&gt;head&lt;/em&gt; is everything leading up to that. The &lt;em&gt;tail&lt;/em&gt; part will never contain a slash; if &lt;em&gt;path&lt;/em&gt; ends in a slash, &lt;em&gt;tail&lt;/em&gt; will be empty. If there is no slash in &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;head&lt;/em&gt; will be empty. If &lt;em&gt;path&lt;/em&gt; is empty, both &lt;em&gt;head&lt;/em&gt; and &lt;em&gt;tail&lt;/em&gt; are empty. Trailing slashes are stripped from &lt;em&gt;head&lt;/em&gt; unless it is the root (one or more slashes only). In all cases, &lt;code&gt;join(head, tail)&lt;/code&gt; returns a path to the same location as &lt;em&gt;path&lt;/em&gt; (but the strings may differ). Also see the functions &lt;a href=&quot;#os.path.dirname&quot;&gt;&lt;code&gt;dirname()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.basename&quot;&gt;&lt;code&gt;basename()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パス名の&lt;em&gt;パス&lt;/em&gt;を &lt;code&gt;(head, tail)&lt;/code&gt; ペアに分割し&lt;em&gt;ます。&lt;/em&gt;ここで、&lt;em&gt;tail&lt;/em&gt;は最後のパス名コンポーネントで、&lt;em&gt;head&lt;/em&gt;はそれまでのすべてです。&lt;em&gt;テール&lt;/em&gt;はスラッシュを含みません。&lt;em&gt;パス&lt;/em&gt;がスラッシュで終わる場合、&lt;em&gt;尾&lt;/em&gt;は空になります。&lt;em&gt;パス&lt;/em&gt;にスラッシュがない場合、&lt;em&gt;ヘッド&lt;/em&gt;は空になります。場合は&lt;em&gt;、パスが&lt;/em&gt;空である、両方の&lt;em&gt;頭&lt;/em&gt;と&lt;em&gt;尾が&lt;/em&gt;空になっています。末尾のスラッシュは、ルート（1つ以上のスラッシュのみ）でない限り、&lt;em&gt;先頭&lt;/em&gt;から取り除かれます。すべての場合において、 &lt;code&gt;join(head, tail)&lt;/code&gt; は同じ場所へのパスを返します&lt;em&gt;パス&lt;/em&gt;（ただし、文字列は異なる場合があります）。関数&lt;a href=&quot;#os.path.dirname&quot;&gt; &lt;code&gt;dirname()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.path.basename&quot;&gt; &lt;code&gt;basename()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="9f2c182fe12b7deb233dba9d955ce0e4cb2375ec" translate="yes" xml:space="preserve">
          <source>Split the sequence at the first occurrence of &lt;em&gt;sep&lt;/em&gt;, and return a 3-tuple containing the part before the separator, the separator itself or its bytearray copy, and the part after the separator. If the separator is not found, return a 3-tuple containing a copy of the original sequence, followed by two empty bytes or bytearray objects.</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt;の最初の出現でシーケンスを分割し、セパレーターの前の部分、セパレーター自体またはそのバイト配列コピー、およびセパレーターの後の部分を含む3タプルを返します。セパレータが見つからない場合は、元のシーケンスのコピーを含む3つのタプルと、それに続く2つの空のバイトまたはバイト配列オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="363b74d316fe50da20681568afc31675c974c812" translate="yes" xml:space="preserve">
          <source>Split the sequence at the last occurrence of &lt;em&gt;sep&lt;/em&gt;, and return a 3-tuple containing the part before the separator, the separator itself or its bytearray copy, and the part after the separator. If the separator is not found, return a 3-tuple containing two empty bytes or bytearray objects, followed by a copy of the original sequence.</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt;の最後の出現でシーケンスを分割し、セパレータの前の部分、セパレータ自体またはそのバイト配列コピー、およびセパレータの後の部分を含む3タプルを返します。セパレータが見つからない場合は、2つの空のバイトまたはバイト配列オブジェクトを含む3タプルに続いて、元のシーケンスのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="d2794fd944181ca8687f24d60409452b105e870d" translate="yes" xml:space="preserve">
          <source>Split the string &lt;em&gt;s&lt;/em&gt; using shell-like syntax. If &lt;em&gt;comments&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (the default), the parsing of comments in the given string will be disabled (setting the &lt;a href=&quot;#shlex.shlex.commenters&quot;&gt;&lt;code&gt;commenters&lt;/code&gt;&lt;/a&gt; attribute of the &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance to the empty string). This function operates in POSIX mode by default, but uses non-POSIX mode if the &lt;em&gt;posix&lt;/em&gt; argument is false.</source>
          <target state="translated">シェルのような構文を使用して文字列&lt;em&gt;s&lt;/em&gt;を分割します。場合は&lt;em&gt;、コメントが&lt;/em&gt;ある&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;（デフォルト）、与えられた文字列のコメントの解析は、（設定は無効になります&lt;a href=&quot;#shlex.shlex.commenters&quot;&gt; &lt;code&gt;commenters&lt;/code&gt; &lt;/a&gt;の属性&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;空の文字列にインスタンスを）。この関数はデフォルトでPOSIXモードで動作しますが、&lt;em&gt;posix&lt;/em&gt;引数がfalseの場合は非POSIXモードを使用します。</target>
        </trans-unit>
        <trans-unit id="d32e9e559fe9c95f62d2687d588d9f518b950cf1" translate="yes" xml:space="preserve">
          <source>Split the string at the first occurrence of &lt;em&gt;sep&lt;/em&gt;, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return a 3-tuple containing the string itself, followed by two empty strings.</source>
          <target state="translated">最初に出現する&lt;em&gt;sep&lt;/em&gt;で文字列を分割し、セパレータの前の部分、セパレータ自体、およびセパレータの後の部分を含む3タプルを返します。セパレータが見つからない場合は、文字列自体を含む3つのタプルと、それに続く2つの空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="7accd7b37390066e25bb66367f4c2ea8e7d36b50" translate="yes" xml:space="preserve">
          <source>Split the string at the last occurrence of &lt;em&gt;sep&lt;/em&gt;, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return a 3-tuple containing two empty strings, followed by the string itself.</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt;の最後の出現で文字列を分割し、セパレータの前の部分、セパレータ自体、およびセパレータの後の部分を含む3タプルを返します。区切り文字が見つからない場合は、2つの空の文字列とその後に続く文字列自体を含む3タプルを返します。</target>
        </trans-unit>
        <trans-unit id="06623adbac2242555e5a6ec3d6e2c7f56f2eed41" translate="yes" xml:space="preserve">
          <source>Spurious slashes and single dots are collapsed, but double dots (&lt;code&gt;'..'&lt;/code&gt;) are not, since this would change the meaning of a path in the face of symbolic links:</source>
          <target state="translated">偽のスラッシュと単一のドットは折りたたまれますが、二重のドット（ &lt;code&gt;'..'&lt;/code&gt; ）は折りたたまれません。これは、シンボリックリンクに直面したパスの意味を変更するためです。</target>
        </trans-unit>
        <trans-unit id="1fcfef4fca5d7fa08393655ebcdf179da1afb5c7" translate="yes" xml:space="preserve">
          <source>Square root of a non-negative number to context precision.</source>
          <target state="translated">非負の数の平方根をコンテキスト精度に変換します。</target>
        </trans-unit>
        <trans-unit id="92c9ea71c15cbb09e5ae60de5a8ab0f25d70a156" translate="yes" xml:space="preserve">
          <source>Squeeze</source>
          <target state="translated">Squeeze</target>
        </trans-unit>
        <trans-unit id="cf5fc98dccdd1096a4c77dc2f738c01140c8d152" translate="yes" xml:space="preserve">
          <source>Squeezed output is expanded in place by double-clicking the label. It can also be sent to the clipboard or a separate view window by right-clicking the label.</source>
          <target state="translated">しぼった出力は、ラベルをダブルクリックすることでその場で展開されます。また、ラベルを右クリックしてクリップボードや別のビューウィンドウに送ることもできます。</target>
        </trans-unit>
        <trans-unit id="36d2a0e22dad9a61273cef01b72cefb60eb28597" translate="yes" xml:space="preserve">
          <source>Srmount error</source>
          <target state="translated">Srマウントエラー</target>
        </trans-unit>
        <trans-unit id="da4cda8b6dc64cc4705952b17f84f60811e062ab" translate="yes" xml:space="preserve">
          <source>Stack Viewer</source>
          <target state="translated">スタックビューア</target>
        </trans-unit>
        <trans-unit id="206162892659b2e81eda023d03e9c0094c87cabb" translate="yes" xml:space="preserve">
          <source>Stack frame information (where available) from the bottom of the stack in the current thread, up to and including the stack frame of the logging call which resulted in the creation of this record.</source>
          <target state="translated">スタックフレーム情報 (利用可能な場合)現在のスレッドのスタックの一番下から、このレコードの作成につながったロギングコールのスタックフレームまでの情報。</target>
        </trans-unit>
        <trans-unit id="60ee28a9df54e8a2c88ca4c8f5c061b099fed8ad" translate="yes" xml:space="preserve">
          <source>StackSummary Objects</source>
          <target state="translated">StackSummary オブジェクト</target>
        </trans-unit>
        <trans-unit id="8697064c54272ec190e9b70fff08feaf084ec16d" translate="yes" xml:space="preserve">
          <source>Stale NFS file handle</source>
          <target state="translated">古い NFS ファイルハンドル</target>
        </trans-unit>
        <trans-unit id="0c92eba5493d33cb26e8329a72cca1a5f671ed1e" translate="yes" xml:space="preserve">
          <source>Stamp a copy of the turtle shape onto the canvas at the current turtle position. Return a stamp_id for that stamp, which can be used to delete it by calling &lt;code&gt;clearstamp(stamp_id)&lt;/code&gt;.</source>
          <target state="translated">亀の形のコピーをキャンバス上の現在の亀の位置にスタンプします。そのスタンプのstamp_idを返します。これは、 &lt;code&gt;clearstamp(stamp_id)&lt;/code&gt; を呼び出して削除するために使用できます。</target>
        </trans-unit>
        <trans-unit id="0f1b34dd28af717c925fd02434c2858f41d1d9d6" translate="yes" xml:space="preserve">
          <source>Standard Compliance and Interoperability</source>
          <target state="translated">標準コンプライアンスと相互運用性</target>
        </trans-unit>
        <trans-unit id="5d5e4d784d064c3391c8432e9388c60df22861c2" translate="yes" xml:space="preserve">
          <source>Standard Encodings</source>
          <target state="translated">標準エンコード</target>
        </trans-unit>
        <trans-unit id="c7edcfe96860fa5ad69f4d03546179c522248de7" translate="yes" xml:space="preserve">
          <source>Standard Generic Collections</source>
          <target state="translated">標準的な一般的なコレクション</target>
        </trans-unit>
        <trans-unit id="a615f7ad46679e26be18ab35ee3a107423b37390" translate="yes" xml:space="preserve">
          <source>Standard Interpreter Types</source>
          <target state="translated">標準的な通訳者の種類</target>
        </trans-unit>
        <trans-unit id="f6a5b2b2032c9a6db1cb435d9880c851e40b29da" translate="yes" xml:space="preserve">
          <source>Standard Options</source>
          <target state="translated">デフォルトオプション</target>
        </trans-unit>
        <trans-unit id="ed68ea828c983dc0879963a57e5f6820a310fa4a" translate="yes" xml:space="preserve">
          <source>Standard asyncio event loop supports running subprocesses from different threads by default.</source>
          <target state="translated">標準のasyncioイベントループは、デフォルトでは異なるスレッドからのサブプロセスの実行をサポートしています。</target>
        </trans-unit>
        <trans-unit id="721ad2d7731ed3e763dcc6ec212b4cf1105e7ca5" translate="yes" xml:space="preserve">
          <source>Standard error stream (&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;None&lt;/code&gt; if the process was created with &lt;code&gt;stderr=None&lt;/code&gt;.</source>
          <target state="translated">標準エラーストリーム（&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;）又は &lt;code&gt;None&lt;/code&gt; のプロセスを用いて作成された場合、 &lt;code&gt;stderr=None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11815c14736d825f4ca3a22df14e747f5d0203b3" translate="yes" xml:space="preserve">
          <source>Standard input stream (&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;None&lt;/code&gt; if the process was created with &lt;code&gt;stdin=None&lt;/code&gt;.</source>
          <target state="translated">標準入力ストリーム（&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;）又は &lt;code&gt;None&lt;/code&gt; のプロセスを用いて作成された場合 &lt;code&gt;stdin=None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="741c4c751795f825ec76f45e980cf6794b15108d" translate="yes" xml:space="preserve">
          <source>Standard keybindings (like</source>
          <target state="translated">標準的なキーバインド(</target>
        </trans-unit>
        <trans-unit id="bd3f9fdee53c4049395e8ed6844e2f74ee32add4" translate="yes" xml:space="preserve">
          <source>Standard names are defined for the following types:</source>
          <target state="translated">以下のタイプには標準的な名前が定義されています。</target>
        </trans-unit>
        <trans-unit id="a8437dca3a5ee6a72a49a35b78bc592045538655" translate="yes" xml:space="preserve">
          <source>Standard output stream (&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;None&lt;/code&gt; if the process was created with &lt;code&gt;stdout=None&lt;/code&gt;.</source>
          <target state="translated">標準出力ストリーム（&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;）又は &lt;code&gt;None&lt;/code&gt; のプロセスを用いて作成された場合 &lt;code&gt;stdout=None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c23decdea50174b299c1e07f7d1aba1487f976f" translate="yes" xml:space="preserve">
          <source>Standard size</source>
          <target state="translated">標準サイズ</target>
        </trans-unit>
        <trans-unit id="d90024890659048660723a88531c951862ae1c45" translate="yes" xml:space="preserve">
          <source>Standard size depends only on the format character; see the table in the &lt;a href=&quot;#format-characters&quot;&gt;Format Characters&lt;/a&gt; section.</source>
          <target state="translated">標準サイズはフォーマット文字のみに依存します。&lt;a href=&quot;#format-characters&quot;&gt;書式文字&lt;/a&gt;セクションの表を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8653437e634d4d83071fa4b9b14bd9dfdc0241d" translate="yes" xml:space="preserve">
          <source>Standard zipfile data, as generated by the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module. The zipfile content &lt;em&gt;must&lt;/em&gt; include a file called &lt;code&gt;__main__.py&lt;/code&gt; (which must be in the &amp;ldquo;root&amp;rdquo; of the zipfile - i.e., it cannot be in a subdirectory). The zipfile data can be compressed or uncompressed.</source>
          <target state="translated">&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;モジュールによって生成される標準のzipfileデータ。zipfileのコンテンツには、 &lt;code&gt;__main__.py&lt;/code&gt; というファイル&lt;em&gt;が&lt;/em&gt;含まれている&lt;em&gt;必要&lt;/em&gt;があります（zipfileの「ルート」にある必要があります。つまり、サブディレクトリに置くことはできません）。zipfileデータは、圧縮または非圧縮にすることができます。</target>
        </trans-unit>
        <trans-unit id="b15079965dae1709bfc3d7c84c71d91e3e86acbd" translate="yes" xml:space="preserve">
          <source>Standout mode</source>
          <target state="translated">スタンドアウトモード</target>
        </trans-unit>
        <trans-unit id="0ca6b689764172072fe82050291f976dca0f40fc" translate="yes" xml:space="preserve">
          <source>Start a TCP server.</source>
          <target state="translated">TCPサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="a20f3eaec752d4e36f4b9a77c83ac932e806ad61" translate="yes" xml:space="preserve">
          <source>Start a TLS session on the active connection as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt;. This is only allowed before user authentication</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2595で&lt;/strong&gt;&lt;/a&gt;指定され&lt;strong&gt;ている&lt;/strong&gt;ように、アクティブな接続でTLSセッションを開始します。これはユーザー認証の前にのみ許可されます</target>
        </trans-unit>
        <trans-unit id="56553e7371cfcbc8672dacd0494a328944ecefe0" translate="yes" xml:space="preserve">
          <source>Start a Unix socket server.</source>
          <target state="translated">Unixソケットサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="baacb173f2f2905f991b08bed335d6b5a7482c21" translate="yes" xml:space="preserve">
          <source>Start a file with its associated application.</source>
          <target state="translated">関連するアプリケーションでファイルを起動します。</target>
        </trans-unit>
        <trans-unit id="5ac8eb9dd996b19aaba74df70d1030120d5225f1" translate="yes" xml:space="preserve">
          <source>Start a new thread and return its identifier. The thread executes the function &lt;em&gt;function&lt;/em&gt; with the argument list &lt;em&gt;args&lt;/em&gt; (which must be a tuple). The optional &lt;em&gt;kwargs&lt;/em&gt; argument specifies a dictionary of keyword arguments.</source>
          <target state="translated">新しいスレッドを開始し、その識別子を返します。スレッドは、引数リスト&lt;em&gt;args&lt;/em&gt;（タプルである必要があります）を使用して関数&lt;em&gt;function&lt;/em&gt;を実行します。オプションの&lt;em&gt;kwargs&lt;/em&gt;引数は、キーワード引数の辞書を指定します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="634c4ed2d5cdc870fc476dee56d52ea8875696c2" translate="yes" xml:space="preserve">
          <source>Start a socket server.</source>
          <target state="translated">ソケットサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="77fe84a448114c72165cfa1fd6015b2ac4fff31d" translate="yes" xml:space="preserve">
          <source>Start a subprocess to start the manager. If &lt;em&gt;initializer&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; then the subprocess will call &lt;code&gt;initializer(*initargs)&lt;/code&gt; when it starts.</source>
          <target state="translated">サブプロセスを開始して、マネージャーを開始します。&lt;em&gt;初期化子&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、サブプロセスは開始時に &lt;code&gt;initializer(*initargs)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="3c0e24ecad41db0439056acfab4f6cb048439617" translate="yes" xml:space="preserve">
          <source>Start accepting connections until the coroutine is cancelled. Cancellation of &lt;code&gt;serve_forever&lt;/code&gt; task causes the server to be closed.</source>
          <target state="translated">コルーチンがキャンセルされるまで、接続の受け入れを開始します。 &lt;code&gt;serve_forever&lt;/code&gt; タスクをキャンセルすると、サーバーが閉じます。</target>
        </trans-unit>
        <trans-unit id="fdb2ccd68c21a42a5993b8ffbc48b0380c368d22" translate="yes" xml:space="preserve">
          <source>Start accepting connections.</source>
          <target state="translated">接続の受付を開始します。</target>
        </trans-unit>
        <trans-unit id="39ec2f848f9ebb338fd88e39aeda12638d9ce9ff" translate="yes" xml:space="preserve">
          <source>Start an asyncio Task.</source>
          <target state="translated">非同期タスクを開始します。</target>
        </trans-unit>
        <trans-unit id="92a749f0665e7777dac44038d659366745e95ee3" translate="yes" xml:space="preserve">
          <source>Start an interactive interpreter (using the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module) whose global namespace contains all the (global and local) names found in the current scope.</source>
          <target state="translated">グローバルネームスペースに現在のスコープで見つかったすべての（グローバルおよびローカル）名が含まれている対話型インタープリターを（&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュールを使用して）起動します。</target>
        </trans-unit>
        <trans-unit id="425d074b5fb9c7d1308ad066593f2d7f62aa8e3f" translate="yes" xml:space="preserve">
          <source>Start collecting profiling data. Only in &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロファイリングデータの収集を開始します。&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;のみ。</target>
        </trans-unit>
        <trans-unit id="5d63a590d47eaa655f79d1852f4c182df315c492" translate="yes" xml:space="preserve">
          <source>Start debugging from &lt;em&gt;frame&lt;/em&gt;. If &lt;em&gt;frame&lt;/em&gt; is not specified, debugging starts from caller&amp;rsquo;s frame.</source>
          <target state="translated">&lt;em&gt;フレーム&lt;/em&gt;からデバッグを開始し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;フレーム&lt;/em&gt;が指定されていない場合、デバッグは呼び出し元のフレームから開始されます。</target>
        </trans-unit>
        <trans-unit id="043dbd19e32f3cd1d117b8e10365a101defa3f80" translate="yes" xml:space="preserve">
          <source>Start debugging with a &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; instance from caller&amp;rsquo;s frame.</source>
          <target state="translated">呼び出し元のフレームから&lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt;インスタンスを使用してデバッグを開始します。</target>
        </trans-unit>
        <trans-unit id="629d5881e2030a8c8cc2bc04fb39503600916346" translate="yes" xml:space="preserve">
          <source>Start looking for candidate matches with the object on which the &lt;code&gt;get_body&lt;/code&gt; method is called.</source>
          <target state="translated">&lt;code&gt;get_body&lt;/code&gt; メソッドが呼び出されるオブジェクトと一致する候補の検索を開始します。</target>
        </trans-unit>
        <trans-unit id="e1ad63b0a9ef1bd60486f9473c08729bee608b3c" translate="yes" xml:space="preserve">
          <source>Start monitoring the &lt;em&gt;fd&lt;/em&gt; file descriptor for read availability and invoke &lt;em&gt;callback&lt;/em&gt; with the specified arguments once &lt;em&gt;fd&lt;/em&gt; is available for reading.</source>
          <target state="translated">監視を開始&lt;em&gt;FD&lt;/em&gt;読み取り可用性と呼び出しのためのファイル記述子&lt;em&gt;のコールバックを&lt;/em&gt;一度指定された引数で&lt;em&gt;fdは&lt;/em&gt;読み込みのために利用可能です。</target>
        </trans-unit>
        <trans-unit id="468229a70f3a28ef528367be2ea4285743356204" translate="yes" xml:space="preserve">
          <source>Start monitoring the &lt;em&gt;fd&lt;/em&gt; file descriptor for write availability and invoke &lt;em&gt;callback&lt;/em&gt; with the specified arguments once &lt;em&gt;fd&lt;/em&gt; is available for writing.</source>
          <target state="translated">監視を開始&lt;em&gt;FD&lt;/em&gt;書き込み可用性と呼び出しのためのファイル記述子&lt;em&gt;のコールバックを&lt;/em&gt;一度指定された引数で&lt;em&gt;fdが&lt;/em&gt;書き込みのために利用可能です。</target>
        </trans-unit>
        <trans-unit id="d9362be18e50abb5bdd4e292355e8137838c6bdc" translate="yes" xml:space="preserve">
          <source>Start of heading, console interrupt</source>
          <target state="translated">見出し開始、コンソール割り込み</target>
        </trans-unit>
        <trans-unit id="7168ff93d44381888612d6584de11b0bc64d220d" translate="yes" xml:space="preserve">
          <source>Start of text</source>
          <target state="translated">テキストの開始</target>
        </trans-unit>
        <trans-unit id="4c449e1579658e16609f9a4006c6e349f8f3e679" translate="yes" xml:space="preserve">
          <source>Start recording the vertices of a polygon. Current turtle position is first vertex of polygon.</source>
          <target state="translated">多角形の頂点の記録を開始します。現在の亀の位置はポリゴンの最初の頂点です。</target>
        </trans-unit>
        <trans-unit id="48c5f4dcf3192b47e511c56840a707a56278db35" translate="yes" xml:space="preserve">
          <source>Start the process&amp;rsquo;s activity.</source>
          <target state="translated">プロセスのアクティビティを開始します。</target>
        </trans-unit>
        <trans-unit id="665b36dc63090e0556609b9ac24e0e62bec016db" translate="yes" xml:space="preserve">
          <source>Start the thread&amp;rsquo;s activity.</source>
          <target state="translated">スレッドのアクティビティを開始します。</target>
        </trans-unit>
        <trans-unit id="0f61fc390f8f99d1730c5cb2385dd3c121d91d29" translate="yes" xml:space="preserve">
          <source>Start tracing Python memory allocations: install hooks on Python memory allocators. Collected tracebacks of traces will be limited to &lt;em&gt;nframe&lt;/em&gt; frames. By default, a trace of a memory block only stores the most recent frame: the limit is &lt;code&gt;1&lt;/code&gt;. &lt;em&gt;nframe&lt;/em&gt; must be greater or equal to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Pythonメモリ割り当てのトレースを開始します。Pythonメモリ割り当てにフックをインストールします。収集されたトレースのトレースバックは、&lt;em&gt;nframe&lt;/em&gt;フレームに制限されます。デフォルトでは、メモリブロックのトレースは最新のフレームのみを保存します。制限は &lt;code&gt;1&lt;/code&gt; です。&lt;em&gt;nframe&lt;/em&gt;は &lt;code&gt;1&lt;/code&gt; 以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f99cd45ecac049e570a8da180e091f5895b15671" translate="yes" xml:space="preserve">
          <source>Start watching a file descriptor for read availability.</source>
          <target state="translated">読み取り可能なファイルディスクリプタの監視を開始します。</target>
        </trans-unit>
        <trans-unit id="3d3d5df9471ab10ee71139bd55b93be113a89527" translate="yes" xml:space="preserve">
          <source>Start watching a file descriptor for write availability.</source>
          <target state="translated">書き込み可能なファイルディスクリプタの監視を開始します。</target>
        </trans-unit>
        <trans-unit id="3232572be89ec6bf08a7f261cc2709b32f6605d9" translate="yes" xml:space="preserve">
          <source>Starting from Python 3.8 all functions involving a file copy (&lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;copyfile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#shutil.move&quot;&gt;&lt;code&gt;move()&lt;/code&gt;&lt;/a&gt;) may use platform-specific &amp;ldquo;fast-copy&amp;rdquo; syscalls in order to copy the file more efficiently (see &lt;a href=&quot;https://bugs.python.org/issue33671&quot;&gt;bpo-33671&lt;/a&gt;). &amp;ldquo;fast-copy&amp;rdquo; means that the copying operation occurs within the kernel, avoiding the use of userspace buffers in Python as in &amp;ldquo;&lt;code&gt;outfd.write(infd.read())&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">Python 3.8以降、ファイルのコピーに関連するすべての関数&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;copyfile()&lt;/code&gt; &lt;/a&gt;、copy（）、copy2（）、&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#shutil.move&quot;&gt; &lt;code&gt;move()&lt;/code&gt; &lt;/a&gt;）は、ファイルをさらにコピーするために、プラットフォーム固有の「高速コピー」システムコールを使用できます。効率的に（&lt;a href=&quot;https://bugs.python.org/issue33671&quot;&gt;bpo-33671を&lt;/a&gt;参照）。「高速コピー」とは、コピー操作がカーネル内で行われることを意味し、「 &lt;code&gt;outfd.write(infd.read())&lt;/code&gt; 」のように、Pythonでのユーザー空間バッファの使用を回避します。</target>
        </trans-unit>
        <trans-unit id="199ab83eee69665d4fac5068f3e355186d6d0604" translate="yes" xml:space="preserve">
          <source>Starting in version 3.5, deques support &lt;code&gt;__add__()&lt;/code&gt;, &lt;code&gt;__mul__()&lt;/code&gt;, and &lt;code&gt;__imul__()&lt;/code&gt;.</source>
          <target state="translated">バージョン3.5以降、両端キューは &lt;code&gt;__add__()&lt;/code&gt; 、 &lt;code&gt;__mul__()&lt;/code&gt; 、および &lt;code&gt;__imul__()&lt;/code&gt; をサポートします。</target>
        </trans-unit>
        <trans-unit id="34c3d2beb14a4db08c2354c1e565d9897de47938" translate="yes" xml:space="preserve">
          <source>Starting with Python 3.4, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; methods no longer prevent reference cycles from being garbage collected, and module globals are no longer forced to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; during &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;. So this code should work without any issues on CPython.</source>
          <target state="translated">Python 3.4以降、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;メソッドは参照サイクルのガベージコレクションを妨げなくなり、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;インタープリターのシャットダウン&lt;/a&gt;中にモジュールグローバルが強制的に&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;になることはなくなりました。したがって、このコードはCPythonで問題なく動作するはずです。</target>
        </trans-unit>
        <trans-unit id="112d9fe9abe00bd1306c2597e742465da8f97772" translate="yes" xml:space="preserve">
          <source>Starting with Python 3.4, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; methods no longer prevent reference cycles from being garbage collected, and module globals are no longer forced to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; during &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;. So this code should work without any issues on CPython.</source>
          <target state="translated">Python 3.4以降、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;メソッドは、参照サイクルのガベージコレクションを妨げなくなり、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;インタープリターのシャットダウン&lt;/a&gt;中にモジュールグローバルが&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;に強制されなくなりました。したがって、このコードはCPythonで問題なく機能するはずです。</target>
        </trans-unit>
        <trans-unit id="03991468a36c5cbc21c4764bd975a6b652605956" translate="yes" xml:space="preserve">
          <source>Starting with a 50% &lt;a href=&quot;https://en.wikipedia.org/wiki/Prior_probability&quot;&gt;prior probability&lt;/a&gt; of being male or female, we compute the posterior as the prior times the product of likelihoods for the feature measurements given the gender:</source>
          <target state="translated">男性または女性である50％の&lt;a href=&quot;https://en.wikipedia.org/wiki/Prior_probability&quot;&gt;事前確率&lt;/a&gt;から始めて、事前確率として、事後を計算します。性別が与えられた機能測定の尤度の積：</target>
        </trans-unit>
        <trans-unit id="af0ace2b0834231e293acc4bb8c395d699dc6b5b" translate="yes" xml:space="preserve">
          <source>Starting with the groups returned by &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt;&lt;code&gt;get_opcodes()&lt;/code&gt;&lt;/a&gt;, this method splits out smaller change clusters and eliminates intervening ranges which have no changes.</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt; &lt;code&gt;get_opcodes()&lt;/code&gt; &lt;/a&gt;によって返されたグループから始めて、このメソッドは小さな変更クラスタを分割し、変更のない介在範囲を排除します。</target>
        </trans-unit>
        <trans-unit id="03afb6e00b88a800a49c779859ca3e3432085329" translate="yes" xml:space="preserve">
          <source>Starts cleaning up the stack when a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement block exits.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントブロックが存在するときにスタックのクリーンアップを開始します。</target>
        </trans-unit>
        <trans-unit id="cf1b38fa28025ee66922d841b8c8af347942d98d" translate="yes" xml:space="preserve">
          <source>Starts event loop - calling Tkinter&amp;rsquo;s mainloop function. Must be the last statement in a turtle graphics program. Must &lt;em&gt;not&lt;/em&gt; be used if a script is run from within IDLE in -n mode (No subprocess) - for interactive use of turtle graphics.</source>
          <target state="translated">イベントループを開始します-Tkinterのmainloop関数を呼び出します。タートルグラフィックプログラムの最後のステートメントである必要があります。なければなら&lt;em&gt;ない&lt;/em&gt;タートルグラフィックスの対話的な使用のために-スクリプトは-nモード（ノーサブプロセス）でIDLE内から実行された場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="e411fc936a3a5f521f7dcf2672c6ce8dc5dc1a00" translate="yes" xml:space="preserve">
          <source>Starts the listener.</source>
          <target state="translated">リスナーを起動します。</target>
        </trans-unit>
        <trans-unit id="780a7fb1e88362c1d8d6c3faf04c1519b120fea5" translate="yes" xml:space="preserve">
          <source>Starts up a socket server on the specified port, and listens for new configurations. If no port is specified, the module&amp;rsquo;s default &lt;code&gt;DEFAULT_LOGGING_CONFIG_PORT&lt;/code&gt; is used. Logging configurations will be sent as a file suitable for processing by &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; instance on which you can call &lt;a href=&quot;threading#threading.Thread.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; to start the server, and which you can &lt;a href=&quot;threading#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; when appropriate. To stop the server, call &lt;a href=&quot;#logging.config.stopListening&quot;&gt;&lt;code&gt;stopListening()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたポートでソケットサーバーを起動し、新しい構成を待機します。ポートが指定されていない場合、モジュールのデフォルトの &lt;code&gt;DEFAULT_LOGGING_CONFIG_PORT&lt;/code&gt; が使用されます。ロギング構成は、&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt;による処理に適したファイルとして送信されます。サーバーを起動するためにstart &lt;a href=&quot;threading#threading.Thread.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;を呼び出すことができ、必要に応じて&lt;a href=&quot;threading#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;を実行できる&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;インスタンスを返します。サーバーを停止するには、&lt;a href=&quot;#logging.config.stopListening&quot;&gt; &lt;code&gt;stopListening()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="13137a5ebd076d587c5b40123cf099b3eb42b07d" translate="yes" xml:space="preserve">
          <source>Startup and code execution</source>
          <target state="translated">起動とコード実行</target>
        </trans-unit>
        <trans-unit id="1327607041725472cb4778c190325c9e4b6f66d5" translate="yes" xml:space="preserve">
          <source>Startup failure</source>
          <target state="translated">起動失敗</target>
        </trans-unit>
        <trans-unit id="356c8e78c9f6ac7bd6e85de0422d64192fd74519" translate="yes" xml:space="preserve">
          <source>Startup hooks</source>
          <target state="translated">スタートアップのフック</target>
        </trans-unit>
        <trans-unit id="430c60086395ee890c04f06b9cff36007ad695cc" translate="yes" xml:space="preserve">
          <source>State machine:</source>
          <target state="translated">ステートマシン。</target>
        </trans-unit>
        <trans-unit id="9dc0eaf751370b9adec14c7a6550ddd2ec2cc445" translate="yes" xml:space="preserve">
          <source>Stateless Encoding and Decoding</source>
          <target state="translated">ステートレスエンコードとデコード</target>
        </trans-unit>
        <trans-unit id="5653cebc057d4791ce07031ad9286e729de6d691" translate="yes" xml:space="preserve">
          <source>Statements</source>
          <target state="translated">Statements</target>
        </trans-unit>
        <trans-unit id="6bb7a941a9b1307ebd64b79b1f985aeed91f4301" translate="yes" xml:space="preserve">
          <source>Static methods in Python are similar to those found in Java or C++. Also see &lt;a href=&quot;#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; for a variant that is useful for creating alternate class constructors.</source>
          <target state="translated">Pythonの静的メソッドは、JavaまたはC ++にあるものと似ています。代替クラスコンストラクターの作成に役立つバリアントについては、&lt;a href=&quot;#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cd4e9febd5df78059c09dd96054f499aeeb33035" translate="yes" xml:space="preserve">
          <source>Statistic</source>
          <target state="translated">Statistic</target>
        </trans-unit>
        <trans-unit id="e816e33ded936a6cc135a29c08f44ab2c73d8b9a" translate="yes" xml:space="preserve">
          <source>Statistic difference on memory allocations between an old and a new &lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt;&lt;code&gt;Snapshot&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">古い&lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt; &lt;code&gt;Snapshot&lt;/code&gt; &lt;/a&gt;インスタンスと新しいスナップショットインスタンスの間のメモリ割り当てに関する統計的な違い。</target>
        </trans-unit>
        <trans-unit id="93c17c3b2754e6aa8576c147fc09653b60e79dbe" translate="yes" xml:space="preserve">
          <source>Statistic on memory allocations.</source>
          <target state="translated">メモリの割り当てに関する統計。</target>
        </trans-unit>
        <trans-unit id="3b14150d072b605334b591fdf308c8f83afe6338" translate="yes" xml:space="preserve">
          <source>StatisticDiff</source>
          <target state="translated">StatisticDiff</target>
        </trans-unit>
        <trans-unit id="5b00edac53e8650c17059cc74682f76e24a25ca7" translate="yes" xml:space="preserve">
          <source>Statistics on allocated memory blocks per filename and per line number: total size, number and average size of allocated memory blocks</source>
          <target state="translated">ファイル名と行番号ごとに割り当てられたメモリブロックの統計:割り当てられたメモリブロックの合計サイズ、数、平均サイズ</target>
        </trans-unit>
        <trans-unit id="2d1e06e4a1b724b612f15648cc258d36ff101840" translate="yes" xml:space="preserve">
          <source>Status code returned by server.</source>
          <target state="translated">サーバーから返されたステータスコード。</target>
        </trans-unit>
        <trans-unit id="e630dd1ff969373e5e5ceedb9042f446e5772594" translate="yes" xml:space="preserve">
          <source>Stderr output of the child process if it was captured by &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;によってキャプチャされた場合の子プロセスのstderr出力。それ以外の場合は、 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e868d6dad1678f9e812f05e293a8f32ab7c60e7" translate="yes" xml:space="preserve">
          <source>Steve Kent</source>
          <target state="translated">スティーブ・ケント</target>
        </trans-unit>
        <trans-unit id="d5c235a9e2da7375bfc74d842f2fef1bba4cd641" translate="yes" xml:space="preserve">
          <source>Sticky bit. When this bit is set on a directory it means that a file in that directory can be renamed or deleted only by the owner of the file, by the owner of the directory, or by a privileged process.</source>
          <target state="translated">スティッキービット。このビットがディレクトリに設定されている場合、そのディレクトリ内のファイルは、ファイルの所有者、ディレクトリの所有者、または特権プロセスによってのみ、名前を変更したり削除したりすることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="3ec19e1a93396036c326ac137ed35880fe2072af" translate="yes" xml:space="preserve">
          <source>Stop a running program.</source>
          <target state="translated">実行中のプログラムを停止します。</target>
        </trans-unit>
        <trans-unit id="f1f2527ee6af1abab859d1000fbc85d911ad1e61" translate="yes" xml:space="preserve">
          <source>Stop after one line of code.</source>
          <target state="translated">1行のコードの後に停止します。</target>
        </trans-unit>
        <trans-unit id="bd92da757991216f1f68fb58976ff872f0433907" translate="yes" xml:space="preserve">
          <source>Stop all active patches. Only stops patches started with &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">すべてのアクティブなパッチを停止します。 &lt;code&gt;start&lt;/code&gt; で開始されたパッチのみを停止します。</target>
        </trans-unit>
        <trans-unit id="9c14fb594559114e55368c717995dfb232c444aa" translate="yes" xml:space="preserve">
          <source>Stop autoincrement mode: cancels any recurring timer event initiated by &lt;a href=&quot;#tkinter.ttk.Progressbar.start&quot;&gt;&lt;code&gt;Progressbar.start()&lt;/code&gt;&lt;/a&gt; for this progress bar.</source>
          <target state="translated">自動インクリメントモードの停止：&lt;a href=&quot;#tkinter.ttk.Progressbar.start&quot;&gt; &lt;code&gt;Progressbar.start()&lt;/code&gt; &lt;/a&gt;によって開始されたこの進行状況バーの繰り返しタイマーイベントをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="681a89f710b5eb35e01f58add65c607cdcd7e6a5" translate="yes" xml:space="preserve">
          <source>Stop collecting profiling data and record the results internally as the current profile.</source>
          <target state="translated">プロファイリングデータの収集を中止し、その結果を現在のプロファイルとして内部に記録する。</target>
        </trans-unit>
        <trans-unit id="386b897ce6330a820fe407f11babd25f16b79f03" translate="yes" xml:space="preserve">
          <source>Stop collecting profiling data. Only in &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロファイリングデータの収集を停止します。&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;のみ。</target>
        </trans-unit>
        <trans-unit id="b28503bb9ce3ba9efa2c4262f40aea92323b2335" translate="yes" xml:space="preserve">
          <source>Stop monitoring the &lt;em&gt;fd&lt;/em&gt; file descriptor for read availability.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt;ファイル記述子の読み取りの可用性の監視を停止します。</target>
        </trans-unit>
        <trans-unit id="8e992b0f557f6e64bd030ac5e486c788b192d964" translate="yes" xml:space="preserve">
          <source>Stop monitoring the &lt;em&gt;fd&lt;/em&gt; file descriptor for write availability.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt;ファイル記述子の書き込みの可用性の監視を停止します。</target>
        </trans-unit>
        <trans-unit id="b236708012b0f7d6a131c7745091de26ca2f8b06" translate="yes" xml:space="preserve">
          <source>Stop on the next line in or below the given frame.</source>
          <target state="translated">指定された枠内または枠下の次の行で停止します。</target>
        </trans-unit>
        <trans-unit id="07173ba188602ff442f91bcdd764609f46bf35f4" translate="yes" xml:space="preserve">
          <source>Stop only at breakpoints or when finished. If there are no breakpoints, set the system trace function to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ブレークポイントまたは終了時にのみ停止します。ブレークポイントがない場合は、システムトレース関数を &lt;code&gt;None&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="9956821bc697547c84f565cd45cfe68d18db3990" translate="yes" xml:space="preserve">
          <source>Stop playing all instances of the specified sound.</source>
          <target state="translated">指定したサウンドのすべてのインスタンスの再生を停止します。</target>
        </trans-unit>
        <trans-unit id="dda7d13bacb9d045565bcf9ad8522c5c138cf839" translate="yes" xml:space="preserve">
          <source>Stop recording the vertices of a polygon. Current turtle position is last vertex of polygon. This will be connected with the first vertex.</source>
          <target state="translated">ポリゴンの頂点の記録を停止します。現在の亀の位置は多角形の最後の頂点です。これが最初の頂点と連結されます。</target>
        </trans-unit>
        <trans-unit id="19eb17861b9b2b8893edcf912aa4fcbba09c847c" translate="yes" xml:space="preserve">
          <source>Stop serving: close listening sockets and set the &lt;a href=&quot;#asyncio.Server.sockets&quot;&gt;&lt;code&gt;sockets&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">サービスを停止します。リスニングソケットを閉じて、&lt;a href=&quot;#asyncio.Server.sockets&quot;&gt; &lt;code&gt;sockets&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;None&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="eab7091eebd9abe17181d7f1a75f76fd06e7c8f5" translate="yes" xml:space="preserve">
          <source>Stop the child process.</source>
          <target state="translated">子供のプロセスを停止します。</target>
        </trans-unit>
        <trans-unit id="e4e545904b15e0a5f396f458a17acef1bdc600da" translate="yes" xml:space="preserve">
          <source>Stop the child. On POSIX OSs the method sends SIGTERM to the child. On Windows the Win32 API function &lt;code&gt;TerminateProcess()&lt;/code&gt; is called to stop the child.</source>
          <target state="translated">子供を止めなさい。POSIX OSでは、メソッドはSIGTERMを子に送信します。Windowsでは、Win32 API関数 &lt;code&gt;TerminateProcess()&lt;/code&gt; が呼び出されて子が停止します。</target>
        </trans-unit>
        <trans-unit id="93282e39b89e7566f859df66b1d06c9e4da34d32" translate="yes" xml:space="preserve">
          <source>Stop the child. On Posix OSs the method sends SIGTERM to the child. On Windows the Win32 API function &lt;code&gt;TerminateProcess()&lt;/code&gt; is called to stop the child.</source>
          <target state="translated">子供を止めて。Posix OSでは、このメソッドはSIGTERMを子に送信します。Windowsでは、Win32 API関数 &lt;code&gt;TerminateProcess()&lt;/code&gt; が呼び出され、子を停止します。</target>
        </trans-unit>
        <trans-unit id="d1c07a2360a9f21ead6a5d087d2813ead181d411" translate="yes" xml:space="preserve">
          <source>Stop the event loop.</source>
          <target state="translated">イベントループを停止します。</target>
        </trans-unit>
        <trans-unit id="ec02c5eb6f41cc24c8635c59013cb72007b676e6" translate="yes" xml:space="preserve">
          <source>Stop the process used by the manager. This is only available if &lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; has been used to start the server process.</source>
          <target state="translated">マネージャーが使用しているプロセスを停止します。これは、サーバープロセスの起動に&lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;が使用されている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="9c940541144e008d5ebd24ea4c86a241e859116f" translate="yes" xml:space="preserve">
          <source>Stop the subprocess.</source>
          <target state="translated">サブプロセスを停止します。</target>
        </trans-unit>
        <trans-unit id="d65e7ac00c2074c5cb4b2613b7729e126437bbb4" translate="yes" xml:space="preserve">
          <source>Stop the test run on the first error or failure.</source>
          <target state="translated">最初のエラーまたは失敗でテストの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="cabcf903c53e722d725b21edbc265236483ae283" translate="yes" xml:space="preserve">
          <source>Stop the timer, and cancel the execution of the timer&amp;rsquo;s action. This will only work if the timer is still in its waiting stage.</source>
          <target state="translated">タイマーを停止し、タイマーのアクションの実行をキャンセルします。これは、タイマーがまだ待機段階にある場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="ad4ca55bc5ec91fff08d99977de17cfb470f181d" translate="yes" xml:space="preserve">
          <source>Stop tracing Python memory allocations: uninstall hooks on Python memory allocators. Also clears all previously collected traces of memory blocks allocated by Python.</source>
          <target state="translated">Pythonのメモリ割り当てのトレースを停止する:Pythonのメモリ割り当てのフックをアンインストールします。また、Pythonによって割り当てられたメモリブロックの以前に収集されたトレースもすべてクリアします。</target>
        </trans-unit>
        <trans-unit id="b562346a70d4fffd1b950b2d9c8073605284c963" translate="yes" xml:space="preserve">
          <source>Stop watching a file descriptor for read availability.</source>
          <target state="translated">ファイルディスクリプタの読み取り可能性を監視するのを停止します。</target>
        </trans-unit>
        <trans-unit id="c03a3c90ba8bcaeb3e278f1e7a5e9a94ce371d18" translate="yes" xml:space="preserve">
          <source>Stop watching a file descriptor for write availability.</source>
          <target state="translated">書き込み可能なファイルディスクリプタの監視を停止します。</target>
        </trans-unit>
        <trans-unit id="0521dd4259202a266a94e98d9a99086f335e0d1c" translate="yes" xml:space="preserve">
          <source>Stop when returning from the given frame.</source>
          <target state="translated">指定されたフレームから戻るときに停止します。</target>
        </trans-unit>
        <trans-unit id="9cf16298960f3b90589b43393cf0983b21b936b5" translate="yes" xml:space="preserve">
          <source>Stop when the line with the line no greater than the current one is reached or when returning from current frame.</source>
          <target state="translated">現在のフレームより大きくないラインに達したとき、または現在のフレームから戻るときに停止します。</target>
        </trans-unit>
        <trans-unit id="42230071216c61d4ed985506e24ebc5fa021aec9" translate="yes" xml:space="preserve">
          <source>StopAsyncIteration</source>
          <target state="translated">StopAsyncIteration</target>
        </trans-unit>
        <trans-unit id="5492e7af5bc227efd8741534cde9d83c515b2fee" translate="yes" xml:space="preserve">
          <source>StopIteration</source>
          <target state="translated">StopIteration</target>
        </trans-unit>
        <trans-unit id="6e51270217514fe6c3b56cad28fe64372a8f777e" translate="yes" xml:space="preserve">
          <source>Stops the listener.</source>
          <target state="translated">リスナーを停止させます。</target>
        </trans-unit>
        <trans-unit id="4504dc205b6e4cdbbfebc70b87b4b089458f94ff" translate="yes" xml:space="preserve">
          <source>Stops the listening server which was created with a call to &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt;. This is typically called before calling &lt;code&gt;join()&lt;/code&gt; on the return value from &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; の&lt;/a&gt;呼び出しで作成された待機サーバーを停止します。これは通常、&lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;からの戻り値で &lt;code&gt;join()&lt;/code&gt; を呼び出す前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="22d88760270ddd4da9cb15a91c6301cafc402c22" translate="yes" xml:space="preserve">
          <source>Stops the worker processes immediately without completing outstanding work. When the pool object is garbage collected &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt; will be called immediately.</source>
          <target state="translated">未処理の作業を完了せずにワーカープロセスをすぐに停止します。プールオブジェクトがガベージコレクションされると、すぐに&lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b40724a8bdde9371dee2e5d9c142834b0bf0365c" translate="yes" xml:space="preserve">
          <source>Store a file in ASCII transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;STOR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.storbinary&quot;&gt;&lt;code&gt;storbinary()&lt;/code&gt;&lt;/a&gt;). Lines are read until EOF from the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt; (opened in binary mode) using its &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method to provide the data to be stored. &lt;em&gt;callback&lt;/em&gt; is an optional single parameter callable that is called on each line after it is sent.</source>
          <target state="translated">ASCII転送モードでファイルを保存します。&lt;em&gt;cmdが&lt;/em&gt;適切であるべき &lt;code&gt;STOR&lt;/code&gt; のコマンド（参照&lt;a href=&quot;#ftplib.FTP.storbinary&quot;&gt; &lt;code&gt;storbinary()&lt;/code&gt; &lt;/a&gt;）。格納するデータを提供する&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;（バイナリモードで開いた）からEOFまで行が読み取られます。&lt;em&gt;コールバック&lt;/em&gt;は、送信後に各行で呼び出されるオプションの単一パラメーターcallableです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64e0b15d88fe2cdef3e208f336211ee189dc79e4" translate="yes" xml:space="preserve">
          <source>Store a file in binary transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;STOR&lt;/code&gt; command: &lt;code&gt;&quot;STOR filename&quot;&lt;/code&gt;. &lt;em&gt;fp&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; (opened in binary mode) which is read until EOF using its &lt;code&gt;read()&lt;/code&gt; method in blocks of size &lt;em&gt;blocksize&lt;/em&gt; to provide the data to be stored. The &lt;em&gt;blocksize&lt;/em&gt; argument defaults to 8192. &lt;em&gt;callback&lt;/em&gt; is an optional single parameter callable that is called on each block of data after it is sent. &lt;em&gt;rest&lt;/em&gt; means the same thing as in the &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">バイナリ転送モードでファイルを保存します。&lt;em&gt;cmd&lt;/em&gt;は適切な &lt;code&gt;STOR&lt;/code&gt; コマンドである必要があります： &lt;code&gt;&quot;STOR filename&quot;&lt;/code&gt; 。&lt;em&gt;FPは、&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt; EOFは、その使用まで読み取られる（バイナリモードでオープン） &lt;code&gt;read()&lt;/code&gt; サイズのブロックに方法を&lt;em&gt;ブロックサイズ&lt;/em&gt;記憶されるデータを提供します。&lt;em&gt;ブロックサイズ&lt;/em&gt; 8192への引数のデフォルト&lt;em&gt;コールバックは&lt;/em&gt;、それが送信された後、データの各ブロックで呼び出され、オプションの単一のパラメータ呼び出し可能です。&lt;em&gt;rest&lt;/em&gt;は&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;メソッドと同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="c6cba6acd55da821b562491969f455eeabacc41b" translate="yes" xml:space="preserve">
          <source>Store a file in binary transfer mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;STOR&lt;/code&gt; command: &lt;code&gt;&quot;STOR filename&quot;&lt;/code&gt;. &lt;em&gt;fp&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; (opened in binary mode) which is read until EOF using its &lt;code&gt;read()&lt;/code&gt; method in blocks of size &lt;em&gt;blocksize&lt;/em&gt; to provide the data to be stored. The &lt;em&gt;blocksize&lt;/em&gt; argument defaults to 8192. &lt;em&gt;callback&lt;/em&gt; is an optional single parameter callable that is called on each block of data after it is sent. &lt;em&gt;rest&lt;/em&gt; means the same thing as in the &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルをバイナリ転送モードで保存します。&lt;em&gt;cmd&lt;/em&gt;は適切な &lt;code&gt;STOR&lt;/code&gt; コマンドである必要があります： &lt;code&gt;&quot;STOR filename&quot;&lt;/code&gt; 。&lt;em&gt;FPは、&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;EOFは、その使用まで読み取られる（バイナリモードでオープン） &lt;code&gt;read()&lt;/code&gt; サイズのブロックに方法を&lt;em&gt;ブロックサイズ&lt;/em&gt;記憶されるデータを提供します。&lt;em&gt;ブロックサイズ&lt;/em&gt;8192への引数のデフォルト&lt;em&gt;コールバックは&lt;/em&gt;、それが送信された後、データの各ブロックで呼び出され、オプションの単一のパラメータ呼び出し可能です。&lt;em&gt;rest&lt;/em&gt;は、&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;メソッドと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="30a0b89fa6eff798f04f8250e7921085a223146e" translate="yes" xml:space="preserve">
          <source>Store a file in line mode. &lt;em&gt;cmd&lt;/em&gt; should be an appropriate &lt;code&gt;STOR&lt;/code&gt; command (see &lt;a href=&quot;#ftplib.FTP.storbinary&quot;&gt;&lt;code&gt;storbinary()&lt;/code&gt;&lt;/a&gt;). Lines are read until EOF from the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt; (opened in binary mode) using its &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method to provide the data to be stored. &lt;em&gt;callback&lt;/em&gt; is an optional single parameter callable that is called on each line after it is sent.</source>
          <target state="translated">ファイルをラインモードで保存します。&lt;em&gt;cmdが&lt;/em&gt;適切であるべき &lt;code&gt;STOR&lt;/code&gt; のコマンド（参照&lt;a href=&quot;#ftplib.FTP.storbinary&quot;&gt; &lt;code&gt;storbinary()&lt;/code&gt; &lt;/a&gt;）。行は、&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;（バイナリモードで開かれる）からEOFまで読み取られ、格納されるデータを提供します。&lt;em&gt;コールバック&lt;/em&gt;は、送信後に各行で呼び出されるオプションの単一パラメーター呼び出し可能です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e8801288823009d0cfe0567ad27a7109d729973" translate="yes" xml:space="preserve">
          <source>Store the value from &lt;em&gt;stdout&lt;/em&gt;. It is meant to hold the stdout at the time the regrtest began.</source>
          <target state="translated">&lt;em&gt;stdout&lt;/em&gt;の値を格納します。再テストが開始されたときにstdoutを保持するためのものです。</target>
        </trans-unit>
        <trans-unit id="0ff62677d322103be5ee9b9de98c06095cdf7aee" translate="yes" xml:space="preserve">
          <source>Stores TOS into the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage.</source>
          <target state="translated">セルのスロット&lt;em&gt;i&lt;/em&gt;に含まれるセルにTOSを格納し、変数ストレージを解放します。</target>
        </trans-unit>
        <trans-unit id="608d502aebb3fd3e1ee2e9758893de399100c2eb" translate="yes" xml:space="preserve">
          <source>Stores TOS into the local &lt;code&gt;co_varnames[var_num]&lt;/code&gt;.</source>
          <target state="translated">TOSをローカルの &lt;code&gt;co_varnames[var_num]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b9ebf8ea55a29d4b86eddcfa239aac6c0d6a63d" translate="yes" xml:space="preserve">
          <source>Stores data in the value field of an open registry key.</source>
          <target state="translated">オープンレジストリキーの値フィールドにデータを格納します。</target>
        </trans-unit>
        <trans-unit id="ee36da4c9d3b535d1b7d140b22b545e51304d19d" translate="yes" xml:space="preserve">
          <source>Storing &lt;em&gt;exc_value&lt;/em&gt; using a custom hook can create a reference cycle. It should be cleared explicitly to break the reference cycle when the exception is no longer needed.</source>
          <target state="translated">カスタムフックを使用して&lt;em&gt;exc_value&lt;/em&gt;を格納すると、参照サイクルを作成できます。例外が不要になったときに参照サイクルを中断するには、明示的にクリアする必要があります。</target>
        </trans-unit>
        <trans-unit id="01f6c79aaa696b80521250345e5fd5901afc0573" translate="yes" xml:space="preserve">
          <source>Storing &lt;em&gt;object&lt;/em&gt; using a custom hook can resurrect it if it is set to an object which is being finalized. Avoid storing &lt;em&gt;object&lt;/em&gt; after the custom hook completes to avoid resurrecting objects.</source>
          <target state="translated">カスタムフックを使用して&lt;em&gt;オブジェクト&lt;/em&gt;を保存すると、ファイナライズ中のオブジェクトに設定されている場合、オブジェクトを復活させることができます。&lt;em&gt;オブジェクトの&lt;/em&gt;復活を避けるために、カスタムフックの完了後に&lt;em&gt;オブジェクト&lt;/em&gt;を保存しないでください。</target>
        </trans-unit>
        <trans-unit id="4396a8edb384516939f108251e3cb67c4b39c55b" translate="yes" xml:space="preserve">
          <source>Storing &lt;em&gt;thread&lt;/em&gt; using a custom hook can resurrect it if it is set to an object which is being finalized. Avoid storing &lt;em&gt;thread&lt;/em&gt; after the custom hook completes to avoid resurrecting objects.</source>
          <target state="translated">カスタムフックを使用して&lt;em&gt;スレッド&lt;/em&gt;を格納すると、ファイナライズ中のオブジェクトに設定されている場合、&lt;em&gt;スレッド&lt;/em&gt;を復活させることができます。オブジェクトの復活を避けるために、カスタムフックの完了後に&lt;em&gt;スレッド&lt;/em&gt;を保存しないでください。</target>
        </trans-unit>
        <trans-unit id="45b3c8e78e618c96a1be836536ad2d0da17b790e" translate="yes" xml:space="preserve">
          <source>Storing more frames increases the memory and CPU overhead of the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module. Use the &lt;a href=&quot;#tracemalloc.get_tracemalloc_memory&quot;&gt;&lt;code&gt;get_tracemalloc_memory()&lt;/code&gt;&lt;/a&gt; function to measure how much memory is used by the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">より多くのフレームを保存すると、&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールのメモリとCPUオーバーヘッドが増加します。使用&lt;a href=&quot;#tracemalloc.get_tracemalloc_memory&quot;&gt; &lt;code&gt;get_tracemalloc_memory()&lt;/code&gt; &lt;/a&gt;によって使用されるメモリ量を測定する機能を&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="8b6bd65591541e8c3add13ce5e070b6251e5607a" translate="yes" xml:space="preserve">
          <source>Storing more than &lt;code&gt;1&lt;/code&gt; frame is only useful to compute statistics grouped by &lt;code&gt;'traceback'&lt;/code&gt; or to compute cumulative statistics: see the &lt;a href=&quot;#tracemalloc.Snapshot.compare_to&quot;&gt;&lt;code&gt;Snapshot.compare_to()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tracemalloc.Snapshot.statistics&quot;&gt;&lt;code&gt;Snapshot.statistics()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">以上格納 &lt;code&gt;1&lt;/code&gt; つのフレームによってグループ化された統計を計算するのにのみ有用である &lt;code&gt;'traceback'&lt;/code&gt; または累積統計を計算する：参照&lt;a href=&quot;#tracemalloc.Snapshot.compare_to&quot;&gt; &lt;code&gt;Snapshot.compare_to()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#tracemalloc.Snapshot.statistics&quot;&gt; &lt;code&gt;Snapshot.statistics()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="cb375e3d4b74e62eb5f8f7581dfa2f24ee64da27" translate="yes" xml:space="preserve">
          <source>Storing the exception value (&lt;code&gt;cm.unraisable.exc_value&lt;/code&gt;) creates a reference cycle. The reference cycle is broken explicitly when the context manager exits.</source>
          <target state="translated">例外値（ &lt;code&gt;cm.unraisable.exc_value&lt;/code&gt; ）を格納すると、参照サイクルが作成されます。コンテキストマネージャーが終了すると、参照サイクルが明示的に解除されます。</target>
        </trans-unit>
        <trans-unit id="ee1e13894bacc86de82ec055e8cd2846e7189bfb" translate="yes" xml:space="preserve">
          <source>Storing the object (&lt;code&gt;cm.unraisable.object&lt;/code&gt;) can resurrect it if it is set to an object which is being finalized. Exiting the context manager clears the stored object.</source>
          <target state="translated">オブジェクト（ &lt;code&gt;cm.unraisable.object&lt;/code&gt; ）を格納すると、ファイナライズ中のオブジェクトに設定されている場合、オブジェクトを復活させることができます。コンテキストマネージャを終了すると、保存されたオブジェクトがクリアされます。</target>
        </trans-unit>
        <trans-unit id="da8c74a8989639a06c7ed275123fdb5213740b5e" translate="yes" xml:space="preserve">
          <source>Stream Encoding and Decoding</source>
          <target state="translated">ストリームのエンコードとデコード</target>
        </trans-unit>
        <trans-unit id="92d194342b619452081763477da579413c4ad438" translate="yes" xml:space="preserve">
          <source>Stream Functions</source>
          <target state="translated">ストリーム関数</target>
        </trans-unit>
        <trans-unit id="c547057eb57ded0276f3ba68551d58921b76bdd2" translate="yes" xml:space="preserve">
          <source>Stream socket peer closed connection or shut down writing half of connection.</source>
          <target state="translated">ストリームソケットのピアが接続を閉じたり、接続の半分を書き込んでシャットダウンしたりします。</target>
        </trans-unit>
        <trans-unit id="a7fc2cbf87c4a7beb3b2420b16e5e6bd62c23af3" translate="yes" xml:space="preserve">
          <source>Stream socket peer closed connection, or shut down writing half of connection</source>
          <target state="translated">ストリームソケットのピアが接続を閉じたか、または接続の半分を書いてシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="95555f80a4aacdff199de1bef95d6b4004f66bef" translate="yes" xml:space="preserve">
          <source>Stream writer and reader classes or factory functions. These have to provide the interface defined by the base classes &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt;, respectively. Stream codecs can maintain state.</source>
          <target state="translated">ストリームライターとリーダーのクラスまたはファクトリー関数。これらは、基本クラスの&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;によってそれぞれ定義されたインターフェースを提供する必要があります。ストリームコーデックは状態を維持できます。</target>
        </trans-unit>
        <trans-unit id="0e82e51665d41e14a42a817879e54fc401d36d92" translate="yes" xml:space="preserve">
          <source>StreamHandler</source>
          <target state="translated">StreamHandler</target>
        </trans-unit>
        <trans-unit id="cab8594aca23f91dcc0728ca91d9d20dcd26b690" translate="yes" xml:space="preserve">
          <source>StreamReader</source>
          <target state="translated">StreamReader</target>
        </trans-unit>
        <trans-unit id="1c4e434a5c379ee19aedd22c9bb7c012d22251ea" translate="yes" xml:space="preserve">
          <source>StreamReader Objects</source>
          <target state="translated">StreamReader オブジェクト</target>
        </trans-unit>
        <trans-unit id="afbf4bb821da7d44f330c4d015880fc8eb2df052" translate="yes" xml:space="preserve">
          <source>StreamReaderWriter Objects</source>
          <target state="translated">StreamReaderWriter オブジェクト</target>
        </trans-unit>
        <trans-unit id="a5965634aac5652f6bdf5fa32a0950dee493ee1a" translate="yes" xml:space="preserve">
          <source>StreamRecoder Objects</source>
          <target state="translated">StreamRecoder オブジェクト</target>
        </trans-unit>
        <trans-unit id="232a89f73446348f72f684c82d07ed788b848a3a" translate="yes" xml:space="preserve">
          <source>StreamWriter</source>
          <target state="translated">StreamWriter</target>
        </trans-unit>
        <trans-unit id="31b3a4f9fef179137902b0dffa374d7372bd9855" translate="yes" xml:space="preserve">
          <source>StreamWriter Objects</source>
          <target state="translated">StreamWriter オブジェクト</target>
        </trans-unit>
        <trans-unit id="bc576801a31260eba0dc33b87d4bdb9c2c915354" translate="yes" xml:space="preserve">
          <source>Streaming Protocols</source>
          <target state="translated">ストリーミングプロトコル</target>
        </trans-unit>
        <trans-unit id="4d309e120861cdfb2a9afc0e8bd0f86dd0b93311" translate="yes" xml:space="preserve">
          <source>Streaming Protocols (TCP, Unix Sockets, Pipes)</source>
          <target state="translated">ストリーミングプロトコル (TCP、Unix ソケット、パイプ)</target>
        </trans-unit>
        <trans-unit id="74985da267c6803b262f117de72af2d02e48029f" translate="yes" xml:space="preserve">
          <source>Streams</source>
          <target state="translated">Streams</target>
        </trans-unit>
        <trans-unit id="fae034220712abb26f87d5528ed7dc541f34ec41" translate="yes" xml:space="preserve">
          <source>Streams are high-level async/await-ready primitives to work with network connections. Streams allow sending and receiving data without using callbacks or low-level protocols and transports.</source>
          <target state="translated">ストリームは、ネットワーク接続で動作するための高レベルの非同期/待ち受け可能なプリミティブです。ストリームを使用すると、コールバックや低レベルのプロトコルやトランスポートを使用せずにデータを送受信することができます。</target>
        </trans-unit>
        <trans-unit id="ef5f596a3b1bed839d0e3f270a6c32f3c99a31d3" translate="yes" xml:space="preserve">
          <source>Streams pipe error</source>
          <target state="translated">ストリームパイプのエラー</target>
        </trans-unit>
        <trans-unit id="77ae92e1f52ca81723989bbf53701d87f532d904" translate="yes" xml:space="preserve">
          <source>String (converts any Python object using &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列（任意のPythonオブジェクトを&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;を使用して変換します）。</target>
        </trans-unit>
        <trans-unit id="ee3e9eb4e5498ed89b708c96c9bfa028645b4e3c" translate="yes" xml:space="preserve">
          <source>String (converts any Python object using &lt;a href=&quot;functions#ascii&quot;&gt;&lt;code&gt;ascii()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列（任意のPythonオブジェクトを&lt;a href=&quot;functions#ascii&quot;&gt; &lt;code&gt;ascii()&lt;/code&gt; &lt;/a&gt;を使用して変換）。</target>
        </trans-unit>
        <trans-unit id="df5c63d1841780979b92202af0759f7b1f3dd326" translate="yes" xml:space="preserve">
          <source>String (converts any Python object using &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列（&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;を使用してPythonオブジェクトを変換します）。</target>
        </trans-unit>
        <trans-unit id="9b7750448240c413eee1bf1e4365dbfb79f92e4a" translate="yes" xml:space="preserve">
          <source>String Formatting</source>
          <target state="translated">文字列の書式設定</target>
        </trans-unit>
        <trans-unit id="fb7c02eb78b9cea4197a3deeaa7833fb659b4da7" translate="yes" xml:space="preserve">
          <source>String Methods</source>
          <target state="translated">文字列メソッド</target>
        </trans-unit>
        <trans-unit id="b2c9841982bbe4264ca9f58ac2d39e1cc6302bb0" translate="yes" xml:space="preserve">
          <source>String comment from the server explaining the function of this cookie, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このCookieの機能を説明するサーバーからの文字列コメント、または&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8a0b01d146e194bf099a3ac73472a415c2f4b78" translate="yes" xml:space="preserve">
          <source>String constants</source>
          <target state="translated">文字列定数</target>
        </trans-unit>
        <trans-unit id="da23b6e316028b6b6cefe2ea34ddd5b64256e356" translate="yes" xml:space="preserve">
          <source>String containing the name of the device file.</source>
          <target state="translated">デバイスファイルの名前を含む文字列。</target>
        </trans-unit>
        <trans-unit id="cbcbe27f257c852403f63fd8910723c5c7485612" translate="yes" xml:space="preserve">
          <source>String for where the compiled module should be stored (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">コンパイルされたモジュールを格納する場所の文字列（または &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dd072cf70a2df956e58be84e35095fe803b929f9" translate="yes" xml:space="preserve">
          <source>String format. This is the default type for strings and may be omitted.</source>
          <target state="translated">文字列の形式。これは文字列のデフォルトの型であり、省略することができます。</target>
        </trans-unit>
        <trans-unit id="028891a998d0042a201c049e21458abde50849e1" translate="yes" xml:space="preserve">
          <source>String giving the prefix of method names which will be interpreted as test methods. The default value is &lt;code&gt;'test'&lt;/code&gt;.</source>
          <target state="translated">テストメソッドとして解釈されるメソッド名のプレフィックスを与える文字列。デフォルト値は &lt;code&gt;'test'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0dfcb2bfdce2fe9dc240642e5a4b909927e5c826" translate="yes" xml:space="preserve">
          <source>String literals that are part of a single expression and have only whitespace between them will be implicitly converted to a single string literal. That is, &lt;code&gt;(&quot;spam &quot; &quot;eggs&quot;) == &quot;spam eggs&quot;&lt;/code&gt;.</source>
          <target state="translated">単一の式の一部であり、間に空白しかない文字列リテラルは、暗黙的に単一の文字列リテラルに変換されます。つまり、 &lt;code&gt;(&quot;spam &quot; &quot;eggs&quot;) == &quot;spam eggs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8e26cfa8085316a213a22a762d17ede2c403bd07" translate="yes" xml:space="preserve">
          <source>String objects have one unique built-in operation: the &lt;code&gt;%&lt;/code&gt; operator (modulo). This is also known as the string &lt;em&gt;formatting&lt;/em&gt; or &lt;em&gt;interpolation&lt;/em&gt; operator. Given &lt;code&gt;format % values&lt;/code&gt; (where &lt;em&gt;format&lt;/em&gt; is a string), &lt;code&gt;%&lt;/code&gt; conversion specifications in &lt;em&gt;format&lt;/em&gt; are replaced with zero or more elements of &lt;em&gt;values&lt;/em&gt;. The effect is similar to using the &lt;code&gt;sprintf()&lt;/code&gt; in the C language.</source>
          <target state="translated">文字列オブジェクトには、 &lt;code&gt;%&lt;/code&gt; 演算子（モジュロ）という一意の組み込み演算が1つあります。これは文字列&lt;em&gt;フォーマット&lt;/em&gt;または&lt;em&gt;補間&lt;/em&gt;演算子とも呼ばれます。所定の &lt;code&gt;format % values&lt;/code&gt; （ここで、&lt;em&gt;形式は&lt;/em&gt;文字列である）、 &lt;code&gt;%&lt;/code&gt; の内の変換指定&lt;em&gt;形式は、&lt;/em&gt;ゼロ以上の元素で置換されている&lt;em&gt;値&lt;/em&gt;。この効果は、C言語で &lt;code&gt;sprintf()&lt;/code&gt; を使用する場合と同様です。</target>
        </trans-unit>
        <trans-unit id="58772815294a7b1e1ab721abd0467dbb183d3a9d" translate="yes" xml:space="preserve">
          <source>String of ASCII characters which are considered printable. This is a combination of &lt;a href=&quot;#string.digits&quot;&gt;&lt;code&gt;digits&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#string.ascii_letters&quot;&gt;&lt;code&gt;ascii_letters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#string.punctuation&quot;&gt;&lt;code&gt;punctuation&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#string.whitespace&quot;&gt;&lt;code&gt;whitespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">印刷可能と見なされるASCII文字列。これは、&lt;a href=&quot;#string.digits&quot;&gt; &lt;code&gt;digits&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#string.ascii_letters&quot;&gt; &lt;code&gt;ascii_letters&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#string.punctuation&quot;&gt; &lt;code&gt;punctuation&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#string.whitespace&quot;&gt; &lt;code&gt;whitespace&lt;/code&gt; &lt;/a&gt;組み合わせです。</target>
        </trans-unit>
        <trans-unit id="398747e9867bb715fe4077ec37a55166f74dcc91" translate="yes" xml:space="preserve">
          <source>String of ASCII characters which are considered punctuation characters in the &lt;code&gt;C&lt;/code&gt; locale: &lt;code&gt;!&quot;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;gt;?@[\]^_`{|}~&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; ロケールで句読文字と見なされるASCII文字列： &lt;code&gt;!&quot;#$%&amp;amp;'()*+,-./:;&amp;lt;=&amp;gt;?@[\]^_`{|}~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="322526bf32416e96b1ec87cec2493bb7d90ce000" translate="yes" xml:space="preserve">
          <source>String representations</source>
          <target state="translated">文字列表現</target>
        </trans-unit>
        <trans-unit id="febad315026ec682389436e032b05b1ffe5cfc56" translate="yes" xml:space="preserve">
          <source>String representations of &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects are normalized similarly to their internal representation. This leads to somewhat unusual results for negative timedeltas. For example:</source>
          <target state="translated">&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトの文字列表現は、内部表現と同様に正規化されます。これにより、負のtimedeltaの結果はやや異常になります。例えば：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
