<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="9f6e0effa06c3e5c138d8490e703f490b0039368" translate="yes" xml:space="preserve">
          <source>New in version 3.4: is_global</source>
          <target state="translated">バージョン 3.4 の新機能:is_global</target>
        </trans-unit>
        <trans-unit id="1f837cd28063a6c218f31e72720b5003175aed01" translate="yes" xml:space="preserve">
          <source>New in version 3.5.</source>
          <target state="translated">バージョン3.5の新機能。</target>
        </trans-unit>
        <trans-unit id="1fa95c8a406c55887ed636be5dccd00a7a0fa295" translate="yes" xml:space="preserve">
          <source>New in version 3.5.1.</source>
          <target state="translated">バージョン3.5.1の新機能。</target>
        </trans-unit>
        <trans-unit id="8b612aef28c4f185839e563a8a96375f82700410" translate="yes" xml:space="preserve">
          <source>New in version 3.5.2.</source>
          <target state="translated">バージョン3.5.2の新機能。</target>
        </trans-unit>
        <trans-unit id="2c7957076db9f4d38f7ee1ad92950f56a72edea9" translate="yes" xml:space="preserve">
          <source>New in version 3.5.3.</source>
          <target state="translated">バージョン3.5.3の新機能。</target>
        </trans-unit>
        <trans-unit id="07321da105ae55ff5d5709eae1f53e75964ddc33" translate="yes" xml:space="preserve">
          <source>New in version 3.5.4.</source>
          <target state="translated">バージョン3.5.4の新機能。</target>
        </trans-unit>
        <trans-unit id="3fbc5dfdcbe6f0de84bdbc30382ee50720861f9c" translate="yes" xml:space="preserve">
          <source>New in version 3.5: &lt;code&gt;follow_wrapped&lt;/code&gt; parameter. Pass &lt;code&gt;False&lt;/code&gt; to get a signature of &lt;code&gt;callable&lt;/code&gt; specifically (&lt;code&gt;callable.__wrapped__&lt;/code&gt; will not be used to unwrap decorated callables.)</source>
          <target state="translated">バージョン3.5の新機能： &lt;code&gt;follow_wrapped&lt;/code&gt; パラメータ。パス &lt;code&gt;False&lt;/code&gt; の署名を取得するために &lt;code&gt;callable&lt;/code&gt; （具体的に &lt;code&gt;callable.__wrapped__&lt;/code&gt; 装飾された呼び出し可能のラップを解除するために使用されることはありません。）</target>
        </trans-unit>
        <trans-unit id="9e2d52bce291ba21a1b94d4b005b1cf7dc019b90" translate="yes" xml:space="preserve">
          <source>New in version 3.5: &lt;em&gt;quote_via&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.5の新機能：&lt;em&gt;quote_via&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="0a2103b4477c36713c1b4425a3142a28baa40aa4" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Added &lt;code&gt;is_authenticated&lt;/code&gt; support.</source>
          <target state="translated">バージョン3.5の新機能： &lt;code&gt;is_authenticated&lt;/code&gt; サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="0178c262a4c0123cec8f5bef7190a7211f72daae" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Added the &lt;a href=&quot;#os.stat_result.st_file_attributes&quot;&gt;&lt;code&gt;st_file_attributes&lt;/code&gt;&lt;/a&gt; member on Windows.</source>
          <target state="translated">バージョン3.5の新機能：Windowsに&lt;a href=&quot;#os.stat_result.st_file_attributes&quot;&gt; &lt;code&gt;st_file_attributes&lt;/code&gt; &lt;/a&gt;メンバーを追加しました。</target>
        </trans-unit>
        <trans-unit id="8df129ebe6df04e6f5367d827d4028abd2387a31" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Previously, &lt;a href=&quot;#http.client.BadStatusLine&quot;&gt;&lt;code&gt;BadStatusLine&lt;/code&gt;&lt;/a&gt;&lt;code&gt;('')&lt;/code&gt; was raised.</source>
          <target state="translated">バージョン3.5の新機能：以前は、&lt;a href=&quot;#http.client.BadStatusLine&quot;&gt; &lt;code&gt;BadStatusLine&lt;/code&gt; &lt;/a&gt; &lt;code&gt;('')&lt;/code&gt; が発生していました。</target>
        </trans-unit>
        <trans-unit id="9180aafc542f6e962e2074854b1f38f5061dcdf6" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Previously, a plain &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.5の新機能：以前は、単純な&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="3b54ddd1a8adfffd3e1ed259fed23234d3a80add" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Support for internationalized addresses (&lt;code&gt;SMTPUTF8&lt;/code&gt;).</source>
          <target state="translated">バージョン3.5の新機能：国際化アドレスのサポート（ &lt;code&gt;SMTPUTF8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="146b7ebb3f774b3f489ea95a898318e2a4680f5a" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;a href=&quot;#imaplib.IMAP4.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; method itself, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt; support.</source>
          <target state="translated">バージョン3.5の新機能：&lt;a href=&quot;#imaplib.IMAP4.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt;メソッド自体、および&lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6855の&lt;/strong&gt;&lt;/a&gt;サポート。</target>
        </trans-unit>
        <trans-unit id="3d5702ae33ccc35d4ec27c96ab0f6748c1bfbbce" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;code&gt;'namereplace'&lt;/code&gt; error handler.</source>
          <target state="translated">バージョン3.5の新機能： &lt;code&gt;'namereplace'&lt;/code&gt; エラーハンドラー。</target>
        </trans-unit>
        <trans-unit id="c97b2effe0e40cd82111946917872bd69cee668e" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; constructor parameters, and the &lt;em&gt;kwargs&lt;/em&gt; parameter to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;decode_data&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">バージョン3.5の新機能：&lt;em&gt;decode_data&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;decode_data&lt;/em&gt;および&lt;em&gt;enable_SMTPUTF8&lt;/em&gt;コンストラクターパラメーター、および&lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt; &lt;code&gt;process_message()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;kwargs&lt;/em&gt;パラメーター。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="503c88f7cc88d9c109004b72250f22c5abdb8141" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;exr&lt;/em&gt; and &lt;em&gt;webp&lt;/em&gt; formats were added.</source>
          <target state="translated">バージョン3.5の新機能：&lt;em&gt;exr&lt;/em&gt;および&lt;em&gt;webp&lt;/em&gt;形式が追加されました。</target>
        </trans-unit>
        <trans-unit id="3cfbf13ed17363441f3df8820387841a221acb2f" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;mangle_from_&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.5の新機能：&lt;em&gt;mangle_from_&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="b705147dd17b73bdb5144032054ce3ee0a848bed" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The SMTPUTF8 extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) is now supported.</source>
          <target state="translated">バージョン3.5の新機能：SMTPUTF8拡張（&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;）がサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="4071071236fe8569928d891b12576f7b86895ed7" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The command-line option &lt;code&gt;--locals&lt;/code&gt;.</source>
          <target state="translated">バージョン3.5の新機能：コマンドラインオプション &lt;code&gt;--locals&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f069158efc3960b336f0767e900a4a5a3e81e366" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The name &lt;code&gt;assertNotRegexpMatches&lt;/code&gt; is a deprecated alias for &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt;&lt;code&gt;assertNotRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.5の新機能： &lt;code&gt;assertNotRegexpMatches&lt;/code&gt; という名前は、&lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt; &lt;code&gt;assertNotRegex()&lt;/code&gt; の&lt;/a&gt;非推奨のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="19bf2295406fe646f85406c7590ce23f4c62ad62" translate="yes" xml:space="preserve">
          <source>New in version 3.6.</source>
          <target state="translated">バージョン3.6の新機能。</target>
        </trans-unit>
        <trans-unit id="90349cc2f262d4c23d65ab39676f28264f9ab398" translate="yes" xml:space="preserve">
          <source>New in version 3.6.0.</source>
          <target state="translated">バージョン3.6.0の新機能。</target>
        </trans-unit>
        <trans-unit id="45594f8e6c19eac8ab677c7056e00b26cfb95c1f" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1.</source>
          <target state="translated">バージョン3.6.1の新機能。</target>
        </trans-unit>
        <trans-unit id="5a7ee2ea584d1e3940ee533dbeaa4e452bd13404" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6.1の新機能：&lt;em&gt;filenames&lt;/em&gt;パラメーターは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="05a9dd80d7229228d769b87c1f8dedd762ef825f" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">New in version 3.6.1: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5e7a6843b86d2ae87bc59ed04e6f809cf47c50e6" translate="yes" xml:space="preserve">
          <source>New in version 3.6.2.</source>
          <target state="translated">バージョン3.6.2の新機能。</target>
        </trans-unit>
        <trans-unit id="80dfc6066f14bf6496d45305c08af7a4c450a97c" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;a href=&quot;#hashlib.blake2b&quot;&gt;&lt;code&gt;blake2b()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hashlib.blake2s&quot;&gt;&lt;code&gt;blake2s()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">バージョン3.6の新機能：&lt;a href=&quot;#hashlib.blake2b&quot;&gt; &lt;code&gt;blake2b()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#hashlib.blake2s&quot;&gt; &lt;code&gt;blake2s()&lt;/code&gt; &lt;/a&gt;が追加されました。</target>
        </trans-unit>
        <trans-unit id="4340416fdc1fa009b4460cbe3e9816c6f0043daf" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">バージョン3.6の新機能：&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2feeb245024eb57add73d00ab775abcb904e866" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;%G&lt;/code&gt;, &lt;code&gt;%u&lt;/code&gt; and &lt;code&gt;%V&lt;/code&gt; were added.</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;%G&lt;/code&gt; 、 &lt;code&gt;%u&lt;/code&gt; 、 &lt;code&gt;%V&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="c218c216bff866c0b87e532df3da0d215cc23a5f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; was added. It&amp;rsquo;s only supported by Linux Kernel 4.5 or later.</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; が追加されました。Linux Kernel 4.5以降でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="67f3b398e277e32be1c6a0466247dee478994e07" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;Flag&lt;/code&gt;, &lt;code&gt;IntFlag&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;Flag&lt;/code&gt; 、 &lt;code&gt;IntFlag&lt;/code&gt; 、 &lt;code&gt;auto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d27e2376c72696bcc77e2fe6f41dd1602bc5773c" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;_missing_&lt;/code&gt;, &lt;code&gt;_order_&lt;/code&gt;, &lt;code&gt;_generate_next_value_&lt;/code&gt;</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;_missing_&lt;/code&gt; 、 &lt;code&gt;_order_&lt;/code&gt; 、 &lt;code&gt;_generate_next_value_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b10e005437ad547a8fd8e2ccd4b8b20d9e4c5dff" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; were added.</source>
          <target state="translated">バージョン3.6の新機能：&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;が追加されました。</target>
        </trans-unit>
        <trans-unit id="12ace1f101bca9a308b177329a35f1d66d6db703" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.6の新機能：&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラーの&lt;/em&gt;パラメーターを追加しました。</target>
        </trans-unit>
        <trans-unit id="e301bee116d339912a92c894a8a22f3f1fa59962" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added support for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and the &lt;a href=&quot;#os.scandir.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method. If a &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator is neither exhausted nor explicitly closed a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; will be emitted in its destructor.</source>
          <target state="translated">バージョン3.6の新機能：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャー&lt;/a&gt;プロトコルと&lt;a href=&quot;#os.scandir.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドのサポートを追加しました。場合&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;イテレータはどちらも疲れも明示的に閉じている&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;そのデストラクタで放出されます。</target>
        </trans-unit>
        <trans-unit id="e5b4eead1f21e0be519048e687407e0242c63c73" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added support for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and the &lt;a href=&quot;#os.scandir.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method. If a &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator is neither exhausted nor explicitly closed a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; will be emitted in its destructor.</source>
          <target state="translated">New in version 3.6: Added support for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and the &lt;a href=&quot;#os.scandir.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; method. If a &lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt; iterator is neither exhausted nor explicitly closed a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt; will be emitted in its destructor.</target>
        </trans-unit>
        <trans-unit id="b402613c2d781a5a7bb0dd32b82d79f1ecb4727b" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;code&gt;fold&lt;/code&gt; argument.</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;fold&lt;/code&gt; 引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="00930151a8d899f4720871c54b11a77ab5264e8f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;code&gt;prompt&lt;/code&gt; parameter</source>
          <target state="translated">バージョン3.6の新機能： &lt;code&gt;prompt&lt;/code&gt; パラメーターを追加しました</target>
        </trans-unit>
        <trans-unit id="5f1a9af93f36ac766f8daa131d6c0d3f78622179" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;em&gt;timespec&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.6の新機能：&lt;em&gt;timespec&lt;/em&gt;引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="7066aa1da03dd2863a3d30aa190f6000662f4314" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Chunked encoding support. The &lt;em&gt;encode_chunked&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.6の新機能：チャンクエンコーディングのサポート。&lt;em&gt;encode_chunked&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="a58ba40e7a25c57becebc3eef2d13a66d5397af8" translate="yes" xml:space="preserve">
          <source>New in version 3.6: SHA3 (Keccak) and SHAKE constructors &lt;code&gt;sha3_224()&lt;/code&gt;, &lt;code&gt;sha3_256()&lt;/code&gt;, &lt;code&gt;sha3_384()&lt;/code&gt;, &lt;code&gt;sha3_512()&lt;/code&gt;, &lt;code&gt;shake_128()&lt;/code&gt;, &lt;code&gt;shake_256()&lt;/code&gt;.</source>
          <target state="translated">バージョン3.6の新機能：SHA3（Keccak）およびSHAKEコンストラクター &lt;code&gt;sha3_224()&lt;/code&gt; 、 &lt;code&gt;sha3_256()&lt;/code&gt; 、 &lt;code&gt;sha3_384()&lt;/code&gt; 、 &lt;code&gt;sha3_512()&lt;/code&gt; 、 &lt;code&gt;shake_128()&lt;/code&gt; 、 &lt;code&gt;shake_256()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba67193ad20bf5f9e114ef18a7615f3b1a6f3fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">バージョン3.6の新機能：詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d6bd06fa71e11edc99f68e21763a25ff9db9b852" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="32a8a06257d0d3aa4bc5a3c9830582cf1e8ac1b0" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details, and for a reference example of a &lt;em&gt;finalizer&lt;/em&gt; method see the implementation of &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; in &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="translated">バージョン3.6の新機能：詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;を参照してください。&lt;em&gt;ファイナライザ&lt;/em&gt;メソッドのリファレンス例については、&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib / asyncio / base_events.pyの&lt;/a&gt; &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; の実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="84632b7133b2afb86ab03dd6882451587698652f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details, and for a reference example of a &lt;em&gt;finalizer&lt;/em&gt; method see the implementation of &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; in &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="translated">New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details, and for a reference example of a &lt;em&gt;finalizer&lt;/em&gt; method see the implementation of &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; in &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0029940bca23ccdb728fe00850c420e066576083" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">バージョン3.6の新機能：詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e7dd86913abfca211bf3678e445f5e8d9da9a64" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="e4aac78a8599305666d1bcd98d489c9b474ee017" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The &lt;em&gt;strict&lt;/em&gt; argument (pre-3.6 behavior is strict).</source>
          <target state="translated">バージョン3.6の新機能：&lt;em&gt;厳密な&lt;/em&gt;引数（3.6より前の動作は厳密です）。</target>
        </trans-unit>
        <trans-unit id="ed2cdfb400d26244abead12bdb67496c73a450a0" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The &lt;em&gt;thread_name_prefix&lt;/em&gt; argument was added to allow users to control the &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt; names for worker threads created by the pool for easier debugging.</source>
          <target state="translated">バージョン3.6の新機能：&lt;em&gt;thread_name_prefix&lt;/em&gt;引数が追加され、ユーザーが&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;を制御できるようになりました。デバッグを容易にするためにプールによって作成されたワーカースレッドのスレッド名。</target>
        </trans-unit>
        <trans-unit id="bd28c614713bbf071342d57c2928588052675b48" translate="yes" xml:space="preserve">
          <source>New in version 3.7.</source>
          <target state="translated">バージョン3.7の新機能。</target>
        </trans-unit>
        <trans-unit id="ab8b0d832441ec9f8afe55c3080968bfbf5d3b44" translate="yes" xml:space="preserve">
          <source>New in version 3.7.1.</source>
          <target state="translated">バージョン3.7.1の新機能。</target>
        </trans-unit>
        <trans-unit id="c9fd11c42763cb36ec0c19d3ced88d96a640764b" translate="yes" xml:space="preserve">
          <source>New in version 3.7.2.</source>
          <target state="translated">バージョン3.7.2の新機能。</target>
        </trans-unit>
        <trans-unit id="9a57a48cac73d938901b1d889265048d7b45f13b" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;--directory&lt;/code&gt; specify alternate directory</source>
          <target state="translated">バージョン3.7の新機能：-- directory代替 &lt;code&gt;--directory&lt;/code&gt; 指定</target>
        </trans-unit>
        <trans-unit id="2909fbd69c7afbaa6cf6f31b68ba8de890bc59f0" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;A_ITALIC&lt;/code&gt; was added.</source>
          <target state="translated">バージョン3.7の新機能： &lt;code&gt;A_ITALIC&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="8a466235e323520983f5de7f81ecbc6daa3c3354" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;_ignore_&lt;/code&gt;</source>
          <target state="translated">バージョン3.7の新機能： &lt;code&gt;_ignore_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="adde274e405e80348f0778a3079bdac06f47c1e9" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;pdb.py&lt;/code&gt; now accepts a &lt;code&gt;-m&lt;/code&gt; option that execute modules similar to the way &lt;code&gt;python3 -m&lt;/code&gt; does. As with a script, the debugger will pause execution just before the first line of the module.</source>
          <target state="translated">バージョン3.7の新機能： &lt;code&gt;pdb.py&lt;/code&gt; は、 &lt;code&gt;python3 -m&lt;/code&gt; と同様にモジュールを実行する &lt;code&gt;-m&lt;/code&gt; オプションを受け入れるようになりました。スクリプトと同様に、デバッガーはモジュールの最初の行の直前で実行を一時停止します。</target>
        </trans-unit>
        <trans-unit id="0348eea632d38a741b35d7722942981b7e29f1ce" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;em&gt;text&lt;/em&gt; was added as a more readable alias for &lt;em&gt;universal_newlines&lt;/em&gt;.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;テキスト&lt;/em&gt;が&lt;em&gt;universal_newlinesの&lt;/em&gt;より読みやすいエイリアスとして追加されました。</target>
        </trans-unit>
        <trans-unit id="5f0baef37767767dd3f2cb730f45d1b063439fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;strong&gt;Important:&lt;/strong&gt; this has been added to asyncio in Python 3.7 &lt;em&gt;on a provisional basis&lt;/em&gt;! This is as an experimental API that might be changed or removed completely in Python 3.8.</source>
          <target state="translated">バージョン3.7の新機能：&lt;strong&gt;重要：&lt;/strong&gt;これはPython 3.7のasyncioに&lt;em&gt;暫定的に&lt;/em&gt;追加されてい&lt;em&gt;ます&lt;/em&gt;！これは実験的なAPIであり、Python 3.8で完全に変更または削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="f3a4eca7b00b876cf18c98faef57e563aee90833" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added &lt;code&gt;f_fsid&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7の新機能： &lt;code&gt;f_fsid&lt;/code&gt; を追加しました。</target>
        </trans-unit>
        <trans-unit id="acbec27175c9a57e694aea3647f0f2d4e44b15b1" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; and &lt;em&gt;start_serving&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;および&lt;em&gt;start_serving&lt;/em&gt;パラメーターを追加しました。</target>
        </trans-unit>
        <trans-unit id="02404564795309b1c84708a7dc54ae19f294229e" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;a href=&quot;#os.stat_result.st_fstype&quot;&gt;&lt;code&gt;st_fstype&lt;/code&gt;&lt;/a&gt; member to Solaris/derivatives.</source>
          <target state="translated">バージョン3.7の新機能：&lt;a href=&quot;#os.stat_result.st_fstype&quot;&gt; &lt;code&gt;st_fstype&lt;/code&gt; &lt;/a&gt;メンバーをSolaris / derivativesに追加しました。</target>
        </trans-unit>
        <trans-unit id="4825919b8ce59ba82d22b5bba489218e7eb00e42" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;code&gt;-m&lt;/code&gt; option to &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7の新機能：&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; に&lt;/a&gt; &lt;code&gt;-m&lt;/code&gt; オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="08036b38411b712da487efc5c9de3f5c019a9bfd" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;em&gt;filter&lt;/em&gt; and &lt;em&gt;compressed&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;フィルター&lt;/em&gt;と&lt;em&gt;圧縮&lt;/em&gt;引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="ce490b7adba761d51637a993e78564658a585b7c" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;em&gt;text&lt;/em&gt; parameter as an alias for &lt;em&gt;universal_newlines&lt;/em&gt;.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;テキスト&lt;/em&gt;パラメーターを&lt;em&gt;universal_newlinesの&lt;/em&gt;エイリアスとして追加しました。</target>
        </trans-unit>
        <trans-unit id="b546280fb3d0cd05c36e366475e058b3bfb9e3cf" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the SortKey enum.</source>
          <target state="translated">バージョン 3.7 の新機能:SortKey 列挙を追加しました。</target>
        </trans-unit>
        <trans-unit id="410aff229467eac243173224687c8e5967e89a41" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Descriptors for nested definitions. They are accessed through the new children attribute. Each has a new parent attribute.</source>
          <target state="translated">バージョン3.7の新機能:入れ子になった定義のためのディスクリプタ。これらは new children 属性を通してアクセスされます。それぞれが新しい親属性を持っています。</target>
        </trans-unit>
        <trans-unit id="a30a5ef6e12e6aa72ab9eaa507a8c20cae7e496f" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;filenames&lt;/em&gt;パラメーターは、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="493a985537bd7b9d798cb8594ee5777373a89a86" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; and &lt;em&gt;start_serving&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;および&lt;em&gt;start_serving&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="f67f29ad67b51dd6b7b13f7df829ff2ca08cd222" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7の新機能：&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="338f24ef253909c3bf5579f812dd70f28bc15ad5" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt;, when called with defaults, can be used instead of &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7の新機能：組み込みの&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; は&lt;/a&gt;、デフォルトで呼び出された場合、 &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt; 代わりに使用できます。pdb.set_trace（）。</target>
        </trans-unit>
        <trans-unit id="7b44bee6a8a9a71004cf5c288fd7ae64eb6f752b" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The command-line option &lt;code&gt;-k&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7の新機能：コマンドラインオプション &lt;code&gt;-k&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aef538c8351307b1d3b281db6329d7cb7bec872" translate="yes" xml:space="preserve">
          <source>New in version 3.7: __breakpointhook__</source>
          <target state="translated">バージョン 3.7 の新機能:__breakpointhook__。</target>
        </trans-unit>
        <trans-unit id="d47b26a1d8dd776fc7c16b2a5c0deac1fe3b72d5" translate="yes" xml:space="preserve">
          <source>New in version 3.8.</source>
          <target state="translated">バージョン3.8の新機能。</target>
        </trans-unit>
        <trans-unit id="cd6669aa182efb34ab7412c772c8149990945b82" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;--bind&lt;/code&gt; argument enhanced to support IPv6</source>
          <target state="translated">バージョン3.8の新機能：IPv6をサポートするように拡張された &lt;code&gt;--bind&lt;/code&gt; 引数</target>
        </trans-unit>
        <trans-unit id="152fbdc9d06de500d8f88db67583d3d091f0e3fe" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; can now be passed in flags to enable support for top-level &lt;code&gt;await&lt;/code&gt;, &lt;code&gt;async for&lt;/code&gt;, and &lt;code&gt;async with&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8の新機能： &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; をフラグに渡し &lt;code&gt;await&lt;/code&gt; 、トップレベルのawait、 &lt;code&gt;async for&lt;/code&gt; 、および &lt;code&gt;async with&lt;/code&gt; のサポートを有効にできるようになりました。</target>
        </trans-unit>
        <trans-unit id="f75a638f151f376d645945dad75c62bc6c93b237" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;em&gt;order&lt;/em&gt; can be {&amp;lsquo;C&amp;rsquo;, &amp;lsquo;F&amp;rsquo;, &amp;lsquo;A&amp;rsquo;}. When &lt;em&gt;order&lt;/em&gt; is &amp;lsquo;C&amp;rsquo; or &amp;lsquo;F&amp;rsquo;, the data of the original array is converted to C or Fortran order. For contiguous views, &amp;lsquo;A&amp;rsquo; returns an exact copy of the physical memory. In particular, in-memory Fortran order is preserved. For non-contiguous views, the data is converted to C first. &lt;em&gt;order=None&lt;/em&gt; is the same as &lt;em&gt;order=&amp;rsquo;C&amp;rsquo;&lt;/em&gt;.</source>
          <target state="translated">バージョン3.8の新機能：&lt;em&gt;順序&lt;/em&gt;は{'C'、 'F'、 'A'}です。場合&lt;em&gt;順序は&lt;/em&gt;「C」または「F」であり、元の配列のデータは、CまたはFortran順序に変換されます。連続ビューの場合、「A」は物理メモリの正確なコピーを返します。特に、メモリ内のFortran順序が保持されます。非連続ビューの場合、データは最初にCに変換されます。&lt;em&gt;order = None&lt;/em&gt;は、&lt;em&gt;order = 'C'&lt;/em&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="2cff40a0917f8f2171e5ff8c7704c205ac772d99" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added &lt;code&gt;--module&lt;/code&gt; option that allows to run an executable module.</source>
          <target state="translated">バージョン3.8の新機能：実行可能モジュールを実行できるようにする &lt;code&gt;--module&lt;/code&gt; オプションを追加しました。</target>
        </trans-unit>
        <trans-unit id="9ec5376ab9dcf06a2c4b76dd85864c5f7f72d6f3" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added &lt;code&gt;451 UNAVAILABLE_FOR_LEGAL_REASONS&lt;/code&gt; status code.</source>
          <target state="translated">バージョン3.8の新機能： &lt;code&gt;451 UNAVAILABLE_FOR_LEGAL_REASONS&lt;/code&gt; ステータスコードを追加しました。</target>
        </trans-unit>
        <trans-unit id="186ccced30c0596281d99c06878fe06f5cba4d05" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;a href=&quot;#os.stat_result.st_reparse_tag&quot;&gt;&lt;code&gt;st_reparse_tag&lt;/code&gt;&lt;/a&gt; member on Windows.</source>
          <target state="translated">バージョン3.8の新機能：Windowsに&lt;a href=&quot;#os.stat_result.st_reparse_tag&quot;&gt; &lt;code&gt;st_reparse_tag&lt;/code&gt; &lt;/a&gt;メンバーを追加しました。</target>
        </trans-unit>
        <trans-unit id="31ad6246322e02482cc2675a0a61de73a9615090" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;code&gt;-m&lt;/code&gt; option to &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8の新機能： &lt;code&gt;-m&lt;/code&gt; オプションを&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; に&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="d4f26ceaddd42d6cbf676fedbd2a6fc746d292b5" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; and &lt;em&gt;interleave&lt;/em&gt; parameters.</source>
          <target state="translated">New in version 3.8: Added the &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; and &lt;em&gt;interleave&lt;/em&gt; parameters.</target>
        </trans-unit>
        <trans-unit id="94e84a13854d39d8a4e632a89b58cf02e628570f" translate="yes" xml:space="preserve">
          <source>New in version 3.8: PowerShell activation scripts installed under POSIX for PowerShell Core support.</source>
          <target state="translated">バージョン3.8の新機能。PowerShell CoreのサポートのためにPOSIXの下にインストールされたPowerShellアクティベーションスクリプト。</target>
        </trans-unit>
        <trans-unit id="f6946e0aad7bd1d3aa73545d7a267c0b448f75c6" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching &lt;code id=&quot;index-25&quot;&gt;PATH&lt;/code&gt; or the current working directory, and OS functions such as &lt;code&gt;AddDllDirectory&lt;/code&gt; having no effect.</source>
          <target state="translated">バージョン3.8の新機能：以前のバージョンのCPythonでは、現在のプロセスのデフォルトの動作を使用してDLLを解決していました。これにより、 &lt;code id=&quot;index-25&quot;&gt;PATH&lt;/code&gt; や現在の作業ディレクトリのみを検索するなどの不整合が発生し、 &lt;code&gt;AddDllDirectory&lt;/code&gt; などのOS機能が無効になります。</target>
        </trans-unit>
        <trans-unit id="92b71d0989b5e2766fd9e7a24391532ddf29ff85" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching &lt;code id=&quot;index-27&quot;&gt;PATH&lt;/code&gt; or the current working directory, and OS functions such as &lt;code&gt;AddDllDirectory&lt;/code&gt; having no effect.</source>
          <target state="translated">New in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching &lt;code id=&quot;index-27&quot;&gt;PATH&lt;/code&gt; or the current working directory, and OS functions such as &lt;code&gt;AddDllDirectory&lt;/code&gt; having no effect.</target>
        </trans-unit>
        <trans-unit id="f977a95a81a55a1784f791e2a58c544b6b5481e3" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;dirs_exist_ok&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8の新機能：&lt;em&gt;dirs_exist_ok&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="b713cbde69ae2c18b39ec28507e206c345a918bd" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; and &lt;em&gt;interleave&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.8の新機能：&lt;em&gt;happy_eyeballs_delay&lt;/em&gt;および&lt;em&gt;interleave&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="bce6b595725e42c8ce0117c78ce8cc089343e237" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;strict_timestamps&lt;/em&gt; keyword-only argument</source>
          <target state="translated">バージョン3.8の新機能：&lt;em&gt;strict_timestamps&lt;/em&gt;キーワードのみの引数</target>
        </trans-unit>
        <trans-unit id="aeec7f4f480fc32e5c189622f501015e66103fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;xml_declaration&lt;/em&gt; and &lt;em&gt;default_namespace&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.8の新機能：&lt;em&gt;xml_declaration&lt;/em&gt;および&lt;em&gt;default_namespace&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="4207315e68011a4c07693dcc3f18b88787928c23" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The optional sixth tuple item, &lt;code&gt;(obj, state)&lt;/code&gt;, was added.</source>
          <target state="translated">バージョン3.8の新機能：オプションの6番目のタプル項目 &lt;code&gt;(obj, state)&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="381a2e6108c8c4e584e3ed66c51e452dbe93d8f5" translate="yes" xml:space="preserve">
          <source>New in version 3.8: __unraisablehook__</source>
          <target state="translated">バージョン 3.8 の新機能。unraisablehook__</target>
        </trans-unit>
        <trans-unit id="7d32fcf91915e623de562b2552462516032461ba" translate="yes" xml:space="preserve">
          <source>New in version 3.9.</source>
          <target state="translated">バージョン3.9の新機能。</target>
        </trans-unit>
        <trans-unit id="ee8710071aa58c3bea26135b1e09e5d0b4b1be68" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added &lt;code&gt;103 EARLY_HINTS&lt;/code&gt;, &lt;code&gt;418 IM_A_TEAPOT&lt;/code&gt; and &lt;code&gt;425 TOO_EARLY&lt;/code&gt; status codes.</source>
          <target state="translated">New in version 3.9: Added &lt;code&gt;103 EARLY_HINTS&lt;/code&gt; , &lt;code&gt;418 IM_A_TEAPOT&lt;/code&gt; and &lt;code&gt;425 TOO_EARLY&lt;/code&gt; status codes.</target>
        </trans-unit>
        <trans-unit id="cda6243acf3aaa4d2adb9a50ee4fc2d504a36940" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the &lt;code&gt;upgrade_deps&lt;/code&gt; parameter</source>
          <target state="translated">New in version 3.9: Added the &lt;code&gt;upgrade_deps&lt;/code&gt; parameter</target>
        </trans-unit>
        <trans-unit id="c8b7484a9ab24438dc27afbac38d3298eac7733f" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the following dataclasses: StatsProfile, FunctionProfile. Added the following function: get_stats_profile.</source>
          <target state="translated">バージョン 3.9 の新機能:以下のデータクラスを追加しました。StatsProfile、FunctionProfile。次の関数を追加しました:get_stats_profile。</target>
        </trans-unit>
        <trans-unit id="8afe712c1a6039a74e4243e19a702080b616b8d2" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the function &lt;code&gt;cache_parameters()&lt;/code&gt;</source>
          <target state="translated">バージョン3.9の新機能：関数 &lt;code&gt;cache_parameters()&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="fc84a24cf8af514ea6370d8af094d8feadb68261" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The &lt;em&gt;base_url&lt;/em&gt; and &lt;em&gt;max_depth&lt;/em&gt; parameters.</source>
          <target state="translated">バージョン3.9の新機能：&lt;em&gt;BASE_URL&lt;/em&gt;と&lt;em&gt;MAX_DEPTH&lt;/em&gt;パラメータ。</target>
        </trans-unit>
        <trans-unit id="c1c6534808a333ea947d2e95376ff2e9bd752a08" translate="yes" xml:space="preserve">
          <source>New in version 3.9: backported to 3.7 and 3.8.</source>
          <target state="translated">バージョン 3.9 の新機能:3.7 と 3.8 にバックポートされました。</target>
        </trans-unit>
        <trans-unit id="1101fa4c967ee98df4f4734b3541a4560182d08f" translate="yes" xml:space="preserve">
          <source>New: It is now possible to put items in argtypes which are not ctypes types, but each item must have a &lt;code&gt;from_param()&lt;/code&gt; method which returns a value usable as argument (integer, string, ctypes instance). This allows defining adapters that can adapt custom objects as function parameters.</source>
          <target state="translated">New：ctypes型ではないargtypesに項目を置くことができるようになりましたが、各項目には、引数として使用できる値（整数、文字列、ctypesインスタンス）を返す &lt;code&gt;from_param()&lt;/code&gt; メソッドが必要です。これにより、カスタムオブジェクトを関数パラメーターとして適合できるアダプターを定義できます。</target>
        </trans-unit>
        <trans-unit id="540f7186c4d530bac579f69bb157fd5e121529cc" translate="yes" xml:space="preserve">
          <source>NewType</source>
          <target state="translated">NewType</target>
        </trans-unit>
        <trans-unit id="1f243883e19f81b334c75128a8750ed8afdcc9d0" translate="yes" xml:space="preserve">
          <source>Newer RFC that provides a revised definition of XDR.</source>
          <target state="translated">XDRの改訂された定義を提供するより新しいRFC。</target>
        </trans-unit>
        <trans-unit id="bc981983e7f547dc62e19a1e383acfe00782a6d5" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="translated">Next</target>
        </trans-unit>
        <trans-unit id="3fd8fdbb697f927d539f398a34de5c84c0407d98" translate="yes" xml:space="preserve">
          <source>Next History</source>
          <target state="translated">次の歴史</target>
        </trans-unit>
        <trans-unit id="7012977a58ea8b287c205fbbab7e5434b3642c46" translate="yes" xml:space="preserve">
          <source>Next Line (C1 Control Code)</source>
          <target state="translated">次の行(C1制御コード</target>
        </trans-unit>
        <trans-unit id="4bfc194b68a3369d53aadcddc4f891771d91a3d9" translate="yes" xml:space="preserve">
          <source>Next page</source>
          <target state="translated">次のページ</target>
        </trans-unit>
        <trans-unit id="233213a348a3467a9713a7d089885546d38eba8b" translate="yes" xml:space="preserve">
          <source>Next we instantiate a Differ object:</source>
          <target state="translated">次に、Differオブジェクトのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="b9fac927a58027f98332aa47670afe3b77e6d6a4" translate="yes" xml:space="preserve">
          <source>Next, we encounter a new person whose feature measurements are known but whose gender is unknown:</source>
          <target state="translated">次に、特徴の測定値はわかっているが、性別がわからない新しい人物に遭遇します。</target>
        </trans-unit>
        <trans-unit id="cd608f08ab177c1073a159dda57f4a0251fcd9d9" translate="yes" xml:space="preserve">
          <source>No CSI structure available</source>
          <target state="translated">CSI構造はありません。</target>
        </trans-unit>
        <trans-unit id="bf8647669a8695bdc05a11d401d6432a9f88b641" translate="yes" xml:space="preserve">
          <source>No XENIX semaphores available</source>
          <target state="translated">XENIXセマフォが利用できない</target>
        </trans-unit>
        <trans-unit id="7c45a435d178e3e2e2c3ba71f0b27f7074852c14" translate="yes" xml:space="preserve">
          <source>No anode</source>
          <target state="translated">アノードなし</target>
        </trans-unit>
        <trans-unit id="b599ea3e9f4d15ca66ad3df24a2527224a8ea2d5" translate="yes" xml:space="preserve">
          <source>No argument is converted, results in a &lt;code&gt;'%'&lt;/code&gt; character in the result.</source>
          <target state="translated">引数は変換されず、結果に &lt;code&gt;'%'&lt;/code&gt; 文字が含まれます。</target>
        </trans-unit>
        <trans-unit id="e792e65ee8a80fd8989ad1b66325f180ccd8b365" translate="yes" xml:space="preserve">
          <source>No buffer space available</source>
          <target state="translated">利用可能なバッファスペースがない</target>
        </trans-unit>
        <trans-unit id="099e11888438840a8566c983d5b1e6de2dad8524" translate="yes" xml:space="preserve">
          <source>No child processes</source>
          <target state="translated">子プロセスなし</target>
        </trans-unit>
        <trans-unit id="0cfc430ad5192c2568f967923954cde952307fa4" translate="yes" xml:space="preserve">
          <source>No data available</source>
          <target state="translated">データはありません。</target>
        </trans-unit>
        <trans-unit id="5921088185a40f1dda6c07e51735aa215a517c81" translate="yes" xml:space="preserve">
          <source>No defined value type.</source>
          <target state="translated">定義された値のタイプがありません。</target>
        </trans-unit>
        <trans-unit id="5cb62108d46698f5697c85ab801ad27a8ef1fbf6" translate="yes" xml:space="preserve">
          <source>No distinction between standard and widget-specific options is made in this document. Some options don&amp;rsquo;t apply to some kinds of widgets. Whether a given widget responds to a particular option depends on the class of the widget; buttons have a &lt;code&gt;command&lt;/code&gt; option, labels do not.</source>
          <target state="translated">このドキュメントでは、標準オプションとウィジェット固有オプションの区別はありません。一部のオプションは、特定の種類のウィジェットに適用されません。特定のウィジェットが特定のオプションに応答するかどうかは、ウィジェットのクラスによって異なります。ボタンには &lt;code&gt;command&lt;/code&gt; オプションがありますが、ラベルにはありません。</target>
        </trans-unit>
        <trans-unit id="3a8258b97ca1863297badad1b0273640969901f7" translate="yes" xml:space="preserve">
          <source>No feature description will ever be deleted from &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt;. Since its introduction in Python 2.1 the following features have found their way into the language using this mechanism:</source>
          <target state="translated">&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;から機能の説明が削除されることはありません。Python 2.1での導入以来、次の機能がこのメカニズムを使用して言語に組み込まれています。</target>
        </trans-unit>
        <trans-unit id="f45ab0b8375bdf5386e021a0b31d679497a33d5c" translate="yes" xml:space="preserve">
          <source>No message of desired type</source>
          <target state="translated">希望するタイプのメッセージがない</target>
        </trans-unit>
        <trans-unit id="19ae1fe9004b24354abb4ed1dcb0717c604a6346" translate="yes" xml:space="preserve">
          <source>No modifier is given, so it can appear exactly once, as for &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">修飾子が指定されていないため、 &lt;code&gt;A&lt;/code&gt; のように1回だけ表示できます。</target>
        </trans-unit>
        <trans-unit id="7498d9819e38f5924fea12d89303afac91d07387" translate="yes" xml:space="preserve">
          <source>No padding is added when using non-native size and alignment, e.g. with &amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;=&amp;rsquo;, and &amp;lsquo;!&amp;rsquo;.</source>
          <target state="translated">非ネイティブのサイズと配置を使用する場合、パディングは追加されません。たとえば、「&amp;lt;」、「&amp;gt;」、「=」、「！」などです。</target>
        </trans-unit>
        <trans-unit id="3ab4c24c0255ad55292cf986980b47b2ee3d453f" translate="yes" xml:space="preserve">
          <source>No problem, provided that the traceback is the only output produced by the example: just paste in the traceback. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; Since tracebacks contain details that are likely to change rapidly (for example, exact file paths and line numbers), this is one case where doctest works hard to be flexible in what it accepts.</source>
          <target state="translated">例で生成される出力がトレースバックだけの場合は問題ありません。トレースバックに貼り付けるだけです。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;トレースバックには、急速に変化する可能性のある詳細（正確なファイルパスや行番号など）が含まれているため、これは、doctestが受け入れる内容に柔軟性を持たせるために懸命に機能する1つのケースです。</target>
        </trans-unit>
        <trans-unit id="ab134dfa754cd3657dd291f57f80c528eeaa381a" translate="yes" xml:space="preserve">
          <source>No record locks available</source>
          <target state="translated">レコードロックは利用できません。</target>
        </trans-unit>
        <trans-unit id="62c6526007299ca03f778b5b7ce0d726354cae0d" translate="yes" xml:space="preserve">
          <source>No route to host</source>
          <target state="translated">ホストへのルートがない</target>
        </trans-unit>
        <trans-unit id="5c0580667d6055e92a026b8c67fa943060b2c89d" translate="yes" xml:space="preserve">
          <source>No space left on device</source>
          <target state="translated">デバイス上に空きスペースがありません</target>
        </trans-unit>
        <trans-unit id="8affcec2bb7338bba6a528b37e279cb979510364" translate="yes" xml:space="preserve">
          <source>No special efforts are made to achieve exact results. (However, this may change in the future.)</source>
          <target state="translated">正確な結果を出すために特別な努力をしているわけではありません。ただし、将来的には変更される可能性があります)</target>
        </trans-unit>
        <trans-unit id="e5feee0204f5532e0cb04d5be298f4c467c05e6f" translate="yes" xml:space="preserve">
          <source>No such device</source>
          <target state="translated">そのような装置はありません。</target>
        </trans-unit>
        <trans-unit id="112765ee706d5c7ea20d7309d6bf892b8a5aa7eb" translate="yes" xml:space="preserve">
          <source>No such device or address</source>
          <target state="translated">そのようなデバイスやアドレスはありません</target>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="translated">そのようなファイルやディレクトリはありません</target>
        </trans-unit>
        <trans-unit id="0cf4a772e5ca24befae7ddee66e425eeaa8130aa" translate="yes" xml:space="preserve">
          <source>No such process</source>
          <target state="translated">そのようなプロセスはありません。</target>
        </trans-unit>
        <trans-unit id="589aa359449804b5cecdf6ad3c2674828c4925a4" translate="yes" xml:space="preserve">
          <source>No suitable authentication method was found.</source>
          <target state="translated">適切な認証方法は見つかりませんでした。</target>
        </trans-unit>
        <trans-unit id="0e86c9e3430455ac090ffb5eaf4ae106dd193246" translate="yes" xml:space="preserve">
          <source>No-op in the base class, this method takes file object &lt;em&gt;fp&lt;/em&gt;, and reads the data from the file, initializing its message catalog. If you have an unsupported message catalog file format, you should override this method to parse your format.</source>
          <target state="translated">基本クラスでは何も行われません。このメソッドはファイルオブジェクト&lt;em&gt;fpを&lt;/em&gt;受け取り、ファイルからデータを読み取り、メッセージカタログを初期化します。サポートされていないメッセージカタログファイル形式がある場合は、このメソッドをオーバーライドして形式を解析する必要があります。</target>
        </trans-unit>
        <trans-unit id="b17a6c458741a86bf04ade61ad9a14f7ac61215b" translate="yes" xml:space="preserve">
          <source>Node Objects</source>
          <target state="translated">ノードオブジェクト</target>
        </trans-unit>
        <trans-unit id="7e378cbf407e94014d60a68e1eb16b7d4cc0b6a2" translate="yes" xml:space="preserve">
          <source>Node classes</source>
          <target state="translated">ノードクラス</target>
        </trans-unit>
        <trans-unit id="ee401dbf3ea65531fb1e6ce98168be3027792e5e" translate="yes" xml:space="preserve">
          <source>Node representing a single formatting field in an f-string. If the string contains a single formatting field and nothing else the node can be isolated otherwise it appears in &lt;a href=&quot;#ast.JoinedStr&quot;&gt;&lt;code&gt;JoinedStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">f文字列の単一のフォーマットフィールドを表すノード。文字列に単一のフォーマットフィールドが含まれ、他にノードを分離できない場合は、&lt;a href=&quot;#ast.JoinedStr&quot;&gt; &lt;code&gt;JoinedStr&lt;/code&gt; &lt;/a&gt;に表示されます。</target>
        </trans-unit>
        <trans-unit id="14144ba530975f0eb39fc2d9e3b0c8023d821c70" translate="yes" xml:space="preserve">
          <source>NodeList Objects</source>
          <target state="translated">ノードリストオブジェクト</target>
        </trans-unit>
        <trans-unit id="750728f3a8917784306697d947d7258635f9568e" translate="yes" xml:space="preserve">
          <source>Nodes containing textual content from the document.</source>
          <target state="translated">ドキュメントのテキストコンテンツを含むノード。</target>
        </trans-unit>
        <trans-unit id="bdc7ab16126589f949098e57c1b5539a8ac176ed" translate="yes" xml:space="preserve">
          <source>Nomenclature</source>
          <target state="translated">Nomenclature</target>
        </trans-unit>
        <trans-unit id="56c04398e9678198426e682b1f9d96427b74b23b" translate="yes" xml:space="preserve">
          <source>Nominal vs structural subtyping</source>
          <target state="translated">名目と構造のサブタイプ</target>
        </trans-unit>
        <trans-unit id="35d3f82350431652e47bdcf8c933cca085703f88" translate="yes" xml:space="preserve">
          <source>Non-blocking mode is supported through &lt;a href=&quot;#socket.socket.setblocking&quot;&gt;&lt;code&gt;setblocking()&lt;/code&gt;&lt;/a&gt;. A generalization of this based on timeouts is supported through &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非ブロッキングモードは、&lt;a href=&quot;#socket.socket.setblocking&quot;&gt; &lt;code&gt;setblocking()&lt;/code&gt; &lt;/a&gt;によってサポートされます。タイムアウトに基づくこれの一般化は、&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;によってサポートされます。</target>
        </trans-unit>
        <trans-unit id="4c6473f2b77717e9eaefce19afcd71fb87fcc938" translate="yes" xml:space="preserve">
          <source>Non-empty sets (not frozensets) can be created by placing a comma-separated list of elements within braces, for example: &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt;, in addition to the &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">空でないセット（frozensetsではない）は、&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;コンストラクターに加えて、要素のコンマ区切りのリストを中かっこ内に配置することで作成できます（例： &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4aa0a99e9276d0e78ac1248387e6c6b9c79d9b2a" translate="yes" xml:space="preserve">
          <source>Non-identical instances of a class normally compare as non-equal unless the class defines the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">クラスが&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;メソッドを定義しない限り、クラスの同一でないインスタンスは通常、非同等として比較されます。</target>
        </trans-unit>
        <trans-unit id="f95d02252b0089d1c261319bc20168f160fde1cf" translate="yes" xml:space="preserve">
          <source>Non-identical instances of a class normally compare as non-equal unless the class defines the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">クラスの同一でないインスタンスは、クラスが&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;メソッドを定義しない限り、通常、等しくないと比較されます。</target>
        </trans-unit>
        <trans-unit id="5432efc874ee04f0f27783979ffafd974c2144c4" translate="yes" xml:space="preserve">
          <source>Non-quoted escape characters (e.g. &lt;code&gt;'\'&lt;/code&gt;) preserve the literal value of the next character that follows;</source>
          <target state="translated">引用符で囲まれていないエスケープ文字（ &lt;code&gt;'\'&lt;/code&gt; など）は、次の文字のリテラル値を保持します。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="7e5255a130b91c89dba736489c8c648b0ae932c0" translate="yes" xml:space="preserve">
          <source>Nonzero if a DST timezone is defined. See note below.</source>
          <target state="translated">DSTタイムゾーンが定義されている場合は0以外。以下の注釈を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d6248d1d5c865a0048cbc0bf21dcb388cd91a77" translate="yes" xml:space="preserve">
          <source>Nordic languages</source>
          <target state="translated">北欧諸語</target>
        </trans-unit>
        <trans-unit id="02e21f33972d3ea6d360c18684f08ac13010544f" translate="yes" xml:space="preserve">
          <source>Normal and error output are generally kept separate (on separate lines) from code input and each other. They each get different highlight colors.</source>
          <target state="translated">通常、通常、ノーマル出力とエラー出力は、コード入力や他のコードとは別の(別の行にある)ものになります。これらの出力はそれぞれ異なるハイライトカラーを取得します。</target>
        </trans-unit>
        <trans-unit id="170f10d24b0b85cf90e96608630df2d96c9b4817" translate="yes" xml:space="preserve">
          <source>Normal attribute</source>
          <target state="translated">通常属性</target>
        </trans-unit>
        <trans-unit id="f1f743126e0f5dd0902750180da22c23c53778c8" translate="yes" xml:space="preserve">
          <source>Normal distribution. &lt;em&gt;mu&lt;/em&gt; is the mean, and &lt;em&gt;sigma&lt;/em&gt; is the standard deviation.</source>
          <target state="translated">正規分布。&lt;em&gt;mu&lt;/em&gt;は平均、&lt;em&gt;sigma&lt;/em&gt;は標準偏差です。</target>
        </trans-unit>
        <trans-unit id="3d1612e1a01af8e8718757fe0eb13a0da18713da" translate="yes" xml:space="preserve">
          <source>Normal distributions arise from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Central_limit_theorem&quot;&gt;Central Limit Theorem&lt;/a&gt; and have a wide range of applications in statistics.</source>
          <target state="translated">正規分布は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Central_limit_theorem&quot;&gt;中心極限定理&lt;/a&gt;から生じ、統計において幅広い用途があります。</target>
        </trans-unit>
        <trans-unit id="f96b6e7e93b1ee612bdc5459b1b4c4ed51951b3b" translate="yes" xml:space="preserve">
          <source>Normal distributions can be used to approximate &lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;Binomial distributions&lt;/a&gt; when the sample size is large and when the probability of a successful trial is near 50%.</source>
          <target state="translated">正規分布は、サンプルサイズが大きく、試行が成功する確率が50％に近い場合に、&lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;二項分布&lt;/a&gt;を近似するために使用できます。</target>
        </trans-unit>
        <trans-unit id="fe823566d89d09d65bf2172f99f78ec17aa83bd8" translate="yes" xml:space="preserve">
          <source>Normal distributions commonly arise in machine learning problems.</source>
          <target state="translated">機械学習の問題では、正規分布が一般的に発生します。</target>
        </trans-unit>
        <trans-unit id="6b2153c60470208f45dcfdc29d655f5a4049324a" translate="yes" xml:space="preserve">
          <source>NormalDist objects</source>
          <target state="translated">ノーマルディストオブジェクト</target>
        </trans-unit>
        <trans-unit id="691b62ff89f4b08738f81953df74ff8ae6e26204" translate="yes" xml:space="preserve">
          <source>Normalize a pathname by collapsing redundant separators and up-level references so that &lt;code&gt;A//B&lt;/code&gt;, &lt;code&gt;A/B/&lt;/code&gt;, &lt;code&gt;A/./B&lt;/code&gt; and &lt;code&gt;A/foo/../B&lt;/code&gt; all become &lt;code&gt;A/B&lt;/code&gt;. This string manipulation may change the meaning of a path that contains symbolic links. On Windows, it converts forward slashes to backward slashes. To normalize case, use &lt;a href=&quot;#os.path.normcase&quot;&gt;&lt;code&gt;normcase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;A//B&lt;/code&gt; 、 &lt;code&gt;A/B/&lt;/code&gt; 、 &lt;code&gt;A/./B&lt;/code&gt; 、および &lt;code&gt;A/foo/../B&lt;/code&gt; すべて &lt;code&gt;A/B&lt;/code&gt; になるように、冗長なセパレーターと上位レベルの参照を折りたたんでパス名を正規化します。この文字列操作により、シンボリックリンクを含むパスの意味が変わる場合があります。 Windowsでは、スラッシュをバックスラッシュに変換します。大文字と小文字を正規化するには、&lt;a href=&quot;#os.path.normcase&quot;&gt; &lt;code&gt;normcase()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4de47e1cb4db52e6f0ace31520ebf2d73cf5200f" translate="yes" xml:space="preserve">
          <source>Normalize the case of a pathname. On Windows, convert all characters in the pathname to lowercase, and also convert forward slashes to backward slashes. On other operating systems, return the path unchanged.</source>
          <target state="translated">パス名の大文字小文字を正規化します。Windows では、パス名のすべての文字を小文字に変換し、前方のスラッシュを後方のスラッシュに変換します。その他のオペレーティングシステムでは、パスを変更せずに返します。</target>
        </trans-unit>
        <trans-unit id="5bb740d481f263379151a90b9e11e2b6fdb345e7" translate="yes" xml:space="preserve">
          <source>Normalize the number by stripping the rightmost trailing zeros and converting any result equal to &lt;code&gt;Decimal('0')&lt;/code&gt; to &lt;code&gt;Decimal('0e0')&lt;/code&gt;. Used for producing canonical values for attributes of an equivalence class. For example, &lt;code&gt;Decimal('32.100')&lt;/code&gt; and &lt;code&gt;Decimal('0.321000e+2')&lt;/code&gt; both normalize to the equivalent value &lt;code&gt;Decimal('32.1')&lt;/code&gt;.</source>
          <target state="translated">右端の後続ゼロを取り除き、 &lt;code&gt;Decimal('0')&lt;/code&gt; に等しい結果をすべて &lt;code&gt;Decimal('0e0')&lt;/code&gt; に変換することにより、数値を正規化します。等価クラスの属性の標準値を生成するために使用されます。たとえば、 &lt;code&gt;Decimal('32.100')&lt;/code&gt; と &lt;code&gt;Decimal('0.321000e+2')&lt;/code&gt; どちらも、同等の値 &lt;code&gt;Decimal('32.1')&lt;/code&gt; 正規化します。</target>
        </trans-unit>
        <trans-unit id="2f52a413a99343944d32b2af1d020b8d0b1acd04" translate="yes" xml:space="preserve">
          <source>Normally &lt;strong&gt;there is no need&lt;/strong&gt; to create Future objects at the application level code.</source>
          <target state="translated">通常、アプリケーションレベルのコードでFutureオブジェクトを作成する&lt;strong&gt;必要はありません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d90ea54070ee394f637e437d868344967800111e" translate="yes" xml:space="preserve">
          <source>Normally derived classes don&amp;rsquo;t override the following methods, but they may if they want to redefine the definition of stopping and breakpoints.</source>
          <target state="translated">通常、派生クラスは次のメソッドをオーバーライドしませんが、停止ポイントとブレークポイントの定義を再定義する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="e7e3e4198625d7397897fc42c4d0f77e2c31eff8" translate="yes" xml:space="preserve">
          <source>Normally it should not be necessary to use this value directly. Specifying the &lt;code&gt;E&lt;/code&gt; modifier in their format strings causes the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; function to use this information. The format of the returned string is not specified, and therefore you should not assume knowledge of it on different systems.</source>
          <target state="translated">通常、この値を直接使用する必要はありません。フォーマット文字列で &lt;code&gt;E&lt;/code&gt; 修飾子を指定すると、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;関数がこの情報を使用します。返される文字列の形式は指定されていないため、別のシステムでその知識があると想定しないでください。</target>
        </trans-unit>
        <trans-unit id="2dd8b4f218db00ed4e30efd72f3a335858fe6269" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/a&gt; attribute of an object will return its type. For a mock object with a &lt;code&gt;spec&lt;/code&gt;, &lt;code&gt;__class__&lt;/code&gt; returns the spec class instead. This allows mock objects to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests for the object they are replacing / masquerading as:</source>
          <target state="translated">通常、オブジェクトの&lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;/a&gt;属性はそのタイプを返します。モックオブジェクトのため &lt;code&gt;spec&lt;/code&gt; 、 &lt;code&gt;__class__&lt;/code&gt; 代わり仕様クラスを返します。これにより、モックオブジェクトは、置換するオブジェクトの&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;テストに合格することができます。</target>
        </trans-unit>
        <trans-unit id="5aa93ae111a762d37226903d82a74d9b1f47e777" translate="yes" xml:space="preserve">
          <source>Normally you should use the socket API methods like &lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; instead of these methods.</source>
          <target state="translated">通常、これらのメソッドの代わりに、&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;socket#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;などのソケットAPIメソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8d529dbb8b442b62924e944a3daf4b0e0711efec" translate="yes" xml:space="preserve">
          <source>Normally, however, you do not need to use these additional methods, as &lt;a href=&quot;#wsgiref.simple_server.WSGIServer.set_app&quot;&gt;&lt;code&gt;set_app()&lt;/code&gt;&lt;/a&gt; is normally called by &lt;a href=&quot;#wsgiref.simple_server.make_server&quot;&gt;&lt;code&gt;make_server()&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#wsgiref.simple_server.WSGIServer.get_app&quot;&gt;&lt;code&gt;get_app()&lt;/code&gt;&lt;/a&gt; exists mainly for the benefit of request handler instances.</source>
          <target state="translated">ただし、通常、これらの追加のメソッドを使用する必要はありません。通常、&lt;a href=&quot;#wsgiref.simple_server.WSGIServer.set_app&quot;&gt; &lt;code&gt;set_app()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#wsgiref.simple_server.make_server&quot;&gt; &lt;code&gt;make_server()&lt;/code&gt; &lt;/a&gt;によって呼び出され、&lt;a href=&quot;#wsgiref.simple_server.WSGIServer.get_app&quot;&gt; &lt;code&gt;get_app()&lt;/code&gt; &lt;/a&gt;は主に要求ハンドラインスタンスのために存在します。</target>
        </trans-unit>
        <trans-unit id="cebe4c16e9be06cdb74c935e7bf03afce6ac0db3" translate="yes" xml:space="preserve">
          <source>Normally, the above warnings are filtered by the default &lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;warning filters&lt;/a&gt;.</source>
          <target state="translated">通常、上記の警告はデフォルトの&lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;警告フィルターで&lt;/a&gt;フィルタリングされます。</target>
        </trans-unit>
        <trans-unit id="0788443a411022d37bd9d9d545b151030497a024" translate="yes" xml:space="preserve">
          <source>Normally, the generator emits a single string; however, for &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exceptions, it emits several lines that (when printed) display detailed information about where the syntax error occurred.</source>
          <target state="translated">通常、ジェネレータは単一の文字列を出力します。ただし、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;例外の場合は、（印刷時に）構文エラーが発生した場所に関する詳細情報を表示する数行が出力されます。</target>
        </trans-unit>
        <trans-unit id="23ff9f150633c592aa535d8b9f1a3400f42cda0e" translate="yes" xml:space="preserve">
          <source>Normally, this method first strips any quotes off the argument. If the result is an absolute pathname, or there was no previous source request in effect, or the previous source was a stream (such as &lt;code&gt;sys.stdin&lt;/code&gt;), the result is left alone. Otherwise, if the result is a relative pathname, the directory part of the name of the file immediately before it on the source inclusion stack is prepended (this behavior is like the way the C preprocessor handles &lt;code&gt;#include
&quot;file.h&quot;&lt;/code&gt;).</source>
          <target state="translated">通常、このメソッドは最初に引用符を引数から取り除きます。結果が絶対パス名である場合、以前のソース要求が有効でなかった場合、または以前のソースがストリーム（ &lt;code&gt;sys.stdin&lt;/code&gt; など）であった場合、結果はそのままになります。それ以外の場合、結果が相対パス名の場合、ソースインクルードスタック上のファイルの直前のファイル名のディレクトリ部分が先頭に追加されます（この動作は、Cプリプロセッサが &lt;code&gt;#include &quot;file.h&quot;&lt;/code&gt; 処理する方法に似ています）。</target>
        </trans-unit>
        <trans-unit id="0fde105c2e0c2c34defc4b3e3f0d9044ebf54e00" translate="yes" xml:space="preserve">
          <source>Normally, when you pass an argument list to the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;, it &lt;a href=&quot;#prefix-matching&quot;&gt;recognizes abbreviations&lt;/a&gt; of long options.</source>
          <target state="translated">あなたが引数リストを渡す際、通常、&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;のメソッド&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;、それは&lt;a href=&quot;#prefix-matching&quot;&gt;略語を認識し&lt;/a&gt;、長いオプションのを。</target>
        </trans-unit>
        <trans-unit id="c8cb9467d1b3a535d48d7b80b7ce51003fd94c2c" translate="yes" xml:space="preserve">
          <source>Normally, when you pass an invalid argument list to the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;, it will exit with error info.</source>
          <target state="translated">通常、無効な引数リストを&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;メソッドに渡すと、エラー情報が表示されて終了します。</target>
        </trans-unit>
        <trans-unit id="9db1844f9d4e3e923c05588f67a7669bd03d89f7" translate="yes" xml:space="preserve">
          <source>Normally, you would use the &lt;code&gt;os.path.is*()&lt;/code&gt; functions for testing the type of a file; the functions here are useful when you are doing multiple tests of the same file and wish to avoid the overhead of the &lt;code&gt;stat()&lt;/code&gt; system call for each test. These are also useful when checking for information about a file that isn&amp;rsquo;t handled by &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;, like the tests for block and character devices.</source>
          <target state="translated">通常、ファイルのタイプをテストするには &lt;code&gt;os.path.is*()&lt;/code&gt; 関数を使用します。ここでの関数は、同じファイルの複数のテストを実行していて、各テストの &lt;code&gt;stat()&lt;/code&gt; システムコールのオーバーヘッドを回避したい場合に役立ちます。これらは、ブロックデバイスやキャラクターデバイスのテストのように、&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;で処理されないファイルに関する情報をチェックする場合にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="bb0c92aed320c99f3cf5a7b36f620aee6bc3d350" translate="yes" xml:space="preserve">
          <source>Not a XENIX named type file</source>
          <target state="translated">XENIX の名前付き型ファイルではない</target>
        </trans-unit>
        <trans-unit id="16362f559ca4bab86e57b8b31308ce0876579def" translate="yes" xml:space="preserve">
          <source>Not a data message</source>
          <target state="translated">データメッセージではない</target>
        </trans-unit>
        <trans-unit id="338469a733ebda5aa0e30bb1db80e0e157e51892" translate="yes" xml:space="preserve">
          <source>Not a directory</source>
          <target state="translated">ディレクトリではない</target>
        </trans-unit>
        <trans-unit id="8c67b4de17834c13bd6e4d2b12aca324d453a11f" translate="yes" xml:space="preserve">
          <source>Not a typewriter</source>
          <target state="translated">タイプライターではなく</target>
        </trans-unit>
        <trans-unit id="2c7846a67eb11ab196b9e6f6d7a69ff03be54a85" translate="yes" xml:space="preserve">
          <source>Not all Python object types are supported; in general, only objects whose value is independent from a particular invocation of Python can be written and read by this module. The following types are supported: booleans, integers, floating point numbers, complex numbers, strings, bytes, bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects, where it should be understood that tuples, lists, sets, frozensets and dictionaries are only supported as long as the values contained therein are themselves supported. The singletons &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; can also be marshalled and unmarshalled. For format &lt;em&gt;version&lt;/em&gt; lower than 3, recursive lists, sets and dictionaries cannot be written (see below).</source>
          <target state="translated">すべてのPythonオブジェクトタイプがサポートされているわけではありません。一般に、このモジュールでは、Pythonの特定の呼び出しから独立した値を持つオブジェクトのみを読み書きできます。次のタイプがサポートされています：ブール、整数、浮動小数点数、複素数、文字列、バイト、バイト配列、タプル、リスト、セット、frozensets、ディクショナリ、およびコードオブジェクト。タプル、リスト、セット、frozensetsまた、辞書は、そこに含まれる値自体がサポートされている場合にのみサポートされます。シングルトンの&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;また、整列化されず、非整列化することができます。3未満のフォーマット&lt;em&gt;バージョンの&lt;/em&gt;場合、再帰的なリスト、セット、およびディクショナリは記述できません（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="a3e1b1287060e9ba795d51d985b235049aa105ed" translate="yes" xml:space="preserve">
          <source>Not all elements of the XML input will end up as elements of the parsed tree. Currently, this module skips over any XML comments, processing instructions, and document type declarations in the input. Nevertheless, trees built using this module&amp;rsquo;s API rather than parsing from XML text can have comments and processing instructions in them; they will be included when generating XML output. A document type declaration may be accessed by passing a custom &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; instance to the &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">XML入力のすべての要素が解析済みツリーの要素になるわけではありません。現在、このモジュールは、XMLコメント、処理命令、および入力のドキュメントタイプ宣言をスキップします。それにもかかわらず、XMLテキストから解析するのではなく、このモジュールのAPIを使用して構築されたツリーには、コメントと処理命令を含めることができます。XML出力の生成時に含まれます。文書型宣言には、カスタム&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;インスタンスを&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;コンストラクターに渡すことでアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7451951009f7df728b6f3d4aa4cb2d7ba85029ba" translate="yes" xml:space="preserve">
          <source>Not all flags are valid for all versions of &lt;code&gt;gdbm&lt;/code&gt;. The module constant &lt;code&gt;open_flags&lt;/code&gt; is a string of supported flag characters. The exception &lt;a href=&quot;#dbm.gnu.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; is raised if an invalid flag is specified.</source>
          <target state="translated">すべてのフラグが &lt;code&gt;gdbm&lt;/code&gt; のすべてのバージョンで有効であるとは限りません。モジュール定数 &lt;code&gt;open_flags&lt;/code&gt; は、サポートされているフラグ文字の文字列です。無効なフラグを指定すると、例外&lt;a href=&quot;#dbm.gnu.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="5642009188b00b4b1401ca4b9758d17920df1198" translate="yes" xml:space="preserve">
          <source>Not all objects can be weakly referenced; those objects which can include class instances, functions written in Python (but not in C), instance methods, sets, frozensets, some &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generators&lt;/a&gt;, type objects, sockets, arrays, deques, regular expression pattern objects, and code objects.</source>
          <target state="translated">すべてのオブジェクトが弱参照できるわけではありません。クラスインスタンス、Python（Cではなく）で記述された関数、インスタンスメソッド、セット、frozensets、一部の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;、タイプオブジェクト、ソケット、配列、両端キュー、正規表現パターンオブジェクト、およびコードオブジェクトを含むことができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="fe190fcc0f6bb0c755a4b3a9ec568d6b7568e446" translate="yes" xml:space="preserve">
          <source>Not all objects can be weakly referenced; those objects which can include class instances, functions written in Python (but not in C), instance methods, sets, frozensets, some &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generators&lt;/a&gt;, type objects, sockets, arrays, deques, regular expression pattern objects, and code objects.</source>
          <target state="translated">すべてのオブジェクトを弱く参照できるわけではありません。クラスインスタンス、Pythonで記述された関数（Cでは記述されていない）、インスタンスメソッド、セット、frozensets、一部の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;、タイプオブジェクト、ソケット、配列、両端キュー、正規表現パターンオブジェクト、およびコードオブジェクトを含めることができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="07c849ef61574f048a53a41ad5a4327d9310750e" translate="yes" xml:space="preserve">
          <source>Not all platforms provide the ability to examine and modify symbolic links. Python itself can tell you what functionality is locally available.</source>
          <target state="translated">すべてのプラットフォームがシンボリックリンクを調べたり修正したりする機能を提供しているわけではありません。Python 自体は、ローカルで利用可能な機能を教えてくれます。</target>
        </trans-unit>
        <trans-unit id="a45153922480b755eeb20a8cd5a5df84141dc176" translate="yes" xml:space="preserve">
          <source>Not available on Windows.</source>
          <target state="translated">Windowsでは使用できません。</target>
        </trans-unit>
        <trans-unit id="6f9880fe552d25583bff0e051c2af11b02253f33" translate="yes" xml:space="preserve">
          <source>Not closing a resource explicitly can leave a resource open for way longer than expected; it can cause severe issues upon exiting Python. It is bad in CPython, but it is even worse in PyPy. Closing resources explicitly makes an application more deterministic and more reliable.</source>
          <target state="translated">リソースを明示的に閉じないと、予想以上に長くリソースを開いたままにしてしまうことがあります。これはCPythonでは悪いことですが、PyPyではさらに悪いことです。明示的にリソースを閉じることで、アプリケーションはより決定論的で信頼性の高いものになります。</target>
        </trans-unit>
        <trans-unit id="4c2c4692797b1c72c2490c0e81cb931fc786ce55" translate="yes" xml:space="preserve">
          <source>Not currently used.</source>
          <target state="translated">現在は使用していません。</target>
        </trans-unit>
        <trans-unit id="ac08186824133d19452b6a51a06060ff36e3034e" translate="yes" xml:space="preserve">
          <source>Not for complex numbers. Instead convert to floats using &lt;a href=&quot;functions#abs&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; if appropriate.</source>
          <target state="translated">複素数ではありません。代わりに、必要に応じて&lt;a href=&quot;functions#abs&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;を使用して浮動小数点数に変換してください。</target>
        </trans-unit>
        <trans-unit id="c8587c1a0a933c635a00ae69af27b2446cfdae1c" translate="yes" xml:space="preserve">
          <source>Not knowing the default extraction behaviors can cause unexpected decompression results. For example, when extracting the same archive twice, it overwrites files without asking.</source>
          <target state="translated">デフォルトの抽出動作を知らないと、予期せぬ解凍結果を引き起こす可能性があります。例えば、同じアーカイブを2回抽出すると、問答無用でファイルを上書きしてしまいます。</target>
        </trans-unit>
        <trans-unit id="edfda3842ea6fbe6f744c728779b1389a38d845f" translate="yes" xml:space="preserve">
          <source>Not read, but previously detected by MUA</source>
          <target state="translated">読まれていませんが、MUAによって以前に検出されています。</target>
        </trans-unit>
        <trans-unit id="68572512d58f5572f216f0e3f449070bb1b9602b" translate="yes" xml:space="preserve">
          <source>NotADirectoryError</source>
          <target state="translated">NotADirectoryError</target>
        </trans-unit>
        <trans-unit id="5ceae088184ecb2a3d44c94c6258a6f897118f5f" translate="yes" xml:space="preserve">
          <source>NotImplemented</source>
          <target state="translated">NotImplemented</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="028373739f7f8068eb474265d2fb30ef33c2b72c" translate="yes" xml:space="preserve">
          <source>Notable Module Contents</source>
          <target state="translated">注目すべきモジュールの内容</target>
        </trans-unit>
        <trans-unit id="b5ae56c0c64d23ceb8b79ad6407cefba354d2d9f" translate="yes" xml:space="preserve">
          <source>Notably, this &amp;ldquo;ignored by default&amp;rdquo; list includes &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; (for every module except &lt;code&gt;__main__&lt;/code&gt;), which means developers should make sure to test their code with typically ignored warnings made visible in order to receive timely notifications of future breaking API changes (whether in the standard library or third party packages).</source>
          <target state="translated">特に、この「デフォルトで無視される」リストには&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;__main__&lt;/code&gt; を除くすべてのモジュール）が含まれます。つまり、開発者は、将来のAPIの変更に関する最新の通知を受け取るために、通常無視される警告を表示してコードをテストする必要があります（標準ライブラリまたはサードパーティのパッケージ）。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="eaaf5966f427f3dea82bee61a4387fc35eceff0f" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;Decimal.from_float(0.1)&lt;/code&gt; is not the same as &lt;code&gt;Decimal(&amp;lsquo;0.1&amp;rsquo;)&lt;/code&gt;. Since 0.1 is not exactly representable in binary floating point, the value is stored as the nearest representable value which is &lt;code&gt;0x1.999999999999ap-4&lt;/code&gt;. That equivalent value in decimal is &lt;code&gt;0.1000000000000000055511151231257827021181583404541015625&lt;/code&gt;.</source>
          <target state="translated">注 &lt;code&gt;Decimal.from_float(0.1)&lt;/code&gt; は &lt;code&gt;Decimal(&amp;lsquo;0.1&amp;rsquo;)&lt;/code&gt; と同じではありません。0.1は2進浮動小数点で正確に表現できないため、値は &lt;code&gt;0x1.999999999999ap-4&lt;/code&gt; である最も近い表現可能な値として格納されます。この10進数での同等の値は &lt;code&gt;0.1000000000000000055511151231257827021181583404541015625&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a228a03ba762c109dde9253a8ec3fc25b50a1c65" translate="yes" xml:space="preserve">
          <source>Note also that being reentrant is &lt;em&gt;not&lt;/em&gt; the same thing as being thread safe. &lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt;&lt;code&gt;redirect_stdout()&lt;/code&gt;&lt;/a&gt;, for example, is definitely not thread safe, as it makes a global modification to the system state by binding &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; to a different stream.</source>
          <target state="translated">再入可能であること&lt;em&gt;は&lt;/em&gt;、スレッドセーフであることと同じでは&lt;em&gt;ない&lt;/em&gt;ことにも注意してください。たとえば、&lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt; &lt;code&gt;redirect_stdout()&lt;/code&gt; は&lt;/a&gt;、&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;を別のストリームにバインドしてシステム状態をグローバルに変更するため、スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="f61fec861c768279fab36f6f5c37291126c064a6" translate="yes" xml:space="preserve">
          <source>Note how &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the toplevel module here because this is the object that is bound to a name by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">これが&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;ステートメントによって名前にバインドされているオブジェクトであるため、&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;がここでトップレベルモジュールを返す方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="f06e840efa6e07a42d60a9d72a43d7cc2a569dc0" translate="yes" xml:space="preserve">
          <source>Note how &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the toplevel module here because this is the object that is bound to a name by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;がトップレベルモジュールを返す方法に注意してください。これは、&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;ステートメントによって名前にバインドされるオブジェクトであるためです。</target>
        </trans-unit>
        <trans-unit id="39a7d5217c5c02cfeb8a4550c216b87b699db0c2" translate="yes" xml:space="preserve">
          <source>Note however that &lt;a href=&quot;#timeit.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; will automatically determine the number of repetitions only when the command-line interface is used. In the &lt;a href=&quot;#timeit-examples&quot;&gt;Examples&lt;/a&gt; section you can find more advanced examples.</source>
          <target state="translated">ただし、&lt;a href=&quot;#timeit.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;は、コマンド行インターフェースが使用されている場合にのみ、繰り返し回数を自動的に決定することに注意してください。では&lt;a href=&quot;#timeit-examples&quot;&gt;例&lt;/a&gt;節あなたは、より高度な例を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="f54f228df230f0474c98b205804fa448f5fe875b" translate="yes" xml:space="preserve">
          <source>Note however that in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; only matches at the beginning of the string, whereas using &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; with a regular expression beginning with &lt;code&gt;'^'&lt;/code&gt; will match at the beginning of each line.</source>
          <target state="translated">ただし、&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モードでは、&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;は文字列の先頭でのみ一致しますが、 &lt;code&gt;'^'&lt;/code&gt; 始まる正規表現で&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;を使用すると、各行の先頭で一致します。</target>
        </trans-unit>
        <trans-unit id="05beb81acbbd60ea7c3692e5bef7179c9b5915a3" translate="yes" xml:space="preserve">
          <source>Note in particular that an exception will be raised if &lt;em&gt;methodname&lt;/em&gt; has not been &lt;em&gt;exposed&lt;/em&gt;.</source>
          <target state="translated">特に、&lt;em&gt;methodname&lt;/em&gt;が&lt;em&gt;公開&lt;/em&gt;さ&lt;em&gt;れ&lt;/em&gt;ていない場合は例外が発生することに注意してください。</target>
        </trans-unit>
        <trans-unit id="bcb9bc5733348cf84603de82545dd9a70a1be5f4" translate="yes" xml:space="preserve">
          <source>Note in particular that options (such as &lt;em&gt;-input&lt;/em&gt;) and arguments (such as &lt;em&gt;eggs.txt&lt;/em&gt;) that are separated by whitespace in the shell go in separate list elements, while arguments that need quoting or backslash escaping when used in the shell (such as filenames containing spaces or the &lt;em&gt;echo&lt;/em&gt; command shown above) are single list elements.</source>
          <target state="translated">特に、シェルで空白で区切られているオプション（&lt;em&gt;-input&lt;/em&gt;など）と引数（&lt;em&gt;eggs.txt&lt;/em&gt;など）は別々のリスト要素にあり、シェルで使用する場合は引用&lt;em&gt;符&lt;/em&gt;またはバックスラッシュエスケープが必要な引数（スペースを含むファイル名または上記の&lt;em&gt;echo&lt;/em&gt;コマンド）は、単一のリスト要素です。</target>
        </trans-unit>
        <trans-unit id="facb49e906f58a2995d4a0cf64fd63f312feb840" translate="yes" xml:space="preserve">
          <source>Note on SIGPIPE</source>
          <target state="translated">SIGPIPEに関する注意事項</target>
        </trans-unit>
        <trans-unit id="93d7b55b91dfb84b963b538a0f61240812a059a0" translate="yes" xml:space="preserve">
          <source>Note on VxWorks, this function doesn&amp;rsquo;t return &lt;code&gt;-signal&lt;/code&gt; when the new process is killed. Instead it raises OSError exception.</source>
          <target state="translated">VxWorksでは、この関数は、新しいプロセスが &lt;code&gt;-signal&lt;/code&gt; ときに-signalを返しません。代わりにOSError例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="2e7e41fdb90e46b885d4fc21bb32cf0b77b1568d" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects only remove an action if all of its option strings are overridden. So, in the example above, the old &lt;code&gt;-f/--foo&lt;/code&gt; action is retained as the &lt;code&gt;-f&lt;/code&gt; action, because only the &lt;code&gt;--foo&lt;/code&gt; option string was overridden.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;オブジェクトは、すべてのオプション文字列がオーバーライドされている場合にのみアクションを削除することに注意してください。したがって、上記の例では、 &lt;code&gt;--foo&lt;/code&gt; オプション文字列のみがオーバーライドされたため、古い &lt;code&gt;-f/--foo&lt;/code&gt; -fooアクションは &lt;code&gt;-f&lt;/code&gt; アクションとして保持されます。</target>
        </trans-unit>
        <trans-unit id="bbabc92aff4ed81b97fa59772d1100b9a7b02ef9" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#asyncore.dispatcher.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; may raise &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; , even though &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;select.poll()&lt;/code&gt;&lt;/a&gt; has reported the socket ready for reading.</source>
          <target state="translated">その注意&lt;a href=&quot;#asyncore.dispatcher.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;上げることができる&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; を&lt;/a&gt;もかかわらず、&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select.select()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;select.poll()&lt;/code&gt; &lt;/a&gt;読書のための準備ができてソケットを報告しました。</target>
        </trans-unit>
        <trans-unit id="21a214d994f16e1f90118d934dbbf9725f16b159" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; called for any operations besides &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;. This means that &lt;code&gt;get()&lt;/code&gt; will, like normal dictionaries, return &lt;code&gt;None&lt;/code&gt; as a default rather than using &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注&lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;されて&lt;em&gt;いない&lt;/em&gt;以外のすべての操作のために呼ばれる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;。つまり、通常の辞書と同様に、 &lt;code&gt;get()&lt;/code&gt; は&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;を使用するのではなく、デフォルトとして &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="04676b632fb8896008db73e1dcf56396a8424248" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; called for any operations besides &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;. This means that &lt;code&gt;get()&lt;/code&gt; will, like normal dictionaries, return &lt;code&gt;None&lt;/code&gt; as a default rather than using &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注&lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;されて&lt;em&gt;いない&lt;/em&gt;以外のすべての操作のために呼ばれる&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;。これは、 &lt;code&gt;get()&lt;/code&gt; が通常の辞書と同様に、&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;を使用するのではなく、デフォルトとして &lt;code&gt;None&lt;/code&gt; を返すことを意味します。</target>
        </trans-unit>
        <trans-unit id="0481906125c173c6e85bed62a526281abaa1516a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt;-generated deltas make no claim to be &lt;strong&gt;minimal&lt;/strong&gt; diffs. To the contrary, minimal diffs are often counter-intuitive, because they synch up anywhere possible, sometimes accidental matches 100 pages apart. Restricting synch points to contiguous matches preserves some notion of locality, at the occasional cost of producing a longer diff.</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; が&lt;/a&gt;生成したデルタは、&lt;strong&gt;最小の&lt;/strong&gt;差分であるとは主張しないことに注意してください。それどころか、最小限の差分は直感に反することがよくあります。なぜなら、それらは可能な限りどこでも同期し、時には偶然に100ページ離れて一致するからです。同期ポイントを隣接する一致に制限すると、局所性の概念が維持されますが、長い差分が生成されることがあります。</target>
        </trans-unit>
        <trans-unit id="dd69c68c8e1ff03113702c7b4183ad050851c7e0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; can also be used to ignore the details of the exception message, but such a test may still fail based on whether or not the module details are printed as part of the exception name. Using &lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt;&lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt;&lt;/a&gt; and the details from Python 2.3 is also the only clear way to write a doctest that doesn&amp;rsquo;t care about the exception detail yet continues to pass under Python 2.3 or earlier (those releases do not support &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt; and ignore them as irrelevant comments). For example:</source>
          <target state="translated">そのノート&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; は&lt;/a&gt;また、例外メッセージの内容を無視するために使用することができ、そのようなテストはまだモジュールの詳細は例外名の一部として印刷されるか否かに基づいて失敗することがあります。&lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt; &lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt; &lt;/a&gt;とPython 2.3の詳細を使用することも、例外の詳細を気にせず、Python 2.3以前で引き続き合格するdoctestを作成する唯一の明確な方法です（これらのリリースは&lt;a href=&quot;#doctest-directives&quot;&gt;doctestディレクティブ&lt;/a&gt;をサポートせず、無関係なコメントとして無視します） ）。例えば：</target>
        </trans-unit>
        <trans-unit id="8e63f31f55e12cdee25e7b08fb73243d54374458" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#float.hex&quot;&gt;&lt;code&gt;float.hex()&lt;/code&gt;&lt;/a&gt; is an instance method, while &lt;a href=&quot;#float.fromhex&quot;&gt;&lt;code&gt;float.fromhex()&lt;/code&gt;&lt;/a&gt; is a class method.</source>
          <target state="translated">&lt;a href=&quot;#float.hex&quot;&gt; &lt;code&gt;float.hex()&lt;/code&gt; &lt;/a&gt;はインスタンスメソッドであり、&lt;a href=&quot;#float.fromhex&quot;&gt; &lt;code&gt;float.fromhex()&lt;/code&gt; &lt;/a&gt;はクラスメソッドであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8a0c31b2a17d1253675bf81f567abe1a01487d1b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; is called for every &lt;em&gt;cookie&lt;/em&gt; domain, not just for the &lt;em&gt;request&lt;/em&gt; domain. For example, the function might be called with both &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; and &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; if the request domain is &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt;. The same goes for &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;要求&lt;/em&gt;ドメインだけでなく、すべての&lt;em&gt;Cookie&lt;/em&gt;ドメインに対して呼び出されることに注意してください。たとえば、リクエストドメインが &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 場合、関数は &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; と &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 両方で呼び出される可能性があります。&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;についても同様です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adc891a129f72cc10502357d2a58f83d2b041536" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt; provide the recommended API for callable introspection, and support additional behaviours (like positional-only arguments) that are sometimes encountered in extension module APIs. This function is retained primarily for use in code that needs to maintain compatibility with the Python 2 &lt;code&gt;inspect&lt;/code&gt; module API.</source>
          <target state="translated">&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;は、呼び出し可能なイントロスペクションに推奨されるAPIを提供し、拡張モジュールAPIで時々発生する追加の動作（位置のみの引数など）をサポートすることに注意してください。この関数は、主にPython 2 &lt;code&gt;inspect&lt;/code&gt; モジュールAPI との互換性を維持する必要があるコードで使用するために保持されています。</target>
        </trans-unit>
        <trans-unit id="ddd48ccb5c495507a52bd279914fdcc7d41317f6" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#math.frexp&quot;&gt;&lt;code&gt;frexp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#math.modf&quot;&gt;&lt;code&gt;modf()&lt;/code&gt;&lt;/a&gt; have a different call/return pattern than their C equivalents: they take a single argument and return a pair of values, rather than returning their second return value through an &amp;lsquo;output parameter&amp;rsquo; (there is no such thing in Python).</source>
          <target state="translated">&lt;a href=&quot;#math.frexp&quot;&gt; &lt;code&gt;frexp()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#math.modf&quot;&gt; &lt;code&gt;modf()&lt;/code&gt; &lt;/a&gt;は、同等のCとは異なる呼び出し/戻りパターンを持っていることに注意してください。これらは、「出力パラメーター」を通じて2番目の戻り値を返すのではなく、単一の引数を取り、値のペアを返します（存在しません）。 Pythonのようなもの）。</target>
        </trans-unit>
        <trans-unit id="c47ac53dbffb6c7e920e0e9c3a5bd7e68f910640" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; does not have OOR (original object return), it constructs a new, equivalent object each time you retrieve an attribute:</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; に&lt;/a&gt;はOOR（元のオブジェクトの戻り値）がないことに注意してください。属性を取得するたびに、新しい同等のオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="021cbf64fa7daa47a193a25312368fd1063a8ec4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; is actually a factory function which returns an instance of &lt;code&gt;multiprocessing.synchronize.Lock&lt;/code&gt; initialized with a default context.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;は実際には、デフォルトのコンテキストで初期化された &lt;code&gt;multiprocessing.synchronize.Lock&lt;/code&gt; のインスタンスを返すファクトリ関数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="35bd8a5288450aef9ec563731c03552420d81a78" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; is actually a factory function which returns an instance of &lt;code&gt;multiprocessing.synchronize.RLock&lt;/code&gt; initialized with a default context.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;は実際には、デフォルトのコンテキストで初期化された &lt;code&gt;multiprocessing.synchronize.RLock&lt;/code&gt; のインスタンスを返すファクトリ関数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9325e13fae2a61a60a73c50f96336405ee30e5aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#pkgutil.ImpImporter&quot;&gt;&lt;code&gt;ImpImporter&lt;/code&gt;&lt;/a&gt; does not currently support being used by placement on &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pkgutil.ImpImporter&quot;&gt; &lt;code&gt;ImpImporter&lt;/code&gt; &lt;/a&gt;は現在、&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;上の配置での使用をサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="beaaa22c5ee17911c79acb082b3767365455460e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#socketserver.UnixDatagramServer&quot;&gt;&lt;code&gt;UnixDatagramServer&lt;/code&gt;&lt;/a&gt; derives from &lt;a href=&quot;#socketserver.UDPServer&quot;&gt;&lt;code&gt;UDPServer&lt;/code&gt;&lt;/a&gt;, not from &lt;a href=&quot;#socketserver.UnixStreamServer&quot;&gt;&lt;code&gt;UnixStreamServer&lt;/code&gt;&lt;/a&gt; &amp;mdash; the only difference between an IP and a Unix stream server is the address family, which is simply repeated in both Unix server classes.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.UnixDatagramServer&quot;&gt; &lt;code&gt;UnixDatagramServer&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#socketserver.UDPServer&quot;&gt; &lt;code&gt;UDPServer&lt;/code&gt; &lt;/a&gt;から派生したものであり、&lt;a href=&quot;#socketserver.UnixStreamServer&quot;&gt; &lt;code&gt;UnixStreamServer&lt;/code&gt; &lt;/a&gt;から派生したものではないことに注意してください。IPとUnixストリームサーバーの唯一の違いは、両方のUnixサーバークラスで単純に繰り返されるアドレスファミリです。</target>
        </trans-unit>
        <trans-unit id="778f82ffcb2b485246b0e53ae55c103c932424fb" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is implemented as part of the binding process for explicit dotted attribute lookups such as &lt;code&gt;super().__getitem__(name)&lt;/code&gt;. It does so by implementing its own &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; method for searching classes in a predictable order that supports cooperative multiple inheritance. Accordingly, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is undefined for implicit lookups using statements or operators such as &lt;code&gt;super()[name]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;super().__getitem__(name)&lt;/code&gt; などの明示的なドット付き属性ルックアップのバインディングプロセスの一部として実装されていることに注意してください。これは、協調的な多重継承をサポートする予測可能な順序でクラスを検索するための独自の&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;メソッドを実装することによって行われます。したがって、&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;super()[name]&lt;/code&gt; などのステートメントまたは演算子を使用した暗黙的な検索では、super（）は未定義です。</target>
        </trans-unit>
        <trans-unit id="f7795ea5c7b9b9b0af2a5a2436bccd2cc8092c3e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is implemented as part of the binding process for explicit dotted attribute lookups such as &lt;code&gt;super().__getitem__(name)&lt;/code&gt;. It does so by implementing its own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; method for searching classes in a predictable order that supports cooperative multiple inheritance. Accordingly, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is undefined for implicit lookups using statements or operators such as &lt;code&gt;super()[name]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;super().__getitem__(name)&lt;/code&gt; などの明示的なドット付き属性ルックアップのバインディングプロセスの一部として実装されていることに注意してください。これは、協調的な多重継承をサポートする予測可能な順序でクラスを検索するための独自の&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;メソッドを実装することによって行われます。したがって、&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;super()[name]&lt;/code&gt; などのステートメントまたは演算子を使用した暗黙的なルックアップに対しては定義されていません。</target>
        </trans-unit>
        <trans-unit id="f2d150903542528eb29c182959a6e94d9657319e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; skips over comments in the input instead of creating comment objects for them. An &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; will only contain comment nodes if they have been inserted into to the tree using one of the &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;は、コメントオブジェクトを作成する代わりに、入力内のコメントをスキップすることに注意してください。アン&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; のは&lt;/a&gt;、彼らがのいずれかを使用してツリーに挿入されている場合のみ、コメントノードが含まれています&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;法を。</target>
        </trans-unit>
        <trans-unit id="7733b443aa3ad7da3792a2988711f38bba4a2a03" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; skips over processing instructions in the input instead of creating comment objects for them. An &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; will only contain processing instruction nodes if they have been inserted into to the tree using one of the &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;は、コメントオブジェクトを作成する代わりに、入力内の処理命令をスキップすることに注意してください。アン&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; のは&lt;/a&gt;、彼らがのいずれかを使用してツリーに挿入されている場合のみ、命令ノードの処理が含まれます&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;法を。</target>
        </trans-unit>
        <trans-unit id="0a0e52a29264a10a0ed33e3ee017893c317f8a46" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt;&lt;code&gt;startPrefixMapping()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt;&lt;code&gt;endPrefixMapping()&lt;/code&gt;&lt;/a&gt; events are not guaranteed to be properly nested relative to each-other: all &lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt;&lt;code&gt;startPrefixMapping()&lt;/code&gt;&lt;/a&gt; events will occur before the corresponding &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt;&lt;code&gt;startElement()&lt;/code&gt;&lt;/a&gt; event, and all &lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt;&lt;code&gt;endPrefixMapping()&lt;/code&gt;&lt;/a&gt; events will occur after the corresponding &lt;a href=&quot;#xml.sax.handler.ContentHandler.endElement&quot;&gt;&lt;code&gt;endElement()&lt;/code&gt;&lt;/a&gt; event, but their order is not guaranteed.</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt; &lt;code&gt;startPrefixMapping()&lt;/code&gt; &lt;/a&gt;イベントと&lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt; &lt;code&gt;endPrefixMapping()&lt;/code&gt; &lt;/a&gt;イベントは、互いに対して適切にネストされることが保証されないことに注意してください。すべての&lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt; &lt;code&gt;startPrefixMapping()&lt;/code&gt; &lt;/a&gt;イベントは、対応する&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt; &lt;code&gt;startElement()&lt;/code&gt; &lt;/a&gt;イベントの前に発生し、すべての&lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt; &lt;code&gt;endPrefixMapping()&lt;/code&gt; &lt;/a&gt;イベントは、対応する&lt;a href=&quot;#xml.sax.handler.ContentHandler.endElement&quot;&gt; &lt;code&gt;endElement()&lt;/code&gt; &lt;/a&gt;後に発生します。 （）イベント。ただし、その順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="47444f992c8f787e5218f00f598cb803627da402" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;'a:gz'&lt;/code&gt;, &lt;code&gt;'a:bz2'&lt;/code&gt; or &lt;code&gt;'a:xz'&lt;/code&gt; is not possible. If &lt;em&gt;mode&lt;/em&gt; is not suitable to open a certain (compressed) file for reading, &lt;a href=&quot;#tarfile.ReadError&quot;&gt;&lt;code&gt;ReadError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;em&gt;mode&lt;/em&gt;&lt;code&gt;'r'&lt;/code&gt; to avoid this. If a compression method is not supported, &lt;a href=&quot;#tarfile.CompressionError&quot;&gt;&lt;code&gt;CompressionError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">なお、 &lt;code&gt;'a:gz'&lt;/code&gt; 、 &lt;code&gt;'a:bz2'&lt;/code&gt; か &lt;code&gt;'a:xz'&lt;/code&gt; は使用できないことに。&lt;em&gt;モード&lt;/em&gt;が特定の（圧縮された）ファイルを読み取るために開くのに適していない場合、&lt;a href=&quot;#tarfile.ReadError&quot;&gt; &lt;code&gt;ReadError&lt;/code&gt; &lt;/a&gt;が発生します。これを回避するには、&lt;em&gt;モード&lt;/em&gt; &lt;code&gt;'r'&lt;/code&gt; を使用し&lt;em&gt;ます&lt;/em&gt;。圧縮方法がサポートされていない場合、&lt;a href=&quot;#tarfile.CompressionError&quot;&gt; &lt;code&gt;CompressionError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1cc69e2c68bc296e588d8f892981cbd43a28c6e1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Lock&lt;/code&gt; is actually a factory function which returns an instance of the most efficient version of the concrete Lock class that is supported by the platform.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; は実際には、プラットフォームでサポートされている具象Lockクラスの最も効率的なバージョンのインスタンスを返すファクトリ関数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee6451008c83ce88b9e80fafc4e7537e799843ea" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;None&lt;/code&gt; as a type hint is a special case and is replaced by &lt;code&gt;type(None)&lt;/code&gt;.</source>
          <target state="translated">そのノート &lt;code&gt;None&lt;/code&gt; タイプのヒントとしては、特殊なケースではないとによって置き換えられる &lt;code&gt;type(None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57fae4790fdc5439f742aac77bc9daa66d83e4d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;None&lt;/code&gt; may be returned if no handler handles the request (though the default installed global &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#urllib.request.UnknownHandler&quot;&gt;&lt;code&gt;UnknownHandler&lt;/code&gt;&lt;/a&gt; to ensure this never happens).</source>
          <target state="translated">ハンドラーがリクエストを処理しない場合、 &lt;code&gt;None&lt;/code&gt; が返される可能性があることに注意してください（デフォルトでインストールされたグローバル&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#urllib.request.UnknownHandler&quot;&gt; &lt;code&gt;UnknownHandler&lt;/code&gt; &lt;/a&gt;を使用してこれが発生しないことを保証します）。</target>
        </trans-unit>
        <trans-unit id="236fa39ea36e5dba046de057b39ac4f3d0d57af9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;RLock&lt;/code&gt; is actually a factory function which returns an instance of the most efficient version of the concrete RLock class that is supported by the platform.</source>
          <target state="translated">&lt;code&gt;RLock&lt;/code&gt; は、実際には、プラットフォームでサポートされている具象RLockクラスの最も効率的なバージョンのインスタンスを返すファクトリ関数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9ed32062270ce11074feca5a6bc1d17484d5ca1f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Type[C]&lt;/code&gt; is covariant:</source>
          <target state="translated">&lt;code&gt;Type[C]&lt;/code&gt; は共変であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5b9cfa59b4f04a3b3e5fb4f6cd1086211b01f3d0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;bletch&lt;/code&gt; is omitted because it doesn&amp;rsquo;t exist; the &lt;code&gt;bar&lt;/code&gt; directory precedes the &lt;code&gt;foo&lt;/code&gt; directory because &lt;code&gt;bar.pth&lt;/code&gt; comes alphabetically before &lt;code&gt;foo.pth&lt;/code&gt;; and &lt;code&gt;spam&lt;/code&gt; is omitted because it is not mentioned in either path configuration file.</source>
          <target state="translated">&lt;code&gt;bletch&lt;/code&gt; は存在しないため省略されていることに注意してください。 &lt;code&gt;bar&lt;/code&gt; ディレクトリには、先行し &lt;code&gt;foo&lt;/code&gt; というのためのディレクトリを &lt;code&gt;bar.pth&lt;/code&gt; は &lt;code&gt;foo.pth&lt;/code&gt; の前にアルファベット順に来る前にあります。そして &lt;code&gt;spam&lt;/code&gt; それがどちらのパス設定ファイルにも記載されていないため省略されています。</target>
        </trans-unit>
        <trans-unit id="d33be2cd5b4983695dd8516ab51e58c98eb1cabb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;filter(function, iterable)&lt;/code&gt; is equivalent to the generator expression &lt;code&gt;(item for item in iterable if function(item))&lt;/code&gt; if function is not &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;(item for item in iterable if item)&lt;/code&gt; if function is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter(function, iterable)&lt;/code&gt; は、functionが &lt;code&gt;None&lt;/code&gt; でない場合、ジェネレーター式 &lt;code&gt;(item for item in iterable if function(item))&lt;/code&gt; ）と同等であることに注意してください。でと &lt;code&gt;(item for item in iterable if item)&lt;/code&gt; if functionが &lt;code&gt;None&lt;/code&gt; である。</target>
        </trans-unit>
        <trans-unit id="85efeca034605ee9db13f57e747d94bb977067bc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fork()&lt;/code&gt; calls made by third-party C code may not call those functions, unless it explicitly calls &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt;&lt;code&gt;PyOS_BeforeFork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt;&lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt;&lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サードパーティのCコードによって行われた &lt;code&gt;fork()&lt;/code&gt; 呼び出しは、明示的に&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt; &lt;code&gt;PyOS_BeforeFork()&lt;/code&gt; を&lt;/a&gt;呼び出さない限り、これらの関数を呼び出さない場合があることに注意してください。&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt; &lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt; &lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71c7f255fffeef1206d1f6a0f035d3c0897d35b0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fork()&lt;/code&gt; calls made by third-party C code may not call those functions, unless it explicitly calls &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt;&lt;code&gt;PyOS_BeforeFork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt;&lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt;&lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サードパーティのCコードによって行われた &lt;code&gt;fork()&lt;/code&gt; 呼び出しは、&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt; &lt;code&gt;PyOS_BeforeFork()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt; &lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt; &lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt; を&lt;/a&gt;明示的に呼び出さない限り、これらの関数を呼び出さない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d7ba61f0ef9cfc007a2b6f8bfd3fbe4f04edd595" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;m.start(group)&lt;/code&gt; will equal &lt;code&gt;m.end(group)&lt;/code&gt; if &lt;em&gt;group&lt;/em&gt; matched a null string. For example, after &lt;code&gt;m = re.search('b(c?)', 'cba')&lt;/code&gt;, &lt;code&gt;m.start(0)&lt;/code&gt; is 1, &lt;code&gt;m.end(0)&lt;/code&gt; is 2, &lt;code&gt;m.start(1)&lt;/code&gt; and &lt;code&gt;m.end(1)&lt;/code&gt; are both 2, and &lt;code&gt;m.start(2)&lt;/code&gt; raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">そのノート &lt;code&gt;m.start(group)&lt;/code&gt; 等しくなる &lt;code&gt;m.end(group)&lt;/code&gt; 場合&lt;em&gt;グループは&lt;/em&gt;ヌル文字列と一致しました。たとえば、 &lt;code&gt;m = re.search('b(c?)', 'cba')&lt;/code&gt; 後、 &lt;code&gt;m.start(0)&lt;/code&gt; は1、 &lt;code&gt;m.end(0)&lt;/code&gt; は2、 &lt;code&gt;m.start(1)&lt;/code&gt; および &lt;code&gt;m.end(1)&lt;/code&gt; は両方とも2であり、 &lt;code&gt;m.start(2)&lt;/code&gt; は&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="a801fa594d8a089d333c1d08dda4b81a98110981" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;metavar&lt;/code&gt; only changes the &lt;em&gt;displayed&lt;/em&gt; name - the name of the attribute on the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; object is still determined by the &lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; value.</source>
          <target state="translated">&lt;code&gt;metavar&lt;/code&gt; は&lt;em&gt;表示される&lt;/em&gt;名前のみを変更することに注意してください-上の属性の名前&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;オブジェクトの、&lt;a href=&quot;#dest&quot;&gt; dest&lt;/a&gt;値によって決定されます。</target>
        </trans-unit>
        <trans-unit id="36e3e839ce2533fb32ef0684d4636235258670ad" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;nargs=1&lt;/code&gt; produces a list of one item. This is different from the default, in which the item is produced by itself.</source>
          <target state="translated">&lt;code&gt;nargs=1&lt;/code&gt; は1つの項目のリストを生成することに注意してください。これは、アイテムがそれ自体で作成されるデフォルトとは異なります。</target>
        </trans-unit>
        <trans-unit id="6cb4d80564b60cb42824f340ae271f84acf512f2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;quote(string, safe, encoding, errors)&lt;/code&gt; is equivalent to &lt;code&gt;quote_from_bytes(string.encode(encoding, errors), safe)&lt;/code&gt;.</source>
          <target state="translated">なお、 &lt;code&gt;quote(string, safe, encoding, errors)&lt;/code&gt; は &lt;code&gt;quote_from_bytes(string.encode(encoding, errors), safe)&lt;/code&gt; と同等であることに。</target>
        </trans-unit>
        <trans-unit id="cc85143f0c8971e93992f10750203e06ab969614" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;temp0&lt;/code&gt; and &lt;code&gt;temp1&lt;/code&gt; are objects still using the internal buffer of the &lt;code&gt;rc&lt;/code&gt; object above. So executing &lt;code&gt;rc.a = temp0&lt;/code&gt; copies the buffer contents of &lt;code&gt;temp0&lt;/code&gt; into &lt;code&gt;rc&lt;/code&gt; &amp;lsquo;s buffer. This, in turn, changes the contents of &lt;code&gt;temp1&lt;/code&gt;. So, the last assignment &lt;code&gt;rc.b = temp1&lt;/code&gt;, doesn&amp;rsquo;t have the expected effect.</source>
          <target state="translated">&lt;code&gt;temp0&lt;/code&gt; と &lt;code&gt;temp1&lt;/code&gt; は、上記の &lt;code&gt;rc&lt;/code&gt; オブジェクトの内部バッファーをまだ使用しているオブジェクトであることに注意してください。したがって、 &lt;code&gt;rc.a = temp0&lt;/code&gt; 実行すると、temp0のバッファーの内容が &lt;code&gt;rc&lt;/code&gt; のバッファーに &lt;code&gt;temp0&lt;/code&gt; されます。これにより、 &lt;code&gt;temp1&lt;/code&gt; の内容が変更されます。したがって、最後の割り当て &lt;code&gt;rc.b = temp1&lt;/code&gt; は、期待した効果をもたらしません。</target>
        </trans-unit>
        <trans-unit id="7f362e945054667a3816f573ef83bd7edea53f2a" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; modifications in the body of the context manager, including replacement of the object, will be reverted at the end of the block.</source>
          <target state="translated">&lt;em&gt;すべての&lt;/em&gt;ことに注意してください&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;オブジェクトの置換を含む、コンテキストマネージャーの本体に sys.pathの変更は、ブロックの最後で元に戻されることに。</target>
        </trans-unit>
        <trans-unit id="ce5fc6b37538034752807f8815ba613f8bc848ab" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;lock&lt;/em&gt; is a keyword only argument.</source>
          <target state="translated">ご了承ください &lt;em&gt;lock&lt;/em&gt;はキーワードのみの引数である。</target>
        </trans-unit>
        <trans-unit id="3b2234a6dca333d6acda4ece1514b447bb223c5d" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;lock&lt;/em&gt; is a keyword-only argument.</source>
          <target state="translated">ご了承ください &lt;em&gt;lock&lt;/em&gt;はキーワードのみの引数である。</target>
        </trans-unit>
        <trans-unit id="3e5897049932333313c37f96477a83c9d676a2c7" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;mapname&lt;/em&gt; is first checked if it is an alias to another name.</source>
          <target state="translated">ご了承ください &lt;em&gt;mapname&lt;/em&gt;が別の名前のエイリアスであるかどうかが最初にチェックされることに。</target>
        </trans-unit>
        <trans-unit id="0bf52d3f07d9f7c54657bde5e8753068a541df3d" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;subtype&lt;/em&gt; is optional; if omitted, then subpart MIME type matching is done only with the main type. &lt;em&gt;maintype&lt;/em&gt; is optional too; it defaults to &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;サブタイプ&lt;/em&gt;はオプションであることに注意してください。省略した場合、サブパートMIMEタイプのマッチングはメインタイプでのみ行われます。&lt;em&gt;maintype&lt;/em&gt;もオプションです。デフォルトは&lt;em&gt; text&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="185bf61bd6bed1a3aeabce3b0e19da1aead89726" translate="yes" xml:space="preserve">
          <source>Note that CGI scripts will be run with UID of user nobody, for security reasons. Problems with the CGI script will be translated to error 403.</source>
          <target state="translated">セキュリティ上の理由から、CGI スクリプトはユーザ nobody の UID で実行されることに注意してください。CGI スクリプトの問題はエラー 403 に変換されます。</target>
        </trans-unit>
        <trans-unit id="2d9d2deaf97052c0294923500df788d9b644ff07" translate="yes" xml:space="preserve">
          <source>Note that DOM attributes may also be manipulated as nodes instead of as simple strings. It is fairly rare that you must do this, however, so this usage is not yet documented.</source>
          <target state="translated">DOM の属性は、単純な文字列ではなくノードとしても操作できることに注意してください。しかし、これをしなければならないことはかなり稀なので、この使用法はまだ文書化されていません。</target>
        </trans-unit>
        <trans-unit id="f0c209dc694d0046aa169702d84ba458e5877b53" translate="yes" xml:space="preserve">
          <source>Note that GNU &lt;strong&gt;gettext&lt;/strong&gt; also defines a &lt;code&gt;dcgettext()&lt;/code&gt; method, but this was deemed not useful and so it is currently unimplemented.</source>
          <target state="translated">GNU &lt;strong&gt;gettext&lt;/strong&gt;は、 &lt;code&gt;dcgettext()&lt;/code&gt; メソッドをいますが、これは役に立たないと見なされたため、現在実装されていません。</target>
        </trans-unit>
        <trans-unit id="ac3a38393892122ad7e515b32aa73f768974848c" translate="yes" xml:space="preserve">
          <source>Note that IMAP4 message numbers change as the mailbox changes; in particular, after an &lt;code&gt;EXPUNGE&lt;/code&gt; command performs deletions the remaining messages are renumbered. So it is highly advisable to use UIDs instead, with the UID command.</source>
          <target state="translated">IMAP4メッセージ番号は、メールボックスが変更されると変化することに注意してください。特に、 &lt;code&gt;EXPUNGE&lt;/code&gt; コマンドが削除を実行した、残りのメッセージの番号が付け直されます。したがって、代わりにUIDコマンドでUIDを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="b2c88144df43e9fa2a3b8a94deba5ba70c305ffa" translate="yes" xml:space="preserve">
          <source>Note that IPv6 scoped addresses are converted to integers without scope zone ID.</source>
          <target state="translated">IPv6のスコープされたアドレスは、スコープゾーンIDなしで整数に変換されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="171726c431e5e57c0ba8ef895a87dd12a2775147" translate="yes" xml:space="preserve">
          <source>Note that POP3, though widely supported, is obsolescent. The implementation quality of POP3 servers varies widely, and too many are quite poor. If your mailserver supports IMAP, you would be better off using the &lt;a href=&quot;imaplib#imaplib.IMAP4&quot;&gt;&lt;code&gt;imaplib.IMAP4&lt;/code&gt;&lt;/a&gt; class, as IMAP servers tend to be better implemented.</source>
          <target state="translated">POP3は広くサポートされていますが、廃止されていることに注意してください。 POP3サーバーの実装品質は大きく異なり、多すぎるとかなり貧弱です。メールサーバーがIMAPをサポートしている場合は、IMAPサーバーがより適切に実装される傾向があるため、&lt;a href=&quot;imaplib#imaplib.IMAP4&quot;&gt; &lt;code&gt;imaplib.IMAP4&lt;/code&gt; &lt;/a&gt;クラスを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b0976769a6f63c576221d99c17d735ec72b6244d" translate="yes" xml:space="preserve">
          <source>Note that Python makes no effort to distinguish signaling NaNs from quiet NaNs, and behavior for signaling NaNs remains unspecified. Typical behavior is to treat all NaNs as though they were quiet.</source>
          <target state="translated">Pythonはシグナルを発するNaNと静かなNaNを区別する努力をしておらず、シグナルを発するNaNの振る舞いは未定義のままであることに注意してください。典型的な動作は、すべてのNaNをあたかも静音であるかのように扱うことです。</target>
        </trans-unit>
        <trans-unit id="9296f2c1170009e8779568448d5aef2bd32ea765" translate="yes" xml:space="preserve">
          <source>Note that SSL-on-563 is discouraged per &lt;a href=&quot;https://tools.ietf.org/html/rfc4642.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4642&lt;/strong&gt;&lt;/a&gt;, in favor of STARTTLS as described below. However, some servers only support the former.</source>
          <target state="translated">SSL-on-563は、&lt;a href=&quot;https://tools.ietf.org/html/rfc4642.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4642&lt;/strong&gt;&lt;/a&gt;で推奨されていないことに注意してください。以下で説明するように、STARTTLS が推奨されます。ただし、一部のサーバーは前者のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="0d544a9bc75ffdcf42bb88359222d7a7b4debd33" translate="yes" xml:space="preserve">
          <source>Note that a daemonic process is not allowed to create child processes. Otherwise a daemonic process would leave its children orphaned if it gets terminated when its parent process exits. Additionally, these are &lt;strong&gt;not&lt;/strong&gt; Unix daemons or services, they are normal processes that will be terminated (and not joined) if non-daemonic processes have exited.</source>
          <target state="translated">デーモンプロセスは子プロセスを作成できないことに注意してください。そうしないと、デーモンプロセスは、親プロセスが終了したときに終了した場合、子プロセスが孤立したままになります。さらに、これらはあり&lt;strong&gt;ません&lt;/strong&gt;、彼らは非鬼神のプロセスが終了している場合は終了し（と接合されていない）され、通常のプロセスであり、UNIXのデーモンまたはサービス。</target>
        </trans-unit>
        <trans-unit id="b3ab68b2d6d6352eec66994675336fc958445858" translate="yes" xml:space="preserve">
          <source>Note that a queue created using a manager does not have this issue. See &lt;a href=&quot;#multiprocessing-programming&quot;&gt;Programming guidelines&lt;/a&gt;.</source>
          <target state="translated">マネージャーを使用して作成されたキューにはこの問題がないことに注意してください。&lt;a href=&quot;#multiprocessing-programming&quot;&gt;プログラミングのガイドラインを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="83b09fa4d37d211dda63c2257b5bbfcc0eea346c" translate="yes" xml:space="preserve">
          <source>Note that a single name can be bound to multiple objects. If the result is &lt;code&gt;True&lt;/code&gt;, the name may also be bound to other objects, like an int or list, that does not introduce a new namespace.</source>
          <target state="translated">単一の名前を複数のオブジェクトにバインドできることに注意してください。結果が &lt;code&gt;True&lt;/code&gt; の場合、名前は、新しい名前空間を導入しないintやリストなどの他のオブジェクトにバインドされている可能性もあります。</target>
        </trans-unit>
        <trans-unit id="cc7182d710470dc2eccc4f80d44d9c3c8590984b" translate="yes" xml:space="preserve">
          <source>Note that accessing the ctypes object through the wrapper can be a lot slower than accessing the raw ctypes object.</source>
          <target state="translated">ラッパーを使ってctypesオブジェクトにアクセスすると、生のctypesオブジェクトにアクセスするよりもかなり遅くなることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cfff56aec00da48d3760fdc8fdc321170625cd65" translate="yes" xml:space="preserve">
          <source>Note that additional file formats which can be decompressed by the &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; programs, such as those produced by &lt;strong&gt;compress&lt;/strong&gt; and &lt;strong&gt;pack&lt;/strong&gt;, are not supported by this module.</source>
          <target state="translated">このモジュールでは、&lt;strong&gt;compress&lt;/strong&gt;や&lt;strong&gt;pack&lt;/strong&gt;で作成されたものなど、&lt;strong&gt;gzip&lt;/strong&gt;および&lt;strong&gt;gunzip&lt;/strong&gt;プログラムで解凍できる追加のファイル形式はサポートされていません。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29cc14f3bb61b303c6e569ab997e5a9c2519db07" translate="yes" xml:space="preserve">
          <source>Note that all examples in this section &lt;strong&gt;purposefully&lt;/strong&gt; show how to use the low-level event loop APIs, such as &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;loop.run_forever()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;. Modern asyncio applications rarely need to be written this way; consider using the high-level functions like &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このセクションのすべての例は、&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;loop.run_forever()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;などの低レベルのイベントループAPIの使用方法を&lt;strong&gt;意図的に&lt;/strong&gt;示していることに注意してください。最新のasyncioアプリケーションがこのように記述される必要はほとんどありません。&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;などの高水準関数の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="52b13893f67d7ba58e9280b940186eb07db6ac12" translate="yes" xml:space="preserve">
          <source>Note that all sorts on statistics are in descending order (placing most time consuming items first), where as name, file, and line number searches are in ascending order (alphabetical). The subtle distinction between &lt;code&gt;SortKey.NFL&lt;/code&gt; and &lt;code&gt;SortKey.STDNAME&lt;/code&gt; is that the standard name is a sort of the name as printed, which means that the embedded line numbers get compared in an odd way. For example, lines 3, 20, and 40 would (if the file names were the same) appear in the string order 20, 3 and 40. In contrast, &lt;code&gt;SortKey.NFL&lt;/code&gt; does a numeric compare of the line numbers. In fact, &lt;code&gt;sort_stats(SortKey.NFL)&lt;/code&gt; is the same as &lt;code&gt;sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey.LINE)&lt;/code&gt;.</source>
          <target state="translated">統計のすべてのソートは降順（最も時間のかかる項目を最初に配置）であり、名前、ファイル、および行番号の検索は昇順（アルファベット順）であることに注意してください。 &lt;code&gt;SortKey.NFL&lt;/code&gt; と &lt;code&gt;SortKey.STDNAME&lt;/code&gt; の微妙な違いは、標準名が印刷された名前の一種であることです。つまり、埋め込まれた行番号が奇妙な方法で比較されます。たとえば、 &lt;code&gt;SortKey.NFL&lt;/code&gt; 行目（ファイル名が同じ場合）は、20、3、40の文字列順に表示されます。対照的に、SortKey.NFLは行番号の数値比較を行います。実際、 &lt;code&gt;sort_stats(SortKey.NFL)&lt;/code&gt; は &lt;code&gt;sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey.LINE)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="f0c40fc37a9bf565a857f29ad723c19c596a97f9" translate="yes" xml:space="preserve">
          <source>Note that all these functions check ordinal bit values derived from the character of the string you pass in; they do not actually know anything about the host machine&amp;rsquo;s character encoding.</source>
          <target state="translated">これらの関数はすべて、渡した文字列の文字から派生した序数ビット値をチェックすることに注意してください。ホストマシンの文字エンコーディングについては、実際には何も知りません。</target>
        </trans-unit>
        <trans-unit id="0102294a10326ceacdc04ecf27b97bae220074cc" translate="yes" xml:space="preserve">
          <source>Note that alternative event loop implementations might have own limitations; please refer to their documentation.</source>
          <target state="translated">イベントループの実装には制限があるかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="45152f2b702b262fbbfcdce7c55047081266ed37" translate="yes" xml:space="preserve">
          <source>Note that although the naming for the above described class attributes is singular (e.g. &lt;code&gt;cssclass_month&lt;/code&gt;&lt;code&gt;cssclass_noday&lt;/code&gt;), one can replace the single CSS class with a space separated list of CSS classes, for example:</source>
          <target state="translated">上記のクラス属性の命名は単数（例： &lt;code&gt;cssclass_month&lt;/code&gt; &lt;code&gt;cssclass_noday&lt;/code&gt; ）ですが、単一のCSSクラスをスペースで区切られたCSSクラスのリストで置き換えることができます。たとえば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="cc788fedc235ef380745686ed580eadd15bb5571" translate="yes" xml:space="preserve">
          <source>Note that an array of &lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt;&lt;code&gt;ctypes.c_char&lt;/code&gt;&lt;/a&gt; has &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;raw&lt;/code&gt; attributes which allow one to use it to store and retrieve strings &amp;ndash; see documentation for &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt; &lt;code&gt;ctypes.c_char&lt;/code&gt; &lt;/a&gt;の配列には &lt;code&gt;value&lt;/code&gt; と &lt;code&gt;raw&lt;/code&gt; 属性があり、文字列の格納と取得にそれを使用できることに注意してください&amp;ndash; &lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="dbc239128181b638fbd4155908a13241b2705d34" translate="yes" xml:space="preserve">
          <source>Note that an array of &lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt;&lt;code&gt;ctypes.c_char&lt;/code&gt;&lt;/a&gt; has &lt;em&gt;value&lt;/em&gt; and &lt;em&gt;raw&lt;/em&gt; attributes which allow one to use it to store and retrieve strings.</source>
          <target state="translated">配列という注意&lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt; &lt;code&gt;ctypes.c_char&lt;/code&gt; が&lt;/a&gt;あり&lt;em&gt;価値&lt;/em&gt;と&lt;em&gt;生&lt;/em&gt; 1は、文字列を格納および取得するためにそれを使用できるようにする属性を。</target>
        </trans-unit>
        <trans-unit id="0725d9c7542906970da6bf54619129ddce9a488b" translate="yes" xml:space="preserve">
          <source>Note that an equivalent command line interface could be produced with less code and more informative help and error messages by using the &lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">&lt;a href=&quot;argparse#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールを使用することで、同等のコマンドラインインターフェイスを、少ないコードで、より有益なヘルプとエラーメッセージで生成できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d79de2b4a69fab3541bfc76151735d65f04d953a" translate="yes" xml:space="preserve">
          <source>Note that any arguments not in your user-defined groups will end up back in the usual &amp;ldquo;positional arguments&amp;rdquo; and &amp;ldquo;optional arguments&amp;rdquo; sections.</source>
          <target state="translated">ユーザー定義グループにない引数は、通常の「位置引数」および「オプション引数」セクションに戻ることに注意してください。</target>
        </trans-unit>
        <trans-unit id="68a57b0f8502dd0b76f40e988de13524a3dc9d6d" translate="yes" xml:space="preserve">
          <source>Note that any data following the terminator will be available for reading by the channel after &lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt;&lt;code&gt;found_terminator()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">ターミネータに続くデータは、&lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt; &lt;code&gt;found_terminator()&lt;/code&gt; &lt;/a&gt;が呼び出された後、チャネルで読み取ることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="10e132ee6084002c7b0a817968e06f5f4037ab02" translate="yes" xml:space="preserve">
          <source>Note that any string beginning with two backslashes is assumed by default to be an &lt;code&gt;'AF_PIPE'&lt;/code&gt; address rather than an &lt;code&gt;'AF_UNIX'&lt;/code&gt; address.</source>
          <target state="translated">2つのバックスラッシュで始まる文字列は、デフォルトで &lt;code&gt;'AF_UNIX'&lt;/code&gt; アドレスではなく &lt;code&gt;'AF_PIPE'&lt;/code&gt; アドレスであると想定されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="27d20a06c7ebcc2a74c0dcd2eec75504ff20d0c8" translate="yes" xml:space="preserve">
          <source>Note that as an exception is propagated down the chain of callers, an &lt;code&gt;'exception'&lt;/code&gt; event is generated at each level.</source>
          <target state="translated">例外が呼び出し側のチェーンを伝わるにつれて、 &lt;code&gt;'exception'&lt;/code&gt; イベントが各レベルで生成されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f9800dc40fc6ed2861610fc1c540d6d1d8733fe1" translate="yes" xml:space="preserve">
          <source>Note that calling any method (even inquiries) on a closed stream is undefined. Implementations may raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="translated">閉じたストリームでメソッド（照会も含む）を呼び出すことは定義されていないことに注意してください。この場合、実装では&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7982f207f5b326c1a5b9df38ed760b57b9caf0aa" translate="yes" xml:space="preserve">
          <source>Note that child nodes of nodes that have a custom visitor method won&amp;rsquo;t be visited unless the visitor calls &lt;a href=&quot;#ast.NodeVisitor.generic_visit&quot;&gt;&lt;code&gt;generic_visit()&lt;/code&gt;&lt;/a&gt; or visits them itself.</source>
          <target state="translated">カスタムビジターメソッドを持つノードの子ノードは、ビジターが&lt;a href=&quot;#ast.NodeVisitor.generic_visit&quot;&gt; &lt;code&gt;generic_visit()&lt;/code&gt; を&lt;/a&gt;呼び出すか、それ自体を訪問しない限りアクセスされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1119ecb23602acd8caeffa5d000794f1eba1757c" translate="yes" xml:space="preserve">
          <source>Note that concurrent modification while iterating can lead to problems, just like when iterating and modifying Python lists or dicts. Therefore, the example first collects all matching elements with &lt;code&gt;root.findall()&lt;/code&gt;, and only then iterates over the list of matches.</source>
          <target state="translated">反復中の同時変更は、Pythonリストまたは辞書を反復および変更する場合と同様に、問題を引き起こす可能性があることに注意してください。したがって、この例では、最初に &lt;code&gt;root.findall()&lt;/code&gt; を使用して一致するすべての要素を収集し、次に一致するリストを反復処理します。</target>
        </trans-unit>
        <trans-unit id="2d382ed6dd9eab4df2994bedfb13e3537561f992" translate="yes" xml:space="preserve">
          <source>Note that currently expanded netmasks are not supported. That means &lt;code&gt;2001:db00::0/24&lt;/code&gt; is a valid argument while &lt;code&gt;2001:db00::0/ffff:ff00::&lt;/code&gt; not.</source>
          <target state="translated">現在拡張されているネットマスクはサポートされていないことに注意してください。つまり、 &lt;code&gt;2001:db00::0/24&lt;/code&gt; は有効な引数ですが、 &lt;code&gt;2001:db00::0/ffff:ff00::&lt;/code&gt; は無効です。</target>
        </trans-unit>
        <trans-unit id="4db3f43ffbaa9cce83c5e9797f11ee3784e159b1" translate="yes" xml:space="preserve">
          <source>Note that currently mutually exclusive argument groups do not support the &lt;em&gt;title&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt; arguments of &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在、相互に排他的な引数グループは、&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;タイトル&lt;/em&gt;と&lt;em&gt;説明の&lt;/em&gt;引数をサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4ba81a2a12ca2905b7e3bc3e32ecb856013a86f5" translate="yes" xml:space="preserve">
          <source>Note that descendant processes of the process will &lt;em&gt;not&lt;/em&gt; be terminated &amp;ndash; they will simply become orphaned.</source>
          <target state="translated">プロセスの子孫プロセスは終了され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。単に孤立するだけです。</target>
        </trans-unit>
        <trans-unit id="b3a3be6e16147e9e8fd7d6862b1baa360c9c8ab4" translate="yes" xml:space="preserve">
          <source>Note that encoding with &lt;a href=&quot;#email.encoders.encode_quopri&quot;&gt;&lt;code&gt;encode_quopri()&lt;/code&gt;&lt;/a&gt; also encodes all tabs and space characters in the data.</source>
          <target state="translated">&lt;a href=&quot;#email.encoders.encode_quopri&quot;&gt; &lt;code&gt;encode_quopri()&lt;/code&gt; &lt;/a&gt;を使用したエンコードでは、データ内のすべてのタブとスペース文字もエンコードされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8858707f6b738b8eec7bc257425fec239a5f9e41" translate="yes" xml:space="preserve">
          <source>Note that even for small &lt;code&gt;len(x)&lt;/code&gt;, the total number of permutations of &lt;em&gt;x&lt;/em&gt; can quickly grow larger than the period of most random number generators. This implies that most permutations of a long sequence can never be generated. For example, a sequence of length 2080 is the largest that can fit within the period of the Mersenne Twister random number generator.</source>
          <target state="translated">少しでもために注意 &lt;code&gt;len(x)&lt;/code&gt; 、の順列の総数&lt;em&gt;xは&lt;/em&gt;すぐにほとんどの乱数発生器の周期よりも大きく成長することができます。これは、長いシーケンスのほとんどの順列が生成できないことを意味します。たとえば、長さ2080のシーケンスは、メルセンヌツイスター乱数発生器の期間内に収まる最大のものです。</target>
        </trans-unit>
        <trans-unit id="c135e18157f388a32703b9e0b8ce0fcf98a88ef9" translate="yes" xml:space="preserve">
          <source>Note that even in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode, &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;re.match()&lt;/code&gt;&lt;/a&gt; will only match at the beginning of the string and not at the beginning of each line.</source>
          <target state="translated">&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;モードでも、&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;re.match()&lt;/code&gt; &lt;/a&gt;は文字列の先頭でのみ一致し、各行の先頭では一致しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c248f2777a5cff0833e5e1f56ce05642e54cb886" translate="yes" xml:space="preserve">
          <source>Note that even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second. While this function normally returns non-decreasing values, it can return a lower value than a previous call if the system clock has been set back between the two calls.</source>
          <target state="translated">時刻は常に浮動小数点数で返されますが、すべてのシステムが1秒よりも精度の良い時刻を提供しているわけではないことに注意してください。この関数は通常は減少しない値を返しますが、2回の呼び出しの間にシステムクロックがセットバックされている場合、前の呼び出しよりも低い値を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="8979e2f2b1b29e83666a8cd201294ac167294831" translate="yes" xml:space="preserve">
          <source>Note that existing parameter values of headers may be accessed through the &lt;code&gt;params&lt;/code&gt; attribute of the header value (for example, &lt;code&gt;msg['Content-Type'].params['charset']&lt;/code&gt;).</source>
          <target state="translated">ヘッダーの既存のパラメーター値には、ヘッダー値の &lt;code&gt;params&lt;/code&gt; 属性を通じてアクセスできることに注意してください（たとえば、 &lt;code&gt;msg['Content-Type'].params['charset']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5786a82a8493b79c96451e2f0e8ff1a491a88f3b" translate="yes" xml:space="preserve">
          <source>Note that expected output now shows that the snippet runs 1 second faster than before:</source>
          <target state="translated">期待される出力は、スニペットが以前よりも1秒速く実行されることを示すようになったことに注意してください。</target>
        </trans-unit>
        <trans-unit id="356743d5b08962bffdeebdb7d374e8d296f8aa3d" translate="yes" xml:space="preserve">
          <source>Note that filters attached to handlers are consulted before an event is emitted by the handler, whereas filters attached to loggers are consulted whenever an event is logged (using &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, etc.), before sending an event to handlers. This means that events which have been generated by descendant loggers will not be filtered by a logger&amp;rsquo;s filter setting, unless the filter has also been applied to those descendant loggers.</source>
          <target state="translated">ハンドラーにアタッチされたフィルターは、イベントがハンドラーによって発行される前に参照されますが、ロガーにアタッチされたフィルターは、イベントがハンドラーに送信される前に、イベントが記録されるたびに参照されます（&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#logging.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;などを使用）。つまり、子孫ロガーによって生成されたイベントは、その子孫ロガーにもフィルターが適用されていない限り、ロガーのフィルター設定によってフィルターされません。</target>
        </trans-unit>
        <trans-unit id="61a0f268ab225e4ac517bd285248bf03bd4c499e" translate="yes" xml:space="preserve">
          <source>Note that for backward compatibility, the &lt;code&gt;re.U&lt;/code&gt; flag still exists (as well as its synonym &lt;code&gt;re.UNICODE&lt;/code&gt; and its embedded counterpart &lt;code&gt;(?u)&lt;/code&gt;), but these are redundant in Python 3 since matches are Unicode by default for strings (and Unicode matching isn&amp;rsquo;t allowed for bytes).</source>
          <target state="translated">下位互換性のために、 &lt;code&gt;re.U&lt;/code&gt; フラグ（およびその同義語 &lt;code&gt;re.UNICODE&lt;/code&gt; とその埋め込み対応物 &lt;code&gt;(?u)&lt;/code&gt; ）は引き続き存在しますが、一致はデフォルトで文字列のUnicode（およびUnicodeバイトのマッチングは許可されていません）。</target>
        </trans-unit>
        <trans-unit id="465c176dc885bd97b79a8361a2bbae22c1b4e34c" translate="yes" xml:space="preserve">
          <source>Note that for processes created by the &lt;a href=&quot;#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt; function, this attribute is the PID of the spawned shell.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.create_subprocess_shell&quot;&gt; &lt;code&gt;create_subprocess_shell()&lt;/code&gt; &lt;/a&gt;関数によって作成されたプロセスの場合、この属性は生成されたシェルのPIDであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3882e94a24c32a31d35cc2a1b007f11e37659571" translate="yes" xml:space="preserve">
          <source>Note that for some non-Unix systems, &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt; are empty, and the path manipulations are skipped; however the import of &lt;code&gt;sitecustomize&lt;/code&gt; and &lt;code&gt;usercustomize&lt;/code&gt; is still attempted.</source>
          <target state="translated">一部の非UNIXシステムでは、 &lt;code&gt;sys.prefix&lt;/code&gt; と &lt;code&gt;sys.exec_prefix&lt;/code&gt; が空であり、パス操作がスキップされることに注意してください。ただし、 &lt;code&gt;sitecustomize&lt;/code&gt; および &lt;code&gt;usercustomize&lt;/code&gt; のインポートは引き続き試行されます。</target>
        </trans-unit>
        <trans-unit id="8fd33ef4d4d5e2689d3ced573aea2f56a54160ad" translate="yes" xml:space="preserve">
          <source>Note that for very large time intervals (greater than 270 years on most platforms) this method will lose microsecond accuracy.</source>
          <target state="translated">非常に大きな時間間隔(ほとんどのプラットフォームで270年以上)では、この方法はマイクロ秒の精度を失うことに注意してください。</target>
        </trans-unit>
        <trans-unit id="840170e277d815baed7c66a50d417357022d75d1" translate="yes" xml:space="preserve">
          <source>Note that functions (built-in and user-defined) are pickled by &amp;ldquo;fully qualified&amp;rdquo; name reference, not by value. &lt;a href=&quot;#id8&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt; This means that only the function name is pickled, along with the name of the module the function is defined in. Neither the function&amp;rsquo;s code, nor any of its function attributes are pickled. Thus the defining module must be importable in the unpickling environment, and the module must contain the named object, otherwise an exception will be raised. &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">関数（組み込みおよびユーザー定義）は、値ではなく「完全修飾」名参照によってピクルされます。&lt;a href=&quot;#id8&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt;これは、関数が定義されているモジュールの名前とともに、関数名のみがpickle化されることを意味します。関数のコードも関数属性もpickle化されません。したがって、定義モジュールはunpickle環境でインポート可能でなければならず、モジュールには名前付きオブジェクトが含まれている必要があります。そうでない場合、例外が発生します。&lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;３&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb1ee9a91608b1283fe0ceec10e559f6fc6844a7" translate="yes" xml:space="preserve">
          <source>Note that if a slash(/) appears in the parameter list of a function, when invoking &lt;a href=&quot;#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt;, it means that the parameters prior to the slash are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">関数のパラメーターリストにスラッシュ（/）が表示されている場合、&lt;a href=&quot;#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;を呼び出すと、スラッシュの前のパラメーターは位置のみに限定されます。詳細については&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;、位置のみのパラメータに関するFAQエントリを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7ec568535fd150acb01c00b677671e9fb6fee5f9" translate="yes" xml:space="preserve">
          <source>Note that if a slash(/) appears in the parameter list of a function, when invoking &lt;a href=&quot;#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt;, it means that the parameters prior to the slash are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">関数のパラメーターリストにスラッシュ（/）が表示されている場合、&lt;a href=&quot;#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;を呼び出すと、スラッシュの前のパラメーターは位置のみであることを意味することに注意してください。詳細については&lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;、位置のみのパラメータに関するFAQエントリを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6ba29bc642962688bd93f7d7440bdc3d09b1a14c" translate="yes" xml:space="preserve">
          <source>Note that if anything goes wrong while importing the callable named by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt; is reported and the breakpoint is ignored.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;で指定された呼び出し可能オブジェクトのインポート中に問題が発生した場合、&lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt;が報告され、ブレークポイントは無視されます。</target>
        </trans-unit>
        <trans-unit id="97cb6a869aebbfa67f78bc839290dc18ba9514f9" translate="yes" xml:space="preserve">
          <source>Note that if anything goes wrong while importing the callable named by &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt; is reported and the breakpoint is ignored.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;で指定された呼び出し可能オブジェクトのインポート中に問題が発生した場合、&lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt;が報告され、ブレークポイントは無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d37b5b457c0e579a56a9008b596dcf0daed0c531" translate="yes" xml:space="preserve">
          <source>Note that if the message object has no preamble, the &lt;em&gt;preamble&lt;/em&gt; attribute will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">メッセージオブジェクトにプリアンブルがない場合、&lt;em&gt;プリアンブル&lt;/em&gt;属性は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c57b574c5b42a4687029f512f3b789f966aa395d" translate="yes" xml:space="preserve">
          <source>Note that if the named field appears more than once in the message&amp;rsquo;s headers, exactly which of those field values will be returned is undefined. Use the &lt;a href=&quot;#email.message.EmailMessage.get_all&quot;&gt;&lt;code&gt;get_all()&lt;/code&gt;&lt;/a&gt; method to get the values of all the extant headers named &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">名前付きフィールドがメッセージのヘッダーに複数回出現する場合、返されるフィールド値は正確には定義されていないことに注意してください。&lt;a href=&quot;#email.message.EmailMessage.get_all&quot;&gt; &lt;code&gt;get_all()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、nameという&lt;em&gt;名前の&lt;/em&gt;既存のすべてのヘッダーの値を取得します。</target>
        </trans-unit>
        <trans-unit id="15161d213ea81ba024de0a076644d1272635e94d" translate="yes" xml:space="preserve">
          <source>Note that if the named field appears more than once in the message&amp;rsquo;s headers, exactly which of those field values will be returned is undefined. Use the &lt;a href=&quot;#email.message.Message.get_all&quot;&gt;&lt;code&gt;get_all()&lt;/code&gt;&lt;/a&gt; method to get the values of all the extant named headers.</source>
          <target state="translated">名前付きフィールドがメッセージのヘッダーに複数回出現する場合、返されるフィールド値は正確には定義されていないことに注意してください。&lt;a href=&quot;#email.message.Message.get_all&quot;&gt; &lt;code&gt;get_all()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、既存のすべての名前付きヘッダーの値を取得します。</target>
        </trans-unit>
        <trans-unit id="87ae25219d92f70d8ce3d6068ac05c1ccc107875" translate="yes" xml:space="preserve">
          <source>Note that if you have defined any custom logging level higher than &lt;code&gt;CRITICAL&lt;/code&gt; (this is not recommended), you won&amp;rsquo;t be able to rely on the default value for the &lt;em&gt;level&lt;/em&gt; parameter, but will have to explicitly supply a suitable value.</source>
          <target state="translated">&lt;code&gt;CRITICAL&lt;/code&gt; よりも高いカスタムログレベルを定義した場合（これは推奨されません）、&lt;em&gt;level&lt;/em&gt;パラメーターのデフォルト値に依存することはできませんが、適切な値を明示的に指定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2465633c732bfdca544359da14ee59c714468eb0" translate="yes" xml:space="preserve">
          <source>Note that if you set the &lt;em&gt;shell&lt;/em&gt; argument to &lt;code&gt;True&lt;/code&gt;, this is the process ID of the spawned shell.</source>
          <target state="translated">&lt;em&gt;shell&lt;/em&gt;引数を &lt;code&gt;True&lt;/code&gt; に設定した場合、これは生成されたシェルのプロセスIDであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="95edd926d0c8f963e4c8a0f19295c25236bc7bfd" translate="yes" xml:space="preserve">
          <source>Note that if you specify an interpreter and then distribute your application archive, you need to ensure that the interpreter used is portable. The Python launcher for Windows supports most common forms of POSIX &lt;code&gt;#!&lt;/code&gt; line, but there are other issues to consider:</source>
          <target state="translated">インタープリターを指定してアプリケーションアーカイブを配布する場合は、使用するインタープリターが移植可能であることを確認する必要があることに注意してください。Windows用のPythonランチャーは、POSIXの最も一般的な形式をサポートします &lt;code&gt;#!&lt;/code&gt; 行、しかし考慮すべき他の問題があります：</target>
        </trans-unit>
        <trans-unit id="aababa3d966c7b1183bc1e3bb713ff94a4b803c7" translate="yes" xml:space="preserve">
          <source>Note that if you want to send data to the process&amp;rsquo;s stdin, you need to create the Popen object with &lt;code&gt;stdin=PIPE&lt;/code&gt;. Similarly, to get anything other than &lt;code&gt;None&lt;/code&gt; in the result tuple, you need to give &lt;code&gt;stdout=PIPE&lt;/code&gt; and/or &lt;code&gt;stderr=PIPE&lt;/code&gt; too.</source>
          <target state="translated">プロセスのstdinにデータを送信したい場合、 &lt;code&gt;stdin=PIPE&lt;/code&gt; で Popenオブジェクトを作成する必要があることに注意してください。同様に、結果タプルで &lt;code&gt;None&lt;/code&gt; 以外のものを取得するには、 &lt;code&gt;stdout=PIPE&lt;/code&gt; や &lt;code&gt;stderr=PIPE&lt;/code&gt; も指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d30eb9f3b524dd91c924b480ac665ceea172bbd3" translate="yes" xml:space="preserve">
          <source>Note that if your server is not listening on UDP port 514, &lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt;&lt;code&gt;SysLogHandler&lt;/code&gt;&lt;/a&gt; may appear not to work. In that case, check what address you should be using for a domain socket - it&amp;rsquo;s system dependent. For example, on Linux it&amp;rsquo;s usually &amp;lsquo;/dev/log&amp;rsquo; but on OS/X it&amp;rsquo;s &amp;lsquo;/var/run/syslog&amp;rsquo;. You&amp;rsquo;ll need to check your platform and use the appropriate address (you may need to do this check at runtime if your application needs to run on several platforms). On Windows, you pretty much have to use the UDP option.</source>
          <target state="translated">サーバーがUDPポート514を&lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt; &lt;code&gt;SysLogHandler&lt;/code&gt; &lt;/a&gt;ない場合、SysLogHandlerが機能していないように見えることがあります。その場合は、ドメインソケットに使用するアドレスを確認してください。システムに依存します。たとえば、Linuxでは通常「/ dev / log」ですが、OS / Xでは「/ var / run / syslog」です。プラットフォームをチェックして適切なアドレスを使用する必要があります（アプリケーションを複数のプラットフォームで実行する必要がある場合は、実行時にこのチェックを行う必要がある場合があります）。 Windowsでは、UDPオプションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e6d6ccf640c4a7fd68532b2415ba6bb4f3714d8" translate="yes" xml:space="preserve">
          <source>Note that in all cases, any envelope header present in the message is not included in the mapping interface.</source>
          <target state="translated">すべての場合において、メッセージに存在するエンベロープヘッダはマッピングインタフェースには含まれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ba327349434f8a3d52b3e4e613f26c146b8940c2" translate="yes" xml:space="preserve">
          <source>Note that in order to test something, we use one of the &lt;code&gt;assert*()&lt;/code&gt; methods provided by the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; base class. If the test fails, an exception will be raised with an explanatory message, and &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; will identify the test case as a &lt;em&gt;failure&lt;/em&gt;. Any other exceptions will be treated as &lt;em&gt;errors&lt;/em&gt;.</source>
          <target state="translated">何かをテストするために、&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;基本クラスによって提供される &lt;code&gt;assert*()&lt;/code&gt; メソッドの1つを使用することに注意してください。テストが失敗すると、説明メッセージとともに例外が発生し、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;はテストケースを&lt;em&gt;失敗&lt;/em&gt;として識別します。その他の例外は&lt;em&gt;エラー&lt;/em&gt;として扱われます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2963c39aeb1fbe44d9106170763ccfab16bbab6" translate="yes" xml:space="preserve">
          <source>Note that in the first example the return value variable &lt;em&gt;rv&lt;/em&gt; will hold an integer value; in the second example it will hold a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. The structure lay-out for the &lt;em&gt;lockdata&lt;/em&gt; variable is system dependent &amp;mdash; therefore using the &lt;a href=&quot;#fcntl.flock&quot;&gt;&lt;code&gt;flock()&lt;/code&gt;&lt;/a&gt; call may be better.</source>
          <target state="translated">最初の例では、戻り値の変数&lt;em&gt;rv&lt;/em&gt;が整数値を保持することに注意してください。2番目の例では、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを保持します。&lt;em&gt;lockdata&lt;/em&gt;変数の構造体のレイアウトはシステムに依存するため、&lt;a href=&quot;#fcntl.flock&quot;&gt; &lt;code&gt;flock()&lt;/code&gt; &lt;/a&gt;呼び出しを使用する方が良い場合があります。</target>
        </trans-unit>
        <trans-unit id="e76d82ec0cfb558c63a1e08054c8f07fa0699635" translate="yes" xml:space="preserve">
          <source>Note that inclusion in the &lt;em&gt;choices&lt;/em&gt; container is checked after any &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; conversions have been performed, so the type of the objects in the &lt;em&gt;choices&lt;/em&gt; container should match the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; specified:</source>
          <target state="translated">&lt;em&gt;選択&lt;/em&gt;コンテナーへの組み込みは、&lt;a href=&quot;#type&quot;&gt;型&lt;/a&gt;変換が実行された後にチェックされるため、&lt;em&gt;選択&lt;/em&gt;コンテナー内のオブジェクトのタイプは、指定された&lt;a href=&quot;#type&quot;&gt;タイプと&lt;/a&gt;一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="a424e123046b9f2ba0f16ae4ec8e158536158450" translate="yes" xml:space="preserve">
          <source>Note that installing a signal handler with &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; will reset the restart behaviour to interruptible by implicitly calling &lt;code&gt;siginterrupt()&lt;/code&gt; with a true &lt;em&gt;flag&lt;/em&gt; value for the given signal.</source>
          <target state="translated">&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal()&lt;/code&gt; &lt;/a&gt;を使用してシグナルハンドラーをインストールすると、特定のシグナルにtrue &lt;em&gt;フラグ&lt;/em&gt;値を指定して &lt;code&gt;siginterrupt()&lt;/code&gt; を暗黙的に呼び出すことにより、再起動動作が割り込み可能にリセットされることに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd995b47911c934ecbce7db6be1c427a4ba9cc9f" translate="yes" xml:space="preserve">
          <source>Note that is &lt;strong&gt;not correct&lt;/strong&gt; to rely on the garbage colletor to destroy the pool as CPython does not assure that the finalizer of the pool will be called (see &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;object.__del__()&lt;/code&gt;&lt;/a&gt; for more information).</source>
          <target state="translated">CPythonはプールのファイナライザーが呼び出されることを保証しないため、ガベージコレーターに依存してプールを破棄するの&lt;strong&gt;は正しくない&lt;/strong&gt;ことに注意してください（詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;object.__del__()&lt;/code&gt; &lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="b9f60fa0720b86d1dcdc718ca772ee8cca933f15" translate="yes" xml:space="preserve">
          <source>Note that it does not allow read/write WAV files.</source>
          <target state="translated">WAVファイルの読み書きはできませんのでご注意ください。</target>
        </trans-unit>
        <trans-unit id="b37732e38cdf4751eb314377a55436fbd87b874f" translate="yes" xml:space="preserve">
          <source>Note that it is actually the comma which makes a tuple, not the parentheses. The parentheses are optional, except in the empty tuple case, or when they are needed to avoid syntactic ambiguity. For example, &lt;code&gt;f(a, b, c)&lt;/code&gt; is a function call with three arguments, while &lt;code&gt;f((a, b, c))&lt;/code&gt; is a function call with a 3-tuple as the sole argument.</source>
          <target state="translated">括弧ではなく、実際にはタプルを作るのはコンマです。括弧は、空のタプルの場合、または構文のあいまいさを回避するために必要な場合を除いて、オプションです。たとえば、 &lt;code&gt;f(a, b, c)&lt;/code&gt; は3つの引数を持つ関数呼び出しであり、 &lt;code&gt;f((a, b, c))&lt;/code&gt; は3つのタプルを唯一の引数として持つ関数呼び出しです。</target>
        </trans-unit>
        <trans-unit id="c1142fa9322d5765d4454b6dfb466ee0b2fdb642" translate="yes" xml:space="preserve">
          <source>Note that it is invalid to set any parameters after calling &lt;code&gt;writeframes()&lt;/code&gt; or &lt;code&gt;writeframesraw()&lt;/code&gt;, and any attempt to do so will raise &lt;a href=&quot;#wave.Error&quot;&gt;&lt;code&gt;wave.Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;writeframes()&lt;/code&gt; または &lt;code&gt;writeframesraw()&lt;/code&gt; を呼び出した後にパラメータを設定することは無効であり、設定しようとすると&lt;a href=&quot;#wave.Error&quot;&gt; &lt;code&gt;wave.Error&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8bccd4b29f1a54b5e303c1a916237118b7ad7ec0" translate="yes" xml:space="preserve">
          <source>Note that it may cause high memory usage for very long iterables. Consider using &lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt;&lt;code&gt;imap()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.pool.Pool.imap_unordered&quot;&gt;&lt;code&gt;imap_unordered()&lt;/code&gt;&lt;/a&gt; with explicit &lt;em&gt;chunksize&lt;/em&gt; option for better efficiency.</source>
          <target state="translated">非常に長いイテラブルの場合、メモリ使用量が増える可能性があることに注意してください。効率を上げるために、明示的な&lt;em&gt;チャンクサイズ&lt;/em&gt;オプションを指定した&lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt; &lt;code&gt;imap()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.pool.Pool.imap_unordered&quot;&gt; &lt;code&gt;imap_unordered()&lt;/code&gt; の&lt;/a&gt;使用を検討してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc1c75d4508d9bbf24ec9e11eb857898269d1eae" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s already possible to iterate on file objects using &lt;code&gt;for
line in file: ...&lt;/code&gt; without calling &lt;code&gt;file.readlines()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;for line in file: ...&lt;/code&gt; &lt;code&gt;file.readlines()&lt;/code&gt; を呼び出さなくても、ファイルの行で...を使用してファイルオブジェクトを反復処理することはすでに可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="05a2b045555cd68924e93f59f7b760be26ddd68b" translate="yes" xml:space="preserve">
          <source>Note that many of these have little practical significance in modern usage. The mnemonics derive from teleprinter conventions that predate digital computers.</source>
          <target state="translated">これらの多くは、現代の使用において実用的な意味をほとんど持たないことに注意してください。これらのニーモニックは、デジタルコンピュータよりも前のテレプリンタの規約に由来しています。</target>
        </trans-unit>
        <trans-unit id="9ed4f4956d2d64f5ed11cfc83c3e2520067e2797" translate="yes" xml:space="preserve">
          <source>Note that methods of asyncio queues don&amp;rsquo;t have a &lt;em&gt;timeout&lt;/em&gt; parameter; use &lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;asyncio.wait_for()&lt;/code&gt;&lt;/a&gt; function to do queue operations with a timeout.</source>
          <target state="translated">asyncioキューのメソッドには&lt;em&gt;タイムアウト&lt;/em&gt;パラメータがないことに注意してください。&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt; &lt;code&gt;asyncio.wait_for()&lt;/code&gt; &lt;/a&gt;関数を使用して、タイムアウト付きのキュー操作を実行します。</target>
        </trans-unit>
        <trans-unit id="9d7173aaff46eece39c6ad050dacaca07a346492" translate="yes" xml:space="preserve">
          <source>Note that most parent parsers will specify &lt;code&gt;add_help=False&lt;/code&gt;. Otherwise, the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; will see two &lt;code&gt;-h/--help&lt;/code&gt; options (one in the parent and one in the child) and raise an error.</source>
          <target state="translated">ほとんどの親パーサーは &lt;code&gt;add_help=False&lt;/code&gt; を指定することに注意してください。それ以外の場合、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;は2つの &lt;code&gt;-h/--help&lt;/code&gt; オプション（親に1つと子に1つ）を表示し、エラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="ec5c2fc42c63d4c02f722210f01d284542c94cdd" translate="yes" xml:space="preserve">
          <source>Note that multiple connection objects may be polled at once by using &lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt;&lt;code&gt;multiprocessing.connection.wait()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt; &lt;code&gt;multiprocessing.connection.wait()&lt;/code&gt; &lt;/a&gt;を使用して、複数の接続オブジェクトを一度にポーリングできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5aad7f2fe356ddb37a2958193ffcc95757955613" translate="yes" xml:space="preserve">
          <source>Note that no external programs are called from this function, giving it portability and efficiency.</source>
          <target state="translated">この関数から外部プログラムが呼び出されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="73e56395f79c913850173ac7c4bbd0a531342117" translate="yes" xml:space="preserve">
          <source>Note that no stream repositioning should take place. This method is primarily intended to be able to recover from decoding errors.</source>
          <target state="translated">ストリームの再配置は行わないことに注意してください。この方法は、主にデコードエラーから回復できるようにすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="9b04c87d02c729d2b34d36ed6364a0bf9a50ea51" translate="yes" xml:space="preserve">
          <source>Note that normalization of negative values may be surprising at first. For example:</source>
          <target state="translated">負の値の正規化は、最初は驚くかもしれないことに注意してください。例えば</target>
        </trans-unit>
        <trans-unit id="08827e39a2581735ab237416a511e4b4882c7aff" translate="yes" xml:space="preserve">
          <source>Note that objects related to one context may not be compatible with processes for a different context. In particular, locks created using the &lt;em&gt;fork&lt;/em&gt; context cannot be passed to processes started using the &lt;em&gt;spawn&lt;/em&gt; or &lt;em&gt;forkserver&lt;/em&gt; start methods.</source>
          <target state="translated">あるコンテキストに関連するオブジェクトは、別のコンテキストのプロセスと互換性がない場合があることに注意してください。特に、&lt;em&gt;fork&lt;/em&gt;コンテキストを使用して作成されたロックは、&lt;em&gt;spawn&lt;/em&gt;または&lt;em&gt;forkserver&lt;/em&gt; startメソッドを使用して開始されたプロセスに渡すことができません。</target>
        </trans-unit>
        <trans-unit id="eda4961590997a45a1e79372239074265d25ed88" translate="yes" xml:space="preserve">
          <source>Note that objects which have already been dereferenced, but which live in cycles and have not yet been collected by the garbage collector can be listed among the resulting referrers. To get only currently live objects, call &lt;a href=&quot;#gc.collect&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt; before calling &lt;a href=&quot;#gc.get_referrers&quot;&gt;&lt;code&gt;get_referrers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すでに逆参照されているが、循環していて、ガベージコレクターによってまだ収集されていないオブジェクトは、結果の参照元にリストされます。現在ライブオブジェクトのみを取得するには、&lt;a href=&quot;#gc.get_referrers&quot;&gt; &lt;code&gt;get_referrers()&lt;/code&gt; を&lt;/a&gt;呼び出す前に&lt;a href=&quot;#gc.collect&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="0d01f60caa4137debd7332962680da8372d67729" translate="yes" xml:space="preserve">
          <source>Note that on Windows child processes will only inherit the level of the parent process&amp;rsquo;s logger &amp;ndash; any other customization of the logger will not be inherited.</source>
          <target state="translated">Windowsでは、子プロセスは親プロセスのロガーのレベルのみを継承することに注意してください。ロガーの他のカスタマイズは継承されません。</target>
        </trans-unit>
        <trans-unit id="71665cc8043f3efa68e4485fe250bc5b29c8a385" translate="yes" xml:space="preserve">
          <source>Note that on some platforms, trying to open a filename using this function, may work and start the operating system&amp;rsquo;s associated program. However, this is neither supported nor portable.</source>
          <target state="translated">一部のプラットフォームでは、この関数を使用してファイル名を開こうとすると、動作してオペレーティングシステムの関連プログラムを起動する場合があります。ただし、これはサポートされておらず、移植性もありません。</target>
        </trans-unit>
        <trans-unit id="2c5a9e4b55caffc98aca4b11598a9c875e9057ec" translate="yes" xml:space="preserve">
          <source>Note that one can also create a shared queue by using a manager object &amp;ndash; see &lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;.</source>
          <target state="translated">マネージャオブジェクトを使用して共有キューを作成することもできます&amp;ndash; &lt;a href=&quot;#multiprocessing-managers&quot;&gt;マネージャを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="11489b229a9332af75273ce34ce4bbce75cf8ef6" translate="yes" xml:space="preserve">
          <source>Note that one can also create synchronization primitives by using a manager object &amp;ndash; see &lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;.</source>
          <target state="translated">マネージャーオブジェクトを使用して同期プリミティブを作成することもできます&amp;ndash; &lt;a href=&quot;#multiprocessing-managers&quot;&gt;マネージャーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3d73f2e5696ae1abc027da2033b4b034e5b6843a" translate="yes" xml:space="preserve">
          <source>Note that operations such as &lt;a href=&quot;#audioop.mul&quot;&gt;&lt;code&gt;mul()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#audioop.max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; make no distinction between mono and stereo fragments, i.e. all samples are treated equal. If this is a problem the stereo fragment should be split into two mono fragments first and recombined later. Here is an example of how to do that:</source>
          <target state="translated">&lt;a href=&quot;#audioop.mul&quot;&gt; &lt;code&gt;mul()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#audioop.max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;などの操作では、モノフラグメントとステレオフラグメントが区別されないことに注意してください。つまり、すべてのサンプルは同等に扱われます。これが問題である場合、ステレオフラグメントを最初に2つのモノフラグメントに分割し、後で再結合する必要があります。これを行う方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="9b16370266d750c139819b213ca33ad0c71c90be" translate="yes" xml:space="preserve">
          <source>Note that other exceptions may also be raised during unpickling, including (but not necessarily limited to) AttributeError, EOFError, ImportError, and IndexError.</source>
          <target state="translated">AttributeError、EOFError、ImportError、IndexErrorなどの例外が発生する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c14ddea7d8a40390395369e4d9bf692d2a322f31" translate="yes" xml:space="preserve">
          <source>Note that parser-level defaults always override argument-level defaults:</source>
          <target state="translated">パーサレベルのデフォルトは常に引数レベルのデフォルトを上書きすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7eb9240d51fab27d432be3b59cc8d057375a5d25" translate="yes" xml:space="preserve">
          <source>Note that pickles aren&amp;rsquo;t completely secure. If you are concerned about security, you may want to override this method to implement a more secure mechanism. For example, you can sign pickles using HMAC and then verify them on the receiving end, or alternatively you can disable unpickling of global objects on the receiving end.</source>
          <target state="translated">ピクルスは完全に安全ではないことに注意してください。セキュリティが心配な場合は、このメソッドをオーバーライドして、より安全なメカニズムを実装できます。たとえば、HMACを使用してピクルに署名し、受信側でそれらを確認したり、受信側でグローバルオブジェクトのunpickleを無効にしたりできます。</target>
        </trans-unit>
        <trans-unit id="bcb90d29aeda61d23a983d5f5ed8686703c50549" translate="yes" xml:space="preserve">
          <source>Note that printf prints to the real standard output channel, &lt;em&gt;not&lt;/em&gt; to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;, so these examples will only work at the console prompt, not from within &lt;em&gt;IDLE&lt;/em&gt; or &lt;em&gt;PythonWin&lt;/em&gt;:</source>
          <target state="translated">実際の標準出力チャネルに、なお、printfのプリント&lt;em&gt;ではない&lt;/em&gt;と&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; の&lt;/a&gt;ため、これらの例ではない内から、プロンプトコンソールでのみ動作します&lt;em&gt;IDLE&lt;/em&gt;や&lt;em&gt;PythonWin&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="dbe8dc287e2d3ac27238f225b2b077ec51310c3b" translate="yes" xml:space="preserve">
          <source>Note that profiling will only work if the called command/function actually returns. If the interpreter is terminated (e.g. via a &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; call during the called command/function execution) no profiling results will be printed.</source>
          <target state="translated">プロファイリングは、呼び出されたコマンド/関数が実際に戻る場合にのみ機能することに注意してください。インタプリタが終了した場合（たとえば、呼び出されたコマンド/関数の実行中に&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;呼び出しを介して）、プロファイリング結果は出力されません。</target>
        </trans-unit>
        <trans-unit id="de353d4750a5cdba4018be858fb797f69441158f" translate="yes" xml:space="preserve">
          <source>Note that returning instances of private classes is not recommended. It is usually preferable to make such classes public.</source>
          <target state="translated">プライベートクラスのインスタンスを返すことは推奨されていないことに注意してください。通常はそのようなクラスを公開することが望ましいです。</target>
        </trans-unit>
        <trans-unit id="bae0d8a27b12e898d4d9a61e003f0408e393752d" translate="yes" xml:space="preserve">
          <source>Note that setting and getting an element is potentially non-atomic &amp;ndash; use &lt;a href=&quot;#multiprocessing.sharedctypes.Array&quot;&gt;&lt;code&gt;Array()&lt;/code&gt;&lt;/a&gt; instead to make sure that access is automatically synchronized using a lock.</source>
          <target state="translated">要素の設定と取得は潜在的に非アトミックであることに注意してください。代わりに&lt;a href=&quot;#multiprocessing.sharedctypes.Array&quot;&gt; &lt;code&gt;Array()&lt;/code&gt; &lt;/a&gt;を使用して、ロックを使用してアクセスが自動的に同期されるようにしてください。</target>
        </trans-unit>
        <trans-unit id="fba826635b3c9adedafaa20e7c85f3678b0d3888" translate="yes" xml:space="preserve">
          <source>Note that setting and getting the value is potentially non-atomic &amp;ndash; use &lt;a href=&quot;#multiprocessing.sharedctypes.Value&quot;&gt;&lt;code&gt;Value()&lt;/code&gt;&lt;/a&gt; instead to make sure that access is automatically synchronized using a lock.</source>
          <target state="translated">値の設定と取得は潜在的に非アトミックであることに注意してください&amp;ndash; 代わりに&lt;a href=&quot;#multiprocessing.sharedctypes.Value&quot;&gt; &lt;code&gt;Value()&lt;/code&gt; &lt;/a&gt;を使用して、ロックを使用してアクセスが自動的に同期されるようにします。</target>
        </trans-unit>
        <trans-unit id="a0a4d937d898d6dae87b372469dc8ecdc5efcd60" translate="yes" xml:space="preserve">
          <source>Note that shared fixtures do not play well with [potential] features like test parallelization and they break test isolation. They should be used with care.</source>
          <target state="translated">共有のフィクスチャは、テストの並列化のような[潜在的な]機能とは相性が悪く、テストの分離を壊してしまうことに注意してください。これらは注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a3a80c8445850d90d40639df2476d5a77bd29df" translate="yes" xml:space="preserve">
          <source>Note that simply calling a coroutine will not schedule it to be executed:</source>
          <target state="translated">単にコアーチンを呼び出すだけでは、実行されるようにスケジュールされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="68956186d48d42443b6758d13e6916e94a8cef68" translate="yes" xml:space="preserve">
          <source>Note that since all options are disabled by default, and directives apply only to the example they appear in, enabling options (via &lt;code&gt;+&lt;/code&gt; in a directive) is usually the only meaningful choice. However, option flags can also be passed to functions that run doctests, establishing different defaults. In such cases, disabling an option via &lt;code&gt;-&lt;/code&gt; in a directive can be useful.</source>
          <target state="translated">すべてのオプションはデフォルトで無効になっており、ディレクティブはそれらが表示される例にのみ適用されるため、オプションを有効にすること（ディレクティブの &lt;code&gt;+&lt;/code&gt; による）は通常、唯一の意味のある選択です。ただし、オプションフラグをdoctestを実行する関数に渡して、異なるデフォルトを設定することもできます。このような場合、ディレクティブで &lt;code&gt;-&lt;/code&gt; を使用してオプションを無効にすると便利です。</target>
        </trans-unit>
        <trans-unit id="d486f123342853ccfe49cff51f3b937ee427e3c1" translate="yes" xml:space="preserve">
          <source>Note that some platforms including FreeBSD &amp;lt;= 6.3 and Cygwin have known issues when using &lt;code&gt;fork()&lt;/code&gt; from a thread.</source>
          <target state="translated">FreeBSD &amp;lt;= 6.3およびCygwinを含む一部のプラットフォームには、スレッドから &lt;code&gt;fork()&lt;/code&gt; を使用するときに既知の問題があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4eebda1ed9cbd631d501f51d602004fcc0df5dce" translate="yes" xml:space="preserve">
          <source>Note that some recent versions of the HTML specification do state what order the field values should be supplied in, but knowing whether a request was received from a conforming browser, or even from a browser at all, is tedious and error-prone.</source>
          <target state="translated">最近のHTML仕様のいくつかのバージョンでは、フィールド値がどのような順序で提供されるべきかを記述していますが、リクエストが適合するブラウザから受信されたかどうか、あるいはブラウザから受信されたかどうかを知ることは、面倒でエラーが発生しやすいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e49765d68859e961a6e270321dec95f459b3abf4" translate="yes" xml:space="preserve">
          <source>Note that some systems might support ancillary data without providing this function. Also note that setting the buffer size using the results of this function may not precisely limit the amount of ancillary data that can be received, since additional data may be able to fit into the padding area.</source>
          <target state="translated">システムによっては、この関数を使用せずにアンシラリデータをサポートしている場合があります。また、この関数の結果を使用してバッファサイズを設定すると、パディング領域に追加データが収まる可能性があるため、受信可能なアンシラリデータの量が正確に制限されない場合があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="aa8a9295a9dbce0828c8e847a08e997833350743" translate="yes" xml:space="preserve">
          <source>Note that tabs and spaces are both treated as whitespace, but they are not equal: the lines &lt;code&gt;&quot;&amp;nbsp; hello&quot;&lt;/code&gt; and &lt;code&gt;&quot;\thello&quot;&lt;/code&gt; are considered to have no common leading whitespace.</source>
          <target state="translated">タブとスペースはどちらも空白として扱われますが、等しくはありません。 &lt;code&gt;&quot;&amp;nbsp; hello&quot;&lt;/code&gt; 行と &lt;code&gt;&quot;\thello&quot;&lt;/code&gt; は共通の先行空白がないと見なされます。</target>
        </trans-unit>
        <trans-unit id="d9458e3f856c8568d276b2ccc17c59d5c9e0de3b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances that differ only by the value of the &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; attribute are considered equal in comparisons.</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;属性の値のみが異なる&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンスは、比較では等しいと見なされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e00171800132e17b717121535b8def5b8c707ca" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt;&lt;code&gt;is_alive()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt;&lt;code&gt;exitcode&lt;/code&gt;&lt;/a&gt; methods should only be called by the process that created the process object.</source>
          <target state="translated">なお&lt;a href=&quot;#multiprocessing.Process.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Process.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt; &lt;code&gt;is_alive()&lt;/code&gt; 、&lt;/a&gt;（）&lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt; &lt;code&gt;exitcode&lt;/code&gt; &lt;/a&gt;方法は、プロセスオブジェクトを作成したプロセスによって呼び出されるべきです。</target>
        </trans-unit>
        <trans-unit id="76be1da5963fc00b55ce37e0edfebe2ece5a230b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;save()&lt;/code&gt; method won&amp;rsquo;t save session cookies anyway, unless you ask otherwise by passing a true &lt;em&gt;ignore_discard&lt;/em&gt; argument.</source>
          <target state="translated">本当の&lt;em&gt;ignore_discard&lt;/em&gt;引数を渡して別の方法で要求しない限り、 &lt;code&gt;save()&lt;/code&gt; メソッドはセッションCookieを保存しないことに&lt;em&gt;注意して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="8d128adeddb15c243a31ce0c09ab30c3100bf9aa" translate="yes" xml:space="preserve">
          <source>Note that the application code and tag bindings can set the selection however they wish, regardless of the value of this option.</source>
          <target state="translated">アプ リ ケーシ ョ ン コ ー ド と タ グのバ イ ンデ ィ ン グは、 こ のオプシ ョ ンの値に関係な く 、 希望す る 選択範囲を設定で き る こ と に注意 し て く だ さ い。</target>
        </trans-unit>
        <trans-unit id="5c688652d419206207ca4fcfbba08a17cc1b4d53" translate="yes" xml:space="preserve">
          <source>Note that the audited arguments may not match the names or positions required by the initializer.</source>
          <target state="translated">監査された引数は、イニシャライザで必要とされる名前や位置と一致しない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c830f23c52b697abf037e27edcdf6e7c6b75ed04" translate="yes" xml:space="preserve">
          <source>Note that the audited arguments may not match the names or positions required by the initializer. The audit event only occurs for direct instantiation of code objects, and is not raised for normal compilation.</source>
          <target state="translated">監査された引数は、イニシャライザで必要とされる名前や位置と一致しない場合があることに注意してください。監査イベントはコードオブジェクトの直接インスタンス化の場合にのみ発生し、通常のコンパイルでは発生しません。</target>
        </trans-unit>
        <trans-unit id="1deb77e6b0aedeb954896c3aa4ddbd679ed1b4d5" translate="yes" xml:space="preserve">
          <source>Note that the behaviour of &lt;a href=&quot;#asyncio.get_event_loop&quot;&gt;&lt;code&gt;get_event_loop()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.set_event_loop&quot;&gt;&lt;code&gt;set_event_loop()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.new_event_loop&quot;&gt;&lt;code&gt;new_event_loop()&lt;/code&gt;&lt;/a&gt; functions can be altered by &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;setting a custom event loop policy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.get_event_loop&quot;&gt; &lt;code&gt;get_event_loop()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.set_event_loop&quot;&gt; &lt;code&gt;set_event_loop()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#asyncio.new_event_loop&quot;&gt; &lt;code&gt;new_event_loop()&lt;/code&gt; &lt;/a&gt;関数の動作は&lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;、カスタムイベントループポリシーを設定する&lt;/a&gt;ことで変更できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c66dde87415197d1cc25303a3cb3f7fea45cb7cf" translate="yes" xml:space="preserve">
          <source>Note that the callable will get its parameters as Python bytestrings, which will normally be encoded in UTF-8.</source>
          <target state="translated">callableはそのパラメータをPythonのバイト文字列として取得することに注意してください。</target>
        </trans-unit>
        <trans-unit id="e0ce1087d446a80a298883ee298079809ee68d3a" translate="yes" xml:space="preserve">
          <source>Note that the decorators are applied from the bottom upwards. This is the standard way that Python applies decorators. The order of the created mocks passed into your test function matches this order.</source>
          <target state="translated">デコレータは下から上に向かって適用されることに注意してください。これはPythonがデコレータを適用する標準的な方法です。作成されたモックの順番は、テスト関数に渡された順番と一致します。</target>
        </trans-unit>
        <trans-unit id="e97d1070ca60575742bafcaf80da75c01c5d2f24" translate="yes" xml:space="preserve">
          <source>Note that the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;tzinfo.fromutc()&lt;/code&gt;&lt;/a&gt; method can be overridden in a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass to affect the result returned by &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt;. Ignoring error cases, &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt; acts like:</source>
          <target state="translated">デフォルトの&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;tzinfo.fromutc()&lt;/code&gt; &lt;/a&gt;メソッドを&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスでオーバーライドして、&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; &lt;/a&gt;によって返される結果に影響を与えることができることに注意してください。エラーケースを無視すると、&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; &lt;/a&gt;は次のように動作します。</target>
        </trans-unit>
        <trans-unit id="1cdde200b54fdac2ca71696d1fcd9ec16758fa9f" translate="yes" xml:space="preserve">
          <source>Note that the end positions are not required by the compiler and are therefore optional. The end offset is &lt;em&gt;after&lt;/em&gt; the last symbol, for example one can get the source segment of a one-line expression node using &lt;code&gt;source_line[node.col_offset : node.end_col_offset]&lt;/code&gt;.</source>
          <target state="translated">終了位置はコンパイラーには必要ないため、オプションであることに注意してください。終了オフセットは最後のシンボルの&lt;em&gt;後に&lt;/em&gt;あります。たとえば、 &lt;code&gt;source_line[node.col_offset : node.end_col_offset]&lt;/code&gt; を使用して、1行式ノードのソースセグメントを取得できます。</target>
        </trans-unit>
        <trans-unit id="eec0865e31dfa1bea83fd13d92d1b7c2e61986db" translate="yes" xml:space="preserve">
          <source>Note that the exact contents of code info strings are highly implementation dependent and they may change arbitrarily across Python VMs or Python releases.</source>
          <target state="translated">コード情報文字列の正確な内容は実装に大きく依存しており、Python VMやPythonのリリースによって任意に変更される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="164b1f59a18e5c8abf18fac5ba8c576d24f04885" translate="yes" xml:space="preserve">
          <source>Note that the exact times you set here may not be returned by a subsequent &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; call, depending on the resolution with which your operating system records access and modification times; see &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;. The best way to preserve exact times is to use the &lt;em&gt;st_atime_ns&lt;/em&gt; and &lt;em&gt;st_mtime_ns&lt;/em&gt; fields from the &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; result object with the &lt;em&gt;ns&lt;/em&gt; parameter to &lt;code&gt;utime&lt;/code&gt;.</source>
          <target state="translated">ここで設定した正確な時間は、オペレーティングシステムがアクセス時間と変更時間を記録する解像度によっては、後続の&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;呼び出しで返されない場合があることに注意してください。&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; を&lt;/a&gt;参照してください。正確な時間を維持するための最良の方法は、使用することです&lt;em&gt;st_atime_ns&lt;/em&gt;と&lt;em&gt;st_mtime_nsの&lt;/em&gt;からフィールド&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;で結果オブジェクト&lt;em&gt;NS&lt;/em&gt;へのパラメータ &lt;code&gt;utime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b5bbdf77d63ecd9abde1ce3e6def80c3014baa1" translate="yes" xml:space="preserve">
          <source>Note that the exponent is written in decimal rather than hexadecimal, and that it gives the power of 2 by which to multiply the coefficient. For example, the hexadecimal string &lt;code&gt;0x3.a7p10&lt;/code&gt; represents the floating-point number &lt;code&gt;(3 + 10./16 + 7./16**2) * 2.0**10&lt;/code&gt;, or &lt;code&gt;3740.0&lt;/code&gt;:</source>
          <target state="translated">指数は16進数ではなく10進数で記述され、係数に乗算する2の累乗を与えることに注意してください。たとえば、16進数の文字列 &lt;code&gt;0x3.a7p10&lt;/code&gt; は、浮動小数点数 &lt;code&gt;(3 + 10./16 + 7./16**2) * 2.0**10&lt;/code&gt; または &lt;code&gt;3740.0&lt;/code&gt; を表します。</target>
        </trans-unit>
        <trans-unit id="eabb40ec8d9514ff31867d76604ec09c63b3f62f" translate="yes" xml:space="preserve">
          <source>Note that the file is always opened in binary mode. To open a compressed file in text mode, use &lt;a href=&quot;#gzip.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; (or wrap your &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ファイルは常にバイナリモードで開かれることに注意してください。、テキストモードで圧縮されたファイルを開く使用するには&lt;a href=&quot;#gzip.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;（またはあなたのラップ&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2d4d5de3b61f6ba7f6afbe52eb7e703b5895b919" translate="yes" xml:space="preserve">
          <source>Note that the filename separator (&lt;code&gt;'/'&lt;/code&gt; on Unix) is &lt;em&gt;not&lt;/em&gt; special to this module. See module &lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; for pathname expansion (&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#fnmatch.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; to match pathname segments). Similarly, filenames starting with a period are not special for this module, and are matched by the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; patterns.</source>
          <target state="translated">ファイル名区切り文字（Unixでは &lt;code&gt;'/'&lt;/code&gt; ）は、このモジュールに固有のものでは&lt;em&gt;ない&lt;/em&gt;ことに注意してください。パス名の展開については、モジュール&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;を参照してください（&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;は、パス名セグメントを一致させるために&lt;a href=&quot;#fnmatch.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;を使用します）。同様に、ピリオドで始まるファイル名はこのモジュールにとって特別なものではなく、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;?&lt;/code&gt; パターン。</target>
        </trans-unit>
        <trans-unit id="1992a5171785db5fc3c20b9338bd90d43b3a8008" translate="yes" xml:space="preserve">
          <source>Note that the first type annotation must be enclosed in quotes, making it a &amp;ldquo;forward reference&amp;rdquo;, to hide the &lt;code&gt;expensive_mod&lt;/code&gt; reference from the interpreter runtime. Type annotations for local variables are not evaluated, so the second annotation does not need to be enclosed in quotes.</source>
          <target state="translated">最初のタイプの注釈は引用符で囲み、「前方参照」にして、 &lt;code&gt;expensive_mod&lt;/code&gt; 参照をインタープリターランタイムから隠す必要があることに注意してください。ローカル変数の型注釈は評価されないため、2番目の注釈を引用符で囲む必要はありません。</target>
        </trans-unit>
        <trans-unit id="59a1de269ac77e8f64ef50ba801d5c66b9db1422" translate="yes" xml:space="preserve">
          <source>Note that the functions &lt;a href=&quot;#parser.compilest&quot;&gt;&lt;code&gt;compilest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; may raise exceptions which are normally raised by the parsing and compilation process. These include the built in exceptions &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;exceptions#SystemError&quot;&gt;&lt;code&gt;SystemError&lt;/code&gt;&lt;/a&gt;. In these cases, these exceptions carry all the meaning normally associated with them. Refer to the descriptions of each function for detailed information.</source>
          <target state="translated">関数&lt;a href=&quot;#parser.compilest&quot;&gt; &lt;code&gt;compilest()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;は、通常、解析およびコンパイルプロセスによって発生する例外を発生させる可能性があることに注意してください。これらは例外に建て含める&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; を&lt;/a&gt;、&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;、と&lt;a href=&quot;exceptions#SystemError&quot;&gt; &lt;code&gt;SystemError&lt;/code&gt; &lt;/a&gt;。これらの場合、これらの例外は通常それらに関連するすべての意味を持ちます。詳細については、各機能の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="cba8c1dab1231c0e020d29f555ee5fe18e0dc2a0" translate="yes" xml:space="preserve">
          <source>Note that the global side effect on &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; means that this context manager is not suitable for use in library code and most threaded applications. It also has no effect on the output of subprocesses. However, it is still a useful approach for many utility scripts.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;に対するグローバルな副作用は、このコンテキストマネージャがライブラリコードおよびほとんどのスレッドアプリケーションでの使用に適していないことを意味することに注意してください。また、サブプロセスの出力にも影響しません。ただし、それでも多くのユーティリティスクリプトで有用なアプローチです。</target>
        </trans-unit>
        <trans-unit id="256291afcdf663f4ee7f5d169948e8c4e068a3ea" translate="yes" xml:space="preserve">
          <source>Note that the implementation of these methods may involve calls of the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">これらのメソッドの実装には、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが含まれる場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="db96e2903bb03526d487ef5f0e7a28904d91b153" translate="yes" xml:space="preserve">
          <source>Note that the last tuple returned by &lt;code&gt;get_matching_blocks()&lt;/code&gt; is always a dummy, &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt;, and this is the only case in which the last tuple element (number of elements matched) is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_matching_blocks()&lt;/code&gt; によって返される最後のタプルは常にダミー &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt; であり、これが最後のタプル要素（一致する要素の数）が &lt;code&gt;0&lt;/code&gt; である唯一のケースであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5d9efcbb8db4d5059e437fd61cf5752e8f008ac4" translate="yes" xml:space="preserve">
          <source>Note that the length of this list must be seven items.</source>
          <target state="translated">このリストの長さは7項目でなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="cc6ae65cf6a2c6b690528b4be599e5bed47ef7e9" translate="yes" xml:space="preserve">
          <source>Note that the locator will return correct information only during the invocation of the events in this interface. The application should not attempt to use it at any other time.</source>
          <target state="translated">ロケータが正しい情報を返すのは、このインタフェース内のイベントの呼び出しの間だけであることに注意してください。アプリケーションは、それ以外の時間にこれを使用しようとしてはいけません。</target>
        </trans-unit>
        <trans-unit id="4e632c3015ab8a0ba3453634da1b41b96d4c11e9" translate="yes" xml:space="preserve">
          <source>Note that the man pages list &amp;ldquo;STANDARD OPTIONS&amp;rdquo; and &amp;ldquo;WIDGET SPECIFIC OPTIONS&amp;rdquo; for each widget. The former is a list of options that are common to many widgets, the latter are the options that are idiosyncratic to that particular widget. The Standard Options are documented on the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/options(3)&quot;&gt;options(3)&lt;/a&gt;&lt;/em&gt; man page.</source>
          <target state="translated">マニュアルページには、各ウィジェットの「標準オプション」と「ウィジェット固有のオプション」がリストされていることに注意してください。前者は多くのウィジェットに共通のオプションのリストであり、後者はその特定のウィジェットに固有のオプションです。標準オプションは、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/options(3)&quot;&gt;options（3）の&lt;/a&gt;&lt;/em&gt;マニュアルページに記載されてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0aa16e828033b4f45947239c8dad63dfd83cf58b" translate="yes" xml:space="preserve">
          <source>Note that the methods of a pool should only ever be used by the process which created it.</source>
          <target state="translated">プールのメソッドは、プールを作成したプロセスでのみ使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="403f74ccffe9160e93df16ee60fb1936940a68d7" translate="yes" xml:space="preserve">
          <source>Note that the methods of the pool object should only be called by the process which created the pool.</source>
          <target state="translated">プールオブジェクトのメソッドは、プールを作成したプロセスからのみ呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="072ef7e2339f223029bd2baf38337de36c7889d9" translate="yes" xml:space="preserve">
          <source>Note that the object name, &lt;code&gt;.fred&lt;/code&gt;, starts with a dot.</source>
          <target state="translated">オブジェクト名 &lt;code&gt;.fred&lt;/code&gt; はドットで始まることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dd5e150e0b095725b6075fcce13020fbe7fbe7d6" translate="yes" xml:space="preserve">
          <source>Note that the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will only contain attributes for the main parser and the subparser that was selected by the command line (and not any other subparsers). So in the example above, when the &lt;code&gt;a&lt;/code&gt; command is specified, only the &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; attributes are present, and when the &lt;code&gt;b&lt;/code&gt; command is specified, only the &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; attributes are present.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトには、メインパーサーとコマンドラインによって選択されたサブパーサーの属性のみが含まれることに注意してください（他のサブパーサーは含まれません）。したがって、上記の例では、 &lt;code&gt;a&lt;/code&gt; コマンドが指定されている場合、 &lt;code&gt;foo&lt;/code&gt; 属性と &lt;code&gt;bar&lt;/code&gt; 属性のみが存在し、 &lt;code&gt;b&lt;/code&gt; コマンドが指定されている場合、 &lt;code&gt;foo&lt;/code&gt; 属性と &lt;code&gt;baz&lt;/code&gt; 属性のみが存在します。</target>
        </trans-unit>
        <trans-unit id="833ae3938a6f5fe64221af69a439e4759ab70b12" translate="yes" xml:space="preserve">
          <source>Note that the order of the (states, value) sequences for an option does matter, if the order is changed to &lt;code&gt;[('active', 'blue'), ('pressed',
'red')]&lt;/code&gt; in the foreground option, for example, the result would be a blue foreground when the widget were in active or pressed states.</source>
          <target state="translated">フォアグラウンドオプションで順序が &lt;code&gt;[('active', 'blue'), ('pressed', 'red')]&lt;/code&gt; に変更された場合、オプションの（状態、値）シーケンスの順序が重要であることに注意してください。たとえば、ウィジェットがアクティブまたは押された状態の場合、結果は青い前景になります。</target>
        </trans-unit>
        <trans-unit id="01a23cd9ecbf3257e28cf9b896b0dcad21defe07" translate="yes" xml:space="preserve">
          <source>Note that the parser can be extended in limited ways, and of course you can implement your own parser completely from scratch. All of the logic that connects the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package&amp;rsquo;s bundled parser and the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class is embodied in the &lt;code&gt;policy&lt;/code&gt; class, so a custom parser can create message object trees any way it finds necessary by implementing custom versions of the appropriate &lt;code&gt;policy&lt;/code&gt; methods.</source>
          <target state="translated">パーサーは限られた方法で拡張でき、もちろん独自のパーサーを完全にゼロから実装できることに注意してください。&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージのバンドルパーサーと&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスを接続するロジックはすべて &lt;code&gt;policy&lt;/code&gt; クラスに組み込まれているため、カスタムパーサーは、適切な &lt;code&gt;policy&lt;/code&gt; メソッドのカスタムバージョンを実装することで、必要に応じてメッセージオブジェクトツリーを作成できます。</target>
        </trans-unit>
        <trans-unit id="1eb8965b25ea5257a0aa1f9f0bb3c11a3367f9de" translate="yes" xml:space="preserve">
          <source>Note that the parser only accepts the Unix-style end of line convention. If you are reading the code from a file, make sure to use newline conversion mode to convert Windows or Mac-style newlines.</source>
          <target state="translated">パーサはUnixスタイルの行末規則しか受け付けないことに注意してください。ファイルからコードを読む場合は、WindowsまたはMacスタイルの改行を変換するために改行変換モードを使用するようにしてください。</target>
        </trans-unit>
        <trans-unit id="34bc7518b3bc42848108ade424e482f1e8016982" translate="yes" xml:space="preserve">
          <source>Note that the program name, whether determined from &lt;code&gt;sys.argv[0]&lt;/code&gt; or from the &lt;code&gt;prog=&lt;/code&gt; argument, is available to help messages using the &lt;code&gt;%(prog)s&lt;/code&gt; format specifier.</source>
          <target state="translated">&lt;code&gt;sys.argv[0]&lt;/code&gt; から、または &lt;code&gt;prog=&lt;/code&gt; 引数から決定されたプログラム名は、 &lt;code&gt;%(prog)s&lt;/code&gt; 形式指定子を使用してメッセージを支援するために使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b19c49eed7c2426d8842fd07e5e1a3d9193ed340" translate="yes" xml:space="preserve">
          <source>Note that the second use of &lt;code&gt;_()&lt;/code&gt; will not identify &amp;ldquo;a&amp;rdquo; as being translatable to the &lt;strong&gt;gettext&lt;/strong&gt; program, because the parameter is not a string literal.</source>
          <target state="translated">パラメータが文字列リテラルではないため、2回目の &lt;code&gt;_()&lt;/code&gt; の使用では、「a」が&lt;strong&gt;gettext&lt;/strong&gt;プログラムに変換可能であることを識別しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="750397ea45aa11b67082fae179f2b2c630c4ca79" translate="yes" xml:space="preserve">
          <source>Note that the selection of functions is similar, but not identical, to that in module &lt;a href=&quot;math#module-math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt;. The reason for having two modules is that some users aren&amp;rsquo;t interested in complex numbers, and perhaps don&amp;rsquo;t even know what they are. They would rather have &lt;code&gt;math.sqrt(-1)&lt;/code&gt; raise an exception than return a complex number. Also note that the functions defined in &lt;a href=&quot;#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt; always return a complex number, even if the answer can be expressed as a real number (in which case the complex number has an imaginary part of zero).</source>
          <target state="translated">関数の選択は、モジュール&lt;a href=&quot;math#module-math&quot;&gt; &lt;code&gt;math&lt;/code&gt; &lt;/a&gt;の選択と似ていますが、同一ではないことに注意してください。2つのモジュールがある理由は、一部のユーザーは複素数に興味がなく、おそらくそれらが何であるかさえ知らないためです。彼らはむしろ、複素数を返すよりも &lt;code&gt;math.sqrt(-1)&lt;/code&gt; に例外を発生させます。また、答えが実数として表現できる場合でも、&lt;a href=&quot;#module-cmath&quot;&gt; &lt;code&gt;cmath&lt;/code&gt; で&lt;/a&gt;定義された関数は常に複素数を返すことに注意してください（この場合、複素数の虚数部はゼロです）。</target>
        </trans-unit>
        <trans-unit id="81dcea5e7b8c2cdc13cbbc4c1f112a24bc49255e" translate="yes" xml:space="preserve">
          <source>Note that the sign of the timezone offset is the opposite of the sign of the &lt;code&gt;time.timezone&lt;/code&gt; variable for the same timezone; the latter variable follows the POSIX standard while this module follows &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">タイムゾーンオフセットの符号は、同じタイムゾーンの &lt;code&gt;time.timezone&lt;/code&gt; 変数の符号と反対であることに注意してください。後者の変数はPOSIX標準に従いますが、このモジュールは&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822に&lt;/strong&gt;&lt;/a&gt;従い&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e162688246d240a8c716dca372b82c4250936fa7" translate="yes" xml:space="preserve">
          <source>Note that the two instances of class &lt;code&gt;C&lt;/code&gt; share the same class variable &lt;code&gt;x&lt;/code&gt;, as expected.</source>
          <target state="translated">予想どおり、クラス &lt;code&gt;C&lt;/code&gt; の 2つのインスタンスが同じクラス変数 &lt;code&gt;x&lt;/code&gt; を共有していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cd586d754c27e8997ced1a5ea4a1abad329acacc" translate="yes" xml:space="preserve">
          <source>Note that the type of &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; is still &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt;, therefore inheriting from &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; requires the usual precautions regarding metaclass usage, as multiple inheritance may lead to metaclass conflicts. One may also define an abstract base class by passing the metaclass keyword and using &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; directly, for example:</source>
          <target state="translated">&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;のタイプは引き続き&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;であるため、&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;からの継承にはメタクラスの使用に関する通常の予防策が必要です。多重継承はメタクラスの競合につながる可能性があるためです。metaclassキーワードを渡して&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; を&lt;/a&gt;直接使用することで、抽象基本クラスを定義することもできます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="2fc591820a47265f251fd7af3b9597e91511cf6a" translate="yes" xml:space="preserve">
          <source>Note that there are no methods &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt;; use &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; without &lt;em&gt;flags&lt;/em&gt; argument instead.</source>
          <target state="translated">メソッド &lt;code&gt;read()&lt;/code&gt; または &lt;code&gt;write()&lt;/code&gt; がないことに注意してください。使用&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;せずに&lt;em&gt;フラグの&lt;/em&gt;代わりに引数。</target>
        </trans-unit>
        <trans-unit id="36630936cce6573d3d4dc4a543a2ef65fc12897f" translate="yes" xml:space="preserve">
          <source>Note that there are unavoidable subtleties twice per year in a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass accounting for both standard and daylight time, at the DST transition points. For concreteness, consider US Eastern (UTC -0500), where EDT begins the minute after 1:59 (EST) on the second Sunday in March, and ends the minute after 1:59 (EDT) on the first Sunday in November:</source>
          <target state="translated">DSTの移行ポイントで、標準と夏時間の両方を考慮した&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスには、年に2回、避けられない微妙な点があることに注意してください。具体的には、米国東部（UTC -0500）を考慮してください。EDTは、3月の第2日曜日の1:59（EST）から1分後に始まり、11月の第1日曜日の1:59（EDT）から1分で終わります。</target>
        </trans-unit>
        <trans-unit id="15592c72a8f6f854d7f0dbccf4a1703e76bd673a" translate="yes" xml:space="preserve">
          <source>Note that there is a nice correspondence between several attributes and methods of &lt;code&gt;os.DirEntry&lt;/code&gt; and of &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;. In particular, the &lt;code&gt;name&lt;/code&gt; attribute has the same meaning, as do the &lt;code&gt;is_dir()&lt;/code&gt;, &lt;code&gt;is_file()&lt;/code&gt;, &lt;code&gt;is_symlink()&lt;/code&gt; and &lt;code&gt;stat()&lt;/code&gt; methods.</source>
          <target state="translated">いくつかの属性との方法の間に素敵な対応があることに注意してください &lt;code&gt;os.DirEntry&lt;/code&gt; との&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; が&lt;/a&gt;。特に、 &lt;code&gt;name&lt;/code&gt; 属性は、 &lt;code&gt;is_dir()&lt;/code&gt; 、 &lt;code&gt;is_file()&lt;/code&gt; 、 &lt;code&gt;is_symlink()&lt;/code&gt; および &lt;code&gt;stat()&lt;/code&gt; メソッドと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="8df01b5cba256bfe26308cfbe1ebdc3f6c2def0b" translate="yes" xml:space="preserve">
          <source>Note that there is no need to call this function when &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;を使用する場合は、この関数を呼び出す必要がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b57144e5df9df62e17e080fadafa48aa0596258b" translate="yes" xml:space="preserve">
          <source>Note that there is no specific slot for any of these methods in the type structure for Python objects in the Python/C API. Extension types wanting to define these methods must provide them as a normal Python accessible method. Compared to the overhead of setting up the runtime context, the overhead of a single class dictionary lookup is negligible.</source>
          <target state="translated">Python/C API の Python オブジェクトの型構造には、これらのメソッドのための特定のスロットがないことに注意してください。これらのメソッドを定義したい拡張タイプは、通常のPythonアクセス可能なメソッドとして提供しなければなりません。ランタイムコンテキストを設定するオーバーヘッドと比較して、単一のクラス辞書のルックアップのオーバーヘッドは無視できるほどのものです。</target>
        </trans-unit>
        <trans-unit id="9a02df7e02b3ab3b4f010591f5ece20d6e24dd6b" translate="yes" xml:space="preserve">
          <source>Note that there is one additional limitation when using context managers as function decorators: there&amp;rsquo;s no way to access the return value of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt;. If that value is needed, then it is still necessary to use an explicit &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">コンテキストマネージャを関数デコレータとして使用する場合、1つの追加の制限があることに注意してください&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;戻り値にアクセスする方法はありません。その値が必要な場合でも、明示的な &lt;code&gt;with&lt;/code&gt; ステートメントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fde38b61d1d62820ebcfd27fe4d5d63de63de348" translate="yes" xml:space="preserve">
          <source>Note that there is one additional limitation when using context managers as function decorators: there&amp;rsquo;s no way to access the return value of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt;. If that value is needed, then it is still necessary to use an explicit &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">関数デコレータとしてコンテキストマネージャを使用する場合、もう1つの制限があることに注意してください&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;戻り値にアクセスする方法はありません。その値が必要な場合でも、明示的な &lt;code&gt;with&lt;/code&gt; ステートメントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1a0bc324af393bbb5dd82800c76c036cbda0f5f" translate="yes" xml:space="preserve">
          <source>Note that these checks are enforced only by the static type checker. At runtime, the statement &lt;code&gt;Derived = NewType('Derived', Base)&lt;/code&gt; will make &lt;code&gt;Derived&lt;/code&gt; a function that immediately returns whatever parameter you pass it. That means the expression &lt;code&gt;Derived(some_value)&lt;/code&gt; does not create a new class or introduce any overhead beyond that of a regular function call.</source>
          <target state="translated">これらのチェックは、静的型チェッカーによってのみ実行されることに注意してください。実行時に、ステートメント &lt;code&gt;Derived = NewType('Derived', Base)&lt;/code&gt; は、 &lt;code&gt;Derived&lt;/code&gt; を、渡したパラメーターをすぐに返す関数にします。つまり、 &lt;code&gt;Derived(some_value)&lt;/code&gt; という式は、新しいクラスを作成したり、通常の関数呼び出しを超えるオーバーヘッドを導入したりしません。</target>
        </trans-unit>
        <trans-unit id="472bb74ea73045e483510b2cd999d2e021bf1acc" translate="yes" xml:space="preserve">
          <source>Note that these functions are not meaningful for a multipart message. They must be applied to individual subparts instead, and will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if passed a message whose type is multipart.</source>
          <target state="translated">これらの関数は、マルチパートメッセージでは意味がないことに注意してください。代わりに個々のサブパートに適用する必要があり、タイプがマルチパートのメッセージを渡すと&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="30d1675de10cd2d2ad0bc712bec13688a9a6c970" translate="yes" xml:space="preserve">
          <source>Note that these methods must &lt;em&gt;not&lt;/em&gt; be called during parsing, that is, after parse has been called and before it returns.</source>
          <target state="translated">これらのメソッドは、解析中、つまり解析が呼び出されてから戻る前に呼び出さ&lt;em&gt;ないで&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="d29fa93c8852c067f1d3f1f3ca06f2de2869049f" translate="yes" xml:space="preserve">
          <source>Note that this adds a sixth attribute (&lt;a href=&quot;#platform.processor&quot;&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/a&gt;) not present in the &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; result. Also, the attribute names are different for the first two attributes; &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; names them &lt;code&gt;sysname&lt;/code&gt; and &lt;code&gt;nodename&lt;/code&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;os#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; の&lt;/a&gt;結果に存在しない6番目の属性（&lt;a href=&quot;#platform.processor&quot;&gt; &lt;code&gt;processor&lt;/code&gt; &lt;/a&gt;）が追加されることに注意してください。また、最初の2つの属性の属性名は異なります。&lt;a href=&quot;os#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; &lt;/a&gt;はそれらに &lt;code&gt;sysname&lt;/code&gt; および &lt;code&gt;nodename&lt;/code&gt; という名前を付けます。</target>
        </trans-unit>
        <trans-unit id="2d46886958797cfa9907ad4c6425e0ae6791da66" translate="yes" xml:space="preserve">
          <source>Note that this does &lt;em&gt;not&lt;/em&gt; overwrite or delete any existing header with the same name. If you want to ensure that the new header is the only one present in the message with field name &lt;em&gt;name&lt;/em&gt;, delete the field first, e.g.:</source>
          <target state="translated">これにより、同じ名前の既存のヘッダーが上書きまたは削除されることはありませ&lt;em&gt;ん&lt;/em&gt;。新しいヘッダーがフィールド名&lt;em&gt;nameの&lt;/em&gt;メッセージに存在する唯一のものであることを確認したい場合は、最初にフィールドを削除します。例：</target>
        </trans-unit>
        <trans-unit id="b79b943f472b0275b7ad6a51da0c669884bba25f" translate="yes" xml:space="preserve">
          <source>Note that this function &lt;em&gt;only&lt;/em&gt; returns a meaningful name for actual Python modules - paths that potentially refer to Python packages will still return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この関数は、実際のP​​ythonモジュールの意味のある名前&lt;em&gt;のみを&lt;/em&gt;返すことに注意してください。Pythonパッケージを参照する可能性のあるパスは、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1e5f27a50e7211ff256009dee22a78b6d7a48364" translate="yes" xml:space="preserve">
          <source>Note that this function does not raise &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt;. Futures or Tasks that aren&amp;rsquo;t done when the timeout occurs are simply returned in the second set.</source>
          <target state="translated">この関数は&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; を発生さ&lt;/a&gt;せないことに注意してください。タイムアウトが発生したときに実行されない先物またはタスクは、2番目のセットで単に返されます。</target>
        </trans-unit>
        <trans-unit id="f6e96664f646c10e89d795c433800d7c1e4544c3" translate="yes" xml:space="preserve">
          <source>Note that this function has intimate knowledge of how different libc versions add symbols to the executable is probably only usable for executables compiled using &lt;strong&gt;gcc&lt;/strong&gt;.</source>
          <target state="translated">この関数はlibcのバージョンが実行可能に記号を追加する方法異なるの親密な知識を持っていることを注記は、おそらく使用してコンパイルされた実行ファイルに対してのみ使用可能である&lt;strong&gt;GCCを&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="45f629527ef98fcd33c266ca1c4678e0ef5157a6" translate="yes" xml:space="preserve">
          <source>Note that this function must import all &lt;em&gt;packages&lt;/em&gt; (&lt;em&gt;not&lt;/em&gt; all modules!) on the given &lt;em&gt;path&lt;/em&gt;, in order to access the &lt;code&gt;__path__&lt;/code&gt; attribute to find submodules.</source>
          <target state="translated">この関数は、 &lt;code&gt;__path__&lt;/code&gt; 属性にアクセスしてサブモジュールを見つけるために、指定された&lt;em&gt;パス&lt;/em&gt;上のすべての&lt;em&gt;パッケージ&lt;/em&gt;（すべてのモジュールで&lt;em&gt;はない&lt;/em&gt;！）をインポートする必要があることに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a589457ce4b7eed1abc8c3023b9a61ab3a1a55e6" translate="yes" xml:space="preserve">
          <source>Note that this function will not work with the &amp;lsquo;C&amp;rsquo; locale, so you have to set a locale via &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">この関数は 'C'ロケールでは機能しないため、最初に&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;を使用してロケールを設定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c7fbd744392c36926075a26d9e3ab559ef32a1e2" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;em&gt;not&lt;/em&gt; a sandbox module - all code is executed in the current process, and any side effects (such as cached imports of other modules) will remain in place after the functions have returned.</source>
          <target state="translated">これはサンドボックスモジュールでは&lt;em&gt;ない&lt;/em&gt;ことに注意してください-すべてのコードは現在のプロセスで実行され、副作用（他のモジュールのキャッシュされたインポートなど）は関数が戻った後もそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="5db5a52cc1e7c561c7837d97bc61981bd4e2bf44" translate="yes" xml:space="preserve">
          <source>Note that this is another reason why you need integration tests as well as unit tests. Testing everything in isolation is all fine and dandy, but if you don&amp;rsquo;t test how your units are &amp;ldquo;wired together&amp;rdquo; there is still lots of room for bugs that tests might have caught.</source>
          <target state="translated">これは、統合テストと単体テストが必要になるもう1つの理由です。すべてを個別にテストすることは、すべてうまくいきますが、ユニットがどのように「相互接続」されているかをテストしないと、テストで発見された可能性のあるバグがまだたくさんあります。</target>
        </trans-unit>
        <trans-unit id="b965eef784d4d104baee666239b49d8cae11dad4" translate="yes" xml:space="preserve">
          <source>Note that this is equivalent to &lt;code&gt;bool(expr) is True&lt;/code&gt; and not to &lt;code&gt;expr
is True&lt;/code&gt; (use &lt;code&gt;assertIs(expr, True)&lt;/code&gt; for the latter). This method should also be avoided when more specific methods are available (e.g. &lt;code&gt;assertEqual(a, b)&lt;/code&gt; instead of &lt;code&gt;assertTrue(a == b)&lt;/code&gt;), because they provide a better error message in case of failure.</source>
          <target state="translated">これは &lt;code&gt;bool(expr) is True&lt;/code&gt; 、 &lt;code&gt;expr is True&lt;/code&gt; ないことに相当します（後者の場合は &lt;code&gt;assertIs(expr, True)&lt;/code&gt; を使用してください）。このメソッドは、より具体的なメソッドが利用できる場合（たとえば、 &lt;code&gt;assertTrue(a == b)&lt;/code&gt; ではなく &lt;code&gt;assertEqual(a, b)&lt;/code&gt; も回避する必要があります。失敗した場合により適切なエラーメッセージを提供するためです。</target>
        </trans-unit>
        <trans-unit id="5e6fff084be385dbf0bc1a43435632a2295ef2a7" translate="yes" xml:space="preserve">
          <source>Note that this is not the same concept as an optional argument, which is one that has a default. An optional argument with a default does not require the &lt;code&gt;Optional&lt;/code&gt; qualifier on its type annotation just because it is optional. For example:</source>
          <target state="translated">これは省略可能な引数と同じ概念ではないことに注意してください。これにはデフォルトがあります。デフォルトのオプション引数は、それがオプションであるという理由だけで、型注釈に &lt;code&gt;Optional&lt;/code&gt; 修飾子を必要としません。例えば：</target>
        </trans-unit>
        <trans-unit id="497db1e409c9d5535b9f7799396b336c6bf26c17" translate="yes" xml:space="preserve">
          <source>Note that this is only one way, albeit the most convenient way, to make the &lt;code&gt;_()&lt;/code&gt; function available to your application. Because it affects the entire application globally, and specifically the built-in namespace, localized modules should never install &lt;code&gt;_()&lt;/code&gt;. Instead, they should use this code to make &lt;code&gt;_()&lt;/code&gt; available to their module:</source>
          <target state="translated">これは、アプリケーションで &lt;code&gt;_()&lt;/code&gt; 関数を使用できるようにするための最も便利な方法ですが、1つの方法にすぎないことに注意してください。アプリケーション全体、特に組み込みの名前空間に影響を与えるため、ローカライズされたモジュールは &lt;code&gt;_()&lt;/code&gt; をインストールしないでください。代わりに、このコードを使用して、モジュールで &lt;code&gt;_()&lt;/code&gt; を使用できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="c5dd52f7d1a18d76b5b1670ad4b672dfed972deb" translate="yes" xml:space="preserve">
          <source>Note that this manipulation of &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; is not thread-safe. Other threads may see the partially initialised module, as well as the altered list of arguments. It is recommended that the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; module be left alone when invoking this function from threaded code.</source>
          <target state="translated">この&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; の&lt;/a&gt;操作はスレッドセーフではないことに注意してください。他のスレッドは、部分的に初期化されたモジュール、および変更された引数のリストを見る場合があります。スレッド化されたコードからこの関数を呼び出すときは、&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;モジュールをそのままにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ad60b5a4d53caa42fe4b708c2e6654939094b20a" translate="yes" xml:space="preserve">
          <source>Note that this may not be done after authentication information has been transmitted, and authentication occurs by default if possible during a &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; object initialization. See &lt;a href=&quot;#nntplib.NNTP.login&quot;&gt;&lt;code&gt;NNTP.login()&lt;/code&gt;&lt;/a&gt; for information on suppressing this behavior.</source>
          <target state="translated">これは、認証情報が送信された後は行われない可能性があり、&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;オブジェクトの初期化中に可能であればデフォルトで認証が行われることに注意してください。この動作を抑制する方法については、&lt;a href=&quot;#nntplib.NNTP.login&quot;&gt; &lt;code&gt;NNTP.login()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1ca198d21563fd5cf167242f8f7abad568ca45e5" translate="yes" xml:space="preserve">
          <source>Note that this may raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; on Unix platforms like Mac OS X where &lt;code&gt;sem_getvalue()&lt;/code&gt; is not implemented.</source>
          <target state="translated">これにより、 &lt;code&gt;sem_getvalue()&lt;/code&gt; が実装されていないMac OS XなどのUnixプラットフォームで&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; が発生&lt;/a&gt;する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="46df65154fc5779c9a8d8169de6b544a5033f917" translate="yes" xml:space="preserve">
          <source>Note that this method differs from &lt;a href=&quot;#email.message.Message.get_charset&quot;&gt;&lt;code&gt;get_charset()&lt;/code&gt;&lt;/a&gt; which returns the &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance for the default encoding of the message body.</source>
          <target state="translated">このメソッドは、メッセージ本文のデフォルトエンコーディングの&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスを返す&lt;a href=&quot;#email.message.Message.get_charset&quot;&gt; &lt;code&gt;get_charset()&lt;/code&gt; &lt;/a&gt;とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7ec37bb1f92cbf01a7d78829d33f077a718bc081" translate="yes" xml:space="preserve">
          <source>Note that this method is automatically added to the class: it is not directly specified in the &lt;code&gt;InventoryItem&lt;/code&gt; definition shown above.</source>
          <target state="translated">このメソッドはクラスに自動的に追加されることに注意してください。上記の &lt;code&gt;InventoryItem&lt;/code&gt; 定義で直接指定されていません。</target>
        </trans-unit>
        <trans-unit id="2d0305ac41e9e98f465e3a09a7a321fde7592591" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not always format the message the way you want. For example, by default it does not do the mangling of lines that begin with &lt;code&gt;From&lt;/code&gt; that is required by the unix mbox format. For more flexibility, instantiate a &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance and use its &lt;a href=&quot;email.generator#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method directly. For example:</source>
          <target state="translated">このメソッドは便宜上提供されており、必ずしもメッセージを希望どおりにフォーマットできるとは限らないことに注意してください。たとえば、デフォルトでは、Unix mbox形式で必要な &lt;code&gt;From&lt;/code&gt; で始まる行のマングルは行われません。柔軟性を高めるには、&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;インスタンスをインスタンス化し、その&lt;a href=&quot;email.generator#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="bc1e53b42c929782edab5f61e605edfc1b232f1f" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not always format the message the way you want. For example, by default it does not do the mangling of lines that begin with &lt;code&gt;From&lt;/code&gt; that is required by the unix mbox format. For more flexibility, instantiate a &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance and use its &lt;a href=&quot;email.generator#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method directly. For example:</source>
          <target state="translated">このメソッドは便宜上提供されており、必ずしもメッセージを希望どおりにフォーマットできるとは限らないことに注意してください。たとえば、デフォルトでは、Unix mbox形式で必要な &lt;code&gt;From&lt;/code&gt; で始まる行のマングルは行われません。柔軟性を高めるには、&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;インスタンスをインスタンス化し、その&lt;a href=&quot;email.generator#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="914ac925c90ce0481ed0d7bcee5c22d8232a27d1" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;email.generator.BytesGenerator&lt;/code&gt;&lt;/a&gt; for a more flexible API for serializing messages.</source>
          <target state="translated">このメソッドは便宜上提供されており、特に複数のメッセージを処理している場合は、アプリケーションでメッセージをシリアル化するための最も有用な方法ではない場合があることに注意してください。メッセージをシリアライズするためのより柔軟なAPIについては、&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;email.generator.BytesGenerator&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0569aab75ed3c326d1e3ad45e468b2d9a967ffbc" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;email.generator.Generator&lt;/code&gt;&lt;/a&gt; for a more flexible API for serializing messages. Note also that this method is restricted to producing messages serialized as &amp;ldquo;7 bit clean&amp;rdquo; when &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt;&lt;code&gt;utf8&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, which is the default.</source>
          <target state="translated">このメソッドは便宜上提供されており、特に複数のメッセージを処理している場合は、アプリケーションでメッセージをシリアル化するための最も有用な方法ではない場合があることに注意してください。メッセージをシリアライズするためのより柔軟なAPIについては、&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;email.generator.Generator&lt;/code&gt; &lt;/a&gt;を参照してください。また、このメソッドは、デフォルトである&lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt; &lt;code&gt;utf8&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、「7ビットクリーン」としてシリアル化されたメッセージの生成に限定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4863202591f117b45079183ed253d97469614cfd" translate="yes" xml:space="preserve">
          <source>Note that this should be called at most once, and it should be protected inside the &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; clause of the main module.</source>
          <target state="translated">これは最大で1回呼び出す必要があり、メインモジュール &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 句内で保護する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f023dfbaa5e7784ac868d744c9df4db74a2b0f4" translate="yes" xml:space="preserve">
          <source>Note that this utility does not guarantee complete &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; compliance; an absence of errors from this module does not necessarily mean that errors do not exist. However, if this module does produce an error, then it is virtually certain that either the server or application is not 100% compliant.</source>
          <target state="translated">このユーティリティは完全な&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;準拠を保証するものではないことに注意してください。このモジュールにエラーがないことは、必ずしもエラーが存在しないことを意味するわけではありません。ただし、このモジュールでエラーが発生した場合は、サーバーまたはアプリケーションのいずれかが100％準拠していないことがほぼ確実です。</target>
        </trans-unit>
        <trans-unit id="392655359709b780ff1bb9da7fb1ff72dc351b8b" translate="yes" xml:space="preserve">
          <source>Note that tracebacks are treated very specially. In particular, in the rewritten example, the use of &lt;code&gt;...&lt;/code&gt; is independent of doctest&amp;rsquo;s &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; option. The ellipsis in that example could be left out, or could just as well be three (or three hundred) commas or digits, or an indented transcript of a Monty Python skit.</source>
          <target state="translated">トレースバックは非常に特別に扱われることに注意してください。特に、書き換えられた例では、 &lt;code&gt;...&lt;/code&gt; の使用はdoctestの&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; &lt;/a&gt;オプションとは無関係です。その例の省略記号は省略できますが、3つ（または300）のコンマまたは数字、あるいはモンティパイソンスキットのインデントされた筆記録でもかまいません。</target>
        </trans-unit>
        <trans-unit id="953d734e119512ee18a0a9392b9f9b9d6d4df366" translate="yes" xml:space="preserve">
          <source>Note that unclosed single-quoted strings do not cause an error to be raised. They are tokenized as &lt;a href=&quot;token#token.ERRORTOKEN&quot;&gt;&lt;code&gt;ERRORTOKEN&lt;/code&gt;&lt;/a&gt;, followed by the tokenization of their contents.</source>
          <target state="translated">閉じられていない単一引用符で囲まれた文字列が原因でエラーが発生することはありません。それらは&lt;a href=&quot;token#token.ERRORTOKEN&quot;&gt; &lt;code&gt;ERRORTOKEN&lt;/code&gt; &lt;/a&gt;としてトークン化され、その後にコンテンツのトークン化が続きます。</target>
        </trans-unit>
        <trans-unit id="025bc18a2bc141ea4af9a1700e4ee039cbf3bd9f" translate="yes" xml:space="preserve">
          <source>Note that unless a minimum field width is defined, the field width will always be the same size as the data to fill it, so that the alignment option has no meaning in this case.</source>
          <target state="translated">最小フィールド幅が定義されていない限り、フィールド幅は常にそれを埋めるデータと同じサイズになることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f0733676794f7d6ac39c0d22a2a452465ab6a556" translate="yes" xml:space="preserve">
          <source>Note that unlike many other generics in the typing module, the &lt;code&gt;SendType&lt;/code&gt; of &lt;a href=&quot;#typing.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; behaves contravariantly, not covariantly or invariantly.</source>
          <target state="translated">タイピングモジュール内の他の多くのジェネリック医薬品とは異なり、という注意 &lt;code&gt;SendType&lt;/code&gt; の&lt;a href=&quot;#typing.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;ないcovariantlyまたは不変、contravariantly振る舞います。</target>
        </trans-unit>
        <trans-unit id="a6e9cb78d9006ba4f85f82103063e16f601f2f04" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; class, the &lt;em&gt;fieldnames&lt;/em&gt; parameter of the &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; class is not optional.</source>
          <target state="translated">違っていることを注意&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; の&lt;/a&gt;クラス、&lt;em&gt;フィールド名の&lt;/em&gt;パラメータ&lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; の&lt;/a&gt;クラスはオプションではありません。</target>
        </trans-unit>
        <trans-unit id="b92a04f3a0309df577dbc705f08776279130e14e" translate="yes" xml:space="preserve">
          <source>Note that unlike the C structure, the month value is a range of [1, 12], not [0, 11].</source>
          <target state="translated">C構造とは異なり、月の値は[0,11]ではなく[1,12]の範囲であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8eede2ce0b3d8e2c9335916e2ca2bc70c1345924" translate="yes" xml:space="preserve">
          <source>Note that unlike the Python &lt;code&gt;sys.version&lt;/code&gt;, the returned value will always include the patchlevel (it defaults to 0).</source>
          <target state="translated">Pythonの &lt;code&gt;sys.version&lt;/code&gt; とは異なり、戻り値には常にパッチレベルが含まれることに注意してください（デフォルトは0です）。</target>
        </trans-unit>
        <trans-unit id="a0e44189a3d936dd2974b45ad2423d66b85bbb11" translate="yes" xml:space="preserve">
          <source>Note that unlike the Python &lt;code&gt;sys.version&lt;/code&gt;, the returned value will always include the patchlevel (it defaults to &lt;code&gt;'0'&lt;/code&gt;).</source>
          <target state="translated">Pythonの &lt;code&gt;sys.version&lt;/code&gt; とは異なり、戻り値には常にパッチレベルが含まれることに注意してください（デフォルトは &lt;code&gt;'0'&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="faae0ddf62d8d17e4575535b139e839cc1f2ad54" translate="yes" xml:space="preserve">
          <source>Note that urlopen returns a bytes object. This is because there is no way for urlopen to automatically determine the encoding of the byte stream it receives from the HTTP server. In general, a program will decode the returned bytes object to string once it determines or guesses the appropriate encoding.</source>
          <target state="translated">urlopenはバイトオブジェクトを返すことに注意してください。これは、urlopenがHTTPサーバから受け取るバイトストリームのエンコーディングを自動的に決定する方法がないからです。一般的に、プログラムは返されたバイトオブジェクトを文字列にデコードします。</target>
        </trans-unit>
        <trans-unit id="fb5a04375d4dd30682512ce20dc834dd48ae4073" translate="yes" xml:space="preserve">
          <source>Note that using this function may require some external synchronization if there are other threads whose state is unknown. If a barrier is broken it may be better to just leave it and create a new one.</source>
          <target state="translated">状態が不明な他のスレッドがある場合、この関数を使用すると外部同期が必要になるかもしれないことに注意してください。バリアが壊れている場合は、そのままにしておいて新しいバリアを作成した方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="9c6aed152d7d60b297ac12eb40378b5912ced5a2" translate="yes" xml:space="preserve">
          <source>Note that using this method is subtly different from deleting the old &lt;em&gt;Content-Type&lt;/em&gt; header and adding a new one with the new boundary via &lt;a href=&quot;#email.message.EmailMessage.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt;, because &lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; preserves the order of the &lt;em&gt;Content-Type&lt;/em&gt; header in the list of headers.</source>
          <target state="translated">この方法を使用する古い削除から微妙に異なることに注意してください&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダを介して新たな境界と新しいものを追加すること&lt;a href=&quot;#email.message.EmailMessage.add_header&quot;&gt; &lt;code&gt;add_header()&lt;/code&gt; &lt;/a&gt;、なぜなら&lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;の順序維持&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダのリストにおけるヘッダ。</target>
        </trans-unit>
        <trans-unit id="9bd23778bbf355f16dc2a21579fe2ace4a93366b" translate="yes" xml:space="preserve">
          <source>Note that using this method is subtly different than deleting the old &lt;em&gt;Content-Type&lt;/em&gt; header and adding a new one with the new boundary via &lt;a href=&quot;#email.message.Message.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt;, because &lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; preserves the order of the &lt;em&gt;Content-Type&lt;/em&gt; header in the list of headers. However, it does &lt;em&gt;not&lt;/em&gt; preserve any continuation lines which may have been present in the original &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">この方法を使用する古い削除するよりも微妙に異なることに注意してください&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダを介して新たな境界と新しいものを追加すること&lt;a href=&quot;#email.message.Message.add_header&quot;&gt; &lt;code&gt;add_header()&lt;/code&gt; &lt;/a&gt;、なぜなら&lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;の順序維持&lt;em&gt;のContent-Type&lt;/em&gt;ヘッダのリストにおけるヘッダ。ただし、元の&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに存在していた可能性のある継続行&lt;em&gt;は&lt;/em&gt;保持されませ&lt;em&gt;ん&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c91ae7008ef906071438192c9d712ce1afcb7577" translate="yes" xml:space="preserve">
          <source>Note that via &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; hooks, all attributes are computed lazily, so there is no speed penalty if only those attributes which are lightweight to compute are used.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;フックを介して、すべての属性が遅延計算されるため、計算が軽量な属性のみを使用する場合、速度が低下することはありません。</target>
        </trans-unit>
        <trans-unit id="a0f182aa4a9ed90d4fef85c4c311a272374c431d" translate="yes" xml:space="preserve">
          <source>Note that via &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; hooks, all attributes are computed lazily, so there is no speed penalty if only those attributes which are lightweight to compute are used.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;フックを介して、すべての属性が遅延計算されるため、計算が軽量な属性のみを使用しても速度が低下することはありません。</target>
        </trans-unit>
        <trans-unit id="6620fed817fce6e58ea094966e81cd033a5e4010" translate="yes" xml:space="preserve">
          <source>Note that when instantiating a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; object we may pass functions to filter out line and character &amp;ldquo;junk.&amp;rdquo; See the &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ()&lt;/code&gt;&lt;/a&gt; constructor for details.</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;オブジェクトをインスタンス化するときに、行や文字の「ジャンク」を除外する関数を渡す場合があることに注意してください。詳細については、&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ()&lt;/code&gt; &lt;/a&gt;コンストラクターを参照してください。</target>
        </trans-unit>
        <trans-unit id="dd02f589dec05a4f2acacc6d0ca5ede64ffc86f9" translate="yes" xml:space="preserve">
          <source>Note that when locals are captured, they are also shown in the traceback.</source>
          <target state="translated">ローカルがキャプチャされると、トレースバックにも表示されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="502bb316d8bdb001894aeb3898845cca4d8900b3" translate="yes" xml:space="preserve">
          <source>Note that when reading configuration files, whitespace around the option names is stripped before &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">構成ファイルを読み取るとき、&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; &lt;/a&gt;が呼び出される前に、オプション名の周りの空白が削除されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ea83e7983f7be281ec5a3262ffed3a7df409c2d9" translate="yes" xml:space="preserve">
          <source>Note that when the Unicode patterns &lt;code&gt;[a-z]&lt;/code&gt; or &lt;code&gt;[A-Z]&lt;/code&gt; are used in combination with the &lt;a href=&quot;#re.IGNORECASE&quot;&gt;&lt;code&gt;IGNORECASE&lt;/code&gt;&lt;/a&gt; flag, they will match the 52 ASCII letters and 4 additional non-ASCII letters: &amp;lsquo;İ&amp;rsquo; (U+0130, Latin capital letter I with dot above), &amp;lsquo;ı&amp;rsquo; (U+0131, Latin small letter dotless i), &amp;lsquo;ſ&amp;rsquo; (U+017F, Latin small letter long s) and &amp;lsquo;K&amp;rsquo; (U+212A, Kelvin sign). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only letters &amp;lsquo;a&amp;rsquo; to &amp;lsquo;z&amp;rsquo; and &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo; are matched.</source>
          <target state="translated">Unicodeパターン &lt;code&gt;[a-z]&lt;/code&gt; または &lt;code&gt;[A-Z]&lt;/code&gt; が&lt;a href=&quot;#re.IGNORECASE&quot;&gt; &lt;code&gt;IGNORECASE&lt;/code&gt; &lt;/a&gt;フラグと組み合わせて使用​​される場合、52個のASCII文字と4つの追加の非ASCII文字に一致することに注意してください： 'İ'（U + 0130、ラテン大文字I上のドット）、「ı」（U + 0131、ラテン小文字のドットなしi）、「ſ」（U + 017F、ラテン小文字の長いs）、および「K」（U + 212A、ケルビン記号）。&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;フラグを使用する場合、「a」から「z」までの文字と「A」から「Z」までの文字のみが一致します。</target>
        </trans-unit>
        <trans-unit id="941b2bd8c0fceca2a354dab3b47ce6850b8f3e86" translate="yes" xml:space="preserve">
          <source>Note that while &lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt;&lt;code&gt;iterparse()&lt;/code&gt;&lt;/a&gt; builds the tree incrementally, it issues blocking reads on &lt;em&gt;source&lt;/em&gt; (or the file it names). As such, it&amp;rsquo;s unsuitable for applications where blocking reads can&amp;rsquo;t be made. For fully non-blocking parsing, see &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt; &lt;code&gt;iterparse()&lt;/code&gt; &lt;/a&gt;は段階的にツリーを構築しますが、&lt;em&gt;ソース&lt;/em&gt;（または名前が付けられたファイル）に対するブロック読み取りを発行することに注意してください。そのため、読み取りをブロックできないアプリケーションには適していません。完全に非ブロッキングの解析については、&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e2a3769eac1a1d1cf5224599e594a65402067fa" translate="yes" xml:space="preserve">
          <source>Note that widgets do not appear until they have had their geometry specified with a geometry manager. It&amp;rsquo;s a common early mistake to leave out the geometry specification, and then be surprised when the widget is created but nothing appears. A widget will appear only after it has had, for example, the packer&amp;rsquo;s &lt;code&gt;pack()&lt;/code&gt; method applied to it.</source>
          <target state="translated">ウィジェットは、ジオメトリマネージャでジオメトリが指定されるまで表示されないことに注意してください。ジオメトリの指定を省略して、ウィジェットが作成されても何も表示されないことに驚かされるのは、初期のよくある間違いです。ウィジェットは、たとえば、packerの &lt;code&gt;pack()&lt;/code&gt; メソッドが適用された後にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="2968c2dcd25aa32f9a9ffad2dfcf5c7c74536aa8" translate="yes" xml:space="preserve">
          <source>Note that win32 system dlls like &lt;code&gt;kernel32&lt;/code&gt; and &lt;code&gt;user32&lt;/code&gt; often export ANSI as well as UNICODE versions of a function. The UNICODE version is exported with an &lt;code&gt;W&lt;/code&gt; appended to the name, while the ANSI version is exported with an &lt;code&gt;A&lt;/code&gt; appended to the name. The win32 &lt;code&gt;GetModuleHandle&lt;/code&gt; function, which returns a &lt;em&gt;module handle&lt;/em&gt; for a given module name, has the following C prototype, and a macro is used to expose one of them as &lt;code&gt;GetModuleHandle&lt;/code&gt; depending on whether UNICODE is defined or not:</source>
          <target state="translated">&lt;code&gt;kernel32&lt;/code&gt; や &lt;code&gt;user32&lt;/code&gt; などのwin32システムdllは、関数のUNICODEバージョンだけでなくANSIバージョンもエクスポートすることに注意してください。UNICODEバージョンは名前に &lt;code&gt;W&lt;/code&gt; が追加されてエクスポートされますが、ANSIバージョンは名前に &lt;code&gt;A&lt;/code&gt; が追加されてエクスポートされます。特定のモジュール名の&lt;em&gt;モジュールハンドル&lt;/em&gt;を返すwin32 &lt;code&gt;GetModuleHandle&lt;/code&gt; 関数には次のCプロトタイプがあり、マクロを使用して、UNICODEが定義されているかどうかに応じて、これらの1つを &lt;code&gt;GetModuleHandle&lt;/code&gt; として公開します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e484f1a68e220911d28f836ad1681a6e8b9beab" translate="yes" xml:space="preserve">
          <source>Note that you must have read the whole response before you can send a new request to the server.</source>
          <target state="translated">サーバに新しいリクエストを送る前に、レスポンス全体を読む必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="03c8f7f230406149e0b90ed811820d038dcfd819" translate="yes" xml:space="preserve">
          <source>Note that, as with floating point numbers, &lt;code&gt;v is w&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; imply &lt;code&gt;v == w&lt;/code&gt; for memoryview objects.</source>
          <target state="translated">浮動小数点数と同様に、 &lt;code&gt;v is w&lt;/code&gt; は、memoryviewオブジェクトの &lt;code&gt;v == w&lt;/code&gt; を意味し&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="84e31b16758bcc976ec2d505de7ab96563d8cfa9" translate="yes" xml:space="preserve">
          <source>Note that, because of normalization, &lt;code&gt;timedelta.max&lt;/code&gt; &amp;gt; &lt;code&gt;-timedelta.min&lt;/code&gt;. &lt;code&gt;-timedelta.max&lt;/code&gt; is not representable as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">正規化のため、 &lt;code&gt;timedelta.max&lt;/code&gt; &amp;gt; &lt;code&gt;-timedelta.min&lt;/code&gt; であることに注意してください。 &lt;code&gt;-timedelta.max&lt;/code&gt; は、&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトとして表現できません。</target>
        </trans-unit>
        <trans-unit id="d2fa3178c8ace73525d94f281c6241f693463f13" translate="yes" xml:space="preserve">
          <source>Note that, unlike &lt;a href=&quot;#runpy.run_module&quot;&gt;&lt;code&gt;run_module()&lt;/code&gt;&lt;/a&gt;, the alterations made to &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; are not optional in this function as these adjustments are essential to allowing the execution of sys.path entries. As the thread-safety limitations still apply, use of this function in threaded code should be either serialised with the import lock or delegated to a separate process.</source>
          <target state="translated">&lt;a href=&quot;#runpy.run_module&quot;&gt; &lt;code&gt;run_module()&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; に&lt;/a&gt;加えられた変更は、sys.pathエントリの実行を許可するために不可欠であるため、この関数ではオプションではありません。スレッドセーフティの制限が引き続き適用されるため、スレッドコードでのこの関数の使用は、インポートロックでシリアル化するか、別のプロセスに委任する必要があります。</target>
        </trans-unit>
        <trans-unit id="f1c5a3a10c1525bb6f32e3ae69372905a7415c70" translate="yes" xml:space="preserve">
          <source>Note the difference between &lt;code&gt;'@'&lt;/code&gt; and &lt;code&gt;'='&lt;/code&gt;: both use native byte order, but the size and alignment of the latter is standardized.</source>
          <target state="translated">&lt;code&gt;'@'&lt;/code&gt; と &lt;code&gt;'='&lt;/code&gt; の違いに注意してください。どちらもネイティブのバイト順を使用していますが、後者のサイズと配置は標準化されています。</target>
        </trans-unit>
        <trans-unit id="394e74fcbbfae11d61ce5fd9d0741b358dc5b679" translate="yes" xml:space="preserve">
          <source>Note the unusual calling syntax: the &lt;em&gt;first&lt;/em&gt; argument is optional, and the second is required. This is a historical artifact for compatibility with the older &lt;code&gt;linuxaudiodev&lt;/code&gt; module which &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; supersedes.</source>
          <target state="translated">異常な呼び出し構文に注意してください。&lt;em&gt;最初の&lt;/em&gt;引数はオプションで、2番目の引数は必須です。これは、&lt;a href=&quot;#module-ossaudiodev&quot;&gt; &lt;code&gt;ossaudiodev&lt;/code&gt; が&lt;/a&gt;取って代わる古い &lt;code&gt;linuxaudiodev&lt;/code&gt; モジュールとの互換性のための歴史的な成果物です。</target>
        </trans-unit>
        <trans-unit id="7af185c96012df581e5e0886681b5f83b41d3210" translate="yes" xml:space="preserve">
          <source>Note there are performance considerations involved with the &lt;em&gt;size&lt;/em&gt; parameter. For optimal performance, it is usually best to use the arraysize attribute. If the &lt;em&gt;size&lt;/em&gt; parameter is used, then it is best for it to retain the same value from one &lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt;&lt;code&gt;fetchmany()&lt;/code&gt;&lt;/a&gt; call to the next.</source>
          <target state="translated">&lt;em&gt;size&lt;/em&gt;パラメータに関連するパフォーマンスの考慮事項があることに注意してください。最適なパフォーマンスを得るには、通常、arraysize属性を使用するのが最適です。場合は&lt;em&gt;サイズの&lt;/em&gt;パラメータが使用されている、それは1から同じ値を保持するために、それがベストです&lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt; &lt;code&gt;fetchmany()&lt;/code&gt; &lt;/a&gt;の次の呼び出し。</target>
        </trans-unit>
        <trans-unit id="4fe587f2f04237cccac255c57a5d7d8af7041796" translate="yes" xml:space="preserve">
          <source>Note, however, that it&amp;rsquo;s not recommended from a security perspective to spit out diagnostics to any old user; ideally, you should have to do something special to enable diagnostic output, which is why the default implementation doesn&amp;rsquo;t include any.</source>
          <target state="translated">ただし、セキュリティの観点から、診断を古いユーザーに送信することはお勧めしません。理想的には、診断出力を有効にするために特別なことをする必要があります。これがデフォルトの実装に何も含まれていない理由です。</target>
        </trans-unit>
        <trans-unit id="762ab7548d9281c2411acf4c20182504bff18c33" translate="yes" xml:space="preserve">
          <source>Note, that the data read is buffered in memory, so do not use this method if the data size is large or unlimited.</source>
          <target state="translated">なお、読み込んだデータはメモリ内にバッファリングされるので、データサイズが大きい場合や無制限の場合はこの方法は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="88aebce2f9074a5fa8e2b3fc150edc9adfd4b5a6" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;default&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt; unless explicitly set to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">明示的に&lt;em&gt;0&lt;/em&gt;に設定しない限り、&lt;em&gt;デフォルト&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; になり&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1bc85960916ca65e7a3c8ddd82bfd13d344d14f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;elem&lt;/em&gt; argument to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt; methods may be a set. To support searching for an equivalent frozenset, a temporary one is created from &lt;em&gt;elem&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#frozenset.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;メソッドへの&lt;em&gt;elem&lt;/em&gt;引数は、セットである場合があることに注意してください。同等のfrozensetの検索をサポートするために、&lt;em&gt;elem&lt;/em&gt;から一時的なものが作成され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20c05024379c7080e1a1d19313a4b57c40b19b31" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;elem&lt;/em&gt; argument to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt; methods may be a set. To support searching for an equivalent frozenset, a temporary one is created from &lt;em&gt;elem&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#frozenset.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;elem&lt;/em&gt;引数が設定されている場合があることに注意してください。同等のfrozensetの検索をサポートするために、&lt;em&gt;elem&lt;/em&gt;から一時的なものが作成され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ce50e6ce36b2bce4757cdba44683aef09df0f6a" translate="yes" xml:space="preserve">
          <source>Note, the iteration order of a &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap()&lt;/code&gt;&lt;/a&gt; is determined by scanning the mappings last to first:</source>
          <target state="translated">&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap()&lt;/code&gt; &lt;/a&gt;の反復順序は、マッピングを最後から最初にスキャンすることによって決定されます。</target>
        </trans-unit>
        <trans-unit id="ca3dedf0fa71983b6357e6e9bae7d93a1fd17b41" translate="yes" xml:space="preserve">
          <source>Note, the non-operator versions of &lt;a href=&quot;#frozenset.union&quot;&gt;&lt;code&gt;union()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.intersection&quot;&gt;&lt;code&gt;intersection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.difference&quot;&gt;&lt;code&gt;difference()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.symmetric_difference&quot;&gt;&lt;code&gt;symmetric_difference()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.issubset&quot;&gt;&lt;code&gt;issubset()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.issuperset&quot;&gt;&lt;code&gt;issuperset()&lt;/code&gt;&lt;/a&gt; methods will accept any iterable as an argument. In contrast, their operator based counterparts require their arguments to be sets. This precludes error-prone constructions like &lt;code&gt;set('abc') &amp;amp; 'cbs'&lt;/code&gt; in favor of the more readable &lt;code&gt;set('abc').intersection('cbs')&lt;/code&gt;.</source>
          <target state="translated">オペレーター以外のバージョンの&lt;a href=&quot;#frozenset.union&quot;&gt; &lt;code&gt;union()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.intersection&quot;&gt; &lt;code&gt;intersection()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.difference&quot;&gt; &lt;code&gt;difference()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#frozenset.symmetric_difference&quot;&gt; &lt;code&gt;symmetric_difference()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.issubset&quot;&gt; &lt;code&gt;issubset()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#frozenset.issuperset&quot;&gt; &lt;code&gt;issuperset()&lt;/code&gt; &lt;/a&gt;メソッドは、任意の反復可能オブジェクトを引数として受け入れます。対照的に、それらの演算子ベースの対応物は、引数をセットにする必要があります。これにより、 &lt;code&gt;set('abc') &amp;amp; 'cbs'&lt;/code&gt; などのエラーが発生しやすい構造が排除され、より読みやすい &lt;code&gt;set('abc').intersection('cbs')&lt;/code&gt; が優先されます。</target>
        </trans-unit>
        <trans-unit id="051512041c44a2517e704de51f5530d92cd85cdd" translate="yes" xml:space="preserve">
          <source>Note, the non-operator versions of the &lt;a href=&quot;#frozenset.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.intersection_update&quot;&gt;&lt;code&gt;intersection_update()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.difference_update&quot;&gt;&lt;code&gt;difference_update()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.symmetric_difference_update&quot;&gt;&lt;code&gt;symmetric_difference_update()&lt;/code&gt;&lt;/a&gt; methods will accept any iterable as an argument.</source>
          <target state="translated">オペレーター以外のバージョンの&lt;a href=&quot;#frozenset.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.intersection_update&quot;&gt; &lt;code&gt;intersection_update()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#frozenset.difference_update&quot;&gt; &lt;code&gt;difference_update()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#frozenset.symmetric_difference_update&quot;&gt; &lt;code&gt;symmetric_difference_update()&lt;/code&gt; &lt;/a&gt;メソッドは、反復可能オブジェクトを引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="06c6acd1a7b124604a708af0e14a30f685c53d1e" translate="yes" xml:space="preserve">
          <source>Note, this decorator interferes with the operation of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0412&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 412&lt;/strong&gt;&lt;/a&gt; key-sharing dictionaries. This means that instance dictionaries can take more space than usual.</source>
          <target state="translated">このデコレータは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0412&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP412&lt;/strong&gt;&lt;/a&gt;キー共有辞書の操作を妨げることに注意してください。これは、インスタンスディクショナリが通常よりも多くのスペースを占める可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="112b3520cc7fea120e7deb94779035341ecfd7d1" translate="yes" xml:space="preserve">
          <source>Note, this member of the toolkit may require significant auxiliary storage (depending on the length of the iterable).</source>
          <target state="translated">ツールキットのこのメンバーは、かなりの補助的なストレージが必要になることに注意してください(イテレータブルの長さによっては)。</target>
        </trans-unit>
        <trans-unit id="13a1e86095e2b68b8a7fa1905437c2cc90128cdc" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;#socket.gethostname&quot;&gt;&lt;code&gt;gethostname()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t always return the fully qualified domain name; use &lt;a href=&quot;#socket.getfqdn&quot;&gt;&lt;code&gt;getfqdn()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">注：&lt;a href=&quot;#socket.gethostname&quot;&gt; &lt;code&gt;gethostname()&lt;/code&gt; &lt;/a&gt;は常に完全修飾ドメイン名を返すとは限りません。そのためには&lt;a href=&quot;#socket.getfqdn&quot;&gt; &lt;code&gt;getfqdn()&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="940b0549d5a0a4041429b4eecbc4dbeb233620a3" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;The policy keyword should always be specified&lt;/strong&gt;; The default will change to &lt;a href=&quot;email.policy#email.policy.default&quot;&gt;&lt;code&gt;email.policy.default&lt;/code&gt;&lt;/a&gt; in a future version of Python.</source>
          <target state="translated">注：&lt;strong&gt;policyキーワードは常に指定する必要があります&lt;/strong&gt;。Pythonの将来のバージョンでは、デフォルトが&lt;a href=&quot;email.policy#email.policy.default&quot;&gt; &lt;code&gt;email.policy.default&lt;/code&gt; &lt;/a&gt;に変更されます。</target>
        </trans-unit>
        <trans-unit id="e2cbdd7a2167c420ef2fe1b094a5250391cb7403" translate="yes" xml:space="preserve">
          <source>Note: If you just want to pass a pointer to an object to a foreign function call, you should use &lt;code&gt;byref(obj)&lt;/code&gt; which is much faster.</source>
          <target state="translated">注：オブジェクトへのポインタを外部関数呼び出しに渡すだけの場合は、より高速な &lt;code&gt;byref(obj)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="77e52fe2400941c708aa213fb2c6d50d40a1c8b9" translate="yes" xml:space="preserve">
          <source>Note: Some code samples reference the ctypes &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt; type. On platforms where &lt;code&gt;sizeof(long) == sizeof(int)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt;. So, you should not be confused if &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt; is printed if you would expect &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt; &amp;mdash; they are actually the same type.</source>
          <target state="translated">注：一部のコードサンプルは、ctypes &lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;型を参照しています。 &lt;code&gt;sizeof(long) == sizeof(int)&lt;/code&gt; プラットフォームでは、これは&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; の&lt;/a&gt;エイリアスです。であれば、あなたは混同してはならない&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; のは、&lt;/a&gt;あなたが期待する場合には印刷され&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; のを&lt;/a&gt; -彼らは実際には同じタイプです。</target>
        </trans-unit>
        <trans-unit id="3e0eb9ee31e1587e739522fcda6c31ae3034a95a" translate="yes" xml:space="preserve">
          <source>Note: The code samples in this tutorial use &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; to make sure that they actually work. Since some code samples behave differently under Linux, Windows, or Mac OS X, they contain doctest directives in comments.</source>
          <target state="translated">注：このチュートリアルのコードサンプルでは、&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;を使用して、実際に機能することを確認しています。Linux、Windows、またはMac OS Xでは一部のコードサンプルの動作が異なるため、コメントにdoctestディレクティブが含まれています。</target>
        </trans-unit>
        <trans-unit id="953b3d8abb71583778699e086e9ed766999d86c8" translate="yes" xml:space="preserve">
          <source>Note: The functions do not require the data given to them to be sorted. However, for reading convenience, most of the examples show sorted sequences.</source>
          <target state="translated">注意:これらの関数は,与えられたデータがソートされている必要はありません.しかし,読みやすくするために,ほとんどの例ではソートされたシーケンスを示しています.</target>
        </trans-unit>
        <trans-unit id="a1c53c3229edec4d12d1c96e481f3cb1be441c54" translate="yes" xml:space="preserve">
          <source>Note: an awakened thread does not actually return from its &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; call until it can reacquire the lock. Since &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; does not release the lock, its caller should.</source>
          <target state="translated">注：呼び起こされたスレッドは、ロックを再取得できるまで、実際には&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;呼び出しから戻りません。&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;はロックを解放しないため、呼び出し元は解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a990121c7b5c3a78884ba5ed2602b8ed6c392e4" translate="yes" xml:space="preserve">
          <source>Note: if your enumeration defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then whatever value(s) were given to the enum member will be passed into those methods. See &lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt; for an example.</source>
          <target state="translated">注：列挙型が&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;定義している場合、列挙型メンバーに指定された値はすべてそれらのメソッドに渡されます。例については、&lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="98eb683dd61fdd0bb9d904a6f22ab048a5a0792e" translate="yes" xml:space="preserve">
          <source>Note: if your enumeration defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then any value(s) given to the enum member will be passed into those methods. See &lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt; for an example.</source>
          <target state="translated">注：列挙型で&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;および/または&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;定義されている場合、列挙型メンバーに指定された値はすべてこれらのメソッドに渡されます。例については、&lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="17bfb70d8bc59b6a601bb652e3e1e16fb71419ac" translate="yes" xml:space="preserve">
          <source>Note: loop may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">注：loopは &lt;code&gt;None&lt;/code&gt; の場合があります。</target>
        </trans-unit>
        <trans-unit id="dcbf716e0a93fc3a46f989b0950001ff549cbbb0" translate="yes" xml:space="preserve">
          <source>Note: the &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; methods don&amp;rsquo;t release the lock; this means that the thread or threads awakened will not return from their &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; call immediately, but only when the thread that called &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; finally relinquishes ownership of the lock.</source>
          <target state="translated">注：&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;メソッドはロックを解放しません。つまり、&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;たスレッドは、&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;呼び出しからすぐに戻るのではなく、&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;またはnotify_all（）を呼び出したスレッドが最終的にロックの所有権を放棄したときにのみ戻ります。</target>
        </trans-unit>
        <trans-unit id="20fdf933b6a8eed945310d963fa5e36f40c7100f" translate="yes" xml:space="preserve">
          <source>Note: this function may not be able to retrieve all attributes that getattr can fetch (like dynamically created attributes) and may find attributes that getattr can&amp;rsquo;t (like descriptors that raise AttributeError). It can also return descriptors objects instead of instance members.</source>
          <target state="translated">注：この関数は、getattrがフェッチできるすべての属性（動的に作成された属性など）を取得できない場合があり、getattrが取得できない属性（AttributeErrorを発生させる記述子など）を見つける場合があります。インスタンスメンバーの代わりに記述子オブジェクトを返すこともできます。</target>
        </trans-unit>
        <trans-unit id="cbe152fdfb8ac8116096c5833a5da72fe28dcdf6" translate="yes" xml:space="preserve">
          <source>Notebook</source>
          <target state="translated">Notebook</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="bd2179fffb660660b08dc66587d54c4693ebd949" translate="yes" xml:space="preserve">
          <source>Notes for type implementors</source>
          <target state="translated">型の実装者に関する注意事項</target>
        </trans-unit>
        <trans-unit id="7d429a334eb57d5c3e2b4354221adcdf790abbaa" translate="yes" xml:space="preserve">
          <source>Notes on Maildir by its inventor. Includes an updated name-creation scheme and details on &amp;ldquo;info&amp;rdquo; semantics.</source>
          <target state="translated">発明者によるMaildirに関するメモ。更新された名前作成スキームと「情報」セマンティクスの詳細が含まれています。</target>
        </trans-unit>
        <trans-unit id="39979ab954b5d6a8f0a293f5c81ebd913e2a234b" translate="yes" xml:space="preserve">
          <source>Notes on Reproducibility</source>
          <target state="translated">再現性に関する注意事項</target>
        </trans-unit>
        <trans-unit id="994bfa04566317a983e1a93b7ff9716e4f306af7" translate="yes" xml:space="preserve">
          <source>Notes on availability</source>
          <target state="translated">アベイラビリティに関する注意事項</target>
        </trans-unit>
        <trans-unit id="96ea6c9601efc087de48baaaf665d4181463804b" translate="yes" xml:space="preserve">
          <source>Notes on non-blocking sockets</source>
          <target state="translated">ノンブロッキングソケットに関する注意事項</target>
        </trans-unit>
        <trans-unit id="3529fba1dfaa4d96d92ade4092c1a3d7d76cb625" translate="yes" xml:space="preserve">
          <source>Notes on socket timeouts</source>
          <target state="translated">ソケットのタイムアウトに関する注意事項</target>
        </trans-unit>
        <trans-unit id="4183ad6f00d027788e1933ebd67bd6184f44f2f1" translate="yes" xml:space="preserve">
          <source>Notes on the availability of these functions:</source>
          <target state="translated">これらの機能を利用できるかどうかの注意点</target>
        </trans-unit>
        <trans-unit id="4ab3dde9df12858e1f1d64a466b42281fd1c43e0" translate="yes" xml:space="preserve">
          <source>Notes on using &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.abc.MutableSet&quot;&gt;&lt;code&gt;MutableSet&lt;/code&gt;&lt;/a&gt; as a mixin:</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#collections.abc.MutableSet&quot;&gt; &lt;code&gt;MutableSet&lt;/code&gt; &lt;/a&gt;をミックスインとして使用する場合の注意：</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="2174435297546a50c24c84751b2ef81fc8fb5831" translate="yes" xml:space="preserve">
          <source>Notes: (1) For most applications the only &lt;em&gt;preferencelist&lt;/em&gt; combinations that really make sense are &lt;code&gt;('plain',)&lt;/code&gt;, &lt;code&gt;('html', 'plain')&lt;/code&gt;, and the default &lt;code&gt;('related', 'html', 'plain')&lt;/code&gt;. (2) Because matching starts with the object on which &lt;code&gt;get_body&lt;/code&gt; is called, calling &lt;code&gt;get_body&lt;/code&gt; on a &lt;code&gt;multipart/related&lt;/code&gt; will return the object itself unless &lt;em&gt;preferencelist&lt;/em&gt; has a non-default value. (3) Messages (or message parts) that do not specify a &lt;em&gt;Content-Type&lt;/em&gt; or whose &lt;em&gt;Content-Type&lt;/em&gt; header is invalid will be treated as if they are of type &lt;code&gt;text/plain&lt;/code&gt;, which may occasionally cause &lt;code&gt;get_body&lt;/code&gt; to return unexpected results.</source>
          <target state="translated">注：（1）ほとんどのアプリケーションで、本当に意味のある&lt;em&gt;優先リストの&lt;/em&gt;組み合わせは &lt;code&gt;('plain',)&lt;/code&gt; 、 &lt;code&gt;('html', 'plain')&lt;/code&gt; とデフォルト &lt;code&gt;('related', 'html', 'plain')&lt;/code&gt; 。 （2）のでているオブジェクトとのマッチングを開始 &lt;code&gt;get_body&lt;/code&gt; 呼び出し、呼び出され &lt;code&gt;get_body&lt;/code&gt; の上に &lt;code&gt;multipart/related&lt;/code&gt; ない限り、オブジェクト自体が返され&lt;em&gt;preferencelistは、&lt;/em&gt;デフォルト以外の値を有します。 （3）&lt;em&gt;Content-Typeが&lt;/em&gt;指定されていない、または&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーが無効なメッセージ（またはメッセージパーツ）は、タイプが &lt;code&gt;text/plain&lt;/code&gt; であるかのように扱われます。それは時々引き起こすかもしれません &lt;code&gt;get_body&lt;/code&gt; 予期しない結果を返すget_body。</target>
        </trans-unit>
        <trans-unit id="409919d20a4d8cdab37ba3de46d6036e52228eae" translate="yes" xml:space="preserve">
          <source>Nothing is specified in this locale.</source>
          <target state="translated">このロケールには何も指定されていません。</target>
        </trans-unit>
        <trans-unit id="f5c76d766938924c4560f425f6d8538403d340e8" translate="yes" xml:space="preserve">
          <source>Notice here how we wanted the &lt;em&gt;Subject&lt;/em&gt; field to contain a non-ASCII character? We did this by creating a &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instance and passing in the character set that the byte string was encoded in. When the subsequent &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance was flattened, the &lt;em&gt;Subject&lt;/em&gt; field was properly &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded. MIME-aware mail readers would show this header using the embedded ISO-8859-1 character.</source>
          <target state="translated">ここで、[ &lt;em&gt;件名]&lt;/em&gt;フィールドに非ASCII文字を含める方法に注意してください。これを行うには、&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスを作成し、バイト文字列がエンコードされた文字セットを渡します。後続の&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;インスタンスがフラット化されると、&lt;em&gt;Subject&lt;/em&gt;フィールドは適切に&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;エンコードされました。MIME対応のメールリーダーは、埋め込まれたISO-8859-1文字を使用してこのヘッダーを表示します。</target>
        </trans-unit>
        <trans-unit id="30aaa667ceadb867eac4109ef078332b809dce4f" translate="yes" xml:space="preserve">
          <source>Notice how the widget field of the event is being accessed in the &lt;code&gt;turn_red()&lt;/code&gt; callback. This field contains the widget that caught the X event. The following table lists the other event fields you can access, and how they are denoted in Tk, which can be useful when referring to the Tk man pages.</source>
          <target state="translated">イベントのウィジェットフィールドが &lt;code&gt;turn_red()&lt;/code&gt; コールバックでアクセスされていることに注意してください。このフィールドには、Xイベントをキャッチしたウィジェットが含まれます。次の表は、アクセスできる他のイベントフィールドと、それらがTkでどのように示されるかを示しています。これは、Tkのマニュアルページを参照するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="96b9beb737cf3231c7449d825ff3410688086c28" translate="yes" xml:space="preserve">
          <source>Notice that applying &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; to a proxy will return the representation of the referent, whereas applying &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; will return the representation of the proxy.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;をプロキシに適用すると&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;の表現が返され、repr（）を適用するとプロキシの表現が返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="aa30b318f59f62feb7be7cc735b127ba14e6692b" translate="yes" xml:space="preserve">
          <source>Notice that no typechecking is performed when assigning a value of type &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; to a more precise type. For example, the static type checker did not report an error when assigning &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; even though &lt;code&gt;s&lt;/code&gt; was declared to be of type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and receives an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; value at runtime!</source>
          <target state="translated">&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;型の値をより正確な型に割り当てる場合、型チェックは実行されないことに注意してください。たとえば、 &lt;code&gt;s&lt;/code&gt; が&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;型であると宣言され、実行時に&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;値を受け取ったとしても、静的型チェッカーは &lt;code&gt;s&lt;/code&gt; に &lt;code&gt;a&lt;/code&gt; を割り当てるときにエラーを報告しませんでした！</target>
        </trans-unit>
        <trans-unit id="376b3de67409d19233b0e4907b9f553ccc115c20" translate="yes" xml:space="preserve">
          <source>Notice that on Windows, it&amp;rsquo;s a much smaller set.</source>
          <target state="translated">Windowsでは、これははるかに小さいセットであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2cf0b6869f1edb55f90d57ea0a5832b1aa4e18b8" translate="yes" xml:space="preserve">
          <source>Notice that the behavior of this module depends on the actual implementation of the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine in the running system. Therefore, any extensions available on the current implementation will also be available on this module.</source>
          <target state="translated">このモジュールの動作は、実行中のシステムでの&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;ルーチンの実際の実装に依存することに注意してください。したがって、現在の実装で利用可能な拡張機能は、このモジュールでも利用できます。</target>
        </trans-unit>
        <trans-unit id="5c0c4d04cc2d3987360c07fbe4eeb4ed6e5e1e21" translate="yes" xml:space="preserve">
          <source>Now add the Shape to the Screen&amp;rsquo;s shapelist and use it:</source>
          <target state="translated">次に、ShapeをScreenのシェイプリストに追加して使用します。</target>
        </trans-unit>
        <trans-unit id="0b5aed1a03f8c35d4b559d5f5099d36802ea5696" translate="yes" xml:space="preserve">
          <source>Now that we have created and saved a configuration file, let&amp;rsquo;s read it back and explore the data it holds.</source>
          <target state="translated">構成ファイルを作成して保存したので、それを読み戻して、保持しているデータを調べてみましょう。</target>
        </trans-unit>
        <trans-unit id="62f8769fc4f592eaaff3b60938b72976e8a63ca6" translate="yes" xml:space="preserve">
          <source>Now the SSL channel is established and the certificate verified, you can proceed to talk with the server:</source>
          <target state="translated">これでSSLチャネルが確立され、証明書が検証されたので、サーバーとの会話に進むことができます。</target>
        </trans-unit>
        <trans-unit id="31924ee76d82b9e37715f009e523c241db6e0226" translate="yes" xml:space="preserve">
          <source>Now we can actually compare the two items and return a useful result:</source>
          <target state="translated">これで実際に2つの項目を比較して、有用な結果を返すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="f5eeebbc7cb554fdc7b5389ad448df86c1df182b" translate="yes" xml:space="preserve">
          <source>Now we plug &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;Row&lt;/code&gt;&lt;/a&gt; in:</source>
          <target state="translated">次に、&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;Row&lt;/code&gt; &lt;/a&gt;をプラグインします。</target>
        </trans-unit>
        <trans-unit id="8cb4116ac86e771beb460431be65c48158d5f51c" translate="yes" xml:space="preserve">
          <source>Now we want to test &lt;code&gt;some_function&lt;/code&gt; but we want to mock out &lt;code&gt;SomeClass&lt;/code&gt; using &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. The problem is that when we import module b, which we will have to do then it imports &lt;code&gt;SomeClass&lt;/code&gt; from module a. If we use &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; to mock out &lt;code&gt;a.SomeClass&lt;/code&gt; then it will have no effect on our test; module b already has a reference to the &lt;em&gt;real&lt;/em&gt;&lt;code&gt;SomeClass&lt;/code&gt; and it looks like our patching had no effect.</source>
          <target state="translated">次に、 &lt;code&gt;some_function&lt;/code&gt; をテストしますが、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;SomeClass&lt;/code&gt; をモックアウトします。問題は、モジュールbをインポートすると、モジュールa から &lt;code&gt;SomeClass&lt;/code&gt; がインポートされることです。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;a.SomeClass&lt;/code&gt; をモックアウトした場合、テストに影響はありません。モジュールbにはすでに&lt;em&gt;実際の&lt;/em&gt; &lt;code&gt;SomeClass&lt;/code&gt; への参照があり、パッチを当てても効果がなかったようです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1ed0c7c2d81859eda6b5cc833464eb0dd988f38" translate="yes" xml:space="preserve">
          <source>Now you need to make the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module know that what you select from the database is actually a point. There are two ways of doing this:</source>
          <target state="translated">次に、&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールに、データベースから選択したものがポイントであることを知らせる必要があります。これには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="d29ec33880afd873623e441fe4abecf453440c79" translate="yes" xml:space="preserve">
          <source>Now you want to store the point in a single SQLite column. First you&amp;rsquo;ll have to choose one of the supported types first to be used for representing the point. Let&amp;rsquo;s just use str and separate the coordinates using a semicolon. Then you need to give your class a method &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; which must return the converted value. The parameter &lt;em&gt;protocol&lt;/em&gt; will be &lt;code&gt;PrepareProtocol&lt;/code&gt;.</source>
          <target state="translated">次に、ポイントを単一のSQLite列に格納します。最初に、ポイントを表すために使用するサポートされているタイプの1つを最初に選択する必要があります。strを使用し、セミコロンを使用して座標を区切りましょう。次に、変換された値を返す必要のあるメソッド &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; をクラスに与える必要があります。パラメータ&lt;em&gt;protocol&lt;/em&gt;は &lt;code&gt;PrepareProtocol&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="2804678e12fe962caee888447dd00ac076fe71ea" translate="yes" xml:space="preserve">
          <source>Now you want to store the point in a single SQLite column. First you&amp;rsquo;ll have to choose one of the supported types to be used for representing the point. Let&amp;rsquo;s just use str and separate the coordinates using a semicolon. Then you need to give your class a method &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; which must return the converted value. The parameter &lt;em&gt;protocol&lt;/em&gt; will be &lt;code&gt;PrepareProtocol&lt;/code&gt;.</source>
          <target state="translated">ここで、ポイントを単一のSQLite列に格納します。まず、ポイントを表すために使用するサポートされているタイプの1つを選択する必要があります。strを使用し、セミコロンを使用して座標を区切ります。次に、変換された値を返す必要があるメソッド &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; をクラスに与える必要があります。パラメータ&lt;em&gt;プロトコル&lt;/em&gt;は &lt;code&gt;PrepareProtocol&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b6befe568a0abd7fa9cb859e17c6a8a729ffcf6a" translate="yes" xml:space="preserve">
          <source>Null-terminated string containing references to environment variables (&lt;code&gt;%PATH%&lt;/code&gt;).</source>
          <target state="translated">環境変数への参照を含むヌル終了文字列（ &lt;code&gt;%PATH%&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="19a9339a57b70f4cc49edd3bf00a059e1a50c395" translate="yes" xml:space="preserve">
          <source>NullHandler</source>
          <target state="translated">NullHandler</target>
        </trans-unit>
        <trans-unit id="fe1b2483239a18901875b04c1af675561eca1503" translate="yes" xml:space="preserve">
          <source>Number of 512-byte blocks allocated for file. This may be smaller than &lt;a href=&quot;#os.stat_result.st_size&quot;&gt;&lt;code&gt;st_size&lt;/code&gt;&lt;/a&gt;/512 when the file has holes.</source>
          <target state="translated">ファイルに割り当てられた512バイトブロックの数。ファイルに穴がある場合、これは&lt;a href=&quot;#os.stat_result.st_size&quot;&gt; &lt;code&gt;st_size&lt;/code&gt; &lt;/a&gt; / 512 より小さくなることがあります。</target>
        </trans-unit>
        <trans-unit id="9bd9aeb87537b2525d0c88b89b62a820757528d3" translate="yes" xml:space="preserve">
          <source>Number of days after password expires until account is disabled</source>
          <target state="translated">パスワードの有効期限が切れてからアカウントが無効になるまでの日数</target>
        </trans-unit>
        <trans-unit id="365942f74cce88224fdaf80b42555c03a1d840aa" translate="yes" xml:space="preserve">
          <source>Number of days before password expires to warn user about it</source>
          <target state="translated">ユーザーに警告するためのパスワードの有効期限の日数</target>
        </trans-unit>
        <trans-unit id="f1d107706720211290a9386c8812c2312f0e8823" translate="yes" xml:space="preserve">
          <source>Number of days since 1970-01-01 when account expires</source>
          <target state="translated">1970-01-01からアカウントの有効期限が切れた日数</target>
        </trans-unit>
        <trans-unit id="a9ee5a8328ef8d145926d62850a8557baa3d4537" translate="yes" xml:space="preserve">
          <source>Number of fractional digits used in international formatting of monetary values.</source>
          <target state="translated">貨幣価値の国際的なフォーマットで使用される端数桁数。</target>
        </trans-unit>
        <trans-unit id="57778df03c86eae3d7455ab3c46c4fdf052bfc73" translate="yes" xml:space="preserve">
          <source>Number of fractional digits used in local formatting of monetary values.</source>
          <target state="translated">貨幣価値のローカルフォーマットで使用される端数桁数。</target>
        </trans-unit>
        <trans-unit id="6c3cc540d70dfce9e01f95ffe47d1ef75ac135de" translate="yes" xml:space="preserve">
          <source>Number of hard links.</source>
          <target state="translated">ハードリンクの数。</target>
        </trans-unit>
        <trans-unit id="c971530ee281315f241b2dd1d6ecd30f91644cee" translate="yes" xml:space="preserve">
          <source>Number of items allowed in the queue.</source>
          <target state="translated">キューで許可されているアイテムの数。</target>
        </trans-unit>
        <trans-unit id="a932b86c0474eba5db591ae5f5240a50c1458767" translate="yes" xml:space="preserve">
          <source>Number of links to the inode.</source>
          <target state="translated">inodeへのリンク数。</target>
        </trans-unit>
        <trans-unit id="4bc5edcccc10a3e8720986ec609357b1e21973dc" translate="yes" xml:space="preserve">
          <source>Number of memory blocks (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">メモリブロックの数（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4cac858ebc148236e0b1217a291cec1302b7e513" translate="yes" xml:space="preserve">
          <source>Number of memory blocks in the new snapshot (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been released in the new snapshot.</source>
          <target state="translated">新しいスナップショットのメモリブロック数（ &lt;code&gt;int&lt;/code&gt; ）：新しいスナップショットでメモリブロックが解放されている場合は &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7bc75d07118ba1efb51d5f92550d75df2499753" translate="yes" xml:space="preserve">
          <source>Number-theoretic and representation functions</source>
          <target state="translated">数論的関数と表現関数</target>
        </trans-unit>
        <trans-unit id="27268cbddf6ca05f823a05275d4b43b80d3a4bb3" translate="yes" xml:space="preserve">
          <source>Number. This is the same as &lt;code&gt;'d'&lt;/code&gt;, except that it uses the current locale setting to insert the appropriate number separator characters.</source>
          <target state="translated">数。これは、現在のロケール設定を使用して適切な数字区切り文字を挿入することを除いて、 &lt;code&gt;'d'&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="2247bb12f37411302dec8137671e6f42f4c568a3" translate="yes" xml:space="preserve">
          <source>Number. This is the same as &lt;code&gt;'g'&lt;/code&gt;, except that it uses the current locale setting to insert the appropriate number separator characters.</source>
          <target state="translated">数。これは、現在のロケール設定を使用して適切な数字区切り文字を挿入することを除いて、 &lt;code&gt;'g'&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="29ab7f8b0894602500582c7973038069b78c9eaf" translate="yes" xml:space="preserve">
          <source>Numbers are created by numeric literals or as the result of built-in functions and operators. Unadorned integer literals (including hex, octal and binary numbers) yield integers. Numeric literals containing a decimal point or an exponent sign yield floating point numbers. Appending &lt;code&gt;'j'&lt;/code&gt; or &lt;code&gt;'J'&lt;/code&gt; to a numeric literal yields an imaginary number (a complex number with a zero real part) which you can add to an integer or float to get a complex number with real and imaginary parts.</source>
          <target state="translated">数値は、数値リテラルによって、または組み込み関数と演算子の結果として作成されます。装飾されていない整数リテラル（16進数、8進数、2進数を含む）は整数になります。小数点または指数記号を含む数値リテラルは、浮動小数点数を生成します。追加 &lt;code&gt;'j'&lt;/code&gt; または &lt;code&gt;'J'&lt;/code&gt; 使用すると、実部と虚部と複素数を取得するには、整数または浮動小数点数に追加することができ虚数（ゼロ実数部を持つ複素数）は、数値リテラル利回りに。</target>
        </trans-unit>
        <trans-unit id="9524713edf06bad44da0de5f83160b3103bf5ebf" translate="yes" xml:space="preserve">
          <source>Numbers of the form &lt;code&gt;I/2.**J&lt;/code&gt; are safe across all platforms, and I often contrive doctest examples to produce numbers of that form:</source>
          <target state="translated">&lt;code&gt;I/2.**J&lt;/code&gt; という形式の数値はすべてのプラットフォームで安全であり、その形式の数値を生成するためにdoctestの例をよく考えています。</target>
        </trans-unit>
        <trans-unit id="ae5a0b6b4520823e7613d9501888e3d11e368899" translate="yes" xml:space="preserve">
          <source>Numerator of the Fraction in lowest term.</source>
          <target state="translated">最下位項の分数の分子。</target>
        </trans-unit>
        <trans-unit id="fe7c15f08e26c4968f404fff756bea4c29d294be" translate="yes" xml:space="preserve">
          <source>Numeric &amp;amp; Mathematical</source>
          <target state="translated">数値と数学</target>
        </trans-unit>
        <trans-unit id="9d18068578c94f717e14cf6e56443bc9d65ccc00" translate="yes" xml:space="preserve">
          <source>Numeric Types &amp;mdash; &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;complex&lt;/code&gt;</source>
          <target state="translated">数値型&amp;mdash; &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;complex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0376c4852e68845ab3978d24b24f0cc35e578a" translate="yes" xml:space="preserve">
          <source>Numeric Types &amp;mdash; int, float, complex</source>
          <target state="translated">数値型&amp;mdash; int、float、complex</target>
        </trans-unit>
        <trans-unit id="77321ffd329dae8a0e37ae9894a49ded0d830d86" translate="yes" xml:space="preserve">
          <source>Numeric and Mathematical Modules</source>
          <target state="translated">数値・数学モジュール</target>
        </trans-unit>
        <trans-unit id="bd54554f02877d81fe4bebfe90fa1408d8cb1959" translate="yes" xml:space="preserve">
          <source>Numeric code specifying the problem. This value can be passed to the &lt;a href=&quot;#xml.parsers.expat.ErrorString&quot;&gt;&lt;code&gt;ErrorString()&lt;/code&gt;&lt;/a&gt; function, or compared to one of the constants defined in the &lt;code&gt;errors&lt;/code&gt; object.</source>
          <target state="translated">問題を特定する数値コード。この値は、&lt;a href=&quot;#xml.parsers.expat.ErrorString&quot;&gt; &lt;code&gt;ErrorString()&lt;/code&gt; &lt;/a&gt;関数に渡すか、 &lt;code&gt;errors&lt;/code&gt; オブジェクトで定義されている定数の1つと比較できます。</target>
        </trans-unit>
        <trans-unit id="545ad8b75c0d30c78850cca48b34174137396861" translate="yes" xml:space="preserve">
          <source>Numeric conversion methods: &lt;code&gt;__complex__&lt;/code&gt;, &lt;code&gt;__int__&lt;/code&gt;, &lt;code&gt;__float__&lt;/code&gt; and &lt;code&gt;__index__&lt;/code&gt;</source>
          <target state="translated">数値変換メソッド： &lt;code&gt;__complex__&lt;/code&gt; 、 &lt;code&gt;__int__&lt;/code&gt; 、 &lt;code&gt;__float__&lt;/code&gt; および &lt;code&gt;__index__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="871490f5f5a5ca6fd724e46e5e1c4d2eb2c25301" translate="yes" xml:space="preserve">
          <source>Numeric logging level for the message (&lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;CRITICAL&lt;/code&gt;).</source>
          <target state="translated">メッセージの数値ログレベル（ &lt;code&gt;DEBUG&lt;/code&gt; 、 &lt;code&gt;INFO&lt;/code&gt; 、 &lt;code&gt;WARNING&lt;/code&gt; 、 &lt;code&gt;ERROR&lt;/code&gt; 、 &lt;code&gt;CRITICAL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3bd50801aaae4c7a3a8229dfe2023c97d0cb617c" translate="yes" xml:space="preserve">
          <source>Numeric value</source>
          <target state="translated">数値</target>
        </trans-unit>
        <trans-unit id="b8563a86b2e247948408ea7ca2751b301105c385" translate="yes" xml:space="preserve">
          <source>Numerical group ID</source>
          <target state="translated">数値グループID</target>
        </trans-unit>
        <trans-unit id="d6feb6b63e4e9dedb1044129659dca2566b3a4d5" translate="yes" xml:space="preserve">
          <source>Numerical overflow.</source>
          <target state="translated">数値オーバーフロー。</target>
        </trans-unit>
        <trans-unit id="504a627804ef772d9d97c9da6cc14b33a6e1fd94" translate="yes" xml:space="preserve">
          <source>Numerical underflow with result rounded to zero.</source>
          <target state="translated">結果がゼロに丸められた数値アンダーフロー</target>
        </trans-unit>
        <trans-unit id="dae105dbfe6ba9515db517e2c22306eaf168a3ed" translate="yes" xml:space="preserve">
          <source>Numerical user ID</source>
          <target state="translated">数値ユーザID</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="b8e649f839ee53ebcae7841aed5eddf9904a43fd" translate="yes" xml:space="preserve">
          <source>O flag</source>
          <target state="translated">オーフラグ</target>
        </trans-unit>
        <trans-unit id="2081f9b4215b950149c134904322caba1359a7a3" translate="yes" xml:space="preserve">
          <source>OS exceptions</source>
          <target state="translated">OSの例外</target>
        </trans-unit>
        <trans-unit id="495dc72791fecbe14725db696ffa42ad8b5edf3d" translate="yes" xml:space="preserve">
          <source>OSError</source>
          <target state="translated">OSError</target>
        </trans-unit>
        <trans-unit id="70bc67f09c2b2fce50ddd07b8816ca72d8245a13" translate="yes" xml:space="preserve">
          <source>OSError.errno</source>
          <target state="translated">OSError.errno</target>
        </trans-unit>
        <trans-unit id="6b00a948ec3f45fe825b1d53b803425a17d2bac9" translate="yes" xml:space="preserve">
          <source>OSError.filename</source>
          <target state="translated">OSError.filename</target>
        </trans-unit>
        <trans-unit id="87b0b664ad8163e07f5f101b197e001d4dadefba" translate="yes" xml:space="preserve">
          <source>OSError.filename2</source>
          <target state="translated">OSError.filename2</target>
        </trans-unit>
        <trans-unit id="1d64b19f5dacbeca7d89e999fabefa0257b25308" translate="yes" xml:space="preserve">
          <source>OSError.strerror</source>
          <target state="translated">OSError.strerror</target>
        </trans-unit>
        <trans-unit id="1252f72b16eb4033e6a82e45191bc3fa864d0cf2" translate="yes" xml:space="preserve">
          <source>OSError.winerror</source>
          <target state="translated">OSError.winerror</target>
        </trans-unit>
        <trans-unit id="fec57e31aba99aafb11659a650fe7e717b5c39f8" translate="yes" xml:space="preserve">
          <source>Object connections</source>
          <target state="translated">オブジェクト接続</target>
        </trans-unit>
        <trans-unit id="ba195d654d6092a3e9da8ddd541dd8c15779615b" translate="yes" xml:space="preserve">
          <source>Object is remote</source>
          <target state="translated">オブジェクトはリモート</target>
        </trans-unit>
        <trans-unit id="59b64b94151b6c193b42629c8e0da5f27de1d3fe" translate="yes" xml:space="preserve">
          <source>Object serialization used by &lt;a href=&quot;#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; で&lt;/a&gt;使用されるオブジェクトのシリアル化。</target>
        </trans-unit>
        <trans-unit id="94492e219ece2be2aab3f164513645039f660bea" translate="yes" xml:space="preserve">
          <source>Object that is equal to anything. Used to test mixed type comparison.</source>
          <target state="translated">何でも等しくなるオブジェクト。混合型比較のテストに使用します。</target>
        </trans-unit>
        <trans-unit id="f503d8f51f7ba310bf7f45e5162a8633bb6e9f0e" translate="yes" xml:space="preserve">
          <source>Object that is greater than anything (except itself). Used to test mixed type comparison.</source>
          <target state="translated">何よりも大きい(それ自身を除く)オブジェクト。混合型比較のテストに使用します。</target>
        </trans-unit>
        <trans-unit id="f0cd36b2dc674025e7e6b6873e4676f84304e54a" translate="yes" xml:space="preserve">
          <source>Object that is less than anything (except itself). Used to test mixed type comparison.</source>
          <target state="translated">何よりも小さい(それ自身を除く)オブジェクト。混合型比較のテストに使用します。</target>
        </trans-unit>
        <trans-unit id="991224c72c842ab8ac1d85e688f924bd993632e3" translate="yes" xml:space="preserve">
          <source>Object that is not equal to anything (even to &lt;a href=&quot;#test.support.ALWAYS_EQ&quot;&gt;&lt;code&gt;ALWAYS_EQ&lt;/code&gt;&lt;/a&gt;). Used to test mixed type comparison.</source>
          <target state="translated">何にも等しくないオブジェクト（&lt;a href=&quot;#test.support.ALWAYS_EQ&quot;&gt; &lt;code&gt;ALWAYS_EQ&lt;/code&gt; にさえ&lt;/a&gt;）。混合タイプの比較をテストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="723f3e7fedc35db64092babeaa58ef63cd3624a6" translate="yes" xml:space="preserve">
          <source>Object that when printed, prints the message &amp;ldquo;Type license() to see the full license text&amp;rdquo;, and when called, displays the full license text in a pager-like fashion (one screen at a time).</source>
          <target state="translated">印刷されると、「ライセンスを入力して完全なライセンステキストを表示してください」というメッセージを印刷し、呼び出されると、ポケットベルのような方法で（一度に1画面ずつ）完全なライセンステキストを表示するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6f46d65c8d10b203bddd0e21c7c84db68306a018" translate="yes" xml:space="preserve">
          <source>Object which represents an entire document.</source>
          <target state="translated">ドキュメント全体を表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7d97a7f0b05a173dd169071a9c7f47af3300ccc5" translate="yes" xml:space="preserve">
          <source>Object whose attributes correspond roughly to the members of the &lt;code&gt;stat&lt;/code&gt; structure. It is used for the result of &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性が &lt;code&gt;stat&lt;/code&gt; 構造体のメンバーにほぼ対応するオブジェクト。&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;の結果に使用されます。</target>
        </trans-unit>
        <trans-unit id="92ddc22b65e8b5b40d370242a415cbe437e1fb5b" translate="yes" xml:space="preserve">
          <source>Object yielded by &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; to expose the file path and other file attributes of a directory entry.</source>
          <target state="translated">ディレクトリエントリのファイルパスとその他のファイル属性を公開するために&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;によって生成されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b505394857cf752f097451f34e2de726a3519d1d" translate="yes" xml:space="preserve">
          <source>Object-oriented interface to dates and times with similar functionality to the &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;モジュールと同様の機能を持つ日付と時刻へのオブジェクト指向のインターフェース。</target>
        </trans-unit>
        <trans-unit id="533836a4f4e1947436d9ed59586d8720b0c3d38a" translate="yes" xml:space="preserve">
          <source>Objects created via this constructor cannot be pickled (see &lt;a href=&quot;#pickling&quot;&gt;pickling&lt;/a&gt;).</source>
          <target state="translated">このコンストラクタで作成されたオブジェクトは、（参照漬けすることはできません&lt;a href=&quot;#pickling&quot;&gt;酸洗&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4143640e99d59e16fb46fad68725f854ec9f3433" translate="yes" xml:space="preserve">
          <source>Objects created via this constructor will also bypass the cache of a deserializing process when unpickled.</source>
          <target state="translated">このコンストラクタで作成されたオブジェクトは、デシリアライズ処理のキャッシュをバイパスしてアンピクルされます。</target>
        </trans-unit>
        <trans-unit id="0de0194dce47b55f786136e7ca5d1d1e84495b24" translate="yes" xml:space="preserve">
          <source>Objects implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトには、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="d203b8faa0a194771d07d8e7b897dfd529a11dc3" translate="yes" xml:space="preserve">
          <source>Objects in the DOM</source>
          <target state="translated">DOM 内のオブジェクト</target>
        </trans-unit>
        <trans-unit id="1d2961eba3bc82e095ef8f99f120f340ffafacae" translate="yes" xml:space="preserve">
          <source>Objects instantiated from &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt; can only have their value set to bytes or integers.</source>
          <target state="translated">&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; &lt;/a&gt;からインスタンス化されたオブジェクトは、値をバイトまたは整数にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="942293f86c9c554a7407c6e383f6fb514f2d3c50" translate="yes" xml:space="preserve">
          <source>Objects of different types, except different numeric types, never compare equal. The &lt;code&gt;==&lt;/code&gt; operator is always defined but for some object types (for example, class objects) is equivalent to &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators are only defined where they make sense; for example, they raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception when one of the arguments is a complex number.</source>
          <target state="translated">異なる数値型を除いて、異なる型のオブジェクトは決して等しく比較されません。 &lt;code&gt;==&lt;/code&gt; の演算子は常に定義されているが、いくつかのオブジェクトタイプに対して（例えば、クラス・オブジェクト）と等価です。 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;gt;=&lt;/code&gt; 彼らは理にかなっている事業者のみが定義されています。たとえば、引数の1つが複素数の場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e090b0f0c940e8935433854198df7f294fb1b61" translate="yes" xml:space="preserve">
          <source>Objects of different types, except different numeric types, never compare equal. The &lt;code&gt;==&lt;/code&gt; operator is always defined but for some object types (for example, class objects) is equivalent to &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators are only defined where they make sense; for example, they raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception when one of the arguments is a complex number.</source>
          <target state="translated">異なる数値タイプを除いて、異なるタイプのオブジェクトは決して等しく比較されません。 &lt;code&gt;==&lt;/code&gt; の演算子は常に定義されているが、いくつかのオブジェクトタイプに対して（例えば、クラス・オブジェクト）と等価です。 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;gt;=&lt;/code&gt; 彼らは理にかなっている事業者のみが定義されています。たとえば、引数の1つが複素数の場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="844eb425fd6afc3bee0d0b6028be8ef6772711e2" translate="yes" xml:space="preserve">
          <source>Objects of the &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; type are always naive.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;型のオブジェクトは常にナイーブです。</target>
        </trans-unit>
        <trans-unit id="bd7f72ab2249f983753a1d861db7908c8fcec575" translate="yes" xml:space="preserve">
          <source>Objects of these types are hashable, meaning that they can be used as dictionary keys.</source>
          <target state="translated">これらの型のオブジェクトはハッシュ化可能であり、辞書のキーとして使用できることを意味します。</target>
        </trans-unit>
        <trans-unit id="938221cef57f2475840b0471c4e70257edb6b048" translate="yes" xml:space="preserve">
          <source>Objects of these types are immutable.</source>
          <target state="translated">これらの型のオブジェクトは不変です。</target>
        </trans-unit>
        <trans-unit id="41b191879a423d793dfaba6e910a7801ce025caa" translate="yes" xml:space="preserve">
          <source>Objects of these types support efficient pickling via the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">これらのタイプのオブジェクトは、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールを介した効率的な酸洗いをサポートします。</target>
        </trans-unit>
        <trans-unit id="5f93dcf2a529620bad38d87c650a52874fefbf22" translate="yes" xml:space="preserve">
          <source>Objects of this class cannot be used to represent timezone information in the locations where different offsets are used in different days of the year or where historical changes have been made to civil time.</source>
          <target state="translated">このクラスのオブジェクトは、年の異なる日に異なるオフセットが使用されている場所や、歴史的に市民時間が変更されている場所では、タイムゾーン情報を表現するために使用することはできません。</target>
        </trans-unit>
        <trans-unit id="214c213394b160163b319993661476db974e76ee" translate="yes" xml:space="preserve">
          <source>Objects returned by &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; when a file is opened for reading have the following methods:</source>
          <target state="translated">ファイルを読み取り用に開いたときに&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; が&lt;/a&gt;返すオブジェクトには、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="657eae2282d6e60f1300aee5c59552435401221e" translate="yes" xml:space="preserve">
          <source>Objects returned by &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; when a file is opened for writing have all the above methods, except for &lt;code&gt;readframes()&lt;/code&gt; and &lt;code&gt;setpos()&lt;/code&gt;. In addition the following methods exist. The &lt;code&gt;get*()&lt;/code&gt; methods can only be called after the corresponding &lt;code&gt;set*()&lt;/code&gt; methods have been called. Before the first &lt;code&gt;writeframes()&lt;/code&gt; or &lt;code&gt;writeframesraw()&lt;/code&gt;, all parameters except for the number of frames must be filled in.</source>
          <target state="translated">ファイルが書き込み用に開かれたときに&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトには、 &lt;code&gt;readframes()&lt;/code&gt; および &lt;code&gt;setpos()&lt;/code&gt; を除いて、上記のすべてのメソッドがあります。また、以下の方法があります。 &lt;code&gt;get*()&lt;/code&gt; メソッドは、対応する後に呼び出すことができます &lt;code&gt;set*()&lt;/code&gt; メソッドが呼び出されています。最初の &lt;code&gt;writeframes()&lt;/code&gt; または &lt;code&gt;writeframesraw()&lt;/code&gt; の前に、フレーム数を除くすべてのパラメータを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="89396d26028965648a3435a5a9a2e0de20223e3b" translate="yes" xml:space="preserve">
          <source>Objects such as modules and instances have an updateable &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute; however, other objects may have write restrictions on their &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attributes (for example, classes use a &lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;types.MappingProxyType&lt;/code&gt;&lt;/a&gt; to prevent direct dictionary updates).</source>
          <target state="translated">モジュールやインスタンスなどのオブジェクトには、更新可能な&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性があります。しかし、他のオブジェクトは、その上の書き込み制限があり&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;（例えば、クラスが使用する属性を&lt;a href=&quot;types#types.MappingProxyType&quot;&gt; &lt;code&gt;types.MappingProxyType&lt;/code&gt; を&lt;/a&gt;直接辞書の更新を防ぐため）。</target>
        </trans-unit>
        <trans-unit id="24ddcc97acfc6e06b7be05736ede2846c52ff438" translate="yes" xml:space="preserve">
          <source>Objects that when printed or called, print the text of copyright or credits, respectively.</source>
          <target state="translated">印刷されたとき、または呼び出されたときに、それぞれ著作権やクレジットのテキストを印刷するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6aee9caab0ea803614d4bdec33d7d17a13eeeb34" translate="yes" xml:space="preserve">
          <source>Objects that when printed, print a message like &amp;ldquo;Use quit() or Ctrl-D (i.e. EOF) to exit&amp;rdquo;, and when called, raise &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; with the specified exit code.</source>
          <target state="translated">印刷時に「quit（）またはCtrl-D（EOF）を使用して終了する」などのメッセージを印刷し、呼び出されたときに、指定された終了コードで&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;を発生させるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="317ff8c9afd265b37a084319109dd329ff7e9ee9" translate="yes" xml:space="preserve">
          <source>Objects to be configured are described by dictionaries which detail their configuration. In some places, the logging system will be able to infer from the context how an object is to be instantiated, but when a user-defined object is to be instantiated, the system will not know how to do this. In order to provide complete flexibility for user-defined object instantiation, the user needs to provide a &amp;lsquo;factory&amp;rsquo; - a callable which is called with a configuration dictionary and which returns the instantiated object. This is signalled by an absolute import path to the factory being made available under the special key &lt;code&gt;'()'&lt;/code&gt;. Here&amp;rsquo;s a concrete example:</source>
          <target state="translated">設定されるオブジェクトは、設定を詳述する辞書によって記述されます。一部の場所では、ロギングシステムはオブジェクトをインスタンス化する方法をコンテキストから推測できますが、ユーザー定義オブジェクトをインスタンス化する場合、システムはこれを行う方法を認識しません。ユーザー定義のオブジェクトのインスタンス化に完全な柔軟性を提供するために、ユーザーは「ファクトリー」を提供する必要があります。これは、構成辞書で呼び出され、インスタンス化されたオブジェクトを返す呼び出し可能オブジェクトです。これは、特別なキー &lt;code&gt;'()'&lt;/code&gt; で使用できるようにされているファクトリへの絶対インポートパスによって示されます。具体的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="c09d2d2576e2197a44808fdb59140b84b2d6ab6c" translate="yes" xml:space="preserve">
          <source>Objects with this interface are used to receive error and warning information from the &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;. If you create an object that implements this interface, then register the object with your &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;, the parser will call the methods in your object to report all warnings and errors. There are three levels of errors available: warnings, (possibly) recoverable errors, and unrecoverable errors. All methods take a &lt;code&gt;SAXParseException&lt;/code&gt; as the only parameter. Errors and warnings may be converted to an exception by raising the passed-in exception object.</source>
          <target state="translated">このインターフェイスを持つオブジェクトは、&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;からエラーおよび警告情報を受け取るために使用されます。このインターフェイスを実装するオブジェクトを作成し、そのオブジェクトを&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; に&lt;/a&gt;登録すると、パーサーはオブジェクトのメソッドを呼び出して、すべての警告とエラーを報告します。利用可能なエラーには、警告、（おそらく）回復可能なエラー、回復不可能なエラーの3つのレベルがあります。すべてのメソッドは &lt;code&gt;SAXParseException&lt;/code&gt; を唯一のパラメーターとして受け取ります。エラーと警告は、渡された例外オブジェクトを発生させることによって例外に変換できます。</target>
        </trans-unit>
        <trans-unit id="0ffd090521623011161357dcee2bcb6fbdee8700" translate="yes" xml:space="preserve">
          <source>Obsolete type &amp;ndash; it is identical to &lt;code&gt;'d'&lt;/code&gt;.</source>
          <target state="translated">廃止されたタイプ&amp;ndash; &lt;code&gt;'d'&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="b63bbfd86cfd7432e9f0106c88858984af190c93" translate="yes" xml:space="preserve">
          <source>Obsoleted by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. Uses &lt;em&gt;Set-Cookie&lt;/em&gt; with version=1.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;により廃止。使用&lt;em&gt;するSet-Cookieを&lt;/em&gt;バージョン= 1と。</target>
        </trans-unit>
        <trans-unit id="3f55ca62e4ccae40aeb50a0b093437b18720a007" translate="yes" xml:space="preserve">
          <source>Obtaining the Event Loop</source>
          <target state="translated">イベントループの取得</target>
        </trans-unit>
        <trans-unit id="4f99bb290b9222ef321b66eb0aabb138fcf03891" translate="yes" xml:space="preserve">
          <source>Occasionally, it may be useful to disable the addition of this help option. This can be achieved by passing &lt;code&gt;False&lt;/code&gt; as the &lt;code&gt;add_help=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このヘルプオプションの追加を無効にすると便利な場合があります。これは、&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;add_help=&lt;/code&gt; 引数として &lt;code&gt;False&lt;/code&gt; を渡すことで実現できます。</target>
        </trans-unit>
        <trans-unit id="126a6d3a842a574897ac64e80b2a2f96ded4709a" translate="yes" xml:space="preserve">
          <source>Occurs when a subnormal result is pushed to zero by rounding. &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt; are also signaled.</source>
          <target state="translated">丸めによって非正規の結果がゼロにプッシュされると発生します。&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; &lt;/a&gt;も通知されます。</target>
        </trans-unit>
        <trans-unit id="1d2ba6a8e415086f99e2740841ad13a25c9e365c" translate="yes" xml:space="preserve">
          <source>Occurs when an operation result is subnormal (the exponent is too small). If not trapped, returns the result unchanged.</source>
          <target state="translated">演算結果が亜正規(指数が小さすぎる)の場合に発生します。トラップされていない場合、結果は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="8b690fa09f4c5b0f36d26f6bb8267ab0f5b1a04e" translate="yes" xml:space="preserve">
          <source>Octal escapes are included in a limited form. If the first digit is a 0, or if there are three octal digits, it is considered an octal escape. Otherwise, it is a group reference. As for string literals, octal escapes are always at most three digits in length.</source>
          <target state="translated">八進数エスケープは限られた形で含まれています。最初の桁が0である場合、または8進数が3桁ある場合は、8進数エスケープとみなされます。それ以外の場合はグループ参照です。文字列リテラルに関しては、八進数エスケープは常に最大でも3桁の長さになります。</target>
        </trans-unit>
        <trans-unit id="e48a55708577c922dfe1c8727c5015fe59dcd19c" translate="yes" xml:space="preserve">
          <source>Octal format. Outputs the number in base 8.</source>
          <target state="translated">8進数形式。8進数で出力します。</target>
        </trans-unit>
        <trans-unit id="0c41c8a61bc16d4027683f8db82ba66479208909" translate="yes" xml:space="preserve">
          <source>Of course, as email has been deployed worldwide, it has become internationalized, such that language specific character sets can now be used in email messages. The base standard still requires email messages to be transferred using only 7-bit ASCII characters, so a slew of RFCs have been written describing how to encode email containing non-ASCII characters into &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant format. These RFCs include &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package supports these standards in its &lt;a href=&quot;#module-email.header&quot;&gt;&lt;code&gt;email.header&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">もちろん、電子メールは世界中に配備されているため、国際化され、言語固有の文字セットを電子メールメッセージで使用できるようになりました。基本標準では、依然として7ビットASCII文字のみを使用して電子メールメッセージを転送する必要があるため、非ASCII文字を含む電子メールを&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;準拠の形式にエンコードする方法を説明する多数のRFCが記述されています。これらのRFCには、&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;、および&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231が含まれ&lt;/strong&gt;&lt;/a&gt;ます。&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージは、その中で、これらの規格をサポートしてい&lt;a href=&quot;#module-email.header&quot;&gt; &lt;code&gt;email.header&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="2afb4718d7f7d394f419ceafea003a6616573fac" translate="yes" xml:space="preserve">
          <source>Of course, the dictionary printed will include all the options available and their values. This is meant only as an example.</source>
          <target state="translated">もちろん、印刷される辞書には、利用可能なすべてのオプションとその値が含まれます。これはあくまでも一例です。</target>
        </trans-unit>
        <trans-unit id="57957486097ed91a113e640adfd8aa89098b3192" translate="yes" xml:space="preserve">
          <source>Of course, tokens will be returned which are not valid for shells, and you&amp;rsquo;ll need to implement your own error checks on the returned tokens.</source>
          <target state="translated">もちろん、シェルには無効なトークンが返されます。返されたトークンに独自のエラーチェックを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="8d96c2d35a34921bbc473cf1f63f5c7f7ce87d37" translate="yes" xml:space="preserve">
          <source>Of course, you still have to use your head! For instance, it makes no sense to use a forking server if the service contains state in memory that can be modified by different requests, since the modifications in the child process would never reach the initial state kept in the parent process and passed to each child. In this case, you can use a threading server, but you will probably have to use locks to protect the integrity of the shared data.</source>
          <target state="translated">もちろん、まだ頭を使わなければなりません! 例えば、サービスが異なるリクエストによって変更される可能性のある状態をメモリに含んでいる場合、フォークサーバを使うことは意味がありません。この場合、スレッディングサーバを使うことができますが、共有データの整合性を保護するためにロックを使わなければならないでしょう。</target>
        </trans-unit>
        <trans-unit id="a189e90de7a831a297990fcc13eed8180febeaaf" translate="yes" xml:space="preserve">
          <source>Of the following list, symbols that are not used on the current platform are not defined by the module. The specific list of defined symbols is available as &lt;code&gt;errno.errorcode.keys()&lt;/code&gt;. Symbols available can include:</source>
          <target state="translated">次のリストの中で、現在のプラットフォームで使用されていないシンボルは、モジュールによって定義されていません。定義されたシンボルの特定のリストは、 &lt;code&gt;errno.errorcode.keys()&lt;/code&gt; として入手できます。使用可能な記号には次のものがあります。</target>
        </trans-unit>
        <trans-unit id="d6d3eaaecea9032e886e0354de8e806c271d885c" translate="yes" xml:space="preserve">
          <source>Official BLAKE2 website.</source>
          <target state="translated">BLAKE2公式サイト。</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="db094d4468a2312d7105c1d93cf46de84f4525c2" translate="yes" xml:space="preserve">
          <source>Often the private key is stored in the same file as the certificate; in this case, only the &lt;code&gt;certfile&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt;&lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt; needs to be passed. If the private key is stored with the certificate, it should come before the first certificate in the certificate chain:</source>
          <target state="translated">多くの場合、秘密鍵は証明書と同じファイルに保存されます。この場合、&lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt; &lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;への &lt;code&gt;certfile&lt;/code&gt; パラメータのみを渡す必要があります。秘密キーが証明書と共に保存されている場合、それは証明書チェーンの最初の証明書の前にある必要があります。</target>
        </trans-unit>
        <trans-unit id="fbb3c38f7157933f1410deccc0c0bd46be6786fa" translate="yes" xml:space="preserve">
          <source>Old</source>
          <target state="translated">Old</target>
        </trans-unit>
        <trans-unit id="b921270420b7b08f1568f831c3397e52a38fa523" translate="yes" xml:space="preserve">
          <source>Old cookies are kept unless overwritten by newly loaded ones.</source>
          <target state="translated">古いクッキーは、新たに読み込まれたクッキーで上書きされない限り保持されます。</target>
        </trans-unit>
        <trans-unit id="7314a38341e89f90dcb4e508f3c78058527250f6" translate="yes" xml:space="preserve">
          <source>Old getter/setter API for &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt;; use it directly as a property instead.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;古いゲッター/セッターAPI 。代わりに、プロパティとして直接使用してください。</target>
        </trans-unit>
        <trans-unit id="c7dbcb06ab05ba98c6ef08633aa445b5c4081b42" translate="yes" xml:space="preserve">
          <source>Old getter/setter API for &lt;a href=&quot;#threading.Thread.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;; use it directly as a property instead.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;古いゲッター/セッターAPI ; 代わりに、プロパティとして直接使用してください。</target>
        </trans-unit>
        <trans-unit id="a430408287831c43c01068e431ced99daedf6248" translate="yes" xml:space="preserve">
          <source>Older SQLite versions had issues with sharing connections between threads. That&amp;rsquo;s why the Python module disallows sharing connections and cursors between threads. If you still try to do so, you will get an exception at runtime.</source>
          <target state="translated">古いSQLiteバージョンには、スレッド間の接続の共有に関する問題がありました。そのため、Pythonモジュールはスレッド間での接続とカーソルの共有を許可していません。それでも実行しようとすると、実行時に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="b798a5717d947276e99cddcb457e1602f3cac8b9" translate="yes" xml:space="preserve">
          <source>Older high-level API</source>
          <target state="translated">古い高レベルAPI</target>
        </trans-unit>
        <trans-unit id="6b7df62ceb94ab7be4fe94caa4bfa594c93034e1" translate="yes" xml:space="preserve">
          <source>Omitting values</source>
          <target state="translated">値の省略</target>
        </trans-unit>
        <trans-unit id="1bb81bb7fe8c54a984481046ff452e9ec4cda5b2" translate="yes" xml:space="preserve">
          <source>On Android or in the UTF-8 mode (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; option), always return &lt;code&gt;'UTF-8'&lt;/code&gt;, the locale and the &lt;em&gt;do_setlocale&lt;/em&gt; argument are ignored.</source>
          <target state="translated">AndroidまたはUTF-8モード（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; オプション）では、常に &lt;code&gt;'UTF-8'&lt;/code&gt; を返します。ロケールと&lt;em&gt;do_setlocale&lt;/em&gt;引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="203e6adb380fa1e83c671d16939d8c0b0b5f5fb7" translate="yes" xml:space="preserve">
          <source>On Android or in the UTF-8 mode (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; option), always return &lt;code&gt;'UTF-8'&lt;/code&gt;, the locale and the &lt;em&gt;do_setlocale&lt;/em&gt; argument are ignored.</source>
          <target state="translated">AndroidまたはUTF-8モード（&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; オプション）では、常に &lt;code&gt;'UTF-8'&lt;/code&gt; 返します。ロケールと&lt;em&gt;do_setlocale&lt;/em&gt;引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="d4464bd203731f640095d017614727a2ce8882aa" translate="yes" xml:space="preserve">
          <source>On Android, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">Androidでは、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cdac50d7ab041ede3970502d373d1b546c0fc224" translate="yes" xml:space="preserve">
          <source>On BSD systems (macOS, FreeBSD, etc.) flow control is not supported for datagram protocols, because there is no reliable way to detect send failures caused by writing too many packets.</source>
          <target state="translated">BSD システム (macOS,FreeBSD など)では、データグラムプロトコルではフロー制御はサポートされていません。 なぜなら、パケットの書きすぎによる送信失敗を検出する信頼できる方法がないからです。</target>
        </trans-unit>
        <trans-unit id="5df68af755b4ca9998915a72600b113ea0a954b4" translate="yes" xml:space="preserve">
          <source>On Linux &lt;a href=&quot;os#os.sendfile&quot;&gt;&lt;code&gt;os.sendfile()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Linuxでは&lt;a href=&quot;os#os.sendfile&quot;&gt; &lt;code&gt;os.sendfile()&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="b894a54ac738054398c257505814cbf2c23a93f5" translate="yes" xml:space="preserve">
          <source>On Linux, &lt;code&gt;find_library()&lt;/code&gt; tries to run external programs (&lt;code&gt;/sbin/ldconfig&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;objdump&lt;/code&gt; and &lt;code&gt;ld&lt;/code&gt;) to find the library file. It returns the filename of the library file.</source>
          <target state="translated">Linuxでは、 &lt;code&gt;find_library()&lt;/code&gt; は外部プログラム（ &lt;code&gt;/sbin/ldconfig&lt;/code&gt; 、 &lt;code&gt;gcc&lt;/code&gt; 、 &lt;code&gt;objdump&lt;/code&gt; および &lt;code&gt;ld&lt;/code&gt; ）を実行してライブラリファイルを見つけようとします。ライブラリファイルのファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="b7f5823f8fbd988d636ff83e069f2a210239fdad" translate="yes" xml:space="preserve">
          <source>On Linux, if &lt;em&gt;offset&lt;/em&gt; is given as &lt;code&gt;None&lt;/code&gt;, the bytes are read from the current position of &lt;em&gt;in&lt;/em&gt; and the position of &lt;em&gt;in&lt;/em&gt; is updated.</source>
          <target state="translated">場合Linuxでは、&lt;em&gt;オフセットが&lt;/em&gt;として与えられ &lt;code&gt;None&lt;/code&gt; 、バイトは現在の位置から読み込まれ&lt;em&gt;内&lt;/em&gt;の位置&lt;em&gt;に&lt;/em&gt;更新されます。</target>
        </trans-unit>
        <trans-unit id="8c474916fc600db3efbd1c743661bfc0f0b02e59" translate="yes" xml:space="preserve">
          <source>On Linux, if &lt;em&gt;offset&lt;/em&gt; is given as &lt;code&gt;None&lt;/code&gt;, the bytes are read from the current position of &lt;em&gt;in_fd&lt;/em&gt; and the position of &lt;em&gt;in_fd&lt;/em&gt; is updated.</source>
          <target state="translated">場合Linuxでは、&lt;em&gt;オフセットが&lt;/em&gt;として与えられ &lt;code&gt;None&lt;/code&gt; 、バイトは現在の位置から読み取られ&lt;em&gt;in_fdは&lt;/em&gt;との位置&lt;em&gt;in_fdはが&lt;/em&gt;更新されます。</target>
        </trans-unit>
        <trans-unit id="e281758369d3e3022dacf8f57e2fcc73ab4a776b" translate="yes" xml:space="preserve">
          <source>On Linux, if the &lt;code&gt;getrandom()&lt;/code&gt; syscall is available, it is used in blocking mode: block until the system urandom entropy pool is initialized (128 bits of entropy are collected by the kernel). See the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt; for the rationale. On Linux, the &lt;a href=&quot;#os.getrandom&quot;&gt;&lt;code&gt;getrandom()&lt;/code&gt;&lt;/a&gt; function can be used to get random bytes in non-blocking mode (using the &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag) or to poll until the system urandom entropy pool is initialized.</source>
          <target state="translated">Linuxでは、 &lt;code&gt;getrandom()&lt;/code&gt; syscallが使用可能な場合、それはブロッキングモードで使用されます。システムのランダムエントロピープールが初期化されるまでブロックします（カーネルによって128ビットのエントロピーが収集されます）。根拠については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt;を参照してください。Linuxでは、&lt;a href=&quot;#os.getrandom&quot;&gt; &lt;code&gt;getrandom()&lt;/code&gt; &lt;/a&gt;関数を使用して、ノンブロッキングモードでランダムなバイトを取得（&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグを使用）したり、システムのランダムエントロピープールが初期化されるまでポーリングしたりできます。</target>
        </trans-unit>
        <trans-unit id="c7cb52cf7de2620bbb70c3d6b54a151e8aa3360b" translate="yes" xml:space="preserve">
          <source>On Linux, if the &lt;code&gt;getrandom()&lt;/code&gt; syscall is available, it is used in blocking mode: block until the system urandom entropy pool is initialized (128 bits of entropy are collected by the kernel). See the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt; for the rationale. On Linux, the &lt;a href=&quot;#os.getrandom&quot;&gt;&lt;code&gt;getrandom()&lt;/code&gt;&lt;/a&gt; function can be used to get random bytes in non-blocking mode (using the &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag) or to poll until the system urandom entropy pool is initialized.</source>
          <target state="translated">Linuxでは、 &lt;code&gt;getrandom()&lt;/code&gt; syscallが使用可能な場合、ブロッキングモードで使用されます。システムのurandomエントロピープールが初期化されるまでブロックします（128ビットのエントロピーがカーネルによって収集されます）。理論的根拠については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP524を&lt;/strong&gt;&lt;/a&gt;参照してください。Linuxでは、&lt;a href=&quot;#os.getrandom&quot;&gt; &lt;code&gt;getrandom()&lt;/code&gt; &lt;/a&gt;関数を使用して、非ブロッキングモードでランダムバイトを取得したり（&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグを使用）、システムのurandomエントロピープールが初期化されるまでポーリングしたりできます。</target>
        </trans-unit>
        <trans-unit id="34356f543169215adf877047fe8fe6de6815c500" translate="yes" xml:space="preserve">
          <source>On Linux, it is required to specify the filename &lt;em&gt;including&lt;/em&gt; the extension to load a library, so attribute access can not be used to load libraries. Either the &lt;code&gt;LoadLibrary()&lt;/code&gt; method of the dll loaders should be used, or you should load the library by creating an instance of CDLL by calling the constructor:</source>
          <target state="translated">Linuxでは、ライブラリをロードするために拡張子を&lt;em&gt;含む&lt;/em&gt;ファイル名&lt;em&gt;を&lt;/em&gt;指定する必要があるため、属性のアクセスを使用してライブラリをロードすることはできません。dllローダーの &lt;code&gt;LoadLibrary()&lt;/code&gt; メソッドを使用するか、コンストラクターを呼び出してCDLLのインスタンスを作成してライブラリをロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="dc1364db7c80f222c6aa60a25008da922cb7a7e1" translate="yes" xml:space="preserve">
          <source>On Mac OS X (and perhaps other platforms), executable files may be universal files containing multiple architectures.</source>
          <target state="translated">Mac OS X(およびおそらく他のプラットフォーム)では、実行可能ファイルは複数のアーキテクチャを含むユニバーサルファイルである可能性があります。</target>
        </trans-unit>
        <trans-unit id="f3005d61cb9e9c1da2b366641dda8f652e63e021" translate="yes" xml:space="preserve">
          <source>On Mac OS X and FreeBSD, a value of 0 for &lt;em&gt;count&lt;/em&gt; specifies to send until the end of &lt;em&gt;in&lt;/em&gt; is reached.</source>
          <target state="translated">Mac OS XおよびFreeBSDでは、&lt;em&gt;countの&lt;/em&gt;値が0の場合は、&lt;em&gt;in&lt;/em&gt;の終わりに達するまで送信することを指定します。</target>
        </trans-unit>
        <trans-unit id="f2b2d6a45e7bae7bbe9a46add85d282be2542161" translate="yes" xml:space="preserve">
          <source>On Mac OS X and FreeBSD, a value of &lt;code&gt;0&lt;/code&gt; for &lt;em&gt;count&lt;/em&gt; specifies to send until the end of &lt;em&gt;in_fd&lt;/em&gt; is reached.</source>
          <target state="translated">Mac OS XおよびFreeBSDでは、&lt;em&gt;countの&lt;/em&gt;値 &lt;code&gt;0&lt;/code&gt; は、&lt;em&gt;in_fd&lt;/em&gt;の終わりに&lt;em&gt;達する&lt;/em&gt;まで送信することを指定します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47c284398b02650696dc28bb5b5b1f62ce624525" translate="yes" xml:space="preserve">
          <source>On Mac OS X, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; behavior differs somewhat from other Unix platforms. If the Python interpreter was built with a deployment target of &lt;code&gt;10.5&lt;/code&gt; or earlier, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; returns the list of effective group ids associated with the current user process; this list is limited to a system-defined number of entries, typically 16, and may be modified by calls to &lt;a href=&quot;#os.setgroups&quot;&gt;&lt;code&gt;setgroups()&lt;/code&gt;&lt;/a&gt; if suitably privileged. If built with a deployment target greater than &lt;code&gt;10.5&lt;/code&gt;, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; returns the current group access list for the user associated with the effective user id of the process; the group access list may change over the lifetime of the process, it is not affected by calls to &lt;a href=&quot;#os.setgroups&quot;&gt;&lt;code&gt;setgroups()&lt;/code&gt;&lt;/a&gt;, and its length is not limited to 16. The deployment target value, &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt;, can be obtained with &lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt;&lt;code&gt;sysconfig.get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mac OS Xでは、&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; の&lt;/a&gt;動作は他のUnixプラットフォームとは多少異なります。 Pythonインタープリターが &lt;code&gt;10.5&lt;/code&gt; 以前のデプロイメントターゲットでビルドされた場合、&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;は現在のユーザープロセスに関連付けられた有効なグループIDのリストを返します。このリストは、システム定義のエントリ数（通常は16）に制限されており、適切な特権があれば、&lt;a href=&quot;#os.setgroups&quot;&gt; &lt;code&gt;setgroups()&lt;/code&gt; の&lt;/a&gt;呼び出しによって変更できます。 &lt;code&gt;10.5&lt;/code&gt; より大きい配備ターゲットでビルドされた場合、&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;は、プロセスの実効ユーザーIDに関連付けられたユーザーの現在のグループアクセスリストを返します。グループアクセスリストはプロセスの存続期間中に変更される可能性があり、&lt;a href=&quot;#os.setgroups&quot;&gt; &lt;code&gt;setgroups()&lt;/code&gt; &lt;/a&gt;への呼び出しの影響を受けません、およびその長さは16に制限されていません。展開ターゲット値 &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; は、&lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt; &lt;code&gt;sysconfig.get_config_var()&lt;/code&gt; で&lt;/a&gt;取得できます。</target>
        </trans-unit>
        <trans-unit id="6be300bd70052f23a866a27939e3f7e700d243e4" translate="yes" xml:space="preserve">
          <source>On Mac OS X, &lt;code&gt;sem_timedwait&lt;/code&gt; is unsupported, so calling &lt;code&gt;acquire()&lt;/code&gt; with a timeout will emulate that function&amp;rsquo;s behavior using a sleeping loop.</source>
          <target state="translated">Mac OS Xでは、 &lt;code&gt;sem_timedwait&lt;/code&gt; はサポートされていないため、タイムアウトを指定して &lt;code&gt;acquire()&lt;/code&gt; を呼び出すと、スリープループを使用してその関数の動作がエミュレートされます。</target>
        </trans-unit>
        <trans-unit id="02ec16ecfd2b354d814f70d8478dc9a7f0630d5a" translate="yes" xml:space="preserve">
          <source>On Mac OS X, the length of &lt;em&gt;groups&lt;/em&gt; may not exceed the system-defined maximum number of effective group ids, typically 16. See the documentation for &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; for cases where it may not return the same group list set by calling setgroups().</source>
          <target state="translated">Mac OS Xでは、&lt;em&gt;グループ&lt;/em&gt;の長さは、システム定義の有効なグループIDの最大数（通常は16 &lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;を超えることはできません。setgroups（）を呼び出しても同じグループリストセットが返されない場合は、getgroups（）のドキュメントを参照してください。。</target>
        </trans-unit>
        <trans-unit id="d466ddfea82165c6998d2732d0fd966668af8aa8" translate="yes" xml:space="preserve">
          <source>On Mac OS X, this is indistinguishable from &lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;sem_getvalue()&lt;/code&gt; is not implemented on that platform.</source>
          <target state="translated">Mac OS Xでは、 &lt;code&gt;sem_getvalue()&lt;/code&gt; がそのプラットフォームに実装されていないため、これは&lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;と区別できません。</target>
        </trans-unit>
        <trans-unit id="80a13c286aa16dd15254ee11f8acc93c6967fcac" translate="yes" xml:space="preserve">
          <source>On Mac OS systems, the following attributes may also be available:</source>
          <target state="translated">Mac OS システムでは、以下の属性も利用可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="a1d8d30d955ec9defda1be84eda85bc8070a5a55" translate="yes" xml:space="preserve">
          <source>On MacOS X, toplevel windows automatically include a built-in size grip by default. Adding a &lt;code&gt;Sizegrip&lt;/code&gt; is harmless, since the built-in grip will just mask the widget.</source>
          <target state="translated">MacOS Xでは、トップレベルウィンドウにデフォルトで組み込みサイズグリップが自動的に含まれます。組み込みグリップはウィジェットをマスクするだけなので、 &lt;code&gt;Sizegrip&lt;/code&gt; グリップを追加しても問題はありません。</target>
        </trans-unit>
        <trans-unit id="b03c534fbf38cbbeafe4e065b76b3779d0494ab0" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, it may be required to enable the &lt;code&gt;Activate.ps1&lt;/code&gt; script by setting the execution policy for the user. You can do this by issuing the following PowerShell command:</source>
          <target state="translated">Microsoft Windowsでは、ユーザーの実行ポリシーを設定して、 &lt;code&gt;Activate.ps1&lt;/code&gt; スクリプトを有効にする必要がある場合があります。これを行うには、次のPowerShellコマンドを発行します。</target>
        </trans-unit>
        <trans-unit id="047a505ac3a0bde5924ac34403621b5a7b16f3e7" translate="yes" xml:space="preserve">
          <source>On OS X, &lt;code&gt;find_library()&lt;/code&gt; tries several predefined naming schemes and paths to locate the library, and returns a full pathname if successful:</source>
          <target state="translated">OS Xでは、 &lt;code&gt;find_library()&lt;/code&gt; は事前定義されたいくつかの命名方式とパスを試行してライブラリを見つけ、成功した場合は完全なパス名を返します。</target>
        </trans-unit>
        <trans-unit id="ee3adeb42a6773c0b5a1d764561ba1bd5f6e5c81" translate="yes" xml:space="preserve">
          <source>On OpenSSL 1.1 and newer the cipher dict contains additional fields:</source>
          <target state="translated">OpenSSL 1.1 以降では、暗号文には追加のフィールドが含まれています。</target>
        </trans-unit>
        <trans-unit id="80e86175144551edf0014fe20868235165756774" translate="yes" xml:space="preserve">
          <source>On POSIX platforms the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is set in order to immediately reuse previous sockets which were bound on the same &lt;em&gt;address&lt;/em&gt; and remained in TIME_WAIT state.</source>
          <target state="translated">POSIXプラットフォームでは、 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; ソケットオプションが設定され、同じ&lt;em&gt;アドレスに&lt;/em&gt;バインドされ、TIME_WAIT状態のままであった以前のソケットをすぐに再利用します。</target>
        </trans-unit>
        <trans-unit id="14c00f7063151de1165f655a6bb2db8b60c068aa" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, this means that file owner and group are lost as well as ACLs. On Mac OS, the resource fork and other metadata are not used. This means that resources will be lost and file type and creator codes will not be correct. On Windows, file owners, ACLs and alternate data streams are not copied.</source>
          <target state="translated">POSIXプラットフォームでは、ACLと同様にファイルの所有者やグループが失われることを意味します。Mac OSでは、リソースフォークなどのメタデータが使用されません。これは、リソースが失われ、ファイルタイプとクリエータコードが正しくないことを意味します。Windowsでは、ファイルの所有者、ACL、代替データストリームはコピーされません。</target>
        </trans-unit>
        <trans-unit id="c2f2b0fcb39984b264b9e73654fb68b4dce8860f" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;a href=&quot;signal#signal.SIGTERM&quot;&gt;&lt;code&gt;signal.SIGTERM&lt;/code&gt;&lt;/a&gt; to the child process.</source>
          <target state="translated">POSIXシステムでは、このメソッドは&lt;a href=&quot;signal#signal.SIGTERM&quot;&gt; &lt;code&gt;signal.SIGTERM&lt;/code&gt; &lt;/a&gt;を子プロセスに送信します。</target>
        </trans-unit>
        <trans-unit id="15ae7630db2b82bcf652d24e44fe7ab4a0226a3d" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;code&gt;SIGKILL&lt;/code&gt; to the child process.</source>
          <target state="translated">POSIXシステムでは、このメソッドは &lt;code&gt;SIGKILL&lt;/code&gt; を子プロセスに送信します。</target>
        </trans-unit>
        <trans-unit id="7eefcbd33acff5f55854147162274a89ed80a85f" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;code&gt;signal.SIGTERM&lt;/code&gt; to the child process.</source>
          <target state="translated">POSIXシステムでは、このメソッドは &lt;code&gt;signal.SIGTERM&lt;/code&gt; を子プロセスに送信します。</target>
        </trans-unit>
        <trans-unit id="d0ff6ad8e999cc10f48eff5c76d5f2a7188b214a" translate="yes" xml:space="preserve">
          <source>On POSIX systems where Python was built with the standard &lt;code&gt;configure&lt;/code&gt; script, this contains the ABI flags as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-3149&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3149&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Pythonが標準の &lt;code&gt;configure&lt;/code&gt; スクリプトで構築されたPOSIXシステムでは、これには&lt;a href=&quot;https://www.python.org/dev/peps/pep-3149&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3149で&lt;/strong&gt;&lt;/a&gt;指定されているABIフラグが含まれています。</target>
        </trans-unit>
        <trans-unit id="b236dd13a030ed94e044d584c2fe8291e71001b9" translate="yes" xml:space="preserve">
          <source>On POSIX systems, the function sends SIGKILL to the subprocess. On Windows, this method is an alias for &lt;a href=&quot;#asyncio.SubprocessTransport.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">POSIXシステムでは、関数はSIGKILLをサブプロセスに送信します。Windowsでは、このメソッドは&lt;a href=&quot;#asyncio.SubprocessTransport.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="f07a49e833d6a2c04f61073e69f1d34ae8d4879c" translate="yes" xml:space="preserve">
          <source>On POSIX systems, this method sends SIGTERM to the subprocess. On Windows, the Windows API function TerminateProcess() is called to stop the subprocess.</source>
          <target state="translated">POSIXシステムでは、このメソッドはサブプロセスにSIGTERMを送ります。Windowsでは、Windows API関数TerminateProcess()が呼び出され、サブプロセスを停止します。</target>
        </trans-unit>
        <trans-unit id="39b54d200ee996c99872333f17e610ed05df0ab4" translate="yes" xml:space="preserve">
          <source>On POSIX with &lt;code&gt;shell=True&lt;/code&gt;, the shell defaults to &lt;code&gt;/bin/sh&lt;/code&gt;. If &lt;em&gt;args&lt;/em&gt; is a string, the string specifies the command to execute through the shell. This means that the string must be formatted exactly as it would be when typed at the shell prompt. This includes, for example, quoting or backslash escaping filenames with spaces in them. If &lt;em&gt;args&lt;/em&gt; is a sequence, the first item specifies the command string, and any additional items will be treated as additional arguments to the shell itself. That is to say, &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; does the equivalent of:</source>
          <target state="translated">&lt;code&gt;shell=True&lt;/code&gt; を使用した POSIXでは、シェルのデフォルトは &lt;code&gt;/bin/sh&lt;/code&gt; です。場合は&lt;em&gt;引数は&lt;/em&gt;文字列で、文字列は、シェルを介して実行するコマンドを指定します。つまり、文字列は、シェルプロンプトで入力したときとまったく同じようにフォーマットする必要があります。これには、たとえば、スペースを含むファイル名の引用やバックスラッシュエスケープが含まれます。場合は&lt;em&gt;引数が&lt;/em&gt;シーケンスで、最初の項目は、コマンド文字列を指定し、任意の追加項目は、シェル自体への追加の引数として扱われます。つまり、&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;は以下と同等のことを行います。</target>
        </trans-unit>
        <trans-unit id="e0fbb44798e8fa6c268c46e281d4b570ead4545d" translate="yes" xml:space="preserve">
          <source>On POSIX, if &lt;em&gt;args&lt;/em&gt; is a string, the string is interpreted as the name or path of the program to execute. However, this can only be done if not passing arguments to the program.</source>
          <target state="translated">POSIXでは、&lt;em&gt;args&lt;/em&gt;が文字列の場合、文字列は実行するプログラムの名前またはパスとして解釈されます。ただし、これはプログラムに引数を渡さない場合にのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="042d4232a3ed266a5bf3c414e7d49bafb86c8327" translate="yes" xml:space="preserve">
          <source>On Solaris and derivatives, the following attributes may also be available:</source>
          <target state="translated">Solaris およびその派生製品では、以下の属性も利用可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="80cc19f9b1626f125dbd406b222352afad1074ce" translate="yes" xml:space="preserve">
          <source>On UNIX &lt;em&gt;child watchers&lt;/em&gt; are used for subprocess finish waiting, see &lt;a href=&quot;asyncio-policy#asyncio-watchers&quot;&gt;Process Watchers&lt;/a&gt; for more info.</source>
          <target state="translated">UNIXでは、&lt;em&gt;子ウォッチャー&lt;/em&gt;はサブプロセスの終了待機に使用されます。詳細については、&lt;a href=&quot;asyncio-policy#asyncio-watchers&quot;&gt;プロセスウォッチャー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="061033fe6897a382e694d5ebd2c26f0de8aa24b9" translate="yes" xml:space="preserve">
          <source>On UNIX, &lt;a href=&quot;resource#resource.setrlimit&quot;&gt;&lt;code&gt;resource.setrlimit()&lt;/code&gt;&lt;/a&gt; is used to set &lt;a href=&quot;resource#resource.RLIMIT_CORE&quot;&gt;&lt;code&gt;resource.RLIMIT_CORE&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s soft limit to 0 to prevent coredump file creation.</source>
          <target state="translated">UNIXでは、&lt;a href=&quot;resource#resource.setrlimit&quot;&gt; &lt;code&gt;resource.setrlimit()&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;resource#resource.RLIMIT_CORE&quot;&gt; &lt;code&gt;resource.RLIMIT_CORE&lt;/code&gt; &lt;/a&gt;のソフト制限を0に設定し、コアダンプファイルが作成されないようにします。</target>
        </trans-unit>
        <trans-unit id="5303fb5664f54ac196ff0624621bf3e9b937a218" translate="yes" xml:space="preserve">
          <source>On UNIX, non-inheritable file descriptors are closed in child processes at the execution of a new program, other file descriptors are inherited.</source>
          <target state="translated">UNIXでは、継承不可能なファイルディスクリプタは新しいプログラムの実行時に子プロセスでクローズされ、他のファイルディスクリプタは継承されます。</target>
        </trans-unit>
        <trans-unit id="8c0b4ce9edeaa46004c1ea89a47277ea82f428e7" translate="yes" xml:space="preserve">
          <source>On Unix and Windows, return the argument with an initial component of &lt;code&gt;~&lt;/code&gt; or &lt;code&gt;~user&lt;/code&gt; replaced by that &lt;em&gt;user&lt;/em&gt;&amp;rsquo;s home directory.</source>
          <target state="translated">UnixとWindowsでは、最初のコンポーネントで引数を返す &lt;code&gt;~&lt;/code&gt; か &lt;code&gt;~user&lt;/code&gt; その置き換えられ&lt;em&gt;たユーザ&lt;/em&gt;のホームディレクトリ。</target>
        </trans-unit>
        <trans-unit id="b4612ea5389981457aec60b2589e2c3358b80472" translate="yes" xml:space="preserve">
          <source>On Unix using the &lt;em&gt;fork&lt;/em&gt; start method, a child process can make use of a shared resource created in a parent process using a global resource. However, it is better to pass the object as an argument to the constructor for the child process.</source>
          <target state="translated">Unixでは、&lt;em&gt;fork&lt;/em&gt; startメソッドを使用して、子プロセスはグローバルリソースを使用して親プロセスで作成された共有リソースを利用できます。ただし、オブジェクトを引数として子プロセスのコンストラクターに渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b0ccbae6c96cdea294fa24abe9f6be651948a8f9" translate="yes" xml:space="preserve">
          <source>On Unix using the &lt;em&gt;spawn&lt;/em&gt; or &lt;em&gt;forkserver&lt;/em&gt; start methods will also start a &lt;em&gt;resource tracker&lt;/em&gt; process which tracks the unlinked named system resources (such as named semaphores or &lt;a href=&quot;multiprocessing.shared_memory#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; objects) created by processes of the program. When all processes have exited the resource tracker unlinks any remaining tracked object. Usually there should be none, but if a process was killed by a signal there may be some &amp;ldquo;leaked&amp;rdquo; resources. (Neither leaked semaphores nor shared memory segments will be automatically unlinked until the next reboot. This is problematic for both objects because the system allows only a limited number of named semaphores, and shared memory segments occupy some space in the main memory.)</source>
          <target state="translated">Unixでは、&lt;em&gt;spawn&lt;/em&gt;または&lt;em&gt;forkserver&lt;/em&gt; startメソッドを使用して、プログラムのプロセスによって作成されたリンクされていない名前付きシステムリソース（名前付きセマフォや&lt;a href=&quot;multiprocessing.shared_memory#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;オブジェクトなど）を&lt;em&gt;追跡&lt;/em&gt;する&lt;em&gt;リソーストラッカー&lt;/em&gt;プロセスも開始します。すべてのプロセスが終了すると、リソーストラッカーは残りの追跡対象オブジェクトのリンクを解除します。通常は何もないはずですが、プロセスがシグナルによって強制終了された場合、いくつかの「リークされた」リソースが存在する可能性があります。 （リークしたセマフォも共有メモリセグメントも、次の再起動まで自動的にリンク解除されません。システムは名前付きセマフォの限られた数のみを許可し、共有メモリセグメントはメインメモリの一部のスペースを占有するため、両方のオブジェクトに問題があります。）</target>
        </trans-unit>
        <trans-unit id="4fd6975fe19e134e6847e77c53014ea295e229e5" translate="yes" xml:space="preserve">
          <source>On Unix when a process finishes but has not been joined it becomes a zombie. There should never be very many because each time a new process starts (or &lt;a href=&quot;#multiprocessing.active_children&quot;&gt;&lt;code&gt;active_children()&lt;/code&gt;&lt;/a&gt; is called) all completed processes which have not yet been joined will be joined. Also calling a finished process&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt;&lt;code&gt;Process.is_alive&lt;/code&gt;&lt;/a&gt; will join the process. Even so it is probably good practice to explicitly join all the processes that you start.</source>
          <target state="translated">Unixでは、プロセスが終了しても参加していないと、ゾンビになります。新しいプロセスが開始する（または&lt;a href=&quot;#multiprocessing.active_children&quot;&gt; &lt;code&gt;active_children()&lt;/code&gt; &lt;/a&gt;が呼び出される）たびに、まだ結合されていないすべての完了したプロセスが結合されるので、それほど多くないはずです。また、終了したプロセスの&lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt; &lt;code&gt;Process.is_alive&lt;/code&gt; を呼び出す&lt;/a&gt;と、プロセスに参加します。それでも、開始するすべてのプロセスを明示的に結合することは、おそらく良い習慣です。</target>
        </trans-unit>
        <trans-unit id="20c7bf34a19e7e868e7d7ee4afbbdea045c0de94" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the &lt;code&gt;close&lt;/code&gt; method result (exit status) into an exit code if it is not &lt;code&gt;None&lt;/code&gt;. On Windows, the &lt;code&gt;close&lt;/code&gt; method result is directly the exit code (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">Unixでは、&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt; &lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;close&lt;/code&gt; メソッドの結果（終了ステータス）が &lt;code&gt;None&lt;/code&gt; でない場合に終了コードに変換できます。Windowsでは、 &lt;code&gt;close&lt;/code&gt; メソッドの結果は直接終了コード（または &lt;code&gt;None&lt;/code&gt; ）になります。</target>
        </trans-unit>
        <trans-unit id="fd8df95362b8d364eb0e10e82548a253c70aea11" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the result (exit status) into an exit code. On Windows, the result is directly the exit code.</source>
          <target state="translated">Unixでは、&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt; &lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; &lt;/a&gt;を使用して、結果（終了ステータス）を終了コードに変換できます。Windowsでは、結果は直接終了コードになります。</target>
        </trans-unit>
        <trans-unit id="eac03dafabd5b9228353f47e1be8ab58e5322fe4" translate="yes" xml:space="preserve">
          <source>On Unix, an initial &lt;code&gt;~&lt;/code&gt; is replaced by the environment variable &lt;code id=&quot;index-3&quot;&gt;HOME&lt;/code&gt; if it is set; otherwise the current user&amp;rsquo;s home directory is looked up in the password directory through the built-in module &lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;. An initial &lt;code&gt;~user&lt;/code&gt; is looked up directly in the password directory.</source>
          <target state="translated">Unixでは、最初の &lt;code&gt;~&lt;/code&gt; が設定されている場合、環境変数 &lt;code id=&quot;index-3&quot;&gt;HOME&lt;/code&gt; に置き換えられます。それ以外の場合、現在のユーザーのホームディレクトリは、組み込みモジュール&lt;a href=&quot;pwd#module-pwd&quot;&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/a&gt;によってパスワードディレクトリで検索されます。初期 &lt;code&gt;~user&lt;/code&gt; パスワードディレクトリ内で直接検索されます。</target>
        </trans-unit>
        <trans-unit id="90a3c08a07528042488b78006ddb2bd1f632d904" translate="yes" xml:space="preserve">
          <source>On Unix, command line arguments are passed by bytes from OS. Python decodes them with filesystem encoding and &amp;ldquo;surrogateescape&amp;rdquo; error handler. When you need original bytes, you can get it by &lt;code&gt;[os.fsencode(arg) for arg in sys.argv]&lt;/code&gt;.</source>
          <target state="translated">Unixでは、コマンドライン引数はOSからバイトで渡されます。 Pythonは、ファイルシステムエンコーディングと「surrogateescape」エラーハンドラーでそれらをデコードします。元のバイトが必要な場合は、 &lt;code&gt;[os.fsencode(arg) for arg in sys.argv]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93002bc4f16ed4f7287d3b4688f861b295aba774" translate="yes" xml:space="preserve">
          <source>On Unix, if &lt;em&gt;src&lt;/em&gt; is a file and &lt;em&gt;dst&lt;/em&gt; is a directory or vice-versa, an &lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt;&lt;code&gt;IsADirectoryError&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt;&lt;code&gt;NotADirectoryError&lt;/code&gt;&lt;/a&gt; will be raised respectively. If both are directories and &lt;em&gt;dst&lt;/em&gt; is empty, &lt;em&gt;dst&lt;/em&gt; will be silently replaced. If &lt;em&gt;dst&lt;/em&gt; is a non-empty directory, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised. If both are files, &lt;em&gt;dst&lt;/em&gt; it will be replaced silently if the user has permission. The operation may fail on some Unix flavors if &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; are on different filesystems. If successful, the renaming will be an atomic operation (this is a POSIX requirement).</source>
          <target state="translated">Unixでは、&lt;em&gt;src&lt;/em&gt;がファイルで&lt;em&gt;dst&lt;/em&gt;がディレクトリの場合、またはその逆の場合、&lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt; &lt;code&gt;IsADirectoryError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt; &lt;code&gt;NotADirectoryError&lt;/code&gt; &lt;/a&gt;がそれぞれ発生します。両方がディレクトリで、&lt;em&gt;dst&lt;/em&gt;が空の場合、&lt;em&gt;dst&lt;/em&gt;は警告なしに置き換えられます。場合&lt;em&gt;dstが&lt;/em&gt;空でないディレクトリである、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のが&lt;/a&gt;発生します。両方がファイルの場合、ユーザーが権限を持っている場合、&lt;em&gt;dst&lt;/em&gt;はサイレントに置き換えられます。&lt;em&gt;src&lt;/em&gt;と&lt;em&gt;dst&lt;/em&gt;が異なるファイルシステムにある場合、一部のUnixフレーバーでは操作が失敗する場合があります。成功した場合、名前の変更はアトミック操作になります（これはPOSIXの要件です）。</target>
        </trans-unit>
        <trans-unit id="8925c0a2f7ee268b25b69dc902bb3f8f5965b1b3" translate="yes" xml:space="preserve">
          <source>On Unix, if the process is being traced or if &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; was called with &lt;a href=&quot;#os.WUNTRACED&quot;&gt;&lt;code&gt;WUNTRACED&lt;/code&gt;&lt;/a&gt; option, the caller must first check if &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; is true. This function must not be called if &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; is true.</source>
          <target state="translated">Unixでは、プロセスがトレースされている場合、または&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#os.WUNTRACED&quot;&gt; &lt;code&gt;WUNTRACED&lt;/code&gt; &lt;/a&gt;オプションを指定して呼び出された場合、呼び出し元は最初に &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; がtrueであるかどうかを確認する必要があります。 &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; がtrueの場合は、この関数を呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="8780f206d9a466abf25b51a1356f99b2ac3e12d8" translate="yes" xml:space="preserve">
          <source>On Unix, keys and values are decoded with &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler. Use &lt;a href=&quot;#os.getenvb&quot;&gt;&lt;code&gt;os.getenvb()&lt;/code&gt;&lt;/a&gt; if you would like to use a different encoding.</source>
          <target state="translated">Unixでは、キーと値は&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;'surrogateescape'&lt;/code&gt; エラーハンドラーでデコードされます。別のエンコーディングを使用したい場合は&lt;a href=&quot;#os.getenvb&quot;&gt; &lt;code&gt;os.getenvb()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="2736be53c72c433fb105b8ad845ba0292116edf7" translate="yes" xml:space="preserve">
          <source>On Unix, keys and values use &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler. Use &lt;a href=&quot;#os.environb&quot;&gt;&lt;code&gt;environb&lt;/code&gt;&lt;/a&gt; if you would like to use a different encoding.</source>
          <target state="translated">Unixでは、キーと値は&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;'surrogateescape'&lt;/code&gt; エラーハンドラーを使用します。使用して、&lt;a href=&quot;#os.environb&quot;&gt; &lt;code&gt;environb&lt;/code&gt; &lt;/a&gt;あなたが別のエンコーディングを使用したい場合。</target>
        </trans-unit>
        <trans-unit id="e0c4f12b4b23fde3793d78231c974ebbe635b6cb" translate="yes" xml:space="preserve">
          <source>On Unix, the &lt;code&gt;myapp.pyz&lt;/code&gt; file is executable as it stands. You can rename the file to remove the &lt;code&gt;.pyz&lt;/code&gt; extension if you prefer a &amp;ldquo;plain&amp;rdquo; command name. On Windows, the &lt;code&gt;myapp.pyz[w]&lt;/code&gt; file is executable by virtue of the fact that the Python interpreter registers the &lt;code&gt;.pyz&lt;/code&gt; and &lt;code&gt;.pyzw&lt;/code&gt; file extensions when installed.</source>
          <target state="translated">Unixでは、 &lt;code&gt;myapp.pyz&lt;/code&gt; ファイルはそのまま実行可能です。「プレーン」なコマンド名を使用したい場合は、ファイルの名前を変更して &lt;code&gt;.pyz&lt;/code&gt; 拡張子を削除できます。Windowsでは、Pythonインタープリターが &lt;code&gt;.pyz&lt;/code&gt; および &lt;code&gt;.pyzw&lt;/code&gt; ファイル拡張子をインストール時に登録するため、 &lt;code&gt;myapp.pyz[w]&lt;/code&gt; ファイルは実行可能です。</target>
        </trans-unit>
        <trans-unit id="c8f756c834d5e154ecd1fc2f824c744c6fb65726" translate="yes" xml:space="preserve">
          <source>On Unix, the encoding is the locale encoding.</source>
          <target state="translated">Unix では、エンコーディングはロケールエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="4130f28e99fb9d275797c90efd13d5dc34107bb6" translate="yes" xml:space="preserve">
          <source>On Unix, the return value is the exit status of the process encoded in the format specified for &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;. Note that POSIX does not specify the meaning of the return value of the C &lt;code&gt;system()&lt;/code&gt; function, so the return value of the Python function is system-dependent.</source>
          <target state="translated">Unixでは、戻り値は、&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; に&lt;/a&gt;指定された形式でエンコードされたプロセスの終了ステータスです。POSIXはC &lt;code&gt;system()&lt;/code&gt; 関数の戻り値の意味を指定しないため、Python関数の戻り値はシステムに依存することに注意してください。</target>
        </trans-unit>
        <trans-unit id="db73826f114b93339271a1e0fe842703c96cf902" translate="yes" xml:space="preserve">
          <source>On Unix, this method always requires a system call. On Windows, it only requires a system call if &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; and the entry is a reparse point (for example, a symbolic link or directory junction).</source>
          <target state="translated">Unixでは、このメソッドは常にシステムコールを必要とします。Windowsでは、&lt;em&gt;follow_symlinks&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; で、エントリが再解析ポイント（たとえば、シンボリックリンクまたはディレクトリジャンクション）である場合にのみ、システムコールが必要です。</target>
        </trans-unit>
        <trans-unit id="150170a27442f2fab1bfdced209dec9ff8347086" translate="yes" xml:space="preserve">
          <source>On Unix-based systems, &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; uses the system&amp;rsquo;s &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/opendir.html&quot;&gt;opendir()&lt;/a&gt; and &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/readdir_r.html&quot;&gt;readdir()&lt;/a&gt; functions. On Windows, it uses the Win32 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364418(v=vs.85).aspx&quot;&gt;FindFirstFileW&lt;/a&gt; and &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364428(v=vs.85).aspx&quot;&gt;FindNextFileW&lt;/a&gt; functions.</source>
          <target state="translated">Unixベースのシステムでは、&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;はシステムの&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/opendir.html&quot;&gt;opendir &lt;/a&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/readdir_r.html&quot;&gt;（）&lt;/a&gt;関数とreaddir（）関数を使用します。Windowsでは、Win32 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364418(v=vs.85).aspx&quot;&gt;FindFirstFileW&lt;/a&gt;関数と&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364428(v=vs.85).aspx&quot;&gt;FindNextFileW&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="cd3be318054f0f7d3a78e6abe995f4e314388b7a" translate="yes" xml:space="preserve">
          <source>On Unix:</source>
          <target state="translated">Unixで。</target>
        </trans-unit>
        <trans-unit id="063f29033f1f42ed60a4000d40548820821c002e" translate="yes" xml:space="preserve">
          <source>On Unix: Wait for completion of a child process given by process id &lt;em&gt;pid&lt;/em&gt;, and return a tuple containing its process id and exit status indication (encoded as for &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;). The semantics of the call are affected by the value of the integer &lt;em&gt;options&lt;/em&gt;, which should be &lt;code&gt;0&lt;/code&gt; for normal operation.</source>
          <target state="translated">Unixの場合：プロセスID &lt;em&gt;pid&lt;/em&gt;で指定された子プロセスの完了を待機し、そのプロセスIDと終了ステータスの表示（&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; の&lt;/a&gt;ようにエンコード）を含むタプルを返します。呼び出しのセマンティクスは整数&lt;em&gt;オプションの&lt;/em&gt;値の影響を受け&lt;em&gt;ます&lt;/em&gt;。通常の操作では &lt;code&gt;0&lt;/code&gt; にする必要が&lt;em&gt;あります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c6664197221cc90bd320057a225826f63dffde52" translate="yes" xml:space="preserve">
          <source>On VT100s and their software emulations, such as X terminal emulators, there are normally at least four function keys (&lt;code&gt;KEY_F1&lt;/code&gt;, &lt;code&gt;KEY_F2&lt;/code&gt;, &lt;code&gt;KEY_F3&lt;/code&gt;, &lt;code&gt;KEY_F4&lt;/code&gt;) available, and the arrow keys mapped to &lt;code&gt;KEY_UP&lt;/code&gt;, &lt;code&gt;KEY_DOWN&lt;/code&gt;, &lt;code&gt;KEY_LEFT&lt;/code&gt; and &lt;code&gt;KEY_RIGHT&lt;/code&gt; in the obvious way. If your machine has a PC keyboard, it is safe to expect arrow keys and twelve function keys (older PC keyboards may have only ten function keys); also, the following keypad mappings are standard:</source>
          <target state="translated">VT100およびX端末エミュレータなどのソフトウェアエミュレーションでは、通常、少なくとも4つのファンクションキー（ &lt;code&gt;KEY_F1&lt;/code&gt; 、 &lt;code&gt;KEY_F2&lt;/code&gt; 、 &lt;code&gt;KEY_F3&lt;/code&gt; 、 &lt;code&gt;KEY_F4&lt;/code&gt; ）が利用可能で、矢印キーは &lt;code&gt;KEY_UP&lt;/code&gt; 、 &lt;code&gt;KEY_DOWN&lt;/code&gt; 、 &lt;code&gt;KEY_LEFT&lt;/code&gt; 、および &lt;code&gt;KEY_RIGHT&lt;/code&gt; にマップされています。マシンにPCキーボードが搭載されている場合、矢印キーと12個のファンクションキーを期待しても安全です（古いPCキーボードには10個のファンクションキーしかない場合があります）。また、次のキーパッドマッピングが標準です。</target>
        </trans-unit>
        <trans-unit id="3899987121cefa28d5ca881e747a27db892dca88" translate="yes" xml:space="preserve">
          <source>On VxWorks, os.fork, os.execv and os.spawn*p* are not supported.</source>
          <target state="translated">VxWorksでは、os.fork、os.execv、os.spawn*p*はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="6ee0d33d4266d631edea6f3c6725804aebe33d95" translate="yes" xml:space="preserve">
          <source>On VxWorks, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">VxWorksでは、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="203f05598318fc482dff2c5d330d5adcc5f6680a" translate="yes" xml:space="preserve">
          <source>On Windows &lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;shutil.copyfile()&lt;/code&gt;&lt;/a&gt; uses a bigger default buffer size (1 MiB instead of 64 KiB) and a &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview()&lt;/code&gt;&lt;/a&gt;-based variant of &lt;a href=&quot;#shutil.copyfileobj&quot;&gt;&lt;code&gt;shutil.copyfileobj()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">Windows上で&lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;shutil.copyfile()&lt;/code&gt; は、&lt;/a&gt;より大きなデフォルトのバッファサイズ（代わりに64 KiBのの1 MIB）を使用し、&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview()&lt;/code&gt; &lt;/a&gt;のベースバリアント&lt;a href=&quot;#shutil.copyfileobj&quot;&gt; &lt;code&gt;shutil.copyfileobj()&lt;/code&gt; が&lt;/a&gt;使用されています。</target>
        </trans-unit>
        <trans-unit id="8d9ce61f86eb4d4ac3c24d7367b804553ab20d7c" translate="yes" xml:space="preserve">
          <source>On Windows CE only the standard calling convention is used, for convenience the &lt;a href=&quot;#ctypes.WinDLL&quot;&gt;&lt;code&gt;WinDLL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ctypes.OleDLL&quot;&gt;&lt;code&gt;OleDLL&lt;/code&gt;&lt;/a&gt; use the standard calling convention on this platform.</source>
          <target state="translated">Windows CEでは、標準の呼び出し規約のみが使用されます。便宜上、&lt;a href=&quot;#ctypes.WinDLL&quot;&gt; &lt;code&gt;WinDLL&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ctypes.OleDLL&quot;&gt; &lt;code&gt;OleDLL&lt;/code&gt; &lt;/a&gt;はこのプラットフォームの標準の呼び出し規約を使用します。</target>
        </trans-unit>
        <trans-unit id="fb04bf356ebd737c66dd73bb5259a054c9ae06c3" translate="yes" xml:space="preserve">
          <source>On Windows creating a &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt; instance may fail even if the DLL name exists. When a dependent DLL of the loaded DLL is not found, a &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; error is raised with the message &lt;em&gt;&amp;ldquo;[WinError 126] The specified module could not be found&amp;rdquo;.&lt;/em&gt; This error message does not contain the name of the missing DLL because the Windows API does not return this information making this error hard to diagnose. To resolve this error and determine which DLL is not found, you need to find the list of dependent DLLs and determine which one is not found using Windows debugging and tracing tools.</source>
          <target state="translated">Windowsでは、DLL名が存在していても、&lt;a href=&quot;#ctypes.CDLL&quot;&gt; &lt;code&gt;CDLL&lt;/code&gt; &lt;/a&gt;インスタンスの作成に失敗する場合があります。ロードされたDLLの依存DLLが見つからない場合、&lt;em&gt;「[WinError126]指定されたモジュールが見つかりませんでした」&lt;/em&gt;というメッセージとともに&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;エラーが発生します&lt;em&gt;。&lt;/em&gt;このエラーメッセージには、欠落しているDLLの名前が含まれていません。これは、Windows APIがこの情報を返さないため、このエラーの診断が困難になるためです。このエラーを解決し、どのDLLが見つからないかを判断するには、依存するDLLのリストを見つけ、Windowsのデバッグおよびトレースツールを使用して、どのDLLが見つからないかを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="7681719513275f5101654d8f104bb0a386a1bf9b" translate="yes" xml:space="preserve">
          <source>On Windows network interfaces have different names in different contexts (all names are examples):</source>
          <target state="translated">Windowsでは、ネットワークインターフェースは異なるコンテキストで異なる名前を持っています(すべての名前は例です)。</target>
        </trans-unit>
        <trans-unit id="0867eba7d4a0405fe6540f206891d83e1500d5af" translate="yes" xml:space="preserve">
          <source>On Windows subprocesses are provided by &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; only (default), &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; has no subprocess support.</source>
          <target state="translated">Windowsでは、サブプロセスは&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;のみによって提供され（デフォルト）、&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;はサブプロセスをサポートしません。</target>
        </trans-unit>
        <trans-unit id="f8900df099d23fe4cefc3ed2ff747e1965dae1b2" translate="yes" xml:space="preserve">
          <source>On Windows systems, the following attributes are also available:</source>
          <target state="translated">Windowsシステムでは、以下の属性も利用できます。</target>
        </trans-unit>
        <trans-unit id="ddfe0eef2e2f38ebe4f48d369d9ce1a6cca527aa" translate="yes" xml:space="preserve">
          <source>On Windows the Win32 API function &lt;code&gt;TerminateProcess()&lt;/code&gt; is called to stop the child process.</source>
          <target state="translated">Windowsでは、Win32 API関数 &lt;code&gt;TerminateProcess()&lt;/code&gt; が呼び出され、子プロセスが停止します。</target>
        </trans-unit>
        <trans-unit id="737fe33437bc6a2ea80e837e0281f2030d4293e1" translate="yes" xml:space="preserve">
          <source>On Windows this method is an alias for &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、このメソッドは&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="2a9d37ebffa50750cbeaa7ad01c13a30b0983c37" translate="yes" xml:space="preserve">
          <source>On Windows with &lt;code&gt;shell=True&lt;/code&gt;, the &lt;code id=&quot;index-2&quot;&gt;COMSPEC&lt;/code&gt; environment variable specifies the default shell. The only time you need to specify &lt;code&gt;shell=True&lt;/code&gt; on Windows is when the command you wish to execute is built into the shell (e.g. &lt;strong&gt;dir&lt;/strong&gt; or &lt;strong&gt;copy&lt;/strong&gt;). You do not need &lt;code&gt;shell=True&lt;/code&gt; to run a batch file or console-based executable.</source>
          <target state="translated">&lt;code&gt;shell=True&lt;/code&gt; を使用するWindows では、 &lt;code id=&quot;index-2&quot;&gt;COMSPEC&lt;/code&gt; 環境変数はデフォルトのシェルを指定します。Windowsで &lt;code&gt;shell=True&lt;/code&gt; を指定する必要があるのは、実行するコマンドがシェルに組み込まれているときだけです（たとえば、&lt;strong&gt;dir&lt;/strong&gt;または&lt;strong&gt;copy&lt;/strong&gt;）。バッチファイルまたはコンソールベースの実行可能ファイルを実行するために、 &lt;code&gt;shell=True&lt;/code&gt; は必要ありません。</target>
        </trans-unit>
        <trans-unit id="644fd389f0194cebaf7154a9a1f88aabdea9f63c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; uses win32 structured exception handling to prevent crashes from general protection faults when functions are called with invalid argument values:</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;はwin32構造化例外処理を使用して、無効な引数値で関数が呼び出された場合の一般保護違反によるクラッシュを防止します。</target>
        </trans-unit>
        <trans-unit id="e20bd18b01b22d756d7fbac009a31d413b902ceb" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; can only be called with &lt;a href=&quot;#signal.SIGABRT&quot;&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGFPE&quot;&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGILL&quot;&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGINT&quot;&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGSEGV&quot;&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGTERM&quot;&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#signal.SIGBREAK&quot;&gt;&lt;code&gt;SIGBREAK&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in any other case. Note that not all systems define the same set of signal names; an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if a signal name is not defined as &lt;code&gt;SIG*&lt;/code&gt; module level constant.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal()&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#signal.SIGABRT&quot;&gt; &lt;code&gt;SIGABRT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIGFPE&quot;&gt; &lt;code&gt;SIGFPE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIGILL&quot;&gt; &lt;code&gt;SIGILL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIGINT&quot;&gt; &lt;code&gt;SIGINT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIGSEGV&quot;&gt; &lt;code&gt;SIGSEGV&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIGTERM&quot;&gt; &lt;code&gt;SIGTERM&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#signal.SIGBREAK&quot;&gt; &lt;code&gt;SIGBREAK&lt;/code&gt; で&lt;/a&gt;のみ呼び出すことができます。A&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;その他の場合に発生します。すべてのシステムが同じ信号名のセットを定義しているわけではないことに注意してください。シグナル名が &lt;code&gt;SIG*&lt;/code&gt; モジュールレベル定数として定義されていない場合、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1b11ed5ae47203f10f9e39c4677ebfc9b376f13c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; can only be called with &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGILL&lt;/code&gt;, &lt;code&gt;SIGINT&lt;/code&gt;, &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGTERM&lt;/code&gt;, or &lt;code&gt;SIGBREAK&lt;/code&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in any other case. Note that not all systems define the same set of signal names; an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if a signal name is not defined as &lt;code&gt;SIG*&lt;/code&gt; module level constant.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;SIGABRT&lt;/code&gt; 、 &lt;code&gt;SIGFPE&lt;/code&gt; 、 &lt;code&gt;SIGILL&lt;/code&gt; 、 &lt;code&gt;SIGINT&lt;/code&gt; 、 &lt;code&gt;SIGSEGV&lt;/code&gt; 、 &lt;code&gt;SIGTERM&lt;/code&gt; 、または &lt;code&gt;SIGBREAK&lt;/code&gt; でのみ呼び出すことができます。 A &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;その他の場合に発生します。すべてのシステムが同じ信号名のセットを定義しているわけではないことに注意してください。シグナル名が &lt;code&gt;SIG*&lt;/code&gt; モジュールレベルの定数として定義されていない場合、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="c63488f33cea6ed67ee2b396df2631f882861591" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code id=&quot;index-4&quot;&gt;USERPROFILE&lt;/code&gt; will be used if set, otherwise a combination of &lt;code id=&quot;index-5&quot;&gt;HOMEPATH&lt;/code&gt; and &lt;code id=&quot;index-6&quot;&gt;HOMEDRIVE&lt;/code&gt; will be used. An initial &lt;code&gt;~user&lt;/code&gt; is handled by stripping the last directory component from the created user path derived above.</source>
          <target state="translated">Windowsでは、設定されている場合は &lt;code id=&quot;index-4&quot;&gt;USERPROFILE&lt;/code&gt; が使用され、そうでない場合は &lt;code id=&quot;index-5&quot;&gt;HOMEPATH&lt;/code&gt; と &lt;code id=&quot;index-6&quot;&gt;HOMEDRIVE&lt;/code&gt; の組み合わせが使用されます。最初の〜userは、上記で作成された作成済みユーザーパスから最後のディレクトリコンポーネントを &lt;code&gt;~user&lt;/code&gt; で処理されます。</target>
        </trans-unit>
        <trans-unit id="78373ba9cc1e658aeb2f4b7766b4619af35de1bd" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;%name%&lt;/code&gt; expansions are supported in addition to &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;${name}&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;$name&lt;/code&gt; および &lt;code&gt;${name}&lt;/code&gt; に加えて、 &lt;code&gt;%name%&lt;/code&gt; の拡張がサポートされています。</target>
        </trans-unit>
        <trans-unit id="b9eb07682cf8d7554c89ddc6eb7649bd072a9065" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;SIGTERM&lt;/code&gt; is an alias for &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;CTRL_C_EVENT&lt;/code&gt; and &lt;code&gt;CTRL_BREAK_EVENT&lt;/code&gt; can be sent to processes started with a &lt;em&gt;creationflags&lt;/em&gt; parameter which includes &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;SIGTERM&lt;/code&gt; は&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。 &lt;code&gt;CTRL_C_EVENT&lt;/code&gt; および &lt;code&gt;CTRL_BREAK_EVENT&lt;/code&gt; は、 &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; を含む&lt;em&gt;creationflags&lt;/em&gt;パラメーターで開始されたプロセスに送信できます。</target>
        </trans-unit>
        <trans-unit id="b164d50e56bce46e5b506000cebb450ea480b3ac" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;TCP_KEEPIDLE&lt;/code&gt;, &lt;code&gt;TCP_KEEPINTVL&lt;/code&gt; appear if run-time Windows supports.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;TCP_KEEPIDLE&lt;/code&gt; Windowsがサポートしている場合、TCP_KEEPIDLE、 &lt;code&gt;TCP_KEEPINTVL&lt;/code&gt; が表示されます。</target>
        </trans-unit>
        <trans-unit id="ae142dbc5c5a17511c3df2343dcf4473e9997091" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;find_library()&lt;/code&gt; searches along the system search path, and returns the full pathname, but since there is no predefined naming scheme a call like &lt;code&gt;find_library(&quot;c&quot;)&lt;/code&gt; will fail and return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;find_library()&lt;/code&gt; はシステム検索パスに沿って検索し、完全なパス名を返しますが、事前定義された命名スキームがないため、 &lt;code&gt;find_library(&quot;c&quot;)&lt;/code&gt; のような呼び出しは失敗し、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5c65155288185d4a2495f910b1a07cb130b3e4d7" translate="yes" xml:space="preserve">
          <source>On Windows, SIGTERM is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;. CTRL_C_EVENT and CTRL_BREAK_EVENT can be sent to processes started with a &lt;em&gt;creationflags&lt;/em&gt; parameter which includes &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、SIGTERMは&lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; の&lt;/a&gt;エイリアスです。CTRL_C_EVENTおよびCTRL_BREAK_EVENT は、 &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; を含む&lt;em&gt;creationflags&lt;/em&gt;パラメーターで開始されたプロセスに送信できます。</target>
        </trans-unit>
        <trans-unit id="7f3b8e43dba078c733dd83c201ede25e60d579e5" translate="yes" xml:space="preserve">
          <source>On Windows, UTF-8 is used for the console device. Non-character devices such as disk files and pipes use the system locale encoding (i.e. the ANSI codepage). Non-console character devices such as NUL (i.e. where &lt;code&gt;isatty()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt;) use the value of the console input and output codepages at startup, respectively for stdin and stdout/stderr. This defaults to the system locale encoding if the process is not initially attached to a console.</source>
          <target state="translated">Windowsでは、コンソールデバイスにUTF-8が使用されます。ディスクファイルやパイプなどの非文字デバイスは、システムロケールエンコーディング（つまり、ANSIコードページ）を使用します。 NULなどの非コンソール文字デバイス（つまり、 &lt;code&gt;isatty()&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; を返す）は、起動時にコンソールの入力および出力コードページの値をそれぞれstdinおよびstdout / stderrに使用します。プロセスが最初にコンソールに接続されていない場合、これはデフォルトでシステムロケールエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="b01b208cf55586de3c3689ead1e3a6f10f966e03" translate="yes" xml:space="preserve">
          <source>On Windows, a symlink represents either a file or a directory, and does not morph to the target dynamically. If the target is present, the type of the symlink will be created to match. Otherwise, the symlink will be created as a directory if &lt;em&gt;target_is_directory&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; or a file symlink (the default) otherwise. On non-Windows platforms, &lt;em&gt;target_is_directory&lt;/em&gt; is ignored.</source>
          <target state="translated">Windowsでは、シンボリックリンクはファイルまたはディレクトリのいずれかを表し、ターゲットに動的に変形しません。ターゲットが存在する場合、一致するようにシンボリックリンクのタイプが作成されます。それ以外の場合、&lt;em&gt;target_is_directory&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合はシンボリックリンクがディレクトリとして作成され、それ以外の場合はファイルシンボリックリンク（デフォルト）が作成されます。Windows以外のプラットフォームでは、&lt;em&gt;target_is_directory&lt;/em&gt;は無視されます。</target>
        </trans-unit>
        <trans-unit id="c2d9aee7b296b4bb607ee17ff222cfff0af15e2d" translate="yes" xml:space="preserve">
          <source>On Windows, an &lt;em&gt;args&lt;/em&gt; sequence is converted to a string that can be parsed using the following rules (which correspond to the rules used by the MS C runtime):</source>
          <target state="translated">Windowsでは、&lt;em&gt;args&lt;/em&gt;シーケンスは、次のルール（MS Cランタイムで使用されるルールに対応する）を使用して解析できる文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="afd63b6fc8ddc6f6804a57f1784ecec5567ec0b8" translate="yes" xml:space="preserve">
          <source>On Windows, attempting to remove a file that is in use causes an exception to be raised; on Unix, the directory entry is removed but the storage allocated to the file is not made available until the original file is no longer in use.</source>
          <target state="translated">Windows では、使用中のファイルを削除しようとすると例外が発生します。Unix では、ディレクトリエントリは削除されますが、元のファイルが使用中でなくなるまで、ファイルに割り当てられたストレージは利用できません。</target>
        </trans-unit>
        <trans-unit id="324c0800a7c7e804335674d04ffb5659d07d9331" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;args&lt;/em&gt; is a sequence, it will be converted to a string in a manner described in &lt;a href=&quot;#converting-argument-sequence&quot;&gt;Converting an argument sequence to a string on Windows&lt;/a&gt;. This is because the underlying &lt;code&gt;CreateProcess()&lt;/code&gt; operates on strings.</source>
          <target state="translated">Windowsでは、&lt;em&gt;args&lt;/em&gt;がシーケンスの場合、Windowsで&lt;a href=&quot;#converting-argument-sequence&quot;&gt;の引数シーケンスの文字列への変換&lt;/a&gt;で説明されている方法で文字列に変換されます。これは、基になる &lt;code&gt;CreateProcess()&lt;/code&gt; が文字列を操作するためです。</target>
        </trans-unit>
        <trans-unit id="1ca0b135ebc47d0ae31593b807a8b41656a98f18" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;close_fds&lt;/em&gt; is true then no handles will be inherited by the child process unless explicitly passed in the &lt;code&gt;handle_list&lt;/code&gt; element of &lt;a href=&quot;#subprocess.STARTUPINFO.lpAttributeList&quot;&gt;&lt;code&gt;STARTUPINFO.lpAttributeList&lt;/code&gt;&lt;/a&gt;, or by standard handle redirection.</source>
          <target state="translated">場合Windowsでは、&lt;em&gt;close_fdsが&lt;/em&gt;真で明示的に渡さない限り、何のハンドルは子プロセスに継承されません &lt;code&gt;handle_list&lt;/code&gt; の要素&lt;a href=&quot;#subprocess.STARTUPINFO.lpAttributeList&quot;&gt; &lt;code&gt;STARTUPINFO.lpAttributeList&lt;/code&gt; &lt;/a&gt;、または標準ハンドルのリダイレクトによって。</target>
        </trans-unit>
        <trans-unit id="58cdff6f38e8a2fc1c45a1396be1d9e11b5516bf" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;dst&lt;/em&gt; exists a &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is always raised.</source>
          <target state="translated">Windowsでは、&lt;em&gt;dst&lt;/em&gt;が存在する場合、常に&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="151772e095fb4521d0d15c163d22479ec518b344" translate="yes" xml:space="preserve">
          <source>On Windows, invoke the &lt;code&gt;venv&lt;/code&gt; command as follows:</source>
          <target state="translated">Windowsでは、次のように &lt;code&gt;venv&lt;/code&gt; コマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9f8dcef9d943b988c3e3efd4a7635b6a0452bcf9" translate="yes" xml:space="preserve">
          <source>On Windows, it disables Windows Error Reporting dialogs using &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx&quot;&gt;SetErrorMode&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx&quot;&gt;SetErrorMode&lt;/a&gt;を使用してWindowsエラー報告ダイアログを無効にします。</target>
        </trans-unit>
        <trans-unit id="80f74d4a0cc9c87f486e6c7e5dfa2600066b3d59" translate="yes" xml:space="preserve">
          <source>On Windows, it will use &lt;code&gt;CryptGenRandom()&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;CryptGenRandom()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5fdaa8220ca2781471b1bc92ae5261ce25d132d2" translate="yes" xml:space="preserve">
          <source>On Windows, non-inheritable handles and file descriptors are closed in child processes, except for standard streams (file descriptors 0, 1 and 2: stdin, stdout and stderr), which are always inherited. Using &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions, all inheritable handles and all inheritable file descriptors are inherited. Using the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module, all file descriptors except standard streams are closed, and inheritable handles are only inherited if the &lt;em&gt;close_fds&lt;/em&gt; parameter is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、継承できないハンドルとファイル記述子は、常に継承される標準ストリーム（ファイル記述子0、1、2：stdin、stdout、stderr）を除いて、子プロセスで閉じられます。&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;関数を使用すると、すべての継承可能なハンドルとすべての継承可能なファイル記述子が継承されます。&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールを使用すると、標準ストリームを除くすべてのファイル記述子が閉じられ、&lt;em&gt;close_fds&lt;/em&gt;パラメータが &lt;code&gt;False&lt;/code&gt; の場合にのみ、継承可能なハンドルが継承されます。</target>
        </trans-unit>
        <trans-unit id="f9dbbca27b5bff454495040c1d717be7efc3364e" translate="yes" xml:space="preserve">
          <source>On Windows, opening a console buffer may return a subclass of &lt;a href=&quot;io#io.RawIOBase&quot;&gt;&lt;code&gt;io.RawIOBase&lt;/code&gt;&lt;/a&gt; other than &lt;a href=&quot;io#io.FileIO&quot;&gt;&lt;code&gt;io.FileIO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、コンソールバッファーを開くと、&lt;a href=&quot;io#io.RawIOBase&quot;&gt; &lt;code&gt;io.RawIOBase&lt;/code&gt; &lt;/a&gt;以外のio.RawIOBaseのサブクラスが返される場合が&lt;a href=&quot;io#io.FileIO&quot;&gt; &lt;code&gt;io.FileIO&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cfe81378442524ce067312e393681abdbd697179" translate="yes" xml:space="preserve">
          <source>On Windows, passing &lt;code&gt;follow_symlinks=False&lt;/code&gt; will disable following all name-surrogate reparse points, which includes symlinks and directory junctions. Other types of reparse points that do not resemble links or that the operating system is unable to follow will be opened directly. When following a chain of multiple links, this may result in the original link being returned instead of the non-link that prevented full traversal. To obtain stat results for the final path in this case, use the &lt;a href=&quot;os.path#os.path.realpath&quot;&gt;&lt;code&gt;os.path.realpath()&lt;/code&gt;&lt;/a&gt; function to resolve the path name as far as possible and call &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt; on the result. This does not apply to dangling symlinks or junction points, which will raise the usual exceptions.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;follow_symlinks=False&lt;/code&gt; を渡すと、シンボリックリンクやディレクトリジャンクションを含むすべての名前代理リパースポイントの追跡が無効になります。リンクに似ていない、またはオペレーティングシステムが追跡できないその他の種類の再解析ポイントは、直接開かれます。複数のリンクのチェーンをたどると、完全なトラバーサルを妨げた非リンクではなく元のリンクが返される可能性があります。この場合の最終パスの統計結果を取得するには、&lt;a href=&quot;os.path#os.path.realpath&quot;&gt; &lt;code&gt;os.path.realpath()&lt;/code&gt; &lt;/a&gt;関数を使用してパス名を可能な限り解決し、結果に対して&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; &lt;/a&gt;を呼び出します。これは、通常の例外が発生するぶら下がりシンボリックリンクまたはジャンクションポイントには適用されません。</target>
        </trans-unit>
        <trans-unit id="c6205a30ddac655e92925086962c3c5fcb701b9b" translate="yes" xml:space="preserve">
          <source>On Windows, registration of the &lt;code&gt;.pyz&lt;/code&gt; extension is optional, and furthermore, there are certain places that don&amp;rsquo;t recognise registered extensions &amp;ldquo;transparently&amp;rdquo; (the simplest example is that &lt;code&gt;subprocess.run(['myapp'])&lt;/code&gt; won&amp;rsquo;t find your application - you need to explicitly specify the extension).</source>
          <target state="translated">Windowsでは、 &lt;code&gt;.pyz&lt;/code&gt; 拡張子の登録はオプションです。さらに、登録された拡張子を「透過的に」認識しない特定の場所があります（最も単純な例は、 &lt;code&gt;subprocess.run(['myapp'])&lt;/code&gt; がアプリケーション-拡張子を明示的に指定する必要があります）。</target>
        </trans-unit>
        <trans-unit id="b7cef7a8f7aec70f461146fb489c493eadecdb76" translate="yes" xml:space="preserve">
          <source>On Windows, return &lt;em&gt;status&lt;/em&gt; shifted right by 8 bits.</source>
          <target state="translated">Windowsでは、戻り&lt;em&gt;ステータス&lt;/em&gt;が8ビット右にシフトします。</target>
        </trans-unit>
        <trans-unit id="e03e9ab7254bf5d9f3bb216b7f00876ce2b424a1" translate="yes" xml:space="preserve">
          <source>On Windows, some dlls export functions not by name but by ordinal. These functions can be accessed by indexing the dll object with the ordinal number:</source>
          <target state="translated">Windowsでは、いくつかのdllは名前ではなく順序で関数をエクスポートします。これらの関数は、順序番号を持つDLLオブジェクトにインデックスを付けることでアクセスできます。</target>
        </trans-unit>
        <trans-unit id="cf783f34ae011486fa108e118d4bbe59763b0114" translate="yes" xml:space="preserve">
          <source>On Windows, splits a pathname into drive/UNC sharepoint and relative path.</source>
          <target state="translated">Windowsでは、パス名をドライブ/UNC sharepointと相対パスに分割します。</target>
        </trans-unit>
        <trans-unit id="68fb8e7f05cf4a3d74f2fa5903e1bafcce342f6e" translate="yes" xml:space="preserve">
          <source>On Windows, the &lt;code&gt;st_ino&lt;/code&gt;, &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_nlink&lt;/code&gt; attributes of the &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; are always set to zero. Call &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; to get these attributes.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;st_ino&lt;/code&gt; の、 &lt;code&gt;st_dev&lt;/code&gt; フィールドと &lt;code&gt;st_nlink&lt;/code&gt; の属性&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; には&lt;/a&gt;常にゼロに設定されています。これらの属性を取得するには、&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="66761d013cd2216b1b7b3cd2e296f227d596f61c" translate="yes" xml:space="preserve">
          <source>On Windows, the current directory is always prepended to the &lt;em&gt;path&lt;/em&gt; whether or not you use the default or provide your own, which is the behavior the command shell uses when finding executables. Additionally, when finding the &lt;em&gt;cmd&lt;/em&gt; in the &lt;em&gt;path&lt;/em&gt;, the &lt;code&gt;PATHEXT&lt;/code&gt; environment variable is checked. For example, if you call &lt;code&gt;shutil.which(&quot;python&quot;)&lt;/code&gt;, &lt;a href=&quot;#shutil.which&quot;&gt;&lt;code&gt;which()&lt;/code&gt;&lt;/a&gt; will search &lt;code&gt;PATHEXT&lt;/code&gt; to know that it should look for &lt;code&gt;python.exe&lt;/code&gt; within the &lt;em&gt;path&lt;/em&gt; directories. For example, on Windows:</source>
          <target state="translated">Windowsでは、デフォルトを使用するか独自のものを提供するかどうかに関係なく、常に現在のディレクトリが&lt;em&gt;パスの&lt;/em&gt;先頭に追加されます。これは、実行可能ファイルを検索するときにコマンドシェルが使用する動作です。さらに、&lt;em&gt;パス&lt;/em&gt;で&lt;em&gt;cmd&lt;/em&gt;を見つけると、 &lt;code&gt;PATHEXT&lt;/code&gt; 環境変数がチェックされます。たとえば、 &lt;code&gt;shutil.which(&quot;python&quot;)&lt;/code&gt; を呼び出すと、&lt;a href=&quot;#shutil.which&quot;&gt; &lt;code&gt;which()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;PATHEXT&lt;/code&gt; を検索して、&lt;em&gt;パス&lt;/em&gt;ディレクトリ内で &lt;code&gt;python.exe&lt;/code&gt; を探す必要があることを確認します。たとえば、Windowsの場合：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="983f7bfa681a3a9d17b8f9ddb50e0f8c76511264" translate="yes" xml:space="preserve">
          <source>On Windows, the default event loop &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; supports subprocesses, whereas &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; does not.</source>
          <target state="translated">Windowsでは、デフォルトのイベントループ&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;はサブプロセスをサポートしていますが、&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="9d6f7b60f53b56af7a399af55e0827b6d4cfd445" translate="yes" xml:space="preserve">
          <source>On Windows, the directories &lt;code&gt;C:\TEMP&lt;/code&gt;, &lt;code&gt;C:\TMP&lt;/code&gt;, &lt;code&gt;\TEMP&lt;/code&gt;, and &lt;code&gt;\TMP&lt;/code&gt;, in that order.</source>
          <target state="translated">Windowsでは、ディレクトリ &lt;code&gt;C:\TEMP&lt;/code&gt; 、 &lt;code&gt;C:\TMP&lt;/code&gt; 、 &lt;code&gt;\TEMP&lt;/code&gt; 、および &lt;code&gt;\TMP&lt;/code&gt; がこの順序で。</target>
        </trans-unit>
        <trans-unit id="54e0eb52cbdbb1158e147637462f36af394569b1" translate="yes" xml:space="preserve">
          <source>On Windows, the drive letter is not reset when an absolute path component (e.g., &lt;code&gt;r'\foo'&lt;/code&gt;) is encountered. If a component contains a drive letter, all previous components are thrown away and the drive letter is reset. Note that since there is a current directory for each drive, &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; represents a path relative to the current directory on drive &lt;code&gt;C:&lt;/code&gt; (&lt;code&gt;c:foo&lt;/code&gt;), not &lt;code&gt;c:\foo&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、絶対パスコンポーネント（ &lt;code&gt;r'\foo'&lt;/code&gt; ）が検出されても、ドライブ文字はリセットされません。コンポーネントにドライブ文字が含まれている場合、以前のすべてのコンポーネントは破棄され、ドライブ文字がリセットされます。各ドライブには現在のディレクトリがあるため、 &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; は、ドライブ &lt;code&gt;C:&lt;/code&gt; （ &lt;code&gt;c:foo&lt;/code&gt; ）ではなく、 &lt;code&gt;c:\foo&lt;/code&gt; の現在のディレクトリからの相対パスを表します。。</target>
        </trans-unit>
        <trans-unit id="c3df504605e52e9837e62d0e690a03b408496ac1" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding may be &lt;code&gt;'utf-8'&lt;/code&gt; or &lt;code&gt;'mbcs'&lt;/code&gt;, depending on user configuration.</source>
          <target state="translated">Windowsでは、ユーザーの構成に応じて、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; または &lt;code&gt;'mbcs'&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="77f58003eb530e09c101d14120e7527b154308b9" translate="yes" xml:space="preserve">
          <source>On Windows, the file-like object created by &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; cannot be used where a file object with a file descriptor is expected, such as the stream arguments of &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;によって作成されたファイルのようなオブジェクトは、&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen()&lt;/code&gt; の&lt;/a&gt;ストリーム引数など、ファイル記述子を持つファイルオブジェクトが期待される場所では使用できません。</target>
        </trans-unit>
        <trans-unit id="0d2f852baab8a06d37a6a99be399f20b228e0595" translate="yes" xml:space="preserve">
          <source>On Windows, the following constants are available for comparing against the &lt;code&gt;st_reparse_tag&lt;/code&gt; member returned by &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;. These are well-known constants, but are not an exhaustive list.</source>
          <target state="translated">Windowsでは、次の定数は、と比較するために用意されてい &lt;code&gt;st_reparse_tag&lt;/code&gt; ので返されるメンバー&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;。これらはよく知られた定数ですが、完全なリストではありません。</target>
        </trans-unit>
        <trans-unit id="548033f4f74edd90159967683a7e43861d78a74e" translate="yes" xml:space="preserve">
          <source>On Windows, the following file attribute constants are available for use when testing bits in the &lt;code&gt;st_file_attributes&lt;/code&gt; member returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows API documentation&lt;/a&gt; for more detail on the meaning of these constants.</source>
          <target state="translated">ビットをテストするときにWindowsでは、次のファイル属性定数は使用できます &lt;code&gt;st_file_attributes&lt;/code&gt; ので返されるメンバー&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;。これらの定数の意味の詳細については、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows APIのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c96823b6f593e3c93fa502eb83c4b5bb1b5a0af" translate="yes" xml:space="preserve">
          <source>On Windows, the return value is that returned by the system shell after running &lt;em&gt;command&lt;/em&gt;. The shell is given by the Windows environment variable &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt;: it is usually &lt;strong&gt;cmd.exe&lt;/strong&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</source>
          <target state="translated">Windowsでは、戻り値は&lt;em&gt;command&lt;/em&gt;を実行した後にシステムシェルによって返された値です。シェルは、Windows環境変数 &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt; によって指定されます。通常、シェルは&lt;strong&gt;cmd.exe&lt;/strong&gt;であり、コマンド実行の終了ステータスを返します。非ネイティブシェルを使用しているシステムでは、シェルのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e476f5cdebcf0629f48aebee8947070a3e92fcbe" translate="yes" xml:space="preserve">
          <source>On Windows, the return value is that returned by the system shell after running &lt;em&gt;command&lt;/em&gt;. The shell is given by the Windows environment variable &lt;code id=&quot;index-37&quot;&gt;COMSPEC&lt;/code&gt;: it is usually &lt;strong&gt;cmd.exe&lt;/strong&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</source>
          <target state="translated">Windowsの場合、戻り値は、&lt;em&gt;コマンドの&lt;/em&gt;実行後にシステムシェルによって返される値です。シェルは、Windows環境変数 &lt;code id=&quot;index-37&quot;&gt;COMSPEC&lt;/code&gt; によって指定されます。通常は&lt;strong&gt;cmd.exe&lt;/strong&gt;であり、コマンド実行の終了ステータスを返します。非ネイティブシェルを使用するシステムでは、シェルのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8c1b0007f46b6c5205cec2ccc2367335b248f69b" translate="yes" xml:space="preserve">
          <source>On Windows, therefore, it is often preferable to create an executable from the zipapp. This is relatively easy, although it does require a C compiler. The basic approach relies on the fact that zipfiles can have arbitrary data prepended, and Windows exe files can have arbitrary data appended. So by creating a suitable launcher and tacking the &lt;code&gt;.pyz&lt;/code&gt; file onto the end of it, you end up with a single-file executable that runs your application.</source>
          <target state="translated">したがって、Windowsでは、zipappから実行可能ファイルを作成することをお勧めします。これは比較的簡単ですが、Cコンパイラが必要です。基本的なアプローチは、zipfileには任意のデータを付加でき、Windows exeファイルには任意のデータを付加できるという事実に依存しています。したがって、適切なランチャーを作成し、その &lt;code&gt;.pyz&lt;/code&gt; ファイルを追加すると、アプリケーションを実行する単一ファイルの実行可能ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="37dc40ac402c8823d0b71dfd8517ae8bdca2012b" translate="yes" xml:space="preserve">
          <source>On Windows, this is an OS handle usable with the &lt;code&gt;WaitForSingleObject&lt;/code&gt; and &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; family of API calls. On Unix, this is a file descriptor usable with primitives from the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Windowsでは、これはAPI呼び出しの &lt;code&gt;WaitForSingleObject&lt;/code&gt; および &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; ファミリーで使用可能なOSハンドルです。Unixでは、これは&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;モジュールのプリミティブで使用できるファイル記述子です。</target>
        </trans-unit>
        <trans-unit id="97e0c647fa3b8fd69df5ae6d02b841041c7dc102" translate="yes" xml:space="preserve">
          <source>On Windows, when a foreign function call raises a system exception (for example, due to an access violation), it will be captured and replaced with a suitable Python exception. Further, an auditing event &lt;code&gt;ctypes.seh_exception&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt; will be raised, allowing an audit hook to replace the exception with its own.</source>
          <target state="translated">Windowsでは、外部関数呼び出しでシステム例外が発生すると（たとえば、アクセス違反が原因で）、それがキャプチャされ、適切なPython例外に置き換えられます。さらに、引数 &lt;code&gt;code&lt;/code&gt; 付きの監査イベント &lt;code&gt;ctypes.seh_exception&lt;/code&gt; が発生し、監査フックで例外を独自のものに置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="10b5f3f739606c767f0a53174c343344eb123b63" translate="yes" xml:space="preserve">
          <source>On Windows, when duplicating a standard stream (0: stdin, 1: stdout, 2: stderr), the new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;inheritable&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、標準ストリーム（0：stdin、1：stdout、2：stderr）を複製する場合、新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承可能&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="fb6115c799330ee3de4f9e4a92324f487e44ec5f" translate="yes" xml:space="preserve">
          <source>On Windows: Wait for completion of a process given by process handle &lt;em&gt;pid&lt;/em&gt;, and return a tuple containing &lt;em&gt;pid&lt;/em&gt;, and its exit status shifted left by 8 bits (shifting makes cross-platform use of the function easier). A &lt;em&gt;pid&lt;/em&gt; less than or equal to &lt;code&gt;0&lt;/code&gt; has no special meaning on Windows, and raises an exception. The value of integer &lt;em&gt;options&lt;/em&gt; has no effect. &lt;em&gt;pid&lt;/em&gt; can refer to any process whose id is known, not necessarily a child process. The &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions called with &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt; return suitable process handles.</source>
          <target state="translated">Windowsの場合：プロセスハンドルによって所与のプロセスの完了を待つ&lt;em&gt;PID&lt;/em&gt;、およびタプルを含む戻り&lt;em&gt;PIDを&lt;/em&gt;、その終了ステータス8ビット（シフトが容易関数のクロス・プラットフォームを利用する）だけ左シフトされます。 &lt;code&gt;0&lt;/code&gt; 以下の&lt;em&gt;pid&lt;/em&gt;は、Windowsでは特別な意味を持たず、例外が発生します。整数&lt;em&gt;オプション&lt;/em&gt;の値は影響しません。&lt;em&gt;pid&lt;/em&gt;は、&lt;em&gt;必ずしも子&lt;/em&gt;プロセスである必要はなく、IDが既知の任意のプロセスを参照できます。&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;と呼ばれる機能&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; は、&lt;/a&gt;適切なプロセスのハンドルを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f12c3a4544b46b4dcf9f6fec778669f13f9f9d3" translate="yes" xml:space="preserve">
          <source>On a Unix-like system, random bytes are read from the &lt;code&gt;/dev/urandom&lt;/code&gt; device. If the &lt;code&gt;/dev/urandom&lt;/code&gt; device is not available or not readable, the &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">Unixライクなシステムでは、ランダムなバイトが &lt;code&gt;/dev/urandom&lt;/code&gt; デバイスから読み取られます。場合 &lt;code&gt;/dev/urandom&lt;/code&gt; デバイスが読める利用できるかどうかではない、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; の&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2601d2cefa3f396475ef76603408eb2f24b04bbb" translate="yes" xml:space="preserve">
          <source>On all other platforms, the directories &lt;code&gt;/tmp&lt;/code&gt;, &lt;code&gt;/var/tmp&lt;/code&gt;, and &lt;code&gt;/usr/tmp&lt;/code&gt;, in that order.</source>
          <target state="translated">他のすべてのプラットフォームでは、ディレクトリ &lt;code&gt;/tmp&lt;/code&gt; 、 &lt;code&gt;/var/tmp&lt;/code&gt; 、および &lt;code&gt;/usr/tmp&lt;/code&gt; がこの順序で。</target>
        </trans-unit>
        <trans-unit id="cbc2d24ff952b9a8190a5c30dcfc6274d113abed" translate="yes" xml:space="preserve">
          <source>On all platforms, the configured value is available as the &lt;code&gt;TZPATH&lt;/code&gt; key in &lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt;&lt;code&gt;sysconfig.get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべてのプラットフォームで、構成された値は&lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt; &lt;code&gt;sysconfig.get_config_var()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;TZPATH&lt;/code&gt; キーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="46dbf9b949c04044ffab0fab48aba4115d7ca33a" translate="yes" xml:space="preserve">
          <source>On both platforms, the old value is restored by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どちらのプラットフォームでも、古い値は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;によって復元されます。</target>
        </trans-unit>
        <trans-unit id="17c3210130adf4765432271b8ea3db329dae5e0f" translate="yes" xml:space="preserve">
          <source>On both platforms, the old value is restored by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どちらのプラットフォームでも、古い値は&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;によって復元されます。</target>
        </trans-unit>
        <trans-unit id="8e7006d98db74f1849b0b0e7ef365ada8d73e13e" translate="yes" xml:space="preserve">
          <source>On client connections, the optional parameter &lt;em&gt;server_hostname&lt;/em&gt; specifies the hostname of the service which we are connecting to. This allows a single server to host multiple SSL-based services with distinct certificates, quite similarly to HTTP virtual hosts. Specifying &lt;em&gt;server_hostname&lt;/em&gt; will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;server_side&lt;/em&gt; is true.</source>
          <target state="translated">クライアント接続では、オプションのパラメーター&lt;em&gt;server_hostname&lt;/em&gt;は、接続先のサービスのホスト名を指定します。これにより、単一のサーバーが、HTTP仮想ホストと非常によく似た、別個の証明書を使用して複数のSSLベースのサービスをホストできるようになります。&lt;em&gt;server_side&lt;/em&gt;がtrueの場合、&lt;em&gt;server_hostname&lt;/em&gt;を指定すると&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67540c72da6a0c69935598617862e3eb3b0268da" translate="yes" xml:space="preserve">
          <source>On decoding, replace byte with individual surrogate code ranging from &lt;code&gt;U+DC80&lt;/code&gt; to &lt;code&gt;U+DCFF&lt;/code&gt;. This code will then be turned back into the same byte when the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler is used when encoding the data. (See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt; for more.)</source>
          <target state="translated">デコードに、より範囲の個々の代理コードでバイトを交換 &lt;code&gt;U+DC80&lt;/code&gt; に &lt;code&gt;U+DCFF&lt;/code&gt; 。データのエンコード時に &lt;code&gt;'surrogateescape'&lt;/code&gt; エラーハンドラーが使用されると、このコードは同じバイトに戻ります。（詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="40a675dc2422036bd8b6d3953dd22e9373dc65f0" translate="yes" xml:space="preserve">
          <source>On encountering an invalid cookie, &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; is raised, so if your cookie data comes from a browser you should always prepare for invalid data and catch &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; on parsing.</source>
          <target state="translated">無効なCookieが&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;とCookieErrorが発生するため、Cookieデータがブラウザからのものである場合は、常に無効なデータを準備し、解析時に&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;をキャッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="34f29889fea4fa5095b6af09d7ca99a6568ae898" translate="yes" xml:space="preserve">
          <source>On entry to the context manager, a &lt;code&gt;WarningRecorder&lt;/code&gt; instance is returned. The underlying warnings list from &lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings()&lt;/code&gt;&lt;/a&gt; is available via the recorder object&amp;rsquo;s &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; attribute. As a convenience, the attributes of the object representing the most recent warning can also be accessed directly through the recorder object (see example below). If no warning has been raised, then any of the attributes that would otherwise be expected on an object representing a warning will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">コンテキストマネージャに入ると、 &lt;code&gt;WarningRecorder&lt;/code&gt; インスタンスが返されます。&lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings()&lt;/code&gt; &lt;/a&gt;の基になる警告リストは、レコーダーオブジェクトの&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;属性を介して利用できます。便宜上、最新の警告を表すオブジェクトの属性には、レコーダーオブジェクトを介して直接アクセスすることもできます（以下の例を参照）。警告が発生していない場合は、警告を表すオブジェクトで予期される属性は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="689aca40c906c0122884f520ca113dd2d097568c" translate="yes" xml:space="preserve">
          <source>On large-file-capable Linux systems, this might work:</source>
          <target state="translated">大容量のファイルを扱える Linux システムでは、これが動作するかもしれません。</target>
        </trans-unit>
        <trans-unit id="6b7b3c25b067b29ff568eb64dceface5effcedb6" translate="yes" xml:space="preserve">
          <source>On macOS 10.6, 10.7 and 10.8, the default event loop uses &lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt;&lt;code&gt;selectors.KqueueSelector&lt;/code&gt;&lt;/a&gt;, which does not support character devices on these versions. The &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; can be manually configured to use &lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt;&lt;code&gt;PollSelector&lt;/code&gt;&lt;/a&gt; to support character devices on these older versions of macOS. Example:</source>
          <target state="translated">macOS 10.6、10.7、および10.8では、デフォルトのイベントループは&lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt; &lt;code&gt;selectors.KqueueSelector&lt;/code&gt; を&lt;/a&gt;使用します。これらは、これらのバージョンのキャラクターデバイスをサポートしていません。&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; は、&lt;/a&gt;手動で使用するように設定することができます&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt; &lt;code&gt;SelectSelector&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt; &lt;code&gt;PollSelector&lt;/code&gt; を&lt;/a&gt; MacOSのこれらの古いバージョンでサポートキャラクタデバイスへ。例：</target>
        </trans-unit>
        <trans-unit id="59711c87f37f48c6b5ca1ccbf181736677303198" translate="yes" xml:space="preserve">
          <source>On macOS &lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt; is used to copy the file content (not metadata).</source>
          <target state="translated">macOSでは、&lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt;を使用して（メタデータではなく）ファイルの内容をコピーします。</target>
        </trans-unit>
        <trans-unit id="e0095f6ed60d065349c04b6eefb4d5ebe1925719" translate="yes" xml:space="preserve">
          <source>On macOS, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">macOSでは、エンコーディングは &lt;code&gt;'utf-8'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce1208192f171228b4901a07d6b02cdddfc85990" translate="yes" xml:space="preserve">
          <source>On macOS, there is one application menu. It dynamically changes according to the window currently selected. It has an IDLE menu, and some entries described below are moved around to conform to Apple guidelines.</source>
          <target state="translated">macOSでは、アプリケーションメニューは1つです。これは現在選択されているウィンドウに応じて動的に変化します。IDLE メニューがあり、以下に説明するいくつかの項目は Apple のガイドラインに合わせて移動されています。</target>
        </trans-unit>
        <trans-unit id="d215bf1c5b7b0def948c235e18bfe40621e88451" translate="yes" xml:space="preserve">
          <source>On many Unix systems (including *BSD, Linux, Solaris, and Darwin), it is more convenient to use the system&amp;rsquo;s zoneinfo (&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile(5)&lt;/a&gt;&lt;/em&gt;) database to specify the timezone rules. To do this, set the &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; environment variable to the path of the required timezone datafile, relative to the root of the systems &amp;lsquo;zoneinfo&amp;rsquo; timezone database, usually located at &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt;. For example, &lt;code&gt;'US/Eastern'&lt;/code&gt;, &lt;code&gt;'Australia/Melbourne'&lt;/code&gt;, &lt;code&gt;'Egypt'&lt;/code&gt; or &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt;.</source>
          <target state="translated">多くのUnixシステム（* BSD、Linux、Solaris、Darwinを含む）では、システムのzoneinfo（&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile（5）&lt;/a&gt;&lt;/em&gt;）データベースを使用してタイムゾーンルールを指定する方が便利です。これを行うには、 &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; 環境変数を、通常は &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt; にあるシステム「zoneinfo」タイムゾーンデータベースのルートからの相対パスで、必要なタイムゾーンデータファイルのパスに設定します。たとえば、 &lt;code&gt;'US/Eastern'&lt;/code&gt; 、 &lt;code&gt;'Australia/Melbourne'&lt;/code&gt; 、 &lt;code&gt;'Egypt'&lt;/code&gt; 、 &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04ba6be7d13c87b73b6437d8a6f57d4cef94efc0" translate="yes" xml:space="preserve">
          <source>On newer versions of Windows 10, unprivileged accounts can create symlinks if Developer Mode is enabled. When Developer Mode is not available/enabled, the &lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt; privilege is required, or the process must be run as an administrator.</source>
          <target state="translated">Windows 10の新しいバージョンでは、開発者モードが有効になっている場合、権限のないアカウントでシンボリックリンクを作成できます。開発者モードが利用できない/有効になっていない場合、&lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt;権限が必要です。または、プロセスを管理者として実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7bf663d20ba88f3d3779656c2de6b087faad7b7" translate="yes" xml:space="preserve">
          <source>On other Unix systems (such as FreeBSD), the following attributes may be available (but may be only filled out if root tries to use them):</source>
          <target state="translated">他の Unix システム (FreeBSD など)では、以下の属性が利用できるかもしれません (ただし、root が使用しようとした場合にのみ記入されます)。</target>
        </trans-unit>
        <trans-unit id="06c0e7561753d8281468dc3f168c40f9e9b2351d" translate="yes" xml:space="preserve">
          <source>On other platforms, the generic &lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl.fcntl()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt;&lt;code&gt;fcntl.ioctl()&lt;/code&gt;&lt;/a&gt; functions may be used; they accept a socket object as their first argument.</source>
          <target state="translated">他のプラットフォームでは、汎用の&lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl.fcntl()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt; &lt;code&gt;fcntl.ioctl()&lt;/code&gt; &lt;/a&gt;関数を使用できます。最初の引数としてソケットオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="30fe0b6f68fa261e54a2b916d494101fac571654" translate="yes" xml:space="preserve">
          <source>On output, if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and no &lt;em&gt;escapechar&lt;/em&gt; is set, &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised if a &lt;em&gt;quotechar&lt;/em&gt; is found in a field.</source>
          <target state="translated">場合、出力には、&lt;em&gt;ダブルクォートが&lt;/em&gt;ある&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;と全く&lt;em&gt;EscapeCharには&lt;/em&gt;設定されていない、&lt;a href=&quot;#csv.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;あれば発生し&lt;em&gt;quotecharが&lt;/em&gt;フィールドに含まれています。</target>
        </trans-unit>
        <trans-unit id="c0af5b92888c4dc7ffac3572dfa0d442dabf0ede" translate="yes" xml:space="preserve">
          <source>On platforms that do not support symbolic links, this is an alias for &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シンボリックリンクをサポートしないプラットフォームでは、これは&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="835888031d7cef42de83709eee1579e07f8ea020" translate="yes" xml:space="preserve">
          <source>On platforms that support the necessary fd-based functions a symlink attack resistant version of &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; is used by default. On other platforms, the &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; implementation is susceptible to a symlink attack: given proper timing and circumstances, attackers can manipulate symlinks on the filesystem to delete files they wouldn&amp;rsquo;t be able to access otherwise. Applications can use the &lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt;&lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt;&lt;/a&gt; function attribute to determine which case applies.</source>
          <target state="translated">必要なfdベースの機能をサポートするプラットフォームでは、デフォルトで&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; の&lt;/a&gt;シンボリックリンク耐性バージョンが使用されます。他のプラットフォームでは、&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; &lt;/a&gt;実装はシンボリックリンク攻撃の影響を受けます。適切なタイミングと状況が与えられた場合、攻撃者はファイルシステムのシンボリックリンクを操作して、他の方法ではアクセスできないファイルを削除できます。アプリケーションは、&lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt; &lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt; &lt;/a&gt;関数属性を使用して、どちらのケースが該当するかを判別できます。</target>
        </trans-unit>
        <trans-unit id="a2539c27ac2c42d14e6d76946d07ef981a8cc60c" translate="yes" xml:space="preserve">
          <source>On platforms using IEEE 754 binary floating-point, the result of this operation is always exactly representable: no rounding error is introduced.</source>
          <target state="translated">IEEE 754 バイナリ浮動小数点を使用するプラットフォームでは、この演算の結果は常に正確に表現されます。</target>
        </trans-unit>
        <trans-unit id="d0f67e7089bb8910b4e4fda4cf6b72e3df1c3c94" translate="yes" xml:space="preserve">
          <source>On platforms where some or all of this functionality is unavailable, when asked to modify a symbolic link, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; will copy everything it can. &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; never returns failure.</source>
          <target state="translated">この機能の一部またはすべてが使用できないプラットフォームでは、シンボリックリンクを変更するように求められると、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;は可能な限りすべてをコピーします。&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;は失敗を返しません。</target>
        </trans-unit>
        <trans-unit id="3c6b1f69887e623bddc661e6cae08b9b00d43caf" translate="yes" xml:space="preserve">
          <source>On platforms with hardware and system-level support for signed zeros, functions involving branch cuts are continuous on &lt;em&gt;both&lt;/em&gt; sides of the branch cut: the sign of the zero distinguishes one side of the branch cut from the other. On platforms that do not support signed zeros the continuity is as specified below.</source>
          <target state="translated">署名されたゼロのためのハードウェアおよびシステムレベルのサポートを有するプラットフォーム上で、ブランチカットを伴う機能がオンに連続している&lt;em&gt;両方の&lt;/em&gt;他の分枝切断のゼロ区別片側の兆候：分枝切断の両側。符号付きゼロをサポートしていないプラットフォームでは、連続性は次のようになります。</target>
        </trans-unit>
        <trans-unit id="cea002554b75820329fc15191d1a6a71d5584562" translate="yes" xml:space="preserve">
          <source>On platforms without &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Completer&lt;/code&gt; class defined by this module can still be used for custom purposes.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; の&lt;/a&gt;ないプラットフォームでは、このモジュールで定義された &lt;code&gt;Completer&lt;/code&gt; クラスをカスタム目的で使用できます。</target>
        </trans-unit>
        <trans-unit id="4c6a777251164aea8999f437ba7c8d0b926184ae" translate="yes" xml:space="preserve">
          <source>On some Unix platforms, many of these functions support one or more of these features:</source>
          <target state="translated">いくつかのUnixプラットフォームでは、これらの関数の多くは、これらの機能の1つ以上をサポートしています。</target>
        </trans-unit>
        <trans-unit id="eaba699b79f7765281c28b47b3e0ec7e21c3ec5c" translate="yes" xml:space="preserve">
          <source>On some Unix systems (such as Linux), the following attributes may also be available:</source>
          <target state="translated">一部のUnixシステム(Linuxなど)では、以下の属性も利用可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="f0ae39c0ac3f68172a6d225258c4c362c47d6748" translate="yes" xml:space="preserve">
          <source>On some platforms, an optional field width and precision specification can immediately follow the initial &lt;code&gt;'%'&lt;/code&gt; of a directive in the following order; this is also not portable. The field width is normally 2 except for &lt;code&gt;%j&lt;/code&gt; where it is 3.</source>
          <target state="translated">一部のプラットフォームでは、オプションのフィールド幅と精度の指定は、ディレクティブの最初の &lt;code&gt;'%'&lt;/code&gt; の直後に次の順序で続きます。これもポータブルではありません。フィールド幅は、3である &lt;code&gt;%j&lt;/code&gt; を除いて、通常2 です。</target>
        </trans-unit>
        <trans-unit id="49846f91b44b9eabca7917db8a10258a1a0b35cf" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for &lt;code&gt;putenv()&lt;/code&gt;.</source>
          <target state="translated">FreeBSDやMac OS Xなどの一部のプラットフォームでは、 &lt;code&gt;environ&lt;/code&gt; 設定するとメモリリークが発生する可能性があります。 &lt;code&gt;putenv()&lt;/code&gt; については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="58e337bb68a53e0e0fdf875e3f9a3ba499302b95" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for putenv.</source>
          <target state="translated">FreeBSDやMac OS Xなどの一部のプラットフォームでは、 &lt;code&gt;environ&lt;/code&gt; 設定するとメモリリークが発生する可能性があります。putenvについては、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ce939615baf6b4e6e43bf427856a8f1921f68d68" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; can be used to pass file descriptors between processes over an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket. When this facility is used (it is often restricted to &lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; sockets), &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; will return, in its ancillary data, items of the form &lt;code&gt;(socket.SOL_SOCKET,
socket.SCM_RIGHTS, fds)&lt;/code&gt;, where &lt;em&gt;fds&lt;/em&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object representing the new file descriptors as a binary array of the native C &lt;code&gt;int&lt;/code&gt; type. If &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; raises an exception after the system call returns, it will first attempt to close any file descriptors received via this mechanism.</source>
          <target state="translated">一部のシステムでは、&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;ソケットを介してプロセス間でファイル記述子を渡すことができます。この機能は、（それは多くの場合に制限されて使用される場合&lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; の&lt;/a&gt;ソケット）&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;その補助データ、フォームの項目に、返され &lt;code&gt;(socket.SOL_SOCKET, socket.SCM_RIGHTS, fds)&lt;/code&gt; 、&lt;em&gt;FDSは、&lt;/em&gt;ある&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;表すオブジェクトネイティブC &lt;code&gt;int&lt;/code&gt; 型のバイナリ配列としての新しいファイル記述子。場合&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;システムコールが戻った後、例外を発生させ、それが最初にこのメカニズムを介して受信された任意のファイルディスクリプタをクローズしようとします。</target>
        </trans-unit>
        <trans-unit id="0854fe514f9f478ef9200189533ba9f76d283b6e" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;em&gt;mode&lt;/em&gt; is ignored. Where it is used, the current umask value is first masked out. If bits other than the last 9 (i.e. the last 3 digits of the octal representation of the &lt;em&gt;mode&lt;/em&gt;) are set, their meaning is platform-dependent. On some platforms, they are ignored and you should call &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt; explicitly to set them.</source>
          <target state="translated">一部のシステムでは、&lt;em&gt;モード&lt;/em&gt;は無視されます。使用される場合、現在のumask値が最初にマスクされます。最後の9以外のビット（つまり、&lt;em&gt;モードの&lt;/em&gt; 8進数表現の最後の3桁）が設定されている場合、それらの意味はプラットフォームに依存します。一部のプラットフォームでは無視され、&lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; を&lt;/a&gt;明示的に呼び出して設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="91c09add15e3897cc71e4285cad983d35ae19c62" translate="yes" xml:space="preserve">
          <source>On some systems, it is necessary to invoke &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; to obtain the user preferences, so this function is not thread-safe. If invoking setlocale is not necessary or desired, &lt;em&gt;do_setlocale&lt;/em&gt; should be set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">一部のシステムでは、ユーザー設定を取得するために&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;を呼び出す必要があるため、この関数はスレッドセーフではありません。setlocaleの呼び出しが不要または必要ない場合は、&lt;em&gt;do_setlocale&lt;/em&gt;を &lt;code&gt;False&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6110a82223307cc8967bdb9b6a267ed5e823067" translate="yes" xml:space="preserve">
          <source>On success, the data and separator will be removed from the internal buffer (consumed). Returned data will include the separator at the end.</source>
          <target state="translated">成功すると、データとセパレータが内部バッファから削除されます(消費されます)。返されたデータには、最後にセパレータが含まれます。</target>
        </trans-unit>
        <trans-unit id="81d3e77503079dc680941880acaf81e6572cb402" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, this module will also import and configure the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, if Python is started in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; and without the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option. The default behavior is enable tab-completion and to use &lt;code&gt;~/.python_history&lt;/code&gt; as the history save file. To disable it, delete (or override) the &lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt;&lt;code&gt;sys.__interactivehook__&lt;/code&gt;&lt;/a&gt; attribute in your &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; module or your &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;をサポートするシステムでは、Pythonが&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;対話モードで&lt;/a&gt;起動され、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;オプションが指定されていない場合、このモジュールは&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;モジュールもインポートおよび構成します。デフォルトの動作では、タブ補完を有効にし、履歴保存ファイルとして &lt;code&gt;~/.python_history&lt;/code&gt; を使用します。これを無効にするには、 &lt;code&gt;sitecustomize&lt;/code&gt; または &lt;code&gt;usercustomize&lt;/code&gt; モジュールまたは&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;ファイルの&lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt; &lt;code&gt;sys.__interactivehook__&lt;/code&gt; &lt;/a&gt;属性を削除（またはオーバーライド）します。</target>
        </trans-unit>
        <trans-unit id="9eb104f76bd96ade5a8176723ed9b7aea345a251" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, this module will also import and configure the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, if Python is started in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; and without the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option. The default behavior is enable tab-completion and to use &lt;code&gt;~/.python_history&lt;/code&gt; as the history save file. To disable it, delete (or override) the &lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt;&lt;code&gt;sys.__interactivehook__&lt;/code&gt;&lt;/a&gt; attribute in your &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; module or your &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;をサポートするシステムでは、Pythonが&lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;インタラクティブモード&lt;/a&gt;で&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;オプションなしで起動されている場合、このモジュールは&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;モジュールもインポートして構成します。デフォルトの動作は、タブ補完を有効にし、履歴保存ファイルとして &lt;code&gt;~/.python_history&lt;/code&gt; を使用することです。これを無効にするには、 &lt;code&gt;sitecustomize&lt;/code&gt; または &lt;code&gt;usercustomize&lt;/code&gt; モジュールまたは&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;ファイルの&lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt; &lt;code&gt;sys.__interactivehook__&lt;/code&gt; &lt;/a&gt;属性を削除（またはオーバーライド）します。</target>
        </trans-unit>
        <trans-unit id="4ce3a4c7161faf6a2733a2da667b68f080fb9ebe" translate="yes" xml:space="preserve">
          <source>On systems which support the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism, the following function will receive up to &lt;em&gt;maxfds&lt;/em&gt; file descriptors, returning the message data and a list containing the descriptors (while ignoring unexpected conditions such as unrelated control messages being received). See also &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SCM_RIGHTS&lt;/code&gt; メカニズムをサポートするシステムでは、次の関数は最大&lt;em&gt;maxfds&lt;/em&gt;ファイル記述子を受信し、メッセージデータと記述子を含むリストを返します（受信される無関係な制御メッセージなどの予期しない条件は無視します）。&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0bd387ae56d8456aacef9c5c7039622bbd157974" translate="yes" xml:space="preserve">
          <source>On systems with overallocation (e.g. Linux), a more sophisticated approach is to adjust &lt;code&gt;prec&lt;/code&gt; to the amount of available RAM. Suppose that you have 8GB of RAM and expect 10 simultaneous operands using a maximum of 500MB each:</source>
          <target state="translated">オーバーアロケーションのあるシステム（Linuxなど）では、より洗練されたアプローチは、使用可能なRAMの量に合わせて &lt;code&gt;prec&lt;/code&gt; を調整することです。8GBのRAMがあり、それぞれ最大500MBを使用する10個の同時オペランドを想定しているとします。</target>
        </trans-unit>
        <trans-unit id="170fe28c30f87352badfea6a1b0adfa7979f0455" translate="yes" xml:space="preserve">
          <source>On the Font tab, see the text sample for the effect of font face and size on multiple characters in multiple languages. Edit the sample to add other characters of personal interest. Use the sample to select monospaced fonts. If particular characters have problems in Shell or an editor, add them to the top of the sample and try changing first size and then font.</source>
          <target state="translated">フォント]タブで、複数の言語の複数の文字にフォントの面とサイズの効果を与えるためのテキストサンプルを参照してください。サンプルを編集して、個人的に興味のある他の文字を追加します。サンプルを使用して、等幅フォントを選択します。特定の文字がシェルやエディタで問題がある場合は、サンプルの先頭に追加して、最初にサイズを変更してからフォントを変更してみてください。</target>
        </trans-unit>
        <trans-unit id="0b329dc6e9c4b674641af665ee59096dbcd8c046" translate="yes" xml:space="preserve">
          <source>On the Highlights and Keys tab, select a built-in or custom color theme and key set. To use a newer built-in color theme or key set with older IDLEs, save it as a new custom theme or key set and it well be accessible to older IDLEs.</source>
          <target state="translated">ハイライトとキー]タブで、組み込みまたはカスタム カラー テーマとキー セットを選択します。新しいビルトイン カラー テーマまたはキー セットを古い IDLE で使用するには、新しいカスタム テーマまたはキー セットとして保存すると、古い IDLE からもアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="bb9fb9ccc44f0f6638fed1a987aa33ae9f6959c6" translate="yes" xml:space="preserve">
          <source>On the POSIX compliant platforms, it is equivalent to the following expression:</source>
          <target state="translated">POSIX準拠のプラットフォームでは、以下の式と同等です。</target>
        </trans-unit>
        <trans-unit id="8718a6ecfb2948f94e8214f2c029ea186b4fea26" translate="yes" xml:space="preserve">
          <source>On the consumer side, we can pickle those objects the usual way, which when unserialized will give us a copy of the original object:</source>
          <target state="translated">コンシューマ側では、通常の方法でオブジェクトをピックルすることができます。</target>
        </trans-unit>
        <trans-unit id="491abdd927ace9b614d81c92dc19845f26b3d2e7" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, a system call is required on Windows but not on Unix.</source>
          <target state="translated">最初の、キャッシュされていないコールでは、Windowsではシステムコールが必要ですが、Unixでは必要ありません。</target>
        </trans-unit>
        <trans-unit id="5cd90c0c17f384bfaab3cff8f5c166412c102c98" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, for non-symlinks, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;. If the entry is a symlink, a system call will be required to follow the symlink unless &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">最初のキャッシュされていない呼び出しでは、ほとんどの場合、システム呼び出しは必要ありません。具体的には、非シンボリックリンクの場合、 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; を返すネットワークファイルシステムなどの特定のUnixファイルシステムを除き、WindowsもUnixもシステムコールを必要としません。エントリがシンボリックリンクの場合、&lt;em&gt;follow_symlinks&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; でない限り、シンボリックリンクをたどるシステムコールが必要になります。</target>
        </trans-unit>
        <trans-unit id="f9dac8ead05b600f65bb3a1c6b260cbf7bc2b51d" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;.</source>
          <target state="translated">最初のキャッシュされていない呼び出しでは、ほとんどの場合、システム呼び出しは必要ありません。具体的には、 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; を返すネットワークファイルシステムなどの特定のUnixファイルシステムを除き、WindowsもUnixもシステムコールを必要としません。</target>
        </trans-unit>
        <trans-unit id="3e84ca525861c9e265cab3b438b32f029594120f" translate="yes" xml:space="preserve">
          <source>On the other hand, if an explicit value of &lt;code&gt;None&lt;/code&gt; is allowed, the use of &lt;code&gt;Optional&lt;/code&gt; is appropriate, whether the argument is optional or not. For example:</source>
          <target state="translated">一方、 &lt;code&gt;None&lt;/code&gt; の明示的な値が許可されている場合、引数がオプションかどうかにかかわらず、 &lt;code&gt;Optional&lt;/code&gt; の使用が適切です。例えば：</target>
        </trans-unit>
        <trans-unit id="bf9973b9d57271129427560d24c59bd726fbd904" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are building an HTTP server where all data is stored externally (for instance, in the file system), a synchronous class will essentially render the service &amp;ldquo;deaf&amp;rdquo; while one request is being handled &amp;ndash; which may be for a very long time if a client is slow to receive all the data it has requested. Here a threading or forking server is appropriate.</source>
          <target state="translated">一方、すべてのデータが外部に（たとえば、ファイルシステムに）保存されるHTTPサーバーを構築している場合、同期クラスは、1つの要求が処理されている間、本質的にサービスを「無効」にします。クライアントが要求したすべてのデータの受信が遅い場合、非常に長い時間。ここでは、スレッドサーバーまたはフォークサーバーが適切です。</target>
        </trans-unit>
        <trans-unit id="9d9537632dbfd5ce7c3381fb8473c75296dfa687" translate="yes" xml:space="preserve">
          <source>On the other hand, the precision of &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; is better than their Unix equivalents: times are expressed as floating point numbers, &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; returns the most accurate time available (using Unix &lt;code&gt;gettimeofday()&lt;/code&gt; where available), and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; will accept a time with a nonzero fraction (Unix &lt;code&gt;select()&lt;/code&gt; is used to implement this, where available).</source>
          <target state="translated">一方、&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;の精度は、同等のUnix の精度より優れています。時刻は浮動小数点数として表され、&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;は利用可能な最も正確な時刻を返します（可能な場合はUnix &lt;code&gt;gettimeofday()&lt;/code&gt; を使用）。&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;は、0以外の小数の時間を受け入れ &lt;code&gt;select()&lt;/code&gt; 可能な場合は、Unix select（）を使用してこれを実装します）。</target>
        </trans-unit>
        <trans-unit id="2b4270c26ef431be82a119288026b915740bbad6" translate="yes" xml:space="preserve">
          <source>On the other hand, the statement &lt;code&gt;from spam.ham import eggs, sausage as
saus&lt;/code&gt; results in</source>
          <target state="translated">一方、声明 &lt;code&gt;from spam.ham import eggs, sausage as saus&lt;/code&gt; で結果</target>
        </trans-unit>
        <trans-unit id="302064ecd83cf854ce5daa489ae06236b2f77d49" translate="yes" xml:space="preserve">
          <source>On the real line, there are functions to compute uniform, normal (Gaussian), lognormal, negative exponential, gamma, and beta distributions. For generating distributions of angles, the von Mises distribution is available.</source>
          <target state="translated">実線上には、一様分布、正規分布(ガウス分布)、対数正規分布、負の指数分布、ガンマ分布、ベータ分布を計算する関数があります。角度の分布を生成するためには、von Mises分布が利用できます。</target>
        </trans-unit>
        <trans-unit id="021f9c86cdcc2f4cf15e28ff86eb4c57b0b3ffd0" translate="yes" xml:space="preserve">
          <source>On the receiving side, it needs to pass a &lt;em&gt;buffers&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt; function), which is an iterable of the buffers which were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. That iterable should produce buffers in the same order as they were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. Those buffers will provide the data expected by the reconstructors of the objects whose pickling produced the original &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">受信側では、それが通過する必要が&lt;em&gt;バッファ&lt;/em&gt;に引数を&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; クラス&lt;/a&gt;（またはそれに&lt;a href=&quot;#pickle.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;に渡されたバッファの反復可能である機能）、&lt;em&gt;buffer_callback&lt;/em&gt;。その&lt;em&gt;イテラブル&lt;/em&gt;は、&lt;em&gt;buffer_callback&lt;/em&gt;に渡されたのと同じ順序でバッファーを生成する必要があります。これらのバッファは、ピクルス処理によって元の&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトを生成したオブジェクトの再構築によって期待されるデータを提供します。</target>
        </trans-unit>
        <trans-unit id="66db2c4de162079fa6ad1e56a412af6e40b12ff3" translate="yes" xml:space="preserve">
          <source>On the sending side, it needs to pass a &lt;em&gt;buffer_callback&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; function), which will be called with each &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; generated while pickling the object graph. Buffers accumulated by the &lt;em&gt;buffer_callback&lt;/em&gt; will not see their data copied into the pickle stream, only a cheap marker will be inserted.</source>
          <target state="translated">送信側では、それが通過する必要が&lt;em&gt;buffer_callbackの&lt;/em&gt;に引数を&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; さん&lt;/a&gt;（またはそれに&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;それぞれに呼び出される関数）、&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトグラフを酸洗いしながら発生します。&lt;em&gt;buffer_callback&lt;/em&gt;によって蓄積された&lt;em&gt;バッファー&lt;/em&gt;は、ピクルストリームにコピーされたデータを&lt;em&gt;認識&lt;/em&gt;せず、安価なマーカーのみが挿入されます。</target>
        </trans-unit>
        <trans-unit id="dfc3524ee9c52842ac68b4cbfd63f42ac55c13bf" translate="yes" xml:space="preserve">
          <source>On top of the core functionality, &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; supports interpolation. This means values can be preprocessed before returning them from &lt;code&gt;get()&lt;/code&gt; calls.</source>
          <target state="translated">コア機能に加えて、&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;は補間をサポートします。これは、 &lt;code&gt;get()&lt;/code&gt; コールから値を返す前に値を前処理できることを意味します。</target>
        </trans-unit>
        <trans-unit id="6e0a89fb92ab1b6c953761430059ee14bf39ac4f" translate="yes" xml:space="preserve">
          <source>On unsupported Windows versions, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">サポートされていないWindowsバージョンでは、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a7af216ac764a8e05fdb02285dd1f73ff0b4bf41" translate="yes" xml:space="preserve">
          <source>On-line reference material.</source>
          <target state="translated">オンライン参考資料。</target>
        </trans-unit>
        <trans-unit id="7ee9b6bbcd3fc003f8c514b8359b3b3d847b5991" translate="yes" xml:space="preserve">
          <source>On-line version of the man pages and reference material.</source>
          <target state="translated">マンページや参考資料のオンライン版。</target>
        </trans-unit>
        <trans-unit id="6aeb9a0eecc81b131da11166dd168337677c0196" translate="yes" xml:space="preserve">
          <source>On-line version of the programmer&amp;rsquo;s reference material.</source>
          <target state="translated">プログラマーの参考資料のオンライン版。</target>
        </trans-unit>
        <trans-unit id="d68ef1995b7e1837b6328a4152bbf582900b7c03" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt; has made a split, the original &lt;em&gt;iterable&lt;/em&gt; should not be used anywhere else; otherwise, the &lt;em&gt;iterable&lt;/em&gt; could get advanced without the tee objects being informed.</source>
          <target state="translated">&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt;が分割したら、元の&lt;em&gt;イテラブル&lt;/em&gt;を他の場所で使用しないでください。そうしないと、T型オブジェクトに通知されずに、&lt;em&gt;イテラブル&lt;/em&gt;が進んでしまう&lt;em&gt;可能&lt;/em&gt;性があります。</target>
        </trans-unit>
        <trans-unit id="13355ef156e37b7df46841221634670e6bd21bf1" translate="yes" xml:space="preserve">
          <source>Once a thread object is created, its activity must be started by calling the thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. This invokes the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method in a separate thread of control.</source>
          <target state="translated">スレッドオブジェクトが作成されたら、そのアクティビティは、スレッドの&lt;a href=&quot;#threading.Thread.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して開始する必要があります。これにより、別個の制御スレッドで&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="207c91dde7ce754af70d86e35ca18a8bfb78b4b4" translate="yes" xml:space="preserve">
          <source>Once a virtual environment has been created, it can be &amp;ldquo;activated&amp;rdquo; using a script in the virtual environment&amp;rsquo;s binary directory. The invocation of the script is platform-specific (&lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; must be replaced by the path of the directory containing the virtual environment):</source>
          <target state="translated">仮想環境が作成されると、仮想環境のバイナリディレクトリにあるスクリプトを使用して「アクティブ化」できます。スクリプトの呼び出しはプラットフォーム固有です（ &lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; は仮想環境を含むディレクトリのパスで置き換える必要があります）：</target>
        </trans-unit>
        <trans-unit id="889abf09b206885a298b4b0048c82881bd8294ef" translate="yes" xml:space="preserve">
          <source>Once an iterator&amp;rsquo;s &lt;a href=&quot;#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method raises &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt;, it must continue to do so on subsequent calls. Implementations that do not obey this property are deemed broken.</source>
          <target state="translated">イテレータの&lt;a href=&quot;#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;を発生させると、後続の呼び出しでそれを継続する必要があります。このプロパティに従わない実装は壊れていると見なされます。</target>
        </trans-unit>
        <trans-unit id="c8954a531e8e55ebee2fcb88a5f5f25aa89c78a2" translate="yes" xml:space="preserve">
          <source>Once constructed, &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; objects are immutable.</source>
          <target state="translated">作成された&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;オブジェクトは不変です。</target>
        </trans-unit>
        <trans-unit id="16be74f5902bbdc230632d054aabd873de1dda59" translate="yes" xml:space="preserve">
          <source>Once created one should call &lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;get_server().serve_forever()&lt;/code&gt; to ensure that the manager object refers to a started manager process.</source>
          <target state="translated">作成されたら、&lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;get_server().serve_forever()&lt;/code&gt; を呼び出して、マネージャーオブジェクトが開始されたマネージャープロセスを参照していることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="ccc2cd016213a015dfbf70d995a4eef4403a9624" translate="yes" xml:space="preserve">
          <source>Once created, an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object may be manipulated by directly changing its fields (such as &lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt;&lt;code&gt;Element.text&lt;/code&gt;&lt;/a&gt;), adding and modifying attributes (&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt;&lt;code&gt;Element.set()&lt;/code&gt;&lt;/a&gt; method), as well as adding new children (for example with &lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt;&lt;code&gt;Element.append()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">作成された&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;オブジェクトは、そのフィールド（&lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt; &lt;code&gt;Element.text&lt;/code&gt; &lt;/a&gt;など）を直接変更し、属性（&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt; &lt;code&gt;Element.set()&lt;/code&gt; &lt;/a&gt;メソッド）を追加および変更し、新しい子を追加する（たとえば、&lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt; &lt;code&gt;Element.append()&lt;/code&gt; を使用して)操作できます。&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d98f7cd89572d4bbe43871efa04dc25f912f9367" translate="yes" xml:space="preserve">
          <source>Once created, the pathname to the widget becomes a new command. This new &lt;em&gt;widget command&lt;/em&gt; is the programmer&amp;rsquo;s handle for getting the new widget to perform some &lt;em&gt;action&lt;/em&gt;. In C, you&amp;rsquo;d express this as someAction(fred, someOptions), in C++, you would express this as fred.someAction(someOptions), and in Tk, you say:</source>
          <target state="translated">作成されると、ウィジェットへのパス名が新しいコマンドになります。この新しい&lt;em&gt;ウィジェットコマンド&lt;/em&gt;は、新しいウィジェットに何らかの&lt;em&gt;アクション&lt;/em&gt;を実行させるためのプログラマのハンドルです。Cでは、これをsomeAction（fred、someOptions）として表現し、C ++では、fred.someAction（someOptions）として表現し、Tkでは次のように記述します。</target>
        </trans-unit>
        <trans-unit id="b88e8436dc34ad8ecac85ed9098e7930bd406ff6" translate="yes" xml:space="preserve">
          <source>Once executed the &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module keeps the input file(s).</source>
          <target state="translated">&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;モジュールが実行されると、入力ファイルが保持されます。</target>
        </trans-unit>
        <trans-unit id="59bd0557426d252898ba83d74b3d08da5feeacce" translate="yes" xml:space="preserve">
          <source>Once spawned, worker threads call the semaphore&amp;rsquo;s acquire and release methods when they need to connect to the server:</source>
          <target state="translated">生成されたワーカースレッドは、サーバーに接続する必要があるときにセマフォの取得および解放メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9dc52253ba5d16f68a3458bf5594be6616430d42" translate="yes" xml:space="preserve">
          <source>Once the context manager exits, the warnings filter is restored to its state when the context was entered. This prevents tests from changing the warnings filter in unexpected ways between tests and leading to indeterminate test results. The &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function in the module is also restored to its original value. Note: this can only be guaranteed in a single-threaded application. If two or more threads use the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager at the same time, the behavior is undefined.</source>
          <target state="translated">コンテキストマネージャが終了すると、警告フィルタはコンテキストが入力されたときの状態に復元されます。これにより、テストがテスト間で予期しない方法で警告フィルターを変更し、テスト結果が不確定になるのを防ぎます。モジュールの&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;関数も元の値に復元されます。注：これはシングルスレッドアプリケーションでのみ保証できます。2つ以上のスレッドが同時に&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;コンテキストマネージャを使用する場合、動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="4d5043f40e3990a632ef7cf48ff135c75a7ff554" translate="yes" xml:space="preserve">
          <source>Once the headers have been read, if the request is of type POST (indicating that further data are present in the input stream) then the &lt;code&gt;Content-Length:&lt;/code&gt; header is used to set a numeric terminator to read the right amount of data from the channel.</source>
          <target state="translated">ヘッダーが読み取られた後、要求のタイプがPOST（入力ストリームにさらにデータが存在することを示す）の場合、 &lt;code&gt;Content-Length:&lt;/code&gt; ヘッダーを使用して、数値ターミネーターを設定し、チャネルから適切な量のデータを読み取ります。 。</target>
        </trans-unit>
        <trans-unit id="3625bd42b562728df6287438cfb43f246eb75f17" translate="yes" xml:space="preserve">
          <source>Once the initial channel(s) is(are) created, calling the &lt;a href=&quot;#asyncore.loop&quot;&gt;&lt;code&gt;loop()&lt;/code&gt;&lt;/a&gt; function activates channel service, which continues until the last channel (including any that have been added to the map during asynchronous service) is closed.</source>
          <target state="translated">最初のチャネルが作成されたら、&lt;a href=&quot;#asyncore.loop&quot;&gt; &lt;code&gt;loop()&lt;/code&gt; &lt;/a&gt;関数を呼び出すとチャネルサービスがアクティブになり、最後のチャネル（非同期サービス中にマップに追加されたものを含む）が閉じるまで続行されます。</target>
        </trans-unit>
        <trans-unit id="4a2546b8a5097fd780cdeb2adc6d3eb6f8ec8d23" translate="yes" xml:space="preserve">
          <source>Once the thread&amp;rsquo;s activity is started, the thread is considered &amp;lsquo;alive&amp;rsquo;. It stops being alive when its &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates &amp;ndash; either normally, or by raising an unhandled exception. The &lt;a href=&quot;#threading.Thread.is_alive&quot;&gt;&lt;code&gt;is_alive()&lt;/code&gt;&lt;/a&gt; method tests whether the thread is alive.</source>
          <target state="translated">スレッドのアクティビティが開始されると、スレッドは「生きている」と見なされます。&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが正常に終了するか、未処理の例外を発生させることにより、実行が停止します。&lt;a href=&quot;#threading.Thread.is_alive&quot;&gt; &lt;code&gt;is_alive()&lt;/code&gt; &lt;/a&gt;メソッドをテストスレッドが生きているかどうか。</target>
        </trans-unit>
        <trans-unit id="a235b9ded0ea3a43927ac13de68434d28c8fa6ae" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, you can create a &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object and call its &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method to perform SQL commands:</source>
          <target state="translated">あなたが持ってたら&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;、あなたが作成できる&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトを、その呼び出し&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt; SQLコマンドを実行する方法を：</target>
        </trans-unit>
        <trans-unit id="81002ef1c052dbc9b87479ed00026cc46e6b7f55" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification. The main property of the document object is the &lt;code&gt;documentElement&lt;/code&gt; property. It gives you the main element in the XML document: the one that holds all others. Here is an example program:</source>
          <target state="translated">DOMドキュメントオブジェクトを取得したら、そのプロパティとメソッドを介してXMLドキュメントの部分にアクセスできます。これらのプロパティはDOM仕様で定義されています。ドキュメントオブジェクトのメインプロパティは &lt;code&gt;documentElement&lt;/code&gt; プロパティです。それはあなたにXML文書の主要な要素を与えます：他のすべてを保持するものです。以下はプログラム例です。</target>
        </trans-unit>
        <trans-unit id="570eb1dd3b2dc9c9893e632a6855fcb1892d470f" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification; this portion of the reference manual describes the interpretation of the specification in Python.</source>
          <target state="translated">一度 DOM ドキュメントオブジェクトを持っていると、そのプロパティやメソッドを使って XML ドキュメントの各部分にアクセスすることができます。これらのプロパティは DOM の仕様で定義されています。このリファレンスマニュアルのこの部分では、Python での仕様の解釈について説明しています。</target>
        </trans-unit>
        <trans-unit id="50a39d682c8b293bc2c1a0cd3988cb1316472ae2" translate="yes" xml:space="preserve">
          <source>Once you have the file, you can also read its contents:</source>
          <target state="translated">ファイルを手に入れたら、その内容を読むこともできます。</target>
        </trans-unit>
        <trans-unit id="b23c60dd5536314803c0f831966f5b1fc94290ea" translate="yes" xml:space="preserve">
          <source>One &lt;code&gt;for&lt;/code&gt; clause in a comprehension. &lt;code&gt;target&lt;/code&gt; is the reference to use for each element - typically a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;iter&lt;/code&gt; is the object to iterate over. &lt;code&gt;ifs&lt;/code&gt; is a list of test expressions: each &lt;code&gt;for&lt;/code&gt; clause can have multiple &lt;code&gt;ifs&lt;/code&gt;.</source>
          <target state="translated">理解の節の &lt;code&gt;for&lt;/code&gt; 1つ。 &lt;code&gt;target&lt;/code&gt; は、各要素（通常は&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;ノードまたは&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;ノード）に使用する参照です。 &lt;code&gt;iter&lt;/code&gt; は反復するオブジェクトです。 &lt;code&gt;ifs&lt;/code&gt; はテスト式のリストです。各 &lt;code&gt;for&lt;/code&gt; 句は複数の &lt;code&gt;ifs&lt;/code&gt; を持つことができます。</target>
        </trans-unit>
        <trans-unit id="c1f7ff6936f08d9dafa27c2a7c0ea9ece2945b6a" translate="yes" xml:space="preserve">
          <source>One can also cause all warnings to be exceptions by using &lt;code&gt;error&lt;/code&gt; instead of &lt;code&gt;always&lt;/code&gt;. One thing to be aware of is that if a warning has already been raised because of a &lt;code&gt;once&lt;/code&gt;/&lt;code&gt;default&lt;/code&gt; rule, then no matter what filters are set the warning will not be seen again unless the warnings registry related to the warning has been cleared.</source>
          <target state="translated">また、 &lt;code&gt;always&lt;/code&gt; なく &lt;code&gt;error&lt;/code&gt; を使用して、すべての警告を例外にすることもできます。注意すべきことの1つは、 &lt;code&gt;once&lt;/code&gt; / &lt;code&gt;default&lt;/code&gt; ルールのために警告がすでに発生している場合、どのフィルターが設定されていても、警告に関連する警告レジストリがクリアされない限り、警告は再び表示されないということです。</target>
        </trans-unit>
        <trans-unit id="412f97dfac468fe3c85abdccb1436f3c6754c211" translate="yes" xml:space="preserve">
          <source>One can create a pool of processes which will carry out tasks submitted to it with the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">1つは、&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;クラスを使用してそれに送信されたタスクを実行するプロセスのプールを作成できます。</target>
        </trans-unit>
        <trans-unit id="3ad735603768448e20a288aa471831e1d3bf88e6" translate="yes" xml:space="preserve">
          <source>One class, &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt;, is a &lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; subclass. It creates and listens at the HTTP socket, dispatching the requests to a handler. Code to create and run the server looks like this:</source>
          <target state="translated">1つのクラス&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt;サブクラスです。HTTPソケットを作成してリッスンし、リクエストをハンドラーにディスパッチします。サーバーを作成して実行するコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7087184633e7181831a047d644ec560eea655368" translate="yes" xml:space="preserve">
          <source>One client can access the server as follows:</source>
          <target state="translated">1つのクライアントは、以下のようにサーバにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4d4ef3d17dad8ff1ba572aeda5566878ba2d3416" translate="yes" xml:space="preserve">
          <source>One difference between this module and Henstridge&amp;rsquo;s: his catalog objects supported access through a mapping API, but this appears to be unused and so is not currently supported.</source>
          <target state="translated">このモジュールとヘンストリッジの1つの違い：彼のカタログオブジェクトはマッピングAPIを介したアクセスをサポートしていましたが、これは使用されていないようで、現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="5763c2d1a6c833df6c8067ce7085ffa547578913" translate="yes" xml:space="preserve">
          <source>One downside of these convenience functions is that the need to handle both IPv4 and IPv6 formats means that error messages provide minimal information on the precise error, as the functions don&amp;rsquo;t know whether the IPv4 or IPv6 format was intended. More detailed error reporting can be obtained by calling the appropriate version specific class constructors directly.</source>
          <target state="translated">これらの便利な関数の欠点の1つは、IPv4とIPv6の両方の形式を処理する必要があるということは、関数がIPv4とIPv6のどちらの形式が意図されているのかわからないため、エラーメッセージが正確なエラーに関する最小限の情報を提供することです。より詳細なエラーレポートは、適切なバージョン固有のクラスコンストラクターを直接呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="2d3b96d4bd51e1e6c79ce329a792e822561bb377" translate="yes" xml:space="preserve">
          <source>One exception is defined as an attribute of the &lt;a href=&quot;#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">1つの例外が&lt;a href=&quot;#module-poplib&quot;&gt; &lt;code&gt;poplib&lt;/code&gt; &lt;/a&gt;モジュールの属性として定義されています。</target>
        </trans-unit>
        <trans-unit id="a72557fcbc3e55ff795f503fb908c1ad3cb3e7c3" translate="yes" xml:space="preserve">
          <source>One limitation has to do with accuracy of timing information. There is a fundamental problem with deterministic profilers involving accuracy. The most obvious restriction is that the underlying &amp;ldquo;clock&amp;rdquo; is only ticking at a rate (typically) of about .001 seconds. Hence no measurements will be more accurate than the underlying clock. If enough measurements are taken, then the &amp;ldquo;error&amp;rdquo; will tend to average out. Unfortunately, removing this first error induces a second source of error.</source>
          <target state="translated">1つの制限は、タイミング情報の精度に関係しています。精度を含む確定的プロファイラーには、根本的な問題があります。最も明白な制限は、基になる「クロック」が（通常）約.001秒の速度でのみ刻時していることです。したがって、基礎となるクロックよりも正確な測定はありません。十分な測定が行われた場合、「エラー」は平均化される傾向があります。残念ながら、この最初のエラーを削除すると、2番目のエラーの原因になります。</target>
        </trans-unit>
        <trans-unit id="5d30662d8771fa11b0017b4d40f87263cc12f04c" translate="yes" xml:space="preserve">
          <source>One method needs to be defined for container objects to provide iteration support:</source>
          <target state="translated">イテレーションのサポートを提供するために、コンテナオブジェクト用に1つのメソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="c275e97c9c5002e886d7fe72ea350785b0233d2a" translate="yes" xml:space="preserve">
          <source>One more support function is also defined:</source>
          <target state="translated">また、もう一つのサポート機能も定義されています。</target>
        </trans-unit>
        <trans-unit id="33c0248d0f5b644a8ee6869c9c83e50620e88604" translate="yes" xml:space="preserve">
          <source>One more than the number of the highest signal number.</source>
          <target state="translated">最高信号数の数字より1つ多い。</target>
        </trans-unit>
        <trans-unit id="b14b841456d54340be37e877cf490ede6a8dc178" translate="yes" xml:space="preserve">
          <source>One more thing to be aware of is that the parser-level &lt;code&gt;get()&lt;/code&gt; method provides a custom, more complex interface, maintained for backwards compatibility. When using this method, a fallback value can be provided via the &lt;code&gt;fallback&lt;/code&gt; keyword-only argument:</source>
          <target state="translated">もう1つ注意すべき点は、パーサーレベルの &lt;code&gt;get()&lt;/code&gt; メソッドが、下位互換性のために維持されているカスタムのより複雑なインターフェースを提供することです。このメソッドを使用する場合、 &lt;code&gt;fallback&lt;/code&gt; キーワードのみの引数を介してフォールバック値を提供できます。</target>
        </trans-unit>
        <trans-unit id="4dad841e0c8793fb2acecc194fc87215ceb56552" translate="yes" xml:space="preserve">
          <source>One needs to call this function straight after the &lt;code&gt;if __name__ ==
'__main__'&lt;/code&gt; line of the main module. For example:</source>
          <target state="translated">メインモジュール &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 行の直後にこの関数を呼び出す必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="c23c4fd93b19eb8a93ad4ea94f5022d7dccf40a4" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;determinate&amp;rdquo; or &amp;ldquo;indeterminate&amp;rdquo;.</source>
          <target state="translated">「確定」または「確定」のいずれか。</target>
        </trans-unit>
        <trans-unit id="792368d2ec0cc35704b6cdade00d87e0b1b51091" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the progress bar.</source>
          <target state="translated">「水平」または「垂直」のいずれか。プログレスバーの向きを指定します。</target>
        </trans-unit>
        <trans-unit id="413c6ea48d40de27918453c5164fccb674e90d4c" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the separator.</source>
          <target state="translated">「水平」または「垂直」のいずれか。セパレーターの方向を指定します。</target>
        </trans-unit>
        <trans-unit id="76cba3ca26e12a80e4964b3cd3c4c38e4f3792c1" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;normal&amp;rdquo;, &amp;ldquo;readonly&amp;rdquo;, or &amp;ldquo;disabled&amp;rdquo;. In the &amp;ldquo;readonly&amp;rdquo; state, the value may not be edited directly, and the user can only selection of the values from the dropdown list. In the &amp;ldquo;normal&amp;rdquo; state, the text field is directly editable. In the &amp;ldquo;disabled&amp;rdquo; state, no interaction is possible.</source>
          <target state="translated">「通常」、「読み取り専用」、または「無効」のいずれか。「読み取り専用」状態では、値を直接編集することはできず、ユーザーはドロップダウンリストから値を選択することしかできません。「通常」の状態では、テキストフィールドを直接編集できます。「無効」状態では、対話はできません。</target>
        </trans-unit>
        <trans-unit id="b71680b34169ae274a157ce0f891fed86a995ab7" translate="yes" xml:space="preserve">
          <source>One of the more common uses of &lt;code&gt;nargs='?'&lt;/code&gt; is to allow optional input and output files:</source>
          <target state="translated">&lt;code&gt;nargs='?'&lt;/code&gt; のより一般的な使用法の1つ オプションの入出力ファイルを許可することです：</target>
        </trans-unit>
        <trans-unit id="5b55b53653ecf6bdee05bb4d9db6dde58eb35a46" translate="yes" xml:space="preserve">
          <source>One of the most common tasks is to generate the flat (serialized) version of the email message represented by a message object structure. You will need to do this if you want to send your message via &lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt; module, or print the message on the console. Taking a message object structure and producing a serialized representation is the job of the generator classes.</source>
          <target state="translated">最も一般的なタスクの1つは、メッセージオブジェクト構造で表される電子メールメッセージのフラット（シリアル化）バージョンを生成することです。&lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;nntplib#module-nntplib&quot;&gt; &lt;code&gt;nntplib&lt;/code&gt; &lt;/a&gt;モジュールを介してメッセージを送信する場合、またはコンソールにメッセージを印刷する場合は、これを行う必要があります。メッセージオブジェクト構造を取得し、シリアル化された表現を生成することは、ジェネレータクラスの仕事です。</target>
        </trans-unit>
        <trans-unit id="93c09cddaf4af85bdb82c014ec742b6b5d02f54f" translate="yes" xml:space="preserve">
          <source>One of two places where &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; actually inspects the type of a field is to determine if a field is a class variable as defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. It does this by checking if the type of the field is &lt;code&gt;typing.ClassVar&lt;/code&gt;. If a field is a &lt;code&gt;ClassVar&lt;/code&gt;, it is excluded from consideration as a field and is ignored by the dataclass mechanisms. Such &lt;code&gt;ClassVar&lt;/code&gt; pseudo-fields are not returned by the module-level &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;がフィールドのタイプを実際に検査する2つの場所の1つは、フィールドが&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526で&lt;/strong&gt;&lt;/a&gt;定義されているクラス変数であるかどうかを判別することです。これは、フィールドのタイプが &lt;code&gt;typing.ClassVar&lt;/code&gt; であるかどうかを確認することで行われます。フィールドが &lt;code&gt;ClassVar&lt;/code&gt; の場合、フィールドとしての考慮から除外され、データクラスメカニズムによって無視されます。このような &lt;code&gt;ClassVar&lt;/code&gt; 疑似フィールドは、モジュールレベルの&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt;関数では返されません。</target>
        </trans-unit>
        <trans-unit id="b4fa5b092d960caa5c98eb1763a721595959c032" translate="yes" xml:space="preserve">
          <source>One particularly effective way of handling sub-commands is to combine the use of the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method with calls to &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; so that each subparser knows which Python function it should execute. For example:</source>
          <target state="translated">サブコマンドを処理する1つの特に効果的な方法は、&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドの使用とset_defaults（）の呼び出しを&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;て、各サブパーサーが実行するPython関数を認識できるようにすることです。例えば：</target>
        </trans-unit>
        <trans-unit id="6265c9633edbf23fb81d92e275200b17517c24ee" translate="yes" xml:space="preserve">
          <source>One possible reason to set &lt;code&gt;hash=False&lt;/code&gt; but &lt;code&gt;compare=True&lt;/code&gt; would be if a field is expensive to compute a hash value for, that field is needed for equality testing, and there are other fields that contribute to the type&amp;rsquo;s hash value. Even if a field is excluded from the hash, it will still be used for comparisons.</source>
          <target state="translated">&lt;code&gt;hash=False&lt;/code&gt; で &lt;code&gt;compare=True&lt;/code&gt; を設定する1つの考えられる理由は、フィールドがハッシュ値を計算するのにコストがかかり、そのフィールドが等価性テストに必要であり、タイプのハッシュ値に寄与する他のフィールドがある場合です。フィールドがハッシュから除外されている場合でも、比較に使用されます。</target>
        </trans-unit>
        <trans-unit id="a226b0eaad4988e53ed4f880b8d7a128f07557e7" translate="yes" xml:space="preserve">
          <source>One should just use a copy of the referent instead when making comparisons.</source>
          <target state="translated">比較をするときには、参照元のコピーを使うべきです。</target>
        </trans-unit>
        <trans-unit id="c62e6f913693a5417011764c6f11e9c5f58e5593" translate="yes" xml:space="preserve">
          <source>One use case for this is for mocking objects used as context managers in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">これの使用例の1つは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントでコンテキストマネージャとして使用されるオブジェクトをモックする場合です。</target>
        </trans-unit>
        <trans-unit id="ab3e7193bd28fb961e976d99467bf8a10813836c" translate="yes" xml:space="preserve">
          <source>One use case for this is for mocking objects used as context managers in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">これの1つのユースケースは、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントでコンテキストマネージャーとして使用されるオブジェクトをモックする場合です。</target>
        </trans-unit>
        <trans-unit id="2db721d062a28eead2d894ec1cc32437698273d5" translate="yes" xml:space="preserve">
          <source>One useful application of the second form of &lt;a href=&quot;#iter&quot;&gt;&lt;code&gt;iter()&lt;/code&gt;&lt;/a&gt; is to build a block-reader. For example, reading fixed-width blocks from a binary database file until the end of file is reached:</source>
          <target state="translated">&lt;a href=&quot;#iter&quot;&gt; &lt;code&gt;iter()&lt;/code&gt; の&lt;/a&gt; 2番目の形式の便利なアプリケーションの1つは、ブロックリーダーを構築することです。たとえば、ファイルの終わりに達するまで、バイナリデータベースファイルから固定幅ブロックを読み取ります。</target>
        </trans-unit>
        <trans-unit id="941e0e22f8b46e0572e23109cb229b556c8c68de" translate="yes" xml:space="preserve">
          <source>One useful feature of the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module is the built-in &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;sqlite3.Row&lt;/code&gt;&lt;/a&gt; class designed to be used as a row factory.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールの便利な機能の1つは、行ファクトリとして使用するように設計された&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;sqlite3.Row&lt;/code&gt; &lt;/a&gt;クラスです。</target>
        </trans-unit>
        <trans-unit id="fd18cd38e6a1b32596d71ef2b185bf3b797fb25f" translate="yes" xml:space="preserve">
          <source>One way to open a box is to type a key character and wait for a predefined interval. This defaults to 2 seconds; customize it in the settings dialog. (To prevent auto popups, set the delay to a large number of milliseconds, such as 100000000.) For imported module names or class or function attributes, type &amp;lsquo;.&amp;rsquo;. For filenames in the root directory, type &lt;a href=&quot;os#os.sep&quot;&gt;&lt;code&gt;os.sep&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.altsep&quot;&gt;&lt;code&gt;os.altsep&lt;/code&gt;&lt;/a&gt; immediately after an opening quote. (On Windows, one can specify a drive first.) Move into subdirectories by typing a directory name and a separator.</source>
          <target state="translated">ボックスを開く1つの方法は、キー文字を入力して、事前定義された間隔を待つことです。これはデフォルトで2秒です。設定ダイアログでカスタマイズします。 （自動ポップアップを防ぐには、遅延を100000000などの大きなミリ秒数に設定します。）インポートされたモジュール名、クラスまたは関数の属性には、「。」と入力します。ルートディレクトリのファイル名には、開始引用符の直後に&lt;a href=&quot;os#os.sep&quot;&gt; &lt;code&gt;os.sep&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.altsep&quot;&gt; &lt;code&gt;os.altsep&lt;/code&gt; &lt;/a&gt;と入力します。 （Windowsでは、最初にドライブを指定できます。）ディレクトリ名と区切り文字を入力して、サブディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="aaef7b6555dea31b8a999a49a168f126d8d8fdaf" translate="yes" xml:space="preserve">
          <source>One way to search and explore this XML example is to manually add the URI to every tag or attribute in the xpath of a &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このXMLの例を検索して探索する1つの方法は、&lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt;のxpath内のすべてのタグまたは属性に手動でURIを追加することです。</target>
        </trans-unit>
        <trans-unit id="685a8c4199bf6d2bcd91aafdcf97ef52c57e0bf8" translate="yes" xml:space="preserve">
          <source>One-dimensional memoryviews of hashable (read-only) types with formats &amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo; are also hashable. The hash is defined as &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt;:</source>
          <target state="translated">フォーマットが「B」、「b」、または「c」のハッシュ可能（読み取り専用）型の1次元メモリビューもハッシュ可能です。ハッシュは、 &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt; として定義されます。</target>
        </trans-unit>
        <trans-unit id="4e2cd4c7e6f9d4fd20fd3009b486f148f36ad549" translate="yes" xml:space="preserve">
          <source>One-shot (de)compression</source>
          <target state="translated">ワンショット圧縮</target>
        </trans-unit>
        <trans-unit id="e92a8f9a44d55a6fa57ab9d7f17030266d725e27" translate="yes" xml:space="preserve">
          <source>Online reference for tkinter supported by effbot.org.</source>
          <target state="translated">effbot.orgがサポートするtkinterのオンラインリファレンス。</target>
        </trans-unit>
        <trans-unit id="9dbb8fb37052c67451fd1294542a0777a48cd714" translate="yes" xml:space="preserve">
          <source>Only &lt;em&gt;days&lt;/em&gt;, &lt;em&gt;seconds&lt;/em&gt; and &lt;em&gt;microseconds&lt;/em&gt; are stored internally. Arguments are converted to those units:</source>
          <target state="translated">&lt;em&gt;日&lt;/em&gt;、&lt;em&gt;秒&lt;/em&gt;、&lt;em&gt;マイクロ&lt;/em&gt;&lt;em&gt;秒&lt;/em&gt;のみが内部に保存されます。引数はそれらの単位に変換されます：</target>
        </trans-unit>
        <trans-unit id="e496096627294b6371ddb1a7da261de2d33baeed" translate="yes" xml:space="preserve">
          <source>Only ASCII characters are permitted in bytes literals (regardless of the declared source code encoding). Any binary values over 127 must be entered into bytes literals using the appropriate escape sequence.</source>
          <target state="translated">バイトリテラルではASCII文字のみが許可されます(宣言されたソースコードのエンコーディングに関わらず)。127を超えるバイナリ値は、適切なエスケープシーケンスを使用してバイトリテラルに入力しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9bcb0283c49f6302675a6e970eee6fdb45189e87" translate="yes" xml:space="preserve">
          <source>Only ASCII is supported. The &lt;code&gt;backslashreplace&lt;/code&gt; error handler is used on encoding.</source>
          <target state="translated">ASCIIのみがサポートされています。 &lt;code&gt;backslashreplace&lt;/code&gt; のエラーハンドラは、符号化に使用されています。</target>
        </trans-unit>
        <trans-unit id="c6113a93896d56d6fd83ee494a739a1940a20027" translate="yes" xml:space="preserve">
          <source>Only authors of web servers and programming frameworks need to know every detail and corner case of the WSGI design. You don&amp;rsquo;t need to understand every detail of WSGI just to install a WSGI application or to write a web application using an existing framework.</source>
          <target state="translated">Webサーバーとプログラミングフレームワークの作成者だけが、WSGI設計のあらゆる詳細と隅角を知る必要があります。WSGIアプリケーションをインストールしたり、既存のフレームワークを使用してWebアプリケーションを作成したりするためだけに、WSGIの詳細をすべて理解する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5472056d6db2aa4b4e5fca6b6d943ffdc4c17bf0" translate="yes" xml:space="preserve">
          <source>Only available on Windows.</source>
          <target state="translated">Windowsでのみご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="9cff90a9caa5fca4e097eda23e08985099f6cbd6" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the method raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 1.1.1およびTLS 1.3が有効な場合にのみ使用できます。TLS 1.3サポートがない場合、メソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="62a51d86e2878cfb5387b455ada7f61c5dffd8a7" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the property value is None and can&amp;rsquo;t be modified</source>
          <target state="translated">OpenSSL 1.1.1およびTLS 1.3が有効な場合にのみ使用できます。TLS 1.3のサポートがない場合、プロパティ値はNoneであり、変更できません</target>
        </trans-unit>
        <trans-unit id="95c159d38cefff4dfee104a391e7876c9172be62" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling process or thread owns the lock. An &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is raised if this method is called by a process or thread other than the owner or if the lock is in an unlocked (unowned) state. Note that the type of exception raised in this situation differs from the implemented behavior in &lt;a href=&quot;threading#threading.RLock.release&quot;&gt;&lt;code&gt;threading.RLock.release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しプロセスまたはスレッドがロックを所有している場合にのみ、このメソッドを呼び出します。AN &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;この方法は、プロセスまたは所有者以外、またはロックがロック解除（非所有）状態にある場合、他のスレッドによって呼び出された場合に上昇します。この状況で発生する例外のタイプは、&lt;a href=&quot;threading#threading.RLock.release&quot;&gt; &lt;code&gt;threading.RLock.release()&lt;/code&gt; &lt;/a&gt;で実装されている動作とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a1b68642ddd76fe9bd27aab5c4134b933957a9b2" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling thread owns the lock. A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if this method is called when the lock is unlocked.</source>
          <target state="translated">呼び出しスレッドがロックを所有している場合にのみ、このメソッドを呼び出します。A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;ロックがアンロックされたときにこのメソッドが呼び出された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="eb1874f752845c50ae749ab0610da40d6a9ed03f" translate="yes" xml:space="preserve">
          <source>Only class methods are defined by this class to alleviate the need for instantiation.</source>
          <target state="translated">インスタンス化の必要性を軽減するために、このクラスではクラスメソッドのみが定義されています。</target>
        </trans-unit>
        <trans-unit id="c3bad470e2ecc603718c76f4c9074b5de3a88646" translate="yes" xml:space="preserve">
          <source>Only docstrings attached to objects belonging to module &lt;em&gt;m&lt;/em&gt; are searched.</source>
          <target state="translated">モジュール&lt;em&gt;mに&lt;/em&gt;属するオブジェクトに添付されたドキュメント文字列のみが検索されます。</target>
        </trans-unit>
        <trans-unit id="51af0077ba3cd9ef0693961e00abb68011fe16f6" translate="yes" xml:space="preserve">
          <source>Only on Mac OS X platform.</source>
          <target state="translated">Mac OS Xプラットフォームのみ。</target>
        </trans-unit>
        <trans-unit id="4052b81eb936f003d4ae4d67da6755035d5b6d2c" translate="yes" xml:space="preserve">
          <source>Only on Windows platforms.</source>
          <target state="translated">Windowsプラットフォームのみ。</target>
        </trans-unit>
        <trans-unit id="c739e35e3345aa2c864403c706892dacb2999ed6" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;get_wch()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;get_wch()&lt;/code&gt; が呼び出される前に1つの&lt;em&gt;ch&lt;/em&gt;のみをプッシュできます。</target>
        </trans-unit>
        <trans-unit id="0a0fe79f0e31124b5d7fe36b8522ebf56951357a" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;getch()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;getch()&lt;/code&gt; が呼び出される前に1つの&lt;em&gt;ch&lt;/em&gt;のみをプッシュできます。</target>
        </trans-unit>
        <trans-unit id="3bb6c14b3d23d2945eacea1ff6486fbffeceb261" translate="yes" xml:space="preserve">
          <source>Only one callback can be set per &lt;code&gt;SSLContext&lt;/code&gt;. If &lt;em&gt;sni_callback&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt; then the callback is disabled. Calling this function a subsequent time will disable the previously registered callback.</source>
          <target state="translated">&lt;code&gt;SSLContext&lt;/code&gt; ごとに設定できるコールバックは1つだけです。&lt;em&gt;sni_callback&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、コールバックは無効になります。以降この関数を呼び出すと、以前に登録されたコールバックが無効になります。</target>
        </trans-unit>
        <trans-unit id="921877f46f6c2f6c956d4c2b43d413ed0f256f18" translate="yes" xml:space="preserve">
          <source>Only one concrete &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; class, the &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class, is supplied by the &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class can represent simple timezones with fixed offsets from UTC, such as UTC itself or North American EST and EDT timezones. Supporting timezones at deeper levels of detail is up to the application. The rules for time adjustment across the world are more political than rational, change frequently, and there is no standard suitable for every application aside from UTC.</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;モジュールが提供するのは、1つの具体的な&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;クラスである&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;クラスだけです。&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;クラスは、UTC自体や北米ESTとEDTタイムゾーンとしてUTCからの固定オフセット、との簡単なタイムゾーンを表すことができます。より深い詳細レベルでタイムゾーンをサポートするかどうかは、アプリケーション次第です。世界中の時間調整のルールは、合理的で頻繁に変更されるよりも政治的であり、UTC以外のすべてのアプリケーションに適した標準はありません。</target>
        </trans-unit>
        <trans-unit id="b2694ff82c068ccb7ad25e6614404effc6e0e6dd" translate="yes" xml:space="preserve">
          <source>Only one stack frame is returned for a suspended coroutine.</source>
          <target state="translated">サスペンドされたコルーチンに対しては、1つのスタックフレームのみが返されます。</target>
        </trans-unit>
        <trans-unit id="45899a65083753942e402707d87a02ef650b8c6b" translate="yes" xml:space="preserve">
          <source>Only run test methods and classes that match the pattern or substring. This option may be used multiple times, in which case all test cases that match of the given patterns are included.</source>
          <target state="translated">パターンまたは部分文字列にマッチするテストメソッドとクラスのみを実行します。このオプションは複数回使用することができ、その場合は与えられたパターンにマッチするすべてのテストケースが含まれます。</target>
        </trans-unit>
        <trans-unit id="b86acce0e0c3ada12f44f0e9d2c197184c46af52" translate="yes" xml:space="preserve">
          <source>Only the directives specified in the documentation are supported. Because &lt;code&gt;strftime()&lt;/code&gt; is implemented per platform it can sometimes offer more directives than those listed. But &lt;code&gt;strptime()&lt;/code&gt; is independent of any platform and thus does not necessarily support all directives available that are not documented as supported.</source>
          <target state="translated">ドキュメントで指定されているディレクティブのみがサポートされています。 &lt;code&gt;strftime()&lt;/code&gt; はプラットフォームごとに実装されているため、リストされているディレクティブよりも多くのディレクティブを提供できる場合があります。ただし、 &lt;code&gt;strptime()&lt;/code&gt; はプラットフォームに依存しないため、サポート対象として記載されていない、利用可能なすべてのディレクティブをサポートしているとは限りません。</target>
        </trans-unit>
        <trans-unit id="16dec77f10fe170dae724bd68005e7aa2cc49646" translate="yes" xml:space="preserve">
          <source>Only the filename, the function name and the line number are displayed. (no source code)</source>
          <target state="translated">ファイル名、関数名、行番号のみ表示されます。(ソースコードなし)</target>
        </trans-unit>
        <trans-unit id="60d352aab6fcb944b7fc146c1abce5b6e9d139b1" translate="yes" xml:space="preserve">
          <source>Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.</source>
          <target state="translated">オブジェクトに直接帰属するメモリ消費のみが計上され、それが参照するオブジェクトのメモリ消費は計上されません。</target>
        </trans-unit>
        <trans-unit id="d182c5edf8d6af50c78e1101233e80d072394832" translate="yes" xml:space="preserve">
          <source>Only works for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; which defines an &lt;code&gt;iter_modules()&lt;/code&gt; method. This interface is non-standard, so the module also provides implementations for &lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimport.zipimporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iter_modules()&lt;/code&gt; メソッドを定義する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;でのみ機能します。このインターフェースは非標準であるため、モジュールは&lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt; &lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimport.zipimporter&lt;/code&gt; の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="cd9a00ba5a14c9c2324fca22dccca7c5e146c055" translate="yes" xml:space="preserve">
          <source>Only works for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; which defines an &lt;code&gt;iter_modules()&lt;/code&gt; method. This interface is non-standard, so the module also provides implementations for &lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimport.zipimporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iter_modules()&lt;/code&gt; メソッドを定義する&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;でのみ機能します。このインターフェースは非標準であるため、モジュールは&lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt; &lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimport.zipimporter&lt;/code&gt; の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="cce35e3b95640fdd8783117c0d6b1bb2575dc0c6" translate="yes" xml:space="preserve">
          <source>Only writeable with OpenSSL 1.1.0 or higher.</source>
          <target state="translated">OpenSSL 1.1.0以上でのみ書き込み可能。</target>
        </trans-unit>
        <trans-unit id="94c549906c5562588206324bfc20c815277d21a5" translate="yes" xml:space="preserve">
          <source>Opcode collections</source>
          <target state="translated">オペコードコレクション</target>
        </trans-unit>
        <trans-unit id="cf9b77061f7b3126b49d50a6fa68f7ca8c26b7a3" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">Open</target>
        </trans-unit>
        <trans-unit id="3fc17c6daa0379542d7b9c9064a83dc69e75bffb" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;file&lt;/em&gt; and return a corresponding &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. If the file cannot be opened, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;を開き、対応する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;を返します。ファイルを開くことができない場合は、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6767f6f97a36f678cadfed5ebab2204f4d3ef84f" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;file&lt;/em&gt; and return a corresponding &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. If the file cannot be opened, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised. See &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt; for more examples of how to use this function.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;を開き、対応する&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;を返します。ファイルを開くことができない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。この関数の使用方法のその他の例については、&lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;ファイルの読み取りと書き込みを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0969da77d3b4939c7e92316eec745323136d4364" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;fullurl&lt;/em&gt; using the appropriate protocol. This method sets up cache and proxy information, then calls the appropriate open method with its input arguments. If the scheme is not recognized, &lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt;&lt;code&gt;open_unknown()&lt;/code&gt;&lt;/a&gt; is called. The &lt;em&gt;data&lt;/em&gt; argument has the same meaning as the &lt;em&gt;data&lt;/em&gt; argument of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">適切なプロトコルを使用して&lt;em&gt;fullurl&lt;/em&gt;を開きます。このメソッドは、キャッシュとプロキシ情報を設定し、入力引数を使用して適切なopenメソッドを呼び出します。スキームが認識されない場合、&lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt; &lt;code&gt;open_unknown()&lt;/code&gt; &lt;/a&gt;が呼び出されます。&lt;em&gt;データ&lt;/em&gt;引数は同じ意味を持っている&lt;em&gt;データ&lt;/em&gt;の引数&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ea233b21029cc672f31fe9b3997814419601cd0" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the browser handled by this controller, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコントローラーが処理するブラウザーの新しいページ（「タブ」）で&lt;em&gt;URL&lt;/em&gt;を開きます（可能な場合&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。それ以外の場合はopen_new（）と同等です。</target>
        </trans-unit>
        <trans-unit id="b6693c0a4bbf0ab0047e8b16619f81dc52e9dab4" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the default browser, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可能であれば、デフォルトのブラウザの新しいページ（「タブ」）で&lt;em&gt;URL&lt;/em&gt;を開きます。それ以外の場合は、&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="b8866b21bed2f90c7e0d0db5d81720b7915e2396" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the browser handled by this controller, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window. Alias &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オープン&lt;em&gt;URL&lt;/em&gt;可能であればブラウザの新しいウィンドウでは、そうでない場合は、このコントローラがオープン扱わ&lt;em&gt;URLを&lt;/em&gt;唯一のブラウザウィンドウで。エイリアス&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80be1f0f5216d3c4d0013d4e332bf117ad7d0caf" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the default browser, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window.</source>
          <target state="translated">オープン&lt;em&gt;URLを&lt;/em&gt;デフォルトブラウザの新しいウィンドウで、可能ならば、そうでない場合は、開いている&lt;em&gt;URL&lt;/em&gt;のみのブラウザウィンドウに表示されます。</target>
        </trans-unit>
        <trans-unit id="c004943ea8325dbad5b0898f3d806b2cc79ada2b" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt;. If open fails, raises &lt;a href=&quot;#test.support.TestFailed&quot;&gt;&lt;code&gt;TestFailed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;URLを&lt;/em&gt;開きます。オープンが失敗した場合、&lt;a href=&quot;#test.support.TestFailed&quot;&gt; &lt;code&gt;TestFailed&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="167f647cfa354d55132f5f4c726947ab44e252e5" translate="yes" xml:space="preserve">
          <source>Open FTP URLs, keeping a cache of open FTP connections to minimize delays.</source>
          <target state="translated">FTPのURLを開き、開いているFTP接続のキャッシュを保持して遅延を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="8d287b03a85c8b0ae6a80daba6bfee69f5e82fba" translate="yes" xml:space="preserve">
          <source>Open FTP URLs.</source>
          <target state="translated">FTPのURLを開きます。</target>
        </trans-unit>
        <trans-unit id="83a9f9ab392f027e4bb05e016c0ac5b186fb79a0" translate="yes" xml:space="preserve">
          <source>Open Module&amp;hellip;</source>
          <target state="translated">モジュールを開く&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0a169583e6466c4bfd610a1b2484012408457535" translate="yes" xml:space="preserve">
          <source>Open Sound System Programmer&amp;rsquo;s Guide</source>
          <target state="translated">サウンドシステムプログラマガイドを開く</target>
        </trans-unit>
        <trans-unit id="d650c621aed21d23bbb1a249e9d1ffa127b4a119" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;dumbdbm&lt;/code&gt; database and return a dumbdbm object. The &lt;em&gt;filename&lt;/em&gt; argument is the basename of the database file (without any specific extensions). When a dumbdbm database is created, files with &lt;code&gt;.dat&lt;/code&gt; and &lt;code&gt;.dir&lt;/code&gt; extensions are created.</source>
          <target state="translated">&lt;code&gt;dumbdbm&lt;/code&gt; データベースを開き、dumbdbmオブジェクトを返します。&lt;em&gt;ファイル名の&lt;/em&gt;引数は、（特定の拡張子なし）、データベースファイルのベース名です。dumbdbmデータベースが作成されると、 &lt;code&gt;.dat&lt;/code&gt; および &lt;code&gt;.dir&lt;/code&gt; 拡張子を持つファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="e632fe179883b3d0338581a425671fd5094822ca" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;gdbm&lt;/code&gt; database and return a &lt;code&gt;gdbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file.</source>
          <target state="translated">開き &lt;code&gt;gdbm&lt;/code&gt; データベースを返すと &lt;code&gt;gdbm&lt;/code&gt; オブジェクトを。&lt;em&gt;ファイル名の&lt;/em&gt;引数には、データベースファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="4322583748a9c6421dfb4c09fcaf033d44e4d9da" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of tar blocks for reading with transparent compression.</source>
          <target state="translated">透過的な圧縮で読み取るためにtarブロックの&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="729abd50a19a9f17e3e7c4f19594ca97385dcc56" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of uncompressed tar blocks for reading.</source>
          <target state="translated">読み取り用に非圧縮tarブロックの&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="0a595c5666012f5a73201a7ad3255c23528028d9" translate="yes" xml:space="preserve">
          <source>Open a TCP connection.</source>
          <target state="translated">TCP接続を開きます。</target>
        </trans-unit>
        <trans-unit id="dedbe01a1c7e4b40aa832642beeaa62e8071b7b2" translate="yes" xml:space="preserve">
          <source>Open a Unix socket connection.</source>
          <target state="translated">Unix ソケット接続を開きます。</target>
        </trans-unit>
        <trans-unit id="c30333aca1528eaa7dec5dcc0b551102c76fb3bc" translate="yes" xml:space="preserve">
          <source>Open a ZIP file, where &lt;em&gt;file&lt;/em&gt; can be a path to a file (a string), a file-like object or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">ZIPファイルを開きます。fileは、&lt;em&gt;ファイル&lt;/em&gt;へのパス（文字列）、ファイルのようなオブジェクト、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="b844406e1d7fb2c84d714af40a1c0b56204e8098" translate="yes" xml:space="preserve">
          <source>Open a ZIP file, where &lt;em&gt;file&lt;/em&gt; can be a path to a file (a string), a file-like object or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">ZIPファイルを開きます。ここで、&lt;em&gt;file&lt;/em&gt;は、ファイル（文字列）、ファイルのようなオブジェクト、または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトへのパス&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="769e263af17bbeb1d57314125f9ccfea5fdf9008" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">読み取り用にbzip2圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="d71b74051ccf64b5252b5579fb9f29f5d65d41ae" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込み用にbzip2圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="6c202a8f725c3966ee9eb45191a4f1f648fe6ef6" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary mode.</source>
          <target state="translated">bzip2で圧縮したファイルをバイナリモードで開く。</target>
        </trans-unit>
        <trans-unit id="61e2bcd0c719fe1eff240cd130593bcf98e87f8b" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">bzip2で圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5c501141e20ca6f1bb67e9874109864e0151202e" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">bzip2で圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="efeeb124691327df2e796c4e2f61fca215aaaf35" translate="yes" xml:space="preserve">
          <source>Open a column to the left of the edit window which shows the number of each line of text. The default is off, which may be changed in the preferences (see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt;).</source>
          <target state="translated">テキストの各行の番号を示す編集ウィンドウの左側の列を開きます。デフォルトはオフで、設定で変更できます（&lt;a href=&quot;#preferences&quot;&gt;設定の設定を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="5138f8e4961bfac889560919d28c3273c8242a35" translate="yes" xml:space="preserve">
          <source>Open a configuration dialog and change preferences for the following: fonts, indentation, keybindings, text color themes, startup windows and size, additional help sources, and extensions. On macOS, open the configuration dialog by selecting Preferences in the application menu. For more details, see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt; under Help and preferences.</source>
          <target state="translated">設定ダイアログを開いて、フォント、インデント、キーバインド、テキストの色のテーマ、起動ウィンドウとサイズ、追加のヘルプソース、拡張機能の設定を変更します。macOSでは、アプリケーションメニューの[設定]を選択して構成ダイアログを開きます。詳細については、ヘルプと環境&lt;a href=&quot;#preferences&quot;&gt;設定の環境設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb78ee95466565bc19aba0319a23cbc54a1f5a4d" translate="yes" xml:space="preserve">
          <source>Open a context menu by right-clicking in a window (Control-click on macOS). Context menus have the standard clipboard functions also on the Edit menu.</source>
          <target state="translated">ウィンドウ内で右クリック(macOSの場合はControl-click)でコンテキストメニューを開きます。コンテキストメニューには、編集メニューにも標準のクリップボード機能があります。</target>
        </trans-unit>
        <trans-unit id="1364f2f6816d76d9a15863cac1e9715a393be440" translate="yes" xml:space="preserve">
          <source>Open a datagram (UDP) connection.</source>
          <target state="translated">データグラム(UDP)接続を開きます。</target>
        </trans-unit>
        <trans-unit id="dab27c8f9d447246bffdf89284e45b057ad9df09" translate="yes" xml:space="preserve">
          <source>Open a dbm database and return a &lt;code&gt;ndbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file (without the &lt;code&gt;.dir&lt;/code&gt; or &lt;code&gt;.pag&lt;/code&gt; extensions).</source>
          <target state="translated">dbmデータベースを開き、 &lt;code&gt;ndbm&lt;/code&gt; オブジェクトを返します。&lt;em&gt;ファイル名の&lt;/em&gt;引数は、（なしのデータベースファイルの名前である &lt;code&gt;.dir&lt;/code&gt; か &lt;code&gt;.pag&lt;/code&gt; 拡張子）。</target>
        </trans-unit>
        <trans-unit id="da0ecd35b7e06e2e10631de386f9db741d263580" translate="yes" xml:space="preserve">
          <source>Open a dialog to change indent width. The accepted default by the Python community is 4 spaces.</source>
          <target state="translated">インデント幅を変更するためのダイアログを開きます。Python コミュニティで受け入れられているデフォルトは 4 スペースです。</target>
        </trans-unit>
        <trans-unit id="ab3cd1f4cf6f887a03a632cf57e13ad36b7a697f" translate="yes" xml:space="preserve">
          <source>Open a dialog to switch between indenting with spaces and tabs.</source>
          <target state="translated">インデントをスペースとタブで切り替えるダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="a25e5b56a56e73584a7689c789c2a64cbda285d4" translate="yes" xml:space="preserve">
          <source>Open a file in read only mode using the encoding detected by &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;によって検出されたエンコーディングを使用して、ファイルを読み取り専用モードで開きます。</target>
        </trans-unit>
        <trans-unit id="37ab3730c8e04788612d761f24c638eb97873272" translate="yes" xml:space="preserve">
          <source>Open a file search dialog. Put results in a new output window.</source>
          <target state="translated">ファイル検索ダイアログを開きます。結果を新しい出力ウィンドウに出力します。</target>
        </trans-unit>
        <trans-unit id="2eb14a6fd323b13d0beb8b8c63d260dee2458311" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">読み取り用にgzip圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="58de51c83b15bd0a90eb56d615d749c080c0428e" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込み用にgzip圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="5f9ebb796e4ce59f8458da340d1d52a456be5ef3" translate="yes" xml:space="preserve">
          <source>Open a gzip-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">gzip圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="df9eaa58da31d44e870bff5c208ccabfb6e4d3cb" translate="yes" xml:space="preserve">
          <source>Open a gzip-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">gzipで圧縮されたファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="30c017ce0258307bd561cc1c740687ba59474f0b" translate="yes" xml:space="preserve">
          <source>Open a list of recent files. Click one to open it.</source>
          <target state="translated">最近のファイルのリストを開きます。1つをクリックして開きます。</target>
        </trans-unit>
        <trans-unit id="ca394801875e76928a12c9b6e408f346c581adf2" translate="yes" xml:space="preserve">
          <source>Open a mixer device and return an OSS mixer device object. &lt;em&gt;device&lt;/em&gt; is the mixer device filename to use. If it is not specified, this module first looks in the environment variable &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; for a device to use. If not found, it falls back to &lt;code&gt;/dev/mixer&lt;/code&gt;.</source>
          <target state="translated">ミキサーデバイスを開き、OSSミキサーデバイスオブジェクトを返します。&lt;em&gt;device&lt;/em&gt;は、使用するミキサーデバイスのファイル名です。指定されていない場合、このモジュールは最初に、使用するデバイスの環境変数 &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; を調べます。見つからない場合は、 &lt;code&gt;/dev/mixer&lt;/code&gt; にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="124de94624e9d6235daba0288398e8d0eda77911" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair, using &lt;a href=&quot;os#os.openpty&quot;&gt;&lt;code&gt;os.openpty()&lt;/code&gt;&lt;/a&gt; if possible, or emulation code for generic Unix systems. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt;, for the master and the slave end, respectively.</source>
          <target state="translated">可能な場合は&lt;a href=&quot;os#os.openpty&quot;&gt; &lt;code&gt;os.openpty()&lt;/code&gt; &lt;/a&gt;を使用して新しい疑似端末ペアを開くか、一般的なUnixシステムのエミュレーションコードを開きます。マスター側とスレーブ側のそれぞれについて、ファイル記述子のペア &lt;code&gt;(master, slave)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f0f92982986d32cddede6d079b18b515667e6c40" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt; for the pty and the tty, respectively. The new file descriptors are &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;. For a (slightly) more portable approach, use the &lt;a href=&quot;pty#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">新しい疑似端末ペアを開きます。それぞれptyとtty のファイル記述子のペア &lt;code&gt;(master, slave)&lt;/code&gt; を返します。新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承できません&lt;/a&gt;。（やや）移植性の高いアプローチでは、&lt;a href=&quot;pty#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;モジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="310ce69a8bca050de2aaf114ea01dff137cc8b62" translate="yes" xml:space="preserve">
          <source>Open a pane at the top of the edit window which shows the block context of the code which has scrolled above the top of the window. See &lt;a href=&quot;#code-context&quot;&gt;Code Context&lt;/a&gt; in the Editing and Navigation section below.</source>
          <target state="translated">編集ウィンドウの上部にあるペインを開きます。ウィンドウの上部にスクロールしたコードのブロックコンテキストが表示されます。以下の「編集とナビゲーション」セクションの&lt;a href=&quot;#code-context&quot;&gt;コードコンテキスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="961144629087d810690a8c197d9838fead119d99" translate="yes" xml:space="preserve">
          <source>Open a persistent dictionary. The filename specified is the base filename for the underlying database. As a side-effect, an extension may be added to the filename and more than one file may be created. By default, the underlying database file is opened for reading and writing. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as the &lt;em&gt;flag&lt;/em&gt; parameter of &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">永続的な辞書を開きます。指定されたファイル名は、基になるデータベースのベースファイル名です。副作用として、ファイル名に拡張子が追加され、複数のファイルが作成される場合があります。デフォルトでは、基礎となるデータベースファイルは読み取りと書き込みのために開かれます。オプションの&lt;em&gt;フラグ&lt;/em&gt;パラメータの解釈は、&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;フラグ&lt;/em&gt;パラメータと同じです。</target>
        </trans-unit>
        <trans-unit id="e30bcb19f1f39f996dce7f6ad300b894ce70b960" translate="yes" xml:space="preserve">
          <source>Open a pipe to or from command &lt;em&gt;cmd&lt;/em&gt;. The return value is an open file object connected to the pipe, which can be read or written depending on whether &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt; (default) or &lt;code&gt;'w'&lt;/code&gt;. The &lt;em&gt;buffering&lt;/em&gt; argument has the same meaning as the corresponding argument to the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The returned file object reads or writes text strings rather than bytes.</source>
          <target state="translated">コマンド&lt;em&gt;cmdとの間の&lt;/em&gt;パイプを開きます。戻り値は、パイプに接続された開いているファイルオブジェクトであり、&lt;em&gt;モード&lt;/em&gt;が &lt;code&gt;'r'&lt;/code&gt; （デフォルト）または &lt;code&gt;'w'&lt;/code&gt; のどちらであるかによって読み取りまたは書き込みが可能です。&lt;em&gt;バッファリングの&lt;/em&gt;引数は、内蔵に対応する引数と同じ意味を持っている&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数。返されたファイルオブジェクトは、バイトではなくテキスト文字列を読み書きします。</target>
        </trans-unit>
        <trans-unit id="8c5fd40c145ccacef9428c87b2f9836894576731" translate="yes" xml:space="preserve">
          <source>Open a scrollable list allowing selection of existing names. See &lt;a href=&quot;#completions&quot;&gt;Completions&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">スクロール可能なリストを開き、既存の名前を選択できるようにします。以下の「編集とナビゲーション」セクションの「&lt;a href=&quot;#completions&quot;&gt;完了&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e4303f9f37906dec81588a51089c928e75e68e4f" translate="yes" xml:space="preserve">
          <source>Open a scrollable list allowing selection of keywords and attributes. See &lt;a href=&quot;#completions&quot;&gt;Completions&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">キーワードと属性を選択できるスクロール可能なリストを開きます。下記の編集とナビゲーションのセクションの&lt;a href=&quot;#completions&quot;&gt;補完&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4217d0cef98e970f4e763e2abdcb21e0e9dba748" translate="yes" xml:space="preserve">
          <source>Open a search dialog with many options</source>
          <target state="translated">多くのオプションで検索ダイアログを開く</target>
        </trans-unit>
        <trans-unit id="7d488b8ee4c8ad111ad3e0840a8cf0d33d625078" translate="yes" xml:space="preserve">
          <source>Open a search-and-replace dialog.</source>
          <target state="translated">検索と置換ダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="ff5f177e11975357dd6078d245cc9e65ff7d469c" translate="yes" xml:space="preserve">
          <source>Open a streaming transport connection to a given address specified by &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt;および&lt;em&gt;portで&lt;/em&gt;指定された特定のアドレスへのストリーミングトランスポート接続を開き&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1744e1544566dcdbef4e0123916bae4c8ecaef7a" translate="yes" xml:space="preserve">
          <source>Open an AIFF or AIFF-C file and return an object instance with methods that are described below. The argument &lt;em&gt;file&lt;/em&gt; is either a string naming a file or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;mode&lt;/em&gt; must be &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'rb'&lt;/code&gt; when the file must be opened for reading, or &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; when the file must be opened for writing. If omitted, &lt;code&gt;file.mode&lt;/code&gt; is used if it exists, otherwise &lt;code&gt;'rb'&lt;/code&gt; is used. When used for writing, the file object should be seekable, unless you know ahead of time how many samples you are going to write in total and use &lt;code&gt;writeframesraw()&lt;/code&gt; and &lt;code&gt;setnframes()&lt;/code&gt;. The &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">AIFFまたはAIFF-Cファイルを開き、以下で説明するメソッドを使用してオブジェクトインスタンスを返します。引数&lt;em&gt;file&lt;/em&gt;は、ファイルまたは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;指定する文字列です。&lt;em&gt;モード&lt;/em&gt;は、ファイルを読み取り用に開く必要がある場合は &lt;code&gt;'r'&lt;/code&gt; または &lt;code&gt;'rb'&lt;/code&gt; 、ファイルを書き込み用に開く必要がある場合は &lt;code&gt;'w'&lt;/code&gt; または &lt;code&gt;'wb'&lt;/code&gt; にする必要があります。省略した場合、 &lt;code&gt;file.mode&lt;/code&gt; が存在する場合はそれが使用され、存在しない場合は &lt;code&gt;'rb'&lt;/code&gt; が使用されます。書き込みに使用する場合、合計でいくつのサンプルを書き込むかを事前に知り、 &lt;code&gt;writeframesraw()&lt;/code&gt; および &lt;code&gt;setnframes()&lt;/code&gt; を使用しない限り、ファイルオブジェクトはシーク可能でなければなりません。の&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数は&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用できます。場合 &lt;code&gt;with&lt;/code&gt; 、ブロックが完了すると、&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ddf92b972ba5b44c47eb08af4356977d6224354c" translate="yes" xml:space="preserve">
          <source>Open an AIFF or AIFF-C file and return an object instance with methods that are described below. The argument &lt;em&gt;file&lt;/em&gt; is either a string naming a file or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;mode&lt;/em&gt; must be &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'rb'&lt;/code&gt; when the file must be opened for reading, or &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; when the file must be opened for writing. If omitted, &lt;code&gt;file.mode&lt;/code&gt; is used if it exists, otherwise &lt;code&gt;'rb'&lt;/code&gt; is used. When used for writing, the file object should be seekable, unless you know ahead of time how many samples you are going to write in total and use &lt;code&gt;writeframesraw()&lt;/code&gt; and &lt;code&gt;setnframes()&lt;/code&gt;. The &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">AIFFまたはAIFF-Cファイルを開き、以下で説明するメソッドを使用してオブジェクトインスタンスを返します。引数&lt;em&gt;file&lt;/em&gt;は、ファイルまたは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトに&lt;/a&gt;名前を付ける文字列です。&lt;em&gt;モード&lt;/em&gt;は、ファイルを読み取り用に開く必要がある場合は &lt;code&gt;'r'&lt;/code&gt; または &lt;code&gt;'rb'&lt;/code&gt; 、ファイルを書き込み用に開く必要がある場合は &lt;code&gt;'w'&lt;/code&gt; または &lt;code&gt;'wb'&lt;/code&gt; 必要があります。省略した場合は &lt;code&gt;file.mode&lt;/code&gt; が使用され、存在しない場合は &lt;code&gt;'rb'&lt;/code&gt; が使用されます。書き込みに使用する場合、ファイルオブジェクトはシーク可能である必要があります。ただし、合計でいくつのサンプルを書き込み、 &lt;code&gt;writeframesraw()&lt;/code&gt; および &lt;code&gt;setnframes()&lt;/code&gt; を使用するかを事前に知っている場合を除きます。ザ・&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数は&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで使用できます。場合 &lt;code&gt;with&lt;/code&gt; 、ブロックが完了すると、&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c826d14c450bf65432c928fcd0ab030434d46051" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary mode.</source>
          <target state="translated">LZMAで圧縮されたファイルをバイナリモードで開きます。</target>
        </trans-unit>
        <trans-unit id="e1faabe747c63d77a2b349aef83e34f029746298" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">LZMA圧縮ファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="3dc1a2e7448af77fafeaad4b56b7249fb522823e" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">LZMA圧縮ファイルをバイナリモードまたはテキストモードで開き、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="63c9941ee4cb89d2d889eb4b86133c79f4dbfe23" translate="yes" xml:space="preserve">
          <source>Open an audio device and return an OSS audio device object. This object supports many file-like methods, such as &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, and &lt;code&gt;fileno()&lt;/code&gt; (although there are subtle differences between conventional Unix read/write semantics and those of OSS audio devices). It also supports a number of audio-specific methods; see below for the complete list of methods.</source>
          <target state="translated">オーディオデバイスを開き、OSSオーディオデバイスオブジェクトを返します。このオブジェクトは、 &lt;code&gt;read()&lt;/code&gt; 、 &lt;code&gt;write()&lt;/code&gt; 、 &lt;code&gt;fileno()&lt;/code&gt; などの多くのファイルのようなメソッドをサポートします（ただし、従来のUnixの読み取り/書き込みのセマンティクスとOSSオーディオデバイスのセマンティクスには微妙な違いがあります）。また、多くのオーディオ固有のメソッドもサポートしています。メソッドの完全なリストについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="603bc2bb14d64c97ed149bdeb1f454a0cdee6bdf" translate="yes" xml:space="preserve">
          <source>Open an encoded file using the given &lt;em&gt;mode&lt;/em&gt; and return an instance of &lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt;, providing transparent encoding/decoding. The default file mode is &lt;code&gt;'r'&lt;/code&gt;, meaning to open the file in read mode.</source>
          <target state="translated">指定された&lt;em&gt;モード&lt;/em&gt;を使用してエンコードされたファイルを開き、透過的なエンコード/デコードを提供する&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。デフォルトのファイルモードは &lt;code&gt;'r'&lt;/code&gt; で、ファイルを読み取りモードで開くことを意味します。</target>
        </trans-unit>
        <trans-unit id="70e42698ff3f06e64e68df6dd8b37bb0b559281d" translate="yes" xml:space="preserve">
          <source>Open an existing file with an Open dialog.</source>
          <target state="translated">開くダイアログで既存のファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="d98d15f410a1d6752590d2b11440fb75fb110d32" translate="yes" xml:space="preserve">
          <source>Open an existing module (searches sys.path).</source>
          <target state="translated">既存のモジュールを開く(sys.pathを検索)。</target>
        </trans-unit>
        <trans-unit id="0ee43539d00f6f0549ec54060b1769296318ac88" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">lzma圧縮&lt;em&gt;ストリーム&lt;/em&gt;を読み取り用に開きます。</target>
        </trans-unit>
        <trans-unit id="31602b490a7a64e6c2db5f868743fe69a5882ae0" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込みのためにlzma圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="079b069912678bc0e9edc918427fbb1c6c90a22d" translate="yes" xml:space="preserve">
          <source>Open an uncompressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">書き込みのために非圧縮&lt;em&gt;ストリーム&lt;/em&gt;を開きます。</target>
        </trans-unit>
        <trans-unit id="98a6f72f0f8ba4690a7074b4a4a5e9ed2745f83c" translate="yes" xml:space="preserve">
          <source>Open data URLs.</source>
          <target state="translated">オープンデータのURLです。</target>
        </trans-unit>
        <trans-unit id="16d266be663a4baf112aaf41a72a96cf96f3a372" translate="yes" xml:space="preserve">
          <source>Open database for reading and writing, creating it if it doesn&amp;rsquo;t exist</source>
          <target state="translated">読み取りと書き込みのためにデータベースを開き、存在しない場合は作成します</target>
        </trans-unit>
        <trans-unit id="781766b35fa1fffb57637176b0ab6b1592f6edda" translate="yes" xml:space="preserve">
          <source>Open existing database for reading and writing</source>
          <target state="translated">読み書き用の既存のデータベースを開く</target>
        </trans-unit>
        <trans-unit id="410e2a4489d3a436b0413ceb110aca00b9d836e3" translate="yes" xml:space="preserve">
          <source>Open existing database for reading only (default)</source>
          <target state="translated">既存のデータベースを読み込み専用に開く(デフォルト)</target>
        </trans-unit>
        <trans-unit id="da8803e86851bcbc32ed1a652aec62b5acaa7e27" translate="yes" xml:space="preserve">
          <source>Open for appending with no compression. The file is created if it does not exist.</source>
          <target state="translated">圧縮せずに追記するためにオープンします。ファイルが存在しない場合に作成されます。</target>
        </trans-unit>
        <trans-unit id="a92945eaf20e290447e2fee4702651291e88a7a8" translate="yes" xml:space="preserve">
          <source>Open for binary reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;をバイナリで読み取るために開き&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3d7a0fda614e078919dfeee281a77c3029b4cd8d" translate="yes" xml:space="preserve">
          <source>Open for bzip2 compressed writing.</source>
          <target state="translated">bzip2圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="3be0b1cac4b854897b77bfa1ac3644fca43d5aa8" translate="yes" xml:space="preserve">
          <source>Open for gzip compressed writing.</source>
          <target state="translated">gzip圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="e4536676ca1a607495256d83de74122a14e9f319" translate="yes" xml:space="preserve">
          <source>Open for lzma compressed writing.</source>
          <target state="translated">lzma圧縮書き込み用にオープン。</target>
        </trans-unit>
        <trans-unit id="e39a5b6a548b20c25318d8a7703ff10916012921" translate="yes" xml:space="preserve">
          <source>Open for reading exclusively without compression.</source>
          <target state="translated">圧縮せずに読み放題で公開</target>
        </trans-unit>
        <trans-unit id="5d2a4b3378fdbc3be17d246022eb416831821745" translate="yes" xml:space="preserve">
          <source>Open for reading with bzip2 compression.</source>
          <target state="translated">bzip2圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="e27915e983e4971e83b72733d9272da24ed3062a" translate="yes" xml:space="preserve">
          <source>Open for reading with gzip compression.</source>
          <target state="translated">gzip圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="2da82d3e5ef9f2ef062573cb554660a3c136498f" translate="yes" xml:space="preserve">
          <source>Open for reading with lzma compression.</source>
          <target state="translated">lzma圧縮で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="e3a348820cc41064f1578562b070372b25c805da" translate="yes" xml:space="preserve">
          <source>Open for reading with transparent compression (recommended).</source>
          <target state="translated">透過圧縮(推奨)で読めるようにオープン。</target>
        </trans-unit>
        <trans-unit id="72bd4d78cdd6d40e6b66c653af1f6efc9092b2a0" translate="yes" xml:space="preserve">
          <source>Open for text reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;. By default, the resource is opened for reading as UTF-8.</source>
          <target state="translated">&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソースを&lt;/em&gt;読み取るテキスト用に開き&lt;em&gt;ます&lt;/em&gt;。デフォルトでは、リソースはUTF-8として読み取るために開かれます。</target>
        </trans-unit>
        <trans-unit id="5fbd33d2eb6cd4b2ececd950d2a289a68364e3b2" translate="yes" xml:space="preserve">
          <source>Open for uncompressed writing.</source>
          <target state="translated">圧縮されていない書き込みのためにオープン。</target>
        </trans-unit>
        <trans-unit id="2d5629e9c9ad86de82f582a75bd5aac184a32a98" translate="yes" xml:space="preserve">
          <source>Open local files.</source>
          <target state="translated">ローカルファイルを開く。</target>
        </trans-unit>
        <trans-unit id="c31d0d8dc1af57114456f8a6995200302c826647" translate="yes" xml:space="preserve">
          <source>Open or wake up the Python Shell window.</source>
          <target state="translated">Pythonシェルのウィンドウを開くか、ウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="64e54bad7370d9dd3ea7ce90f39c116822954b3f" translate="yes" xml:space="preserve">
          <source>Open the FTP file indicated by &lt;em&gt;req&lt;/em&gt;. The login is always done with empty username and password.</source>
          <target state="translated">&lt;em&gt;reqで&lt;/em&gt;示されたFTPファイルを開きます。ログインは常に空のユーザー名とパスワードで行われます。</target>
        </trans-unit>
        <trans-unit id="6bf0ac9893ebd85b77099d4a402423ddf3e569c0" translate="yes" xml:space="preserve">
          <source>Open the URL &lt;em&gt;url&lt;/em&gt;, which can be either a string or a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">文字列または&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトのいずれかであるURL &lt;em&gt;urlを&lt;/em&gt;開きます。</target>
        </trans-unit>
        <trans-unit id="a2f57839feb75512fa819cec149b3ca923d075ec" translate="yes" xml:space="preserve">
          <source>Open the database file &lt;em&gt;file&lt;/em&gt; and return a corresponding object.</source>
          <target state="translated">データベースファイル&lt;em&gt;file&lt;/em&gt;を開き、対応するオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="9778684242145c7e5980545da5305f1a835b31fd" translate="yes" xml:space="preserve">
          <source>Open the database in fast mode. Writes to the database will not be synchronized.</source>
          <target state="translated">高速モードでデータベースを開きます。データベースへの書き込みは同期されません。</target>
        </trans-unit>
        <trans-unit id="0dc0480d0f4224d0fb02e5967e073c791476447a" translate="yes" xml:space="preserve">
          <source>Open the file &lt;em&gt;path&lt;/em&gt; and set various flags according to &lt;em&gt;flags&lt;/em&gt; and possibly its mode according to &lt;em&gt;mode&lt;/em&gt;. When computing &lt;em&gt;mode&lt;/em&gt;, the current umask value is first masked out. Return the file descriptor for the newly opened file. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">ファイルを開く&lt;em&gt;パス&lt;/em&gt;に応じて設定される各種フラグ&lt;em&gt;のフラグ&lt;/em&gt;およびおそらくそのモードに応じて&lt;em&gt;モード&lt;/em&gt;。&lt;em&gt;モードを&lt;/em&gt;計算するとき、現在のumask値は最初にマスクされます。新しく開いたファイルのファイル記述子を返します。新しいファイル記述子は&lt;a href=&quot;#fd-inheritance&quot;&gt;継承不可&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="caa52afce9506061d0fa4472348c0e95be91ed41" translate="yes" xml:space="preserve">
          <source>Open the file locally, if there is no host name, or the host name is &lt;code&gt;'localhost'&lt;/code&gt;.</source>
          <target state="translated">ホスト名がない場合、またはホスト名が &lt;code&gt;'localhost'&lt;/code&gt; の場合は、ファイルをローカルで開きます。</target>
        </trans-unit>
        <trans-unit id="cfc513f94813f282c3c61b3a5c7b58c27fabbaa9" translate="yes" xml:space="preserve">
          <source>Open the file pointed to by the path, like the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function does:</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数と同じように、パスが指すファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="5eba403538351b5c16610a19c57e8a8df88568dc" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in bytes mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">バイトモードでポイントされているファイルを開き、&lt;em&gt;データ&lt;/em&gt;を書き込み、ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="e701b16e8d36cd75f1fa0285568b0411ec651724" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in text mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">テキストモードで指定されたファイルを開き、&lt;em&gt;データ&lt;/em&gt;を書き込み、ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="89b97b71d7fce960991c7dd1c07e2cdaec524088" translate="yes" xml:space="preserve">
          <source>Open the given &lt;em&gt;url&lt;/em&gt; (which can be a request object or a string), optionally passing the given &lt;em&gt;data&lt;/em&gt;. Arguments, return values and exceptions raised are the same as those of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; (which simply calls the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method on the currently installed global &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). The timeout feature actually works only for HTTP, HTTPS and FTP connections).</source>
          <target state="translated">指定された&lt;em&gt;URL&lt;/em&gt;（リクエストオブジェクトまたは文字列）を開き、オプションで指定された&lt;em&gt;data&lt;/em&gt;を渡し&lt;em&gt;ます&lt;/em&gt;。発生する引数、戻り値、例外は&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;と同じです（現在インストールされているグローバル&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すだけです）。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータでは、接続試行などの操作をブロックするためのタイムアウトを秒単位で指定します（指定しない場合、グローバルなデフォルトのタイムアウト設定が使用されます）。タイムアウト機能は、実際にはHTTP、HTTPS、およびFTP接続でのみ機能します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1480c8605ef5bc7bd341fc4f6753a37e43a4d4" translate="yes" xml:space="preserve">
          <source>Open&amp;hellip;</source>
          <target state="translated">Open&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="01d60b1917be3088476a0cd4e28b367766a98677" translate="yes" xml:space="preserve">
          <source>OpenEXR Files</source>
          <target state="translated">OpenEXR ファイル</target>
        </trans-unit>
        <trans-unit id="73728b14af6a4a2f3551f7cdac9f5c4d6228013b" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.0 to 1.1.0e will abort the handshake and raise &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; when both sides support ALPN but cannot agree on a protocol. 1.1.0f+ behaves like 1.0.2, &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; returns None.</source>
          <target state="translated">1.1.0eへのOpenSSL 1.1.0は握手や昇給中止します&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; を&lt;/a&gt;両側がALPNをサポートしますが、プロトコルに同意できないとき。1.1.0f +は1.0.2と同様に動作し、&lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt;はNoneを返します。</target>
        </trans-unit>
        <trans-unit id="608031ed74d99bf56acad6cfae3a559becd3fe58" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.1 has TLS 1.3 cipher suites enabled by default. The suites cannot be disabled with &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 1.1.1では、TLS 1.3暗号スイートがデフォルトで有効になっています。スイートを&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;set_ciphers()&lt;/code&gt; で&lt;/a&gt;無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="87910396f08c825fecd3572b61ad32564c05b34d" translate="yes" xml:space="preserve">
          <source>OpenerDirector Objects</source>
          <target state="translated">OpenerDirector オブジェクト</target>
        </trans-unit>
        <trans-unit id="4fa7faa0fef5cd2e070617de5da06be08f27d93b" translate="yes" xml:space="preserve">
          <source>OpenerDirector objects open URLs in three stages:</source>
          <target state="translated">OpenerDirector オブジェクトは、3 段階で URL を開きます。</target>
        </trans-unit>
        <trans-unit id="16d066a3fc9b4ed5f9b17e3224ef371f27c42ab1" translate="yes" xml:space="preserve">
          <source>Opening a file:</source>
          <target state="translated">ファイルを開くこと。</target>
        </trans-unit>
        <trans-unit id="3b13dba20249cec4bebcc1e50c72c68162719b5f" translate="yes" xml:space="preserve">
          <source>Opening network connections</source>
          <target state="translated">ネットワーク接続を開く</target>
        </trans-unit>
        <trans-unit id="2e4955dc64b4b6a99ad04615254b1e5dbed12175" translate="yes" xml:space="preserve">
          <source>Opens a connection to the SQLite database file &lt;em&gt;database&lt;/em&gt;. By default returns a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object, unless a custom &lt;em&gt;factory&lt;/em&gt; is given.</source>
          <target state="translated">SQLiteデータベースファイル&lt;em&gt;database&lt;/em&gt;への接続を開き&lt;em&gt;ます&lt;/em&gt;。カスタム&lt;em&gt;ファクトリ&lt;/em&gt;が指定されていない限り、デフォルトでは&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85224a398354ea36e289250e0f429ab80eb410a3" translate="yes" xml:space="preserve">
          <source>Opens a new element. &lt;em&gt;tag&lt;/em&gt; is the element name. &lt;em&gt;attrs&lt;/em&gt; is a dictionary containing element attributes. Returns the opened element.</source>
          <target state="translated">新しい要素を開きます。&lt;em&gt;tag&lt;/em&gt;は要素名です。&lt;em&gt;attrs&lt;/em&gt;は、要素の属性を含む辞書です。開いている要素を返します。</target>
        </trans-unit>
        <trans-unit id="5552ba1b994865292838a17cccf8d2f7dbeb693a" translate="yes" xml:space="preserve">
          <source>Opens socket to &lt;em&gt;port&lt;/em&gt; at &lt;em&gt;host&lt;/em&gt;. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt. If timeout is not given or is None, the global default socket timeout is used. Also note that if the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to reject creating a non-blocking socket. This method is implicitly called by the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; constructor. The connection objects established by this method will be used in the &lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt;&lt;code&gt;IMAP4.read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt;&lt;code&gt;IMAP4.readline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt;&lt;code&gt;IMAP4.send()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt;&lt;code&gt;IMAP4.shutdown()&lt;/code&gt;&lt;/a&gt; methods. You may override this method.</source>
          <target state="translated">開くには、ソケット&lt;em&gt;のポート&lt;/em&gt;で&lt;em&gt;ホスト&lt;/em&gt;。オプションの&lt;em&gt;timeout&lt;/em&gt;パラメーターは、接続試行のタイムアウトを秒単位で指定します。タイムアウトが指定されていないか、Noneの場合、グローバルなデフォルトのソケットタイムアウトが使用されます。また、&lt;em&gt;timeout&lt;/em&gt;パラメーターがゼロに設定されている場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生し、非ブロッキングソケットの作成が拒否されることにも注意してください。このメソッドは、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;コンストラクターによって暗黙的に呼び出されます。このメソッドによって確立された接続オブジェクトは、&lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt; &lt;code&gt;IMAP4.read()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt; &lt;code&gt;IMAP4.readline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt; &lt;code&gt;IMAP4.send()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt; &lt;code&gt;IMAP4.shutdown()&lt;/code&gt; &lt;/a&gt;メソッドで使用されます。このメソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="aabf2727e8cb0ec31b954ad851960d268b7966e2" translate="yes" xml:space="preserve">
          <source>Opens socket to &lt;em&gt;port&lt;/em&gt; at &lt;em&gt;host&lt;/em&gt;. This method is implicitly called by the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; constructor. The connection objects established by this method will be used in the &lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt;&lt;code&gt;IMAP4.read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt;&lt;code&gt;IMAP4.readline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt;&lt;code&gt;IMAP4.send()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt;&lt;code&gt;IMAP4.shutdown()&lt;/code&gt;&lt;/a&gt; methods. You may override this method.</source>
          <target state="translated">開くには、ソケット&lt;em&gt;のポート&lt;/em&gt;で&lt;em&gt;ホスト&lt;/em&gt;。このメソッドは、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;コンストラクターによって暗黙的に呼び出されます。このメソッドによって確立された接続オブジェクトは、&lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt; &lt;code&gt;IMAP4.read()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt; &lt;code&gt;IMAP4.readline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt; &lt;code&gt;IMAP4.send()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt; &lt;code&gt;IMAP4.shutdown()&lt;/code&gt; &lt;/a&gt;メソッドで使用されます。このメソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="525d07220d0ff4234fa0ad51dedfb34d53d57012" translate="yes" xml:space="preserve">
          <source>Opens the provided file with mode &lt;code&gt;'rb'&lt;/code&gt;. This function should be used when the intent is to treat the contents as executable code.</source>
          <target state="translated">提供されたファイルをモード &lt;code&gt;'rb'&lt;/code&gt; で開きます。この関数は、コンテンツを実行可能コードとして扱うことが目的の場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="413464a07680bc80891d442ceee2443c353ed2dd" translate="yes" xml:space="preserve">
          <source>Opens the specified key, returning a &lt;a href=&quot;#handle-object&quot;&gt;handle object&lt;/a&gt;.</source>
          <target state="translated">指定されたキーを開き、&lt;a href=&quot;#handle-object&quot;&gt;ハンドルオブジェクトを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="8c04dd154019c144217096dfd3976827b05133f0" translate="yes" xml:space="preserve">
          <source>Operating system interfaces, including functions to work with files at a lower level than Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;.</source>
          <target state="translated">オペレーティングシステムのインターフェース。Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;よりも低いレベルでファイルを操作する関数を含みます。</target>
        </trans-unit>
        <trans-unit id="5fc87b7e16c60d713e7c730fe487c543126364e8" translate="yes" xml:space="preserve">
          <source>Operating system interfaces, including functions to work with files at a lower level than Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;.</source>
          <target state="translated">Python&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;よりも低いレベルのファイルを操作する関数を含むオペレーティングシステムインターフェイス。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="translated">作業はすでに進行中</target>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="translated">操作不可</target>
        </trans-unit>
        <trans-unit id="43a0d8034edc13c8132ddaa1b799ae87a6565b50" translate="yes" xml:space="preserve">
          <source>Operation not supported on transport endpoint</source>
          <target state="translated">トランスポートエンドポイントでサポートされていない操作</target>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="translated">運用中</target>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="translated">操作はブロックされます</target>
        </trans-unit>
        <trans-unit id="3f36c3736abf81762323dd82f7d22a61738746fb" translate="yes" xml:space="preserve">
          <source>Operations and built-in functions that have a Boolean result always return &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; for false and &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;True&lt;/code&gt; for true, unless otherwise stated. (Important exception: the Boolean operations &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; always return one of their operands.)</source>
          <target state="translated">ブール値を持つ演算と組み込み関数は、特に明記されていない限り、常にfalseの場合は &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; 、trueの場合は &lt;code&gt;1&lt;/code&gt; または &lt;code&gt;True&lt;/code&gt; を返します。（重要な例外：ブール演算 &lt;code&gt;or&lt;/code&gt; および &lt;code&gt;and&lt;/code&gt; および常に常にいずれかのオペランドを返します。）</target>
        </trans-unit>
        <trans-unit id="b0a2a652140b72b9707efca49f6096fb106713ee" translate="yes" xml:space="preserve">
          <source>Operations are used as methods. Since the DOM uses only &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; parameters, the arguments are passed in normal order (from left to right). There are no optional arguments. &lt;code&gt;void&lt;/code&gt; operations return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">操作はメソッドとして使用されます。DOMのみを使用していますので、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;のパラメータ（左から右へ）、引数は通常の順序で渡されます。オプションの引数はありません。 &lt;code&gt;void&lt;/code&gt; 操作は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6d6b35cab74cd4bff853d83e0a100977302a8b95" translate="yes" xml:space="preserve">
          <source>Operations are used as methods. Since the DOM uses only &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; parameters, the arguments are passed in normal order (from left to right). There are no optional arguments. &lt;code&gt;void&lt;/code&gt; operations return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">演算はメソッドとして使用されます。DOMのみを使用していますので、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;のパラメータ（左から右へ）、引数は通常の順序で渡されます。オプションの引数はありません。 &lt;code&gt;void&lt;/code&gt; 操作は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5842137c602e8b1e20079af1475196379c2bc7a2" translate="yes" xml:space="preserve">
          <source>Operations like &lt;code&gt;+=&lt;/code&gt; which involve a read and write are not atomic. So if, for instance, you want to atomically increment a shared value it is insufficient to just do</source>
          <target state="translated">読み取りと書き込みを伴う &lt;code&gt;+=&lt;/code&gt; のような操作はアトミックではありません。したがって、たとえば、共有値をアトミックにインクリメントする場合は、単に行うだけでは不十分です。</target>
        </trans-unit>
        <trans-unit id="f419c43f2273d35c973397ffc8873fd0cff6d1f6" translate="yes" xml:space="preserve">
          <source>Operations which work with sequences (some of them with mappings too) include:</source>
          <target state="translated">シーケンス(一部はマッピングも含む)を扱う操作には次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="c431496d10314a298eb196699644e449631b5f2f" translate="yes" xml:space="preserve">
          <source>Option Flags</source>
          <target state="translated">オプションフラグ</target>
        </trans-unit>
        <trans-unit id="e495fe30fe845f1d5517bc35c9d0601fa416e0f7" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web clients (therefore, it will be used to create server-side sockets).</source>
          <target state="translated">&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; の&lt;/a&gt;オプション。この値は、コンテキストがWebクライアントの認証に使用される可能性があることを示します（したがって、サーバー側ソケットの作成に使用されます）。</target>
        </trans-unit>
        <trans-unit id="0ed5f390cd43fec0c1a9f5e969163e9713365adc" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web servers (therefore, it will be used to create client-side sockets).</source>
          <target state="translated">&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; の&lt;/a&gt;オプション。この値は、コンテキストがWebサーバーの認証に使用される可能性があることを示します（したがって、クライアント側ソケットの作成に使用されます）。</target>
        </trans-unit>
        <trans-unit id="1dc214003b5cc3f6b308d940b627561092a1f7c2" translate="yes" xml:space="preserve">
          <source>Option value syntax</source>
          <target state="translated">オプション値の構文</target>
        </trans-unit>
        <trans-unit id="0877ad74bf360dfde627563dd4aa4b01f6ce3129" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the audio data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は、トランスポート用のオーディオデータの実際のエンコーディングを実行する呼び出し可能な（つまり関数）です。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="ea5df2800bbbbd80f815acd541243fa31a50750a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は、&lt;em&gt;転送&lt;/em&gt;可能なデータの実際のエンコードを実行する呼び出し可能な（つまり、関数）です。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f423d4e8b5e1e91960dd208dab5452be79d71fb8" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the image data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">オプションの&lt;em&gt;_encoder&lt;/em&gt;は呼び出し可能な（つまり関数）で、転送用に画像データの実際のエンコードを実行します。この呼び出し可能オブジェクトは、&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;インスタンスである1つの引数を取ります。ペイロードをエンコードされた形式に変更するには、&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。また、必要に応じて、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;またはその他のヘッダーをメッセージオブジェクトに追加する必要があります。デフォルトのエンコーディングはbase64です。組み込みエンコーダーのリストについては、&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="d1640c671992d66aa1ab94530cbf0176f120aa8b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_mangle_from_&lt;/em&gt; and &lt;em&gt;maxheaderlen&lt;/em&gt; are as with the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">オプションの&lt;em&gt;_mangle_from_&lt;/em&gt;および&lt;em&gt;maxheaderlen&lt;/em&gt;は、&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;基本クラスと&lt;em&gt;同じ&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="c135f5214b837e44f2f6460a17880339144023cb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_subtype&lt;/em&gt; sets the subtype of the message; it defaults to &lt;em&gt;rfc822&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;_subtype&lt;/em&gt;は、メッセージのサブタイプを設定します。デフォルトは&lt;em&gt;rfc822&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="923ac92596f5e0b048764c0544725cb7d8315bfb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of at least length 2 (additional characters are ignored) which specifies an alternative alphabet for the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is &lt;code&gt;None&lt;/code&gt;, for which the standard Base64 alphabet is used.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代替アルファベットを指定する、少なくとも長さ2（追加の文字は無視されます）の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;でなければなりません。これにより、アプリケーションは、たとえばURLまたはファイルシステムに安全なBase64文字列を生成できます。デフォルトは &lt;code&gt;None&lt;/code&gt; で、標準のBase64アルファベットが使用されます。</target>
        </trans-unit>
        <trans-unit id="76bee86fbcac7650eb452298a6aece94136101d1" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string of at least length 2 (additional characters are ignored) which specifies the alternative alphabet used instead of the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;または少なくとも長さ2（追加の文字は無視されます）のASCII文字列である必要があり、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代わりに使用される代替アルファベットを指定します。</target>
        </trans-unit>
        <trans-unit id="4fabfb6d04a5ebe03ff438990cb3d85dcdc7ef20" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of at least length 2 (additional characters are ignored) which specifies an alternative alphabet for the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is &lt;code&gt;None&lt;/code&gt;, for which the standard Base64 alphabet is used.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、少なくとも長さ2（追加の文字は無視されます）の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;である必要があります。これは、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代替アルファベットを指定します。これにより、アプリケーションは、たとえばURLまたはファイルシステムに安全なBase64文字列を生成できます。デフォルトは &lt;code&gt;None&lt;/code&gt; で、標準のBase64アルファベットが使用されます。</target>
        </trans-unit>
        <trans-unit id="89ced3e3b797c1fa90962aca8b5c19deaa514379" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string of at least length 2 (additional characters are ignored) which specifies the alternative alphabet used instead of the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters.</source>
          <target state="translated">オプションの&lt;em&gt;altchar&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;または少なくとも長さ2のASCII文字列（追加の文字は無視されます）である必要があります。これは、 &lt;code&gt;+&lt;/code&gt; および &lt;code&gt;/&lt;/code&gt; 文字の代わりに使用される代替アルファベットを指定します。</target>
        </trans-unit>
        <trans-unit id="cb4b9921d192cd1a45a6adc8e11889092e96883c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;boundary&lt;/em&gt; is the multipart boundary string. When &lt;code&gt;None&lt;/code&gt; (the default), the boundary is calculated when needed (for example, when the message is serialized).</source>
          <target state="translated">オプションの&lt;em&gt;境界&lt;/em&gt;は、マルチパート境界ストリングです。場合は &lt;code&gt;None&lt;/code&gt; 必要なとき（デフォルト）、境界が計算されていない（例えば、メッセージが連載されている場合）。</target>
        </trans-unit>
        <trans-unit id="83df4bdb171cf95d87daaeffb55e269018e15e7e" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;casefold&lt;/em&gt; is a flag specifying whether a lowercase alphabet is acceptable as input. For security purposes, the default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;casefold&lt;/em&gt;は、小文字のアルファベットを入力として受け入れるかどうかを指定するフラグです。セキュリティ上の理由から、デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b3b940d26a790e7ff0f6bc05a182d4d5e74c6dad" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; is the character set that will be used in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoding of the &lt;code&gt;realname&lt;/code&gt; if the &lt;code&gt;realname&lt;/code&gt; contains non-ASCII characters. Can be an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;utf-8&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;charsetが&lt;/em&gt;で使用される文字セットである&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;のエンコーディング &lt;code&gt;realname&lt;/code&gt; 場合 &lt;code&gt;realname&lt;/code&gt; 非ASCII文字が含まれています。&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; の&lt;/a&gt;インスタンスにすることができます。デフォルトは &lt;code&gt;utf-8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="63ec82a1964cf6c1f24661387a4dc0633c206b42" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; serves two purposes: it has the same meaning as the &lt;em&gt;charset&lt;/em&gt; argument to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method. It also sets the default character set for all subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls that omit the &lt;em&gt;charset&lt;/em&gt; argument. If &lt;em&gt;charset&lt;/em&gt; is not provided in the constructor (the default), the &lt;code&gt;us-ascii&lt;/code&gt; character set is used both as &lt;em&gt;s&lt;/em&gt;&amp;rsquo;s initial charset and as the default for subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">オプションの&lt;em&gt;文字セットに&lt;/em&gt;は2つの目的があります。それは、&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;charset&lt;/em&gt;引数と同じ意味です。また、&lt;em&gt;charset&lt;/em&gt;引数を省略した後続のすべての&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;呼び出しにデフォルトの文字セットを設定します。場合は&lt;em&gt;文字セットが&lt;/em&gt;コンストラクタ（デフォルト）で提供されていない、 &lt;code&gt;us-ascii&lt;/code&gt; 文字セットは両方として使用されている&lt;em&gt;S&lt;/em&gt;さん、最初の文字セットとその後のデフォルトとして&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;の呼び出しを。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="642b9453af4c0269ab0ad7d0d8bcb29305105881" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt;, if given, should be a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt;) or the name of a character set, which will be converted to a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance. A value of &lt;code&gt;None&lt;/code&gt; (the default) means that the &lt;em&gt;charset&lt;/em&gt; given in the constructor is used.</source>
          <target state="translated">オプションの&lt;em&gt;charset&lt;/em&gt;を指定する場合は、&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンス（&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; を&lt;/a&gt;参照）または&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスに変換される文字セットの名前にする必要があります。値 &lt;code&gt;None&lt;/code&gt; （デフォルト）は、コンストラクターで指定された&lt;em&gt;文字セット&lt;/em&gt;が使用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="3105978bd6f7423833b30c5cebf668aba1d75338" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;context&lt;/em&gt; parameter is an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object; This is an alternative to using a keyfile and a certfile and if specified both &lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;コンテキスト&lt;/em&gt;パラメータは&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトです。これはキーファイルとcertfileにを使用する代わりに、両方の指定された場合は&lt;em&gt;キーファイルを&lt;/em&gt;と&lt;em&gt;certfileには&lt;/em&gt;ないはずです &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d99f38424b2c5ff22681c0c95a235051c8f5f6c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;continuation_ws&lt;/em&gt; must be &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant folding whitespace, and is usually either a space or a hard tab character. This character will be prepended to continuation lines. &lt;em&gt;continuation_ws&lt;/em&gt; defaults to a single space character.</source>
          <target state="translated">オプションの&lt;em&gt;continuation_ws&lt;/em&gt;は&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;準拠の折りたたみ空白でなければならず、通常はスペースまたはハードタブ文字です。この文字は継続行の前に付加されます。&lt;em&gt;continuation_wsの&lt;/em&gt;デフォルトは単一の空白文字です。</target>
        </trans-unit>
        <trans-unit id="c67c2285f2ee3c267919b8e982d48c9f0e3fac16" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is a flag indicating whether the payload should be decoded or not, according to the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. When &lt;code&gt;True&lt;/code&gt; and the message is not a multipart, the payload will be decoded if this header&amp;rsquo;s value is &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt;. If some other encoding is used, or &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header is missing, the payload is returned as-is (undecoded). In all cases the returned value is binary data. If the message is a multipart and the &lt;em&gt;decode&lt;/em&gt; flag is &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;None&lt;/code&gt; is returned. If the payload is base64 and it was not perfectly formed (missing padding, characters outside the base64 alphabet), then an appropriate defect will be added to the message&amp;rsquo;s defect property (&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; or &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt;, respectively).</source>
          <target state="translated">オプションの&lt;em&gt;デコード&lt;/em&gt;は、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーに従って、ペイロードを&lt;em&gt;デコードする&lt;/em&gt;必要があるかどうかを示すフラグです。ときに &lt;code&gt;True&lt;/code&gt; とメッセージがマルチパートではない、このヘッダーの値がされている場合、ペイロードは、復号化されます &lt;code&gt;quoted-printable&lt;/code&gt; 形式または &lt;code&gt;base64&lt;/code&gt; 。他のエンコーディングが使用されている場合、または&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーがない場合、ペイロードはそのまま返されます（デコードされません）。すべての場合において、戻り値はバイナリデータです。メッセージがマルチパートで、&lt;em&gt;デコード&lt;/em&gt;フラグが &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;None&lt;/code&gt; 返されます。ペイロードがbase64であり、完全に形成されていない場合（パディングがない、base64アルファベット以外の文字）、適切な欠陥がメッセージの欠陥プロパティに追加されます（それぞれ &lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; または &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="369dd5ecc7951cf49ed4b1356b49e703da098189" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is passed through to &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;Message.get_payload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;デコード&lt;/em&gt;は&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;Message.get_payload&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="84972e509ca18de70cc29ad7afa6e0258541f329" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed as the errors argument to the decode call if &lt;em&gt;s&lt;/em&gt; is a byte string.</source>
          <target state="translated">オプションの&lt;em&gt;エラー&lt;/em&gt;は、&lt;em&gt;s&lt;/em&gt;がバイト文字列の場合、decodes呼び出しのエラー引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="cdfa3072d99360bc8281b6670d7022d51cad8c05" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed straight through to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;エラー&lt;/em&gt;は、&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="af5602daa1b8d69afae9c649f6b6721510f50598" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;failobj&lt;/em&gt; is the object to return if there is no &lt;em&gt;Content-Type&lt;/em&gt; header. Optional &lt;em&gt;header&lt;/em&gt; is the header to search instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;failobj&lt;/em&gt;は、&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーがない場合に返すオブジェクトです。オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は、&lt;em&gt;Content-Typeの&lt;/em&gt;代わりに検索するヘッダーです。</target>
        </trans-unit>
        <trans-unit id="1c9958c82059fc6801aef502b2e8413f811d61fd" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;fp&lt;/em&gt; is a file-like object to print the output to. It must be suitable for Python&amp;rsquo;s &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;level&lt;/em&gt; is used internally. &lt;em&gt;include_default&lt;/em&gt;, if true, prints the default type as well.</source>
          <target state="translated">オプションの&lt;em&gt;fp&lt;/em&gt;は、出力を出力するファイルのようなオブジェクトです。Pythonの&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数に適している必要があります。&lt;em&gt;level&lt;/em&gt;は内部で使用されます。&lt;em&gt;include_default&lt;/em&gt;は、trueの場合、デフォルトのタイプも出力します。</target>
        </trans-unit>
        <trans-unit id="a8edc8339641cac835a5f65084c400648dd7bc38" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; if given, specifies the message header to use instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;ヘッダーが&lt;/em&gt;指定されている場合、&lt;em&gt;Content-Typeの&lt;/em&gt;代わりに使用するメッセージヘッダーを指定します。</target>
        </trans-unit>
        <trans-unit id="56ec783d1d1ef92af29b2b3bf0edfc7eeea59252" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative header to &lt;em&gt;Content-Type&lt;/em&gt;, and all parameters will be quoted as necessary unless optional &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">オプションの&lt;em&gt;ヘッダー&lt;/em&gt;は&lt;em&gt;Content-Typeの&lt;/em&gt;代替ヘッダーを指定し、オプションの&lt;em&gt;再&lt;/em&gt;引用が &lt;code&gt;False&lt;/code&gt; （デフォルトは &lt;code&gt;True&lt;/code&gt; ）でない限り、すべてのパラメーターは必要に応じて引用されます。</target>
        </trans-unit>
        <trans-unit id="d5523c1c7da4baa3419962027d50d39d8397401a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header_enc&lt;/em&gt; and &lt;em&gt;body_enc&lt;/em&gt; is either &lt;code&gt;Charset.QP&lt;/code&gt; for quoted-printable, &lt;code&gt;Charset.BASE64&lt;/code&gt; for base64 encoding, &lt;code&gt;Charset.SHORTEST&lt;/code&gt; for the shortest of quoted-printable or base64 encoding, or &lt;code&gt;None&lt;/code&gt; for no encoding. &lt;code&gt;SHORTEST&lt;/code&gt; is only valid for &lt;em&gt;header_enc&lt;/em&gt;. The default is &lt;code&gt;None&lt;/code&gt; for no encoding.</source>
          <target state="translated">オプション&lt;em&gt;header_enc&lt;/em&gt;と&lt;em&gt;body_encは&lt;/em&gt;どちらかである &lt;code&gt;Charset.QP&lt;/code&gt; quoted-printableのため、 &lt;code&gt;Charset.BASE64&lt;/code&gt; base64でエンコード、ため &lt;code&gt;Charset.SHORTEST&lt;/code&gt; quoted-printable形式またはbase64エンコード、または最短のために &lt;code&gt;None&lt;/code&gt; なしエンコーディングについて。 &lt;code&gt;SHORTEST&lt;/code&gt; のためにのみ有効です&lt;em&gt;header_enc&lt;/em&gt;。デフォルトは、エンコード &lt;code&gt;None&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="348f37b616413a59290dc4137576e659b6b66805" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is a flag specifying whether to stop parsing after reading the headers or not. The default is &lt;code&gt;False&lt;/code&gt;, meaning it parses the entire contents of the file.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、ヘッダーの読み取り後に解析を停止するかどうかを指定するフラグです。デフォルトは &lt;code&gt;False&lt;/code&gt; で、ファイルの内容全体を解析します。</target>
        </trans-unit>
        <trans-unit id="70ab572101a30eef47fe16af46c39372bde2e339" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="b729b7533028c3755db136b3ae706911b578a369" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.Parser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;headersonly&lt;/em&gt;は、&lt;a href=&quot;#email.parser.Parser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="1300eb907c8a0950cd615120af8b9e9015e21490" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;input_charset&lt;/em&gt; is as described below; it is always coerced to lower case. After being alias normalized it is also used as a lookup into the registry of character sets to find out the header encoding, body encoding, and output conversion codec to be used for the character set. For example, if &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;iso-8859-1&lt;/code&gt;, then headers and bodies will be encoded using quoted-printable and no output conversion codec is necessary. If &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;euc-jp&lt;/code&gt;, then headers will be encoded with base64, bodies will not be encoded, but output text will be converted from the &lt;code&gt;euc-jp&lt;/code&gt; character set to the &lt;code&gt;iso-2022-jp&lt;/code&gt; character set.</source>
          <target state="translated">オプションの&lt;em&gt;input_charset&lt;/em&gt;は次のとおりです。常に小文字に変換されます。エイリアスで正規化された後、文字セットのレジストリへのルックアップとしても使用され、文字セットに使用されるヘッダーエンコーディング、ボディエンコーディング、および出力変換コーデックが検出されます。たとえば、&lt;em&gt;input_charset&lt;/em&gt;が &lt;code&gt;iso-8859-1&lt;/code&gt; の場合、ヘッダーと本文はquoted-printableを使用してエンコードされ、出力変換コーデックは不要です。場合&lt;em&gt;input_charsetが&lt;/em&gt;ある &lt;code&gt;euc-jp&lt;/code&gt; 、その後、ヘッダはBASE64でエンコードされ、遺体はエンコードされませんが、出力テキストから変換されます &lt;code&gt;euc-jp&lt;/code&gt; への文字セット &lt;code&gt;iso-2022-jp&lt;/code&gt; 文字セット。</target>
        </trans-unit>
        <trans-unit id="7f0ac5d6eacc6d8910fdc79f834598dba5f7ecc0" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;localtime&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, interprets &lt;em&gt;timeval&lt;/em&gt;, and returns a date relative to the local timezone instead of UTC, properly taking daylight savings time into account. The default is &lt;code&gt;False&lt;/code&gt; meaning UTC is used.</source>
          <target state="translated">オプションの&lt;em&gt;localtime&lt;/em&gt;は、 &lt;code&gt;True&lt;/code&gt; の場合、&lt;em&gt;timevalを&lt;/em&gt;解釈し、UTCではなくローカルタイムゾーンに関連する日付を返し、夏時間を適切に考慮したフラグです。デフォルトは &lt;code&gt;False&lt;/code&gt; で、UTCが使用されます。</target>
        </trans-unit>
        <trans-unit id="081534f96775eff49e5f20cd9241c5dc8464300b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;output_charset&lt;/em&gt; is the character set that the output should be in. Conversions will proceed from input charset, to Unicode, to the output charset when the method &lt;code&gt;Charset.convert()&lt;/code&gt; is called. The default is to output in the same character set as the input.</source>
          <target state="translated">オプションの&lt;em&gt;output_charset&lt;/em&gt;は、出力先の文字セットです。メソッド &lt;code&gt;Charset.convert()&lt;/code&gt; が呼び出されると、変換は入力文字セットからUnicode、出力文字セットへと進みます。デフォルトでは、入力と同じ文字セットで出力します。</target>
        </trans-unit>
        <trans-unit id="27a289728023caa13d781ff4f3845ee08d743ebe" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;policy&lt;/em&gt; argument defaults to &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;ポリシー&lt;/em&gt;引数のデフォルトは&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e9de5adc35af35a2d0dbdc98b0b7dccae205e947" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;s&lt;/em&gt; is the initial header value. If &lt;code&gt;None&lt;/code&gt; (the default), the initial header value is not set. You can later append to the header with &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method calls. &lt;em&gt;s&lt;/em&gt; may be an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, but see the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; documentation for semantics.</source>
          <target state="translated">オプション&lt;em&gt;のs&lt;/em&gt;は初期ヘッダー値です。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、初期ヘッダの値が設定されていません。後でappend &lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してヘッダーに追加できます。&lt;em&gt;s&lt;/em&gt;は&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;インスタンスですが、セマンティクスについては&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a06aa49f277b03a309f72dd81f7730544395c46" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;splitchars&lt;/em&gt; is a string containing characters which should be given extra weight by the splitting algorithm during normal header wrapping. This is in very rough support of &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;lsquo;higher level syntactic breaks&amp;rsquo;: split points preceded by a splitchar are preferred during line splitting, with the characters preferred in the order in which they appear in the string. Space and tab may be included in the string to indicate whether preference should be given to one over the other as a split point when other split chars do not appear in the line being split. Splitchars does not affect &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded lines.</source>
          <target state="translated">オプションの&lt;em&gt;splitchars&lt;/em&gt;は文字を含む文字列で、通常のヘッダーの折り返し中に分割アルゴリズムによって追加の重みを与える必要があります。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;の「上位レベルの構文ブレーク」の大まかなサポートにあり&lt;strong&gt;ます&lt;/strong&gt;。splitcharが前にあるスプリットポイントは、行分割中に優先され、文字は、文字列に出現する順序で優先されます。文字列にスペースとタブを含めると、分割される行に他の分割文字が表示されない場合に、分割ポイントとして優先するかどうかを指定できます。 Splitcharsは&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047で&lt;/strong&gt;&lt;/a&gt;エンコードされた行には影響しません。</target>
        </trans-unit>
        <trans-unit id="a3f21b8e8630f6eb8e4be7786fc506fc0f12e579" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;timeval&lt;/em&gt; if given is a floating point time value as accepted by &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt;, otherwise the current time is used.</source>
          <target state="translated">&lt;em&gt;指定された&lt;/em&gt;場合のオプションの&lt;em&gt;timeval&lt;/em&gt;は、&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;で受け入れられる浮動小数点時間値です。それ以外の場合は、現在の時刻が使用されます。</target>
        </trans-unit>
        <trans-unit id="d94e2bee88984200593b6f6da3352d09ebd1bdf9" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;usegmt&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, outputs a date string with the timezone as an ascii string &lt;code&gt;GMT&lt;/code&gt;, rather than a numeric &lt;code&gt;-0000&lt;/code&gt;. This is needed for some protocols (such as HTTP). This only applies when &lt;em&gt;localtime&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;. The default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;em&gt;usegmt&lt;/em&gt;は、 &lt;code&gt;True&lt;/code&gt; の場合、タイムゾーンを含む日付文字列を、数値 &lt;code&gt;-0000&lt;/code&gt; ではなくASCII文字列 &lt;code&gt;GMT&lt;/code&gt; として出力するフラグです。これは、一部のプロトコル（HTTPなど）に必要です。これは、&lt;em&gt;localtime&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合にのみ適用されます。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3f1580e50d2eddf54a3ae07be51a03a3b611fbc6" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; containing metadata about the specified path. Supported dictionary keys are:</source>
          <target state="translated">指定されたパスに関するメタデータを含む&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;を返すオプションの抽象メソッド。サポートされている辞書キーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="95081d9d4e8221143e59084ea58753f21593f36b" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns the modification time for the specified path.</source>
          <target state="translated">指定したパスの変更時間を返すオプションの抽象メソッドです。</target>
        </trans-unit>
        <trans-unit id="89231b5583c81ea0c69000746832d731cd8bae53" translate="yes" xml:space="preserve">
          <source>Optional abstract method which writes the specified bytes to a file path. Any intermediate directories which do not exist are to be created automatically.</source>
          <target state="translated">指定したバイト数をファイルパスに書き込むオプションの抽象メソッド。存在しない中間ディレクトリは自動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="44f898292a2dcbd773017d0c19c497a57f45394d" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;compileflags&lt;/em&gt; gives the set of flags that should be used by the Python compiler when running the examples. By default, or if &lt;code&gt;None&lt;/code&gt;, flags are deduced corresponding to the set of future features found in &lt;em&gt;globs&lt;/em&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;compileflags&lt;/em&gt;は、例を実行するときにPythonコンパイラーが使用する必要があるフラグのセットを提供します。デフォルトで、または &lt;code&gt;None&lt;/code&gt; の場合、フラグは&lt;em&gt;globsで&lt;/em&gt;見つかった将来の機能のセットに対応して推定され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a1d7c5227339a3dd1d8d5e5070885d664aae3a21" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;cutoff&lt;/em&gt; (default &lt;code&gt;0.6&lt;/code&gt;) is a float in the range [0, 1]. Possibilities that don&amp;rsquo;t score at least that similar to &lt;em&gt;word&lt;/em&gt; are ignored.</source>
          <target state="translated">オプションの引数&lt;em&gt;cutoff&lt;/em&gt;（デフォルト &lt;code&gt;0.6&lt;/code&gt; ）は、[0、1]の範囲の浮動小数点数です。少なくとも&lt;em&gt;単語&lt;/em&gt;と同様のスコアを獲得できない可能性は無視されます。</target>
        </trans-unit>
        <trans-unit id="a241b6f1ed98aec382909620ac3173fbadb0aac1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;encoding&lt;/em&gt; specifies an encoding that should be used to convert the file to unicode.</source>
          <target state="translated">オプションの引数&lt;em&gt;encoding&lt;/em&gt;は、ファイルをUnicodeに変換するために使用するエンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="32822bcfb01fea87cd439dcc50837e241cd10492" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;exclude_empty&lt;/em&gt; defaults to false. If true, objects for which no doctests are found are excluded from consideration. The default is a backward compatibility hack, so that code still using &lt;code&gt;doctest.master.summarize()&lt;/code&gt; in conjunction with &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; continues to get output for objects with no tests. The &lt;em&gt;exclude_empty&lt;/em&gt; argument to the newer &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; constructor defaults to true.</source>
          <target state="translated">オプションの引数&lt;em&gt;exclude_emptyの&lt;/em&gt;デフォルトはfalseです。 trueの場合、doctestが見つからないオブジェクトは考慮から除外されます。デフォルトは後方互換性のハックであるため、 &lt;code&gt;doctest.master.summarize()&lt;/code&gt; とともに&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;引き続き使用するコードは、テストのないオブジェクトの出力を引き続き取得します。新しい&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt;コンストラクタの&lt;em&gt;exclude_empty&lt;/em&gt;引数は、デフォルトでtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="c56059e44a1695148c4922ca4f4a049c77eff06a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; gives a dict merged into the globals used to execute examples. This works like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;: if &lt;em&gt;globs&lt;/em&gt; and &lt;em&gt;extraglobs&lt;/em&gt; have a common key, the associated value in &lt;em&gt;extraglobs&lt;/em&gt; appears in the combined dict. By default, or if &lt;code&gt;None&lt;/code&gt;, no extra globals are used. This is an advanced feature that allows parameterization of doctests. For example, a doctest can be written for a base class, using a generic name for the class, then reused to test any number of subclasses by passing an &lt;em&gt;extraglobs&lt;/em&gt; dict mapping the generic name to the subclass to be tested.</source>
          <target state="translated">オプションの引数&lt;em&gt;extraglobs&lt;/em&gt;は、例の実行に使用されるグローバルにマージされたdictを提供します。以下のようなこの作品&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; は&lt;/a&gt;次の場合&lt;em&gt;グロブ&lt;/em&gt;と&lt;em&gt;extraglobsには、&lt;/em&gt;共通鍵を持って、内に関連付けられた値&lt;em&gt;extraglobsには、&lt;/em&gt;組み合わせのdictに表示されます。デフォルト、または &lt;code&gt;None&lt;/code&gt; の場合、追加のグローバルは使用されません。これは、doctestのパラメーター化を可能にする高度な機能です。たとえば、クラスの総称名を使用して基本クラス用のdoctestを作成し、再利用して、テストするサブクラスに総称名をマッピングする&lt;em&gt;extraglobs&lt;/em&gt; dict を渡すことにより、任意の数のサブクラスをテストできます。</target>
        </trans-unit>
        <trans-unit id="7fba34650a7fe8672d07c230f7d0e87f1c888f71" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; specifies an extra set of global variables, which is merged into &lt;em&gt;globs&lt;/em&gt;. By default, no extra globals are used.</source>
          <target state="translated">オプション引数&lt;em&gt;extraglobsに&lt;/em&gt;にマージされたグローバル変数の余分なセットを指定&lt;em&gt;グロブを&lt;/em&gt;。デフォルトでは、追加のグローバルは使用されません。</target>
        </trans-unit>
        <trans-unit id="47e27778c61b07e6d1aab3d14114ebc81c4fa2f2" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dict to be used as the globals when executing examples. A new shallow copy of this dict is created for the doctest, so its examples start with a clean slate. By default, or if &lt;code&gt;None&lt;/code&gt;, a new empty dict is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、例を実行するときにグローバルとして使用される&lt;em&gt;辞書&lt;/em&gt;を与えます。このdictの新しい浅いコピーがdoctest用に作成されるため、その例は白紙の状態から始まります。デフォルトで、または &lt;code&gt;None&lt;/code&gt; の場合、新しい空の辞書が使用されます。</target>
        </trans-unit>
        <trans-unit id="e45842c5895e5ae4432fbb87c16f7cb0eeaec604" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dictionary to use as both local and global execution context. If not specified, or &lt;code&gt;None&lt;/code&gt;, an empty dictionary is used. If specified, a shallow copy of the dictionary is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、ローカル実行コンテキストとグローバル実行コンテキストの両方として使用する辞書を提供します。指定しない場合、または &lt;code&gt;None&lt;/code&gt; の場合、空の辞書が使用されます。指定した場合、辞書の浅いコピーが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac2368691c9de6fd84091afdc4f7a61c1910faf1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; is a dictionary containing the initial global variables for the tests. A new copy of this dictionary is created for each test. By default, &lt;em&gt;globs&lt;/em&gt; is a new empty dictionary.</source>
          <target state="translated">オプションの引数&lt;em&gt;globs&lt;/em&gt;は、テストの初期グローバル変数を含む辞書です。このディクショナリの新しいコピーがテストごとに作成されます。デフォルトでは、&lt;em&gt;globs&lt;/em&gt;は新しい空の辞書です。</target>
        </trans-unit>
        <trans-unit id="fb750e9897e2507830eb1c28fae23ef3fcb29129" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;interval&lt;/em&gt; represents the class interval, and defaults to 1. Changing the class interval naturally will change the interpolation:</source>
          <target state="translated">オプションの引数&lt;em&gt;interval&lt;/em&gt;はクラス&lt;em&gt;間隔を&lt;/em&gt;表し、デフォルトは1です。クラス間隔を変更すると、当然補間が変更されます。</target>
        </trans-unit>
        <trans-unit id="3aac0b0b4936e97b6b254322e753031731854457" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;isjunk&lt;/em&gt; must be &lt;code&gt;None&lt;/code&gt; (the default) or a one-argument function that takes a sequence element and returns true if and only if the element is &amp;ldquo;junk&amp;rdquo; and should be ignored. Passing &lt;code&gt;None&lt;/code&gt; for &lt;em&gt;isjunk&lt;/em&gt; is equivalent to passing &lt;code&gt;lambda x: False&lt;/code&gt;; in other words, no elements are ignored. For example, pass:</source>
          <target state="translated">オプションの引数&lt;em&gt;isjunk&lt;/em&gt;は、 &lt;code&gt;None&lt;/code&gt; （デフォルト）またはシーケンス要素を取り、要素が「ジャンク」であり、無視する必要がある場合にのみtrueを返す1つの引数の関数でなければなりません。渡すん &lt;code&gt;None&lt;/code&gt; のため&lt;em&gt;isjunkは&lt;/em&gt;渡すことと同じである &lt;code&gt;lambda x: False&lt;/code&gt; ; つまり、無視される要素はありません。たとえば、次のように渡します。</target>
        </trans-unit>
        <trans-unit id="74aea2ea98253e841261cf8043788a6866f1d3cf" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module&lt;/em&gt; provides the module to be tested. It can be a module object or a (possibly dotted) module name. If not specified, the module calling this function is used.</source>
          <target state="translated">オプションの引数&lt;em&gt;module&lt;/em&gt;は、テストされる&lt;em&gt;モジュールを&lt;/em&gt;提供します。これは、モジュールオブジェクトまたは（ドットで区切られた）モジュール名にすることができます。指定しない場合、この関数を呼び出すモジュールが使用されます。</target>
        </trans-unit>
        <trans-unit id="88fe4782e94348e9fdc401064c2ad56c8058b300" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filename should be interpreted:</source>
          <target state="translated">オプションの引数&lt;em&gt;module_relative&lt;/em&gt;は、ファイル名の解釈方法を指定します。</target>
        </trans-unit>
        <trans-unit id="22ad18924a8191c36d6c5c768f2a1805167cb09a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filenames in &lt;em&gt;paths&lt;/em&gt; should be interpreted:</source>
          <target state="translated">オプションの引数&lt;em&gt;module_relative&lt;/em&gt;は、&lt;em&gt;パス&lt;/em&gt;内のファイル名をどのように解釈するかを指定します。</target>
        </trans-unit>
        <trans-unit id="c683e99d27fef7549d8e40a7457b3d344329fce8" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;n&lt;/em&gt; (default &lt;code&gt;3&lt;/code&gt;) is the maximum number of close matches to return; &lt;em&gt;n&lt;/em&gt; must be greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">オプションの引数&lt;em&gt;n&lt;/em&gt;（デフォルトは &lt;code&gt;3&lt;/code&gt; ）は、返される近似一致の最大数です。&lt;em&gt;n&lt;/em&gt;は &lt;code&gt;0&lt;/code&gt; より大きくなければなりません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
