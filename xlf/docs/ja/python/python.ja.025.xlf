<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="27e7cca9674c69cbae553d2787cd0068cccf6b1d" translate="yes" xml:space="preserve">
          <source>This class is rarely used as emitting a warning about a possible upcoming deprecation is unusual, and &lt;a href=&quot;#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is preferred for already active deprecations.</source>
          <target state="translated">廃止予定の可能性について警告を発することは珍しいため、このクラスが使用されることはめったになく、すでにアクティブになっている&lt;a href=&quot;#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;はDeprecationWarningが推奨されます。</target>
        </trans-unit>
        <trans-unit id="d95705b4a873383b5806c6228d0f0b76c0192a86" translate="yes" xml:space="preserve">
          <source>This class is responsible for deciding whether each cookie should be accepted from / returned to the server.</source>
          <target state="translated">このクラスは、各クッキーがサーバから受け入れられるべきかどうか/サーバに返されるべきかどうかを決定する責任があります。</target>
        </trans-unit>
        <trans-unit id="3fa43e85129f543fb2802d9d69d28e5ae356d069" translate="yes" xml:space="preserve">
          <source>This class is the low-level building block of the module. It uses &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for efficient, event-based parsing of XML. It can be fed XML data incrementally with the &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; method, and parsing events are translated to a push API - by invoking callbacks on the &lt;em&gt;target&lt;/em&gt; object. If &lt;em&gt;target&lt;/em&gt; is omitted, the standard &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; is used. If &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt; is given, the value overrides the encoding specified in the XML file.</source>
          <target state="translated">このクラスは、モジュールの低レベルのビルディングブロックです。XMLの効率的なイベントベースの解析に&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;を使用します。&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt;メソッドを使用してXMLデータを段階的にフィードでき、&lt;em&gt;ターゲット&lt;/em&gt;オブジェクトでコールバックを呼び出すことにより、解析イベントがプッシュAPIに変換されます。場合は&lt;em&gt;、ターゲットが&lt;/em&gt;省略され、標準&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; が&lt;/a&gt;使用されています。場合&lt;em&gt;をコード&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;1が&lt;/a&gt;与えられ、値は、XMLファイルで指定されたエンコーディングをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a8d4e4a2b443c0328627e07d8942450df6f9acd5" translate="yes" xml:space="preserve">
          <source>This class is used to compile information about which tests have succeeded and which have failed.</source>
          <target state="translated">このクラスは、どのテストが成功し、どのテストが失敗したかの情報をコンパイルするために使用されます。</target>
        </trans-unit>
        <trans-unit id="19c6d25e7d0520fa3fa0d6f7f3496202c2b9609d" translate="yes" xml:space="preserve">
          <source>This class is used to declare a new Context Variable, e.g.:</source>
          <target state="translated">このクラスは、新しいコンテキスト変数を宣言するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ea543c836937291f06020a0688e606be1c234c21" translate="yes" xml:space="preserve">
          <source>This class is used to handle the HTTP requests that arrive at the server. By itself, it cannot respond to any actual HTTP requests; it must be subclassed to handle each request method (e.g. GET or POST). &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; provides a number of class and instance variables, and methods for use by subclasses.</source>
          <target state="translated">このクラスは、サーバーに到着するHTTP要求を処理するために使用されます。それ自体では、実際のHTTP要求に応答できません。各リクエストメソッド（GETまたはPOSTなど）を処理するには、サブクラス化する必要があります。&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;は、いくつかのクラスとインスタンス変数、およびサブクラスで使用するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="6403a1c9fef53db5449f8e3ec933899d44b75e13" translate="yes" xml:space="preserve">
          <source>This class is used to manipulate the style database.</source>
          <target state="translated">このクラスは、スタイルデータベースを操作するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ae41f6c700530ae3123c6899bdeb790bf978c70d" translate="yes" xml:space="preserve">
          <source>This class is used to serve either files or output of CGI scripts from the current directory and below. Note that mapping HTTP hierarchic structure to local directory structure is exactly as in &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスは、現在のディレクトリ以下のファイルまたはCGIスクリプトの出力を提供するために使用されます。HTTP階層構造からローカルディレクトリ構造へのマッピングは、&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="d73a28b6898088641cae4d2fb4ef19cb14030dc9" translate="yes" xml:space="preserve">
          <source>This class may be initialized from bytes data (which may include NULs). The primary access to the content of a &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; object is provided by an attribute:</source>
          <target state="translated">このクラスは、バイトデータ（NULを含む場合があります）から初期化できます。&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;オブジェクトのコンテンツへの主なアクセスは、属性によって提供されます。</target>
        </trans-unit>
        <trans-unit id="e153045d5ef230e03be4d8fd269f06139bac488b" translate="yes" xml:space="preserve">
          <source>This class may be initialized with seconds since the epoch, a time tuple, an ISO 8601 time/date string, or a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; instance. It has the following methods, supported mainly for internal use by the marshalling/unmarshalling code:</source>
          <target state="translated">このクラスは、エポック、時間タプル、ISO 8601時間/日付文字列、または&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;インスタンスからの秒数で初期化できます。次のメソッドがあり、主にマーシャリング/アンマーシャリングコードによる内部使用のためにサポートされています。</target>
        </trans-unit>
        <trans-unit id="e518e965c65cd6eb618dfd9b0ac0288dcc5ef8d9" translate="yes" xml:space="preserve">
          <source>This class may include information about the public identifier, system identifier, byte stream (possibly with character encoding information) and/or the character stream of an entity.</source>
          <target state="translated">このクラスは、公開識別子、システム識別子、バイトストリーム(場合によっては文字符号化情報を含む)、および/またはエンティティの文字ストリームに関する情報を含んでもよい。</target>
        </trans-unit>
        <trans-unit id="274d480a865d7adb6c54dc75d212c4d48857918f" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;dec&lt;/em&gt;, which must be a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このクラスメソッドは、&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;インスタンスである&lt;em&gt;dec&lt;/em&gt;の正確な値を表す&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;を構築します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fd368dae9da5194b728f020cb469d8249732946" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;flt&lt;/em&gt;, which must be a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Beware that &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; is not the same value as &lt;code&gt;Fraction(3, 10)&lt;/code&gt;.</source>
          <target state="translated">このクラスメソッドは、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;である必要がある&lt;em&gt;flt&lt;/em&gt;の正確な値を表す&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;を構築します。ことを注意 &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; と同じ値ではない &lt;code&gt;Fraction(3, 10)&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c95eb91a808c54e72687a20b7b718fbb74eea5b6" translate="yes" xml:space="preserve">
          <source>This class method is not implemented for &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このクラスメソッドは&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;オブジェクトには実装されていません。</target>
        </trans-unit>
        <trans-unit id="748288d24682412f0009c250de2e85bbeb99569b" translate="yes" xml:space="preserve">
          <source>This class provides &lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt;&lt;code&gt;run_script()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt;&lt;code&gt;report()&lt;/code&gt;&lt;/a&gt; methods to determine the set of modules imported by a script. &lt;em&gt;path&lt;/em&gt; can be a list of directories to search for modules; if not specified, &lt;code&gt;sys.path&lt;/code&gt; is used. &lt;em&gt;debug&lt;/em&gt; sets the debugging level; higher values make the class print debugging messages about what it&amp;rsquo;s doing. &lt;em&gt;excludes&lt;/em&gt; is a list of module names to exclude from the analysis. &lt;em&gt;replace_paths&lt;/em&gt; is a list of &lt;code&gt;(oldpath, newpath)&lt;/code&gt; tuples that will be replaced in module paths.</source>
          <target state="translated">このクラスは、スクリプトによってインポートされたモジュールのセットを判別するための&lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt; &lt;code&gt;run_script()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt; &lt;code&gt;report()&lt;/code&gt; &lt;/a&gt;メソッドを提供します。&lt;em&gt;path&lt;/em&gt;は、モジュールを検索するディレクトリのリストにすることができます。指定しない場合、 &lt;code&gt;sys.path&lt;/code&gt; が使用されます。&lt;em&gt;debug&lt;/em&gt;はデバッグレベルを設定します。値を大きくすると、クラスは何をしているのかについてのデバッグメッセージを出力します。&lt;em&gt;excludes&lt;/em&gt;は、分析から除外するモジュール名のリストです。&lt;em&gt;replace_paths&lt;/em&gt;は、モジュールパスで置き換えられる &lt;code&gt;(oldpath, newpath)&lt;/code&gt; タプルのリストです。</target>
        </trans-unit>
        <trans-unit id="d834a754ee71425bdd757a24acd21616bac9cee6" translate="yes" xml:space="preserve">
          <source>This class provides a simple synchronization primitive for use by a fixed number of threads that need to wait for each other. Each of the threads tries to pass the barrier by calling the &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method and will block until all of the threads have made their &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; calls. At this point, the threads are released simultaneously.</source>
          <target state="translated">このクラスは、相互に待機する必要がある固定数のスレッドが使用する単純な同期プリミティブを提供します。各スレッドは、&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してバリアを通過しようとし、すべてのスレッドが&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;呼び出しを行うまでブロックします。この時点で、スレッドは同時に解放されます。</target>
        </trans-unit>
        <trans-unit id="08dad0580cbeaccad622fabb4161de4b7fe561bf" translate="yes" xml:space="preserve">
          <source>This class provides an API similar to &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and also accepts coroutines as test functions.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;と同様のAPIを提供し、コルーチンをテスト関数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="c276e1c0e7d656e7cea1025636063d50ff0ad285" translate="yes" xml:space="preserve">
          <source>This class provides empty abstract implementations for many methods that derived classes can override selectively; the default implementations represent a file that cannot be read, written or seeked.</source>
          <target state="translated">このクラスは、派生クラスが選択的にオーバーライドできる多くのメソッドのための空の抽象実装を提供します。</target>
        </trans-unit>
        <trans-unit id="d70311a21c8bcd74dcf12663d62377b18ed78824" translate="yes" xml:space="preserve">
          <source>This class provides information about the requirements imposed on email for a specific character set. It also provides convenience routines for converting between character sets, given the availability of the applicable codecs. Given a character set, it will do its best to provide information on how to use that character set in an email message in an RFC-compliant way.</source>
          <target state="translated">このクラスは、特定の文字セットに対して電子メールに課せられる要件に関する情報を提供します。また、適用可能なコーデックがある場合に、文字セット間で変換するための便利なルーチンも提供します。文字セットが与えられると、電子メールメッセージでその文字セットをRFCに準拠した方法で使用する方法についての情報を提供するために最善を尽くします。</target>
        </trans-unit>
        <trans-unit id="ea7cddb548da1e6410ebeae8791fca85fc47a9ba" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and returning &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instances and for creating a list-like object (&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt;) backed by shared memory.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;インスタンスを作成して返すためのメソッド、および共有メモリに&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;リストのようなオブジェクト（ShareableList）を作成するためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="193f5372ace98009161fcd09d57d781b73d181ef" translate="yes" xml:space="preserve">
          <source>This class provides methods to read, parse and answer questions about the &lt;code&gt;robots.txt&lt;/code&gt; file at &lt;em&gt;url&lt;/em&gt;.</source>
          <target state="translated">このクラスは、&lt;em&gt;urlに&lt;/em&gt;ある &lt;code&gt;robots.txt&lt;/code&gt; ファイルに関する質問を読み取り、解析し、回答するためのメソッドを提供します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6028a52d014cdefa926e7af0fc1f466c66ee3def" translate="yes" xml:space="preserve">
          <source>This class represents Netscape, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies. It is not expected that users of &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; construct their own &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instances. Instead, if necessary, call &lt;code&gt;make_cookies()&lt;/code&gt; on a &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このクラスは、Netscape、&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; Cookieを表します。&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; の&lt;/a&gt;ユーザーが独自の&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;インスタンスを作成することは想定されていません。代わりに、必要に応じて、&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;make_cookies()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c3fd2d200eb5006dc61a4b31bac6c557561c951b" translate="yes" xml:space="preserve">
          <source>This class represents a MIME-types database. By default, it provides access to the same database as the rest of this module. The initial database is a copy of that provided by the module, and may be extended by loading additional &lt;code&gt;mime.types&lt;/code&gt;-style files into the database using the &lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; methods. The mapping dictionaries may also be cleared before loading additional data if the default data is not desired.</source>
          <target state="translated">このクラスは、MIMEタイプのデータベースを表します。デフォルトでは、このモジュールの他の部分と同じデータベースへのアクセスを提供します。初期データベースは、モジュールによって提供されるデータベースのコピーであり、&lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、追加の &lt;code&gt;mime.types&lt;/code&gt; スタイルのファイルをデータベースにロードすることにより拡張できます。デフォルトのデータが必要ない場合は、追加データをロードする前にマッピング辞書をクリアすることもできます。</target>
        </trans-unit>
        <trans-unit id="a16f2fa4e9ca1f4b04f678175a55e8942c49241a" translate="yes" xml:space="preserve">
          <source>This class represents a subpart of a MIME message. It is identical to &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, except that no &lt;em&gt;MIME-Version&lt;/em&gt; headers are added when &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; is called, since sub-parts do not need their own &lt;em&gt;MIME-Version&lt;/em&gt; headers.</source>
          <target state="translated">このクラスは、MIMEメッセージのサブパートを表します。それは同じです&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt;一切ことを除いて、&lt;em&gt;MIME-バージョンの&lt;/em&gt;時にヘッダが追加されていない&lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; が&lt;/a&gt;呼び出されたサブパーツは、自分の必要がないので、&lt;em&gt;MIME-バージョンの&lt;/em&gt;ヘッダを。</target>
        </trans-unit>
        <trans-unit id="22f8e65bf7b5a8eada37fbd323ba83523d329661" translate="yes" xml:space="preserve">
          <source>This class represents an action that should be run only after a certain amount of time has passed &amp;mdash; a timer. &lt;a href=&quot;#threading.Timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; and as such also functions as an example of creating custom threads.</source>
          <target state="translated">このクラスは、一定の時間が経過した後にのみ実行されるアクション（タイマー）を表します。&lt;a href=&quot;#threading.Timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; の&lt;/a&gt;サブクラスであるため、カスタムスレッドを作成する例としても機能します。</target>
        </trans-unit>
        <trans-unit id="932c82e2e83abbd41e3929520e8f112fd5c73fbd" translate="yes" xml:space="preserve">
          <source>This class represents an aggregation of individual test cases and test suites. The class presents the interface needed by the test runner to allow it to be run as any other test case. Running a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instance is the same as iterating over the suite, running each test individually.</source>
          <target state="translated">このクラスは、個々のテストケースとテストスイートの集約を表します。このクラスは、テストランナーが他のテストケースと同様に実行できるようにするために必要なインターフェイスを提供します。&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;インスタンスの実行は、各テストを個別に実行して、スイートを反復するのと同じです。</target>
        </trans-unit>
        <trans-unit id="29e097cd340803b24a612fe148a5a39528edd250" translate="yes" xml:space="preserve">
          <source>This class represents tunable scheduling parameters used in &lt;a href=&quot;#os.sched_setparam&quot;&gt;&lt;code&gt;sched_setparam()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.sched_setscheduler&quot;&gt;&lt;code&gt;sched_setscheduler()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.sched_getparam&quot;&gt;&lt;code&gt;sched_getparam()&lt;/code&gt;&lt;/a&gt;. It is immutable.</source>
          <target state="translated">このクラスは、&lt;a href=&quot;#os.sched_setparam&quot;&gt; &lt;code&gt;sched_setparam()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.sched_setscheduler&quot;&gt; &lt;code&gt;sched_setscheduler()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.sched_getparam&quot;&gt; &lt;code&gt;sched_getparam()&lt;/code&gt; で&lt;/a&gt;使用される調整可能なスケジューリングパラメータを表します。それは不変です。</target>
        </trans-unit>
        <trans-unit id="73e7a16f5e1d0b8f46a771fc3488a73fef21a8e9" translate="yes" xml:space="preserve">
          <source>This class serves files from the current directory and below, directly mapping the directory structure to HTTP requests.</source>
          <target state="translated">このクラスは、カレントディレクトリ以下のファイルを提供し、ディレクトリ構造を HTTP リクエストに直接マッピングします。</target>
        </trans-unit>
        <trans-unit id="8f4d59250a2949ebcdb2c5415b61ebd0d2b8d4b7" translate="yes" xml:space="preserve">
          <source>This class takes care of the details of the trace facility; a derived class should implement user interaction. The standard debugger class (&lt;a href=&quot;pdb#pdb.Pdb&quot;&gt;&lt;code&gt;pdb.Pdb&lt;/code&gt;&lt;/a&gt;) is an example.</source>
          <target state="translated">このクラスは、トレース機能の詳細を処理します。派生クラスはユーザー操作を実装する必要があります。標準デバッガクラス（&lt;a href=&quot;pdb#pdb.Pdb&quot;&gt; &lt;code&gt;pdb.Pdb&lt;/code&gt; &lt;/a&gt;）は一例です。</target>
        </trans-unit>
        <trans-unit id="f37ba959190077672d1f15b3db66d2d7d1c6ff73" translate="yes" xml:space="preserve">
          <source>This class&amp;rsquo;s functionality requires a functioning shared semaphore implementation on the host operating system. Without one, the functionality in this class will be disabled, and attempts to instantiate a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; will result in an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt; for additional information. The same holds true for any of the specialized queue types listed below.</source>
          <target state="translated">このクラスの機能には、ホストオペレーティングシステム上で機能する共有セマフォの実装が必要です。これがない場合、このクラスの機能は無効になり、&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;をインスタンス化しようとすると、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; が発生し&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt;を参照してください。同じことが、以下にリストされているすべての特殊なキュータイプにも当てはまります。</target>
        </trans-unit>
        <trans-unit id="a41d8654ea90612b336c64ac521c0b59963c7ad7" translate="yes" xml:space="preserve">
          <source>This client which interacts with the demo XMLRPC server can be invoked as:</source>
          <target state="translated">デモ XMLRPC サーバと対話するこのクライアントは、以下のように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d83a870c39ddf30740d2e358c4cdbc65c6a91d89" translate="yes" xml:space="preserve">
          <source>This closes the database connection. Note that this does not automatically call &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;. If you just close your database connection without calling &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; first, your changes will be lost!</source>
          <target state="translated">これにより、データベース接続が閉じます。これが&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; を&lt;/a&gt;自動的に呼び出すわけではないことに注意してください。最初に&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;を呼び出さずにデータベース接続を閉じると、変更は失われます。</target>
        </trans-unit>
        <trans-unit id="b748ec83f84e7fc5c00bf2adb54dcda5003a9203" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">このコードは、Pythonが&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;インタラクティブモード&lt;/a&gt;で実行されると、実際には自動的に実行されます（&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f5c07d22b235c3ab30af3ac6e65afbc6f9fe2d6d" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">このコードは、Pythonが&lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;インタラクティブモードで&lt;/a&gt;実行されるときに実際に自動的に実行されます（&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="translated">このコードはこれに相当します。</target>
        </trans-unit>
        <trans-unit id="20b1f6a9a16308d3cf1b57b7bfba034f0203ec1e" translate="yes" xml:space="preserve">
          <source>This code is exactly equivalent to the first example. Be sure to give the additional functions the same name as the original property (&lt;code&gt;x&lt;/code&gt; in this case.)</source>
          <target state="translated">このコードは、最初の例とまったく同じです。追加の関数には必ず元のプロパティと同じ名前を付けてください（この場合は &lt;code&gt;x&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7a72ea94a4bab4b14c20d25cdf441f6b5ef6aabf" translate="yes" xml:space="preserve">
          <source>This code pattern allows the testing suite to be run by &lt;code&gt;test.regrtest&lt;/code&gt;, on its own as a script that supports the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; CLI, or via the &lt;code&gt;python -m unittest&lt;/code&gt; CLI.</source>
          <target state="translated">このコードパターンにより、 &lt;code&gt;test.regrtest&lt;/code&gt; によって、&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; CLI をサポートするスクリプトとして、または &lt;code&gt;python -m unittest&lt;/code&gt; CLIを介して実行できます。</target>
        </trans-unit>
        <trans-unit id="754e9cb8c3e6e8e331a6ffc92da78e28bd75069a" translate="yes" xml:space="preserve">
          <source>This code was contributed by Lance Ellinghouse, and modified by Jack Jansen.</source>
          <target state="translated">このコードは Lance Ellinghouse さんが寄稿し、Jack Jansen さんが修正したものです。</target>
        </trans-unit>
        <trans-unit id="7cc17a1a45954846e0e7ca436ab70cd34d59503c" translate="yes" xml:space="preserve">
          <source>This command can return very large results, especially if &lt;em&gt;group_pattern&lt;/em&gt; is not specified. It is best to cache the results offline unless you really need to refresh them.</source>
          <target state="translated">このコマンドは、特に&lt;em&gt;group_pattern&lt;/em&gt;が指定されていない場合、非常に大きな結果を返す可能&lt;em&gt;性&lt;/em&gt;があります。結果を本当に更新する必要がない限り、結果をオフラインでキャッシュすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0eb035f79d945c28dca579096d5869dcd935eb24" translate="yes" xml:space="preserve">
          <source>This command is frequently disabled by NNTP server administrators.</source>
          <target state="translated">このコマンドは、NNTP サーバー管理者によって無効にされることが多いです。</target>
        </trans-unit>
        <trans-unit id="5dbea069ae4115ecbc17706143c788302a103ca5" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">この一般的な制限は、一般に、コンテキストマネージャーが使用される&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントのヘッダーに直接コンテキストマネージャーを作成することをお勧めします（上記のすべての使用例に示されています）。</target>
        </trans-unit>
        <trans-unit id="7714c77ded18400f3429fbbd721ee6fd52039336" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">この一般的な制限は、コンテキストマネージャーを使用する&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントのヘッダーに直接作成することをお勧めします（上記のすべての使用例に示されているように）。</target>
        </trans-unit>
        <trans-unit id="61c2e658f60d1390cfe7ca8803a3ad8e80e90d95" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; is the backward compatibility policy. It replicates the behavior of the email package in Python 3.2. The &lt;a href=&quot;#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; module also defines an instance of this class, &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;, that is used as the default policy. Thus the default behavior of the email package is to maintain compatibility with Python 3.2.</source>
          <target state="translated">この具体的な&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;は、下位互換性ポリシーです。Python 3.2のemailパッケージの動作を複製します。&lt;a href=&quot;#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;モジュールはまた、このクラスのインスタンス定義&lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;デフォルトポリシーとして使用され、。したがって、電子メールパッケージのデフォルトの動作は、Python 3.2との互換性を維持することです。</target>
        </trans-unit>
        <trans-unit id="92d19da16d5a8553c7cb7e0f68f04a827f9e7f61" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; provides behavior that is intended to be fully compliant with the current email RFCs. These include (but are not limited to) &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, and the current MIME RFCs.</source>
          <target state="translated">この具体的な&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;は、現在の電子メールRFCに完全に準拠することを目的とした動作を提供します。これらには、&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC &lt;/strong&gt;&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;5322&lt;/strong&gt;&lt;/a&gt;、&lt;strong&gt;RFC 2047&lt;/strong&gt;、および現在のMIME RFC が含まれます（これらに限定されません）。</target>
        </trans-unit>
        <trans-unit id="80e6fc8925c6c5e7eaca5a6ad0a4fd81fd994085" translate="yes" xml:space="preserve">
          <source>This constant contains a boolean value which indicates if IPv6 is supported on this platform.</source>
          <target state="translated">この定数には、このプラットフォームでIPv6がサポートされているかどうかを示すブール値が含まれています。</target>
        </trans-unit>
        <trans-unit id="3e2858f91cb9186fa1ca376fd637bf7c9e6e52d8" translate="yes" xml:space="preserve">
          <source>This constant is documented in the Linux documentation.</source>
          <target state="translated">この定数はLinuxのドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="fe32614311b23ebbbdfc9132f699e5b6f9f4ab2e" translate="yes" xml:space="preserve">
          <source>This constant is meant to be used with the &lt;em&gt;detect_types&lt;/em&gt; parameter of the &lt;a href=&quot;#sqlite3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">この定数は、&lt;a href=&quot;#sqlite3.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;関数の&lt;em&gt;detect_types&lt;/em&gt;パラメーターで使用するためのものです。</target>
        </trans-unit>
        <trans-unit id="85870d23cfed7a7265f4ba24695196830564152b" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">この定数は、Pythonが&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;オプションで開始されていない場合に当てはまります。&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;ステートメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="7d8b43bae2d97d139786cacb0a8c20081186d79f" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">この定数は、Pythonが&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;オプションで開始されていない場合に当てはまります。&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;ステートメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="8db8774c7221bac7ad7292b78b6b055382d44cb4" translate="yes" xml:space="preserve">
          <source>This constraint can be eschewed if both the &lt;em&gt;provider&lt;/em&gt; (the implementation of the object types to be transferred) and the &lt;em&gt;consumer&lt;/em&gt; (the implementation of the communications system) support the out-of-band transfer facilities provided by pickle protocol 5 and higher.</source>
          <target state="translated">この制約は、&lt;em&gt;プロバイダー&lt;/em&gt;（転送されるオブジェクトタイプの実装）と&lt;em&gt;コンシューマー&lt;/em&gt;（通信システムの実装）の両方が、pickleプロトコル5以降で提供される帯域外転送機能をサポートしている場合は避けられます。</target>
        </trans-unit>
        <trans-unit id="e50b3a4fe127122b1c1be9fb32f8d7c4e9891d68" translate="yes" xml:space="preserve">
          <source>This constructor should always be called with keyword arguments. Arguments are:</source>
          <target state="translated">このコンストラクタは、常にキーワード引数を指定して呼び出す必要があります。引数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="eee83f35dcf09cd6810b2ed6630fade00f668e02" translate="yes" xml:space="preserve">
          <source>This content manager provides only a minimum interface beyond that provided by &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; itself: it deals only with text, raw byte strings, and &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. Nevertheless, it provides significant advantages compared to the base API: &lt;code&gt;get_content&lt;/code&gt; on a text part will return a unicode string without the application needing to manually decode it, &lt;code&gt;set_content&lt;/code&gt; provides a rich set of options for controlling the headers added to a part and controlling the content transfer encoding, and it enables the use of the various &lt;code&gt;add_&lt;/code&gt; methods, thereby simplifying the creation of multipart messages.</source>
          <target state="translated">このコンテンツマネージャーは、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;自体によって提供されるものを超える最小限のインターフェイスのみを提供します。テキスト、生のバイト文字列、および&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのみを扱います。それにもかかわらず、ベースAPIと比較して大きな利点があります。テキストパーツの &lt;code&gt;get_content&lt;/code&gt; は、アプリケーションが手動でデコードする必要なくユニコード文字列を &lt;code&gt;set_content&lt;/code&gt; ます。set_contentは、パーツに追加されたヘッダーを制御し、コンテンツを制御するための豊富なオプションセットを提供します転送エンコーディング。これにより、さまざまな &lt;code&gt;add_&lt;/code&gt; メソッドを使用できるようになり、マルチパートメッセージの作成が簡略化されます。</target>
        </trans-unit>
        <trans-unit id="e3f7dceef060c97974b4e4226c16041d9314af78" translate="yes" xml:space="preserve">
          <source>This context is most useful in multi-threaded environments. Changing one of the fields before threads are started has the effect of setting system-wide defaults. Changing the fields after threads have started is not recommended as it would require thread synchronization to prevent race conditions.</source>
          <target state="translated">このコンテキストはマルチスレッド環境で最も有用です。スレッドが開始される前にフィールドの一つを変更すると、システム全体のデフォルトを設定する効果があります。スレッドが開始された後にフィールドを変更すると、競合状態を防ぐためにスレッドの同期が必要になるので、お勧めできません。</target>
        </trans-unit>
        <trans-unit id="056192954bc171b8b9375158ba2f55065c788c8e" translate="yes" xml:space="preserve">
          <source>This context is used by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor as a prototype for new contexts. Changing a field (such a precision) has the effect of changing the default for new contexts created by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このコンテキストは、&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;コンストラクターによって、新しいコンテキストのプロトタイプとして使用されます。フィールド（精度など）を変更すると、&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;コンストラクターによって作成された新しいコンテキストのデフォルトが変更されます。</target>
        </trans-unit>
        <trans-unit id="adfa9fe3b0226da7aaf4ee9312f722dce55e612a" translate="yes" xml:space="preserve">
          <source>This context manager is &lt;a href=&quot;#reentrant-cms&quot;&gt;reentrant&lt;/a&gt;.</source>
          <target state="translated">このコンテキストマネージャは&lt;a href=&quot;#reentrant-cms&quot;&gt;再入可能&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="587a63de629bfa8dd59dc368a12d35c0c91ebfc9" translate="yes" xml:space="preserve">
          <source>This convenience is provided to encourage &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; users to generate error messages in the standard, parseable format understood by Emacs and other Unix tools.</source>
          <target state="translated">この便利さは、&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;ユーザーがEmacsや他のUnixツールが理解できる標準の解析可能な形式でエラーメッセージを生成するように促すために提供されています。</target>
        </trans-unit>
        <trans-unit id="812edcca58e65f791d72238eb59be8a7fc8c8bb3" translate="yes" xml:space="preserve">
          <source>This copy is done without the additional cost of transferring data from the kernel to user space and then back into the kernel. Additionally, some filesystems could implement extra optimizations. The copy is done as if both files are opened as binary.</source>
          <target state="translated">このコピーは、カーネルからユーザ空間にデータを転送し、その後カーネルに戻るという追加コストなしで行われます。さらに、ファイルシステムによっては、追加の最適化を実装することができます。コピーは両方のファイルがバイナリとして開かれているかのように行われます。</target>
        </trans-unit>
        <trans-unit id="fbdd11eca1826383b7073d5d09e2477fe27a9fdc" translate="yes" xml:space="preserve">
          <source>This coroutine function is primarily intended to be used for executing IO-bound functions/methods that would otherwise block the event loop if they were ran in the main thread. For example:</source>
          <target state="translated">このcoroutine関数は、主に、メインスレッドで実行された場合にイベントループをブロックするようなIO結合関数/メソッドを実行するために使用することを意図しています。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="951c20bdc9ca8ee62daa8ad49c6f7fb15c561414" translate="yes" xml:space="preserve">
          <source>This decorator enables legacy generator-based coroutines to be compatible with async/await code:</source>
          <target state="translated">このデコレータは、レガシーなジェネレータベースのコルーチンをasync/awaitコードと互換性のあるものにします。</target>
        </trans-unit>
        <trans-unit id="9992dac3f3dff13b2f0ac6d879fbe3eae7add96f" translate="yes" xml:space="preserve">
          <source>This decorator is itself not available at runtime. It is mainly intended to mark classes that are defined in type stub files if an implementation returns an instance of a private class:</source>
          <target state="translated">このデコレータ自体は実行時には利用できません。これは主に、実装がプライベートクラスのインスタンスを返す場合に、型スタブファイルで定義されているクラスをマークすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="fc1ff93c67faa61e74eb3e2bda4297a01530896c" translate="yes" xml:space="preserve">
          <source>This decorator requires that the &lt;code&gt;__dict__&lt;/code&gt; attribute on each instance be a mutable mapping. This means it will not work with some types, such as metaclasses (since the &lt;code&gt;__dict__&lt;/code&gt; attributes on type instances are read-only proxies for the class namespace), and those that specify &lt;code&gt;__slots__&lt;/code&gt; without including &lt;code&gt;__dict__&lt;/code&gt; as one of the defined slots (as such classes don&amp;rsquo;t provide a &lt;code&gt;__dict__&lt;/code&gt; attribute at all).</source>
          <target state="translated">このデコレータでは、各インスタンスの &lt;code&gt;__dict__&lt;/code&gt; 属性が変更可能なマッピングである必要があります。これは、メタクラスなどの一部のタイプ（タイプインスタンスの &lt;code&gt;__dict__&lt;/code&gt; 属性はクラス名前空間の読み取り専用プロキシであるため）、および &lt;code&gt;__dict__&lt;/code&gt; を定義済みスロットの1つとして含めずに &lt;code&gt;__slots__&lt;/code&gt; を指定するタイプ（このようなクラスとして）では機能しないことを意味します &lt;code&gt;__dict__&lt;/code&gt; 属性を提供しないでください）。</target>
        </trans-unit>
        <trans-unit id="c300d0d694010854de5f7492ad74271773977803" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">このデコレータは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;コルーチンには使用しないでください。</target>
        </trans-unit>
        <trans-unit id="93cd9b064734dee81aa3a32c5926879d8b2b0c06" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">このデコレータは、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;コルーチンには使用しないでください。</target>
        </trans-unit>
        <trans-unit id="3b7ac610500209606a0a0139f3b647a4e463cfcb" translate="yes" xml:space="preserve">
          <source>This default value for the &lt;em&gt;policy&lt;/em&gt; keyword to &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; policy, via its pre-defined instance &lt;a href=&quot;#email.policy.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のために、このデフォルト値&lt;em&gt;ポリシー&lt;/em&gt;にキーワード&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のは&lt;/a&gt;ある&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; の&lt;/a&gt;その事前定義されたインスタンスを経由して、ポリシー&lt;a href=&quot;#email.policy.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e21702e7206b1540ec13499c73a1d346fc076d6f" translate="yes" xml:space="preserve">
          <source>This defaults to &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; and describes directories to treat as containing CGI scripts.</source>
          <target state="translated">デフォルトは &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; 、CGIスクリプトを含むものとして扱うディレクトリを記述します。</target>
        </trans-unit>
        <trans-unit id="b5df6ab6eb381dc8f1c26576661cf9cf458d811a" translate="yes" xml:space="preserve">
          <source>This demonstrates how similar derived enumerations can be defined; for example a &lt;code&gt;StrEnum&lt;/code&gt; that mixes in &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、同様の派生列挙をどのように定義できるかを示しています。たとえば、&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;を混合する &lt;code&gt;StrEnum&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85da0637f33c740513754e7c543cab4e3c5fd9df" translate="yes" xml:space="preserve">
          <source>This dictionary can be used as argument for a subsequent call to &lt;a href=&quot;#turtle.pen&quot;&gt;&lt;code&gt;pen()&lt;/code&gt;&lt;/a&gt; to restore the former pen-state. Moreover one or more of these attributes can be provided as keyword-arguments. This can be used to set several pen attributes in one statement.</source>
          <target state="translated">このディクショナリは、以前のペンの状態を復元するための後続の&lt;a href=&quot;#turtle.pen&quot;&gt; &lt;code&gt;pen()&lt;/code&gt; の&lt;/a&gt;呼び出しの引数として使用できます。さらに、これらの属性の1つ以上をキーワード引数として指定できます。これは、1つのステートメントで複数のペン属性を設定するために使用できます。</target>
        </trans-unit>
        <trans-unit id="ce89b5732743cb6bcf141dd8012b3ff6141f9e13" translate="yes" xml:space="preserve">
          <source>This dictionary maps the HTTP 1.1 status codes to the W3C names.</source>
          <target state="translated">この辞書は、HTTP 1.1のステータスコードをW3C名にマッピングします。</target>
        </trans-unit>
        <trans-unit id="9ddd1f324c17578c73e1a32273ebd7f0cdc6accd" translate="yes" xml:space="preserve">
          <source>This differs from the behaviour of &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; where SIGINT will be ignored while the equivalent blocking calls are in progress.</source>
          <target state="translated">これは、同等のブロッキング呼び出しの進行中にSIGINTが無視される&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;の動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="3068ba406f985162f6ef582ac392d3ccc0bfca5a" translate="yes" xml:space="preserve">
          <source>This document describes the behavior under the default (for &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;) policy &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;. If you are going to use another policy, you should be using the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">このドキュメントでは、デフォルト（&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;）ポリシー&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; で&lt;/a&gt;の動作について説明します。別のポリシーを使用する場合は、代わりに&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="32a3cafdce538e5b18df61742dfb8d4b171f69c3" translate="yes" xml:space="preserve">
          <source>This document explains how the theme engine works</source>
          <target state="translated">このドキュメントでは、テーマエンジンの仕組みを説明します。</target>
        </trans-unit>
        <trans-unit id="6ea1780a291c39bade61c609ec38121b00edd92b" translate="yes" xml:space="preserve">
          <source>This documentation page contains the following sections:</source>
          <target state="translated">このドキュメントのページには、以下のセクションがあります。</target>
        </trans-unit>
        <trans-unit id="4f3cd91e868bb20379048d1e01a95c878e0816d7" translate="yes" xml:space="preserve">
          <source>This documentation page covers both &lt;a href=&quot;#transports&quot;&gt;Transports&lt;/a&gt; and &lt;a href=&quot;#protocols&quot;&gt;Protocols&lt;/a&gt;.</source>
          <target state="translated">このドキュメントページでは、&lt;a href=&quot;#transports&quot;&gt;トランスポート&lt;/a&gt;と&lt;a href=&quot;#protocols&quot;&gt;プロトコルの&lt;/a&gt;両方について説明します。</target>
        </trans-unit>
        <trans-unit id="92bab0d11dc1fe34db31a7fa119d6a0aad2dfb5b" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings - it is only intended as the inverse operation of &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;. A more full-featured ISO 8601 parser, &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; is available in the third-party package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutil&lt;/a&gt;.</source>
          <target state="translated">これは、任意のISO 8601文字列の解析をサポートしていませ&lt;em&gt;ん。&lt;/em&gt;これは、&lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt; &lt;code&gt;datetime.isoformat()&lt;/code&gt; の&lt;/a&gt;逆演算としてのみ意図されています。フル機能のISO 8601パーサーである &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; は、サードパーティのパッケージ&lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutilで&lt;/a&gt;利用できます。</target>
        </trans-unit>
        <trans-unit id="d39cfcf67975976ed6d0852105f14c7bbd179606" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings. It is only intended as the inverse operation of &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、任意のISO 8601文字列の解析をサポートしていませ&lt;em&gt;ん&lt;/em&gt;。これは、&lt;a href=&quot;#datetime.time.isoformat&quot;&gt; &lt;code&gt;time.isoformat()&lt;/code&gt; の&lt;/a&gt;逆の操作としてのみ意図されています。</target>
        </trans-unit>
        <trans-unit id="a8d96811345bfb9f1ce5d798a0568d8c1532106c" translate="yes" xml:space="preserve">
          <source>This does nothing; it doesn&amp;rsquo;t even set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header.</source>
          <target state="translated">これは何もしません。&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーも設定しません。</target>
        </trans-unit>
        <trans-unit id="0f118286f16ac96c73365a27b4b2e8dc31597b52" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t actually modify the message&amp;rsquo;s payload, but it does set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to either &lt;code&gt;7bit&lt;/code&gt; or &lt;code&gt;8bit&lt;/code&gt; as appropriate, based on the payload data.</source>
          <target state="translated">これは、実際には、メッセージのペイロードを変更しませんが、それは設定しない&lt;em&gt;コンテンツ転送エンコード&lt;/em&gt;のいずれかにヘッダ &lt;code&gt;7bit&lt;/code&gt; または &lt;code&gt;8bit&lt;/code&gt; のペイロードデータに基づいて、適切なの。</target>
        </trans-unit>
        <trans-unit id="a82f68ab04c4d00089910c6eb4764da31cf6c7f8" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t include &lt;code&gt;not&lt;/code&gt;, which is a &lt;a href=&quot;#ast.UnaryOp&quot;&gt;&lt;code&gt;UnaryOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これには、&lt;a href=&quot;#ast.UnaryOp&quot;&gt; &lt;code&gt;UnaryOp&lt;/code&gt; &lt;/a&gt;であるnotは含まれ &lt;code&gt;not&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc9c32bbd592532e00cbc38e674970da7b46499a" translate="yes" xml:space="preserve">
          <source>This elides the response code from the server. If the response code is needed, use &lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt;&lt;code&gt;descriptions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、サーバーからの応答コードが省略されます。応答コードが必要な場合は、&lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt; &lt;code&gt;descriptions()&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="3b98cf0f954a93782cde0031b12229cb211f39e9" translate="yes" xml:space="preserve">
          <source>This encoding is always ASCII-compatible.</source>
          <target state="translated">このエンコーディングは常にASCIIと互換性があります。</target>
        </trans-unit>
        <trans-unit id="b2e9101400ad7ee4e55ed42180277b67f8cf0f57" translate="yes" xml:space="preserve">
          <source>This ensures that your mocks will fail in the same way as your production code if they are used incorrectly:</source>
          <target state="translated">これにより、モックが誤って使用された場合でも、プロダクションコードと同じように失敗することを保証します。</target>
        </trans-unit>
        <trans-unit id="84405dc340963074580e6158c072ba0de9baaf30" translate="yes" xml:space="preserve">
          <source>This error is mapped to the exception &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このエラーは、例外&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; に&lt;/a&gt;マップされます。</target>
        </trans-unit>
        <trans-unit id="782f94ac91ca671c983c4102c829d80211c23fb1" translate="yes" xml:space="preserve">
          <source>This example calls both functions with a &lt;code&gt;NULL&lt;/code&gt; pointer (&lt;code&gt;None&lt;/code&gt; should be used as the &lt;code&gt;NULL&lt;/code&gt; pointer):</source>
          <target state="translated">この例では、 &lt;code&gt;NULL&lt;/code&gt; ポインターを使用して両方の関数を呼び出します（NULLポインターとして &lt;code&gt;None&lt;/code&gt; を使用する必要があり &lt;code&gt;NULL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a09c84b9d7833c97dd614df7daea0247b0acfc92" translate="yes" xml:space="preserve">
          <source>This example compares two strings, considering blanks to be &amp;ldquo;junk&amp;rdquo;:</source>
          <target state="translated">この例では、空白を「ジャンク」と見なして、2つの文字列を比較します。</target>
        </trans-unit>
        <trans-unit id="044525c1b0f02f0079887e5bc92a57b5bc8aee0f" translate="yes" xml:space="preserve">
          <source>This example compares two texts. First we set up the texts, sequences of individual single-line strings ending with newlines (such sequences can also be obtained from the &lt;code&gt;readlines()&lt;/code&gt; method of file-like objects):</source>
          <target state="translated">この例では、2つのテキストを比較します。最初に、テキスト、つまり改行で終わる個々の単一行文字列のシーケンスを設定します（このようなシーケンスは、ファイルのようなオブジェクトの &lt;code&gt;readlines()&lt;/code&gt; メソッドからも取得できます）。</target>
        </trans-unit>
        <trans-unit id="4b2905cb398396cba10263a63f13db7111f72408" translate="yes" xml:space="preserve">
          <source>This example creates a Future object, creates and schedules an asynchronous Task to set result for the Future, and waits until the Future has a result:</source>
          <target state="translated">この例では、Future オブジェクトを作成し、Future の結果を設定する非同期タスクを作成してスケジュールし、Future が結果を持つまで待ちます。</target>
        </trans-unit>
        <trans-unit id="018978f4b59649c07ce86602d1484e00501f5987" translate="yes" xml:space="preserve">
          <source>This example creates a SSL context with the recommended security settings for client sockets, including automatic certificate verification:</source>
          <target state="translated">この例では、自動証明書検証を含むクライアントソケットの推奨セキュリティ設定を持つSSLコンテキストを作成します。</target>
        </trans-unit>
        <trans-unit id="39ba95039e07988bb739e58971213fbb994f0bcc" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to wrap the Windows &lt;code&gt;MessageBoxW&lt;/code&gt; function so that it supports default parameters and named arguments. The C declaration from the windows header file is this:</source>
          <target state="translated">この例は、Windows &lt;code&gt;MessageBoxW&lt;/code&gt; 関数をラップして、デフォルトのパラメーターと名前付き引数をサポートする方法を示しています。WindowsヘッダーファイルのC宣言は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="aa58ef83147938371c0a379ed8dc30747eca3d72" translate="yes" xml:space="preserve">
          <source>This example displays the number of bytes taken by non-directory files in each directory under the starting directory, except that it doesn&amp;rsquo;t look under any CVS subdirectory:</source>
          <target state="translated">この例は、CVSサブディレクトリの下を調べないことを除いて、開始ディレクトリの下の各ディレクトリ内の非ディレクトリファイルによって取得されたバイト数を表示します。</target>
        </trans-unit>
        <trans-unit id="13a5a113117f57607a533f5a8bed89cd81731c96" translate="yes" xml:space="preserve">
          <source>This example gets the python.org main page and displays the first 300 bytes of it.</source>
          <target state="translated">この例では python.org のメインページを取得し、その最初の 300 バイトを表示しています。</target>
        </trans-unit>
        <trans-unit id="f0c973599ef6d6281b47995acbaf5fa790a8c858" translate="yes" xml:space="preserve">
          <source>This example illustrates how to open a URL using your Netscape, Mozilla, or Lynx cookies (assumes Unix/Netscape convention for location of the cookies file):</source>
          <target state="translated">この例では、Netscape、Mozilla、Lynxのクッキーを使ってURLを開く方法を説明しています(クッキーファイルの場所はUnix/Netscapeの規約を前提としています)。</target>
        </trans-unit>
        <trans-unit id="beb0e848071a51f42c8de87c4c5b82271cd652b5" translate="yes" xml:space="preserve">
          <source>This example is limited by the fact that &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; allocates its own memory: you cannot create a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; instance that is backed by another object&amp;rsquo;s memory. However, third-party datatypes such as NumPy arrays do not have this limitation, and allow use of zero-copy pickling (or making as few copies as possible) when transferring between distinct processes or systems.</source>
          <target state="translated">この例は、&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;が独自のメモリを割り当てるという事実によって制限されます。別のオブジェクトのメモリによってサポートされる&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;インスタンスを作成することはできません。ただし、NumPy配列などのサードパーティのデータ型にはこの制限がなく、個別のプロセスまたはシステム間で転送するときに、ゼロコピーピクル（または可能な限り少ない数のコピー）を使用できます。</target>
        </trans-unit>
        <trans-unit id="026ec75fb1b97ca54f747abca8eb5568018e6f79" translate="yes" xml:space="preserve">
          <source>This example is the implementation of the &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; function, described above, with the docstring omitted. It demonstrates many of the other functions provided by this module.</source>
          <target state="translated">この例は、前述の&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;関数の実装で、docstringは省略されています。このモジュールが提供する他の多くの機能を示します。</target>
        </trans-unit>
        <trans-unit id="817efcdabbed81fd5a8d7128157922b1290e74ae" translate="yes" xml:space="preserve">
          <source>This example looks for a word following a hyphen:</source>
          <target state="translated">この例では、ハイフンに続く単語を探します。</target>
        </trans-unit>
        <trans-unit id="bc8fd01e0952c36a02e5bec07eb86980d4050c06" translate="yes" xml:space="preserve">
          <source>This example program is a fairly realistic example of a simple program. In this particular case, we do not take much advantage of the flexibility of the DOM.</source>
          <target state="translated">この例のプログラムは、単純なプログラムのかなり現実的な例です。この特定のケースでは、DOM の柔軟性をあまり活用していません。</target>
        </trans-unit>
        <trans-unit id="602035184a663fa6ac77e2c6161bb89ea08510cc" translate="yes" xml:space="preserve">
          <source>This example prompts the user for addresses needed in the message envelope (&amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses), and the message to be delivered. Note that the headers to be included with the message must be included in the message as entered; this example doesn&amp;rsquo;t do any processing of the &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers. In particular, the &amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses must be included in the message headers explicitly.</source>
          <target state="translated">この例では、メッセージエンベロープで必要なアドレス（「宛先」アドレスと「差出人」アドレス）、および配信するメッセージをユーザーに求めます。メッセージに含めるヘッダーは、入力時にメッセージに含める必要があることに注意してください。この例では、&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;ヘッダーの処理は行いません。特に、「To」アドレスと「From」アドレスは、メッセージヘッダーに明示的に含める必要があります。</target>
        </trans-unit>
        <trans-unit id="d372344db0a88b9a62331f1afecea14cbc5e21cd" translate="yes" xml:space="preserve">
          <source>This example replaces the default &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; with one that uses programmatically-supplied proxy URLs, and adds proxy authorization support with &lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt;&lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例では、デフォルトの&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;をプログラムで提供されたプロキシURLを使用するものに置き換え、&lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt; &lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt; を使用して&lt;/a&gt;プロキシ認証サポートを追加します。</target>
        </trans-unit>
        <trans-unit id="199f5f9a1a221f41ad61ef405ac46477978bb064" translate="yes" xml:space="preserve">
          <source>This example sets the date header to the current time and date using the current timezone offset.</source>
          <target state="translated">この例では、現在のタイムゾーンオフセットを使用して、日付ヘッダーを現在の時刻と日付に設定します。</target>
        </trans-unit>
        <trans-unit id="149d4f5895c99a4046ae6fe26db4a50dcbbe5da1" translate="yes" xml:space="preserve">
          <source>This example shows a simple way of using &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この例は、&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt;を使用する簡単な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2c2e84d68d5adbd7f566f2d6ceb02815d482de30" translate="yes" xml:space="preserve">
          <source>This example shows how a subclass of &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; can be used to store additional information about an object and affect the value that&amp;rsquo;s returned when the referent is accessed:</source>
          <target state="translated">この例は、&lt;a href=&quot;#weakref.ref&quot;&gt; &lt;code&gt;ref&lt;/code&gt; の&lt;/a&gt;サブクラスを使用してオブジェクトに関する追加情報を格納し、リファレントにアクセスしたときに返される値に影響を与える方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4877278717bc43a6502484400cc4fee0faeb0e64" translate="yes" xml:space="preserve">
          <source>This example shows how to get a (hex-encoded) 128-bit authentication code for message &lt;code&gt;b'message data'&lt;/code&gt; with key &lt;code&gt;b'pseudorandom key'&lt;/code&gt;:</source>
          <target state="translated">この例は、キー &lt;code&gt;b'pseudorandom key'&lt;/code&gt; してメッセージ &lt;code&gt;b'message data'&lt;/code&gt; の（16進エンコードされた）128ビット認証コードを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="60cba076ed0f689a795d5c4df38be8c57a334080" translate="yes" xml:space="preserve">
          <source>This example shows how to remove a directory tree on Windows where some of the files have their read-only bit set. It uses the onerror callback to clear the readonly bit and reattempt the remove. Any subsequent failure will propagate.</source>
          <target state="translated">この例では、一部のファイルに読み取り専用ビットが設定されているディレクトリツリーを Windows 上で削除する方法を示しています。この例では、onerror コールバックを使用して読み取り専用ビットをクリアし、削除を再試行しています。その後の失敗はすべて伝搬します。</target>
        </trans-unit>
        <trans-unit id="c874d767b57899eb18aae7c1b3e35304836e0ba1" translate="yes" xml:space="preserve">
          <source>This example shows how to use difflib to create a &lt;code&gt;diff&lt;/code&gt;-like utility. It is also contained in the Python source distribution, as &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt;.</source>
          <target state="translated">この例は、difflibを使用して &lt;code&gt;diff&lt;/code&gt; に似たユーティリティを作成する方法を示しています。また、Pythonソースディストリビューションに &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; として含まれています。</target>
        </trans-unit>
        <trans-unit id="794f21932d1f601d70b331b1eb4caf3dbbb36379" translate="yes" xml:space="preserve">
          <source>This example sorts mail from several mailing lists into different mailboxes, being careful to avoid mail corruption due to concurrent modification by other programs, mail loss due to interruption of the program, or premature termination due to malformed messages in the mailbox:</source>
          <target state="translated">この例では、複数のメーリングリストからのメールを異なるメールボックスに振り分け、他のプログラムによる同時修正によるメールの破損、プログラムの中断によるメールの損失、メールボックス内のメッセージの不正な書き込みによる早期終了に注意しています。</target>
        </trans-unit>
        <trans-unit id="ae1a261bc1a23bc317bfbe070ca5019f36eaaca8" translate="yes" xml:space="preserve">
          <source>This example uses 64-byte internal digests, and returns the 32-byte final digest:</source>
          <target state="translated">この例では64バイトの内部ダイジェストを使用し、32バイトの最終ダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="4f178cedeeecdf46a16a56bca9ff1c21e113376f" translate="yes" xml:space="preserve">
          <source>This example uses the iterator form:</source>
          <target state="translated">この例では、イテレータ形式を使用しています。</target>
        </trans-unit>
        <trans-unit id="756a7f6039de09d51d751e231a05b92875ae2f1b" translate="yes" xml:space="preserve">
          <source>This example will print all file names in the current directory with the extension &lt;code&gt;.txt&lt;/code&gt;:</source>
          <target state="translated">この例では、拡張子 &lt;code&gt;.txt&lt;/code&gt; が付いた現在のディレクトリ内のすべてのファイル名を出力します。</target>
        </trans-unit>
        <trans-unit id="cb5551e6bcc3809b3b5a499fdf51a6ac5f52fa14" translate="yes" xml:space="preserve">
          <source>This exception can be caught to perform custom operations when asyncio Tasks are cancelled. In almost all situations the exception must be re-raised.</source>
          <target state="translated">この例外は、asyncio のタスクがキャンセルされたときにカスタム操作を実行するために捕捉されることがあります。ほとんどすべての状況で、この例外を再度発生させなければなりません。</target>
        </trans-unit>
        <trans-unit id="c2245ad8aaf85394acf3919fb1083c95fc2c5f50" translate="yes" xml:space="preserve">
          <source>This exception collects exceptions that are raised during a multi-file operation. For &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, the exception argument is a list of 3-tuples (&lt;em&gt;srcname&lt;/em&gt;, &lt;em&gt;dstname&lt;/em&gt;, &lt;em&gt;exception&lt;/em&gt;).</source>
          <target state="translated">この例外は、マルチファイル操作中に発生する例外を収集します。ため&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;、例外引数は3タプル（のリストである&lt;em&gt;SRCNAME&lt;/em&gt;、&lt;em&gt;dstname&lt;/em&gt;、&lt;em&gt;例外が&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="04ff319a12f67cfca8f5f539906ec49ee19dae8b" translate="yes" xml:space="preserve">
          <source>This exception is a subclass of &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例外は&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="e7736c85cc53a35d004f8b52b5afbc5eaaff8f8e" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. In user defined base classes, abstract methods should raise this exception when they require derived classes to override the method, or while the class is being developed to indicate that the real implementation still needs to be added.</source>
          <target state="translated">この例外は、&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;から派生しています。ユーザー定義の基本クラスで、抽象メソッドは、メソッドをオーバーライドするために派生クラスが必要な場合、またはクラスが実際の実装を追加する必要があることを示すために開発されているときに、この例外を発生させる必要があります。</target>
        </trans-unit>
        <trans-unit id="c66b9d77cb46fec7211670e8e7cd4edf77c01cb2" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. It is raised when the interpreter detects that the maximum recursion depth (see &lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt;&lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;&lt;/a&gt;) is exceeded.</source>
          <target state="translated">この例外は、&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;から派生しています。これは、インタープリターが最大再帰深度（&lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt; &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt; を&lt;/a&gt;参照）を超えたことを検出したときに発生します。</target>
        </trans-unit>
        <trans-unit id="3e9bf7a89c436eb9519f1ccd1f17934763da1eb1" translate="yes" xml:space="preserve">
          <source>This exception is different from the builtin &lt;a href=&quot;exceptions#TimeoutError&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">この例外は、組み込みの&lt;a href=&quot;exceptions#TimeoutError&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt;例外とは異なります。</target>
        </trans-unit>
        <trans-unit id="5abfaa7cb1b6df31569bd73bec0753febb5ef38a" translate="yes" xml:space="preserve">
          <source>This exception is raised by the &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; function. It inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; so that it is not accidentally caught by code that catches &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;. This allows the exception to properly propagate up and cause the interpreter to exit. When it is not handled, the Python interpreter exits; no stack traceback is printed. The constructor accepts the same optional argument passed to &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;. If the value is an integer, it specifies the system exit status (passed to C&amp;rsquo;s &lt;code&gt;exit()&lt;/code&gt; function); if it is &lt;code&gt;None&lt;/code&gt;, the exit status is zero; if it has another type (such as a string), the object&amp;rsquo;s value is printed and the exit status is one.</source>
          <target state="translated">この例外は、&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;関数によって発生します。&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;をキャッチするコードによって誤ってキャッチされないように、&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;から継承します。これにより、例外が適切に伝播し、インタープリターが終了します。処理されない場合、Pythonインタープリターは終了します。スタックトレースバックは出力されません。コンストラクターは、&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; に&lt;/a&gt;渡される同じオプションの引数を受け入れます。値が整数の場合、システムの終了ステータス（Cの &lt;code&gt;exit()&lt;/code&gt; 関数に渡される）を指定します。それがない場合は &lt;code&gt;None&lt;/code&gt; 、終了ステータスはゼロです。別のタイプ（文字列など）の場合、オブジェクトの値が出力され、終了ステータスは1になります。</target>
        </trans-unit>
        <trans-unit id="5d36d890204d231c3db5ed28f13b407944350b88" translate="yes" xml:space="preserve">
          <source>This exception is raised if source and destination in &lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;copyfile()&lt;/code&gt;&lt;/a&gt; are the same file.</source>
          <target state="translated">この例外は、&lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;copyfile()&lt;/code&gt; の&lt;/a&gt;ソースと宛先が同じファイルである場合に発生します。</target>
        </trans-unit>
        <trans-unit id="8566ba7bb494d8af7e0fe1d383f3ef91ec51f1bd" translate="yes" xml:space="preserve">
          <source>This exception is raised on all errors, such as unknown number of bytes per sample, etc.</source>
          <target state="translated">この例外は、サンプルあたりのバイト数が不明な場合など、すべてのエラーに対して発生します。</target>
        </trans-unit>
        <trans-unit id="b644672ef25e1f525a78a441c53893d63755b91a" translate="yes" xml:space="preserve">
          <source>This exception is raised on certain errors. The argument is a string describing what went wrong.</source>
          <target state="translated">この例外は、特定のエラーが発生した場合に発生します。引数には何が間違っていたのかを記述した文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="2cc85694ad091b3a955d9c3bd409e50ebf522e46" translate="yes" xml:space="preserve">
          <source>This exception is raised to skip a test.</source>
          <target state="translated">この例外はテストをスキップするために発生します。</target>
        </trans-unit>
        <trans-unit id="58cc721a5d45f6183858fe989cca9698e1cc1fbe" translate="yes" xml:space="preserve">
          <source>This exception is raised when a foreign function call cannot convert one of the passed arguments.</source>
          <target state="translated">この例外は、外部関数呼び出しで渡された引数のいずれかを変換できない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="9404360bffa18ed1bd67ec88d6463042c13d79a5" translate="yes" xml:space="preserve">
          <source>This exception is raised when a string parameter contains a character that is not permitted in the context it&amp;rsquo;s being used in by the XML 1.0 recommendation. For example, attempting to create an &lt;code&gt;Element&lt;/code&gt; node with a space in the element type name will cause this error to be raised.</source>
          <target state="translated">この例外は、XML 1.0勧告で使用されているコンテキストで許可されていない文字が文字列パラメーターに含まれている場合に発生します。たとえば、要素タイプ名にスペースを含む &lt;code&gt;Element&lt;/code&gt; ノードを作成しようとすると、このエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="7ff9a579e9d83d01444b2f8d5100e032fc4e7952" translate="yes" xml:space="preserve">
          <source>This exception is raised when a system function returns a system-related error, including I/O failures such as &amp;ldquo;file not found&amp;rdquo; or &amp;ldquo;disk full&amp;rdquo; (not for illegal argument types or other incidental errors).</source>
          <target state="translated">この例外は、システム関数が「ファイルが見つかりません」や「ディスクがいっぱい」などのI / O障害（不正な引数タイプやその他の付随的なエラーではない）などのシステム関連エラーを返したときに発生します。</target>
        </trans-unit>
        <trans-unit id="1bc3c86de29d12b90a882aff98c2eec07bc27573" translate="yes" xml:space="preserve">
          <source>This exception is raised when a weak reference proxy, created by the &lt;a href=&quot;weakref#weakref.proxy&quot;&gt;&lt;code&gt;weakref.proxy()&lt;/code&gt;&lt;/a&gt; function, is used to access an attribute of the referent after it has been garbage collected. For more information on weak references, see the &lt;a href=&quot;weakref#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この例外は、&lt;a href=&quot;weakref#weakref.proxy&quot;&gt; &lt;code&gt;weakref.proxy()&lt;/code&gt; &lt;/a&gt;関数によって作成された弱参照プロキシを使用して、ガベージコレクションが行われた後のリファレントの属性にアクセスした場合に発生します。弱参照の詳細については、&lt;a href=&quot;weakref#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="4fc1681a2f2c890252c17685b7d4e33e329d940d" translate="yes" xml:space="preserve">
          <source>This exception is raised when a writable mailbox has its status changed by the server. This is a sub-class of &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt;&lt;code&gt;IMAP4.error&lt;/code&gt;&lt;/a&gt;. Some other client now has write permission, and the mailbox will need to be re-opened to re-obtain write permission.</source>
          <target state="translated">この例外は、書き込み可能なメールボックスのステータスがサーバーによって変更されたときに発生します。これは&lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt; &lt;code&gt;IMAP4.error&lt;/code&gt; の&lt;/a&gt;サブクラスです。他の一部のクライアントには書き込み権限があり、メールボックスを再度開いて、書き込み権限を再度取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d6ecff71782ef8d9e93a241e475f2b20a701dab" translate="yes" xml:space="preserve">
          <source>This exception is raised when an error occurs during compression or decompression, or while initializing the compressor/decompressor state.</source>
          <target state="translated">この例外は、圧縮中や伸長中、または圧縮機/伸長機の状態を初期化している間にエラーが発生した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="2409514ae954bb0af533c244afcfa71dbd523cc2" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; method is called on an empty queue.</source>
          <target state="translated">この例外は、空のキューで&lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると発生します。</target>
        </trans-unit>
        <trans-unit id="5102cc5a79e08a7c0452cc141b9537b61373b612" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; function detects that the amount of the downloaded data is less than the expected amount (given by the &lt;em&gt;Content-Length&lt;/em&gt; header). The &lt;code&gt;content&lt;/code&gt; attribute stores the downloaded (and supposedly truncated) data.</source>
          <target state="translated">この例外は、ダウンロードされたデータの量が予想される量（&lt;em&gt;Content-Length&lt;/em&gt;ヘッダーで示される）より小さいことを&lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;関数が検出した場合に発生します。 &lt;code&gt;content&lt;/code&gt; 属性ストアは、データをダウンロード（およびおそらく切り捨て）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdfe4875d5ba1070e830332816dd12241af8086e" translate="yes" xml:space="preserve">
          <source>This exception is raised when the server unexpectedly disconnects, or when an attempt is made to use the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance before connecting it to a server.</source>
          <target state="translated">この例外は、サーバーが予期せず切断された場合、またはサーバーに接続する前に&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;インスタンスを使用しようとした場合に発生します。</target>
        </trans-unit>
        <trans-unit id="542841d41f063cbb018245ada2a57db1142f7ad3" translate="yes" xml:space="preserve">
          <source>This exception may be raised by user code to indicate that an attempted operation on an object is not supported, and is not meant to be. If an object is meant to support a given operation but has not yet provided an implementation, &lt;a href=&quot;#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is the proper exception to raise.</source>
          <target state="translated">この例外は、オブジェクトに対して試行された操作がサポートされておらず、サポートされているわけではないことを示すために、ユーザーコードによって発生する場合があります。オブジェクトが特定の操作をサポートすることを意図しているが、まだ実装を提供していない場合、発生する適切な例外は&lt;a href=&quot;#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="7a08b02abca8718c7204bf9f673ee79551dbb60d" translate="yes" xml:space="preserve">
          <source>This exception, a subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, is raised when the &lt;a href=&quot;#threading.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt; object is reset or broken.</source>
          <target state="translated">&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; の&lt;/a&gt;サブクラスであるこの例外は、&lt;a href=&quot;#threading.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;オブジェクトがリセットまたは壊れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="1c1aa14e9619480ad86d082fd229c59c6cd9c32c" translate="yes" xml:space="preserve">
          <source>This expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt; supports &lt;code&gt;effective_ids=True&lt;/code&gt; on the local platform:</source>
          <target state="translated">&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt;がローカルプラットフォームで &lt;code&gt;effective_ids=True&lt;/code&gt; をサポートしている場合、この式は &lt;code&gt;True&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="633ac41847f4e119da8fe6e2c132acd3ad7d6a6a" translate="yes" xml:space="preserve">
          <source>This factory function creates a function that can be used as a callable for &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;em&gt;ignore&lt;/em&gt; argument, ignoring files and directories that match one of the glob-style &lt;em&gt;patterns&lt;/em&gt; provided. See the example below.</source>
          <target state="translated">このファクトリ関数は、提供されたグロブスタイルの&lt;em&gt;パターンの&lt;/em&gt; 1つに一致するファイルとディレクトリを無視して、&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;ignore&lt;/em&gt;引数の呼び出し可能関数として使用できる関数を作成します。以下の例を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8163d2b1312f6d8e2b608937718b193c1bd6dec6" translate="yes" xml:space="preserve">
          <source>This factory function creates and returns a new ctypes pointer type. Pointer types are cached and reused internally, so calling this function repeatedly is cheap. &lt;em&gt;type&lt;/em&gt; must be a ctypes type.</source>
          <target state="translated">このファクトリー関数は、新しいctypesポインター型を作成して返します。ポインター型はキャッシュされ、内部で再利用されるため、この関数を繰り返し呼び出すことは安価です。&lt;em&gt;type&lt;/em&gt;はctypes &lt;em&gt;タイプで&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="91c8c475d8b0ce7014c0cef96a207a73500c7165" translate="yes" xml:space="preserve">
          <source>This feature can be disabled by setting &lt;code&gt;allow_abbrev&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">この機能を無効にするには、 &lt;code&gt;allow_abbrev&lt;/code&gt; を &lt;code&gt;False&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0c7a0557b8a57ee027564f2bc023efbef1ba46a1" translate="yes" xml:space="preserve">
          <source>This feature is not available on Windows.</source>
          <target state="translated">この機能はWindowsでは利用できません。</target>
        </trans-unit>
        <trans-unit id="88bd30c5ce87bf5e4843b4151adf98e7bf9c98c1" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 0.9.8f or newer.</source>
          <target state="translated">この機能を利用するには、OpenSSL 0.9.8f 以降が必要です。</target>
        </trans-unit>
        <trans-unit id="140c6b2dbf9a419843c07939e4cad112713e18f4" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 1.1.1 or newer.</source>
          <target state="translated">この機能を利用するには、OpenSSL 1.1.1.1 以降が必要です。</target>
        </trans-unit>
        <trans-unit id="3a49f557a9e7cd87ce6aae19a5ed6c4bfa6e3ab7" translate="yes" xml:space="preserve">
          <source>This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class, or when preceded by an unescaped backslash, or within tokens like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;(?:&lt;/code&gt; or &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt;. When a line contains a &lt;code&gt;#&lt;/code&gt; that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such &lt;code&gt;#&lt;/code&gt; through the end of the line are ignored.</source>
          <target state="translated">このフラグを使用すると、パターンの論理セクションを視覚的に分離してコメントを追加できるため、見栄えがよく、読みやすい正規表現を記述できます。文字クラス内、エスケープされていないバックスラッシュが前にある場合、または &lt;code&gt;*?&lt;/code&gt; のようなトークン内を除いて、パターン内の空白は無視されます。、 &lt;code&gt;(?:&lt;/code&gt; または &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt; 。行に文字クラスではなく、エスケープされていないバックスラッシュが付いていない &lt;code&gt;#&lt;/code&gt; が含まれる場合、そのような左端の &lt;code&gt;#&lt;/code&gt; から行の終わりまでのすべての文字は無視されました。</target>
        </trans-unit>
        <trans-unit id="6776e1560b68f5240a1ba4435437a318443994f3" translate="yes" xml:space="preserve">
          <source>This flag can be OR&amp;rsquo;ed with any other scheduling policy. When a process with this flag set forks, its child&amp;rsquo;s scheduling policy and priority are reset to the default.</source>
          <target state="translated">このフラグは、他のスケジュールポリシーとORすることができます。このフラグが設定されているプロセスがforkすると、その子のスケジューリングポリシーと優先順位がデフォルトにリセットされます。</target>
        </trans-unit>
        <trans-unit id="4bb5e8bac1bee574b48e95ad1269a90a6d72a2ab" translate="yes" xml:space="preserve">
          <source>This flag is ignored if &lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt;&lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt;&lt;/a&gt; is specified.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt; &lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt; &lt;/a&gt;が指定されている場合、このフラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="6a75f6aece8739456749d49d943dcd827dfddcd0" translate="yes" xml:space="preserve">
          <source>This flag is not supported on modern Windows platforms.</source>
          <target state="translated">このフラグは、最新のWindowsプラットフォームではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="43e3d95482fafc51295e5f9b744822dacdde2901" translate="yes" xml:space="preserve">
          <source>This follows the US convention of &lt;code&gt;DAY_1&lt;/code&gt; being Sunday, not the international convention (ISO 8601) that Monday is the first day of the week.</source>
          <target state="translated">これは、月曜日が週の最初の曜日であるという国際規約（ISO 8601）ではなく、日曜日である &lt;code&gt;DAY_1&lt;/code&gt; の米国の規約に従います。</target>
        </trans-unit>
        <trans-unit id="b283665a2e4addf0f4b94b565264877c7b695f5f" translate="yes" xml:space="preserve">
          <source>This format is more limited than &lt;code&gt;.xz&lt;/code&gt; &amp;ndash; it does not support integrity checks or multiple filters.</source>
          <target state="translated">この形式は &lt;code&gt;.xz&lt;/code&gt; よりも制限されています &amp;ndash;整合性チェックや複数のフィルターをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="416c204cc1d425d9fead84292efcc4e9beda33c5" translate="yes" xml:space="preserve">
          <source>This format specifier does not support integrity checks, and requires that you always specify a custom filter chain (for both compression and decompression). Additionally, data compressed in this manner cannot be decompressed using &lt;code&gt;FORMAT_AUTO&lt;/code&gt; (see &lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt;&lt;code&gt;LZMADecompressor&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">この形式指定子は整合性チェックをサポートしていないため、常にカスタムフィルターチェーンを指定する必要があります（圧縮と解凍の両方に対して）。また、このように圧縮されたデータを使用して解凍することができない &lt;code&gt;FORMAT_AUTO&lt;/code&gt; を（参照&lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt; &lt;code&gt;LZMADecompressor&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="989faedbf517851e250011a0c82fce8ac57f5b92" translate="yes" xml:space="preserve">
          <source>This function accepts a parse tree represented as a sequence and builds an internal representation if possible. If it can validate that the tree conforms to the Python grammar and all nodes are valid node types in the host version of Python, an ST object is created from the internal representation and returned to the called. If there is a problem creating the internal representation, or if the tree cannot be validated, a &lt;a href=&quot;#parser.ParserError&quot;&gt;&lt;code&gt;ParserError&lt;/code&gt;&lt;/a&gt; exception is raised. An ST object created this way should not be assumed to compile correctly; normal exceptions raised by compilation may still be initiated when the ST object is passed to &lt;a href=&quot;#parser.compilest&quot;&gt;&lt;code&gt;compilest()&lt;/code&gt;&lt;/a&gt;. This may indicate problems not related to syntax (such as a &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; exception), but may also be due to constructs such as the result of parsing &lt;code&gt;del f(0)&lt;/code&gt;, which escapes the Python parser but is checked by the bytecode compiler.</source>
          <target state="translated">この関数は、シーケンスとして表された解析ツリーを受け入れ、可能であれば内部表現を構築します。ツリーがPython文法に準拠し、すべてのノードがホストバージョンのPythonで有効なノードタイプであることを検証できる場合、STオブジェクトは内部表現から作成され、呼び出されたオブジェクトに返されます。内部表現の作成に問題がある場合、またはツリーを検証できない場合は、&lt;a href=&quot;#parser.ParserError&quot;&gt; &lt;code&gt;ParserError&lt;/code&gt; &lt;/a&gt;例外が発生します。この方法で作成されたSTオブジェクトは、正しくコンパイルされると想定されるべきではありません。コンパイルによって発生した通常の例外は、STオブジェクトが&lt;a href=&quot;#parser.compilest&quot;&gt; &lt;code&gt;compilest()&lt;/code&gt; に&lt;/a&gt;渡されたときに引き続き開始される場合があります。これは、構文に関連しない問題（&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;など）例外）。ただし、Pythonパーサーをエスケープするがバイトコードコンパイラーによってチェックされる &lt;code&gt;del f(0)&lt;/code&gt; の解析結果などの構造が原因である可能性もあります。</target>
        </trans-unit>
        <trans-unit id="67cbaeac62e982b846f73d97f9e9a2e46abe862c" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python list representing the equivalent parse tree. The resulting list representation can be used for inspection or the creation of a new parse tree in list form. This function does not fail so long as memory is available to build the list representation. If the parse tree will only be used for inspection, &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; should be used instead to reduce memory consumption and fragmentation. When the list representation is required, this function is significantly faster than retrieving a tuple representation and converting that to nested lists.</source>
          <target state="translated">この関数は、呼び出し元から&lt;em&gt;stで&lt;/em&gt; STオブジェクトを受け取り、同等の解析ツリーを表すPythonリストを返します。結果のリスト表現は、検査またはリスト形式の新しい解析ツリーの作成に使用できます。この関数は、メモリがリスト表現を構築するために利用可能である限り失敗しません。解析ツリーが検査のみに使用される場合は、代わりに&lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt;を使用して、メモリの消費と断片化を減らす必要があります。リスト表現が必要な場合、この関数はタプル表現を取得してネストされたリストに変換するよりも大幅に高速です。</target>
        </trans-unit>
        <trans-unit id="e9a7e450b07e96b8d37598fb40a161b3ec8ab42a" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python tuple representing the equivalent parse tree. Other than returning a tuple instead of a list, this function is identical to &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;st&lt;/em&gt;の呼び出し元からSTオブジェクトを受け取り、同等の解析ツリーを表すPythonタプルを返します。リストの代わりにタプルを返すことを&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt;、この関数はst2list（）と同じです。</target>
        </trans-unit>
        <trans-unit id="321d86afeb1999f005b4db61414e6c09451e8851" translate="yes" xml:space="preserve">
          <source>This function allows for partial sends, which can happen when the network is busy.</source>
          <target state="translated">この関数は、ネットワークがビジー状態のときに発生する可能性のある部分的な送信を可能にします。</target>
        </trans-unit>
        <trans-unit id="fe899672dab1e5e73d8fb72fca72c949a0360195" translate="yes" xml:space="preserve">
          <source>This function always creates a new event loop and closes it at the end. It should be used as a main entry point for asyncio programs, and should ideally only be called once.</source>
          <target state="translated">この関数は常に新しいイベントループを作成し、最後に閉じます。この関数は、asyncio プログラムのメインエントリーポイントとして使用され、理想的には一度だけ呼ばれるべきです。</target>
        </trans-unit>
        <trans-unit id="e046b276c5e0f6ce872efb15eac2bd1f19828574" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has methods such as</source>
          <target state="translated">この関数は常に、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャ&lt;/a&gt;として機能し、次のようなメソッドを持つオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="88ebf835d256e7d1650d9a8e9148ec994873a52c" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has the properties &lt;em&gt;url&lt;/em&gt;, &lt;em&gt;headers&lt;/em&gt;, and &lt;em&gt;status&lt;/em&gt;. See &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt;&lt;code&gt;urllib.response.addinfourl&lt;/code&gt;&lt;/a&gt; for more detail on these properties.</source>
          <target state="translated">この関数は常に、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャー&lt;/a&gt;として機能し、プロパティ&lt;em&gt;url&lt;/em&gt;、&lt;em&gt;headers&lt;/em&gt;、および&lt;em&gt;status&lt;/em&gt;を持つオブジェクトを返し&lt;em&gt;ます&lt;/em&gt;。これらのプロパティの詳細については、&lt;a href=&quot;#urllib.response.addinfourl&quot;&gt; &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="afd0d330dff663f3dc120c9eb1f87d37d23d40ac" translate="yes" xml:space="preserve">
          <source>This function always supports &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;. Note however that, unlike other functions, the &lt;a href=&quot;#os.fwalk&quot;&gt;&lt;code&gt;fwalk()&lt;/code&gt;&lt;/a&gt; default value for &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクをたどらずに&lt;/a&gt;&lt;a href=&quot;#dir-fd&quot;&gt;、&lt;/a&gt;常にディレクトリ記述子からの相対パスをサポートします。他の機能とは異なり、ことに注意してください&lt;a href=&quot;#os.fwalk&quot;&gt; &lt;code&gt;fwalk()&lt;/code&gt; &lt;/a&gt;のデフォルト値&lt;em&gt;follow_symlinksが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed1efc12979920dcd6c776bcfcdcc27d24754b6f" translate="yes" xml:space="preserve">
          <source>This function attempts to guess which of the several simple database modules available &amp;mdash; &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; &amp;mdash; should be used to open a given file.</source>
          <target state="translated">この関数は、特定のファイルを開くために、使用可能ないくつかの単純なデータベースモジュール（&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; )のどれを&lt;/a&gt;使用する必要があるかを推測しようとします。</target>
        </trans-unit>
        <trans-unit id="8ab5d1e1419c1e6e527c5b28e58d7f204d5d5901" translate="yes" xml:space="preserve">
          <source>This function calls &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; to do the actual work, see the documentation of &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;that function&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">この関数は&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;を呼び出して実際の作業を行います。キーワード引数の説明については、&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;that function&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7643b642de54efb09acb94ff349ac141f3740543" translate="yes" xml:space="preserve">
          <source>This function can also be used to execute arbitrary code objects (such as those created by &lt;a href=&quot;#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;). In this case pass a code object instead of a string. If the code object has been compiled with &lt;code&gt;'exec'&lt;/code&gt; as the &lt;em&gt;mode&lt;/em&gt; argument, &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s return value will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この関数は、任意のコードオブジェクト（&lt;a href=&quot;#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;によって作成されたものなど）の実行にも使用できます。この場合、文字列ではなくコードオブジェクトを渡します。コードオブジェクトが&lt;em&gt;モード&lt;/em&gt;引数として &lt;code&gt;'exec'&lt;/code&gt; を使用してコンパイルされている場合、&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;の戻り値は &lt;code&gt;None&lt;/code&gt; になります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c83a78a81f4633ef210bfad83d65ad3ed569eed4" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#dir-fd&quot;&gt;、ディレクトリ記述子への相対パス&lt;/a&gt;もサポートできます。</target>
        </trans-unit>
        <trans-unit id="246288c265a4e1776c81f6798f272763d36779b3" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;; the file descriptor must refer to a directory.</source>
          <target state="translated">この関数は&lt;a href=&quot;#path-fd&quot;&gt;、ファイル記述子の指定&lt;/a&gt;もサポートできます。ファイル記述子はディレクトリを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb38baa42674aa3420a5ba84abf298951b8d79bb" translate="yes" xml:space="preserve">
          <source>This function can fail with the new directory structure made if you lack permissions needed to remove the leaf directory or file.</source>
          <target state="translated">リーフディレクトリやファイルを削除するために必要なパーミッションが不足している場合、この関数は新しいディレクトリ構造を作成して失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="24201f2bcec067a0cadef86b16eb4b56ccf09408" translate="yes" xml:space="preserve">
          <source>This function can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; and subclasses such as &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt;&lt;code&gt;NotADirectoryError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;、NotADirectoryErrorなどのサブクラスを発生させる可能性があり&lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt; &lt;code&gt;NotADirectoryError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84dc07fa2ed11ef2486edb31b54936913c119158" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; with the &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">この関数は、&lt;em&gt;dir_fd&lt;/em&gt;パラメータを使用して、&lt;a href=&quot;#dir-fd&quot;&gt;ディレクトリ記述子に関連するパス&lt;/a&gt;をサポートできます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b68d682873763be0740e66ddb99f09801a4806ea" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#dir-fd&quot;&gt;、ディレクトリ記述子への相対パス&lt;/a&gt;をサポートできます。</target>
        </trans-unit>
        <trans-unit id="8a372fc0e1775faa2f765a46dcfe627ccc5b0b02" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクをたどらない&lt;/a&gt;ことをサポートできます。</target>
        </trans-unit>
        <trans-unit id="ba43daecc37b3b1b1aaa02be05b7cbcd978d90b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">この機能は、サポートできる&lt;a href=&quot;#path-fd&quot;&gt;ファイル記述子を指定する&lt;/a&gt;と、&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクを次のようではありません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a1de8b6398b0c357406d8ca517cc6964f787838" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;, &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">この機能がサポートできる&lt;a href=&quot;#path-fd&quot;&gt;ファイルディスクリプタを指定して&lt;/a&gt;、&lt;a href=&quot;#dir-fd&quot;&gt;ディレクトリ記述子への相対パス&lt;/a&gt;や&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクを、次のではありません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2d794dbe904f4089dea7a0681a102aab31ead7a" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#path-fd&quot;&gt;、ファイル記述子の指定&lt;/a&gt;をサポートできます。</target>
        </trans-unit>
        <trans-unit id="080173ce67b107ec521fc1ec6fed9977e31919b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;. The descriptor must refer to an opened directory, not an open file.</source>
          <target state="translated">この関数は&lt;a href=&quot;#path-fd&quot;&gt;、ファイル記述子の指定&lt;/a&gt;をサポートできます。記述子は、開いているファイルではなく、開いているディレクトリを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb5e909c57dce7b157370491ade31ffad496f482" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクをたどらずに&lt;/a&gt;&lt;a href=&quot;#dir-fd&quot;&gt;、ディレクトリ記述子&lt;/a&gt;からの相対パスを指定できます。</target>
        </trans-unit>
        <trans-unit id="b687afc2a9b6992774dda2ac6ff5383d0e794ce7" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;, and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;src_dir_fd&lt;/em&gt;や&lt;em&gt;dst_dir_fdの&lt;/em&gt;指定をサポートして、&lt;a href=&quot;#follow-symlinks&quot;&gt;シンボリックリンクを&lt;/a&gt;&lt;em&gt;たどら&lt;/em&gt;ずに、&lt;a href=&quot;#dir-fd&quot;&gt;ディレクトリ記述子からの相対パス&lt;/a&gt;を提供できます。</target>
        </trans-unit>
        <trans-unit id="9f41ff7dbc91012c3c5b04b05b34a937ef7d76bc" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">この関数は、指定サポートすることができ&lt;em&gt;src_dir_fd&lt;/em&gt;及び/又は&lt;em&gt;dst_dir_fdを&lt;/em&gt;供給する&lt;a href=&quot;#dir-fd&quot;&gt;ディレクトリディスクリプタへの相対パス&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb07224e25025b731bf2f81e5c6d8118346c44be" translate="yes" xml:space="preserve">
          <source>This function cannot be called when another asyncio event loop is running in the same thread.</source>
          <target state="translated">この関数は、同じスレッドで別の asyncio イベントループが実行されている場合には呼び出すことができません。</target>
        </trans-unit>
        <trans-unit id="a2b26c04e5c0956fc2606ac8c6a99fe5f3d8eb37" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module to take over the interpreter&amp;rsquo;s default handling for exceptions by setting the value of &lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数により、&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;モジュールは、sys.excepthookの値を設定することにより、例外に対するインタープリターのデフォルトの処理を&lt;a href=&quot;sys#sys.excepthook&quot;&gt; &lt;code&gt;sys.excepthook&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c529d55efe484171205ace1eaae0be4ead749532" translate="yes" xml:space="preserve">
          <source>This function checks the environment variables &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt;, &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt;, &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; and &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt;, in order, and returns the value of the first one which is set to a non-empty string. If none are set, the login name from the password database is returned on systems which support the &lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt; module, otherwise, an exception is raised.</source>
          <target state="translated">この関数は、環境変数 &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt; 、 &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt; 、 &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; 、および &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt; を順にチェックし、空でない文字列に設定されている最初の値を返します。何も設定されていない場合、&lt;a href=&quot;pwd#module-pwd&quot;&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/a&gt;モジュールをサポートするシステムでパスワードデータベースのログイン名が返されます。それ以外の場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="c6efae03f969812467873fc7c658e4f8c65206e8" translate="yes" xml:space="preserve">
          <source>This function creates a mutable character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_char&quot;&gt;&lt;code&gt;c_char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、変更可能な文字バッファーを作成します。返されるオブジェクトは&lt;a href=&quot;#ctypes.c_char&quot;&gt; &lt;code&gt;c_char&lt;/code&gt; の&lt;/a&gt; ctypes配列です。</target>
        </trans-unit>
        <trans-unit id="d85e1f7c1c7feb43831c932856b41d843b092294" translate="yes" xml:space="preserve">
          <source>This function creates a mutable unicode character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_wchar&quot;&gt;&lt;code&gt;c_wchar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、可変のUnicode文字バッファーを作成します。返されるオブジェクトは&lt;a href=&quot;#ctypes.c_wchar&quot;&gt; &lt;code&gt;c_wchar&lt;/code&gt; の&lt;/a&gt; ctypes配列です。</target>
        </trans-unit>
        <trans-unit id="cc1bfdda8af45c4752ba7931dbfd50a06388950a" translate="yes" xml:space="preserve">
          <source>This function creates a new pointer instance, pointing to &lt;em&gt;obj&lt;/em&gt;. The returned object is of the type &lt;code&gt;POINTER(type(obj))&lt;/code&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;objを&lt;/em&gt;指す新しいポインターインスタンスを作成します。返されるオブジェクトのタイプは &lt;code&gt;POINTER(type(obj))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="660ffac77bae61fa75e6d1bc0e35c474820d48c8" translate="yes" xml:space="preserve">
          <source>This function does not attempt to verify that you have passed the actual mean as &lt;em&gt;xbar&lt;/em&gt;. Using arbitrary values for &lt;em&gt;xbar&lt;/em&gt; can lead to invalid or impossible results.</source>
          <target state="translated">この関数は、実際の平均が&lt;em&gt;xbar&lt;/em&gt;として渡されたことを確認しようとはしません。&lt;em&gt;xbarに&lt;/em&gt;任意の値を使用すると、無効または不可能な結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="35888f80b9cb879ee93d24c03d6a6db8aa2d710a" translate="yes" xml:space="preserve">
          <source>This function does not check whether the data points are at least &lt;em&gt;interval&lt;/em&gt; apart.</source>
          <target state="translated">この関数は、データポイントが少なくとも&lt;em&gt;間隔をあけ&lt;/em&gt;ているかどうかをチェックしません。</target>
        </trans-unit>
        <trans-unit id="2c86a6e9fac8ee8c7c704554bc8964eb5395d74d" translate="yes" xml:space="preserve">
          <source>This function does nothing if the root logger already has handlers configured, unless the keyword argument &lt;em&gt;force&lt;/em&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">キーワード引数&lt;em&gt;force&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; に設定されていない限り、ルートロガーがすでにハンドラーを構成している場合、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="514c10027e6febd0ca9b4e0e8abae20168e49aa7" translate="yes" xml:space="preserve">
          <source>This function does the actual work of formatting. It is exposed as a separate function for cases where you want to pass in a predefined dictionary of arguments, rather than unpacking and repacking the dictionary as individual arguments using the &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; syntax. &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; does the work of breaking up the format string into character data and replacement fields. It calls the various methods described below.</source>
          <target state="translated">この関数は、フォーマットの実際の作業を行います。 &lt;code&gt;*args&lt;/code&gt; および &lt;code&gt;**kwargs&lt;/code&gt; 構文を使用してディクショナリを個別の引数としてアンパックおよび再パックするのではなく、定義済みの引数のディクショナリを渡す必要がある場合に、別の関数として公開されます。&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;は、フォーマット文字列を文字データと置換フィールドに分割する作業を行います。以下で説明するさまざまなメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="1957f99cb00cac22539008ce3672f35c832dcd45" translate="yes" xml:space="preserve">
          <source>This function drops you into the debugger at the call site. Specifically, it calls &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt;, passing &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kws&lt;/code&gt; straight through. By default, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; calls &lt;a href=&quot;pdb#pdb.set_trace&quot;&gt;&lt;code&gt;pdb.set_trace()&lt;/code&gt;&lt;/a&gt; expecting no arguments. In this case, it is purely a convenience function so you don&amp;rsquo;t have to explicitly import &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; or type as much code to enter the debugger. However, &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt; can be set to some other function and &lt;a href=&quot;#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; will automatically call that, allowing you to drop into the debugger of choice.</source>
          <target state="translated">この関数は、呼び出しサイトのデバッガーに移動します。具体的には、&lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; を&lt;/a&gt;呼び出し、 &lt;code&gt;args&lt;/code&gt; と &lt;code&gt;kws&lt;/code&gt; をそのまま渡します。デフォルトでは、 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; を呼び出します&lt;a href=&quot;pdb#pdb.set_trace&quot;&gt; &lt;code&gt;pdb.set_trace()&lt;/code&gt; &lt;/a&gt;は引数を期待していないし。この場合、それは純粋に便利な関数であるため、&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;を明示的にインポートしたり、デバッガーに入るのと同じくらい多くのコードを入力したりする必要はありません。ただし、&lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; &lt;/a&gt;は他の関数に設定でき、&lt;a href=&quot;#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;はそれを自動的に呼び出して、選択したデバッガーにドロップできるようにします。</target>
        </trans-unit>
        <trans-unit id="c27474e7234eb7c272689b2964d56cb90bf4a48b" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;base_url&lt;/em&gt; is base URL of the original file, to resolve relative include file references. &lt;em&gt;max_depth&lt;/em&gt; is the maximum number of recursive inclusions. Limited to reduce the risk of malicious content explosion. Pass a negative value to disable the limitation.</source>
          <target state="translated">この関数は、XIncludeディレクティブを展開します。&lt;em&gt;elem&lt;/em&gt;はルート要素です。&lt;em&gt;ローダー&lt;/em&gt;はオプションのリソースローダーです。省略した場合、デフォルトで&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; になり&lt;/a&gt;ます。指定する場合は、&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;と同じインターフェイスを実装する呼び出し可能である必要があります。&lt;em&gt;base_url&lt;/em&gt;は、相対インクルードファイル参照を解決するための元のファイルのベースURLです。&lt;em&gt;max_depth&lt;/em&gt;は、再帰的包含の最大数です。悪意のあるコンテンツの爆発的なリスクを減らすために制限されています。制限を無効にするには、負の値を渡します。</target>
        </trans-unit>
        <trans-unit id="10780002f9c2d93187c1df77ca7ace00a3742b52" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. Returns the expanded resource. If the parse mode is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, this is an ElementTree instance. If the parse mode is &amp;ldquo;text&amp;rdquo;, this is a Unicode string. If the loader fails, it can return None or raise an exception.</source>
          <target state="translated">この関数は、XIncludeディレクティブを展開します。&lt;em&gt;elem&lt;/em&gt;はルート要素です。&lt;em&gt;ローダー&lt;/em&gt;はオプションのリソースローダーです。省略すると、デフォルトで&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; になり&lt;/a&gt;ます。指定する場合は、&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;と同じインターフェースを実装する呼び出し可能オブジェクトである必要があります。展開されたリソースを返します。解析モードが &lt;code&gt;&quot;xml&quot;&lt;/code&gt; の場合、これはElementTreeインスタンスです。解析モードが「テキスト」の場合、これはUnicode文字列です。ローダーが失敗すると、Noneを返すか、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2d183e0b0a1996b7d266deb457bb1c39a308cf71" translate="yes" xml:space="preserve">
          <source>This function handles UNC paths correctly.</source>
          <target state="translated">この関数はUNCパスを正しく処理します。</target>
        </trans-unit>
        <trans-unit id="39d613e79eca353689d0e33384eef7ca7c8b978f" translate="yes" xml:space="preserve">
          <source>This function handles an exception using the default settings (that is, show a report in the browser, but don&amp;rsquo;t log to a file). This can be used when you&amp;rsquo;ve caught an exception and want to report it using &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt;. The optional &lt;em&gt;info&lt;/em&gt; argument should be a 3-tuple containing an exception type, exception value, and traceback object, exactly like the tuple returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;info&lt;/em&gt; argument is not supplied, the current exception is obtained from &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、デフォルト設定を使用して例外を処理します（つまり、ブラウザーにレポートを表示しますが、ファイルにログを記録しません）。これは、例外をキャッチして&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;を使用して報告したい場合に使用できます。オプションの&lt;em&gt;info&lt;/em&gt;引数は、&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返されるタプルとまったく同じように、例外タイプ、例外値、およびトレースバックオブジェクトを含む3タプルである必要があります。&lt;em&gt;info&lt;/em&gt;引数が指定されていない場合、現在の例外は&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;から取得されます。</target>
        </trans-unit>
        <trans-unit id="95c638b427c88a31a4b477cb0d745500c128a308" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as HTML and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;info&lt;/em&gt;（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; の&lt;/a&gt;結果を含む3タプル）によって記述された例外を処理し、そのトレースバックをHTMLとしてフォーマットし、結果を文字列として返します。オプションの引数&lt;em&gt;context&lt;/em&gt;は、トレースバックのソースコードの現在の行の周りに表示するコンテキストの行数です。デフォルトは &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4ecec700fa8113f48e6cc0d41277de9fd36d4792" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as text and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;info&lt;/em&gt;（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; の&lt;/a&gt;結果を含む3タプル）によって記述された例外を処理し、トレースバックをテキストとしてフォーマットし、結果を文字列として返します。オプションの引数&lt;em&gt;context&lt;/em&gt;は、トレースバックのソースコードの現在の行の周りに表示するコンテキストの行数です。デフォルトは &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e68a59cb55c5c08ef9ff6ef164187eb8c36720fa" translate="yes" xml:space="preserve">
          <source>This function has been &lt;strong&gt;added in Python 3.7&lt;/strong&gt;. Prior to Python 3.7, the low-level &lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt;&lt;code&gt;asyncio.ensure_future()&lt;/code&gt;&lt;/a&gt; function can be used instead:</source>
          <target state="translated">この関数は&lt;strong&gt;Python 3.7で追加&lt;/strong&gt;さ&lt;strong&gt;れました&lt;/strong&gt;。Python 3.7より前の&lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt; &lt;code&gt;asyncio.ensure_future()&lt;/code&gt; &lt;/a&gt;では、低レベルのasyncio.ensure_future（）関数を代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="c966fb5bb08388dce4957a9885cbfef7ae831e47" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">この機能は暫定的に追加されました（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="4989c8386f245adaba6aaa59654b9b058450c784" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">この機能は暫定的に追加されました（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="fc3352bd7899627742c5d818912f6834e1c6bd22" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">この関数は暫定的に追加されています（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照してください）。デバッグ目的でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="c694e13b17fe9b728776b26526d323d3236fee9a" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">この機能は暫定的に追加されています（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照）。デバッグ目的でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="f611ccb8e78599647e771c2dd3f8be5177e91535" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">この機能は暫定的に追加されました（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="d126d1a929fb38de978e3f8c18767068e6441258" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">この機能は暫定的に追加されました（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="ea1d284a0ca301e5f36ffb15fa62803f51745cd9" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">この関数は暫定的に追加されています（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照してください）。デバッグ目的でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="4f1cdae04c18641f66e088e05497aac72c454f82" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">この機能は暫定的に追加されています（詳細は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt;を参照）。デバッグ目的でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="ef87984f54425c7e20ecc28f19c814ccf05ac527" translate="yes" xml:space="preserve">
          <source>This function implements the standard &lt;code&gt;.mo&lt;/code&gt; file search algorithm. It takes a &lt;em&gt;domain&lt;/em&gt;, identical to what &lt;a href=&quot;#gettext.textdomain&quot;&gt;&lt;code&gt;textdomain()&lt;/code&gt;&lt;/a&gt; takes. Optional &lt;em&gt;localedir&lt;/em&gt; is as in &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt;. Optional &lt;em&gt;languages&lt;/em&gt; is a list of strings, where each string is a language code.</source>
          <target state="translated">この関数は、標準の &lt;code&gt;.mo&lt;/code&gt; ファイル検索アルゴリズムを実装しています。それは、&lt;a href=&quot;#gettext.textdomain&quot;&gt; &lt;code&gt;textdomain()&lt;/code&gt; &lt;/a&gt;が取るものと同一の&lt;em&gt;ドメインを&lt;/em&gt;取ります。オプションの&lt;em&gt;localedir&lt;/em&gt;は&lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt;と同じです。オプションの&lt;em&gt;言語&lt;/em&gt;は文字列のリストで、各文字列は言語コードです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="172dadb9dc85c7a090d62a6f27fdb75709950244" translate="yes" xml:space="preserve">
          <source>This function imports and returns a fresh copy of the named Python module by removing the named module from &lt;code&gt;sys.modules&lt;/code&gt; before doing the import. Note that unlike &lt;code&gt;reload()&lt;/code&gt;, the original module is not affected by this operation.</source>
          <target state="translated">この関数は、指定されたモジュールを &lt;code&gt;sys.modules&lt;/code&gt; から削除してから、指定されたPythonモジュールの新しいコピーをインポートして返します。 &lt;code&gt;reload()&lt;/code&gt; とは異なり、元のモジュールはこの操作の影響を受けないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e85250eaece03f8dc4805c01a0978aa0691dd7c0" translate="yes" xml:space="preserve">
          <source>This function imports and returns the named module. Unlike a normal import, this function raises &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; if the module cannot be imported.</source>
          <target state="translated">この関数は、指定されたモジュールをインポートして返します。通常のインポートとは異なり、この関数は、モジュールをインポートできない場合に&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="fe663ee4d39048854bb84cb63b91ff780333b588" translate="yes" xml:space="preserve">
          <source>This function is Unix specific.</source>
          <target state="translated">この関数はUnix固有のものです。</target>
        </trans-unit>
        <trans-unit id="9e01cbde143f3e80838cbf4287afc5bd594fa7e9" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;のためのファクトリ関数を定義するために使用することができる&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt;クラス又は別作成しなくても、文の非同期コンテキストマネージャ&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt;メソッド。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数に適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="149b80885bdd0b63fad9b906d671077767527f43" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;のためのファクトリ関数を定義するために使用することができる&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;、クラス、または別作成しなくても、文のコンテキストマネージャ&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="0c899e79e3c0eabc9cc8a8a015050464bb0041cf" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">この関数は、以下に説明するように、生成された&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;特別なメソッド&lt;/a&gt;をクラスに追加するために使用される&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2e3fe8c538289c53d72e2454563eb1a5fc63abdc" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">この関数は、クラスを作成したり、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt;メソッドと__aexit __（）メソッドを分離したりすることなく、ステートメント非同期コンテキストマネージャーを使用して&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt;ファクトリ関数を定義するために使用できる&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;デコレーター&lt;/a&gt;です。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数に適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4ca5630b6c336007b5871876d1ee539f6a42c7a2" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;のためのファクトリ関数を定義するために使用することができる&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;、クラス、または別作成しなくても、文のコンテキストマネージャ&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="e011a2dbce915f12a3fd370d4abddfb575b29929" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">この関数は、以下で説明するように、生成された&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;特別なメソッド&lt;/a&gt;をクラスに追加するために使用される&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="faffa47c08d7418284e943db0a2194e64073b3a1" translate="yes" xml:space="preserve">
          <source>This function is a small but complete WSGI application that returns a text page containing the message &amp;ldquo;Hello world!&amp;rdquo; and a list of the key/value pairs provided in the &lt;em&gt;environ&lt;/em&gt; parameter. It&amp;rsquo;s useful for verifying that a WSGI server (such as &lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt;&lt;code&gt;wsgiref.simple_server&lt;/code&gt;&lt;/a&gt;) is able to run a simple WSGI application correctly.</source>
          <target state="translated">この関数は、小さくても完全なWSGIアプリケーションであり、「Hello world！」というメッセージを含むテキストページを返します。&lt;em&gt;environ&lt;/em&gt;パラメータで提供されるキーと値のペアのリスト。これは、WSGIサーバー（&lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt; &lt;code&gt;wsgiref.simple_server&lt;/code&gt; &lt;/a&gt;など）が単純なWSGIアプリケーションを正しく実行できることを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d515f195df4ddcf5d5033ae67b93ed67290c7488" translate="yes" xml:space="preserve">
          <source>This function is added to the built-in namespace by the &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この関数は、&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;モジュールによって組み込みの名前空間に追加されます。</target>
        </trans-unit>
        <trans-unit id="64628f06fee9b7aeeaa8847c7406b08c68a6b088" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">この関数は&lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;関数によって作成されたコルーチンオブジェクトに対して機能します。</target>
        </trans-unit>
        <trans-unit id="0ed125fdde6671777d61cc5fcfbfba3affe8b52e" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">この関数は、に似ている&lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; &lt;/a&gt;が、コルーチンのための作品はによって作成されたオブジェクト&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;機能。</target>
        </trans-unit>
        <trans-unit id="03648b49b7e97f2705e79f86b31e7423f5f4b8ad" translate="yes" xml:space="preserve">
          <source>This function is called if the &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; instance raises an exception. The default action is to print the traceback to standard error and continue handling further requests.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドで例外が発生した場合に呼び出されます。デフォルトのアクションは、トレースバックを標準エラーに出力し、それ以降の要求の処理を続行することです。</target>
        </trans-unit>
        <trans-unit id="25f184942d28c9f4cf30b9129690c3f39a8da58c" translate="yes" xml:space="preserve">
          <source>This function is called unconditionally after &lt;code&gt;tearDownModule()&lt;/code&gt;, or after &lt;code&gt;setUpModule()&lt;/code&gt; if &lt;code&gt;setUpModule()&lt;/code&gt; raises an exception.</source>
          <target state="translated">無条件の後に呼び出され、この関数 &lt;code&gt;tearDownModule()&lt;/code&gt; 、または後 &lt;code&gt;setUpModule()&lt;/code&gt; の場合 &lt;code&gt;setUpModule()&lt;/code&gt; は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="00dac4aa5f98112430b5f2dcd53d84ccb136fadf" translate="yes" xml:space="preserve">
          <source>This function is called when the &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; attribute has been set to a value other than &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and the timeout period has passed with no requests being received. The default action for forking servers is to collect the status of any child processes that have exited, while in threading servers this method does nothing.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;属性が&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;以外の値に設定されていて、リクエストが受信されずにタイムアウト期間が経過したときに呼び出されます。サーバーをフォークする場合のデフォルトのアクションは、終了した子プロセスのステータスを収集することですが、スレッドサーバーでは、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="8ca63d1075eb1aceb700174dca580627844286b7" translate="yes" xml:space="preserve">
          <source>This function is identical to the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; function, except that the argument handling is even more complicated.</source>
          <target state="translated">この関数は、引数の処理がさらに複雑であることを除いて、&lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="58ba7af41df3064b3d3f217ed825d3dd8ed01388" translate="yes" xml:space="preserve">
          <source>This function is implemented using a watchdog thread.</source>
          <target state="translated">この関数はウォッチドッグスレッドを使用して実装されています。</target>
        </trans-unit>
        <trans-unit id="64cad07e3c93c343820394a2eee72ae7a507e0bd" translate="yes" xml:space="preserve">
          <source>This function is installed as the trace function of debugged frames. Its return value is the new trace function (in most cases, that is, itself).</source>
          <target state="translated">この関数は、デバッグされたフレームのトレース関数としてインストールされます。その戻り値は、新しいトレース関数(ほとんどの場合、それ自体)です。</target>
        </trans-unit>
        <trans-unit id="d0b78e0190c2580f2856b7455b5b0eafaf4ddb3d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To close a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">この関数は低レベルI / Oを対象としており、&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;によって返されるファイル記述子に適用する必要があります。組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;によって返された「ファイルオブジェクト」を閉じるには、その&lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="ade6f6e290e3dc96f0eb9460be14368d6afe280c" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To read a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;readline()&lt;/code&gt; methods.</source>
          <target state="translated">この関数は低レベルI / Oを対象としており、&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;によって返されるファイル記述子に適用する必要があります。組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;によって返された「ファイルオブジェクト」を読み取るには、その &lt;code&gt;read()&lt;/code&gt; &lt;code&gt;readline()&lt;/code&gt; メソッドまたはreadline（）メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="2c704116a76ce54c12e05f3b6967028eb14b6cc5" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To write a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;write()&lt;/code&gt; method.</source>
          <target state="translated">この関数は低レベルI / Oを対象としており、&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;によって返されるファイル記述子に適用する必要があります。組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;、あるいは&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;によって返された「ファイルオブジェクト」を書き込むには、その &lt;code&gt;write()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="bacd28868867d67c5d6723d7c3178c25e186f11d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、低レベルI / Oを対象としています。通常の使用のために、組み込み関数の使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を返し、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;有する &lt;code&gt;read()&lt;/code&gt; と &lt;code&gt;write()&lt;/code&gt; メソッド（および多くを）。ファイル記述子をファイルオブジェクトにラップするには、&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="649aa99d11ac4fa14cd3cd72d6032323e479b243" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この機能は、低レベルのI / Oを対象としています。通常の使用法では、組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;使用します。この関数は、 &lt;code&gt;read()&lt;/code&gt; &lt;code&gt;write()&lt;/code&gt; メソッドとwrite（）メソッド（およびその他多数）を使用して&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;を返します。ファイル記述子をファイルオブジェクトでラップするには、&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="60efcb44e54e053b402648036b9dc38b2898562c" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;ステートメントによって呼び出されます。 （インポートすることで置き換えることができ&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールとに割り当てる &lt;code&gt;builtins.__import__&lt;/code&gt; の変更のセマンティクスに順に） &lt;code&gt;import&lt;/code&gt; 声明が、これはされて&lt;strong&gt;強く&lt;/strong&gt;（参照、インポートフックを使用することは通常簡単ですと落胆&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302を&lt;/strong&gt;&lt;/a&gt;達成するために）同じ目標であり、デフォルトのインポート実装が使用されていることを前提とするコードでは問題が発生しません。直接使用&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;もの賛成で推奨され&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7f0c76df06b8f2f73d67731eb7ed6c7ceae8224" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;ステートメントによって呼び出されます。 （インポートすることで置き換えることができ&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールとに割り当てる &lt;code&gt;builtins.__import__&lt;/code&gt; の変更のセマンティクスに順に） &lt;code&gt;import&lt;/code&gt; 声明が、これはされて&lt;strong&gt;強く&lt;/strong&gt;（参照、インポートフックを使用することは通常簡単ですと落胆&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302を&lt;/strong&gt;&lt;/a&gt;達成するために）同じ目標であり、デフォルトのインポート実装が使用されていることを前提とするコードで問題が発生することはありません。&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; を&lt;/a&gt;優先して、&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;直接使用することもお勧めしません。</target>
        </trans-unit>
        <trans-unit id="51460bb18486d76dae169e7512a607a5c185a142" translate="yes" xml:space="preserve">
          <source>This function is meant to be called from a different OS thread than the one where the event loop is running. Example:</source>
          <target state="translated">この関数は、イベントループが実行されているOSのスレッドとは別のスレッドから呼び出されることを想定しています。例</target>
        </trans-unit>
        <trans-unit id="6474c1567381e3873ebbeca05d51f7ab42d23453" translate="yes" xml:space="preserve">
          <source>This function is not available on MacOS.</source>
          <target state="translated">この機能はMacOSでは利用できません。</target>
        </trans-unit>
        <trans-unit id="62d7cf1ebeba361fc0a928442d4acc718cf42922" translate="yes" xml:space="preserve">
          <source>This function is not strictly required, because any Python mechanism for creating a new class with &lt;code&gt;__annotations__&lt;/code&gt; can then apply the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; function to convert that class to a dataclass. This function is provided as a convenience. For example:</source>
          <target state="translated">&lt;code&gt;__annotations__&lt;/code&gt; で新しいクラスを作成するためのPythonメカニズムは、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;関数を適用してそのクラスをデータクラスに変換できるため、この関数は厳密には必要ありません。この機能は便宜上提供されています。例えば：</target>
        </trans-unit>
        <trans-unit id="8105687cf78676b920dca7d0135677e8cf83f7b7" translate="yes" xml:space="preserve">
          <source>This function is preferred over &lt;a href=&quot;#datetime.datetime.today&quot;&gt;&lt;code&gt;today()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt;&lt;code&gt;utcnow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#datetime.datetime.today&quot;&gt; &lt;code&gt;today()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt; &lt;code&gt;utcnow()&lt;/code&gt; &lt;/a&gt;よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="2534bb784a341d57cb3cfff1ca73e4950b0ffd8e" translate="yes" xml:space="preserve">
          <source>This function is preferred over using &lt;a href=&quot;types#types.ModuleType&quot;&gt;&lt;code&gt;types.ModuleType&lt;/code&gt;&lt;/a&gt; to create a new module as &lt;strong&gt;spec&lt;/strong&gt; is used to set as many import-controlled attributes on the module as possible.</source>
          <target state="translated">この関数は、&lt;a href=&quot;types#types.ModuleType&quot;&gt; &lt;code&gt;types.ModuleType&lt;/code&gt; &lt;/a&gt;を使用して新しいモジュールを作成するよりも優先されます。&lt;strong&gt;仕様&lt;/strong&gt;を使用して、インポート制御された属性をモジュールにできるだけ多く設定するためです。</target>
        </trans-unit>
        <trans-unit id="80d7cd1acc5c70b379682dbabb5d9e05ff3a4fdd" translate="yes" xml:space="preserve">
          <source>This function is roughly equivalent to the following code, except that the actual implementation does not build up intermediate results in memory:</source>
          <target state="translated">この関数は、実際の実装では中間結果をメモリに蓄積しないことを除けば、以下のコードとほぼ同等です。</target>
        </trans-unit>
        <trans-unit id="f913c0b361e7ba9728f0f9afaaf9d1c422afa44d" translate="yes" xml:space="preserve">
          <source>This function is semantically identical to &lt;a href=&quot;#os.unlink&quot;&gt;&lt;code&gt;unlink()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、意味的には&lt;a href=&quot;#os.unlink&quot;&gt; &lt;code&gt;unlink()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="0d2662aab731484f469e5d0941ebd213855793da" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;, with added arguments to supply the globals and locals dictionaries for the &lt;em&gt;command&lt;/em&gt; string. This routine executes:</source>
          <target state="translated">この関数は&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; に&lt;/a&gt;似ていますが、&lt;em&gt;コマンド&lt;/em&gt;文字列のグローバルおよびローカル辞書を提供する引数が追加されています。このルーチンは以下を実行します。</target>
        </trans-unit>
        <trans-unit id="fc117a48981b83bb2298193271331492a011693b" translate="yes" xml:space="preserve">
          <source>This function is similar to the cast operator in C. It returns a new instance of &lt;em&gt;type&lt;/em&gt; which points to the same memory block as &lt;em&gt;obj&lt;/em&gt;. &lt;em&gt;type&lt;/em&gt; must be a pointer type, and &lt;em&gt;obj&lt;/em&gt; must be an object that can be interpreted as a pointer.</source>
          <target state="translated">この関数は、Cのキャスト演算子に似ています&lt;em&gt;。obj&lt;/em&gt;と同じメモリブロックを指す&lt;em&gt;typeの&lt;/em&gt;新しいインスタンスを返します。&lt;em&gt;type&lt;/em&gt;はポインター型でなければならず、&lt;em&gt;obj&lt;/em&gt;はポインターとして解釈できるオブジェクトでなければなりません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29760dd338313a7538bf9a66508800e3e6ec0a67" translate="yes" xml:space="preserve">
          <source>This function is the original interface and is only kept for back compatibility. It returns a filtered version of the following.</source>
          <target state="translated">この関数はオリジナルのインターフェイスであり、後方互換性のためだけに保持されています。以下のようなフィルタリングされたバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="c21cc18b67d5b59058325f10549a9243c64acf72" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt; to process tokens generated by the &lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この関数は、&lt;a href=&quot;tokenize#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;モジュールによって生成されたトークンを処理するために&lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="f38d1e6f628d8e4e90ac779c811e7c28a0d89f12" translate="yes" xml:space="preserve">
          <source>This function is used internally by other functions (see below), but can also be useful when you want to transform an interactive Python session into a Python script.</source>
          <target state="translated">この関数は他の関数(後述)によって内部的に使用されますが、対話型のPythonセッションをPythonスクリプトに変換したい場合にも便利です。</target>
        </trans-unit>
        <trans-unit id="c5f42493be0aa8250eeba0fe74603ddafd1c1e22" translate="yes" xml:space="preserve">
          <source>This function is used to turn the capture of warnings by logging on and off.</source>
          <target state="translated">この機能を使用して、ロギングによる警告のキャプチャをオンオフにします。</target>
        </trans-unit>
        <trans-unit id="0e291635b8b9e6f792c79b608f8ce39c024f95cf" translate="yes" xml:space="preserve">
          <source>This function is useful for programs that want to emulate Python&amp;rsquo;s interpreter main loop (a.k.a. the read-eval-print loop). The tricky part is to determine when the user has entered an incomplete command that can be completed by entering more text (as opposed to a complete command or a syntax error). This function &lt;em&gt;almost&lt;/em&gt; always makes the same decision as the real interpreter main loop.</source>
          <target state="translated">この関数は、Pythonのインタープリターのメインループ（別名read-eval-printループ）をエミュレートするプログラムに役立ちます。トリッキーな部分は、ユーザーが（完全なコマンドや構文エラーではなく）追加のテキストを入力することで完了できる不完全なコマンドをいつ入力したかを判別することです。この関数は、&lt;em&gt;ほとんどの&lt;/em&gt;場合、実際のインタープリターのメインループと同じ決定を行います。</target>
        </trans-unit>
        <trans-unit id="4346431163cf39d1256a2486c282563a29187752" translate="yes" xml:space="preserve">
          <source>This function is useful when creating a gateway that wraps CGI or a CGI-like protocol such as FastCGI. Typically, servers providing such protocols will include a &lt;code&gt;HTTPS&lt;/code&gt; variable with a value of &amp;ldquo;1&amp;rdquo;, &amp;ldquo;yes&amp;rdquo;, or &amp;ldquo;on&amp;rdquo; when a request is received via SSL. So, this function returns &amp;ldquo;https&amp;rdquo; if such a value is found, and &amp;ldquo;http&amp;rdquo; otherwise.</source>
          <target state="translated">この関数は、CGIまたはFastCGIなどのCGIに類似したプロトコルをラップするゲートウェイを作成するときに役立ちます。通常、このようなプロトコルを提供するサーバーには、SSL経由で要求を受信したときに、「1」、「yes」、または「on」の値を持つ &lt;code&gt;HTTPS&lt;/code&gt; 変数が含まれます。したがって、この関数は、そのような値が見つかった場合は「https」を返し、そうでない場合は「http」を返します。</target>
        </trans-unit>
        <trans-unit id="5407416b354a3a637ec255aca17cebdd4a5f0bcb" translate="yes" xml:space="preserve">
          <source>This function is useful when generating attribute values for HTML or any SGML using the reference concrete syntax.</source>
          <target state="translated">この関数は、参照具象構文を用いてHTMLや任意のSGMLの属性値を生成する際に便利です。</target>
        </trans-unit>
        <trans-unit id="60d507fa2bc53284a2d250ec94185652719e0652" translate="yes" xml:space="preserve">
          <source>This function looks for items in &lt;em&gt;bases&lt;/em&gt; that are not instances of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, and returns a tuple where each such object that has an &lt;code&gt;__mro_entries__&lt;/code&gt; method is replaced with an unpacked result of calling this method. If a &lt;em&gt;bases&lt;/em&gt; item is an instance of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, or it doesn&amp;rsquo;t have an &lt;code&gt;__mro_entries__&lt;/code&gt; method, then it is included in the return tuple unchanged.</source>
          <target state="translated">この関数は、&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;インスタンスではない&lt;em&gt;ベース&lt;/em&gt;内のアイテムを検索し、 &lt;code&gt;__mro_entries__&lt;/code&gt; メソッドを持つそのような各オブジェクトが、このメソッドを呼び出したアンパック結果で置き換えられたタプルを返します。&lt;em&gt;bases&lt;/em&gt;アイテムが&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; の&lt;/a&gt;インスタンスである場合、または &lt;code&gt;__mro_entries__&lt;/code&gt; メソッドがない場合、アイテムは変更されずに返されるタプルに含まれます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1eb9e57decc223afc31c89f7e7f3597b5606d185" translate="yes" xml:space="preserve">
          <source>This function may open a large number of files, as the best way to determine if a file on the time zone path is a valid time zone is to read the &amp;ldquo;magic string&amp;rdquo; at the beginning.</source>
          <target state="translated">タイムゾーンパス上のファイルが有効なタイムゾーンであるかどうかを判断する最良の方法は、最初に「マジックストリング」を読み取ることであるため、この関数は多数のファイルを開く可能性があります。</target>
        </trans-unit>
        <trans-unit id="f333259d8228afee74ea63cb8cf96d3f815a21d2" translate="yes" xml:space="preserve">
          <source>This function may return invalid paths because it works a character at a time. To obtain a valid path, see &lt;a href=&quot;#os.path.commonpath&quot;&gt;&lt;code&gt;commonpath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は一度に1つの文字を処理するため、無効なパスを返す場合があります。有効なパスを取得するには、&lt;a href=&quot;#os.path.commonpath&quot;&gt; &lt;code&gt;commonpath()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a01d7176187eda18b9374489bf46391852e732ec" translate="yes" xml:space="preserve">
          <source>This function mirrors &lt;a href=&quot;#parser.isexpr&quot;&gt;&lt;code&gt;isexpr()&lt;/code&gt;&lt;/a&gt; in that it reports whether an ST object represents an &lt;code&gt;'exec'&lt;/code&gt; form, commonly known as a &amp;ldquo;suite.&amp;rdquo; It is not safe to assume that this function is equivalent to &lt;code&gt;not isexpr(st)&lt;/code&gt;, as additional syntactic fragments may be supported in the future.</source>
          <target state="translated">この関数は、STオブジェクトが一般に「スイート」と呼ばれる &lt;code&gt;'exec'&lt;/code&gt; 形式を表すかどうかを報告するという点で&lt;a href=&quot;#parser.isexpr&quot;&gt; &lt;code&gt;isexpr()&lt;/code&gt; &lt;/a&gt;をミラーリングします。追加の構文フラグメントが将来サポートされる可能性があるため、この関数が &lt;code&gt;not isexpr(st)&lt;/code&gt; と同等であると想定するのは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="c38aaa319da4fa690e529cb8f63297f25c44ad44" translate="yes" xml:space="preserve">
          <source>This function must do all the work required to service a request. The default implementation does nothing. Several instance attributes are available to it; the request is available as &lt;code&gt;self.request&lt;/code&gt;; the client address as &lt;code&gt;self.client_address&lt;/code&gt;; and the server instance as &lt;code&gt;self.server&lt;/code&gt;, in case it needs access to per-server information.</source>
          <target state="translated">この関数は、要求を処理するために必要なすべての作業を実行する必要があります。デフォルトの実装では何も行われません。いくつかのインスタンス属性を利用できます。リクエストは &lt;code&gt;self.request&lt;/code&gt; として利用できます。 &lt;code&gt;self.client_address&lt;/code&gt; としてのクライアントアドレス。サーバーインスタンスは、サーバーごとの情報にアクセスする必要がある場合に備えて、 &lt;code&gt;self.server&lt;/code&gt; として使用します。</target>
        </trans-unit>
        <trans-unit id="1d0fe82f383fe8455cd84dddbd167e438d74db76" translate="yes" xml:space="preserve">
          <source>This function must not be used for the replacement string in &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.subn&quot;&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/a&gt;, only backslashes should be escaped. For example:</source>
          <target state="translated">この関数を&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#re.subn&quot;&gt; &lt;code&gt;subn()&lt;/code&gt; &lt;/a&gt;の置換文字列に使用しないでください。バックスラッシュのみをエスケープする必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="50da3b2b1a3e4d5d04267b56a098ab7684af854a" translate="yes" xml:space="preserve">
          <source>This function normally follows symlinks; to stat a symlink add the argument &lt;code&gt;follow_symlinks=False&lt;/code&gt;, or use &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は通常、シンボリックリンクをたどります。シンボリックリンクを統計するには、引数 &lt;code&gt;follow_symlinks=False&lt;/code&gt; を追加するか、&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="21aa14b61079b0b0977f0bf126fc678541935681" translate="yes" xml:space="preserve">
          <source>This function only includes canonical zone names and does not include &amp;ldquo;special&amp;rdquo; zones such as those under the &lt;code&gt;posix/&lt;/code&gt; and &lt;code&gt;right/&lt;/code&gt; directories, or the &lt;code&gt;posixrules&lt;/code&gt; zone.</source>
          <target state="translated">この関数には、正規のゾーン名のみが含まれ、 &lt;code&gt;posix/&lt;/code&gt; および &lt;code&gt;right/&lt;/code&gt; ディレクトリの下にあるような「特別な」ゾーンや &lt;code&gt;posixrules&lt;/code&gt; ゾーンは含まれません。</target>
        </trans-unit>
        <trans-unit id="61fc230cd44595c912517a969faf5b47d610995f" translate="yes" xml:space="preserve">
          <source>This function only modifies the recorded peak size, and does not modify or clear any traces, unlike &lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt;&lt;code&gt;clear_traces()&lt;/code&gt;&lt;/a&gt;. Snapshots taken with &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; before a call to &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt; can be meaningfully compared to snapshots taken after the call.</source>
          <target state="translated">この関数は、記録されたピークサイズのみを変更し、&lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt; &lt;code&gt;clear_traces()&lt;/code&gt; &lt;/a&gt;とは異なり、トレースを変更またはクリアしません。で撮影されたスナップショット&lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt;への呼び出し前&lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; は&lt;/a&gt;有意呼び出し後に採取したスナップショットと比較することができます。</target>
        </trans-unit>
        <trans-unit id="d52d4a6b72fa52058f61845c53226f55f2864d31" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that data is spooled in memory until the file size exceeds &lt;em&gt;max_size&lt;/em&gt;, or until the file&amp;rsquo;s &lt;code&gt;fileno()&lt;/code&gt; method is called, at which point the contents are written to disk and operation proceeds as with &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、正確として動作&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; は&lt;/a&gt;、データがファイルサイズが超えるまでメモリにスプールされている以外はない&lt;em&gt;MAX_SIZEを&lt;/em&gt;、またはファイルのまで &lt;code&gt;fileno()&lt;/code&gt; メソッドが呼び出され、コンテンツを持つようにディスクと動作進行に書き込まれる時点で&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b28cf0adbd47beaf5136380c661ee70913d0243" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">この関数は&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; と&lt;/a&gt;まったく同じように動作しますが、ファイルがファイルシステムで表示される名前を持つことが保証されています（UNIXでは、ディレクトリエントリはリンク解除されません）。その名前は、返されたファイルのようなオブジェクトの &lt;code&gt;name&lt;/code&gt; 属性から取得できます。名前を使用してファイルを再度開くことができるかどうか、名前付きの一時ファイルがまだ開いているかどうかは、プラットフォームによって異なります（UNIXではこのように使用できますが、Windows NT以降では使用できません）。場合は&lt;em&gt;、削除が&lt;/em&gt; true（デフォルト）で、ファイルは、すぐにそれが閉じられると削除されます。返されるオブジェクトは常にファイルのようなオブジェクトであり、その &lt;code&gt;file&lt;/code&gt; 属性は基本となる真のファイルオブジェクトです。このファイルのようなオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;で使用できます ステートメント、通常のファイルと同じです。</target>
        </trans-unit>
        <trans-unit id="2f780a62bf02c136b6c254f307fd90d36186bafa" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">この関数は、ファイルがファイルシステムで表示される名前を持つことが保証されていることを除いて、&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; と&lt;/a&gt;まったく同じように動作します（Unixでは、ディレクトリエントリはリンク解除されません）。その名前は、返されたファイルのようなオブジェクトの &lt;code&gt;name&lt;/code&gt; 属性から取得できます。名前付き一時ファイルがまだ開いているときに、その名前を使用してファイルをもう一度開くことができるかどうかは、プラットフォームによって異なります（Unixで使用できますが、Windows NT以降では使用できません）。場合は&lt;em&gt;、削除が&lt;/em&gt;true（デフォルト）で、ファイルは、すぐにそれが閉じられると削除されます。返されるオブジェクトは常にファイルのようなオブジェクトであり、その &lt;code&gt;file&lt;/code&gt; 属性は基になる真のファイルオブジェクトです。このファイルライクオブジェクトがで使用することができ&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 通常のファイルと同じように、ステートメント。</target>
        </trans-unit>
        <trans-unit id="8a66c48b929d610e3db559cb30cbb31ccc42d7ac" translate="yes" xml:space="preserve">
          <source>This function passes &lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;security_attributes&lt;/em&gt; to the API.</source>
          <target state="translated">この関数は、&lt;em&gt;security_attributesの&lt;/em&gt; &lt;code&gt;NULL&lt;/code&gt; をAPIに渡します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fde6b92d954d144ab8d68479a8fd1eafae433701" translate="yes" xml:space="preserve">
          <source>This function performs a call to &lt;a href=&quot;#multiprocessing.get_logger&quot;&gt;&lt;code&gt;get_logger()&lt;/code&gt;&lt;/a&gt; but in addition to returning the logger created by get_logger, it adds a handler which sends output to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; using format &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#multiprocessing.get_logger&quot;&gt; &lt;code&gt;get_logger()&lt;/code&gt; &lt;/a&gt;への呼び出しを実行しますが、get_loggerによって作成されたロガーを返すことに加えて、フォーマット &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt; を使用して&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; に出力&lt;/a&gt;を送信するハンドラーを追加します）s '。</target>
        </trans-unit>
        <trans-unit id="d8bfadefc08d236f47565d11a8850b9788ddd116" translate="yes" xml:space="preserve">
          <source>This function prints out a given traceback and exception to &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="translated">この関数は、指定されたトレースバックと例外を &lt;code&gt;sys.stderr&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="ce4c56e9ebaef2be95f933821a82b6250096cf20" translate="yes" xml:space="preserve">
          <source>This function raises &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; if the compiled source is invalid, and &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the source contains null bytes.</source>
          <target state="translated">この関数は、コンパイルされたソースが無効な場合は&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;を発生させ、ソースにnullバイトが含まれる場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させます。</target>
        </trans-unit>
        <trans-unit id="8387f182301769ffb4d541325ec84e9397a2e7d8" translate="yes" xml:space="preserve">
          <source>This function raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt;. The &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; arguments may have been modified or inferred from the original call.</source>
          <target state="translated">この関数は、引数 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;mode&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; で &lt;code&gt;open&lt;/code&gt; ている&lt;a href=&quot;sys#auditing&quot;&gt;監査イベントを発生&lt;/a&gt;させます。 &lt;code&gt;mode&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 引数が変更されたり、元の呼び出しから推測されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="78e94a989e8572d53e6ff1d156dde94e63d8cdf5" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects to decode. Therefore it does not support text-to-text encoders such as &lt;code&gt;rot_13&lt;/code&gt;, although &lt;code&gt;rot_13&lt;/code&gt; may be used equivalently with &lt;a href=&quot;#codecs.iterencode&quot;&gt;&lt;code&gt;iterencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数では、コーデックが&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れてデコードする必要があります。したがって、そのようなテキストツーテキストエンコーダサポートしていない &lt;code&gt;rot_13&lt;/code&gt; をものの、 &lt;code&gt;rot_13&lt;/code&gt; はと同等に使用することができる&lt;a href=&quot;#codecs.iterencode&quot;&gt; &lt;code&gt;iterencode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed7e6a53326800e0c99a24c7943af3979b042021" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept text &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects to encode. Therefore it does not support bytes-to-bytes encoders such as &lt;code&gt;base64_codec&lt;/code&gt;.</source>
          <target state="translated">この関数では、コーデックがエンコードするテキスト&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れる必要があります。したがって、 &lt;code&gt;base64_codec&lt;/code&gt; などのバイトツーバイトエンコーダーはサポートしていません。</target>
        </trans-unit>
        <trans-unit id="ca7b19d20b3fc70fd4a06f6eaf9f2609ffde0a21" translate="yes" xml:space="preserve">
          <source>This function resizes the internal memory buffer of &lt;em&gt;obj&lt;/em&gt;, which must be an instance of a ctypes type. It is not possible to make the buffer smaller than the native size of the objects type, as given by &lt;code&gt;sizeof(type(obj))&lt;/code&gt;, but it is possible to enlarge the buffer.</source>
          <target state="translated">この関数は、ctypes型のインスタンスでなければならない&lt;em&gt;objの&lt;/em&gt;内部メモリバッファーのサイズを変更します。 &lt;code&gt;sizeof(type(obj))&lt;/code&gt; で指定されるように、バッファをオブジェクトタイプのネイティブサイズより小さくすることはできませんが、バッファを拡大することは可能です。</target>
        </trans-unit>
        <trans-unit id="a7666a23252f123adf92ecbb5fd3b070801019d8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;em&gt;func&lt;/em&gt;, which makes it possible to use it as a decorator.</source>
          <target state="translated">この関数は&lt;em&gt;funcを&lt;/em&gt;返すため、これをデコレーターとして使用できます。</target>
        </trans-unit>
        <trans-unit id="7db7474465da4003217948e1553874c4a2c0f3b3" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;code&gt;typing.TextIO&lt;/code&gt; instance, a text I/O stream open for reading.</source>
          <target state="translated">この関数は、 &lt;code&gt;typing.TextIO&lt;/code&gt; インスタンス、読み取り用に開いているテキストI / Oストリームを返します。</target>
        </trans-unit>
        <trans-unit id="11586ef5462bc5cc9bafb350e47c109a73f45482" translate="yes" xml:space="preserve">
          <source>This function returns a list of &lt;code&gt;(decoded_string, charset)&lt;/code&gt; pairs containing each of the decoded parts of the header. &lt;em&gt;charset&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; for non-encoded parts of the header, otherwise a lower case string containing the name of the character set specified in the encoded string.</source>
          <target state="translated">この関数は、ヘッダーのデコードされた各部分を含む &lt;code&gt;(decoded_string, charset)&lt;/code&gt; ペアのリストを返します。ヘッダーのエンコードされていない部分の&lt;em&gt;charset&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; です。それ以外の場合は、エンコードされた文字列で指定された文字セットの名前を含む小文字の文字列です。</target>
        </trans-unit>
        <trans-unit id="c6b5a760d5b2d7a0cdc6a46768cb3ddd798abf48" translate="yes" xml:space="preserve">
          <source>This function returns a tuple of three values that give information about the exception that is currently being handled. The information returned is specific both to the current thread and to the current stack frame. If the current stack frame is not handling an exception, the information is taken from the calling stack frame, or its caller, and so on until a stack frame is found that is handling an exception. Here, &amp;ldquo;handling an exception&amp;rdquo; is defined as &amp;ldquo;executing an except clause.&amp;rdquo; For any stack frame, only information about the exception being currently handled is accessible.</source>
          <target state="translated">この関数は、現在処理されている例外に関する情報を提供する3つの値のタプルを返します。返される情報は、現在のスレッドと現在のスタックフレームの両方に固有です。現在のスタックフレームが例外を処理していない場合、情報は呼び出し元のスタックフレームまたはその呼び出し元から取得され、例外を処理しているスタックフレームが見つかるまで続きます。ここで、「例外の処理」は「except節の実行」と定義されています。どのスタックフレームでも、現在処理されている例外に関する情報のみにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8119a5093d30b11cd9b05ae9690966f552c52002" translate="yes" xml:space="preserve">
          <source>This function returns an instance of &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; that holds the header fields, but no payload (the same as &lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt;&lt;code&gt;HTTPResponse.msg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt;&lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt;&lt;/a&gt;). After returning, the file pointer &lt;em&gt;fp&lt;/em&gt; is ready to read the HTTP body.</source>
          <target state="translated">この関数は、ヘッダーフィールドを保持し、ペイロードは保持しない &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; のインスタンスを返します（&lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt; &lt;code&gt;HTTPResponse.msg&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt; &lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt; &lt;/a&gt;と同じ）。戻った後、ファイルポインター&lt;em&gt;fp&lt;/em&gt;はHTTP本文を読み取る準備ができています。</target>
        </trans-unit>
        <trans-unit id="9310ca486b065ef93bb150015e5c6c85fc6241cc" translate="yes" xml:space="preserve">
          <source>This function returns an object that describes the resources consumed by either the current process or its children, as specified by the &lt;em&gt;who&lt;/em&gt; parameter. The &lt;em&gt;who&lt;/em&gt; parameter should be specified using one of the &lt;code&gt;RUSAGE_*&lt;/code&gt; constants described below.</source>
          <target state="translated">この関数は、&lt;em&gt;who&lt;/em&gt;パラメータで指定された、現在のプロセスまたはその子によって消費されるリソースを説明するオブジェクトを返します。&lt;em&gt;誰&lt;/em&gt;パラメータは、のいずれかを使用して指定する必要があります &lt;code&gt;RUSAGE_*&lt;/code&gt; 定数は、以下に説明します。</target>
        </trans-unit>
        <trans-unit id="3c98f1f0078fc7e488538849f2fe95f019b74e6e" translate="yes" xml:space="preserve">
          <source>This function returns names of the second form from the list, &lt;code&gt;ethernet_32770&lt;/code&gt; in this example case.</source>
          <target state="translated">この関数は、リストから2番目の形式の名前（この例では &lt;code&gt;ethernet_32770&lt;/code&gt; )を返します。</target>
        </trans-unit>
        <trans-unit id="3389bceb4f4b217616df6b1450bc7411416e8c32" translate="yes" xml:space="preserve">
          <source>This function returns random bytes from an OS-specific randomness source. The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation.</source>
          <target state="translated">この関数は、OS固有のランダム性ソースからランダムなバイトを返します。返されるデータは、暗号化アプリケーションにとって十分に予測不可能なものでなければなりませんが、正確な品質はOSの実装に依存します。</target>
        </trans-unit>
        <trans-unit id="c1b5c9eb8a860c921596d08ec2b539e7ca036ef7" translate="yes" xml:space="preserve">
          <source>This function returns the C string starting at memory address &lt;em&gt;address&lt;/em&gt; as a bytes object. If size is specified, it is used as size, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">この関数は、メモリアドレス&lt;em&gt;address&lt;/em&gt;から始まるC文字列をバイトオブジェクトとして返します。サイズが指定されている場合は、サイズとして使用されます。それ以外の場合、文字列はゼロで終了すると見なされます。</target>
        </trans-unit>
        <trans-unit id="0275e415bdf66c562ae0a9793115bf8d4692dd28" translate="yes" xml:space="preserve">
          <source>This function returns the wide character string starting at memory address &lt;em&gt;address&lt;/em&gt; as a string. If &lt;em&gt;size&lt;/em&gt; is specified, it is used as the number of characters of the string, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">この関数は、メモリアドレス&lt;em&gt;address&lt;/em&gt;から始まるワイド文字列を文字列として返します。&lt;em&gt;size&lt;/em&gt;が指定されている場合、それは文字列の文字数として使用されます。それ以外の場合、文字列はゼロで終了すると見なされます。</target>
        </trans-unit>
        <trans-unit id="c26b6d13d8eeee602e191f75458ddf599459f7ad" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop and &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;.</source>
          <target state="translated">この関数は、渡されたコルーチンを実行し、asyncioイベントループの管理と&lt;em&gt;非同期ジェネレーターのファイナライズを行います&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="41a0b48769cb7e209f89511c2f68696cadb787be" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop, &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;, and closing the threadpool.</source>
          <target state="translated">この関数は、渡されたコルーチンを実行し、asyncioイベントループの管理、&lt;em&gt;非同期ジェネレーターのファイナライズ&lt;/em&gt;、およびスレッドプールのクローズを行います。</target>
        </trans-unit>
        <trans-unit id="4771703fc1ce559310da22e7cd6065d893c64e7e" translate="yes" xml:space="preserve">
          <source>This function securely creates a temporary directory using the same rules as &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt;. The resulting object can be used as a context manager (see &lt;a href=&quot;#tempfile-examples&quot;&gt;Examples&lt;/a&gt;). On completion of the context or destruction of the temporary directory object the newly created temporary directory and all its contents are removed from the filesystem.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt;と同じルールを使用して一時ディレクトリを安全に作成します。結果のオブジェクトは、コンテキストマネージャとして使用できます（&lt;a href=&quot;#tempfile-examples&quot;&gt;例を&lt;/a&gt;参照）。コンテキストが完了するか、一時ディレクトリオブジェクトが破棄されると、新しく作成された一時ディレクトリとそのすべてのコンテンツがファイルシステムから削除されます。</target>
        </trans-unit>
        <trans-unit id="a3d02be868af88937c3058959c00f7f17a0f84b0" translate="yes" xml:space="preserve">
          <source>This function should be called from the main thread before other threads are started. In versions of Python prior to 2.7.1 and 3.2, if this function is called from multiple threads, it is possible (in rare circumstances) that a handler will be added to the root logger more than once, leading to unexpected results such as messages being duplicated in the log.</source>
          <target state="translated">この関数は、他のスレッドが開始される前にメインスレッドから呼び出されるべきです。Python の 2.7.1 および 3.2 より前のバージョンでは、この関数が複数のスレッドから呼ばれた場合、(まれな状況ではありますが)複数回ルートロガーにハンドラが追加される可能性があり、メッセージがログに重複するなどの予期せぬ結果につながります。</target>
        </trans-unit>
        <trans-unit id="30c97aeaa35ec532c2b20093c15a7ccbd689f6e4" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFEXITED&quot;&gt;&lt;code&gt;WIFEXITED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#os.WIFEXITED&quot;&gt; &lt;code&gt;WIFEXITED()&lt;/code&gt; &lt;/a&gt;がtrueの場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d34602c9a05f6fd43a9c201f414237f00fe689fd" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt;&lt;code&gt;WIFSIGNALED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#os.WIFSIGNALED&quot;&gt; &lt;code&gt;WIFSIGNALED()&lt;/code&gt; &lt;/a&gt;がtrueの場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="55eee6614b9261ec463003cc0cb6c34fd7aab34a" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt;&lt;code&gt;WIFSTOPPED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">この関数は、&lt;a href=&quot;#os.WIFSTOPPED&quot;&gt; &lt;code&gt;WIFSTOPPED()&lt;/code&gt; &lt;/a&gt;がtrueの場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9d20e60dd1d63a521945c30323e6b6bf138f6832" translate="yes" xml:space="preserve">
          <source>This function should be used for internal and specialized purposes only.</source>
          <target state="translated">この機能は、内部および専門的な目的にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="749a08b5be8d75cfdf7f3f1e09a35adb78c01024" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この関数は、Pythonコードの動的実行をサポートします。&lt;em&gt;オブジェクト&lt;/em&gt;は文字列またはコードオブジェクトである必要があります。文字列の場合、その文字列は一連のPythonステートメントとして解析され、次に実行されます（構文エラーが発生しない限り）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;コードオブジェクトの場合は、単純に実行されます。すべての場合において、実行されたコードはファイル入力として有効であることが期待されます（リファレンスマニュアルの「ファイル入力」のセクションを参照）。&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;文は、&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;関数に渡されたコードのコンテキスト内であっても、関数定義の外では使用できないことに注意してください。戻り値は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b64e07fc9d486949c7572f80e56b02d2cf9c258e" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この関数は、Pythonコードの動的実行をサポートします。&lt;em&gt;オブジェクト&lt;/em&gt;は、文字列またはコードオブジェクトのいずれかである必要があります。文字列の場合、文字列はPythonステートメントのスイートとして解析され、実行されます（構文エラーが発生しない限り）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;コードオブジェクトの場合は、単純に実行されます。いずれの場合も、実行されるコードはファイル入力として有効であることが期待されます（リファレンスマニュアルの「ファイル入力」のセクションを参照）。&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;ステートメントと&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;ステートメントは、&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;関数に渡されるコードのコンテキスト内であっても、関数定義の外部では使用できないことに注意してください。戻り値は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="086ca74667d6bc1899c60ca7f2435203fff0e70a" translate="yes" xml:space="preserve">
          <source>This function takes a single argument that can be passed to the &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function, and an optional file name. In all cases this routine executes:</source>
          <target state="translated">この関数は、&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;関数に渡すことができる単一の引数と、オプションのファイル名を取ります。すべての場合において、このルーチンは実行されます：</target>
        </trans-unit>
        <trans-unit id="a8b457aa45063f9aaf0a8c9f77a5b594016e5868" translate="yes" xml:space="preserve">
          <source>This function takes an XML data string (&lt;em&gt;xml_data&lt;/em&gt;) or a file path or file-like object (&lt;em&gt;from_file&lt;/em&gt;) as input, converts it to the canonical form, and writes it out using the &lt;em&gt;out&lt;/em&gt; file(-like) object, if provided, or returns it as a text string if not. The output file receives text, not bytes. It should therefore be opened in text mode with &lt;code&gt;utf-8&lt;/code&gt; encoding.</source>
          <target state="translated">この関数は、XMLデータ文字列（&lt;em&gt;xml_data&lt;/em&gt;）またはファイルパスまたはファイル類似オブジェクト（&lt;em&gt;from_file&lt;/em&gt;）を入力として受け取り、それを標準形式に変換し、提供さ&lt;em&gt;れ&lt;/em&gt;ている場合は&lt;em&gt;out&lt;/em&gt;ファイル（類似）オブジェクトを使用し&lt;em&gt;て&lt;/em&gt;&lt;em&gt;書き出し&lt;/em&gt;ます。そうでない場合は、テキスト文字列として返します。出力ファイルは、バイトではなくテキストを受け取ります。したがって、 &lt;code&gt;utf-8&lt;/code&gt; エンコーディングのテキストモードで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="00c9ccc2e6efc7cdd2787a047411daf9d2586338" translate="yes" xml:space="preserve">
          <source>This function takes an input source and an optional base URL and returns a fully resolved &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object ready for reading. The input source can be given as a string, a file-like object, or an &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object; parsers will use this function to implement the polymorphic &lt;em&gt;source&lt;/em&gt; argument to their &lt;code&gt;parse()&lt;/code&gt; method.</source>
          <target state="translated">この関数は、入力ソースとオプションのベースURLを受け取り、完全に解決された&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。入力ソースは、文字列、ファイルのようなオブジェクト、または&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;オブジェクトとして指定できます。パーサーはこの関数を使用して、 &lt;code&gt;parse()&lt;/code&gt; メソッドに多態的な&lt;em&gt;ソース&lt;/em&gt;引数を実装します。</target>
        </trans-unit>
        <trans-unit id="ed291263129461634749d085a422476c646a04fe" translate="yes" xml:space="preserve">
          <source>This function takes one of those sequence of pairs and returns a &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instance. Optional &lt;em&gt;maxlinelen&lt;/em&gt;, &lt;em&gt;header_name&lt;/em&gt;, and &lt;em&gt;continuation_ws&lt;/em&gt; are as in the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">この関数は、これらのペアのシーケンスの1つを取り、&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスを返します。オプションの&lt;em&gt;maxlinelen&lt;/em&gt;、&lt;em&gt;header_name&lt;/em&gt;、および&lt;em&gt;continuation_ws&lt;/em&gt;は、&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;コンストラクターと同じです。</target>
        </trans-unit>
        <trans-unit id="aaefda6e8f08981b1040b46ed1a5b3313e13419a" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;関数を、ジェネレーターベースのコルーチンを返す&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;コルーチン&lt;/a&gt;関数に変換します。ジェネレータベースのコルーチンは、引き続き&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;ジェネレータイテレータ&lt;/a&gt;ですが、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;オブジェクトと&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;見なされ、待機でき&lt;/a&gt;ます。ただし、必ずしも&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;メソッドを実装するとは限りません。</target>
        </trans-unit>
        <trans-unit id="44261da948aa68769f30a01b8aebf1bfc3369b14" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">この関数は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;関数を、ジェネレーターベースのコルーチンを返す&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;コルーチン&lt;/a&gt;関数に変換します。ジェネレーターベースのコルーチンは依然として&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;ジェネレーターイテレーター&lt;/a&gt;ですが、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;オブジェクトと&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;見なされ、待機可能&lt;/a&gt;です。ただし、必ずしも&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;メソッドを実装しているとは限りません。</target>
        </trans-unit>
        <trans-unit id="dec68208c32ce4bef49692aaae7babc6b72520b3" translate="yes" xml:space="preserve">
          <source>This function uses a cache for past comparisons and the results, with cache entries invalidated if the &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; information for the file changes. The entire cache may be cleared using &lt;a href=&quot;#filecmp.clear_cache&quot;&gt;&lt;code&gt;clear_cache()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、過去の比較と結果にキャッシュを使用し、ファイルの&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;情報が変更されるとキャッシュエントリが無効になります。キャッシュ全体は、&lt;a href=&quot;#filecmp.clear_cache&quot;&gt; &lt;code&gt;clear_cache()&lt;/code&gt; &lt;/a&gt;を使用してクリアできます。</target>
        </trans-unit>
        <trans-unit id="67621df8c29ab36ef48a10c6d3a54a11a295362f" translate="yes" xml:space="preserve">
          <source>This function uses a user-configurable function to convert the creation time to a tuple. By default, &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; is used; to change this for a particular formatter instance, set the &lt;code&gt;converter&lt;/code&gt; attribute to a function with the same signature as &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt;. To change it for all formatters, for example if you want all logging times to be shown in GMT, set the &lt;code&gt;converter&lt;/code&gt; attribute in the &lt;code&gt;Formatter&lt;/code&gt; class.</source>
          <target state="translated">この関数は、ユーザーが構成可能な関数を使用して、作成時間をタプルに変換します。デフォルトでは、&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;が使用されます。特定のフォーマッターインスタンスに対してこれを変更するには、 &lt;code&gt;converter&lt;/code&gt; 属性を&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;と同じシグネチャーを持つ関数に設定します。たとえば、すべてのロギング時間をGMTで表示したい場合など、すべてのフォーマッターでこれを変更するには、 &lt;code&gt;Formatter&lt;/code&gt; クラスで &lt;code&gt;converter&lt;/code&gt; 属性を設定します。</target>
        </trans-unit>
        <trans-unit id="c7d4a1b7043855edd960d108a4b03c2c7f26f78e" translate="yes" xml:space="preserve">
          <source>This function uses the same search technique as &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;と同じ検索手法を使用します。</target>
        </trans-unit>
        <trans-unit id="dcc0f796b37da4661e9e567b1d70beab1a789887" translate="yes" xml:space="preserve">
          <source>This function was inadvertently marked as deprecated in Python 3.5.</source>
          <target state="translated">この関数は、誤って Python 3.5 で非推奨とマークされていました。</target>
        </trans-unit>
        <trans-unit id="fde76138b876f19a331c04c16e7173bc40335dae" translate="yes" xml:space="preserve">
          <source>This function will raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; if the named module cannot be imported.</source>
          <target state="translated">この関数は、指定されたモジュールをインポートできない場合に&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="695e7aa3774a50e5d41215db0f861e34960b2541" translate="yes" xml:space="preserve">
          <source>This function will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid &lt;em&gt;who&lt;/em&gt; parameter is specified. It may also raise &lt;a href=&quot;#resource.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; exception in unusual circumstances.</source>
          <target state="translated">無効な&lt;em&gt;who&lt;/em&gt;パラメータが指定され&lt;em&gt;た&lt;/em&gt;場合、この関数は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を発生&lt;/a&gt;させます。また、異常な状況で&lt;a href=&quot;#resource.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;例外が発生する場合もあります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45f82931ab2a0fc2142776ea98ebb1c0e233a5e9" translate="yes" xml:space="preserve">
          <source>This function will raise the first exception raised by any hook. In general, these errors should not be handled and should terminate the process as quickly as possible.</source>
          <target state="translated">この関数は、任意のフックによって発生した最初の例外を発生させます。一般的に、これらのエラーは処理すべきではなく、できるだけ早くプロセスを終了させるべきです。</target>
        </trans-unit>
        <trans-unit id="d2f4a44ea4f4781c9ded6135bf54221ca4868d84" translate="yes" xml:space="preserve">
          <source>This function works best with Mark Hammond&amp;rsquo;s &lt;code&gt;win32all&lt;/code&gt; package installed, but also on Python 2.3 and later (support for this was added in Python 2.6). It obviously only runs on Win32 compatible platforms.</source>
          <target state="translated">この関数は、Mark Hammondの &lt;code&gt;win32all&lt;/code&gt; パッケージがインストールされている場合に最適に機能しますが、Python 2.3以降でもサポートされます（このサポートはPython 2.6で追加されました）。明らかにWin32互換のプラットフォームでのみ動作します。</target>
        </trans-unit>
        <trans-unit id="cdfe78946dbc3eb876b9e7ddc8990bd5dab0055a" translate="yes" xml:space="preserve">
          <source>This function works for ranges spanning a century change.</source>
          <target state="translated">この関数は、100年単位の変化にまたがる範囲で動作します。</target>
        </trans-unit>
        <trans-unit id="6d4a6aeb5830677c42af3b67d316903d7b69a1cf" translate="yes" xml:space="preserve">
          <source>This function works like &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt;, except that GNU style scanning mode is used by default. This means that option and non-option arguments may be intermixed. The &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt; function stops processing options as soon as a non-option argument is encountered.</source>
          <target state="translated">この関数は、デフォルトでGNUスタイルのスキャンモードが使用されることを除いて、&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt;と同様に機能します。これは、オプション引数と非オプション引数が混在する可能性があることを意味します。&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt;関数は、非オプションの引数に遭遇するとすぐにオプションの処理を停止します。</target>
        </trans-unit>
        <trans-unit id="c53c65a872781ee36da0b6344b195ca8579a2152" translate="yes" xml:space="preserve">
          <source>This function wraps the Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; function; see the Microsoft documentation on &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; for more information about these fields.</source>
          <target state="translated">この関数は、Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; 関数をラップします。これらのフィールドの詳細については、 &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; に関するMicrosoftのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9fa1f0ee315ee71ef09519d3983d61008b818bf1" translate="yes" xml:space="preserve">
          <source>This functionality can be used to inject your own values into a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; at creation time. You can use the following pattern:</source>
          <target state="translated">この機能を使用して、作成時に独自の値を&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;に挿入できます。次のパターンを使用できます。</target>
        </trans-unit>
        <trans-unit id="f0ca610375353cdc0d5c751741d7a392b2aded01" translate="yes" xml:space="preserve">
          <source>This functionality is provisional and may deviate from the usual version semantics of the standard library.</source>
          <target state="translated">この機能は暫定的なものであり、標準ライブラリの通常のバージョンセマンティクスから逸脱している可能性があります。</target>
        </trans-unit>
        <trans-unit id="014671f13f1d15f016c7f3185f6694055488cde2" translate="yes" xml:space="preserve">
          <source>This functionality is used in numerous places in the standard library (see &lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915&lt;/a&gt;) - and equivalent functionality is also in widely used third-party packages such as setuptools, Django and Pyramid.</source>
          <target state="translated">この機能は、標準ライブラリのさまざまな場所で使用されています（&lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915を&lt;/a&gt;参照）。同等の機能は、setuptools、Django、Pyramidなどの広く使用されているサードパーティパッケージでも使用されています。</target>
        </trans-unit>
        <trans-unit id="f325c661123592c2ffbf04844b8b46e0e85687b6" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">このジェネレーター関数は、コードオブジェクト&lt;em&gt;コード&lt;/em&gt;の &lt;code&gt;co_firstlineno&lt;/code&gt; および &lt;code&gt;co_lnotab&lt;/code&gt; 属性を使用して、ソースコードの行の始まりであるオフセットを見つけます。それらは &lt;code&gt;(offset, lineno)&lt;/code&gt; ペアとして生成されます。 &lt;code&gt;co_lnotab&lt;/code&gt; 形式とそのデコード方法については、&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;Objects / lnotab_notes.txt&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0be55414e275a4a1c5dd59a5735b9e7e483fc983" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">このジェネレータ関数は使用しています &lt;code&gt;co_firstlineno&lt;/code&gt; と &lt;code&gt;co_lnotab&lt;/code&gt; コードオブジェクトの属性&lt;em&gt;コードを&lt;/em&gt;ソースコードの行を開始しているオフセットを見つけること。それらは &lt;code&gt;(offset, lineno)&lt;/code&gt; ペアとして生成されます。 &lt;code&gt;co_lnotab&lt;/code&gt; 形式とそのデコード方法については、&lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;Objects /lnotab_notes.txt&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="31e7ec1a6118bb6f4c7d19cb31c4eb16dbcf0646" translate="yes" xml:space="preserve">
          <source>This gives the same ordering as a series of &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; calls starting with the last mapping:</source>
          <target state="translated">これにより、最後のマッピングから始まる一連の&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;呼び出しと同じ順序になります。</target>
        </trans-unit>
        <trans-unit id="358cfff4da4236e735a011c08d723d2e34737515" translate="yes" xml:space="preserve">
          <source>This handler is not appropriate for use under Windows, because under Windows open log files cannot be moved or renamed - logging opens the files with exclusive locks - and so there is no need for such a handler. Furthermore, &lt;em&gt;ST_INO&lt;/em&gt; is not supported under Windows; &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; always returns zero for this value.</source>
          <target state="translated">このハンドラーは、Windowsでの使用には適していません。Windowsではログファイルを移動したり名前を変更したりできないためです。ロギングではファイルが排他ロックで開かれるため、このようなハンドラーは必要ありません。さらに、&lt;em&gt;ST_INO&lt;/em&gt;はWindowsではサポートされていません。&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;は、この値に対して常にゼロを返します。</target>
        </trans-unit>
        <trans-unit id="d2e794ef0fce7d4a030d7833706ed98762c476d0" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. The situation is similar to that with &lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt;. The value is a string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">これは、ノードタイプごとに異なる意味を持ちます。詳細については、DOM仕様を参照してください。この状況は、&lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt; &lt;code&gt;nodeName&lt;/code&gt; &lt;/a&gt;の場合と似ています。値は文字列または &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e7cbbcfa82c4924ad5e9ced671d2f1dd378b2b19" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. You can always get the information you would get here from another property such as the &lt;code&gt;tagName&lt;/code&gt; property for elements or the &lt;code&gt;name&lt;/code&gt; property for attributes. For all node types, the value of this attribute will be either a string or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">これは、ノードタイプごとに異なる意味を持ちます。詳細については、DOM仕様を参照してください。ここで取得する情報は、要素の &lt;code&gt;tagName&lt;/code&gt; プロパティや属性の &lt;code&gt;name&lt;/code&gt; プロパティなど、別のプロパティからいつでも取得できます。すべてのノードタイプで、この属性の値は文字列または &lt;code&gt;None&lt;/code&gt; になります。これは読み取り専用属性です。</target>
        </trans-unit>
        <trans-unit id="d49f6a32c691ba4c1b6204e2157adf71d435017f" translate="yes" xml:space="preserve">
          <source>This has implications both for recursive objects and object sharing. Recursive objects are objects that contain references to themselves. These are not handled by marshal, and in fact, attempting to marshal recursive objects will crash your Python interpreter. Object sharing happens when there are multiple references to the same object in different places in the object hierarchy being serialized. &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; stores such objects only once, and ensures that all other references point to the master copy. Shared objects remain shared, which can be very important for mutable objects.</source>
          <target state="translated">これは、再帰オブジェクトとオブジェクト共有の両方に影響を与えます。再帰オブジェクトは、それ自体への参照を含むオブジェクトです。これらはマーシャルによって処理されません。実際、再帰オブジェクトをマーシャルしようとすると、Pythonインタープリターがクラッシュします。オブジェクトの共有は、シリアル化されるオブジェクト階層の異なる場所にある同じオブジェクトへの複数の参照がある場合に発生します。&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;はそのようなオブジェクトを一度だけ保存し、他のすべての参照がマスターコピーを指すようにします。共有オブジェクトは共有されたままです。これは、変更可能なオブジェクトにとって非常に重要です。</target>
        </trans-unit>
        <trans-unit id="1399ebc54c4c88eebed882277416783d2785e8e3" translate="yes" xml:space="preserve">
          <source>This has the direct benefit of using the new widgets which gives a better look and feel across platforms; however, the replacement widgets are not completely compatible. The main difference is that widget options such as &amp;ldquo;fg&amp;rdquo;, &amp;ldquo;bg&amp;rdquo; and others related to widget styling are no longer present in Ttk widgets. Instead, use the &lt;code&gt;ttk.Style&lt;/code&gt; class for improved styling effects.</source>
          <target state="translated">これには、新しいウィジェットを使用することの直接的な利点があり、プラットフォーム間でのルックアンドフィールが向上します。ただし、代替ウィジェットは完全には互換性がありません。主な違いは、「fg」、「bg」など、ウィジェットのスタイル設定に関連するウィジェットオプションがTtkウィジェットに存在しないことです。代わりに、 &lt;code&gt;ttk.Style&lt;/code&gt; クラスを使用して、スタイル効果を向上させます。</target>
        </trans-unit>
        <trans-unit id="1e87d7da41d7ad71206613b0e5e393ce4a5a42bd" translate="yes" xml:space="preserve">
          <source>This has the same issue as the original example using class &lt;code&gt;C&lt;/code&gt;. That is, two instances of class &lt;code&gt;D&lt;/code&gt; that do not specify a value for &lt;code&gt;x&lt;/code&gt; when creating a class instance will share the same copy of &lt;code&gt;x&lt;/code&gt;. Because dataclasses just use normal Python class creation they also share this behavior. There is no general way for Data Classes to detect this condition. Instead, dataclasses will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if it detects a default parameter of type &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;. This is a partial solution, but it does protect against many common errors.</source>
          <target state="translated">これには、クラス &lt;code&gt;C&lt;/code&gt; を使用した元の例と同じ問題があります。すなわち、クラスの2つのインスタンスであり、 &lt;code&gt;D&lt;/code&gt; の値が指定されていない &lt;code&gt;x&lt;/code&gt; の同じコピーを共有するクラスのインスタンスを作成するときに &lt;code&gt;x&lt;/code&gt; 。データクラスは通常のPythonクラス作成を使用するだけなので、この動作も共有します。データクラスがこの状態を検出する一般的な方法はありません。代わりに、dataclassesは、type &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;dict&lt;/code&gt; 、または &lt;code&gt;set&lt;/code&gt; のデフォルトパラメータを検出すると&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生&lt;/a&gt;させます。これは部分的な解決策ですが、多くの一般的なエラーから保護します。</target>
        </trans-unit>
        <trans-unit id="15fd1d9b07f7514f7cf5eb3c49b420f63b3b5f83" translate="yes" xml:space="preserve">
          <source>This header type provides no additional attributes.</source>
          <target state="translated">このヘッダタイプは、追加の属性を提供しません。</target>
        </trans-unit>
        <trans-unit id="f8a8c30ab87345447e975d80dc8bc170b1bc77f0" translate="yes" xml:space="preserve">
          <source>This header type provides the following additional attributes:</source>
          <target state="translated">このヘッダタイプは、次の追加属性を提供する。</target>
        </trans-unit>
        <trans-unit id="9f71ac2855dc5cb60a48f538bcab9c6cdf2af6c3" translate="yes" xml:space="preserve">
          <source>This helper function returns a dictionary of scheme to proxy server URL mappings. It scans the environment for variables named &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt;, in a case insensitive approach, for all operating systems first, and when it cannot find it, looks for proxy information from Mac OSX System Configuration for Mac OS X and Windows Systems Registry for Windows. If both lowercase and uppercase environment variables exist (and disagree), lowercase is preferred.</source>
          <target state="translated">このヘルパー関数は、スキームの辞書をプロキシサーバーのURLマッピングに返します。すべてのオペレーティングシステムについて、大文字と小文字を区別しないアプローチで、 &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt; という名前の変数の環境を最初にスキャンし、それが見つからない場合は、Mac OS XのMac OS Xシステム構成およびWindowsのWindowsシステムレジストリからプロキシ情報を探します。小文字と大文字の両方の環境変数が存在する（そして同意しない）場合は、小文字が優先されます。</target>
        </trans-unit>
        <trans-unit id="53a5ee201fe7aa42751eeb86e24842797e265154" translate="yes" xml:space="preserve">
          <source>This hook function is called by built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt;. By default, it drops you into the &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; debugger, but it can be set to any other function so that you can choose which debugger gets used.</source>
          <target state="translated">このフック関数は、組み込みの&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;によって呼び出されます。デフォルトでは、&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;デバッガーが表示されますが、他の関数に設定して、使用するデバッガーを選択できます。</target>
        </trans-unit>
        <trans-unit id="5b43c40f486c2ec49629b4760fedb3dc28cd7fac" translate="yes" xml:space="preserve">
          <source>This hook is exposed so that you can use it to implement directory search paths, addition of file extensions, and other namespace hacks. There is no corresponding &amp;lsquo;close&amp;rsquo; hook, but a shlex instance will call the &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of the sourced input stream when it returns EOF.</source>
          <target state="translated">このフックは、ディレクトリ検索パス、ファイル拡張子の追加、その他の名前空間のハックを実装するために使用できるように公開されています。対応する 'close'フックはありませんが、shlexインスタンスは、EOFを返すときにソース入力ストリームの&lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="14a8a4310f49249faa0c97df760d4f86f9f20bfd" translate="yes" xml:space="preserve">
          <source>This idiom would be unsafe:</source>
          <target state="translated">この慣用句は安全ではないだろう。</target>
        </trans-unit>
        <trans-unit id="3712ae89c928266d43f7b324f245cd2bd71916f9" translate="yes" xml:space="preserve">
          <source>This implementation just returns the passed-in record. You may want to override this method if you need to do any custom marshalling or manipulation of the record before passing it to the handlers.</source>
          <target state="translated">この実装では、渡されたレコードを返すだけです。ハンドラに渡す前にレコードのマーシャリングや操作を行う必要がある場合は、このメソッドをオーバーライドするとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="917e7805862587e91db53a744cdd1f1c98f6c549" translate="yes" xml:space="preserve">
          <source>This implementation polls process file descriptors (pidfds) to await child process termination. In some respects, &lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt;&lt;code&gt;PidfdChildWatcher&lt;/code&gt;&lt;/a&gt; is a &amp;ldquo;Goldilocks&amp;rdquo; child watcher implementation. It doesn&amp;rsquo;t require signals or threads, doesn&amp;rsquo;t interfere with any processes launched outside the event loop, and scales linearly with the number of subprocesses launched by the event loop. The main disadvantage is that pidfds are specific to Linux, and only work on recent (5.3+) kernels.</source>
          <target state="translated">この実装は、プロセスファイル記述子（pidfds）をポーリングして、子プロセスの終了を待ちます。いくつかの点で、&lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt; &lt;code&gt;PidfdChildWatcher&lt;/code&gt; &lt;/a&gt;は「Goldilocks」子ウォッチャーの実装です。シグナルやスレッドを必要とせず、イベントループの外部で起動されるプロセスに干渉せず、イベントループによって起動されるサブプロセスの数に比例してスケーリングします。主な欠点は、pidfdsがLinuxに固有であり、最近の（5.3以降）カーネルでのみ機能することです。</target>
        </trans-unit>
        <trans-unit id="777834ae53352a725347928a6858bafea05f6ec0" translate="yes" xml:space="preserve">
          <source>This implementation reaps every terminated processes by calling &lt;code&gt;os.waitpid(-1)&lt;/code&gt; directly, possibly breaking other code spawning processes and waiting for their termination.</source>
          <target state="translated">この実装は、 &lt;code&gt;os.waitpid(-1)&lt;/code&gt; を直接呼び出すことにより、終了したすべてのプロセスを刈り取り、他のコード生成プロセスを破壊し、それらの終了を待ちます。</target>
        </trans-unit>
        <trans-unit id="d5fc161d4fd402329da4ef4c42d9348e3c0b7f9b" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt; signal.</source>
          <target state="translated">この実装は、インスタンス化時に &lt;code&gt;SIGCHLD&lt;/code&gt; シグナルハンドラーを登録します。これにより、 &lt;code&gt;SIGCHLD&lt;/code&gt; シグナルのカスタムハンドラーをインストールするサードパーティのコードが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e66f626d3049620372cb155540f6631b45554cd8" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt;. signal).</source>
          <target state="translated">この実装は、インスタンス化時に &lt;code&gt;SIGCHLD&lt;/code&gt; シグナルハンドラーを登録します。これにより、 &lt;code&gt;SIGCHLD&lt;/code&gt; のカスタムハンドラーをインストールするサードパーティのコードが破損する可能性があります。信号）。</target>
        </trans-unit>
        <trans-unit id="edd393e2fc27d7014d2911d6a54565f5099ffca5" translate="yes" xml:space="preserve">
          <source>This implementation starts a new waiting thread for every subprocess spawn.</source>
          <target state="translated">この実装では、サブプロセスがスポーンされるたびに新しい待機スレッドが開始されます。</target>
        </trans-unit>
        <trans-unit id="ef609bd0f65de7996847176aad6c4872816f0096" translate="yes" xml:space="preserve">
          <source>This implementation uses active event loop from the main thread to handle &lt;code&gt;SIGCHLD&lt;/code&gt; signal. If the main thread has no running event loop another thread cannot spawn a subprocess (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">この実装では、メインスレッドからのアクティブなイベントループを使用して、 &lt;code&gt;SIGCHLD&lt;/code&gt; 信号を処理します。メインスレッドに実行中のイベントループがない場合、別のスレッドはサブプロセスを生成できません（&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します）。</target>
        </trans-unit>
        <trans-unit id="b9fd2d3b23621ed74495b3c520170639252c1cb8" translate="yes" xml:space="preserve">
          <source>This installs the function &lt;code&gt;_()&lt;/code&gt; in Python&amp;rsquo;s builtins namespace, based on &lt;em&gt;domain&lt;/em&gt;, &lt;em&gt;localedir&lt;/em&gt;, and &lt;em&gt;codeset&lt;/em&gt; which are passed to the function &lt;a href=&quot;#gettext.translation&quot;&gt;&lt;code&gt;translation()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、関数&lt;a href=&quot;#gettext.translation&quot;&gt; &lt;code&gt;translation()&lt;/code&gt; に&lt;/a&gt;渡される&lt;em&gt;domain&lt;/em&gt;、&lt;em&gt;localedir&lt;/em&gt;、および&lt;em&gt;コードセット&lt;/em&gt;に基づいて、関数 &lt;code&gt;_()&lt;/code&gt; がPythonの組み込みネームスペースにインストールされ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c2e2c274c1f4f231ffb4b3c188adf438144d914" translate="yes" xml:space="preserve">
          <source>This interface is a subtype of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). All methods supported by that interface are also available on &lt;code&gt;AttributesNS&lt;/code&gt; objects.</source>
          <target state="translated">このインタフェースは、サブタイプである &lt;code&gt;Attributes&lt;/code&gt; （セクションを参照インターフェイス&lt;a href=&quot;#attributes-objects&quot;&gt;インタフェース属性&lt;/a&gt;）。そのインターフェースでサポートされるすべてのメソッドは、 &lt;code&gt;AttributesNS&lt;/code&gt; オブジェクトでも使用できます。</target>
        </trans-unit>
        <trans-unit id="69e1f3c707f5dccfcafc540b279aa49c7ac7c0b2" translate="yes" xml:space="preserve">
          <source>This interface specifies only those DTD events required for basic parsing (unparsed entities and attributes).</source>
          <target state="translated">このインタフェースは、基本的な解析に必要なDTDイベント(解析されていない実体と属性)のみを指定します。</target>
        </trans-unit>
        <trans-unit id="4bfef769a5c6fd1c3d4f6d5ae1a3d088e11a2056" translate="yes" xml:space="preserve">
          <source>This invocation will install &lt;code&gt;pip&lt;/code&gt; if it is not already installed, but otherwise does nothing. To ensure the installed version of &lt;code&gt;pip&lt;/code&gt; is at least as recent as the one bundled with &lt;code&gt;ensurepip&lt;/code&gt;, pass the &lt;code&gt;--upgrade&lt;/code&gt; option:</source>
          <target state="translated">この呼び出しは、 &lt;code&gt;pip&lt;/code&gt; がまだインストールされていない場合はインストールしますが、それ以外の場合は何もしません。インストールされているバージョンの &lt;code&gt;pip&lt;/code&gt; が少なくとも &lt;code&gt;ensurepip&lt;/code&gt; にバンドルされているバージョンと同じであることを確認するには、 &lt;code&gt;--upgrade&lt;/code&gt; オプションを渡します。</target>
        </trans-unit>
        <trans-unit id="fb20184489faa55d2426651ba4b6f1ea8d80ec92" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of external entities. For entity names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no entities are defined.</source>
          <target state="translated">これは、外部エンティティの定義を提供する &lt;code&gt;NamedNodeMap&lt;/code&gt; です。エンティティ名が複数回定義されている場合、最初の定義のみが提供されます（他の定義はXML勧告の要求に応じて無視されます）。パーサーによって情報が提供されない場合、またはエンティティが定義されていない場合、これは &lt;code&gt;None&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="0ccd5839ee601e99f6f394c59c1c5d21a1f62f7d" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of notations. For notation names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no notations are defined.</source>
          <target state="translated">これは表記の定義を与える &lt;code&gt;NamedNodeMap&lt;/code&gt; です。複数回定義された表記法名の場合、最初の定義のみが提供されます（その他の定義は、XML勧告の要求に応じて無視されます）。パーサーによって情報が提供されない場合、または表記が定義されていない場合、これは &lt;code&gt;None&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5a0e8bb08b951bc0ca7e9c250421a010f6ad466d" translate="yes" xml:space="preserve">
          <source>This is a Linux-specific &lt;em&gt;idtype&lt;/em&gt; that indicates that &lt;em&gt;id&lt;/em&gt; is a file descriptor that refers to a process.</source>
          <target state="translated">これはLinux固有の&lt;em&gt;idtype&lt;/em&gt;であり、&lt;em&gt;id&lt;/em&gt;がプロセスを参照するファイル記述子であることを示します。</target>
        </trans-unit>
        <trans-unit id="3b5208e374d58ef0d15cd53fa00dca754440a5fc" translate="yes" xml:space="preserve">
          <source>This is a Python type object that represents the socket object type. It is the same as &lt;code&gt;type(socket(...))&lt;/code&gt;.</source>
          <target state="translated">これは、ソケットオブジェクトタイプを表すPythonタイプオブジェクトです。 &lt;code&gt;type(socket(...))&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="1dee36bf4f5451b3dde8adb8abdefc1876d4de9e" translate="yes" xml:space="preserve">
          <source>This is a backwards compatibility wrapper around &lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt;&lt;code&gt;importlib.util.find_spec()&lt;/code&gt;&lt;/a&gt; that converts most failures to &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; and only returns the loader rather than the full &lt;code&gt;ModuleSpec&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt; &lt;code&gt;importlib.util.find_spec()&lt;/code&gt; の&lt;/a&gt;下位互換性ラッパーであり、ほとんどのエラーを&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; に&lt;/a&gt;変換し、完全な &lt;code&gt;ModuleSpec&lt;/code&gt; ではなくローダーのみを返します。</target>
        </trans-unit>
        <trans-unit id="a4853227db3f995082df7ac50dcf7aaaf84b7041" translate="yes" xml:space="preserve">
          <source>This is a class for comparing sequences of lines of text, and producing human-readable differences or deltas. Differ uses &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; both to compare sequences of lines, and to compare sequences of characters within similar (near-matching) lines.</source>
          <target state="translated">これは、一連のテキスト行を比較し、人間が読める差異またはデルタを生成するためのクラスです。Differは&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; を&lt;/a&gt;使用して、行のシーケンスを比較したり、類似した（ほぼ一致する）行内の文字のシーケンスを比較したりします。</target>
        </trans-unit>
        <trans-unit id="a8fa4665c3a9797ed6410afb94e30d45735e5a34" translate="yes" xml:space="preserve">
          <source>This is a compatibility alias for the builtin &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">これは、組み込みの&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;例外の互換性エイリアスです。</target>
        </trans-unit>
        <trans-unit id="37837f0ec1ef400d3ebf35665f34cf4e36eefe80" translate="yes" xml:space="preserve">
          <source>This is a convenience function for invoking &lt;a href=&quot;#functools.update_wrapper&quot;&gt;&lt;code&gt;update_wrapper()&lt;/code&gt;&lt;/a&gt; as a function decorator when defining a wrapper function. It is equivalent to &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt;. For example:</source>
          <target state="translated">これは、ラッパー関数を定義するときに関数デコレーターとして&lt;a href=&quot;#functools.update_wrapper&quot;&gt; &lt;code&gt;update_wrapper()&lt;/code&gt; &lt;/a&gt;を呼び出すための便利な関数です。これは、 &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt; と同等です。例えば：</target>
        </trans-unit>
        <trans-unit id="67ef0177e990584ce72a8564cff23e66f1dd9f9a" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly so that the total time &amp;gt;= 0.2 second, returning the eventual (number of loops, time taken for that number of loops). It calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; with increasing numbers from the sequence 1, 2, 5, 10, 20, 50, &amp;hellip; until the time taken is at least 0.2 second.</source>
          <target state="translated">これは、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; を&lt;/a&gt;繰り返し呼び出して合計時間&amp;gt; = 0.2秒とし、最終結果（ループ数、ループ数に要した時間）を返す便利な関数です。これは、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;、&amp;hellip;のシーケンスから増加する数でtimeit（）を呼び出し、所要時間が少なくとも0.2秒になるまで呼び出します。</target>
        </trans-unit>
        <trans-unit id="938872e7160a22a30969daf820e4a0b8ebd24e14" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls the &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly, returning a list of results. The first argument specifies how many times to call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;. The second argument specifies the &lt;em&gt;number&lt;/em&gt; argument for &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; を&lt;/a&gt;繰り返し呼び出して結果のリストを返す便利な関数です。最初の引数は、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;を呼び出す回数を指定します。2番目の引数は、&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;数値&lt;/em&gt;引数を指定します。</target>
        </trans-unit>
        <trans-unit id="cf3d30edfa064a563ec303c042f7eac8623ee99e" translate="yes" xml:space="preserve">
          <source>This is a convenience method for calling &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; with the message represented by an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; object. The arguments have the same meaning as for &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;msg&lt;/em&gt; is a &lt;code&gt;Message&lt;/code&gt; object.</source>
          <target state="translated">これは、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;オブジェクトで表されるメッセージで&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;を呼び出すための便利なメソッドです。引数は、&lt;em&gt;msg&lt;/em&gt;が &lt;code&gt;Message&lt;/code&gt; オブジェクトであることを除いて、&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;と同じ意味です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="980d084f94f1a1f05dbcfb9a33957714c6c2fb1a" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper around many of the functions listed below, most notably &lt;a href=&quot;#dis.get_instructions&quot;&gt;&lt;code&gt;get_instructions()&lt;/code&gt;&lt;/a&gt;, as iterating over a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; instance yields the bytecode operations as &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;インスタンスを反復すると、バイトコード操作が&lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt;インスタンスとして生成されるため、これは、以下にリストされている多くの関数、特に&lt;a href=&quot;#dis.get_instructions&quot;&gt; &lt;code&gt;get_instructions()&lt;/code&gt; の&lt;/a&gt;便利なラッパーです。</target>
        </trans-unit>
        <trans-unit id="498284187cd398ea132a44f93919c4008100e92c" translate="yes" xml:space="preserve">
          <source>This is a convenient shorthand for &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt;, intended for interactive exploration at the interpreter prompt.</source>
          <target state="translated">これは &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt; 便利な省略形であり、インタプリタプロンプトでのインタラクティブな探索を目的としています。</target>
        </trans-unit>
        <trans-unit id="8edf4f348b71a4a03b0b1fe5e2efdd8e50b78e09" translate="yes" xml:space="preserve">
          <source>This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class&amp;rsquo;s __getattr__ method; this is done by raising AttributeError.</source>
          <target state="translated">これは記述子であり、インスタンスおよびクラスを介してアクセスされたときに異なる動作をする属性を定義するために使用されます。インスタンスへのアクセスは通常どおりですが、クラスを介した属性へのアクセスはクラスの__getattr__メソッドにルーティングされます。これはAttributeErrorを発生させることで行われます。</target>
        </trans-unit>
        <trans-unit id="af3bb3689f2aed5ed632d859ff4360df92b4652f" translate="yes" xml:space="preserve">
          <source>This is a dictionary that maps module names to modules which have already been loaded. This can be manipulated to force reloading of modules and other tricks. However, replacing the dictionary will not necessarily work as expected and deleting essential items from the dictionary may cause Python to fail.</source>
          <target state="translated">モジュール名と既にロード済みのモジュールをマッピングする辞書です。これを操作することで、モジュールを強制的に再ロードさせるなどの仕掛けができます。ただし、辞書を置き換えても必ずしも期待通りに動作するとは限らず、辞書から必須項目を削除するとPythonが失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9a8e1dd0c6a91e83f3589db589be616dad107d0a" translate="yes" xml:space="preserve">
          <source>This is a factory method which allows subclasses to define the precise type of socket they want. The default implementation creates a TCP socket (&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;socket.SOCK_STREAM&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">これは、サブクラスが必要なソケットの正確なタイプを定義できるようにするファクトリメソッドです。デフォルトの実装では、TCPソケット（&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;socket.SOCK_STREAM&lt;/code&gt; &lt;/a&gt;）が作成されます。</target>
        </trans-unit>
        <trans-unit id="b26ec592d29731c63ae2c68e17de8b091431aaea" translate="yes" xml:space="preserve">
          <source>This is a factory method which can be overridden in subclasses to create specialized &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">これは、特殊な&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;インスタンスを作成するためにサブクラスでオーバーライドできるファクトリメソッドです。</target>
        </trans-unit>
        <trans-unit id="5843574bbe9da7d6b6838eb28296d0456a38c5fb" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">これは、シーケンス要素が&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能である&lt;/a&gt;限り、任意のタイプのシーケンスのペアを比較するための柔軟なクラスです。基本的なアルゴリズムは、1980年代後半にRatcliffとObershelpによって「ゲシュタルトパターンマッチング」という双曲線の名前で公開されたアルゴリズムよりも古く、少し奇妙です。このアイデアは、「ジャンク」要素を含まない、最長の連続する一致するサブシーケンスを見つけることです。これらの「ジャンク」要素は、空白行や空白など、ある意味で興味深いものではありません。 （ジャンクの処理は、RatcliffおよびObershelpアルゴリズムの拡張機能です。）次に、一致するサブシーケンスの左側と右側のシーケンスの断片に同じ考え方が再帰的に適用されます。これは最小限の編集シーケンスを生成しませんが、人々に「正しく見える」一致を生成する傾向があります。</target>
        </trans-unit>
        <trans-unit id="7cad347fa9579dce44e440630ee250078fa104f6" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">これは、シーケンス要素が&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;ハッシュ可能である&lt;/a&gt;限り、任意のタイプのシーケンスのペアを比較するための柔軟なクラスです。基本的なアルゴリズムは、1980年代後半にRatcliffとObershelpによって双曲線の名前「gestaltパターンマッチング」で公開されたアルゴリズムよりも前のものであり、少し凝っています。アイデアは、「ジャンク」要素を含まない、最も長く連続して一致するサブシーケンスを見つけることです。これらの「ジャンク」要素は、空白行や空白など、ある意味で面白くない要素です。 （ジャンクの処理は、Ratcliff and Obershelpアルゴリズムの拡張です。）次に、同じアイデアが、一致するサブシーケンスの左側と右側のシーケンスの断片に再帰的に適用されます。これは最小限の編集シーケンスを生成しませんが、人々に「正しく見える」一致を生成する傾向があります。</target>
        </trans-unit>
        <trans-unit id="34e62d716ed9ec49d64591a2d7f599e917d029d8" translate="yes" xml:space="preserve">
          <source>This is a flow control method that interacts with the underlying IO write buffer. When the size of the buffer reaches the high watermark, &lt;em&gt;drain()&lt;/em&gt; blocks until the size of the buffer is drained down to the low watermark and writing can be resumed. When there is nothing to wait for, the &lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; returns immediately.</source>
          <target state="translated">これは、基礎となるIO書き込みバッファーと相互作用するフロー制御メソッドです。バッファーのサイズが最高水準点に達すると、&lt;em&gt;drain（）&lt;/em&gt;は、バッファーのサイズが最低水準点まで排出され、書き込みを再開できるようになるまでブロックします。待つものがない場合、&lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt;はすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="ee578e8a96ae7b79e56215ce0608af10bb1a6d51" translate="yes" xml:space="preserve">
          <source>This is a generic method; for specific types, specialized methods are provided.</source>
          <target state="translated">これは汎用的なメソッドであり、特定の型のために特別なメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="c70fb04836ec95e115ea761b0a42390505b21010" translate="yes" xml:space="preserve">
          <source>This is a good approach if you write the class yourself. Let&amp;rsquo;s suppose you have a class like this:</source>
          <target state="translated">自分でクラスを作成する場合、これは良いアプローチです。次のようなクラスがあるとします。</target>
        </trans-unit>
        <trans-unit id="3fd22d2ebc9d1630fe3251b581127c5fa25ec2ef" translate="yes" xml:space="preserve">
          <source>This is a legacy API retained for backwards compatibility. When possible, you should use &lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt;&lt;code&gt;sni_callback&lt;/code&gt;&lt;/a&gt; instead. The given &lt;em&gt;server_name_callback&lt;/em&gt; is similar to &lt;em&gt;sni_callback&lt;/em&gt;, except that when the server hostname is an IDN-encoded internationalized domain name, the &lt;em&gt;server_name_callback&lt;/em&gt; receives a decoded U-label (&lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt;).</source>
          <target state="translated">これは、下位互換性のために保持されているレガシーAPIです。可能であれば、代わりに&lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt; &lt;code&gt;sni_callback&lt;/code&gt; &lt;/a&gt;を使用してください。指定された&lt;em&gt;server_name_callback&lt;/em&gt;は&lt;em&gt;sni_callback&lt;/em&gt;に似ていますが、サーバーのホスト名がIDNエンコードされた国際化ドメイン名の場合、&lt;em&gt;server_name_callback&lt;/em&gt;はデコードされたUラベル（ &lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt; ）を受け取ります。</target>
        </trans-unit>
        <trans-unit id="928b464bfb8b1d3da5461ee431b2aebe894ae69d" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class it always returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; ののクラスは常に返しません &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="560364aea437ea98e565fe17e2a387401b67f453" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; のクラスにその機能が置き換えられます&lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0adf6390e428a55bd96ef1ee56b56b179f8271a9" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and the related &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; ののクラスにその機能が置き換えられます&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;および関連 &lt;code&gt;make&lt;/code&gt; や &lt;code&gt;add&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="63b9d63fb4198d07361b2b2c61a42bbefcb8d10e" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; のクラスにその機能が置き換えられます&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27a2aa515d5423d4affd0779521e3b5fafa11340" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;code&gt;make_&lt;/code&gt; and &lt;code&gt;add_&lt;/code&gt; methods.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; のクラスにその機能が置き換えられます &lt;code&gt;make_&lt;/code&gt; と &lt;code&gt;add_&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="dfc629871289e0e65b56c5cbfe2f4ace662c8ec2" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;charset&lt;/em&gt; parameter of the &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; method.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; ののクラスその機能がによって置き換えられる&lt;em&gt;文字セット&lt;/em&gt;のパラメータ &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="a6fae13c077a979f25a3a7f031bc51558b673c47" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;params&lt;/em&gt; property of the individual header objects returned by the header access methods.</source>
          <target state="translated">これは従来の方法です。上 &lt;code&gt;EmailMessage&lt;/code&gt; ののクラスの機能はによって置き換えられる&lt;em&gt;のparams&lt;/em&gt;ヘッダアクセスメソッドによって返されるオブジェクトの個々のヘッダのプロパティ。</target>
        </trans-unit>
        <trans-unit id="a99c5dcc9ab288704491edaec84b894542f3acf7" translate="yes" xml:space="preserve">
          <source>This is a list of all the awaits made to the mock object in sequence (so the length of the list is the number of times it has been awaited). Before any awaits have been made it is an empty list.</source>
          <target state="translated">これは、モックオブジェクトに対して行われたすべての待ち行列のリストです (リストの長さは待ち行列の回数になります)。待機が行われる前は空のリストです。</target>
        </trans-unit>
        <trans-unit id="1b902cf8994e14c83ab2966f3101a37cf2ebc6f1" translate="yes" xml:space="preserve">
          <source>This is a list of all the calls made to the mock object in sequence (so the length of the list is the number of times it has been called). Before any calls have been made it is an empty list. The &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; object can be used for conveniently constructing lists of calls to compare with &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、モックオブジェクトに対して順番に行われたすべての呼び出しのリストです（したがって、リストの長さは、呼び出された回数です）。呼び出しが行われる前は、空のリストです。&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;オブジェクトは、便利と比較するためのコールのリストを構築するために使用することができる&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc997d8da827766226a9a1b8cbef46aa4082f5c7" translate="yes" xml:space="preserve">
          <source>This is a low-level interface to the functionality of &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt;, passing in explicitly the message, category, filename and line number, and optionally the module name and the registry (which should be the &lt;code&gt;__warningregistry__&lt;/code&gt; dictionary of the module). The module name defaults to the filename with &lt;code&gt;.py&lt;/code&gt; stripped; if no registry is passed, the warning is never suppressed. &lt;em&gt;message&lt;/em&gt; must be a string and &lt;em&gt;category&lt;/em&gt; a subclass of &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; or &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; instance, in which case &lt;em&gt;category&lt;/em&gt; will be ignored.</source>
          <target state="translated">これは&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; の&lt;/a&gt;機能に対する低レベルのインターフェースであり、メッセージ、カテゴリ、ファ​​イル名、行番号、オプションでモジュール名とレジストリ（モジュールの &lt;code&gt;__warningregistry__&lt;/code&gt; ディクショナリである必要があります）を明示的に渡します。モジュール名はデフォルトで &lt;code&gt;.py&lt;/code&gt; を取り除いたファイル名になります。レジストリが渡されない場合、警告は抑制されません。&lt;em&gt;メッセージは&lt;/em&gt;文字列でなければなりません&lt;em&gt;カテゴリ&lt;/em&gt;のサブクラス&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;や&lt;em&gt;メッセージが&lt;/em&gt;あることも&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;その場合には、インスタンス、&lt;em&gt;カテゴリが&lt;/em&gt;無視されます。</target>
        </trans-unit>
        <trans-unit id="a073c4a90d19a2d3d955e9d04e18a32015661680" translate="yes" xml:space="preserve">
          <source>This is a measure of the power in an audio signal.</source>
          <target state="translated">これは、オーディオ信号のパワーを測る指標です。</target>
        </trans-unit>
        <trans-unit id="4320eee4f82e48a26f22142603adb9abf481fd04" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported.</source>
          <target state="translated">これは、リモートホストとプロキシの両方に対するHTTP認証に役立つミックスインクラスです。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="94093b21ff1d5ab0d668c6a7f43229fb8ec28b23" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. If &lt;em&gt;passwd_mgr&lt;/em&gt; also provides &lt;code&gt;is_authenticated&lt;/code&gt; and &lt;code&gt;update_authenticated&lt;/code&gt; methods (see &lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth Objects&lt;/a&gt;), then the handler will use the &lt;code&gt;is_authenticated&lt;/code&gt; result for a given URI to determine whether or not to send authentication credentials with the request. If &lt;code&gt;is_authenticated&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; for the URI, credentials are sent. If &lt;code&gt;is_authenticated&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, credentials are not sent, and then if a &lt;code&gt;401&lt;/code&gt; response is received the request is re-sent with the authentication credentials. If authentication succeeds, &lt;code&gt;update_authenticated&lt;/code&gt; is called to set &lt;code&gt;is_authenticated&lt;/code&gt;&lt;code&gt;True&lt;/code&gt; for the URI, so that subsequent requests to the URI or any of its super-URIs will automatically include the authentication credentials.</source>
          <target state="translated">これは、リモートホストとプロキシの両方に対するHTTP認証に役立つミックスインクラスです。&lt;em&gt;password_mgr&lt;/em&gt;を指定する場合は、&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;と互換性のあるものにする必要があります。サポートする必要のあるインターフェースについては、セクション&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgrオブジェクト&lt;/a&gt;を参照してください。&lt;em&gt;passwd_mgr&lt;/em&gt;が &lt;code&gt;is_authenticated&lt;/code&gt; および &lt;code&gt;update_authenticated&lt;/code&gt; メソッドも提供する場合（&lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth Objectsを&lt;/a&gt;参照）、ハンドラーは指定されたURIの &lt;code&gt;is_authenticated&lt;/code&gt; 結果を使用して、リクエストで認証資格情報を送信するかどうかを決定します。 &lt;code&gt;is_authenticated&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; を返す場合URIの場合、資格情報が送信されます。 &lt;code&gt;is_authenticated&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、資格情報は送信されず、 &lt;code&gt;401&lt;/code&gt; 応答が受信された場合、要求は認証資格情報で再送信されます。認証が成功した場合、 &lt;code&gt;update_authenticated&lt;/code&gt; が呼び出されてURIに &lt;code&gt;is_authenticated&lt;/code&gt; &lt;code&gt;True&lt;/code&gt; が設定されます。これにより、URIまたはそのスーパーURIに対する後続のリクエストには、認証資格情報が自動的に含まれます。</target>
        </trans-unit>
        <trans-unit id="996f13e7670dd2a8817147764b715d5a9ebb7999" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">これは、モジュールのグローバル設定であり、および将来のすべてのdoctestをモジュールによって実行に影響&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt;： &lt;code&gt;runTest()&lt;/code&gt; のメソッド &lt;code&gt;DocTestCase&lt;/code&gt; についてのときのテストケースに指定したオプションフラグを見 &lt;code&gt;DocTestCase&lt;/code&gt; についてのインスタンスを構築しました。何の報告フラグが（典型的と予想される場合である）指定されなかった場合は、&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;の&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt;報告フラグがある&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;ビット毎の論理和（OR）&lt;/a&gt;オプション・フラグに、そしてその増補オプションフラグが渡され&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt; doctestを実行するために作成されたインスタンス。とき任意の報告フラグが指定された場合 &lt;code&gt;DocTestCase&lt;/code&gt; についてのインスタンスは、構築した&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;さん&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;レポートフラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="33e3135f5132e1fcfd517ce657e31b052e3db982" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">これは、モジュールのグローバル設定であり、および将来のすべてのdoctestをモジュールによって実行に影響&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt;： &lt;code&gt;runTest()&lt;/code&gt; のメソッド &lt;code&gt;DocTestCase&lt;/code&gt; についてのときのテストケースに指定したオプションフラグを見 &lt;code&gt;DocTestCase&lt;/code&gt; についてのインスタンスを構築しました。何の報告フラグが（典型的と予想される場合である）指定されなかった場合は、&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;の&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; の&lt;/a&gt;報告フラグがある&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;ビット毎の論理和（OR）&lt;/a&gt;オプション・フラグに、そしてその増補オプションフラグが渡され&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;doctestを実行するために作成されたインスタンス。とき任意の報告フラグが指定された場合 &lt;code&gt;DocTestCase&lt;/code&gt; についてのインスタンスは、構築した&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;さん&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;レポートフラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="bd579c90746112b0e9a715bf70500cdbf4cb8b4c" translate="yes" xml:space="preserve">
          <source>This is a nonstandard convenience method for executing multiple SQL statements at once. It issues a &lt;code&gt;COMMIT&lt;/code&gt; statement first, then executes the SQL script it gets as a parameter.</source>
          <target state="translated">これは、複数のSQLステートメントを一度に実行するための非標準の便利な方法です。最初に &lt;code&gt;COMMIT&lt;/code&gt; ステートメントを発行してから、パラメーターとして取得したSQLスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="f25f408676466832f9ff8f647196311789c1a7ad" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">これは、&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してカーソルオブジェクトを作成し、&lt;em&gt;指定さ&lt;/em&gt;れた&lt;em&gt;パラメーターを使用し&lt;/em&gt;てカーソルの&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、カーソルを返す非標準のショートカットです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f026b3fde6844ad7ddf3c6cb9c30cb2c9296424" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">これは、&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してカーソルオブジェクトを作成し、&lt;em&gt;指定さ&lt;/em&gt;れた&lt;em&gt;パラメーターを使用し&lt;/em&gt;てカーソルの&lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、カーソルを返す非標準のショートカットです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f07d18339dec09d14b91f6da8c999bb831d41d7" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt;&lt;code&gt;executescript()&lt;/code&gt;&lt;/a&gt; method with the given &lt;em&gt;sql_script&lt;/em&gt;, and returns the cursor.</source>
          <target state="translated">これは、&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してカーソルオブジェクトを作成し、指定された&lt;em&gt;sql_scriptを使用&lt;/em&gt;してカーソルの&lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt; &lt;code&gt;executescript()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、カーソルを返す非標準のショートカットです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ac73b34e4853d2c7555adf61229da0b29863e37" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must create an attribute.</source>
          <target state="translated">これは、&lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; の&lt;/a&gt; flags引数の可能な値です。操作が属性を作成する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="96540e48fc82860097be205c93b6abd3606e07c1" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must replace an existing attribute.</source>
          <target state="translated">これは、&lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; の&lt;/a&gt; flags引数の可能な値です。これは、操作が既存の属性を置き換える必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="f6e80deb781542d74711015086c8206e50356e00" translate="yes" xml:space="preserve">
          <source>This is a purely lexical operation, hence the following behaviour:</source>
          <target state="translated">これは純粋に語彙的な操作であるため、以下のような動作をします。</target>
        </trans-unit>
        <trans-unit id="e43ca65c0fdbbd61accd8b6277bbb2c59aba9401" translate="yes" xml:space="preserve">
          <source>This is a read-only &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;attribute&lt;/a&gt; that returns the value of &lt;code&gt;key&lt;/code&gt; passed to the constructor, which should be a lookup key in the IANA time zone database (e.g. &lt;code&gt;America/New_York&lt;/code&gt;, &lt;code&gt;Europe/Paris&lt;/code&gt; or &lt;code&gt;Asia/Tokyo&lt;/code&gt;).</source>
          <target state="translated">これは、コンストラクターに渡された &lt;code&gt;key&lt;/code&gt; の値を返す読み取り専用の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;属性です。&lt;/a&gt;これは、IANAタイムゾーンデータベース（ &lt;code&gt;America/New_York&lt;/code&gt; 、 &lt;code&gt;Europe/Paris&lt;/code&gt; 、 &lt;code&gt;Asia/Tokyo&lt;/code&gt; など）のルックアップキーである必要があります。</target>
        </trans-unit>
        <trans-unit id="79b9ada7f8d4fc3182b2d3f64af63694e2a47bf2" translate="yes" xml:space="preserve">
          <source>This is a relative of &lt;a href=&quot;#setattr&quot;&gt;&lt;code&gt;setattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object and a string. The string must be the name of one of the object&amp;rsquo;s attributes. The function deletes the named attribute, provided the object allows it. For example, &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; is equivalent to &lt;code&gt;del x.foobar&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#setattr&quot;&gt; &lt;code&gt;setattr()&lt;/code&gt; の&lt;/a&gt;相対です。引数はオブジェクトと文字列です。文字列は、オブジェクトの属性の1つの名前でなければなりません。オブジェクトで許可されている場合、関数は指定された属性を削除します。たとえば、 &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; は &lt;code&gt;del x.foobar&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="9715e416b1df859f446f99f56d2aa08145ae5cce" translate="yes" xml:space="preserve">
          <source>This is a relatively low level API that takes care of the details of correctly unwinding the stack of exit callbacks. It provides a suitable foundation for higher level context managers that manipulate the exit stack in application specific ways.</source>
          <target state="translated">これは、終了コールバックのスタックを正しくアンワインドするための詳細を扱う比較的低レベルのAPIです。これは、アプリケーション固有の方法で終了スタックを操作する高レベルのコンテキストマネージャのための適切な基盤を提供します。</target>
        </trans-unit>
        <trans-unit id="2dbf3692d221f94721c68226699f011fa8c60193" translate="yes" xml:space="preserve">
          <source>This is a short tutorial for using &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;ET&lt;/code&gt; in short). The goal is to demonstrate some of the building blocks and basic concepts of the module.</source>
          <target state="translated">これは、&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;（略して &lt;code&gt;ET&lt;/code&gt; ）を使用するための短いチュートリアルです。目標は、モジュールのビルディングブロックと基本的な概念の一部を示すことです。</target>
        </trans-unit>
        <trans-unit id="fa365b626b798e07b34b9f21c141cb183f10539a" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is false.</source>
          <target state="translated">これは短絡演算子なので、第1引数が偽の場合のみ第2引数を評価します。</target>
        </trans-unit>
        <trans-unit id="dc5e590500f62fbd4dc8ebdd79a793c1c71615c0" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is true.</source>
          <target state="translated">これは短絡演算子なので、第1引数が真の場合のみ第2引数を評価します。</target>
        </trans-unit>
        <trans-unit id="9f41bbe9d27e4a677b830d37db3fb2b9e6f876eb" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(*sys.exc_info(), limit, file,
chain)&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;print_exception(*sys.exc_info(), limit, file, chain)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="a9296be127dc4a3b4f48abe6df80c8c1d08c7d67" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(sys.last_type, sys.last_value,
sys.last_traceback, limit, file, chain)&lt;/code&gt;. In general it will work only after an exception has reached an interactive prompt (see &lt;a href=&quot;sys#sys.last_type&quot;&gt;&lt;code&gt;sys.last_type&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">これは、 &lt;code&gt;print_exception(sys.last_type, sys.last_value, sys.last_traceback, limit, file, chain)&lt;/code&gt; 省略形です。一般に、例外がインタラクティブプロンプトに達した後でのみ機能します（&lt;a href=&quot;sys#sys.last_type&quot;&gt; &lt;code&gt;sys.last_type&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4e593684971c7ffd714930ffa9422d5c50b3b1cf" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;. All flags are cleared. No traps are enabled (so that exceptions are not raised during computations).</source>
          <target state="translated">これは、General Decimal Arithmetic Specificationで定義されている標準のコンテキストです。精度は9に設定されています。丸めは&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; に&lt;/a&gt;設定されます。すべてのフラグがクリアされます。トラップは有効になっていません（そのため、計算中に例外が発生しません）。</target>
        </trans-unit>
        <trans-unit id="2da625cd53289b672f7014ba22ac20aee7685a56" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;. All flags are cleared. All traps are enabled (treated as exceptions) except &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、General Decimal Arithmetic Specificationで定義されている標準のコンテキストです。精度は9に設定されています。丸めは&lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; に&lt;/a&gt;設定されます。すべてのフラグがクリアされます。&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; &lt;/a&gt;を除くすべてのトラップが有効になります（例外として扱われます）。</target>
        </trans-unit>
        <trans-unit id="a7930d7442fb88df54eb093e8c8ca59852bfaac7" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are iterables of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">これは、Unix &lt;code&gt;select()&lt;/code&gt; システムコールへの簡単なインターフェイスです。最初の3つの引数は、「待機可能なオブジェクト」の反復可能オブジェクトです。ファイル記述子を表す整数、またはそのような整数を返す&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;という名前のパラメーターなしのメソッドを持つオブジェクトのいずれかです。</target>
        </trans-unit>
        <trans-unit id="cd336ee085cbeef7c437546cd6c8582a726fd7e2" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are sequences of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">これは、Unixの &lt;code&gt;select()&lt;/code&gt; システムコールへの単純なインターフェイスです。最初の3つの引数は「待機可能なオブジェクト」のシーケンスです。ファイル記述子を表す整数か、そのような整数を返す&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;という名前のパラメーターなしのメソッドを持つオブジェクトのいずれかです。</target>
        </trans-unit>
        <trans-unit id="a9653a53929c37a27ca2d3608cb98481b962cc2f" translate="yes" xml:space="preserve">
          <source>This is a string of the form &lt;code&gt;widthxheight&lt;/code&gt;, where width and height are measured in pixels for most widgets (in characters for widgets displaying text). For example: &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;widthxheight&lt;/code&gt; の形式の文字列です。幅と高さは、ほとんどのウィジェットのピクセル単位で測定されます（テキストを表示するウィジェットの文字数）。例： &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2d23b43b3d9f7e926c09069e36030aeb6308947" translate="yes" xml:space="preserve">
          <source>This is a string with four space-delimited elements, each of which is a legal distance (see above). For example: &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; and &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; and &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; are all legal regions.</source>
          <target state="translated">これは、スペースで区切られた4つの要素を持つ文字列であり、各要素は有効な距離です（上記を参照）。たとえば、 &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; はすべて正当なリージョンです。</target>
        </trans-unit>
        <trans-unit id="505a14132b19d890d214ba81ac33505c98cfb289" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects over an SSL encrypted socket (to use this class you need a socket module that was compiled with SSL support). If &lt;em&gt;host&lt;/em&gt; is not specified, &lt;code&gt;''&lt;/code&gt; (the local host) is used. If &lt;em&gt;port&lt;/em&gt; is omitted, the standard IMAP4-over-SSL port (993) is used. &lt;em&gt;ssl_context&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">これは、SSL暗号化ソケットを介して接続する&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;から派生したサブクラスです（このクラスを使用するには、SSLサポートでコンパイルされたソケットモジュールが必要です）。&lt;em&gt;host&lt;/em&gt;が指定されていない場合は、 &lt;code&gt;''&lt;/code&gt; （ローカルホスト）が使用されます。場合は&lt;em&gt;ポートが&lt;/em&gt;省略され、標準のIMAP4オーバーSSLポート（993）が使用されています。&lt;em&gt;ssl_context&lt;/em&gt;は&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトであり、SSL構成オプション、証明書、および秘密鍵を単一の（存続期間が長い可能性がある）構造にバンドルできます。ベストプラクティスについては、&lt;a href=&quot;ssl#ssl-security&quot;&gt;セキュリティに関する考慮事項&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="764f94ad39faf8459a1f96a15f7dd2ebd680f57d" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects to the &lt;code&gt;stdin/stdout&lt;/code&gt; file descriptors created by passing &lt;em&gt;command&lt;/em&gt; to &lt;code&gt;subprocess.Popen()&lt;/code&gt;.</source>
          <target state="translated">これは、&lt;em&gt;コマンド&lt;/em&gt;を &lt;code&gt;subprocess.Popen()&lt;/code&gt; に渡して作成された &lt;code&gt;stdin/stdout&lt;/code&gt; ファイル記述子に接続する&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;から派生したサブクラスです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7dccb247bf4ce42730d244a4bcedb9e3a1d6f4a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; that connects to the server over an SSL encrypted socket. If &lt;em&gt;port&lt;/em&gt; is not specified, 995, the standard POP3-over-SSL port is used. &lt;em&gt;timeout&lt;/em&gt; works as in the &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; constructor. &lt;em&gt;context&lt;/em&gt; is an optional &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">これは、SSL暗号化ソケットを介してサーバーに接続する&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;サブクラスです。&lt;em&gt;ポート&lt;/em&gt;が指定されていない場合、995、標準のPOP3-over-SSLポートが使用されます。&lt;em&gt;timeout&lt;/em&gt;は&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;コンストラクターと同様に機能します。&lt;em&gt;context&lt;/em&gt;はオプションの&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトであり、SSL構成オプション、証明書、および秘密鍵を単一の（存続期間が長い可能性がある）構造にバンドルできます。ベストプラクティスについては、&lt;a href=&quot;ssl#ssl-security&quot;&gt;セキュリティに関する考慮事項&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="ef9776734c2d67729c4aaf01a2cd2a9bbb54ab5e" translate="yes" xml:space="preserve">
          <source>This is a subclassable type rather than a factory function.</source>
          <target state="translated">ファクトリー関数ではなく、サブクラス可能な型です。</target>
        </trans-unit>
        <trans-unit id="9765ce9944ccb97a9358dad6c89e4504fdbd8f6e" translate="yes" xml:space="preserve">
          <source>This is a symbolic constant used for different values returned by &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt;によって返されるさまざまな値に使用される記号定数です。</target>
        </trans-unit>
        <trans-unit id="cc8d2a984c67cda6fb3471c60192bee35875336f" translate="yes" xml:space="preserve">
          <source>This is a useful example for subclassing Enum to add or change other behaviors as well as disallowing aliases. If the only desired change is disallowing aliases, the &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt; decorator can be used instead.</source>
          <target state="translated">これは、Enumをサブクラス化して他の動作を追加または変更したり、エイリアスを禁止したりするのに役立つ例です。唯一の望ましい変更がエイリアスの禁止である場合は、代わりに&lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt;デコレータを使用できます。</target>
        </trans-unit>
        <trans-unit id="2f095373c041f749d13f3b152d79425bbe538a11" translate="yes" xml:space="preserve">
          <source>This is a working &amp;ldquo;Hello World&amp;rdquo; WSGI application:</source>
          <target state="translated">これは動作する「Hello World」WSGIアプリケーションです。</target>
        </trans-unit>
        <trans-unit id="ed30072f4605977c71fd7205e1fd018e0d972eea" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">これは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダーの&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; &lt;/a&gt; APIのラッパーです。&lt;em&gt;パッケージ&lt;/em&gt;引数は、標準モジュール形式（で、パッケージの名前でなければならない &lt;code&gt;foo.bar&lt;/code&gt; ）。&lt;em&gt;リソース&lt;/em&gt;引数が使用して相対ファイル名の形でなければならない &lt;code&gt;/&lt;/code&gt; をパスセパレータとして。親ディレクトリ名 &lt;code&gt;..&lt;/code&gt; は使用できません。また、ルート名（ &lt;code&gt;/&lt;/code&gt; で始まる）も使用できません。</target>
        </trans-unit>
        <trans-unit id="892ee36af8eae80320a2354e62c1ef8a2a921aae" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">これは、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; APIの&lt;/a&gt;ラッパーです。&lt;em&gt;パッケージ&lt;/em&gt;引数は、標準モジュール形式（で、パッケージの名前でなければならない &lt;code&gt;foo.bar&lt;/code&gt; ）。&lt;em&gt;リソース&lt;/em&gt;引数が使用して相対ファイル名の形でなければならない &lt;code&gt;/&lt;/code&gt; をパスセパレータとして。親ディレクトリ名 &lt;code&gt;..&lt;/code&gt; は許可されておらず、ルート名（ &lt;code&gt;/&lt;/code&gt; で始まる）も許可されていません。</target>
        </trans-unit>
        <trans-unit id="fbe8df11a8943e8d9f9b85f47cfd605f5644d080" translate="yes" xml:space="preserve">
          <source>This is almost always the &lt;code&gt;set()&lt;/code&gt; method of some scrollbar widget, but can be any widget method that takes a single argument.</source>
          <target state="translated">これはほとんどの場合、一部のスクロールバーウィジェットの &lt;code&gt;set()&lt;/code&gt; メソッドですが、単一の引数を取る任意のウィジェットメソッドにすることができます。</target>
        </trans-unit>
        <trans-unit id="2555e7bf342a503beae512a726ce26265cc5be14" translate="yes" xml:space="preserve">
          <source>This is also the value returned by &lt;code&gt;str(addr)&lt;/code&gt; for IPv6 addresses.</source>
          <target state="translated">これは、IPv6アドレスの &lt;code&gt;str(addr)&lt;/code&gt; によって返される値でもあります。</target>
        </trans-unit>
        <trans-unit id="9ef1b8548cedff987ad30e8dfdd3712f04390089" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;-separated string containing the time zone search path to use. It must consist of only absolute rather than relative paths. Relative components specified in &lt;code&gt;PYTHONTZPATH&lt;/code&gt; will not be used, but otherwise the behavior when a relative path is specified is implementation-defined; CPython will raise &lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt;&lt;code&gt;InvalidTZPathWarning&lt;/code&gt;&lt;/a&gt;, but other implementations are free to silently ignore the erroneous component or raise an exception.</source>
          <target state="translated">これは、使用するタイムゾーン検索パスを含む&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; で&lt;/a&gt;区切られた文字列です。相対パスではなく絶対パスのみで構成されている必要があります。 &lt;code&gt;PYTHONTZPATH&lt;/code&gt; で指定された相対コンポーネントは使用されませんが、それ以外の場合、相対パスが指定されたときの動作は実装によって定義されます。CPythonは&lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt; &lt;code&gt;InvalidTZPathWarning&lt;/code&gt; を発生&lt;/a&gt;させますが、他の実装はエラーのあるコンポーネントを黙って無視したり、例外を発生させたりすることができます。</target>
        </trans-unit>
        <trans-unit id="7d5496a2a6eb94af65673cb0d50ad6bafe0ea28b" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;IMAP4rev1&lt;/code&gt; extension command.</source>
          <target state="translated">これは &lt;code&gt;IMAP4rev1&lt;/code&gt; 拡張コマンドです。</target>
        </trans-unit>
        <trans-unit id="7b34ee508bd103c5e0b8626cf2d804764b1677d4" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for running WSGI applications. Each instance will handle a single HTTP request, although in principle you could create a subclass that was reusable for multiple requests.</source>
          <target state="translated">これはWSGIアプリケーションを実行するための抽象的な基底クラスです。各インスタンスは単一のHTTPリクエストを処理しますが、原理的には複数のリクエストに再利用可能なサブクラスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a7592b3f4af1c675ae0461bbd0cd882d434a1f23" translate="yes" xml:space="preserve">
          <source>This is an abstract base class, meaning that this class should not be instantiated directly. Define a subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; to capture information about a particular time zone.</source>
          <target state="translated">これは抽象基本クラスです。つまり、このクラスを直接インスタンス化しないでください。&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; の&lt;/a&gt;サブクラスを定義して、特定のタイムゾーンに関する情報を取得します。</target>
        </trans-unit>
        <trans-unit id="0fe0477da04d468c9bd5e5b663db76e9e220f768" translate="yes" xml:space="preserve">
          <source>This is an advanced function that is not needed in everyday Python programming, unlike &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;とは異なり、日常のPythonプログラミングでは不要な高度な関数です。</target>
        </trans-unit>
        <trans-unit id="5d2b4b1396ba18b3d152dc46f2f7110e19305e7b" translate="yes" xml:space="preserve">
          <source>This is an alias for the builtin &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">これは組み込みの&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="2571e080d51d3b25b3470f01c190104b66dd3c80" translate="yes" xml:space="preserve">
          <source>This is an extension notation (a &lt;code&gt;'?'&lt;/code&gt; following a &lt;code&gt;'('&lt;/code&gt; is not meaningful otherwise). The first character after the &lt;code&gt;'?'&lt;/code&gt; determines what the meaning and further syntax of the construct is. Extensions usually do not create a new group; &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; is the only exception to this rule. Following are the currently supported extensions.</source>
          <target state="translated">これは拡張表記です（ &lt;code&gt;'('&lt;/code&gt; &lt;code&gt;'?'&lt;/code&gt; 続く'？'は、それ以外の場合は意味がありません。 &lt;code&gt;'?'&lt;/code&gt; の後の最初の文字は、構成の意味と追加の構文を決定します。拡張は通常、新しいグループを作成しません。 &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; は、このルールの唯一の例外です。以下は、現在サポートされている拡張機能です。</target>
        </trans-unit>
        <trans-unit id="8f2d1a3f7686213bcb3e68f37c26e08de32ed2cd" translate="yes" xml:space="preserve">
          <source>This is an implementation detail of the warnings framework; do not modify this value. Refer to the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module for more information on the warnings framework.</source>
          <target state="translated">これは警告フレームワークの実装の詳細です。この値は変更しないでください。警告フレームワークの詳細については、&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="8c538fda17e935aeeea92bf67a676d3e1bc51efb" translate="yes" xml:space="preserve">
          <source>This is an implementation of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). This is a dictionary-like object which represents the element attributes in a &lt;code&gt;startElement()&lt;/code&gt; call. In addition to the most useful dictionary operations, it supports a number of other methods as described by the interface. Objects of this class should be instantiated by readers; &lt;em&gt;attrs&lt;/em&gt; must be a dictionary-like object containing a mapping from attribute names to attribute values.</source>
          <target state="translated">これはの実装である &lt;code&gt;Attributes&lt;/code&gt; （セクションを参照インターフェイス&lt;a href=&quot;#attributes-objects&quot;&gt;インタフェース属性&lt;/a&gt;）。これは、辞書のようなオブジェクトであり、 &lt;code&gt;startElement()&lt;/code&gt; コールの要素属性を表します。最も便利なディクショナリ操作に加えて、インターフェイスで説明されているように他の多くのメソッドをサポートしています。このクラスのオブジェクトは、読者がインスタンス化する必要があります。&lt;em&gt;attrs&lt;/em&gt;は、属性名から属性値へのマッピングを含む辞書のようなオブジェクトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="00330212cc541703cd5ff8aa5689877b2be61306" translate="yes" xml:space="preserve">
          <source>This is an instance of &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; which is used to provide the &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function described below. Changing the attributes of this object will affect the size limits used by &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; and the Python debugger.</source>
          <target state="translated">これは、以下で説明する&lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;関数を提供するために使用される&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt;のインスタンスです。このオブジェクトの属性を変更すると、&lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;およびPythonデバッガーで使用されるサイズ制限に影響します。</target>
        </trans-unit>
        <trans-unit id="bc9d7efe1e111f4a3038022efcda5621f6b2ed82" translate="yes" xml:space="preserve">
          <source>This is an object that has the same methods as the entire module, but uses the Unicode database version 3.2 instead, for applications that require this specific version of the Unicode database (such as IDNA).</source>
          <target state="translated">これは、モジュール全体と同じメソッドを持ちますが、代わりにUnicodeデータベースのバージョン3.2を使用するオブジェクトで、この特定のバージョンのUnicodeデータベース(IDNAなど)を必要とするアプリケーションのためのものです。</target>
        </trans-unit>
        <trans-unit id="11c3ea74a96f83696c34a897e968eb0226a1d9a9" translate="yes" xml:space="preserve">
          <source>This is another standard signal handler, which will simply ignore the given signal.</source>
          <target state="translated">これも標準的なシグナルハンドラで、与えられたシグナルを単純に無視します。</target>
        </trans-unit>
        <trans-unit id="28def8bed8d2bdaa1f2c7697b00c97beb3107dd0" translate="yes" xml:space="preserve">
          <source>This is any Python function that takes no arguments. For example:</source>
          <target state="translated">これは引数を取らない任意のPython関数です。例えば</target>
        </trans-unit>
        <trans-unit id="ffe483266124d79a1a3157bbb4f1955342c8c1af" translate="yes" xml:space="preserve">
          <source>This is based on a proposed DOM Level 3 API which is still in the &amp;ldquo;working draft&amp;rdquo; stage, but this particular interface appears uncontroversial. Changes from the W3C will not necessarily affect this method in the Python DOM interface (though any new W3C API for this would also be supported).</source>
          <target state="translated">これは提案されたDOM Level 3 APIに基づいており、まだ「草案」段階にありますが、この特定のインターフェースは議論の余地がないようです。W3Cからの変更は、Python DOMインターフェースのこのメソッドに必ずしも影響するわけではありません（ただし、このための新しいW3C APIもサポートされます）。</target>
        </trans-unit>
        <trans-unit id="81372bd6ddf513a4aff4ec4908ff400e30f799f8" translate="yes" xml:space="preserve">
          <source>This is because the previous execution has left the socket in a &lt;code&gt;TIME_WAIT&lt;/code&gt; state, and can&amp;rsquo;t be immediately reused.</source>
          <target state="translated">これは、前回の実行でソケットが &lt;code&gt;TIME_WAIT&lt;/code&gt; 状態のままになり、すぐに再利用できないためです。</target>
        </trans-unit>
        <trans-unit id="4147f1a73ee64438aeb3d78ac0d958d8e52248aa" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">これは、組み込みの&lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt;関数に渡した結果として見た場合にのみ意味があるように見えるため、 &lt;code&gt;hexversion&lt;/code&gt; と呼ばれます。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; は、&lt;/a&gt;同じ情報のより人間に優しい符号化のために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d8cbab9ac810e4c25ca1ac03e26845a188132593" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">これは、組み込みの&lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt;関数に渡した結果として表示されたときにのみ実際に意味があるように見えるため、 &lt;code&gt;hexversion&lt;/code&gt; と呼ばれます。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; は、&lt;/a&gt;同じ情報のより人間に優しい符号化のために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7247eb7669c97fb110d163145704fe837c46400f" translate="yes" xml:space="preserve">
          <source>This is called automatically when the connection is garbage collected.</source>
          <target state="translated">これは、接続がガベージコレクションされたときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5d3174cacbda7afe783d9c63633b1c116ccef9ac" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">これは、イテレータが使い果たされるかガベージコレクションされたとき、または反復中にエラーが発生したときに自動的に呼び出されます。ただし、明示的に呼び出すか、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="59ac3e4b7b297c325ae39dbbc755025b5c7cea78" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">これは、イテレータが使い果たされたとき、ガベージコレクションが行われたとき、または反復中にエラーが発生したときに自動的に呼び出されます。ただし、明示的に呼び出すか、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5999a3dc3b574752f1df7627f793ed276ddc5431" translate="yes" xml:space="preserve">
          <source>This is called from the default &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;datetime.astimezone()&lt;/code&gt;&lt;/a&gt; implementation. When called from that, &lt;code&gt;dt.tzinfo&lt;/code&gt; is &lt;em&gt;self&lt;/em&gt;, and &lt;em&gt;dt&lt;/em&gt;&amp;rsquo;s date and time data are to be viewed as expressing a UTC time. The purpose of &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; is to adjust the date and time data, returning an equivalent datetime in &lt;em&gt;self&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="translated">これは、デフォルトの&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;datetime.astimezone()&lt;/code&gt; &lt;/a&gt;実装から呼び出されます。それから呼び出された場合、 &lt;code&gt;dt.tzinfo&lt;/code&gt; は&lt;em&gt;self&lt;/em&gt;であり、&lt;em&gt;dt&lt;/em&gt;の日付と時刻のデータはUTC時間を表すものと見なされます。&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;の目的は、日付と時刻のデータを調整し、同等の日時を&lt;em&gt;自分&lt;/em&gt;のローカル時間で返すことです。</target>
        </trans-unit>
        <trans-unit id="f45a7baf47bfb2b113381808c519faae7853a34e" translate="yes" xml:space="preserve">
          <source>This is called in the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop. This method can be overridden by subclasses or mixin classes to perform actions specific to a given service, such as cleanup actions.</source>
          <target state="translated">これは&lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt; &lt;code&gt;serve_forever()&lt;/code&gt; &lt;/a&gt;ループで呼び出されます。このメソッドをサブクラスまたはミックスインクラスでオーバーライドして、クリーンアップアクションなど、特定のサービスに固有のアクションを実行できます。</target>
        </trans-unit>
        <trans-unit id="c5fc5d96310a3ced5b6cfd3ab67361662a6f8278" translate="yes" xml:space="preserve">
          <source>This is called when an exception occurs and no exception handler is set. This can be called by a custom exception handler that wants to defer to the default handler behavior.</source>
          <target state="translated">これは、例外が発生し、例外ハンドラが設定されていない場合に呼び出されます。これは、デフォルトのハンドラの動作を優先させたいカスタム例外ハンドラによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0faadeef90e30191e68184d130440c2fd9562e5a" translate="yes" xml:space="preserve">
          <source>This is designed to be used with &lt;code&gt;@unittest.skipIf()&lt;/code&gt; to annotate tests that need to use an &lt;code&gt;assert_python*()&lt;/code&gt; function to launch an isolated mode (&lt;code&gt;-I&lt;/code&gt;) or no environment mode (&lt;code&gt;-E&lt;/code&gt;) sub-interpreter process.</source>
          <target state="translated">これは、 &lt;code&gt;@unittest.skipIf()&lt;/code&gt; &lt;code&gt;assert_python*()&lt;/code&gt; に使用して、assert_python *（）関数を使用して分離モード（ &lt;code&gt;-I&lt;/code&gt; ）または環境モードなし（ &lt;code&gt;-E&lt;/code&gt; ）サブインタープリタープロセスを起動する必要があるテストに注釈を付けるように設計されています。</target>
        </trans-unit>
        <trans-unit id="cd6da2b2fb65c65ba6fb4c1334c748833afa5902" translate="yes" xml:space="preserve">
          <source>This is due to the fact that &amp;ldquo;0&amp;rdquo; and &amp;ldquo;2&amp;rdquo; are in the same level in the graph (they would have been returned in the same call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt;) and the order between them is determined by the order of insertion.</source>
          <target state="translated">これは、「0」と「2」がグラフの同じレベルにあり（&lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; の&lt;/a&gt;同じ呼び出しで返される）、それらの間の順序は挿入の順序によって決定されるためです。</target>
        </trans-unit>
        <trans-unit id="bfa80b779a073dbddfb027c4551bacdf6e96317a" translate="yes" xml:space="preserve">
          <source>This is easy to use but not much good if you are expecting megabytes to be uploaded &amp;mdash; in that case, use the &lt;code&gt;FieldStorage&lt;/code&gt; class instead which is much more flexible.</source>
          <target state="translated">これは簡単に使用できますが、メガバイトのアップロードが予想される場合はあまり適していません。その場合は、より柔軟な &lt;code&gt;FieldStorage&lt;/code&gt; クラスを使用してください。</target>
        </trans-unit>
        <trans-unit id="5a46664cff1edb9374b98b2675a73183f1e05af0" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been awaited), or the arguments that the mock was last awaited with. Functions the same as &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;None&lt;/code&gt; （モックが待機されていない場合）、またはモックが最後に待機された引数のいずれかです。&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt;と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="8ee7c7bddc5bfce27b7479c43c2e7d01522714be" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been called), or the arguments that the mock was last called with. This will be in the form of a tuple: the first member, which can also be accessed through the &lt;code&gt;args&lt;/code&gt; property, is any ordered arguments the mock was called with (or an empty tuple) and the second member, which can also be accessed through the &lt;code&gt;kwargs&lt;/code&gt; property, is any keyword arguments (or an empty dictionary).</source>
          <target state="translated">これは &lt;code&gt;None&lt;/code&gt; （モックが呼び出されていない場合）、またはモックが最後に呼び出された引数のいずれかです。これはタプルの形式になります： &lt;code&gt;args&lt;/code&gt; プロパティからもアクセスできる最初のメンバーは、モックが呼び出された順序付けされた引数（または空のタプル）であり、2番目のメンバーはからもアクセスできます &lt;code&gt;kwargs&lt;/code&gt; からのプロパティは、任意のキーワード引数（または空の辞書）です。</target>
        </trans-unit>
        <trans-unit id="01e02c69372dc79d00a36b7f2f02229c79989833" translate="yes" xml:space="preserve">
          <source>This is either the string &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt; depending on the encoding used, or it is a function, in which case you should call the function with a single argument, the Message object being encoded. The function should then set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header itself to whatever is appropriate.</source>
          <target state="translated">これは、使用されるエンコーディングに応じて &lt;code&gt;quoted-printable&lt;/code&gt; または &lt;code&gt;base64&lt;/code&gt; の文字列であるか、関数です。この場合、単一の引数で関数を呼び出す必要があり、Messageオブジェクトはエンコードされます。次に、関数は&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダー自体を適切なものに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6bb8e0c84066f126935cee989b98ba5d876c60f" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; followed by &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt;, except that it can be implemented more efficiently.</source>
          <target state="translated">これは、 &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; に続けて &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt; 実行することと同等ですが、より効率的に実装できる点が異なります。</target>
        </trans-unit>
        <trans-unit id="3319b448c1c6cbefa269d764020c1e9cc96a2779" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="aa06639c9dada4d0f5953fda0a5c6997357afb40" translate="yes" xml:space="preserve">
          <source>This is equivalent to checking &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt; をチェックすることと同じです。</target>
        </trans-unit>
        <trans-unit id="f60b0b66a93a2faa96a56fea405d2e1c3db7f538" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">これは、Pythonを起動する前に&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt;環境変数を定義することと同じです。</target>
        </trans-unit>
        <trans-unit id="2d56fbd1cf97be24fb774416157697042d6e0ca4" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">これは、Pythonを起動する前に&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt;環境変数を定義することと同じです。</target>
        </trans-unit>
        <trans-unit id="dae21f956e04a558bc35743abc58b55502e439ff" translate="yes" xml:space="preserve">
          <source>This is equivalent to iterating over &lt;em&gt;tests&lt;/em&gt;, calling &lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt;&lt;code&gt;addTest()&lt;/code&gt;&lt;/a&gt; for each element.</source>
          <target state="translated">これは、各要素に対して&lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt; &lt;code&gt;addTest()&lt;/code&gt; &lt;/a&gt;を呼び出して&lt;em&gt;テスト&lt;/em&gt;を反復することと同じです。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="46af01db1ebbcf9280ef7a5d2036bb35ee1e92bc" translate="yes" xml:space="preserve">
          <source>This is essentially a wrapper around the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; locking calls. &lt;em&gt;fd&lt;/em&gt; is the file descriptor (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well) of the file to lock or unlock, and &lt;em&gt;cmd&lt;/em&gt; is one of the following values:</source>
          <target state="translated">これは基本的に、&lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt;ロック呼び出しのラッパーです。&lt;em&gt;fd&lt;/em&gt;はロックまたはロック解除するファイルのファイル記述子（&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッドを提供するファイルオブジェクトも受け入れられます）で、&lt;em&gt;cmd&lt;/em&gt;は次のいずれかの値です。</target>
        </trans-unit>
        <trans-unit id="1262e4d29623b67080bb0c2cf94682b57cb12bfd" translate="yes" xml:space="preserve">
          <source>This is exact and cannot overflow.</source>
          <target state="translated">これは正確であり、オーバーフローすることはできません。</target>
        </trans-unit>
        <trans-unit id="fc74c5855f1c0d1c6999828120e71dcfa9e0e308" translate="yes" xml:space="preserve">
          <source>This is exact but may overflow.</source>
          <target state="translated">これは正確ですが、オーバーフローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="f6111a25eb387e271fc95a7e8286968c73da0202" translate="yes" xml:space="preserve">
          <source>This is exact, and cannot overflow. timedelta.seconds and timedelta.microseconds are 0, and date2 + timedelta == date1 after.</source>
          <target state="translated">timedelta.secondsとtimedelta.microsecondsは0で、date2+timedelta ==date1 afterとなります。</target>
        </trans-unit>
        <trans-unit id="dcf5c506f0484cee378d4114bf8d9c3d093323cc" translate="yes" xml:space="preserve">
          <source>This is expensive to compute if &lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt;&lt;code&gt;get_matching_blocks()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt;&lt;code&gt;get_opcodes()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t already been called, in which case you may want to try &lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt;&lt;code&gt;quick_ratio()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt;&lt;code&gt;real_quick_ratio()&lt;/code&gt;&lt;/a&gt; first to get an upper bound.</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt; &lt;code&gt;get_matching_blocks()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt; &lt;code&gt;get_opcodes()&lt;/code&gt; &lt;/a&gt;がまだ呼び出されていない場合、これは計算にコストがかかります。この場合、&lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt; &lt;code&gt;quick_ratio()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt; &lt;code&gt;real_quick_ratio()&lt;/code&gt; を&lt;/a&gt;最初に試し、上限を取得することができます。</target>
        </trans-unit>
        <trans-unit id="bd9d6cb897df6f5b2d0449a69913f43eb00204ae" translate="yes" xml:space="preserve">
          <source>This is experimental and due to be deprecated when it is replaced with the Tk DND.</source>
          <target state="translated">これは実験的なもので、Tk DNDに置き換えられたときに非推奨になる予定です。</target>
        </trans-unit>
        <trans-unit id="6a244913a01960d26b2ef91db13b57007d2d6acc" translate="yes" xml:space="preserve">
          <source>This is how SQLite types are converted to Python types by default:</source>
          <target state="translated">このようにSQLiteの型はデフォルトでPythonの型に変換されています。</target>
        </trans-unit>
        <trans-unit id="1b3e8d5208ddfd0f7c07e80cfbdba372f7f6082f" translate="yes" xml:space="preserve">
          <source>This is identical to &lt;code&gt;m.group(g)&lt;/code&gt;. This allows easier access to an individual group from a match:</source>
          <target state="translated">これは &lt;code&gt;m.group(g)&lt;/code&gt; と同じです。これにより、マッチから個々のグループに簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8e19e27afede528b8b1ac1b39ae6eb0b912701ac" translate="yes" xml:space="preserve">
          <source>This is identical to the creation of a normal socket, and will use the same options for creation. Refer to the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; documentation for information on creating sockets.</source>
          <target state="translated">これは通常のソケットの作成と同じであり、作成に同じオプションを使用します。&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;作成については、ソケットのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="318285d2e289fe33dad1c5808834712129e2974a" translate="yes" xml:space="preserve">
          <source>This is implemented using &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt;; see that class&amp;rsquo;s documentation for more powerful ways to manage and communicate with subprocesses.</source>
          <target state="translated">これは&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;を使用して実装されます。サブプロセスを管理および通信するためのより強力な方法については、そのクラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e38dda8d9da39d64ec212271ef2e75c3501c8100" translate="yes" xml:space="preserve">
          <source>This is like &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but returns the current UTC date and time, as a naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. An aware current UTC datetime can be obtained by calling &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt;. See also &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;に似ていますが、現在のUTCの日付と時刻を単純な&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトとして返します。認識されている現在のUTC日時は、 &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt; を呼び出すことで取得できます。&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="169690a3743933d399ba7724490b8c5dc773a8be" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;print_exc(limit)&lt;/code&gt; but returns a string instead of printing to a file.</source>
          <target state="translated">これは &lt;code&gt;print_exc(limit)&lt;/code&gt; に似ていますが、ファイルに出力する代わりに文字列を返します。</target>
        </trans-unit>
        <trans-unit id="16a6c6328d73a547359435cc278b71a11fcab094" translate="yes" xml:space="preserve">
          <source>This is like calling &lt;a href=&quot;#pathlib.Path.glob&quot;&gt;&lt;code&gt;Path.glob()&lt;/code&gt;&lt;/a&gt; with &amp;ldquo;&lt;code&gt;**/&lt;/code&gt;&amp;rdquo; added in front of the given relative &lt;em&gt;pattern&lt;/em&gt;:</source>
          <target state="translated">これは、特定の相対&lt;em&gt;パターンの&lt;/em&gt;前に「 &lt;code&gt;**/&lt;/code&gt; 」を追加して&lt;a href=&quot;#pathlib.Path.glob&quot;&gt; &lt;code&gt;Path.glob()&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0036c10d923d16a01721d2b94dc096c0c58c8" translate="yes" xml:space="preserve">
          <source>This is like function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above, except that a string containing doctest examples is specified directly, via the &lt;em&gt;src&lt;/em&gt; argument.</source>
          <target state="translated">これは上記の関数&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; に&lt;/a&gt;似ていますが、doctestの例を含む文字列が&lt;em&gt;src&lt;/em&gt;引数を介して直接指定される点が異なります。</target>
        </trans-unit>
        <trans-unit id="c0e58e2745c0e6f9d952d1bcb528a5a4aef91c49" translate="yes" xml:space="preserve">
          <source>This is most useful for debugging deadlock: this function does not require the deadlocked threads&amp;rsquo; cooperation, and such threads&amp;rsquo; call stacks are frozen for as long as they remain deadlocked. The frame returned for a non-deadlocked thread may bear no relationship to that thread&amp;rsquo;s current activity by the time calling code examines the frame.</source>
          <target state="translated">これはデッドロックのデバッグに最も役立ちます。この関数はデッドロックされたスレッドの協力を必要とせず、そのようなスレッドの呼び出しスタックはデッドロックのままである限りフリーズされます。デッドロックしていないスレッドに対して返されたフレームは、呼び出し元のコードがフレームを検査するまでに、そのスレッドの現在のアクティビティとは関係がない場合があります。</target>
        </trans-unit>
        <trans-unit id="78939d394c86630532b9214b845b5f630569e297" translate="yes" xml:space="preserve">
          <source>This is nice and fine, but how would one access the additional elements contained in this array? Since the type still only knows about 4 elements, we get errors accessing other elements:</source>
          <target state="translated">これは良いことですが、この配列に含まれる追加の要素にはどうやってアクセスするのでしょうか?この型はまだ4つの要素しか知らないので、他の要素にアクセスする際にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="b1d69acd3115aceb80f8c64013384f31d9c19385" translate="yes" xml:space="preserve">
          <source>This is not a general &amp;ldquo;persistence&amp;rdquo; module. For general persistence and transfer of Python objects through RPC calls, see the modules &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module exists mainly to support reading and writing the &amp;ldquo;pseudo-compiled&amp;rdquo; code for Python modules of &lt;code&gt;.pyc&lt;/code&gt; files. Therefore, the Python maintainers reserve the right to modify the marshal format in backward incompatible ways should the need arise. If you&amp;rsquo;re serializing and de-serializing Python objects, use the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module instead &amp;ndash; the performance is comparable, version independence is guaranteed, and pickle supports a substantially wider range of objects than marshal.</source>
          <target state="translated">これは一般的な「持続性」モジュールではありません。 RPC呼び出しによるPythonオブジェクトの一般的な永続化と転送については、モジュール&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;shelve#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;a href=&quot;#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;モジュールはPythonモジュールのための「擬似コンパイル」コード読み取りと書き込みをサポートするために主に存在 &lt;code&gt;.pyc&lt;/code&gt; ファイルを。したがって、Pythonメンテナは、必要に応じて、下位互換性のない方法でマーシャル形式を変更する権利を留保します。 Pythonオブジェクトをシリアライズおよびデシリアライズする場合は、代わりに&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールを使用してください。パフォーマンスは同等であり、バージョンの独立性が保証されており、pickleはマーシャルよりもはるかに幅広いオブジェクトをサポートしています。</target>
        </trans-unit>
        <trans-unit id="14c34954803449e8b6ca12236775c11a28756231" translate="yes" xml:space="preserve">
          <source>This is not really an opcode. It identifies the dividing line between opcodes which don&amp;rsquo;t use their argument and those that do (&lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; and &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt;, respectively).</source>
          <target state="translated">これは実際にはオペコードではありません。引数を使用しないオペコードとそれを使用するオペコードの間の境界線を識別します（それぞれ &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; および &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8311c7ab3b4f6d1243c8202d9f68fbbacfaddec8" translate="yes" xml:space="preserve">
          <source>This is often the same as &lt;code&gt;obj.__annotations__&lt;/code&gt;. In addition, forward references encoded as string literals are handled by evaluating them in &lt;code&gt;globals&lt;/code&gt; and &lt;code&gt;locals&lt;/code&gt; namespaces. If necessary, &lt;code&gt;Optional[t]&lt;/code&gt; is added for function and method annotations if a default value equal to &lt;code&gt;None&lt;/code&gt; is set. For a class &lt;code&gt;C&lt;/code&gt;, return a dictionary constructed by merging all the &lt;code&gt;__annotations__&lt;/code&gt; along &lt;code&gt;C.__mro__&lt;/code&gt; in reverse order.</source>
          <target state="translated">多くの場合、これは &lt;code&gt;obj.__annotations__&lt;/code&gt; と同じです。さらに、文字列リテラルとしてエンコードされた前方参照は、 &lt;code&gt;globals&lt;/code&gt; および &lt;code&gt;locals&lt;/code&gt; 名前空間で評価することによって処理されます。 &lt;code&gt;None&lt;/code&gt; と等しいデフォルト値が設定されている場合、必要に &lt;code&gt;Optional[t]&lt;/code&gt; 、関数とメソッドの注釈にOptional [t]が追加されます。クラス &lt;code&gt;C&lt;/code&gt; の場合、すべての &lt;code&gt;__annotations__&lt;/code&gt; を &lt;code&gt;C.__mro__&lt;/code&gt; に沿って逆の順序でマージすることによって構築された辞書を返します。</target>
        </trans-unit>
        <trans-unit id="55f456f6150c016abb37654a92afed0dd5930c55" translate="yes" xml:space="preserve">
          <source>This is one of the oldest synchronization primitives in the history of computer science, invented by the early Dutch computer scientist Edsger W. Dijkstra (he used the names &lt;code&gt;P()&lt;/code&gt; and &lt;code&gt;V()&lt;/code&gt; instead of &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">これは、コンピューターサイエンスの歴史の中で最も古い同期プリミティブの1つであり、初期のオランダのコンピューターサイエンティストEdsger W. Dijkstraによって発明されました（彼は、&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; の&lt;/a&gt;代わりに &lt;code&gt;P()&lt;/code&gt; および &lt;code&gt;V()&lt;/code&gt; という名前を使用しました）。</target>
        </trans-unit>
        <trans-unit id="8ca326cbb935374f0ae3d5c7f95cf7afce128acc" translate="yes" xml:space="preserve">
          <source>This is one of the simplest mechanisms for communication between threads: one thread signals an event and other threads wait for it.</source>
          <target state="translated">これは、スレッド間の通信のための最も単純なメカニズムの一つです:1つのスレッドがイベントを通知し、他のスレッドはそれを待ちます。</target>
        </trans-unit>
        <trans-unit id="85bc3018b9b177c10f39f4bc387ed18b0837940e" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;a href=&quot;#signal.SIGCHLD&quot;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/a&gt; is to simply ignore it.</source>
          <target state="translated">これは、2つの標準的な信号処理オプションの1つです。シグナルのデフォルト機能を実行するだけです。たとえば、ほとんどのシステムでは、 &lt;code&gt;SIGQUIT&lt;/code&gt; のデフォルトのアクションはコアをダンプして終了することですが、&lt;a href=&quot;#signal.SIGCHLD&quot;&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/a&gt;のデフォルトのアクションは単にそれを無視することです。</target>
        </trans-unit>
        <trans-unit id="86ba83444c95b331e504dbbe33363d01f2d21c52" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;code&gt;SIGCHLD&lt;/code&gt; is to simply ignore it.</source>
          <target state="translated">これは、2つの標準的な信号処理オプションの1つです。信号のデフォルト機能を実行するだけです。たとえば、ほとんどのシステムでは、 &lt;code&gt;SIGQUIT&lt;/code&gt; のデフォルトのアクションはコアをダンプして終了することですが、 &lt;code&gt;SIGCHLD&lt;/code&gt; のデフォルトのアクションは単にそれを無視することです。</target>
        </trans-unit>
        <trans-unit id="0277b7fe4737cfb83edc05d2ac0b1e99b8eb5b48" translate="yes" xml:space="preserve">
          <source>This is provided so that a custom filename can be provided.</source>
          <target state="translated">これは、カスタムファイル名を提供できるように提供されています。</target>
        </trans-unit>
        <trans-unit id="155e858c9f2971e28ff3407e7b9934beb0e04e92" translate="yes" xml:space="preserve">
          <source>This is raised if data is specified for a node which does not support data.</source>
          <target state="translated">データをサポートしていないノードにデータが指定された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="51ba11e2172daf21cf5dc1ec1c1df58005922e37" translate="yes" xml:space="preserve">
          <source>This is raised when an unrecognized option is found in the argument list or when an option requiring an argument is given none. The argument to the exception is a string indicating the cause of the error. For long options, an argument given to an option which does not require one will also cause this exception to be raised. The attributes &lt;code&gt;msg&lt;/code&gt; and &lt;code&gt;opt&lt;/code&gt; give the error message and related option; if there is no specific option to which the exception relates, &lt;code&gt;opt&lt;/code&gt; is an empty string.</source>
          <target state="translated">これは、認識されないオプションが引数リストで見つかった場合、または引数を必要とするオプションが指定されていない場合に発生します。例外の引数は、エラーの原因を示す文字列です。長いオプションの場合、引数を必要としないオプションに引数を指定すると、この例外が発生します。属性 &lt;code&gt;msg&lt;/code&gt; と &lt;code&gt;opt&lt;/code&gt; は、エラーメッセージと関連オプションを提供します。例外が関係する特定のオプションがない場合、 &lt;code&gt;opt&lt;/code&gt; は空の文字列です。</target>
        </trans-unit>
        <trans-unit id="76312b639346c9f0ed81f7029a1eb2df8cf32e26" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt;&lt;code&gt;header_encode()&lt;/code&gt;&lt;/a&gt; except that the string is fit into maximum line lengths as given by the argument &lt;em&gt;maxlengths&lt;/em&gt;, which must be an iterator: each element returned from this iterator will provide the next maximum line length.</source>
          <target state="translated">これは&lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt; &lt;code&gt;header_encode()&lt;/code&gt; に&lt;/a&gt;似ていますが、文字列がイテレータでなければならない引数&lt;em&gt;maxlengths&lt;/em&gt;で指定される最大行長に適合します。このイテレータから返される各要素は、次の最大行長を提供します。</target>
        </trans-unit>
        <trans-unit id="b615c7ad20b9138e70d1eb8b4dc44b2eb332b517" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt;&lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 2&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt; &lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt; &lt;/a&gt;に似ていますが、 &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; 呼び出し構文に使用されます。位置 &lt;code&gt;count + 2&lt;/code&gt; のスタック項目は、対応する呼び出し可能 &lt;code&gt;f&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="520c63df4ff805ac58b532a712ba8836cd814f03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 1&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;に似ていますが、 &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; 呼び出し構文に使用されます。位置 &lt;code&gt;count + 1&lt;/code&gt; のスタック項目は、対応する呼び出し可能 &lt;code&gt;f&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f0f001bdc4e257d8aab7e66c626f10b79ecf0cce" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a list instead of tuple. Implements iterable unpacking in list displays &lt;code&gt;[*x, *y, *z]&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;に似ていますが、タプルの代わりにリストをプッシュします。リスト表示の反復可能なアンパッキングを実装します &lt;code&gt;[*x, *y, *z]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3848d91dc2ff50aa1e4c02a35fac1c890e31626" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a set instead of tuple. Implements iterable unpacking in set displays &lt;code&gt;{*x, *y, *z}&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;に似ていますが、タプルの代わりにセットをプッシュします。セット表示 &lt;code&gt;{*x, *y, *z}&lt;/code&gt; 反復可能なアンパックを実装します。</target>
        </trans-unit>
        <trans-unit id="8a5ede386bb9b2612cf30934e9da4810b0bc33ed" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">これは&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; に&lt;/a&gt;似ていますが、URLからパラメータを分割しません。これは、URLの&lt;em&gt;パス&lt;/em&gt;部分の各セグメント（&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396を&lt;/strong&gt;&lt;/a&gt;参照）にパラメーターを適用できるようにする最新のURL構文が必要な場合は、通常、&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; の&lt;/a&gt;代わりに使用する必要があります。パスセグメントとパラメータを分離するには、別の関数が必要です。この関数は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;タプルという名前の&lt;/a&gt; 5つのアイテムを返します。&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="235443fe20c693b3738b90aee38788761d709674" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">これは&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; に&lt;/a&gt;似ていますが、URLからパラメータを分割しません。URLの&lt;em&gt;パス&lt;/em&gt;部分の各セグメントにパラメーターを適用できるようにする最新のURL構文（&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396を&lt;/strong&gt;&lt;/a&gt;参照&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;必要な場合は、通常、urlparse（）の代わりにこれを使用する必要があります。パスセグメントとパラメータを分離するには、別の関数が必要です。この関数は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;tupleという名前の&lt;/a&gt;5つのアイテムを返します。&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155c14dfe42c8135f201e1eba12ead1b14a1d498" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;sorted(iterable)&lt;/code&gt;, but unlike &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, this implementation is not stable.</source>
          <target state="translated">これは、 &lt;code&gt;sorted(iterable)&lt;/code&gt; に似ていますが、&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;とは異なり、この実装は安定していません。</target>
        </trans-unit>
        <trans-unit id="812a1f27c6c6d735c8d382bf216664f1474b94fa" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=False&lt;/code&gt; and the list of strings passed as the first argument; however, where &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; takes a single argument which is list of strings, &lt;em&gt;subprocess_exec&lt;/em&gt; takes multiple string arguments.</source>
          <target state="translated">これは、 &lt;code&gt;shell=False&lt;/code&gt; で呼び出された標準ライブラリ&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;クラスと、最初の引数として渡された文字列のリストに似ています。ただし、&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;が文字列のリストである単一の引数を取る場合、&lt;em&gt;subprocess_exec&lt;/em&gt;は複数の文字列引数を取ります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b7e21c8133751241f1c19a21ebb0193ee2ef677" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;shell=True&lt;/code&gt; で呼び出される標準ライブラリ&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;クラスに似ています。</target>
        </trans-unit>
        <trans-unit id="cc5e49afeac866714bcab289ccdfaf9524cbc412" translate="yes" xml:space="preserve">
          <source>This is suited for when your data is discrete, and you don&amp;rsquo;t mind that the median may not be an actual data point.</source>
          <target state="translated">これは、データが離散的で、中央値が実際のデータポイントでなくてもかまわない場合に適しています。</target>
        </trans-unit>
        <trans-unit id="86b3510355c1fe9570b7071cc51a3472da435031" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;aRepr&lt;/code&gt;. It returns a string similar to that returned by the built-in function of the same name, but with limits on most sizes.</source>
          <target state="translated">これは &lt;code&gt;aRepr&lt;/code&gt; の&lt;a href=&quot;#reprlib.Repr.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;メソッドです。同じ名前の組み込み関数によって返されるものと同様の文字列を返しますが、ほとんどのサイズに制限があります。</target>
        </trans-unit>
        <trans-unit id="ddba4b7153571fdf5c33ce2d048ae2ec9e729ec1" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">これは、すべてのポリシークラスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;です。これは、いくつかの簡単なメソッドのデフォルトの実装に加えて、不変性プロパティ、&lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt;メソッド、およびコンストラクターセマンティクスの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="103c4fa731bb79f76162f7afd5a51a6b2b64b808" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">これは、すべてのポリシークラスの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;です。これは、いくつかの簡単なメソッドのデフォルトの実装と、不変性プロパティ、&lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt;メソッド、およびコンストラクターのセマンティクスの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="d1107a365663105be7dfc2b72bf4a3c2259c5eeb" translate="yes" xml:space="preserve">
          <source>This is the &lt;em&gt;output_charset&lt;/em&gt; attribute if that is not &lt;code&gt;None&lt;/code&gt;, otherwise it is &lt;em&gt;input_charset&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; でない場合、これは&lt;em&gt;output_charset&lt;/em&gt;属性です。それ以外の場合は、&lt;em&gt;input_charset&lt;/em&gt;です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a564908887b5551964c19be7d4e0a0b8f3d1b0a1" translate="yes" xml:space="preserve">
          <source>This is the XML file that is going to be manipulated:</source>
          <target state="translated">これが操作するXMLファイルです。</target>
        </trans-unit>
        <trans-unit id="7b01232b0fadd275694c8fe9a0cfcf63469b298d" translate="yes" xml:space="preserve">
          <source>This is the base class for all exceptions that the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package can raise. It is derived from the standard &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class and defines no additional methods.</source>
          <target state="translated">これは、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージで発生する可能性があるすべての例外の基本クラスです。これは標準の&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;クラスから派生し、追加のメソッドを定義していません。</target>
        </trans-unit>
        <trans-unit id="09a9c78f4b499866988037952e3b3e1103098b3f" translate="yes" xml:space="preserve">
          <source>This is the base class for all registered handlers &amp;mdash; and handles only the simple mechanics of registration.</source>
          <target state="translated">これはすべての登録済みハンドラーの基本クラスであり、登録の単純なメカニズムのみを処理します。</target>
        </trans-unit>
        <trans-unit id="c702066b03625bc85fc0ff9e93c36c1a9f5f2451" translate="yes" xml:space="preserve">
          <source>This is the base class for all the MIME-specific subclasses of &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Ordinarily you won&amp;rsquo;t create instances specifically of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, although you could. &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; is provided primarily as a convenient base class for more specific MIME-aware subclasses.</source>
          <target state="translated">これは、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; の&lt;/a&gt;すべてのMIME固有のサブクラスの基本クラスです。通常は&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; の&lt;/a&gt;インスタンスを作成することはできませんが、作成することはできます。&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;は、主に、より具体的なMIME対応サブクラスの便利な基本クラスとして提供されます。</target>
        </trans-unit>
        <trans-unit id="63c3452ed9f479b409885d526d1d2f473fc0b1e6" translate="yes" xml:space="preserve">
          <source>This is the base class for exceptions raised by the &lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class. It is derived from &lt;a href=&quot;#email.errors.MessageError&quot;&gt;&lt;code&gt;MessageError&lt;/code&gt;&lt;/a&gt;. This class is also used internally by the parser used by &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;クラスによって発生した例外の基本クラスです。&lt;a href=&quot;#email.errors.MessageError&quot;&gt; &lt;code&gt;MessageError&lt;/code&gt; &lt;/a&gt;から派生しています。このクラスは、&lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; &lt;/a&gt;によって使用されるパーサーによって内部的にも使用されます。</target>
        </trans-unit>
        <trans-unit id="12d993cc451ecc15f464dda6a51ac3528a894f72" translate="yes" xml:space="preserve">
          <source>This is the base class for the other SAX exception classes.</source>
          <target state="translated">これは、他のSAX例外クラスの基底クラスです。</target>
        </trans-unit>
        <trans-unit id="54578a7a3c812d9e6bd0a1b7b8c51329ad6f90a7" translate="yes" xml:space="preserve">
          <source>This is the base class of all warning category classes. It is a subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、すべての警告カテゴリクラスの基本クラスです。これは&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="63a93b41a0b6373507338eb5d949f5335b6b3ddd" translate="yes" xml:space="preserve">
          <source>This is the base of all AST node classes. The actual node classes are derived from the &lt;code&gt;Parser/Python.asdl&lt;/code&gt; file, which is reproduced &lt;a href=&quot;#abstract-grammar&quot;&gt;below&lt;/a&gt;. They are defined in the &lt;code&gt;_ast&lt;/code&gt; C module and re-exported in &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、すべてのASTノードクラスのベースです。実際のノードクラスは、&lt;a href=&quot;#abstract-grammar&quot;&gt;以下に&lt;/a&gt;再現されている &lt;code&gt;Parser/Python.asdl&lt;/code&gt; ファイルから派生しています。これらは &lt;code&gt;_ast&lt;/code&gt; Cモジュールで定義され、&lt;a href=&quot;#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; で&lt;/a&gt;再エクスポートされます。</target>
        </trans-unit>
        <trans-unit id="8538deb00176d8d84916528140d7f030e4cc4f43" translate="yes" xml:space="preserve">
          <source>This is the client side:</source>
          <target state="translated">こちらはクライアント側です。</target>
        </trans-unit>
        <trans-unit id="0995326a8a1a9b41b5401cc1a2e33ab049dd8d3d" translate="yes" xml:space="preserve">
          <source>This is the counterpart of &lt;a href=&quot;#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object, a string and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; is equivalent to &lt;code&gt;x.foobar = 123&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; の&lt;/a&gt;対応物です。引数は、オブジェクト、文字列、および任意の値です。文字列は、既存の属性または新しい属性を指定できます。オブジェクトで許可されている場合、関数は値を属性に割り当てます。たとえば、 &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; は &lt;code&gt;x.foobar = 123&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="a0dcb8d939a5adb04c7d789dbf2733cb3107c014" translate="yes" xml:space="preserve">
          <source>This is the current standard (STD66). Any changes to urllib.parse module should conform to this. Certain deviations could be observed, which are mostly for backward compatibility purposes and for certain de-facto parsing requirements as commonly observed in major browsers.</source>
          <target state="translated">これは現在の標準(STD66)です。urllib.parse モジュールへの変更はすべてこれに従うべきです。ある種の逸脱が観察される可能性がありますが、これは主に下位互換性のためと、主要なブラウザで一般的に観察されているような、ある種の事実上のパース要件のためです。</target>
        </trans-unit>
        <trans-unit id="66c8088759f9087b738e1b70d1cf37c8a1aae852" translate="yes" xml:space="preserve">
          <source>This is the default format.</source>
          <target state="translated">これがデフォルトのフォーマットです。</target>
        </trans-unit>
        <trans-unit id="38e2d748255fc3c02a104699832e8769048dc2cf" translate="yes" xml:space="preserve">
          <source>This is the entry point you will normally use. It accepts editing keystrokes until one of the termination keystrokes is entered. If &lt;em&gt;validator&lt;/em&gt; is supplied, it must be a function. It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the &lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt;&lt;code&gt;stripspaces&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">これは、通常使用するエントリポイントです。終了キーストロークの1つが入力されるまで、キーストロークの編集を受け入れます。&lt;em&gt;バリデーター&lt;/em&gt;が提供される場合、それは関数でなければなりません。キーストロークをパラメータとして入力されたキーストロークごとに呼び出されます。コマンドのディスパッチは結果に対して行われます。このメソッドは、ウィンドウの内容を文字列として返します。ウィンドウの空白が含まれるかどうかは、&lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt; &lt;code&gt;stripspaces&lt;/code&gt; &lt;/a&gt;属性の影響を受けます。</target>
        </trans-unit>
        <trans-unit id="79959507c8268ef58c50a5dc61525d5211978203" translate="yes" xml:space="preserve">
          <source>This is the factory used by &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; by default. &lt;code&gt;HeaderRegistry&lt;/code&gt; builds the class used to create a header instance dynamically, using &lt;em&gt;base_class&lt;/em&gt; and a specialized class retrieved from a registry that it holds. When a given header name does not appear in the registry, the class specified by &lt;em&gt;default_class&lt;/em&gt; is used as the specialized class. When &lt;em&gt;use_default_map&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), the standard mapping of header names to classes is copied in to the registry during initialization. &lt;em&gt;base_class&lt;/em&gt; is always the last class in the generated class&amp;rsquo;s &lt;code&gt;__bases__&lt;/code&gt; list.</source>
          <target state="translated">これは、デフォルトで&lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;によって使用されるファクトリです。 &lt;code&gt;HeaderRegistry&lt;/code&gt; は、&lt;em&gt;base_class&lt;/em&gt;およびそれが保持するレジストリから取得された特殊なクラスを使用して、ヘッダーインスタンスを動的に作成するために使用されるクラスを構築します。指定されたヘッダー名がレジストリに表示されない場合、&lt;em&gt;default_class&lt;/em&gt;で指定されたクラスが特殊なクラスとして使用されます。とき&lt;em&gt;use_default_mapが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、クラスにヘッダ名の標準マッピングは、初期化中に、レジストリにコピーされます。&lt;em&gt;base_class&lt;/em&gt;は常に、生成されたクラスの &lt;code&gt;__bases__&lt;/code&gt; リストの最後のクラスです。</target>
        </trans-unit>
        <trans-unit id="051f8529efd087892a2a4ff0d6f02ba8048fe846" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">これは完全なモジュールAPIリファレンスです。概要と概要について&lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;は、ipaddressモジュールの&lt;/a&gt;概要を参照してください。</target>
        </trans-unit>
        <trans-unit id="24a3d0cb25dd9e84816e2611ba871f99d223fc47" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">これは完全なモジュールAPIリファレンスです。概要と概要については、「&lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;ipaddressモジュールの&lt;/a&gt;概要」を参照してください。</target>
        </trans-unit>
        <trans-unit id="27cb2703cef928a010aa684a1cb6a3321bec9d97" translate="yes" xml:space="preserve">
          <source>This is the full set of data types supported by XML-RPC. Method calls may also raise a special &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; instance, used to signal XML-RPC server errors, or &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; used to signal an error in the HTTP/HTTPS transport layer. Both &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; derive from a base class called &lt;code&gt;Error&lt;/code&gt;. Note that the xmlrpc client module currently does not marshal instances of subclasses of built-in types.</source>
          <target state="translated">これは、XML-RPCでサポートされているデータ型の完全なセットです。メソッド呼び出しは、XML-RPCサーバーエラーを通知するために使用される特別な&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;インスタンス、またはHTTP / HTTPSトランスポート層でエラーを通知するために使用される&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;も発生させる場合があります。&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;は、どちらも &lt;code&gt;Error&lt;/code&gt; という基本クラスから派生しています。xmlrpcクライアントモジュールは現在、組み込み型のサブクラスのインスタンスをマーシャリングしないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="d83bc29fd516747de82e555ef075ed666ec7ae21" translate="yes" xml:space="preserve">
          <source>This is the inverse function of &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;. Its argument is the &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; or full 9-tuple (since the dst flag is needed; use &lt;code&gt;-1&lt;/code&gt; as the dst flag if it is unknown) which expresses the time in &lt;em&gt;local&lt;/em&gt; time, not UTC. It returns a floating point number, for compatibility with &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt;. If the input value cannot be represented as a valid time, either &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised (which depends on whether the invalid value is caught by Python or the underlying C libraries). The earliest date for which it can generate a time is platform-dependent.</source>
          <target state="translated">これは&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; の&lt;/a&gt;逆関数です。その引数は&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;または完全な9タプル（dstフラグが必要なため。不明の場合は &lt;code&gt;-1&lt;/code&gt; をdstフラグとして使用）であり、UTCではなく&lt;em&gt;ローカル&lt;/em&gt;時間で時刻を表します。&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;との互換性のために、浮動小数点数を返します。入力値を有効な時間として表すことができない場合、&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します（これは、無効な値がPythonでキャッチされているか、基になるCライブラリでキャッチされているかによって異なります）。時間を生成できる最も早い日付は、プラットフォームによって異なります。</target>
        </trans-unit>
        <trans-unit id="25952ff7c192298062c7c94fb2fb49d4252ac899" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt;&lt;code&gt;date.fromisoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt; &lt;code&gt;date.fromisoformat()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="45477d6b414816ee23b1e85292dcc9da8541a2e5" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt;. It only supports the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;#datetime.date.isoformat&quot;&gt; &lt;code&gt;date.isoformat()&lt;/code&gt; の&lt;/a&gt;逆です。 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 形式のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="cf97c2d88f89ba640b2d05161edb12e8643013b9" translate="yes" xml:space="preserve">
          <source>This is the main callback interface in SAX, and the one most important to applications. The order of events in this interface mirrors the order of the information in the document.</source>
          <target state="translated">これはSAXのメインのコールバックインタフェースであり、アプリケーションにとって最も重要なインタフェースです。このインターフェイスのイベントの順序は、ドキュメント内の情報の順序を反映しています。</target>
        </trans-unit>
        <trans-unit id="25c2af90efa3d54dc8077cc4e5001b757ee862ce" translate="yes" xml:space="preserve">
          <source>This is the name that could be used for performing a PTR lookup, not the resolved hostname itself.</source>
          <target state="translated">これは、解決されたホスト名そのものではなく、PTR 検索を実行するために使用できる名前です。</target>
        </trans-unit>
        <trans-unit id="387c82f524a84cb4d970741adb7a53c2b55ca754" translate="yes" xml:space="preserve">
          <source>This is the object passed to the constructor&amp;rsquo;s &lt;em&gt;template&lt;/em&gt; argument. In general, you shouldn&amp;rsquo;t change it, but read-only access is not enforced.</source>
          <target state="translated">これは、コンストラクタの&lt;em&gt;テンプレート&lt;/em&gt;引数に渡されるオブジェクトです。一般的には変更すべきではありませんが、読み取り専用アクセスは強制されません。</target>
        </trans-unit>
        <trans-unit id="a34eed16713b941a849879c228a4e75507e8cee6" translate="yes" xml:space="preserve">
          <source>This is the original source for the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package. The version of the package available from this site is suitable for use with Python 1.5.2, 2.1.x and 2.2.x, which do not include the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package in the standard library.</source>
          <target state="translated">これは、&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージの元のソースです。このサイトから入手できるパッケージのバージョンは、Python 1.5.2、2.1.x、および2.2.xでの使用に適しています。これらには、標準ライブラリに&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージが含まれていません。</target>
        </trans-unit>
        <trans-unit id="9c552faf3f40f576d4d85d3d7d48ed4c15002db5" translate="yes" xml:space="preserve">
          <source>This is the output of running the example above in verbose mode:</source>
          <target state="translated">これは、上記の例を冗長モードで実行したときの出力です。</target>
        </trans-unit>
        <trans-unit id="b14df329d9906c7fbcb90d2af4897d2c57320d08" translate="yes" xml:space="preserve">
          <source>This is the preferred way to create Futures in asyncio. This lets third-party event loops provide alternative implementations of the Future object (with better performance or instrumentation).</source>
          <target state="translated">これは、asyncio で Futures を作成する際に好ましい方法です。これにより、サードパーティのイベントループは、Future オブジェクトの代替的な実装を提供することができます (より良いパフォーマンスやインストルメンテーションを提供します)。</target>
        </trans-unit>
        <trans-unit id="69cfcab3a14463c73c17e763b38b52cd2336ac31" translate="yes" xml:space="preserve">
          <source>This is the same as the &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt;&lt;code&gt;DefaultHandler()&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t inhibit expansion of internal entities. The entity reference will not be passed to the default handler.</source>
          <target state="translated">これは&lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt; &lt;code&gt;DefaultHandler()&lt;/code&gt; &lt;/a&gt;と同じですが、内部エンティティの展開を妨げません。エンティティー参照はデフォルトのハンドラーに渡されません。</target>
        </trans-unit>
        <trans-unit id="389a68f916573ccba3b39324a1dc41b7986f9183" translate="yes" xml:space="preserve">
          <source>This is the same function as &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;. This entry point is maintained for backward compatibility.</source>
          <target state="translated">これは、&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;と同じ関数です。このエントリポイントは、下位互換性のために維持されています。</target>
        </trans-unit>
        <trans-unit id="25f22dab61a8af25218df92e4e7d0064cce134f2" translate="yes" xml:space="preserve">
          <source>This is the sample variance s&amp;sup2; with Bessel&amp;rsquo;s correction, also known as variance with N-1 degrees of freedom. Provided that the data points are representative (e.g. independent and identically distributed), the result should be an unbiased estimate of the true population variance.</source>
          <target state="translated">これは、ベッセルの補正を使用した標本分散s&amp;sup2;であり、N-1自由度の分散とも呼ばれます。データポイントが代表的なものである場合（例：独立しており、同一に分布している場合）、結果は真の母分散の不偏推定値になります。</target>
        </trans-unit>
        <trans-unit id="341ee391b304321c33512e1ca47d1b5d997e8b00" translate="yes" xml:space="preserve">
          <source>This is the server side:</source>
          <target state="translated">こちらはサーバー側です。</target>
        </trans-unit>
        <trans-unit id="616ff54fb339d5dc77cc6896ef1a784fa36685c0" translate="yes" xml:space="preserve">
          <source>This is the standard MSI schema for MSI 2.0, with the &lt;em&gt;tables&lt;/em&gt; variable providing a list of table definitions, and &lt;em&gt;_Validation_records&lt;/em&gt; providing the data for MSI validation.</source>
          <target state="translated">これはMSI 2.0の標準のMSIスキーマで、&lt;em&gt;tables&lt;/em&gt;変数はテーブル定義のリストを提供し、&lt;em&gt;_Validation_records&lt;/em&gt;はMSI検証用のデータを提供します。</target>
        </trans-unit>
        <trans-unit id="ccc570aa2319eff4f6519d490d8b14417d6139c0" translate="yes" xml:space="preserve">
          <source>This is the state management specification implemented by this module.</source>
          <target state="translated">これは、このモジュールで実装されている状態管理仕様です。</target>
        </trans-unit>
        <trans-unit id="4323953ab6362c591027031f3f3ca25f400868fa" translate="yes" xml:space="preserve">
          <source>This is the superclass of all Server objects in the module. It defines the interface, given below, but does not implement most of the methods, which is done in subclasses. The two parameters are stored in the respective &lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt;&lt;code&gt;server_address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">これは、モジュール内のすべてのサーバーオブジェクトのスーパークラスです。以下に示すインターフェースを定義しますが、サブクラスで実行されるほとんどのメソッドを実装していません。2つのパラメーターは、それぞれの&lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt; &lt;code&gt;server_address&lt;/code&gt; &lt;/a&gt;属性と&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;属性に格納されます。</target>
        </trans-unit>
        <trans-unit id="9237177cdeb23cc7d84e7c1ca93d900094955002" translate="yes" xml:space="preserve">
          <source>This is the superclass of all request handler objects. It defines the interface, given below. A concrete request handler subclass must define a new &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method, and can override any of the other methods. A new instance of the subclass is created for each request.</source>
          <target state="translated">これは、すべての要求ハンドラオブジェクトのスーパークラスです。これは、以下に示すインターフェースを定義します。具体的なリクエストハンドラサブクラスは、新しい&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを定義する必要があり、他のメソッドをオーバーライドできます。サブクラスの新しいインスタンスは、要求ごとに作成されます。</target>
        </trans-unit>
        <trans-unit id="fdc1ccdadc662cedd90516cae609f70b8ee431d2" translate="yes" xml:space="preserve">
          <source>This is the type of lock objects.</source>
          <target state="translated">ロックオブジェクトの種類です。</target>
        </trans-unit>
        <trans-unit id="933248421ba03ff327c1ad6cab4bf70f50be04b0" translate="yes" xml:space="preserve">
          <source>This is typically used to install the sequence tables.</source>
          <target state="translated">これは通常、シーケンステーブルをインストールするために使用されます。</target>
        </trans-unit>
        <trans-unit id="046ceaf4727b6ee744292cb707aecb0851c71b11" translate="yes" xml:space="preserve">
          <source>This is used mainly to distinguish platform-specific build directories and platform-specific built distributions. Typically includes the OS name and version and the architecture (as supplied by &amp;lsquo;os.uname()&amp;rsquo;), although the exact information included depends on the OS; e.g., on Linux, the kernel version isn&amp;rsquo;t particularly important.</source>
          <target state="translated">これは主に、プラットフォーム固有のビルドディレクトリとプラットフォーム固有のビルドされたディストリビューションを区別するために使用されます。通常、OSの名前とバージョン、およびアーキテクチャ（「os.uname（）」によって提供される）が含まれますが、含まれる正確な情報はOSによって異なります。たとえば、Linuxでは、カーネルのバージョンは特に重要ではありません。</target>
        </trans-unit>
        <trans-unit id="ec42fa287ba1b2be0931da3b49e8350f384882a4" translate="yes" xml:space="preserve">
          <source>This is useful because constants are often given to a greater precision than is needed by the application. Another benefit is that rounding immediately eliminates unintended effects from digits beyond the current precision. In the following example, using unrounded inputs means that adding zero to a sum can change the result:</source>
          <target state="translated">定数がアプリケーションで必要とされる精度よりも高い精度で与えられることが多いので、これは便利です。もう一つの利点は、丸めを行うことで、現在の精度を超えた桁数による意図しない影響を即座に排除できることです。次の例では、丸められていない入力を使用すると、合計にゼロを加えると結果が変わることを意味します。</target>
        </trans-unit>
        <trans-unit id="d66f84b77c15706a38e4c4ca53e6282aa811fcdf" translate="yes" xml:space="preserve">
          <source>This is usually a string explaining the reason for this error.</source>
          <target state="translated">これは通常、このエラーの理由を説明する文字列です。</target>
        </trans-unit>
        <trans-unit id="2fcdb8b1d9772564fbf99b8c55ef224ea5312002" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">これが&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt;関数をピクルすることができない理由です：すべての &lt;code&gt;lambda&lt;/code&gt; 関数は同じ名前を共有します： &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="639399fee0a2268eedbc899c19e64eaccd627380" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">これが&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt;関数をpickle化できない理由です。すべての &lt;code&gt;lambda&lt;/code&gt; 関数は同じ名前を共有します： &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9229d39a2ae8521b2d3a535c1b9b07071a108294" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t without caveats and limitations however, which is why it is not the default behaviour. In order to know what attributes are available on the spec object, autospec has to introspect (access attributes) the spec. As you traverse attributes on the mock a corresponding traversal of the original object is happening under the hood. If any of your specced objects have properties or descriptors that can trigger code execution then you may not be able to use autospec. On the other hand it is much better to design your objects so that introspection is safe &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;.</source>
          <target state="translated">ただし、これには警告と制限がないわけではないため、デフォルトの動作ではありません。仕様オブジェクトで使用可能な属性を知るために、autospecは仕様をイントロスペクト（属性にアクセス）する必要があります。モックの属性をトラバースすると、元のオブジェクトの対応するトラバースが内部で行われます。指定されたオブジェクトのいずれかにコード実行をトリガーできるプロパティまたは記述子がある場合、autospecを使用できない場合があります。一方、イントロスペクションが安全になるようにオブジェクトを設計する方がはるかに優れています&lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d207f3e3c1fb67cb63728a3af6a4675ea6f3832d" translate="yes" xml:space="preserve">
          <source>This iterates over all the payloads in all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning the string payloads line-by-line. It skips over all the subpart headers, and it skips over any subpart with a payload that isn&amp;rsquo;t a Python string. This is somewhat equivalent to reading the flat text representation of the message from a file using &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, skipping over all the intervening headers.</source>
          <target state="translated">これは、&lt;em&gt;msgの&lt;/em&gt;すべてのサブパートのすべてのペイロードを反復処理し、文字列ペイロードを行ごとに返します。すべてのサブパートヘッダーをスキップし、Python文字列ではないペイロードを持つサブパートをスキップします。これは、間にあるすべてのヘッダーをスキップして、&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;を使用してファイルからメッセージのフラットテキスト表現を読み取るのと多少同じです。</target>
        </trans-unit>
        <trans-unit id="eb7822f26a5a0f18f548778163ce86fd0343f5b1" translate="yes" xml:space="preserve">
          <source>This iterates over all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning only those subparts that match the MIME type specified by &lt;em&gt;maintype&lt;/em&gt; and &lt;em&gt;subtype&lt;/em&gt;.</source>
          <target state="translated">これは、&lt;em&gt;msgの&lt;/em&gt;すべてのサブパートを反復処理し、&lt;em&gt;maintype&lt;/em&gt;および&lt;em&gt;subtypeで&lt;/em&gt;指定されたMIMEタイプに一致する&lt;em&gt;サブパート&lt;/em&gt;のみを返します。</target>
        </trans-unit>
        <trans-unit id="3317b48233efdbea05d2c0138533c7822a99222c" translate="yes" xml:space="preserve">
          <source>This iterates over the lines of all files listed in &lt;code&gt;sys.argv[1:]&lt;/code&gt;, defaulting to &lt;code&gt;sys.stdin&lt;/code&gt; if the list is empty. If a filename is &lt;code&gt;'-'&lt;/code&gt;, it is also replaced by &lt;code&gt;sys.stdin&lt;/code&gt; and the optional arguments &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are ignored. To specify an alternative list of filenames, pass it as the first argument to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;. A single file name is also allowed.</source>
          <target state="translated">これは、 &lt;code&gt;sys.argv[1:]&lt;/code&gt; にリストされているすべてのファイルの行を繰り返し、リストが空の場合はデフォルトで &lt;code&gt;sys.stdin&lt;/code&gt; になります。ファイル名が &lt;code&gt;'-'&lt;/code&gt; の場合、それも &lt;code&gt;sys.stdin&lt;/code&gt; に置き換えられ、オプションの引数&lt;em&gt;mode&lt;/em&gt;および&lt;em&gt;openhook&lt;/em&gt;は無視されます。ファイル名の代替リストを指定するには、それを&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; の&lt;/a&gt;最初の引数として渡します。単一のファイル名も使用できます。</target>
        </trans-unit>
        <trans-unit id="ac116f41d5b2fcd57891fc5192b5d3f2274dfd05" translate="yes" xml:space="preserve">
          <source>This itertool may require significant auxiliary storage (depending on how much temporary data needs to be stored). In general, if one iterator uses most or all of the data before another iterator starts, it is faster to use &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このitertoolは、かなりの補助ストレージを必要とする場合があります（保存する必要がある一時データの量によって異なります）。一般的に、あるイテレーターが別のイテレーターが開始する前にほとんどまたはすべてのデータを使用する場合、&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt;を使用する方が高速です。</target>
        </trans-unit>
        <trans-unit id="2b78784d3778cf51f3cc37d1ca2c57415ae43db7" translate="yes" xml:space="preserve">
          <source>This just loops through the handlers offering them the record to handle. The actual object passed to the handlers is that which is returned from &lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、ハンドラーをループして、処理するレコードを提供します。ハンドラーに渡される実際のオブジェクトは、&lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt;から返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b297287359a92496a9e641ecaa5a2f4a199adf20" translate="yes" xml:space="preserve">
          <source>This key is not used in versions of Windows after 98.</source>
          <target state="translated">このキーは98以降のバージョンのWindowsでは使用されません。</target>
        </trans-unit>
        <trans-unit id="096ddddbe0447c0568cc1cc76f41f824414c52a4" translate="yes" xml:space="preserve">
          <source>This last example demonstrates the final few formatting functions:</source>
          <target state="translated">この最後の例は、最後のいくつかの書式設定関数を示しています。</target>
        </trans-unit>
        <trans-unit id="a0de209ab52fa2c28eaba734255b35873e7ad687" translate="yes" xml:space="preserve">
          <source>This last example might require special privileges:</source>
          <target state="translated">この最後の例では、特別な権限が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="264097c0f8c82e537b9bf5cf995ed38e88f6ce1f" translate="yes" xml:space="preserve">
          <source>This library does &lt;em&gt;not&lt;/em&gt; interpret or write the value-type prefixes used in the Windows Registry extended version of INI syntax.</source>
          <target state="translated">このライブラリは、Windowsレジストリ拡張バージョンのINI構文で使用される値タイプのプレフィックスを解釈または書き込みませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ddecb5d41f26429b00b306addcfa72c1c21b1705" translate="yes" xml:space="preserve">
          <source>This limit is used to control the size of object types for which no specific formatting method is available on the &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; object. It is applied in a similar manner as &lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt;&lt;code&gt;maxstring&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">この制限は、&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt;オブジェクトで特定の書式設定メソッドを使用できないオブジェクトタイプのサイズを制御するために使用されます。&lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt; &lt;code&gt;maxstring&lt;/code&gt; &lt;/a&gt;と同様の方法で適用されます。デフォルトは &lt;code&gt;20&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6066e953f7076b88b95e2864a51729b2de6d74f8" translate="yes" xml:space="preserve">
          <source>This line sorts statistics with a primary key of time, and a secondary key of cumulative time, and then prints out some of the statistics. To be specific, the list is first culled down to 50% (re: &lt;code&gt;.5&lt;/code&gt;) of its original size, then only lines containing &lt;code&gt;init&lt;/code&gt; are maintained, and that sub-sub-list is printed.</source>
          <target state="translated">この行は、時間の主キーと累積時間の副キーで統計をソートし、一部の統計を出力します。具体的には、リストは最初に元のサイズの50％（re： &lt;code&gt;.5&lt;/code&gt; ）に間引かれ、次に &lt;code&gt;init&lt;/code&gt; を含む行のみが維持され、そのサブサブリストが出力されます。</target>
        </trans-unit>
        <trans-unit id="48b3c8021c68eee9cdfb9dba7da21091a3af1ca6" translate="yes" xml:space="preserve">
          <source>This loses information about &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies, and also about newer or non-standard cookie-attributes such as &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; Cookie に関する情報と、 &lt;code&gt;port&lt;/code&gt; などの新しいまたは非標準のCookie属性に関する情報が失われます。</target>
        </trans-unit>
        <trans-unit id="d0d6d6740f3cc6b70d34b0e15297fa6447937aa1" translate="yes" xml:space="preserve">
          <source>This makes a copy of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, appends any directories given as positional arguments, then reverts &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; to the copied settings when the context ends.</source>
          <target state="translated">これにより、&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; の&lt;/a&gt;コピーが作成され、位置引数として指定されたディレクトリが追加され、コンテキストが終了すると&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;がコピーされた設定に戻ります。</target>
        </trans-unit>
        <trans-unit id="2fec21315ec08b4fee9674feeb896233184a09bd" translate="yes" xml:space="preserve">
          <source>This makes it possible to distinguish between a properly-formed compressed stream, and an incomplete or truncated one.</source>
          <target state="translated">これにより、適切に形成された圧縮ストリームと、不完全なものや切り捨てられたものを区別することが可能になります。</target>
        </trans-unit>
        <trans-unit id="f54922022dd37999705ecf8e7311959f863f3c80" translate="yes" xml:space="preserve">
          <source>This makes the warning refer to &lt;code&gt;deprecation()&lt;/code&gt;&amp;rsquo;s caller, rather than to the source of &lt;code&gt;deprecation()&lt;/code&gt; itself (since the latter would defeat the purpose of the warning message).</source>
          <target state="translated">これにより、警告は &lt;code&gt;deprecation()&lt;/code&gt; 自体のソースではなく、 &lt;code&gt;deprecation()&lt;/code&gt; の呼び出し元を参照します（後者は警告メッセージの目的を無効にするため）。</target>
        </trans-unit>
        <trans-unit id="73d9e444a3a60233d585593bee38869776f0d900" translate="yes" xml:space="preserve">
          <source>This mapping is captured the first time the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module is imported, typically during Python startup as part of processing &lt;code&gt;site.py&lt;/code&gt;. Changes to the environment made after this time are not reflected in &lt;code&gt;os.environ&lt;/code&gt;, except for changes made by modifying &lt;code&gt;os.environ&lt;/code&gt; directly.</source>
          <target state="translated">このマッピングは、&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールが初めてインポートされるときに、通常はPythonの起動時に &lt;code&gt;site.py&lt;/code&gt; の処理の一部としてキャプチャされます。この時間以降に行われた環境への変更は、 &lt;code&gt;os.environ&lt;/code&gt; を直接変更して加えられた変更を除いて、 &lt;code&gt;os.environ&lt;/code&gt; には反映されません。</target>
        </trans-unit>
        <trans-unit id="c90b598945883249d9e4304c638f9a4c5b6dbbe6" translate="yes" xml:space="preserve">
          <source>This mapping may be used to modify the environment as well as query the environment. &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; will be called automatically when the mapping is modified.</source>
          <target state="translated">このマッピングは、環境を変更したり、環境を照会したりするために使用できます。&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;は、マッピングが変更されると自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2f9802628cadfd6a5dfb046256f12e0170526e3f" translate="yes" xml:space="preserve">
          <source>This matches the definition of the &amp;ldquo;proleptic Gregorian&amp;rdquo; calendar in Dershowitz and Reingold&amp;rsquo;s book &lt;em&gt;Calendrical Calculations&lt;/em&gt;, where it&amp;rsquo;s the base calendar for all computations. See the book for algorithms for converting between proleptic Gregorian ordinals and many other calendar systems.</source>
          <target state="translated">これは、DershowitzおよびReingoldの本である&lt;em&gt;Calendrical Calculations&lt;/em&gt;の「proleptic Gregorian」カレンダーの定義と一致しています。このカレンダーは、すべての計算の基本カレンダーです。発作的なグレゴリオ暦と他の多くのカレンダーシステムとの間の変換アルゴリズムについては、本を参照してください。</target>
        </trans-unit>
        <trans-unit id="973b8e85a014b10c75403c7a74282293136436c1" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;gmtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038.</source>
          <target state="translated">これにより、タイムスタンプがプラットフォームのC &lt;code&gt;gmtime()&lt;/code&gt; 関数でサポートされている値の範囲外である場合は&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; が&lt;/a&gt;&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;gmtime()&lt;/code&gt; が失敗するとOSErrorが発生する可能性があります。これは1970年から2038年までの年に制限されるのが一般的です。</target>
        </trans-unit>
        <trans-unit id="6b1f92125637bbc55cff09da5df4d2e2c83cd615" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years from 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、タイムスタンプがプラットフォームCの &lt;code&gt;localtime()&lt;/code&gt; 関数でサポートされている値の範囲外である場合は&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; が&lt;/a&gt;&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;localtime()&lt;/code&gt; が失敗するとOSErrorが発生する可能性があります。これは1970年から2038年の年に制限されるのが一般的です。タイムスタンプの概念にうるう秒が含まれる非POSIXシステムでは、うるう秒は&lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt;によって無視されます。</target>
        </trans-unit>
        <trans-unit id="61488cca0cc578bae3cc99b33d231e72befb7e97" translate="yes" xml:space="preserve">
          <source>This means that a point2D TypedDict can have any of the keys omitted. A type checker is only expected to support a literal False or True as the value of the total argument. True is the default, and makes all items defined in the class body be required.</source>
          <target state="translated">これは、point2D TypedDictが省略されたキーのいずれかを持つことができることを意味します。型チェッカーは、総引数の値としてリテラルのFalseまたはTrueのみをサポートすることが期待されています。Trueはデフォルトで、クラス本体で定義されているすべての項目を必須にします。</target>
        </trans-unit>
        <trans-unit id="4d37c0a7a6a3e6d70c0e783302ba789caf0c81d7" translate="yes" xml:space="preserve">
          <source>This means that if the remote listener starts up &lt;em&gt;after&lt;/em&gt; the handler has been used, you could lose messages (since the handler won&amp;rsquo;t even attempt a connection until the delay has elapsed, but just silently drop messages during the delay period).</source>
          <target state="translated">つまり、ハンドラーが使用された&lt;em&gt;後に&lt;/em&gt;リモートリスナーが起動すると&lt;em&gt;、&lt;/em&gt;メッセージが失われる可能性があります（ハンドラーは遅延が経過するまで接続を試みず、遅延期間中にメッセージを通知せずにドロップするだけなので）。</target>
        </trans-unit>
        <trans-unit id="293f66ad739726417a512fb32791664b3935c5f9" translate="yes" xml:space="preserve">
          <source>This means that if you try joining that process you may get a deadlock unless you are sure that all items which have been put on the queue have been consumed. Similarly, if the child process is non-daemonic then the parent process may hang on exit when it tries to join all its non-daemonic children.</source>
          <target state="translated">これは、キューに入れられたすべてのアイテムが消費されたことを確認しない限り、 そのプロセスに参加しようとするとデッドロックが発生する可能性があることを意味します。同様に、子プロセスが非デーモニックプロセスである場合、 親プロセスがその非デーモニックな子プロセスにすべて参加しようとしたときに、 親プロセスは終了時にハングしてしまうかもしれません。</target>
        </trans-unit>
        <trans-unit id="884bf5479c83d452b098a597edcf03db4dacf679" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">これは、&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;型の値に対して任意の操作またはメソッド呼び出しを実行し、それを任意の変数に割り当てることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="3c2691ce7a2bb0ef524d6ac5d3f6a53e206d2c2d" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type on &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">つまり、&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;の型の値に対して任意の操作またはメソッド呼び出しを実行し、それを任意の変数に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="d454e9a9384d822a339503b805687181665a1335" translate="yes" xml:space="preserve">
          <source>This means that the two following regular expression objects that match a decimal number are functionally equal:</source>
          <target state="translated">これは、10進数に一致する次の2つの正規表現オブジェクトが機能的に等しいことを意味します。</target>
        </trans-unit>
        <trans-unit id="187d0bf1d6306583a1ebdb755911d7f2106320ea" translate="yes" xml:space="preserve">
          <source>This means that whenever you use a queue you need to make sure that all items which have been put on the queue will eventually be removed before the process is joined. Otherwise you cannot be sure that processes which have put items on the queue will terminate. Remember also that non-daemonic processes will be joined automatically.</source>
          <target state="translated">これは、キューを使用するときはいつでも、キューに入れられたすべてのアイテムが、 プロセスが参加する前に最終的に取り除かれることを確実にする必要があることを意味します。そうでなければ、キューにアイテムを置いたプロセスが終了するかどうかを確実に確認することはできません。また、デーモニックでないプロセスは自動的に結合されることも覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="9817fb9c501a121ab442e1e4282e427fff6978b6" translate="yes" xml:space="preserve">
          <source>This member is either &lt;code&gt;None&lt;/code&gt; or a dictionary containing Python objects that need to be kept alive so that the memory block contents is kept valid. This object is only exposed for debugging; never modify the contents of this dictionary.</source>
          <target state="translated">このメンバーは、 &lt;code&gt;None&lt;/code&gt; か、メモリブロックの内容が有効に保たれるように維持する必要があるPythonオブジェクトを含むディクショナリです。このオブジェクトはデバッグ用にのみ公開されます。この辞書の内容を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="19498f3e018ff24394d0a46b95228fb1309cb56c" translate="yes" xml:space="preserve">
          <source>This method accepts a coroutine that can be used as a cleanup function.</source>
          <target state="translated">このメソッドは、クリーンアップ関数として使用できるコルーチンを受け取ります。</target>
        </trans-unit>
        <trans-unit id="92793d8fcf27264fb4882603d3336c40c35a73a1" translate="yes" xml:space="preserve">
          <source>This method acts like &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt;, but wakes up all waiting tasks.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; の&lt;/a&gt;ように動作しますが、待機中のすべてのタスクを起こします。</target>
        </trans-unit>
        <trans-unit id="83f0e2234ef971385137021b1ec6878c3710a2b1" translate="yes" xml:space="preserve">
          <source>This method adapts &lt;em&gt;obj&lt;/em&gt; to a ctypes type. It is called with the actual object used in a foreign function call when the type is present in the foreign function&amp;rsquo;s &lt;code&gt;argtypes&lt;/code&gt; tuple; it must return an object that can be used as a function call parameter.</source>
          <target state="translated">このメソッドは、&lt;em&gt;obj&lt;/em&gt;をctypes型に適合させます。型が外部関数の &lt;code&gt;argtypes&lt;/code&gt; タプルに存在する場合、外部関数呼び出しで使用される実際のオブジェクトを使用して呼び出されます。関数呼び出しパラメーターとして使用できるオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="de2226eb808a143726eafd45ebbb8317717428a5" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスが等しいかどうかを比較できます。</target>
        </trans-unit>
        <trans-unit id="0b6dcc44c46e0069eff06e296235ec7e5da5bc2d" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスを比較して不等かどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="3c994380cb521db6718872d973720d157f1919e6" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスが等しいかどうかを比較できます。</target>
        </trans-unit>
        <trans-unit id="1202fad2523717e5ef623e502b8584b2963f5fc1" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">このメソッドを使用すると、2つの&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;インスタンスを比較して不平等を確認できます。</target>
        </trans-unit>
        <trans-unit id="c8e548622fefef31da8300c3b5dbc9f09fa411e9" translate="yes" xml:space="preserve">
          <source>This method always quotes &lt;em&gt;fullurl&lt;/em&gt; using &lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは常に&lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;を使用して&lt;em&gt;fullurl&lt;/em&gt;を引用します。</target>
        </trans-unit>
        <trans-unit id="99aa254779e7ef574c52f729c661b871c547c933" translate="yes" xml:space="preserve">
          <source>This method always returns a list of values associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns an empty list if no such form field or value exists for &lt;em&gt;name&lt;/em&gt;. It returns a list consisting of one item if only one such value exists.</source>
          <target state="translated">このメソッドは常に、フォームフィールド&lt;em&gt;名に&lt;/em&gt;関連付けられた値のリストを返します。&lt;em&gt;nameに&lt;/em&gt;そのようなフォームフィールドまたは値が存在しない場合、メソッドは空のリストを返します。そのような値が1つしか存在しない場合は、1つのアイテムで構成されるリストを返します。</target>
        </trans-unit>
        <trans-unit id="5c5df80f39d51ba66e8859be874c5de7d1b311c2" translate="yes" xml:space="preserve">
          <source>This method always returns only one value associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns only the first value in case that more values were posted under such name. Please note that the order in which the values are received may vary from browser to browser and should not be counted on. &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; If no such form field or value exists then the method returns the value specified by the optional parameter &lt;em&gt;default&lt;/em&gt;. This parameter defaults to &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">このメソッドは常に、フォームフィールド&lt;em&gt;名に&lt;/em&gt;関連付けられた1つの値のみを返します。このような名前で追加の値が投稿された場​​合、メソッドは最初の値のみを返します。値が受信される順序はブラウザごとに異なる可能性があるため、期待してはいけないことに注意してください。&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;そのようなフォームフィールドまたは値が存在しない場合、メソッドはオプションのパラメーター&lt;em&gt;defaultで&lt;/em&gt;指定された値を返し&lt;em&gt;ます&lt;/em&gt;。指定しない場合、このパラメーターのデフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ab00db9f3f1ac5923263017d6c47d4a368ab0db0" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt;&lt;code&gt;helo()&lt;/code&gt;&lt;/a&gt; if there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session. It tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first.</source>
          <target state="translated">このセッションで以前に &lt;code&gt;EHLO&lt;/code&gt; または &lt;code&gt;HELO&lt;/code&gt; コマンドがなかった場合、このメソッドは&lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt; &lt;code&gt;helo()&lt;/code&gt; を&lt;/a&gt;呼び出します。最初にESMTP &lt;code&gt;EHLO&lt;/code&gt; を試行します。</target>
        </trans-unit>
        <trans-unit id="f3d3c489ac6f9b1031182090b6d35d21fd51ab55" translate="yes" xml:space="preserve">
          <source>This method can access the current error information using &lt;code&gt;sys.exc_info()&lt;/code&gt;, and should pass that information to &lt;em&gt;start_response&lt;/em&gt; when calling it (as described in the &amp;ldquo;Error Handling&amp;rdquo; section of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドは &lt;code&gt;sys.exc_info()&lt;/code&gt; を使用して現在のエラー情報にアクセスでき、&lt;em&gt;それ&lt;/em&gt;を呼び出すときにその情報を&lt;em&gt;start_response&lt;/em&gt;に渡す必要があります（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333の&lt;/strong&gt;&lt;/a&gt;「エラー処理」セクションで説明されています）。</target>
        </trans-unit>
        <trans-unit id="3fe72da74ea53d024f3c10009d6c535ecabca50f" translate="yes" xml:space="preserve">
          <source>This method can also be used as a decorator. When used as a decorator, &lt;em&gt;name&lt;/em&gt; can only be given as a keyword argument to register &lt;em&gt;function&lt;/em&gt; under &lt;em&gt;name&lt;/em&gt;. If no &lt;em&gt;name&lt;/em&gt; is given, &lt;code&gt;function.__name__&lt;/code&gt; will be used.</source>
          <target state="translated">このメソッドは、デコレータとしても使用できます。デコレータとして使用する場合、&lt;em&gt;名前は&lt;/em&gt;のみ登録するキーワード引数として指定することができます&lt;em&gt;機能を&lt;/em&gt;下の&lt;em&gt;名前&lt;/em&gt;。&lt;em&gt;名前&lt;/em&gt;を指定しない場合、 &lt;code&gt;function.__name__&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="05ba3520afb6b8d1c2cc9f5025b6e01795641a6b" translate="yes" xml:space="preserve">
          <source>This method can also load certification revocation lists (CRLs) in PEM or DER format. In order to make use of CRLs, &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; must be configured properly.</source>
          <target state="translated">このメソッドは、PEMまたはDER形式で証明書失効リスト（CRL）をロードすることもできます。CRLを使用するには、&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; を&lt;/a&gt;適切に構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2cbf4b4a0062a4ab6d1ec363b05db41b262c8d75" translate="yes" xml:space="preserve">
          <source>This method can also set additional value and type information for the specified key. The key identified by the key parameter must have been opened with &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">このメソッドは、指定されたキーに追加の値とタイプ情報を設定することもできます。keyパラメータで識別されるキーは、&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;アクセスで開かれている必要があります。</target>
        </trans-unit>
        <trans-unit id="73a7fb88081ff7799c7aff867ccc6018119a704f" translate="yes" xml:space="preserve">
          <source>This method can be called if the server is already accepting connections. Only one &lt;code&gt;serve_forever&lt;/code&gt; task can exist per one &lt;em&gt;Server&lt;/em&gt; object.</source>
          <target state="translated">このメソッドは、サーバーがすでに接続を受け入れている場合に呼び出すことができます。1つの&lt;em&gt;Server&lt;/em&gt;オブジェクトごとに存在できる &lt;code&gt;serve_forever&lt;/code&gt; タスクは1つだけです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="407438304b114d9ae1fc43a76729553a9b36a0e0" translate="yes" xml:space="preserve">
          <source>This method can be called to signal that the set of tests being run should be aborted by setting the &lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt;&lt;code&gt;shouldStop&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;True&lt;/code&gt;. &lt;code&gt;TestRunner&lt;/code&gt; objects should respect this flag and return without running any additional tests.</source>
          <target state="translated">このメソッドを呼び出して、&lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt; &lt;code&gt;shouldStop&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;True&lt;/code&gt; に設定することで、実行中の一連のテストを中止する必要があることを通知できます。 &lt;code&gt;TestRunner&lt;/code&gt; オブジェクトはこのフラグを尊重し、追加のテストを実行せずに戻る必要があります。</target>
        </trans-unit>
        <trans-unit id="10146130dff0e59381ebe13ea405d3f938543487" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a metaclass to customize the method resolution order for its instances. It is called at class instantiation, and its result is stored in &lt;a href=&quot;#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドをメタクラスでオーバーライドして、インスタンスのメソッド解決順序をカスタマイズできます。クラスのインスタンス化時に呼び出され、その結果は&lt;a href=&quot;#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; に&lt;/a&gt;格納されます。</target>
        </trans-unit>
        <trans-unit id="55106137d8d33136ba4a5c819c765b0982b2c16a" translate="yes" xml:space="preserve">
          <source>This method can be used by servers that accept connections outside of asyncio but that use asyncio to handle them.</source>
          <target state="translated">このメソッドは、asyncio の外で接続を受け付けるが、その処理には asyncio を使用するサーバで使用することができます。</target>
        </trans-unit>
        <trans-unit id="e0983394646b4255b9f804c3f4789957dcd10013" translate="yes" xml:space="preserve">
          <source>This method can be used to copy state between parsers.</source>
          <target state="translated">このメソッドは、パーサ間で状態をコピーするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6d5e0af7ffa6f4c1df88abb1f7b70552cbb5ba74" translate="yes" xml:space="preserve">
          <source>This method can deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates so much output that it blocks waiting for the OS pipe buffer to accept more data. Use the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; method when using pipes to avoid this condition.</source>
          <target state="translated">&lt;code&gt;stdout=PIPE&lt;/code&gt; または &lt;code&gt;stderr=PIPE&lt;/code&gt; を使用しているときにこのメソッドがデッドロックする可能性があり、子プロセスが大量の出力を生成するため、OSパイプバッファーがさらに多くのデータを受け入れるのをブロックします。パイプを使用する場合は、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、この状態を回避してください。</target>
        </trans-unit>
        <trans-unit id="0b6651beb5c50a02eebbeaabab1f23c94c2bc904" translate="yes" xml:space="preserve">
          <source>This method can only be called before the &lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt;&lt;code&gt;Parse()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt;&lt;code&gt;ParseFile()&lt;/code&gt;&lt;/a&gt; methods are called; calling it after either of those have been called causes &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; to be raised with the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt; &lt;code&gt;Parse()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt; &lt;code&gt;ParseFile()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出される前にのみ呼び出すことができます。これらのいずれかが呼び出された後に呼び出すと、&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; &lt;/a&gt;が発生し、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性が &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="2086b47fb4d10716127e87469a74bd3b1a4a8119" translate="yes" xml:space="preserve">
          <source>This method can only be called once and cannot be called after &lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt; have been called.</source>
          <target state="translated">このメソッドは一度だけ呼び出すことができ、&lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt; &lt;code&gt;Future.set_result()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt;が呼び出された後に呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="2cbd7d58d617b5e047b52fdaa579cb87df6296d7" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the transport (e.g. SSL) doesn&amp;rsquo;t support half-closed connections.</source>
          <target state="translated">トランスポート（SSLなど）がハーフクローズ接続をサポートしていない場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生さ&lt;/a&gt;せる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c195a6b614da560f82928764439dba94df4f8e23" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is caught and not raised.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生さ&lt;/a&gt;せる可能性がありますが、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;がキャッチされ、発生しません。</target>
        </trans-unit>
        <trans-unit id="50c32059ccb282fc0aeaf5852f83c3180c54f927" translate="yes" xml:space="preserve">
          <source>This method can return before any file object becomes ready or the timeout has elapsed if the current process receives a signal: in this case, an empty list will be returned.</source>
          <target state="translated">このメソッドは、現在のプロセスがシグナルを受信した場合、任意のファイルオブジェクトがレディになる前、またはタイムアウトが経過する前に返すことができます。</target>
        </trans-unit>
        <trans-unit id="552a056410da16d9e30d35242f865544f5b3c970" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;em&gt;frame&lt;/em&gt; is somewhere below &lt;code&gt;botframe&lt;/code&gt; in the call stack. &lt;code&gt;botframe&lt;/code&gt; is the frame in which debugging started.</source>
          <target state="translated">このメソッドは、&lt;em&gt;フレーム&lt;/em&gt;がコールスタックの &lt;code&gt;botframe&lt;/code&gt; の下にあるかどうかをチェックします。 &lt;code&gt;botframe&lt;/code&gt; は、デバッグを開始したフレームです。</target>
        </trans-unit>
        <trans-unit id="ec7dec729e2fd25621dc1130cbf525c748669b5c" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename and line belonging to &lt;em&gt;frame&lt;/em&gt; or, at least, in the current function. If the breakpoint is a temporary one, this method deletes it.</source>
          <target state="translated">このメソッドは、&lt;em&gt;フレームに&lt;/em&gt;属するファイル名と行、または少なくとも現在の関数にブレークポイントがあるかどうかをチェックします。ブレークポイントが一時的なものである場合、このメソッドはそれを削除します。</target>
        </trans-unit>
        <trans-unit id="4783154b5e95272a1ed6bc7a0f70e86690e5ac92" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename of the current frame.</source>
          <target state="translated">このメソッドは、現在のフレームのファイル名にブレークポイントがあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="1e7363c3caa003283906714b3fc1e39f30b891d3" translate="yes" xml:space="preserve">
          <source>This method chops the iterable into a number of chunks which it submits to the process pool as separate tasks. The (approximate) size of these chunks can be specified by setting &lt;em&gt;chunksize&lt;/em&gt; to a positive integer.</source>
          <target state="translated">このメソッドは、イテラブルをいくつかのチャンクに分割し、個別のタスクとしてプロセスプールに送信します。これらのチャンクの（おおよその）サイズは、&lt;em&gt;chunksize&lt;/em&gt;を正の整数に設定することで指定できます。</target>
        </trans-unit>
        <trans-unit id="bd737781891d8c8772e3aff8b3ba708b987d4de2" translate="yes" xml:space="preserve">
          <source>This method clears all queues and shuts down the executor, but does not wait for the executor to finish.</source>
          <target state="translated">このメソッドは、すべてのキューをクリアして実行者をシャットダウンしますが、実行者が終了するのを待つことはありません。</target>
        </trans-unit>
        <trans-unit id="c76f659ef31aff87035b3704b8e27300ed051239" translate="yes" xml:space="preserve">
          <source>This method closes the open mixer device file. Any further attempts to use the mixer after this file is closed will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、開いているミキサーデバイスファイルを閉じます。このファイルを閉じた後にミキサーを使用しようとすると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="dea536dd7b820dc65ea547cc98bb34d86563082b" translate="yes" xml:space="preserve">
          <source>This method commits the current transaction. If you don&amp;rsquo;t call this method, anything you did since the last call to &lt;code&gt;commit()&lt;/code&gt; is not visible from other database connections. If you wonder why you don&amp;rsquo;t see the data you&amp;rsquo;ve written to the database, please check you didn&amp;rsquo;t forget to call this method.</source>
          <target state="translated">このメソッドは、現在のトランザクションをコミットします。このメソッドを呼び出さない場合、最後に &lt;code&gt;commit()&lt;/code&gt; を呼び出してから行った操作は、他のデータベース接続からは見えません。データベースに書き込んだデータが表示されない理由がわからない場合は、このメソッドを呼び出すのを忘れていないか確認してください。</target>
        </trans-unit>
        <trans-unit id="38bab54e5484d9d6191a130b9832361ee4787af1" translate="yes" xml:space="preserve">
          <source>This method continues to send to the socket until either all data in &lt;em&gt;data&lt;/em&gt; has been sent or an error occurs. &lt;code&gt;None&lt;/code&gt; is returned on success. On error, an exception is raised. Additionally, there is no way to determine how much data, if any, was successfully processed by the receiving end of the connection.</source>
          <target state="translated">この方法は、内のすべてのデータのいずれかまで、ソケットに送信し続け&lt;em&gt;、データが&lt;/em&gt;送られてきたか、エラーが発生しました。成功しても &lt;code&gt;None&lt;/code&gt; も返されません。エラーの場合、例外が発生します。さらに、接続の受信側で正常に処理されたデータがある場合、その量を判別する方法はありません。</target>
        </trans-unit>
        <trans-unit id="1fe15dbe299e6059c7cb4f652892203f2294ed3f" translate="yes" xml:space="preserve">
          <source>This method creates a ctypes instance, copying the buffer from the &lt;em&gt;source&lt;/em&gt; object buffer which must be readable. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドはctypesインスタンスを作成し、読み取り可能な&lt;em&gt;ソース&lt;/em&gt;オブジェクトバッファーからバッファーをコピーします。オプションの&lt;em&gt;オフセット&lt;/em&gt;パラメータは、ソースバッファへのオフセットをバイト単位で指定します。デフォルトはゼロです。ソースバッファーが十分に大きくない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="79e2c7a916c893d0cae05eee7a9e693d20944423" translate="yes" xml:space="preserve">
          <source>This method does an &lt;a href=&quot;#select.devpoll.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; followed by a &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is (a bit) more efficient that doing the same explicitly.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#select.devpoll.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; に&lt;/a&gt;続いて&lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; を実行し&lt;/a&gt;ます。同じことを明示的に行うよりも（少し）より効率的です。</target>
        </trans-unit>
        <trans-unit id="42dfa15b7a4aea5dabe3cc75fbe1eb5bf58cca52" translate="yes" xml:space="preserve">
          <source>This method does an implicit stream flush before setting the new parameters.</source>
          <target state="translated">このメソッドは、新しいパラメータを設定する前に暗黙のストリームフラッシュを行います。</target>
        </trans-unit>
        <trans-unit id="6309e3677b4c32db7759a47b019d92bd0f697365" translate="yes" xml:space="preserve">
          <source>This method does not block; it buffers the data and arranges for it to be sent out asynchronously.</source>
          <target state="translated">このメソッドはブロックせず、データをバッファリングして非同期に送信するように手配します。</target>
        </trans-unit>
        <trans-unit id="39a877e637d53097551d0de19b8adfb6f42d8211" translate="yes" xml:space="preserve">
          <source>This method does nothing.</source>
          <target state="translated">この方法では何もしません。</target>
        </trans-unit>
        <trans-unit id="13c34741b5804dbdc5a7f011bfea01867ca0bbd5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all function that were called by the indicated function. Aside from this reversal of direction of calls (re: called vs was called by), the arguments and ordering are identical to the &lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt;&lt;code&gt;print_callers()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、指定された関数によって呼び出されたすべての関数のリストを出力します。この呼び出し方向の逆転（re：呼び出されたvs呼び出された側）を除いて、引数と順序は&lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt; &lt;code&gt;print_callers()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。</target>
        </trans-unit>
        <trans-unit id="d1b2e760f26585a985b75f4056f33711aaf0b4c5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all functions that called each function in the profiled database. The ordering is identical to that provided by &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt;, and the definition of the restricting argument is also identical. Each caller is reported on its own line. The format differs slightly depending on the profiler that produced the stats:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、プロファイルされたデータベースの各関数を呼び出したすべての関数のリストを出力します。順序は、&lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt;によって提供される順序と同じであり、制限引数の定義も同じです。各発信者は、独自の行で報告されます。形式は、統計を生成したプロファイラーによって若干異なります。</target>
        </trans-unit>
        <trans-unit id="91f040b4faec2d515745438e522e71fd3894c37d" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints out a report as described in the &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;定義で説明されているようにレポートを出力します。</target>
        </trans-unit>
        <trans-unit id="46c2ee0829732fa2fde7eb2dae1e52cfee073229" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class removes all leading path information from file names. It is very useful in reducing the size of the printout to fit within (close to) 80 columns. This method modifies the object, and the stripped information is lost. After performing a strip operation, the object is considered to have its entries in a &amp;ldquo;random&amp;rdquo; order, as it was just after object initialization and loading. If &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; causes two function names to be indistinguishable (they are on the same line of the same filename, and have the same function name), then the statistics for these two entries are accumulated into a single entry.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、ファイル名からすべての先行パス情報を削除します。これは、80カラム以内（に近い）に収まるように印刷出力のサイズを縮小するのに非常に役立ちます。このメソッドはオブジェクトを変更し、除去された情報は失われます。オブジェクトの初期化とロードの直後だったため、ストリップ操作を実行した後、オブジェクトは「ランダムな」順序でエントリを持つと見なされます。場合&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt; 2人の関数名を区別できないことが原因と（彼らは同じファイル名の同じライン上にあり、同じ関数名を持っている）、これらの2つのエントリの統計情報を単一のエントリに蓄積されています。</target>
        </trans-unit>
        <trans-unit id="1409b161813035807a55bae77d9d7acbceace27b" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class reverses the ordering of the basic list within the object. Note that by default ascending vs descending order is properly selected based on the sort key of choice.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、オブジェクト内の基本リストの順序を逆にします。デフォルトでは、選択したソートキーに基づいて、昇順または降順が適切に選択されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="accee55957c312a1850cca5c1863fffc7c622366" translate="yes" xml:space="preserve">
          <source>This method generates an error message leader in the format of a Unix C compiler error label; the format is &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt;, where the &lt;code&gt;%s&lt;/code&gt; is replaced with the name of the current source file and the &lt;code&gt;%d&lt;/code&gt; with the current input line number (the optional arguments can be used to override these).</source>
          <target state="translated">このメソッドは、Unix Cコンパイラのエラーラベルの形式でエラーメッセージリーダーを生成します。形式は &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt; 。ここで、 &lt;code&gt;%s&lt;/code&gt; は現在のソースファイルの名前に置き換えられ、 &lt;code&gt;%d&lt;/code&gt; は現在の入力行番号に置き換えられます（オプションの引数を使用してこれらを上書きできます）。 。</target>
        </trans-unit>
        <trans-unit id="ab5e0cb7aa04565d02104cf51103e0e449b87a97" translate="yes" xml:space="preserve">
          <source>This method has to be called to ensure that underlying resources are cleaned-up.</source>
          <target state="translated">このメソッドは、基礎となるリソースがクリーンアップされていることを確認するために呼び出されなければなりません。</target>
        </trans-unit>
        <trans-unit id="331fcb4951405022dc8158f5e6b8f3643d5dcac8" translate="yes" xml:space="preserve">
          <source>This method implements the to-number operation of the IBM specification. If the argument is a string, no leading or trailing whitespace or underscores are permitted.</source>
          <target state="translated">このメソッドは、IBM 仕様の to-number 操作を実装します。引数が文字列の場合、先頭または末尾の空白やアンダースコアは許可されません。</target>
        </trans-unit>
        <trans-unit id="ea7bc1d92f04efbde59e80bcc1aa6987de53f1ed" translate="yes" xml:space="preserve">
          <source>This method installs &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; into the built-in namespace, binding it to &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、組み込みの名前空間に&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;をインストールし、それを &lt;code&gt;_&lt;/code&gt; にバインドします。</target>
        </trans-unit>
        <trans-unit id="b650bd083066fb7b32ea3a59211f198619f61efc" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs with no specific registered handler to open it.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定の登録済みハンドラーを持たないすべてのURLをキャッチして開く場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e0a5010ef1ad88b00b90339dfae674e6bb9136c" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、すべてのURLをキャッチしたい場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="774438cdf07e39e3e6c8d23d09c95f16acf3695e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to handle URLs with the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルでURLを処理したい場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="9a9cdb8234013d6e3c19e46c3246b2cc09d3442f" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to post-process responses of the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルの応答を後処理する場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c75df0a7bff13cd0e3f5e4caa6aded657e9562e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to pre-process requests of the given protocol.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;では定義されて&lt;em&gt;いません&lt;/em&gt;が、特定のプロトコルのリクエストを前処理する場合は、サブクラスで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="3c7ad9f09ceaada2d47a78bd99c6bbb39e61d57e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should override it if they intend to provide a catch-all for otherwise unhandled HTTP errors. It will be called automatically by the &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; getting the error, and should not normally be called in other circumstances.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;で定義されて&lt;em&gt;いません&lt;/em&gt;が、サブクラスは、処理されていないHTTPエラーのキャッチオールを提供するつもりであれば、オーバーライドする必要があります。エラーが発生した&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって自動的に呼び出されます。通常、他の状況では呼び出されません。</target>
        </trans-unit>
        <trans-unit id="dfa69d3953d3eb2beb1c0eca7aee210715c53a6e" translate="yes" xml:space="preserve">
          <source>This method is a WSGI application to generate an error page for the user. It is only invoked if an error occurs before headers are sent to the client.</source>
          <target state="translated">このメソッドは、ユーザのためにエラーページを生成するためのWSGIアプリケーションです。ヘッダがクライアントに送信される前にエラーが発生した場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6f12537a7fc1c2e7162c9359e9edb423ac1e11cb" translate="yes" xml:space="preserve">
          <source>This method is a convenient way of asserting that the last call has been made in a particular way:</source>
          <target state="translated">このメソッドは、最後の呼び出しが特定の方法で行われたことを保証する便利な方法です。</target>
        </trans-unit>
        <trans-unit id="db33534558dd6010fe1a2ce1248cebf9374038a7" translate="yes" xml:space="preserve">
          <source>This method is a shorthand for certain &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">このメソッドは、特定の&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;呼び出しの省略形です。</target>
        </trans-unit>
        <trans-unit id="4c26f67a97d1ef429fc2262c07876bc620c73fa6" translate="yes" xml:space="preserve">
          <source>This method is an optimization. It removes the need for checking every cookie with a particular domain (which might involve reading many files). Returning true from &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; leaves all the work to &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は最適化です。特定のドメイン（多くのファイルの読み取りを伴う可能性があります）ですべてのCookieをチェックする必要がなくなります。&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;からtrueを返すと、すべての作業が&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; に&lt;/a&gt;任されます。</target>
        </trans-unit>
        <trans-unit id="2f13e10218d52bc14c398580fbb5847c80ef680a" translate="yes" xml:space="preserve">
          <source>This method is called after close has been called to reset the parser so that it is ready to parse new documents. The results of calling parse or feed after close without calling reset are undefined.</source>
          <target state="translated">このメソッドは、close が呼び出された後に呼び出され、パーサをリセットして新しいドキュメントを解析できるようにします。close の後に reset を呼び出さずに parse または feed を呼び出した結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="8f681be9592e79695afc941d306faad07ca7074f" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、要求されたキーが見つからない場合に、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。それが返すか発生させるものは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;によって返されるか発生します。</target>
        </trans-unit>
        <trans-unit id="19a1c3fd2fc083c9f806fb14e71149f2e03d9489" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、要求されたキーが見つからない場合に、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。返されるか発生するものは&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;によって返されるか発生します。</target>
        </trans-unit>
        <trans-unit id="ca5cd597958a55feba59538cd823db6f1757425f" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt;&lt;code&gt;dispatch_call()&lt;/code&gt;&lt;/a&gt; when there is the possibility that a break might be necessary anywhere inside the called function.</source>
          <target state="translated">このメソッドは、呼び出された関数内のどこかでブレークが必要になる可能性がある場合に、&lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt; &lt;code&gt;dispatch_call()&lt;/code&gt; &lt;/a&gt;から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2a648f403a2f03bb18de23aaed8ae35a5ed0171d" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt;&lt;code&gt;dispatch_exception()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、から呼び出される&lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt; &lt;code&gt;dispatch_exception()&lt;/code&gt; &lt;/a&gt;とき&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; が&lt;/a&gt;得 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15dc6e44bad2f4483f0eb7df451d9c71e914b252" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt;&lt;code&gt;dispatch_line()&lt;/code&gt;&lt;/a&gt; when either &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt;&lt;code&gt;break_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt; &lt;code&gt;break_here()&lt;/code&gt; の&lt;/a&gt;いずれかが &lt;code&gt;True&lt;/code&gt; を生成したときに&lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt; &lt;code&gt;dispatch_line()&lt;/code&gt; &lt;/a&gt;から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="98e84fb726ba7d465a759a50ecf0dc2de47d13ff" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt;&lt;code&gt;dispatch_return()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、から呼び出される&lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt; &lt;code&gt;dispatch_return()&lt;/code&gt; &lt;/a&gt;とき&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; が&lt;/a&gt;得 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a02c40de1371e57d58beb2caa096cce464a3453" translate="yes" xml:space="preserve">
          <source>This method is called in rare conditions, when the transport (e.g. UDP) detects that a datagram could not be delivered to its recipient. In many conditions though, undeliverable datagrams will be silently dropped.</source>
          <target state="translated">このメソッドは、トランスポート(UDPなど)がデータグラムを受信者に送 信できなかったことを検出した場合に、まれに呼び出される。しかし、多くの状況では、配信不可能なデータグラムは黙ってドロップされる。</target>
        </trans-unit>
        <trans-unit id="021d411ee8557a5431f25adec004b2c8f9a32dd5" translate="yes" xml:space="preserve">
          <source>This method is called to handle an HTML doctype declaration (e.g. &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、HTML doctype宣言を処理するために呼び出されます（例： &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fd8d299a2cd0f21cfa448069764a167e9c313432" translate="yes" xml:space="preserve">
          <source>This method is called to handle the end tag of an element (e.g. &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、要素（例： &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ）の終了タグを処理するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="60f522853fb2ae7781965ad938ace085974516d9" translate="yes" xml:space="preserve">
          <source>This method is called to handle the start of a tag (e.g. &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、タグの開始を処理するために呼び出されます（例： &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="78e8fd9b96db05d7a2b36f348576340eb21ea97e" translate="yes" xml:space="preserve">
          <source>This method is called to process a named character reference of the form &lt;code&gt;&amp;amp;name;&lt;/code&gt; (e.g. &lt;code&gt;&amp;amp;gt;&lt;/code&gt;), where &lt;em&gt;name&lt;/em&gt; is a general entity reference (e.g. &lt;code&gt;'gt'&lt;/code&gt;). This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&amp;amp;name;&lt;/code&gt; 形式の名前付き文字参照を処理するために呼び出されます。（例： &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ）、ここで&lt;em&gt;name&lt;/em&gt;は一般的なエンティティ参照（例： &lt;code&gt;'gt'&lt;/code&gt; ）です。&lt;em&gt;convert_charrefs&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このメソッドは決して呼び出されません。</target>
        </trans-unit>
        <trans-unit id="fb85f0254c8bad935b85ebf8734852604581fb1b" translate="yes" xml:space="preserve">
          <source>This method is called to process arbitrary data (e.g. text nodes and the content of &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、任意のデータを処理するために呼び出されます（たとえば、テキストノードと &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; のコンテンツ）。</target>
        </trans-unit>
        <trans-unit id="6e9e01f728ac0f3b55f6b12a74a0191fb1f47305" translate="yes" xml:space="preserve">
          <source>This method is called to process decimal and hexadecimal numeric character references of the form &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; and &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt;. For example, the decimal equivalent for &lt;code&gt;&amp;amp;gt;&lt;/code&gt; is &lt;code&gt;&amp;amp;#62;&lt;/code&gt;, whereas the hexadecimal is &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt;; in this case the method will receive &lt;code&gt;'62'&lt;/code&gt; or &lt;code&gt;'x3E'&lt;/code&gt;. This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; 形式の10進数および16進数の数字参照を処理するために呼び出されます。および &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt; 。たとえば、 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; に相当する10進数。ある &lt;code&gt;&amp;amp;#62;&lt;/code&gt; 、16進数は &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt; ; この場合、メソッドは &lt;code&gt;'62'&lt;/code&gt; または &lt;code&gt;'x3E'&lt;/code&gt; を受け取ります。&lt;em&gt;convert_charrefs&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、このメソッドは決して呼び出されません。</target>
        </trans-unit>
        <trans-unit id="780c3c6664f5680442ea9564301d3230a6f7d6e3" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">この方法は、無条件の後に呼び出される&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;、または後の&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;場合の&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6f7e5a7533d2f0589f3c906a5b3e37e2cdfcac0b" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">この方法は、後に無条件に呼び出され&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt;、または後&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;場合&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; は&lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6c401fde11b1d87c3294f0c6adb80e04c2f1324b" translate="yes" xml:space="preserve">
          <source>This method is called when a comment is encountered (e.g. &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、コメントが検出されたときに呼び出されます（例： &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="083f5bbf1b7fefcdcebe71d540d8eb6862687fcd" translate="yes" xml:space="preserve">
          <source>This method is called when an unrecognized declaration is read by the parser.</source>
          <target state="translated">このメソッドは、認識されていない宣言がパーサによって読み込まれたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="48ae32338e51d99f49068d32f552aa62126cb367" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt;&lt;code&gt;inspect.iscoroutine()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutines.</source>
          <target state="translated">このメソッドは、ジェネレーターベースのコルーチンに対して &lt;code&gt;True&lt;/code&gt; を返すため、&lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt; &lt;code&gt;inspect.iscoroutine()&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="bc40e25a45ba1a58708d3089e289be86a7db029b" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt;&lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutine functions decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@coroutine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は、異なる&lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt; &lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt;が返すため &lt;code&gt;True&lt;/code&gt; で装飾ジェネレータベースコルーチン関数の&lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@coroutine&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dddb9624f73389ca6bf646c24e53304c5b5057e6" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but without a &lt;code&gt;tz&lt;/code&gt; parameter.</source>
          <target state="translated">このメソッドは機能的に&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;と同等ですが、 &lt;code&gt;tz&lt;/code&gt; パラメータはありません。</target>
        </trans-unit>
        <trans-unit id="b97d3051bc701554dcad211b236f67ff88970be3" translate="yes" xml:space="preserve">
          <source>This method is idempotent and irreversible. No other methods should be called after the event loop is closed.</source>
          <target state="translated">このメソッドはアイドempotentであり、不可逆的です。イベントループが閉じられた後は、他のメソッドを呼び出してはいけません。</target>
        </trans-unit>
        <trans-unit id="7892f36db958bf60c1b533b160c0617375239772" translate="yes" xml:space="preserve">
          <source>This method is idempotent, so it can be called when the server is already being serving.</source>
          <target state="translated">このメソッドは、サーバがすでにサービスを提供しているときに呼び出すことができるようになっています。</target>
        </trans-unit>
        <trans-unit id="9ae00641b6d229770d0d819ba1e3ef91e3d7719d" translate="yes" xml:space="preserve">
          <source>This method is not available if &lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt;&lt;code&gt;HAS_ECDH&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt; &lt;code&gt;HAS_ECDH&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは使用できません。</target>
        </trans-unit>
        <trans-unit id="57ee157b53728379894b4f3c33a03f1d7afbf61f" translate="yes" xml:space="preserve">
          <source>This method is not called directly by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, but it&amp;rsquo;s used to implement &lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt;&lt;code&gt;assertListEqual()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt;&lt;code&gt;assertTupleEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;によって直接呼び出されるのではなく、&lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt; &lt;code&gt;assertListEqual()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt; &lt;code&gt;assertTupleEqual()&lt;/code&gt; &lt;/a&gt;を実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="96313c3d6a35f154b39764123b93a03916b5cfad" translate="yes" xml:space="preserve">
          <source>This method is not thread-safe.</source>
          <target state="translated">このメソッドはスレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="0b1b157e68e0328b341b72985baa5aa977263159" translate="yes" xml:space="preserve">
          <source>This method is provided as a hook to allow subclasses to modify the way objects are converted to strings. The default implementation uses the internals of the &lt;a href=&quot;#pprint.saferepr&quot;&gt;&lt;code&gt;saferepr()&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">このメソッドは、サブクラスがオブジェクトを文字列に変換する方法を変更できるようにするフックとして提供されます。デフォルトの実装では、&lt;a href=&quot;#pprint.saferepr&quot;&gt; &lt;code&gt;saferepr()&lt;/code&gt; &lt;/a&gt;実装の内部を使用します。</target>
        </trans-unit>
        <trans-unit id="e4bdac2933048c44528e57a8429191db425bd284" translate="yes" xml:space="preserve">
          <source>This method is the main public interface to the &lt;code&gt;TextTestRunner&lt;/code&gt;. This method takes a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instance. A &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; is created by calling &lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt;&lt;code&gt;_makeResult()&lt;/code&gt;&lt;/a&gt; and the test(s) are run and the results printed to stdout.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;TextTestRunner&lt;/code&gt; へのメインのパブリックインターフェイスです。このメソッドは、&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスを取ります。A &lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; を&lt;/a&gt;呼び出すことによって作成された&lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt; &lt;code&gt;_makeResult()&lt;/code&gt; &lt;/a&gt;とテスト（複数可）を実行し、結果を標準出力に出力されます。</target>
        </trans-unit>
        <trans-unit id="9bd2fdab8cd5bcb3e3fbca53f4ef470344341c92" translate="yes" xml:space="preserve">
          <source>This method lets users assign non-string values to keys internally. This behaviour is unsupported and will cause errors when attempting to write to a file or get it in non-raw mode. &lt;strong&gt;Use the mapping protocol API&lt;/strong&gt; which does not allow such assignments to take place.</source>
          <target state="translated">このメソッドにより、ユーザーは文字列以外の値をキーに内部的に割り当てることができます。この動作はサポートされておらず、ファイルへの書き込みや非ローモードでの取得を試みるとエラーが発生します。このような割り当てを許可しない&lt;strong&gt;マッピングプロトコルAPI&lt;/strong&gt;を&lt;strong&gt;使用してください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9e630d695c2a5ae538aa534d3f87ea68ff8127b6" translate="yes" xml:space="preserve">
          <source>This method makes a backup of a SQLite database even while it&amp;rsquo;s being accessed by other clients, or concurrently by the same connection. The copy will be written into the mandatory argument &lt;em&gt;target&lt;/em&gt;, that must be another &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">この方法は、他のクライアントから、または同じ接続によって同時にアクセスされている場合でも、SQLiteデータベースのバックアップを作成します。コピーは必須引数&lt;em&gt;targetに&lt;/em&gt;書き込まれます。これは別の&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;インスタンスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8a02a1158ac4fe9ca33054075ba7d7b80db9ab50" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt; exception if the barrier is broken or reset while a thread is waiting.</source>
          <target state="translated">このメソッドは、スレッドの待機中にバリアが&lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt;またはリセットされると、BrokenBarrierError例外を発生させる場合があります。</target>
        </trans-unit>
        <trans-unit id="c5c3086f7c1e4aa9151125cf96d263eefadc9725" translate="yes" xml:space="preserve">
          <source>This method may raise the following exceptions:</source>
          <target state="translated">このメソッドは以下の例外を発生させることがあります。</target>
        </trans-unit>
        <trans-unit id="8524f745e5bc38fb37ffab27510d6080ece56f38" translate="yes" xml:space="preserve">
          <source>This method may return a false value (including &lt;code&gt;None&lt;/code&gt;), in which case the transport will close itself. Conversely, if this method returns a true value, the protocol used determines whether to close the transport. Since the default implementation returns &lt;code&gt;None&lt;/code&gt;, it implicitly closes the connection.</source>
          <target state="translated">このメソッドはfalse値（ &lt;code&gt;None&lt;/code&gt; を含む）を返す場合があります。その場合、トランスポートは自身を閉じます。逆に、このメソッドがtrue値を返す場合、使用されるプロトコルがトランスポートを閉じるかどうかを決定します。デフォルトの実装は &lt;code&gt;None&lt;/code&gt; を返すため、暗黙的に接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="fea30f06bff8ed9f1510d9b11d7230de71e381c5" translate="yes" xml:space="preserve">
          <source>This method modifies the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object by sorting it according to the supplied criteria. The argument can be either a string or a SortKey enum identifying the basis of a sort (example: &lt;code&gt;'time'&lt;/code&gt;, &lt;code&gt;'name'&lt;/code&gt;, &lt;code&gt;SortKey.TIME&lt;/code&gt; or &lt;code&gt;SortKey.NAME&lt;/code&gt;). The SortKey enums argument have advantage over the string argument in that it is more robust and less error prone.</source>
          <target state="translated">このメソッドは、指定された基準に従ってソートすることにより、&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;オブジェクトを変更します。引数は、文字列または並べ替えの基礎を識別するSortKey列挙型（例： &lt;code&gt;'time'&lt;/code&gt; 、 &lt;code&gt;'name'&lt;/code&gt; 、 &lt;code&gt;SortKey.TIME&lt;/code&gt; または &lt;code&gt;SortKey.NAME&lt;/code&gt; ）のいずれかです。SortKey enums引数は、文字列引数よりも堅牢で、エラーが発生しにくいという利点があります。</target>
        </trans-unit>
        <trans-unit id="4b67339d7ffa22b6989fc78c8f895cf57a483d57" translate="yes" xml:space="preserve">
          <source>This method modifies the sequence in place for economy of space when sorting a large sequence. To remind users that it operates by side effect, it does not return the sorted sequence (use &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; to explicitly request a new sorted list instance).</source>
          <target state="translated">このメソッドは、大きなシーケンスをソートするときにスペースを節約するために、シーケンスを適切に変更します。副作用で動作することをユーザーに思い出させるために、それはソートされたシーケンスを返しません（&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;を使用して、新しいソートされたリストインスタンスを明示的に要求します）。</target>
        </trans-unit>
        <trans-unit id="3d73c5e146a430709549e8f05dfe23e4b86723e9" translate="yes" xml:space="preserve">
          <source>This method must be implemented by derived classes.</source>
          <target state="translated">このメソッドは派生クラスで実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="6427204bbe134d960e66ca16b4637f20a99011bf" translate="yes" xml:space="preserve">
          <source>This method of serialization requires that the time zone data for the required key be available on both the serializing and deserializing side, similar to the way that references to classes and functions are expected to exist in both the serializing and deserializing environments. It also means that no guarantees are made about the consistency of results when unpickling a &lt;code&gt;ZoneInfo&lt;/code&gt; pickled in an environment with a different version of the time zone data.</source>
          <target state="translated">このシリアル化の方法では、クラスと関数への参照がシリアル化環境と逆シリアル化環境の両方に存在すると予想されるのと同様に、必要なキーのタイムゾーンデータがシリアル化側と逆シリアル化側の両方で利用可能である必要があります。また、タイムゾーンデータのバージョンが異なる環境でpickle化された &lt;code&gt;ZoneInfo&lt;/code&gt; を選択解除した場合、結果の一貫性について保証が行われないことも意味します。</target>
        </trans-unit>
        <trans-unit id="ecb603ce556cad65f00fa7a55aabb53317aee850" translate="yes" xml:space="preserve">
          <source>This method of the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class accumulates additional profiling information into the current profiling object. Its arguments should refer to filenames created by the corresponding version of &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cProfile.run()&lt;/code&gt;. Statistics for identically named (re: file, line, name) functions are automatically accumulated into single function statistics.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスのこのメソッドは、現在のプロファイリングオブジェクトに追加のプロファイリング情報を蓄積します。その引数は、対応するバージョンの&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;cProfile.run()&lt;/code&gt; によって作成されたファイル名を参照する必要があります。同じ名前の（re：ファイル、行、名前）関数の統計は、単一の関数統計に自動的に蓄積されます。</target>
        </trans-unit>
        <trans-unit id="d9898a7b816caca92a7ca2b0496401b9be9be437" translate="yes" xml:space="preserve">
          <source>This method prints a usage message including the &lt;em&gt;message&lt;/em&gt; to the standard error and terminates the program with a status code of 2.</source>
          <target state="translated">この方法は、以下を含む使用メッセージ印刷&lt;em&gt;メッセージを&lt;/em&gt;標準誤差および2のステータスコードでプログラムを終了します。</target>
        </trans-unit>
        <trans-unit id="5e6533f5a1c6b28e058a5b665ce396bbe1c50304" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call. Once awakened, the Condition re-acquires its lock and this method returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、基になるロックを解放し、&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;呼び出しによって起こされるまでブロックします。起動すると、Conditionはそのロックを再取得し、このメソッドは &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b82153b14d869f12ca5d555943198e9ddc07c795" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call for the same condition variable in another thread, or until the optional timeout occurs. Once awakened or timed out, it re-acquires the lock and returns.</source>
          <target state="translated">このメソッドは、基礎となるロックを解放し、別のスレッドの同じ条件変数の&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;呼び出しによって起こされるまで、またはオプションのタイムアウトが発生するまでブロックします。起動またはタイムアウトすると、ロックを再取得して戻ります。</target>
        </trans-unit>
        <trans-unit id="944988049561328736ecf5958b62fc42047b6f2b" translate="yes" xml:space="preserve">
          <source>This method replaces the &lt;em&gt;Content-Type&lt;/em&gt; header, keeping all the parameters in place. If &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, this leaves the existing header&amp;rsquo;s quoting as is, otherwise the parameters will be quoted (the default).</source>
          <target state="translated">このメソッドは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーを置き換え、すべてのパラメーターを適切な場所に保持します。&lt;em&gt;requote&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、これは既存のヘッダーの引用をそのまま残します。そうでない場合、パラメーターは引用されます（デフォルト）。</target>
        </trans-unit>
        <trans-unit id="fa06c018512ee37e541d1e43b0f387b23671b215" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;None&lt;/code&gt; for the lock, since there is no underlying I/O to which access needs to be serialized.</source>
          <target state="translated">アクセスをシリアル化する必要がある基本的なI / Oがないため、このメソッドはロックに対して &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0a8c42b63ebbe3579b9c96c4e3249c2dcec50aba" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; if and only if the internal flag has been set to true, either before the wait call or after the wait starts, so it will always return &lt;code&gt;True&lt;/code&gt; except if a timeout is given and the operation times out.</source>
          <target state="translated">このメソッドが返す &lt;code&gt;True&lt;/code&gt; 場合にのみ、それは常に戻りますので、内部フラグは、いずれかの待機コールの前または待機を開始した後、trueに設定されている場合 &lt;code&gt;True&lt;/code&gt; タイムアウトが与えられ、操作がタイムアウトした場合を除いて。</target>
        </trans-unit>
        <trans-unit id="4ff21d78bbca2c17f4b0d82e526fde8ca8233fe2" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; just before the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method starts until just after the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates. The module function &lt;a href=&quot;#threading.enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; returns a list of all alive threads.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが開始する直前から&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが終了する直前まで &lt;code&gt;True&lt;/code&gt; を返します。モジュール関数&lt;a href=&quot;#threading.enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt;は、すべての有効なスレッドのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9a190b6d357c92f8c7b4a848b7c388e4f2261012" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="22aa37bf3e1d9f077cbe89f01a870cfdf0411629" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f9228a481dfb5811e50b295f775925c61552270a" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名前付きタプル&lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="342409adab7e89643138c3e03259c386365fe00e" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask indicating which control(s) are currently being used as a recording source.</source>
          <target state="translated">このメソッドは、現在どのコントロールが録画ソースとして使用されているかを示すビットマスクを返します。</target>
        </trans-unit>
        <trans-unit id="aabfc7d3078e2a06d6d9b67f429a304a5721d434" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask specifying the available mixer controls (&amp;ldquo;Control&amp;rdquo; being a specific mixable &amp;ldquo;channel&amp;rdquo;, such as &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; or &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt;). This bitmask indicates a subset of all available mixer controls&amp;mdash;the &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; constants defined at module level. To determine if, for example, the current mixer object supports a PCM mixer, use the following Python code:</source>
          <target state="translated">このメソッドは、使用可能なミキサーコントロールを指定するビットマスクを返します（「コントロール」は、 &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; や &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt; などの特定の混合可能な「チャネル」です）。このビットマスクは、使用可能なすべてのミキサーコントロールのサブセット、 &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; モジュールレベルで定義されたSOUND_MIXER_ *定数を示します。たとえば、現在のミキサーオブジェクトがPCMミキサーをサポートしているかどうかを確認するには、次のPythonコードを使用します。</target>
        </trans-unit>
        <trans-unit id="df978a925585d3eadcceedc0ad64b9fab01f1e83" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes instance that shares the buffer of the &lt;em&gt;source&lt;/em&gt; object. The &lt;em&gt;source&lt;/em&gt; object must support the writeable buffer interface. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドは、&lt;em&gt;ソース&lt;/em&gt;オブジェクトのバッファを共有するctypesインスタンスを返します。&lt;em&gt;ソース&lt;/em&gt;オブジェクトは、書き込み可能なバッファインタフェースをサポートしなければなりません。オプションの&lt;em&gt;オフセット&lt;/em&gt;パラメータは、ソースバッファへのオフセットをバイト単位で指定します。デフォルトはゼロです。ソースバッファーが十分に大きくない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="ac71e792e2a9c33ac33b83b3b71a840f15b878ae" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance exported by a shared library. &lt;em&gt;name&lt;/em&gt; is the name of the symbol that exports the data, &lt;em&gt;library&lt;/em&gt; is the loaded shared library.</source>
          <target state="translated">このメソッドは、共有ライブラリによってエクスポートされたctypesタイプのインスタンスを返します。&lt;em&gt;name&lt;/em&gt;はデータをエクスポートするシンボルの名前、&lt;em&gt;library&lt;/em&gt;はロードされた共有ライブラリです。</target>
        </trans-unit>
        <trans-unit id="bb20e4aecb1fc974d47968af508b600ed3725864" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance using the memory specified by &lt;em&gt;address&lt;/em&gt; which must be an integer.</source>
          <target state="translated">このメソッドは、整数でなければならない&lt;em&gt;アドレス&lt;/em&gt;で指定されたメモリを使用してctypesタイプのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="ec26fdb2340b8677da60daf61e4675ffcd3eae50" translate="yes" xml:space="preserve">
          <source>This method returns a list of 2-tuples of the form returned by &lt;code&gt;parseaddr()&lt;/code&gt;. &lt;em&gt;fieldvalues&lt;/em&gt; is a sequence of header field values as might be returned by &lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt;&lt;code&gt;Message.get_all&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a simple example that gets all the recipients of a message:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;parseaddr()&lt;/code&gt; によって返される形式の2タプルのリストを返します。&lt;em&gt;fieldvalues&lt;/em&gt;は、&lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt; &lt;code&gt;Message.get_all&lt;/code&gt; &lt;/a&gt;によって返される可能性のある一連のヘッダーフィールド値です。メッセージのすべての受信者を取得する簡単な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="73e29a95cda80e7acb29a92567265c1de92af438" translate="yes" xml:space="preserve">
          <source>This method returns a list of column names. Immediately after a query, it is the first member of each tuple in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、列名のリストを返します。クエリの直後は、&lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; &lt;/a&gt;の各タプルの最初のメンバーです。</target>
        </trans-unit>
        <trans-unit id="55bc27e05f930af9d7a7a49446bfdd2fb906a983" translate="yes" xml:space="preserve">
          <source>This method returns a list of strings, one for each (non-system) method supported by the XML-RPC server.</source>
          <target state="translated">このメソッドは、XML-RPC サーバがサポートする (非システムの)メソッドごとに 1 つずつ、文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="bae21ab56be3b0ade0440fb014f62c8a8187470a" translate="yes" xml:space="preserve">
          <source>This method returns an instance of StatsProfile, which contains a mapping of function names to instances of FunctionProfile. Each FunctionProfile instance holds information related to the function&amp;rsquo;s profile such as how long the function took to run, how many times it was called, etc&amp;hellip;</source>
          <target state="translated">このメソッドは、FunctionProfileのインスタンスへの関数名のマッピングを含むStatsProfileのインスタンスを返します。各FunctionProfileインスタンスは、関数の実行にかかった時間、呼び出された回数など、関数のプロファイルに関連する情報を保持します。</target>
        </trans-unit>
        <trans-unit id="8b8fb986af78dbe250cc8c1951c634409b1ff5a1" translate="yes" xml:space="preserve">
          <source>This method returns the instance of &lt;code&gt;TestResult&lt;/code&gt; used by &lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;. It is not intended to be called directly, but can be overridden in subclasses to provide a custom &lt;code&gt;TestResult&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;によって使用される &lt;code&gt;TestResult&lt;/code&gt; のインスタンスを返します。直接呼び出すことは意図されていませんが、サブクラスでオーバーライドして、カスタム &lt;code&gt;TestResult&lt;/code&gt; を提供できます。</target>
        </trans-unit>
        <trans-unit id="708531771914c1b22ac7adc98a0e783146aec79d" translate="yes" xml:space="preserve">
          <source>This method rolls back any changes to the database since the last call to &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、最後に&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; を&lt;/a&gt;呼び出してからのデータベースへの変更をすべてロールバックします。</target>
        </trans-unit>
        <trans-unit id="14b5b4167215d3c5124bc8670df033b6ee05ce7b" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;と同様の目的を果たしますが、位置引数のみをサポートします。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;時に__new __（）メソッドに渡される引数 &lt;code&gt;args&lt;/code&gt; のタプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="bb9f7630faa4ba584cc2fcc2a9528f2d918a8feb" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;と同様の目的を果たしますが、位置引数のみをサポートします。&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;すると__new __（）メソッドに渡される引数 &lt;code&gt;args&lt;/code&gt; のタプルを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="1ca39179fbf1b58e9b5132d398a4ae61933bd01d" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'HEAD'&lt;/code&gt; request type: it sends the headers it would send for the equivalent &lt;code&gt;GET&lt;/code&gt; request. See the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; method for a more complete explanation of the possible headers.</source>
          <target state="translated">このメソッドは &lt;code&gt;'HEAD'&lt;/code&gt; リクエストタイプを提供します。同等の &lt;code&gt;GET&lt;/code&gt; リクエストに対して送信するヘッダーを送信します。可能なヘッダーの詳細については、&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="f7dbd08df48e0a9432fc27f2d1dc359d154264c6" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'POST'&lt;/code&gt; request type, only allowed for CGI scripts. Error 501, &amp;ldquo;Can only POST to CGI scripts&amp;rdquo;, is output when trying to POST to a non-CGI url.</source>
          <target state="translated">このメソッドは &lt;code&gt;'POST'&lt;/code&gt; リクエストタイプを提供し、CGIスクリプトでのみ許可されます。CGI以外のURLにPOSTしようとすると、エラー501「CGIスクリプトにのみPOSTできる」が出力されます。</target>
        </trans-unit>
        <trans-unit id="d8c66f9b775088a9351abd971856f1005e64496a" translate="yes" xml:space="preserve">
          <source>This method sets &lt;em&gt;tb&lt;/em&gt; as the new traceback for the exception and returns the exception object. It is usually used in exception handling code like this:</source>
          <target state="translated">このメソッドは、&lt;em&gt;tb&lt;/em&gt;を例外の新しいトレースバックとして設定し、例外オブジェクトを返します。通常、次のような例外処理コードで使用されます。</target>
        </trans-unit>
        <trans-unit id="39b545ecb6df97965a21adfe6fe3076dc16d39bf" translate="yes" xml:space="preserve">
          <source>This method should be called from &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; by a formatter which wants to make use of a formatted time. This method can be overridden in formatters to provide for any specific requirement, but the basic behavior is as follows: if &lt;em&gt;datefmt&lt;/em&gt; (a string) is specified, it is used with &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to format the creation time of the record. Otherwise, the format &amp;lsquo;%Y-%m-%d %H:%M:%S,uuu&amp;rsquo; is used, where the uuu part is a millisecond value and the other letters are as per the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; documentation. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;. The resulting string is returned.</source>
          <target state="translated">このメソッドは、フォーマットされた時間を利用したいフォーマッターによって&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;から呼び出されます。このメソッドは、特定の要件を提供するためにフォーマッターでオーバーライドできますが、基本的な動作は次のとおりです&lt;em&gt;。datefmt&lt;/em&gt;（文字列）が指定されている場合は、&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;と共に使用して、レコードの作成時刻をフォーマットします。それ以外の場合は、「％Y-％m-％d％H：％M：％S、uuu」という形式が使用されます。ここで、uuuの部分はミリ秒の値で、その他の文字は&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。この形式の時間の例は &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; です。結果の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="60a2e03ebc40f5256939419e575a070656ab940e" translate="yes" xml:space="preserve">
          <source>This method should be called from handlers when an exception is encountered during an &lt;a href=&quot;#logging.Handler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt; call. If the module-level attribute &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, exceptions get silently ignored. This is what is mostly wanted for a logging system - most users will not care about errors in the logging system, they are more interested in application errors. You could, however, replace this with a custom handler if you wish. The specified record is the one which was being processed when the exception occurred. (The default value of &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as that is more useful during development).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#logging.Handler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;呼び出し中に例外が発生したときにハンドラーから呼び出す必要があります。モジュールレベルの属性 &lt;code&gt;raiseExceptions&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; の場合、例外は通知なく無視されます。これは主にロギングシステムに必要なものです。ほとんどのユーザーはロギングシステムのエラーを気にせず、アプリケーションエラーに関心があります。ただし、必要に応じて、これをカスタムハンドラーに置き換えることができます。指定されたレコードは、例外が発生したときに処理されていたレコードです。（ &lt;code&gt;raiseExceptions&lt;/code&gt; のデフォルト値は &lt;code&gt;True&lt;/code&gt; です。これは、開発時に役立ちます）。</target>
        </trans-unit>
        <trans-unit id="a9d5481f5b1f23faa3969748474f218efddfdcb0" translate="yes" xml:space="preserve">
          <source>This method should never return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">このメソッドが &lt;code&gt;None&lt;/code&gt; を返すことはありません。</target>
        </trans-unit>
        <trans-unit id="51cd700cee747b5ceb2075f98fd1f7dedbab9ae0" translate="yes" xml:space="preserve">
          <source>This method should not be overloaded in subclassed event loops. For custom exception handling, use the &lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt;&lt;code&gt;set_exception_handler()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、サブクラス化されたイベントループでオーバーロードしないでください。カスタム例外処理の場合は、&lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt; &lt;code&gt;set_exception_handler()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="3eda0b07f66336a00c76b0b8ce3859da0cb22cfe" translate="yes" xml:space="preserve">
          <source>This method should not be used for generating security tokens. Use &lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt;&lt;code&gt;secrets.token_bytes()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このメソッドは、セキュリティトークンの生成には使用しないでください。代わりに&lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt; &lt;code&gt;secrets.token_bytes()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="a065c99a954c6fdd1c3f8befb55be10a4fe3a9e9" translate="yes" xml:space="preserve">
          <source>This method should only be called by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations before executing the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; and by unit tests.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; に&lt;/a&gt;関連する作業を実行する前の&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;実装とユニットテストによってのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="86c36ea786adb5a31a67ae740b8c3850457fbdb7" translate="yes" xml:space="preserve">
          <source>This method should only be used by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations and unit tests.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; の&lt;/a&gt;実装と単体テストでのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="99aa205c4cdbbfefed6ade284534cab4156444b9" translate="yes" xml:space="preserve">
          <source>This method should only be used in low-level callback-based code.</source>
          <target state="translated">このメソッドは、低レベルのコールバックベースのコードでのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c1813fe7424980ca70bdf5ec66a9e369a420208" translate="yes" xml:space="preserve">
          <source>This method should return &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;NotImplemented&lt;/code&gt;. If it returns &lt;code&gt;True&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. If it returns &lt;code&gt;False&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is not considered a subclass of this ABC, even if it would normally be one. If it returns &lt;code&gt;NotImplemented&lt;/code&gt;, the subclass check is continued with the usual mechanism.</source>
          <target state="translated">このメソッドは &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;False&lt;/code&gt; 、または &lt;code&gt;NotImplemented&lt;/code&gt; を返す必要があります。それが返された場合は &lt;code&gt;True&lt;/code&gt; 、&lt;em&gt;サブクラスは&lt;/em&gt;このABCのサブクラスと考えられています。 &lt;code&gt;False&lt;/code&gt; が返された場合、&lt;em&gt;サブクラス&lt;/em&gt;は、通常ABCであっても、このABC の&lt;em&gt;サブクラス&lt;/em&gt;とは見なされません。 &lt;code&gt;NotImplemented&lt;/code&gt; を返す場合、サブクラスチェックは通常のメカニズムで続行されます。</target>
        </trans-unit>
        <trans-unit id="599855f85a3a01b3230b2de2277a7a28ed0b8262" translate="yes" xml:space="preserve">
          <source>This method simplifies subclassing of &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; の&lt;/a&gt;サブクラス化を簡素化します。</target>
        </trans-unit>
        <trans-unit id="7e52a16096b5729df1d34566cf03f37c1f7b86c3" translate="yes" xml:space="preserve">
          <source>This method sorts the list in place, using only &lt;code&gt;&amp;lt;&lt;/code&gt; comparisons between items. Exceptions are not suppressed - if any comparison operations fail, the entire sort operation will fail (and the list will likely be left in a partially modified state).</source>
          <target state="translated">このメソッドは、アイテム間の &lt;code&gt;&amp;lt;&lt;/code&gt; 比較のみを使用して、リストを所定の場所に並べ替えます。例外は抑制されません-比較操作が失敗すると、並べ替え操作全体が失敗します（リストは部分的に変更された状態のままになる可能性があります）。</target>
        </trans-unit>
        <trans-unit id="74613f7f1f1bca337b67bbd492f7c5eb7f319eab" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、次の行境界で分割されます。特に、境界は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル改行の&lt;/a&gt;スーパーセットです。</target>
        </trans-unit>
        <trans-unit id="cc412fbe85cc5444d1336061a20d0efe52aa3575" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、次の行境界で分割されます。特に、境界は&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル改行の&lt;/a&gt;スーパーセットです。</target>
        </trans-unit>
        <trans-unit id="58a68da18b44c96bba6604dc7f18a0823ef4fdfd" translate="yes" xml:space="preserve">
          <source>This method supports hostname checking via &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt;および&lt;em&gt;サーバー名表示&lt;/em&gt;（&lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; を&lt;/a&gt;参照）によるホスト名チェックをサポートしてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cd8fdaf763e9fa8074cf2ca63bc90b4b3cda9085" translate="yes" xml:space="preserve">
          <source>This method takes a single argument &lt;em&gt;arg_line&lt;/em&gt; which is a string read from the argument file. It returns a list of arguments parsed from this string. The method is called once per line read from the argument file, in order.</source>
          <target state="translated">このメソッドは、引数ファイルから読み取られた文字列である単一の引数&lt;em&gt;arg_line&lt;/em&gt;を取ります。この文字列から解析された引数のリストを返します。このメソッドは、引数ファイルから順番に読み込まれる1行ごとに1回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5c760fe49109a77818baccf2f47804b109f3c544" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns a documentation string describing the use of that method. If no such string is available, an empty string is returned. The documentation string may contain HTML markup.</source>
          <target state="translated">このメソッドは、XML-RPC サーバーで実装されているメソッドの名前を 1 つのパラメータとして受け取ります。そのメソッドの使用法を説明するドキュメント文字列を返します。そのような文字列がない場合は、空の文字列が返されます。ドキュメント文字列には HTML マークアップを含めることができます。</target>
        </trans-unit>
        <trans-unit id="f5893c1e14198034d5092ae81f02a960d68bc8da" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns an array of possible signatures for this method. A signature is an array of types. The first of these types is the return type of the method, the rest are parameters.</source>
          <target state="translated">このメソッドは、XML-RPC サーバで実装されているメソッドの名前を 1 つのパラメータとして受け取ります。このメソッドのシグネチャの配列を返します。シグネチャは型の配列です。これらの型のうち最初の型はメソッドの戻り値の型で、残りの型はパラメータです。</target>
        </trans-unit>
        <trans-unit id="818723afff8c189eecbb4fe7facf10c8cc63fb17" translate="yes" xml:space="preserve">
          <source>This method terminates the program, exiting with the specified &lt;em&gt;status&lt;/em&gt; and, if given, it prints a &lt;em&gt;message&lt;/em&gt; before that. The user can override this method to handle these steps differently:</source>
          <target state="translated">このメソッドはプログラムを終了し、指定された&lt;em&gt;ステータス&lt;/em&gt;で終了します。指定されている場合は、その前に&lt;em&gt;メッセージを&lt;/em&gt;出力し&lt;em&gt;ます&lt;/em&gt;。ユーザーはこのメソッドをオーバーライドして、これらのステップを異なる方法で処理できます。</target>
        </trans-unit>
        <trans-unit id="de6c72c35c2834f0369b1a4c798dc2bca2a384c4" translate="yes" xml:space="preserve">
          <source>This method transforms option names on every read, get, or set operation. The default converts the name to lowercase. This also means that when a configuration file gets written, all keys will be lowercase. Override this method if that&amp;rsquo;s unsuitable. For example:</source>
          <target state="translated">このメソッドは、読み取り、取得、または設定操作ごとにオプション名を変換します。デフォルトでは、名前が小文字に変換されます。これは、構成ファイルが書き込まれるときに、すべてのキーが小文字になることも意味します。それが不適切な場合は、このメソッドをオーバーライドしてください。例えば：</target>
        </trans-unit>
        <trans-unit id="1974694405c4c9389267ffd50b26d56c3503926c" translate="yes" xml:space="preserve">
          <source>This method waits until the lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">ロックがされるまで、この方法待機&lt;em&gt;ロック解除&lt;/em&gt;、に設定する&lt;em&gt;ロック&lt;/em&gt;戻る &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65f3add9f9cd63e05cc5f580948a304e6648c4a7" translate="yes" xml:space="preserve">
          <source>This method waits until the underlying lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">下層のロックがされるまで、この方法待機&lt;em&gt;ロック解除&lt;/em&gt;、に設定する&lt;em&gt;ロック&lt;/em&gt;戻る &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="454a025121549fe2bea2c118dd6191bd13eb086c" translate="yes" xml:space="preserve">
          <source>This method wakes up at most &lt;em&gt;n&lt;/em&gt; of the threads waiting for the condition variable; it is a no-op if no threads are waiting.</source>
          <target state="translated">このメソッドは、条件変数を待機している最大&lt;em&gt;n個&lt;/em&gt;のスレッドを起動します。待機中のスレッドがない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="9c2a082dfc19e539c561f64a6a5f07e702f02adc" translate="yes" xml:space="preserve">
          <source>This method will be called before any protocol-specific open method.</source>
          <target state="translated">このメソッドは、プロトコル固有のオープンメソッドの前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6efbbee23467f399d8225dc8abd523590b461d19" translate="yes" xml:space="preserve">
          <source>This method will parse and dispatch the request to the appropriate &lt;code&gt;do_*()&lt;/code&gt; method. You should never need to override it.</source>
          <target state="translated">このメソッドは、リクエストを解析して適切な &lt;code&gt;do_*()&lt;/code&gt; メソッドにディスパッチします。オーバーライドする必要はありません。</target>
        </trans-unit>
        <trans-unit id="cce13a8e7f0704d679b6f2119c6dcb9637067db5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt;&lt;code&gt;HAS_ALPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt; &lt;code&gt;HAS_ALPN&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f46ac96b947124dc48db380e519a659d718834f5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_NPN&quot;&gt;&lt;code&gt;HAS_NPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_NPN&quot;&gt; &lt;code&gt;HAS_NPN&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2af3b76ebd9cb9d935d4351697b99510998fe707" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the OpenSSL library had OPENSSL_NO_TLSEXT defined when it was built.</source>
          <target state="translated">OpenSSLライブラリーの作成時にOPENSSL_NO_TLSEXTが定義されている場合、このメソッドは&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="d4e07593c623f5c1c4618b8ae83e426642a79bb4" translate="yes" xml:space="preserve">
          <source>This method will raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if called more than once on the same thread object.</source>
          <target state="translated">このメソッドは、同じスレッドオブジェクトで複数回呼び出されると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="cae724061ea4a293baa1b5febb7652b6d04b5e39" translate="yes" xml:space="preserve">
          <source>This method will return normally if the mail is accepted for at least one recipient. Otherwise it will raise an exception. That is, if this method does not raise an exception, then someone should get your mail. If this method does not raise an exception, it returns a dictionary, with one entry for each recipient that was refused. Each entry contains a tuple of the SMTP error code and the accompanying error message sent by the server.</source>
          <target state="translated">このメソッドは、少なくとも一人の受信者に対してメールが受理された場合に正常に返されます。そうでない場合は例外が発生します。つまり、このメソッドが例外を発生させなければ、誰かがあなたのメールを受け取るべきです。このメソッドが例外を発生させない場合は、拒否された各受信者のために1つのエントリを持つ辞書を返します。各エントリには、SMTP エラー・コードと、サーバによって送信されたそれに付随するエラーメッセージのタプルが含まれます。</target>
        </trans-unit>
        <trans-unit id="74d1b69630acadad9b7316b4df18afcaf8f4226d" translate="yes" xml:space="preserve">
          <source>This method will return when the &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; method returns a true value. The &lt;em&gt;stop&lt;/em&gt; argument to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; is the return value from the command&amp;rsquo;s corresponding &lt;code&gt;do_*()&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;メソッドがtrue値を返すときに返されます。&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;の&lt;em&gt;停止&lt;/em&gt;引数は、コマンドの対応する &lt;code&gt;do_*()&lt;/code&gt; メソッドからの戻り値です。</target>
        </trans-unit>
        <trans-unit id="69b9279828888f5b4b6bbb18c43609074bb5f6ee" translate="yes" xml:space="preserve">
          <source>This method will try to establish the connection in the background. When successful, it returns a &lt;code&gt;(transport, protocol)&lt;/code&gt; pair.</source>
          <target state="translated">このメソッドは、バックグラウンドで接続を確立しようとします。成功すると、 &lt;code&gt;(transport, protocol)&lt;/code&gt; ペアが返されます。</target>
        </trans-unit>
        <trans-unit id="2662a58cbe744756d2713c9a530353fadec108dd" translate="yes" xml:space="preserve">
          <source>This method works regardless of the warning filters in place when it is called.</source>
          <target state="translated">このメソッドは、このメソッドが呼び出されたときに配置されている警告フィルタに関係なく動作します。</target>
        </trans-unit>
        <trans-unit id="7b56ad7816b033a457026b1ed0aa528822772c71" translate="yes" xml:space="preserve">
          <source>This method&amp;rsquo;s behavior is the same as &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;call_later()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの動作は&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;call_later()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="e306011db50281eb5bb9fe7c8f6f67913bf9062d" translate="yes" xml:space="preserve">
          <source>This method, and others that indirectly call this method, raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata&lt;/code&gt; with argument &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">このメソッド、およびこのメソッドを間接的に呼び出す他のメソッドは、引数 &lt;code&gt;address&lt;/code&gt; で&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;ctypes.cdata&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="11a5f76d1a1de12dfdacfbc20e9a68e9c9a3edcf" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;response&lt;/em&gt; will be an object implementing the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The return value should implement the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;em&gt;req&lt;/em&gt;は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトになります。&lt;em&gt;response&lt;/em&gt;は、&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; の&lt;/a&gt;戻り値と同じインターフェースを実装するオブジェクトになります。戻り値は&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; の&lt;/a&gt;戻り値と同じインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="c12714c6416b6db1ab32f9c47808d5ed1c2f903a" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. The return value should be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;em&gt;req&lt;/em&gt;は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトになります。戻り値は&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="c4c637f6f9eb7d72ffa0912f73fd5eb7c803c82b" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;code&gt;default_open()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、定義されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。戻り値は &lt;code&gt;default_open()&lt;/code&gt; の場合と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="91c65ff111e1b6434d9b1648e2e33858b7b6ac47" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the &lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt;&lt;code&gt;default_open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、実装されている場合、&lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。戻り値は&lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt; &lt;code&gt;default_open()&lt;/code&gt; の&lt;/a&gt;場合と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c5568e01d897e76cde8a8512a2cf117dff860535" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. It should return a file-like object as described in the return value of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. It should raise &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;, unless a truly exceptional thing happens (for example, &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; should not be mapped to &lt;code&gt;URLError&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、実装されている場合、親&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;によって呼び出されます。&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;の戻り値、または &lt;code&gt;None&lt;/code&gt; で説明されているように、ファイルのようなオブジェクトを返す必要があります。それは上げる必要がある&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; を&lt;/a&gt;真に例外的な事が起きない限り（例えば、&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; が&lt;/a&gt;にマップされてはならない &lt;code&gt;URLError&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1cadef953272decef8c8b33d266fff351c8a60bd" translate="yes" xml:space="preserve">
          <source>This mimics the &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; which is used when displaying exception frames.</source>
          <target state="translated">これは、 &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; 模倣しています。これは、例外フレームを表示するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="f27374d3cea4c4b16cf991cf67775d4e667a191c" translate="yes" xml:space="preserve">
          <source>This module &lt;em&gt;does not&lt;/em&gt; access the internet. All of the components needed to bootstrap &lt;code&gt;pip&lt;/code&gt; are included as internal parts of the package.</source>
          <target state="translated">このモジュール&lt;em&gt;は&lt;/em&gt;インターネットにアクセス&lt;em&gt;しません&lt;/em&gt;。 &lt;code&gt;pip&lt;/code&gt; のブートストラップに必要なすべてのコンポーネントは、パッケージの内部パーツとして含まれています。</target>
        </trans-unit>
        <trans-unit id="c0e744d6e6221a3e7f181931436252486b1aba6e" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">このモジュールは、ZIP形式のアーカイブからPythonモジュール（ &lt;code&gt;*.py&lt;/code&gt; 、 &lt;code&gt;*.pyc&lt;/code&gt; ）およびパッケージをインポートする機能を追加します。通常、&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;モジュールを明示的に使用する必要はありません。これは、ZIPアーカイブへのパスである&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;アイテムの組み込み&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;メカニズムによって自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="3d0045b1a71aeae376eb9db26e5ff98175be2978" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">このモジュールは、Pythonモジュール（ &lt;code&gt;*.py&lt;/code&gt; 、 &lt;code&gt;*.pyc&lt;/code&gt; ）とパッケージをZIP形式のアーカイブからインポートする機能を追加します。通常、&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;モジュールを明示的に使用する必要はありません。これは、ZIPアーカイブへのパスである&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;アイテムの組み込み&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;メカニズムによって自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="f143dd25b8da97a54f728f8c06662f767545245d" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">このモジュールを使用すると、Pythonプログラムで文字列が&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;キーワード&lt;/a&gt;かどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="4b8b243423ae5bd9c91dd1e9a526289e44d74151" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a keyword.</source>
          <target state="translated">このモジュールは、Pythonプログラムが文字列がキーワードかどうかを判断することを可能にします。</target>
        </trans-unit>
        <trans-unit id="7a344df928c4cfb82fbfa17dc83438dd90f3e913" translate="yes" xml:space="preserve">
          <source>This module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use this module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;モジュールプリミティブに基づいて構築された、高レベルで効率的なI / O多重化を可能にします。使用するOSレベルのプリミティブを正確に制御する必要がない限り、代わりにこのモジュールを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2497fcaaad8ea0358d7a8a416fbf748a8e8d4ce1" translate="yes" xml:space="preserve">
          <source>This module allows you to access the OSS (Open Sound System) audio interface. OSS is available for a wide range of open-source and commercial Unices, and is the standard audio interface for Linux and recent versions of FreeBSD.</source>
          <target state="translated">このモジュールは、OSS (Open Sound System)オーディオインターフェイスにアクセスするためのものです。OSS はオープンソースや商用の Unices で幅広く利用でき、Linux や最近の FreeBSD の標準的なオーディオインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="3f201a3a0b0cb503f8a57a3dc19445c2c4016892" translate="yes" xml:space="preserve">
          <source>This module allows you to output calendars like the Unix &lt;strong&gt;cal&lt;/strong&gt; program, and provides additional useful functions related to the calendar. By default, these calendars have Monday as the first day of the week, and Sunday as the last (the European convention). Use &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; to set the first day of the week to Sunday (6) or to any other weekday. Parameters that specify dates are given as integers. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">このモジュールを使用すると、Unix &lt;strong&gt;cal&lt;/strong&gt;プログラムのようなカレンダーを出力でき、カレンダーに関連する追加の便利な機能を提供します。デフォルトでは、これらのカレンダーは月曜日を週の最初の日とし、日曜日を最後の日とします（ヨーロッパの規則）。&lt;a href=&quot;#calendar.setfirstweekday&quot;&gt; &lt;code&gt;setfirstweekday()&lt;/code&gt; &lt;/a&gt;を使用して、週の最初の日を日曜日（6）またはその他の平日に設定します。日付を指定するパラメーターは整数として指定されます。関連する機能については、&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="debb877f25fbd139c21cf06dbc17a54349a6899d" translate="yes" xml:space="preserve">
          <source>This module also defines all the constants needed to work with the functions provided here; these have the same name as their counterparts in C. Please refer to your system documentation for more information on using these terminal control interfaces.</source>
          <target state="translated">このモジュールはまた、ここで提供されている関数で動作するために必要なすべての定数を定義しています。</target>
        </trans-unit>
        <trans-unit id="5343f12ad5e1686e3ae53b2b2900840cf269d422" translate="yes" xml:space="preserve">
          <source>This module also defines the following constant:</source>
          <target state="translated">このモジュールでは、以下の定数も定義しています。</target>
        </trans-unit>
        <trans-unit id="b40ece587755cd89be338849c6922046774089a9" translate="yes" xml:space="preserve">
          <source>This module also provides one additional data object:</source>
          <target state="translated">このモジュールは、1つの追加データオブジェクトも提供します。</target>
        </trans-unit>
        <trans-unit id="23b455a7f66c43c727ec2c3899d0f41037a1b5dd" translate="yes" xml:space="preserve">
          <source>This module also provides the following helper function:</source>
          <target state="translated">このモジュールは、以下のヘルパー関数も提供しています。</target>
        </trans-unit>
        <trans-unit id="453b9e5ac31c8143201074542d26931d4cb7ac6a" translate="yes" xml:space="preserve">
          <source>This module also provides the following legacy functions from the 2.x &lt;code&gt;commands&lt;/code&gt; module. These operations implicitly invoke the system shell and none of the guarantees described above regarding security and exception handling consistency are valid for these functions.</source>
          <target state="translated">このモジュールは、2.x &lt;code&gt;commands&lt;/code&gt; モジュールの次のレガシー機能も提供します。これらの操作は暗黙的にシステムシェルを呼び出し、セキュリティと例外処理の一貫性に関して上記で説明した保証は、これらの関数に対して有効ではありません。</target>
        </trans-unit>
        <trans-unit id="67b52231769e79c56d292bad90dd4f9002d23b03" translate="yes" xml:space="preserve">
          <source>This module builds on the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; infrastructure, simplifying asynchronous clients and servers and making it easier to handle protocols whose elements are terminated by arbitrary strings, or are of variable length. &lt;a href=&quot;#module-asynchat&quot;&gt;&lt;code&gt;asynchat&lt;/code&gt;&lt;/a&gt; defines the abstract class &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; that you subclass, providing implementations of the &lt;code&gt;collect_incoming_data()&lt;/code&gt; and &lt;code&gt;found_terminator()&lt;/code&gt; methods. It uses the same asynchronous loop as &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt;, and the two types of channel, &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;, can freely be mixed in the channel map. Typically an &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; server channel generates new &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; channel objects as it receives incoming connection requests.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;インフラストラクチャに基づいて構築されており、非同期のクライアントとサーバーを簡略化し、要素が任意の文字列で終了するか、可変長であるプロトコルの処理を容易にします。&lt;a href=&quot;#module-asynchat&quot;&gt; &lt;code&gt;asynchat&lt;/code&gt; &lt;/a&gt;は、サブクラス化する抽象クラス&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;を定義し、 &lt;code&gt;collect_incoming_data()&lt;/code&gt; および &lt;code&gt;found_terminator()&lt;/code&gt; メソッドの実装を提供します。&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;と同じ非同期ループを使用し、2種類のチャネル&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; を&lt;/a&gt;チャネルマップで自由に混在させることができます。通常、&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;サーバーチャネルは新しい&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt;チャネルオブジェクトが着信接続要求を受信するとき。</target>
        </trans-unit>
        <trans-unit id="98f43e7da0a9f23b86507c38867da0294f836744" translate="yes" xml:space="preserve">
          <source>This module can be used with the &amp;ldquo;classic&amp;rdquo; ndbm interface or the GNU GDBM compatibility interface. On Unix, the &lt;strong&gt;configure&lt;/strong&gt; script will attempt to locate the appropriate header file to simplify building this module.</source>
          <target state="translated">このモジュールは、「クラシック」なndbmインターフェースまたはGNU GDBM互換インターフェースで使用できます。Unixでは、&lt;strong&gt;configure&lt;/strong&gt;スクリプトは適切なヘッダーファイルを見つけて、このモジュールの構築を簡略化します。</target>
        </trans-unit>
        <trans-unit id="d879b78f431d58b588b47163f45ee538b41d3e4e" translate="yes" xml:space="preserve">
          <source>This module can work as a script (using &lt;strong&gt;python -m compileall&lt;/strong&gt;) to compile Python sources.</source>
          <target state="translated">このモジュールは、Pythonソースをコンパイルするためのスクリプト（&lt;strong&gt;python -m compileall&lt;/strong&gt;を使用）として機能できます。</target>
        </trans-unit>
        <trans-unit id="f19e9fa6736be7e193744521cb04edacae210533" translate="yes" xml:space="preserve">
          <source>This module constructs higher-level threading interfaces on top of the lower level &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. See also the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、低レベルの&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールの上に高レベルのスレッドインターフェイスを構築します。&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="861c68e15668a5b39d713349ea83ffbbd4181c50" translate="yes" xml:space="preserve">
          <source>This module contains definitions for the UIText and ActionText tables, for the standard installer actions.</source>
          <target state="translated">このモジュールには、標準インストーラのアクションの UIText と ActionText テーブルの定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="3077916ec25e86b9e1f4841b136b1ecadd40c210" translate="yes" xml:space="preserve">
          <source>This module contains functions that can read and write Python values in a binary format. The format is specific to Python, but independent of machine architecture issues (e.g., you can write a Python value to a file on a PC, transport the file to a Sun, and read it back there). Details of the format are undocumented on purpose; it may change between Python versions (although it rarely does). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">このモジュールには、バイナリ形式でPython値を読み書きできる関数が含まれています。この形式はPythonに固有ですが、マシンアーキテクチャの問題とは無関係です（たとえば、PC上のファイルにPython値を書き込み、そのファイルをSunに転送して、そこで読み取ることができます）。フォーマットの詳細は意図的に文書化されていません。 Pythonのバージョン間で変更される可能性があります（めったに変更されません）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5039b7f4c8b295a097141026f69aa1f45aeae2f4" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">このモジュールには、Pythonトレースバックを明示的に、障害時、タイムアウト後、またはユーザー信号でダンプする関数が含まれています。&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt;を呼び出して、 &lt;code&gt;SIGSEGV&lt;/code&gt; 、 &lt;code&gt;SIGFPE&lt;/code&gt; 、 &lt;code&gt;SIGABRT&lt;/code&gt; 、 &lt;code&gt;SIGBUS&lt;/code&gt; 、および &lt;code&gt;SIGILL&lt;/code&gt; 信号の障害ハンドラーをインストールします。&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt;環境変数を設定するか、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; コマンドラインオプションを使用して、起動時にこれらを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="b52a978975d71fcca58a0f40ff04d9cf68c4036e" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">このモジュールには、Pythonトレースバックを明示的に、障害時に、タイムアウト後に、またはユーザーシグナルでダンプする関数が含まれています。&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt;を呼び出して、 &lt;code&gt;SIGSEGV&lt;/code&gt; 、 &lt;code&gt;SIGFPE&lt;/code&gt; 、 &lt;code&gt;SIGABRT&lt;/code&gt; 、 &lt;code&gt;SIGBUS&lt;/code&gt; 、および &lt;code&gt;SIGILL&lt;/code&gt; シグナルのフォールトハンドラーをインストールします。&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt;環境変数を設定するか、&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; コマンドラインオプションを使用して、起動時にそれらを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="cc8882528ecb71642481be204e6186fd1051ed37" translate="yes" xml:space="preserve">
          <source>This module contains table contents for the standard sequence tables: &lt;em&gt;AdminExecuteSequence&lt;/em&gt;, &lt;em&gt;AdminUISequence&lt;/em&gt;, &lt;em&gt;AdvtExecuteSequence&lt;/em&gt;, &lt;em&gt;InstallExecuteSequence&lt;/em&gt;, and &lt;em&gt;InstallUISequence&lt;/em&gt;.</source>
          <target state="translated">このモジュールには、標準シーケンステーブルのテーブルコンテンツが含まれています：&lt;em&gt;AdminExecuteSequence&lt;/em&gt;、&lt;em&gt;AdminUISequence&lt;/em&gt;、&lt;em&gt;AdvtExecuteSequence&lt;/em&gt;、&lt;em&gt;InstallExecuteSequence&lt;/em&gt;、および&lt;em&gt;InstallUISequence&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9f903356d17a57da3cbd225b09902afef1cc9e4" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;検索およびロードモジュールに役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="07eb4a6cd418f5286cb52fb731527861274ba7e6" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">このモジュールには、モジュールの検索とロードの&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="42ecc856b406c93d72b3abcd42ac7453b164bdd7" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーターの&lt;/a&gt;構築に役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="beb3ad2cbe52b6da763c19513f29af1ada22f232" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;インポーターの&lt;/a&gt;構築に役立つさまざまなオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="04c30f14c660f82a69840aef1a06450c1039fd25" translate="yes" xml:space="preserve">
          <source>This module contains various constants relating to the intimate details of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, some lengthy comments about the implementation, and a few useful functions for analyzing pickled data. The contents of this module are useful for Python core developers who are working on the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;; ordinary users of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module probably won&amp;rsquo;t find the &lt;a href=&quot;#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; module relevant.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの詳細に関連するさまざまな定数、実装に関する長いコメント、およびpickle化されたデータを分析するためのいくつかの便利な関数が含まれています。このモジュールの内容は、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; に&lt;/a&gt;取り組んでいるPythonコア開発者に役立ちます。&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの普通のユーザーは、おそらく&lt;a href=&quot;#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt;モジュールが関連していることに気付かないでしょう。</target>
        </trans-unit>
        <trans-unit id="f4495708855b5105fbffdba645bc8b7765dc4e32" translate="yes" xml:space="preserve">
          <source>This module creates temporary files and directories. It works on all supported platforms. &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt;&lt;code&gt;NamedTemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt;&lt;code&gt;TemporaryDirectory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt;&lt;code&gt;SpooledTemporaryFile&lt;/code&gt;&lt;/a&gt; are high-level interfaces which provide automatic cleanup and can be used as context managers. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; are lower-level functions which require manual cleanup.</source>
          <target state="translated">このモジュールは一時ファイルとディレクトリを作成します。サポートされているすべてのプラットフォームで動作します。&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt; &lt;code&gt;NamedTemporaryFile&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt; &lt;code&gt;TemporaryDirectory&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt; &lt;code&gt;SpooledTemporaryFile&lt;/code&gt; &lt;/a&gt;は、自動クリーンアップを提供する高レベルのインターフェースであり、コンテキストマネージャとして使用できます。&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt;は、手動でクリーンアップする必要がある低レベルの関数です。</target>
        </trans-unit>
        <trans-unit id="1fb63ae15e15adc2fac701d486eb6ae65fd3a9db" translate="yes" xml:space="preserve">
          <source>This module defines a class &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; which serves as the basis for parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML.</source>
          <target state="translated">このモジュールは、HTML（HyperText Mark-up Language）およびXHTMLでフォーマットされたテキストファイルを解析するための基礎として機能するクラス&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="c5b51fe9b44470a4a81daa6484a674a50d74f512" translate="yes" xml:space="preserve">
          <source>This module defines a class, &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, which encapsulates a connection to a POP3 server and implements the protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class supports both the minimal and optional command sets from &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class also supports the &lt;code&gt;STLS&lt;/code&gt; command introduced in &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; to enable encrypted communication on an already established connection.</source>
          <target state="translated">このモジュールは、POP3サーバーへの接続をカプセル化し、&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるプロトコルを実装するクラス&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;を定義し&lt;strong&gt;ます&lt;/strong&gt;。&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;クラスは、最小限から、オプションのコマンドセットの両方をサポート&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;。&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;クラスもサポートしてい &lt;code&gt;STLS&lt;/code&gt; の中に導入されたコマンド&lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt;、既に確立された接続上の暗号化通信を可能にするために。</target>
        </trans-unit>
        <trans-unit id="1618ac7e65a20cb21e0876627584ef0952f4e004" translate="yes" xml:space="preserve">
          <source>This module defines a number of classes, which are detailed in the sections below.</source>
          <target state="translated">このモジュールはいくつかのクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="11a2a01ddba0f2fb875e220a02c816a36dd3839e" translate="yes" xml:space="preserve">
          <source>This module defines a number of utilities for use by CGI scripts written in Python.</source>
          <target state="translated">このモジュールは、Python で書かれた CGI スクリプトで使用するための多くのユーティリティを定義します。</target>
        </trans-unit>
        <trans-unit id="48800cb2b61c0cb68840665bc7065117a5b5c588" translate="yes" xml:space="preserve">
          <source>This module defines a standard interface to break Uniform Resource Locator (URL) strings up in components (addressing scheme, network location, path etc.), to combine the components back into a URL string, and to convert a &amp;ldquo;relative URL&amp;rdquo; to an absolute URL given a &amp;ldquo;base URL.&amp;rdquo;</source>
          <target state="translated">このモジュールは、コンポーネント（アドレス指定スキーム、ネットワークの場所、パスなど）でUniform Resource Locator（URL）文字列を分割し、コンポーネントをURL文字列に結合し、「相対URL」を「ベースURL」が指定された絶対URL</target>
        </trans-unit>
        <trans-unit id="cc5d1611a8f8acccc4d6cf1756c216896a066e42" translate="yes" xml:space="preserve">
          <source>This module defines an exception:</source>
          <target state="translated">このモジュールは例外を定義します。</target>
        </trans-unit>
        <trans-unit id="872203bde3e3135352e338fe96a0f66f7787e1a6" translate="yes" xml:space="preserve">
          <source>This module defines an object type which can compactly represent an array of basic values: characters, integers, floating point numbers. Arrays are sequence types and behave very much like lists, except that the type of objects stored in them is constrained. The type is specified at object creation time by using a &lt;em&gt;type code&lt;/em&gt;, which is a single character. The following type codes are defined:</source>
          <target state="translated">このモジュールは、基本的な値の配列（文字、整数、浮動小数点数）をコンパクトに表すことができるオブジェクトタイプを定義します。配列はシーケンス型であり、配列に格納されているオブジェクトのタイプが制限されていることを除いて、リストとほとんど同じように動作します。タイプは、オブジェクト作成時に&lt;em&gt;タイプコード&lt;/em&gt;を使用して指定されます。これは単一の文字です。次のタイプコードが定義されています。</target>
        </trans-unit>
        <trans-unit id="b6850df64d4f421a1439f98e4bd7078f7c6cd6c4" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、標準のPythonコーデック（エンコーダーとデコーダー）の基本クラスを定義し、コーデックとエラー処理ルックアッププロセスを管理する内部Pythonコーデックレジストリへのアクセスを提供します。ほとんどの標準コーデックは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディングで&lt;/a&gt;、テキストをバイトにエンコードしますが、テキストをテキストに、バイトをバイトにエンコードするコーデックも用意されています。カスタムコーデックは、任意のタイプ間でエンコードおよびデコードできますが、一部のモジュール機能は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディング&lt;/a&gt;、または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;エンコードするコーデックでの使用に限定されています。</target>
        </trans-unit>
        <trans-unit id="ab7ad5c272bc9df1e33e06d24d65ae2e29bd9139" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、標準のPythonコーデック（エンコーダーとデコーダー）の基本クラスを定義し、コーデックとエラー処理のルックアッププロセスを管理する内部Pythonコーデックレジストリへのアクセスを提供します。ほとんどの標準コーデックは、テキストをバイトにエンコードする&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディングですが&lt;/a&gt;、テキストをテキストに、バイトをバイトにエンコードするコーデックも提供されています。カスタムコーデックは、任意のタイプ間でエンコードおよびデコードできますが、一部のモジュール機能は、特に&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;テキストエンコーディング&lt;/a&gt;、または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;エンコードするコーデックでの使用に制限されています。</target>
        </trans-unit>
        <trans-unit id="78eff0b82345640196ebee3d8065f4a5a2881ddd" translate="yes" xml:space="preserve">
          <source>This module defines classes for implementing HTTP servers (Web servers).</source>
          <target state="translated">HTTPサーバ(Webサーバ)を実装するためのクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="de3d04d963619a18276579b0870d1fcddb37dadd" translate="yes" xml:space="preserve">
          <source>This module defines classes which implement the client side of the HTTP and HTTPS protocols. It is normally not used directly &amp;mdash; the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; uses it to handle URLs that use HTTP and HTTPS.</source>
          <target state="translated">このモジュールは、HTTPおよびHTTPSプロトコルのクライアント側を実装するクラスを定義します。通常は直接使用されません&amp;mdash;モジュール&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;は、HTTPおよびHTTPSを使用するURLを処理するために使用します。</target>
        </trans-unit>
        <trans-unit id="e8cdc9da4c49a5a72d18f9f680dbe51d429c4110" translate="yes" xml:space="preserve">
          <source>This module defines four dictionaries, &lt;a href=&quot;#html.entities.html5&quot;&gt;&lt;code&gt;html5&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.name2codepoint&quot;&gt;&lt;code&gt;name2codepoint&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.codepoint2name&quot;&gt;&lt;code&gt;codepoint2name&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#html.entities.entitydefs&quot;&gt;&lt;code&gt;entitydefs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;#html.entities.html5&quot;&gt; &lt;code&gt;html5&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#html.entities.name2codepoint&quot;&gt; &lt;code&gt;name2codepoint&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#html.entities.codepoint2name&quot;&gt; &lt;code&gt;codepoint2name&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#html.entities.entitydefs&quot;&gt; &lt;code&gt;entitydefs&lt;/code&gt; の&lt;/a&gt; 4つの辞書を定義します。</target>
        </trans-unit>
        <trans-unit id="4b3c1b33a5dc7198cf9a5077bb81a5d371ff01f8" translate="yes" xml:space="preserve">
          <source>This module defines four enumeration classes that can be used to define unique sets of names and values: &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;. It also defines one decorator, &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt;, and one helper, &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、名前と値の一意のセットを定義するために使用できる4つの列挙型クラス、&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; を定義し&lt;/a&gt;ます。また、1つのデコレータ&lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt;と1つのヘルパー&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;も定義しています。</target>
        </trans-unit>
        <trans-unit id="a43956eb1cff944bb000135e22a68e274523884e" translate="yes" xml:space="preserve">
          <source>This module defines functions and classes which implement a flexible event logging system for applications and libraries.</source>
          <target state="translated">このモジュールは、アプリケーションやライブラリのための柔軟なイベントロギングシステムを実装する関数とクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="9a838d0810c484aa7da738cbc9408bd383a315fc" translate="yes" xml:space="preserve">
          <source>This module defines several types that are subclasses of pre-existing standard library classes which also extend &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; to support type variables inside &lt;code&gt;[]&lt;/code&gt;. These types became redundant in Python 3.9 when the corresponding pre-existing classes were enhanced to support &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;[]&lt;/code&gt; 内の型変数をサポートするように&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;を拡張する、既存の標準ライブラリクラスのサブクラスであるいくつかの型を定義します。これらのタイプは、対応する既存のクラスが &lt;code&gt;[]&lt;/code&gt; をサポートするように拡張されたときに、Python3.9で冗長になりました。</target>
        </trans-unit>
        <trans-unit id="d12ae48143188d0297420fe3e3e8355fa72a4d12" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; and a few related items. The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class implements the client side of the FTP protocol. You can use this to write Python programs that perform a variety of automated FTP jobs, such as mirroring other FTP servers. It is also used by the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; to handle URLs that use FTP. For more information on FTP (File Transfer Protocol), see Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;クラスといくつかの関連アイテムを定義します。&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; の&lt;/a&gt;クラスが実装FTPプロトコルのクライアント側。これを使用して、他のFTPサーバーのミラーリングなど、さまざまな自動FTPジョブを実行するPythonプログラムを作成できます。また、モジュール&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;がFTPを使用するURLを処理するためにも使用されます。FTP（ファイル転送プロトコル）の詳細については、インターネット&lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2f424d44b755936adbe2988818177e31ae44d19" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; which implements the client side of the Network News Transfer Protocol. It can be used to implement a news reader or poster, or automated news processors. It is compatible with &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; as well as the older &lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、ネットワークニュース転送プロトコルのクライアント側を実装するクラス&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;を定義します。ニュースリーダーやポスター、自動化されたニュースプロセッサの実装に使用できます。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;および以前の&lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;と互換性があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6075209a511cab6004ad5174fb8118d5ccd054f2" translate="yes" xml:space="preserve">
          <source>This module defines the following constants and functions:</source>
          <target state="translated">このモジュールでは、以下の定数と関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="254e7f18807b69bc33340649efc7baade8104fad" translate="yes" xml:space="preserve">
          <source>This module defines the following exceptions:</source>
          <target state="translated">このモジュールは、以下の例外を定義します。</target>
        </trans-unit>
        <trans-unit id="d27a1500cefa039de958d9245d5b0b141f00314e" translate="yes" xml:space="preserve">
          <source>This module defines the following functions:</source>
          <target state="translated">このモジュールでは、以下の機能を定義しています。</target>
        </trans-unit>
        <trans-unit id="cbab75d4cc8fb1a71ebe6ad326eb328016713c4e" translate="yes" xml:space="preserve">
          <source>This module defines three classes, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt;&lt;code&gt;IMAP4_SSL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt;&lt;code&gt;IMAP4_stream&lt;/code&gt;&lt;/a&gt;, which encapsulate a connection to an IMAP4 server and implement a large subset of the IMAP4rev1 client protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt;. It is backward compatible with IMAP4 (&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;) servers, but note that the &lt;code&gt;STATUS&lt;/code&gt; command is not supported in IMAP4.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt; &lt;code&gt;IMAP4_SSL&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt; &lt;code&gt;IMAP4_stream&lt;/code&gt; の&lt;/a&gt; 3つのクラスを定義します。これらは、IMAP4サーバーへの接続をカプセル化し、&lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるIMAP4rev1クライアントプロトコルの大きなサブセットを実装し&lt;strong&gt;ます&lt;/strong&gt;。 IMAP4（&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;）サーバーとの下位互換性がありますが、 &lt;code&gt;STATUS&lt;/code&gt; コマンドはIMAP4ではサポートされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0f29ba324535ab62c8f58447db607b753c98bae5" translate="yes" xml:space="preserve">
          <source>This module defines two classes, &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;, for accessing and manipulating on-disk mailboxes and the messages they contain. &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; offers a dictionary-like mapping from keys to messages. &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; extends the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class with format-specific state and behavior. Supported mailbox formats are Maildir, mbox, MH, Babyl, and MMDF.</source>
          <target state="translated">このモジュールは、ディスク上のメールボックスとそこに含まれるメッセージにアクセスして操作するために、&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; の&lt;/a&gt; 2つのクラスを定義します。&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;は、キーからメッセージへの辞書のようなマッピングを提供します。&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラスを拡張し、フォーマット固有の状態と動作を追加します。サポートされるメールボックス形式は、Maildir、mbox、MH、Babyl、およびMMDFです。</target>
        </trans-unit>
        <trans-unit id="d8a489c3d0c7610957d387ee3a2556662944d293" translate="yes" xml:space="preserve">
          <source>This module defines utilities to manipulate HTML.</source>
          <target state="translated">このモジュールは、HTMLを操作するためのユーティリティを定義しています。</target>
        </trans-unit>
        <trans-unit id="dfe22c236ca9d8a5b76832ead4539edc455e0a34" translate="yes" xml:space="preserve">
          <source>This module defines utility functions to assist in dynamic creation of new types.</source>
          <target state="translated">このモジュールは、新しい型の動的な作成を支援するユーティリティ関数を定義します。</target>
        </trans-unit>
        <trans-unit id="e942318520019f6f5189c26f40c04ee87a02680c" translate="yes" xml:space="preserve">
          <source>This module does not comply with the RFC in a strict fashion, implementing some extensions that are valid JavaScript but not valid JSON. In particular:</source>
          <target state="translated">このモジュールは厳密にはRFCに準拠しておらず、有効なJavaScriptではあるが有効なJSONではないいくつかの拡張機能を実装しています。特に</target>
        </trans-unit>
        <trans-unit id="49e85895e7dc7efb294c76b52c1626af5e533a39" translate="yes" xml:space="preserve">
          <source>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types. It does &amp;ldquo;copy&amp;rdquo; functions and classes (shallow and deeply), by returning the original object unchanged; this is compatible with the way these are treated by the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、モジュール、メソッド、スタックトレース、スタックフレーム、ファイル、ソケット、ウィンドウ、配列、または同様のタイプなどのタイプをコピーしません。元のオブジェクトを変更せずに返すことで、関数とクラスを（浅く、深く）コピーします。これは、&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールがこれらを処理する方法と互換性があります。</target>
        </trans-unit>
        <trans-unit id="17d030f61ef73253b8878c6ac00f0db6edfe90d3" translate="yes" xml:space="preserve">
          <source>This module does not currently handle multi-disk ZIP files. It can handle ZIP files that use the ZIP64 extensions (that is ZIP files that are more than 4 GiB in size). It supports decryption of encrypted files in ZIP archives, but it currently cannot create an encrypted file. Decryption is extremely slow as it is implemented in native Python rather than C.</source>
          <target state="translated">このモジュールは現在のところ、複数ディスクの ZIP ファイルを扱っていません。ZIP64 拡張子を使用する ZIP ファイル (つまり、サイズが 4 GiB 以上の ZIP ファイル)を扱うことができます。ZIP アーカイブ内の暗号化されたファイルの復号化をサポートしていますが、現在のところ暗号化されたファイルを作成することはできません。復号化は C ではなくネイティブの Python で実装されているため、非常に遅いです。</target>
        </trans-unit>
        <trans-unit id="519d1b02a39806bc189ae28fe467295ef2dfa0a9" translate="yes" xml:space="preserve">
          <source>This module does not impose any such limits beyond those of the relevant Python datatypes themselves or the Python interpreter itself.</source>
          <target state="translated">このモジュールは、関連する Python データ型自体や Python インタプリタ自体の制限を超えて、そのような制限を課すことはありません。</target>
        </trans-unit>
        <trans-unit id="4f7b84f93b9e849cdae302062aae810414c34807" translate="yes" xml:space="preserve">
          <source>This module does not support playing from a memory image asynchronously, so a combination of this flag and &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールはメモリイメージからの非同期再生をサポートしていないため、このフラグと&lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; を組み合わせる&lt;/a&gt;と&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9b343817bb9b838e5415a508a84ece8dffe81d92" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in binhex4 format, a format allowing representation of Macintosh files in ASCII. Only the data fork is handled.</source>
          <target state="translated">このモジュールは、MacintoshのファイルをASCIIで表現するためのフォーマットであるbinhex4形式のファイルをエンコードし、デコードします。データフォークのみが処理されます。</target>
        </trans-unit>
        <trans-unit id="dd03d811a7b08d214ea866929673d3a7471cc228" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in uuencode format, allowing arbitrary binary data to be transferred over ASCII-only connections. Wherever a file argument is expected, the methods accept a file-like object. For backwards compatibility, a string containing a pathname is also accepted, and the corresponding file will be opened for reading and writing; the pathname &lt;code&gt;'-'&lt;/code&gt; is understood to mean the standard input or output. However, this interface is deprecated; it&amp;rsquo;s better for the caller to open the file itself, and be sure that, when required, the mode is &lt;code&gt;'rb'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; on Windows.</source>
          <target state="translated">このモジュールは、ファイルをuuencode形式でエンコードおよびデコードし、任意のバイナリデータをASCIIのみの接続を介して転送できるようにします。ファイル引数が必要な場合は常に、メソッドはファイルのようなオブジェクトを受け入れます。下位互換性のために、パス名を含む文字列も受け入れられ、対応するファイルが読み取りおよび書き込み用に開かれます。パス名 &lt;code&gt;'-'&lt;/code&gt; は、標準入力または標準出力を意味すると理解されています。ただし、このインターフェースは非推奨です。呼び出し元がファイル自体を開くことをお &lt;code&gt;'wb'&lt;/code&gt; します。必要に応じて、Windowsではモードが &lt;code&gt;'rb'&lt;/code&gt; または「wb」であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7f81a6cf8af5f605b58b6ac46efd33c502d783a0" translate="yes" xml:space="preserve">
          <source>This module exists for backwards compatibility only. For new code we recommend using &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、下位互換性のためだけに存在しています。新しいコードについては、&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; の&lt;/a&gt;使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="0db06efc0dbc72f83920d799f65e3722ebe14985" translate="yes" xml:space="preserve">
          <source>This module helps scripts to parse the command line arguments in &lt;code&gt;sys.argv&lt;/code&gt;. It supports the same conventions as the Unix &lt;code&gt;getopt()&lt;/code&gt; function (including the special meanings of arguments of the form &amp;lsquo;&lt;code&gt;-&lt;/code&gt;&amp;lsquo; and &amp;lsquo;&lt;code&gt;--&lt;/code&gt;&amp;lsquo;). Long options similar to those supported by GNU software may be used as well via an optional third argument.</source>
          <target state="translated">このモジュールは、スクリプトが &lt;code&gt;sys.argv&lt;/code&gt; のコマンドライン引数を解析するのに役立ちます。これは、Unixの &lt;code&gt;getopt()&lt;/code&gt; 関数と同じ規則をサポートしています（ ' &lt;code&gt;-&lt;/code&gt; 'および ' &lt;code&gt;--&lt;/code&gt; ' 形式の引数の特別な意味を含みます）。GNUソフトウェアでサポートされているものと同様の長いオプションも、オプションの3番目の引数を介して使用できます。</target>
        </trans-unit>
        <trans-unit id="121aa50a9e3129147a9accceb01472d79e19ffe1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt; (Internationalized Domain Names in Applications) and &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt; (Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)). It builds upon the &lt;code&gt;punycode&lt;/code&gt; encoding and &lt;a href=&quot;stringprep#module-stringprep&quot;&gt;&lt;code&gt;stringprep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt;（アプリケーションの国際化ドメイン名）および&lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt;（Nameprep：国際化ドメイン名（IDN）のStringprepプロファイル）を実装し&lt;strong&gt;ます&lt;/strong&gt;。それは &lt;code&gt;punycode&lt;/code&gt; エンコーディングと&lt;a href=&quot;stringprep#module-stringprep&quot;&gt; &lt;code&gt;stringprep&lt;/code&gt; に基づいてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8b93c605058d9ac4610c0f66fcfaf0e7cc0668f2" translate="yes" xml:space="preserve">
          <source>This module implements a common interface to many different secure hash and message digest algorithms. Included are the FIPS secure hash algorithms SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as RSA&amp;rsquo;s MD5 algorithm (defined in Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321&lt;/strong&gt;&lt;/a&gt;). The terms &amp;ldquo;secure hash&amp;rdquo; and &amp;ldquo;message digest&amp;rdquo; are interchangeable. Older algorithms were called message digests. The modern term is secure hash.</source>
          <target state="translated">このモジュールは、多くの異なる安全なハッシュおよびメッセージダイジェストアルゴリズムへの共通インターフェースを実装します。FIPSセキュアハッシュアルゴリズムSHA1、SHA224、SHA256、SHA384、SHA512（FIPS 180-2で定義）、およびRSAのMD5アルゴリズム（インターネット&lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321で&lt;/strong&gt;&lt;/a&gt;定義）が含まれます。「セキュアハッシュ」と「メッセージダイジェスト」は同じ意味で使用されます。古いアルゴリズムはメッセージダイジェストと呼ばれていました。現代の用語は安全なハッシュです。</target>
        </trans-unit>
        <trans-unit id="9dc190db82f8040568b6d71e5d44f33a813a06d1" translate="yes" xml:space="preserve">
          <source>This module implements a helper class and functions to quickly write a loop over standard input or a list of files. If you just want to read or write one file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、ヘルパークラスと関数を実装して、標準入力またはファイルのリストに対するループをすばやく記述します。1つのファイルを読み書きするだけの場合は、&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ddbb83da8fffc29ce3e4bfee653fa7dd031640c8" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">このモジュールは、APL、Haskell、およびSMLの構成要素から着想を得た多くの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレーター&lt;/a&gt;ビルディングブロックを実装しています。それぞれがPythonに適した形式にリキャストされています。</target>
        </trans-unit>
        <trans-unit id="cd6319d8a7feaaf5d7a525e6f80a3e1d715a2b85" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">このモジュールは、APL、Haskell、およびSMLの構成に触発された多数の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;イテレーター&lt;/a&gt;ビルディングブロックを実装します。それぞれがPythonに適した形式に再キャストされています。</target>
        </trans-unit>
        <trans-unit id="3cfc63fd063d2db5a956c67a2c60b1984b185b20" translate="yes" xml:space="preserve">
          <source>This module implements a simple HTTP server (based on &lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt;) that serves WSGI applications. Each server instance serves a single WSGI application on a given host and port. If you want to serve multiple applications on a single host and port, you should create a WSGI application that parses &lt;code&gt;PATH_INFO&lt;/code&gt; to select which application to invoke for each request. (E.g., using the &lt;code&gt;shift_path_info()&lt;/code&gt; function from &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">このモジュールは、WSGIアプリケーションを提供する単純なHTTPサーバー（&lt;a href=&quot;http.server#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; に&lt;/a&gt;基づく）を実装します。各サーバーインスタンスは、特定のホストとポートで単一のWSGIアプリケーションを提供します。単一のホストとポートで複数のアプリケーションを提供する場合は、 &lt;code&gt;PATH_INFO&lt;/code&gt; を解析して各要求に対して呼び出すアプリケーションを選択するWSGIアプリケーションを作成する必要があります。 （例えば、&lt;a href=&quot;#module-wsgiref.util&quot;&gt; &lt;code&gt;wsgiref.util&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;shift_path_info()&lt;/code&gt; 関数を使用します。）</target>
        </trans-unit>
        <trans-unit id="5fd7dba47e22473c1f2a4635a0a3174c3d6c275b" translate="yes" xml:space="preserve">
          <source>This module implements a variant of the UTF-8 codec. On encoding, a UTF-8 encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful encoder this is only done once (on the first write to the byte stream). On decoding, an optional UTF-8 encoded BOM at the start of the data will be skipped.</source>
          <target state="translated">こ のモジ ュ ールは、 UTF-8 コーデ ッ ク のバ リ ア ン ト を実装 し てい ます。エンコード時には、UTF-8 エンコードされた BOM が UTF-8 エンコードされたバイトの前に付加されます。ステートフルエン コ ーダの場合、 こ れは 1 回のみ行われます (バ イ ト ス ト リ ームへの最初の書 き 込み時)。デ コ ーデ ィ ン グ時には、 デー タ の先頭のオプシ ョ ナルな UTF-8 エン コ ー ド BOM はスキップされます。</target>
        </trans-unit>
        <trans-unit id="1d4a5b8472e44e8855f5d68c663b14c77b8bcf34" translate="yes" xml:space="preserve">
          <source>This module implements an interface to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine, which is a one-way hash function based upon a modified DES algorithm; see the Unix man page for further details. Possible uses include storing hashed passwords so you can check passwords without storing the actual password, or attempting to crack Unix passwords with a dictionary.</source>
          <target state="translated">このモジュールは、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;ルーチンへのインターフェースを実装しています。これは、変更されたDESアルゴリズムに基づく一方向ハッシュ関数です。詳細については、Unixのマニュアルページを参照してください。可能な用途としては、ハッシュされたパスワードを保存して、実際のパスワードを保存せずにパスワードをチェックしたり、Unixパスワードを辞書で解読したりすることが挙げられます。</target>
        </trans-unit>
        <trans-unit id="3a2adf6a9a2bd23305d2c275bca19cae38c30374" translate="yes" xml:space="preserve">
          <source>This module implements pseudo-random number generators for various distributions.</source>
          <target state="translated">このモジュールは、様々な分布のための擬似乱数生成器を実装しています。</target>
        </trans-unit>
        <trans-unit id="b0183d20598d8183a93f9529b78d2aebdeda8d60" translate="yes" xml:space="preserve">
          <source>This module implements some useful functions on pathnames. To read or write files see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, and for accessing the filesystem see the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module. The path parameters can be passed as either strings, or bytes. Applications are encouraged to represent file names as (Unicode) character strings. Unfortunately, some file names may not be representable as strings on Unix, so applications that need to support arbitrary file names on Unix should use bytes objects to represent path names. Vice versa, using bytes objects cannot represent all file names on Windows (in the standard &lt;code&gt;mbcs&lt;/code&gt; encoding), hence Windows applications should use string objects to access all files.</source>
          <target state="translated">このモジュールは、パス名にいくつかの便利な関数を実装しています。ファイルの読み取りまたは書き込みについては&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;参照してください。ファイルシステムへのアクセスについては&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。パスパラメータは、文字列またはバイトとして渡すことができます。アプリケーションでは、ファイル名を（Unicode）文字列として表すことをお勧めします。残念ながら、一部のファイル名はUnixでは文字列として表現できない場合があるため、UNIXで任意のファイル名をサポートする必要があるアプリケーションは、バイトオブジェクトを使用してパス名を表す必要があります。逆に、バイトオブジェクトを使用すると、Windowsのすべてのファイル名を（標準の &lt;code&gt;mbcs&lt;/code&gt; エンコーディングで）表すことができないため、Windowsアプリケーションは文字列オブジェクトを使用してすべてのファイルにアクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="a2192c961f0f178501bb93fed052cb49b0b99007" translate="yes" xml:space="preserve">
          <source>This module implements specialized container datatypes providing alternatives to Python&amp;rsquo;s general purpose built-in containers, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、Pythonの汎用ビルトインコンテナー&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; の&lt;/a&gt;代替を提供する、特殊なコンテナーデータ型を実装します。</target>
        </trans-unit>
        <trans-unit id="4736824d97338b1fd5868abcd3d3b1ebff178aa8" translate="yes" xml:space="preserve">
          <source>This module implements the ANSI codepage (CP_ACP).</source>
          <target state="translated">このモジュールは、ANSI コードページ (CP_ACP)を実装しています。</target>
        </trans-unit>
        <trans-unit id="e68de6d1ff1f2163e087582161fc807dc52641fc" translate="yes" xml:space="preserve">
          <source>This module implements the HMAC algorithm as described by &lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104で&lt;/strong&gt;&lt;/a&gt;説明され&lt;strong&gt;て&lt;/strong&gt;いるHMACアルゴリズムを実装し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e2d84704e96b7291c63c1ac3efbb5f6664c424ce" translate="yes" xml:space="preserve">
          <source>This module is based on the &lt;code&gt;paste.lint&lt;/code&gt; module from Ian Bicking&amp;rsquo;s &amp;ldquo;Python Paste&amp;rdquo; library.</source>
          <target state="translated">このモジュールは、Ian Bickingの「Python Paste」ライブラリの &lt;code&gt;paste.lint&lt;/code&gt; モジュールに基づいています。</target>
        </trans-unit>
        <trans-unit id="f013858815011cf856f770000ca4c7df309a157c" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instaniation of that class.</source>
          <target state="translated">このモジュールはPython 3で非推奨になりました&lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;クラスは、そのクラスのインスタンス化中に渡された&lt;em&gt;_subtype&lt;/em&gt;値と&lt;em&gt;_charset&lt;/em&gt;値を使用してコンテンツタイプとCTEヘッダーを設定するため、ここで提供される関数は明示的に呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="1597919b5189f5941c86c782d5458623193d7aff" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instantiation of that class.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;で非推奨になりました。MIMETextクラスは、そのクラスのインスタンス化中に渡された&lt;em&gt;_subtype&lt;/em&gt;値と&lt;em&gt;_charset&lt;/em&gt;値を使用してコンテンツタイプとCTEヘッダーを設定するため、ここで提供される関数を明示的に呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="0429cbe9aa597c0b69111a1d41b8921cc161a566" translate="yes" xml:space="preserve">
          <source>This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed. For example, in a module that wants to implement an &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function that wraps the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, this module can be used directly:</source>
          <target state="translated">このモジュールは通常、ほとんどのアプリケーションによって明示的にアクセスされませんが、組み込み値と同じ名前のオブジェクトを提供するモジュールで役立ちますが、その名前の組み込みも必要です。例えば、実装したいモジュールに&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;内蔵ラップ機能&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;、このモジュールを直接使用することができます。</target>
        </trans-unit>
        <trans-unit id="2e6ab9db141dd804d00e434d702dfeb4bcde0dd7" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the current API encoding and decoding of headers is handled transparently by the dictionary-like API of the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class. In addition to uses in legacy code, this module can be useful in applications that need to completely control the character sets used when encoding headers.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。現在のAPIでは、ヘッダーのエンコードとデコードは、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスの辞書のようなAPIによって透過的に処理されます。このモジュールは、レガシーコードでの使用に加えて、ヘッダーのエンコード時に使用される文字セットを完全に制御する必要があるアプリケーションで役立ちます。</target>
        </trans-unit>
        <trans-unit id="180f900cae8d922dd98bae601f15771a481ee0ce" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API only the aliases table is used.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、エイリアステーブルのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="7cd2965c82b9a739b8830b1bfba981387bb8eef9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API the functionality is provided by the &lt;em&gt;cte&lt;/em&gt; parameter of the &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、機能は&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;cte&lt;/em&gt;パラメーターによって提供されます。</target>
        </trans-unit>
        <trans-unit id="27d84dff011c3a4e546bb4a84107261b06d95ee9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. Its functionality is partially replaced by the &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt;&lt;code&gt;contentmanager&lt;/code&gt;&lt;/a&gt; in the new API, but in certain applications these classes may still be useful, even in non-legacy code.</source>
          <target state="translated">このモジュールは、レガシー（ &lt;code&gt;Compat32&lt;/code&gt; ）電子メールAPIの一部です。新しいAPIでは、その機能の一部が&lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt; &lt;code&gt;contentmanager&lt;/code&gt; &lt;/a&gt;に置き換えられていますが、特定のアプリケーションでは、これらのクラスは、レガシー以外のコードでも引き続き役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="dfd1c33f39be668ad64a1446553d02f9a8cd6310" translate="yes" xml:space="preserve">
          <source>This module is quite similar to the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module, but uses the GNU library &lt;code&gt;gdbm&lt;/code&gt; instead to provide some additional functionality. Please note that the file formats created by &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; are incompatible.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;モジュールに非常に似ていますが、いくつかの追加機能を提供するために代わりにGNUライブラリ &lt;code&gt;gdbm&lt;/code&gt; を使用します。&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; で&lt;/a&gt;作成されたファイル形式には互換性がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7b216268bb69c1fdf01b3213c4d03d0dea781f3b" translate="yes" xml:space="preserve">
          <source>This module leverages Python&amp;rsquo;s import system to provide access to &lt;em&gt;resources&lt;/em&gt; within &lt;em&gt;packages&lt;/em&gt;. If you can import a package, you can access resources within that package. Resources can be opened or read, in either binary or text mode.</source>
          <target state="translated">このモジュールは、Pythonのインポートシステムを利用して、&lt;em&gt;パッケージ&lt;/em&gt;内の&lt;em&gt;リソース&lt;/em&gt;へのアクセスを提供し&lt;em&gt;ます&lt;/em&gt;。パッケージをインポートできる場合は、そのパッケージ内のリソースにアクセスできます。リソースは、バイナリモードまたはテキストモードで開いたり読み取ったりできます。</target>
        </trans-unit>
        <trans-unit id="d567be3ffbb48af9ddd8e570ee9aca2bcd078e25" translate="yes" xml:space="preserve">
          <source>This module makes available standard &lt;code&gt;errno&lt;/code&gt; system symbols. The value of each symbol is the corresponding integer value. The names and descriptions are borrowed from &lt;code&gt;linux/include/errno.h&lt;/code&gt;, which should be pretty all-inclusive.</source>
          <target state="translated">このモジュールは、標準の &lt;code&gt;errno&lt;/code&gt; システムシンボルを使用可能にします。各シンボルの値は、対応する整数値です。名前と説明は &lt;code&gt;linux/include/errno.h&lt;/code&gt; から借用したもので、かなり包括的である必要があります。</target>
        </trans-unit>
        <trans-unit id="8177e37ca6fd47fc24221a5d337fc98fe8380b1b" translate="yes" xml:space="preserve">
          <source>This module offers classes representing filesystem paths with semantics appropriate for different operating systems. Path classes are divided between &lt;a href=&quot;#pure-paths&quot;&gt;pure paths&lt;/a&gt;, which provide purely computational operations without I/O, and &lt;a href=&quot;#concrete-paths&quot;&gt;concrete paths&lt;/a&gt;, which inherit from pure paths but also provide I/O operations.</source>
          <target state="translated">このモジュールは、さまざまなオペレーティングシステムに適したセマンティクスでファイルシステムパスを表すクラスを提供します。パスクラスは間で分割され&lt;a href=&quot;#pure-paths&quot;&gt;、純粋なパス&lt;/a&gt; I / Oせずに純粋に計算動作を提供し、および&lt;a href=&quot;#concrete-paths&quot;&gt;コンクリート経路&lt;/a&gt;、純粋な経路から継承するだけでなく、I / O動作を提供します。</target>
        </trans-unit>
        <trans-unit id="ed5c638dd819f880628830ab0ecc5d8641d533ba" translate="yes" xml:space="preserve">
          <source>This module offers several classes to implement SMTP (email) servers.</source>
          <target state="translated">このモジュールは、SMTP(電子メール)サーバーを実装するためのいくつかのクラスを提供します。</target>
        </trans-unit>
        <trans-unit id="5ce552dbf20b8c159b70061696daa935deadc19d" translate="yes" xml:space="preserve">
          <source>This module offers the following functions:</source>
          <target state="translated">このモジュールは以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="d8a6bfc993b9c245ec8eb2cc7787eb9de4ea8adc" translate="yes" xml:space="preserve">
          <source>This module performs conversions between Python values and C structs represented as Python &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. This can be used in handling binary data stored in files or from network connections, among other sources. It uses &lt;a href=&quot;#struct-format-strings&quot;&gt;Format Strings&lt;/a&gt; as compact descriptions of the layout of the C structs and the intended conversion to/from Python values.</source>
          <target state="translated">このモジュールは、Python値とPython &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとして表されるC構造体の間の変換を実行します。これは、他のソースの中でも、ファイルに保存されたバイナリデータやネットワーク接続からのバイナリデータの処理に使用できます。これは、C構造体のレイアウトのコンパクトな説明と、Python値との間の意図された変換として&lt;a href=&quot;#struct-format-strings&quot;&gt;フォーマット文字&lt;/a&gt;列を使用します。</target>
        </trans-unit>
        <trans-unit id="b6eea1445534f2c5a7d57930c9064fef45e4cd14" translate="yes" xml:space="preserve">
          <source>This module performs file control and I/O control on file descriptors. It is an interface to the &lt;code&gt;fcntl()&lt;/code&gt; and &lt;code&gt;ioctl()&lt;/code&gt; Unix routines. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl(2)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl(2)&lt;/a&gt;&lt;/em&gt; Unix manual pages.</source>
          <target state="translated">このモジュールは、ファイル記述子に対してファイル制御とI / O制御を実行します。これは、 &lt;code&gt;fcntl()&lt;/code&gt; および &lt;code&gt;ioctl()&lt;/code&gt; Unixルーチンへのインターフェースです。これらの呼び出しの詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl（2）&lt;/a&gt;&lt;/em&gt;および&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl（2）の&lt;/a&gt;&lt;/em&gt; Unixマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="887984972a32db5e99731e161e576fbca9e2f8cf" translate="yes" xml:space="preserve">
          <source>This module performs quoted-printable transport encoding and decoding, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;: &amp;ldquo;MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies&amp;rdquo;. The quoted-printable encoding is designed for data where there are relatively few nonprintable characters; the base64 encoding scheme available via the &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt; module is more compact if there are many such characters, as when sending a graphics file.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;て&lt;/strong&gt;いるquoted-printableトランスポートエンコーディングおよびデコーディングを実行し&lt;strong&gt;ます&lt;/strong&gt;。quoted-printableエンコーディングは、印刷できない文字が比較的少ないデータ用に設計されています。グラフィックファイルを送信するときのように、そのような文字が多い場合、&lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt;モジュールを介して使用できるbase64エンコードスキームはよりコンパクトになります。</target>
        </trans-unit>
        <trans-unit id="30c72eae525b4703153ea587e7608baa95a20091" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">このモジュールは、クラスが特定のインターフェースを提供するかどうかをテストするために使用できる&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;を提供します。たとえば、ハッシュ可能かどうか、マッピングかどうかなどです。</target>
        </trans-unit>
        <trans-unit id="ae244de3501dc65b5e91de812f723a2a68347184" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">このモジュールは、クラスが特定のインターフェースを提供するかどうかをテストするために使用できる&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;を提供します。たとえば、ハッシュ可能かどうか、マッピングかどうかなどです。</target>
        </trans-unit>
        <trans-unit id="13eafc2a82baf557013b08017f80bf530e415d08" translate="yes" xml:space="preserve">
          <source>This module provides APIs to manage, store, and access context-local state. The &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; class is used to declare and work with &lt;em&gt;Context Variables&lt;/em&gt;. The &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class should be used to manage the current context in asynchronous frameworks.</source>
          <target state="translated">このモジュールは、コンテキストローカル状態を管理、保存、およびアクセスするためのAPIを提供します。&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;クラスは、と宣言して作業するために使用される&lt;em&gt;コンテキスト変数&lt;/em&gt;。&lt;a href=&quot;#contextvars.copy_context&quot;&gt; &lt;code&gt;copy_context()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#contextvars.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;クラスは、非同期フレームワークにおける現在のコンテキストを管理するために使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="703dfbdde3fe51b975924d146f5d433ed1e5cf30" translate="yes" xml:space="preserve">
          <source>This module provides a &lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; class that can be used to determine the set of modules imported by a script. &lt;code&gt;modulefinder.py&lt;/code&gt; can also be run as a script, giving the filename of a Python script as its argument, after which a report of the imported modules will be printed.</source>
          <target state="translated">このモジュールは、スクリプトによってインポートされたモジュールのセットを判別するために使用できる&lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt;クラスを提供します。 &lt;code&gt;modulefinder.py&lt;/code&gt; は、Pythonスクリプトのファイル名を引数として指定してスクリプトとして実行することもできます。その後、インポートされたモジュールのレポートが出力されます。</target>
        </trans-unit>
        <trans-unit id="9fb1a53a880fe52c91fddba4f125f09d0a187d0c" translate="yes" xml:space="preserve">
          <source>This module provides a class &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; for representing character sets and character set conversions in email messages, as well as a character set registry and several convenience methods for manipulating this registry. Instances of &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; are used in several other modules within the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">このモジュールは、電子メールメッセージの文字セットと文字セット変換を表すクラス&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;を提供します。また、文字セットレジストリと、このレジストリを操作するためのいくつかの便利なメソッドを提供します。&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; の&lt;/a&gt;インスタンスは、&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージ内の他のいくつかのモジュールで使用されます。</target>
        </trans-unit>
        <trans-unit id="213bc85d22b8633001facc52a601116b11e0ec9e" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;, for the allocation and management of shared memory to be accessed by one or more processes on a multicore or symmetric multiprocessor (SMP) machine. To assist with the life-cycle management of shared memory especially across distinct processes, a &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; subclass, &lt;code&gt;SharedMemoryManager&lt;/code&gt;, is also provided in the &lt;code&gt;multiprocessing.managers&lt;/code&gt; module.</source>
          <target state="translated">このモジュールは、マルチコアまたは対称型マルチプロセッサー（SMP）マシン上の1つ以上のプロセスによってアクセスされる共有メモリーの割り当てと管理のためのクラス&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; を&lt;/a&gt;提供します。特に異なるプロセス間で共有メモリのライフサイクル管理を支援するために、&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; の&lt;/a&gt;サブクラス、 &lt;code&gt;SharedMemoryManager&lt;/code&gt; は、またに設けられ &lt;code&gt;multiprocessing.managers&lt;/code&gt; のモジュール。</target>
        </trans-unit>
        <trans-unit id="e9c95f438e44fc345a6538a8c4a4f76ac8ff8317" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;, which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">このモジュールは、クラスを提供&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;に由来し、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; の&lt;/a&gt;タイプ、およびソケットのようなラッパーもSSLでソケットを介して行くデータを暗号化し、復号化していることを提供します。それは、次のような追加のメソッドサポート &lt;code&gt;getpeercert()&lt;/code&gt; 接続の他方の側の証明書を取得し、かつ &lt;code&gt;cipher()&lt;/code&gt; セキュアな接続のために使用される暗号を取得し、。</target>
        </trans-unit>
        <trans-unit id="90404141faf9f0c0e94247220f4a81789284c490" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;,which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">このモジュールは、クラスを提供&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;に由来し、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; の&lt;/a&gt;タイプ、およびソケットのようなラッパーもSSLでソケットを介して行くデータを暗号化し、復号化していることを提供します。それは、次のような追加のメソッドサポート &lt;code&gt;getpeercert()&lt;/code&gt; 接続の反対側の証明書を取得し、及び &lt;code&gt;cipher()&lt;/code&gt; セキュアな接続のために使用される暗号を取得し、。</target>
        </trans-unit>
        <trans-unit id="8f0ffcd572b3174eb3c8a270163a48792d8c1a64" translate="yes" xml:space="preserve">
          <source>This module provides a class, an instance, and a function:</source>
          <target state="translated">このモジュールは、クラス、インスタンス、関数を提供します。</target>
        </trans-unit>
        <trans-unit id="7420a8c5a8b68bbee2a0537324852b74b6e93ea0" translate="yes" xml:space="preserve">
          <source>This module provides a comprehensive interface for compressing and decompressing data using the bzip2 compression algorithm.</source>
          <target state="translated">このモジュールは、bzip2 圧縮アルゴリズムを用いたデータの圧縮と解凍のための包括的なインターフェイスを提供する。</target>
        </trans-unit>
        <trans-unit id="85cdc6759a6295c61c57d18349a77a0e70ad451c" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;や__repr __（）などの生成された&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;特別なメソッド&lt;/a&gt;をユーザー定義クラスに自動的に追加するためのデコレーターと関数を提供します。もともとは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557に&lt;/strong&gt;&lt;/a&gt;記述されていました。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="916908c6c673e5b4a27730bf1c8cc2e81ec3fee3" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;や__repr __（）などの生成された&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;特別なメソッド&lt;/a&gt;をユーザー定義クラスに自動的に追加するためのデコレータと関数を提供します。もともとは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP557で&lt;/strong&gt;&lt;/a&gt;説明されていました。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cd4efd6ed76589f3eff9b3aada6dff77c95ad36" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールへの重複したインターフェースを提供します。&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールがプラットフォームで提供されていない場合にインポートすることを意図していた。</target>
        </trans-unit>
        <trans-unit id="3fef5cae12047ccc1374399baa4337c5fac7f2f3" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールへの重複したインターフェースを提供します。&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;モジュールがプラットフォームで提供されていない場合にインポートすることを意図していた。</target>
        </trans-unit>
        <trans-unit id="b8848396af147fc8383e103fb6d46929f1bef6b8" translate="yes" xml:space="preserve">
          <source>This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, if you want to manipulate paths, see the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module, and if you want to read all the lines in all the files on the command line see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module. For creating temporary files and directories see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module, and for high-level file and directory handling see the &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、オペレーティングシステムに依存する機能を使用するポータブルな方法を提供します。ファイルの読み取りまたは書き込みのみを行う場合は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;、パスを操作する場合は&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;モジュールを、コマンドラインのすべてのファイルのすべての行を読み取る場合は&lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。。一時ファイルとディレクトリの作成については、&lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。高レベルのファイルとディレクトリの処理については、&lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f8f0c0c78932b5e209afaba9f5dcfdab7f59d3bd" translate="yes" xml:space="preserve">
          <source>This module provides a simple interface to compress and decompress files just like the GNU programs &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; would.</source>
          <target state="translated">このモジュールは、GNUプログラムの&lt;strong&gt;gzip&lt;/strong&gt;および&lt;strong&gt;gunzip&lt;/strong&gt;と同様に、ファイルを圧縮および解凍するためのシンプルなインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="72a987a70c302afe568cb8de1bfe5273c35907f2" translate="yes" xml:space="preserve">
          <source>This module provides a simple way to time small bits of Python code. It has both a &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; as well as a &lt;a href=&quot;#python-interface&quot;&gt;callable&lt;/a&gt; one. It avoids a number of common traps for measuring execution times. See also Tim Peters&amp;rsquo; introduction to the &amp;ldquo;Algorithms&amp;rdquo; chapter in the &lt;em&gt;Python Cookbook&lt;/em&gt;, published by O&amp;rsquo;Reilly.</source>
          <target state="translated">このモジュールは、小さなPythonコードの時間を計測する簡単な方法を提供します。&lt;a href=&quot;#timeit-command-line-interface&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;と&lt;a href=&quot;#python-interface&quot;&gt;呼び出し可能な&lt;/a&gt;インターフェイスの両方を備えています。実行時間を測定するための多くの一般的なトラップを回避します。O'Reillyによって発行された&lt;em&gt;Python Cookbookの&lt;/em&gt;「アルゴリズム」の章に対するTim Petersの紹介も参照してください。</target>
        </trans-unit>
        <trans-unit id="ac5624f85e8b62430d234b85484c3d823bb52291" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt;, which answers questions about whether or not a particular user agent can fetch a URL on the Web site that published the &lt;code&gt;robots.txt&lt;/code&gt; file. For more details on the structure of &lt;code&gt;robots.txt&lt;/code&gt; files, see &lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、特定のユーザーエージェントが &lt;code&gt;robots.txt&lt;/code&gt; ファイルを公​​開したWebサイト上のURLをフェッチできるかどうかについての質問に答える&lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; &lt;/a&gt;という単一のクラスを提供します。 &lt;code&gt;robots.txt&lt;/code&gt; ファイルの構造の詳細については、&lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http: &lt;/a&gt;//www.robotstxt.org/orig.htmlを参照してください。</target>
        </trans-unit>
        <trans-unit id="62e4158ef196326ed71c06f9c8cc82d27d3fbbcf" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt;, for convenient manipulation of WSGI response headers using a mapping-like interface.</source>
          <target state="translated">このモジュールは、マッピングのようなインターフェースを使用してWSGI応答ヘッダーを簡単に操作できるように、単一のクラス&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; を&lt;/a&gt;提供します。</target>
        </trans-unit>
        <trans-unit id="6536d070903854775a48e95f262d42244862ad75" translate="yes" xml:space="preserve">
          <source>This module provides a standard interface to extract, format and print stack traces of Python programs. It exactly mimics the behavior of the Python interpreter when it prints a stack trace. This is useful when you want to print stack traces under program control, such as in a &amp;ldquo;wrapper&amp;rdquo; around the interpreter.</source>
          <target state="translated">このモジュールは、Pythonプログラムのスタックトレースを抽出、フォーマット、および印刷するための標準インターフェイスを提供します。スタックトレースを出力するときのPythonインタープリターの動作を正確に模倣します。これは、インタープリターの「ラッパー」など、プログラムの制御下でスタックトレースを印刷する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="16801fcd2f87bd96df53f183ca91321a894b0cee" translate="yes" xml:space="preserve">
          <source>This module provides a variety of utility functions for working with WSGI environments. A WSGI environment is a dictionary containing HTTP request variables as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. All of the functions taking an &lt;em&gt;environ&lt;/em&gt; parameter expect a WSGI-compliant dictionary to be supplied; please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; for a detailed specification.</source>
          <target state="translated">このモジュールは、WSGI環境を操作するためのさまざまなユーティリティ関数を提供します。WSGI環境は、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333で&lt;/strong&gt;&lt;/a&gt;説明されているHTTP要求変数を含む辞書です。&lt;em&gt;environ&lt;/em&gt;パラメータを取るすべての関数は、WSGI準拠の辞書が提供されることを期待しています。詳細な仕様については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f47d51ea5443642e0cebe608bdfb649e783a95da" translate="yes" xml:space="preserve">
          <source>This module provides access to Transport Layer Security (often known as &amp;ldquo;Secure Sockets Layer&amp;rdquo;) encryption and peer authentication facilities for network sockets, both client-side and server-side. This module uses the OpenSSL library. It is available on all modern Unix systems, Windows, Mac OS X, and probably additional platforms, as long as OpenSSL is installed on that platform.</source>
          <target state="translated">このモジュールは、クライアント側とサーバー側の両方のネットワークソケットに対して、トランスポート層セキュリティ（「Secure Sockets Layer」とも呼ばれる）暗号化およびピア認証機能へのアクセスを提供します。このモジュールはOpenSSLライブラリを使用します。OpenSSLがそのプラットフォームにインストールされている限り、すべての最新のUnixシステム、Windows、Mac OS X、およびおそらく追加のプラットフォームで使用できます。</target>
        </trans-unit>
        <trans-unit id="fb47dc23d4685117a20e275d440b82a71cb84040" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">このモジュールは、複素数の数学関数へのアクセスを提供します。このモジュールの関数は、整数、浮動小数点数、または複素数を引数として受け入れます。また、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;メソッドのいずれかを持つ任意のPythonオブジェクトも受け入れます。これらのメソッドは、オブジェクトをそれぞれ複素数または浮動小数点数に変換するために使用され、関数は次の結果に適用されます変換。</target>
        </trans-unit>
        <trans-unit id="5ee5d6474fef056704addcd34d8bf10030130a4a" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">このモジュールは、複素数の数学関数へのアクセスを提供します。このモジュールの関数は、整数、浮動小数点数、または複素数を引数として受け入れます。また、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;メソッドまたは__float __（）メソッドのいずれかを持つPythonオブジェクトも受け入れます。これらのメソッドは、オブジェクトをそれぞれ複素数または浮動小数点数に変換するために使用され、関数は次の結果に適用されます。変換。</target>
        </trans-unit>
        <trans-unit id="96bd06b62c229263aee7d4b310478ba4038faf46" translate="yes" xml:space="preserve">
          <source>This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface).</source>
          <target state="translated">このモジュールは、C標準とPOSIX標準で標準化されているオペレーティングシステムの機能へのアクセスを提供します (薄く偽装されたUnixインターフェース)。</target>
        </trans-unit>
        <trans-unit id="fc2f9ad21523dcef5a819d87ef202bea6b841856" translate="yes" xml:space="preserve">
          <source>This module provides access to some variables used or maintained by the interpreter and to functions that interact strongly with the interpreter. It is always available.</source>
          <target state="translated">このモジュールは、インタープリタによって使用または維持されるいくつかの変数や、インタープリタと強く相互作用する関数へのアクセスを提供します。いつでも利用可能です。</target>
        </trans-unit>
        <trans-unit id="2bc2d795b2f5d56c42bc1fcccb682e4b1315d9ca" translate="yes" xml:space="preserve">
          <source>This module provides access to the &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; functions available in most operating systems, &lt;code&gt;devpoll()&lt;/code&gt; available on Solaris and derivatives, &lt;code&gt;epoll()&lt;/code&gt; available on Linux 2.5+ and &lt;code&gt;kqueue()&lt;/code&gt; available on most BSD. Note that on Windows, it only works for sockets; on other operating systems, it also works for other file types (in particular, on Unix, it works on pipes). It cannot be used on regular files to determine whether a file has grown since it was last read.</source>
          <target state="translated">このモジュールは、へのアクセスを提供します &lt;code&gt;select()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; ほとんどのオペレーティングシステムで利用可能な機能、 &lt;code&gt;devpoll()&lt;/code&gt; 可能なSolarisおよび誘導体を、 &lt;code&gt;epoll()&lt;/code&gt; のLinux 2.5+とで利用可能 &lt;code&gt;kqueue()&lt;/code&gt; ほとんどのBSDで利用可能。Windowsでは、ソケットに対してのみ機能することに注意してください。他のオペレーティングシステムでは、他のファイルタイプでも機能します（特に、Unixではパイプで機能します）。通常のファイルでは、最後に読み取られてからファイルが大きくなっているかどうかを判断するために使用することはできません。</target>
        </trans-unit>
        <trans-unit id="f5ea14577acc1b35986f36f159c2c78929863d41" translate="yes" xml:space="preserve">
          <source>This module provides access to the BSD &lt;em&gt;socket&lt;/em&gt; interface. It is available on all modern Unix systems, Windows, MacOS, and probably additional platforms.</source>
          <target state="translated">このモジュールは、BSD &lt;em&gt;ソケット&lt;/em&gt;インターフェースへのアクセスを提供します。最近のすべてのUnixシステム、Windows、MacOS、そしておそらく追加のプラットフォームで利用可能です。</target>
        </trans-unit>
        <trans-unit id="4edada6edb283e968b93e64d3bef29ca69397245" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD version 12.1.0&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、すべてのUnicode文字の文字プロパティを定義するUnicode Character Database（UCD）へのアクセスを提供します。このデータベースに含まれるデータは、&lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCDバージョン12.1.0&lt;/a&gt;からコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="1d725393b29ca98559a052531d2684647c496440" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCD version 13.0.0&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、すべてのUnicode文字の文字プロパティを定義するUnicode文字データベース（UCD）へのアクセスを提供します。このデータベースに含まれるデータは、&lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCDバージョン13.0.0&lt;/a&gt;からコンパイルされています。</target>
        </trans-unit>
        <trans-unit id="30670ccef8e7fe81c71479df8b9249a53340baa3" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix group database. It is available on all Unix versions.</source>
          <target state="translated">このモジュールはUnixグループデータベースへのアクセスを提供します。これはすべての Unix バージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="55f03ba226e0b0cb51540161e0864d43da374302" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix shadow password database. It is available on various Unix versions.</source>
          <target state="translated">このモジュールは、Unix シャドウパスワードデータベースへのアクセスを提供します。これは様々な Unix のバージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="673e84aa5c6cb1086db76a154ca80c1cc47c2e40" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix user account and password database. It is available on all Unix versions.</source>
          <target state="translated">このモジュールは、Unix ユーザアカウントとパスワードデータベースへのアクセスを提供します。これはすべての Unix バージョンで利用可能です。</target>
        </trans-unit>
        <trans-unit id="58e68fc7fd3b84061fa6b4f1dc9c8b600f222438" translate="yes" xml:space="preserve">
          <source>This module provides access to the mathematical functions defined by the C standard.</source>
          <target state="translated">このモジュールは、C標準で定義されている数学関数へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="469fcb73e532c33fb0f828785ab9c89776d66732" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of the heap queue algorithm, also known as the priority queue algorithm.</source>
          <target state="translated">このモジュールは、優先度キューアルゴリズムとしても知られるヒープキューアルゴリズムの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="7478b75b360305f4403684dd05c591302baf8208" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used by Apple, primarily on macOS and iOS. This module supports both binary and XML plist files.</source>
          <target state="translated">このモジュールは、主にmacOSとiOSでAppleが使用する「プロパティリスト」ファイルを読み書きするためのインターフェイスを提供します。このモジュールは、バイナリとXMLの両方のplistファイルをサポートします。</target>
        </trans-unit>
        <trans-unit id="52af56f54da90f517f414639fe74fe94fa8a209d" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used mainly by Mac OS X and supports both binary and XML plist files.</source>
          <target state="translated">このモジュールは、主にMac OS Xで使用される「プロパティリスト」ファイルを読み書きするためのインターフェースを提供し、バイナリファイルとXML plistファイルの両方をサポートします。</target>
        </trans-unit>
        <trans-unit id="f7985b4122bdce70b370c7fd3cec918904d41ad1" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading files that use EA IFF 85 chunks. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; This format is used in at least the Audio Interchange File Format (AIFF/AIFF-C) and the Real Media File Format (RMFF). The WAVE audio file format is closely related and can also be read using this module.</source>
          <target state="translated">このモジュールは、EA IFF 85チャンクを使用するファイルを読み取るためのインターフェースを提供します。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;このフォーマットは、少なくともオーディオインターチェンジファイルフォーマット（AIFF / AIFF-C）およびリアルメディアファイルフォーマット（RMFF）で使用されます。WAVEオーディオファイル形式は密接に関連しており、このモジュールを使用して読み取ることもできます。</target>
        </trans-unit>
        <trans-unit id="e5235c064e0fb34f3d9063e171a6e6c64d56db25" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the POSIX calls for tty I/O control. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios(3)&lt;/a&gt;&lt;/em&gt; Unix manual page. It is only available for those Unix versions that support POSIX &lt;em&gt;termios&lt;/em&gt; style tty I/O control configured during installation.</source>
          <target state="translated">このモジュールは、tty I / O制御のためのPOSIX呼び出しへのインターフェースを提供します。これらの呼び出しの詳細については、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios（3）の&lt;/a&gt;&lt;/em&gt; Unixマニュアルページを参照してください。これは、インストール中に構成されたPOSIX &lt;em&gt;termios&lt;/em&gt;スタイルのtty I / OコントロールをサポートするUnixバージョンでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="086f3cc3f100e25677403b5b1acdc335886e31be" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the Unix &lt;code&gt;syslog&lt;/code&gt; library routines. Refer to the Unix manual pages for a detailed description of the &lt;code&gt;syslog&lt;/code&gt; facility.</source>
          <target state="translated">このモジュールは、Unix &lt;code&gt;syslog&lt;/code&gt; ライブラリルーチンへのインターフェースを提供します。 &lt;code&gt;syslog&lt;/code&gt; 機能の詳細については、Unixのマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="5767581be7b98c856708e68e4887a01ee5ed3ca7" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the optional garbage collector. It provides the ability to disable the collector, tune the collection frequency, and set debugging options. It also provides access to unreachable objects that the collector found but cannot free. Since the collector supplements the reference counting already used in Python, you can disable the collector if you are sure your program does not create reference cycles. Automatic collection can be disabled by calling &lt;code&gt;gc.disable()&lt;/code&gt;. To debug a leaking program call &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt;. Notice that this includes &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt;, causing garbage-collected objects to be saved in gc.garbage for inspection.</source>
          <target state="translated">このモジュールは、オプションのガベージコレクターへのインターフェイスを提供します。コレクターを無効にし、収集頻度を調整し、デバッグオプションを設定する機能を提供します。また、コレクターが検出したが解放できない到達不能オブジェクトへのアクセスも提供します。コレクターは既にPythonで使用されている参照カウントを補足するため、プログラムが参照サイクルを作成しないことが確実な場合は、コレクターを無効にすることができます。自動収集は、 &lt;code&gt;gc.disable()&lt;/code&gt; を呼び出すことで無効にできます。リークするプログラムをデバッグするには、 &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt; を呼び出します。これには &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt; が含まれ、ガベージコレクションされたオブジェクトが検査のためにgc.garbageに保存されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="32207cdf053d4b53a02fec90b3f2fe847d2a3f32" translate="yes" xml:space="preserve">
          <source>This module provides base handler classes for implementing WSGI servers and gateways. These base classes handle most of the work of communicating with a WSGI application, as long as they are given a CGI-like environment, along with input, output, and error streams.</source>
          <target state="translated">このモジュールは、WSGIサーバとゲートウェイを実装するための基本ハンドラクラスを提供します。これらの基本クラスは、入力、出力、エラーストリームとともに、CGIライクな環境が与えられている限り、WSGIアプリケーションとの通信のほとんどの作業を処理します。</target>
        </trans-unit>
        <trans-unit id="3d2d65711f29707dcf3c68b47576e06b5bb25708" translate="yes" xml:space="preserve">
          <source>This module provides basic mechanisms for measuring and controlling system resources utilized by a program.</source>
          <target state="translated">本モジュールでは、プログラムが利用するシステム資源を計測・制御するための基本的な仕組みを提供します。</target>
        </trans-unit>
        <trans-unit id="2074e4ed5cae8e3c02c907a6fb87896ca374907a" translate="yes" xml:space="preserve">
          <source>This module provides classes and convenience functions for compressing and decompressing data using the LZMA compression algorithm. Also included is a file interface supporting the &lt;code&gt;.xz&lt;/code&gt; and legacy &lt;code&gt;.lzma&lt;/code&gt; file formats used by the &lt;strong&gt;xz&lt;/strong&gt; utility, as well as raw compressed streams.</source>
          <target state="translated">このモジュールは、LZMA圧縮アルゴリズムを使用してデータを圧縮および解凍するためのクラスと便利な関数を提供します。また、&lt;strong&gt;xz&lt;/strong&gt;ユーティリティで使用される &lt;code&gt;.xz&lt;/code&gt; およびレガシー &lt;code&gt;.lzma&lt;/code&gt; ファイル形式をサポートするファイルインターフェースと、生の圧縮ストリームも含まれます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b41ff6259a2809c3c85cfcb2d023518394f66db" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce difference information in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、シーケンスを比較するためのクラスと関数を提供します。たとえば、ファイルの比較に使用したり、HTMLやコンテキスト、統一された差分など、さまざまな形式で差分情報を生成したりできます。ディレクトリとファイルの比較については、&lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="d723d85d9302b6f49e467234d1b51bfae004c9ed" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce information about file differences in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このモジュールは、シーケンスを比較するためのクラスと関数を提供します。たとえば、ファイルの比較に使用でき、HTMLやコンテキスト、統一された差分など、さまざまな形式のファイルの違いに関する情報を生成できます。ディレクトリとファイルの比較については、&lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="4d3a75e4fdf67641ed01276bf79ceb985728ca3f" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of internal nodes of the parse tree. Unlike most Python constants, these use lower-case names. Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">このモジュールは、解析ツリーの内部ノードの数値を表す定数を提供します。ほとんどのPython定数とは異なり、これらは小文字の名前を使用します。言語文法の文脈における名前の定義については、Pythonディストリビューションの &lt;code&gt;Grammar/Grammar&lt;/code&gt; ファイルを参照してください。名前がマップする特定の数値は、Pythonのバージョン間で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="0db1c58e5713700f3d18b08e3440f3ac8160539e" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of leaf nodes of the parse tree (terminal tokens). Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">このモジュールは、解析ツリー（端末トークン）の葉ノードの数値を表す定数を提供します。言語文法の文脈における名前の定義については、Pythonディストリビューションの &lt;code&gt;Grammar/Grammar&lt;/code&gt; ファイルを参照してください。名前がマップする特定の数値は、Pythonのバージョン間で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="dc2f9c0b7237fe8976f75e5c839bcb70285d1a61" translate="yes" xml:space="preserve">
          <source>This module provides direct access to all &amp;lsquo;built-in&amp;rsquo; identifiers of Python; for example, &lt;code&gt;builtins.open&lt;/code&gt; is the full name for the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;functions#built-in-funcs&quot;&gt;Built-in Functions&lt;/a&gt; and &lt;a href=&quot;constants#built-in-consts&quot;&gt;Built-in Constants&lt;/a&gt; for documentation.</source>
          <target state="translated">このモジュールは、Pythonのすべての「組み込み」識別子への直接アクセスを提供します。たとえば、 &lt;code&gt;builtins.open&lt;/code&gt; は組み込み関数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;の完全な名前です。ドキュメントについて&lt;a href=&quot;constants#built-in-consts&quot;&gt;は&lt;/a&gt;、組み込み&lt;a href=&quot;functions#built-in-funcs&quot;&gt;関数&lt;/a&gt;と組み込み定数を参照してください。</target>
        </trans-unit>
        <trans-unit id="0e1adbb5fba8bcb0dd3c5d2f87875121ca620833" translate="yes" xml:space="preserve">
          <source>This module provides functionality similar to &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt; without the performance overhead of that package. This makes reading resources included in packages easier, with more stable and consistent semantics.</source>
          <target state="translated">このモジュールは、そのパッケージのパフォーマンスオーバーヘッドなしで、&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources &lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt;と同様の機能を提供します。これにより、パッケージに含まれるリソースの読み取りが容易になり、セマンティクスがより安定して一貫します。</target>
        </trans-unit>
        <trans-unit id="4b5ca63a2aecc796e502235c6d48c1ae2106dc46" translate="yes" xml:space="preserve">
          <source>This module provides functions for calculating mathematical statistics of numeric (&lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;-valued) data.</source>
          <target state="translated">このモジュールは、数値（&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;数値）データの数学的統計を計算するための関数を提供します。</target>
        </trans-unit>
        <trans-unit id="75398ee52262755abb3726df7ae90cc9e462672d" translate="yes" xml:space="preserve">
          <source>This module provides functions for encoding binary data to printable ASCII characters and decoding such encodings back to binary data. It provides encoding and decoding functions for the encodings specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;, which defines the Base16, Base32, and Base64 algorithms, and for the de-facto standard Ascii85 and Base85 encodings.</source>
          <target state="translated">このモジュールは、バイナリデータを印刷可能なASCII文字にエンコードし、そのようなエンコードをデコードしてバイナリデータに戻す関数を提供します。これは、Base16、Base32、およびBase64アルゴリズムを定義する&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;で指定されたエンコーディングと、事実上の標準であるAscii85およびBase85エンコーディングのエンコーディングおよびデコーディング機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f9ee787249598374b8b03ab5d0feb31c2f56e5d8" translate="yes" xml:space="preserve">
          <source>This module provides immutable &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; objects (the &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; class) and the functions &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt; for generating version 1, 3, 4, and 5 UUIDs as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122で&lt;/strong&gt;&lt;/a&gt;指定され&lt;strong&gt;ている&lt;/strong&gt;バージョン&lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt;、および5のUUIDを生成するための不変の&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;オブジェクト（&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;クラス）および関数&lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; &lt;/a&gt;、uuid5（）を提供し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="06c6eafc483d258beab85551b483806ae97c5c22" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude directives&lt;/a&gt;, via the &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; helper module. This module can be used to insert subtrees and text strings into element trees, based on information in the tree.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; ヘルパーモジュールを介して、&lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XIncludeディレクティブの&lt;/a&gt;限定的なサポートを提供します。このモジュールは、ツリー内の情報に基づいて、サブツリーとテキスト文字列を要素ツリーに挿入するために使用できます。</target>
        </trans-unit>
        <trans-unit id="8e2b5842f0ed4029e7a99dedd0e7121a9e735bad" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath expressions&lt;/a&gt; for locating elements in a tree. The goal is to support a small subset of the abbreviated syntax; a full XPath engine is outside the scope of the module.</source>
          <target state="translated">このモジュールは、ツリー内の要素を見つけるための&lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath式の&lt;/a&gt;限定的なサポートを提供します。目標は、省略された構文の小さなサブセットをサポートすることです。完全なXPathエンジンはモジュールの範囲外です。</target>
        </trans-unit>
        <trans-unit id="0bf7ba3f5539cc8e4d1e744ec755fce3ecc09d6b" translate="yes" xml:space="preserve">
          <source>This module provides low-level primitives for working with multiple threads (also called &lt;em&gt;light-weight processes&lt;/em&gt; or &lt;em&gt;tasks&lt;/em&gt;) &amp;mdash; multiple threads of control sharing their global data space. For synchronization, simple locks (also called &lt;em&gt;mutexes&lt;/em&gt; or &lt;em&gt;binary semaphores&lt;/em&gt;) are provided. The &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module provides an easier to use and higher-level threading API built on top of this module.</source>
          <target state="translated">このモジュールは、複数のスレッド（&lt;em&gt;軽量プロセス&lt;/em&gt;または&lt;em&gt;タスク&lt;/em&gt;とも呼ばれます）を操作するための低レベルのプリミティブを提供します&amp;mdash;複数の制御スレッドがグローバルデータスペースを共有します。同期のために、単純なロック（&lt;em&gt;ミューテックス&lt;/em&gt;または&lt;em&gt;バイナリセマフォ&lt;/em&gt;とも呼ばれます）が提供されています。&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールは、このモジュールの上に構築された、使いやすく、より高いレベルのスレッドAPIを提供します。</target>
        </trans-unit>
        <trans-unit id="d00695c8d8aaeb3205a3ed627d8ec50cee6867c5" translate="yes" xml:space="preserve">
          <source>This module provides mechanisms to use signal handlers in Python.</source>
          <target state="translated">このモジュールは、Pythonでシグナルハンドラを使用するための仕組みを提供します。</target>
        </trans-unit>
        <trans-unit id="f569226472a737263efed126429393dd8a849aa0" translate="yes" xml:space="preserve">
          <source>This module provides names for many of the types that are required to implement a Python interpreter. It deliberately avoids including some of the types that arise only incidentally during processing such as the &lt;code&gt;listiterator&lt;/code&gt; type.</source>
          <target state="translated">このモジュールは、Pythonインタープリターの実装に必要な多くのタイプの名前を提供します。これは、 &lt;code&gt;listiterator&lt;/code&gt; タイプなど、処理中に偶発的にのみ発生するタイプのいくつかを意図的に含めることを避けます。</target>
        </trans-unit>
        <trans-unit id="dd6ac6c47b580fce484cd078e849be51aa1988ef" translate="yes" xml:space="preserve">
          <source>This module provides one exception and one type object:</source>
          <target state="translated">このモジュールは、1つの例外と1つの型オブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="9cf56c38d255b7eb6778dc5332911ee7531ebe53" translate="yes" xml:space="preserve">
          <source>This module provides regular expression matching operations similar to those found in Perl.</source>
          <target state="translated">このモジュールは、Perlで見られるような正規表現のマッチング操作を提供します。</target>
        </trans-unit>
        <trans-unit id="4b49c61f0886b25155c2b3daf9b55f7958df6ab6" translate="yes" xml:space="preserve">
          <source>This module provides runtime support for type hints as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;. The most fundamental support consists of the types &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt;. For full specification please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;. For a simplified introduction to type hints see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;、および&lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591で&lt;/strong&gt;&lt;/a&gt;指定されているタイプヒントのランタイムサポートを提供します。最も基本的なサポートは、種類で構成され&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.Callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;。完全な仕様については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;を参照してください。型ヒントの簡単な紹介については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="532cca5468b0ad145e3eab39e13ea225f5dbce6f" translate="yes" xml:space="preserve">
          <source>This module provides some utility functions to support installing Python libraries. These functions compile Python source files in a directory tree. This module can be used to create the cached byte-code files at library installation time, which makes them available for use even by users who don&amp;rsquo;t have write permission to the library directories.</source>
          <target state="translated">このモジュールは、Pythonライブラリのインストールをサポートするいくつかのユーティリティ関数を提供します。これらの関数は、Pythonソースファイルをディレクトリツリーにコンパイルします。このモジュールは、ライブラリのインストール時にキャッシュされたバイトコードファイルを作成するために使用できます。これにより、ライブラリディレクトリへの書き込み権限がないユーザーでも使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="81a0615691bbce1f954726677409cc9bb8dfb30a" translate="yes" xml:space="preserve">
          <source>This module provides support for Unix shell-style wildcards, which are &lt;em&gt;not&lt;/em&gt; the same as regular expressions (which are documented in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module). The special characters used in shell-style wildcards are:</source>
          <target state="translated">このモジュールは、正規表現（&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;モジュールに記載されている）とは&lt;em&gt;異なる&lt;/em&gt; Unixシェルスタイルのワイルドカードをサポートします。シェルスタイルのワイルドカードで使用される特殊文字は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5ea0af12bd69eb91fa994fc1c788ed7bbb0a0fa5" translate="yes" xml:space="preserve">
          <source>This module provides support for a-LAW, u-LAW and Intel/DVI ADPCM encodings.</source>
          <target state="translated">このモジュールは、a-LAW、u-LAW、および Intel/DVI ADPCM エンコーディングをサポートします。</target>
        </trans-unit>
        <trans-unit id="37579753c5f46d08ff6a65e6a62810dd661abff2" translate="yes" xml:space="preserve">
          <source>This module provides support for maintaining a list in sorted order without having to sort the list after each insertion. For long lists of items with expensive comparison operations, this can be an improvement over the more common approach. The module is called &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect&lt;/code&gt;&lt;/a&gt; because it uses a basic bisection algorithm to do its work. The source code may be most useful as a working example of the algorithm (the boundary conditions are already right!).</source>
          <target state="translated">このモジュールは、各挿入後にリストをソートする必要なしに、ソートされた順序でリストを維持するためのサポートを提供します。コストのかかる比較操作を伴うアイテムの長いリストの場合、これはより一般的なアプローチよりも改善される可能性があります。モジュールは、基本的な二分アルゴリズムを使用して作業を行うため、&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect&lt;/code&gt; &lt;/a&gt;と呼ばれます。ソースコードは、アルゴリズムの実際の例として最も役立つ場合があります（境界条件はすでに正しいです）。</target>
        </trans-unit>
        <trans-unit id="2ac8792580c07542d59388d307ee83f6895e01e4" translate="yes" xml:space="preserve">
          <source>This module provides support for reading and writing AIFF and AIFF-C files. AIFF is Audio Interchange File Format, a format for storing digital audio samples in a file. AIFF-C is a newer version of the format that includes the ability to compress the audio data.</source>
          <target state="translated">このモジュールは、AIFF および AIFF-C ファイルの読み書きをサポートします。AIFF は Audio Interchange File Format で、デジタルオーディオサンプルをファイルに保存するためのフォーマットです。AIFF-C は、オーディオデータを圧縮する機能を含むフォーマットの新しいバージョンです。</target>
        </trans-unit>
        <trans-unit id="f619454e0cd883753f5aa29d59051c7efdc95c1c" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; class which implements a basic configuration language which provides a structure similar to what&amp;rsquo;s found in Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily.</source>
          <target state="translated">このモジュールは、Microsoft Windows INIファイルにあるものと同様の構造を提供する基本構成言語を実装する&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;クラスを提供します。これを使用して、エンドユーザーが簡単にカスタマイズできるPythonプログラムを作成できます。</target>
        </trans-unit>
        <trans-unit id="2196f022a345bbb2d0d9ec4089afe9f49eb7ee67" translate="yes" xml:space="preserve">
          <source>This module provides the basic infrastructure for writing asynchronous socket service clients and servers.</source>
          <target state="translated">このモジュールは、非同期ソケットサービスのクライアントとサーバを記述するための基本的なインフラストラクチャを提供します。</target>
        </trans-unit>
        <trans-unit id="5de5cc5107720c846f4c171dd1d059a801f1f751" translate="yes" xml:space="preserve">
          <source>This module provides the following function:</source>
          <target state="translated">このモジュールは以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="0820fe444c091f886715862b85c51be5074c2d42" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119で&lt;/strong&gt;&lt;/a&gt;概説されているように、Pythonで&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;（ABC）を定義するためのインフラストラクチャを提供します。これがPythonに追加された理由については、PEPを参照してください。（ABCに基づく数値の型階層については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。）&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57af032eecf847e31b6d20be78ab2f19d6d82731" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119で&lt;/strong&gt;&lt;/a&gt;概説されているように、Pythonで&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;（ABC）を定義するためのインフラストラクチャを提供します。これがPythonに追加された理由については、PEPを参照してください。（ABCに基づく番号のタイプ階層については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。）&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69215bf3ed347a2cba2f5ecd0a5495f835fbb5b" translate="yes" xml:space="preserve">
          <source>This module provides the metaclass &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; for defining ABCs and a helper class &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; to alternatively define ABCs through inheritance:</source>
          <target state="translated">このモジュールは、ABCを定義するためのメタクラス&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;と、継承によってABCを定義するためのヘルパークラス&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="78b52d81ca4d921802dd5d8de6b28e9b2b042b84" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、Pythonコードを含むzipファイルの作成を管理するツールを提供します。これは&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;、Pythonインタープリターによって直接実行&lt;/a&gt;できます。このモジュールは、&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;コマンドラインインターフェース&lt;/a&gt;と&lt;a href=&quot;#zipapp-python-api&quot;&gt;Python APIの&lt;/a&gt;両方を提供します。</target>
        </trans-unit>
        <trans-unit id="fbdfd5b2e7377c2332a86021c72d22630439b201" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">このモジュールは&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;、Pythonインタープリターによって直接実行&lt;/a&gt;できるPythonコードを含むzipファイルの作成を管理するためのツールを提供します。このモジュールは、&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;コマンドラインインターフェイス&lt;/a&gt;とPythonAPIの両方を提供し&lt;a href=&quot;#zipapp-python-api&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53a874565a2be8671d555dddd96ba1951dc626bc" translate="yes" xml:space="preserve">
          <source>This module provides two functions and an exception:</source>
          <target state="translated">このモジュールは、2 つの関数と例外を提供します。</target>
        </trans-unit>
        <trans-unit id="0c692d34344adf8940dacd20d0010b650d9e4c65" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントを含む一般的なタスクのユーティリティを提供します。詳細については、「&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャーのタイプ」&lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;「ステートメントコンテキストマネージャー&lt;/a&gt;を使用」も参照してください。</target>
        </trans-unit>
        <trans-unit id="cb5bfbe9a9c3613ce2efa4df6cc227770ea75a2b" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントに関連する一般的なタスクのユーティリティを提供します。詳細については、&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャータイプ&lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;Withステートメントコンテキストマネージャー&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="426dcc1cbaf25e58643c58a6a6297e1a618dac4e" translate="yes" xml:space="preserve">
          <source>This module provides utilities for the import system, in particular package support.</source>
          <target state="translated">このモジュールは、インポートシステム、特にパッケージサポートのためのユーティリティを提供します。</target>
        </trans-unit>
        <trans-unit id="240bcd19bf3933f07143845b5b85dc5d035b4c64" translate="yes" xml:space="preserve">
          <source>This module provides various time-related functions. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">このモジュールは、さまざまな時間関連機能を提供します。関連する機能については、&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;calendar#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="ac4e99ea575234e3006a32d19f75118193efada6" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;code&gt;pyexpat&lt;/code&gt; module to provide access to the Expat parser. Direct use of the &lt;code&gt;pyexpat&lt;/code&gt; module is deprecated.</source>
          <target state="translated">このモジュールは &lt;code&gt;pyexpat&lt;/code&gt; モジュールを使用してExpatパーサーへのアクセスを提供します。 &lt;code&gt;pyexpat&lt;/code&gt; モジュールの直接使用は非推奨です。</target>
        </trans-unit>
        <trans-unit id="31f73bbb9aa85c31966124e47f8da4d30bd39d6f" translate="yes" xml:space="preserve">
          <source>This module wraps the system &lt;code&gt;syslog&lt;/code&gt; family of routines. A pure Python library that can speak to a syslog server is available in the &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module as &lt;code&gt;SysLogHandler&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、ルーチンのシステム &lt;code&gt;syslog&lt;/code&gt; ファミリをラップします。syslogサーバーと &lt;code&gt;SysLogHandler&lt;/code&gt; できる純粋なPythonライブラリは、syslogHandlerとして&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;モジュールで使用できます。</target>
        </trans-unit>
        <trans-unit id="170f67191f0a6157cc696b7d62194d8e091d8fba" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s encoders and decoders preserve input and output order by default. Order is only lost if the underlying containers are unordered.</source>
          <target state="translated">このモジュールのエンコーダーとデコーダーは、デフォルトで入力と出力の順序を保持します。基になるコンテナーが順序付けされていない場合にのみ、順序が失われます。</target>
        </trans-unit>
        <trans-unit id="fe2fb497e72f94f41104bc9280245ecfb5cf62f7" translate="yes" xml:space="preserve">
          <source>This must be called at most once per process object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate process.</source>
          <target state="translated">これは、プロセスオブジェクトごとに最大で1回呼び出す必要があります。オブジェクトの&lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが別のプロセスで呼び出されるようにします。</target>
        </trans-unit>
        <trans-unit id="34820797f6502a43638f2f7818d676aebe5d8e98" translate="yes" xml:space="preserve">
          <source>This must be called to make sure that any underlying resource is freed. The selector shall not be used once it has been closed.</source>
          <target state="translated">これは、基礎となるリソースが解放されていることを確認するために呼ばれなければならない。セレクタが閉じられた後は、セレクタを使用してはならない。</target>
        </trans-unit>
        <trans-unit id="48f128b07ca17bd85e39bdec0199f67b2269762f" translate="yes" xml:space="preserve">
          <source>This mutates the function(s) in place.</source>
          <target state="translated">これは、その場にある関数を変異させます。</target>
        </trans-unit>
        <trans-unit id="e1dda5ba415b7dbd31f5962a5276f8c7e29e022d" translate="yes" xml:space="preserve">
          <source>This non-public class is the base class of all fundamental ctypes data types. It is mentioned here because it contains the common attributes of the fundamental ctypes data types. &lt;a href=&quot;#ctypes._SimpleCData&quot;&gt;&lt;code&gt;_SimpleCData&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ctypes._CData&quot;&gt;&lt;code&gt;_CData&lt;/code&gt;&lt;/a&gt;, so it inherits their methods and attributes. ctypes data types that are not and do not contain pointers can now be pickled.</source>
          <target state="translated">この非パブリッククラスは、すべての基本的なctypesデータ型の基本クラスです。基本的なctypesデータ型の共通属性が含まれているため、ここで説明します。&lt;a href=&quot;#ctypes._SimpleCData&quot;&gt; &lt;code&gt;_SimpleCData&lt;/code&gt; は&lt;/a&gt;のサブクラスである&lt;a href=&quot;#ctypes._CData&quot;&gt; &lt;code&gt;_CData&lt;/code&gt; &lt;/a&gt;ので、そのメソッドと属性を継承します。ポインターを含まない、または含まないctypesデータ型は、ピクルすることができます。</target>
        </trans-unit>
        <trans-unit id="c76670a6aef8581c98df691553b9d5b3bb79b20e" translate="yes" xml:space="preserve">
          <source>This non-public class is the common base class of all ctypes data types. Among other things, all ctypes type instances contain a memory block that hold C compatible data; the address of the memory block is returned by the &lt;a href=&quot;#ctypes.addressof&quot;&gt;&lt;code&gt;addressof()&lt;/code&gt;&lt;/a&gt; helper function. Another instance variable is exposed as &lt;a href=&quot;#ctypes._CData._objects&quot;&gt;&lt;code&gt;_objects&lt;/code&gt;&lt;/a&gt;; this contains other Python objects that need to be kept alive in case the memory block contains pointers.</source>
          <target state="translated">この非パブリッククラスは、すべてのctypesデータ型の共通の基本クラスです。特に、すべてのctypes型インスタンスには、C互換データを保持するメモリブロックが含まれています。メモリブロックのアドレスは、&lt;a href=&quot;#ctypes.addressof&quot;&gt; &lt;code&gt;addressof()&lt;/code&gt; &lt;/a&gt;ヘルパー関数によって返されます。別のインスタンス変数は&lt;a href=&quot;#ctypes._CData._objects&quot;&gt; &lt;code&gt;_objects&lt;/code&gt; &lt;/a&gt;として公開されています。これには、メモリブロックにポインタが含まれている場合に備えて、保持しておく必要がある他のPythonオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="740946fe8f7e39fc96693fd9ee1e22af0668e216" translate="yes" xml:space="preserve">
          <source>This number is not equivalent to the number of CPUs the current process can use. The number of usable CPUs can be obtained with &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt;</source>
          <target state="translated">この数は、現在のプロセスが使用できるCPUの数とは異なります。使用可能なCPUの数は &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt; で取得できます</target>
        </trans-unit>
        <trans-unit id="963cb426c9fe5ee3c933f73bb84480436af3d679" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">この目的は、一般的にスライシング（参照によって使用されている&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;スライス表記を&lt;/a&gt;）。特別な操作はサポートしていません。&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;（組み込み名）という名前の省略記号オブジェクトが1つだけあります。 &lt;code&gt;type(Ellipsis)()&lt;/code&gt; は、&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;シングルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="ab4deaf35fc353a14e19626266588abfee71ef58" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">この目的は、一般的にスライシング（参照によって使用されている&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;スライス表記を&lt;/a&gt;）。特別な操作はサポートしていません。&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;（組み込み名）という名前の省略記号オブジェクトが1つだけあります。 &lt;code&gt;type(Ellipsis)()&lt;/code&gt; は、&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;シングルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="b844f2c0b6c0d04b3d9d3222fe2598ca13a1ddaf" translate="yes" xml:space="preserve">
          <source>This object is returned by functions that don&amp;rsquo;t explicitly return a value. It supports no special operations. There is exactly one null object, named &lt;code&gt;None&lt;/code&gt; (a built-in name). &lt;code&gt;type(None)()&lt;/code&gt; produces the same singleton.</source>
          <target state="translated">このオブジェクトは、明示的に値を返さない関数によって返されます。特別な操作はサポートしていません。 &lt;code&gt;None&lt;/code&gt; （組み込み名）という名前のnullオブジェクトは1つだけです。 &lt;code&gt;type(None)()&lt;/code&gt; は同じシングルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="373dd28a7f907a4136a7383316dd88a1c0e4e77a" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">このオブジェクトは、サポートされていない型を操作するように要求されたときに、比較およびバイナリ操作から返されます。詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;比較&lt;/a&gt;を参照してください。 &lt;code&gt;NotImplemented&lt;/code&gt; オブジェクトは1つだけです。 &lt;code&gt;type(NotImplemented)()&lt;/code&gt; は、シングルトンインスタンスを生成します。</target>
        </trans-unit>
        <trans-unit id="4b8c490a5ffaf5c5a318b1ff98f7e2b634edc506" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">このオブジェクトは、サポートされていない型を操作するように求められたときに、比較および2項演算から返されます。詳細については、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;比較&lt;/a&gt;を参照してください。 &lt;code&gt;NotImplemented&lt;/code&gt; オブジェクトは1つだけです。 &lt;code&gt;type(NotImplemented)()&lt;/code&gt; は、シングルトンインスタンスを生成します。</target>
        </trans-unit>
        <trans-unit id="512161437251ac84d2bdd0e799c3a5434535b949" translate="yes" xml:space="preserve">
          <source>This object wraps a Windows HKEY object, automatically closing it when the object is destroyed. To guarantee cleanup, you can call either the &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;Close()&lt;/code&gt;&lt;/a&gt; method on the object, or the &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">このオブジェクトはWindows HKEYオブジェクトをラップし、オブジェクトが破棄されると自動的に閉じます。クリーンアップを保証するには、オブジェクトの&lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;Close()&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt;関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3f694a7e94fdd2625c9751da67b75e646e6e0eee" translate="yes" xml:space="preserve">
          <source>This one step operation is more efficient than a &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; and can be more appropriate when using a fixed-size heap. The pop/push combination always returns an element from the heap and replaces it with &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">この1ステップの操作は、&lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; の&lt;/a&gt;後に&lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt;を実行するよりも効率的であり、固定サイズのヒープを使用する場合により適しています。pop / pushの組み合わせは、常にヒープから要素を返し、それを&lt;em&gt;itemに&lt;/em&gt;置き換え&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a823fede68f63279bdb3b91e0ab2e8b71d8e4b25" translate="yes" xml:space="preserve">
          <source>This only applies to classes or already instantiated objects. Calling a mocked class to create a mock instance &lt;em&gt;does not&lt;/em&gt; create a real instance. It is only attribute lookups - along with calls to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; - that are done.</source>
          <target state="translated">これは、クラスまたはすでにインスタンス化されたオブジェクトにのみ適用されます。モックされたクラスを呼び出してモックインスタンスを作成&lt;em&gt;しても&lt;/em&gt;、実際のインスタンス&lt;em&gt;は&lt;/em&gt;作成され&lt;em&gt;ません&lt;/em&gt;。行われるのは、&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;への呼び出しとともに属性ルックアップのみです。</target>
        </trans-unit>
        <trans-unit id="7c1390712c98925d63c320a49629f3fecfdd36f9" translate="yes" xml:space="preserve">
          <source>This only works when native size and alignment are in effect; standard size and alignment does not enforce any alignment.</source>
          <target state="translated">これは、 ネイティブサイズと整列が有効な場合にのみ機能し、 標準サイズと整列は整列を強制しません。</target>
        </trans-unit>
        <trans-unit id="8491f7168c80d0674be016b49eaa3606a3426c2f" translate="yes" xml:space="preserve">
          <source>This only works with functions that can be called without arguments.</source>
          <target state="translated">これは、引数なしで呼び出すことができる関数でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="cac8febff77df306a94e5b6eb192f6b009ce3a64" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このオペコードは、withブロックが始まる前にいくつかの操作を実行します。まず、コンテキストマネージャーから&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;読み込み、後で&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; で&lt;/a&gt;使用できるようにスタックにプッシュします。次に、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;が呼び出され、&lt;em&gt;deltaを&lt;/em&gt;指すfinallyブロックがプッシュされます。最後に、 &lt;code&gt;__enter__()&lt;/code&gt; メソッドを呼び出した結果がスタックにプッシュされます。次のオペコードはそれを無視する（&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;）か、それを（a）変数に格納します（&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0634c0718f8471af7f575c9f0bbf22c9be0c9321" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このオペコードは、withブロックが開始する前にいくつかの操作を実行します。まず、コンテキストマネージャから&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;ロードし、後で &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; で使用できるようにスタックにプッシュします。次に、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;が呼び出され、最終的に&lt;em&gt;デルタを&lt;/em&gt;指すブロックがプッシュされます。最後に、 &lt;code&gt;__enter__()&lt;/code&gt; メソッドを呼び出した結果がスタックにプッシュされます。次のオペコードはそれを無視するか（&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;）、または（a）変数（&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt;）に格納します。</target>
        </trans-unit>
        <trans-unit id="313d9da8aace736fbdf7186c1695da7951657092" translate="yes" xml:space="preserve">
          <source>This operation is identical to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, except that all NaNs signal. That is, if neither operand is a signaling NaN then any quiet NaN operand is treated as though it were a signaling NaN.</source>
          <target state="translated">この操作は、すべてのNaNがシグナルを送ることを除いて、&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。つまり、どちらのオペランドもシグナルNaNでない場合、静止NaNオペランドはシグナルNaNであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="991deaeff8f34412ebcb4ce1e4126533013440db" translate="yes" xml:space="preserve">
          <source>This operation is not commutative; that is, the order in which the objects are added matters. To illustrate:</source>
          <target state="translated">この操作は可換的ではありません。つまり、オブジェクトが追加される順序が重要なのです。説明するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="aa630c07e9d7ab0e136db1e517de3ecc0ff9bd2c" translate="yes" xml:space="preserve">
          <source>This operation is unaffected by context and is quiet: no flags are changed and no rounding is performed. As an exception, the C version may raise InvalidOperation if the second operand cannot be converted exactly.</source>
          <target state="translated">この操作はコンテキストの影響を受けず、静かに行われます。例外として、Cバージョンでは、2番目のオペランドが正確に変換できない場合、InvalidOperationが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="176ced1eb3f5bf8845c639dbb51a09e9508afa25" translate="yes" xml:space="preserve">
          <source>This option accepts a dictionary of key-value pairs which will be initially put in the &lt;code&gt;DEFAULT&lt;/code&gt; section. This makes for an elegant way to support concise configuration files that don&amp;rsquo;t specify values which are the same as the documented default.</source>
          <target state="translated">このオプションは、最初に &lt;code&gt;DEFAULT&lt;/code&gt; セクションに配置されるキーと値のペアの辞書を受け入れます。これは、文書化されたデフォルトと同じ値を指定しない簡潔な構成ファイルをサポートするための洗練された方法になります。</target>
        </trans-unit>
        <trans-unit id="f43ed818af4a0dd2fed506e4816b93171f3fb141" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported.</source>
          <target state="translated">このオプションを使用すると、子プロセスのステータスが最後に報告されてからジョブ制御の停止から継続されている場合、子プロセスが報告されます。</target>
        </trans-unit>
        <trans-unit id="4c173be1061ff8f92789c6a05bd6547238cbee92" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped.</source>
          <target state="translated">このオプションを使用すると、子プロセスが停止しているが、停止してから現在の状態が報告されていない場合に、子プロセスが報告されます。</target>
        </trans-unit>
        <trans-unit id="bd25c253ae0fbe8dac6cdfa6da993ae2705ef862" translate="yes" xml:space="preserve">
          <source>This option has a major impact on how the mapping protocol will behave and how the written configuration files look. With the standard dictionary, every section is stored in the order they were added to the parser. Same goes for options within sections.</source>
          <target state="translated">このオプションは、マッピングプロトコルがどのように動作するか、そして書かれた設定ファイルがどのように見えるかに大きな影響を与えます。標準の辞書では、すべてのセクションはパーサに追加された順に格納されます。セクション内のオプションについても同様です。</target>
        </trans-unit>
        <trans-unit id="16c96f0e42e4f0bff3231f79690ddc19085854f5" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.0.0 and later.</source>
          <target state="translated">このオプションは OpenSSL 1.0.0 以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="72bc5dd56d04de1e5181cb11caa2002a31734fdb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.0h and later.</source>
          <target state="translated">このオプションはOpenSSL 1.1.1.0h以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="bebfe076248522a6111b1310b00379d95c7a89fb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.1 and later.</source>
          <target state="translated">このオプションはOpenSSL 1.1.1.1以降でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="6c8bc57c8b0475c7eb59cb85bd797fcf73565e85" translate="yes" xml:space="preserve">
          <source>This option is useful when the &lt;code&gt;.pycs&lt;/code&gt; are kept up to date by some system external to Python like a build system.</source>
          <target state="translated">このオプションは、ビルドシステムなど、Pythonの外部にあるシステムによって &lt;code&gt;.pycs&lt;/code&gt; が最新の状態に保たれている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4e1bd246b58f88c014640c5eb110fa16e17dbeb9" translate="yes" xml:space="preserve">
          <source>This package aims to provide complete access to all tables in an &lt;code&gt;.msi&lt;/code&gt; file, therefore, it is a fairly low-level API. Two primary applications of this package are the &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; command &lt;code&gt;bdist_msi&lt;/code&gt;, and the creation of Python installer package itself (although that currently uses a different version of &lt;code&gt;msilib&lt;/code&gt;).</source>
          <target state="translated">このパッケージは、 &lt;code&gt;.msi&lt;/code&gt; ファイル内のすべてのテーブルへの完全なアクセスを提供することを目的としているため、かなり低レベルのAPIです。このパッケージの2つの主要なアプリケーションは、&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;コマンド &lt;code&gt;bdist_msi&lt;/code&gt; と、Pythonインストーラーパッケージ自体の作成です（ただし、現在は異なるバージョンの &lt;code&gt;msilib&lt;/code&gt; を使用しています）。</target>
        </trans-unit>
        <trans-unit id="2f59df83b2650e44df89565daa6593f433915b0b" translate="yes" xml:space="preserve">
          <source>This package provides the following functionality via its public API.</source>
          <target state="translated">本パッケージは、その公開APIを介して以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="a4dcd679549a3569e0d901cdbbb0b336792e6f5b" translate="yes" xml:space="preserve">
          <source>This page contains only reference information. For tutorials, please see</source>
          <target state="translated">このページでは、参考情報のみを掲載しています。チュートリアルについては</target>
        </trans-unit>
        <trans-unit id="99d5b0c64faa9b400278e91ba69343a0b5046a2b" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">このページには、APIリファレンス情報が含まれています。Pythonコマンドライン解析のより穏やかな紹介については、&lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparseチュートリアルをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10edc2184324079f85e7a47bf8d611be4bbb02bb" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">このページには、APIリファレンス情報が含まれています。Pythonコマンドライン解析のより穏やかな紹介については、&lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparseチュートリアルをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d57afe6c7c2f694060b1b6dc9dffd606c3e2bd5d" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For tutorial information and discussion of more advanced topics, see</source>
          <target state="translated">このページには、API リファレンス情報が含まれています。チュートリアルの情報やより高度なトピックについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="abd99e93d1788287c10945f7bf1a3b651f0e4bbc" translate="yes" xml:space="preserve">
          <source>This page lists all high-level async/await enabled asyncio APIs.</source>
          <target state="translated">このページでは、上位レベルの async/await が有効な asyncio API の一覧を表示しています。</target>
        </trans-unit>
        <trans-unit id="af36919b0eb5898742194c69e579c9121a244ce2" translate="yes" xml:space="preserve">
          <source>This page lists all low-level asyncio APIs.</source>
          <target state="translated">このページでは、すべての低レベル非同期APIの一覧を表示しています。</target>
        </trans-unit>
        <trans-unit id="c59bcfe5efc3f66dd12c6e8c605fc2ec05d0ca87" translate="yes" xml:space="preserve">
          <source>This page lists common mistakes and traps and explains how to avoid them.</source>
          <target state="translated">このページでは、よくある間違いやトラップを一覧にして、その回避方法を解説しています。</target>
        </trans-unit>
        <trans-unit id="6a649998fc13cbb981eec7f1d51e9b5c806a8076" translate="yes" xml:space="preserve">
          <source>This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element.</source>
          <target state="translated">このパーサは、終了タグが開始タグと一致するかどうかをチェックしたり、外部要素を閉じることで暗黙的に閉じられている要素の終了タグハンドラを呼び出したりしません。</target>
        </trans-unit>
        <trans-unit id="251eac7a50085ef7a42d5d72edffe30c06f0d3d5" translate="yes" xml:space="preserve">
          <source>This password manager extends &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; to support tracking URIs for which authentication credentials should always be sent.</source>
          <target state="translated">このパスワードマネージャは&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt;を拡張して、認証資格情報を常に送信する必要があるURIの追跡をサポートします。</target>
        </trans-unit>
        <trans-unit id="83824ec275a8bb0657762c62de305421c239b1c7" translate="yes" xml:space="preserve">
          <source>This pointer is initialized to point to an array of &lt;code&gt;struct _frozen&lt;/code&gt; records, terminated by one whose members are all &lt;code&gt;NULL&lt;/code&gt; or zero. When a frozen module is imported, it is searched in this table. Third-party code could play tricks with this to provide a dynamically created collection of frozen modules.</source>
          <target state="translated">このポインターは、 &lt;code&gt;struct _frozen&lt;/code&gt; レコードの配列を指すように初期化され、メンバーがすべて &lt;code&gt;NULL&lt;/code&gt; またはゼロのレコードで終了します。凍結されたモジュールがインポートされると、このテーブルで検索されます。サードパーティのコードはこれを使ってトリックを実行し、動的に作成された凍結モジュールのコレクションを提供できます。</target>
        </trans-unit>
        <trans-unit id="8a179a8b88966d1778c24d39e80f26cc93c31609" translate="yes" xml:space="preserve">
          <source>This policy adds new header parsing and folding algorithms. Instead of simple strings, headers are &lt;code&gt;str&lt;/code&gt; subclasses with attributes that depend on the type of the field. The parsing and folding algorithm fully implement &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">このポリシーは、新しいヘッダー解析および折りたたみアルゴリズムを追加します。ヘッダーは単純な文字列ではなく、フィールドのタイプに依存する属性を持つ &lt;code&gt;str&lt;/code&gt; サブクラスです。解析および折りたたみアルゴリズムは、&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322を&lt;/strong&gt;&lt;/a&gt;完全に実装し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6e3ec424cca6a1dcde14079306440b52ccfa4d39" translate="yes" xml:space="preserve">
          <source>This produces output similar to that of the traceback module for the frames retrieved by &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt;によって取得されたフレームのトレースバックモジュールと同様の出力が生成されます。</target>
        </trans-unit>
        <trans-unit id="c993a95e1beba698427bfb2774b0a105ae89b003" translate="yes" xml:space="preserve">
          <source>This protocol is not available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSLが &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; フラグでコンパイルされている場合、このプロトコルは使用できません。</target>
        </trans-unit>
        <trans-unit id="616b13c085995e597cd4f60e683f235ef1464679" translate="yes" xml:space="preserve">
          <source>This protocol is not be available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSLが &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; フラグでコンパイルされている場合、このプロトコルは使用できません。</target>
        </trans-unit>
        <trans-unit id="d167c001e1794993e4c845fbc35891fc1ca3d578" translate="yes" xml:space="preserve">
          <source>This puts &lt;code&gt;_()&lt;/code&gt; only in the module&amp;rsquo;s global namespace and so only affects calls within this module.</source>
          <target state="translated">これは &lt;code&gt;_()&lt;/code&gt; をモジュールのグローバル名前空間にのみ置くため、このモジュール内の呼び出しにのみ影響します。</target>
        </trans-unit>
        <trans-unit id="cacca8764589cad4c523153eeccabc264b42124e" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the SQLite database &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object. A &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object created by calling &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;con.cursor()&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; attribute that refers to &lt;em&gt;con&lt;/em&gt;:</source>
          <target state="translated">この読み取り専用属性は、&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるSQLiteデータベース&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;提供します。&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;con.cursor()&lt;/code&gt; &lt;/a&gt;を呼び出して作成された&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;オブジェクトには、&lt;em&gt;con&lt;/em&gt;を参照する&lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt;属性があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="766c9f726ec4bbbc98ce6f105956610ea36d9b5f" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the column names of the last query. To remain compatible with the Python DB API, it returns a 7-tuple for each column where the last six items of each tuple are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この読み取り専用属性は、最後のクエリの列名を提供します。Python DB APIとの互換性を維持するために、各列の7タプルを返します。各タプルの最後の6項目は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="09fc30cd152b579e4003b8e0468f289306536886" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the rowid of the last modified row. It is only set if you issued an &lt;code&gt;INSERT&lt;/code&gt; or a &lt;code&gt;REPLACE&lt;/code&gt; statement using the &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. For operations other than &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;REPLACE&lt;/code&gt; or when &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; is called, &lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt;&lt;code&gt;lastrowid&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この読み取り専用属性は、最後に変更された行のROWIDを提供します。&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;メソッドを使用して &lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;REPLACE&lt;/code&gt; ステートメントを発行した場合にのみ設定されます。以外の操作のために &lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;REPLACE&lt;/code&gt; または場合&lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; が&lt;/a&gt;呼び出され、&lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt; &lt;code&gt;lastrowid&lt;/code&gt; &lt;/a&gt;に設定されている&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80fda9d9d63e8a7fa3866afb84364c7cd8db4b60" translate="yes" xml:space="preserve">
          <source>This read-only attribute returns the callback currently associated to the weakref. If there is no callback or if the referent of the weakref is no longer alive then this attribute will have value &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">この読み取り専用属性は、現在weakrefに関連付けられているコールバックを返します。コールバックがない場合、またはweakrefのリファレントが有効でない場合、この属性の値は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="48d8bbbbed6be36e2bb950ba0b30ddd5b2449618" translate="yes" xml:space="preserve">
          <source>This read-only variable is true when the ctypes data instance has allocated the memory block itself, false otherwise.</source>
          <target state="translated">この読み取り専用変数は、ctypesデータインスタンスがメモリブロック自体を確保した場合に真、そうでない場合に偽となります。</target>
        </trans-unit>
        <trans-unit id="2d68cee5805da902a83d5bfa711dcff56eea7130" translate="yes" xml:space="preserve">
          <source>This relies on the Python interpreter to print the traceback. The content type of the output is set to plain text, which disables all HTML processing. If your script works, the raw HTML will be displayed by your client. If it raises an exception, most likely after the first two lines have been printed, a traceback will be displayed. Because no HTML interpretation is going on, the traceback will be readable.</source>
          <target state="translated">これはPythonインタプリタに依存してトレースバックを出力します。出力のコンテンツタイプはプレーンテキストに設定されており、これはすべてのHTML処理を無効にします。スクリプトが動作した場合、クライアントには生の HTML が表示されます。例外が発生した場合は、おそらく最初の 2 行が印刷された後にトレースバックが表示されます。HTML の解釈は行われないので、トレースバックは読めるようになります。</target>
        </trans-unit>
        <trans-unit id="c21c6510876040958744e60b431038eb6290b8f1" translate="yes" xml:space="preserve">
          <source>This represents the &lt;em&gt;total&lt;/em&gt; offset from UTC; for example, if a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; object represents both time zone and DST adjustments, &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; should return their sum. If the UTC offset isn&amp;rsquo;t known, return &lt;code&gt;None&lt;/code&gt;. Else the value returned must be a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt; (the magnitude of the offset must be less than one day). Most implementations of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">これはUTCからの&lt;em&gt;合計&lt;/em&gt;オフセットを表します。たとえば、&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;オブジェクトがタイムゾーンとDSTの両方の調整を表す場合、utcoffset &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;はそれらの合計を返す必要があります。 UTCオフセットがわからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。そうでない場合、返される値は、厳密に &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; と &lt;code&gt;timedelta(hours=24)&lt;/code&gt; の間の&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトでなければなりません（オフセットの大きさは1日未満でなければなりません）。&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; の&lt;/a&gt;ほとんどの実装は、おそらく次の2つのいずれかのようになります。</target>
        </trans-unit>
        <trans-unit id="ae2c026eab6c38212209d3da1f20eaeb88618525" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">この要件は、以前は&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;などの抽象基本クラスにも適用されていました。このアプローチの問題は、クラスを明示的にマークしてそれらをサポートする必要があることです。これは非Pythonicであり、通常の動的型付けPythonコードで行うこととは異なります。たとえば、これは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484に&lt;/strong&gt;&lt;/a&gt;準拠しています。</target>
        </trans-unit>
        <trans-unit id="1db8b2b926d15fc9e5ff1b54f85ea91e17397161" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">この要件は、以前は&lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;などの抽象基本クラスにも適用されていました。このアプローチの問題は、クラスをサポートするために明示的にマークを付ける必要があることです。これは非Pythonであり、慣用的な動的に型指定されたPythonコードで通常行うこととは異なります。たとえば、この準拠&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="60d45c7cbcfc14553d15cc0afc5a5f55832cec95" translate="yes" xml:space="preserve">
          <source>This returns a 2-tuple composed of a numeric response code and the actual response line (multiline responses are joined into one long line.)</source>
          <target state="translated">これは、数値応答コードと実際の応答行からなる2つのタプルを返します(複数行の応答は1つの長い行に結合されます)。</target>
        </trans-unit>
        <trans-unit id="ce494d42bf1945c6104888625a79831961bfb6b8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; instance mapping registered file objects to their associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">これにより、登録されたファイルオブジェクトを関連する&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスにマッピングする&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="0ae1bfe78d9078946a543d2e004e8f2f33fc9494" translate="yes" xml:space="preserve">
          <source>This returns a list of &lt;code&gt;(key, events)&lt;/code&gt; tuples, one for each ready file object.</source>
          <target state="translated">これは、 &lt;code&gt;(key, events)&lt;/code&gt; タプルのリストを、準備ができたファイルオブジェクトごとに1つ返します。</target>
        </trans-unit>
        <trans-unit id="a2461b890b46eff3e71a389342294683221b3c10" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is already registered.</source>
          <target state="translated">これは新しい&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、無効なイベントマスクまたはファイル記述子の場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を、ファイルオブジェクトがすでに登録されている場合は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="f0af5f9c7d1e79bede98658b4c1872446e368501" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">これは新しい&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスを返すか、無効なイベントマスクまたはファイル記述子の場合は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を、ファイルオブジェクトが登録されていない場合は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="7ac3d8ec4193515be3bfc7e4584bb1a898663843" translate="yes" xml:space="preserve">
          <source>This returns the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance associated to this file object, or raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">これにより、このファイルオブジェクトに関連付けられた&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;インスタンスが返されます。ファイルオブジェクトが登録されていない場合は、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9c8889dc6fd5ab529008f5a135efbc51515a1644" translate="yes" xml:space="preserve">
          <source>This returns the associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is not registered. It will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is invalid (e.g. it has no &lt;code&gt;fileno()&lt;/code&gt; method or its &lt;code&gt;fileno()&lt;/code&gt; method has an invalid return value).</source>
          <target state="translated">この戻り関連&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; の&lt;/a&gt;インスタンス、または上げる&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外を&lt;/a&gt;場合&lt;em&gt;もしfileobjが&lt;/em&gt;登録されていません。これは、発生します&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;場合&lt;em&gt;はfileobjが&lt;/em&gt;無効である（例えば、それは何もしてい &lt;code&gt;fileno()&lt;/code&gt; メソッドまたはその &lt;code&gt;fileno()&lt;/code&gt; メソッドは、無効な戻り値はありません）。</target>
        </trans-unit>
        <trans-unit id="890171d76d69be7da385c6150dad06c5b69eae30" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基になる&lt;a href=&quot;select#select.devpoll&quot;&gt; &lt;code&gt;select.devpoll()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="54137bf7adca252cdc57e4289272b49bb029a9a7" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基礎となる&lt;a href=&quot;select#select.epoll&quot;&gt; &lt;code&gt;select.epoll()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="51d90f09c2ffca4ed06478c9f1bdb12b3c85819c" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは、基礎となる&lt;a href=&quot;select#select.kqueue&quot;&gt; &lt;code&gt;select.kqueue()&lt;/code&gt; &lt;/a&gt;オブジェクトによって使用されるファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="58106684b347e2251ea09e0272c882c066c7dccd" translate="yes" xml:space="preserve">
          <source>This returns the value unchanged. To the type checker this signals that the return value has the designated type, but at runtime we intentionally don&amp;rsquo;t check anything (we want this to be as fast as possible).</source>
          <target state="translated">これは値を変更せずに返します。型チェッカーに対して、これは戻り値が指定された型を持っていることを通知しますが、実行時には意図的に何もチェックしません（これを可能な限り高速にする必要があります）。</target>
        </trans-unit>
        <trans-unit id="dce193572792ff4f49cc2515deda79b3d1240361" translate="yes" xml:space="preserve">
          <source>This routine adds various parameters required for WSGI, including &lt;code&gt;HTTP_HOST&lt;/code&gt;, &lt;code&gt;SERVER_NAME&lt;/code&gt;, &lt;code&gt;SERVER_PORT&lt;/code&gt;, &lt;code&gt;REQUEST_METHOD&lt;/code&gt;, &lt;code&gt;SCRIPT_NAME&lt;/code&gt;, &lt;code&gt;PATH_INFO&lt;/code&gt;, and all of the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;-defined &lt;code&gt;wsgi.*&lt;/code&gt; variables. It only supplies default values, and does not replace any existing settings for these variables.</source>
          <target state="translated">このルーチンは、 &lt;code&gt;HTTP_HOST&lt;/code&gt; 、 &lt;code&gt;SERVER_NAME&lt;/code&gt; 、 &lt;code&gt;SERVER_PORT&lt;/code&gt; 、 &lt;code&gt;REQUEST_METHOD&lt;/code&gt; 、 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 、 &lt;code&gt;PATH_INFO&lt;/code&gt; 、およびすべての&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;定義の &lt;code&gt;wsgi.*&lt;/code&gt; 変数を含む、WSGIに必要なさまざまなパラメーターを追加します。デフォルト値のみを提供し、これらの変数の既存の設定を置き換えません。</target>
        </trans-unit>
        <trans-unit id="b8c17ece425d1c53c1e6d2e295e3ffa164046a05" translate="yes" xml:space="preserve">
          <source>This routine allows/disallows the SQLite engine to load SQLite extensions from shared libraries. SQLite extensions can define new functions, aggregates or whole new virtual table implementations. One well-known extension is the fulltext-search extension distributed with SQLite.</source>
          <target state="translated">このルーチンは、SQLite エンジンが共有ライブラリから SQLite 拡張機能をロードすることを許可/禁止します。SQLite 拡張機能は、新しい関数、集約、あるいは全く新しい仮想テーブルの実装を定義することができます。よく知られている拡張機能としては、SQLite で配布されている全文検索拡張があります。</target>
        </trans-unit>
        <trans-unit id="d1123f885c50d2316ac2017015f6afc8da26ba45" translate="yes" xml:space="preserve">
          <source>This routine is intended to make it easier for unit tests of WSGI servers and applications to set up dummy environments. It should NOT be used by actual WSGI servers or applications, since the data is fake!</source>
          <target state="translated">このルーチンは、WSGIサーバやアプリケーションのユニットテストでダミー環境を簡単に設定できるようにすることを目的としています。データは偽物なので、実際のWSGIサーバやアプリケーションでは使用しないでください。</target>
        </trans-unit>
        <trans-unit id="378be7eabaecd105cf27a5a5348d58ac5d4009b6" translate="yes" xml:space="preserve">
          <source>This routine loads a SQLite extension from a shared library. You have to enable extension loading with &lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt;&lt;code&gt;enable_load_extension()&lt;/code&gt;&lt;/a&gt; before you can use this routine.</source>
          <target state="translated">このルーチンは、共有ライブラリからSQLite拡張機能をロードします。このルーチンを使用する前に、&lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt; &lt;code&gt;enable_load_extension()&lt;/code&gt; &lt;/a&gt;を使用して拡張機能のロードを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="d788abec338f0943063ad095afb2980ab498b313" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for each attempt to access a column of a table in the database. The callback should return &lt;code&gt;SQLITE_OK&lt;/code&gt; if access is allowed, &lt;code&gt;SQLITE_DENY&lt;/code&gt; if the entire SQL statement should be aborted with an error and &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; if the column should be treated as a NULL value. These constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このルーチンはコールバックを登録します。コールバックは、データベース内のテーブルの列にアクセスしようとするたびに呼び出されます。コールバックは返す必要があり &lt;code&gt;SQLITE_OK&lt;/code&gt; をアクセスが許可されている場合、 &lt;code&gt;SQLITE_DENY&lt;/code&gt; を SQL文全体がエラーとで中止されるべきかどう &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; 列がNULL値として扱われるべき場合。これらの定数は&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールで利用できます。</target>
        </trans-unit>
        <trans-unit id="c9474baef0d262e49cda55fd848e1f843ac1d207" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for every &lt;em&gt;n&lt;/em&gt; instructions of the SQLite virtual machine. This is useful if you want to get called from SQLite during long-running operations, for example to update a GUI.</source>
          <target state="translated">このルーチンはコールバックを登録します。コールバックは、SQLite仮想マシンの&lt;em&gt;n個の&lt;/em&gt;命令ごとに呼び出されます。これは、GUIの更新など、長時間実行される操作中にSQLiteから呼び出される場合に便利です。</target>
        </trans-unit>
        <trans-unit id="215de7d536e14c0ec534e867eb0bed570485a76d" translate="yes" xml:space="preserve">
          <source>This runs faster than the &lt;a href=&quot;#statistics.mean&quot;&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt; function and it always returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable. If the input dataset is empty, raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#statistics.mean&quot;&gt; &lt;code&gt;mean()&lt;/code&gt; &lt;/a&gt;関数よりも高速に実行され、常に&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; を&lt;/a&gt;返します。&lt;em&gt;データは、&lt;/em&gt;シーケンスまたは反復可能であってもよいです。入力データセットが空の場合、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="31740e1f356225e9527182782ab65f90aa3b3442" translate="yes" xml:space="preserve">
          <source>This script is also available for download &lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;online&lt;/a&gt;.</source>
          <target state="translated">このスクリプトは、&lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;オンライン&lt;/a&gt;でダウンロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="362b81a476a7e91e404db2c61e0da0c0266fd8f5" translate="yes" xml:space="preserve">
          <source>This search path is used when resolving dependencies for imported extension modules (the module itself is resolved through sys.path), and also by &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この検索パスは、インポートされた拡張モジュールの依存関係を解決するときに使用され（モジュール自体はsys.pathによって解決されます）、また&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;によっても使用されます。</target>
        </trans-unit>
        <trans-unit id="a1987d966d658e949051757623c7980ace367f55" translate="yes" xml:space="preserve">
          <source>This section contains examples of the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; syntax and comparison with the old &lt;code&gt;%&lt;/code&gt;-formatting.</source>
          <target state="translated">このセクションには、&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;構文の例と、古い &lt;code&gt;%&lt;/code&gt; フォーマットとの比較が含まれています。</target>
        </trans-unit>
        <trans-unit id="caa21db1421dcf117cd37e0c3689b0534dd1eafd" translate="yes" xml:space="preserve">
          <source>This section describes high-level async/await asyncio APIs to create and manage subprocesses.</source>
          <target state="translated">ここでは、サブプロセスを作成・管理するための高レベルのasync/await asyncio APIについて説明します。</target>
        </trans-unit>
        <trans-unit id="d7a523d820ebe70975810d89173fdd5eb434fe64" translate="yes" xml:space="preserve">
          <source>This section describes in depth the API of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;のAPIについて詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="558b5a3c6d2df134347c7df16cc29ff8ad425934" translate="yes" xml:space="preserve">
          <source>This section describes some examples and recipes for making effective use of the tools provided by &lt;a href=&quot;#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; が&lt;/a&gt;提供するツールを効果的に使用するためのいくつかの例とレシピについて説明します。</target>
        </trans-unit>
        <trans-unit id="be3c37b9d39743f5da99e8a42612440f3ba28e7b" translate="yes" xml:space="preserve">
          <source>This section describes the API for configuring the logging module.</source>
          <target state="translated">ここでは、ロギングモジュールを設定するためのAPIについて説明します。</target>
        </trans-unit>
        <trans-unit id="156a697bb0d3f10fd45e11f2465ce109feb52348" translate="yes" xml:space="preserve">
          <source>This section describes the conformance requirements and relationships between the Python DOM API, the W3C DOM recommendations, and the OMG IDL mapping for Python.</source>
          <target state="translated">このセクションでは、Python DOM API、W3C DOMの推奨事項、Python用のOMG IDLマッピングのコンフォーマンス要件と関係性について説明します。</target>
        </trans-unit>
        <trans-unit id="8eeef4df7928680ba8f67bceaa4a14542597b485" translate="yes" xml:space="preserve">
          <source>This section discusses the performance of the provided concrete I/O implementations.</source>
          <target state="translated">このセクションでは、提供される具体的なI/O実装の性能について説明します。</target>
        </trans-unit>
        <trans-unit id="607b3cfb7c46b7d396eba60d31432af9f7d8f677" translate="yes" xml:space="preserve">
          <source>This section documents the objects and functions in the &lt;code&gt;ssl&lt;/code&gt; module; for more general information about TLS, SSL, and certificates, the reader is referred to the documents in the &amp;ldquo;See Also&amp;rdquo; section at the bottom.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;ssl&lt;/code&gt; モジュールのオブジェクトと関数について説明します。TLS、SSL、および証明書に関するより一般的な情報については、下部にある「関連項目」セクションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1c30eb3669356c7ec4ccfc215134676b33af7b3b" translate="yes" xml:space="preserve">
          <source>This section examines in detail how doctest works: which docstrings it looks at, how it finds interactive examples, what execution context it uses, how it handles exceptions, and how option flags can be used to control its behavior. This is the information that you need to know to write doctest examples; for information about actually running doctest on these examples, see the following sections.</source>
          <target state="translated">このセクションでは、doctest がどのように動作するのか、どの docstring を参照するのか、どのようにして対話型の例を見つけるのか、どのような実行コンテキストを使用するのか、どのように例外を処理するのか、オプションフラグを使用してどのように動作を制御するのかなど、doctest がどのように動作するのかを詳しく調べます。これは、doctest の例を書くために必要な情報です。これらの例で実際に doctest を実行するための情報については、以下のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="70f26576b84f9e9c7ebedde34306a5ad087e6144" translate="yes" xml:space="preserve">
          <source>This section is designed in two parts: the first half (roughly) covers background material, while the second half can be taken to the keyboard as a handy reference.</source>
          <target state="translated">このセクションは2つのパートに分かれていて、前半は(大まかには)背景となる素材をカバーし、後半はキーボードに持っていくと便利な参考資料として活用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="1c854e243687db6fd2cf2c930ede6e8b64a9ed2f" translate="yes" xml:space="preserve">
          <source>This section is not designed to be an exhaustive tutorial on either Tk or Tkinter. Rather, it is intended as a stop gap, providing some introductory orientation on the system.</source>
          <target state="translated">このセクションは、Tk や Tkinter の完全なチュートリアルではありません。むしろ、システムについての入門的なオリエンテーションを提供するためのストップギャップとして意図されています。</target>
        </trans-unit>
        <trans-unit id="0fbf10a91d27928b5c7b954152fd9b94bd39c230" translate="yes" xml:space="preserve">
          <source>This section is provided for users that &amp;ldquo;don&amp;rsquo;t want to read the manual.&amp;rdquo; It provides a very brief overview, and allows a user to rapidly perform profiling on an existing application.</source>
          <target state="translated">このセクションは、「マニュアルを読みたくない」ユーザー向けに提供されています。これは非常に簡単な概要を提供し、ユーザーが既存のアプリケーションのプロファイリングを迅速に実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="6c5cd0414177de92e7fbb94b4034b625efcfd646" translate="yes" xml:space="preserve">
          <source>This section outlines high-level asyncio APIs to work with coroutines and Tasks.</source>
          <target state="translated">このセクションでは、コルーチンやタスクを操作するための高レベルのasyncio APIの概要を説明します。</target>
        </trans-unit>
        <trans-unit id="defa96b3e88910bfa50682641b6305dc34fca129" translate="yes" xml:space="preserve">
          <source>This section presents a simple example of how to build a shell around a few of the commands in the &lt;a href=&quot;turtle#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;turtle#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;モジュールのいくつかのコマンドの周りにシェルを構築する方法の簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="b0f81d28be12207c741e0c33582bce94a49c9adc" translate="yes" xml:space="preserve">
          <source>This section shows recipes and best practices for using &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; to manage a basic level of security.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;を使用して基本レベルのセキュリティを管理するためのレシピとベストプラクティスを示します。</target>
        </trans-unit>
        <trans-unit id="d526a5a648c94cb75fcf6517b2a94c66d6c77c00" translate="yes" xml:space="preserve">
          <source>This section shows recipes for creating an extended toolset using the existing itertools as building blocks.</source>
          <target state="translated">このセクションでは、既存の itertools をビルディングブロックとして使用して拡張ツールセットを作成するためのレシピを紹介します。</target>
        </trans-unit>
        <trans-unit id="1383ac76a2854ebc53757848481beccc1c9891e8" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with chained maps.</source>
          <target state="translated">このセクションでは、連鎖したマップを扱うためのさまざまなアプローチを示します。</target>
        </trans-unit>
        <trans-unit id="df040f46fd980279c14fec4cda4247fcf05f72ef" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with deques.</source>
          <target state="translated">ここでは、dequesを使って作業するための様々なアプローチを紹介します。</target>
        </trans-unit>
        <trans-unit id="4dd9bc73a0d82a9e97e43369211ae46a3180915d" translate="yes" xml:space="preserve">
          <source>This sets the locale for all categories to the user&amp;rsquo;s default setting (typically specified in the &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; environment variable). If the locale is not changed thereafter, using multithreading should not cause problems.</source>
          <target state="translated">これにより、すべてのカテゴリのロケールがユーザーのデフォルト設定に設定されます（通常、 &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; 環境変数で指定されます）。その後ロケールが変更されない場合、マルチスレッドを使用しても問題は発生しません。</target>
        </trans-unit>
        <trans-unit id="c45721624d3fcb370f2be8569bbab61c3319b06b" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">この設定は、クライアントソケットには適用されません。&lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt;オプションを使用して、セキュリティをさらに向上させることもできます。</target>
        </trans-unit>
        <trans-unit id="3ce459a925e80a56c1e647868604b4bf0d8366d6" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">この設定は、クライアントソケットには適用されません。&lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt;オプションを使用して、セキュリティをさらに向上させることもできます。</target>
        </trans-unit>
        <trans-unit id="e6fed8d315800e6b3b887f29c56368c13c909c37" translate="yes" xml:space="preserve">
          <source>This setting is thread-specific.</source>
          <target state="translated">この設定はスレッド固有のものです。</target>
        </trans-unit>
        <trans-unit id="de8230cad107c382f2cb44a434b139507f3975fb" translate="yes" xml:space="preserve">
          <source>This should be the first call after the connection to the server has been made. It sends a line to the server consisting of the &lt;em&gt;method&lt;/em&gt; string, the &lt;em&gt;url&lt;/em&gt; string, and the HTTP version (&lt;code&gt;HTTP/1.1&lt;/code&gt;). To disable automatic sending of &lt;code&gt;Host:&lt;/code&gt; or &lt;code&gt;Accept-Encoding:&lt;/code&gt; headers (for example to accept additional content encodings), specify &lt;em&gt;skip_host&lt;/em&gt; or &lt;em&gt;skip_accept_encoding&lt;/em&gt; with non-False values.</source>
          <target state="translated">これは、サーバーへの接続が行われた後の最初の呼び出しでなければなりません。&lt;em&gt;メソッド&lt;/em&gt;文字列、&lt;em&gt;URL&lt;/em&gt;文字列、HTTPバージョン（ &lt;code&gt;HTTP/1.1&lt;/code&gt; ）で構成される行をサーバーに送信します。 &lt;code&gt;Host:&lt;/code&gt; または &lt;code&gt;Accept-Encoding:&lt;/code&gt; ヘッダーの自動送信を無効にするには（たとえば、追加のコンテンツエンコーディングを受け入れるため）、False以外の値で&lt;em&gt;skip_host&lt;/em&gt;または&lt;em&gt;skip_accept_encoding&lt;/em&gt;を指定します。</target>
        </trans-unit>
        <trans-unit id="5f7c62680666d8d0354a70774b620f0cfc3a23c2" translate="yes" xml:space="preserve">
          <source>This should not be reported to Python applications.</source>
          <target state="translated">これはPythonアプリケーションに報告すべきではありません。</target>
        </trans-unit>
        <trans-unit id="bd3d85e3d37c9e73e52b13fff11ec91a95c5f8b7" translate="yes" xml:space="preserve">
          <source>This should produce the same results as those gotten from installing the &lt;code&gt;cgi.py&lt;/code&gt; file itself.</source>
          <target state="translated">これにより、 &lt;code&gt;cgi.py&lt;/code&gt; ファイル自体をインストールした場合と同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="a2f5181e6bc07cf2a06e008b2962ada26e303b7c" translate="yes" xml:space="preserve">
          <source>This should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; representing all the tests from the package. (&lt;code&gt;standard_tests&lt;/code&gt; will only contain tests collected from &lt;code&gt;__init__.py&lt;/code&gt;.)</source>
          <target state="translated">これにより、パッケージのすべてのテストを表す&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;が返されます。（ &lt;code&gt;standard_tests&lt;/code&gt; には、 &lt;code&gt;__init__.py&lt;/code&gt; から収集されたテストのみが含まれます。）</target>
        </trans-unit>
        <trans-unit id="b617419bf001641a41f3ee636896b8e09558569d" translate="yes" xml:space="preserve">
          <source>This simple example implements a basic read-eval-print loop, similar to (but less useful than) the standard Python interactive interpreter loop. For a more complete implementation of the interpreter loop, refer to the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">この簡単な例は、標準のPythonインタラクティブインタープリターループに似ていますが（あまり有用ではありません）、基本的なread-eval-printループを実装しています。インタプリタループのより完全な実装については、&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="1fad110fec75f0f6958a041c1017071a503dd913" translate="yes" xml:space="preserve">
          <source>This simple example shows how an application can use object IDs to retrieve objects that it has seen before. The IDs of the objects can then be used in other data structures without forcing the objects to remain alive, but the objects can still be retrieved by ID if they do.</source>
          <target state="translated">この単純な例は、アプリケーションがオブジェクトIDを使って、以前に見たことのあるオブジェクトを取得する方法を示しています。その後、オブジェクトのIDは、オブジェクトを強制的に生きたままにすることなく、他のデータ構造体で使用することができますが、もし生きたままにしても、オブジェクトはIDで検索することができます。</target>
        </trans-unit>
        <trans-unit id="98547658e0e1aab7962e8a30c8538b1ef6afdfc8" translate="yes" xml:space="preserve">
          <source>This site is the focal point for the definition of the SAX API. It provides a Java implementation and online documentation. Links to implementations and historical information are also available.</source>
          <target state="translated">このサイトは、SAX APIの定義の中心となるサイトです。Javaの実装とオンラインドキュメントを提供しています。実装や過去の情報へのリンクもあります。</target>
        </trans-unit>
        <trans-unit id="401b694add20f94820e8cb3c498a29fb6a883ca9" translate="yes" xml:space="preserve">
          <source>This situation is common for example when a form contains a group of multiple checkboxes with the same name:</source>
          <target state="translated">このような状況は、例えば、フォームに同じ名前の複数のチェックボックスのグループが含まれている場合によく見られます。</target>
        </trans-unit>
        <trans-unit id="79ca8c995a5a4457b8793fa31ef3820b296c6a65" translate="yes" xml:space="preserve">
          <source>This solution is as safe as &lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt;&lt;code&gt;MultiLoopChildWatcher&lt;/code&gt;&lt;/a&gt; and has the same &lt;em&gt;O(N)&lt;/em&gt; complexity but requires a running event loop in the main thread to work.</source>
          <target state="translated">このソリューションは&lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt; &lt;code&gt;MultiLoopChildWatcher&lt;/code&gt; &lt;/a&gt;と同じくらい安全で、&lt;em&gt;O（N）の&lt;/em&gt;複雑度は同じですが、機能するためにはメインスレッドで実行中のイベントループが必要です。</target>
        </trans-unit>
        <trans-unit id="d82fa37f6f5ce4f1b03930450505a16588bbb64a" translate="yes" xml:space="preserve">
          <source>This solution requires a running event loop in the main thread to work, as &lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt;&lt;code&gt;SafeChildWatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソリューションでは、&lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt; &lt;code&gt;SafeChildWatcher&lt;/code&gt; の&lt;/a&gt;ように機能するために、メインスレッドで実行中のイベントループが必要です。</target>
        </trans-unit>
        <trans-unit id="0b1dd4e320021de44deafa76cdbbf7a1d713f5e8" translate="yes" xml:space="preserve">
          <source>This sorts the profile by cumulative time in a function, and then only prints the ten most significant lines. If you want to understand what algorithms are taking time, the above line is what you would use.</source>
          <target state="translated">これは、関数内の累積時間でプロファイルをソートし、最も重要な10行だけを表示します。どのようなアルゴリズムで時間がかかっているかを理解したい場合は、上の行を使うことになります。</target>
        </trans-unit>
        <trans-unit id="87ad4d93ff10f22be77fdd674b33ad9054193f5c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されると抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="8129c233d78f17359a870def3539e6e911d0906c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されると抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="211e4437395fb7d3eacf45324b984e92d0566c05" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;デコレータが抽象メソッドに適用されたときに抽象として正しく識別されるようになったため、この特別なケースは廃止されました。</target>
        </trans-unit>
        <trans-unit id="279114bff60b44dfc0066ad46c397c25064a129c" translate="yes" xml:space="preserve">
          <source>This specification defines a Uniform Resource Name namespace for UUIDs, the internal format of UUIDs, and methods of generating UUIDs.</source>
          <target state="translated">本仕様では、UUIDのためのUniform Resource Name名前空間、UUIDの内部フォーマット、UUIDの生成方法を定義する。</target>
        </trans-unit>
        <trans-unit id="874696978cd5bbb1087717ab3332b7f732497e0c" translate="yes" xml:space="preserve">
          <source>This specifies the HTTP protocol version used in responses. If set to &lt;code&gt;'HTTP/1.1'&lt;/code&gt;, the server will permit HTTP persistent connections; however, your server &lt;em&gt;must&lt;/em&gt; then include an accurate &lt;code&gt;Content-Length&lt;/code&gt; header (using &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt;) in all of its responses to clients. For backwards compatibility, the setting defaults to &lt;code&gt;'HTTP/1.0'&lt;/code&gt;.</source>
          <target state="translated">これは、応答で使用されるHTTPプロトコルのバージョンを指定します。 &lt;code&gt;'HTTP/1.1'&lt;/code&gt; に設定すると、サーバーはHTTP永続接続を許可します。ただし、サーバー&lt;em&gt;は&lt;/em&gt;、クライアントへのすべての応答に正確な &lt;code&gt;Content-Length&lt;/code&gt; ヘッダー（&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;を使用）を含める&lt;em&gt;必要があり&lt;/em&gt;ます。下位互換性のために、設定はデフォルトで &lt;code&gt;'HTTP/1.0'&lt;/code&gt; になっています。</target>
        </trans-unit>
        <trans-unit id="4926906ff6c9d731dd2502d835a0c4a022613e00" translate="yes" xml:space="preserve">
          <source>This specifies the formal syntax and semantics of absolute URLs.</source>
          <target state="translated">これは、絶対 URL の形式的な構文とセマンティクスを指定します。</target>
        </trans-unit>
        <trans-unit id="b12ecdf4a18691d61f1d7860cd0959f3b286fd24" translate="yes" xml:space="preserve">
          <source>This specifies the mapping from OMG IDL to Python.</source>
          <target state="translated">OMG IDLからPythonへのマッピングを指定します。</target>
        </trans-unit>
        <trans-unit id="8da551d8221388503358b7d9ca2bc9f174bf5895" translate="yes" xml:space="preserve">
          <source>This specifies the parsing requirements of IPv6 URLs.</source>
          <target state="translated">これは、IPv6のURLのパース要件を指定します。</target>
        </trans-unit>
        <trans-unit id="93065c605eefe1a69ebb1b6bc29b80656e394208" translate="yes" xml:space="preserve">
          <source>This stack model is used so that context managers that acquire their resources in their &lt;code&gt;__init__&lt;/code&gt; method (such as file objects) can be handled correctly.</source>
          <target state="translated">このスタックモデルは、 &lt;code&gt;__init__&lt;/code&gt; メソッドでリソースを取得するコンテキストマネージャー（ファイルオブジェクトなど）を正しく処理できるようにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="657b165eabad3ef2110a1d6933accdc767db077c" translate="yes" xml:space="preserve">
          <source>This starts up a background thread to monitor the queue for LogRecords to process.</source>
          <target state="translated">これは、処理するLogRecordsのキューを監視するためのバックグラウンドスレッドを起動します。</target>
        </trans-unit>
        <trans-unit id="cfff9554c5adbc575949e5e35567b44b13814573" translate="yes" xml:space="preserve">
          <source>This statement assumes that you use the appropriate setting for &lt;code&gt;unixfrom&lt;/code&gt;, and that there are no &lt;code&gt;policy&lt;/code&gt; settings calling for automatic adjustments (for example, &lt;code&gt;refold_source&lt;/code&gt; must be &lt;code&gt;none&lt;/code&gt;, which is &lt;em&gt;not&lt;/em&gt; the default). It is also not 100% true, since if the message does not conform to the RFC standards occasionally information about the exact original text is lost during parsing error recovery. It is a goal to fix these latter edge cases when possible.</source>
          <target state="translated">このステートメントは、 &lt;code&gt;unixfrom&lt;/code&gt; に適切な設定を使用し、自動調整を要求する &lt;code&gt;policy&lt;/code&gt; 設定がないことを前提としています（たとえば、 &lt;code&gt;refold_source&lt;/code&gt; は &lt;code&gt;none&lt;/code&gt; でなければならず、これはデフォルトではあり&lt;em&gt;ません&lt;/em&gt;）。また、メッセージがRFC標準に準拠していない場合、正確な元のテキストに関する情報が解析エラーの回復中に失われることがあるので、これも100％正しいわけではありません。これらの後者のエッジケースを可能な限り修正することが目標です。</target>
        </trans-unit>
        <trans-unit id="5695000d7ff7e5630ab5bb3f278a09531558042e" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">この静的メソッドは、&lt;em&gt;from&lt;/em&gt;内の各文字を&lt;em&gt;to&lt;/em&gt;内の同じ位置にある文字にマッピングする&lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt;で使用可能な変換テーブルを返します。&lt;em&gt;from&lt;/em&gt;と&lt;em&gt;to&lt;/em&gt;は両方とも&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;で、同じ長さでなければなりません。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="806daec20accc2ba95a0d761aa1cdcf46a17a2f4" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">この静的メソッドは、&lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt;で使用可能な変換テーブルを返します。このテーブルは、&lt;em&gt;からの&lt;/em&gt;各文字を&lt;em&gt;から&lt;/em&gt;の同じ位置にある文字にマップ&lt;em&gt;し&lt;/em&gt;ます。&lt;em&gt;from&lt;/em&gt;と&lt;em&gt;to&lt;/em&gt;は両方とも&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;であり、同じ長さである必要があります。</target>
        </trans-unit>
        <trans-unit id="fed93affb82c475aece27560d7f7449f85bbe008" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この静的メソッドは、&lt;a href=&quot;#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; で&lt;/a&gt;使用できる変換テーブルを返します。</target>
        </trans-unit>
        <trans-unit id="ee1038a57ec92220c32f002317d973e94a4e405f" translate="yes" xml:space="preserve">
          <source>This string contains a platform identifier that can be used to append platform-specific components to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, for instance.</source>
          <target state="translated">この文字列には、たとえばプラットフォーム固有のコンポーネントを&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に追加するために使用できるプラットフォーム識別子が含まれています。</target>
        </trans-unit>
        <trans-unit id="ee8ef044d471590e32de3b3a685514869bb11594" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt;&lt;code&gt;HTMLCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt; &lt;code&gt;HTMLCalendar&lt;/code&gt; の&lt;/a&gt;このサブクラスは、コンストラクターでロケール名を渡すことができ、指定されたロケールで月名と曜日名を返します。このロケールにエンコードが含まれている場合、月と曜日の名前を含むすべての文字列がUnicodeとして返されます。</target>
        </trans-unit>
        <trans-unit id="dbc4f4107eee8222a6f5a5aa58cd266674093796" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar&quot;&gt; &lt;code&gt;TextCalendar&lt;/code&gt; の&lt;/a&gt;このサブクラスは、コンストラクターでロケール名を渡すことができ、指定されたロケールで月名と曜日名を返します。このロケールにエンコードが含まれている場合、月と曜日の名前を含むすべての文字列がUnicodeとして返されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
