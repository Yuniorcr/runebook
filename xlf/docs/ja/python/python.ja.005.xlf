<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="92ce4122d833f9368b375ed599693656c33c96d1" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding formatted tracebacks. Each tuple represents an expected failure of the test case.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、フォーマットされたトレースバックを保持する文字列を含むリスト。各タプルは、テストケースの予想される失敗を表します。</target>
        </trans-unit>
        <trans-unit id="adfc2fa69598f416edc0906695c6be2768745dd0" translate="yes" xml:space="preserve">
          <source>A list containing 2-tuples of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances and strings holding the reason for skipping the test.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスの2タプルと、テストをスキップした理由を保持する文字列を含むリスト。</target>
        </trans-unit>
        <trans-unit id="188f395714c720911bcc2d078055feb553b62673" translate="yes" xml:space="preserve">
          <source>A list containing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances that were marked as expected failures, but succeeded.</source>
          <target state="translated">予想される失敗としてマークされたが成功した&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;インスタンスを含むリスト。</target>
        </trans-unit>
        <trans-unit id="c0894abf939ae74d3fdc742c584302b8dc3eaffa" translate="yes" xml:space="preserve">
          <source>A list containing zero or more of the following values, specifying which elements of the tree to display.</source>
          <target state="translated">以下の値を0個以上含むリストで、ツリーのどの要素を表示するかを指定します。</target>
        </trans-unit>
        <trans-unit id="94f3ab44b984a41d4a3ccc3bca5a60821aa9485b" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; objects encoding the individual interactive Python examples that should be run by this test.</source>
          <target state="translated">このテストで実行する必要がある個々のインタラクティブなPythonサンプルをエンコードする&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="0d08717c624c36bc99bc8e887e88fc336daf55a9" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects in any combination may be used to set the value of an address header. &lt;code&gt;Group&lt;/code&gt; objects whose &lt;code&gt;display_name&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; will be interpreted as single addresses, which allows an address list to be copied with groups intact by using the list obtained from the &lt;code&gt;groups&lt;/code&gt; attribute of the source header.</source>
          <target state="translated">任意の組み合わせの&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;オブジェクトのリストを使用して、アドレスヘッダーの値を設定できます。 &lt;code&gt;display_name&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; である &lt;code&gt;Group&lt;/code&gt; オブジェクトは単一のアドレスとして解釈されます。これにより、ソースヘッダーの &lt;code&gt;groups&lt;/code&gt; 属性から取得したリストを使用して、アドレスリストをグループとともにそのままコピーできます。</target>
        </trans-unit>
        <trans-unit id="ada6c9c5f870014a4ae30f28b8753d03af7735b7" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; objects that have their &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; methods called to see if one of the objects can find the module to be imported. The &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method is called with at least the absolute name of the module being imported. If the module to be imported is contained in a package, then the parent package&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute is passed in as a second argument. The method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;module spec&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; if the module cannot be found.</source>
          <target state="translated">オブジェクトの1つがインポートするモジュールを見つけることができるかどうかを確認するために呼び出される&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドを持つ&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダー&lt;/a&gt;オブジェクトのリスト。&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドは、モジュールの少なくとも絶対名がインポートされると呼び出されます。インポートされるモジュールがパッケージに含まれている場合、親パッケージの&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性が2番目の引数として渡されます。この方法は、返し&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;モジュール仕様&lt;/a&gt;、又は &lt;code&gt;None&lt;/code&gt; モジュールが見つからない場合。</target>
        </trans-unit>
        <trans-unit id="5a687cdf67708e7c7576598a8408f14e371fffb4" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt; objects that have their &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; methods called to see if one of the objects can find the module to be imported. The &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method is called with at least the absolute name of the module being imported. If the module to be imported is contained in a package, then the parent package&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute is passed in as a second argument. The method returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;module spec&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; if the module cannot be found.</source>
          <target state="translated">オブジェクトの1つがインポートするモジュールを見つけることができるかどうかを確認するために&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出される&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダー&lt;/a&gt;オブジェクトのリスト。&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;メソッドは、モジュールの少なくとも絶対名がインポートされると呼び出されます。インポートするモジュールがパッケージに含まれている場合、親パッケージの&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性が2番目の引数として渡されます。この方法は、返し&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;モジュール仕様&lt;/a&gt;、又は &lt;code&gt;None&lt;/code&gt; モジュールが見つからない場合。</target>
        </trans-unit>
        <trans-unit id="31344a02e0993784eb4314acf41022e52a1a17f1" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;logging.LogRecord&lt;/code&gt;&lt;/a&gt; objects of the matching log messages.</source>
          <target state="translated">一致するログメッセージの&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;logging.LogRecord&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="dd17bfbaf0a82494b417e354a5e60123f1b11077" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects with the formatted output of matching messages.</source>
          <target state="translated">一致するメッセージのフォーマットされた出力を含む&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="f382ed1cd68dc0c07b20c325e25f04c393461059" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Class&lt;/code&gt; objects which describe the immediate base classes of the class being described. Classes which are named as superclasses but which are not discoverable by &lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt;&lt;code&gt;readmodule_ex()&lt;/code&gt;&lt;/a&gt; are listed as a string with the class name instead of as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="translated">記述されているクラスの直接の基本クラスを記述する &lt;code&gt;Class&lt;/code&gt; オブジェクトのリスト。スーパークラスとして名前が付けられているが、&lt;a href=&quot;#pyclbr.readmodule_ex&quot;&gt; &lt;code&gt;readmodule_ex()&lt;/code&gt; で&lt;/a&gt;検出できないクラスは、 &lt;code&gt;Class&lt;/code&gt; オブジェクトではなく、クラス名の文字列としてリストされます。</target>
        </trans-unit>
        <trans-unit id="47e533d8c9734517f922eaa86b233a289db98c40" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for each weekday. The default class list is:</source>
          <target state="translated">各平日に使用されるCSSクラスのリストです。デフォルトのクラスリストは</target>
        </trans-unit>
        <trans-unit id="f1a68bfed08eae06f51e410f31837e77785239f9" translate="yes" xml:space="preserve">
          <source>A list of CSS classes used for weekday names in the header row. The default is the same as &lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt;&lt;code&gt;cssclasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ヘッダー行の曜日名に使用されるCSSクラスのリスト。デフォルトは&lt;a href=&quot;#calendar.HTMLCalendar.cssclasses&quot;&gt; &lt;code&gt;cssclasses&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="87a9c1cff0e92a561ec91ae2846827451ae8540a" translate="yes" xml:space="preserve">
          <source>A list of available password hashing algorithms, as &lt;code&gt;crypt.METHOD_*&lt;/code&gt; objects. This list is sorted from strongest to weakest.</source>
          <target state="translated">&lt;code&gt;crypt.METHOD_*&lt;/code&gt; オブジェクトとして使用可能なパスワードハッシュアルゴリズムのリスト。このリストは、強いものから弱いものへとソートされています。</target>
        </trans-unit>
        <trans-unit id="d4f1daea5804e5e781af546c944a5553086ec691" translate="yes" xml:space="preserve">
          <source>A list of callables that take a path argument to try to create a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the path. If a finder can be created, it is to be returned by the callable, else raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パス引数を取り、パスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;を作成しようとする呼び出し可能オブジェクトのリスト。ファインダーを作成できる場合は、呼び出し可能オブジェクトによって返されます。それ以外の場合は、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2ef2e26a4d2864c665752fb7ac9f1799ea126f47" translate="yes" xml:space="preserve">
          <source>A list of callables that take a path argument to try to create a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; for the path. If a finder can be created, it is to be returned by the callable, else raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パス引数を取り、パスの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;ファインダー&lt;/a&gt;を作成しようとする呼び出し可能オブジェクトのリスト。ファインダーを作成できる場合は、呼び出し可能オブジェクトによって返されます。それ以外の場合は、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9aa433c04e75fc5d0459fb3bb364f4a060cf42ad" translate="yes" xml:space="preserve">
          <source>A list of callbacks that will be invoked by the garbage collector before and after collection. The callbacks will be called with two arguments, &lt;em&gt;phase&lt;/em&gt; and &lt;em&gt;info&lt;/em&gt;.</source>
          <target state="translated">コレクションの前後にガベージコレクターによって呼び出されるコールバックのリスト。コールバックは、2つの引数&lt;em&gt;phase&lt;/em&gt;および&lt;em&gt;info&lt;/em&gt;で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f2afc2ea3d64112d083cf30feb15db3adce93b83" translate="yes" xml:space="preserve">
          <source>A list of column identifiers (either symbolic or integer indices) specifying which data columns are displayed and the order in which they appear, or the string &amp;ldquo;#all&amp;rdquo;.</source>
          <target state="translated">表示するデータ列とそれらが表示される順序を指定する列識別子（シンボリックまたは整数インデックス）のリスト、または文字列&amp;ldquo; #all&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7eff5051ae865a63b9215b5c89488de87ae79f0b" translate="yes" xml:space="preserve">
          <source>A list of column identifiers, specifying the number of columns and their names.</source>
          <target state="translated">カラムの数と名前を指定したカラム識別子のリスト。</target>
        </trans-unit>
        <trans-unit id="d767335b2be7662adb8adfd8712db1b5ba4f4fbe" translate="yes" xml:space="preserve">
          <source>A list of functions performing the individual tests. Each function takes two arguments: the byte-stream and an open file-like object. When &lt;a href=&quot;#imghdr.what&quot;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt; is called with a byte-stream, the file-like object will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">個々のテストを実行する関数のリスト。各関数は2つの引数を取ります。バイトストリームと開いているファイルのようなオブジェクトです。ときに&lt;a href=&quot;#imghdr.what&quot;&gt; &lt;code&gt;what()&lt;/code&gt; &lt;/a&gt;バイトストリームと呼ばれ、ファイルのようなオブジェクトはなくなります &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90bcc915bd04cdb632928857939a6c56be976e99" translate="yes" xml:space="preserve">
          <source>A list of nodes contained within this node. This is a read-only attribute.</source>
          <target state="translated">このノード内に含まれるノードのリスト。これは読み取り専用の属性です。</target>
        </trans-unit>
        <trans-unit id="3950e8dfdad0ea53153e00b8e9e9d18c3a29eec5" translate="yes" xml:space="preserve">
          <source>A list of objects which the collector found to be unreachable but could not be freed (uncollectable objects). Starting with Python 3.4, this list should be empty most of the time, except when using instances of C extension types with a non-&lt;code&gt;NULL&lt;/code&gt;&lt;code&gt;tp_del&lt;/code&gt; slot.</source>
          <target state="translated">コレクターが到達不能であるが解放できなかったオブジェクト（収集不能オブジェクト）のリスト。Python 3.4以降、このリストは、 &lt;code&gt;NULL&lt;/code&gt; 以外の &lt;code&gt;tp_del&lt;/code&gt; スロットでC拡張型のインスタンスを使用する場合を除いて、ほとんどの場合空である必要があります。</target>
        </trans-unit>
        <trans-unit id="3bc6fc267d7341a3dcca08f8f142ac83a4167a96" translate="yes" xml:space="preserve">
          <source>A list of prefixes for site-packages directories.</source>
          <target state="translated">サイトパッケージディレクトリの接頭辞のリスト。</target>
        </trans-unit>
        <trans-unit id="8edcb62be232dfd25220d722b6ae22369868ca48" translate="yes" xml:space="preserve">
          <source>A list of queued input lines. The cmdqueue list is checked in &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; when new input is needed; if it is nonempty, its elements will be processed in order, as if entered at the prompt.</source>
          <target state="translated">キューに入れられた入力行のリスト。新しい入力が必要な場合、&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;でcmdqueueリストがチェックされます。空でない場合は、プロンプトで入力した場合と同様に、その要素が順番に処理されます。</target>
        </trans-unit>
        <trans-unit id="fb8177ae3293211d97584d172648ced9f6fff7c8" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for non-optimized bytecode modules.</source>
          <target state="translated">最適化されていないバイトコードモジュールのファイルサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="3901675df8d6b190ed77ea1e703d8525bebca340" translate="yes" xml:space="preserve">
          <source>A list of strings representing the file suffixes for optimized bytecode modules.</source>
          <target state="translated">最適化されたバイトコードモジュールのファイルサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="a653aca2c57d0c3018c089c4391cde970a1bbfd7" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for bytecode modules (including the leading dot).</source>
          <target state="translated">バイトコードモジュールで認識されるファイルのサフィックスを表す文字列のリスト (先頭のドットを含む)。</target>
        </trans-unit>
        <trans-unit id="e918f4be66d93295cae4c211f62265b0072c2822" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for extension modules.</source>
          <target state="translated">拡張モジュールで認識されるファイルのサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="165229fe605da7021efe8ebd3919626a177ba5a3" translate="yes" xml:space="preserve">
          <source>A list of strings representing the recognized file suffixes for source modules.</source>
          <target state="translated">ソースモジュールの認識されたファイルのサフィックスを表す文字列のリスト。</target>
        </trans-unit>
        <trans-unit id="2cf2baab931f8fd28ffb46163df67eb66c87370c" translate="yes" xml:space="preserve">
          <source>A list of strings specifying the search path within a package. This attribute is not set on modules.</source>
          <target state="translated">パッケージ内の検索パスを指定する文字列のリスト。この属性はモジュールには設定されません。</target>
        </trans-unit>
        <trans-unit id="36c4a5205fd3c16296e139d621087e8e76a326e3" translate="yes" xml:space="preserve">
          <source>A list of strings that specifies the search path for modules. Initialized from the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;, plus an installation-dependent default.</source>
          <target state="translated">モジュールの検索パスを指定する文字列のリスト。環境変数&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-20&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;と、インストールに依存するデフォルトから初期化されます。</target>
        </trans-unit>
        <trans-unit id="11e214fc1bbf3dd50b6a799acce78790260b5aeb" translate="yes" xml:space="preserve">
          <source>A list of strings that specifies the search path for modules. Initialized from the environment variable &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-21&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;, plus an installation-dependent default.</source>
          <target state="translated">モジュールの検索パスを指定する文字列のリスト。環境変数&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-21&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;から初期化され、さらにインストールに依存するデフォルト。</target>
        </trans-unit>
        <trans-unit id="e38561310e8e0218b9a575b157f0c75333b56def" translate="yes" xml:space="preserve">
          <source>A list of tags associated with this item.</source>
          <target state="translated">このアイテムに関連するタグのリスト。</target>
        </trans-unit>
        <trans-unit id="a379ac6f7bfa199dd4ac1bbe2caea169d4e2a31f" translate="yes" xml:space="preserve">
          <source>A list of the non-fatal errors encountered while loading tests. Not reset by the loader at any point. Fatal errors are signalled by the relevant a method raising an exception to the caller. Non-fatal errors are also indicated by a synthetic test that will raise the original error when run.</source>
          <target state="translated">テストの読み込み中に発生した致命的でないエラーのリスト。どの時点でもローダによってリセットされません。致命的なエラーは、関連するメソッドが呼び出し元に例外を発生させることで通知されます。致命的でないエラーは、実行時に元のエラーを発生させる合成テストによっても示されます。</target>
        </trans-unit>
        <trans-unit id="2b1ad6875b827765bc4d0e85d4c9d9f95c0e168f" translate="yes" xml:space="preserve">
          <source>A list of the path&amp;rsquo;s file extensions:</source>
          <target state="translated">パスのファイル拡張子のリスト：</target>
        </trans-unit>
        <trans-unit id="ee22e51ecfc4901c8fc7a981cfa5f560d71a4cb9" translate="yes" xml:space="preserve">
          <source>A list or tuple. &lt;code&gt;elts&lt;/code&gt; holds a list of nodes representing the elements. &lt;code&gt;ctx&lt;/code&gt; is &lt;a href=&quot;#ast.Store&quot;&gt;&lt;code&gt;Store&lt;/code&gt;&lt;/a&gt; if the container is an assignment target (i.e. &lt;code&gt;(x,y)=something&lt;/code&gt;), and &lt;a href=&quot;#ast.Load&quot;&gt;&lt;code&gt;Load&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">リストまたはタプル。 &lt;code&gt;elts&lt;/code&gt; は、要素を表すノードのリストを保持します。 &lt;code&gt;ctx&lt;/code&gt; は、コンテナが割り当てターゲット（つまり、 &lt;code&gt;(x,y)=something&lt;/code&gt; ）の場合は&lt;a href=&quot;#ast.Store&quot;&gt; &lt;code&gt;Store&lt;/code&gt; &lt;/a&gt;であり、それ以外の場合は&lt;a href=&quot;#ast.Load&quot;&gt; &lt;code&gt;Load&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="35d28cdab6aac704918e38261cdf6a53a6fb7875" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;'%'&lt;/code&gt; character.</source>
          <target state="translated">リテラルの &lt;code&gt;'%'&lt;/code&gt; 文字。</target>
        </trans-unit>
        <trans-unit id="f45f3263fd1db9d34d0d8644f2dd892d64f4f4b5" translate="yes" xml:space="preserve">
          <source>A long-running calculation implemented purely in C (such as regular expression matching on a large body of text) may run uninterrupted for an arbitrary amount of time, regardless of any signals received. The Python signal handlers will be called when the calculation finishes.</source>
          <target state="translated">純粋にC言語で実装された長時間の計算(大きなテキストの正規表現マッチングなど)は、受信したシグナルに関係なく、任意の時間だけ途切れることなく実行されるかもしれません。Python のシグナルハンドラは計算が終了すると呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cde11ed69a30e89ec49d6911501d20641f2ba597" translate="yes" xml:space="preserve">
          <source>A lot of the work, such as parsing the request, is done by the base class &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt;&lt;code&gt;do_HEAD()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">リクエストの解析などの多くの作業は、基本クラス&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;によって行われます。このクラスは、&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_HEAD&quot;&gt; &lt;code&gt;do_HEAD()&lt;/code&gt; &lt;/a&gt;関数を実装します。</target>
        </trans-unit>
        <trans-unit id="d1ae909d89ab42bf44a513d624eb1ef523783bbe" translate="yes" xml:space="preserve">
          <source>A mailbox, which may be inspected and modified.</source>
          <target state="translated">検査や改造が可能な郵便受け。</target>
        </trans-unit>
        <trans-unit id="f690a6cfc5ed4849083abceaf9fb872dd479f2d4" translate="yes" xml:space="preserve">
          <source>A manager object returned by &lt;code&gt;Manager()&lt;/code&gt; controls a server process which holds Python objects and allows other processes to manipulate them using proxies.</source>
          <target state="translated">&lt;code&gt;Manager()&lt;/code&gt; によって返されるマネージャーオブジェクトは、Pythonオブジェクトを保持するサーバープロセスを制御し、他のプロセスがプロキシを使用してそれらを操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="5acd53cfe7556a265e24f00273578e1e62cced28" translate="yes" xml:space="preserve">
          <source>A manager returned by &lt;code&gt;Manager()&lt;/code&gt; will support types &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt;&lt;code&gt;BoundedSemaphore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Value&quot;&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="translated">返されたマネージャー &lt;code&gt;Manager()&lt;/code&gt; のタイプをサポートする&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.managers.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.BoundedSemaphore&quot;&gt; &lt;code&gt;BoundedSemaphore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.Value&quot;&gt; &lt;code&gt;Value&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#multiprocessing.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。例えば、</target>
        </trans-unit>
        <trans-unit id="2360f8e6d7dd3571578211ddf621c1aaf733a19d" translate="yes" xml:space="preserve">
          <source>A mapping of &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVars&lt;/code&gt;&lt;/a&gt; to their values.</source>
          <target state="translated">&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVars&lt;/code&gt; &lt;/a&gt;とその値のマッピング。</target>
        </trans-unit>
        <trans-unit id="b196921d2c5d1abc5a5afde9b13792567f7149de" translate="yes" xml:space="preserve">
          <source>A marker object used by &lt;code&gt;Token.old_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token.old_value&lt;/code&gt; で使用されるマーカーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="691da017d29e7d257f6643136c76ae9eab8b4630" translate="yes" xml:space="preserve">
          <source>A memory buffer that can be used to pass data between Python and an SSL protocol instance.</source>
          <target state="translated">PythonとSSLプロトコルインスタンスの間でデータを渡すためのメモリバッファ。</target>
        </trans-unit>
        <trans-unit id="dcfbafa8ff3d1ab45e2f76a7aee96de1f4885c99" translate="yes" xml:space="preserve">
          <source>A memory-mapped file is created by the &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; constructor, which is different on Unix and on Windows. In either case you must provide a file descriptor for a file opened for update. If you wish to map an existing Python file object, use its &lt;code&gt;fileno()&lt;/code&gt; method to obtain the correct value for the &lt;em&gt;fileno&lt;/em&gt; parameter. Otherwise, you can open the file using the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function, which returns a file descriptor directly (the file still needs to be closed when done).</source>
          <target state="translated">メモリマップファイルは&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt;コンストラクターによって作成されますが、UnixとWindowsでは異なります。どちらの場合も、更新のために開かれたファイルのファイル記述子を提供する必要があります。既存のPythonファイルオブジェクトをマップする場合は、その &lt;code&gt;fileno()&lt;/code&gt; メソッドを使用して、&lt;em&gt;fileno&lt;/em&gt;パラメータの正しい値を取得します。それ以外の場合は、ファイル記述子を直接返す&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;関数を使用してファイルを開くことができます（完了時にファイルを閉じる必要があります）。</target>
        </trans-unit>
        <trans-unit id="4e07ad766453ae1f5c12fbab0efd96fbce9a5d6b" translate="yes" xml:space="preserve">
          <source>A memoryview and a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; exporter are equal if their shapes are equivalent and if all corresponding values are equal when the operands&amp;rsquo; respective format codes are interpreted using &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">メモリー構文と&lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt;エクスポーターは、それらの形状が同等であり、かつオペランドのそれぞれのフォーマットコードが&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;構文を使用して解釈されるときに、対応するすべての値が等しい場合に等しくなります。</target>
        </trans-unit>
        <trans-unit id="0505188cd402129bb7a1ceab0c1f8c415c35ac5c" translate="yes" xml:space="preserve">
          <source>A memoryview of contents of the shared memory block.</source>
          <target state="translated">共有メモリブロックの内容のメモリビュー。</target>
        </trans-unit>
        <trans-unit id="bbf17a083c2ede8f6b0db7056b90b9f1617ddecf" translate="yes" xml:space="preserve">
          <source>A message is typically moved from &lt;code&gt;new&lt;/code&gt; to &lt;code&gt;cur&lt;/code&gt; after its mailbox has been accessed, whether or not the message is has been read. A message &lt;code&gt;msg&lt;/code&gt; has been read if &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">メッセージは通常、メールボックスがアクセスされた後、メッセージが読み取られたかどうかに関係なく、 &lt;code&gt;new&lt;/code&gt; から &lt;code&gt;cur&lt;/code&gt; に移動されます。 &lt;code&gt;&quot;S&quot; in msg.get_flags()&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、メッセージ &lt;code&gt;msg&lt;/code&gt; が読み取られました。</target>
        </trans-unit>
        <trans-unit id="452a8fedc6a4cfd70d2adcb1b29d976bbeb804dc" translate="yes" xml:space="preserve">
          <source>A message with Babyl-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Babyl固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="ac149633a67c1c349439779dfb1ef3d4e3b0e937" translate="yes" xml:space="preserve">
          <source>A message with MH-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">MH固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="cef7580ce921c85b7e519a48bc0f3cd23bf7607c" translate="yes" xml:space="preserve">
          <source>A message with MMDF-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">MMDF固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="81468ce3b45d6d7e99a68708e9ac13d9a23d3a83" translate="yes" xml:space="preserve">
          <source>A message with Maildir-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Maildir固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="ca526acd0b34062c5d1268d50cde292996ba3b25" translate="yes" xml:space="preserve">
          <source>A message with mbox-specific behaviors. Parameter &lt;em&gt;message&lt;/em&gt; has the same meaning as with the &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">mbox固有の動作を伴うメッセージ。パラメータ&lt;em&gt;メッセージ&lt;/em&gt;は、&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;コンストラクタと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="7f0e485226b36c41138ec6944e1b8e8901ec04f2" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;Turtle.filling()&lt;/code&gt; has been added. It returns a boolean value: &lt;code&gt;True&lt;/code&gt; if a filling process is under way, &lt;code&gt;False&lt;/code&gt; otherwise. This behaviour corresponds to a &lt;code&gt;fill()&lt;/code&gt; call without arguments in Python 2.6.</source>
          <target state="translated">メソッド &lt;code&gt;Turtle.filling()&lt;/code&gt; が追加されました。ブール値を返します：充填プロセスが進行中の場合は &lt;code&gt;True&lt;/code&gt; 、そうでない場合は &lt;code&gt;False&lt;/code&gt; 。この動作は、Python 2.6の引数なしの &lt;code&gt;fill()&lt;/code&gt; 呼び出しに対応しています。</target>
        </trans-unit>
        <trans-unit id="fe7d757aac257898e222238cb09c16c1c5cda2df" translate="yes" xml:space="preserve">
          <source>A method for invalidating the cache on the &lt;code&gt;ZoneInfo&lt;/code&gt; class. If no arguments are passed, all caches are invalidated and the next call to the primary constructor for each key will return a new instance.</source>
          <target state="translated">&lt;code&gt;ZoneInfo&lt;/code&gt; クラスのキャッシュを無効にするためのメソッド。引数が渡されない場合、すべてのキャッシュが無効になり、各キーのプライマリコンストラクターへの次の呼び出しは新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="e81f8acd06e4d19e21298af0b2eca19918eec6c0" translate="yes" xml:space="preserve">
          <source>A method that returns the module object to use when importing a module. This method may return &lt;code&gt;None&lt;/code&gt;, indicating that default module creation semantics should take place.</source>
          <target state="translated">モジュールのインポート時に使用するモジュールオブジェクトを返すメソッド。このメソッドは &lt;code&gt;None&lt;/code&gt; を返し、デフォルトのモジュール作成セマンティクスが実行されることを示します。</target>
        </trans-unit>
        <trans-unit id="d11fab06ce0f5cc44bfa0f8d64053434db561c11" translate="yes" xml:space="preserve">
          <source>A millisecond is converted to 1000 microseconds.</source>
          <target state="translated">ミリ秒を1000マイクロ秒に換算しています。</target>
        </trans-unit>
        <trans-unit id="14694e387827ee5dbdefea0d931e26463c3f8af5" translate="yes" xml:space="preserve">
          <source>A minute is converted to 60 seconds.</source>
          <target state="translated">1分を60秒に換算しています。</target>
        </trans-unit>
        <trans-unit id="88a95c4ff9a21fc5643c68a07d0fcb56208d9afc" translate="yes" xml:space="preserve">
          <source>A mock intended to be used as a property, or other descriptor, on a class. &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; methods so you can specify a return value when it is fetched.</source>
          <target state="translated">クラスのプロパティまたはその他の記述子として使用するためのモック。&lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するため、フェッチ時に戻り値を指定できます。</target>
        </trans-unit>
        <trans-unit id="f9dc8264a0898bec8dca67eef59ff050ee07574c" translate="yes" xml:space="preserve">
          <source>A mock intended to be used as a property, or other descriptor, on a class. &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__get__&quot;&gt;&lt;code&gt;__get__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__set__&quot;&gt;&lt;code&gt;__set__()&lt;/code&gt;&lt;/a&gt; methods so you can specify a return value when it is fetched.</source>
          <target state="translated">クラスのプロパティまたはその他の記述子として使用することを目的としたモック。&lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__get__&quot;&gt; &lt;code&gt;__get__()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__set__&quot;&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するため、フェッチ時に戻り値を指定できます。</target>
        </trans-unit>
        <trans-unit id="197f9ad683c388bd841158b51e7273e923b68225" translate="yes" xml:space="preserve">
          <source>A moderately complicated example:</source>
          <target state="translated">適度に複雑な例。</target>
        </trans-unit>
        <trans-unit id="5fbdaa31ef1d3360856b509831015ce58c497ad4" translate="yes" xml:space="preserve">
          <source>A module can discover whether or not it is running in the main scope by checking its own &lt;code&gt;__name__&lt;/code&gt;, which allows a common idiom for conditionally executing code in a module when it is run as a script or with &lt;code&gt;python
-m&lt;/code&gt; but not when it is imported:</source>
          <target state="translated">モジュールは、独自の &lt;code&gt;__name__&lt;/code&gt; をチェックすることにより、メインスコープで実行されているかどうかを検出できます。これにより、スクリプトとして、または &lt;code&gt;python -m&lt;/code&gt; 実行したときに、モジュール内のコードを条件付きで実行するための一般的なイディオムが許可されますが、インポートされたときはできません。 ：</target>
        </trans-unit>
        <trans-unit id="9444c1785a75547c005580f49d28d47a17706636" translate="yes" xml:space="preserve">
          <source>A module to generate message authentication codes using hashes.</source>
          <target state="translated">ハッシュを用いてメッセージ認証コードを生成するモジュール。</target>
        </trans-unit>
        <trans-unit id="25b564dedd229417c2f008befd0d706d5d1c3d1c" translate="yes" xml:space="preserve">
          <source>A monograph (using Tcl terminology) about differences typically encountered when moving applications to use the new widgets.</source>
          <target state="translated">新しいウィジェットを使用するためにアプリケーションを移動する際に一般的に遭遇する違いについてのモノグラフ(Tcl用語を使用しています)。</target>
        </trans-unit>
        <trans-unit id="2cb0b17b5fe49d923ef10619bd2d761e2dba052d" translate="yes" xml:space="preserve">
          <source>A more convenient approach is to use the methods &lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt;&lt;code&gt;getfirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt;&lt;code&gt;getlist()&lt;/code&gt;&lt;/a&gt; provided by this higher level interface.</source>
          <target state="translated">より便利な方法は、この高レベルのインターフェースによって提供される&lt;a href=&quot;#cgi.FieldStorage.getfirst&quot;&gt; &lt;code&gt;getfirst()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt; &lt;code&gt;getlist()&lt;/code&gt; &lt;/a&gt;メソッドを使用することです。</target>
        </trans-unit>
        <trans-unit id="f606715ea58bd20affcb325cea977c8dc34c9e61" translate="yes" xml:space="preserve">
          <source>A more powerful form of &lt;em&gt;spec&lt;/em&gt; is &lt;em&gt;autospec&lt;/em&gt;. If you set &lt;code&gt;autospec=True&lt;/code&gt; then the mock will be created with a spec from the object being replaced. All attributes of the mock will also have the spec of the corresponding attribute of the object being replaced. Methods and functions being mocked will have their arguments checked and will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are called with the wrong signature. For mocks replacing a class, their return value (the &amp;lsquo;instance&amp;rsquo;) will have the same spec as the class. See the &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccing&lt;/a&gt;.</source>
          <target state="translated">より強力な&lt;em&gt;仕様の&lt;/em&gt;形式は&lt;em&gt;autospec&lt;/em&gt;です。 &lt;code&gt;autospec=True&lt;/code&gt; を設定すると、置き換えられるオブジェクトのスペックを使用してモックが作成されます。モックのすべての属性には、置き換えられるオブジェクトの対応する属性の仕様も含まれます。モックされているメソッドと関数は引数がチェックされ、間違った署名で呼び出された場合は&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生し&lt;/a&gt;ます。クラスを置き換えるモックの場合、その戻り値（「インスタンス」）はクラスと同じ仕様になります。&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#auto-speccing&quot;&gt;Autospeccingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5111e118ade6d2bc5c8e1c77f9aa6dc8faa44c02" translate="yes" xml:space="preserve">
          <source>A more realistic example would look like this:</source>
          <target state="translated">もっと現実的な例を挙げるとこんな感じになります。</target>
        </trans-unit>
        <trans-unit id="9a66936ddd1b236a8e403c390cda131ea3105877" translate="yes" xml:space="preserve">
          <source>A more robust alternative can be to define a finalizer which only references the specific functions and objects that it needs, rather than having access to the full state of the object:</source>
          <target state="translated">より堅牢な代替案として、オブジェクトの完全な状態にアクセスするのではなく、必要な特定の関数やオブジェクトのみを参照するファイナライザを定義することができます。</target>
        </trans-unit>
        <trans-unit id="dc61502b727e90ac4866b9d814e9fc1fc0b5f529" translate="yes" xml:space="preserve">
          <source>A more serious problem is that it is common for instance attributes to be created in the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method and not to exist on the class at all. &lt;em&gt;autospec&lt;/em&gt; can&amp;rsquo;t know about any dynamically created attributes and restricts the api to visible attributes.</source>
          <target state="translated">より深刻な問題は、インスタンス属性が&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドで作成され、クラスにまったく存在しないことが一般的であることです。&lt;em&gt;autospec&lt;/em&gt;は動的に作成された属性を&lt;em&gt;認識&lt;/em&gt;できず、APIを表示可能な属性に制限します。</target>
        </trans-unit>
        <trans-unit id="022217af59a7d8158b8db514a2ff8d38ae0aef37" translate="yes" xml:space="preserve">
          <source>A more serious problem is that it is common for instance attributes to be created in the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method and not to exist on the class at all. &lt;em&gt;autospec&lt;/em&gt; can&amp;rsquo;t know about any dynamically created attributes and restricts the api to visible attributes.</source>
          <target state="translated">さらに深刻な問題は、インスタンス属性が&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;メソッドで作成され、クラスにまったく存在しないことが一般的であるということです。&lt;em&gt;autospec&lt;/em&gt;は動的に作成された属性を&lt;em&gt;認識&lt;/em&gt;できず、APIを表示可能な属性に制限します。</target>
        </trans-unit>
        <trans-unit id="14c30e10b4c45f4fdcf93fef2be90b15a755a678" translate="yes" xml:space="preserve">
          <source>A multi-line statement may be given by specifying each line as a separate statement argument; indented lines are possible by enclosing an argument in quotes and using leading spaces. Multiple &lt;a href=&quot;#cmdoption-timeit-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; options are treated similarly.</source>
          <target state="translated">複数行のステートメントは、各行を個別のステートメント引数として指定することで指定できます。インデントされた行は、引数を引用符で囲み、先行スペースを使用することで可能です。複数の&lt;a href=&quot;#cmdoption-timeit-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;オプションは同様に扱われます。</target>
        </trans-unit>
        <trans-unit id="e22b35b571387aaed16a131c2e41b7861c259760" translate="yes" xml:space="preserve">
          <source>A mutable mapping of parameters&amp;rsquo; names to arguments&amp;rsquo; values. Contains only explicitly bound arguments. Changes in &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; will reflect in &lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt;&lt;code&gt;args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt;&lt;code&gt;kwargs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パラメータの名前から引数の値への変更可能なマッピング。明示的にバインドされた引数のみが含まれます。&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;変更は、&lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt; &lt;code&gt;args&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt; &lt;code&gt;kwargs&lt;/code&gt; に&lt;/a&gt;反映されます。</target>
        </trans-unit>
        <trans-unit id="71e6abbde7b8d36913a73085a08d7bdc4de74dfb" translate="yes" xml:space="preserve">
          <source>A mutex lock.</source>
          <target state="translated">ミューテックスロックです。</target>
        </trans-unit>
        <trans-unit id="078db6dab94291f0a68718c0a445aadb8d88ed56" translate="yes" xml:space="preserve">
          <source>A name which is linked to the option value. If specified, the value of the progress bar is automatically set to the value of this name whenever the latter is modified.</source>
          <target state="translated">オプション値に連動する名前。指定した場合、プログレスバーの値が変更されるたびに、この名前の値が自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="6794d9e2505d3f2e5dff1c6b084b0d32e0259383" translate="yes" xml:space="preserve">
          <source>A named expression. This AST node is produced by the assignment expressions operator (also known as the walrus operator). As opposed to the &lt;a href=&quot;#ast.Assign&quot;&gt;&lt;code&gt;Assign&lt;/code&gt;&lt;/a&gt; node in which the first argument can be multiple nodes, in this case both &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; must be single nodes.</source>
          <target state="translated">名前付き式。このASTノードは、代入式演算子（セイウチ演算子とも呼ばれます）によって生成されます。最初の引数を複数のノードにすることができる&lt;a href=&quot;#ast.Assign&quot;&gt; &lt;code&gt;Assign&lt;/code&gt; &lt;/a&gt;ノードとは対照的に、この場合、 &lt;code&gt;target&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 両方が単一のノードである必要があります。</target>
        </trans-unit>
        <trans-unit id="55c48426bea22866b8115740a6c2a7c42075e62c" translate="yes" xml:space="preserve">
          <source>A named tuple containing the three components of the ncurses library version: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, and &lt;em&gt;patch&lt;/em&gt;. All values are integers. The components can also be accessed by name, so &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; is equivalent to &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; and so on.</source>
          <target state="translated">ncursesライブラリバージョンの3つのコンポーネントを含む名前付きタプル：&lt;em&gt;major&lt;/em&gt;、&lt;em&gt;minor&lt;/em&gt;、および&lt;em&gt;patch&lt;/em&gt;。すべての値は整数です。コンポーネントには名前でアクセスすることもできるため、 &lt;code&gt;curses.ncurses_version[0]&lt;/code&gt; は &lt;code&gt;curses.ncurses_version.major&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="bc4f58d7428fdbe37d30d028fe13d12d2180f7d6" translate="yes" xml:space="preserve">
          <source>A namedtuple that holds a brief summary of a module&amp;rsquo;s info.</source>
          <target state="translated">モジュールの情報の簡単な要約を保持する名前付きタプル。</target>
        </trans-unit>
        <trans-unit id="72158d4426db39e0e4d103c3538715b0ee176f1c" translate="yes" xml:space="preserve">
          <source>A namespace for a function or method. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関数またはメソッドの名前空間。このクラスは&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="0311cf0abe88a0934a46b90b52373f3304204a2b" translate="yes" xml:space="preserve">
          <source>A namespace object has no public methods, but does have writable attributes. Its representation shows the values of its attributes.</source>
          <target state="translated">名前空間オブジェクトにはパブリック・メソッドはありませんが、書き込み可能な属性があります。その表現は、その属性の値を示します。</target>
        </trans-unit>
        <trans-unit id="edbf524e185c69846a3a4abd549e56f7ebc4b0c0" translate="yes" xml:space="preserve">
          <source>A namespace of a class. This class inherits &lt;a href=&quot;#symtable.SymbolTable&quot;&gt;&lt;code&gt;SymbolTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クラスの名前空間。このクラスは&lt;a href=&quot;#symtable.SymbolTable&quot;&gt; &lt;code&gt;SymbolTable&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="b2a64660a5b30d67efe5fed367964bb0e3c6f537" translate="yes" xml:space="preserve">
          <source>A namespace table for a block. The constructor is not public.</source>
          <target state="translated">ブロックの名前空間テーブル。コンストラクタはパブリックではありません。</target>
        </trans-unit>
        <trans-unit id="fa2eecff8d86240af243f0bd4af31ae2aa5fea1b" translate="yes" xml:space="preserve">
          <source>A negative value &lt;code&gt;-N&lt;/code&gt; indicates that the child was terminated by signal &lt;code&gt;N&lt;/code&gt; (POSIX only).</source>
          <target state="translated">負の値 &lt;code&gt;-N&lt;/code&gt; は、子がシグナル &lt;code&gt;N&lt;/code&gt; によって終了されたことを示します（POSIXのみ）。</target>
        </trans-unit>
        <trans-unit id="85390c873308f954877a6b491b2ffd8bd25849d2" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class must have one base Enum class, up to one concrete data type, and as many &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;-based mixin classes as needed. The order of these base classes is:</source>
          <target state="translated">新しい&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;クラスには、1つの基本Enumクラス、最大1つの具象データ型、および必要な数の&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;ベースのミックスインクラスが必要です。これらの基本クラスの順序は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cc186fde8acf9a6ebb42e1a3ac6b6d13c0924a62" translate="yes" xml:space="preserve">
          <source>A new array whose items are restricted by &lt;em&gt;typecode&lt;/em&gt;, and initialized from the optional &lt;em&gt;initializer&lt;/em&gt; value, which must be a list, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or iterable over elements of the appropriate type.</source>
          <target state="translated">項目が&lt;em&gt;typecode&lt;/em&gt;によって制限され、オプションの&lt;em&gt;初期化子&lt;/em&gt;値から初期化される新しい配列。これは、リスト、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、または適切な型の要素に対して反復可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6a3007c327ed2a72770ff0fc78595dbb8513a178" translate="yes" xml:space="preserve">
          <source>A new array whose items are restricted by &lt;em&gt;typecode&lt;/em&gt;, and initialized from the optional &lt;em&gt;initializer&lt;/em&gt; value, which must be a list, a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or iterable over elements of the appropriate type.</source>
          <target state="translated">項目が&lt;em&gt;タイプコード&lt;/em&gt;によって制限され、オプションの&lt;em&gt;初期化&lt;/em&gt;値から初期化される新しい配列。これは、リスト、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、または適切なタイプの要素に対して反復可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="f81c36f53fb29db71f41ab907332355f7d182eda" translate="yes" xml:space="preserve">
          <source>A nice feature of this sort is that you can efficiently insert new items while the sort is going on, provided that the inserted items are not &amp;ldquo;better&amp;rdquo; than the last 0&amp;rsquo;th element you extracted. This is especially useful in simulation contexts, where the tree holds all incoming events, and the &amp;ldquo;win&amp;rdquo; condition means the smallest scheduled time. When an event schedules other events for execution, they are scheduled into the future, so they can easily go into the heap. So, a heap is a good structure for implementing schedulers (this is what I used for my MIDI sequencer :-).</source>
          <target state="translated">このソートの優れた機能は、挿入されたアイテムが最後に抽出した0番目の要素よりも「良い」ものでなければ、ソートの進行中に新しいアイテムを効率的に挿入できることです。これは、ツリーがすべての受信イベントを保持するシミュレーションコンテキストで特に役立ちます。「win」条件は、スケジュールされた最小時間を意味します。イベントが他のイベントの実行をスケジュールする場合、それらは将来にスケジュールされるため、簡単にヒープに入ることができます。したがって、ヒープはスケジューラを実装するのに適した構造です（これが私のMIDIシーケンサに使用したものです:-)。</target>
        </trans-unit>
        <trans-unit id="9e3b6ed28c8d38433a40b858b74030f4808ae596" translate="yes" xml:space="preserve">
          <source>A nice selection of exceptions is defined as well:</source>
          <target state="translated">素敵な例外の選択も定義されています。</target>
        </trans-unit>
        <trans-unit id="7908e5fb359ed5ac5ef0d2533eb509744f0641d3" translate="yes" xml:space="preserve">
          <source>A node visitor base class that walks the abstract syntax tree and calls a visitor function for every node found. This function may return a value which is forwarded by the &lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt;&lt;code&gt;visit()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">抽象構文ツリーをたどり、見つかったすべてのノードのビジター関数を呼び出すノードビジター基本クラス。この関数は、&lt;a href=&quot;#ast.NodeVisitor.visit&quot;&gt; &lt;code&gt;visit()&lt;/code&gt; &lt;/a&gt;メソッドによって転送される値を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="bcff5c6e5fa686fae2d5599c1b2e80eb183fd626" translate="yes" xml:space="preserve">
          <source>A non-ASCII character encodable by &lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;os#os.fsencode&quot;&gt; &lt;code&gt;os.fsencode()&lt;/code&gt; でエンコード可能&lt;/a&gt;な非ASCII文字。</target>
        </trans-unit>
        <trans-unit id="9428ac03bb4a2f6c9cf42be05b489381aaa0a0a3" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; の&lt;/a&gt;呼び出し不可能なバージョン。</target>
        </trans-unit>
        <trans-unit id="896479390810c1db85db783aa18d9d0a12993c66" translate="yes" xml:space="preserve">
          <source>A non-callable version of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. The constructor parameters have the same meaning of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;em&gt;return_value&lt;/em&gt; and &lt;em&gt;side_effect&lt;/em&gt; which have no meaning on a non-callable mock.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; の&lt;/a&gt;呼び出し不可能なバージョン。コンストラクターパラメーターは&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;と同じ意味ですが、呼び出し不可能なモックでは意味を持たない&lt;em&gt;return_value&lt;/em&gt;と&lt;em&gt;side_effect&lt;/em&gt;は例外です。</target>
        </trans-unit>
        <trans-unit id="10ff4f7d10e3a93a3d1a37ab022e45964047c42b" translate="yes" xml:space="preserve">
          <source>A non-capturing version of regular parentheses. Matches whatever regular expression is inside the parentheses, but the substring matched by the group &lt;em&gt;cannot&lt;/em&gt; be retrieved after performing a match or referenced later in the pattern.</source>
          <target state="translated">通常の括弧の非キャプチャバージョン。括弧内の正規表現に一致しますが、グループに一致した部分文字列は、一致の実行後に取得したり、パターンで後で参照したり&lt;em&gt;できません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b6fab50bbf4b5f5cc024237fe4be2e580f495061" translate="yes" xml:space="preserve">
          <source>A non-existent handler id found during an incremental call.</source>
          <target state="translated">インクリメンタル呼び出し中に見つかった存在しないハンドラ ID。</target>
        </trans-unit>
        <trans-unit id="ff564abff91c1ddf39b73322568dc07eb6cdddc5" translate="yes" xml:space="preserve">
          <source>A non-recursive lock object: a close analog of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt;. Once a process or thread has acquired a lock, subsequent attempts to acquire it from any process or thread will block until it is released; any process or thread may release it. The concepts and behaviors of &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; as it applies to threads are replicated here in &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;multiprocessing.Lock&lt;/code&gt;&lt;/a&gt; as it applies to either processes or threads, except as noted.</source>
          <target state="translated">非再帰的なロックオブジェクト：&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; の&lt;/a&gt;類似物。プロセスまたはスレッドがロックを取得すると、その後プロセスまたはスレッドからロックを取得しようとしても、解放されるまでブロックされます。任意のプロセスまたはスレッドがそれを解放する可能性があります。&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;に適用されるthreading.Lockの概念と動作は、ここに記載されている場合を除き、プロセスまたはスレッドに適用されるため、ここで&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;multiprocessing.Lock&lt;/code&gt; に&lt;/a&gt;複製されます。</target>
        </trans-unit>
        <trans-unit id="10b063540ea72d17ad3a65c6b8fa5e5506f3d45b" translate="yes" xml:space="preserve">
          <source>A normal build &amp;amp; test does not run into this situation but it can happen when trying to run the standard library test suite from an interpreter that doesn&amp;rsquo;t have an obvious home with Python&amp;rsquo;s current home finding logic.</source>
          <target state="translated">通常のビルドとテストではこのような状況は発生しませんが、Pythonの現在のホーム検索ロジックを備えた明らかなホームを持たないインタープリターから標準ライブラリテストスイートを実行しようとすると、発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f21e999a31cb519fda4759011f3f8f4601461947" translate="yes" xml:space="preserve">
          <source>A note about &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;: this exception may occur elsewhere in this code, and may not always be caught. The caller should be prepared to deal with it.</source>
          <target state="translated">&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;に関する注意：この例外はこのコードの他の場所で発生する可能性があり、常にキャッチされるとは限りません。呼び出し側はそれに対処する準備をする必要があります。</target>
        </trans-unit>
        <trans-unit id="6118da4bdf7846158dea6e9addeee205b10e624b" translate="yes" xml:space="preserve">
          <source>A note on branch cuts: They are curves along which the given function fails to be continuous. They are a necessary feature of many complex functions. It is assumed that if you need to compute with complex functions, you will understand about branch cuts. Consult almost any (not too elementary) book on complex variables for enlightenment. For information of the proper choice of branch cuts for numerical purposes, a good reference should be the following:</source>
          <target state="translated">分岐カットについての注意点 これは、与えられた関数が連続しない曲線である。これは多くの複素関数の必要な機能です.複素関数を使って計算する必要がある場合は,枝切りについて理解していることが前提です.啓発のために,複素変数に関する(あまり初歩的ではない)ほとんどの本を参照してください.数値計算のための適切な枝切りの選択については,以下のようなものが参考になります.</target>
        </trans-unit>
        <trans-unit id="8ee90f29803eb8229a07515ffa9d573714dc7839" translate="yes" xml:space="preserve">
          <source>A null-terminated string.</source>
          <target state="translated">ヌル文字で終端する文字列。</target>
        </trans-unit>
        <trans-unit id="c13366fad5520b371df7f0cb744d4b882a5ce6dd" translate="yes" xml:space="preserve">
          <source>A number of Unix commands allow the user to intermix optional arguments with positional arguments. The &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt;&lt;code&gt;parse_known_intermixed_args()&lt;/code&gt;&lt;/a&gt; methods support this parsing style.</source>
          <target state="translated">多くのUnixコマンドにより、ユーザーはオプションの引数と位置引数を混在させることができます。&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt; &lt;code&gt;parse_known_intermixed_args()&lt;/code&gt; &lt;/a&gt;メソッドは、この解析スタイルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5905a2ee45fdf4d45451104b77e07c4287f696a0" translate="yes" xml:space="preserve">
          <source>A number of alterations are also made to the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; module. Firstly, &lt;code&gt;sys.path&lt;/code&gt; may be altered as described above. &lt;code&gt;sys.argv[0]&lt;/code&gt; is updated with the value of &lt;code&gt;file_path&lt;/code&gt; and &lt;code&gt;sys.modules[__name__]&lt;/code&gt; is updated with a temporary module object for the module being executed. All modifications to items in &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; are reverted before the function returns.</source>
          <target state="translated">&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;モジュールにも多くの変更が加えられています。まず、上記のように &lt;code&gt;sys.path&lt;/code&gt; を変更します。 &lt;code&gt;sys.argv[0]&lt;/code&gt; の値で更新され &lt;code&gt;file_path&lt;/code&gt; および &lt;code&gt;sys.modules[__name__]&lt;/code&gt; 実行中のモジュールのための一時的なモジュールオブジェクトで更新されます。&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; の&lt;/a&gt;項目に対するすべての変更は、関数が戻る前に元に戻されます。</target>
        </trans-unit>
        <trans-unit id="7aaac470309a93d5303ae1989bb54d18464aaff9" translate="yes" xml:space="preserve">
          <source>A number of browser types are predefined. This table gives the type names that may be passed to the &lt;a href=&quot;#webbrowser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function and the corresponding instantiations for the controller classes, all defined in this module.</source>
          <target state="translated">いくつかのブラウザタイプが事前定義されています。この表は、すべてこのモジュールで定義されている、&lt;a href=&quot;#webbrowser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;関数に渡される可能性のある型名と、コントローラークラスの対応するインスタンス化を示しています。</target>
        </trans-unit>
        <trans-unit id="5b9b4dafe3106a819531ac204c06e56766477b2e" translate="yes" xml:space="preserve">
          <source>A number of option flags control various aspects of doctest&amp;rsquo;s behavior. Symbolic names for the flags are supplied as module constants, which can be &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; together and passed to various functions. The names can also be used in &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt;, and may be passed to the doctest command line interface via the &lt;code&gt;-o&lt;/code&gt; option.</source>
          <target state="translated">いくつかのオプションフラグは、doctestの動作のさまざまな側面を制御します。フラグの記号名は、モジュール定数として提供されます。これは、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;ビット単位のOR&lt;/a&gt;をとってさまざまな関数に渡すことができます。これらの名前は&lt;a href=&quot;#doctest-directives&quot;&gt;doctestディレクティブ&lt;/a&gt;でも使用でき、 &lt;code&gt;-o&lt;/code&gt; オプションを介してdoctestコマンドラインインターフェースに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="7d248406498c9e34559ce116cdbf8b66476b9bb7" translate="yes" xml:space="preserve">
          <source>A number of option flags control various aspects of doctest&amp;rsquo;s behavior. Symbolic names for the flags are supplied as module constants, which can be &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; together and passed to various functions. The names can also be used in &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt;, and may be passed to the doctest command line interface via the &lt;code&gt;-o&lt;/code&gt; option.</source>
          <target state="translated">いくつかのオプションフラグは、doctestの動作のさまざまな側面を制御します。フラグのシンボリック名はモジュール定数として提供され、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;ビット単位でOR演算し&lt;/a&gt;て、さまざまな関数に渡すことができます。名前は&lt;a href=&quot;#doctest-directives&quot;&gt;doctestディレクティブ&lt;/a&gt;でも使用でき、 &lt;code&gt;-o&lt;/code&gt; オプションを介してdoctestコマンドラインインターフェイスに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="24786294a108030a38cc3d65cb7244c171d67285" translate="yes" xml:space="preserve">
          <source>A number of predefined codecs are specific to Python, so their codec names have no meaning outside Python. These are listed in the tables below based on the expected input and output types (note that while text encodings are the most common use case for codecs, the underlying codec infrastructure supports arbitrary data transforms rather than just text encodings). For asymmetric codecs, the stated meaning describes the encoding direction.</source>
          <target state="translated">多くの定義済みコーデックは Python に特有のものなので、Python の外ではそのコーデック名は意味を持ちません。これらは期待される入力と出力のタイプに基づいて以下の表にリストアップされています(テキストエンコーディングがコーデックの最も一般的な使用例である一方で、基礎となるコーデックのインフラストラクチャはテキストエンコーディングだけでなく任意のデータ変換をサポートしていることに注意してください)。非対称コーデックの場合、記載されている意味はエンコーディングの方向を説明しています。</target>
        </trans-unit>
        <trans-unit id="4227ce7e78debdba89f4c96569097661301c7c9c" translate="yes" xml:space="preserve">
          <source>A number of widgets require &amp;ldquo;index&amp;rdquo; parameters to be passed. These are used to point at a specific place in a Text widget, or to particular characters in an Entry widget, or to particular menu items in a Menu widget.</source>
          <target state="translated">多くのウィジェットでは、「インデックス」パラメーターを渡す必要があります。これらは、テキストウィジェットの特定の場所、エントリウィジェットの特定の文字、またはメニューウィジェットの特定のメニュー項目を指すために使用されます。</target>
        </trans-unit>
        <trans-unit id="87a43f9cfd3da2836cdeb874afef3c2da7ba877a" translate="yes" xml:space="preserve">
          <source>A number specifying the maximum value. Defaults to 100.</source>
          <target state="translated">最大値を指定する数値。デフォルトは100です。</target>
        </trans-unit>
        <trans-unit id="f0a2832b6c8a08921422a5d8a1515c121adf4755" translate="yes" xml:space="preserve">
          <source>A numeric error code from the C variable &lt;code&gt;errno&lt;/code&gt;.</source>
          <target state="translated">C変数 &lt;code&gt;errno&lt;/code&gt; からの数値エラーコード。</target>
        </trans-unit>
        <trans-unit id="c7e153424dba9fbc1ebba1d78eaffba93da702aa" translate="yes" xml:space="preserve">
          <source>A numeric error code from the expat parser. See the documentation of &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for the list of error codes and their meanings.</source>
          <target state="translated">expatパーサーからの数値エラーコード。エラーコードとその意味のリストについては、&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="033121bc98a1cde9c09ce5624067c2522fbe46ec" translate="yes" xml:space="preserve">
          <source>A numeric error number that denotes the verification error.</source>
          <target state="translated">検証エラーを示す数値エラー番号。</target>
        </trans-unit>
        <trans-unit id="3f40732fa35edcaee5dbbdaa3d3dc1424861ae23" translate="yes" xml:space="preserve">
          <source>A numeric handle of a system object which will become &amp;ldquo;ready&amp;rdquo; when the process ends.</source>
          <target state="translated">プロセスが終了すると「準備完了」になるシステムオブジェクトの数値ハンドル。</target>
        </trans-unit>
        <trans-unit id="6cca780fc4b38afc038d9433881555b00e41699a" translate="yes" xml:space="preserve">
          <source>A one-character string used by the writer to escape the &lt;em&gt;delimiter&lt;/em&gt; if &lt;em&gt;quoting&lt;/em&gt; is set to &lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt;&lt;code&gt;QUOTE_NONE&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;quotechar&lt;/em&gt; if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. On reading, the &lt;em&gt;escapechar&lt;/em&gt; removes any special meaning from the following character. It defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, which disables escaping.</source>
          <target state="translated">&lt;em&gt;引用&lt;/em&gt;が&lt;a href=&quot;#csv.QUOTE_NONE&quot;&gt; &lt;code&gt;QUOTE_NONE&lt;/code&gt; に&lt;/a&gt;設定さ&lt;em&gt;れている&lt;/em&gt;場合に&lt;em&gt;区切り文字&lt;/em&gt;をエスケープするためにライターが使用する1文字の文字列。&lt;em&gt;二重引用符&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合は&lt;em&gt;quotechar&lt;/em&gt;。読み取り時に、&lt;em&gt;escapechar&lt;/em&gt;は次の文字から特別な意味を削除します。デフォルトは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; で&lt;/a&gt;、エスケープを無効にします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fda1d9903017ca3b081766b53e4516e92f15d4c0" translate="yes" xml:space="preserve">
          <source>A one-character string used to quote fields containing special characters, such as the &lt;em&gt;delimiter&lt;/em&gt; or &lt;em&gt;quotechar&lt;/em&gt;, or which contain new-line characters. It defaults to &lt;code&gt;'&quot;'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;delimiter&lt;/em&gt;や&lt;em&gt;quotechar&lt;/em&gt;などの特殊文字を含むフィールド、または&lt;em&gt;改行&lt;/em&gt;&lt;em&gt;文字&lt;/em&gt;を含むフィールドを引用するために使用される1文字の文字列。デフォルトは &lt;code&gt;'&quot;'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0cddc04fba1abe2f49cf33fa79783bec8ce15114" translate="yes" xml:space="preserve">
          <source>A one-character string used to separate fields. It defaults to &lt;code&gt;','&lt;/code&gt;.</source>
          <target state="translated">フィールドを区切るために使用される1文字の文字列。デフォルトは &lt;code&gt;','&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="266b9992fac1657d44a6361498f20ec9bfba29ef" translate="yes" xml:space="preserve">
          <source>A pad is like a window, except that it is not restricted by the screen size, and is not necessarily associated with a particular part of the screen. Pads can be used when a large window is needed, and only a part of the window will be on the screen at one time. Automatic refreshes of pads (such as from scrolling or echoing of input) do not occur. The &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#curses.window.noutrefresh&quot;&gt;&lt;code&gt;noutrefresh()&lt;/code&gt;&lt;/a&gt; methods of a pad require 6 arguments to specify the part of the pad to be displayed and the location on the screen to be used for the display. The arguments are &lt;em&gt;pminrow&lt;/em&gt;, &lt;em&gt;pmincol&lt;/em&gt;, &lt;em&gt;sminrow&lt;/em&gt;, &lt;em&gt;smincol&lt;/em&gt;, &lt;em&gt;smaxrow&lt;/em&gt;, &lt;em&gt;smaxcol&lt;/em&gt;; the &lt;em&gt;p&lt;/em&gt; arguments refer to the upper left corner of the pad region to be displayed and the &lt;em&gt;s&lt;/em&gt; arguments define a clipping box on the screen within which the pad region is to be displayed.</source>
          <target state="translated">パッドはウィンドウに似ていますが、画面サイズによる制限がなく、必ずしも画面の特定の部分に関連付けられているわけではありません。大きなウィンドウが必要なときにパッドを使用すると、ウィンドウの一部だけが一度に画面に表示されます。パッドの自動更新（入力のスクロールやエコーなど）は発生しません。&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#curses.window.noutrefresh&quot;&gt; &lt;code&gt;noutrefresh()&lt;/code&gt; &lt;/a&gt;パッドの方法が表示されると、画面上の位置を表示するために使用されるパッドの一部を指定する6つの引数を必要とします。引数は&lt;em&gt;pminrow&lt;/em&gt;、&lt;em&gt;pmincol&lt;/em&gt;、&lt;em&gt;sminrow&lt;/em&gt;、&lt;em&gt;smincol&lt;/em&gt;、&lt;em&gt;smaxrow&lt;/em&gt;、&lt;em&gt;smaxcol&lt;/em&gt;です。&lt;em&gt;P&lt;/em&gt;引数は、表示されるパッド領域の左上隅を指し、&lt;em&gt;s&lt;/em&gt;引数は、パッド領域が表示される画面上のクリッピングボックスを定義します。</target>
        </trans-unit>
        <trans-unit id="543bffc96e07b14eab3de589caf9259026e4de84" translate="yes" xml:space="preserve">
          <source>A pair &lt;code&gt;(host, port)&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;host&lt;/em&gt; is a string representing either a hostname in Internet domain notation like &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; or an IPv4 address like &lt;code&gt;'100.50.200.5'&lt;/code&gt;, and &lt;em&gt;port&lt;/em&gt; is an integer.</source>
          <target state="translated">ペア &lt;code&gt;(host, port)&lt;/code&gt; のために使用される&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; の&lt;/a&gt;アドレスファミリー、&lt;em&gt;ホストは&lt;/em&gt;いずれかのようなインターネットドメイン表記のホスト名を表す文字列である &lt;code&gt;'daring.cwi.nl'&lt;/code&gt; 等のIPv4アドレス &lt;code&gt;'100.50.200.5'&lt;/code&gt; 、及び&lt;em&gt;ポートが&lt;/em&gt;あります整数。</target>
        </trans-unit>
        <trans-unit id="b93cb8865023f461acb5361c56e206ee1aa8182d" translate="yes" xml:space="preserve">
          <source>A panel stack extension that adds depth to curses windows.</source>
          <target state="translated">カーズウィンドウに奥行きを持たせるパネルスタックエクステンション。</target>
        </trans-unit>
        <trans-unit id="a6b4cf6c75b1cf3706374d6b2abafb188224b9a0" translate="yes" xml:space="preserve">
          <source>A parallel equivalent of the &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; built-in function (it supports only one &lt;em&gt;iterable&lt;/em&gt; argument though, for multiple iterables see &lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt;). It blocks until the result is ready.</source>
          <target state="translated">&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;組み込み関数の同等の機能（ただし、1つの&lt;em&gt;反復可能&lt;/em&gt;引数のみをサポートします。複数の反復可能物については&lt;a href=&quot;#multiprocessing.pool.Pool.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; を&lt;/a&gt;参照）。結果が準備できるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="16446c390decbe7bb0f68daafac03e66ce6aec69" translate="yes" xml:space="preserve">
          <source>A parameter entity contained incomplete markup.</source>
          <target state="translated">パラメータ・エンティティに不完全なマークアップが含まれていました。</target>
        </trans-unit>
        <trans-unit id="012f66b7ba5f9e640c26d03e6437c3bca0c7df81" translate="yes" xml:space="preserve">
          <source>A parameter entity reference was found where it was not allowed.</source>
          <target state="translated">許可されていないパラメータ・エンティティ参照が見つかりました。</target>
        </trans-unit>
        <trans-unit id="b364142017bfe2db3bd80211e6956af681664535" translate="yes" xml:space="preserve">
          <source>A partial upgrade path from &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;への部分的なアップグレードパス：</target>
        </trans-unit>
        <trans-unit id="a6a0f809c40e7d0aca5f738a82cada5c7e327d01" translate="yes" xml:space="preserve">
          <source>A path configuration file is a file whose name has the form &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; and exists in one of the four directories mentioned above; its contents are additional items (one per line) to be added to &lt;code&gt;sys.path&lt;/code&gt;. Non-existing items are never added to &lt;code&gt;sys.path&lt;/code&gt;, and no check is made that the item refers to a directory rather than a file. No item is added to &lt;code&gt;sys.path&lt;/code&gt; more than once. Blank lines and lines beginning with &lt;code&gt;#&lt;/code&gt; are skipped. Lines starting with &lt;code&gt;import&lt;/code&gt; (followed by space or tab) are executed.</source>
          <target state="translated">パス設定ファイルは、 &lt;code&gt;&lt;em&gt;name&lt;/em&gt;.pth&lt;/code&gt; という形式で、上記の4つのディレクトリのいずれかに存在するファイルです。その内容は &lt;code&gt;sys.path&lt;/code&gt; に追加される追加項目（1行に1つ）です。存在しないアイテムが &lt;code&gt;sys.path&lt;/code&gt; に追加されることはなく、アイテムがファイルではなくディレクトリを参照していることの確認は行われません。 &lt;code&gt;sys.path&lt;/code&gt; に項目が複数回追加されることはありません。空白行と &lt;code&gt;#&lt;/code&gt; で始まる行はスキップされます。 &lt;code&gt;import&lt;/code&gt; で始まる行（スペースまたはタブが続く）が実行されます。</target>
        </trans-unit>
        <trans-unit id="646d815aeadeea6fe20ca3faf0ccabbfeea34957" translate="yes" xml:space="preserve">
          <source>A path object can be used anywhere an object implementing &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; is accepted:</source>
          <target state="translated">パスオブジェクトは、&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; を&lt;/a&gt;実装するオブジェクトが受け入れられる任意の場所で使用できます。</target>
        </trans-unit>
        <trans-unit id="bebeb34650a612eae1dd1d635441f9d161b217ad" translate="yes" xml:space="preserve">
          <source>A pathlib-compatible wrapper for zip files. See section &lt;a href=&quot;#path-objects&quot;&gt;Path Objects&lt;/a&gt; for details.</source>
          <target state="translated">zipファイル用のpathlib互換ラッパー。詳細については、「&lt;a href=&quot;#path-objects&quot;&gt;パスオブジェクト」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="073be021799e1edeed8fbb982dc1e8d136890310" translate="yes" xml:space="preserve">
          <source>A pattern you will sometimes see is a &lt;code&gt;try-finally&lt;/code&gt; statement with a flag variable to indicate whether or not the body of the &lt;code&gt;finally&lt;/code&gt; clause should be executed. In its simplest form (that can&amp;rsquo;t already be handled just by using an &lt;code&gt;except&lt;/code&gt; clause instead), it looks something like this:</source>
          <target state="translated">ときどき表示されるパターンは、 &lt;code&gt;finally&lt;/code&gt; 句の本体を実行するかどうかを示すフラグ変数を含む &lt;code&gt;try-finally&lt;/code&gt; ステートメントです。最も単純な形式（ &lt;code&gt;except&lt;/code&gt; 句を使用するだけではまだ処理できません）では、次のようになります。</target>
        </trans-unit>
        <trans-unit id="7abf054a6573c0336e61de800d0dfa5875e96568" translate="yes" xml:space="preserve">
          <source>A pickler object&amp;rsquo;s dispatch table is a registry of &lt;em&gt;reduction functions&lt;/em&gt; of the kind which can be declared using &lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt;&lt;code&gt;copyreg.pickle()&lt;/code&gt;&lt;/a&gt;. It is a mapping whose keys are classes and whose values are reduction functions. A reduction function takes a single argument of the associated class and should conform to the same interface as a &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ピッカーオブジェクトのディスパッチテーブルは、&lt;a href=&quot;copyreg#copyreg.pickle&quot;&gt; &lt;code&gt;copyreg.pickle()&lt;/code&gt; &lt;/a&gt;を使用して宣言できる種類の&lt;em&gt;リダクション関数&lt;/em&gt;のレジストリです。これは、キーがクラスで値がリダクション関数であるマッピングです。リダクション関数は、関連するクラスの単一の引数を取り、&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;メソッドと同じインターフェイスに準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="2815f7a27d1d799bb9c5ed4bd1e2e6224159599f" translate="yes" xml:space="preserve">
          <source>A placeholder method which can be overridden in third party implementations to pre-install packages in the virtual environment or perform other post-creation steps.</source>
          <target state="translated">サードパーティの実装でオーバーライドできるプレースホルダメソッドで、仮想環境にパッケージをプリインストールしたり、その他の作成後のステップを実行します。</target>
        </trans-unit>
        <trans-unit id="5289f5cb8c6eafde6088a2523d6546e8be5b9ea2" translate="yes" xml:space="preserve">
          <source>A platform-specific location:</source>
          <target state="translated">プラットフォーム固有の場所。</target>
        </trans-unit>
        <trans-unit id="a6eb65fd95cbaf5e43af30050ff3ec24853c59dd" translate="yes" xml:space="preserve">
          <source>A policy defines the notion of &lt;em&gt;context&lt;/em&gt; and manages a separate event loop per context. The default policy defines &lt;em&gt;context&lt;/em&gt; to be the current thread.</source>
          <target state="translated">ポリシーは、&lt;em&gt;コンテキスト&lt;/em&gt;の概念を定義し、&lt;em&gt;コンテキスト&lt;/em&gt;ごとに個別のイベントループを管理します。デフォルトのポリシーは、&lt;em&gt;コンテキスト&lt;/em&gt;を現在のスレッドとして定義し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="10bef264cff4ed7470ae443a79b09fa9417838b9" translate="yes" xml:space="preserve">
          <source>A popular third-party coverage tool that provides HTML output along with advanced features such as branch coverage.</source>
          <target state="translated">ブランチカバレッジなどの高度な機能とともにHTML出力を提供する人気のサードパーティ製カバレッジツールです。</target>
        </trans-unit>
        <trans-unit id="7e69db56a6ea626272adf3d2ff2e59ea23a94fcf" translate="yes" xml:space="preserve">
          <source>A positional specification of the form &amp;ldquo;@x,y&amp;rdquo;, which identifies the tab</source>
          <target state="translated">タブを識別する「@ x、y」形式の位置指定</target>
        </trans-unit>
        <trans-unit id="3ba4a2770676c7fc7f7f67798128c512a5d2028e" translate="yes" xml:space="preserve">
          <source>A positive integer specifying the number of elements in the array. Out-of-range subscripts result in an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;. Will be returned by &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列の要素数を指定する正の整数。範囲外の添え字は&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; になり&lt;/a&gt;ます。&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;によって返されます。</target>
        </trans-unit>
        <trans-unit id="9a673e2f0ba94a4e244ad4f4f6bcfef7838e6dad" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be blocked.</source>
          <target state="translated">シグナルがブロックされることを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="fcbbcb4889df6bf478da8060159cb1a9ffdb3edf" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that signals are to be unblocked.</source>
          <target state="translated">シグナルのブロックを解除することを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="64d6e35e5d0720d89927277af6c6b6e10bc1da90" translate="yes" xml:space="preserve">
          <source>A possible value for the &lt;em&gt;how&lt;/em&gt; parameter to &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt; indicating that the signal mask is to be replaced.</source>
          <target state="translated">シグナルマスクが置き換えられることを示す&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;how&lt;/em&gt;パラメーターの可能な値。</target>
        </trans-unit>
        <trans-unit id="c03ca79ea849bb2dbbb49f14c9096b4b556833c8" translate="yes" xml:space="preserve">
          <source>A possibly empty tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects representing the addresses in the group.</source>
          <target state="translated">空の可能性がある、グループ内のアドレスを表す&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。</target>
        </trans-unit>
        <trans-unit id="49afe2d7b9d6c7021dbba12a05abef138ec01de4" translate="yes" xml:space="preserve">
          <source>A precision of &lt;code&gt;0&lt;/code&gt; is treated as equivalent to a precision of &lt;code&gt;1&lt;/code&gt;. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">精度 &lt;code&gt;0&lt;/code&gt; は、精度 &lt;code&gt;1&lt;/code&gt; と同等として扱われます。デフォルトの精度は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7089cc2a31010eba0be5e32ed206b479b78c2baa" translate="yes" xml:space="preserve">
          <source>A primary use for weak references is to implement caches or mappings holding large objects, where it&amp;rsquo;s desired that a large object not be kept alive solely because it appears in a cache or mapping.</source>
          <target state="translated">弱参照の主な用途は、ラージオブジェクトを保持するキャッシュまたはマッピングを実装することです。この場合、ラージオブジェクトは、キャッシュまたはマッピングに表示されるだけで存続しないことが望まれます。</target>
        </trans-unit>
        <trans-unit id="c915b53e717effb68aabdc2a0d6fddd050b0db1e" translate="yes" xml:space="preserve">
          <source>A primitive lock is a synchronization primitive that is not owned by a particular thread when locked. In Python, it is currently the lowest level synchronization primitive available, implemented directly by the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; extension module.</source>
          <target state="translated">プリミティブロックは、ロックされたときに特定のスレッドが所有していない同期プリミティブです。Pythonでは、これは現在利用可能な最低レベルの同期プリミティブであり、&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;拡張モジュールによって直接実装されます。</target>
        </trans-unit>
        <trans-unit id="37ea4049756ea91b41ad9cbfd066ac008ad7e41e" translate="yes" xml:space="preserve">
          <source>A primitive lock is in one of two states, &amp;ldquo;locked&amp;rdquo; or &amp;ldquo;unlocked&amp;rdquo;. It is created in the unlocked state. It has two basic methods, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;. When the state is unlocked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; changes the state to locked and returns immediately. When the state is locked, &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks until a call to &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; in another thread changes it to unlocked, then the &lt;a href=&quot;#threading.Lock.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call resets it to locked and returns. The &lt;a href=&quot;#threading.Lock.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method should only be called in the locked state; it changes the state to unlocked and returns immediately. If an attempt is made to release an unlocked lock, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">プリミティブロックは、「ロック」または「ロック解除」の2つの状態のいずれかになります。ロック解除状態で作成されます。 2つの基本的なメソッド、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; があり&lt;/a&gt;ます。状態がロック解除されると、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;は状態をロックに変更し、すぐに戻ります。状態がロックされている場合、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;は、別のスレッドで&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; を&lt;/a&gt;呼び出すとロックが解除されるまでブロックし、&lt;a href=&quot;#threading.Lock.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; を&lt;/a&gt;呼び出すと、ロックされて戻ります。&lt;a href=&quot;#threading.Lock.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドは、ロック状態で呼び出されるべきです。状態をロック解除に変更し、すぐに戻ります。ロックされていないロックを解放しようとすると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6c136c8e031ae9acaeea33df5e509e457c232647" translate="yes" xml:space="preserve">
          <source>A priority queue.</source>
          <target state="translated">優先度の高いキュー。</target>
        </trans-unit>
        <trans-unit id="d99ce12ee7a4b4b5d74728cfea88be8c23f2abb7" translate="yes" xml:space="preserve">
          <source>A process can be joined many times.</source>
          <target state="translated">1つのプロセスは何度も参加することができます。</target>
        </trans-unit>
        <trans-unit id="661a72c6ee03e63c1e4e4cdd37d63e45d6262bf9" translate="yes" xml:space="preserve">
          <source>A process cannot join itself because this would cause a deadlock. It is an error to attempt to join a process before it has been started.</source>
          <target state="translated">デッドロックの原因となるため、プロセスは自分自身を参加させることができません。プロセスが開始される前にプロセスに参加しようとするとエラーになります。</target>
        </trans-unit>
        <trans-unit id="03133f212edb656afb4b280596f603276f8582aa" translate="yes" xml:space="preserve">
          <source>A process pool object which controls a pool of worker processes to which jobs can be submitted. It supports asynchronous results with timeouts and callbacks and has a parallel map implementation.</source>
          <target state="translated">ジョブを投入できるワーカープロセスのプールを制御するプロセスプールオブジェクトです。タイムアウトとコールバックによる非同期の結果をサポートし、並列マップの実装を持っています。</target>
        </trans-unit>
        <trans-unit id="a354478a00e3e8c761db9395099aec6dd004f1f8" translate="yes" xml:space="preserve">
          <source>A process watcher allows customization of how an event loop monitors child processes on Unix. Specifically, the event loop needs to know when a child process has exited.</source>
          <target state="translated">プロセスウォッチャーは、Unix上でイベントループが子プロセスを監視する方法をカスタマイズすることができます。具体的には、イベントループは子プロセスがいつ終了したかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="072a4a313bcf1885879618cd5ab6ea7dafe24775" translate="yes" xml:space="preserve">
          <source>A processing class used to execute and verify the interactive examples in a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; で&lt;/a&gt;インタラクティブな例を実行および検証するために使用される処理クラス。</target>
        </trans-unit>
        <trans-unit id="bfc64c4355d0772046330f8b8767e859d4f36926" translate="yes" xml:space="preserve">
          <source>A processing class used to extract interactive examples from a string, and use them to create a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">文字列からインタラクティブな例を抽出し、それらを使用して&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するために使用される処理クラス。</target>
        </trans-unit>
        <trans-unit id="36e7f819143265a9e0661ba6d7d1edca3d75ef96" translate="yes" xml:space="preserve">
          <source>A processing class used to extract the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s that are relevant to a given object, from its docstring and the docstrings of its contained objects. &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s can be extracted from modules, classes, functions, methods, staticmethods, classmethods, and properties.</source>
          <target state="translated">特定のオブジェクトに関連する&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;を、そのdocstringおよび含まれているオブジェクトのdocstring から抽出するために使用される処理クラス。&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; は&lt;/a&gt;、モジュール、クラス、関数、メソッド、静的メソッド、クラスメソッド、およびプロパティから抽出できます。</target>
        </trans-unit>
        <trans-unit id="ffe740a1a61f3a17e716a81beaa39ca1258df2e5" translate="yes" xml:space="preserve">
          <source>A program is free to modify this list for its own purposes. Only strings and bytes should be added to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;; all other data types are ignored during import.</source>
          <target state="translated">プログラムは、独自の目的でこのリストを自由に変更できます。文字列とバイトのみを&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に追加する必要があります。インポート中、他のすべてのデータ型は無視されます。</target>
        </trans-unit>
        <trans-unit id="2a058d334f0b92eff050d11d91c8df8e25c24a51" translate="yes" xml:space="preserve">
          <source>A property object has &lt;code&gt;getter&lt;/code&gt;, &lt;code&gt;setter&lt;/code&gt;, and &lt;code&gt;deleter&lt;/code&gt; methods usable as decorators that create a copy of the property with the corresponding accessor function set to the decorated function. This is best explained with an example:</source>
          <target state="translated">プロパティオブジェクトには、対応するアクセサ関数が修飾された関数に設定されたプロパティのコピーを作成するデコレータとして使用可能な &lt;code&gt;getter&lt;/code&gt; 、 &lt;code&gt;setter&lt;/code&gt; 、および &lt;code&gt;deleter&lt;/code&gt; メソッドがあります。これは例で最もよく説明されます：</target>
        </trans-unit>
        <trans-unit id="b39b3fcc4cee390c973950a8ea0939199743bb3a" translate="yes" xml:space="preserve">
          <source>A proxy is an object which &lt;em&gt;refers&lt;/em&gt; to a shared object which lives (presumably) in a different process. The shared object is said to be the &lt;em&gt;referent&lt;/em&gt; of the proxy. Multiple proxy objects may have the same referent.</source>
          <target state="translated">プロキシは、（おそらく）別のプロセスに存在する共有オブジェクトを&lt;em&gt;参照&lt;/em&gt;するオブジェクトです。共有オブジェクトはプロキシの&lt;em&gt;リファレント&lt;/em&gt;であると言われています。複数のプロキシオブジェクトが同じ指示対象を持つ場合があります。</target>
        </trans-unit>
        <trans-unit id="127418956b7538abf35e0c7d0c8df18e9a2e2b17" translate="yes" xml:space="preserve">
          <source>A proxy object has methods which invoke corresponding methods of its referent (although not every method of the referent will necessarily be available through the proxy). In this way, a proxy can be used just like its referent can:</source>
          <target state="translated">プロキシオブジェクトは参照元の対応するメソッドを呼び出すメソッドを持ちます(参照元のすべてのメソッドが必ずしもプロキシを通して利用できるわけではありませんが)。このようにして、プロキシは参照元と同じように使うことができます。</target>
        </trans-unit>
        <trans-unit id="f53fd45b896dddb81ccaed23c2ae3025e8e5f24b" translate="yes" xml:space="preserve">
          <source>A proxy object uses a weakref callback so that when it gets garbage collected it deregisters itself from the manager which owns its referent.</source>
          <target state="translated">プロキシオブジェクトはweakrefコールバックを使用して、ガベージコレクションを取得したときに、その参照元を所有しているマネージャから自分自身の登録を解除するようにしています。</target>
        </trans-unit>
        <trans-unit id="db78a45bdc25adb61e99da3fbc39a41ebe2a9000" translate="yes" xml:space="preserve">
          <source>A pull parser suitable for non-blocking applications. Its input-side API is similar to that of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt;, but instead of pushing calls to a callback target, &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt; collects an internal list of parsing events and lets the user read from it. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported.</source>
          <target state="translated">非ブロッキングアプリケーションに適したプルパーサー。その入力側のAPIは&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; の&lt;/a&gt; APIに似ていますが、コールバックをコールバックターゲットにプッシュする代わりに、&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt;は解析イベントの内部リストを収集し、ユーザーがそこから読み取れるようにします。&lt;em&gt;events&lt;/em&gt;は、報告する一連のイベントです。サポートされるイベントは、文字列 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;comment&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;pi&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; です（ &quot;ns&quot;イベントは、詳細な名前空間情報を取得するために使用されます）。場合は&lt;em&gt;、イベントが&lt;/em&gt;省略されている、唯一の &lt;code&gt;&quot;end&quot;&lt;/code&gt; のイベントが報告されています。</target>
        </trans-unit>
        <trans-unit id="611cc1f288e4ebe8654c5f40abd6830e50fb2b24" translate="yes" xml:space="preserve">
          <source>A quadratic blowup attack is similar to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;Billion Laughs&lt;/a&gt; attack; it abuses entity expansion, too. Instead of nested entities it repeats one large entity with a couple of thousand chars over and over again. The attack isn&amp;rsquo;t as efficient as the exponential case but it avoids triggering parser countermeasures that forbid deeply-nested entities.</source>
          <target state="translated">二次爆発攻撃は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;10&lt;/a&gt;億笑攻撃に似ています。エンティティの拡張も悪用します。ネストされたエンティティの代わりに、1つの大きなエンティティを数千文字で繰り返します。攻撃は指数関数的ケースほど効率的ではありませんが、深くネストされたエンティティを禁止するパーサー対策のトリガーを回避します。</target>
        </trans-unit>
        <trans-unit id="32f0bfa3ad661bbe821e304d53e7d39d2b8c3756" translate="yes" xml:space="preserve">
          <source>A queue class for use in a multi-processing (rather than multi-threading) context.</source>
          <target state="translated">(マルチスレッドではなく)マルチプロセッシングのコンテキストで使用するためのキュークラス。</target>
        </trans-unit>
        <trans-unit id="99a5f66050b7639c5e20c566c6533b480cfdb3b9" translate="yes" xml:space="preserve">
          <source>A queue must not be used anymore after it is closed. For example, &lt;a href=&quot;#multiprocessing.SimpleQueue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.SimpleQueue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.SimpleQueue.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; methods must no longer be called.</source>
          <target state="translated">キューは、閉じられた後は使用できません。たとえば、&lt;a href=&quot;#multiprocessing.SimpleQueue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.SimpleQueue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#multiprocessing.SimpleQueue.empty&quot;&gt; &lt;code&gt;empty()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="970016f4dd8d7293c8fe545175b34b595aee70a8" translate="yes" xml:space="preserve">
          <source>A range object will be empty if &lt;code&gt;r[0]&lt;/code&gt; does not meet the value constraint. Ranges do support negative indices, but these are interpreted as indexing from the end of the sequence determined by the positive indices.</source>
          <target state="translated">&lt;code&gt;r[0]&lt;/code&gt; が値の制約を満たさない場合、範囲オブジェクトは空になります。範囲は負のインデックスをサポートしますが、これらは正のインデックスによって決定されるシーケンスの最後からのインデックスとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="529c4e8d3b05784622b5257f6319660acd9697dc" translate="yes" xml:space="preserve">
          <source>A raw binary stream representing an OS-level file containing bytes data. It inherits &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイトデータを含むOSレベルのファイルを表す生のバイナリストリーム。&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="99d64c49ac868aa39e74a9a92db9ff55124daac2" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the parser.</source>
          <target state="translated">パーサーが使用している方言の読み取り専用の記述です。</target>
        </trans-unit>
        <trans-unit id="d8db58a3fbd04f626dd60cc420a69d5fe182f4a1" translate="yes" xml:space="preserve">
          <source>A read-only description of the dialect in use by the writer.</source>
          <target state="translated">書き手が使用している方言の読み専用の説明。</target>
        </trans-unit>
        <trans-unit id="103619d1b69776cbb2bb552ae0ace0f33ade73d9" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;arithmetic mean&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Arithmetic_mean&quot;&gt;算術平均&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="7e5c5cd30d274a11e5c8a7f205262bcf52ba50dd" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;median&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;中央値&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="2b3f43c3138ebdc3b49d4edbc9a8dfae7d36df14" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;mode&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;モード&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="45686b5a6c585606daea0b77d4b804d2c566d994" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;standard deviation&lt;/a&gt; of a normal distribution.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_deviation&quot;&gt;標準偏差&lt;/a&gt;の読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="99445b8caebd2b8efc9bf242bcd10bf1c3ccd24e" translate="yes" xml:space="preserve">
          <source>A read-only property for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;variance&lt;/a&gt; of a normal distribution. Equal to the square of the standard deviation.</source>
          <target state="translated">正規分布の&lt;a href=&quot;https://en.wikipedia.org/wiki/Variance&quot;&gt;分散&lt;/a&gt;の読み取り専用プロパティ。標準偏差の2乗に等しい。</target>
        </trans-unit>
        <trans-unit id="2a89570fc444460338403a29b3a5af43fe4247a1" translate="yes" xml:space="preserve">
          <source>A read-only property. Characters that will be considered punctuation. Runs of punctuation characters will be returned as a single token. However, note that no semantic validity checking will be performed: for example, &amp;lsquo;&amp;gt;&amp;gt;&amp;gt;&amp;rsquo; could be returned as a token, even though it may not be recognised as such by shells.</source>
          <target state="translated">読み取り専用プロパティ。句読点と見なされる文字。一連の句読文字は単一のトークンとして返されます。ただし、意味的な妥当性チェックは実行されないことに注意してください。たとえば、「&amp;gt;&amp;gt;&amp;gt;」は、シェルによって認識されない場合でも、トークンとして返される可能性があります。</target>
        </trans-unit>
        <trans-unit id="f1526d13194dc44fe8b71f410d5e02f5618756d2" translate="yes" xml:space="preserve">
          <source>A read-only property. Points to the &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; object that created the token.</source>
          <target state="translated">読み取り専用プロパティ。トークンを作成した&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;オブジェクトを指します。</target>
        </trans-unit>
        <trans-unit id="35f7fe0b2b9bb75459b88195c234d27b4c7c54e7" translate="yes" xml:space="preserve">
          <source>A read-only property. Set to the value the variable had before the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; method call that created the token. It points to &lt;code&gt;Token.MISSING&lt;/code&gt; is the variable was not set before the call.</source>
          <target state="translated">読み取り専用プロパティ。トークンを作成した&lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt;メソッド呼び出しの前に変数が持っていた値に設定します。 &lt;code&gt;Token.MISSING&lt;/code&gt; がポイントされていますが、この変数は呼び出し前に設定されていませんでした。</target>
        </trans-unit>
        <trans-unit id="ce5c35b786a167783bd1eecb7aa0a10dc821953b" translate="yes" xml:space="preserve">
          <source>A read-only sequence representing the time zone search path &amp;ndash; when constructing a &lt;code&gt;ZoneInfo&lt;/code&gt; from a key, the key is joined to each entry in the &lt;code&gt;TZPATH&lt;/code&gt;, and the first file found is used.</source>
          <target state="translated">タイムゾーン検索パスを表す読み取り専用シーケンス&amp;ndash;キーから &lt;code&gt;ZoneInfo&lt;/code&gt; を構築する場合、キーは &lt;code&gt;TZPATH&lt;/code&gt; の各エントリに結合され、最初に見つかったファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="57409d01d7bc70f967ed6e92fede60d985f7ba23" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;クラスの内容を格納するために使用される実際の&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="fabb25bea7f4a3fcb6ef6ab14b41eddaa407f0e5" translate="yes" xml:space="preserve">
          <source>A real &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; object used to store the contents of the &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;クラスの内容を格納するために使用される実際の&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a5ea9d2da1b66afbb924a3e5bdffb22ed45ea981" translate="yes" xml:space="preserve">
          <source>A real dictionary used to store the contents of the &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;クラスのコンテンツを格納するために使用される実際の辞書。</target>
        </trans-unit>
        <trans-unit id="2e81b2ea1c04e7477a837ea4fa77a2d26559ba3e" translate="yes" xml:space="preserve">
          <source>A recursive lock object: a close analog of &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt;. A recursive lock must be released by the process or thread that acquired it. Once a process or thread has acquired a recursive lock, the same process or thread may acquire it again without blocking; that process or thread must release it once for each time it has been acquired.</source>
          <target state="translated">再帰的なロックオブジェクト：&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; の&lt;/a&gt;類似物。再帰的ロックは、それを取得したプロセスまたはスレッドによって解放する必要があります。プロセスまたはスレッドが再帰的ロックを取得すると、同じプロセスまたはスレッドがブロックせずに再度ロックを取得できます。そのプロセスまたはスレッドは、取得されるたびに1回解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="bdd9f600aa39bd4ce3cfa80aec45f37f958ff199" translate="yes" xml:space="preserve">
          <source>A reduced-scope variant of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; representing an SSL protocol instance that does not contain any network IO methods. This class is typically used by framework authors that want to implement asynchronous IO for SSL through memory buffers.</source>
          <target state="translated">ネットワークIOメソッドを含まないSSLプロトコルインスタンスを表す&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; の&lt;/a&gt;スコープを縮小したバリアント。このクラスは通常、メモリバッファを介してSSLの非同期IOを実装するフレームワークの作成者によって使用されます。</target>
        </trans-unit>
        <trans-unit id="1806f846154693b11451c88326be8f7c897dca73" translate="yes" xml:space="preserve">
          <source>A reentrant lock is a synchronization primitive that may be acquired multiple times by the same thread. Internally, it uses the concepts of &amp;ldquo;owning thread&amp;rdquo; and &amp;ldquo;recursion level&amp;rdquo; in addition to the locked/unlocked state used by primitive locks. In the locked state, some thread owns the lock; in the unlocked state, no thread owns it.</source>
          <target state="translated">再入可能ロックは、同じスレッドによって複数回取得される可能性がある同期プリミティブです。内部的には、プリミティブロックで使用されるロック/ロック解除状態に加えて、「所有スレッド」および「再帰レベル」の概念を使用します。ロック状態では、一部のスレッドがロックを所有しています。ロック解除状態では、スレッドはそれを所有していません。</target>
        </trans-unit>
        <trans-unit id="cfaf2d84cef67a7e1c4ea1d2ed5a19290e06d05c" translate="yes" xml:space="preserve">
          <source>A reference to the parent &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">親の&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt;オブジェクトへの参照。</target>
        </trans-unit>
        <trans-unit id="fe68fe38d813942406023b96ef7655bd795ff7aa" translate="yes" xml:space="preserve">
          <source>A reference was made to an entity which was not defined.</source>
          <target state="translated">定義されていないエンティティへの参照が行われた。</target>
        </trans-unit>
        <trans-unit id="fc2814565b811bb72e387b5ad4e116a75b0028af" translate="yes" xml:space="preserve">
          <source>A regular expression (or RE) specifies a set of strings that matches it; the functions in this module let you check if a particular string matches a given regular expression (or if a given regular expression matches a particular string, which comes down to the same thing).</source>
          <target state="translated">このモジュールの関数は、特定の文字列が与えられた正規表現にマッチするかどうかをチェックします (あるいは、与えられた正規表現が特定の文字列にマッチするかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="278310ab0a87e2bebde6fb9b2d28696ab3d401e5" translate="yes" xml:space="preserve">
          <source>A relative path is interpreted relative to the current working directory.</source>
          <target state="translated">相対パスは、現在の作業ディレクトリからの相対パスとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="b69de6e0660f02bec80283fa3ef7149a693896df" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytearray object into its hexadecimal representation.</source>
          <target state="translated">バイト配列オブジェクトを16進数表現に変換するための逆変換関数が存在します。</target>
        </trans-unit>
        <trans-unit id="564befe131589980eaa0dc9e9dfcfae349e6d8e8" translate="yes" xml:space="preserve">
          <source>A reverse conversion function exists to transform a bytes object into its hexadecimal representation.</source>
          <target state="translated">バイトオブジェクトを16進数表現に変換する逆変換関数が存在します。</target>
        </trans-unit>
        <trans-unit id="87cbf6cd57661ce2eb0fe90dd90a5bacee5cf075" translate="yes" xml:space="preserve">
          <source>A right shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to division by &lt;code&gt;pow(2, n)&lt;/code&gt; without overflow check.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;ビットの右シフトは &lt;code&gt;pow(2, n)&lt;/code&gt; オーバーフローチェックなしのpow（2、n）による除算と同等です。</target>
        </trans-unit>
        <trans-unit id="fa2969dcef8d9a49a27a5430ee9b5eb46b150254" translate="yes" xml:space="preserve">
          <source>A right shift by &lt;em&gt;n&lt;/em&gt; bits is equivalent to floor division by &lt;code&gt;pow(2, n)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;ビットによる右シフトは、 &lt;code&gt;pow(2, n)&lt;/code&gt; によるフロア分割と同等です。</target>
        </trans-unit>
        <trans-unit id="184432cc5a56df44e1427ded0fcaad5c40e378c4" translate="yes" xml:space="preserve">
          <source>A round-robin scheduling policy.</source>
          <target state="translated">ラウンドロビンスケジューリングポリシー。</target>
        </trans-unit>
        <trans-unit id="2d2450e8ef446241d8a186b37b3d407b5c59148e" translate="yes" xml:space="preserve">
          <source>A sample usage might be something like this:</source>
          <target state="translated">使い方の例としては、こんな感じでしょうか。</target>
        </trans-unit>
        <trans-unit id="98edfa1526c0efe9099cce99ddcb7c504d9a1e51" translate="yes" xml:space="preserve">
          <source>A sample usage of our unpickler working has intended:</source>
          <target state="translated">私たちのアンピッカーの作業の使用例が意図されています。</target>
        </trans-unit>
        <trans-unit id="5fa5c854cf986de080adeddab9912ec17b8b1df0" translate="yes" xml:space="preserve">
          <source>A script (possibly registered with Misc.register) that is called immediately before displaying the values. It may specify which values to display.</source>
          <target state="translated">値を表示する直前に呼び出されるスクリプト(Misc.registerで登録されている可能性があります)。表示する値を指定することができます。</target>
        </trans-unit>
        <trans-unit id="23735aa84db218755b79767643c54ff40f2fab47" translate="yes" xml:space="preserve">
          <source>A second example demonstrates output parameters. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; function retrieves the dimensions of a specified window by copying them into &lt;code&gt;RECT&lt;/code&gt; structure that the caller has to supply. Here is the C declaration:</source>
          <target state="translated">2番目の例は、出力パラメーターを示しています。win32 &lt;code&gt;GetWindowRect&lt;/code&gt; 関数は、指定されたウィンドウの寸法を、呼び出し側が提供する必要のある &lt;code&gt;RECT&lt;/code&gt; 構造にコピーすることによって取得します。次にC宣言を示します。</target>
        </trans-unit>
        <trans-unit id="6bf3d7d9e60a594dca393cfc1e57ed7a4eb755f0" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some task calls &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォは、&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;呼び出しごとにデクリメントされ、&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;呼び出しごとにインクリメントされる内部カウンタを管理します。カウンターがゼロを下回ることはありません。とき&lt;a href=&quot;#asyncio.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;それはいくつかのタスクが呼び出すまで待機し、ブロック、それがゼロであることを発見&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f001dac28861f9744b78693c52be06f375a70a3" translate="yes" xml:space="preserve">
          <source>A semaphore manages an internal counter which is decremented by each &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; call and incremented by each &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; call. The counter can never go below zero; when &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; finds that it is zero, it blocks, waiting until some other thread calls &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォは、&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;呼び出しごとにデクリメントされ、&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;呼び出しごとにインクリメントされる内部カウンタを管理します。カウンターがゼロを下回ることはありません。とき&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;それはいくつかの他のスレッドが呼び出すまで待機し、ブロック、それがゼロであることを発見&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06a76aefa9f5a9e518125b5efe69166c037ad6a6" translate="yes" xml:space="preserve">
          <source>A semaphore object: a close analog of &lt;a href=&quot;threading#threading.Semaphore&quot;&gt;&lt;code&gt;threading.Semaphore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セマフォオブジェクト：&lt;a href=&quot;threading#threading.Semaphore&quot;&gt; &lt;code&gt;threading.Semaphore&lt;/code&gt; の&lt;/a&gt;類似物。</target>
        </trans-unit>
        <trans-unit id="c7848790bb96dd3a52d4bf86a18d50bb671f3c12" translate="yes" xml:space="preserve">
          <source>A semaphore.</source>
          <target state="translated">セマフォです。</target>
        </trans-unit>
        <trans-unit id="8542eec62199963efac79ef1b519957da0db1407" translate="yes" xml:space="preserve">
          <source>A sequence defining the structure fields. The items must be 2-tuples or 3-tuples. The first item is the name of the field, the second item specifies the type of the field; it can be any ctypes data type.</source>
          <target state="translated">構造体フィールドを定義するシーケンス。項目は2タプルまたは3タプルでなければなりません。最初の項目はフィールドの名前で、2番目の項目はフィールドの型を指定します。</target>
        </trans-unit>
        <trans-unit id="48ad0a2928de82fd8b299ed332a4541e9779e82e" translate="yes" xml:space="preserve">
          <source>A sequence of null-terminated strings, terminated by two null characters. (Python handles this termination automatically.)</source>
          <target state="translated">2つのヌル文字で終端するヌル文字列のシーケンス。(Pythonはこの終端を自動的に処理します)。</target>
        </trans-unit>
        <trans-unit id="49eae2b8156400102d2de31f44c9b7f044b0004f" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms guaranteed to be supported by this module on all platforms. Note that &amp;lsquo;md5&amp;rsquo; is in this list despite some upstream vendors offering an odd &amp;ldquo;FIPS compliant&amp;rdquo; Python build that excludes it.</source>
          <target state="translated">すべてのプラットフォームでこのモジュールによってサポートされることが保証されているハッシュアルゴリズムの名前を含むセット。一部の上流ベンダーがそれを除外する奇妙な「FIPS準拠」のPythonビルドを提供しているにもかかわらず、「md5」はこのリストにあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="12fadb35d13d46359eedacd2835823952e5162ba" translate="yes" xml:space="preserve">
          <source>A set containing the names of the hash algorithms that are available in the running Python interpreter. These names will be recognized when passed to &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt;&lt;code&gt;algorithms_guaranteed&lt;/code&gt;&lt;/a&gt; will always be a subset. The same algorithm may appear multiple times in this set under different names (thanks to OpenSSL).</source>
          <target state="translated">実行中のPythonインタープリターで使用可能なハッシュアルゴリズムの名前を含むセット。これらの名前は、&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;に渡されたときに認識されます。&lt;a href=&quot;#hashlib.algorithms_guaranteed&quot;&gt; &lt;code&gt;algorithms_guaranteed&lt;/code&gt; &lt;/a&gt;は常にサブセットです。このセットでは、同じアルゴリズムが異なる名前で複数回現れることがあります（OpenSSLのおかげです）。</target>
        </trans-unit>
        <trans-unit id="dedc6f13e73be80478d9314a2cca704e9a6d0255" translate="yes" xml:space="preserve">
          <source>A set. &lt;code&gt;elts&lt;/code&gt; holds a list of nodes representing the set&amp;rsquo;s elements.</source>
          <target state="translated">セット。 &lt;code&gt;elts&lt;/code&gt; は、セットの要素を表すノードのリストを保持します。</target>
        </trans-unit>
        <trans-unit id="59cc295113b43a2aa6bdc4227e00a42f34fd2718" translate="yes" xml:space="preserve">
          <source>A shallow copy of &lt;code&gt;module.__dict__&lt;/code&gt; is used for both local and global execution context.</source>
          <target state="translated">&lt;code&gt;module.__dict__&lt;/code&gt; 浅いコピーは、ローカル実行コンテキストとグローバル実行コンテキストの両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="d26717767841ef0e78b29d3c4d6169bcb2a7db93" translate="yes" xml:space="preserve">
          <source>A shallow copy of dictionary argument &lt;em&gt;globs&lt;/em&gt; is used for the execution context.</source>
          <target state="translated">辞書引数&lt;em&gt;globsの&lt;/em&gt;浅いコピーが実行コンテキストに使用されます。</target>
        </trans-unit>
        <trans-unit id="1169260b61888746c3a079157d99e6f61c0c10b7" translate="yes" xml:space="preserve">
          <source>A shared object gets deleted from the manager process when there are no longer any proxies referring to it.</source>
          <target state="translated">共有オブジェクトは、それを参照するプロキシがなくなると、マネージャプロセスから削除されます。</target>
        </trans-unit>
        <trans-unit id="3ee5e7664c7b19d5dea256033c9a42275e7d768f" translate="yes" xml:space="preserve">
          <source>A short usage example:</source>
          <target state="translated">短い使用例です。</target>
        </trans-unit>
        <trans-unit id="d350f8e46b513eb933a766fc06d8f7bc1e7855cb" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_stack(f, limit))&lt;/code&gt; の省略形。</target>
        </trans-unit>
        <trans-unit id="0a749b795f06550600447a0169cf24c779d0f176" translate="yes" xml:space="preserve">
          <source>A shorthand for &lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format_list(extract_tb(tb, limit))&lt;/code&gt; の省略形。</target>
        </trans-unit>
        <trans-unit id="d680c12f8a4e98b73840c4eb1f954e21eb884b1b" translate="yes" xml:space="preserve">
          <source>A sign character (&lt;code&gt;'+'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;) will precede the conversion (overrides a &amp;ldquo;space&amp;rdquo; flag).</source>
          <target state="translated">記号文字（ &lt;code&gt;'+'&lt;/code&gt; または &lt;code&gt;'-'&lt;/code&gt; ）は変換の前に置かれます（「スペース」フラグを上書きします）。</target>
        </trans-unit>
        <trans-unit id="8295b8b179c3eb769ae5ced64ca9d3357e8a07b4" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;example&lt;/a&gt; using transports, protocols, and the &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">トランスポート、プロトコル、および&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;メソッドを使用した同様の&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9816a27a3071e14aa4cc7b0d979658eab901c688" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;current date&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">コルーチンと&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;関数で作成された同様の&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;現在の日付の&lt;/a&gt;例。</target>
        </trans-unit>
        <trans-unit id="c0aa2b4df7991a37bad1b0944c5afe055528abc3" translate="yes" xml:space="preserve">
          <source>A similar &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello World&lt;/a&gt; example created with a coroutine and the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">コルーチンと&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;関数で作成された同様の&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;Hello Worldの&lt;/a&gt;例。</target>
        </trans-unit>
        <trans-unit id="cbb8400354d2ab8f01a6d370ad999d970aea658b" translate="yes" xml:space="preserve">
          <source>A simple &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; subclass that provides attribute access to its namespace, as well as a meaningful repr.</source>
          <target state="translated">名前空間への属性アクセスと、意味のあるreprを提供する単純な&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;サブクラス。</target>
        </trans-unit>
        <trans-unit id="6608731fe87a5bbfa371c043387adc8877916f98" translate="yes" xml:space="preserve">
          <source>A simple example demonstrating the use of the programmatic interface:</source>
          <target state="translated">プログラム・インターフェイスの使用を示す簡単な例です。</target>
        </trans-unit>
        <trans-unit id="c1b20a4571d8f5fc4dbbbd293f8b4bcd6a17862f" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use (a constant-time comparison operation is needed to limit exposure to timing attacks. &lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt;&lt;code&gt;hmac.compare_digest()&lt;/code&gt;&lt;/a&gt; is suitable for this purpose):</source>
          <target state="translated">典型的な使用法を示す簡単な例（タイミング攻撃への露出を制限するために一定時間の比較操作が必要です&lt;a href=&quot;hmac#hmac.compare_digest&quot;&gt; &lt;code&gt;hmac.compare_digest()&lt;/code&gt; &lt;/a&gt;はこの目的に適しています）：</target>
        </trans-unit>
        <trans-unit id="39492fd3c64429290422fb9d8bf5eb46c13341d4" translate="yes" xml:space="preserve">
          <source>A simple example illustrating typical use:</source>
          <target state="translated">典型的な使用例を示す簡単な例です。</target>
        </trans-unit>
        <trans-unit id="44e93bd7bca8db2e51ed966e536f70c2a01db2b6" translate="yes" xml:space="preserve">
          <source>A simple example of printing the subjects of all messages in a mailbox that seem interesting:</source>
          <target state="translated">メールボックス内の全てのメッセージの件名を、面白そうなものを印刷した簡単な例です。</target>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">簡単な例です。</target>
        </trans-unit>
        <trans-unit id="ae7798a28395a6340e3133d1e7c1839067f6a8e8" translate="yes" xml:space="preserve">
          <source>A simple set of examples:</source>
          <target state="translated">シンプルな例題集です。</target>
        </trans-unit>
        <trans-unit id="400bff2d1d48555e7a88b7ac26ee66c3fbf404f6" translate="yes" xml:space="preserve">
          <source>A simple typed namespace. At runtime it is equivalent to a plain &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単純な型付き名前空間。実行時は、単純な&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="1778756c346af273a27beed59f001b8aaa66eb9b" translate="yes" xml:space="preserve">
          <source>A simpler option is to simply set the &amp;ldquo;name&amp;rdquo; attribute after mock creation:</source>
          <target state="translated">より簡単なオプションは、モックの作成後に単に「name」属性を設定することです。</target>
        </trans-unit>
        <trans-unit id="d4b8d651deb9e36f36a73b620c31c7a4ad8bf0ee" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;except&lt;/code&gt; clause. &lt;code&gt;type&lt;/code&gt; is the exception type it will match, typically a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; node (or &lt;code&gt;None&lt;/code&gt; for a catch-all &lt;code&gt;except:&lt;/code&gt; clause). &lt;code&gt;name&lt;/code&gt; is a raw string for the name to hold the exception, or &lt;code&gt;None&lt;/code&gt; if the clause doesn&amp;rsquo;t have &lt;code&gt;as foo&lt;/code&gt;. &lt;code&gt;body&lt;/code&gt; is a list of nodes.</source>
          <target state="translated">単一の &lt;code&gt;except&lt;/code&gt; 句。 &lt;code&gt;type&lt;/code&gt; は、一致する例外タイプであり、通常は&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;ノード（または &lt;code&gt;except:&lt;/code&gt; 句を除くキャッチオールの場合は &lt;code&gt;None&lt;/code&gt; ）です。 &lt;code&gt;name&lt;/code&gt; は、例外を保持する名前の生の文字列です。句に &lt;code&gt;as foo&lt;/code&gt; がない場合は、 &lt;code&gt;None&lt;/code&gt; です。 &lt;code&gt;body&lt;/code&gt; はノードのリストです。</target>
        </trans-unit>
        <trans-unit id="6b2fd25df18750c538e86a443be6e8a1f46f3141" translate="yes" xml:space="preserve">
          <source>A single argument in a list. &lt;code&gt;arg&lt;/code&gt; is a raw string of the argument name, &lt;code&gt;annotation&lt;/code&gt; is its annotation, such as a &lt;code&gt;Str&lt;/code&gt; or &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; node.</source>
          <target state="translated">リスト内の単一の引数。 &lt;code&gt;arg&lt;/code&gt; は引数名の生の文字列であり、 &lt;code&gt;annotation&lt;/code&gt; は &lt;code&gt;Str&lt;/code&gt; ノードや&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;ノードなどの注釈です。</target>
        </trans-unit>
        <trans-unit id="28a40ed12bd654761eff7801cf611643a2f334c9" translate="yes" xml:space="preserve">
          <source>A single context manager in a &lt;code&gt;with&lt;/code&gt; block. &lt;code&gt;context_expr&lt;/code&gt; is the context manager, often a &lt;a href=&quot;#ast.Call&quot;&gt;&lt;code&gt;Call&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;optional_vars&lt;/code&gt; is a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;as foo&lt;/code&gt; part, or &lt;code&gt;None&lt;/code&gt; if that isn&amp;rsquo;t used.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; ブロック内の単一のコンテキストマネージャー。 &lt;code&gt;context_expr&lt;/code&gt; はコンテキストマネージャーであり、多くの場合、&lt;a href=&quot;#ast.Call&quot;&gt; &lt;code&gt;Call&lt;/code&gt; &lt;/a&gt;ノードです。 &lt;code&gt;optional_vars&lt;/code&gt; がある&lt;a href=&quot;#ast.Name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#ast.List&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;用 &lt;code&gt;as foo&lt;/code&gt; 一部、または &lt;code&gt;None&lt;/code&gt; に使用されていない場合。</target>
        </trans-unit>
        <trans-unit id="6fa256381f5f3fdc1e9ddf323c393ca970d51e94" translate="yes" xml:space="preserve">
          <source>A single exception is defined:</source>
          <target state="translated">1つの例外が定義されています。</target>
        </trans-unit>
        <trans-unit id="77aa5f41dd9106f7bd2c4d2b21ec060c0df7ee38" translate="yes" xml:space="preserve">
          <source>A single interactive example, consisting of a Python statement and its expected output. The constructor arguments are used to initialize the attributes of the same names.</source>
          <target state="translated">Python 文とその期待される出力からなる単一の対話的な例です。コンストラクタの引数は、同名の属性を初期化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1678b7653c8ad5878c0957e08c63d64d24b7a2d9" translate="yes" xml:space="preserve">
          <source>A slash(/) in the signature of a function denotes that the parameters prior to it are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">関数のシグニチャーのスラッシュ（/）は、その前のパラメーターが位置のみであることを示します。詳細については&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;、位置のみのパラメータに関するFAQエントリを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ac9172b1b25ebd1f348f44756376e8b084943634" translate="yes" xml:space="preserve">
          <source>A slash(/) in the signature of a function denotes that the parameters prior to it are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">関数のシグニチャーのスラッシュ（/）は、その前のパラメーターが位置のみであることを示します。詳細については&lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;、位置のみのパラメータに関するFAQエントリを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c3d52d28caf1f8e3ebc74d7080a5dd1a88e9282" translate="yes" xml:space="preserve">
          <source>A slightly more advanced use of the reader &amp;mdash; catching and reporting errors:</source>
          <target state="translated">リーダーのもう少し高度な使用法&amp;mdash;エラーのキャッチとレポート：</target>
        </trans-unit>
        <trans-unit id="898ebff01eaf3b8759adc9d7329175bc0b8511cb" translate="yes" xml:space="preserve">
          <source>A small number of constants live in the built-in namespace. They are:</source>
          <target state="translated">少数の定数が組み込みの名前空間に存在します。それらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2f57e31984cb6932a8e39a8ebeab0588c1bb3009" translate="yes" xml:space="preserve">
          <source>A socket object can be in one of three modes: blocking, non-blocking, or timeout. Sockets are by default always created in blocking mode, but this can be changed by calling &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットオブジェクトは、ブロッキング、非ブロッキング、またはタイムアウトの3つのモードのいずれかになります。ソケットはデフォルトでは常にブロッキングモードで作成されますが、これは&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; を&lt;/a&gt;呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="e405eec72bfbf93e7d5d778bf66ae75f5d35cc43" translate="yes" xml:space="preserve">
          <source>A solitary difference from its close analog exists: its &lt;code&gt;acquire&lt;/code&gt; method&amp;rsquo;s first argument is named &lt;em&gt;block&lt;/em&gt;, as is consistent with &lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt;&lt;code&gt;Lock.acquire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">その近いアナログから孤立差が存在する：その &lt;code&gt;acquire&lt;/code&gt; メソッドの最初の引数の名前は&lt;em&gt;、ブロック&lt;/em&gt;、と一致するように&lt;a href=&quot;#multiprocessing.Lock.acquire&quot;&gt; &lt;code&gt;Lock.acquire()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf3e702a5afe2e89ff3f3db0ef3665216cfbc631" translate="yes" xml:space="preserve">
          <source>A solution to the first two challenges is to store entries as 3-element list including the priority, an entry count, and the task. The entry count serves as a tie-breaker so that two tasks with the same priority are returned in the order they were added. And since no two entry counts are the same, the tuple comparison will never attempt to directly compare two tasks.</source>
          <target state="translated">最初の2つの課題に対する解決策は、エントリを優先度、エントリ数、タスクを含む3つの要素のリストとして保存することです。エントリカウントは、同じ優先度を持つ2つのタスクが追加された順に返されるように、タイブレークの役割を果たします。また、2つのエントリカウントは同じではないので、タプル比較は2つのタスクを直接比較しようとはしません。</target>
        </trans-unit>
        <trans-unit id="096bd808e501639e423de5a2cbb278cf68ed16b4" translate="yes" xml:space="preserve">
          <source>A special attribute of every module is &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt;. This is the dictionary containing the module&amp;rsquo;s symbol table. Modifying this dictionary will actually change the module&amp;rsquo;s symbol table, but direct assignment to the &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute is not possible (you can write &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt;, which defines &lt;code&gt;m.a&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, but you can&amp;rsquo;t write &lt;code&gt;m.__dict__ = {}&lt;/code&gt;). Modifying &lt;a href=&quot;#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; directly is not recommended.</source>
          <target state="translated">すべてのモジュールの特別な属性は&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;です。これは、モジュールのシンボルテーブルを含む辞書です。このディクショナリを変更すると、モジュールのシンボルテーブルが実際に変更されますが、 &lt;code&gt;m.__dict__['a'] = 1&lt;/code&gt; &lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性に直接割り当てることはできません（m .__ dict __ ['a'] = 1と書くことができます。これは、 &lt;code&gt;m.a&lt;/code&gt; を &lt;code&gt;1&lt;/code&gt; と定義しますが、 &lt;code&gt;m.__dict__ = {}&lt;/code&gt; 書くことはできません。.__ dict__ = {}）。&lt;a href=&quot;#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; を&lt;/a&gt;直接変更することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="350860d7d2f026325c9ed753e8012e0f492b3cef" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of a return annotation.</source>
          <target state="translated">戻り値アノテーションの不在を指定するための特別なクラス・レベル・マーカー。</target>
        </trans-unit>
        <trans-unit id="ce834d784be00653df494feb83b9f6a0fe0232f1" translate="yes" xml:space="preserve">
          <source>A special class-level marker to specify absence of default values and annotations.</source>
          <target state="translated">デフォルト値やアノテーションを持たないことを指定するための特別なクラスレベルのマーカー。</target>
        </trans-unit>
        <trans-unit id="637523941475f7686ab8baf723f111f45b51298d" translate="yes" xml:space="preserve">
          <source>A special constant that is assumed to be &lt;code&gt;True&lt;/code&gt; by 3rd party static type checkers. It is &lt;code&gt;False&lt;/code&gt; at runtime. Usage:</source>
          <target state="translated">サードパーティの静的型チェッカーによって &lt;code&gt;True&lt;/code&gt; であると想定される特別な定数。実行時には &lt;code&gt;False&lt;/code&gt; です。使用法：</target>
        </trans-unit>
        <trans-unit id="3279a81827c8b621d38f653bc2a69edd2e98eeb9" translate="yes" xml:space="preserve">
          <source>A special kind of type is &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;. A static type checker will treat every type as being compatible with &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; as being compatible with every type.</source>
          <target state="translated">特別な種類のタイプは&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;です。静的型チェッカーは、と互換性のあるものとして、すべてのタイプを扱う&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;すべてのタイプと互換性があるとして。</target>
        </trans-unit>
        <trans-unit id="dca41668950435a9f7e18c16a1bd901f35d7d3f9" translate="yes" xml:space="preserve">
          <source>A special typing construct to indicate to type checkers that a name cannot be re-assigned or overridden in a subclass. For example:</source>
          <target state="translated">サブクラスで名前を再割り当てしたりオーバーライドしたりすることができないことを型チェッカーに示すための特別な型付け構造体。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c9c5c2d3363e18dd4be009fb8cdb1d42561049b3" translate="yes" xml:space="preserve">
          <source>A special-interest-group for discussion of testing, and testing tools, in Python.</source>
          <target state="translated">Pythonでのテストやテストツールについて議論するための特別な会です。</target>
        </trans-unit>
        <trans-unit id="ad1a92f0cb821225e4017a94010fdf1040669506" translate="yes" xml:space="preserve">
          <source>A specialized alternative to &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt;, for use when deploying on Microsoft&amp;rsquo;s IIS web server, without having set the config allowPathInfo option (IIS&amp;gt;=7) or metabase allowPathInfoForScriptMappings (IIS&amp;lt;7).</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; &lt;/a&gt;の特殊な代替手段で、MicrosoftのIIS Webサーバーにデプロイするときに使用します。configallowPathInfoオプション（IIS&amp;gt; = 7）またはメタベースallowPathInfoForScriptMappings（IIS &amp;lt;7）を設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c4118a2f3f478f32d9f31601e7190c8ce65ab75b" translate="yes" xml:space="preserve">
          <source>A specification for a module&amp;rsquo;s import-system-related state. This is typically exposed as the module&amp;rsquo;s &lt;code&gt;__spec__&lt;/code&gt; attribute. In the descriptions below, the names in parentheses give the corresponding attribute available directly on the module object. E.g. &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt;. Note however that while the &lt;em&gt;values&lt;/em&gt; are usually equivalent, they can differ since there is no synchronization between the two objects. Thus it is possible to update the module&amp;rsquo;s &lt;code&gt;__path__&lt;/code&gt; at runtime, and this will not be automatically reflected in &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt;.</source>
          <target state="translated">モジュールのインポートシステム関連の状態の仕様。これは通常、モジュールの &lt;code&gt;__spec__&lt;/code&gt; 属性として公開されます。以下の説明では、括弧内の名前は、モジュールオブジェクトで直接使用できる対応する属性を示しています。例： &lt;code&gt;module.__spec__.origin == module.__file__&lt;/code&gt; 。ただし、通常は&lt;em&gt;値&lt;/em&gt;は同じ&lt;em&gt;です&lt;/em&gt;が、2つのオブジェクト間に同期がないため、&lt;em&gt;値&lt;/em&gt;が異なる場合があります。したがって、実行時にモジュールの &lt;code&gt;__path__&lt;/code&gt; を更新することが可能であり、これは &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; 自動的に反映されません。</target>
        </trans-unit>
        <trans-unit id="68f5cd32463c3d785efa4f8d8fce98c066a6f661" translate="yes" xml:space="preserve">
          <source>A specification of MMDF format from the documentation of tin, a newsreader.</source>
          <target state="translated">ニュースリーダーのすずのドキュメントからMMDF形式の仕様。</target>
        </trans-unit>
        <trans-unit id="3babd4b55bc7cb772fec830be58f3b1bf01d70a8" translate="yes" xml:space="preserve">
          <source>A specification of the Babyl format.</source>
          <target state="translated">バビル形式の仕様。</target>
        </trans-unit>
        <trans-unit id="880abe5218724ebf38706b93b963643ddd6c46d2" translate="yes" xml:space="preserve">
          <source>A specification of the format and its variations.</source>
          <target state="translated">フォーマットの仕様とそのバリエーション。</target>
        </trans-unit>
        <trans-unit id="3727d1f65952e6742ce409e5f8d5ad37e6940601" translate="yes" xml:space="preserve">
          <source>A specification of the format, with details on locking.</source>
          <target state="translated">フォーマットの仕様で、ロックの詳細が記載されています。</target>
        </trans-unit>
        <trans-unit id="cbfb1789ebf20df3a87c52728764572e221f5901" translate="yes" xml:space="preserve">
          <source>A specification of the format. Describes a common extension for supporting folders.</source>
          <target state="translated">フォーマットの仕様。フォルダをサポートするための共通の拡張子を記述します。</target>
        </trans-unit>
        <trans-unit id="8e598ccfa02f6f982d35271d6d8413a2dcd8d0e9" translate="yes" xml:space="preserve">
          <source>A stack traceback such as is provided by &lt;a href=&quot;traceback#traceback.print_stack&quot;&gt;&lt;code&gt;traceback.print_stack()&lt;/code&gt;&lt;/a&gt;, showing the call hierarchy.</source>
          <target state="translated">&lt;a href=&quot;traceback#traceback.print_stack&quot;&gt; &lt;code&gt;traceback.print_stack()&lt;/code&gt; &lt;/a&gt;によって提供されるようなスタックトレースバックは、呼び出し階層を示します。</target>
        </trans-unit>
        <trans-unit id="920378f02b4726cf356a62a8babd3e02c63917c6" translate="yes" xml:space="preserve">
          <source>A state specification is a sequence of state names, optionally prefixed with an exclamation point indicating that the bit is off.</source>
          <target state="translated">ステート指定とは、ビットがオフであることを示す感嘆符をオプションでプレフィックスした一連のステート名のことです。</target>
        </trans-unit>
        <trans-unit id="6ef4ebab996d1f45a1c0cae57a6fb9b310520e99" translate="yes" xml:space="preserve">
          <source>A static method can be called either on the class (such as &lt;code&gt;C.f()&lt;/code&gt;) or on an instance (such as &lt;code&gt;C().f()&lt;/code&gt;).</source>
          <target state="translated">静的メソッドは、クラス（ &lt;code&gt;C.f()&lt;/code&gt; ）またはインスタンス（ &lt;code&gt;C().f()&lt;/code&gt; など）で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="174b86cd307a93d7ede9985e59dfb55608a534c0" translate="yes" xml:space="preserve">
          <source>A static method does not receive an implicit first argument. To declare a static method, use this idiom:</source>
          <target state="translated">静的メソッドは暗黙の第一引数を受け取りません。静的メソッドを宣言するには、このイディオムを使用します。</target>
        </trans-unit>
        <trans-unit id="858fb724027cfca291b2dfaa1173abe4a25c8c00" translate="yes" xml:space="preserve">
          <source>A static method which returns a callable that creates a lazy loader. This is meant to be used in situations where the loader is passed by class instead of by instance.</source>
          <target state="translated">遅延ローダを作成する callable を返す静的メソッドです。これは、ローダがインスタンスではなくクラスで渡される場合に使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="6598324a6503c84ca67a35b1e37f66321d0cc98b" translate="yes" xml:space="preserve">
          <source>A stream implementation using an in-memory bytes buffer. It inherits &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;. The buffer is discarded when the &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">インメモリバイトバッファーを使用したスト​​リーム実装。&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; を&lt;/a&gt;継承しています。&lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、バッファは破棄されます。</target>
        </trans-unit>
        <trans-unit id="76435fdba1ae6e1ec5de2745cd624d720dc07d8c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional mask, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the mask can be either a single number, which means it&amp;rsquo;s a &lt;em&gt;prefix&lt;/em&gt;, or a string representation of an IPv4 address. If it&amp;rsquo;s the latter, the mask is interpreted as a &lt;em&gt;net mask&lt;/em&gt; if it starts with a non-zero field, or as a &lt;em&gt;host mask&lt;/em&gt; if it starts with a zero field, with the single exception of an all-zero mask which is treated as a &lt;em&gt;net mask&lt;/em&gt;. If no mask is provided, it&amp;rsquo;s considered to be &lt;code&gt;/32&lt;/code&gt;.</source>
          <target state="translated">スラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で区切られたIPアドレスとオプションのマスクで構成される文字列。 IPアドレスはネットワークアドレスであり、マスクは単一の番号（つまり、&lt;em&gt;プレフィックス&lt;/em&gt;であることを意味し&lt;em&gt;ます&lt;/em&gt;）またはIPv4アドレスの文字列表現のいずれかです。後者の場合、マスクは、ゼロ以外のフィールドで始まる場合は&lt;em&gt;ネットマスク&lt;/em&gt;として解釈され、ゼロフィールドで始まる場合は&lt;em&gt;ホストマスク&lt;/em&gt;として解釈されます。&lt;em&gt;ネットマスク&lt;/em&gt;。マスクが指定されていない場合、 &lt;code&gt;/32&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="78c0c3e7a735e19323cbd003b6b63d79aa63ae1c" translate="yes" xml:space="preserve">
          <source>A string consisting of an IP address and an optional prefix length, separated by a slash (&lt;code&gt;/&lt;/code&gt;). The IP address is the network address, and the prefix length must be a single number, the &lt;em&gt;prefix&lt;/em&gt;. If no prefix length is provided, it&amp;rsquo;s considered to be &lt;code&gt;/128&lt;/code&gt;.</source>
          <target state="translated">スラッシュ（ &lt;code&gt;/&lt;/code&gt; ）で区切られた、IPアドレスとオプションのプレフィックス長で構成される文字列。IPアドレスはネットワークアドレスであり、プレフィックスの長さは単一の数字である&lt;em&gt;プレフィックスで&lt;/em&gt;なければなりません。プレフィックス長が指定されていない場合、 &lt;code&gt;/128&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="237deb5e98fd45357a17f1768376efe3e60e90b8" translate="yes" xml:space="preserve">
          <source>A string consisting of eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons. This describes an &lt;em&gt;exploded&lt;/em&gt; (longhand) notation. The string can also be &lt;em&gt;compressed&lt;/em&gt; (shorthand notation) by various means. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt; for details. For example, &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; can be compressed to &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt;.</source>
          <target state="translated">4つの16進数の8つのグループで構成される文字列。各グループは16ビットを表します。グループはコロンで区切られます。これは、説明し&lt;em&gt;た分解&lt;/em&gt;（手書き）表記。文字列は、さまざまな方法で&lt;em&gt;圧縮&lt;/em&gt;（短縮表記）することもできます。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc4291.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4291&lt;/strong&gt;&lt;/a&gt;を参照してください。たとえば、 &lt;code&gt;&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;&lt;/code&gt; は &lt;code&gt;&quot;::abc:7:def&quot;&lt;/code&gt; 圧縮できます。</target>
        </trans-unit>
        <trans-unit id="aef6d4595a0913292c36ecd58b3a3568198db4c5" translate="yes" xml:space="preserve">
          <source>A string containing a diagnostic message associated with the fault.</source>
          <target state="translated">フォルトに関連する診断メッセージを含む文字列。</target>
        </trans-unit>
        <trans-unit id="81b39e8a05161f630901941638fda04c2b6f39c1" translate="yes" xml:space="preserve">
          <source>A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab.</source>
          <target state="translated">空白とみなされるすべての ASCII 文字を含む文字列。これには space,tab,linefeed,return,formfeed,vertical tab という文字が含まれます。</target>
        </trans-unit>
        <trans-unit id="02bf24f6c9f2fbd3f9a2ca3b6ce7459c45d991f7" translate="yes" xml:space="preserve">
          <source>A string containing the copyright pertaining to the Python interpreter.</source>
          <target state="translated">Pythonインタプリタに関連する著作権を含む文字列。</target>
        </trans-unit>
        <trans-unit id="602f371cbcfdb3cf6cfc5a0f24dd9a3734e536d7" translate="yes" xml:space="preserve">
          <source>A string containing the example&amp;rsquo;s source code. This source code consists of a single Python statement, and always ends with a newline; the constructor adds a newline when necessary.</source>
          <target state="translated">例のソースコードを含む文字列。このソースコードは単一のPythonステートメントで構成され、常に改行で終了します。コンストラクタは必要に応じて改行を追加します。</target>
        </trans-unit>
        <trans-unit id="e1f80f8d0c2fd10cd8656f15485d121546bf45d4" translate="yes" xml:space="preserve">
          <source>A string containing the format (in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module style) for each element in the view. A memoryview can be created from exporters with arbitrary format strings, but some methods (e.g. &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist()&lt;/code&gt;&lt;/a&gt;) are restricted to native single element formats.</source>
          <target state="translated">ビューの各要素の形式（&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールスタイル）を含む文字列。メモリビューは、任意のフォーマット文字列を使用してエクスポーターから作成できますが、一部のメソッド（例：&lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist()&lt;/code&gt; &lt;/a&gt;）は、ネイティブの単一要素フォーマットに制限されています。</target>
        </trans-unit>
        <trans-unit id="5497a158149dccf8e4b9ad551b13d3d9fcf2ffc0" translate="yes" xml:space="preserve">
          <source>A string containing the version number of the Python interpreter plus additional information on the build number and compiler used. This string is displayed when the interactive interpreter is started. Do not extract version information out of it, rather, use &lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;version_info&lt;/code&gt;&lt;/a&gt; and the functions provided by the &lt;a href=&quot;platform#module-platform&quot;&gt;&lt;code&gt;platform&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Pythonインタープリターのバージョン番号と、ビルド番号および使用されたコンパイラーに関する追加情報を含む文字列。この文字列は、対話型インタープリターが開始されたときに表示されます。そこからバージョン情報を抽出せず、&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;version_info&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;platform#module-platform&quot;&gt; &lt;code&gt;platform&lt;/code&gt; &lt;/a&gt;モジュールが提供する関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="87de8fd8a95197f57121e5b7786f6335363597fb" translate="yes" xml:space="preserve">
          <source>A string describing the software name and version of the NNTP server, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if not advertised by the server.</source>
          <target state="translated">NNTPサーバーのソフトウェア名とバージョンを説明する文字列、またはサーバーから通知されない場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edbd00479009ac29a277bcdb7f7f622f3cf29480" translate="yes" xml:space="preserve">
          <source>A string describing the specific codec error.</source>
          <target state="translated">特定のコーデックエラーを記述する文字列。</target>
        </trans-unit>
        <trans-unit id="5c10f3d5bb16c2fb415030d97d9657d81442e989" translate="yes" xml:space="preserve">
          <source>A string for the fully-qualified name of the module.</source>
          <target state="translated">モジュールの完全修飾名を表す文字列。</target>
        </trans-unit>
        <trans-unit id="bd20de9160337cf7d4615529ad2c990a8d28695a" translate="yes" xml:space="preserve">
          <source>A string giving the absolute path of the executable binary for the Python interpreter, on systems where this makes sense. If Python is unable to retrieve the real path to its executable, &lt;a href=&quot;#sys.executable&quot;&gt;&lt;code&gt;sys.executable&lt;/code&gt;&lt;/a&gt; will be an empty string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">これが理にかなっているシステムでは、Pythonインタープリターの実行可能バイナリの絶対パスを指定する文字列。Pythonがその実行可能ファイルへの実際のパスを取得できない場合、&lt;a href=&quot;#sys.executable&quot;&gt; &lt;code&gt;sys.executable&lt;/code&gt; &lt;/a&gt;は空の文字列または &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="82a5b3b17625dc398e0887b40698af61a1e88431" translate="yes" xml:space="preserve">
          <source>A string giving the complete internal subset from the document. This does not include the brackets which enclose the subset. If the document has no internal subset, this should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ドキュメントからの完全な内部サブセットを与える文字列。これには、サブセットを囲むブラケットは含まれません。ドキュメントに内部サブセットがない場合、これは &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="82c2539aafdf888e5c8ef7fece2e98e2d2f074a7" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform independent Python files are installed; by default, this is the string &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. The main collection of Python library modules is installed in the directory &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; while the platform independent header files (all except &lt;code&gt;pyconfig.h&lt;/code&gt;) are stored in &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">プラットフォームに依存しないPythonファイルがインストールされているサイト固有のディレクトリプレフィックスを示す文字列。デフォルトでは、これは文字列 &lt;code&gt;'/usr/local'&lt;/code&gt; です。これは、ビルド時に&lt;strong&gt;configure&lt;/strong&gt;スクリプトの &lt;code&gt;--prefix&lt;/code&gt; 引数で&lt;strong&gt;設定でき&lt;/strong&gt;ます。 Pythonライブラリモジュールのメインコレクションは、ディレクトリ &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; インストールされますが、プラットフォームに依存しないヘッダーファイル（ &lt;code&gt;pyconfig.h&lt;/code&gt; を除くすべて）は、 &lt;code&gt;&lt;em&gt;prefix&lt;/em&gt;/include/python&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; に保存され&lt;em&gt;ます&lt;/em&gt;。ここで、&lt;em&gt;XY&lt;/em&gt;はPythonのバージョン番号です。たとえば &lt;code&gt;3.2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dbea00c5fe6b20a57a6af3a243d22cb8c28d88f0" translate="yes" xml:space="preserve">
          <source>A string giving the site-specific directory prefix where the platform-dependent Python files are installed; by default, this is also &lt;code&gt;'/usr/local'&lt;/code&gt;. This can be set at build time with the &lt;code&gt;--exec-prefix&lt;/code&gt; argument to the &lt;strong&gt;configure&lt;/strong&gt; script. Specifically, all configuration files (e.g. the &lt;code&gt;pyconfig.h&lt;/code&gt; header file) are installed in the directory &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt;, and shared library modules are installed in &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt;, where &lt;em&gt;X.Y&lt;/em&gt; is the version number of Python, for example &lt;code&gt;3.2&lt;/code&gt;.</source>
          <target state="translated">プラットフォーム依存のPythonファイルがインストールされているサイト固有のディレクトリプレフィックスを示す文字列。デフォルトでは、これも &lt;code&gt;'/usr/local'&lt;/code&gt; です。これは、ビルド時に&lt;strong&gt;configure&lt;/strong&gt;スクリプトの &lt;code&gt;--exec-prefix&lt;/code&gt; 引数で&lt;strong&gt;設定でき&lt;/strong&gt;ます。具体的には、すべての構成ファイル（たとえば &lt;code&gt;pyconfig.h&lt;/code&gt; ヘッダーファイル）が &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/config&lt;/code&gt; ディレクトリにインストールされ、共有ライブラリモジュールが &lt;code&gt;&lt;em&gt;exec_prefix&lt;/em&gt;/lib/python&lt;em&gt;X.Y&lt;/em&gt;/lib-dynload&lt;/code&gt; にインストールされます。ここで、&lt;em&gt;XY&lt;/em&gt;はPythonのバージョン番号、たとえば &lt;code&gt;3.2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c8652dd6a5ac42f8da95a3a336a8e2fe1700b98" translate="yes" xml:space="preserve">
          <source>A string identifying what kind of data this element represents (the element type, in other words).</source>
          <target state="translated">この要素がどのようなデータを表すかを識別する文字列(言い換えれば要素の種類)。</target>
        </trans-unit>
        <trans-unit id="e099a6c12e8ac23155a4c961ffd7c4719169caa2" translate="yes" xml:space="preserve">
          <source>A string in decimal-dot notation, consisting of four decimal integers in the inclusive range 0&amp;ndash;255, separated by dots (e.g. &lt;code&gt;192.168.0.1&lt;/code&gt;). Each integer represents an octet (byte) in the address. Leading zeroes are tolerated only for values less than 8 (as there is no ambiguity between the decimal and octal interpretations of such strings).</source>
          <target state="translated">ドットで区切られた0〜255の範囲の4つの10進整数で構成される10進ドット表記の文字列（例： &lt;code&gt;192.168.0.1&lt;/code&gt; ）。各整数は、アドレスのオクテット（バイト）を表します。先頭のゼロは、8未満の値に対してのみ許容されます（そのような文字列の10進数と8進数の解釈のあいまいさはありません）。</target>
        </trans-unit>
        <trans-unit id="98d779e7a9a7548a374142ec0fd14b12dcce04f0" translate="yes" xml:space="preserve">
          <source>A string indicating how the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function behaves for floats. If the string has value &lt;code&gt;'short'&lt;/code&gt; then for a finite float &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;repr(x)&lt;/code&gt; aims to produce a short string with the property that &lt;code&gt;float(repr(x)) == x&lt;/code&gt;. This is the usual behaviour in Python 3.1 and later. Otherwise, &lt;code&gt;float_repr_style&lt;/code&gt; has value &lt;code&gt;'legacy'&lt;/code&gt; and &lt;code&gt;repr(x)&lt;/code&gt; behaves in the same way as it did in versions of Python prior to 3.1.</source>
          <target state="translated">floatに対する&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;関数の動作を示す文字列。文字列の値が &lt;code&gt;'short'&lt;/code&gt; の場合、有限の浮動小数点 &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;repr(x)&lt;/code&gt; は、 &lt;code&gt;float(repr(x)) == x&lt;/code&gt; のプロパティを持つ短い文字列を生成することを目的としています。これはPython 3.1以降の通常の動作です。それ以外の場合、 &lt;code&gt;float_repr_style&lt;/code&gt; の値は &lt;code&gt;'legacy'&lt;/code&gt; あり、 &lt;code&gt;repr(x)&lt;/code&gt; は、3.1より前のバージョンのPythonと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2f9a9d4483639b8e4c8302ccccdaba76f46139ac" translate="yes" xml:space="preserve">
          <source>A string indicating the fault type.</source>
          <target state="translated">フォルトタイプを示す文字列。</target>
        </trans-unit>
        <trans-unit id="c2c502f394d7092bcce74de311739e93f611cf7a" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the OpenSSL submodule in which the error occurred, such as &lt;code&gt;SSL&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt; or &lt;code&gt;X509&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">&lt;code&gt;SSL&lt;/code&gt; 、 &lt;code&gt;PEM&lt;/code&gt; 、 &lt;code&gt;X509&lt;/code&gt; など、エラーが発生したOpenSSLサブモジュールを指定する文字列ニーモニック。可能な値の範囲は、OpenSSLのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="430973647ef865594ce46611eb822fdc420d4549" translate="yes" xml:space="preserve">
          <source>A string mnemonic designating the reason this error occurred, for example &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt;. The range of possible values depends on the OpenSSL version.</source>
          <target state="translated">このエラーが発生した理由を示す文字列ニーモニック（ &lt;code&gt;CERTIFICATE_VERIFY_FAILED&lt;/code&gt; など)。可能な値の範囲は、OpenSSLのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="ead8e2705a51951c91f9ddcda6d821dc670588f9" translate="yes" xml:space="preserve">
          <source>A string name identifying the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;. Typically, this is the name of the object or file that the test was extracted from.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; を&lt;/a&gt;識別する文字列名。通常、これは、テストが抽出されたオブジェクトまたはファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="daef7957ccd37511d60fee6ca46be1ff15a1529c" translate="yes" xml:space="preserve">
          <source>A string of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; read before the end of stream was reached.</source>
          <target state="translated">ストリームの終わりに達する前に読み取られた&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;の文字列。</target>
        </trans-unit>
        <trans-unit id="2d32a9df8f0c11fad8fb171523d540f600ab323b" translate="yes" xml:space="preserve">
          <source>A string of the form #n, where n is an integer, specifying the nth display column.</source>
          <target state="translated">nは整数で、n番目の表示列を指定します。</target>
        </trans-unit>
        <trans-unit id="0c4df2b65593c46afd8e675b2cb2d3a19b9a1855" translate="yes" xml:space="preserve">
          <source>A string or a tuple &lt;code&gt;(id, unit)&lt;/code&gt; is used for the &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; protocol of the &lt;code&gt;PF_SYSTEM&lt;/code&gt; family. The string is the name of a kernel control using a dynamically-assigned ID. The tuple can be used if ID and unit number of the kernel control are known or if a registered ID is used.</source>
          <target state="translated">文字列またはタプル &lt;code&gt;(id, unit)&lt;/code&gt; は、 &lt;code&gt;PF_SYSTEM&lt;/code&gt; ファミリの &lt;code&gt;SYSPROTO_CONTROL&lt;/code&gt; プロトコルに使用されます。文字列は、動的に割り当てられたIDを使用するカーネルコントロールの名前です。タプルは、カーネルコントロールのIDとユニット番号がわかっている場合、または登録IDが使用されている場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="a84ecaf3012782764f7426a5eec841f9b5ad7aba" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the mask in prefix notation.</source>
          <target state="translated">プレフィックス表記でマスクを持つインターフェイスを文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="72998dbff76ca26cb4e1a93d0ac16de996142954" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a host mask.</source>
          <target state="translated">ネットワークとのインターフェースをホストマスクとして文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="7371903e755bf49dda7112025b476547bae7d6ac" translate="yes" xml:space="preserve">
          <source>A string representation of the interface with the network as a net mask.</source>
          <target state="translated">ネットワークとのインターフェースをネットマスクとして文字列で表現したもの。</target>
        </trans-unit>
        <trans-unit id="bf9731d346ddf0d65f9d0c39679778dee1e3fa12" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in host mask notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはホストマスク表記を使用します。</target>
        </trans-unit>
        <trans-unit id="7568a7359cb2750b66d47402cfff82e081404d9b" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in net mask notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはネットマスク記法で表現されます。</target>
        </trans-unit>
        <trans-unit id="316bb3be50867216649ff211d2dca7247c501409" translate="yes" xml:space="preserve">
          <source>A string representation of the network, with the mask in prefix notation.</source>
          <target state="translated">ネットワークの文字列表現で、マスクはプレフィックス表記で表されます。</target>
        </trans-unit>
        <trans-unit id="32e0575ba9f4056eab3aabb998ae5ff3a9f3c8fd" translate="yes" xml:space="preserve">
          <source>A string representing the (local or global) root, if any:</source>
          <target state="translated">(ローカルまたはグローバルの)ルートを表す文字列。</target>
        </trans-unit>
        <trans-unit id="2ed4f64a64d2fb6fad9a60578469fcecde96fc85" translate="yes" xml:space="preserve">
          <source>A string representing the drive letter or name, if any:</source>
          <target state="translated">ドライブの文字または名前を表す文字列(存在する場合)。</target>
        </trans-unit>
        <trans-unit id="06f0d5eec8d1f9fce8676408e0ba9c4fd328f28f" translate="yes" xml:space="preserve">
          <source>A string representing the final path component, excluding the drive and root, if any:</source>
          <target state="translated">最終的なパスコンポーネントを表す文字列で、ドライブとルートがある場合はそれを除外します。</target>
        </trans-unit>
        <trans-unit id="7d594412e6bf530edd194eaef7b660e57dfa27f5" translate="yes" xml:space="preserve">
          <source>A string surrounded by double quotation marks is interpreted as a single argument, regardless of white space contained within. A quoted string can be embedded in an argument.</source>
          <target state="translated">二重引用符で囲まれた文字列は、その中に含まれる空白に関係なく、一つの引数として解釈されます。引用符で囲まれた文字列は、引数に埋め込むことができます。</target>
        </trans-unit>
        <trans-unit id="2066dc66a7df97de21bbc1e433f38dd5b78b7fbb" translate="yes" xml:space="preserve">
          <source>A string that identifies the value name</source>
          <target state="translated">値の名前を識別する文字列</target>
        </trans-unit>
        <trans-unit id="39ff402a5674ecd7c70c6cd0871acdfc556d3c03" translate="yes" xml:space="preserve">
          <source>A string to issue as an intro or banner. May be overridden by giving the &lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt;&lt;code&gt;cmdloop()&lt;/code&gt;&lt;/a&gt; method an argument.</source>
          <target state="translated">イントロまたはバナーとして発行する文字列。&lt;a href=&quot;#cmd.Cmd.cmdloop&quot;&gt; &lt;code&gt;cmdloop()&lt;/code&gt; &lt;/a&gt;メソッドに引数を与えることでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="44fcf35da621f4ef926db56e062b11dbffd03933" translate="yes" xml:space="preserve">
          <source>A string used for identification purposes only. It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.</source>
          <target state="translated">識別の目的でのみ使用される文字列。意味を持ちません。複数のスレッドに同じ名前を付けることができます。最初の名前はコンストラクタで設定します。</target>
        </trans-unit>
        <trans-unit id="85f33d1a5e2aa41160314a36dac932215ed021c5" translate="yes" xml:space="preserve">
          <source>A string with all available type codes.</source>
          <target state="translated">利用可能なすべてのタイプコードを含む文字列。</target>
        </trans-unit>
        <trans-unit id="26443c5e3539322fe9c2273c8a56fe833ba27cec" translate="yes" xml:space="preserve">
          <source>A string, a tuple of strings, or &lt;code&gt;None&lt;/code&gt;, indicating the newlines translated so far. Depending on the implementation and the initial constructor flags, this may not be available.</source>
          <target state="translated">これまでに翻訳された改行を示す文字列、文字列のタプル、または &lt;code&gt;None&lt;/code&gt; 。実装と初期コンストラクタフラグによっては、これが使用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="640b082b179874e919a8b0a281dc24c559b3db92" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is aborted by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続試行がピアによって中止されたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNABORTED&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="73ab5331b6ae01254fe730d043adfa27dda78b4e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection attempt is refused by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続の試行がピアによって拒否されたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNREFUSED&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="6d2239001f6127e695694a9bd00552f746a9eda6" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when a connection is reset by the peer. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。接続がピアによってリセットされたときに発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECONNRESET&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="9a2e5d9d43ce04ad29c4fb17b5325b927b2b9208" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt;, raised when trying to write on a pipe while the other end has been closed, or trying to write on a socket which has been shutdown for writing. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt; and &lt;code&gt;ESHUTDOWN&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt;のサブクラス。もう一方の端が閉じている間にパイプに書き込もうとした場合、または書き込みのためにシャットダウンされたソケットに書き込もうとした場合に発生します。 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EPIPE&lt;/code&gt; および &lt;code&gt;ESHUTDOWN&lt;/code&gt; に対応します。</target>
        </trans-unit>
        <trans-unit id="53f3c34abc78d78f328fd281b87705eb6751b9a7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; which is raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; when a module could not be located. It is also raised when &lt;code&gt;None&lt;/code&gt; is found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールが見つからなかったときに&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;によって発生する&lt;a href=&quot;#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;None&lt;/code&gt; が見つかったときにも発生します。</target>
        </trans-unit>
        <trans-unit id="a59a5d6423ad78bd4b05a33b780bbf6dd737d4c1" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; which is raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; when a module could not be located. It is also raised when &lt;code&gt;None&lt;/code&gt; is found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールが見つからなかったときに&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;によって発生する&lt;a href=&quot;#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;None&lt;/code&gt; が見つかった場合にも発生します。</target>
        </trans-unit>
        <trans-unit id="222e66c57cf05e2439f0427e11ca5b7487c3506e" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; that raises an exception as soon as a failure is encountered. If an unexpected exception occurs, an &lt;a href=&quot;#doctest.UnexpectedException&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the original exception. If the output doesn&amp;rsquo;t match, then a &lt;a href=&quot;#doctest.DocTestFailure&quot;&gt;&lt;code&gt;DocTestFailure&lt;/code&gt;&lt;/a&gt; exception is raised, containing the test, the example, and the actual output.</source>
          <target state="translated">障害が発生するとすぐに例外を発生させる&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;のサブクラス。予期しない例外が発生すると、テスト、例、および元の例外を含む&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt; &lt;code&gt;UnexpectedException&lt;/code&gt; &lt;/a&gt;例外が発生します。出力が一致しない場合、&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt; &lt;code&gt;DocTestFailure&lt;/code&gt; &lt;/a&gt;例外が発生し、テスト、例、および実際の出力が含まれます。</target>
        </trans-unit>
        <trans-unit id="561f15934e1163b4237e193715adac94cb87c0b1" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt;&lt;code&gt;AddressHeader&lt;/code&gt;&lt;/a&gt; that adds one additional attribute:</source>
          <target state="translated">1つの属性を追加する&lt;a href=&quot;#email.headerregistry.AddressHeader&quot;&gt; &lt;code&gt;AddressHeader&lt;/code&gt; &lt;/a&gt;のサブクラス：</target>
        </trans-unit>
        <trans-unit id="7f781581e0829cb990d0f16eb16dbe041508d842" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are &lt;em&gt;multipart&lt;/em&gt;. Optional &lt;em&gt;_subtype&lt;/em&gt; defaults to &lt;em&gt;mixed&lt;/em&gt;, but can be used to specify the subtype of the message. A &lt;em&gt;Content-Type&lt;/em&gt; header of &lt;em&gt;multipart/_subtype&lt;/em&gt; will be added to the message object. A &lt;em&gt;MIME-Version&lt;/em&gt; header will also be added.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;のサブクラス。これは、&lt;em&gt;マルチパートの&lt;/em&gt; MIMEメッセージの中間基本クラスです。オプションの&lt;em&gt;_subtypeの&lt;/em&gt;デフォルトは&lt;em&gt;mixed&lt;/em&gt;ですが、メッセージのサブタイプを指定するために使用できます。&lt;em&gt;Content-Type&lt;/em&gt;ヘッダ&lt;em&gt;マルチパート/ _subtypeは&lt;/em&gt;メッセージ・オブジェクトに追加されます。&lt;em&gt;MIMEバージョンの&lt;/em&gt;ヘッダも追加されます。</target>
        </trans-unit>
        <trans-unit id="ee4824f272606ae6cc4c809fb2df5c25368575e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, this is an intermediate base class for MIME messages that are not &lt;em&gt;multipart&lt;/em&gt;. The primary purpose of this class is to prevent the use of the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; method, which only makes sense for &lt;em&gt;multipart&lt;/em&gt; messages. If &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; is called, a &lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt;&lt;code&gt;MultipartConversionError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;のサブクラス。これは、&lt;em&gt;マルチパート&lt;/em&gt;ではないMIMEメッセージの中間基本クラスです。このクラスの主な目的は、&lt;em&gt;マルチパート&lt;/em&gt;メッセージに対してのみ意味を持つ&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;メソッドの使用を防ぐことです。場合は&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;と呼ばれ、&lt;a href=&quot;email.errors#email.errors.MultipartConversionError&quot;&gt; &lt;code&gt;MultipartConversionError&lt;/code&gt; &lt;/a&gt;例外が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7a8f392a3412438a51c8f0c737eaf469cd9a645" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; class is used to represent MIME message objects of major type &lt;em&gt;application&lt;/em&gt;. &lt;em&gt;_data&lt;/em&gt; is a string containing the raw byte data. Optional &lt;em&gt;_subtype&lt;/em&gt; specifies the MIME subtype and defaults to &lt;em&gt;octet-stream&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプ&lt;em&gt;アプリケーションの&lt;/em&gt; MIMEメッセージオブジェクトを表すために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_data&lt;/em&gt;は、未加工のバイトデータを含む文字列です。オプションの&lt;em&gt;_subtype&lt;/em&gt;はMIMEサブタイプを指定し、デフォルトで&lt;em&gt;octet-streamになります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8853b524d3a42ef795bb232d70818c082d728737" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;audio&lt;/em&gt;. &lt;em&gt;_audiodata&lt;/em&gt; is a string containing the raw audio data. If this data can be decoded by the standard Python module &lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt;&lt;code&gt;sndhdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the audio subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプが&lt;em&gt;audioの&lt;/em&gt; MIMEメッセージオブジェクトを作成するために使用されます。&lt;em&gt;_audiodata&lt;/em&gt;は、生のオーディオデータを含む文字列です。このデータを標準のPythonモジュール&lt;a href=&quot;sndhdr#module-sndhdr&quot;&gt; &lt;code&gt;sndhdr&lt;/code&gt; &lt;/a&gt;でデコードできる場合、サブタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに自動的に含まれます。それ以外の場合は、&lt;em&gt;_subtype&lt;/em&gt;引数を使用してオーディオサブタイプを明示的に指定できます。マイナータイプを推測できず、&lt;em&gt;_subtype&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a76383a2a93d9794da9b01ccefe023baee5d2eb5" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; class is used to create MIME message objects of major type &lt;em&gt;image&lt;/em&gt;. &lt;em&gt;_imagedata&lt;/em&gt; is a string containing the raw image data. If this data can be decoded by the standard Python module &lt;a href=&quot;imghdr#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt;, then the subtype will be automatically included in the &lt;em&gt;Content-Type&lt;/em&gt; header. Otherwise you can explicitly specify the image subtype via the &lt;em&gt;_subtype&lt;/em&gt; argument. If the minor type could not be guessed and &lt;em&gt;_subtype&lt;/em&gt; was not given, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプが&lt;em&gt;imageの&lt;/em&gt; MIMEメッセージオブジェクトを作成するために使用されます。&lt;em&gt;_imagedata&lt;/em&gt;は、生の画像データを含む文字列です。このデータを標準のPythonモジュール&lt;a href=&quot;imghdr#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;でデコードできる場合、サブタイプは&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに自動的に含まれます。それ以外の場合は、&lt;em&gt;_subtype&lt;/em&gt;引数を使用して画像のサブタイプを明示的に指定できます。マイナータイプを推測できず、&lt;em&gt;_subtype&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a9234b5d253e940123aa4c9a0f87439815009184" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt;&lt;code&gt;MIMEMessage&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of main type &lt;em&gt;message&lt;/em&gt;. &lt;em&gt;_msg&lt;/em&gt; is used as the payload, and must be an instance of class &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; (or a subclass thereof), otherwise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.message.MIMEMessage&quot;&gt; &lt;code&gt;MIMEMessage&lt;/code&gt; &lt;/a&gt;クラスは、メインタイプが&lt;em&gt;メッセージの&lt;/em&gt; MIMEオブジェクトを作成するために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_msg&lt;/em&gt;はペイロードとして使用され、&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラス（またはそのサブクラス）のインスタンスでなければなりません。そうでない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="3161c9179debd4f7d6df131db3c1815ed54800e8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class is used to create MIME objects of major type &lt;em&gt;text&lt;/em&gt;. &lt;em&gt;_text&lt;/em&gt; is the string for the payload. &lt;em&gt;_subtype&lt;/em&gt; is the minor type and defaults to &lt;em&gt;plain&lt;/em&gt;. &lt;em&gt;_charset&lt;/em&gt; is the character set of the text and is passed as an argument to the &lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt;&lt;code&gt;MIMENonMultipart&lt;/code&gt;&lt;/a&gt; constructor; it defaults to &lt;code&gt;us-ascii&lt;/code&gt; if the string contains only &lt;code&gt;ascii&lt;/code&gt; code points, and &lt;code&gt;utf-8&lt;/code&gt; otherwise. The &lt;em&gt;_charset&lt;/em&gt; parameter accepts either a string or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;のサブクラスである&lt;a href=&quot;#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;クラスは、メジャータイプの&lt;em&gt;テキストの&lt;/em&gt; MIMEオブジェクトを作成するために使用され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;_text&lt;/em&gt;はペイロードの文字列です。&lt;em&gt;_subtype&lt;/em&gt;はマイナータイプで、デフォルトは&lt;em&gt;plain&lt;/em&gt;です。&lt;em&gt;_charset&lt;/em&gt;はテキストの文字セットであり、引数として&lt;a href=&quot;#email.mime.nonmultipart.MIMENonMultipart&quot;&gt; &lt;code&gt;MIMENonMultipart&lt;/code&gt; &lt;/a&gt;コンストラクターに渡されます。文字列に &lt;code&gt;ascii&lt;/code&gt; コードポイントのみが含まれている場合はデフォルトで &lt;code&gt;us-ascii&lt;/code&gt; になり、それ以外の場合は &lt;code&gt;utf-8&lt;/code&gt; になります。&lt;em&gt;_charsetの&lt;/em&gt;パラメータ文字列またはいずれか受け入れる&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;インスタンスを。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43b95a03a2324568afb62decc2f58316824119be" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; that uses SSL for communication with secure servers. Default port is &lt;code&gt;443&lt;/code&gt;. If &lt;em&gt;context&lt;/em&gt; is specified, it must be a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance describing the various SSL options.</source>
          <target state="translated">セキュアサーバーとの通信にSSLを使用する&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt;のサブクラス。デフォルトのポートは &lt;code&gt;443&lt;/code&gt; です。&lt;em&gt;コンテキスト&lt;/em&gt;を指定する場合は、さまざまなSSLオプションを説明する&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;インスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="7bf644cd1aad145a3aa43ee0250025e9df724f72" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;, raised if a port is given and is either non-numeric or empty.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。ポートが指定され、数値以外または空の場合に発生します。</target>
        </trans-unit>
        <trans-unit id="0aab6c24af3dcd985f80023bae2e93b04faff96c" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="aa5fefe570554e4bd2277e00d553af0f206f08c0" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if a server responds with a HTTP status code that we don&amp;rsquo;t understand.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。サーバーが、理解できないHTTPステータスコードで応答した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="666637de6b4e0b5e5cc67cbbb892eef7e1644dad" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.HTTPException&quot;&gt;&lt;code&gt;HTTPException&lt;/code&gt;&lt;/a&gt;. Raised if an excessively long line is received in the HTTP protocol from the server.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPException&quot;&gt; &lt;code&gt;HTTPException&lt;/code&gt; &lt;/a&gt;のサブクラス。サーバーからHTTPプロトコルで過度に長い行を受信した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="f44a0b9f57e50137cb8e15ddcd43d03893edce26" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt;&lt;code&gt;ImproperConnectionState&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.client.ImproperConnectionState&quot;&gt; &lt;code&gt;ImproperConnectionState&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="29db90dbf583d1a27b500d573a47d6c5b0ee449d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Babyl format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Babyl形式のメール&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;用のMailboxのサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt; &lt;code&gt;BabylMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="5af2e2732c7181fc36ed83d98f0af92e460cbe98" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MH format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MH形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。&lt;em&gt;factory&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#mailbox.MHMessage&quot;&gt; &lt;code&gt;MHMessage&lt;/code&gt; &lt;/a&gt;がデフォルトのメッセージ表現として使用されます。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="0fd3ef2fae5b24d18c1176dd0499befaf845516b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in MMDF format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">MMDF形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="92230b6718b8395f043cbdcaeb410fb38bf56f9f" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in Maildir format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">Maildir形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt; &lt;code&gt;MaildirMessage&lt;/code&gt; のは、&lt;/a&gt;デフォルトのメッセージ表現として使用されています。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="b1e96b979a7ade703d26a2f68e58f4220e80f537" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; for mailboxes in mbox format. Parameter &lt;em&gt;factory&lt;/em&gt; is a callable object that accepts a file-like message representation (which behaves as if opened in binary mode) and returns a custom representation. If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; is used as the default message representation. If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the mailbox is created if it does not exist.</source>
          <target state="translated">mbox形式のメールボックスの&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;のサブクラス。パラメータ&lt;em&gt;ファクトリ&lt;/em&gt;は、ファイルのようなメッセージ表現（バイナリモードで開かれたかのように動作する）を受け入れ、カスタム表現を返す呼び出し可能なオブジェクトです。&lt;em&gt;factory&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt;がデフォルトのメッセージ表現として使用されます。場合は&lt;em&gt;作成し&lt;/em&gt;ている &lt;code&gt;True&lt;/code&gt; が存在しない場合は、メールボックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="e91afc87f4c90d053ee511b94bc062b870505830" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the synchronization of processes. Objects of this type are returned by &lt;code&gt;multiprocessing.Manager()&lt;/code&gt;.</source>
          <target state="translated">プロセスの同期に使用できる&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;のサブクラス。このタイプのオブジェクトは &lt;code&gt;multiprocessing.Manager()&lt;/code&gt; によって返されます。</target>
        </trans-unit>
        <trans-unit id="0baa77c5c3f931861b3c6e87c3ba1ac461b5a0fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt;&lt;code&gt;PurePosixPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#pathlib.PurePosixPath&quot;&gt; &lt;code&gt;PurePosixPath&lt;/code&gt; の&lt;/a&gt;サブクラスであるこのクラスは、Windows以外の具体的なファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="bbae0175d81f10a8b69cdca941e43651b40075fb" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt;&lt;code&gt;PureWindowsPath&lt;/code&gt;&lt;/a&gt;, this class represents concrete Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt; &lt;code&gt;PureWindowsPath&lt;/code&gt; の&lt;/a&gt;サブクラスであるこのクラスは、具体的なWindowsファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="787d261e83a0bc5621effc394a2c8c29f282bc76" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this class represents concrete paths of the system&amp;rsquo;s path flavour (instantiating it creates either a &lt;a href=&quot;#pathlib.PosixPath&quot;&gt;&lt;code&gt;PosixPath&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#pathlib.WindowsPath&quot;&gt;&lt;code&gt;WindowsPath&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのクラスは、システムのパスフレーバーの具体的なパスを表します（インスタンス化すると、&lt;a href=&quot;#pathlib.PosixPath&quot;&gt; &lt;code&gt;PosixPath&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pathlib.WindowsPath&quot;&gt; &lt;code&gt;WindowsPath&lt;/code&gt; &lt;/a&gt;が作成されます）。</target>
        </trans-unit>
        <trans-unit id="8ddea0c5102be5b806c8ed7af1f7b85163c67c30" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのパスフレーバーは、Windowsファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="9b2ac853b70b451f55dd69ebee77fa87ae957266" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;, this path flavour represents non-Windows filesystem paths:</source>
          <target state="translated">&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt;のサブクラスであるこのパスフレーバーは、Windows以外のファイルシステムパスを表します。</target>
        </trans-unit>
        <trans-unit id="da15c413fbd27cd71985084c119de705e2d3928d" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which accepts a &lt;em&gt;filename&lt;/em&gt; instead of a dict-like object. The underlying file will be opened using &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;. By default, the file will be created and opened for both read and write. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as for the &lt;a href=&quot;#shelve.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The optional &lt;em&gt;protocol&lt;/em&gt; and &lt;em&gt;writeback&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">dictのようなオブジェクトの代わりに&lt;em&gt;ファイル名&lt;/em&gt;を受け入れる&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;のサブクラス。基礎となるファイルは、&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; &lt;/a&gt;を使用して開かれます。デフォルトでは、ファイルは作成され、読み取りと書き込みの両方で開かれます。オプションの&lt;em&gt;フラグ&lt;/em&gt;パラメータの解釈は、&lt;a href=&quot;#shelve.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数の場合と同じです。オプションの&lt;em&gt;プロトコル&lt;/em&gt;と&lt;em&gt;書き戻し&lt;/em&gt;パラメーターの解釈は、&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;クラスと同じです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0aeb538670652c08b0771e1a034d7b75ae61240" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; which exposes &lt;code&gt;first()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;previous()&lt;/code&gt;, &lt;code&gt;last()&lt;/code&gt; and &lt;code&gt;set_location()&lt;/code&gt; which are available in the third-party &lt;code&gt;bsddb&lt;/code&gt; module from &lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt; but not in other database modules. The &lt;em&gt;dict&lt;/em&gt; object passed to the constructor must support those methods. This is generally accomplished by calling one of &lt;code&gt;bsddb.hashopen()&lt;/code&gt;, &lt;code&gt;bsddb.btopen()&lt;/code&gt; or &lt;code&gt;bsddb.rnopen()&lt;/code&gt;. The optional &lt;em&gt;protocol&lt;/em&gt;, &lt;em&gt;writeback&lt;/em&gt;, and &lt;em&gt;keyencoding&lt;/em&gt; parameters have the same interpretation as for the &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;pybsddb&lt;/a&gt;からサードパーティの &lt;code&gt;bsddb&lt;/code&gt; モジュールで利用可能ですが、他のデータベースモジュールでは利用できない &lt;code&gt;first()&lt;/code&gt; 、 &lt;code&gt;next()&lt;/code&gt; 、 &lt;code&gt;previous()&lt;/code&gt; 、 &lt;code&gt;last()&lt;/code&gt; 、および &lt;code&gt;set_location()&lt;/code&gt; を公​​開する&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;em&gt;辞書の&lt;/em&gt;コンストラクタに渡されたオブジェクトは、それらのメソッドをサポートしている必要があります。これは通常、 &lt;code&gt;bsddb.hashopen()&lt;/code&gt; 、 &lt;code&gt;bsddb.btopen()&lt;/code&gt; 、または &lt;code&gt;bsddb.rnopen()&lt;/code&gt; のいずれかを呼び出すことによって行われます。オプションの&lt;em&gt;protocol&lt;/em&gt;、&lt;em&gt;writeback&lt;/em&gt;、および&lt;em&gt;keyencoding&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;パラメータの解釈は&lt;a href=&quot;#shelve.Shelf&quot;&gt; &lt;code&gt;Shelf&lt;/code&gt; &lt;/a&gt;クラスと同じです。</target>
        </trans-unit>
        <trans-unit id="b5a6a5a8e4ac7a866442add5f93595a47b720d39" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be received on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">データの読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングSSLソケット&lt;/a&gt;によって発生した&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラスですが、要求が満たされる前に、基礎となるTCPトランスポートでより多くのデータを受信する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7a0502de90f1d3ad7d32c2d3885ee66ffde0a82" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised by a &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL socket&lt;/a&gt; when trying to read or write data, but more data needs to be sent on the underlying TCP transport before the request can be fulfilled.</source>
          <target state="translated">データの読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングSSLソケット&lt;/a&gt;によって発生した&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。ただし、要求が満たされる前に、基礎となるTCPトランスポートで送信されるデータがさらに必要です。</target>
        </trans-unit>
        <trans-unit id="deb9b7c208558761cda50ba30ba55c811e5e68df" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when a system error was encountered while trying to fulfill an operation on a SSL socket. Unfortunately, there is no easy way to inspect the original errno number.</source>
          <target state="translated">SSLソケットで操作を実行しようとしたときにシステムエラーが発生したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。残念ながら、元のerrno番号を調べる簡単な方法はありません。</target>
        </trans-unit>
        <trans-unit id="cdaf83ff67869c648bea2aee22f2a5a8799d1318" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when certificate validation has failed.</source>
          <target state="translated">証明書の検証が失敗したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="6d26e7b54f4342d502899a32b1ea75ad227410a2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when the SSL connection has been terminated abruptly. Generally, you shouldn&amp;rsquo;t try to reuse the underlying transport when this error is encountered.</source>
          <target state="translated">SSL接続が突然終了したときに発生する&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラス。通常、このエラーが発生した場合は、基になるトランスポートを再利用しないでください。</target>
        </trans-unit>
        <trans-unit id="cca4beee81e582bd9b978d6e698d6235139ca79b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; raised when trying to read or write and the SSL connection has been closed cleanly. Note that this doesn&amp;rsquo;t mean that the underlying transport (read TCP) has been closed.</source>
          <target state="translated">読み取りまたは書き込みを試みたときに&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;のサブクラスが発生し、SSL接続が完全に閉じられました。これは、基になるトランスポート（読み取りTCP）が閉じていることを意味するものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4aa94e1172b28188f84a19de0a4d78757ffac0c8" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;collections.abc.MutableMapping&lt;/code&gt;&lt;/a&gt; which stores pickled values in the &lt;em&gt;dict&lt;/em&gt; object.</source>
          <target state="translated">漬けた値を&lt;em&gt;dict&lt;/em&gt;オブジェクトに格納する&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;collections.abc.MutableMapping&lt;/code&gt; &lt;/a&gt;のサブクラス。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c2ed8fc70c7865de761f0bbee19c244ff6cb7f7" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; that defines a set of HTTP status codes, reason phrases and long descriptions written in English.</source>
          <target state="translated">英語で書かれた一連のHTTPステータスコード、理由句、詳細な説明を定義する&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="13c7263f4c0b3d090a1a151575ff100ac91b1329" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt;&lt;code&gt;ConnectionResetError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.client.BadStatusLine&quot;&gt;&lt;code&gt;BadStatusLine&lt;/code&gt;&lt;/a&gt;. Raised by &lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt;&lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt;&lt;/a&gt; when the attempt to read the response results in no data read from the connection, indicating that the remote end has closed the connection.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt; &lt;code&gt;ConnectionResetError&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.client.BadStatusLine&quot;&gt; &lt;code&gt;BadStatusLine&lt;/code&gt; の&lt;/a&gt;サブクラス。応答を読み取ろうとした結果、接続からデータが読み取られなかった場合に&lt;a href=&quot;#http.client.HTTPConnection.getresponse&quot;&gt; &lt;code&gt;HTTPConnection.getresponse()&lt;/code&gt; &lt;/a&gt;によって発生し、リモートエンドが接続を閉じたことを示します。</target>
        </trans-unit>
        <trans-unit id="ce340e4f4e3ab133da20d657ffb3540199636ab2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="edea97afc9f60e0d9cc4a419734e1ca06a2daac2" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors by &lt;a href=&quot;#socket.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(error, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;error&lt;/em&gt;, as returned by the &lt;code&gt;gai_strerror()&lt;/code&gt; C function. The numeric &lt;em&gt;error&lt;/em&gt; value will match one of the &lt;code&gt;EAI_*&lt;/code&gt; constants defined in this module.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;のサブクラス。この例外は、アドレス関連のエラーに対して&lt;a href=&quot;#socket.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; &lt;/a&gt;によって発生します。付随する値は、ライブラリ呼び出しによって返されるエラーを表すペア &lt;code&gt;(error, string)&lt;/code&gt; です。&lt;em&gt;string&lt;/em&gt;は、 &lt;code&gt;gai_strerror()&lt;/code&gt; C関数によって返される&lt;em&gt;error&lt;/em&gt;の説明を表します。数値&lt;em&gt;エラー&lt;/em&gt;値は、このモジュールで定義されている &lt;code&gt;EAI_*&lt;/code&gt; 定数の1つと一致します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="460111a7ddfae31cdbd537e0ced5a7ef202f5c3b" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised for address-related errors, i.e. for functions that use &lt;em&gt;h_errno&lt;/em&gt; in the POSIX C API, including &lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt;&lt;code&gt;gethostbyname_ex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.gethostbyaddr&quot;&gt;&lt;code&gt;gethostbyaddr()&lt;/code&gt;&lt;/a&gt;. The accompanying value is a pair &lt;code&gt;(h_errno, string)&lt;/code&gt; representing an error returned by a library call. &lt;em&gt;h_errno&lt;/em&gt; is a numeric value, while &lt;em&gt;string&lt;/em&gt; represents the description of &lt;em&gt;h_errno&lt;/em&gt;, as returned by the &lt;code&gt;hstrerror()&lt;/code&gt; C function.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは&lt;/a&gt;、この例外が機能するために、すなわち、アドレス関連のエラーを上昇させ、その使用&lt;em&gt;はh_errno&lt;/em&gt;含むPOSIX C APIで、&lt;a href=&quot;#socket.gethostbyname_ex&quot;&gt; &lt;code&gt;gethostbyname_ex()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#socket.gethostbyaddr&quot;&gt; &lt;code&gt;gethostbyaddr()&lt;/code&gt; &lt;/a&gt;。付随する値は、ライブラリ呼び出しによって返されるエラーを表すペア &lt;code&gt;(h_errno, string)&lt;/code&gt; です。&lt;em&gt;h_errnoは&lt;/em&gt;ながら、数値である&lt;em&gt;文字列は&lt;/em&gt;の説明を表し&lt;em&gt;はh_errno&lt;/em&gt;によって返される、 &lt;code&gt;hstrerror()&lt;/code&gt; C関数。</target>
        </trans-unit>
        <trans-unit id="16ac8179359652826137cc9c838ce6bab8ea4d95" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, this exception is raised when a timeout occurs on a socket which has had timeouts enabled via a prior call to &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; (or implicitly through &lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt;&lt;code&gt;setdefaulttimeout()&lt;/code&gt;&lt;/a&gt;). The accompanying value is a string whose value is currently always &amp;ldquo;timed out&amp;rdquo;.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは、&lt;/a&gt;タイムアウトがタイムアウトが前の呼び出しによって有効になってきたソケット上で発生した場合に、この例外が発生し&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;（または暗黙的に通じ&lt;a href=&quot;#socket.setdefaulttimeout&quot;&gt; &lt;code&gt;setdefaulttimeout()&lt;/code&gt; &lt;/a&gt;）。付随する値は、現在常に「タイムアウト」している文字列です。</target>
        </trans-unit>
        <trans-unit id="f96ed9be119db1899cc5804240cbdf4a813fc7bf" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラス&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb5ef21196f6e1a2c30359a542bb0586ed94ec11" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; which can be used for the management of shared memory blocks across processes.</source>
          <target state="translated">プロセス全体の共有メモリブロックの管理に使用できる&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="6493ef637d82780c7758013117e237d093568cc0" translate="yes" xml:space="preserve">
          <source>A subclass of FileDialog that creates a dialog window for selecting a destination file.</source>
          <target state="translated">保存先ファイルを選択するためのダイアログウィンドウを作成するFileDialogのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="12a73368b564b85b1d416719ea8db78e560d0d54" translate="yes" xml:space="preserve">
          <source>A subclass of FileDialog that creates a dialog window for selecting an existing file.</source>
          <target state="translated">既存のファイルを選択するためのダイアログウィンドウを作成するFileDialogのサブクラス。</target>
        </trans-unit>
        <trans-unit id="c0a3fd34e2e67d00717d8e3c38e690bba5eea283" translate="yes" xml:space="preserve">
          <source>A subclass of the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Subclasses of &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;mailbox.Message&lt;/code&gt;&lt;/a&gt; add mailbox-format-specific state and behavior.</source>
          <target state="translated">&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; の&lt;/a&gt;サブクラス。&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;mailbox.Message&lt;/code&gt; の&lt;/a&gt;サブクラスは、メールボックス形式固有の状態と動作を追加します。</target>
        </trans-unit>
        <trans-unit id="0cc4659320a48a69121a5fa046a90e0829d536e4" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract classmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt;のサブクラスであり、抽象classmethodを示します。それ以外は、&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="dd7d67ccc4aa0cf39a782287b771bae713632ff3" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;, indicating an abstract property.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;のサブクラスで、抽象プロパティを示します。</target>
        </trans-unit>
        <trans-unit id="8a21eea0a51db85132800cd0d541c1dd336c3b80" translate="yes" xml:space="preserve">
          <source>A subclass of the built-in &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;, indicating an abstract staticmethod. Otherwise it is similar to &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抽象staticmethodを示す、組み込み&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;のサブクラス。それ以外は、&lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="d14fd32086bd068d574c0f68fc7877ff0baa0946" translate="yes" xml:space="preserve">
          <source>A subclass of tuple, holding &lt;code&gt;(columns, lines)&lt;/code&gt; of the terminal window size.</source>
          <target state="translated">端末ウィンドウサイズの &lt;code&gt;(columns, lines)&lt;/code&gt; を保持するタプルのサブクラス。</target>
        </trans-unit>
        <trans-unit id="4860690382eeaedd49f5d6a726f9be2286133ce4" translate="yes" xml:space="preserve">
          <source>A subscript, such as &lt;code&gt;l[1]&lt;/code&gt;. &lt;code&gt;value&lt;/code&gt; is the subscripted object (usually sequence or mapping). &lt;code&gt;slice&lt;/code&gt; is an index, slice or key. It can be a &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; and contain a &lt;a href=&quot;#ast.Slice&quot;&gt;&lt;code&gt;Slice&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;ctx&lt;/code&gt; is &lt;a href=&quot;#ast.Load&quot;&gt;&lt;code&gt;Load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.Store&quot;&gt;&lt;code&gt;Store&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Del&quot;&gt;&lt;code&gt;Del&lt;/code&gt;&lt;/a&gt; according to the action performed with the subscript.</source>
          <target state="translated">&lt;code&gt;l[1]&lt;/code&gt; などの添え字。 &lt;code&gt;value&lt;/code&gt; は、添え字付きのオブジェクト（通常はシーケンスまたはマッピング）です。 &lt;code&gt;slice&lt;/code&gt; は、インデックス、スライス、またはキーです。&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;にすることができ、&lt;a href=&quot;#ast.Slice&quot;&gt; &lt;code&gt;Slice&lt;/code&gt; &lt;/a&gt;を含めることができます。 &lt;code&gt;ctx&lt;/code&gt; は、添え字で実行されたアクションに応じて、&lt;a href=&quot;#ast.Load&quot;&gt; &lt;code&gt;Load&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ast.Store&quot;&gt; &lt;code&gt;Store&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;#ast.Del&quot;&gt; &lt;code&gt;Del&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="40c70036708915cb7b3b17bae711c17136488656" translate="yes" xml:space="preserve">
          <source>A suitable launcher can be as simple as the following:</source>
          <target state="translated">適切なランチャーは、以下のような簡単なものがあります。</target>
        </trans-unit>
        <trans-unit id="901d66f5c7da60879c19407e1a1bc52a3389e89b" translate="yes" xml:space="preserve">
          <source>A symbolic name from the list of columns option.</source>
          <target state="translated">列のリストオプションからのシンボリック名。</target>
        </trans-unit>
        <trans-unit id="0aafdc4544b71b33d0122eb7e7355cb89beef590" translate="yes" xml:space="preserve">
          <source>A synchronized wrapper will have two methods in addition to those of the object it wraps: &lt;code&gt;get_obj()&lt;/code&gt; returns the wrapped object and &lt;code&gt;get_lock()&lt;/code&gt; returns the lock object used for synchronization.</source>
          <target state="translated">同期されたラッパーには、ラップするオブジェクトのメソッドに加えて、2つのメソッドがあります &lt;code&gt;get_obj()&lt;/code&gt; はラップされたオブジェクトを返し、 &lt;code&gt;get_lock()&lt;/code&gt; は同期に使用されるロックオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="82cc7a6bf5190503a986720cfd373d63486c2b10" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, maintained for backwards compatibility.</source>
          <target state="translated">&lt;a href=&quot;#wave.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; の&lt;/a&gt;同義語。下位互換性のために維持されています。</target>
        </trans-unit>
        <trans-unit id="02478b669d3bd5d812ec4b032b7561d572de56eb" translate="yes" xml:space="preserve">
          <source>A test case can contain any number of subtest declarations, and they can be arbitrarily nested.</source>
          <target state="translated">テストケースには、任意の数のサブテスト宣言を含めることができ、それらは任意の入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="f92c13e79833a8c6766ec8c4d07e210948282e0b" translate="yes" xml:space="preserve">
          <source>A test case instance is created for each method named by &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt;. By default these are the method names beginning with &lt;code&gt;test&lt;/code&gt;. If &lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt;&lt;code&gt;getTestCaseNames()&lt;/code&gt;&lt;/a&gt; returns no methods, but the &lt;code&gt;runTest()&lt;/code&gt; method is implemented, a single test case is created for that method instead.</source>
          <target state="translated">テストケースのインスタンスは、&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; で&lt;/a&gt;指定されたメソッドごとに作成されます。デフォルトでは、これらは &lt;code&gt;test&lt;/code&gt; で始まるメソッド名です。場合&lt;a href=&quot;#unittest.TestLoader.getTestCaseNames&quot;&gt; &lt;code&gt;getTestCaseNames()&lt;/code&gt; が&lt;/a&gt;ない方法を返さないが、 &lt;code&gt;runTest()&lt;/code&gt; メソッドが実装され、単一のテストケースではなく、その方法のために作成されます。</target>
        </trans-unit>
        <trans-unit id="d317a4bfcfe51b412aa9411ee48602a7d363041a" translate="yes" xml:space="preserve">
          <source>A testcase is created by subclassing &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;. The three individual tests are defined with methods whose names start with the letters &lt;code&gt;test&lt;/code&gt;. This naming convention informs the test runner about which methods represent tests.</source>
          <target state="translated">テストケースは、&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;をサブクラス化することによって作成されます。3つの個別のテストは、名前が &lt;code&gt;test&lt;/code&gt; という文字で始まるメソッドで定義されています。この命名規則は、テストを表すメソッドについてテストランナーに通知します。</target>
        </trans-unit>
        <trans-unit id="2decea86572530cb3394fd2790ced4c85040cd18" translate="yes" xml:space="preserve">
          <source>A text stream using an in-memory text buffer. It inherits &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インメモリテキストバッファを使用したテキストストリーム。&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="8d3b705f209b67c83fbd25ef3e195fdfb5b667ff" translate="yes" xml:space="preserve">
          <source>A thread can be &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;ed many times.</source>
          <target state="translated">スレッドは何度も&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; する&lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="d19f0702d7d43132fd514f9840815fdd1c4aabff" translate="yes" xml:space="preserve">
          <source>A thread can be flagged as a &amp;ldquo;daemon thread&amp;rdquo;. The significance of this flag is that the entire Python program exits when only daemon threads are left. The initial value is inherited from the creating thread. The flag can be set through the &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; property or the &lt;em&gt;daemon&lt;/em&gt; constructor argument.</source>
          <target state="translated">スレッドには、「デーモンスレッド」としてフラグを設定できます。このフラグの重要性は、デーモンスレッドだけが残されると、Pythonプログラム全体が終了することです。初期値は作成スレッドから継承されます。フラグは、&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;プロパティまたは&lt;em&gt;デーモン&lt;/em&gt;コンストラクター引数を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="25906c1adefe9dc6f1af3c23b40a096b717f95c3" translate="yes" xml:space="preserve">
          <source>A thread has a name. The name can be passed to the constructor, and read or changed through the &lt;a href=&quot;#threading.Thread.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">スレッドには名前があります。名前はコンストラクタに渡すことができ、&lt;a href=&quot;#threading.Thread.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性を介して読み取りまたは変更できます。</target>
        </trans-unit>
        <trans-unit id="59162599aeff6bb14e020356fd4da69fe0944c86" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;call_soon()&lt;/code&gt;&lt;/a&gt;. Must be used to schedule callbacks &lt;em&gt;from another thread&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;call_soon()&lt;/code&gt; の&lt;/a&gt;スレッドセーフなバリアント。&lt;em&gt;別のスレッドからの&lt;/em&gt;コールバックをスケジュールするために使用する必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0a0f8b6355c0ad572860ca714f63148feabbb464" translate="yes" xml:space="preserve">
          <source>A thread-safe variant of &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; の&lt;/a&gt;スレッドセーフなバリアント。</target>
        </trans-unit>
        <trans-unit id="34a103e628ad77f1efb119c2d023c898bf9e7287" translate="yes" xml:space="preserve">
          <source>A timeout can be specified for communication with the SMTP server using the &lt;em&gt;timeout&lt;/em&gt; argument.</source>
          <target state="translated">&lt;em&gt;timeout&lt;/em&gt;引数を使用して、SMTPサーバーとの通信にタイムアウトを指定できます。</target>
        </trans-unit>
        <trans-unit id="e4820ed4e11203578021e36242c9640f748f2edc" translate="yes" xml:space="preserve">
          <source>A topological order is a linear ordering of the vertices in a graph such that for every directed edge u -&amp;gt; v from vertex u to vertex v, vertex u comes before vertex v in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this example, a topological ordering is just a valid sequence for the tasks. A complete topological ordering is possible if and only if the graph has no directed cycles, that is, if it is a directed acyclic graph.</source>
          <target state="translated">トポロジカル順序は、頂点uから頂点vまでのすべての有向エッジu-&amp;gt; vについて、頂点uが頂点vの前に来るような、グラフ内の頂点の線形順序です。たとえば、グラフの頂点は実行するタスクを表し、エッジはあるタスクを別のタスクの前に実行する必要があるという制約を表す場合があります。この例では、トポロジカル順序はタスクの有効なシーケンスにすぎません。グラフに有向非巡回グラフがない場合、つまり有向非巡回グラフの場合にのみ、完全なトポロジカル順序付けが可能です。</target>
        </trans-unit>
        <trans-unit id="f1fce953788cab29b4471f03f788eeca368e6c43" translate="yes" xml:space="preserve">
          <source>A traceback contains at least &lt;code&gt;1&lt;/code&gt; frame. If the &lt;code&gt;tracemalloc&lt;/code&gt; module failed to get a frame, the filename &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; at line number &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">トレースバックには少なくとも &lt;code&gt;1&lt;/code&gt; つのフレームが含まれます。 &lt;code&gt;tracemalloc&lt;/code&gt; モジュールがフレームの取得に失敗した場合、行番号 &lt;code&gt;0&lt;/code&gt; のファイル名 &lt;code&gt;&quot;&amp;lt;unknown&amp;gt;&quot;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="bc2646e6288204043218b877ba68e1e8e8475d31" translate="yes" xml:space="preserve">
          <source>A trailing newline is stripped from the output. The exit code for the command can be interpreted as the return code of subprocess. Example:</source>
          <target state="translated">出力から末尾の改行が取り除かれます。コマンドの終了コードは、サブプロセスの戻りコードとして解釈することができます。例</target>
        </trans-unit>
        <trans-unit id="c3c80f1590f49a12cd65c7f83bc6002d79bb9851" translate="yes" xml:space="preserve">
          <source>A transport for datagram (UDP) connections.</source>
          <target state="translated">データグラム(UDP)接続用のトランスポート。</target>
        </trans-unit>
        <trans-unit id="0d926f53bff6bd280c6eee22bfcab053408f0198" translate="yes" xml:space="preserve">
          <source>A tuple &lt;code&gt;(interface, )&lt;/code&gt; is used for the &lt;a href=&quot;#socket.AF_CAN&quot;&gt;&lt;code&gt;AF_CAN&lt;/code&gt;&lt;/a&gt; address family, where &lt;em&gt;interface&lt;/em&gt; is a string representing a network interface name like &lt;code&gt;'can0'&lt;/code&gt;. The network interface name &lt;code&gt;''&lt;/code&gt; can be used to receive packets from all network interfaces of this family.</source>
          <target state="translated">タプル &lt;code&gt;(interface, )&lt;/code&gt; は&lt;a href=&quot;#socket.AF_CAN&quot;&gt; &lt;code&gt;AF_CAN&lt;/code&gt; &lt;/a&gt;アドレスファミリに使用されます。ここで、&lt;em&gt;interface&lt;/em&gt;は &lt;code&gt;'can0'&lt;/code&gt; のようなネットワークインターフェイス名を表す文字列です。ネットワークインターフェイス名 &lt;code&gt;''&lt;/code&gt; を使用して、このファミリのすべてのネットワークインターフェイスからパケットを受信できます。</target>
        </trans-unit>
        <trans-unit id="5988ddff5a11a83cbde32c03ed0f71ddbc332862" translate="yes" xml:space="preserve">
          <source>A tuple containing information about the unexpected exception, as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される、予期しない例外に関する情報を含むタプル。</target>
        </trans-unit>
        <trans-unit id="b602eebfd1018b4f9a83a4accab01ad6f39d7ed0" translate="yes" xml:space="preserve">
          <source>A tuple containing the exceptions that can be raised by each of the supported modules, with a unique exception also named &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; as the first item &amp;mdash; the latter is used when &lt;a href=&quot;#dbm.error&quot;&gt;&lt;code&gt;dbm.error&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">サポートされている各モジュールで発生する可能性のある例外を含むタプル。最初の項目として&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;とも呼ばれる一意の例外があり、後者は&lt;a href=&quot;#dbm.error&quot;&gt; &lt;code&gt;dbm.error&lt;/code&gt; &lt;/a&gt;が発生したときに使用されます。</target>
        </trans-unit>
        <trans-unit id="611ad0213bdcbdea64e69b9c88ff862172a42e89" translate="yes" xml:space="preserve">
          <source>A tuple containing the five components of the version number: &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, &lt;em&gt;micro&lt;/em&gt;, &lt;em&gt;releaselevel&lt;/em&gt;, and &lt;em&gt;serial&lt;/em&gt;. All values except &lt;em&gt;releaselevel&lt;/em&gt; are integers; the release level is &lt;code&gt;'alpha'&lt;/code&gt;, &lt;code&gt;'beta'&lt;/code&gt;, &lt;code&gt;'candidate'&lt;/code&gt;, or &lt;code&gt;'final'&lt;/code&gt;. The &lt;code&gt;version_info&lt;/code&gt; value corresponding to the Python version 2.0 is &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt;. The components can also be accessed by name, so &lt;code&gt;sys.version_info[0]&lt;/code&gt; is equivalent to &lt;code&gt;sys.version_info.major&lt;/code&gt; and so on.</source>
          <target state="translated">バージョン番号の5つのコンポーネントを含むタプル：&lt;em&gt;major&lt;/em&gt;、&lt;em&gt;minor&lt;/em&gt;、&lt;em&gt;micro&lt;/em&gt;、&lt;em&gt;releaselevel&lt;/em&gt;、および&lt;em&gt;serial&lt;/em&gt;。&lt;em&gt;releaselevel&lt;/em&gt;を除くすべての値は整数です。リリースレベルは &lt;code&gt;'alpha'&lt;/code&gt; 、 &lt;code&gt;'beta'&lt;/code&gt; 、 &lt;code&gt;'candidate'&lt;/code&gt; または &lt;code&gt;'final'&lt;/code&gt; です。 &lt;code&gt;version_info&lt;/code&gt; Pythonバージョン2.0に対応した値である &lt;code&gt;(2, 0, 0, 'final', 0)&lt;/code&gt; 。コンポーネントには名前でアクセスすることもできるため、 &lt;code&gt;sys.version_info[0]&lt;/code&gt; は &lt;code&gt;sys.version_info.major&lt;/code&gt; などと同等です。</target>
        </trans-unit>
        <trans-unit id="284eb8c9c8f7dcb877a69beef6d52a20881200c4" translate="yes" xml:space="preserve">
          <source>A tuple giving access to the path&amp;rsquo;s various components:</source>
          <target state="translated">パスのさまざまなコンポーネントへのアクセスを提供するタプル：</target>
        </trans-unit>
        <trans-unit id="9d0fd49c7efc6a159b31facd122d6218b19f8941" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Address&quot;&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/a&gt; objects encoding all of the individual addresses from the header value. If the header value contains any groups, the individual addresses from the group are included in the list at the point where the group occurs in the value (that is, the list of addresses is &amp;ldquo;flattened&amp;rdquo; into a one dimensional list).</source>
          <target state="translated">ヘッダー値からの個々のアドレスすべてをエンコードする&lt;a href=&quot;#email.headerregistry.Address&quot;&gt; &lt;code&gt;Address&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。ヘッダー値にグループが含まれている場合、グループ内の個々のアドレスは、グループが値に出現する位置でリストに含まれます（つまり、アドレスのリストは1次元リストに「フラット化」されます）。</target>
        </trans-unit>
        <trans-unit id="9de5ed9ccb63c492c379c7b0498153b757927080" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;a href=&quot;#email.headerregistry.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects encoding the addresses and groups found in the header value. Addresses that are not part of a group are represented in this list as single-address &lt;code&gt;Groups&lt;/code&gt; whose &lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt;&lt;code&gt;display_name&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">ヘッダー値にあるアドレスとグループをエンコードする&lt;a href=&quot;#email.headerregistry.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;オブジェクトのタプル。グループの一部ではないアドレスは、このリストでは、&lt;a href=&quot;#email.headerregistry.Group.display_name&quot;&gt; &lt;code&gt;display_name&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; の単一アドレス &lt;code&gt;Groups&lt;/code&gt; として表されます。</target>
        </trans-unit>
        <trans-unit id="a0a272709593e4d4502563708916d90098e672e4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt; is returned on success.</source>
          <target state="translated">成功すると &lt;code&gt;(transport, protocol)&lt;/code&gt; タプルが返されます。</target>
        </trans-unit>
        <trans-unit id="f2a76b51f711aaca7e10b1eba70b8efe797baf47" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;HeaderDefect&lt;/code&gt; instances reporting any RFC compliance problems found during parsing. The email package tries to be complete about detecting compliance issues. See the &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module for a discussion of the types of defects that may be reported.</source>
          <target state="translated">解析中に検出されたRFC準拠の問題を報告する &lt;code&gt;HeaderDefect&lt;/code&gt; インスタンスのタプル。電子メールパッケージは、コンプライアンスの問題の検出について完全であることを試みます。報告される可能性のある欠陥の種類については、&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="f5bfec0411b160b69074925d29affee86ab7b1b4" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;column&lt;/em&gt; numbers, specifying where the error occurred.</source>
          <target state="translated">エラーが発生した場所を指定する、&lt;em&gt;行&lt;/em&gt;番号、&lt;em&gt;列&lt;/em&gt;番号のタプル。</target>
        </trans-unit>
        <trans-unit id="ac45160c628e9f17de9bd53926058b4dfa965527" translate="yes" xml:space="preserve">
          <source>A tuple of arguments for the callable object. An empty tuple must be given if the callable does not accept any argument.</source>
          <target state="translated">呼び出し可能なオブジェクトの引数のタプル。呼び出し可能オブジェクトが引数を受け付けない場合は、空のタプルを与えなければなりません。</target>
        </trans-unit>
        <trans-unit id="5cd0c1bc3b7430c4dc325b20146a15127227c071" translate="yes" xml:space="preserve">
          <source>A tuple of five integers representing version information about the OpenSSL library:</source>
          <target state="translated">OpenSSL ライブラリのバージョン情報を表す 5 つの整数のタプル。</target>
        </trans-unit>
        <trans-unit id="5235a223fb55cc8323b6b967311c62c5e4afc221" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the shape of the memory as an N-dimensional array.</source>
          <target state="translated">&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;の長さの整数のタプルで、メモリの形状をN次元配列として提供します。</target>
        </trans-unit>
        <trans-unit id="f5e4a5c5c0f872da9ef405f61b1402fa7e827fcc" translate="yes" xml:space="preserve">
          <source>A tuple of integers the length of &lt;a href=&quot;#memoryview.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; giving the size in bytes to access each element for each dimension of the array.</source>
          <target state="translated">配列の各次元の各要素にアクセスするためのサイズをバイト単位で与える&lt;a href=&quot;#memoryview.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;の長さの整数のタプル。</target>
        </trans-unit>
        <trans-unit id="bbbbae5b5f1f31e838ab89e5ab798870e6998659" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments that aren&amp;rsquo;t bound to any other parameter. This corresponds to a &lt;code&gt;*args&lt;/code&gt; parameter in a Python function definition.</source>
          <target state="translated">他のパラメーターにバインドされていない位置引数のタプル。これは、Python関数定義の &lt;code&gt;*args&lt;/code&gt; パラメータに対応します。</target>
        </trans-unit>
        <trans-unit id="e767d2abb81b29680f05c61c2dc0881ec7e2895d" translate="yes" xml:space="preserve">
          <source>A tuple of positional arguments values. Dynamically computed from the &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">位置引数値のタプル。&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;属性から動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="2bddcba1f84eefe95b64f3637762f321fa506285" translate="yes" xml:space="preserve">
          <source>A tuple of strings giving the names of all modules that are compiled into this Python interpreter. (This information is not available in any other way &amp;mdash; &lt;code&gt;modules.keys()&lt;/code&gt; only lists the imported modules.)</source>
          <target state="translated">このPythonインタープリターにコンパイルされるすべてのモジュールの名前を示す文字列のタプル。（この情報は他の方法では利用できません &lt;code&gt;modules.keys()&lt;/code&gt; はインポートされたモジュールのみをリストします。）</target>
        </trans-unit>
        <trans-unit id="9dc0c4f970d8a2e2a6e7e05921a6b50db400ca2a" translate="yes" xml:space="preserve">
          <source>A tuple of the six integer fields of the UUID, which are also available as six individual attributes and two derived attributes:</source>
          <target state="translated">UUIDの6つの整数フィールドのタプルで、6つの個別属性と2つの派生属性としても利用できます。</target>
        </trans-unit>
        <trans-unit id="7d7281d5a4d1699e2ef4b4d043daa76d806c7e3b" translate="yes" xml:space="preserve">
          <source>A tuple of two strings: the first is the name of the local non-DST timezone, the second is the name of the local DST timezone. If no DST timezone is defined, the second string should not be used. See note below.</source>
          <target state="translated">2つの文字列のタプル:1つ目はローカルの非DSTタイムゾーンの名前、2つ目はローカルのDSTタイムゾーンの名前です。DSTタイムゾーンが定義されていない場合、2番目の文字列は使用してはいけません。以下の注釈を参照してください。</target>
        </trans-unit>
        <trans-unit id="5785afa7d9d72a80a132775f931cd3296a1c396a" translate="yes" xml:space="preserve">
          <source>A two-dimensional vector class, used as a helper class for implementing turtle graphics. May be useful for turtle graphics programs too. Derived from tuple, so a vector is a tuple!</source>
          <target state="translated">タートルグラフィックスを実装するためのヘルパークラスとして使われる二次元ベクトルクラスです。タートルグラフィックスのプログラムにも使えるかもしれません。タプルから派生したクラスです。</target>
        </trans-unit>
        <trans-unit id="5c09a3ba1317d479a9a224b9ce88a6cea59653d7" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 128-bits integer, a 16-bytes packed integer, or an existing IPv6Address object; and the netmask is an integer representing the prefix length.</source>
          <target state="translated">アドレス記述とネットマスクの2つのタプルで、アドレス記述は文字列、128ビット整数、16バイトパック整数、または既存のIPv6Addressオブジェクトのいずれかであり、ネットマスクはプレフィックスの長さを表す整数です。</target>
        </trans-unit>
        <trans-unit id="8a17dcdfe6ec4d61527a00e964fb8c81625f4064" translate="yes" xml:space="preserve">
          <source>A two-tuple of an address description and a netmask, where the address description is either a string, a 32-bits integer, a 4-bytes packed integer, or an existing IPv4Address object; and the netmask is either an integer representing the prefix length (e.g. &lt;code&gt;24&lt;/code&gt;) or a string representing the prefix mask (e.g. &lt;code&gt;255.255.255.0&lt;/code&gt;).</source>
          <target state="translated">アドレスの説明とネットマスクの2つのタプル。アドレスの説明は、文字列、32ビット整数、4バイトのパック整数、または既存のIPv4Addressオブジェクトのいずれかです。ネットマスクは、プレフィックス長を表す整数（例： &lt;code&gt;24&lt;/code&gt; ）またはプレフィックスマスクを表す文字列（例： &lt;code&gt;255.255.255.0&lt;/code&gt; ）のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a97458b6662cbcaa16e108bc6f87a69c86c44cfc" translate="yes" xml:space="preserve">
          <source>A type alias is defined by assigning the type to the alias. In this example, &lt;code&gt;Vector&lt;/code&gt; and &lt;code&gt;List[float]&lt;/code&gt; will be treated as interchangeable synonyms:</source>
          <target state="translated">タイプエイリアスは、タイプをエイリアスに割り当てることによって定義されます。この例では、 &lt;code&gt;Vector&lt;/code&gt; と &lt;code&gt;List[float]&lt;/code&gt; は互換性のある同義語として扱われます。</target>
        </trans-unit>
        <trans-unit id="1afc84eb225f100301cf0747d0efc62cca04b7cd" translate="yes" xml:space="preserve">
          <source>A type alias is defined by assigning the type to the alias. In this example, &lt;code&gt;Vector&lt;/code&gt; and &lt;code&gt;list[float]&lt;/code&gt; will be treated as interchangeable synonyms:</source>
          <target state="translated">タイプエイリアスは、タイプをエイリアスに割り当てることによって定義されます。この例では、 &lt;code&gt;Vector&lt;/code&gt; と &lt;code&gt;list[float]&lt;/code&gt; は交換可能な同義語として扱われます。</target>
        </trans-unit>
        <trans-unit id="0bdcf50c828c6a26d172ef24bc0143735e308ea7" translate="yes" xml:space="preserve">
          <source>A type that can be used to indicate to type checkers that the corresponding variable or function parameter has a value equivalent to the provided literal (or one of several literals). For example:</source>
          <target state="translated">対応する変数や関数のパラメータが、指定されたリテラル(または複数のリテラルのうちの1つ)と同等の値を持つことを型チェッカーに示すために使用できる型。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="edd3251f3e927f6b3ff1cbaf77caeabe432e7f67" translate="yes" xml:space="preserve">
          <source>A type that can register with &lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt;&lt;code&gt;SyncManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt; &lt;code&gt;SyncManager&lt;/code&gt; に&lt;/a&gt;登録できるタイプ。</target>
        </trans-unit>
        <trans-unit id="4291e70537f9369ba206ac4e2ba915fe2d69ed5e" translate="yes" xml:space="preserve">
          <source>A type, introduced in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0593&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 593&lt;/strong&gt;&lt;/a&gt; (&lt;code&gt;Flexible function and variable
annotations&lt;/code&gt;), to decorate existing types with context-specific metadata (possibly multiple pieces of it, as &lt;code&gt;Annotated&lt;/code&gt; is variadic). Specifically, a type &lt;code&gt;T&lt;/code&gt; can be annotated with metadata &lt;code&gt;x&lt;/code&gt; via the typehint &lt;code&gt;Annotated[T, x]&lt;/code&gt;. This metadata can be used for either static analysis or at runtime. If a library (or tool) encounters a typehint &lt;code&gt;Annotated[T, x]&lt;/code&gt; and has no special logic for metadata &lt;code&gt;x&lt;/code&gt;, it should ignore it and simply treat the type as &lt;code&gt;T&lt;/code&gt;. Unlike the &lt;code&gt;no_type_check&lt;/code&gt; functionality that currently exists in the &lt;code&gt;typing&lt;/code&gt; module which completely disables typechecking annotations on a function or a class, the &lt;code&gt;Annotated&lt;/code&gt; type allows for both static typechecking of &lt;code&gt;T&lt;/code&gt; (e.g., via mypy or Pyre, which can safely ignore &lt;code&gt;x&lt;/code&gt;) together with runtime access to &lt;code&gt;x&lt;/code&gt; within a specific application.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0593&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 593&lt;/strong&gt;&lt;/a&gt;（ &lt;code&gt;Flexible function and variable annotations&lt;/code&gt; ）で導入されたタイプで、既存のタイプをコンテキスト固有のメタデータで装飾します（ &lt;code&gt;Annotated&lt;/code&gt; は可変引数であるため、複数の部分である可能性があります）。具体的には、タイプ &lt;code&gt;T&lt;/code&gt; には、タイプヒント &lt;code&gt;Annotated[T, x]&lt;/code&gt; 介してメタデータ &lt;code&gt;x&lt;/code&gt; で注釈を付けることができます。このメタデータは、静的分析または実行時に使用できます。ライブラリ（またはツール）がタイプヒント &lt;code&gt;Annotated[T, x]&lt;/code&gt; を検出し、メタデータ &lt;code&gt;x&lt;/code&gt; の特別なロジックがない場合は、それを無視して、タイプを &lt;code&gt;T&lt;/code&gt; として扱う必要があります。現在に存在する &lt;code&gt;no_type_check&lt;/code&gt; 機能とは異なり &lt;code&gt;typing&lt;/code&gt; 関数またはクラスのタイプチェックアノテーションを完全に無効にするタイピングモジュールである &lt;code&gt;Annotated&lt;/code&gt; タイプは、 &lt;code&gt;T&lt;/code&gt; の静的タイプチェック（たとえば、 &lt;code&gt;x&lt;/code&gt; を安全に無視できるmypyまたはPyre経由）と特定のアプリケーション内の &lt;code&gt;x&lt;/code&gt; へのランタイムアクセスの両方を可能にします。</target>
        </trans-unit>
        <trans-unit id="bf15fb052a2b8e6d3e5be62280869b7c778c81b0" translate="yes" xml:space="preserve">
          <source>A typical &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; implementation should not inherit from a &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; implementation, but wrap one, like &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; do.</source>
          <target state="translated">典型的な&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;実装は、&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;実装から継承するべきではありませんが、&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; の&lt;/a&gt;ようにラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="532a00782ce16211f46324cb7c43cd600e874a6c" translate="yes" xml:space="preserve">
          <source>A typical &lt;code&gt;load_tests&lt;/code&gt; function that loads tests from a specific set of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; classes may look like:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;クラスの特定のセットからテストをロードする一般的な &lt;code&gt;load_tests&lt;/code&gt; 関数は次のようになります。</target>
        </trans-unit>
        <trans-unit id="7b822b1ced78fa4973f2903bb2ec7ed0bbbbe9df" translate="yes" xml:space="preserve">
          <source>A typical SAX application uses three kinds of objects: readers, handlers and input sources. &amp;ldquo;Reader&amp;rdquo; in this context is another term for parser, i.e. some piece of code that reads the bytes or characters from the input source, and produces a sequence of events. The events then get distributed to the handler objects, i.e. the reader invokes a method on the handler. A SAX application must therefore obtain a reader object, create or open the input sources, create the handlers, and connect these objects all together. As the final step of preparation, the reader is called to parse the input. During parsing, methods on the handler objects are called based on structural and syntactic events from the input data.</source>
          <target state="translated">典型的なSAXアプリケーションは、リーダー、ハンドラー、入力ソースの3種類のオブジェクトを使用します。このコンテキストでの「リーダー」は、パーサーの別の用語です。つまり、入力ソースからバイトまたは文字を読み取り、一連のイベントを生成するコードの一部です。その後、イベントはハンドラーオブジェクトに配信されます。つまり、リーダーはハンドラーのメソッドを呼び出します。したがって、SAXアプリケーションは、リーダーオブジェクトを取得し、入力ソースを作成またはオープンし、ハンドラーを作成し、これらのオブジェクトをすべて一緒に接続する必要があります。準備の最終ステップとして、入力を解析するためにリーダーが呼び出されます。解析中、ハンドラーオブジェクトのメソッドは、入力データからの構造イベントおよび構文イベントに基づいて呼び出されます。</target>
        </trans-unit>
        <trans-unit id="92606cc38bee78998a30f8fec0ac721b4cacce47" translate="yes" xml:space="preserve">
          <source>A typical use case for this might be for doing multiple patches in the &lt;code&gt;setUp&lt;/code&gt; method of a &lt;code&gt;TestCase&lt;/code&gt;:</source>
          <target state="translated">これの一般的な使用例は、 &lt;code&gt;TestCase&lt;/code&gt; の &lt;code&gt;setUp&lt;/code&gt; メソッドで複数のパッチを実行する場合です。</target>
        </trans-unit>
        <trans-unit id="6f19d09a38de2ff39abf9054c1f371922c582e38" translate="yes" xml:space="preserve">
          <source>A typical use is to define a managed attribute &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">一般的な用途は、管理対象属性 &lt;code&gt;x&lt;/code&gt; を定義することです。</target>
        </trans-unit>
        <trans-unit id="0eac63d33888e56a0007381fdc8a8b73f97c1749" translate="yes" xml:space="preserve">
          <source>A typical use of this callback is to change the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;SSLSocket.context&lt;/code&gt;&lt;/a&gt; attribute to a new object of type &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; representing a certificate chain that matches the server name.</source>
          <target state="translated">このコールバックの一般的な用途は、&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;SSLSocket.context&lt;/code&gt; &lt;/a&gt;属性を、サーバー名と一致する証明書チェーンを表す&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;タイプの新しいオブジェクトに変更することです。</target>
        </trans-unit>
        <trans-unit id="dd5527406a727a988014a7553eed4fa39a4343fe" translate="yes" xml:space="preserve">
          <source>A unary operation. &lt;code&gt;op&lt;/code&gt; is the operator, and &lt;code&gt;operand&lt;/code&gt; any expression node.</source>
          <target state="translated">単項演算。 &lt;code&gt;op&lt;/code&gt; は演算子であり、任意の式ノードを &lt;code&gt;operand&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="18a7ab23c7bbb7dc839f46117e4329ce2492a932" translate="yes" xml:space="preserve">
          <source>A usage example of this class follows. The server code:</source>
          <target state="translated">このクラスの使用例を以下に示します。サーバーのコードです。</target>
        </trans-unit>
        <trans-unit id="978118fdeef62f1257794c4627909d23958610ab" translate="yes" xml:space="preserve">
          <source>A useful override of this method is one that treats each space-separated word as an argument. The following example demonstrates how to do this:</source>
          <target state="translated">このメソッドの便利なオーバーライドは、スペースで区切られた各単語を引数として扱うものです。次の例は、その方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a250b0892fe84e8c6f1a49863c77330a90929957" translate="yes" xml:space="preserve">
          <source>A user updateable list of mappings. The list is ordered from first-searched to last-searched. It is the only stored state and can be modified to change which mappings are searched. The list should always contain at least one mapping.</source>
          <target state="translated">ユーザーが更新可能なマッピングのリスト。リストは、最初に検索されたものから最後に検索されたものまで順番に並べられます。これは唯一の保存状態であり、どのマッピングを検索するかを変更することができます。リストには常に少なくとも1つのマッピングが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="079507d4f083bf2720ed48fc1b442c97ecadd6bb" translate="yes" xml:space="preserve">
          <source>A user-defined class can be defined as a generic class.</source>
          <target state="translated">ユーザー定義のクラスは、汎用クラスとして定義することができます。</target>
        </trans-unit>
        <trans-unit id="9537693522141cf602fdb88a5176b79c0e82b59d" translate="yes" xml:space="preserve">
          <source>A user-defined generic class can have ABCs as base classes without a metaclass conflict. Generic metaclasses are not supported. The outcome of parameterizing generics is cached, and most types in the typing module are hashable and comparable for equality.</source>
          <target state="translated">ユーザー定義のジェネリック・クラスは、メタクラスの競合なしにABCを基底クラスとして持つことができます。ジェネリック・メタクラスはサポートされていません。ジェネリックをパラメータ化した結果はキャッシュされ、型付けモジュールのほとんどの型はハッシュ化可能であり、等質性のために比較可能です。</target>
        </trans-unit>
        <trans-unit id="5c8693ddfe1cf07a3436ca33c0b98dabc46adab4" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, which can be used to open using a different protocol, or handle errors.</source>
          <target state="translated">別のプロトコルを使用して開く、またはエラーを処理するために使用できる有効な&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e61df85107f5cbf74dcf91d72f046c1f7d59444" translate="yes" xml:space="preserve">
          <source>A variable annotated with &lt;code&gt;C&lt;/code&gt; may accept a value of type &lt;code&gt;C&lt;/code&gt;. In contrast, a variable annotated with &lt;code&gt;Type[C]&lt;/code&gt; may accept values that are classes themselves &amp;ndash; specifically, it will accept the &lt;em&gt;class object&lt;/em&gt; of &lt;code&gt;C&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; で注釈された変数は、タイプ &lt;code&gt;C&lt;/code&gt; の値を受け入れることができます。対照的に、 &lt;code&gt;Type[C]&lt;/code&gt; 注釈が付けられた変数は、それ自体がクラスである値を受け入れる場合があります。具体的には、 &lt;code&gt;C&lt;/code&gt; の&lt;em&gt;クラスオブジェクト&lt;/em&gt;を受け入れ&lt;em&gt;ます&lt;/em&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="904d0ec5df1092d961eb12f38345e695c96dea25" translate="yes" xml:space="preserve">
          <source>A variable name. &lt;code&gt;id&lt;/code&gt; holds the name as a string, and &lt;code&gt;ctx&lt;/code&gt; is one of the following types.</source>
          <target state="translated">変数名。 &lt;code&gt;id&lt;/code&gt; は名前を文字列として保持し、 &lt;code&gt;ctx&lt;/code&gt; は次のいずれかのタイプです。</target>
        </trans-unit>
        <trans-unit id="ef488919d9e824be6b60939c2cb342b1b1bab344" translate="yes" xml:space="preserve">
          <source>A variant is &lt;code&gt;sNaN&lt;/code&gt; which signals rather than remaining quiet after every operation. This is a useful return value when an invalid result needs to interrupt a calculation for special handling.</source>
          <target state="translated">バリアントは &lt;code&gt;sNaN&lt;/code&gt; で、すべての操作の後に静かな状態を維持するのではなく、信号を出します。これは、無効な結果が特別な処理のために計算を中断する必要がある場合に役立つ戻り値です。</target>
        </trans-unit>
        <trans-unit id="90c08b03c549ad6d2f3a31dc3b83d49432395d7c" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; that retrieves most recently added entries first (last in, first out).</source>
          <target state="translated">最近追加されたエントリを最初に取得する（&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;のバリアント。</target>
        </trans-unit>
        <trans-unit id="e73ad0a5c4f069d5381e1de59b2ea0c613b95b43" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#asyncio.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;; retrieves entries in priority order (lowest first).</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;のバリアント。エントリを優先順位の高い順に取得します（低いものが最初）。</target>
        </trans-unit>
        <trans-unit id="39c5b43da7f038797d8ae64f42361f19c58135f2" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; that also has a database of &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; mappings. Can be used by a BasicAuth handler to determine when to send authentication credentials immediately instead of waiting for a &lt;code&gt;401&lt;/code&gt; response first.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt;のバリアントで、uri- &lt;code&gt;uri -&amp;gt; is_authenticated&lt;/code&gt; マッピングのデータベースもあります。BasicAuthハンドラーを使用して、最初に &lt;code&gt;401&lt;/code&gt; 応答を待つ代わりに、認証資格情報をすぐに送信するタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="d06f0891f1b2bfb9625186a337c49a98b6264aed" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method which returns a &lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt;&lt;code&gt;AsyncResult&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt; &lt;code&gt;AsyncResult&lt;/code&gt; &lt;/a&gt;オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="e7b048ff81890f86ab4d3705faacaefc982ccda5" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">結果オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="fc6ee99eaa7927495c010dd5cc5fe86c083b2b9f" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method which returns a &lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt;&lt;code&gt;AsyncResult&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.AsyncResult&quot;&gt; &lt;code&gt;AsyncResult&lt;/code&gt; &lt;/a&gt;オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="bfc44ba28d32f1aedff0a9745ce2cb349b025acf" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method which returns a result object.</source>
          <target state="translated">結果オブジェクトを返す&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;メソッドのバリアント。</target>
        </trans-unit>
        <trans-unit id="2e16236b15bf3dc82e98e92014c56a2bea2b94a3" translate="yes" xml:space="preserve">
          <source>A virtual environment is a Python environment such that the Python interpreter, libraries and scripts installed into it are isolated from those installed in other virtual environments, and (by default) any libraries installed in a &amp;ldquo;system&amp;rdquo; Python, i.e., one which is installed as part of your operating system.</source>
          <target state="translated">仮想環境とは、Pythonインタープリター、ライブラリ、およびそれにインストールされているスクリプトが、他の仮想環境にインストールされているものから分離されているPython環境であり、（デフォルトで）「システム」Pythonにインストールされているすべてのライブラリ、つまりインストールされているものオペレーティングシステムの一部として。</target>
        </trans-unit>
        <trans-unit id="33cf41a39f10a2b0987e5f534da602847cb9e481" translate="yes" xml:space="preserve">
          <source>A virtual environment is a directory tree which contains Python executable files and other files which indicate that it is a virtual environment.</source>
          <target state="translated">仮想環境とは、仮想環境であることを示すPythonの実行ファイルなどが格納されたディレクトリツリーのことです。</target>
        </trans-unit>
        <trans-unit id="e2a7438f4c3c42513c1a86d3d14ab1eb8aa7576d" translate="yes" xml:space="preserve">
          <source>A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;garbage collection&lt;/a&gt; is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.</source>
          <target state="translated">オブジェクトへの弱い参照は、オブジェクトを存続させるのに十分ではありません。リファレントへの残りの参照が弱い参照である場合、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-garbage-collection&quot;&gt;ガベージコレクション&lt;/a&gt;は、リファレントを自由に破棄し、他の何かのためにメモリを再利用できます。ただし、オブジェクトが実際に破棄されるまで、たとえオブジェクトへの強い参照がなくても、弱い参照はオブジェクトを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="eaa846e8c5fe0adcf162cc2c0dc632b0f7a4e21d" translate="yes" xml:space="preserve">
          <source>A weak reference to an object is not enough to keep the object alive: when the only remaining references to a referent are weak references, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-garbage-collection&quot;&gt;garbage collection&lt;/a&gt; is free to destroy the referent and reuse its memory for something else. However, until the object is actually destroyed the weak reference may return the object even if there are no strong references to it.</source>
          <target state="translated">オブジェクトへの弱参照は、オブジェクトを存続させるのに十分ではありません。指示対象への残りの参照が弱参照のみである場合、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-garbage-collection&quot;&gt;ガベージコレクション&lt;/a&gt;は自由に指示対象を破棄し、そのメモリを他の目的に再利用します。ただし、オブジェクトが実際に破棄されるまで、弱い参照は、強い参照がなくてもオブジェクトを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="f8cad28c9b720b7c8133daa3b6046ba8d41c572b" translate="yes" xml:space="preserve">
          <source>A week is converted to 7 days.</source>
          <target state="translated">1週間を7日に換算しています。</target>
        </trans-unit>
        <trans-unit id="e69e9595b25e9ef4c20aac1a77adfeabde1ae197" translate="yes" xml:space="preserve">
          <source>A widget-specific alternate display format</source>
          <target state="translated">ウィジェット固有の代替表示形式</target>
        </trans-unit>
        <trans-unit id="796565c37efcd7614c73b2d3bcd4ea9ec6196099" translate="yes" xml:space="preserve">
          <source>A workaround for apostrophes can be constructed using regular expressions:</source>
          <target state="translated">アポストロフィの回避策は、正規表現を使用して構築することができます。</target>
        </trans-unit>
        <trans-unit id="9aeb4a6a321904ee133be9093857c2603134a0b7" translate="yes" xml:space="preserve">
          <source>A working example follows. The server code:</source>
          <target state="translated">動作例を以下に示します。サーバーコードです。</target>
        </trans-unit>
        <trans-unit id="91c283731a52bc6a2b34753424f3b1349418c679" translate="yes" xml:space="preserve">
          <source>A wrapper for a bound socket or Windows named pipe which is &amp;lsquo;listening&amp;rsquo; for connections.</source>
          <target state="translated">接続を「リッスン」しているバインドされたソケットまたはWindows名前付きパイプのラッパー。</target>
        </trans-unit>
        <trans-unit id="25a0091075ac6adf4f212e341e5703255d4a54d9" translate="yes" xml:space="preserve">
          <source>A wrapper for a buffer representing picklable data. &lt;em&gt;buffer&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer-providing&lt;/a&gt; object, such as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or a N-dimensional array.</source>
          <target state="translated">pickle化可能なデータを表すバッファーのラッパー。&lt;em&gt;buffer&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;やN次元配列など、&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファーを提供する&lt;/a&gt;オブジェクトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c09c9dedb1551c62318a1648228748f916eeb315" translate="yes" xml:space="preserve">
          <source>A wrapper for a buffer representing picklable data. &lt;em&gt;buffer&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer-providing&lt;/a&gt; object, such as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or a N-dimensional array.</source>
          <target state="translated">選択可能なデータを表すバッファーのラッパー。&lt;em&gt;buffer&lt;/em&gt;は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;やN次元配列などの&lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;バッファーを提供する&lt;/a&gt;オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="9488d9c942617cebacbdd48557b94f0de1129a0f" translate="yes" xml:space="preserve">
          <source>A wrapper to convert a file-like object to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. The resulting objects support both &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; iteration styles, for compatibility with Python 2.1 and Jython. As the object is iterated over, the optional &lt;em&gt;blksize&lt;/em&gt; parameter will be repeatedly passed to the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;read()&lt;/code&gt; method to obtain bytestrings to yield. When &lt;code&gt;read()&lt;/code&gt; returns an empty bytestring, iteration is ended and is not resumable.</source>
          <target state="translated">ファイルのようなオブジェクトを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;に変換するラッパー。結果のオブジェクトは、Python 2.1およびJythonとの互換性のために、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;と__iter __（）の両方の反復スタイルをサポートします。オブジェクトが繰り返されると、オプションの&lt;em&gt;blksize&lt;/em&gt;パラメータが&lt;em&gt;ファイルのような&lt;/em&gt;オブジェクトの &lt;code&gt;read()&lt;/code&gt; メソッドに繰り返し渡され、&lt;em&gt;バイトストリング&lt;/em&gt;を取得して生成されます。場合は &lt;code&gt;read()&lt;/code&gt; 、空のバイト文字列を返し、反復は終了し、再開可能ではありません。</target>
        </trans-unit>
        <trans-unit id="12a55932dbb0f932cc3c2f4cd7200f736ccaded4" translate="yes" xml:space="preserve">
          <source>A wrapper to convert a file-like object to an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. The resulting objects support both &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; iteration styles, for compatibility with Python 2.1 and Jython. As the object is iterated over, the optional &lt;em&gt;blksize&lt;/em&gt; parameter will be repeatedly passed to the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;read()&lt;/code&gt; method to obtain bytestrings to yield. When &lt;code&gt;read()&lt;/code&gt; returns an empty bytestring, iteration is ended and is not resumable.</source>
          <target state="translated">ファイルのようなオブジェクトを&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;に変換するラッパー。結果のオブジェクトは、Python 2.1およびJythonとの互換性のために、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;と__iter __（）の両方の反復スタイルをサポートします。オブジェクトが繰り返されると、オプションの&lt;em&gt;blksize&lt;/em&gt;パラメーターが&lt;em&gt;filelike&lt;/em&gt;オブジェクトの &lt;code&gt;read()&lt;/code&gt; メソッドに繰り返し渡され、生成するバイト文字列が取得されます。場合は &lt;code&gt;read()&lt;/code&gt; 、空のバイト文字列を返し、反復は終了し、再開可能ではありません。</target>
        </trans-unit>
        <trans-unit id="029b94f840e06cd4458edf1aa492eee5fecb47bf" translate="yes" xml:space="preserve">
          <source>A writable boolean property which by default is true. When the program exits, it calls all remaining live finalizers for which &lt;a href=&quot;#weakref.finalize.atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; is true. They are called in reverse order of creation.</source>
          <target state="translated">デフォルトでtrueである書き込み可能なブールプロパティ。プログラムが終了すると、&lt;a href=&quot;#weakref.finalize.atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;がtrue である残りのライブファイナライザがすべて呼び出されます。それらは作成の逆の順序で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2e7f120e10b020add396221d836c3d123ec25267" translate="yes" xml:space="preserve">
          <source>A zero-filled bytes object of a specified length: &lt;code&gt;bytes(10)&lt;/code&gt;</source>
          <target state="translated">指定された長さのゼロで埋められたbytesオブジェクト： &lt;code&gt;bytes(10)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6674593f9f3a54e63a2233e1e6ee493d51af828" translate="yes" xml:space="preserve">
          <source>A zombie pythonw.exe process could be a problem. On Windows, use Task Manager to check for one and stop it if there is. Sometimes a restart initiated by a program crash or Keyboard Interrupt (control-C) may fail to connect. Dismissing the error box or using Restart Shell on the Shell menu may fix a temporary problem.</source>
          <target state="translated">ゾンビ pythonw.exe プロセス は問題の可能性があります。Windowsの場合、タスクマネージャーを使用してプロセスがないか確認し、ある場合は停止してください。プログラムのクラッシュやキーボード割り込み(control-C)による再起動で接続に失敗することがあります。エラーボックスを取り除くか、シェルメニューのシェルを再起動すると、一時的な問題が解決することがあります。</target>
        </trans-unit>
        <trans-unit id="5152d4d7dfe1ed03b72824b6d1326436b07eef4b" translate="yes" xml:space="preserve">
          <source>A zombie pythonw.exe process could be a problem. On Windows, use Task Manager to detect and stop one. Sometimes a restart initiated by a program crash or Keyboard Interrupt (control-C) may fail to connect. Dismissing the error box or Restart Shell on the Shell menu may fix a temporary problem.</source>
          <target state="translated">ゾンビ pythonw.exe プロセス は問題の可能性があります。Windowsの場合、タスクマネージャーで検出して停止させてください。プログラムのクラッシュやキーボード割り込み(control-C)による再起動で接続に失敗することがあります。エラーボックスを解除するか、シェルメニューのシェルを再起動すると一時的な問題が解決することがあります。</target>
        </trans-unit>
        <trans-unit id="d8945e83b68439f8e7c89d260624db63d24d011a" translate="yes" xml:space="preserve">
          <source>A. For some values, exponential notation is the only way to express the number of significant places in the coefficient. For example, expressing &lt;code&gt;5.0E+3&lt;/code&gt; as &lt;code&gt;5000&lt;/code&gt; keeps the value constant but cannot show the original&amp;rsquo;s two-place significance.</source>
          <target state="translated">A.一部の値では、指数表記法が係数の有意な桁数を表す唯一の方法です。たとえば、 &lt;code&gt;5.0E+3&lt;/code&gt; を &lt;code&gt;5000&lt;/code&gt; として表現すると、値は一定に保たれますが、元の2桁の有意性を示すことはできません。</target>
        </trans-unit>
        <trans-unit id="ddaf579b2dbf039da48669abd7ff5db5fd2565d9" translate="yes" xml:space="preserve">
          <source>A. Some operations like addition, subtraction, and multiplication by an integer will automatically preserve fixed point. Others operations, like division and non-integer multiplication, will change the number of decimal places and need to be followed-up with a &lt;code&gt;quantize()&lt;/code&gt; step:</source>
          <target state="translated">A.加算、減算、整数による乗算などの一部の演算では、固定小数点が自動的に保持されます。除算や整数以外の乗算などの他の操作では、小数点以下の桁数が変わるため、 &lt;code&gt;quantize()&lt;/code&gt; ステップでフォローアップする必要があります。</target>
        </trans-unit>
        <trans-unit id="8eb1c7daa519c3eacdadf4bc8b5d52726fa2117e" translate="yes" xml:space="preserve">
          <source>A. Some users abbreviate the constructor to just a single letter:</source>
          <target state="translated">A.コンストラクタを一文字だけに省略するユーザーもいます。</target>
        </trans-unit>
        <trans-unit id="51c77a17d9176008920830e8406c57f17d212b75" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;normalize()&lt;/code&gt; method maps all equivalent values to a single representative:</source>
          <target state="translated">A. &lt;code&gt;normalize()&lt;/code&gt; メソッドは、すべての同等の値を単一の代表にマッピングします。</target>
        </trans-unit>
        <trans-unit id="3c6805dd4d82a6ff60cc2229cc3596fd23058790" translate="yes" xml:space="preserve">
          <source>A. The &lt;code&gt;quantize()&lt;/code&gt; method rounds to a fixed number of decimal places. If the &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; trap is set, it is also useful for validation:</source>
          <target state="translated">A. &lt;code&gt;quantize()&lt;/code&gt; 小数点の固定数の方法ラウンド。場合は&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;トラップが設定されている、それはまた、検証のために有用です：</target>
        </trans-unit>
        <trans-unit id="944d77a62db51f3b27bea12de17663f17275ef1c" translate="yes" xml:space="preserve">
          <source>A. The decimal module makes it easy to test results. A best practice is to re-run calculations using greater precision and with various rounding modes. Widely differing results indicate insufficient precision, rounding mode issues, ill-conditioned inputs, or a numerically unstable algorithm.</source>
          <target state="translated">A.小数点モジュールを使用すると、結果のテストが容易になります。ベストプラクティスは、より高い精度とさまざまな丸めモードを使用して計算を再実行することです。結果が大きく異なる場合は、精度不足、丸め込みモードの問題、入力の条件が悪い、または数値的に不安定なアルゴリズムを示しています。</target>
        </trans-unit>
        <trans-unit id="6af8f2411bcef764bf4bed9c2423c5567318a5b2" translate="yes" xml:space="preserve">
          <source>A. Yes, any binary floating point number can be exactly expressed as a Decimal though an exact conversion may take more precision than intuition would suggest:</source>
          <target state="translated">A.はい、どんな二進数の浮動小数点数でも、正確に十進数として表現することができますが、正確な変換には直感が示唆する以上の精度が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7f7b86e04ad6ee66bb23f8e561b76dfb3714289b" translate="yes" xml:space="preserve">
          <source>A. Yes. In the CPython and PyPy3 implementations, the C/CFFI versions of the decimal module integrate the high speed &lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt; library for arbitrary precision correctly-rounded decimal floating point arithmetic &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;. &lt;code&gt;libmpdec&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba multiplication&lt;/a&gt; for medium-sized numbers and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt; for very large numbers.</source>
          <target state="translated">A.はい。CPythonおよびPyPy3の実装では、decimalモジュールのC / CFFIバージョンは、高速&lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt;ライブラリを統合して、任意精度の正しく丸められた10進浮動小数点演算&lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;1を実現し&lt;/a&gt;ます。 &lt;code&gt;libmpdec&lt;/code&gt; は、中規模の数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;カラツバ乗算&lt;/a&gt;を使用し、非常に大きな数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;数値理論変換&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="d7b3b49e07b2ffed558d950fbc8d141a043755f6" translate="yes" xml:space="preserve">
          <source>A. Yes. In the CPython and PyPy3 implementations, the C/CFFI versions of the decimal module integrate the high speed &lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt; library for arbitrary precision correctly-rounded decimal floating point arithmetic. &lt;code&gt;libmpdec&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba multiplication&lt;/a&gt; for medium-sized numbers and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt; for very large numbers. However, to realize this performance gain, the context needs to be set for unrounded calculations.</source>
          <target state="translated">A.はい。CPythonおよびPyPy3の実装では、decimalモジュールのC / CFFIバージョンは、任意の精度で正確に丸められた10進浮動小数点演算用の高速&lt;a href=&quot;https://www.bytereef.org/mpdecimal/doc/libmpdec/index.html&quot;&gt;libmpdec&lt;/a&gt;ライブラリを統合します。 &lt;code&gt;libmpdec&lt;/code&gt; は、中規模の数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba乗算&lt;/a&gt;を使用し、非常に大きな数値には&lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform&quot;&gt;Number Theoretic Transform&lt;/a&gt;を使用します。ただし、このパフォーマンスの向上を実現するには、丸められていない計算に対してコンテキストを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a3cc723c0fbf6fce1cd335b2e051e9aa0f006ab" translate="yes" xml:space="preserve">
          <source>A. Yes. The principle is that all values are considered to be exact and so is the arithmetic on those values. Only the results are rounded. The advantage for inputs is that &amp;ldquo;what you type is what you get&amp;rdquo;. A disadvantage is that the results can look odd if you forget that the inputs haven&amp;rsquo;t been rounded:</source>
          <target state="translated">A.はい。原則は、すべての値が正確であると見なされ、それらの値の算術も正確であると見なされることです。結果のみが丸められます。入力の利点は、「入力した内容が取得したものになる」ことです。欠点は、入力が丸められていないことを忘れた場合、結果が奇妙に見える可能性があることです。</target>
        </trans-unit>
        <trans-unit id="3c01bdbb26f358bab27f267924aa2c9a03fcfdb8" translate="yes" xml:space="preserve">
          <source>ABC</source>
          <target state="translated">ABC</target>
        </trans-unit>
        <trans-unit id="7f5ec78b298239f25d4eedf9f08390184fa9f0f0" translate="yes" xml:space="preserve">
          <source>ABC for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; objects, which can be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expressions. Custom implementations must provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以下のためのABC &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;で使用できるオブジェクト、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表現。カスタム実装は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="b298b7e5b1f1a9b44dee31501307bbf8bbf40c3a" translate="yes" xml:space="preserve">
          <source>ABC for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; objects, which can be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expressions. Custom implementations must provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以下のためのABC &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;で使用できるオブジェクト、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;表現。カスタム実装は&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f010c60296129173d3201147bb2f74ffe0bbf019" translate="yes" xml:space="preserve">
          <source>ABC for asynchronous generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">ABCは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;https://www.python.org/dev/peps/pep-0492&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 492で&lt;/strong&gt;&lt;/a&gt;定義されたプロトコルを実装する非同期ジェネレータークラスです。</target>
        </trans-unit>
        <trans-unit id="7822765e6f046b2e22b3015dc9f40823cfde84ac" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; および &lt;code&gt;__anext__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;非同期反復子&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="1f9f33f03e90008a03cc1fbc29494b8d4efc7d3c" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; および &lt;code&gt;__anext__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;非同期イテレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="07eb81a44ab9b106c2098b95becee86a38c0e4e3" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; method. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;asynchronous iterable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterable&quot;&gt;非同期反復可能オブジェクト&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="e346357d155f0863bd1c27b87db3147cf6ee5398" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide &lt;code&gt;__aiter__&lt;/code&gt; method. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterable&quot;&gt;asynchronous iterable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__aiter__&lt;/code&gt; メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterable&quot;&gt;非同期反復可能&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="f855e4e193f74dc187adea3f35b5e517486377bf" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="292e30239cefaf0272ea58d0e9252446da8da0d9" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="0a880cb36f6671eed782dbea77d9ed8448dce0a0" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="05e1c0aaceac77b9c891280c28ef294d57ae05de" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="61380570df47b5847df8690a21f958262a0b65f8" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="21b0d0019985658cdee466d444ff3046f0723a3c" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="e07ce05477de3c6001717f47345abad6405a3e68" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="7351886044acb81f786856f465e04454435e31ee" translate="yes" xml:space="preserve">
          <source>ABC for classes that provide the &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドを提供するクラスのABC 。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="477a0ec0ae4686b4b7160cec57ecef7a897b1f69" translate="yes" xml:space="preserve">
          <source>ABC for coroutine compatible classes. These implement the following methods, defined in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;Coroutine Objects&lt;/a&gt;: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. Custom implementations must also implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt;. All &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; instances are also instances of &lt;a href=&quot;#collections.abc.Awaitable&quot;&gt;&lt;code&gt;Awaitable&lt;/code&gt;&lt;/a&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;.</source>
          <target state="translated">コルーチン互換クラスのABC。これらは、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine-objects&quot;&gt;コルーチンオブジェクト&lt;/a&gt;で定義されている次のメソッドを実装します：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。カスタム実装は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;も実装する必要があります。すべての&lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;#collections.abc.Awaitable&quot;&gt; &lt;code&gt;Awaitable&lt;/code&gt; の&lt;/a&gt;インスタンスでもあります。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="c5bdbfd7c84e8d2fe9070ac7f501ee81a0edf6b8" translate="yes" xml:space="preserve">
          <source>ABC for coroutine compatible classes. These implement the following methods, defined in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine-objects&quot;&gt;Coroutine Objects&lt;/a&gt;: &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. Custom implementations must also implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt;. All &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; instances are also instances of &lt;a href=&quot;#collections.abc.Awaitable&quot;&gt;&lt;code&gt;Awaitable&lt;/code&gt;&lt;/a&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;.</source>
          <target state="translated">コルーチン互換クラスのABC。これらは、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine-objects&quot;&gt;コルーチンオブジェクト&lt;/a&gt;で定義されている次のメソッドを実装します：&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。カスタム実装は、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;も実装する必要があります。すべての&lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;#collections.abc.Awaitable&quot;&gt; &lt;code&gt;Awaitable&lt;/code&gt; の&lt;/a&gt;インスタンスでもあります。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="46d28e2c22a4dbfdd76d81e2be95f80272298b4f" translate="yes" xml:space="preserve">
          <source>ABC for generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt; that extends iterators with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドでイテレーターを拡張する、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt;で定義されたプロトコルを実装するジェネレータークラスのABC 。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="a79dfe7659402a73038d0d4b42433be9335ec550" translate="yes" xml:space="preserve">
          <source>ABC for generator classes that implement the protocol defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt; that extends iterators with the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.throw&quot;&gt;&lt;code&gt;throw()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; methods. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">で定義されたプロトコル実装ジェネレータクラスのABC &lt;a href=&quot;https://www.python.org/dev/peps/pep-0342&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 342&lt;/strong&gt;&lt;/a&gt;とイテレータを拡張&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.throw&quot;&gt; &lt;code&gt;throw()&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを。&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;の定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="0548b242874beb012653f72ceb70cf25e8733795" translate="yes" xml:space="preserve">
          <source>ABC for iterable classes that also provide the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;メソッドも提供する反復可能なクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="8c021e4ae4d3ee37e413ee5551dc900c21183652" translate="yes" xml:space="preserve">
          <source>ABC for iterable classes that also provide the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;メソッドも提供する反復可能なクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="d92ee93cd33bf6ba5fa8a1c70c98d3856ade0f4c" translate="yes" xml:space="preserve">
          <source>ABC for sized iterable container classes.</source>
          <target state="translated">サイズの異なるイテレート可能なコンテナクラスのためのABC。</target>
        </trans-unit>
        <trans-unit id="59647d4cbeaabde8a1d037a9dea14e674c553715" translate="yes" xml:space="preserve">
          <source>ABC hierarchy:</source>
          <target state="translated">ABC階層。</target>
        </trans-unit>
        <trans-unit id="0b0fbb7c06ed511ccb4423144202c87f813003e4" translate="yes" xml:space="preserve">
          <source>ABCs for classes that provide respectively the methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ提供するクラスのABC 。</target>
        </trans-unit>
        <trans-unit id="015be73827a640fdee0b89bf55fb5aff421c1ec3" translate="yes" xml:space="preserve">
          <source>ABCs for mapping, items, keys, and values &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">マッピング、アイテム、キー、および値の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;ビューの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="0264f29f31772b04830ce44089f454a6f2584a33" translate="yes" xml:space="preserve">
          <source>ABCs for mapping, items, keys, and values &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">マッピング、アイテム、キー、および値&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-dictionary-view&quot;&gt;ビューの&lt;/a&gt;ABC 。</target>
        </trans-unit>
        <trans-unit id="55b7fe6f021ed9e9a7ce994b1445cda74cddbc7c" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mappings&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および変更可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;マッピングの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="d86e2109768137f54448089b433922ec0e56d34d" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequences&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および変更可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;シーケンスの&lt;/a&gt; ABC 。</target>
        </trans-unit>
        <trans-unit id="e53db294215f6a899b79e047ef49041870791a20" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;mappings&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および可変&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;マッピング&lt;/a&gt;用のABC 。</target>
        </trans-unit>
        <trans-unit id="6297ac9fdbad7e632fb86ba052d65e227f654e77" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;sequences&lt;/a&gt;.</source>
          <target state="translated">読み取り専用および可変&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;シーケンスの&lt;/a&gt;ABC 。</target>
        </trans-unit>
        <trans-unit id="ace54a5c1800f9a8fbcc59c5817199681df7db33" translate="yes" xml:space="preserve">
          <source>ABCs for read-only and mutable sets.</source>
          <target state="translated">読み取り専用セットと変異可能セットのABC。</target>
        </trans-unit>
        <trans-unit id="f86d7a17edb02a17fa7d6037082a11974589497c" translate="yes" xml:space="preserve">
          <source>ACS code</source>
          <target state="translated">ACSコード</target>
        </trans-unit>
        <trans-unit id="f6ae31d47584845d5b7ec1a3525c346c981b4210" translate="yes" xml:space="preserve">
          <source>AIO requests</source>
          <target state="translated">AIOリクエスト</target>
        </trans-unit>
        <trans-unit id="7cd735bc88414abeac25ef102606e6871aeba944" translate="yes" xml:space="preserve">
          <source>AIX</source>
          <target state="translated">AIX</target>
        </trans-unit>
        <trans-unit id="113a97cdab92673636cc95858168822f55ed3094" translate="yes" xml:space="preserve">
          <source>ANY</source>
          <target state="translated">ANY</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="fb44be4c1480d2e393e6140650808a3252950e7e" translate="yes" xml:space="preserve">
          <source>API reference for the logging module.</source>
          <target state="translated">ロギングモジュールのAPIリファレンス。</target>
        </trans-unit>
        <trans-unit id="85772cf0096853ab75ec0710b340b4302c6a59bb" translate="yes" xml:space="preserve">
          <source>Abort a file transfer that is in progress. Using this does not always work, but it&amp;rsquo;s worth a try.</source>
          <target state="translated">進行中のファイル転送を中止します。これを使用しても常に動作するとは限りませんが、試してみる価値はあります。</target>
        </trans-unit>
        <trans-unit id="d1a265f8b05dbab0fc0f247d5a7b42c32db4a8a6" translate="yes" xml:space="preserve">
          <source>Abort signal from &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/abort(3)&quot;&gt;abort(3)&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/abort(3)&quot;&gt;abort（3）&lt;/a&gt;&lt;/em&gt;からのシグナルを&lt;em&gt;中止し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9a43092c673da6a4e7137e842ae9542e006479e1" translate="yes" xml:space="preserve">
          <source>About IDLE</source>
          <target state="translated">IDLEについて</target>
        </trans-unit>
        <trans-unit id="6d945808cdf52d5b08a921fc7f467995f1d2ba52" translate="yes" xml:space="preserve">
          <source>Abstract Base Classes</source>
          <target state="translated">抽象基底クラス</target>
        </trans-unit>
        <trans-unit id="d61ab640c5b98ffb68974b7f64188b17f4dd2a53" translate="yes" xml:space="preserve">
          <source>Abstract Grammar</source>
          <target state="translated">抽象的な文法</target>
        </trans-unit>
        <trans-unit id="5fde6504e20ecd1360ad9d942cd74ad60b2cc703" translate="yes" xml:space="preserve">
          <source>Abstract Methods</source>
          <target state="translated">摘要方法</target>
        </trans-unit>
        <trans-unit id="d663d5ecddcb7099c665bc6e641fc7287c322569" translate="yes" xml:space="preserve">
          <source>Abstract a key/value pair, which has some &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">いくつかの&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性を持つキー/値ペアを抽象化します。</target>
        </trans-unit>
        <trans-unit id="344cb8aff69839e7bd97d5cbe55e40950f78e6c2" translate="yes" xml:space="preserve">
          <source>Abstract base class for arrays.</source>
          <target state="translated">配列の抽象基底クラス.</target>
        </trans-unit>
        <trans-unit id="5159868f3346bfddd687c4b1c79e385a0b2b7314" translate="yes" xml:space="preserve">
          <source>Abstract base class for asyncio-compliant event loops.</source>
          <target state="translated">asyncioに準拠したイベントループのための抽象基底クラス。</target>
        </trans-unit>
        <trans-unit id="5a00e7a32834730b14935377913a4e39792f78b5" translate="yes" xml:space="preserve">
          <source>Abstract base class for generic types.</source>
          <target state="translated">汎用型の抽象基底クラスです。</target>
        </trans-unit>
        <trans-unit id="e90db39e674e4bc026807fcbf53f0a2f6df04011" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;big endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;ビッグエンディアン&lt;/em&gt;バイトオーダーの構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="161636484cb5323de19447914374caeff71931d4" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;little endian&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;リトルエンディアンの&lt;/em&gt;バイト順の構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="d09915045304ac9b228bab360849a5f73ad7dc24" translate="yes" xml:space="preserve">
          <source>Abstract base class for structures in &lt;em&gt;native&lt;/em&gt; byte order.</source>
          <target state="translated">&lt;em&gt;ネイティブ&lt;/em&gt;バイトオーダーの構造の抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="989b4ac287af7bb629b745acd2c03089764dad2b" translate="yes" xml:space="preserve">
          <source>Abstract base class for unions in native byte order.</source>
          <target state="translated">ネイティブバイト順のユニオンのための抽象基底クラス.</target>
        </trans-unit>
        <trans-unit id="be904874648301c38c0cbd1e8e8ee45fc9ff355f" translate="yes" xml:space="preserve">
          <source>Abstract.</source>
          <target state="translated">Abstract.</target>
        </trans-unit>
        <trans-unit id="033f637625396067d78ede4d817a5e47570aed40" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the imaginary component of this number.</source>
          <target state="translated">抽象的な この数の虚数成分を取得します。</target>
        </trans-unit>
        <trans-unit id="5dd4baa9cd2aedc339bb34801c67b8f428d8a227" translate="yes" xml:space="preserve">
          <source>Abstract. Retrieves the real component of this number.</source>
          <target state="translated">抽象的な この数値の実数成分を取得します。</target>
        </trans-unit>
        <trans-unit id="7d8657883dbffc0354e7c89d9f5906b7e3171e7a" translate="yes" xml:space="preserve">
          <source>Abstract. Returns the complex conjugate. For example, &lt;code&gt;(1+3j).conjugate()
== (1-3j)&lt;/code&gt;.</source>
          <target state="translated">概要。複素共役を返します。たとえば、 &lt;code&gt;(1+3j).conjugate() == (1-3j)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="918a7e7e3abfc661fbce7b36f45ad4a008b3e4b6" translate="yes" xml:space="preserve">
          <source>AbstractBasicAuthHandler Objects</source>
          <target state="translated">AbstractBasicAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="35aeb77a12aeb24dd8853c33d313b402491b42a1" translate="yes" xml:space="preserve">
          <source>AbstractDigestAuthHandler Objects</source>
          <target state="translated">AbstractDigestAuthHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="2d65bd49a1365a4f2d71a81612906c6eff60f7c3" translate="yes" xml:space="preserve">
          <source>Accept a &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; connection.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;接続を受け入れます。</target>
        </trans-unit>
        <trans-unit id="3ca28d3cc8b69490da642723870f35d0d39797e0" translate="yes" xml:space="preserve">
          <source>Accept a base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object and decode it as the instance&amp;rsquo;s new data.</source>
          <target state="translated">base64 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを受け入れ、インスタンスの新しいデータとしてデコードします。</target>
        </trans-unit>
        <trans-unit id="248136c7d4ed41a70a6986aad65af2eb7f26a157" translate="yes" xml:space="preserve">
          <source>Accept a connection on the bound socket or named pipe of the listener object and return a &lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object. If authentication is attempted and fails, then &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">リスナーオブジェクトのバインドされたソケットまたは名前付きパイプで接続を受け入れ、&lt;a href=&quot;#multiprocessing.connection.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。認証が試行されて失敗した場合、&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="68567e805163dadbfc1e5c5431016e1e5ff22046" translate="yes" xml:space="preserve">
          <source>Accept a connection. Modeled after the blocking &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">接続を受け入れます。ブロッキング&lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept()&lt;/code&gt; &lt;/a&gt;メソッドをモデルにしています。</target>
        </trans-unit>
        <trans-unit id="5e6d96453b4cda0f31d633767d452eb27962620b" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value can be either &lt;code&gt;None&lt;/code&gt; or a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection. When &lt;code&gt;None&lt;/code&gt; is returned it means the connection didn&amp;rsquo;t take place, in which case the server should just ignore this event and keep listening for further incoming connections.</source>
          <target state="translated">接続を受け入れます。ソケットはアドレスにバインドされ、接続を待機する必要があります。戻り値は、 &lt;code&gt;None&lt;/code&gt; またはペア &lt;code&gt;(conn, address)&lt;/code&gt; いずれかです。ここで、&lt;em&gt;conn&lt;/em&gt;は接続でデータを送受信するために使用できる&lt;em&gt;新しい&lt;/em&gt;ソケットオブジェクトで、&lt;em&gt;address&lt;/em&gt;は接続の反対側のソケットにバインドされたアドレスです。とき &lt;code&gt;None&lt;/code&gt; 返されなかったことは、接続がサーバがちょうどこのイベントを無視し、さらに受信接続を待機しておく必要があり、その場合には、場所を取らなかったことを意味します。</target>
        </trans-unit>
        <trans-unit id="bf1a228c35d50b158ea9e874327d777a40642808" translate="yes" xml:space="preserve">
          <source>Accept a connection. The socket must be bound to an address and listening for connections. The return value is a pair &lt;code&gt;(conn, address)&lt;/code&gt; where &lt;em&gt;conn&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;address&lt;/em&gt; is the address bound to the socket on the other end of the connection.</source>
          <target state="translated">接続を受け入れます。ソケットはアドレスにバインドされ、接続を待機する必要があります。戻り値はペア &lt;code&gt;(conn, address)&lt;/code&gt; ここで、&lt;em&gt;conn&lt;/em&gt;は接続でデータを送受信するために使用できる&lt;em&gt;新しい&lt;/em&gt;ソケットオブジェクトで、&lt;em&gt;address&lt;/em&gt;は接続の反対側のソケットにバインドされたアドレスです。</target>
        </trans-unit>
        <trans-unit id="becea170712dd2efec29eca7cb2dd1f65a0fa7cd" translate="yes" xml:space="preserve">
          <source>Accept a string as the instance&amp;rsquo;s new time value.</source>
          <target state="translated">インスタンスの新しい時間値として文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="05ba9cfd374cda2ea3202cabf287a75ce2cae7c9" translate="yes" xml:space="preserve">
          <source>Accepts a wide range of Python callables, from plain functions and classes to &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">プレーンな関数やクラスから&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;オブジェクトまで、幅広いPython呼び出し可能オブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="cefd8c72a8263fd2b76f3d365284a05d42f5bcfa" translate="yes" xml:space="preserve">
          <source>Accepts an arbitrary callback function and arguments and adds it to the callback stack.</source>
          <target state="translated">任意のコールバック関数と引数を受け取り、コールバックスタックに追加します。</target>
        </trans-unit>
        <trans-unit id="a5c4b76bbe3ef1a943cc50e4d249422d0b1aab87" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;MAIL FROM:&amp;rdquo; syntax and stores the supplied address as &lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt;&lt;code&gt;mailfrom&lt;/code&gt;&lt;/a&gt;. In extended command mode, accepts the &lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE attribute and responds appropriately based on the value of &lt;em&gt;data_size_limit&lt;/em&gt;.</source>
          <target state="translated">「MAIL FROM：」構文を受け入れ、指定されたアドレスを&lt;a href=&quot;#smtpd.SMTPChannel.mailfrom&quot;&gt; &lt;code&gt;mailfrom&lt;/code&gt; &lt;/a&gt;として保存します。拡張コマンドモードでは、&lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE属性を受け入れ、&lt;em&gt;data_size_limit&lt;/em&gt;の値に基づいて適切に応答します。</target>
        </trans-unit>
        <trans-unit id="ca73702311936fa8995eea8177ce31af536ccb02" translate="yes" xml:space="preserve">
          <source>Accepts the &amp;ldquo;RCPT TO:&amp;rdquo; syntax and stores the supplied addresses in the &lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt;&lt;code&gt;rcpttos&lt;/code&gt;&lt;/a&gt; list.</source>
          <target state="translated">「RCPT TO：」構文を受け入れ、指定されたアドレスを&lt;a href=&quot;#smtpd.SMTPChannel.rcpttos&quot;&gt; &lt;code&gt;rcpttos&lt;/code&gt; &lt;/a&gt;リストに格納します。</target>
        </trans-unit>
        <trans-unit id="6fdda2dde2b8c2c191d15b7f3125ea94a39916cf" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to base command mode.</source>
          <target state="translated">クライアントからの挨拶を受け入れ、それを&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; に&lt;/a&gt;格納します。サーバーを基本コマンドモードに設定します。</target>
        </trans-unit>
        <trans-unit id="c0b35569f1e8ae304d581f5e8821f7f16840b7d0" translate="yes" xml:space="preserve">
          <source>Accepts the greeting from the client and stores it in &lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt;&lt;code&gt;seen_greeting&lt;/code&gt;&lt;/a&gt;. Sets server to extended command mode.</source>
          <target state="translated">クライアントからの挨拶を受け入れ、それを&lt;a href=&quot;#smtpd.SMTPChannel.seen_greeting&quot;&gt; &lt;code&gt;seen_greeting&lt;/code&gt; に&lt;/a&gt;格納します。サーバーを拡張コマンドモードに設定します。</target>
        </trans-unit>
        <trans-unit id="8966aa55dca18b010cac9082dfd52437b31bf67c" translate="yes" xml:space="preserve">
          <source>Accepts two optional keyword arguments which are callables that accept an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; as an argument. The &lt;em&gt;firstiter&lt;/em&gt; callable will be called when an asynchronous generator is iterated for the first time. The &lt;em&gt;finalizer&lt;/em&gt; will be called when an asynchronous generator is about to be garbage collected.</source>
          <target state="translated">引数として&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator-iterator&quot;&gt;非同期ジェネレーターイテレーター&lt;/a&gt;を受け入れる呼び出し可能である2つのオプションのキーワード引数を受け入れます。&lt;em&gt;firstiterの&lt;/em&gt;非同期発電機が最初に反復されたときに呼び出し可能に呼び出されます。&lt;em&gt;ファイナライザは&lt;/em&gt;、非同期発電機がごみを収集することとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="327de47ac974e8a1e8a3bbfcc08a3fecd212e5a3" translate="yes" xml:space="preserve">
          <source>Accepts two optional keyword arguments which are callables that accept an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;asynchronous generator iterator&lt;/a&gt; as an argument. The &lt;em&gt;firstiter&lt;/em&gt; callable will be called when an asynchronous generator is iterated for the first time. The &lt;em&gt;finalizer&lt;/em&gt; will be called when an asynchronous generator is about to be garbage collected.</source>
          <target state="translated">引数として&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator-iterator&quot;&gt;非同期ジェネレータイテレータ&lt;/a&gt;を受け入れる呼び出し可能である2つのオプションのキーワード引数を受け入れます。&lt;em&gt;firstiterの&lt;/em&gt;非同期発電機が最初に反復されたときに呼び出し可能に呼び出されます。&lt;em&gt;ファイナライザは&lt;/em&gt;、非同期発電機がごみを収集することとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e05b284dc7ffc87c49e09a289e14dcbf79cfef75" translate="yes" xml:space="preserve">
          <source>Access Rights</source>
          <target state="translated">アクセス権</target>
        </trans-unit>
        <trans-unit id="731aec2d2a9b1fac8c050c5f45f4db5cae619c59" translate="yes" xml:space="preserve">
          <source>Access a member of the archive as a binary file-like object. &lt;em&gt;name&lt;/em&gt; can be either the name of a file within the archive or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. The &lt;em&gt;mode&lt;/em&gt; parameter, if included, must be &lt;code&gt;'r'&lt;/code&gt; (the default) or &lt;code&gt;'w'&lt;/code&gt;. &lt;em&gt;pwd&lt;/em&gt; is the password used to decrypt encrypted ZIP files.</source>
          <target state="translated">バイナリファイルのようなオブジェクトとしてアーカイブのメンバーにアクセスします。&lt;em&gt;name&lt;/em&gt;は、アーカイブ内のファイルの名前または&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;オブジェクトのいずれかです。&lt;em&gt;モード&lt;/em&gt;パラメータが含まれている場合、でなければならない &lt;code&gt;'r'&lt;/code&gt; （デフォルト）または &lt;code&gt;'w'&lt;/code&gt; 。&lt;em&gt;pwd&lt;/em&gt;は、暗号化されたZIPファイルの復号化に使用されるパスワードです。</target>
        </trans-unit>
        <trans-unit id="d198a0ec3c83b4614eaff43518cfa5395bac5e85" translate="yes" xml:space="preserve">
          <source>Access local Python documentation, if installed, or start a web browser and open docs.python.org showing the latest Python documentation.</source>
          <target state="translated">インストールされている場合はローカルのPythonドキュメントにアクセスするか、Webブラウザを起動して最新のPythonドキュメントを表示するdocs.python.orgを開きます。</target>
        </trans-unit>
        <trans-unit id="7c0061ddf6eb005af80c77ef4895dee301897968" translate="yes" xml:space="preserve">
          <source>Access optional transport information; see &lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt;&lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">オプションの輸送情報にアクセスします。詳細については、&lt;a href=&quot;asyncio-protocol#asyncio.BaseTransport.get_extra_info&quot;&gt; &lt;code&gt;BaseTransport.get_extra_info()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d1bb3577165fc1967c20f6f0b33bb6defaf538a" translate="yes" xml:space="preserve">
          <source>Access to external objects</source>
          <target state="translated">外部オブジェクトへのアクセス</target>
        </trans-unit>
        <trans-unit id="7317b09c89f800370b38efea04c5464e8c108a83" translate="yes" xml:space="preserve">
          <source>Access to internal objects</source>
          <target state="translated">内部オブジェクトへのアクセス</target>
        </trans-unit>
        <trans-unit id="d4dc38860a079acbf5040cd2135bd4d353e54f20" translate="yes" xml:space="preserve">
          <source>Access to message catalogs</source>
          <target state="translated">メッセージカタログへのアクセス</target>
        </trans-unit>
        <trans-unit id="0b1a55fa626d7cf9e11c68cb8e95989f234a6996" translate="yes" xml:space="preserve">
          <source>Access to standard Tk dialog boxes.</source>
          <target state="translated">標準のTkダイアログボックスにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9e838cb51991a7a2ef425afc34411b6a4cf0eae9" translate="yes" xml:space="preserve">
          <source>Accessing Policies</source>
          <target state="translated">ポリシーへのアクセス</target>
        </trans-unit>
        <trans-unit id="260c8c30ecab2bf1e4877cdc49b57bce6210e08e" translate="yes" xml:space="preserve">
          <source>Accessing a corrupted shared library</source>
          <target state="translated">破損した共有ライブラリへのアクセス</target>
        </trans-unit>
        <trans-unit id="71af361ba292908615dcf5c8ccee9e932f4b7e7c" translate="yes" xml:space="preserve">
          <source>Accessing a function on a loaded library raises an auditing event &lt;code&gt;ctypes.dlsym&lt;/code&gt; with arguments &lt;code&gt;library&lt;/code&gt; (the library object) and &lt;code&gt;name&lt;/code&gt; (the symbol&amp;rsquo;s name as a string or integer).</source>
          <target state="translated">ロードされたライブラリの関数にアクセスすると、引数 &lt;code&gt;library&lt;/code&gt; （ライブラリオブジェクト）と &lt;code&gt;name&lt;/code&gt; （文字列または整数としてのシンボルの名前）を含む監査イベント &lt;code&gt;ctypes.dlsym&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="c107c49a03817af8952bc8c0d4b6dc68bc4b981a" translate="yes" xml:space="preserve">
          <source>Accessing arguments by name:</source>
          <target state="translated">名前で引数にアクセスします。</target>
        </trans-unit>
        <trans-unit id="39422cfc3ffb30101755ff1504a2df9d616edb97" translate="yes" xml:space="preserve">
          <source>Accessing arguments by position:</source>
          <target state="translated">ポジション別に引数にアクセスします。</target>
        </trans-unit>
        <trans-unit id="c4c9579bed0a7c63cc4d3b8d869c7d36d72fd3ac" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; attributes:</source>
          <target state="translated">引数の属性へのアクセス：</target>
        </trans-unit>
        <trans-unit id="41bb86cb017873fc6e571fbe9e03f681538517ea" translate="yes" xml:space="preserve">
          <source>Accessing arguments&amp;rsquo; items:</source>
          <target state="translated">引数のアイテムへのアクセス：</target>
        </trans-unit>
        <trans-unit id="9f0cf49831f659798a76611095b43215b4381b8b" translate="yes" xml:space="preserve">
          <source>Accessing columns by name instead of by index</source>
          <target state="translated">インデックスではなく名前でカラムにアクセスする</target>
        </trans-unit>
        <trans-unit id="eecb5e7f1b2d16b54279aa55ca5db3732ef01003" translate="yes" xml:space="preserve">
          <source>Accessing functions from loaded dlls</source>
          <target state="translated">ロードされたDLLからの関数へのアクセス</target>
        </trans-unit>
        <trans-unit id="8af8bbaf1dc41a5f30738fb7558c136542598c8b" translate="yes" xml:space="preserve">
          <source>Accessing individual parts</source>
          <target state="translated">個々のパーツへのアクセス</target>
        </trans-unit>
        <trans-unit id="87c5f0dfffab33c1f436f570abacf72146401b9c" translate="yes" xml:space="preserve">
          <source>Accessing the standard C library through &lt;code&gt;cdll.msvcrt&lt;/code&gt; will use an outdated version of the library that may be incompatible with the one being used by Python. Where possible, use native Python functionality, or else import and use the &lt;code&gt;msvcrt&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;cdll.msvcrt&lt;/code&gt; を介して標準Cライブラリにアクセスすると、Pythonで使用されているものと互換性がない可能性がある古いバージョンのライブラリが使用されます。可能な場合は、ネイティブのPython機能を使用するか、 &lt;code&gt;msvcrt&lt;/code&gt; モジュールをインポートして使用します。</target>
        </trans-unit>
        <trans-unit id="82e4d72e3858dc40ef697c71e9c99dd6d1762691" translate="yes" xml:space="preserve">
          <source>Accessing values exported from dlls</source>
          <target state="translated">dllからエクスポートされた値へのアクセス</target>
        </trans-unit>
        <trans-unit id="48469f0816b7d8b7b69f202f36d7c603ac67c4b9" translate="yes" xml:space="preserve">
          <source>Accessor Methods</source>
          <target state="translated">アクセッサーの方法</target>
        </trans-unit>
        <trans-unit id="44e86821ee29ea1890c19e6deb0a802a148a4975" translate="yes" xml:space="preserve">
          <source>According to POSIX, a program which has not called &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; runs using the portable &lt;code&gt;'C'&lt;/code&gt; locale. Calling &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; lets it use the default locale as defined by the &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; variable. Since we do not want to interfere with the current locale setting we thus emulate the behavior in the way described above.</source>
          <target state="translated">POSIXによれば、 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; を呼び出していないプログラムは、移植可能な &lt;code&gt;'C'&lt;/code&gt; ロケールを使用して実行されます。 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 呼び出すと、 &lt;code id=&quot;index-2&quot;&gt;LANG&lt;/code&gt; 変数で定義されているデフォルトのロケールを使用できます。現在のロケール設定に干渉したくないので、上記の方法で動作をエミュレートします。</target>
        </trans-unit>
        <trans-unit id="714a2a15ee3782a1162d672762e78d0a38134e5b" translate="yes" xml:space="preserve">
          <source>According to the letter of &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;, 301 and 302 responses to POST requests must not be automatically redirected without confirmation by the user. In reality, browsers do allow automatic redirection of these responses, changing the POST to a GET, and &lt;a href=&quot;urllib#module-urllib&quot;&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/a&gt; reproduces this behaviour.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;の書簡によれば、POST要求に対する301および302応答は、ユーザーの確認なしに自動的にリダイレクトされてはなりません。実際には、ブラウザーはこれらの応答の自動リダイレクトを許可し、POSTをGETに変更します&lt;a href=&quot;urllib#module-urllib&quot;&gt; &lt;code&gt;urllib&lt;/code&gt; &lt;/a&gt;はこの動作を再現します。</target>
        </trans-unit>
        <trans-unit id="ad55855dcbc1c5b89cea1605223f9aada3fabb2b" translate="yes" xml:space="preserve">
          <source>Accordingly, constructor arguments are interpreted as for &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">したがって、コンストラクタの引数は&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray()&lt;/code&gt; の&lt;/a&gt;場合と同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="082af44e6d89682179d27fdfd34277a7e0c2c9af" translate="yes" xml:space="preserve">
          <source>Acknowledgement</source>
          <target state="translated">Acknowledgement</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="81d5a6accac3654cbf66608938b8c9013df0a3bc" translate="yes" xml:space="preserve">
          <source>Acquire a lock, blocking or non-blocking.</source>
          <target state="translated">ロック、ブロッキング、ノンブロッキングのいずれかを取得します。</target>
        </trans-unit>
        <trans-unit id="e60a27e953c80127dc19a93298d1b0c5a8852bd6" translate="yes" xml:space="preserve">
          <source>Acquire a semaphore.</source>
          <target state="translated">セマフォを取得する。</target>
        </trans-unit>
        <trans-unit id="d6a249c8c3f9d0be2a91d76168ee36b7ef8d69d0" translate="yes" xml:space="preserve">
          <source>Acquire an exclusive advisory lock on the mailbox so that other processes know not to modify it. An &lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt;&lt;code&gt;ExternalClashError&lt;/code&gt;&lt;/a&gt; is raised if the lock is not available. The particular locking mechanisms used depend upon the mailbox format. You should &lt;em&gt;always&lt;/em&gt; lock the mailbox before making any modifications to its contents.</source>
          <target state="translated">メールボックスの排他的アドバイザリロックを取得して、他のプロセスが変更しないようにします。アン&lt;a href=&quot;#mailbox.ExternalClashError&quot;&gt; &lt;code&gt;ExternalClashError&lt;/code&gt; は&lt;/a&gt;ロックが利用できない場合に発生します。使用される特定のロックメカニズムは、メールボックスの形式によって異なります。メールボックスの内容を変更する前に、&lt;em&gt;必ず&lt;/em&gt;メールボックスをロックする必要&lt;em&gt;があり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7c4dfd85bf2c256ca750cb8f4e1e2fba7ac6580e" translate="yes" xml:space="preserve">
          <source>Acquire the lock.</source>
          <target state="translated">ロックを取得します。</target>
        </trans-unit>
        <trans-unit id="461410d014d419ab175b1ebecd08ac6c77a09658" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock.</source>
          <target state="translated">基礎となるロックを取得します。</target>
        </trans-unit>
        <trans-unit id="dafb6140598e25081787ea267e056be855b6622a" translate="yes" xml:space="preserve">
          <source>Acquire the underlying lock. This method calls the corresponding method on the underlying lock; the return value is whatever that method returns.</source>
          <target state="translated">基礎となるロックを取得します。このメソッドは、基礎となるロック上の対応するメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="30560da991fdd301ae97abf02a27135578dee389" translate="yes" xml:space="preserve">
          <source>Acquires the thread lock created with &lt;a href=&quot;#logging.Handler.createLock&quot;&gt;&lt;code&gt;createLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.Handler.createLock&quot;&gt; &lt;code&gt;createLock()&lt;/code&gt; で&lt;/a&gt;作成されたスレッドロックを取得します。</target>
        </trans-unit>
        <trans-unit id="9292d87e220d1c1446b9354a9141178078ba0d7e" translate="yes" xml:space="preserve">
          <source>Acquiring a lock is &lt;em&gt;fair&lt;/em&gt;: the coroutine that proceeds will be the first coroutine that started waiting on the lock.</source>
          <target state="translated">ロックの取得は&lt;em&gt;公平&lt;/em&gt;です。続行するコルーチンは、ロックの待機を開始した最初のコルーチンになります。</target>
        </trans-unit>
        <trans-unit id="084ab4fd9c6c6c0f36d4f70f9d53acd358725da3" translate="yes" xml:space="preserve">
          <source>Act like &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, except that for any subpart of the message passed to &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;Generator.flatten()&lt;/code&gt;&lt;/a&gt;, if the subpart is of main type &lt;em&gt;text&lt;/em&gt;, print the decoded payload of the subpart, and if the main type is not &lt;em&gt;text&lt;/em&gt;, instead of printing it fill in the string &lt;em&gt;fmt&lt;/em&gt; using information from the part and print the resulting filled-in string.</source>
          <target state="translated">以下のような行為&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;、メッセージの任意のサブパートのために渡されることを除いて&lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;Generator.flatten()&lt;/code&gt; &lt;/a&gt;サブパート主型である場合、&lt;em&gt;テキスト&lt;/em&gt;、サブパートのデコードされたペイロードを印刷し、主型がない場合&lt;em&gt;、テキスト&lt;/em&gt;の代わりにそれを印刷します、パーツからの情報を使用して文字列&lt;em&gt;fmt&lt;/em&gt;を入力し、結果の文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="9ace32a6134122ed597eae8340ee6101df735b51" translate="yes" xml:space="preserve">
          <source>Action classes</source>
          <target state="translated">アクションクラス</target>
        </trans-unit>
        <trans-unit id="77717846e87426ca8b4508db5527a0d857cc7d2e" translate="yes" xml:space="preserve">
          <source>Action classes implement the Action API, a callable which returns a callable which processes arguments from the command-line. Any object which follows this API may be passed as the &lt;code&gt;action&lt;/code&gt; parameter to &lt;code&gt;add_argument()&lt;/code&gt;.</source>
          <target state="translated">アクションクラスは、コマンドラインから引数を処理する呼び出し可能オブジェクトを返す呼び出し可能オブジェクトであるアクションAPIを実装します。このAPIに続くオブジェクトはすべて、 &lt;code&gt;action&lt;/code&gt; パラメータとして &lt;code&gt;add_argument()&lt;/code&gt; に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9513bff63fa8a804ba98e02cb9596699d8340afc" translate="yes" xml:space="preserve">
          <source>Action instances should be callable, so subclasses must override the &lt;code&gt;__call__&lt;/code&gt; method, which should accept four parameters:</source>
          <target state="translated">アクションインスタンスは呼び出し可能である必要があるため、サブクラスは &lt;code&gt;__call__&lt;/code&gt; メソッドをオーバーライドする必要があり、これは4つのパラメーターを受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="278d19782a6ed5702bc055475169e14e49eb9e12" translate="yes" xml:space="preserve">
          <source>Action objects are used by an ArgumentParser to represent the information needed to parse a single argument from one or more strings from the command line. The Action class must accept the two positional arguments plus any keyword arguments passed to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; except for the &lt;code&gt;action&lt;/code&gt; itself.</source>
          <target state="translated">ArgumentParserはアクションオブジェクトを使用して、コマンドラインからの1つまたは複数の文字列から単一の引数を解析するために必要な情報を表します。Actionクラスは、 &lt;code&gt;action&lt;/code&gt; 自体を除いて、2つの位置引数と&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; に&lt;/a&gt;渡されたキーワード引数を受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="274ade548ee72e34686330c533661a7563d8223c" translate="yes" xml:space="preserve">
          <source>Action subclasses can define a &lt;code&gt;format_usage&lt;/code&gt; method that takes no argument and return a string which will be used when printing the usage of the program. If such method is not provided, a sensible default will be used.</source>
          <target state="translated">アクションサブクラスは、引数をとらない &lt;code&gt;format_usage&lt;/code&gt; メソッドを定義し、プログラムの使用法を出力するときに使用される文字列を返すことができます。このような方法が提供されていない場合は、適切なデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="91165131a7ce5acb4d4c719b4a605bf1d3ffc98c" translate="yes" xml:space="preserve">
          <source>Action taken</source>
          <target state="translated">取られた措置</target>
        </trans-unit>
        <trans-unit id="e6380d337be56a56fb3795f7ef7ee4cb17f21bca" translate="yes" xml:space="preserve">
          <source>ActiveState Tcl Home Page</source>
          <target state="translated">ActiveState Tcl ホームページ</target>
        </trans-unit>
        <trans-unit id="38727212af340538ef4171b11f8f296a8643ef4c" translate="yes" xml:space="preserve">
          <source>Actually needing to do this is likely to indicate that the underlying API should be providing a direct resource management interface for use with &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statements, but not all APIs are well designed in that regard. When a context manager is the only resource management API provided, then &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; can make it easier to handle various situations that can&amp;rsquo;t be handled directly in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">これを実際に行う必要があるのは、基になるAPIが、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ステートメントで使用するための直接リソース管理インターフェースを提供する必要があることを示している可能性がありますが、その点に関してすべてのAPIが適切に設計されているわけではありません。提供される唯一のリソース管理APIがコンテキストマネージャーである場合、&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; を&lt;/a&gt;使用すると、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントでは直接処理できないさまざまな状況を簡単に処理できます。</target>
        </trans-unit>
        <trans-unit id="d6e5856f7f4aca3ca4e4aef48b9bc8f012312bf5" translate="yes" xml:space="preserve">
          <source>Actually needing to do this is likely to indicate that the underlying API should be providing a direct resource management interface for use with &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; statements, but not all APIs are well designed in that regard. When a context manager is the only resource management API provided, then &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; can make it easier to handle various situations that can&amp;rsquo;t be handled directly in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">実際にこれを行う必要があるということは、基盤となるAPIが&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;ステートメントで使用するための直接リソース管理インターフェースを提供する必要があることを示している可能性がありますが、すべてのAPIがその点で適切に設計されているわけではありません。コンテキストマネージャーが提供される唯一のリソース管理APIである場合、&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; を&lt;/a&gt;使用すると、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントで直接処理できないさまざまな状況を簡単に処理できます。</target>
        </trans-unit>
        <trans-unit id="3bcbe0ccc46b10727260a3caa552d07256bb7ae9" translate="yes" xml:space="preserve">
          <source>Actually processes the request by instantiating &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; and calling its &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">実際には、&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;をインスタンス化してその&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、リクエストを処理します。</target>
        </trans-unit>
        <trans-unit id="c5a9bba7132d69477d4076fafc264c171f0a320f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;default&lt;/code&gt;&lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;warning filter&lt;/a&gt;. The following warnings are shown:</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; &lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;警告フィルター&lt;/a&gt;を追加します。次の警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="afe8d459e873bfae322eb1ff9286a5013dcb630e" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;fallback&lt;/em&gt; as the fallback object for the current translation object. A translation object should consult the fallback if it cannot provide a translation for a given message.</source>
          <target state="translated">現在の翻訳オブジェクトのフォールバックオブジェクトとして&lt;em&gt;フォールバック&lt;/em&gt;を追加します。特定のメッセージの翻訳を提供できない場合、翻訳オブジェクトはフォールバックを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="af8c722ee4c8561359335870777e3e5bf87069a7" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;increment&lt;/em&gt; to the process&amp;rsquo;s &amp;ldquo;niceness&amp;rdquo;. Return the new niceness.</source>
          <target state="translated">プロセスの「素晴らしさ」に&lt;em&gt;増分&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。新しい良さを返します。</target>
        </trans-unit>
        <trans-unit id="aa7983e1a637a4577bc6fffefae3ed5cea5dab92" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;items&lt;/em&gt; to the selection.</source>
          <target state="translated">選択に&lt;em&gt;アイテム&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="30c0a49b754a66b21573177a7299d76b8a5c131c" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;label&lt;/em&gt; to the list of labels on the message.</source>
          <target state="translated">追加&lt;em&gt;ラベルを&lt;/em&gt;メッセージにラベルのリストに。</target>
        </trans-unit>
        <trans-unit id="24db3772802faeab198405cd43d9db88ced07a1d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;message&lt;/em&gt; to the mailbox and return the key that has been assigned to it.</source>
          <target state="translated">メールボックスに&lt;em&gt;メッセージ&lt;/em&gt;を追加し、それに割り当てられているキーを返します。</target>
        </trans-unit>
        <trans-unit id="5479b5f1d60a39cb75d31bd42ec9f9c48e1b4a8b" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;prefix&lt;/em&gt; to the beginning of selected lines in &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;テキスト&lt;/em&gt;内の選択した行の先頭に&lt;em&gt;プレフィックス&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f44aea08a2fc88ec1e9f6c30ad49d2629a71e470" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;sequence&lt;/em&gt; to the list of sequences that include this message.</source>
          <target state="translated">追加&lt;em&gt;シーケンスを&lt;/em&gt;このメッセージを含むシーケンスのリストに。</target>
        </trans-unit>
        <trans-unit id="33a10ccdd8fd003a788443c4b85ed7eb60938600" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the left side of the deque.</source>
          <target state="translated">両端キューの左側に&lt;em&gt;x&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="3c25d5c0076f9d7d52148b8e3bb5f41c9a4a2f9d" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;x&lt;/em&gt; to the right side of the deque.</source>
          <target state="translated">両端キューの右側に&lt;em&gt;x&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="24e6030669a49381174c0b5a66ddd6ac0dadd387" translate="yes" xml:space="preserve">
          <source>Add a (possibly multi-valued) header, with optional MIME parameters specified via keyword arguments.</source>
          <target state="translated">(複数の値を持つ可能性がある)ヘッダーを追加し、オプションの MIME パラメータをキーワード引数で指定します。</target>
        </trans-unit>
        <trans-unit id="6ad671132a650abe04ac0277b23f2bd3dcbd37dd" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; to the suite.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;をスイートに追加します。</target>
        </trans-unit>
        <trans-unit id="cb9e0dfa54f74decdc101fb5b211589918af267c" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;#!&lt;/code&gt; line to the archive specifying &lt;em&gt;interpreter&lt;/em&gt; as the command to run. Also, on POSIX, make the archive executable. The default is to write no &lt;code&gt;#!&lt;/code&gt; line, and not make the file executable.</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; 追加！実行するコマンドとして&lt;em&gt;インタープリター&lt;/em&gt;を指定するアーカイブへの行。また、POSIXでは、アーカイブを実行可能にします。デフォルトでは、 &lt;code&gt;#!&lt;/code&gt; は書き込まれません。行で、ファイルを実行可能にしません。</target>
        </trans-unit>
        <trans-unit id="11966b392bbd5d32167852567e5699616e11388f" translate="yes" xml:space="preserve">
          <source>Add a &lt;em&gt;Content-Type&lt;/em&gt; header with a &lt;code&gt;maintype/subtype&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;maintype/subtype&lt;/code&gt; 値を含む&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーを追加します。</target>
        </trans-unit>
        <trans-unit id="84ac69830ac328f5af24cd917082c8ab71ae0bdd" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Future is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">Futureが&lt;em&gt;完了した&lt;/em&gt;ときに実行されるコールバックを追加します。</target>
        </trans-unit>
        <trans-unit id="21ad57f0c79a1dece0ae4e997db0ef88ee98f10c" translate="yes" xml:space="preserve">
          <source>Add a callback to be run when the Task is &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">タスクが&lt;em&gt;完了した&lt;/em&gt;ときに実行されるコールバックを追加します。</target>
        </trans-unit>
        <trans-unit id="e692059a99db6212feae89c0b74f4f86c48a8179" translate="yes" xml:space="preserve">
          <source>Add a character set alias. &lt;em&gt;alias&lt;/em&gt; is the alias name, e.g. &lt;code&gt;latin-1&lt;/code&gt;. &lt;em&gt;canonical&lt;/em&gt; is the character set&amp;rsquo;s canonical name, e.g. &lt;code&gt;iso-8859-1&lt;/code&gt;.</source>
          <target state="translated">文字セットのエイリアスを追加します。&lt;em&gt;alias&lt;/em&gt;は別名です（例： &lt;code&gt;latin-1&lt;/code&gt; )。&lt;em&gt;canonical&lt;/em&gt;は、文字セットの正規名です（例： &lt;code&gt;iso-8859-1&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="11e078738b2dfdecaf78a03a7ad2e1f50dd6454f" translate="yes" xml:space="preserve">
          <source>Add a codec that map characters in the given character set to and from Unicode.</source>
          <target state="translated">与えられた文字セット内の文字をUnicodeとの間でマップするコーデックを追加します。</target>
        </trans-unit>
        <trans-unit id="6864afe1da0b0e5f3b0be081911c070361ce7f9d" translate="yes" xml:space="preserve">
          <source>Add a director as parent.</source>
          <target state="translated">親として監督を追加します。</target>
        </trans-unit>
        <trans-unit id="f4f4ec5cb3f34d7548e8ce61a5b61b98f0a79146" translate="yes" xml:space="preserve">
          <source>Add a directory to sys.path and process its &lt;code&gt;.pth&lt;/code&gt; files. Typically used in &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; (see above).</source>
          <target state="translated">sys.pathにディレクトリを追加し、その &lt;code&gt;.pth&lt;/code&gt; ファイルを処理します。典型的に使用 &lt;code&gt;sitecustomize&lt;/code&gt; 又は &lt;code&gt;usercustomize&lt;/code&gt; （上記参照）。</target>
        </trans-unit>
        <trans-unit id="b7e0cf044bf83f105b1c2df55e4a2994ff91feee" translate="yes" xml:space="preserve">
          <source>Add a file to the current component of the directory, starting a new one if there is no current component. By default, the file name in the source and the file table will be identical. If the &lt;em&gt;src&lt;/em&gt; file is specified, it is interpreted relative to the current directory. Optionally, a &lt;em&gt;version&lt;/em&gt; and a &lt;em&gt;language&lt;/em&gt; can be specified for the entry in the File table.</source>
          <target state="translated">ディレクトリの現在のコンポーネントにファイルを追加し、現在のコンポーネントがない場合は新しいファイルを開始します。デフォルトでは、ソース内のファイル名とファイルテーブルは同じになります。&lt;em&gt;src&lt;/em&gt;ファイルが指定されている場合、現在のディレクトリを基準に解釈されます。オプションで、&lt;em&gt;バージョン&lt;/em&gt;と&lt;em&gt;言語&lt;/em&gt;をファイルテーブルのエントリに指定できます。</target>
        </trans-unit>
        <trans-unit id="e1b148a57e911bae17afc91f03e7661232e219c7" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; の&lt;/a&gt;後に呼び出される関数を追加して、テスト中に使用されたリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="78ce526e4b4169e82bfb42d8527ed56483cd78b4" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; の&lt;/a&gt;後に呼び出される関数を追加して、テストクラス中に使用されるリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="5b62e8d801245195a11f24b7a0d01ffecdbafd41" translate="yes" xml:space="preserve">
          <source>Add a function to be called after &lt;code&gt;tearDownModule()&lt;/code&gt; to cleanup resources used during the test class. Functions will be called in reverse order to the order they are added (</source>
          <target state="translated">&lt;code&gt;tearDownModule()&lt;/code&gt; の後に呼び出される関数を追加して、テストクラス中に使用されるリソースをクリーンアップします。関数は、追加された順序とは逆の順序で呼び出されます（</target>
        </trans-unit>
        <trans-unit id="9beb6337ad420738cf187ef7704f4b9c84fc673f" translate="yes" xml:space="preserve">
          <source>Add a handler for a &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;ハンドラーを追加します。</target>
        </trans-unit>
        <trans-unit id="d38459dabab55a25da4ed78ba4eb990299fd36c8" translate="yes" xml:space="preserve">
          <source>Add a header that will not be added to a redirected request.</source>
          <target state="translated">リダイレクトされたリクエストに追加されないヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="f2603d5ae35616f68557abf0dc068f3846cc8c46" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing fields.</source>
          <target state="translated">メッセージにフィールド名&lt;em&gt;name&lt;/em&gt;と値&lt;em&gt;val&lt;/em&gt;を含むヘッダーを追加します。このフィールドは、メッセージの既存のフィールドの末尾に追加されます。</target>
        </trans-unit>
        <trans-unit id="8a8b78b89a289dd8343df6ddfaae9ce828ff046b" translate="yes" xml:space="preserve">
          <source>Add a header to the message with field name &lt;em&gt;name&lt;/em&gt; and value &lt;em&gt;val&lt;/em&gt;. The field is appended to the end of the message&amp;rsquo;s existing headers.</source>
          <target state="translated">メッセージにフィールド名&lt;em&gt;name&lt;/em&gt;と値&lt;em&gt;val&lt;/em&gt;を含むヘッダーを追加します。このフィールドは、メッセージの既存のヘッダーの末尾に追加されます。</target>
        </trans-unit>
        <trans-unit id="399487ac348d2614389b7168ca41dd04673b039c" translate="yes" xml:space="preserve">
          <source>Add a list of files to the current component as specified in the glob pattern. Individual files can be excluded in the &lt;em&gt;exclude&lt;/em&gt; list.</source>
          <target state="translated">globパターンで指定されているように、ファイルのリストを現在のコンポーネントに追加します。個々のファイルは&lt;em&gt;除外&lt;/em&gt;リストで除外できます。</target>
        </trans-unit>
        <trans-unit id="a132f64a1d2da65d23dfabb4ad146d6d74425848" translate="yes" xml:space="preserve">
          <source>Add a mapping from the MIME type &lt;em&gt;type&lt;/em&gt; to the extension &lt;em&gt;ext&lt;/em&gt;. When the extension is already known, the new type will replace the old one. When the type is already known the extension will be added to the list of known extensions.</source>
          <target state="translated">MIMEタイプ&lt;em&gt;type&lt;/em&gt;から拡張子&lt;em&gt;ext&lt;/em&gt;へのマッピングを追加します。拡張子が既知の場合、新しいタイプが古いタイプを置き換えます。タイプが既知の場合、拡張子は既知の拡張子のリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="7632c76ae9b370fe2c8ab64acfc2c8365dcbe310" translate="yes" xml:space="preserve">
          <source>Add a mark with the given id (larger than 0), and the given name at the given position. This method can be called at any time before &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたID（0より大きい）と指定された位置に指定された名前のマークを追加します。このメソッドは、&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; の&lt;/a&gt;前であればいつでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c5dbd50d1faa7567cdc7358bac4bacf2a33aa997" translate="yes" xml:space="preserve">
          <source>Add a new action at the beginning. See &lt;a href=&quot;#pipes.Template.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; for explanations of the arguments.</source>
          <target state="translated">最初に新しいアクションを追加します。引数の説明については、&lt;a href=&quot;#pipes.Template.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="043d2a3cceb4af1dd193034c1f7337a877747c87" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;name&lt;/code&gt; attribute matches. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">要素に新しい属性ノードを追加し、必要に応じて &lt;code&gt;name&lt;/code&gt; 属性が一致する場合は既存の属性を置き換えます。置き換えが発生すると、古い属性ノードが返されます。場合&lt;em&gt;newAttrが&lt;/em&gt;すでに使用されている、&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="83d2435f056be8af45e7ae386b8b99adbd638555" translate="yes" xml:space="preserve">
          <source>Add a new attribute node to the element, replacing an existing attribute if necessary if the &lt;code&gt;namespaceURI&lt;/code&gt; and &lt;code&gt;localName&lt;/code&gt; attributes match. If a replacement occurs, the old attribute node will be returned. If &lt;em&gt;newAttr&lt;/em&gt; is already in use, &lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt;&lt;code&gt;InuseAttributeErr&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">要素に新しい属性ノードを追加し、 &lt;code&gt;namespaceURI&lt;/code&gt; 属性と &lt;code&gt;localName&lt;/code&gt; 属性が一致する場合は、必要に応じて既存の属性を置き換えます。置き換えが発生すると、古い属性ノードが返されます。場合&lt;em&gt;newAttrが&lt;/em&gt;すでに使用されている、&lt;a href=&quot;#xml.dom.InuseAttributeErr&quot;&gt; &lt;code&gt;InuseAttributeErr&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="5f1ba12e042226aebc04d021425dcda3c82b9d6d" translate="yes" xml:space="preserve">
          <source>Add a new child node to this node at the end of the list of children, returning &lt;em&gt;newChild&lt;/em&gt;. If the node was already in the tree, it is removed first.</source>
          <target state="translated">子のリストの最後にあるこのノードに新しい子ノードを追加し、&lt;em&gt;newChildを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。ノードがすでにツリーにある場合は、最初に削除されます。</target>
        </trans-unit>
        <trans-unit id="4320fe50407e125c401df7995f33a5363ae33796" translate="yes" xml:space="preserve">
          <source>Add a new node and its predecessors to the graph. Both the &lt;em&gt;node&lt;/em&gt; and all elements in &lt;em&gt;predecessors&lt;/em&gt; must be hashable.</source>
          <target state="translated">新しいノードとその先行ノードをグラフに追加します。&lt;em&gt;ノード&lt;/em&gt;と&lt;em&gt;先行の&lt;/em&gt;すべての要素の両方がハッシュ可能で&lt;em&gt;ある&lt;/em&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="956452c465afe1d5906a42ce4cf84991525c7da4" translate="yes" xml:space="preserve">
          <source>Add a new record to the &lt;code&gt;Feature&lt;/code&gt; table, using the values &lt;em&gt;id&lt;/em&gt;, &lt;em&gt;parent.id&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;desc&lt;/em&gt;, &lt;em&gt;display&lt;/em&gt;, &lt;em&gt;level&lt;/em&gt;, &lt;em&gt;directory&lt;/em&gt;, and &lt;em&gt;attributes&lt;/em&gt;. The resulting feature object can be passed to the &lt;code&gt;start_component()&lt;/code&gt; method of &lt;a href=&quot;#msilib.Directory&quot;&gt;&lt;code&gt;Directory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;id&lt;/em&gt;、&lt;em&gt;parent.id&lt;/em&gt;、&lt;em&gt;title&lt;/em&gt;、&lt;em&gt;desc&lt;/em&gt;、&lt;em&gt;display&lt;/em&gt;、&lt;em&gt;level&lt;/em&gt;、&lt;em&gt;directory&lt;/em&gt;、および&lt;em&gt;attributes&lt;/em&gt;の値を使用して、 &lt;code&gt;Feature&lt;/code&gt; テーブルに新しいレコードを追加し&lt;em&gt;ます&lt;/em&gt;。得られた機能オブジェクトはに渡すことができる &lt;code&gt;start_component()&lt;/code&gt; のメソッド&lt;a href=&quot;#msilib.Directory&quot;&gt; &lt;code&gt;Directory&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edf4e5ba20ecf9c15997bd4578bcf0e6d730a52b" translate="yes" xml:space="preserve">
          <source>Add a path to the DLL search path.</source>
          <target state="translated">DLLの検索パスを追加します。</target>
        </trans-unit>
        <trans-unit id="803042366eb338df43adb37b2c3158da3cb637b5" translate="yes" xml:space="preserve">
          <source>Add a radio button named &lt;em&gt;name&lt;/em&gt; to the group, at the coordinates &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, and with the label &lt;em&gt;text&lt;/em&gt;. If &lt;em&gt;value&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, it defaults to &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt;という&lt;em&gt;名前の&lt;/em&gt;ラジオボタンを、座標&lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;width&lt;/em&gt;、&lt;em&gt;height&lt;/em&gt;で、ラベル&lt;em&gt;text&lt;/em&gt;とともにグループに追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;値&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、デフォルトで&lt;em&gt;nameになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c244c1c66537416292b44411850e0f1a066b6064" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">sectionという名前の&lt;em&gt;セクション&lt;/em&gt;をインスタンスに追加します。指定された名前のセクションがすでに存在する場合、&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;が発生します。場合は&lt;em&gt;デフォルトのセクション&lt;/em&gt;名が渡された、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="18563df0f6461bd157eae779d180068be1023816" translate="yes" xml:space="preserve">
          <source>Add a section named &lt;em&gt;section&lt;/em&gt; to the instance. If a section by the given name already exists, &lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt;&lt;code&gt;DuplicateSectionError&lt;/code&gt;&lt;/a&gt; is raised. If the &lt;em&gt;default section&lt;/em&gt; name is passed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The name of the section must be a string; if not, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">sectionという名前の&lt;em&gt;セクション&lt;/em&gt;をインスタンスに追加します。指定された名前のセクションがすでに存在する場合、&lt;a href=&quot;#configparser.DuplicateSectionError&quot;&gt; &lt;code&gt;DuplicateSectionError&lt;/code&gt; &lt;/a&gt;が発生します。場合は&lt;em&gt;デフォルトのセクション&lt;/em&gt;名が渡された、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。セクションの名前は文字列でなければなりません。そうでない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ec2b76ff3671d42ae4e68ce30a3d7a4f0d38926e" translate="yes" xml:space="preserve">
          <source>Add a spec to a mock. &lt;em&gt;spec&lt;/em&gt; can either be an object or a list of strings. Only attributes on the &lt;em&gt;spec&lt;/em&gt; can be fetched as attributes from the mock.</source>
          <target state="translated">仕様をモックに追加します。&lt;em&gt;spec&lt;/em&gt;は、オブジェクトまたは文字列のリストのいずれかです。&lt;em&gt;仕様の&lt;/em&gt;属性のみをモックから属性としてフェッチできます。</target>
        </trans-unit>
        <trans-unit id="f67e36b3f39cd8d22597658d1382717ef4e6e7a2" translate="yes" xml:space="preserve">
          <source>Add a turtle shape to TurtleScreen&amp;rsquo;s shapelist. Only thusly registered shapes can be used by issuing the command &lt;code&gt;shape(shapename)&lt;/code&gt;.</source>
          <target state="translated">TurtleScreenの形状リストに亀の形状を追加します。このように登録された形状のみ、コマンド &lt;code&gt;shape(shapename)&lt;/code&gt; を発行して使用できます。</target>
        </trans-unit>
        <trans-unit id="5d8d20ed6f4efb55c981390f1995febb05a8b4dc" translate="yes" xml:space="preserve">
          <source>Add additional nodes to the graph.</source>
          <target state="translated">グラフにノードを追加します。</target>
        </trans-unit>
        <trans-unit id="3a9170cfd78aba11ef6be48039048ae498ec91fe" translate="yes" xml:space="preserve">
          <source>Add all &lt;em&gt;records&lt;/em&gt; to the table named &lt;em&gt;table&lt;/em&gt; in &lt;em&gt;database&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;データベースの&lt;/em&gt; tableという名前の&lt;em&gt;テーブル&lt;/em&gt;にすべての&lt;em&gt;レコード&lt;/em&gt;を追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecbebdd271fd104189ee86c2c855300b2e2554a0" translate="yes" xml:space="preserve">
          <source>Add all table content from &lt;em&gt;module&lt;/em&gt; to &lt;em&gt;database&lt;/em&gt;. &lt;em&gt;module&lt;/em&gt; must contain an attribute &lt;em&gt;tables&lt;/em&gt; listing all tables for which content should be added, and one attribute per table that has the actual content.</source>
          <target state="translated">&lt;em&gt;モジュールの&lt;/em&gt;すべてのテーブルコンテンツを&lt;em&gt;データベースに&lt;/em&gt;追加し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;モジュールに&lt;/em&gt;は、コンテンツを追加するすべてのテーブルをリストする属性&lt;em&gt;テーブル&lt;/em&gt;と、実際のコンテンツを持つテーブルごとに1つの属性が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="372176a3e2381d173f49ac01e30bb3b9770b39f4" translate="yes" xml:space="preserve">
          <source>Add all the tests from an iterable of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instances to this test suite.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;インスタンスのイテラブルからすべてのテストをこのテストスイートに追加します。</target>
        </trans-unit>
        <trans-unit id="b492c2a99126b9234ddf251a1a59fe971fb37f2d" translate="yes" xml:space="preserve">
          <source>Add an entry to the Component table, and make this component the current component for this directory. If no component name is given, the directory name is used. If no &lt;em&gt;feature&lt;/em&gt; is given, the current feature is used. If no &lt;em&gt;flags&lt;/em&gt; are given, the directory&amp;rsquo;s default flags are used. If no &lt;em&gt;keyfile&lt;/em&gt; is given, the KeyPath is left null in the Component table.</source>
          <target state="translated">エントリをコンポーネントテーブルに追加し、このコンポーネントをこのディレクトリの現在のコンポーネントにします。コンポーネント名を指定しない場合は、ディレクトリ名が使用されます。&lt;em&gt;機能&lt;/em&gt;が指定されていない場合は、現在の機能が使用されます。&lt;em&gt;フラグ&lt;/em&gt;が指定されていない場合は、ディレクトリのデフォルトのフラグが使用されます。&lt;em&gt;キーファイル&lt;/em&gt;が指定されていない場合、KeyPathはコンポーネントテーブルでnullのままになります。</target>
        </trans-unit>
        <trans-unit id="a8e4ba9db45e2b8738b50e71a58cacd0bcd42541" translate="yes" xml:space="preserve">
          <source>Add an explicit test for any bugs discovered for the tested code. This will make sure that the error does not crop up again if the code is changed in the future.</source>
          <target state="translated">テストされたコードで発見されたバグに対する明示的なテストを追加します。これにより、将来コードが変更されてもエラーが再発しないようにします。</target>
        </trans-unit>
        <trans-unit id="9b04913d79f7cfbfe6863c93041cd08396c02274" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Bitmap&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Bitmap&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="f04e5aee74da749672ecd3c375440bfd289ebf25" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;CheckBox&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;CheckBox&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="1ea55273868e472ba5cd1fdff1290be6e3270470" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Line&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="32eb8ef0229fb6b8591a91aa431c3b6229972d3d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;PushButton&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;PushButton&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="d7f8c90252afef47d34178872d2340f46e7b6d4d" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;RadioButtonGroup&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;RadioButtonGroup&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="fa6a94fb866d23f14896c6e66cc37b189a24a3c4" translate="yes" xml:space="preserve">
          <source>Add and return a &lt;code&gt;Text&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; コントロールを追加して返します。</target>
        </trans-unit>
        <trans-unit id="13e9733ac929160d5ff41a7a4ad44c3cefe7d8b3" translate="yes" xml:space="preserve">
          <source>Add another header to the request. Headers are currently ignored by all handlers except HTTP handlers, where they are added to the list of headers sent to the server. Note that there cannot be more than one header with the same name, and later calls will overwrite previous calls in case the &lt;em&gt;key&lt;/em&gt; collides. Currently, this is no loss of HTTP functionality, since all headers which have meaning when used more than once have a (header-specific) way of gaining the same functionality using only one header.</source>
          <target state="translated">リクエストに別のヘッダーを追加します。ヘッダーは現在、サーバーに送信されるヘッダーのリストに追加されるHTTPハンドラーを除くすべてのハンドラーによって無視されます。同じ名前のヘッダーが複数存在することはできず、&lt;em&gt;キー&lt;/em&gt;が衝突した場合に備えて、後の呼び出しで前の呼び出しが上書きされることに注意してください。現在、これはHTTP機能の損失ではありません。複数回使用したときに意味を持つすべてのヘッダーには、1つのヘッダーのみを使用して同じ機能を取得する（ヘッダー固有の）方法があるためです。</target>
        </trans-unit>
        <trans-unit id="29a0d6ad071e1ad1763bdd7c92a4be720791a0dc" translate="yes" xml:space="preserve">
          <source>Add as many components to this object as desired, using the &lt;code&gt;addcomponent()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;addcomponent()&lt;/code&gt; メソッドを使用して、必要な数のコンポーネントをこのオブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="12c1a2c19bbd4d6f91aa72baacc717bacee4a8c0" translate="yes" xml:space="preserve">
          <source>Add attribute &lt;em&gt;attr&lt;/em&gt; from the &amp;ldquo;background&amp;rdquo; set applied to all writes to the current window.</source>
          <target state="translated">現在のウィンドウへのすべての書き込みに適用される「バックグラウンド」セットから属性&lt;em&gt;attr&lt;/em&gt;を追加します。</target>
        </trans-unit>
        <trans-unit id="998b3790c02bae2255f37d067df86dafa27f4dbb" translate="yes" xml:space="preserve">
          <source>Add character &lt;em&gt;ch&lt;/em&gt; with attribute &lt;em&gt;attr&lt;/em&gt;, and immediately call &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; on the window.</source>
          <target state="translated">属性&lt;em&gt;attr&lt;/em&gt;で文字&lt;em&gt;ch&lt;/em&gt;を追加し、ウィンドウで即時に&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;を呼び出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79b5c2ddead03fd3fd58c82009a9c6954a412b24" translate="yes" xml:space="preserve">
          <source>Add character properties to the global registry.</source>
          <target state="translated">グローバルレジストリに文字プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="df120b4456df84f654f676f6eaeadfd2e64a3bb2" translate="yes" xml:space="preserve">
          <source>Add correct &lt;em&gt;Cookie&lt;/em&gt; header to &lt;em&gt;request&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;リクエスト&lt;/em&gt;に正しい&lt;em&gt;Cookie&lt;/em&gt;ヘッダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574ee98f08df0ee8c3a2828a4f73b12f29637bb1" translate="yes" xml:space="preserve">
          <source>Add element &lt;em&gt;elem&lt;/em&gt; to the set.</source>
          <target state="translated">要素&lt;em&gt;elem&lt;/em&gt;をセットに追加します。</target>
        </trans-unit>
        <trans-unit id="7e352b09639827f1e7d4681172bc702d69e5025a" translate="yes" xml:space="preserve">
          <source>Add headers and payload to &lt;em&gt;msg&lt;/em&gt;:</source>
          <target state="translated">ヘッダーとペイロードを&lt;em&gt;msgに&lt;/em&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="0af4c5b16248d5b4cd5df95eeac8d02e624fbba5" translate="yes" xml:space="preserve">
          <source>Add support for when a program which uses &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; has been frozen to produce a Windows executable. (Has been tested with &lt;strong&gt;py2exe&lt;/strong&gt;, &lt;strong&gt;PyInstaller&lt;/strong&gt; and &lt;strong&gt;cx_Freeze&lt;/strong&gt;.)</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;を使用するプログラムがWindows実行可能ファイルを生成するためにフリーズされた場合のサポートを追加します。（&lt;strong&gt;py2exe&lt;/strong&gt;、&lt;strong&gt;PyInstaller&lt;/strong&gt;、&lt;strong&gt;cx_Freezeで&lt;/strong&gt;テストされています。）</target>
        </trans-unit>
        <trans-unit id="3ffc4ee278ee53e1d735791b4acf7a7f15d9b077" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarinfo&lt;/em&gt; to the archive. If &lt;em&gt;fileobj&lt;/em&gt; is given, it should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;, and &lt;code&gt;tarinfo.size&lt;/code&gt; bytes are read from it and added to the archive. You can create &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects directly, or by using &lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt;&lt;code&gt;gettarinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;tarinfo&lt;/em&gt;をアーカイブに追加します。&lt;em&gt;fileobj&lt;/em&gt;が指定されている場合、それは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;である必要があり、 &lt;code&gt;tarinfo.size&lt;/code&gt; バイトがそこから読み取られてアーカイブに追加されます。&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトは直接作成することも、&lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt; &lt;code&gt;gettarinfo()&lt;/code&gt; &lt;/a&gt;を使用して作成することもできます。</target>
        </trans-unit>
        <trans-unit id="7e0d8d81e3b39d32c1f9e52ff590ee50f80f2bfb" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;tarinfo&lt;/em&gt; to the archive. If &lt;em&gt;fileobj&lt;/em&gt; is given, it should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;, and &lt;code&gt;tarinfo.size&lt;/code&gt; bytes are read from it and added to the archive. You can create &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects directly, or by using &lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt;&lt;code&gt;gettarinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;tarinfo&lt;/em&gt;をアーカイブに追加します。&lt;em&gt;fileobj&lt;/em&gt;が指定されている場合、それは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;である必要があり、 &lt;code&gt;tarinfo.size&lt;/code&gt; バイトがそこから読み取られ、アーカイブに追加されます。&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトは、直接作成することも、&lt;a href=&quot;#tarfile.TarFile.gettarinfo&quot;&gt; &lt;code&gt;gettarinfo()&lt;/code&gt; &lt;/a&gt;を使用して作成することもできます。</target>
        </trans-unit>
        <trans-unit id="fdfaeb4db76038933f7f7f07bb6e34cf522668b0" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;name&lt;/em&gt; to the archive. &lt;em&gt;name&lt;/em&gt; may be any type of file (directory, fifo, symbolic link, etc.). If given, &lt;em&gt;arcname&lt;/em&gt; specifies an alternative name for the file in the archive. Directories are added recursively by default. This can be avoided by setting &lt;em&gt;recursive&lt;/em&gt; to &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. Recursion adds entries in sorted order. If &lt;em&gt;filter&lt;/em&gt; is given, it should be a function that takes a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object argument and returns the changed &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If it instead returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; the &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object will be excluded from the archive. See &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt; for an example.</source>
          <target state="translated">ファイル&lt;em&gt;名&lt;/em&gt;をアーカイブに追加します。&lt;em&gt;name&lt;/em&gt;は、任意のタイプのファイル（ディレクトリ、fifo、シンボリックリンクなど）にすることができます。指定された場合、&lt;em&gt;arcname&lt;/em&gt;はアーカイブ内のファイルの代替名を指定します。デフォルトでは、ディレクトリは再帰的に追加されます。これは、&lt;em&gt;再帰&lt;/em&gt;を&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; に&lt;/a&gt;設定することで回避できます。再帰は、エントリをソート順に追加します。&lt;em&gt;filter&lt;/em&gt;が指定されている場合は、&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトの引数を取り、変更された&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを返す関数である必要があります。代わりに&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返す場合、&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトはアーカイブから除外されます。&lt;a href=&quot;#tar-examples&quot;&gt;例&lt;/a&gt;については、例を参照してください。</target>
        </trans-unit>
        <trans-unit id="d29a955c2b80ea1b99365c302eb9e52329eccf96" translate="yes" xml:space="preserve">
          <source>Add the file &lt;em&gt;path&lt;/em&gt; into the &lt;code&gt;_Stream&lt;/code&gt; table of &lt;em&gt;database&lt;/em&gt;, with the stream name &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">ファイル&lt;em&gt;パス&lt;/em&gt;を&lt;em&gt;データベース&lt;/em&gt;の &lt;code&gt;_Stream&lt;/code&gt; テーブルに、ストリーム名&lt;em&gt;nameで&lt;/em&gt;追加します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84b4718bc09ff9c6bdaed6b0ebcaf35dcdb8fe6f" translate="yes" xml:space="preserve">
          <source>Add the file with the pathname &lt;em&gt;full&lt;/em&gt; to the CAB file, under the name &lt;em&gt;logical&lt;/em&gt;. If there is already a file named &lt;em&gt;logical&lt;/em&gt;, a new file name is created.</source>
          <target state="translated">パス名が&lt;em&gt;fullの&lt;/em&gt;ファイルを&lt;em&gt;logical&lt;/em&gt;という名前でCABファイルに追加します。&lt;em&gt;logical&lt;/em&gt;という名前のファイルが既に存在する場合は、新しいファイル名が作成されます。</target>
        </trans-unit>
        <trans-unit id="fd308f86fbcd8cd8291b8e54f5281bd95fc24e2e" translate="yes" xml:space="preserve">
          <source>Add the given &lt;em&gt;payload&lt;/em&gt; to the current payload, which must be &lt;code&gt;None&lt;/code&gt; or a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects before the call. After the call, the payload will always be a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. If you want to set the payload to a scalar object (e.g. a string), use &lt;a href=&quot;#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">指定された&lt;em&gt;ペイロード&lt;/em&gt;を現在のペイロードに追加します。これは、呼び出し前に &lt;code&gt;None&lt;/code&gt; または&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのリストでなければなりません。呼び出し後、ペイロードは常に&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;オブジェクトのリストになります。ペイロードをスカラーオブジェクト（文字列など）に設定する場合は、代わりに&lt;a href=&quot;#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="f7d0ce06c6bbfae7f3d2b3526eb4216ad14cdf22" translate="yes" xml:space="preserve">
          <source>Added callables are called in the order that they were added and are always called in a thread belonging to the process that added them. If the callable raises an &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; subclass, it will be logged and ignored. If the callable raises a &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; subclass, the behavior is undefined.</source>
          <target state="translated">追加された呼び出し可能オブジェクトは、追加された順に呼び出され、常にそれらを追加したプロセスに属するスレッドで呼び出されます。呼び出し可能オブジェクトが&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;サブクラスを発生させる場合、それはログに記録され、無視されます。呼び出し可能オブジェクトが&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;サブクラスを発生させる場合、動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="1b85233cd9ebffe50d11b2cf0805696ea0ceed2c" translate="yes" xml:space="preserve">
          <source>Added the &lt;em&gt;initializer&lt;/em&gt; and &lt;em&gt;initargs&lt;/em&gt; arguments.</source>
          <target state="translated">&lt;em&gt;初期化子&lt;/em&gt;と&lt;em&gt;initargs&lt;/em&gt;引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="8827f17fde890fe438a85bcb36162a90217916ab" translate="yes" xml:space="preserve">
          <source>Adding HTTP headers:</source>
          <target state="translated">HTTPヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="32794b36e540f138de7310a0852226f80b61a093" translate="yes" xml:space="preserve">
          <source>Adding More Numeric ABCs</source>
          <target state="translated">数値ABCの追加</target>
        </trans-unit>
        <trans-unit id="b8e5ab085a6e2321c969eab106d044654f14d5d5" translate="yes" xml:space="preserve">
          <source>Adding arguments</source>
          <target state="translated">引数の追加</target>
        </trans-unit>
        <trans-unit id="366c31b6684891779f28e34e482fc51e6affae83" translate="yes" xml:space="preserve">
          <source>Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk for the novice. The book is not exhaustive, and for many details it defers to the man pages.</source>
          <target state="translated">Addison-WesleyはJohn Ousterhout著のTcl and the Tk Toolkit (ISBN 0-201-63337-X)という本を出版していますが、これは初心者向けのTclとTkの良い入門書です。この本は網羅的ではなく、多くの詳細については man ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="e1c5ea673fbb82149c08ab498bee248bfd9199d0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="427bece2ad850698371dca05dc622c9d29b6935f" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-46&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b16d8a6bb760515890fca9c712c787901b31c7ff" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b991878ce0b40a6b924bd7389bb06d820d6a1f41" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ddf6345664fde4a7792dd82e88181332fddb9e2" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-49&quot;&gt;&lt;strong&gt;RFC6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e3d7a8339e9e8d47f195503bd086f9c906a3106" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-50&quot;&gt;&lt;strong&gt;RFC6585&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c946af7090c97564c6f84564e39269075d4932e0" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;, Section 6</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-59&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;、セクション6</target>
        </trans-unit>
        <trans-unit id="681732b0b925c0111a8472ee282961b3fe60b217" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes &lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-62&quot;&gt;&lt;strong&gt;RFC 6585&lt;/strong&gt;&lt;/a&gt;, Section 6</source>
          <target state="translated">追加のHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc6585.html&quot; id=&quot;index-62&quot;&gt;&lt;strong&gt;RFC6585&lt;/strong&gt;&lt;/a&gt;、セクション6</target>
        </trans-unit>
        <trans-unit id="1c7cfd465bd6c5072f84f9bd1a70679a32bc06b5" translate="yes" xml:space="preserve">
          <source>Additional Methods on Float</source>
          <target state="translated">フロートの追加方法</target>
        </trans-unit>
        <trans-unit id="1a6fbb3a3106faa08803de5aa3ee5fac8e2f5fb2" translate="yes" xml:space="preserve">
          <source>Additional Methods on Integer Types</source>
          <target state="translated">整数型に関する追加メソッド</target>
        </trans-unit>
        <trans-unit id="e07bcbcb394ff663d4ff9ec28b7d29949f0638bb" translate="yes" xml:space="preserve">
          <source>Additional Utility Classes and Functions</source>
          <target state="translated">追加のユーティリティクラスと関数</target>
        </trans-unit>
        <trans-unit id="90441a19c39c85468a4336d332b3c4a497d72486" translate="yes" xml:space="preserve">
          <source>Additional directives may be supported on certain platforms, but only the ones listed here have a meaning standardized by ANSI C. To see the full set of format codes supported on your platform, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime(3)&lt;/a&gt;&lt;/em&gt; documentation.</source>
          <target state="translated">追加のディレクティブは特定のプラットフォームでサポートされる場合がありますが、ここにリストされているディレクティブのみがANSI Cによって標準化された意味を持っています。プラットフォームでサポートされるフォーマットコードの完全なセットを確認するには、&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/strftime(3)&quot;&gt;strftime（3）の&lt;/a&gt;&lt;/em&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9be4003cba4f5f477bbf08bed081c603cb4dc1f2" translate="yes" xml:space="preserve">
          <source>Additional help sources may be added here with the Configure IDLE dialog under the General tab. See the &lt;a href=&quot;#help-sources&quot;&gt;Help sources&lt;/a&gt; subsection below for more on Help menu choices.</source>
          <target state="translated">その他のヘルプソースは、[全般]タブの[IDLEの構成]ダイアログで追加できます。ヘルプメニューの選択の詳細については、以下の&lt;a href=&quot;#help-sources&quot;&gt;ヘルプソースの&lt;/a&gt;サブセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="0fbd97506d8de6a58a401e21f5cd9867835e4f81" translate="yes" xml:space="preserve">
          <source>Additional information on these special methods may be found in the Python Reference Manual (&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;Basic customization&lt;/a&gt;).</source>
          <target state="translated">これらの特別なメソッドに関する追加情報は、Pythonリファレンスマニュアル（&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#customization&quot;&gt;基本的なカスタマイズ&lt;/a&gt;）にあります。</target>
        </trans-unit>
        <trans-unit id="c7cb20eee0df6f2780f4ff2c70aa8c5e66186317" translate="yes" xml:space="preserve">
          <source>Additional information on these special methods may be found in the Python Reference Manual (&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#customization&quot;&gt;Basic customization&lt;/a&gt;).</source>
          <target state="translated">これらの特別なメソッドの詳細については、Pythonリファレンスマニュアル（&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#customization&quot;&gt;基本的なカスタマイズ&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="7edb640f6649a2cf3bbe1d95569b1e866f202e00" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments.</source>
          <target state="translated">追加のキーワード引数。</target>
        </trans-unit>
        <trans-unit id="5650f46efd09c607a30ce9bd7e2e4e612b751be7" translate="yes" xml:space="preserve">
          <source>Additional keyword parameters, collected in &lt;em&gt;x509&lt;/em&gt;, may be used for authentication of the client when using the &lt;code&gt;https:&lt;/code&gt; scheme. The keywords &lt;em&gt;key_file&lt;/em&gt; and &lt;em&gt;cert_file&lt;/em&gt; are supported to provide an SSL key and certificate; both are needed to support client authentication.</source>
          <target state="translated">&lt;em&gt;x509&lt;/em&gt;で収集された追加のキーワードパラメータは、 &lt;code&gt;https:&lt;/code&gt; スキームを使用するときにクライアントの認証に使用できます。キーワード&lt;em&gt;key_file&lt;/em&gt;および&lt;em&gt;cert_file&lt;/em&gt;は、SSLキーおよび証明書を提供するためにサポートされています。クライアント認証をサポートするには、両方が必要です。</target>
        </trans-unit>
        <trans-unit id="f126cf978efce5dfbbf7be549572a4fad90828fc" translate="yes" xml:space="preserve">
          <source>Additional module-level constants are defined for GNU/glibc based systems. These are &lt;code&gt;ST_NODEV&lt;/code&gt; (disallow access to device special files), &lt;code&gt;ST_NOEXEC&lt;/code&gt; (disallow program execution), &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; (writes are synced at once), &lt;code&gt;ST_MANDLOCK&lt;/code&gt; (allow mandatory locks on an FS), &lt;code&gt;ST_WRITE&lt;/code&gt; (write on file/directory/symlink), &lt;code&gt;ST_APPEND&lt;/code&gt; (append-only file), &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; (immutable file), &lt;code&gt;ST_NOATIME&lt;/code&gt; (do not update access times), &lt;code&gt;ST_NODIRATIME&lt;/code&gt; (do not update directory access times), &lt;code&gt;ST_RELATIME&lt;/code&gt; (update atime relative to mtime/ctime).</source>
          <target state="translated">追加のモジュールレベルの定数は、GNU / glibcベースのシステム用に定義されています。これらは、 &lt;code&gt;ST_NODEV&lt;/code&gt; （デバイス特殊ファイルへのアクセスを許可しない）、 &lt;code&gt;ST_NOEXEC&lt;/code&gt; （プログラム実行を許可しない）、 &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; （書き込みは一度に同期される）、 &lt;code&gt;ST_MANDLOCK&lt;/code&gt; （FSでの必須ロックを許可する）、 &lt;code&gt;ST_WRITE&lt;/code&gt; （ファイル/ディレクトリ/シンボリックリンクへの書き込み）、 &lt;code&gt;ST_APPEND&lt;/code&gt; です。（追加専用ファイル）、 &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; （不変ファイル）、 &lt;code&gt;ST_NOATIME&lt;/code&gt; （アクセス時間を更新しない）、 &lt;code&gt;ST_NODIRATIME&lt;/code&gt; （ディレクトリアクセス時間を更新しない）、 &lt;code&gt;ST_RELATIME&lt;/code&gt; （mtime / ctimeに相対的な時間を更新する）。</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">追加の注意事項</target>
        </trans-unit>
        <trans-unit id="755989eb26f111816b61fc7ebbbfb5473df1c15d" translate="yes" xml:space="preserve">
          <source>Additional parameters for the &lt;em&gt;Content-Type&lt;/em&gt; header are taken from the keyword arguments, or passed into the &lt;em&gt;_params&lt;/em&gt; argument, which is a keyword dictionary.</source>
          <target state="translated">&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーの追加パラメーターは、キーワード引数から取得されるか、キーワード辞書である&lt;em&gt;_params&lt;/em&gt;引数に渡されます。</target>
        </trans-unit>
        <trans-unit id="7629707b992046f9cae97d693ca20d38c9007ee1" translate="yes" xml:space="preserve">
          <source>Additional processing classes are defined to find, parse, and run, and check doctest examples:</source>
          <target state="translated">追加の処理クラスは、doctestの例を検索、解析、実行、チェックするために定義されています。</target>
        </trans-unit>
        <trans-unit id="a15fa56393dfeea6e8ddbb0e0c2a6f3cc24b93de" translate="yes" xml:space="preserve">
          <source>Additional resources</source>
          <target state="translated">その他のリソース</target>
        </trans-unit>
        <trans-unit id="8776ffc7a25a62ae3b9b890b596779f5ea569144" translate="yes" xml:space="preserve">
          <source>Additionally the SMTPChannel may be extended to implement very specific interaction behaviour with SMTP clients.</source>
          <target state="translated">さらに、SMTPChannelは、SMTPクライアントとの非常に特殊な相互作用動作を実装するために拡張される可能性があります。</target>
        </trans-unit>
        <trans-unit id="599097e6f6575c6278515050930a9aa12db60e09" translate="yes" xml:space="preserve">
          <source>Additionally, if the &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; socket option is available (i.e. on Windows), it will be set on the socket. This will prevent anyone else from binding to our host/port for the duration of the test.</source>
          <target state="translated">さらに、 &lt;code&gt;SO_EXCLUSIVEADDRUSE&lt;/code&gt; ソケットオプションが利用可能な場合（つまり、Windowsの場合）、ソケットに設定されます。これにより、テストの間、他のユーザーがホスト/ポートにバインドするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="3ce8bb697c96962555e6797937ae5e1bc918c228" translate="yes" xml:space="preserve">
          <source>Additionally, maximum character &lt;em&gt;width&lt;/em&gt; can be suggested. If a long object cannot be split, the specified width will be exceeded:</source>
          <target state="translated">さらに、最大文字&lt;em&gt;幅&lt;/em&gt;を提案できます。長いオブジェクトを分割できない場合、指定された幅を超えます：</target>
        </trans-unit>
        <trans-unit id="0aff5c616f0a7398b7b227fa0d75ea3310d2ca88" translate="yes" xml:space="preserve">
          <source>Additionally, mock provides a &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorator that handles patching module and class level attributes within the scope of a test, along with &lt;a href=&quot;#unittest.mock.sentinel&quot;&gt;&lt;code&gt;sentinel&lt;/code&gt;&lt;/a&gt; for creating unique objects. See the &lt;a href=&quot;#quick-guide&quot;&gt;quick guide&lt;/a&gt; for some examples of how to use &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さらに、mockは、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;モジュールとクラスレベルの属性をテストのスコープ内で処理するpatch（）デコレーターと、一意のオブジェクトを作成するための&lt;a href=&quot;#unittest.mock.sentinel&quot;&gt; &lt;code&gt;sentinel&lt;/code&gt; &lt;/a&gt;提供します。&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; の&lt;/a&gt;使用例については、&lt;a href=&quot;#quick-guide&quot;&gt;クイックガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b0851cbdca337e8a2d55a8b2492f4247983ece5b" translate="yes" xml:space="preserve">
          <source>Additionally, there are &lt;strong&gt;low-level&lt;/strong&gt; APIs for &lt;em&gt;library and framework developers&lt;/em&gt; to:</source>
          <target state="translated">さらに、&lt;em&gt;ライブラリおよびフレームワークの開発者&lt;/em&gt;が次のことを行うための&lt;strong&gt;低レベル&lt;/strong&gt; APIがあります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e8cd6b574233c309842bad2694624be2f0c8ecc" translate="yes" xml:space="preserve">
          <source>Additionally, this module provides a class &lt;a href=&quot;#poplib.POP3_SSL&quot;&gt;&lt;code&gt;POP3_SSL&lt;/code&gt;&lt;/a&gt;, which provides support for connecting to POP3 servers that use SSL as an underlying protocol layer.</source>
          <target state="translated">さらに、このモジュールはクラス&lt;a href=&quot;#poplib.POP3_SSL&quot;&gt; &lt;code&gt;POP3_SSL&lt;/code&gt; &lt;/a&gt;を提供します。これは、基礎となるプロトコル層としてSSLを使用するPOP3サーバーへの接続をサポートします。</target>
        </trans-unit>
        <trans-unit id="c981b21c3eb7058c60d166fb915b3ba17868c9bd" translate="yes" xml:space="preserve">
          <source>Address Formats</source>
          <target state="translated">アドレス形式</target>
        </trans-unit>
        <trans-unit id="53cce0631f5ba4546493e150cc5ef970434eef7f" translate="yes" xml:space="preserve">
          <source>Address already in use</source>
          <target state="translated">既に使用されているアドレス</target>
        </trans-unit>
        <trans-unit id="54d86dbe4cc1a680cd53fee9148dc51da43f4f6d" translate="yes" xml:space="preserve">
          <source>Address family not supported by protocol</source>
          <target state="translated">プロトコルでサポートされていないアドレスファミリ</target>
        </trans-unit>
        <trans-unit id="a1e16e75ab014f83bd0bb70f5aa70df54bdef59b" translate="yes" xml:space="preserve">
          <source>Address headers are one of the most complex structured header types. The &lt;code&gt;AddressHeader&lt;/code&gt; class provides a generic interface to any address header.</source>
          <target state="translated">アドレスヘッダーは、最も複雑な構造化ヘッダータイプの1つです。 &lt;code&gt;AddressHeader&lt;/code&gt; のクラスは、任意のアドレスヘッダの汎用インタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="d8b2f4f386c56bbed38a9626989886270423def9" translate="yes" xml:space="preserve">
          <source>Address objects</source>
          <target state="translated">アドレスオブジェクト</target>
        </trans-unit>
        <trans-unit id="e91fde1d6b6cf8b2e4734b6c36d0110942615076" translate="yes" xml:space="preserve">
          <source>Address objects can be compared with the usual set of comparison operators. Same IPv6 addresses with different scope zone IDs are not equal. Some examples:</source>
          <target state="translated">アドレスオブジェクトは、通常の比較演算子のセットで比較することができます。スコープゾーンIDが異なる同じIPv6アドレスは同じではありません。いくつかの例。</target>
        </trans-unit>
        <trans-unit id="e87e00a4637133fec5ee5c803edca11622b049fb" translate="yes" xml:space="preserve">
          <source>Address objects can be compared with the usual set of comparison operators. Some examples:</source>
          <target state="translated">アドレスオブジェクトは、通常の比較演算子のセットで比較することができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="c84db6312b397100947cc87ed8f2b180ca9d473a" translate="yes" xml:space="preserve">
          <source>Address objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">アドレスオブジェクトは、いくつかの演算子をサポートしています。特に明記されていない限り、演算子は互換性のあるオブジェクト間でのみ適用することができます(すなわち、IPv4とIPv4、IPv6とIPv6)。</target>
        </trans-unit>
        <trans-unit id="0105f2940c964aa9756c29f83e74bda0f90a5b32" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">メモリブロックのアドレス空間（ &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cfa96e7876c6aab98f33fc6360be994ef1aa3167" translate="yes" xml:space="preserve">
          <source>Address space of a memory block (&lt;code&gt;int&lt;/code&gt;). Read-only property.</source>
          <target state="translated">メモリブロックのアドレス空間（ &lt;code&gt;int&lt;/code&gt; ）。読み取り専用プロパティ。</target>
        </trans-unit>
        <trans-unit id="8ed5201b3048cc904b8fa7061e9e3f310c0d8ee5" translate="yes" xml:space="preserve">
          <source>AddressHeader</source>
          <target state="translated">AddressHeader</target>
        </trans-unit>
        <trans-unit id="d4ebdece72b5d801675d16eca7e8e06688a7d640" translate="yes" xml:space="preserve">
          <source>Adds a blank line (indicating the end of the HTTP headers in the response) to the headers buffer and calls &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">空の行（応答のHTTPヘッダーの終わりを示す）をヘッダーバッファーに追加し、&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1f7acd6c47b0da85c7600f21a52f58ffbfd078f5" translate="yes" xml:space="preserve">
          <source>Adds a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack.</source>
          <target state="translated">コンテキストマネージャーの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドをコールバックスタックに追加します。</target>
        </trans-unit>
        <trans-unit id="4d3af6b4955c2ff8e8fe675708fb3a093806a225" translate="yes" xml:space="preserve">
          <source>Adds a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack.</source>
          <target state="translated">コンテキストマネージャーの&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドをコールバックスタックに追加します。</target>
        </trans-unit>
        <trans-unit id="9c5c71aac9de9bf5636184d5f42b68146a582a10" translate="yes" xml:space="preserve">
          <source>Adds a new tab to the notebook.</source>
          <target state="translated">ノートブックに新しいタブを追加します。</target>
        </trans-unit>
        <trans-unit id="dd9cdcb19b13e350658b98864b2b91b085b457fb" translate="yes" xml:space="preserve">
          <source>Adds a response header to the headers buffer and logs the accepted request. The HTTP response line is written to the internal buffer, followed by &lt;em&gt;Server&lt;/em&gt; and &lt;em&gt;Date&lt;/em&gt; headers. The values for these two headers are picked up from the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt;&lt;code&gt;version_string()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt;&lt;code&gt;date_time_string()&lt;/code&gt;&lt;/a&gt; methods, respectively. If the server does not intend to send any other headers using the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt; method, then &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt;&lt;code&gt;send_response()&lt;/code&gt;&lt;/a&gt; should be followed by an &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">ヘッダーバッファーに応答ヘッダーを追加し、受け入れた要求をログに記録します。HTTP応答行は内部バッファに書き込まれ、その後に&lt;em&gt;Server&lt;/em&gt;および&lt;em&gt;Date&lt;/em&gt;ヘッダーが続き&lt;em&gt;ます&lt;/em&gt;。これら2つのヘッダーの値は、それぞれ&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt; &lt;code&gt;version_string()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.date_time_string&quot;&gt; &lt;code&gt;date_time_string()&lt;/code&gt; &lt;/a&gt;メソッドから取得されます。サーバが使用して、他のヘッダを送信する意思がない場合は&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt;メソッドを、そして&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_response&quot;&gt; &lt;code&gt;send_response()&lt;/code&gt; &lt;/a&gt;が続くべきである&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;の呼び出し。</target>
        </trans-unit>
        <trans-unit id="c70a7a21a70e6fd37ae057e1ed13fa3776bf6066" translate="yes" xml:space="preserve">
          <source>Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">すべての標準のサイト固有のディレクトリをモジュール検索パスに追加します。このモジュールは、Pythonインタープリターが&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;フラグで開始されていない限り、このモジュールがインポートされるときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="07e75a62d35592d0e149d532a3d11385a1eb4731" translate="yes" xml:space="preserve">
          <source>Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">すべての標準サイト固有のディレクトリをモジュール検索パスに追加します。この関数は、Pythonインタープリターが&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;フラグで開始されていない限り、このモジュールがインポートされるときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23f4846b019473167e5d95d7c18b067286943485" translate="yes" xml:space="preserve">
          <source>Adds or modifies an event</source>
          <target state="translated">イベントの追加または変更</target>
        </trans-unit>
        <trans-unit id="ba99f69318c5b2875afcc8e4c7d4361adb5ebefc" translate="yes" xml:space="preserve">
          <source>Adds text to the current element. &lt;em&gt;data&lt;/em&gt; is a string. This should be either a bytestring, or a Unicode string.</source>
          <target state="translated">現在の要素にテキストを追加します。&lt;em&gt;データ&lt;/em&gt;は文字列です。これは、バイト文字列またはUnicode文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="b7d3a401c5e2e8b07acd3f6878239513a252af73" translate="yes" xml:space="preserve">
          <source>Adds the HTTP header to an internal buffer which will be written to the output stream when either &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt;&lt;code&gt;flush_headers()&lt;/code&gt;&lt;/a&gt; is invoked. &lt;em&gt;keyword&lt;/em&gt; should specify the header keyword, with &lt;em&gt;value&lt;/em&gt; specifying its value. Note that, after the send_header calls are done, &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; MUST BE called in order to complete the operation.</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.flush_headers&quot;&gt; &lt;code&gt;flush_headers()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに出力ストリームに書き込まれる内部バッファーにHTTPヘッダーを追加します。&lt;em&gt;キーワードを&lt;/em&gt;用いて、ヘッダのキーワードを指定しなければならない&lt;em&gt;値は&lt;/em&gt;、その値を指定します。send_header呼び出しが完了した後、操作を完了するために&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="277dcf73a9142261968c1b0d938f93b9fc4a5516" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;em&gt;subelement&lt;/em&gt; to the end of this element&amp;rsquo;s internal list of subelements. Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;subelement&lt;/em&gt; is not an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素の&lt;em&gt;サブ要素&lt;/em&gt;を、この要素の内部のサブ要素リストの最後に追加します。発生させ&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外を&lt;/a&gt;場合は&lt;em&gt;サブ要素が&lt;/em&gt;ない&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef1fbe96c8dbb8f7464127475dab7025e0bc99db" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this handler.</source>
          <target state="translated">指定されたフィルター&lt;em&gt;filter&lt;/em&gt;をこのハンドラーに追加します。</target>
        </trans-unit>
        <trans-unit id="d974f7ad089b197b45f9485d4aa7cf708a1848bf" translate="yes" xml:space="preserve">
          <source>Adds the specified filter &lt;em&gt;filter&lt;/em&gt; to this logger.</source>
          <target state="translated">指定されたフィルター&lt;em&gt;filter&lt;/em&gt;をこのロガーに追加します。</target>
        </trans-unit>
        <trans-unit id="21e14a01ccb15fe568cac7d9b97974261ead478b" translate="yes" xml:space="preserve">
          <source>Adds the specified handler &lt;em&gt;hdlr&lt;/em&gt; to this logger.</source>
          <target state="translated">指定されたハンドラー&lt;em&gt;hdlr&lt;/em&gt;をこのロガーに追加します。</target>
        </trans-unit>
        <trans-unit id="397723ab2192f7ea42bdc7d4cb3c6961b4ccd5fe" translate="yes" xml:space="preserve">
          <source>Advanced API</source>
          <target state="translated">高度なAPI</target>
        </trans-unit>
        <trans-unit id="5fe095447c43964932a08f188d1a91498a6182f7" translate="yes" xml:space="preserve">
          <source>Advanced Tutorial</source>
          <target state="translated">上級チュートリアル</target>
        </trans-unit>
        <trans-unit id="24ca54306fd1d4616674769f3f7f6a1715604b03" translate="yes" xml:space="preserve">
          <source>Advanced usage: you can derive subclasses of &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; to customize the placeholder syntax, delimiter character, or the entire regular expression used to parse template strings. To do this, you can override these class attributes:</source>
          <target state="translated">高度な使用法：&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;サブクラスを派生させて、プレースホルダー構文、区切り文字、またはテンプレート文字列の解析に使用される正規表現全体をカスタマイズできます。これを行うには、次のクラス属性をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="251637d0b15caeee9ca6a8cb9ffecf846325c014" translate="yes" xml:space="preserve">
          <source>Advertise error</source>
          <target state="translated">広告エラー</target>
        </trans-unit>
        <trans-unit id="8d1b5c908485d5b8bf002b642c2265dccbb27a12" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;KEY_MOUSE&lt;/code&gt; to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt;. &lt;em&gt;id&lt;/em&gt; is an ID value used to distinguish multiple devices, and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;z&lt;/em&gt; are the event&amp;rsquo;s coordinates. (&lt;em&gt;z&lt;/em&gt; is currently unused.) &lt;em&gt;bstate&lt;/em&gt; is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where &lt;em&gt;n&lt;/em&gt; is the button number from 1 to 4: &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt;, &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt;, &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTON_SHIFT&lt;/code&gt;, &lt;code&gt;BUTTON_CTRL&lt;/code&gt;, &lt;code&gt;BUTTON_ALT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;KEY_MOUSE&lt;/code&gt; を返してマウスイベントを通知した後、このメソッドを呼び出して、5つのタプル &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt; として表される、キューに入れられたマウスイベントを取得する必要があります。&lt;em&gt;id&lt;/em&gt;は複数のデバイスを区別するために使用されるID値であり、&lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;z&lt;/em&gt;はイベントの座標です。 （&lt;em&gt;z&lt;/em&gt;は現在使用されていません。）&lt;em&gt;bstate&lt;/em&gt;は整数値で、そのビットはイベントのタイプを示すために設定され、次の定数の1つ以上のビットごとのORになります。ここで、&lt;em&gt;n&lt;/em&gt;は1〜4のボタン番号です。 &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTON_SHIFT&lt;/code&gt; 、 &lt;code&gt;BUTTON_CTRL&lt;/code&gt; 、 &lt;code&gt;BUTTON_ALT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ff5213eeca44b11c3673b3fbba1d5148d30d331" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;KEY_MOUSE&lt;/code&gt; to signal a mouse event, this method should be called to retrieve the queued mouse event, represented as a 5-tuple &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt;. &lt;em&gt;id&lt;/em&gt; is an ID value used to distinguish multiple devices, and &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;z&lt;/em&gt; are the event&amp;rsquo;s coordinates. (&lt;em&gt;z&lt;/em&gt; is currently unused.) &lt;em&gt;bstate&lt;/em&gt; is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where &lt;em&gt;n&lt;/em&gt; is the button number from 1 to 4: &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt;, &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt;, &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt;, &lt;code&gt;BUTTON_SHIFT&lt;/code&gt;, &lt;code&gt;BUTTON_CTRL&lt;/code&gt;, &lt;code&gt;BUTTON_ALT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;KEY_MOUSE&lt;/code&gt; を返し、マウスイベントを通知した後、このメソッドを呼び出して、5タプル &lt;code&gt;(id, x, y, z, bstate)&lt;/code&gt; として表されるキューに入れられたマウスイベントを取得する必要があります。&lt;em&gt;id&lt;/em&gt;は複数のデバイスを区別するために使用されるID値であり、&lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt;、&lt;em&gt;z&lt;/em&gt;はイベントの座標です。 （&lt;em&gt;z&lt;/em&gt;は現在使用されていません。）&lt;em&gt;bstate&lt;/em&gt;は、イベントのタイプを示すためにビットが設定される整数値であり、次の定数の1つ以上のビットごとのORになります&lt;em&gt;。n&lt;/em&gt;は1から4までのボタン番号です。 &lt;code&gt;BUTTONn_PRESSED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_RELEASED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_DOUBLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTONn_TRIPLE_CLICKED&lt;/code&gt; 、 &lt;code&gt;BUTTON_SHIFT&lt;/code&gt; 、 &lt;code&gt;BUTTON_CTRL&lt;/code&gt; 、 &lt;code&gt;BUTTON_ALT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1cc6fee1dda0b92c90ec20582c20d1074e2cf23" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = attrgetter('name')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;b.name&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="83b61198fe148750b9221638b3689ca30af865a3" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name, b.date)&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = attrgetter('name', 'date')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;(b.name, b.date)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23c9e096c43f4c6ee6a95562136ca8d19e97177b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;f = attrgetter('name.first', 'name.last')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;(b.name.first, b.name.last)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0de2cea705e050aae366d3a78eab3afcdcc07f88" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = itemgetter(2)&lt;/code&gt;, the call &lt;code&gt;f(r)&lt;/code&gt; returns &lt;code&gt;r[2]&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;f = itemgetter(2)&lt;/code&gt; 、コール &lt;code&gt;f(r)&lt;/code&gt; に戻り、 &lt;code&gt;r[2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6436d1d48a99a7252d57d6435ebc55f31f26397" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name')&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name()&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = methodcaller('name')&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 戻り &lt;code&gt;b.name()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="587ef7cb9af6d3a5014a1ec9e1e10014d0bffe63" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt;, the call &lt;code&gt;f(b)&lt;/code&gt; returns &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt;.</source>
          <target state="translated">後に &lt;code&gt;f = methodcaller('name', 'foo', bar=1)&lt;/code&gt; 、コール &lt;code&gt;f(b)&lt;/code&gt; 返す &lt;code&gt;b.name('foo', bar=1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb0bfee9b281dfd1ff2707f547202a4fcb6731f6" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt;, the call &lt;code&gt;g(r)&lt;/code&gt; returns &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt;.</source>
          <target state="translated">後 &lt;code&gt;g = itemgetter(2, 5, 3)&lt;/code&gt; 、コール &lt;code&gt;g(r)&lt;/code&gt; 戻り &lt;code&gt;(r[2], r[5], r[3])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e86cbdb1de283111f3b77a94db308e8228f025a" translate="yes" xml:space="preserve">
          <source>After a block-opening statement, the next line is indented by 4 spaces (in the Python Shell window by one tab). After certain keywords (break, return etc.) the next line is dedented. In leading indentation,</source>
          <target state="translated">ブロックオープン文の後、次の行は4つのスペースでインデントされます(Pythonシェルのウィンドウではタブ1つ分)。特定のキーワード (break,return など)の後は、次の行がインデントされます。先頭のインデントで</target>
        </trans-unit>
        <trans-unit id="734f3786cd172ab9f7f7c48f03100472da64a032" translate="yes" xml:space="preserve">
          <source>After all the tests have run the final &lt;code&gt;tearDownClass&lt;/code&gt; and &lt;code&gt;tearDownModule&lt;/code&gt; are run.</source>
          <target state="translated">すべてのテストが実行された後、最後の &lt;code&gt;tearDownClass&lt;/code&gt; と &lt;code&gt;tearDownModule&lt;/code&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="bed54ec095e148502b5574ea6f6832888058b755" translate="yes" xml:space="preserve">
          <source>After an unclosed parenthesis for a function, open a small window with function parameter hints. See &lt;a href=&quot;#calltips&quot;&gt;Calltips&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">関数の閉じられていない括弧の後に、関数パラメーターのヒントを含む小さなウィンドウを開きます。以下の編集とナビゲーションのセクションの&lt;a href=&quot;#calltips&quot;&gt;コールチップ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3e2a2afcb4d73c1dd2ce26d0c2f24d05cb3ef249" translate="yes" xml:space="preserve">
          <source>After binding (&lt;code&gt;CAN_RAW&lt;/code&gt;) or connecting (&lt;a href=&quot;#socket.CAN_BCM&quot;&gt;&lt;code&gt;CAN_BCM&lt;/code&gt;&lt;/a&gt;) the socket, you can use the &lt;a href=&quot;#socket.socket.send&quot;&gt;&lt;code&gt;socket.send()&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;socket.recv()&lt;/code&gt;&lt;/a&gt; operations (and their counterparts) on the socket object as usual.</source>
          <target state="translated">（結合後 &lt;code&gt;CAN_RAW&lt;/code&gt; を（）または接続&lt;a href=&quot;#socket.CAN_BCM&quot;&gt; &lt;code&gt;CAN_BCM&lt;/code&gt; &lt;/a&gt;）ソケットは、使用することができます&lt;a href=&quot;#socket.socket.send&quot;&gt; &lt;code&gt;socket.send()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;socket.recv()&lt;/code&gt; &lt;/a&gt;いつものようにソケットオブジェクトの操作（およびその対応します）。</target>
        </trans-unit>
        <trans-unit id="d038ff2ff4aca2174d2d681322cbe37a210d3e38" translate="yes" xml:space="preserve">
          <source>After calling this function, the handle is effectively invalidated, but the handle is not closed. You would call this function when you need the underlying Win32 handle to exist beyond the lifetime of the handle object.</source>
          <target state="translated">この関数を呼び出した後、ハンドルは事実上無効化されますが、ハンドルは閉じられません。この関数は、ハンドルオブジェクトの有効期間を超えて Win32 ハンドルが存在する必要がある場合に呼び出すことになります。</target>
        </trans-unit>
        <trans-unit id="a0df7e82f63c6ebd4a0d0051d037ed77926c952c" translate="yes" xml:space="preserve">
          <source>After object creation, treating the option name like a dictionary index</source>
          <target state="translated">オブジェクト作成後、オプション名を辞書インデックスのように扱う</target>
        </trans-unit>
        <trans-unit id="e022ab40c3a7bfffee8195f05bc3a6c276b589e7" translate="yes" xml:space="preserve">
          <source>After putting an object on an empty queue there may be an infinitesimal delay before the queue&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt;&lt;code&gt;empty()&lt;/code&gt;&lt;/a&gt; method returns &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; can return without raising &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトを空のキューに置いた後、キューの&lt;a href=&quot;#multiprocessing.Queue.empty&quot;&gt; &lt;code&gt;empty()&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;を返し、&lt;a href=&quot;#multiprocessing.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt;を発生させずに戻ることができるようになるまでに、わずかな遅延がある場合があります。</target>
        </trans-unit>
        <trans-unit id="8b8ff9fd8972c649bd1662cf6a9526d26eaa9bd5" translate="yes" xml:space="preserve">
          <source>After running the test, &lt;code&gt;events&lt;/code&gt; would contain &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt;.</source>
          <target state="translated">テストの実行後、 &lt;code&gt;events&lt;/code&gt; には &lt;code&gt;[&quot;setUp&quot;, &quot;asyncSetUp&quot;, &quot;test_response&quot;, &quot;asyncTearDown&quot;, &quot;tearDown&quot;, &quot;cleanup&quot;]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6f4ff2a70a77d2b66658454222292a23e29549ff" translate="yes" xml:space="preserve">
          <source>After the raw stream has been detached, the buffer is in an unusable state.</source>
          <target state="translated">生のストリームが切り離された後、バッファは使用不可能な状態になっています。</target>
        </trans-unit>
        <trans-unit id="ee1af62b8aaabf1acd9896c452a131674a96b865" translate="yes" xml:space="preserve">
          <source>After the underlying buffer has been detached, the &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; is in an unusable state.</source>
          <target state="translated">基になるバッファーが切り離されると、&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt;は使用できない状態になります。</target>
        </trans-unit>
        <trans-unit id="d44733f3188a570411ead96cdda7b71f70b75499" translate="yes" xml:space="preserve">
          <source>After these path manipulations, an attempt is made to import a module named &lt;code&gt;sitecustomize&lt;/code&gt;, which can perform arbitrary site-specific customizations. It is typically created by a system administrator in the site-packages directory. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'sitecustomize'&lt;/code&gt;, it is silently ignored. If Python is started without output streams available, as with &lt;code&gt;pythonw.exe&lt;/code&gt; on Windows (which is used by default to start IDLE), attempted output from &lt;code&gt;sitecustomize&lt;/code&gt; is ignored. Any other exception causes a silent and perhaps mysterious failure of the process.</source>
          <target state="translated">これらのパス操作の後で、任意のサイト固有のカスタマイズを実行できる &lt;code&gt;sitecustomize&lt;/code&gt; という名前のモジュールをインポートする試みが行われます。通常、システム管理者がsite-packagesディレクトリに作成します。このインポートが&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの例外で失敗し、例外の &lt;code&gt;name&lt;/code&gt; 属性が &lt;code&gt;'sitecustomize'&lt;/code&gt; に等しい場合、黙って無視されます。Windowsの &lt;code&gt;pythonw.exe&lt;/code&gt; （デフォルトでIDLEの起動に使用されます）のように、出力ストリームを使用せずにPythonを起動した場合、 &lt;code&gt;sitecustomize&lt;/code&gt; からの出力試行は無視されます。その他の例外は、プロセスのサイレントでおそらく不可解な失敗を引き起こします。</target>
        </trans-unit>
        <trans-unit id="9330ca10edf31a8f07b7a3a7111df51eda1f975b" translate="yes" xml:space="preserve">
          <source>After this method has been called, any further operation on the view raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (except &lt;a href=&quot;#memoryview.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; itself which can be called multiple times):</source>
          <target state="translated">このメソッドが呼び出された後、ビューに対するそれ以上の操作は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;を発生させます（複数回呼び出すことができる&lt;a href=&quot;#memoryview.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;自体を除く）：</target>
        </trans-unit>
        <trans-unit id="b2768fea23cb25766dd541c907ce6b3b52be13d1" translate="yes" xml:space="preserve">
          <source>After this, an attempt is made to import a module named &lt;code&gt;usercustomize&lt;/code&gt;, which can perform arbitrary user-specific customizations, if &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt; is true. This file is intended to be created in the user site-packages directory (see below), which is part of &lt;code&gt;sys.path&lt;/code&gt; unless disabled by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'usercustomize'&lt;/code&gt;, it is silently ignored.</source>
          <target state="translated">この後、&lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt; &lt;code&gt;ENABLE_USER_SITE&lt;/code&gt; &lt;/a&gt;がtrueの場合、任意のユーザー固有のカスタマイズを実行できる &lt;code&gt;usercustomize&lt;/code&gt; という名前のモジュールをインポートしようとします。このファイルは、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; で&lt;/a&gt;無効にしない限り、 &lt;code&gt;sys.path&lt;/code&gt; の一部であるユーザーのサイトパッケージディレクトリ（下記参照）に作成することを目的としています。このインポートが&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの例外で失敗し、例外の &lt;code&gt;name&lt;/code&gt; 属性が &lt;code&gt;'usercustomize'&lt;/code&gt; に等しい場合、黙って無視されます。</target>
        </trans-unit>
        <trans-unit id="d647d3e36437c582646dcfa7db85434ea8b78d82" translate="yes" xml:space="preserve">
          <source>After this, an attempt is made to import a module named &lt;code&gt;usercustomize&lt;/code&gt;, which can perform arbitrary user-specific customizations, if &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt; is true. This file is intended to be created in the user site-packages directory (see below), which is part of &lt;code&gt;sys.path&lt;/code&gt; unless disabled by &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;. If this import fails with an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or its subclass exception, and the exception&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute equals to &lt;code&gt;'usercustomize'&lt;/code&gt;, it is silently ignored.</source>
          <target state="translated">この後、 &lt;code&gt;usercustomize&lt;/code&gt; という名前のモジュールをインポートしようとします。このモジュールは、&lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt; &lt;code&gt;ENABLE_USER_SITE&lt;/code&gt; &lt;/a&gt;がtrueの場合、任意のユーザー固有のカスタマイズを実行できます。このファイルは、&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; で&lt;/a&gt;無効にしない限り、 &lt;code&gt;sys.path&lt;/code&gt; の一部であるユーザーsite-packagesディレクトリ（以下を参照）に作成することを目的としています。このインポートが&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;またはそのサブクラス例外で失敗し、例外の &lt;code&gt;name&lt;/code&gt; 属性が &lt;code&gt;'usercustomize'&lt;/code&gt; と等しい場合、それは黙って無視されます。</target>
        </trans-unit>
        <trans-unit id="43f3883ceb8aa25073e4ce290428185982ec0665" translate="yes" xml:space="preserve">
          <source>Alert Descriptions from &lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt; and others. The &lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS Alert Registry&lt;/a&gt; contains this list and references to the RFCs where their meaning is defined.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5246.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5246&lt;/strong&gt;&lt;/a&gt;などのアラートの説明。&lt;a href=&quot;https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6&quot;&gt;IANA TLS警告レジストリは&lt;/a&gt;、その意味が定義されているRFCにこのリストや参照が含まれています。</target>
        </trans-unit>
        <trans-unit id="9c1dc0a32970d2316ea232558be6864f582c80f2" translate="yes" xml:space="preserve">
          <source>Algorithmically, &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; can handle frequent reordering operations better than &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This makes it suitable for tracking recent accesses (for example in an &lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRU cache&lt;/a&gt;).</source>
          <target state="translated">アルゴリズム的には、&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;よりも頻繁に並べ替え操作を処理できます。これにより、最近のアクセスの追跡（&lt;a href=&quot;https://medium.com/@krishankantsinghal/my-first-blog-on-medium-583159139237&quot;&gt;LRUキャッシュなど&lt;/a&gt;）に適しています。</target>
        </trans-unit>
        <trans-unit id="ae7afc7cda35b97ec7792acdf19b73ce74efe65d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#getopt.GetoptError&quot;&gt;&lt;code&gt;GetoptError&lt;/code&gt;&lt;/a&gt;; for backward compatibility.</source>
          <target state="translated">&lt;a href=&quot;#getopt.GetoptError&quot;&gt; &lt;code&gt;GetoptError&lt;/code&gt; の&lt;/a&gt;エイリアス。下位互換性のため。</target>
        </trans-unit>
        <trans-unit id="b4c82b8c87f05ccdbcc3a216b96cf1a53ccf563e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="eab0dbe8bd01f5049191cf6e61204d3aabd1ee93" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="cadc80a1cf0273c362c8330f48cb4ddc336aa467" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;LF&lt;/code&gt;: &amp;ldquo;New line&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;LF&lt;/code&gt; のエイリアス：「改行」</target>
        </trans-unit>
        <trans-unit id="d38e79ce398493b91869071ba23338cb1cdcfe6f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;TAB&lt;/code&gt;: &amp;ldquo;Horizontal tab&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;TAB&lt;/code&gt; のエイリアス：「水平タブ」</target>
        </trans-unit>
        <trans-unit id="59614a7389348101f9b1ea41779375c6d97c1236" translate="yes" xml:space="preserve">
          <source>Alias for output, for symmetry with &lt;a href=&quot;#subprocess.CalledProcessError.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.CalledProcessError.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;との対称性のための出力のエイリアス。</target>
        </trans-unit>
        <trans-unit id="4d404ca5cc49cbaffcbe2bdf1037676fb7d13f36" translate="yes" xml:space="preserve">
          <source>Alias for output, for symmetry with &lt;a href=&quot;#subprocess.TimeoutExpired.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.TimeoutExpired.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;との対称性のための出力のエイリアス。</target>
        </trans-unit>
        <trans-unit id="471e12f5a361936c257c992b8760c41b0d9219fb" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#zipfile.BadZipFile&quot;&gt;&lt;code&gt;BadZipFile&lt;/code&gt;&lt;/a&gt;, for compatibility with older Python versions.</source>
          <target state="translated">古いバージョンのPythonとの互換性のための&lt;a href=&quot;#zipfile.BadZipFile&quot;&gt; &lt;code&gt;BadZipFile&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="3064a091e0e389e1a86a20dcc2bbe19d5d7d6b45" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#signal.SIGCHLD&quot;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#signal.SIGCHLD&quot;&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="6fe6d4aa04dab6037d66eb4cb0b7d08cc478f9d1" translate="yes" xml:space="preserve">
          <source>Aliases may be nested and can contain anything that can be legally typed at the pdb prompt. Note that internal pdb commands &lt;em&gt;can&lt;/em&gt; be overridden by aliases. Such a command is then hidden until the alias is removed. Aliasing is recursively applied to the first word of the command line; all other words in the line are left alone.</source>
          <target state="translated">エイリアスは入れ子にすることができ、pdbプロンプトで合法的に入力できるすべてのものを含めることができます。内部のpdbコマンド&lt;em&gt;は&lt;/em&gt;エイリアスで上書き&lt;em&gt;できる&lt;/em&gt;ことに注意してください。このようなコマンドは、エイリアスが削除されるまで非表示になります。エイリアスは、コマンドラインの最初の単語に再帰的に適用されます。行内の他のすべての単語はそのまま残されます。</target>
        </trans-unit>
        <trans-unit id="19c1a164caf9d915e6d248f6f19c0c5b6e55d90b" translate="yes" xml:space="preserve">
          <source>Aligning the text and specifying a width:</source>
          <target state="translated">テキストを揃えて幅を指定します。</target>
        </trans-unit>
        <trans-unit id="7f8c5176c3f03b97659161923f2b6492f7de7e73" translate="yes" xml:space="preserve">
          <source>Alignment</source>
          <target state="translated">Alignment</target>
        </trans-unit>
        <trans-unit id="a82c356470136a5da9aaa83cba880eb8930e0b37" translate="yes" xml:space="preserve">
          <source>All &amp;ldquo;a&amp;rdquo; functions in this section fail (more or less) silently if the executed program cannot be found; the &amp;ldquo;b&amp;rdquo; replacements raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このセクションのすべての「a」関数は、実行されたプログラムが見つからない場合、（多かれ少なかれ）静かに失敗します。「b」の置換では、代わりに&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1823c660ec385cd7ad12aec995cc722b1d5b46fb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#real-valued-distributions&quot;&gt;real valued distributions&lt;/a&gt; in the class will use the new method:</source>
          <target state="translated">クラス内のすべての&lt;a href=&quot;#real-valued-distributions&quot;&gt;実数値分布&lt;/a&gt;は、新しいメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="f1726842c26241e242541890252b33775dc0eae3" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;numbers.Real&lt;/code&gt;&lt;/a&gt; types (&lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;) also include the following operations:</source>
          <target state="translated">すべての&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;numbers.Real&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;型（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;およびfloat）には、次の演算も含まれます。</target>
        </trans-unit>
        <trans-unit id="68cd5f511616dc760e97502971cef15504097ea7" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;multipart&lt;/em&gt; type messages will be parsed as a container message object with a list of sub-message objects for their payload. The outer container message will return &lt;code&gt;True&lt;/code&gt; for &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will yield a list of subparts.</source>
          <target state="translated">すべての&lt;em&gt;マルチパート&lt;/em&gt;タイプのメッセージは、ペイロードのサブメッセージオブジェクトのリストを持つコンテナメッセージオブジェクトとして解析されます。外側のコンテナメッセージは&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;に対して &lt;code&gt;True&lt;/code&gt; を返し、&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;はサブパートのリストを生成します。</target>
        </trans-unit>
        <trans-unit id="59f4fc3531243119771587b080eddb77449d0769" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;other&lt;/em&gt; keys are passed through as keyword arguments to the handler&amp;rsquo;s constructor. For example, given the snippet:</source>
          <target state="translated">&lt;em&gt;他の&lt;/em&gt;すべて&lt;em&gt;の&lt;/em&gt;キーは、キーワード引数としてハンドラーのコンストラクターに渡されます。たとえば、次のスニペットがあるとします。</target>
        </trans-unit>
        <trans-unit id="fb1488621f65c70bf66f1f957d6992583befc69c" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;gzip&lt;/strong&gt; compressed streams are required to contain this timestamp field. Some programs, such as &lt;strong&gt;gunzip&lt;/strong&gt;, make use of the timestamp. The format is the same as the return value of &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;os#os.stat_result.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt; attribute of the object returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての&lt;strong&gt;gzip&lt;/strong&gt;圧縮ストリームには、このタイムスタンプフィールドを含める必要があります。&lt;strong&gt;gunzip&lt;/strong&gt;などの一部のプログラムは、タイムスタンプを使用します。フォーマットは、戻り値と同じである&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;os#os.stat_result.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; の両用&lt;/a&gt;によって返されたオブジェクトの属性&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f64a36de478d59806bf84b1b01392cf6f7782245" translate="yes" xml:space="preserve">
          <source>All IMAP4rev1 commands are represented by methods of the same name, either upper-case or lower-case.</source>
          <target state="translated">すべてのIMAP4rev1コマンドは、同じ名前のメソッドを大文字または小文字で表現します。</target>
        </trans-unit>
        <trans-unit id="59eff8140f7f6cc8eee1beb73070dcf238148177" translate="yes" xml:space="preserve">
          <source>All IO on an &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt;. This means that for example &lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; will raise an &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; if it needs more data than the incoming BIO has available.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; の&lt;/a&gt;すべてのIO は&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキング&lt;/a&gt;です。つまり、たとえば、&lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;は、着信BIOが利用できるよりも多くのデータが必要な場合に&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="f05e728b285d42a5cfcc7b03157016dd489531bf" translate="yes" xml:space="preserve">
          <source>All POP3 commands are represented by methods of the same name, in lower-case; most return the response text sent by the server.</source>
          <target state="translated">すべてのPOP3コマンドは、同じ名前のメソッドで小文字で表現されます。</target>
        </trans-unit>
        <trans-unit id="3414548f8739b658119012bc5a437c65f919cdbe" translate="yes" xml:space="preserve">
          <source>All Platforms</source>
          <target state="translated">すべてのプラットフォーム</target>
        </trans-unit>
        <trans-unit id="3f22c61ff7186f7ff5a4a7b6ac42edb2119d4f66" translate="yes" xml:space="preserve">
          <source>All Win32 systems support at least the following; most systems support many more:</source>
          <target state="translated">すべてのWin32システムは少なくとも以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b4c3e2e5e166bd33c375661190706f81b3415ea8" translate="yes" xml:space="preserve">
          <source>All arguments are optional and default to &lt;code&gt;0&lt;/code&gt;. Arguments may be integers or floats, and may be positive or negative.</source>
          <target state="translated">すべての引数はオプションであり、デフォルトは &lt;code&gt;0&lt;/code&gt; です。引数は整数または浮動小数点数で、正または負の値になります。</target>
        </trans-unit>
        <trans-unit id="afeaadb9a3f4efc626cf9837aa136718e99ff657" translate="yes" xml:space="preserve">
          <source>All arguments are optional, and all except for &lt;em&gt;m&lt;/em&gt; should be specified in keyword form.</source>
          <target state="translated">引数はすべてオプションであり、&lt;em&gt;m&lt;/em&gt;を除くすべての引数はキーワード形式で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="45da80b609e066ba052795b1ad773af41969ce6d" translate="yes" xml:space="preserve">
          <source>All arguments are optional. &lt;em&gt;tzinfo&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;, or an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass. The remaining arguments must be integers in the following ranges:</source>
          <target state="translated">すべての引数はオプションです。&lt;em&gt;tzinfo&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; か、&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスです。残りの引数は、次の範囲の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a41de24556098cd8f538669ad809aeff6d77b80b" translate="yes" xml:space="preserve">
          <source>All arguments are required. Arguments must be integers, in the following ranges:</source>
          <target state="translated">すべての引数は必須です。引数は以下の範囲の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b9c41702d1e64bc776766a2674021dc0acd4cdbf" translate="yes" xml:space="preserve">
          <source>All arguments except &lt;em&gt;filename&lt;/em&gt; are optional, and should be specified in keyword form.</source>
          <target state="translated">&lt;em&gt;ファイル名&lt;/em&gt;を除くすべての引数はオプションであり、キーワード形式で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee92851c158191e121c730100fcb0d60e5daea4d" translate="yes" xml:space="preserve">
          <source>All arguments to commands are converted to strings, except for &lt;code&gt;AUTHENTICATE&lt;/code&gt;, and the last argument to &lt;code&gt;APPEND&lt;/code&gt; which is passed as an IMAP4 literal. If necessary (the string contains IMAP4 protocol-sensitive characters and isn&amp;rsquo;t enclosed with either parentheses or double quotes) each string is quoted. However, the &lt;em&gt;password&lt;/em&gt; argument to the &lt;code&gt;LOGIN&lt;/code&gt; command is always quoted. If you want to avoid having an argument string quoted (eg: the &lt;em&gt;flags&lt;/em&gt; argument to &lt;code&gt;STORE&lt;/code&gt;) then enclose the string in parentheses (eg: &lt;code&gt;r'(\Deleted)'&lt;/code&gt;).</source>
          <target state="translated">コマンドへのすべての引数は、 &lt;code&gt;AUTHENTICATE&lt;/code&gt; と、IMAP4リテラルとして渡される &lt;code&gt;APPEND&lt;/code&gt; への最後の引数を除いて、文字列に変換されます。必要に応じて（文字列はIMAP4プロトコル依存文字を含み、括弧または二重引用符で囲まれていません）、各文字列は引用符で囲まれます。ただし、 &lt;code&gt;LOGIN&lt;/code&gt; コマンドの&lt;em&gt;パスワード&lt;/em&gt;引数は常に引用されます。引数文字列を引用符で囲まないようにしたい場合（例： &lt;code&gt;STORE&lt;/code&gt; への&lt;em&gt;フラグ&lt;/em&gt;引数）、文字列を括弧で囲みます（例： &lt;code&gt;r'(\Deleted)'&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="031f5a606c175280f66f531447d16bf78411e5be" translate="yes" xml:space="preserve">
          <source>All asyncio protocols can implement Base Protocol callbacks.</source>
          <target state="translated">すべてのasyncioプロトコルは、ベースプロトコルのコールバックを実装することができます。</target>
        </trans-unit>
        <trans-unit id="fbd9ac4a05c360b4511702914270df681ebcd66a" translate="yes" xml:space="preserve">
          <source>All attributes implemented by address objects are implemented by network objects as well. In addition, network objects implement additional attributes. All of these are common between &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, so to avoid duplication they are only documented for &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;. Network objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">アドレスオブジェクトによって実装されるすべての属性は、ネットワークオブジェクトによっても実装されます。さらに、ネットワークオブジェクトは追加の属性を実装します。これらはすべて&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; の&lt;/a&gt;間で共通なので、重複を避けるため、&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;についてのみ文書化されています。ネットワークオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;であるため、辞書のキーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="4155e00e33adae93f928bcc5c49ba79c56f0f61a" translate="yes" xml:space="preserve">
          <source>All attributes implemented by address objects are implemented by network objects as well. In addition, network objects implement additional attributes. All of these are common between &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, so to avoid duplication they are only documented for &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;. Network objects are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">アドレスオブジェクトによって実装されるすべての属性は、ネットワークオブジェクトによっても実装されます。さらに、ネットワークオブジェクトは追加の属性を実装します。これらはすべて&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; の&lt;/a&gt;間で共通であるため、重複を避けるために、IPv4Networkについてのみ文書化されてい&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;。ネットワークオブジェクトは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;であるため、辞書のキーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="4dbd3c5316f651cef378d40e6f747eaf218b9172" translate="yes" xml:space="preserve">
          <source>All built-in, non-system-exiting exceptions are derived from this class. All user-defined exceptions should also be derived from this class.</source>
          <target state="translated">すべての組み込みの、システム終了しない例外は、このクラスから派生しています。すべてのユーザ定義の例外もこのクラスから派生しなければなりません。</target>
        </trans-unit>
        <trans-unit id="db1915ddc75890b79023cb3d160beb6524f1bf36" translate="yes" xml:space="preserve">
          <source>All calls to this function with a given name return the same logger instance. This means that logger instances never need to be passed between different parts of an application.</source>
          <target state="translated">指定された名前でこの関数を呼び出すと、すべて同じロガー インスタンスを返します。これは、アプリケーションの異なる部分間でロガーインスタンスを渡す必要がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0c7ddca5ecb214fc8a6ff6ead24282869b3d742a" translate="yes" xml:space="preserve">
          <source>All changes to MH mailboxes are immediately applied, so this method does nothing.</source>
          <target state="translated">MHのメールボックスへの変更はすべて即座に適用されるので、この方法では何もしません。</target>
        </trans-unit>
        <trans-unit id="36ef7a286b4df5227bf77c9f5987c04ce550fd48" translate="yes" xml:space="preserve">
          <source>All changes to Maildir mailboxes are immediately applied, so this method does nothing.</source>
          <target state="translated">Maildir メールボックスへの変更はすべて即座に適用されるので、この方法は何もしません。</target>
        </trans-unit>
        <trans-unit id="6ba4ce793f08c2aeaad053356252f02ff9e86122" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;nntplib.putline&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt;, where &lt;code&gt;line&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">すべてのコマンドは、引数 &lt;code&gt;self&lt;/code&gt; および &lt;code&gt;line&lt;/code&gt; を &lt;code&gt;nntplib.putline&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;nntplib.putlineを発生させます。ここで、 &lt;code&gt;line&lt;/code&gt; は、リモートホストに送信されようとしているバイトです。</target>
        </trans-unit>
        <trans-unit id="987583aba6ab43986ee540ce2d5a0a979df6e457" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;poplib.putline&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt;, where &lt;code&gt;line&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">すべてのコマンドは、引数 &lt;code&gt;self&lt;/code&gt; および &lt;code&gt;line&lt;/code&gt; で&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt; &lt;code&gt;poplib.putline&lt;/code&gt; を発生させます。ここで、 &lt;code&gt;line&lt;/code&gt; は、リモートホストに送信されるバイトです。</target>
        </trans-unit>
        <trans-unit id="0ebb715b219c77d2b43f98501c7daf8840b7660a" translate="yes" xml:space="preserve">
          <source>All commands will raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;smtplib.SMTP.send&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, where &lt;code&gt;data&lt;/code&gt; is the bytes about to be sent to the remote host.</source>
          <target state="translated">すべてのコマンドは、引数 &lt;code&gt;self&lt;/code&gt; および &lt;code&gt;data&lt;/code&gt; を &lt;code&gt;smtplib.SMTP.send&lt;/code&gt; して&lt;a href=&quot;sys#auditing&quot;&gt;監査イベント&lt;/a&gt;smtplib.SMTP.sendを発生させます。ここで、 &lt;code&gt;data&lt;/code&gt; はリモートホストに送信されるバイトです。</target>
        </trans-unit>
        <trans-unit id="130ec836bbcb22e52ee0cf2ee501ba311b193ebb" translate="yes" xml:space="preserve">
          <source>All constants are now &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collections.</source>
          <target state="translated">すべての定数が&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt;コレクションになりました。</target>
        </trans-unit>
        <trans-unit id="8bf35df37eefcc4b205b0e86b2bb42edebe23d0f" translate="yes" xml:space="preserve">
          <source>All constants from the &lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt; module are also exported from &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;token#module-token&quot;&gt; &lt;code&gt;token&lt;/code&gt; &lt;/a&gt;モジュールのすべての定数は、&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;からもエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="299f6f3a07c72abcf84b07e20f8d55abc29c53bc" translate="yes" xml:space="preserve">
          <source>All ctypes data types have a default implementation of this classmethod that normally returns &lt;em&gt;obj&lt;/em&gt; if that is an instance of the type. Some types accept other objects as well.</source>
          <target state="translated">すべてのctypesデータ型には、このクラスメソッドのデフォルトの実装があり、それが通常、型のインスタンスである場合は&lt;em&gt;objを&lt;/em&gt;返します。一部のタイプは他のオブジェクトも受け入れます。</target>
        </trans-unit>
        <trans-unit id="4cb08e4edd7da0cbd1811b03590d4649a88477dd" translate="yes" xml:space="preserve">
          <source>All defect classes are subclassed from &lt;code&gt;email.errors.MessageDefect&lt;/code&gt;.</source>
          <target state="translated">すべての欠陥クラスは &lt;code&gt;email.errors.MessageDefect&lt;/code&gt; からサブクラス化されます。</target>
        </trans-unit>
        <trans-unit id="f4baad04cd2258a2a56a2f8fc40748593c649301" translate="yes" xml:space="preserve">
          <source>All entity references from &lt;a href=&quot;html.entities#module-html.entities&quot;&gt;&lt;code&gt;html.entities&lt;/code&gt;&lt;/a&gt; are replaced in the attribute values.</source>
          <target state="translated">&lt;a href=&quot;html.entities#module-html.entities&quot;&gt; &lt;code&gt;html.entities&lt;/code&gt; &lt;/a&gt;からのすべてのエンティティ参照は、属性値で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="e465e17c1a37d9609d9ff9aff3453fc0828078fd" translate="yes" xml:space="preserve">
          <source>All errors raise exceptions. The normal exceptions for invalid argument types and out-of-memory conditions can be raised; starting from Python 3.3, errors related to socket or address semantics raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; or one of its subclasses (they used to raise &lt;a href=&quot;#socket.error&quot;&gt;&lt;code&gt;socket.error&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">すべてのエラーは例外を発生させます。無効な引数タイプおよびメモリ不足状態の通常の例外が発生する可能性があります。Python 3.3以降、ソケットまたはアドレスのセマンティクスに関連するエラーにより、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの1つが発生します（これらは、&lt;a href=&quot;#socket.error&quot;&gt; &lt;code&gt;socket.error&lt;/code&gt; &lt;/a&gt;を発生させるために使用されていました）。</target>
        </trans-unit>
        <trans-unit id="2bc61495b794fe0aa34758d7e2920183e2b9b9bd" translate="yes" xml:space="preserve">
          <source>All event loops on Windows do not support the following methods:</source>
          <target state="translated">Windows上のすべてのイベントループは、以下のメソッドをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="caf8948335d4c7f60ae36806aadee301a2f018ea" translate="yes" xml:space="preserve">
          <source>All examples assume a native byte order, size, and alignment with a big-endian machine.</source>
          <target state="translated">すべての例では、ビッグエンディアンマシンでのネイティブバイト順、サイズ、アラインメントを想定しています。</target>
        </trans-unit>
        <trans-unit id="f809ac9170e1c6e6ca0f059a4d69cb510f1c3d53" translate="yes" xml:space="preserve">
          <source>All files are opened in text mode by default, but you can override this by specifying the &lt;em&gt;mode&lt;/em&gt; parameter in the call to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt;. If an I/O error occurs during opening or reading a file, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">すべてのファイルはデフォルトでテキストモードで開かれますが、&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; の&lt;/a&gt;呼び出しで&lt;em&gt;モード&lt;/em&gt;パラメータを指定することで、これをオーバーライドできます。ファイルのオープンまたは読み取り中にI / Oエラーが発生すると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="293649b21c6f8fabecd0b086b5127c14b3f9f4f1" translate="yes" xml:space="preserve">
          <source>All following arguments are optional and can be accessed as instance attributes as well.</source>
          <target state="translated">以下の引数はすべてオプションで、インスタンス属性としてもアクセスできます。</target>
        </trans-unit>
        <trans-unit id="2a1a5d969852f9eb11af03015e19c7b15f856807" translate="yes" xml:space="preserve">
          <source>All functions accepting path or file names accept both bytes and string objects, and result in an object of the same type, if a path or file name is returned.</source>
          <target state="translated">パス名やファイル名を受け付ける関数はすべて、バイトオブジェクトと文字列オブジェクトの両方を受け付け、パス名やファイル名が返された場合には同じ型のオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="764b4d6c99569a6649ee11a3f6913ea07403cc88" translate="yes" xml:space="preserve">
          <source>All functions in this module raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; (or subclasses thereof) in the case of invalid or inaccessible file names and paths, or other arguments that have the correct type, but are not accepted by the operating system.</source>
          <target state="translated">このモジュールのすべての関数は、無効またはアクセスできないファイル名とパス、または正しいタイプであるがオペレーティングシステムで受け入れられないその他の引数の場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;（またはそのサブクラス）を発生させます。</target>
        </trans-unit>
        <trans-unit id="84373164968c0434294b7890098e13ea24078ada" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself.</source>
          <target state="translated">このモジュールのすべての関数は、最初の引数としてファイル記述子&lt;em&gt;fd&lt;/em&gt;を取ります。これは、 &lt;code&gt;sys.stdin.fileno()&lt;/code&gt; によって返されるなどの整数ファイル記述子、または &lt;code&gt;sys.stdin&lt;/code&gt; 自体などの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;にすることができます。</target>
        </trans-unit>
        <trans-unit id="669b057cd5f10408626d8953cdfea864463d2fd6" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself.</source>
          <target state="translated">このモジュールのすべての関数は、最初の引数としてファイル記述子&lt;em&gt;fd&lt;/em&gt;を取ります。これは、 &lt;code&gt;sys.stdin.fileno()&lt;/code&gt; によって返されるような整数のファイル記述子、または &lt;code&gt;sys.stdin&lt;/code&gt; 自体などの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;にすることができます。</target>
        </trans-unit>
        <trans-unit id="f341c1e6b9c8fc27dafea2f00fb8167a63cc9f5b" translate="yes" xml:space="preserve">
          <source>All functions in this module take a file descriptor &lt;em&gt;fd&lt;/em&gt; as their first argument. This can be an integer file descriptor, such as returned by &lt;code&gt;sys.stdin.fileno()&lt;/code&gt;, or an &lt;a href=&quot;io#io.IOBase&quot;&gt;&lt;code&gt;io.IOBase&lt;/code&gt;&lt;/a&gt; object, such as &lt;code&gt;sys.stdin&lt;/code&gt; itself, which provides a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; that returns a genuine file descriptor.</source>
          <target state="translated">このモジュールのすべての関数は、最初の引数としてファイル記述子&lt;em&gt;fd&lt;/em&gt;を取ります。これは、 &lt;code&gt;sys.stdin.fileno()&lt;/code&gt; によって返されるような整数のファイル記述子、または本物のファイル記述子を返す&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;を提供する &lt;code&gt;sys.stdin&lt;/code&gt; 自体などの&lt;a href=&quot;io#io.IOBase&quot;&gt; &lt;code&gt;io.IOBase&lt;/code&gt; &lt;/a&gt;オブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="1c016a97492d8141818b674772a3c8a871a986a2" translate="yes" xml:space="preserve">
          <source>All hard tab characters are expanded to spaces, using 8-column tab stops. Tabs in output generated by the tested code are not modified. Because any hard tabs in the sample output &lt;em&gt;are&lt;/em&gt; expanded, this means that if the code output includes hard tabs, the only way the doctest can pass is if the &lt;a href=&quot;#doctest.NORMALIZE_WHITESPACE&quot;&gt;&lt;code&gt;NORMALIZE_WHITESPACE&lt;/code&gt;&lt;/a&gt; option or &lt;a href=&quot;#doctest-directives&quot;&gt;directive&lt;/a&gt; is in effect. Alternatively, the test can be rewritten to capture the output and compare it to an expected value as part of the test. This handling of tabs in the source was arrived at through trial and error, and has proven to be the least error prone way of handling them. It is possible to use a different algorithm for handling tabs by writing a custom &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">すべてのハードタブ文字は、8列のタブストップを使用してスペースに展開されます。テストされたコードによって生成された出力のタブは変更されません。サンプル出力の任意のハードタブがあるので&lt;em&gt;されている&lt;/em&gt;展開されている場合、コードの出力は、ハードのタブが含まれている場合、唯一の方法のdoctestを渡すことができ、この手段がある&lt;a href=&quot;#doctest.NORMALIZE_WHITESPACE&quot;&gt; &lt;code&gt;NORMALIZE_WHITESPACE&lt;/code&gt; の&lt;/a&gt;オプションまたは&lt;a href=&quot;#doctest-directives&quot;&gt;ディレクティブが&lt;/a&gt;有効になっています。または、テストを書き直して出力をキャプチャし、テストの一部として期待値と比較することもできます。ソース内のタブのこの処理は試行錯誤によって達成され、タブを処理する最もエラーが発生しにくい方法であることが証明されています。カスタム&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt;クラスを記述することにより、タブの処理に別のアルゴリズムを使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="91fc0829f8889a22e20ca26434fbffa2dbfb02ff" translate="yes" xml:space="preserve">
          <source>All inclusive filters are applied at once, a trace is ignored if no inclusive filters match it. A trace is ignored if at least one exclusive filter matches it.</source>
          <target state="translated">すべての包含フィルタが一度に適用され、包含フィルタにマッチするものがない場合、トレースは無視されます。少なくとも1つの排他的フィルタがマッチした場合、トレースは無視されます。</target>
        </trans-unit>
        <trans-unit id="e5ed3dd190b5e59dac468767ad1a88d8c4cdff2e" translate="yes" xml:space="preserve">
          <source>All incremental decoders must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">すべてのインクリメンタルデコーダは、このコンストラクタインターフェースを提供しなければなりません。キーワード引数を追加することは自由ですが、ここで定義されているものだけが Python のコーデックレジストリで使用されます。</target>
        </trans-unit>
        <trans-unit id="470d7585fb716131eaa2ac8ea527a90daf24a7cc" translate="yes" xml:space="preserve">
          <source>All incremental encoders must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">すべてのインクリメンタルエンコーダはこのコンストラクタインターフェースを提供しなければなりません。キーワード引数を追加することは自由ですが、ここで定義されているものだけが Python のコーデックレジストリで使用されます。</target>
        </trans-unit>
        <trans-unit id="f8e3878938189c7d78e25155ae9238ddf1f98a9c" translate="yes" xml:space="preserve">
          <source>All leading whitespace is removed from the first line. Any leading whitespace that can be uniformly removed from the second line onwards is removed. Empty lines at the beginning and end are subsequently removed. Also, all tabs are expanded to spaces.</source>
          <target state="translated">1 行目からすべての先頭の空白が削除されます。2 行目以降で一様に除去できる先頭の空白はすべて除去されます。最初と最後の空行はその後削除されます。また、すべてのタブはスペースに展開されます。</target>
        </trans-unit>
        <trans-unit id="a51d14eb54abb876437a862ebfe4b068d36c0dfa" translate="yes" xml:space="preserve">
          <source>All methods are executed atomically.</source>
          <target state="translated">すべてのメソッドはアトミックに実行されます。</target>
        </trans-unit>
        <trans-unit id="af2e44950a8c7f07ebc93e9cd910e4550fa37531" translate="yes" xml:space="preserve">
          <source>All methods of RawTurtle/Turtle also exist as functions, i.e. part of the procedure-oriented interface.</source>
          <target state="translated">RawTurtle/Turtleのすべてのメソッドは、関数としても存在します。</target>
        </trans-unit>
        <trans-unit id="8a2f5fe29ba9facb218010f2a3bc8e0b1c83b43a" translate="yes" xml:space="preserve">
          <source>All methods of TurtleScreen/Screen also exist as functions, i.e. as part of the procedure-oriented interface.</source>
          <target state="translated">TurtleScreen/Screenのすべてのメソッドは関数としても存在します。</target>
        </trans-unit>
        <trans-unit id="6a8c9608d8c8cf4f12dfcb3de0e222922cd76e05" translate="yes" xml:space="preserve">
          <source>All non-keyword arguments are converted to strings like &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; does and written to the stream, separated by &lt;em&gt;sep&lt;/em&gt; and followed by &lt;em&gt;end&lt;/em&gt;. Both &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; must be strings; they can also be &lt;code&gt;None&lt;/code&gt;, which means to use the default values. If no &lt;em&gt;objects&lt;/em&gt; are given, &lt;a href=&quot;#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; will just write &lt;em&gt;end&lt;/em&gt;.</source>
          <target state="translated">キーワード以外のすべての引数は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; の&lt;/a&gt;ように文字列に変換されてストリームに書き込まれ、&lt;em&gt;sep&lt;/em&gt;で区切られ、その後に&lt;em&gt;endが&lt;/em&gt;続きます。&lt;em&gt;sep&lt;/em&gt;と&lt;em&gt;end&lt;/em&gt;は両方とも文字列でなければなりません。 &lt;code&gt;None&lt;/code&gt; にすることもできます。これは、デフォルト値を使用することを意味します。&lt;em&gt;オブジェクト&lt;/em&gt;が指定されていない場合、&lt;a href=&quot;#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;end&lt;/em&gt;と書き込みます。</target>
        </trans-unit>
        <trans-unit id="04bd0bba21301d490d1f0f4f5b72a1a7c73e3c80" translate="yes" xml:space="preserve">
          <source>All numeric types (except complex) support the following operations (for priorities of the operations, see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#operator-summary&quot;&gt;Operator precedence&lt;/a&gt;):</source>
          <target state="translated">すべての数値型（複素数を除く）は、次の演算をサポートしています（演算の優先順位については、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#operator-summary&quot;&gt;演算子の優先順位を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="ae4d12e51f60163ed8582b4908230a1358d1d3d8" translate="yes" xml:space="preserve">
          <source>All numeric types (except complex) support the following operations (for priorities of the operations, see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#operator-summary&quot;&gt;Operator precedence&lt;/a&gt;):</source>
          <target state="translated">すべての数値タイプ（複合を除く）は、次の操作をサポートします（操作の優先順位については、&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#operator-summary&quot;&gt;演算子の優先順位を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="6665fa2ccce2b7ff1105b3c545c20966ec9a92ac" translate="yes" xml:space="preserve">
          <source>All numeric values can be set to &lt;a href=&quot;#locale.CHAR_MAX&quot;&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;/a&gt; to indicate that there is no value specified in this locale.</source>
          <target state="translated">すべての数値を&lt;a href=&quot;#locale.CHAR_MAX&quot;&gt; &lt;code&gt;CHAR_MAX&lt;/code&gt; &lt;/a&gt;に設定して、このロケールで値が指定されていないことを示すことができます。</target>
        </trans-unit>
        <trans-unit id="1b594fe2c3851296cea213bd7a2a361b71f255ca" translate="yes" xml:space="preserve">
          <source>All of the classes in this module may safely be accessed from multiple threads.</source>
          <target state="translated">このモジュールのすべてのクラスは、複数のスレッドから安全にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="645eb36ba7e57dbbed8d6a760714020cf4ac62b5" translate="yes" xml:space="preserve">
          <source>All of the components of an XML document are subclasses of &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">XMLドキュメントのすべてのコンポーネントは &lt;code&gt;Node&lt;/code&gt; のサブクラスです。</target>
        </trans-unit>
        <trans-unit id="579249eb8333e1522a9306c9dc218208c5dd6079" translate="yes" xml:space="preserve">
          <source>All of the following opcodes use their arguments.</source>
          <target state="translated">以下のオペコードはすべて引数を使用します。</target>
        </trans-unit>
        <trans-unit id="d04e47f9a86b5546a2f86ac6f4ea83613fea27aa" translate="yes" xml:space="preserve">
          <source>All of the functions and methods that accept a &lt;em&gt;timeout&lt;/em&gt; parameter, such as &lt;a href=&quot;#subprocess.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; if the timeout expires before the process exits.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;などの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータを受け入れるすべての関数とメソッドは、プロセスが終了する前にタイムアウトになるとTimeoutExpiredを&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6356cc46033a8c7b9c133294fcdbe6e0be5fcabf" translate="yes" xml:space="preserve">
          <source>All of the methods described below are executed atomically.</source>
          <target state="translated">以下に説明するメソッドはすべてアトミックに実行されます。</target>
        </trans-unit>
        <trans-unit id="1381ad08272119ae9383c4ca5833de30090df2a0" translate="yes" xml:space="preserve">
          <source>All of the objects provided by this module that have &lt;code&gt;acquire()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt; methods can be used as context managers for a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. The &lt;code&gt;acquire()&lt;/code&gt; method will be called when the block is entered, and &lt;code&gt;release()&lt;/code&gt; will be called when the block is exited. Hence, the following snippet:</source>
          <target state="translated">このモジュールが提供する、 &lt;code&gt;acquire()&lt;/code&gt; および &lt;code&gt;release()&lt;/code&gt; メソッドを持つすべてのオブジェクトは、&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントのコンテキストマネージャとして使用できます。 &lt;code&gt;acquire()&lt;/code&gt; メソッドは、ブロックが入力されたときに呼び出される、され、 &lt;code&gt;release()&lt;/code&gt; ブロックを終了するときに呼び出されます。したがって、次のスニペット：</target>
        </trans-unit>
        <trans-unit id="5e070244996e3d3e099fb44c1b936299d39964df" translate="yes" xml:space="preserve">
          <source>All of the objects provided by this module that have &lt;code&gt;acquire()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt; methods can be used as context managers for a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. The &lt;code&gt;acquire()&lt;/code&gt; method will be called when the block is entered, and &lt;code&gt;release()&lt;/code&gt; will be called when the block is exited. Hence, the following snippet:</source>
          <target state="translated">このモジュールによって提供される &lt;code&gt;acquire()&lt;/code&gt; &lt;code&gt;release()&lt;/code&gt; メソッドとrelease（）メソッドを持つすべてのオブジェクトは、&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;ステートメントのコンテキストマネージャーとして使用できます。 &lt;code&gt;acquire()&lt;/code&gt; メソッドは、ブロックが入力されたときに呼び出される、され、 &lt;code&gt;release()&lt;/code&gt; ブロックを終了するときに呼び出されます。したがって、次のスニペット：</target>
        </trans-unit>
        <trans-unit id="426266f1daf6856271c7f10aaf7a44d29269f7a4" translate="yes" xml:space="preserve">
          <source>All of the other &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; methods are invoked by this method in the process of running the application, and thus exist primarily to allow customizing the process.</source>
          <target state="translated">他のすべての&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションの実行プロセスでこのメソッドによって呼び出されるため、主にプロセスのカスタマイズを可能にするために存在します。</target>
        </trans-unit>
        <trans-unit id="361c6eeb57590924defca62876cd3138035cc03c" translate="yes" xml:space="preserve">
          <source>All of the patchers can be used as class decorators. When used in this way they wrap every test method on the class. The patchers recognise methods that start with &lt;code&gt;'test'&lt;/code&gt; as being test methods. This is the same way that the &lt;a href=&quot;unittest#unittest.TestLoader&quot;&gt;&lt;code&gt;unittest.TestLoader&lt;/code&gt;&lt;/a&gt; finds test methods by default.</source>
          <target state="translated">すべてのパッチャーはクラスデコレーターとして使用できます。このように使用すると、クラスのすべてのテストメソッドがラップされます。パッチャーは、 &lt;code&gt;'test'&lt;/code&gt; で始まるメソッドをテストメソッドとして認識します。これは、&lt;a href=&quot;unittest#unittest.TestLoader&quot;&gt; &lt;code&gt;unittest.TestLoader&lt;/code&gt; &lt;/a&gt;がデフォルトでテストメソッドを見つけるのと同じ方法です。</target>
        </trans-unit>
        <trans-unit id="bab58e75ce965a7bd1231cdeac8f8a7d861f2d0d" translate="yes" xml:space="preserve">
          <source>All of the usual dictionary methods are supported. In addition, there is a &lt;em&gt;maps&lt;/em&gt; attribute, a method for creating new subcontexts, and a property for accessing all but the first mapping:</source>
          <target state="translated">通常のすべての辞書メソッドがサポートされています。さらに、&lt;em&gt;maps&lt;/em&gt;属性、新しいサブコンテキストを作成するためのメソッド、および最初のマッピング以外のすべてにアクセスするためのプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="fb1ed368ab426895fc4010d5ccc90be43d6d02bf" translate="yes" xml:space="preserve">
          <source>All of these encodings can only encode 256 of the 1114112 code points defined in Unicode. A simple and straightforward way that can store each Unicode code point, is to store each code point as four consecutive bytes. There are two possibilities: store the bytes in big endian or in little endian order. These two encodings are called &lt;code&gt;UTF-32-BE&lt;/code&gt; and &lt;code&gt;UTF-32-LE&lt;/code&gt; respectively. Their disadvantage is that if e.g. you use &lt;code&gt;UTF-32-BE&lt;/code&gt; on a little endian machine you will always have to swap bytes on encoding and decoding. &lt;code&gt;UTF-32&lt;/code&gt; avoids this problem: bytes will always be in natural endianness. When these bytes are read by a CPU with a different endianness, then bytes have to be swapped though. To be able to detect the endianness of a &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence, there&amp;rsquo;s the so called BOM (&amp;ldquo;Byte Order Mark&amp;rdquo;). This is the Unicode character &lt;code&gt;U+FEFF&lt;/code&gt;. This character can be prepended to every &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence. The byte swapped version of this character (&lt;code&gt;0xFFFE&lt;/code&gt;) is an illegal character that may not appear in a Unicode text. So when the first character in an &lt;code&gt;UTF-16&lt;/code&gt; or &lt;code&gt;UTF-32&lt;/code&gt; byte sequence appears to be a &lt;code&gt;U+FFFE&lt;/code&gt; the bytes have to be swapped on decoding. Unfortunately the character &lt;code&gt;U+FEFF&lt;/code&gt; had a second purpose as a &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt;: a character that has no width and doesn&amp;rsquo;t allow a word to be split. It can e.g. be used to give hints to a ligature algorithm. With Unicode 4.0 using &lt;code&gt;U+FEFF&lt;/code&gt; as a &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; has been deprecated (with &lt;code&gt;U+2060&lt;/code&gt; (&lt;code&gt;WORD JOINER&lt;/code&gt;) assuming this role). Nevertheless Unicode software still must be able to handle &lt;code&gt;U+FEFF&lt;/code&gt; in both roles: as a BOM it&amp;rsquo;s a device to determine the storage layout of the encoded bytes, and vanishes once the byte sequence has been decoded into a string; as a &lt;code&gt;ZERO WIDTH
NO-BREAK SPACE&lt;/code&gt; it&amp;rsquo;s a normal character that will be decoded like any other.</source>
          <target state="translated">これらのエンコーディングはすべて、Unicodeで定義されている1114112コードポイントのうち256のみをエンコードできます。各Unicodeコードポイントを格納できるシンプルで簡単な方法は、各コードポイントを4つの連続したバイトとして格納することです。 2つの可能性があります。バイトをビッグエンディアン順またはリトルエンディアン順で格納します。これらの2つのエンコーディングは、それぞれ &lt;code&gt;UTF-32-BE&lt;/code&gt; および &lt;code&gt;UTF-32-LE&lt;/code&gt; と呼ばれます。たとえば、リトルエンディアンのマシンで &lt;code&gt;UTF-32-BE&lt;/code&gt; を使用する場合、エンコーディングとデコーディングで常にバイトを交換する必要があるという欠点があります。 &lt;code&gt;UTF-32&lt;/code&gt; はこの問題を回避します。バイトは常に自然なエンディアン方式になります。エンディアンが異なるCPUがこれらのバイトを読み取る場合、バイトを交換する必要があります。のエンディアンを検出できるようにするには &lt;code&gt;UTF-16&lt;/code&gt; または &lt;code&gt;UTF-32&lt;/code&gt; バイトシーケンス、いわゆるBOM（「バイトオーダーマーク」）があります。これはUnicode文字 &lt;code&gt;U+FEFF&lt;/code&gt; です。この文字は、すべての &lt;code&gt;UTF-16&lt;/code&gt; または &lt;code&gt;UTF-32&lt;/code&gt; バイトシーケンスの先頭に追加できます。この文字のバイトスワップバージョン（ &lt;code&gt;0xFFFE&lt;/code&gt; ）は、Unicodeテキストに表示されない可能性がある無効な文字です。そのため、 &lt;code&gt;UTF-16&lt;/code&gt; または &lt;code&gt;UTF-32&lt;/code&gt; バイトシーケンスの最初の文字が &lt;code&gt;U+FFFE&lt;/code&gt; のように見える場合、デコード時にバイトを交換する必要があります。残念ながら、文字 &lt;code&gt;U+FEFF&lt;/code&gt; には、 &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; としての2番目の目的がありました。：幅がなく、単語を分割できない文字。たとえば、合字アルゴリズムにヒントを与えるために使用できます。 Unicode 4.0では、 &lt;code&gt;U+FEFF&lt;/code&gt; を &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; として使用することは推奨されていません（この役割は &lt;code&gt;U+2060&lt;/code&gt; （ &lt;code&gt;WORD JOINER&lt;/code&gt; ）で想定されています）。それでも、Unicodeソフトウェアは、両方の役割で &lt;code&gt;U+FEFF&lt;/code&gt; を処理できる必要があります。BOMとしては、エンコードされたバイトのストレージレイアウトを決定するデバイスであり、バイトシーケンスが文字列にデコードされると消失します。 &lt;code&gt;ZERO WIDTH NO-BREAK SPACE&lt;/code&gt; としては、他のようにデコードされる通常の文字です。</target>
        </trans-unit>
        <trans-unit id="608f0188bcbb97cbbc13a474f23016a327d60ea0" translate="yes" xml:space="preserve">
          <source>All of these functions accept either only bytes or only string objects as their parameters. The result is an object of the same type, if a path or file name is returned.</source>
          <target state="translated">これらの関数はすべて、パラメータとしてバイトのみ、または文字列オブジェクトのみを受け付けます。パスやファイル名が返された場合、結果は同じ型のオブジェクトとなります。</target>
        </trans-unit>
        <trans-unit id="5ffe41514d0ba0c7681ed589014b164ed58ca272" translate="yes" xml:space="preserve">
          <source>All option names used in interpolation will be passed through the &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; method just like any other option name reference. For example, using the default implementation of &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; (which converts option names to lower case), the values &lt;code&gt;foo %(bar)s&lt;/code&gt; and &lt;code&gt;foo
%(BAR)s&lt;/code&gt; are equivalent.</source>
          <target state="translated">補間で使用されるすべてのオプション名は、他のオプション名参照と同様に、&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; &lt;/a&gt;メソッドを介して渡されます。たとえば、&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; の&lt;/a&gt;デフォルトの実装（オプション名を小文字に変換する）を使用すると、値 &lt;code&gt;foo %(bar)s&lt;/code&gt; と &lt;code&gt;foo %(BAR)s&lt;/code&gt; は同等になります。</target>
        </trans-unit>
        <trans-unit id="8653fe45c3a0598bc76268bebd81e9303afe45cd" translate="yes" xml:space="preserve">
          <source>All optional arguments and some positional arguments may be omitted at the command line. The &lt;code&gt;default&lt;/code&gt; keyword argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;, whose value defaults to &lt;code&gt;None&lt;/code&gt;, specifies what value should be used if the command-line argument is not present. For optional arguments, the &lt;code&gt;default&lt;/code&gt; value is used when the option string was not present at the command line:</source>
          <target state="translated">すべてのオプションの引数と一部の位置引数は、コマンドラインで省略できます。&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;default&lt;/code&gt; キーワード引数は値がデフォルトで &lt;code&gt;None&lt;/code&gt; になっており、コマンドライン引数が存在しない場合に使用する値を指定します。オプションの引数の場合、オプション文字列がコマンドラインに存在しない場合、 &lt;code&gt;default&lt;/code&gt; 値が使用されます。</target>
        </trans-unit>
        <trans-unit id="ce2357893bbf0135effa63850776998057d31bea" translate="yes" xml:space="preserve">
          <source>All other keys are optional, but if present they will be interpreted as described below. In all cases below where a &amp;lsquo;configuring dict&amp;rsquo; is mentioned, it will be checked for the special &lt;code&gt;'()'&lt;/code&gt; key to see if a custom instantiation is required. If so, the mechanism described in &lt;a href=&quot;#logging-config-dict-userdef&quot;&gt;User-defined objects&lt;/a&gt; below is used to create an instance; otherwise, the context is used to determine what to instantiate.</source>
          <target state="translated">他のすべてのキーはオプションですが、存在する場合は、以下で説明するように解釈されます。以下の「dictの設定」が言及されているすべてのケースでは、特別な &lt;code&gt;'()'&lt;/code&gt; キーがチェックされ、カスタムのインスタンス化が必要かどうかが確認されます。その場合、以下の&lt;a href=&quot;#logging-config-dict-userdef&quot;&gt;ユーザー定義オブジェクトで&lt;/a&gt;説明するメカニズムを使用してインスタンスを作成します。それ以外の場合、コンテキストを使用して、何をインスタンス化するかを決定します。</target>
        </trans-unit>
        <trans-unit id="19335cd87d8044146043baea7e04506def10ffde" translate="yes" xml:space="preserve">
          <source>All other keystrokes are treated as a command to insert the given character and move right (with line wrapping).</source>
          <target state="translated">その他のすべてのキーストロークは、指定された文字を挿入して右に移動するコマンドとして扱われます(行の折り返しあり)。</target>
        </trans-unit>
        <trans-unit id="aa448210156c802173864da10c49485e10eee030" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed to &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; without interpretation, except for &lt;em&gt;bufsize&lt;/em&gt;, &lt;em&gt;universal_newlines&lt;/em&gt;, &lt;em&gt;shell&lt;/em&gt;, &lt;em&gt;text&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt;, which should not be specified at all.</source>
          <target state="translated">他のすべてのキーワード引数は、&lt;em&gt;bufsize&lt;/em&gt;、&lt;em&gt;universal_newlines&lt;/em&gt;、&lt;em&gt;shell&lt;/em&gt;、&lt;em&gt;text&lt;/em&gt;、&lt;em&gt;encoding&lt;/em&gt;、および&lt;em&gt;errors&lt;/em&gt;を除いて、解釈せずに&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; に&lt;/a&gt;渡されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66331451f6a993bd6a4ec3db875b698eaae7b08f" translate="yes" xml:space="preserve">
          <source>All other optional or keyword arguments are passed to the underlying &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">他のすべてのオプション引数またはキーワード引数は、基になる&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;インスタンスに渡されます。</target>
        </trans-unit>
        <trans-unit id="f419bef4528bc4f1cc65289d46c00cb83ec30fa2" translate="yes" xml:space="preserve">
          <source>All parameterized generics implement special read-only attributes.</source>
          <target state="translated">すべてのパラメータ化されたジェネリックは、特別な読み取り専用属性を実装しています。</target>
        </trans-unit>
        <trans-unit id="00cca373364efaf0f83bf84be29776f4417aa391" translate="yes" xml:space="preserve">
          <source>All pending input is processed, and a bytes object containing the remaining compressed output is returned. &lt;em&gt;mode&lt;/em&gt; can be selected from the constants &lt;code&gt;Z_NO_FLUSH&lt;/code&gt;, &lt;code&gt;Z_PARTIAL_FLUSH&lt;/code&gt;, &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt;, &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;, &lt;code&gt;Z_BLOCK&lt;/code&gt; (zlib 1.2.3.4), or &lt;code&gt;Z_FINISH&lt;/code&gt;, defaulting to &lt;code&gt;Z_FINISH&lt;/code&gt;. Except &lt;code&gt;Z_FINISH&lt;/code&gt;, all constants allow compressing further bytestrings of data, while &lt;code&gt;Z_FINISH&lt;/code&gt; finishes the compressed stream and prevents compressing any more data. After calling &lt;a href=&quot;#zlib.Compress.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; with &lt;em&gt;mode&lt;/em&gt; set to &lt;code&gt;Z_FINISH&lt;/code&gt;, the &lt;a href=&quot;#zlib.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; method cannot be called again; the only realistic action is to delete the object.</source>
          <target state="translated">保留中の入力はすべて処理され、残りの圧縮された出力を含むbytesオブジェクトが返されます。&lt;em&gt;モード&lt;/em&gt;は、定数 &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_PARTIAL_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; 、 &lt;code&gt;Z_BLOCK&lt;/code&gt; （zlib 1.2.3.4）、または &lt;code&gt;Z_FINISH&lt;/code&gt; から &lt;code&gt;Z_FINISH&lt;/code&gt; でき、デフォルトはZ_FINISHです。 &lt;code&gt;Z_FINISH&lt;/code&gt; を除き、すべての定数でデータのバイト文字列をさらに圧縮できますが、 &lt;code&gt;Z_FINISH&lt;/code&gt; は圧縮されたストリームを終了し、それ以上のデータの圧縮を防ぎます。&lt;em&gt;モード&lt;/em&gt;を &lt;code&gt;Z_FINISH&lt;/code&gt; に設定して&lt;a href=&quot;#zlib.Compress.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;を呼び出した後、&lt;a href=&quot;#zlib.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;メソッドを再度呼び出すことはできません。唯一の現実的なアクションは、オブジェクトを削除することです。</target>
        </trans-unit>
        <trans-unit id="845f9f346c71bf5f52a9188ace35c5ecaa3ed3df" translate="yes" xml:space="preserve">
          <source>All pending input is processed, and a bytes object containing the remaining uncompressed output is returned. After calling &lt;a href=&quot;#zlib.Decompress.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#zlib.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method cannot be called again; the only realistic action is to delete the object.</source>
          <target state="translated">保留中のすべての入力が処理され、残りの非圧縮出力を含むbytesオブジェクトが返されます。&lt;a href=&quot;#zlib.Decompress.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; を&lt;/a&gt;呼び出した後、&lt;a href=&quot;#zlib.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;メソッドを再度呼び出すことはできません。唯一の現実的なアクションは、オブジェクトを削除することです。</target>
        </trans-unit>
        <trans-unit id="fc9ede07789c80374474bed5143b787444e15389" translate="yes" xml:space="preserve">
          <source>All platforms support sockets as &lt;em&gt;out&lt;/em&gt; file descriptor, and some platforms allow other types (e.g. regular file, pipe) as well.</source>
          <target state="translated">すべてのプラットフォームは&lt;em&gt;アウト&lt;/em&gt;ファイル記述子としてソケットをサポートし、一部のプラットフォームでは他のタイプ（通常のファイル、パイプなど）も許可します。</target>
        </trans-unit>
        <trans-unit id="3aaaab94fa36cef60d2f0e96539ccc4e2de8c1f2" translate="yes" xml:space="preserve">
          <source>All platforms support sockets as &lt;em&gt;out_fd&lt;/em&gt; file descriptor, and some platforms allow other types (e.g. regular file, pipe) as well.</source>
          <target state="translated">すべてのプラットフォームは&lt;em&gt;out_fd&lt;/em&gt;ファイル記述子としてソケットをサポートし、一部のプラットフォームは他のタイプ（通常のファイル、パイプなど）も許可します。</target>
        </trans-unit>
        <trans-unit id="1a103db9094a7f0996094f573e4e6dea84bed483" translate="yes" xml:space="preserve">
          <source>All recipient addresses refused. The errors for each recipient are accessible through the attribute &lt;code&gt;recipients&lt;/code&gt;, which is a dictionary of exactly the same sort as &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;SMTP.sendmail()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">すべての受信者アドレスが拒否されました。各受信者のエラーには、属性 &lt;code&gt;recipients&lt;/code&gt; を介してアクセスできます。これは、&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;SMTP.sendmail()&lt;/code&gt; &lt;/a&gt;が返すのとまったく同じ種類の辞書です。</target>
        </trans-unit>
        <trans-unit id="d5e2d016729108cbe2a6252b7e9f9f25b138be7a" translate="yes" xml:space="preserve">
          <source>All recipients were refused. Nobody got the mail. The &lt;code&gt;recipients&lt;/code&gt; attribute of the exception object is a dictionary with information about the refused recipients (like the one returned when at least one recipient was accepted).</source>
          <target state="translated">すべての受信者が拒否されました。誰もメールを受け取りませんでした。例外オブジェクトの &lt;code&gt;recipients&lt;/code&gt; 属性は、拒否された受信者（少なくとも1人の受信者が受け入れられたときに返されるものなど）に関する情報を含む辞書です。</target>
        </trans-unit>
        <trans-unit id="ed7add52656f73c9f9ee77cb2062c4141e037209" translate="yes" xml:space="preserve">
          <source>All registry functions in this module return one of these objects.</source>
          <target state="translated">このモジュールのすべてのレジストリ関数は、これらのオブジェクトのいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="d2fe55d4566c1ed0919fec63b9086185e8f09e18" translate="yes" xml:space="preserve">
          <source>All registry functions in this module which accept a handle object also accept an integer, however, use of the handle object is encouraged.</source>
          <target state="translated">このモジュール内のすべてのレジストリ関数でハンドルオブジェクトを受け付けるものは整数も受け付けることができますが、ハンドルオブジェクトの使用を推奨します。</target>
        </trans-unit>
        <trans-unit id="10ada46f1636db2c68259c55e5dbc2108cc9bb8a" translate="yes" xml:space="preserve">
          <source>All sections include &lt;code&gt;DEFAULTSECT&lt;/code&gt; values as well which means that &lt;code&gt;.clear()&lt;/code&gt; on a section may not leave the section visibly empty. This is because default values cannot be deleted from the section (because technically they are not there). If they are overridden in the section, deleting causes the default value to be visible again. Trying to delete a default value causes a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべてのセクションには &lt;code&gt;DEFAULTSECT&lt;/code&gt; 値も含まれます。つまり、 &lt;code&gt;.clear()&lt;/code&gt; がセクションを目に見えて空のままにしない場合があります。これは、セクションからデフォルト値を削除できないためです（技術的には存在しないため）。セクションでオーバーライドされている場合、削除するとデフォルト値が再び表示されます。デフォルト値を削除しようとすると、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="98e89195defbf174865e4ed3cfadb43c73afc721" translate="yes" xml:space="preserve">
          <source>All start methods</source>
          <target state="translated">すべての開始方法</target>
        </trans-unit>
        <trans-unit id="75d16b8bb98cb55dff06e1fc0c1ed62ef7d52a39" translate="yes" xml:space="preserve">
          <source>All stream readers must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">すべてのストリームリーダは、このコンストラクタインターフェースを提供しなければなりません。キーワード引数を追加するのは自由ですが、ここで定義されているものだけが Python のコーデックレジストリで使用されます。</target>
        </trans-unit>
        <trans-unit id="26bf04c11ae57a8dd9464a075f980fb924cc9927" translate="yes" xml:space="preserve">
          <source>All stream writers must provide this constructor interface. They are free to add additional keyword arguments, but only the ones defined here are used by the Python codec registry.</source>
          <target state="translated">すべてのストリームライターは、このコンストラクタインターフェースを提供しなければなりません。キーワード引数を追加するのは自由ですが、ここで定義されているものだけが Python のコーデックレジストリで使用されます。</target>
        </trans-unit>
        <trans-unit id="511adfa816e0d1230d548ef9bee4b8cae3ba51aa" translate="yes" xml:space="preserve">
          <source>All streams are careful about the type of data you give to them. For example giving a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;write()&lt;/code&gt; method of a binary stream will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. So will giving a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;write()&lt;/code&gt; method of a text stream.</source>
          <target state="translated">すべてのストリームは、それらに与えるデータのタイプに注意します。たとえば、バイナリストリームの &lt;code&gt;write()&lt;/code&gt; メソッドに&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトを渡すと、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生し&lt;/a&gt;ます。したがって、テキストストリームの &lt;code&gt;write()&lt;/code&gt; メソッドに&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="8cfe73a6df86f8c591b70da4f2a97d04f73d2842" translate="yes" xml:space="preserve">
          <source>All subclasses of &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; inherit a predefined &lt;code&gt;do_help()&lt;/code&gt;. This method, called with an argument &lt;code&gt;'bar'&lt;/code&gt;, invokes the corresponding method &lt;code&gt;help_bar()&lt;/code&gt;, and if that is not present, prints the docstring of &lt;code&gt;do_bar()&lt;/code&gt;, if available. With no argument, &lt;code&gt;do_help()&lt;/code&gt; lists all available help topics (that is, all commands with corresponding &lt;code&gt;help_*()&lt;/code&gt; methods or commands that have docstrings), and also lists any undocumented commands.</source>
          <target state="translated">&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; の&lt;/a&gt;すべてのサブクラスは、事前定義された &lt;code&gt;do_help()&lt;/code&gt; を継承します。引数 &lt;code&gt;'bar'&lt;/code&gt; を指定して呼び出されるこのメソッドは、対応するメソッド &lt;code&gt;help_bar()&lt;/code&gt; を呼び出し、それが存在しない場合は、利用可能な場合は &lt;code&gt;do_bar()&lt;/code&gt; の docstringを出力します。引数を指定しない場合、 &lt;code&gt;do_help()&lt;/code&gt; は使用可能なすべてのヘルプトピック（つまり、対応する &lt;code&gt;help_*()&lt;/code&gt; メソッドを持つすべてのコマンドまたはdocstringsを持つコマンド）をリストし、ドキュメント化されていないコマンドもリストします。</target>
        </trans-unit>
        <trans-unit id="16bfa0e96351e7a39a097e3fa26ad685c6d79d8d" translate="yes" xml:space="preserve">
          <source>All tasks waiting for event to be set will be immediately awakened.</source>
          <target state="translated">イベントの設定を待っている全てのタスクが即座に覚醒します。</target>
        </trans-unit>
        <trans-unit id="4b0d4a1283ee19c5afe6ce70d63cdcdf8e6081cc" translate="yes" xml:space="preserve">
          <source>All test modules must be importable from the top level of the project. If the start directory is not the top level directory then the top level directory must be specified separately.</source>
          <target state="translated">すべてのテストモジュールは、プロジェクトのトップレベルからインポート可能でなければなりません。スタートディレクトリがトップレベルディレクトリでない場合は、トップレベルディレクトリを別途指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="95e86b0a592b2672e5e54dba5071e87a49d334f8" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;'%'&lt;/code&gt; interpolations are expanded in the return values, unless the &lt;em&gt;raw&lt;/em&gt; argument is true. Values for interpolation keys are looked up in the same manner as the option.</source>
          <target state="translated">&lt;em&gt;raw&lt;/em&gt;引数がtrue でない限り、すべての &lt;code&gt;'%'&lt;/code&gt; 補間は戻り値で展開されます。補間キーの値は、オプションと同じ方法で検索されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68ec4ea8caa603e129e1cdd2dda1c8e8f88e770a" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;ttk&lt;/code&gt; Widgets accepts the following options:</source>
          <target state="translated">すべての &lt;code&gt;ttk&lt;/code&gt; ウィジェットは、次のオプションを受け入れます。</target>
        </trans-unit>
        <trans-unit id="a0aa67ee5d395c9a58857bc43029eb764f978551" translate="yes" xml:space="preserve">
          <source>All the assert methods accept a &lt;em&gt;msg&lt;/em&gt; argument that, if specified, is used as the error message on failure (see also &lt;a href=&quot;#unittest.TestCase.longMessage&quot;&gt;&lt;code&gt;longMessage&lt;/code&gt;&lt;/a&gt;). Note that the &lt;em&gt;msg&lt;/em&gt; keyword argument can be passed to &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;assertRaisesRegex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.assertWarnsRegex&quot;&gt;&lt;code&gt;assertWarnsRegex()&lt;/code&gt;&lt;/a&gt; only when they are used as a context manager.</source>
          <target state="translated">すべてのassertメソッドは、指定された場合、失敗時のエラーメッセージとして使用される&lt;em&gt;msg&lt;/em&gt;引数を受け入れます（&lt;a href=&quot;#unittest.TestCase.longMessage&quot;&gt; &lt;code&gt;longMessage&lt;/code&gt; &lt;/a&gt;も参照してください）。そのノート&lt;em&gt;のMSG&lt;/em&gt;キーワード引数がに渡すことができる&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;assertRaisesRegex()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unittest.TestCase.assertWarnsRegex&quot;&gt; &lt;code&gt;assertWarnsRegex()&lt;/code&gt; &lt;/a&gt;それらは、コンテキストマネージャとして使用される場合にのみ。</target>
        </trans-unit>
        <trans-unit id="ba0ad57eff10b2932e3d0da3c26b31a3d89093f7" translate="yes" xml:space="preserve">
          <source>All the patchers have &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;stop()&lt;/code&gt; methods. These make it simpler to do patching in &lt;code&gt;setUp&lt;/code&gt; methods or where you want to do multiple patches without nesting decorators or with statements.</source>
          <target state="translated">すべてのパッチャーには、 &lt;code&gt;start()&lt;/code&gt; および &lt;code&gt;stop()&lt;/code&gt; メソッドがあります。これらを使用すると、 &lt;code&gt;setUp&lt;/code&gt; メソッドでパッチを適用したり、デコレータをネストしたりステートメントを使用したりせずに複数のパッチを適用したりすることが簡単になります。</target>
        </trans-unit>
        <trans-unit id="d968b7a25570658373a5f6b61449439744c226ea" translate="yes" xml:space="preserve">
          <source>All the signal numbers are defined symbolically. For example, the hangup signal is defined as &lt;a href=&quot;#signal.SIGHUP&quot;&gt;&lt;code&gt;signal.SIGHUP&lt;/code&gt;&lt;/a&gt;; the variable names are identical to the names used in C programs, as found in &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt;. The Unix man page for &amp;lsquo;&lt;code&gt;signal()&lt;/code&gt;&amp;rsquo; lists the existing signals (on some systems this is &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt;, on others the list is in &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal(7)&lt;/a&gt;&lt;/em&gt;). Note that not all systems define the same set of signal names; only those names defined by the system are defined by this module.</source>
          <target state="translated">すべての信号番号はシンボリックに定義されています。たとえば、ハングアップシグナルは&lt;a href=&quot;#signal.SIGHUP&quot;&gt; &lt;code&gt;signal.SIGHUP&lt;/code&gt; &lt;/a&gt; ;として定義されます。変数名は、 &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt; にあるCプログラムで使用されている名前と同じです。' &lt;code&gt;signal()&lt;/code&gt; 'のUnixマニュアルページには、既存のシグナルがリストされています（一部のシステムでは、これは&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal（2）&lt;/a&gt;&lt;/em&gt;であり、他のシステムでは、リストは&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal（7）にあります&lt;/a&gt;&lt;/em&gt;）。すべてのシステムが同じ信号名のセットを定義しているわけではないことに注意してください。システムによって定義された名前のみがこのモジュールによって定義されます。</target>
        </trans-unit>
        <trans-unit id="89b3a6c16b642ad7026440e7678571fdc94dcd20" translate="yes" xml:space="preserve">
          <source>All the signal numbers are defined symbolically. For example, the hangup signal is defined as &lt;code&gt;signal.SIGHUP&lt;/code&gt;; the variable names are identical to the names used in C programs, as found in &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt;. The Unix man page for &amp;lsquo;&lt;code&gt;signal()&lt;/code&gt;&amp;rsquo; lists the existing signals (on some systems this is &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt;, on others the list is in &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal(7)&lt;/a&gt;&lt;/em&gt;). Note that not all systems define the same set of signal names; only those names defined by the system are defined by this module.</source>
          <target state="translated">すべての信号番号は記号で定義されています。たとえば、ハングアップシグナルは &lt;code&gt;signal.SIGHUP&lt;/code&gt; として定義されます。変数名は、 &lt;code&gt;&amp;lt;signal.h&amp;gt;&lt;/code&gt; にあるCプログラムで使用される名前と同じです。' &lt;code&gt;signal()&lt;/code&gt; ' のUnixマニュアルページには、既存のシグナルがリストされています（一部のシステムでは、これは&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal（2）&lt;/a&gt;&lt;/em&gt;です。他のシステムでは、リストは&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(7)&quot;&gt;signal（7）にあります&lt;/a&gt;&lt;/em&gt;）。すべてのシステムが同じ信号名のセットを定義しているわけではないことに注意してください。このモジュールで定義されるのは、システムで定義されている名前だけです。</target>
        </trans-unit>
        <trans-unit id="a718f5f334bffff82ac9ca18a26df3475e054a96" translate="yes" xml:space="preserve">
          <source>All the user-callable functions and constructors take additional arguments which allow direct control over the location and name of temporary files and directories. Files names used by this module include a string of random characters which allows those files to be securely created in shared temporary directories. To maintain backward compatibility, the argument order is somewhat odd; it is recommended to use keyword arguments for clarity.</source>
          <target state="translated">すべてのユーザ呼び出し可能な関数とコンストラクタは追加の引数を取り、一時ファイルとディレクトリの場所と名前を直接制御することができます。このモジュールで使用されるファイル名にはランダムな文字列が含まれており、これによりファイルが共有の一時ディレクトリに安全に作成されるようになります。後方互換性を維持するために、引数の順序は多少変わっています;わかりやすくするためにキーワード引数を使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27ab5e9ece9f6fec3cae084274e655c615da7669" translate="yes" xml:space="preserve">
          <source>All the variables below are simply symbolic indexes into the 10-tuple returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のすべての変数は、&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;によって返される10タプルへのシンボリックインデックスです。</target>
        </trans-unit>
        <trans-unit id="8a1874be964dba6caf7536a5f6cdb4d12bf2f501" translate="yes" xml:space="preserve">
          <source>All these classes can be instantiated by calling them with at least one argument, the pathname of the shared library. If you have an existing handle to an already loaded shared library, it can be passed as the &lt;code&gt;handle&lt;/code&gt; named parameter, otherwise the underlying platforms &lt;code&gt;dlopen&lt;/code&gt; or &lt;code&gt;LoadLibrary&lt;/code&gt; function is used to load the library into the process, and to get a handle to it.</source>
          <target state="translated">これらのクラスはすべて、少なくとも1つの引数（共有ライブラリのパス名）を指定してインスタンス化できます。既にロードされている共有ライブラリへの既存のハンドルがある場合、それを &lt;code&gt;handle&lt;/code&gt; 名前付きパラメーターとして渡すことができます。それ以外の場合は、基になるプラットフォームの &lt;code&gt;dlopen&lt;/code&gt; または &lt;code&gt;LoadLibrary&lt;/code&gt; 関数を使用して、ライブラリをプロセスにロードし、そのハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="417f37663be75dee9f473867fc0f32047be90a11" translate="yes" xml:space="preserve">
          <source>All these types can be created by calling them with an optional initializer of the correct type and value:</source>
          <target state="translated">これらの型はすべて、正しい型と値のオプションのイニシャライザを指定して呼び出すことで作成できます。</target>
        </trans-unit>
        <trans-unit id="155ee124577e1fe137df7c33d4f6d23d523b7db8" translate="yes" xml:space="preserve">
          <source>All transports implement the following methods:</source>
          <target state="translated">すべてのトランスポートは以下のメソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="0861f5cc7168426f537bde444cc103b430c6b13c" translate="yes" xml:space="preserve">
          <source>All wrappers around MSI functions raise &lt;code&gt;MSIError&lt;/code&gt;; the string inside the exception will contain more detail.</source>
          <target state="translated">MSI関数のすべてのラッパーは &lt;code&gt;MSIError&lt;/code&gt; を発生させます。例外内の文字列には詳細が含まれます。</target>
        </trans-unit>
        <trans-unit id="edffc8bbc8f24bd588ae17bcfd535bebc57f13ec" translate="yes" xml:space="preserve">
          <source>Allow an application to set the locale for errors and warnings.</source>
          <target state="translated">アプリケーションがエラーや警告のロケールを設定できるようにします。</target>
        </trans-unit>
        <trans-unit id="603dd6037e099395a31f0e59c9ba1913159c4a7e" translate="yes" xml:space="preserve">
          <source>Allow encoding and decoding of surrogate codes. These codecs normally treat the presence of surrogates as an error.</source>
          <target state="translated">サロゲートコードのエンコードとデコードを許可する。これらのコーデックは通常、サロゲートの存在をエラーとして扱う。</target>
        </trans-unit>
        <trans-unit id="1e19ac51136d0637f9af6d20c7258158d6721dc5" translate="yes" xml:space="preserve">
          <source>Allow simple extension commands notified by server in &lt;code&gt;CAPABILITY&lt;/code&gt; response.</source>
          <target state="translated">&lt;code&gt;CAPABILITY&lt;/code&gt; 応答でサーバーから通知される単純な拡張コマンドを許可します。</target>
        </trans-unit>
        <trans-unit id="ef317f8483480a64e1b0dccb14f7bb6883cce1dc" translate="yes" xml:space="preserve">
          <source>Allow use of default values for colors on terminals supporting this feature. Use this to support transparency in your application. The default color is assigned to the color number &lt;code&gt;-1&lt;/code&gt;. After calling this function, &lt;code&gt;init_pair(x,
curses.COLOR_RED, -1)&lt;/code&gt; initializes, for instance, color pair &lt;em&gt;x&lt;/em&gt; to a red foreground color on the default background.</source>
          <target state="translated">この機能をサポートする端末の色のデフォルト値の使用を許可します。これを使用して、アプリケーションの透過性をサポートします。デフォルトの色は、色番号 &lt;code&gt;-1&lt;/code&gt; に割り当てられます。この関数を呼び出した後、 &lt;code&gt;init_pair(x, curses.COLOR_RED, -1)&lt;/code&gt; は、たとえば、色ペア&lt;em&gt;x&lt;/em&gt;をデフォルトの背景の赤の前景色に初期化します。</target>
        </trans-unit>
        <trans-unit id="9af2608dce4ccd3a4d7fe7ccd5d8a999659ec6be" translate="yes" xml:space="preserve">
          <source>Allow wildcard when it is the leftmost and the only character in that segment. Partial wildcards like &lt;code&gt;www*.example.com&lt;/code&gt; are no longer supported.</source>
          <target state="translated">左端でそのセグメントの唯一の文字である場合、ワイルドカードを許可します。 &lt;code&gt;www*.example.com&lt;/code&gt; のような部分的なワイルドカードはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="d545cb48e8fe2e090c8d20ba1902d68904e84436" translate="yes" xml:space="preserve">
          <source>Allowed members and attributes of enumerations</source>
          <target state="translated">列挙の許可されたメンバと属性</target>
        </trans-unit>
        <trans-unit id="27759cb686cd5bf827a6e5a82d77411f516dc61c" translate="yes" xml:space="preserve">
          <source>Allowing alternative option prefixes like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; や &lt;code&gt;/&lt;/code&gt; などの代替オプション接頭辞を許可します。</target>
        </trans-unit>
        <trans-unit id="a6ebd07370440c663e4f0e55185f972d0240507b" translate="yes" xml:space="preserve">
          <source>Allowing applications to identify and clear their own uncollectable types when they appear in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt;に表示されたときに、収集できない独自のタイプを識別してクリアできるようにします。</target>
        </trans-unit>
        <trans-unit id="1698c3d6368b675b56ce12b0b386c7be180d6706" translate="yes" xml:space="preserve">
          <source>Allowing non-resource names to be returned is to allow for situations where how a package and its resources are stored are known a priori and the non-resource names would be useful. For instance, returning subdirectory names is allowed so that when it is known that the package and resources are stored on the file system then those subdirectory names can be used directly.</source>
          <target state="translated">リソース以外の名前を返すことを許可するのは、パッケージとそのリソースがどのように格納されているかが事前にわかっていて、 リソース以外の名前が便利な状況を可能にするためです。例えば、サブディレクトリ名を返すことで、パッケージとリソースがファイルシステム上に保存されていることがわかっているときに、それらのサブディレクトリ名を直接使用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="b68e07d7d7b9f4e84654d4589ca6f207be1705b6" translate="yes" xml:space="preserve">
          <source>Allowing subclassing of enums that define members would lead to a violation of some important invariants of types and instances. On the other hand, it makes sense to allow sharing some common behavior between a group of enumerations. (See &lt;a href=&quot;#orderedenum&quot;&gt;OrderedEnum&lt;/a&gt; for an example.)</source>
          <target state="translated">メンバーを定義する列挙型のサブクラス化を許可すると、型とインスタンスのいくつかの重要な不変条件に違反します。一方、列挙のグループ間でいくつかの共通の動作を共有できるようにすることは理にかなっています。（例については&lt;a href=&quot;#orderedenum&quot;&gt;OrderedEnum&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="5168b39c43df53db082b41562ffb47b2581e0dfa" translate="yes" xml:space="preserve">
          <source>Allows customizing how exceptions are handled in the event loop.</source>
          <target state="translated">イベントループで例外をどのように処理するかをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="3af65b7b8a24fd1ab3b136e24dca1bdc29a79fcb" translate="yes" xml:space="preserve">
          <source>Allows enabling or disabling coroutine origin tracking. When enabled, the &lt;code&gt;cr_origin&lt;/code&gt; attribute on coroutine objects will contain a tuple of (filename, line number, function name) tuples describing the traceback where the coroutine object was created, with the most recent call first. When disabled, &lt;code&gt;cr_origin&lt;/code&gt; will be None.</source>
          <target state="translated">コルーチン起点追跡を有効または無効にすることができます。有効にすると、コルーチンオブジェクトの &lt;code&gt;cr_origin&lt;/code&gt; 属性には、コルーチンオブジェクトが作成されたトレースバックを記述する（ファイル名、行番号、関数名）タプルのタプルが含まれ、最新の呼び出しが最初になります。無効にすると、 &lt;code&gt;cr_origin&lt;/code&gt; はNoneになります。</target>
        </trans-unit>
        <trans-unit id="738636a3be8341b9cebe3dd58e0680a5032b2eea" translate="yes" xml:space="preserve">
          <source>Allows specifying that the module named &lt;em&gt;oldname&lt;/em&gt; is in fact the package named &lt;em&gt;newname&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;oldname&lt;/em&gt;という名前のモジュールが実際に&lt;em&gt;newname&lt;/em&gt;という名前のパッケージであることを指定できます。</target>
        </trans-unit>
        <trans-unit id="1e8494b281173c0688479a4b6438c4a9f916278d" translate="yes" xml:space="preserve">
          <source>Allows you to compare data with unknown or inconsistent encoding. All inputs except &lt;em&gt;n&lt;/em&gt; must be bytes objects, not str. Works by losslessly converting all inputs (except &lt;em&gt;n&lt;/em&gt;) to str, and calling &lt;code&gt;dfunc(a, b,
fromfile, tofile, fromfiledate, tofiledate, n, lineterm)&lt;/code&gt;. The output of &lt;em&gt;dfunc&lt;/em&gt; is then converted back to bytes, so the delta lines that you receive have the same unknown/inconsistent encodings as &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">不明または一貫性のないエンコーディングでデータを比較できます。&lt;em&gt;n&lt;/em&gt;を除くすべての入力は、strではなくbytesオブジェクトでなければなりません。すべての入力（&lt;em&gt;n&lt;/em&gt;を除く）をロスレスでstrに変換し、 &lt;code&gt;dfunc(a, b, fromfile, tofile, fromfiledate, tofiledate, n, lineterm)&lt;/code&gt; ます。次に、&lt;em&gt;dfunc&lt;/em&gt;の出力はバイトに変換されます。そのため、受け取るデルタライン&lt;em&gt;は&lt;/em&gt;、&lt;em&gt;a&lt;/em&gt;および&lt;em&gt;b&lt;/em&gt;と同じ不明/不整合のエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="18dea076b2e37e15d1b1e3961b5af0025bae1395" translate="yes" xml:space="preserve">
          <source>Almost all asyncio objects are not thread safe, which is typically not a problem unless there is code that works with them from outside of a Task or a callback. If there&amp;rsquo;s a need for such code to call a low-level asyncio API, the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt;&lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt;&lt;/a&gt; method should be used, e.g.:</source>
          <target state="translated">ほとんどすべてのasyncioオブジェクトはスレッドセーフではありません。これは、タスクまたはコールバックの外部からオブジェクトを操作するコードがない限り、通常は問題になりません。このようなコードで低レベルのasyncio APIを呼び出す必要がある場合は、&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon_threadsafe&quot;&gt; &lt;code&gt;loop.call_soon_threadsafe()&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。例：</target>
        </trans-unit>
        <trans-unit id="8ef26a78c0878f712db4f13e47f33bc1d3fc032c" translate="yes" xml:space="preserve">
          <source>Almost all module functions depend on the basic function &lt;a href=&quot;#random.random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt;, which generates a random float uniformly in the semi-open range [0.0, 1.0). Python uses the Mersenne Twister as the core generator. It produces 53-bit precision floats and has a period of 2**19937-1. The underlying implementation in C is both fast and threadsafe. The Mersenne Twister is one of the most extensively tested random number generators in existence. However, being completely deterministic, it is not suitable for all purposes, and is completely unsuitable for cryptographic purposes.</source>
          <target state="translated">ほとんどすべてのモジュール関数は基本関数&lt;a href=&quot;#random.random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;に依存しています。これは、セミオープン範囲[0.0、1.0 ）でランダムな浮動小数点を均一に生成します。 PythonはコアジェネレーターとしてMersenne Twisterを使用します。 53ビット精度の浮動小数点数を生成し、周期は2 ** 19937-1です。 Cの基礎となる実装は、高速かつスレッドセーフです。メルセンヌツイスターは、現在最も広くテストされている乱数ジェネレーターの1つです。ただし、完全に確定的であるため、すべての目的に適しているわけではなく、暗号化の目的にはまったく適していません。</target>
        </trans-unit>
        <trans-unit id="748de8dc879eb6680f9d63547210f95925fe14ea" translate="yes" xml:space="preserve">
          <source>Along with the &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; class, &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; can be used to let handlers do their work on a separate thread from the one which does the logging. This is important in Web applications and also other service applications where threads servicing clients need to respond as quickly as possible, while any potentially slow operations (such as sending an email via &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt;) are done on a separate thread.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; &lt;/a&gt;クラスと一緒に、&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; &lt;/a&gt;を使用して、ハンドラーがロギングを実行するスレッドとは別のスレッドで作業を実行できるようにすることができます。これは、クライアントにサービスを提供するスレッドが可能な限り迅速に応答する必要があるWebアプリケーションやその他のサービスアプリケーションでは重要ですが、（&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; &lt;/a&gt;を介した電子メールの送信など）潜在的に遅い操作は別のスレッドで実行されます。</target>
        </trans-unit>
        <trans-unit id="e133f1847d6ba17ada9412544089973439552b65" translate="yes" xml:space="preserve">
          <source>Along with the &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; class, &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; can be used to let handlers do their work on a separate thread from the one which does the logging. This is important in Web applications and also other service applications where threads servicing clients need to respond as quickly as possible, while any potentially slow operations (such as sending an email via &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt;) are done on a separate thread.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; の&lt;/a&gt;クラス、&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; は、&lt;/a&gt;ハンドラは、ロギングを行うものとは別のスレッドで自分の仕事をやらせるために使用することができます。これは、クライアントにサービスを提供するスレッドが可能な限り迅速に応答する必要があるWebアプリケーションやその他のサービスアプリケーションでは重要ですが、（&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; &lt;/a&gt;を介した電子メールの送信など）潜在的に遅い操作は別のスレッドで実行されます。</target>
        </trans-unit>
        <trans-unit id="c13a6fce77ea6aef73a68321fa87a9bf9f996061" translate="yes" xml:space="preserve">
          <source>Already-issued keys are invalidated by this operation and should not be subsequently used.</source>
          <target state="translated">既に発行されている鍵は、この操作により無効となり、その後に使用してはならない。</target>
        </trans-unit>
        <trans-unit id="ddaad8ef2dfb964d8f8351c0c13727dace14f681" translate="yes" xml:space="preserve">
          <source>Also add a &lt;em&gt;MIME-Version&lt;/em&gt; header if one is not present (see also &lt;a href=&quot;email.message#email.message.MIMEPart&quot;&gt;&lt;code&gt;MIMEPart&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">また、&lt;em&gt;MIME-Version&lt;/em&gt;ヘッダーがない場合は追加します（&lt;a href=&quot;email.message#email.message.MIMEPart&quot;&gt; &lt;code&gt;MIMEPart&lt;/code&gt; &lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="04aa310dbe2a0c208ac29daad11f4c7a1536bccb" translate="yes" xml:space="preserve">
          <source>Also called the binomial coefficient because it is equivalent to the coefficient of k-th term in polynomial expansion of the expression &lt;code&gt;(1 + x) ** n&lt;/code&gt;.</source>
          <target state="translated">式 &lt;code&gt;(1 + x) ** n&lt;/code&gt; 多項式展開におけるk番目の項の係数に相当するため、二項係数とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="4da92deb98831a7db28244e57fd52231a3f52e3a" translate="yes" xml:space="preserve">
          <source>Also if &lt;em&gt;chunksize&lt;/em&gt; is &lt;code&gt;1&lt;/code&gt; then the &lt;code&gt;next()&lt;/code&gt; method of the iterator returned by the &lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt;&lt;code&gt;imap()&lt;/code&gt;&lt;/a&gt; method has an optional &lt;em&gt;timeout&lt;/em&gt; parameter: &lt;code&gt;next(timeout)&lt;/code&gt; will raise &lt;a href=&quot;#multiprocessing.TimeoutError&quot;&gt;&lt;code&gt;multiprocessing.TimeoutError&lt;/code&gt;&lt;/a&gt; if the result cannot be returned within &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">また、&lt;em&gt;chunksize&lt;/em&gt;が &lt;code&gt;1&lt;/code&gt; の場合、&lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt; &lt;code&gt;imap()&lt;/code&gt; &lt;/a&gt;メソッドによって返されるイテレータの &lt;code&gt;next()&lt;/code&gt; メソッドにはオプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータがあります&lt;em&gt;。next &lt;/em&gt; &lt;code&gt;next(timeout)&lt;/code&gt; は、&lt;em&gt;timeout&lt;/em&gt;秒以内に結果が返されない場合、&lt;a href=&quot;#multiprocessing.TimeoutError&quot;&gt; &lt;code&gt;multiprocessing.TimeoutError&lt;/code&gt; を&lt;/a&gt;発生させます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a66c2ca0e99bfb1ee1915dbefddd9032612eb1e9" translate="yes" xml:space="preserve">
          <source>Also known as the Qt for Python project, PySide2 is a newer binding to the Qt toolkit. It is provided by The Qt Company and aims to provide a complete port of PySide to Qt 5. Compared to PyQt, its licensing scheme is friendlier to non-open source applications.</source>
          <target state="translated">Qt for Python プロジェクトとしても知られている PySide2 は、Qt ツールキットへの新しいバインディングです。PySide2はQt Companyによって提供され、PySideをQt 5に完全に移植することを目的としています。PyQtと比較して、そのライセンススキームはオープンソースではないアプリケーションにも優しいものとなっています。</target>
        </trans-unit>
        <trans-unit id="e2b37f91f9986d19a74d71c28f0eb3cf516b74d0" translate="yes" xml:space="preserve">
          <source>Also note that cookies saved while Mozilla is running will get clobbered by Mozilla.</source>
          <target state="translated">また、Mozilla起動中に保存されたクッキーは、Mozillaに食い荒らされるので注意してください。</target>
        </trans-unit>
        <trans-unit id="05381aa96697605cddfb622e6c2165e3e0c1cfd5" translate="yes" xml:space="preserve">
          <source>Also note that if &lt;code&gt;sys.breakpointhook()&lt;/code&gt; is overridden programmatically, &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; consulted.</source>
          <target state="translated">また、 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; がプログラムでオーバーライドされている場合、&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;は参照され&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="02c7d894d9a8e8af878b32163c0bea4d7ca67d0d" translate="yes" xml:space="preserve">
          <source>Also note that if &lt;code&gt;sys.breakpointhook()&lt;/code&gt; is overridden programmatically, &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; consulted.</source>
          <target state="translated">また、 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; がプログラムでオーバーライドされた場合、&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;は参照され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="332b93cd68d70da8be748419e7b6e1e7630df4b0" translate="yes" xml:space="preserve">
          <source>Also note that, aside from the zero argument form, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is not limited to use inside methods. The two argument form specifies the arguments exactly and makes the appropriate references. The zero argument form only works inside a class definition, as the compiler fills in the necessary details to correctly retrieve the class being defined, as well as accessing the current instance for ordinary methods.</source>
          <target state="translated">また、引数なしの形式を除いて、&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;はメソッド内での使用に限定されないことに注意してください。 2つの引数の形式は、引数を正確に指定し、適切な参照を作成します。コンパイラーは、定義されているクラスを正しく取得するために必要な詳細を入力し、通常のメソッドの現在のインスタンスにアクセスするため、引数なしの形式はクラス定義内でのみ機能します。</target>
        </trans-unit>
        <trans-unit id="30f25e2caeef7e4eba52c7c66bd42d7b1a2c33c9" translate="yes" xml:space="preserve">
          <source>Also referred to as integer division. The resultant value is a whole integer, though the result&amp;rsquo;s type is not necessarily int. The result is always rounded towards minus infinity: &lt;code&gt;1//2&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;(-1)//2&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;1//(-2)&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;(-1)//(-2)&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">整数除算とも呼ばれます。結果の値は整数ですが、結果の型は必ずしもintであるとは限りません。結果は常にマイナス無限大に向かって丸められる： &lt;code&gt;1//2&lt;/code&gt; ある &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;(-1)//2&lt;/code&gt; であり、 &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;1//(-2)&lt;/code&gt; であり、 &lt;code&gt;-1&lt;/code&gt; 、及び &lt;code&gt;(-1)//(-2)&lt;/code&gt; であります &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969aafb04012095b4d6476bad1048d3bb9a0ed99" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;functions#func-bytearray&quot;&gt;bytearray&lt;/a&gt; built-in.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#func-bytearray&quot;&gt;bytearray&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="17dcbded66c86a6599675ce2d2b8b6553fefda44" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;functions#func-bytes&quot;&gt;bytes&lt;/a&gt; built-in.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#func-bytes&quot;&gt;バイト&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="5eea734960db56a51ce22d3968f6f1a077a73c20" translate="yes" xml:space="preserve">
          <source>Also test examples reachable from dict &lt;code&gt;m.__test__&lt;/code&gt;, if it exists and is not &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;m.__test__&lt;/code&gt; maps names (strings) to functions, classes and strings; function and class docstrings are searched for examples; strings are searched directly, as if they were docstrings.</source>
          <target state="translated">存在し、 &lt;code&gt;None&lt;/code&gt; でない場合は、dict &lt;code&gt;m.__test__&lt;/code&gt; から到達可能なテスト例もテストします。 &lt;code&gt;m.__test__&lt;/code&gt; は、名前（文字列）を関数、クラス、文字列にマップします。関数とクラスのドキュメント文字列が例として検索されます。文字列は、docstringであるかのように直接検索されます。</target>
        </trans-unit>
        <trans-unit id="1297c5eac193ee99dea660520c3d5d38eabae727" translate="yes" xml:space="preserve">
          <source>Also unlike other operations, quantize never signals Underflow, even if the result is subnormal and inexact.</source>
          <target state="translated">また、他の演算とは異なり、quantize は結果が亜正規で不正確であってもアンダーフローを示すことはありません。</target>
        </trans-unit>
        <trans-unit id="6d52e998b134acc66f821dc9e280d60f9ef6cf6e" translate="yes" xml:space="preserve">
          <source>Also, note that if the callback function is called in a thread created outside of Python&amp;rsquo;s control (e.g. by the foreign code that calls the callback), ctypes creates a new dummy Python thread on every invocation. This behavior is correct for most purposes, but it means that values stored with &lt;a href=&quot;threading#threading.local&quot;&gt;&lt;code&gt;threading.local&lt;/code&gt;&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; survive across different callbacks, even when those calls are made from the same C thread.</source>
          <target state="translated">また、コールバック関数がPythonの制御外で作成されたスレッドで（たとえば、コールバックを呼び出す外部コードによって）呼び出された場合、ctypesは呼び出しごとに新しいダミーのPythonスレッドを作成します。この動作は、ほとんどの目的のために正しいですが、それはして格納された値を意味&lt;a href=&quot;threading#threading.local&quot;&gt; &lt;code&gt;threading.local&lt;/code&gt; は&lt;/a&gt;なり&lt;em&gt;ません&lt;/em&gt;これらの呼び出しは、同じCのスレッドから作られている場合でも、別のコールバック間で生き残ります。</target>
        </trans-unit>
        <trans-unit id="ffda43397fafd0562d904b85d70629199b0601e9" translate="yes" xml:space="preserve">
          <source>Also, remember that a few standard headers (&lt;em&gt;Content-Length&lt;/em&gt;, &lt;em&gt;Content-Type&lt;/em&gt; and &lt;em&gt;Host&lt;/em&gt;) are added when the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; is passed to &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;OpenerDirector.open()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">また、&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;OpenerDirector.open()&lt;/code&gt; &lt;/a&gt;）に渡されると、いくつかの標準ヘッダー（&lt;em&gt;Content-Length&lt;/em&gt;、&lt;em&gt;Content-Type&lt;/em&gt;、および&lt;em&gt;Host&lt;/em&gt;）が追加されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c31d635bef296eddc9b7067796d9ac2ceca1971" translate="yes" xml:space="preserve">
          <source>Also, setting &lt;code&gt;feature_version&lt;/code&gt; to a tuple &lt;code&gt;(major, minor)&lt;/code&gt; will attempt to parse using that Python version&amp;rsquo;s grammar. Currently &lt;code&gt;major&lt;/code&gt; must equal to &lt;code&gt;3&lt;/code&gt;. For example, setting &lt;code&gt;feature_version=(3, 4)&lt;/code&gt; will allow the use of &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; as variable names. The lowest supported version is &lt;code&gt;(3, 4)&lt;/code&gt;; the highest is &lt;code&gt;sys.version_info[0:2]&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;feature_version&lt;/code&gt; をタプル &lt;code&gt;(major, minor)&lt;/code&gt; すると、そのPythonバージョンの文法を使用して解析が試行されます。現在、 &lt;code&gt;major&lt;/code&gt; は &lt;code&gt;3&lt;/code&gt; でなければなりません。たとえば、 &lt;code&gt;feature_version=(3, 4)&lt;/code&gt; を設定すると、変数名として &lt;code&gt;async&lt;/code&gt; および &lt;code&gt;await&lt;/code&gt; を使用できます。サポートされている最も低いバージョンは &lt;code&gt;(3, 4)&lt;/code&gt; です。最高は &lt;code&gt;sys.version_info[0:2]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7c038b15b5de4f5872e231b0f4fef4b3d1ab4a8a" translate="yes" xml:space="preserve">
          <source>Also, subclassing an enumeration is allowed only if the enumeration does not define any members. So this is forbidden:</source>
          <target state="translated">また、列挙のサブクラス化は、列挙がメンバを定義していない場合にのみ許可されます。なので、これは禁止されています。</target>
        </trans-unit>
        <trans-unit id="328115fa4aad448b63c4abf04e067b3272a971c4" translate="yes" xml:space="preserve">
          <source>Also, this decorator requires that the &lt;code&gt;__dict__&lt;/code&gt; attribute on each instance be a mutable mapping. This means it will not work with some types, such as metaclasses (since the &lt;code&gt;__dict__&lt;/code&gt; attributes on type instances are read-only proxies for the class namespace), and those that specify &lt;code&gt;__slots__&lt;/code&gt; without including &lt;code&gt;__dict__&lt;/code&gt; as one of the defined slots (as such classes don&amp;rsquo;t provide a &lt;code&gt;__dict__&lt;/code&gt; attribute at all).</source>
          <target state="translated">また、このデコレータでは、各インスタンスの &lt;code&gt;__dict__&lt;/code&gt; 属性が可変マッピングである必要があります。これは、メタクラス（タイプインスタンスの &lt;code&gt;__dict__&lt;/code&gt; 属性はクラス名前空間の読み取り専用プロキシであるため）や、定義されたスロットの1つとして &lt;code&gt;__dict__&lt;/code&gt; を含めずに &lt;code&gt;__slots__&lt;/code&gt; を指定するタイプ（そのようなクラスなど）では機能しないことを意味します。 &lt;code&gt;__dict__&lt;/code&gt; 属性をまったく提供しないでください）。</target>
        </trans-unit>
        <trans-unit id="d88f419db1d727742f4296df8e60905129a6eaa4" translate="yes" xml:space="preserve">
          <source>Alt-/</source>
          <target state="translated">Alt-/</target>
        </trans-unit>
        <trans-unit id="523f1fa185299e53f8073a5f4db33f3a543e0c73" translate="yes" xml:space="preserve">
          <source>Alt-K</source>
          <target state="translated">Alt-K</target>
        </trans-unit>
        <trans-unit id="08044dfe50ef88573dd4b98d40dcea3bbb29cb1b" translate="yes" xml:space="preserve">
          <source>Alt-n</source>
          <target state="translated">Alt-n</target>
        </trans-unit>
        <trans-unit id="f8b5304cb9f515ca84a85d6f59d92eb340d9d86e" translate="yes" xml:space="preserve">
          <source>Alt-p</source>
          <target state="translated">Alt-p</target>
        </trans-unit>
        <trans-unit id="166df40fdc45fa8435a0aeaeb724d35b2824b092" translate="yes" xml:space="preserve">
          <source>Altered an exponent to fit representation constraints.</source>
          <target state="translated">指数を表現制約に合わせて変更しました。</target>
        </trans-unit>
        <trans-unit id="7a26af879a761b43ca17a9773a7940683b3c696e" translate="yes" xml:space="preserve">
          <source>Alternate character set mode</source>
          <target state="translated">代替文字セットモード</target>
        </trans-unit>
        <trans-unit id="d9b3cf0658ad7ba54f125c370d44945ffd5bbbab" translate="yes" xml:space="preserve">
          <source>Alternate constructor for &lt;a href=&quot;#itertools.chain&quot;&gt;&lt;code&gt;chain()&lt;/code&gt;&lt;/a&gt;. Gets chained inputs from a single iterable argument that is evaluated lazily. Roughly equivalent to:</source>
          <target state="translated">&lt;a href=&quot;#itertools.chain&quot;&gt; &lt;code&gt;chain()&lt;/code&gt; の&lt;/a&gt;代替コンストラクター。遅延評価される単一の反復可能な引数から連鎖入力を取得します。ほぼ同等：</target>
        </trans-unit>
        <trans-unit id="1b95b413e2781a6e9f949c96afb8e7654b0b6a7c" translate="yes" xml:space="preserve">
          <source>Alternately, you can use the &lt;code&gt;setparameters()&lt;/code&gt; method to set all three audio parameters at once. This is more convenient, but may not be as flexible in all cases.</source>
          <target state="translated">または、 &lt;code&gt;setparameters()&lt;/code&gt; メソッドを使用して、3つのオーディオパラメータすべてを一度に設定できます。これはより便利ですが、すべての場合に柔軟性があるとは限りません。</target>
        </trans-unit>
        <trans-unit id="120472849a159296aff2262eb84d4aabcf036f62" translate="yes" xml:space="preserve">
          <source>Alternative Generator</source>
          <target state="translated">代替発電機</target>
        </trans-unit>
        <trans-unit id="c3192b9728e7aa2994a20b12d0f484a50d4d9db8" translate="yes" xml:space="preserve">
          <source>Alternative command line option and argument parsing library.</source>
          <target state="translated">代替のコマンドラインオプションおよび引数解析ライブラリ。</target>
        </trans-unit>
        <trans-unit id="6f08874d859f81959583d494b6024b88f3206311" translate="yes" xml:space="preserve">
          <source>Alternative constructor. The &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; function is actually a shortcut to this classmethod.</source>
          <target state="translated">代替コンストラクタ。&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;関数は、実際にはこのクラスメソッドへのショートカットです。</target>
        </trans-unit>
        <trans-unit id="851a8413bea4eb55cb0ed6c5d8946229982061a0" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;em&gt;side_effect&lt;/em&gt; can be an exception class or instance. In this case the exception will be raised when the mock is called.</source>
          <target state="translated">または、&lt;em&gt;side_effect&lt;/em&gt;を例外クラスまたはインスタンスにすることもできます。この場合、モックが呼び出されたときに例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2f2589d09d2de9e0443187f1741ac9282ceccb5b" translate="yes" xml:space="preserve">
          <source>Alternatively you can just use &lt;code&gt;vars(my_mock)&lt;/code&gt; (instance members) and &lt;code&gt;dir(type(my_mock))&lt;/code&gt; (type members) to bypass the filtering irrespective of &lt;code&gt;mock.FILTER_DIR&lt;/code&gt;.</source>
          <target state="translated">あるいは、単に &lt;code&gt;vars(my_mock)&lt;/code&gt; （インスタンスメンバー）と &lt;code&gt;dir(type(my_mock))&lt;/code&gt; （タイプメンバー）を使用して、 &lt;code&gt;mock.FILTER_DIR&lt;/code&gt; に関係なくフィルタリングをバイパスできます。</target>
        </trans-unit>
        <trans-unit id="560cce3f7cddd3320937666765b3cde7401b149e" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;a href=&quot;#object.__reduce_ex__&quot;&gt;&lt;code&gt;__reduce_ex__()&lt;/code&gt;&lt;/a&gt; method may be defined. The only difference is this method should take a single integer argument, the protocol version. When defined, pickle will prefer it over the &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; method. In addition, &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; automatically becomes a synonym for the extended version. The main use for this method is to provide backwards-compatible reduce values for older Python releases.</source>
          <target state="translated">あるいは、&lt;a href=&quot;#object.__reduce_ex__&quot;&gt; &lt;code&gt;__reduce_ex__()&lt;/code&gt; &lt;/a&gt;メソッドを定義することもできます。唯一の違いは、このメソッドは単一の整数引数（プロトコルバージョン）を取る必要があることです。定義すると、pickleは&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;メソッドよりも優先されます。また、&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;自動的に拡張バージョンの同義語になります。このメソッドの主な用途は、古いPythonリリースに下位互換性のあるreduce値を提供することです。</target>
        </trans-unit>
        <trans-unit id="b8170ca6af713e396125022cf5ef83122166378a" translate="yes" xml:space="preserve">
          <source>Alternatively, annotate your generator as having a return type of either &lt;code&gt;AsyncIterable[YieldType]&lt;/code&gt; or &lt;code&gt;AsyncIterator[YieldType]&lt;/code&gt;:</source>
          <target state="translated">または、 &lt;code&gt;AsyncIterable[YieldType]&lt;/code&gt; または &lt;code&gt;AsyncIterator[YieldType]&lt;/code&gt; 戻り型を持つようにジェネレーターに注釈を付けます。</target>
        </trans-unit>
        <trans-unit id="bedcc0b6120fd2e8105cbf4a4b500b32795b5330" translate="yes" xml:space="preserve">
          <source>Alternatively, annotate your generator as having a return type of either &lt;code&gt;Iterable[YieldType]&lt;/code&gt; or &lt;code&gt;Iterator[YieldType]&lt;/code&gt;:</source>
          <target state="translated">または、ジェネレーターに &lt;code&gt;Iterable[YieldType]&lt;/code&gt; または &lt;code&gt;Iterator[YieldType]&lt;/code&gt; 戻り型があることを注釈します。</target>
        </trans-unit>
        <trans-unit id="f3a0dab4ca32a3c12f17a83c0742fa58af47dd19" translate="yes" xml:space="preserve">
          <source>Alternatively, for trusted input, the shell&amp;rsquo;s own pipeline support may still be used directly:</source>
          <target state="translated">または、信頼できる入力の場合、シェル自体のパイプラインサポートを引き続き直接使用することもできます。</target>
        </trans-unit>
        <trans-unit id="c2c53c18dbfbfd58e92716305404323d14180eb0" translate="yes" xml:space="preserve">
          <source>Alternatively, if you configured the &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PATHEXT&lt;/code&gt; variables for your &lt;a href=&quot;https://docs.python.org/3.8/using/windows.html#using-on-windows&quot;&gt;Python installation&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;https://docs.python.org/3.8/using/windows.html#using-on-windows&quot;&gt;Pythonインストール&lt;/a&gt;用に &lt;code&gt;PATH&lt;/code&gt; および &lt;code&gt;PATHEXT&lt;/code&gt; 変数を設定した場合：</target>
        </trans-unit>
        <trans-unit id="96fc2d926b40d28091e4a28520224b2917493b24" translate="yes" xml:space="preserve">
          <source>Alternatively, if you configured the &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PATHEXT&lt;/code&gt; variables for your &lt;a href=&quot;https://docs.python.org/3.9/using/windows.html#using-on-windows&quot;&gt;Python installation&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;https://docs.python.org/3.9/using/windows.html#using-on-windows&quot;&gt;Pythonインストール&lt;/a&gt;用に &lt;code&gt;PATH&lt;/code&gt; 変数と &lt;code&gt;PATHEXT&lt;/code&gt; 変数を構成した場合：</target>
        </trans-unit>
        <trans-unit id="7a7e943dc867b6734626dcdec4a25f40c03a249a" translate="yes" xml:space="preserve">
          <source>Alternatively, inputs can be rounded upon creation using the &lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt;&lt;code&gt;Context.create_decimal()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">あるいは、&lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt; &lt;code&gt;Context.create_decimal()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、作成時に入力を丸めることができます。</target>
        </trans-unit>
        <trans-unit id="afdd5b97037a223bd3a94ba552f2a81c0c1bf175" translate="yes" xml:space="preserve">
          <source>Alternatively, the first character of the format string can be used to indicate the byte order, size and alignment of the packed data, according to the following table:</source>
          <target state="translated">あるいは、フォーマット文字列の最初の文字は、次の表に従って、パックされたデータのバイト順、サイズ、およびアラインメントを示すために使用することができる。</target>
        </trans-unit>
        <trans-unit id="161271a624435f85f1f3f89dd66674cf40b4b411" translate="yes" xml:space="preserve">
          <source>Alternatively, use &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;, which provide a more structured introspection API for callables.</source>
          <target state="translated">または、callableにさらに構造化されたイントロスペクションAPIを提供する&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="bc69874a843b8bca70392a6b4845a801e795ddc4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can provide the entire regular expression pattern by overriding the class attribute &lt;em&gt;pattern&lt;/em&gt;. If you do this, the value must be a regular expression object with four named capturing groups. The capturing groups correspond to the rules given above, along with the invalid placeholder rule:</source>
          <target state="translated">または、クラス属性&lt;em&gt;patternを&lt;/em&gt;オーバーライドして、正規表現パターン全体を提供することもできます。これを行う場合、値は4つの名前付きキャプチャグループを持つ正規表現オブジェクトである必要があります。キャプチャグループは、無効なプレースホルダールールとともに、上記のルールに対応しています。</target>
        </trans-unit>
        <trans-unit id="537f3d9f59a4cc7f4b3b3b1d8452a61dcfcd6369" translate="yes" xml:space="preserve">
          <source>Alternatively, you can run the demo scripts individually. For example,</source>
          <target state="translated">あるいは、デモスクリプトを個別に実行することもできます。例えば、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="fa0d39d2965e611cb72e153681483b50e7579f0d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;#multiprocessing.get_context&quot;&gt;&lt;code&gt;get_context()&lt;/code&gt;&lt;/a&gt; to obtain a context object. Context objects have the same API as the multiprocessing module, and allow one to use multiple start methods in the same program.</source>
          <target state="translated">または、&lt;a href=&quot;#multiprocessing.get_context&quot;&gt; &lt;code&gt;get_context()&lt;/code&gt; &lt;/a&gt;を使用して、コンテキストオブジェクトを取得できます。コンテキストオブジェクトは、マルチプロセッシングモジュールと同じAPIを持ち、同じプログラムで複数の開始メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="2c25f25fc8595d803ebcfcdb59b8832dd261b439" translate="yes" xml:space="preserve">
          <source>Alters flag dispositions for messages in mailbox. &lt;em&gt;command&lt;/em&gt; is specified by section 6.4.6 of &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt; as being one of &amp;ldquo;FLAGS&amp;rdquo;, &amp;ldquo;+FLAGS&amp;rdquo;, or &amp;ldquo;-FLAGS&amp;rdquo;, optionally with a suffix of &amp;ldquo;.SILENT&amp;rdquo;.</source>
          <target state="translated">メールボックス内のメッセージのフラグ後処理を変更します。&lt;em&gt;コマンド&lt;/em&gt;は、&lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2060の&lt;/strong&gt;&lt;/a&gt;セクション6.4.6で「FLAGS」、「+ FLAGS」、または「-FLAGS」のいずれかとして指定され、オプションで「.SILENT」のサフィックスが付いています。</target>
        </trans-unit>
        <trans-unit id="6ca488175d062da3b916916dcc5cf1c6c0a580bc" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;os.path#os.path.relpath&quot;&gt;&lt;code&gt;os.path.relpath()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.PurePath.relative_to&quot;&gt;&lt;code&gt;PurePath.relative_to()&lt;/code&gt;&lt;/a&gt; have some overlapping use-cases, their semantics differ enough to warrant not considering them equivalent.</source>
          <target state="translated">けれども&lt;a href=&quot;os.path#os.path.relpath&quot;&gt; &lt;code&gt;os.path.relpath()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#pathlib.PurePath.relative_to&quot;&gt; &lt;code&gt;PurePath.relative_to()&lt;/code&gt; は&lt;/a&gt;いくつかのオーバーラップのユースケースを持って、その意味では同等にそれらを考慮していない正当化するのに十分で異なります。</target>
        </trans-unit>
        <trans-unit id="5aba7d7e4194f7e569bb1e4976c4f49e69cd0c0d" translate="yes" xml:space="preserve">
          <source>Although Windows supports &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt;, you can only set the file&amp;rsquo;s read-only flag with it (via the &lt;code&gt;stat.S_IWRITE&lt;/code&gt; and &lt;code&gt;stat.S_IREAD&lt;/code&gt; constants or a corresponding integer value). All other bits are ignored.</source>
          <target state="translated">Windowsは&lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; を&lt;/a&gt;サポートしていますが、（ &lt;code&gt;stat.S_IWRITE&lt;/code&gt; および &lt;code&gt;stat.S_IREAD&lt;/code&gt; 定数または対応する整数値を介して）ファイルの読み取り専用フラグのみを設定できます。他のすべてのビットは無視されます。</target>
        </trans-unit>
        <trans-unit id="ff306b2fbe16e39bfb4f4ae1cb51d280ddc5b736" translate="yes" xml:space="preserve">
          <source>Although filters are used primarily to filter records based on more sophisticated criteria than levels, they get to see every record which is processed by the handler or logger they&amp;rsquo;re attached to: this can be useful if you want to do things like counting how many records were processed by a particular logger or handler, or adding, changing or removing attributes in the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; being processed. Obviously changing the LogRecord needs to be done with some care, but it does allow the injection of contextual information into logs (see &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#filters-contextual&quot;&gt;Using Filters to impart contextual information&lt;/a&gt;).</source>
          <target state="translated">フィルターは主にレベルよりも洗練された基準に基づいてレコードをフィルターするために使用されますが、ハンドラーまたはロガーがアタッチされているすべてのレコードを確認できます。これは、何件かをカウントする場合などに役立ちますレコードは、特定のロガーまたはハンドラーによって処理されたか、処理中の&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;属性を追加、変更、または削除しました。明らかにLogRecordの変更は注意して行う必要がありますが、コンテキスト情報をログに挿入できます（&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#filters-contextual&quot;&gt;フィルターを使用したコンテキスト情報の付与を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8c3294a37977a82023d9835e2636a67fa40e0a66" translate="yes" xml:space="preserve">
          <source>Although filters are used primarily to filter records based on more sophisticated criteria than levels, they get to see every record which is processed by the handler or logger they&amp;rsquo;re attached to: this can be useful if you want to do things like counting how many records were processed by a particular logger or handler, or adding, changing or removing attributes in the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; being processed. Obviously changing the LogRecord needs to be done with some care, but it does allow the injection of contextual information into logs (see &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#filters-contextual&quot;&gt;Using Filters to impart contextual information&lt;/a&gt;).</source>
          <target state="translated">フィルタは主に、レベルよりも高度な基準に基づいてレコードをフィルタリングするために使用されますが、接続されているハンドラまたはロガーによって処理されるすべてのレコードを確認できます。これは、数を数えるなどの操作を行う場合に役立ちます。レコードは、特定のロガーまたはハンドラーによって処理されたか、処理中の&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; の&lt;/a&gt;属性を追加、変更、または削除しました。明らかに、LogRecordの変更は注意して行う必要がありますが、ログにコンテキスト情報を挿入することはできます（&lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#filters-contextual&quot;&gt;コンテキスト情報を伝えるためのフィルターの使用を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="e435625441b2f1626446dd761b8fafec987e5b2e" translate="yes" xml:space="preserve">
          <source>Although in many cases, changing the &lt;code id=&quot;index-15&quot;&gt;TZ&lt;/code&gt; environment variable may affect the output of functions like &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; without calling &lt;a href=&quot;#time.tzset&quot;&gt;&lt;code&gt;tzset()&lt;/code&gt;&lt;/a&gt;, this behavior should not be relied on.</source>
          <target state="translated">多くの場合、 &lt;code id=&quot;index-15&quot;&gt;TZ&lt;/code&gt; 環境変数を変更すると、&lt;a href=&quot;#time.tzset&quot;&gt; &lt;code&gt;tzset()&lt;/code&gt; &lt;/a&gt;を呼び出さずに&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;などの関数の出力に影響を与える可能性がありますが、この動作に依存することはできません。</target>
        </trans-unit>
        <trans-unit id="9ac287e0e259e1518ab8bd9cdd4fceec7ae0a0f4" translate="yes" xml:space="preserve">
          <source>Although it is a somewhat common practice to expose these to end users, these values are designed to be primary keys for representing the relevant zones and not necessarily user-facing elements. Projects like CLDR (the Unicode Common Locale Data Repository) can be used to get more user-friendly strings from these keys.</source>
          <target state="translated">これらの値をエンドユーザーに公開することはやや一般的ですが、これらの値は関連するゾーンを表現するための主キーとして設計されており、必ずしもユーザーが直面する要素ではありません。CLDR (Unicode Common Locale Data Repository)のようなプロジェクトは、これらのキーからよりユーザーフレンドリーな文字列を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="5f7e770948da6ad1f5401b21b0a95acc8356e162" translate="yes" xml:space="preserve">
          <source>Although it is possible to store a pointer in shared memory remember that this will refer to a location in the address space of a specific process. However, the pointer is quite likely to be invalid in the context of a second process and trying to dereference the pointer from the second process may cause a crash.</source>
          <target state="translated">ポインタを共有メモリに格納することは可能ですが、これは特定のプロセスのアドレス空間内の位置を参照することを覚えておいてください。しかし、2 番目のプロセスのコンテキストではポインタが無効である可能性が高く、2 番目のプロセスからポインタを参照解除しようとするとクラッシュする可能性があります。</target>
        </trans-unit>
        <trans-unit id="36ac042d6e7c56f32a4f17c62570dba38897403c" translate="yes" xml:space="preserve">
          <source>Although powerful, implementing &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; directly in your classes is error prone. For this reason, class designers should use the high-level interface (i.e., &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;) whenever possible. We will show, however, cases where using &lt;a href=&quot;#object.__reduce__&quot;&gt;&lt;code&gt;__reduce__()&lt;/code&gt;&lt;/a&gt; is the only option or leads to more efficient pickling or both.</source>
          <target state="translated">強力ですが、クラスに&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;直接実装するとエラーが発生しやすくなります。このため、クラスの設計者は、高レベルのインタフェース（すなわち、使用する必要があります&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;）を可能な限り。ただし、&lt;a href=&quot;#object.__reduce__&quot;&gt; &lt;code&gt;__reduce__()&lt;/code&gt; &lt;/a&gt;を使用することが唯一のオプションであるか、より効率的な酸洗いまたはその両方につながるケースを示します。</target>
        </trans-unit>
        <trans-unit id="81a1b224e7ad62f02a109883807627a1786137e9" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; class of the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module implements this attribute, the database engine&amp;rsquo;s own support for the determination of &amp;ldquo;rows affected&amp;rdquo;/&amp;rdquo;rows selected&amp;rdquo; is quirky.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;クラスはこの属性を実装しますが、「影響を受ける行」/「選択された行」の決定に対するデータベースエンジン自体のサポートは風変わりです。</target>
        </trans-unit>
        <trans-unit id="5e789a4520b246a8dd4042cca86036c0f5a37df9" translate="yes" xml:space="preserve">
          <source>Although this module is always available, not all functions are available on all platforms. Most of the functions defined in this module call platform C library functions with the same name. It may sometimes be helpful to consult the platform documentation, because the semantics of these functions varies among platforms.</source>
          <target state="translated">このモジュールは常に利用可能ですが、すべての関数がすべてのプラットフォームで利用できるわけではありません。このモジュールで定義されている関数のほとんどは、同じ名前のプラットフォームCライブラリ関数を呼び出しています。これらの関数のセマンティクスはプラットフォームによって異なるため、 プラットフォームのドキュメントを参照することが役立つこともあります。</target>
        </trans-unit>
        <trans-unit id="52e0fade5c33a8c0706c1ee4ec4d3b8efefa5ae6" translate="yes" xml:space="preserve">
          <source>Always check a script for syntax errors first, by doing something like &lt;code&gt;python script.py&lt;/code&gt;.</source>
          <target state="translated">常に &lt;code&gt;python script.py&lt;/code&gt; のようなことをして、常にスクリプトの構文エラーをチェックしてください。</target>
        </trans-unit>
        <trans-unit id="940801d3a0b2504730f2938dc103aefa05f13928" translate="yes" xml:space="preserve">
          <source>Always create a new, empty database, open for reading and writing</source>
          <target state="translated">常に新しい空のデータベースを作成し、読み書き可能な状態にしておきます。</target>
        </trans-unit>
        <trans-unit id="2b68c9edfa6077c66acf9229ba5007aeabfd27c6" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">常に &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d92042192835b0201f0080332bb4fd84f15bccf0" translate="yes" xml:space="preserve">
          <source>Among other uses, this allows for initializing field values that depend on one or more other fields. For example:</source>
          <target state="translated">他の用途の中でも、これにより、1つ以上の他のフィールドに依存するフィールド値を初期化することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="4ce4dae33731a8639d5206f55cb819ffec493ded" translate="yes" xml:space="preserve">
          <source>Among the acceptable object types in the iterables are Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt; (e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, or objects returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;), socket objects returned by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket()&lt;/code&gt;&lt;/a&gt;. You may also define a &lt;em&gt;wrapper&lt;/em&gt; class yourself, as long as it has an appropriate &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (that really returns a file descriptor, not just a random integer).</source>
          <target state="translated">iterablesで受け入れ可能なオブジェクトタイプには、Python&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;（たとえば、 &lt;code&gt;sys.stdin&lt;/code&gt; 、または&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;os.popen()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクト）、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket()&lt;/code&gt; &lt;/a&gt;によって返されるソケットオブジェクトがあります。適切な&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッド（ランダムな整数だけでなく、実際にファイル記述子を返す）があれば、&lt;em&gt;ラッパー&lt;/em&gt;クラスを自分で定義することもできます。</target>
        </trans-unit>
        <trans-unit id="08b2cdd1820b99395356f8484945cb33f7bdcc5d" translate="yes" xml:space="preserve">
          <source>Among the acceptable object types in the sequences are Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt; (e.g. &lt;code&gt;sys.stdin&lt;/code&gt;, or objects returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;os.popen()&lt;/code&gt;&lt;/a&gt;), socket objects returned by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket()&lt;/code&gt;&lt;/a&gt;. You may also define a &lt;em&gt;wrapper&lt;/em&gt; class yourself, as long as it has an appropriate &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method (that really returns a file descriptor, not just a random integer).</source>
          <target state="translated">シーケンスで受け入れ可能なオブジェクトタイプには、Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;（ &lt;code&gt;sys.stdin&lt;/code&gt; 、または&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;os.popen()&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクト）、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket()&lt;/code&gt; &lt;/a&gt;によって返されるソケットオブジェクトがあります。また、適切な&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッド（実際にはランダムな整数だけでなくファイル記述子を返す）がある限り、&lt;em&gt;ラッパー&lt;/em&gt;クラスを自分で定義することもできます。</target>
        </trans-unit>
        <trans-unit id="67f920425dfdb0e1d204c3706777c2dfb256039d" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;unstructured&amp;rdquo; header is the default type of header in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;. Any header that does not have a specified syntax is treated as unstructured. The classic example of an unstructured header is the &lt;em&gt;Subject&lt;/em&gt; header.</source>
          <target state="translated">「非構造化」ヘッダーは、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322の&lt;/strong&gt;&lt;/a&gt;デフォルトのヘッダータイプです。指定された構文を持たないヘッダーは、非構造化として扱われます。非構造化ヘッダーの典型的な例は、&lt;em&gt;Subject&lt;/em&gt;ヘッダーです。</target>
        </trans-unit>
        <trans-unit id="e131bde80853d47856e8609b6fce7ef182378143" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; would also be useful for implementing variants of &lt;a href=&quot;functools#functools.lru_cache&quot;&gt;&lt;code&gt;functools.lru_cache()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; は&lt;/a&gt;またの変形実施するために有用であろう&lt;a href=&quot;functools#functools.lru_cache&quot;&gt; &lt;code&gt;functools.lru_cache()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9c7f6e615e42567774616270a66f004c71798f6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that executes calls asynchronously using a pool of at most &lt;em&gt;max_workers&lt;/em&gt; processes. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, it will default to the number of processors on the machine. If &lt;em&gt;max_workers&lt;/em&gt; is less than or equal to &lt;code&gt;0&lt;/code&gt;, then a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. On Windows, &lt;em&gt;max_workers&lt;/em&gt; must be less than or equal to &lt;code&gt;61&lt;/code&gt;. If it is not then &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the default chosen will be at most &lt;code&gt;61&lt;/code&gt;, even if more processors are available. &lt;em&gt;mp_context&lt;/em&gt; can be a multiprocessing context or None. It will be used to launch the workers. If &lt;em&gt;mp_context&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, the default multiprocessing context is used.</source>
          <target state="translated">最大で&lt;em&gt;max_workers&lt;/em&gt;プロセスのプールを使用して非同期的に呼び出しを実行する&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;サブクラス。&lt;em&gt;max_workers&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; または指定されていない場合、デフォルトでマシン上のプロセッサの数になります。&lt;em&gt;max_workers&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; 以下の場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。 Windowsでは、&lt;em&gt;max_workers&lt;/em&gt;は &lt;code&gt;61&lt;/code&gt; 以下である必要があります。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。場合&lt;em&gt;max_workersは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、その後、選択されたデフォルトは、せいぜいだろう &lt;code&gt;61&lt;/code&gt; 以上のプロセッサが利用可能な場合でも、。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;mp_context&lt;/em&gt;は、マルチプロセッシングコンテキストまたはNoneにすることができます。ワーカーを起動するために使用されます。&lt;em&gt;mp_context&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; または指定されていない場合、デフォルトのマルチプロセッシングコンテキストが使用されます。</target>
        </trans-unit>
        <trans-unit id="47217b41bb1d751c58676a69570e3346ce5098e4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that executes calls asynchronously using a pool of at most &lt;em&gt;max_workers&lt;/em&gt; processes. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, it will default to the number of processors on the machine. If &lt;em&gt;max_workers&lt;/em&gt; is lower or equal to &lt;code&gt;0&lt;/code&gt;, then a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. On Windows, &lt;em&gt;max_workers&lt;/em&gt; must be equal or lower than &lt;code&gt;61&lt;/code&gt;. If it is not then &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the default chosen will be at most &lt;code&gt;61&lt;/code&gt;, even if more processors are available. &lt;em&gt;mp_context&lt;/em&gt; can be a multiprocessing context or None. It will be used to launch the workers. If &lt;em&gt;mp_context&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, the default multiprocessing context is used.</source>
          <target state="translated">最大で&lt;em&gt;max_workers&lt;/em&gt;プロセスのプールを使用して非同期に呼び出しを実行する&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;サブクラス。&lt;em&gt;max_workers&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; または指定されていない場合、デフォルトでマシンのプロセッサ数になります。&lt;em&gt;max_workers&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; 以下の場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。 Windowsでは、&lt;em&gt;max_workers&lt;/em&gt;は &lt;code&gt;61&lt;/code&gt; 以下でなければなりません。そうでない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。場合&lt;em&gt;max_workersは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、その後、選択されたデフォルトは、せいぜいだろう &lt;code&gt;61&lt;/code&gt; 以上のプロセッサが利用可能な場合でも、。&lt;em&gt;mp_context&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;マルチプロセッシングコンテキストまたはNoneを指定できます。ワーカーの起動に使用されます。&lt;em&gt;mp_context&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; または指定されていない場合、デフォルトのマルチプロセッシングコンテキストが使用されます。</target>
        </trans-unit>
        <trans-unit id="4f20b7dfdda203d4d41b7e3513f2e5b7977c7e2d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of at most &lt;em&gt;max_workers&lt;/em&gt; threads to execute calls asynchronously.</source>
          <target state="translated">最大で&lt;em&gt;max_workers&lt;/em&gt;スレッドのプールを使用して呼び出しを非同期に実行する&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;サブクラス。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8c23a468c316481bdf2183623e1c6846281a4c8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; instance is fed HTML data and calls handler methods when start tags, end tags, text, comments, and other markup elements are encountered. The user should subclass &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; and override its methods to implement the desired behavior.</source>
          <target state="translated">&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; の&lt;/a&gt;タグ、終了タグ、テキスト、コメントを起動したときに、インスタンスは、HTMLデータや呼び出しハンドラメソッドを供給され、他のマークアップ要素が遭遇しています。ユーザーは&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;をサブクラス化し、そのメソッドをオーバーライドして目的の動作を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="0d0411e58015548ce4f79bef8d87ffb7f4cf110d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; instance represents one transaction with an HTTP server. It should be instantiated passing it a host and optional port number. If no port number is passed, the port is extracted from the host string if it has the form &lt;code&gt;host:port&lt;/code&gt;, else the default HTTP port (80) is used. If the optional &lt;em&gt;timeout&lt;/em&gt; parameter is given, blocking operations (like connection attempts) will timeout after that many seconds (if it is not given, the global default timeout setting is used). The optional &lt;em&gt;source_address&lt;/em&gt; parameter may be a tuple of a (host, port) to use as the source address the HTTP connection is made from. The optional &lt;em&gt;blocksize&lt;/em&gt; parameter sets the buffer size in bytes for sending a file-like message body.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt;インスタンスは、HTTPサーバと1つのトランザクションを表します。ホストとオプションのポート番号を渡してインスタンス化する必要があります。ポート番号が渡されない場合、ポートが &lt;code&gt;host:port&lt;/code&gt; の形式であれば、ホスト文字列からポートが抽出されます。そうでない場合、デフォルトのHTTPポート（80）が使用されます。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータが指定されている場合、ブロック操作（接続試行など）はその秒数後に&lt;em&gt;タイムアウトし&lt;/em&gt;ます（指定されていない場合、グローバルなデフォルトのタイムアウト設定が使用されます）。オプションの&lt;em&gt;source_address&lt;/em&gt;パラメータは、（ホスト、ポート）のタプルで、HTTP接続のソースアドレスとして使用できます。オプションの&lt;em&gt;blocksize&lt;/em&gt;パラメータは、ファイルのようなメッセージ本文を送信するためのバッファサイズをバイト単位で設定します。</target>
        </trans-unit>
        <trans-unit id="ed2fb59076f740158ba38827bce5bff26573eb0c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#http.client.HTTPResponse&quot;&gt;&lt;code&gt;HTTPResponse&lt;/code&gt;&lt;/a&gt; instance wraps the HTTP response from the server. It provides access to the request headers and the entity body. The response is an iterable object and can be used in a with statement.</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPResponse&quot;&gt; &lt;code&gt;HTTPResponse&lt;/code&gt; &lt;/a&gt;インスタンスは、サーバからのHTTPレスポンスをラップします。リクエストヘッダーとエンティティボディへのアクセスを提供します。応答は反復可能なオブジェクトであり、withステートメントで使用できます。</target>
        </trans-unit>
        <trans-unit id="30417cc6f1be8386812ed952297391d77fecc73f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; の&lt;/a&gt;インスタンスは次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="88406d2d2cb0f1d94ca189eb244e8e9fe67a27a7" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv4 address. A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt;&lt;code&gt;NetmaskValueError&lt;/code&gt;&lt;/a&gt; is raised if the mask is not valid for an IPv4 address.</source>
          <target state="translated">アン&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; が&lt;/a&gt;あれば発生し&lt;em&gt;たアドレスが&lt;/em&gt;有効なIPv4アドレスではありません。A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt; &lt;code&gt;NetmaskValueError&lt;/code&gt; は、&lt;/a&gt;マスクは、IPv4アドレスの有効でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="2c00af07c169fbcb2dc420227c3de9360f629263" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv6 address. A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt;&lt;code&gt;NetmaskValueError&lt;/code&gt;&lt;/a&gt; is raised if the mask is not valid for an IPv6 address.</source>
          <target state="translated">アン&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; が&lt;/a&gt;あれば発生し&lt;em&gt;たアドレスが&lt;/em&gt;有効なIPv6アドレスではありません。A &lt;a href=&quot;#ipaddress.NetmaskValueError&quot;&gt; &lt;code&gt;NetmaskValueError&lt;/code&gt; は&lt;/a&gt;マスクがIPv6アドレスに対して有効でない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="e22e8e2b70a072517721b45185e0df25bf62617a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; can wrap an already-open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or operate directly on a named file. The &lt;em&gt;filename&lt;/em&gt; argument specifies either the file object to wrap, or the name of the file to open (as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object). When wrapping an existing file object, the wrapped file will not be closed when the &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="translated">アン&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; は&lt;/a&gt;既に開いてラップすることができます&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;、または指定したファイルを直接操作します。&lt;em&gt;ファイル名&lt;/em&gt;（オープンへの引数が指定するいずれかのラップにファイルオブジェクト、またはファイルの名前&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのような&lt;/a&gt;オブジェクト）。既存のファイルオブジェクトをラップする場合、&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;が閉じられても、ラップされたファイルは閉じられません。</target>
        </trans-unit>
        <trans-unit id="826a7a8ccbf423464475cb4ae7502ae90c2e645a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; can wrap an already-open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or operate directly on a named file. The &lt;em&gt;filename&lt;/em&gt; argument specifies either the file object to wrap, or the name of the file to open (as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object). When wrapping an existing file object, the wrapped file will not be closed when the &lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="translated">アン&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; は&lt;/a&gt;既に開いてラップすることができます&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトを&lt;/a&gt;、または指定したファイルを直接操作します。&lt;em&gt;ファイル名&lt;/em&gt;（オープンへの引数が指定するいずれかのラップにファイルオブジェクト、またはファイルの名前&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;パスのような&lt;/a&gt;オブジェクト）。既存のファイルオブジェクトをラップする場合、&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt;を閉じても、ラップされたファイルは閉じられません。</target>
        </trans-unit>
        <trans-unit id="39f46664bc28103047a5cc26287a1fd211662851" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; の&lt;/a&gt;インスタンスは次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="4e40ef7751f7971309b0f2f98a0b9e618f82a29f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance encapsulates an SMTP connection. It has methods that support a full repertoire of SMTP and ESMTP operations. If the optional host and port parameters are given, the SMTP &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; method is called with those parameters during initialization. If specified, &lt;em&gt;local_hostname&lt;/em&gt; is used as the FQDN of the local host in the HELO/EHLO command. Otherwise, the local hostname is found using &lt;a href=&quot;socket#socket.getfqdn&quot;&gt;&lt;code&gt;socket.getfqdn()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; call returns anything other than a success code, an &lt;a href=&quot;#smtplib.SMTPConnectError&quot;&gt;&lt;code&gt;SMTPConnectError&lt;/code&gt;&lt;/a&gt; is raised. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). If the timeout expires, &lt;a href=&quot;socket#socket.timeout&quot;&gt;&lt;code&gt;socket.timeout&lt;/code&gt;&lt;/a&gt; is raised. The optional source_address parameter allows binding to some specific source address in a machine with multiple network interfaces, and/or to some specific source TCP port. It takes a 2-tuple (host, port), for the socket to bind to as its source address before connecting. If omitted (or if host or port are &lt;code&gt;''&lt;/code&gt; and/or 0 respectively) the OS default behavior will be used.</source>
          <target state="translated">&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; の&lt;/a&gt;インスタンスはSMTPコネクションをカプセル化します。 SMTPおよびESMTP操作の完全なレパートリーをサポートするメソッドがあります。オプションのhostおよびportパラメータが指定されている場合、SMTP &lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;メソッドは、初期化中にそれらのパラメータを使用して呼び出されます。指定した場合、&lt;em&gt;local_hostname&lt;/em&gt;は、HELO / EHLOコマンドでローカルホストのFQDNとして使用されます。それ以外の場合、ローカルホスト名は&lt;a href=&quot;socket#socket.getfqdn&quot;&gt; &lt;code&gt;socket.getfqdn()&lt;/code&gt; &lt;/a&gt;を使用して検索されます。&lt;a href=&quot;#smtplib.SMTP.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;呼び出しが成功コード以外のものを返す場合、&lt;a href=&quot;#smtplib.SMTPConnectError&quot;&gt; &lt;code&gt;SMTPConnectError&lt;/code&gt; &lt;/a&gt;が発生します。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータは、接続試行のようなブロック操作のタイムアウトを秒単位で指定します（指定されていない場合、グローバルなデフォルトのタイムアウト設定が使用されます）。タイムアウトになると、&lt;a href=&quot;socket#socket.timeout&quot;&gt; &lt;code&gt;socket.timeout&lt;/code&gt; &lt;/a&gt;が発生します。オプションのsource_addressパラメータを使用すると、複数のネットワークインターフェースを備えたマシンの特定の送信元アドレスや特定の送信元TCPポートにバインドできます。ソケットが接続前に送信元アドレスとしてバインドするには、2タプル（ホスト、ポート）が必要です。省略した場合（またはホストまたはポートがそれぞれ &lt;code&gt;''&lt;/code&gt; および/または0の場合）、OSのデフォルトの動作が使用されます。</target>
        </trans-unit>
        <trans-unit id="b06f296a09f34cbedecd22805400c41792ba65c6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="translated">&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; の&lt;/a&gt;インスタンスは次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="2c58fa6751490e6d0e0d24391a1319962ea6b856" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt;&lt;code&gt;SMTP_SSL&lt;/code&gt;&lt;/a&gt; instance behaves exactly the same as instances of &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt;&lt;code&gt;SMTP_SSL&lt;/code&gt;&lt;/a&gt; should be used for situations where SSL is required from the beginning of the connection and using &lt;code&gt;starttls()&lt;/code&gt; is not appropriate. If &lt;em&gt;host&lt;/em&gt; is not specified, the local host is used. If &lt;em&gt;port&lt;/em&gt; is zero, the standard SMTP-over-SSL port (465) is used. The optional arguments &lt;em&gt;local_hostname&lt;/em&gt;, &lt;em&gt;timeout&lt;/em&gt; and &lt;em&gt;source_address&lt;/em&gt; have the same meaning as they do in the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class. &lt;em&gt;context&lt;/em&gt;, also optional, can contain a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; and allows configuring various aspects of the secure connection. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">&lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt; &lt;code&gt;SMTP_SSL&lt;/code&gt; の&lt;/a&gt;インスタンスは、インスタンスのとまったく同じように動作&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; を&lt;/a&gt;。接続の最初からSSLが必要であり、 &lt;code&gt;starttls()&lt;/code&gt; の使用が適切でない状況では、&lt;a href=&quot;#smtplib.SMTP_SSL&quot;&gt; &lt;code&gt;SMTP_SSL&lt;/code&gt; &lt;/a&gt;を使用する必要があります。&lt;em&gt;host&lt;/em&gt;が指定されていない場合、ローカルホストが使用されます。場合&lt;em&gt;ポートが&lt;/em&gt;ゼロで、標準SMTPオーバーSSLポート（465）が使用されます。オプションの引数&lt;em&gt;local_hostname&lt;/em&gt;、&lt;em&gt;timeout&lt;/em&gt;、および&lt;em&gt;source_address&lt;/em&gt;は、&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;クラスと同じ意味です。&lt;em&gt;context&lt;/em&gt;もオプションで、&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;を含めることができます&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;安全な接続のさまざまな側面を構成できます。ベストプラクティスについては、&lt;a href=&quot;ssl#ssl-security&quot;&gt;セキュリティに関する考慮事項&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="4381f9c58b5b614abf7892a4b1f45ba2f8360660" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; is raised if the private key doesn&amp;rsquo;t match with the certificate.</source>
          <target state="translated">アン&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; は&lt;/a&gt;、秘密鍵が証明書と一致しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="6503930af8cf259e4f55b3889f6a90017471de7a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; belongs to the application, the &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; is not allowed to modify &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; objects passed to it from the application, although it may make copies and modify those.</source>
          <target state="translated">アン&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; のは&lt;/a&gt;、アプリケーションに属し&lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;変更することが許可されていない&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; のは&lt;/a&gt;、それはコピーを作成し、それらを修正するかもしれないが、アプリケーションから渡されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="79185203e0837e407c9cfffcf6c6215ce7683000" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; can be raised if either file cannot be accessed for some reason.</source>
          <target state="translated">アン&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは、&lt;/a&gt;どちらかのファイルが何らかの理由でアクセスすることができない場合に発生することができます。</target>
        </trans-unit>
        <trans-unit id="c390610582f1c814d75321837553c7075f775df3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised on syscall failure.</source>
          <target state="translated">アン&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは、&lt;/a&gt;システムコールの失敗に発生します。</target>
        </trans-unit>
        <trans-unit id="6e45de73f5fdf516cc14c157c02fac73fbe32076" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with the value of errno when the syscall returns -1.</source>
          <target state="translated">アン&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のは、&lt;/a&gt; errnoの値が上昇したときのシステムコールは-1を返します。</target>
        </trans-unit>
        <trans-unit id="cfafa94088c5bdf5d8dde31f6359f2a768fafdbe" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; will be raised for integer values that cannot be represented in (binary) plist files.</source>
          <target state="translated">アン&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;（バイナリ）のplistファイルでは表現できない整数値のために発生します。</target>
        </trans-unit>
        <trans-unit id="8902561dc3621643794d523ee377886fb9098907" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;Asynchronous Context Managers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;を実装するクラスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;。デフォルトの実装&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;を返しが設けられている &lt;code&gt;self&lt;/code&gt; ながら&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;抽象メソッドデフォルトの戻りによるものである &lt;code&gt;None&lt;/code&gt; 。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;Asynchronous Context Managersの&lt;/a&gt;定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="dda979d2a681c46df74b589ab265649e61f26e6c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;を実装するクラスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;は、デフォルトで &lt;code&gt;None&lt;/code&gt; を返す抽象メソッドであるのに対し、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;のデフォルト実装は、 &lt;code&gt;self&lt;/code&gt; を返します。&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Typesの&lt;/a&gt;定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="9fdb63e9d860e12df6617deab601b29ae6ed82b3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for objects representing a file system path, e.g. &lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt;&lt;code&gt;pathlib.PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt; &lt;code&gt;pathlib.PurePath&lt;/code&gt; などの&lt;/a&gt;ファイルシステムパスを表すオブジェクトの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33ab1cf8909ceb57812b37b76ad04f8a117605e8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; to provide the ability to read &lt;em&gt;resources&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基底クラス&lt;/a&gt;読み込む機能を提供する&lt;em&gt;リソースを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3659fcc10888c5f8705dd1f37cd33e48a2bd5bc6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for built-in modules. All known built-in modules are listed in &lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt;&lt;code&gt;sys.builtin_module_names&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">組み込みモジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;。すべての既知の組み込みモジュールは&lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt; &lt;code&gt;sys.builtin_module_names&lt;/code&gt; に&lt;/a&gt;リストされています。このクラスは、&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; &lt;/a&gt; ABCを実装します。</target>
        </trans-unit>
        <trans-unit id="d3c626fb55d328c4d6e0b42ec6745a070458977c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for frozen modules. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">凍結されたモジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;。このクラスは、&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; &lt;/a&gt; ABCを実装します。</target>
        </trans-unit>
        <trans-unit id="5ba830af2baa220c63058bd688a4c963ad3b97c2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;, similar to &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt;, that supports combining both synchronous and asynchronous context managers, as well as having coroutines for cleanup logic.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;と同様の&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#async-context-managers&quot;&gt;非同期コンテキストマネージャー&lt;/a&gt;。同期コンテキストマネージャーと非同期コンテキストマネージャーの両方の組み合わせをサポートし、クリーンアップロジック用のコルーチンを備えています。</target>
        </trans-unit>
        <trans-unit id="a33f8c504da439806ad6f5c27e7d7aa8cddd8ff2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;object.__aenter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;object.__aexit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;Asynchronous Context Managers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;を実装するクラスの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;。デフォルトの実装&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;object.__aenter__()&lt;/code&gt; &lt;/a&gt;を返しが設けられている &lt;code&gt;self&lt;/code&gt; ながら&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;object.__aexit__()&lt;/code&gt; &lt;/a&gt;抽象メソッドデフォルトの戻りによるものである &lt;code&gt;None&lt;/code&gt; 。&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;非同期コンテキストマネージャーの&lt;/a&gt;定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="2cc7eac6c4b47b2315d64959d3cca85f620cb794" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for classes that implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt;. A default implementation for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;object.__enter__()&lt;/code&gt;&lt;/a&gt; is provided which returns &lt;code&gt;self&lt;/code&gt; while &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;object.__exit__()&lt;/code&gt;&lt;/a&gt; is an abstract method which by default returns &lt;code&gt;None&lt;/code&gt;. See also the definition of &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;を実装するクラスの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;。以下のためのデフォルトの実装&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;object.__enter__()&lt;/code&gt; &lt;/a&gt;返しが設けられている &lt;code&gt;self&lt;/code&gt; しながら、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;object.__exit__()&lt;/code&gt; &lt;/a&gt;抽象メソッドのデフォルトのリターンによってある &lt;code&gt;None&lt;/code&gt; 。&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;ContextManagerタイプの&lt;/a&gt;定義も参照してください。</target>
        </trans-unit>
        <trans-unit id="2fa2efd6271fd8c9504c26e450ee4186fd02e58f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for objects representing a file system path, e.g. &lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt;&lt;code&gt;pathlib.PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルシステムパスを表すオブジェクトの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラス&lt;/a&gt;（例：&lt;a href=&quot;pathlib#pathlib.PurePath&quot;&gt; &lt;code&gt;pathlib.PurePath&lt;/code&gt; )&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="358e988e76edb92a04a829658d6e0b9e4671e17d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; to provide the ability to read &lt;em&gt;resources&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基底クラス&lt;/a&gt;読み込む機能を提供する&lt;em&gt;リソースを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="64448c03d49b3734a0c2bef8a552c0cddb79f909" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for built-in modules. All known built-in modules are listed in &lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt;&lt;code&gt;sys.builtin_module_names&lt;/code&gt;&lt;/a&gt;. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">組み込みモジュールの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;。既知のすべての組み込みモジュールは、&lt;a href=&quot;sys#sys.builtin_module_names&quot;&gt; &lt;code&gt;sys.builtin_module_names&lt;/code&gt; に&lt;/a&gt;リストされています。このクラスは、&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; ABCを&lt;/a&gt;実装します。</target>
        </trans-unit>
        <trans-unit id="b140912525c1a36c9a7a36ad6e3498b34061acd3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt; for frozen modules. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt;&lt;/a&gt; ABCs.</source>
          <target state="translated">凍結モジュールの&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;インポーター&lt;/a&gt;。このクラスは、&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader&lt;/code&gt; ABCを&lt;/a&gt;実装します。</target>
        </trans-unit>
        <trans-unit id="46c37a084fd05a1723cae4dcbce9bafda6d05463" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;asynchronous context manager&lt;/a&gt;, similar to &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt;, that supports combining both synchronous and asynchronous context managers, as well as having coroutines for cleanup logic.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;と同様の&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#async-context-managers&quot;&gt;非同期コンテキストマネージャー&lt;/a&gt;。同期コンテキストマネージャーと非同期コンテキストマネージャーの両方の組み合わせをサポートし、クリーンアップロジックのコルーチンを備えています。</target>
        </trans-unit>
        <trans-unit id="4b1e4da468b2701c8321a708c9ecb7fa13e7e244" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_algorithms#Examples&quot;&gt;LRU (least recently used) cache&lt;/a&gt; works best when the most recent calls are the best predictors of upcoming calls (for example, the most popular articles on a news server tend to change each day). The cache&amp;rsquo;s size limit assures that the cache does not grow without bound on long-running processes such as web servers.</source>
          <target state="translated">アン&lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_algorithms#Examples&quot;&gt;LRU（最低使用）キャッシュは、&lt;/a&gt;最新の呼び出しが、今後のコール（例えば、ニュース・サーバ上で最も人気のある記事が毎日変化する傾向）の最良の予測因子であるときに最適です。キャッシュのサイズ制限により、Webサーバーなどの実行時間の長いプロセスに制限されることなく、キャッシュが大きくなることはありません。</target>
        </trans-unit>
        <trans-unit id="0cbb6b0513c86e9d2a7dcccebb18fe2a4dff0ec6" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&quot;&gt;LRU (least recently used) cache&lt;/a&gt; works best when the most recent calls are the best predictors of upcoming calls (for example, the most popular articles on a news server tend to change each day). The cache&amp;rsquo;s size limit assures that the cache does not grow without bound on long-running processes such as web servers.</source>
          <target state="translated">アン&lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&quot;&gt;LRU（最低使用）キャッシュは、&lt;/a&gt;最新の呼び出しが、今後のコール（例えば、ニュース・サーバ上で最も人気のある記事が毎日変化する傾向）の最良の予測因子であるときに最適です。キャッシュのサイズ制限により、Webサーバーなどの長時間実行されるプロセスに制限されることなくキャッシュが増大することはありません。</target>
        </trans-unit>
        <trans-unit id="3761bc9891cb807e2bd71dcdb229acbbbd262ea3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; input stream, ready to read from the start of the optional input data.</source>
          <target state="translated">&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; の&lt;/a&gt;準備入力ストリームは、オプションの入力データの先頭から読み取ります。</target>
        </trans-unit>
        <trans-unit id="134b8c5f8672fe5893203afb4343e752db19a0c9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;'AF_INET'&lt;/code&gt; address is a tuple of the form &lt;code&gt;(hostname, port)&lt;/code&gt; where &lt;em&gt;hostname&lt;/em&gt; is a string and &lt;em&gt;port&lt;/em&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;'AF_INET'&lt;/code&gt; アドレスの形式のタプル &lt;code&gt;(hostname, port)&lt;/code&gt; &lt;em&gt;ホスト名は&lt;/em&gt;文字列であり、&lt;em&gt;ポートは&lt;/em&gt;整数です。</target>
        </trans-unit>
        <trans-unit id="728c7bfe4ba1acdb2c72fa346ca49007566679c3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;'AF_UNIX'&lt;/code&gt; address is a string representing a filename on the filesystem.</source>
          <target state="translated">アン &lt;code&gt;'AF_UNIX'&lt;/code&gt; アドレスは、ファイルシステム上のファイル名を表す文字列です。</target>
        </trans-unit>
        <trans-unit id="279c56929f7657d41eb016d797accbea5fc43126" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTTPError&lt;/code&gt; exception raised as a security consideration if the HTTPRedirectHandler is presented with a redirected URL which is not an HTTP, HTTPS or FTP URL.</source>
          <target state="translated">&lt;code&gt;HTTPError&lt;/code&gt; 、HTTP、HTTPS、またはFTP URLではないリダイレクトされたURLが提示された場合に、セキュリティ上の考慮事項として発生するHTTPError例外。</target>
        </trans-unit>
        <trans-unit id="33219ca499b092a52f7abbdd6ce7f57c5fcff6f7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async def&lt;/code&gt; function definition. Has the same fields as &lt;a href=&quot;#ast.FunctionDef&quot;&gt;&lt;code&gt;FunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;async def&lt;/code&gt; 関数定義。&lt;a href=&quot;#ast.FunctionDef&quot;&gt; &lt;code&gt;FunctionDef&lt;/code&gt; &lt;/a&gt;と同じフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="5e15d34d18efcaf549913dce3621961594f1b7ca" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;await&lt;/code&gt; expression. &lt;code&gt;value&lt;/code&gt; is what it waits for. Only valid in the body of an &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt;&lt;code&gt;AsyncFunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 表現。 &lt;code&gt;value&lt;/code&gt; はそれが待つものです。&lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt; &lt;code&gt;AsyncFunctionDef&lt;/code&gt; &lt;/a&gt;の本体でのみ有効です。</target>
        </trans-unit>
        <trans-unit id="fb3fcacb835ee81a42ed8d1456cd79b0226a380e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; instance holds the headers from an HTTP response. It is implemented using the &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;http.client.HTTPMessage&lt;/code&gt; のインスタンスは、HTTPレスポンスからヘッダを保持しています。&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;クラスを使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="3f556ab229a8f8a3a47ed35d148d0d0e441a49a6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; statement. &lt;code&gt;test&lt;/code&gt; holds a single node, such as a &lt;a href=&quot;#ast.Compare&quot;&gt;&lt;code&gt;Compare&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;orelse&lt;/code&gt; each hold a list of nodes.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 声明。 &lt;code&gt;test&lt;/code&gt; は、&lt;a href=&quot;#ast.Compare&quot;&gt; &lt;code&gt;Compare&lt;/code&gt; &lt;/a&gt;ノードなどの単一ノードを保持します。 &lt;code&gt;body&lt;/code&gt; と &lt;code&gt;orelse&lt;/code&gt; は、それぞれノードのリストを保持します。</target>
        </trans-unit>
        <trans-unit id="e64e19d30a6b038f871b1a0ba266542e0cf44731" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__abs__&lt;/code&gt; that is covariant in its return type.</source>
          <target state="translated">戻り値の型が共変である1つの抽象メソッド &lt;code&gt;__abs__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="d1781ec94a5b61e39438eca65acc12f99677f117" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__bytes__&lt;/code&gt;.</source>
          <target state="translated">1つの抽象メソッド &lt;code&gt;__bytes__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="b0fc1ecd30f8b9047835f4fbca4de0c1a7114ddd" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__complex__&lt;/code&gt;.</source>
          <target state="translated">1つの抽象メソッド &lt;code&gt;__complex__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="0cc0d8a21ea5d1cfd983b9cd9cc3577a029a5d40" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__float__&lt;/code&gt;.</source>
          <target state="translated">1つの抽象メソッド &lt;code&gt;__float__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="5a96e7a759cdcee0e8a671529f6684f0284b3c73" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__index__&lt;/code&gt;.</source>
          <target state="translated">1つの抽象メソッド &lt;code&gt;__index__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="79db425b6df47a0eb8f4b913a4b8f04661c96e98" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__int__&lt;/code&gt;.</source>
          <target state="translated">1つの抽象メソッド &lt;code&gt;__int__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="15ea43b80301cadc8e24d4d28cf8330de4a4c022" translate="yes" xml:space="preserve">
          <source>An ABC with one abstract method &lt;code&gt;__round__&lt;/code&gt; that is covariant in its return type.</source>
          <target state="translated">戻り値の型が共変である1つの抽象メソッド &lt;code&gt;__round__&lt;/code&gt; を持つABC 。</target>
        </trans-unit>
        <trans-unit id="d47c45aeccb0981a58aa461b9dad821d712d95bc" translate="yes" xml:space="preserve">
          <source>An Event object manages an internal flag that can be set to &lt;em&gt;true&lt;/em&gt; with the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method and reset to &lt;em&gt;false&lt;/em&gt; with the &lt;a href=&quot;#asyncio.Event.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method blocks until the flag is set to &lt;em&gt;true&lt;/em&gt;. The flag is set to &lt;em&gt;false&lt;/em&gt; initially.</source>
          <target state="translated">Eventオブジェクトは、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;メソッドで&lt;em&gt;true&lt;/em&gt;に設定し、&lt;a href=&quot;#asyncio.Event.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドで&lt;em&gt;falseに&lt;/em&gt;リセットできる内部フラグを管理し&lt;em&gt;ます&lt;/em&gt;。&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;メソッドブロックのフラグが設定されるまで、&lt;em&gt;真&lt;/em&gt;。フラグは最初は&lt;em&gt;falseに&lt;/em&gt;設定されてい&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33c1328176988806c7acc0aff05cc07892efc2ee" translate="yes" xml:space="preserve">
          <source>An HMAC object has the following methods:</source>
          <target state="translated">HMAC オブジェクトには、以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="96ce959eac9c1efc4346b40a6c2b0fcdb09eb53b" translate="yes" xml:space="preserve">
          <source>An HTTP Extension Framework &lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;, Section 7 (Experimental)</source>
          <target state="translated">HTTP拡張フレームワーク&lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-58&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;、セクション7（試験的）</target>
        </trans-unit>
        <trans-unit id="db46c1af527bc8802a0694ac6abd0bc630b63030" translate="yes" xml:space="preserve">
          <source>An HTTP Extension Framework &lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-61&quot;&gt;&lt;strong&gt;RFC 2774&lt;/strong&gt;&lt;/a&gt;, Section 7 (Experimental)</source>
          <target state="translated">HTTP拡張フレームワーク&lt;a href=&quot;https://tools.ietf.org/html/rfc2774.html&quot; id=&quot;index-61&quot;&gt;&lt;strong&gt;RFC2774&lt;/strong&gt;&lt;/a&gt;、セクション7（実験的）</target>
        </trans-unit>
        <trans-unit id="2501160a58b3e46f799c91de6330ed1424f8f7c4" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code for Indicating Hints &lt;a href=&quot;https://tools.ietf.org/html/rfc8297.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 8297&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">ヒントを示すためのHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc8297.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC8297&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="586cd579fe48ea0181edb6aee914365f538aa9a9" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles &lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">法的障害を報告するHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-48&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b53d4a75ae59ffea5b1a33aa114bbecf5009f795" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles &lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC 7725&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">法的障害を報告するためのHTTPステータスコード&lt;a href=&quot;https://tools.ietf.org/html/rfc7725.html&quot; id=&quot;index-51&quot;&gt;&lt;strong&gt;RFC7725&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="950ad3d1cdc9b45ddd459fc6e7dc06daf0425f0b" translate="yes" xml:space="preserve">
          <source>An HTTP status code as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;. This numeric value corresponds to a value found in the dictionary of codes as found in &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.responses&quot;&gt;&lt;code&gt;http.server.BaseHTTPRequestHandler.responses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2616で&lt;/strong&gt;&lt;/a&gt;定義され&lt;strong&gt;ている&lt;/strong&gt; HTTPステータスコード。この数値は、&lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.responses&quot;&gt; &lt;code&gt;http.server.BaseHTTPRequestHandler.responses&lt;/code&gt; にある&lt;/a&gt;コードの辞書にある値に対応しています。</target>
        </trans-unit>
        <trans-unit id="0fd6615738f7a41f38401d20b6960d63cc413cb5" translate="yes" xml:space="preserve">
          <source>An SSL context holds various data longer-lived than single SSL connections, such as SSL configuration options, certificate(s) and private key(s). It also manages a cache of SSL sessions for server-side sockets, in order to speed up repeated connections from the same clients.</source>
          <target state="translated">SSLコンテキストは、SSL設定オプションや証明書、秘密鍵など、単一のSSL接続よりも長持ちする様々なデータを保持します。また、同じクライアントからの繰り返し接続を高速化するために、サーバサイドソケットのSSLセッションのキャッシュを管理します。</target>
        </trans-unit>
        <trans-unit id="76cf9150b9af7f68ed4e620f15b7b416606b07f7" translate="yes" xml:space="preserve">
          <source>An SSLObject communicates with the outside world using memory buffers. The class &lt;a href=&quot;#ssl.MemoryBIO&quot;&gt;&lt;code&gt;MemoryBIO&lt;/code&gt;&lt;/a&gt; provides a memory buffer that can be used for this purpose. It wraps an OpenSSL memory BIO (Basic IO) object:</source>
          <target state="translated">SSLObjectは、メモリバッファを使用して外部と通信します。クラス&lt;a href=&quot;#ssl.MemoryBIO&quot;&gt; &lt;code&gt;MemoryBIO&lt;/code&gt; &lt;/a&gt;は、この目的で使用できるメモリバッファーを提供します。OpenSSLメモリBIO（基本IO）オブジェクトをラップします。</target>
        </trans-unit>
        <trans-unit id="a466897649a3d651921f5fa00e86176f05ce65c2" translate="yes" xml:space="preserve">
          <source>An XML declaration was found somewhere other than the start of the input data.</source>
          <target state="translated">入力データの開始位置以外の場所でXML宣言が見つかりました。</target>
        </trans-unit>
        <trans-unit id="2f6e529d041ed7501f54f3d2eb8b240dc32017aa" translate="yes" xml:space="preserve">
          <source>An abbreviation for &amp;ldquo;derive window&amp;rdquo;, &lt;a href=&quot;#curses.window.derwin&quot;&gt;&lt;code&gt;derwin()&lt;/code&gt;&lt;/a&gt; is the same as calling &lt;a href=&quot;#curses.window.subwin&quot;&gt;&lt;code&gt;subwin()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;begin_y&lt;/em&gt; and &lt;em&gt;begin_x&lt;/em&gt; are relative to the origin of the window, rather than relative to the entire screen. Return a window object for the derived window.</source>
          <target state="translated">「ウィンドウの派生」の省略形である&lt;a href=&quot;#curses.window.derwin&quot;&gt; &lt;code&gt;derwin()&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#curses.window.subwin&quot;&gt; &lt;code&gt;subwin()&lt;/code&gt; の&lt;/a&gt;呼び出しと同じです。ただし、&lt;em&gt;begin_y&lt;/em&gt;と&lt;em&gt;begin_x&lt;/em&gt;は、画面全体ではなくウィンドウの原点を基準にしています。派生ウィンドウのウィンドウオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="e10c1add34316ae69c55a9723388948395613133" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loading arbitrary resources from the storage back-end.</source>
          <target state="translated">ストレージバックエンドから任意のリソースをロードするためのオプションの&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;プロトコルを実装する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c00c78ac6821af3449c4a38de1c0d33c74f95d2" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loaders that inspect modules.</source>
          <target state="translated">モジュールを検査するローダー用のオプションの&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;プロトコルを実装する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="940dc0b3afc6e45c33bbd105502b6ee876696cec" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for the exact definition for a loader.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。ローダーの正確な定義については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7401f395dccd11d677211d9563b9e95eb89ebab5" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loading arbitrary resources from the storage back-end.</source>
          <target state="translated">ストレージバックエンドから任意のリソースをロードするためのオプションの&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP302&lt;/strong&gt;&lt;/a&gt;プロトコルを実装する&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d0db0a7b142974ca4ce772e7260ab0b495fe83a" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which implements the optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol for loaders that inspect modules.</source>
          <target state="translated">モジュールを検査するローダー用のオプションの&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP302&lt;/strong&gt;&lt;/a&gt;プロトコルを実装する&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90e97f3876374a37e56d4245e3852f67bf0f985f" translate="yes" xml:space="preserve">
          <source>An abstract base class for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for the exact definition for a loader.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;の抽象基本クラス。ローダーの正確な定義については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP302を&lt;/strong&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0db9b27bf89080da856677605e14657460be5647" translate="yes" xml:space="preserve">
          <source>An abstract base class for asyncio policies.</source>
          <target state="translated">asyncio ポリシーのための抽象的な基底クラスです。</target>
        </trans-unit>
        <trans-unit id="b462ad15f20b8da0d5b31b0986af332c0c7b0e96" translate="yes" xml:space="preserve">
          <source>An abstract base class for implementing source (and optionally bytecode) file loading. The class inherits from both &lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt;&lt;code&gt;ResourceLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt;&lt;code&gt;ExecutionLoader&lt;/code&gt;&lt;/a&gt;, requiring the implementation of:</source>
          <target state="translated">ソース（およびオプションでバイトコード）ファイルのロードを実装するための抽象基本クラス。クラスは&lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt; &lt;code&gt;ResourceLoader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt; &lt;code&gt;ExecutionLoader&lt;/code&gt; の&lt;/a&gt;両方から継承され、次の実装が必要です。</target>
        </trans-unit>
        <trans-unit id="c0dc52b90a16c5199a8601d18484021f8b780efd" translate="yes" xml:space="preserve">
          <source>An abstract base class for resource readers capable of serving the &lt;code&gt;files&lt;/code&gt; interface. Subclasses ResourceReader and provides concrete implementations of the ResourceReader&amp;rsquo;s abstract methods. Therefore, any loader supplying TraversableReader also supplies ResourceReader.</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; インターフェイスを提供できるリソースリーダーの抽象基本クラス。ResourceReaderをサブクラス化し、ResourceReaderの抽象メソッドの具体的な実装を提供します。したがって、TraversableReaderを提供するローダーはResourceReaderも提供します。</target>
        </trans-unit>
        <trans-unit id="2021dfdbcfaef781d0d06f712def8d7955c0628e" translate="yes" xml:space="preserve">
          <source>An abstract base class for time zone information objects. These are used by the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; classes to provide a customizable notion of time adjustment (for example, to account for time zone and/or daylight saving time).</source>
          <target state="translated">タイムゾーン情報オブジェクトの抽象基本クラス。これらは、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;調整のカスタマイズ可能な概念を提供するために、日時クラスおよび&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;クラスによって使用されます（たとえば、タイムゾーンや夏時間を考慮に入れるため）。</target>
        </trans-unit>
        <trans-unit id="41c1eeca19930aa837c9177b8ebdce0b081bc67f" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;ファインダーを&lt;/a&gt;表す抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="cfd3e5d07b9f0593a253ce92bd9938e6c4961954" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt;. For compatibility, this is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダーを&lt;/a&gt;表す抽象基本クラス。互換性のために、これは&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="a589cb6dfdfee9aae19397d6a303891c9da74964" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. Though it bears some similarities to &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;MetaPathFinder&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;PathEntryFinder&lt;/code&gt; is meant for use only within the path-based import subsystem provided by &lt;code&gt;PathFinder&lt;/code&gt;. This ABC is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt; for compatibility reasons only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;パスエントリファインダを&lt;/a&gt;表す抽象基本クラス。&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;MetaPathFinder&lt;/code&gt; &lt;/a&gt;といくつかの類似点がありますが、 &lt;code&gt;PathEntryFinder&lt;/code&gt; は、 &lt;code&gt;PathFinder&lt;/code&gt; によって提供されるパスベースのインポートサブシステム内でのみ使用することを目的としています。このABCは、互換性の理由でのみ&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="41486f4a3356c2fa47f9cd992060772ba5c1e998" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;ファインダーを&lt;/a&gt;表す抽象基本クラス。</target>
        </trans-unit>
        <trans-unit id="b6e7d3d824aac467d8e2c0c2433ae146ca49b9e6" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;meta path finder&lt;/a&gt;. For compatibility, this is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-meta-path-finder&quot;&gt;メタパスファインダーを&lt;/a&gt;表す抽象基本クラス。互換性のために、これは&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="a07e60929ea850cec3390065ad4623c92cfcfcb9" translate="yes" xml:space="preserve">
          <source>An abstract base class representing a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt;. Though it bears some similarities to &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;MetaPathFinder&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;PathEntryFinder&lt;/code&gt; is meant for use only within the path-based import subsystem provided by &lt;code&gt;PathFinder&lt;/code&gt;. This ABC is a subclass of &lt;a href=&quot;#importlib.abc.Finder&quot;&gt;&lt;code&gt;Finder&lt;/code&gt;&lt;/a&gt; for compatibility reasons only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;パスエントリファインダーを&lt;/a&gt;表す抽象基本クラス。&lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;MetaPathFinder&lt;/code&gt; &lt;/a&gt;といくつかの類似点がありますが、 &lt;code&gt;PathEntryFinder&lt;/code&gt; は、 &lt;code&gt;PathFinder&lt;/code&gt; によって提供されるパスベースのインポートサブシステム内でのみ使用することを目的としています。このABCは、互換性の理由からのみ&lt;a href=&quot;#importlib.abc.Finder&quot;&gt; &lt;code&gt;Finder&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="8a9af4121f78134bb685216fbf44bd4f5d826951" translate="yes" xml:space="preserve">
          <source>An abstract base class which inherits from &lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt;&lt;code&gt;InspectLoader&lt;/code&gt;&lt;/a&gt; that, when implemented, helps a module to be executed as a script. The ABC represents an optional &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader&quot;&gt; &lt;code&gt;InspectLoader&lt;/code&gt; &lt;/a&gt;から継承する抽象基本クラス。実装すると、モジュールをスクリプトとして実行するのに役立ちます。ABCは、オプションの&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;プロトコルを表します。</target>
        </trans-unit>
        <trans-unit id="11de885f0ab5a2d6a8da413f025f1f42a92914a8" translate="yes" xml:space="preserve">
          <source>An abstract base class which inherits from &lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt;&lt;code&gt;ResourceLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt;&lt;code&gt;ExecutionLoader&lt;/code&gt;&lt;/a&gt;, providing concrete implementations of &lt;a href=&quot;#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;ResourceLoader.get_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt;&lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.ResourceLoader&quot;&gt; &lt;code&gt;ResourceLoader&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.ExecutionLoader&quot;&gt; &lt;code&gt;ExecutionLoader&lt;/code&gt; &lt;/a&gt;から継承する抽象基本クラス&lt;a href=&quot;#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;ResourceLoader.get_data()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt; &lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt; の&lt;/a&gt;具象実装を提供します。</target>
        </trans-unit>
        <trans-unit id="955770255554b096c2a2d0d00989cc8cb2114744" translate="yes" xml:space="preserve">
          <source>An abstract class that provides methods to execute calls asynchronously. It should not be used directly, but through its concrete subclasses.</source>
          <target state="translated">呼び出しを非同期に実行するメソッドを提供する抽象クラスです。直接使用するのではなく、その具体的なサブクラスを介して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f134861215475c0febc28a88cff9f900d434fd5d" translate="yes" xml:space="preserve">
          <source>An abstract example would be the following to ensure correct resource management:</source>
          <target state="translated">抽象的な例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="7c833ccaac11f4d73ed6358d2404695fb39851cf" translate="yes" xml:space="preserve">
          <source>An abstract method for finding a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for the specified module. Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;, this method was meant for use in &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; and in the path-based import subsystem.</source>
          <target state="translated">指定されたモジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;を見つけるための抽象メソッド。&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;で最初に指定されたこのメソッドは、&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;およびパスベースのインポートサブシステムで使用するためのものでした。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
