<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="6979f33c643743b3e1710eb3c8b04ebe15229773" translate="yes" xml:space="preserve">
          <source>How to use help</source>
          <target state="translated">ヘルプの使い方</target>
        </trans-unit>
        <trans-unit id="0ca8006d50f8b1fe3fcd3fbdbf73e28bca7fec95" translate="yes" xml:space="preserve">
          <source>How you use the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module in your code depends on whether you are internationalizing a single module or your entire application. The next two sections will discuss each case.</source>
          <target state="translated">コードで&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;モジュールをどのように使用するかは、単一のモジュールを国際化するか、アプリケーション全体を国際化するかによって異なります。次の2つのセクションでは、各ケースについて説明します。</target>
        </trans-unit>
        <trans-unit id="cc2d951db9dd240ca5bf48d29a4e5261e13b4412" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;protocol.eof_received()&lt;/code&gt;&lt;/a&gt; is called at most once. Once &lt;code&gt;eof_received()&lt;/code&gt; is called, &lt;code&gt;data_received()&lt;/code&gt; is not called anymore.</source>
          <target state="translated">ただし、&lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt; &lt;code&gt;protocol.eof_received()&lt;/code&gt; &lt;/a&gt;は最大で1回呼び出されます。いったん &lt;code&gt;eof_received()&lt;/code&gt; 、と呼ばれている &lt;code&gt;data_received()&lt;/code&gt; もはや呼び出されません。</target>
        </trans-unit>
        <trans-unit id="a0a858d192763a36609cbf2152f0a6b9ea1b92e5" translate="yes" xml:space="preserve">
          <source>However, a more generic mechanism is needed for user-defined objects which are not known to the &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module. For example, consider &lt;a href=&quot;logging.handlers#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;logging.handlers.MemoryHandler&lt;/code&gt;&lt;/a&gt;, which takes a &lt;code&gt;target&lt;/code&gt; argument which is another handler to delegate to. Since the system already knows about this class, then in the configuration, the given &lt;code&gt;target&lt;/code&gt; just needs to be the object id of the relevant target handler, and the system will resolve to the handler from the id. If, however, a user defines a &lt;code&gt;my.package.MyHandler&lt;/code&gt; which has an &lt;code&gt;alternate&lt;/code&gt; handler, the configuration system would not know that the &lt;code&gt;alternate&lt;/code&gt; referred to a handler. To cater for this, a generic resolution system allows the user to specify:</source>
          <target state="translated">ただし、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;モジュールが認識していないユーザー定義オブジェクトには、より一般的なメカニズムが必要です。たとえば、委任する別のハンドラーである &lt;code&gt;target&lt;/code&gt; 引数を取る&lt;a href=&quot;logging.handlers#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;logging.handlers.MemoryHandler&lt;/code&gt; を&lt;/a&gt;考えてみます。システムはこのクラスをすでに認識しているため、構成では、指定された &lt;code&gt;target&lt;/code&gt; は関連するターゲットハンドラーのオブジェクトIDである必要があり、システムはIDからハンドラーに解決します。しかし、ユーザが定義する場合 &lt;code&gt;my.package.MyHandler&lt;/code&gt; 有する &lt;code&gt;alternate&lt;/code&gt; ハンドラを、構成システムはそれを知っているだろう &lt;code&gt;alternate&lt;/code&gt; ハンドラーを参照しました。これに対応するために、一般的な解決システムでは、ユーザーが以下を指定できます。</target>
        </trans-unit>
        <trans-unit id="f378a310ff84ad7919807057388f38c47b1c65e4" translate="yes" xml:space="preserve">
          <source>However, consider the alternative scenario where instead of &lt;code&gt;from a import
SomeClass&lt;/code&gt; module b does &lt;code&gt;import a&lt;/code&gt; and &lt;code&gt;some_function&lt;/code&gt; uses &lt;code&gt;a.SomeClass&lt;/code&gt;. Both of these import forms are common. In this case the class we want to patch is being looked up in the module and so we have to patch &lt;code&gt;a.SomeClass&lt;/code&gt; instead:</source>
          <target state="translated">ただし、 &lt;code&gt;from a import SomeClass&lt;/code&gt; モジュールbが &lt;code&gt;import a&lt;/code&gt; からではなく、aをインポートし、 &lt;code&gt;some_function&lt;/code&gt; が &lt;code&gt;a.SomeClass&lt;/code&gt; を使用する別のシナリオを検討してください。これらのインポート形式はどちらも一般的です。この場合、パッチを適用するクラスはモジュールで検索されているため、代わりに &lt;code&gt;a.SomeClass&lt;/code&gt; にパッチを適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="439bf14282c72fd1ed84e1410444feb63481ab8b" translate="yes" xml:space="preserve">
          <source>However, global variables which are just module level constants cause no problems.</source>
          <target state="translated">しかし、モジュールレベルの定数に過ぎないグローバル変数であれば問題はありません。</target>
        </trans-unit>
        <trans-unit id="8da1514a7f4d0b15655c2472b7999f9854a1d368" translate="yes" xml:space="preserve">
          <source>However, handling of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; methods is notoriously implementation specific, since it depends on internal details of the interpreter&amp;rsquo;s garbage collector implementation.</source>
          <target state="translated">ただし、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt;メソッドの処理は、インタープリターのガベージコレクター実装の内部の詳細に依存するため、悪用されがちです。</target>
        </trans-unit>
        <trans-unit id="1ce34591ae0ca15bf16f23d12befc169e2bb9a82" translate="yes" xml:space="preserve">
          <source>However, handling of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; methods is notoriously implementation specific, since it depends on internal details of the interpreter&amp;rsquo;s garbage collector implementation.</source>
          <target state="translated">However, handling of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; methods is notoriously implementation specific, since it depends on internal details of the interpreter&amp;rsquo;s garbage collector implementation.</target>
        </trans-unit>
        <trans-unit id="524385f4308742264684061a603d78f1b65969ea" translate="yes" xml:space="preserve">
          <source>However, if you are writing a library (and do not control in which context its code will be executed), be aware that the standard streams may be replaced with file-like objects like &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;io.StringIO&lt;/code&gt;&lt;/a&gt; which do not support the &lt;code&gt;buffer&lt;/code&gt; attribute.</source>
          <target state="translated">ただし、ライブラリを作成する場合（およびそのコードが実行されるコンテキストを制御しない場合）は、標準ストリームが&lt;a href=&quot;io#io.StringIO&quot;&gt; &lt;code&gt;io.StringIO&lt;/code&gt; の&lt;/a&gt;ような、 &lt;code&gt;buffer&lt;/code&gt; 属性をサポートしないファイルのようなオブジェクトに置き換えられる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b769de1746f60e4baa053e7572f0057d9c8fe3d0" translate="yes" xml:space="preserve">
          <source>However, if you really do need to use some shared data then &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; provides a couple of ways of doing so.</source>
          <target state="translated">ただし、共有データを実際に使用する必要がある場合は、&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;いくつかの方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="23eebfaf8db57314d57e41112830f6a06b63dacc" translate="yes" xml:space="preserve">
          <source>However, in a Windows path, changing the local root doesn&amp;rsquo;t discard the previous drive setting:</source>
          <target state="translated">ただし、Windowsパスでは、ローカルルートを変更しても以前のドライブ設定は破棄されません。</target>
        </trans-unit>
        <trans-unit id="f42d2d8c9bca01face2f0640d30c8b6b4f7aef41" translate="yes" xml:space="preserve">
          <source>However, it is possible to create a &lt;a href=&quot;#typing.NewType&quot;&gt;&lt;code&gt;NewType()&lt;/code&gt;&lt;/a&gt; based on a &amp;lsquo;derived&amp;rsquo; &lt;code&gt;NewType&lt;/code&gt;:</source>
          <target state="translated">ただし、「派生した」 &lt;code&gt;NewType&lt;/code&gt; に基づいて&lt;a href=&quot;#typing.NewType&quot;&gt; &lt;code&gt;NewType()&lt;/code&gt; &lt;/a&gt;を作成することは可能です。</target>
        </trans-unit>
        <trans-unit id="d78b154c37b0dfd16aaf863d992caf9a3e8512e0" translate="yes" xml:space="preserve">
          <source>However, should you want to customize the building of your test suite, you can do it yourself:</source>
          <target state="translated">しかし、テストスイートの構築をカスタマイズしたい場合は、自分で行うことができます。</target>
        </trans-unit>
        <trans-unit id="2e105ff00b24b9693a483aad8940ba6101edec1f" translate="yes" xml:space="preserve">
          <source>However, since the SSL (and TLS) protocol has its own framing atop of TCP, the SSL sockets abstraction can, in certain respects, diverge from the specification of normal, OS-level sockets. See especially the &lt;a href=&quot;#ssl-nonblocking&quot;&gt;notes on non-blocking sockets&lt;/a&gt;.</source>
          <target state="translated">ただし、SSL（およびTLS）プロトコルにはTCPの上に独自のフレーミングがあるため、SSLソケットの抽象化は、特定の点で、通常のOSレベルのソケットの仕様と異なる場合があります。特に&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非ブロッキングソケットに関する注記を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="53fcc45334330c2206a16cded9422e941e3c0225" translate="yes" xml:space="preserve">
          <source>However, such expressions are valid when &lt;a href=&quot;typing#generics&quot;&gt;type variables&lt;/a&gt; are used. The index must have as many elements as there are type variable items in the &lt;code&gt;GenericAlias&lt;/code&gt; object&amp;rsquo;s &lt;a href=&quot;#genericalias.__args__&quot;&gt;&lt;code&gt;__args__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">However, such expressions are valid when &lt;a href=&quot;typing#generics&quot;&gt;type variables&lt;/a&gt; are used. The index must have as many elements as there are type variable items in the &lt;code&gt;GenericAlias&lt;/code&gt; object&amp;rsquo;s &lt;a href=&quot;#genericalias.__args__&quot;&gt; &lt;code&gt;__args__&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8fede9e85907b8edc885805dba8e1a629627b87" translate="yes" xml:space="preserve">
          <source>However, the &lt;a href=&quot;#module-multiprocessing.connection&quot;&gt;&lt;code&gt;multiprocessing.connection&lt;/code&gt;&lt;/a&gt; module allows some extra flexibility. It basically gives a high level message oriented API for dealing with sockets or Windows named pipes. It also has support for &lt;em&gt;digest authentication&lt;/em&gt; using the &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; module, and for polling multiple connections at the same time.</source>
          <target state="translated">ただし、&lt;a href=&quot;#module-multiprocessing.connection&quot;&gt; &lt;code&gt;multiprocessing.connection&lt;/code&gt; &lt;/a&gt;モジュールを使用すると、柔軟性がさらに向上します。基本的に、ソケットまたはWindows名前付きパイプを処理するための高レベルのメッセージ指向APIを提供します。また、&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; &lt;/a&gt;モジュールを使用した&lt;em&gt;ダイジェスト認証&lt;/em&gt;、および複数の接続の同時ポーリングもサポートしています。</target>
        </trans-unit>
        <trans-unit id="bf6a9f983b8ff7cdac272806e8c7920846eea877" translate="yes" xml:space="preserve">
          <source>However, they still can&amp;rsquo;t be compared to standard &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; enumerations:</source>
          <target state="translated">ただし、それらを標準の&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;列挙と比較することはできません。</target>
        </trans-unit>
        <trans-unit id="91333f2e4bfca97b3f05dfcc743022c8782b7559" translate="yes" xml:space="preserve">
          <source>However, to match the shell as closely as possible, it is recommended to always use &lt;code&gt;posix&lt;/code&gt; and &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; when using &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt;, which will negate &lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt;&lt;code&gt;wordchars&lt;/code&gt;&lt;/a&gt; entirely.</source>
          <target state="translated">しかし、密接にできるだけシェルを一致させるために、常に使用することをお勧めし &lt;code&gt;posix&lt;/code&gt; と&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; を&lt;/a&gt;使用している場合&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;否定するだろう、&lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt; &lt;code&gt;wordchars&lt;/code&gt; を&lt;/a&gt;完全に。</target>
        </trans-unit>
        <trans-unit id="9b74bb3116de6c2b6f2b5b3489fa54307c65fc89" translate="yes" xml:space="preserve">
          <source>However, two enum members are allowed to have the same value. Given two members A and B with the same value (and A defined first), B is an alias to A. By-value lookup of the value of A and B will return A. By-name lookup of B will also return A:</source>
          <target state="translated">ただし、2 つの enum メンバが同じ値を持つことは許されています。同じ値を持つ2つのメンバAとBがある場合(最初に定義されているのはA)、BはAのエイリアスになります。</target>
        </trans-unit>
        <trans-unit id="d317839ba4e2c85ee86b52a46ee27291e7f15167" translate="yes" xml:space="preserve">
          <source>However, when using a proxy for a namespace object, an attribute beginning with &lt;code&gt;'_'&lt;/code&gt; will be an attribute of the proxy and not an attribute of the referent:</source>
          <target state="translated">ただし、名前空間オブジェクトにプロキシを使用する場合、 &lt;code&gt;'_'&lt;/code&gt; 始まる属性はプロキシの属性であり、参照先の属性ではありません。</target>
        </trans-unit>
        <trans-unit id="9db1c257cbf6348bd2bdc6bec9835ad1ee2611cd" translate="yes" xml:space="preserve">
          <source>Human-readable time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created. By default this is of the form &amp;lsquo;2003-07-08 16:49:45,896&amp;rsquo; (the numbers after the comma are millisecond portion of the time).</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;が作成されたときの人間が読める時間。デフォルトでは、これは「2003-07-08 16：49：45,896」の形式です（カンマの後の数字は時間のミリ秒部分です）。</target>
        </trans-unit>
        <trans-unit id="9c8511b78ed54aa0fa96cb081001b1a2bf46efeb" translate="yes" xml:space="preserve">
          <source>Human-readable version of &lt;a href=&quot;#wave.Wave_read.getcomptype&quot;&gt;&lt;code&gt;getcomptype()&lt;/code&gt;&lt;/a&gt;. Usually &lt;code&gt;'not compressed'&lt;/code&gt; parallels &lt;code&gt;'NONE'&lt;/code&gt;.</source>
          <target state="translated">人間が読めるバージョンの&lt;a href=&quot;#wave.Wave_read.getcomptype&quot;&gt; &lt;code&gt;getcomptype()&lt;/code&gt; &lt;/a&gt;。通常、 &lt;code&gt;'not compressed'&lt;/code&gt; Parallelsの &lt;code&gt;'NONE'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="add9ea21e0134d1a6dc92640398cf0190b05790e" translate="yes" xml:space="preserve">
          <source>Hung up</source>
          <target state="translated">吊るし上げ</target>
        </trans-unit>
        <trans-unit id="f3ed3aadb3c9adb061d870e136cd1453348e8c73" translate="yes" xml:space="preserve">
          <source>Hyperbolic functions</source>
          <target state="translated">双曲関数</target>
        </trans-unit>
        <trans-unit id="de2470c480abd98424dacb0f44f27ca062690dfb" translate="yes" xml:space="preserve">
          <source>I will present an example here which uses the standard C library&amp;rsquo;s &lt;code&gt;qsort()&lt;/code&gt; function, that is used to sort items with the help of a callback function. &lt;code&gt;qsort()&lt;/code&gt; will be used to sort an array of integers:</source>
          <target state="translated">ここでは、コールバック関数を使用してアイテムをソートするために使用される標準Cライブラリの &lt;code&gt;qsort()&lt;/code&gt; 関数を使用する例を示します。 &lt;code&gt;qsort()&lt;/code&gt; は整数の配列をソートするために使用されます：</target>
        </trans-unit>
        <trans-unit id="9a9c3553918e97b386614c46b9394f4b8471c979" translate="yes" xml:space="preserve">
          <source>I/O Base Classes</source>
          <target state="translated">I/Oベースクラス</target>
        </trans-unit>
        <trans-unit id="0676b814ab2a9d403059287e94b18b3f3ed5e63c" translate="yes" xml:space="preserve">
          <source>I/O error</source>
          <target state="translated">入出力エラー</target>
        </trans-unit>
        <trans-unit id="2711395734586dad19e3e7e6bf6c599633c758e2" translate="yes" xml:space="preserve">
          <source>I/O operations may fail even when &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; indicates that they would succeed, particularly for operations on network filesystems which may have permissions semantics beyond the usual POSIX permission-bit model.</source>
          <target state="translated">I / O操作は、&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;が成功することを示している場合でも、特に、通常のPOSIX権限ビットモデルを超える権限セマンティクスを持つネットワークファイルシステムでの操作の場合に失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f7d467a87245290159a1b6af42928666730653f6" translate="yes" xml:space="preserve">
          <source>IANA</source>
          <target state="translated">IANA</target>
        </trans-unit>
        <trans-unit id="fd1cdb7e9dcbc4982fb094e6764772bf3b00e12c" translate="yes" xml:space="preserve">
          <source>IANA TLS: Transport Layer Security (TLS) Parameters</source>
          <target state="translated">IANA TLS:Transport Layer Security (TLS)パラメータ</target>
        </trans-unit>
        <trans-unit id="5936f115af9d290a0d4c51a3b370fe51eb023734" translate="yes" xml:space="preserve">
          <source>IANA timezone database</source>
          <target state="translated">IANAタイムゾーンデータベース</target>
        </trans-unit>
        <trans-unit id="bce52158db4ea934391bad4260ff69db81d9b587" translate="yes" xml:space="preserve">
          <source>IBM&amp;rsquo;s General Decimal Arithmetic Specification, &lt;a href=&quot;http://speleotrove.com/decimal/decarith.html&quot;&gt;The General Decimal Arithmetic Specification&lt;/a&gt;.</source>
          <target state="translated">IBMのGeneral Decimal Arithmetic Specification、&lt;a href=&quot;http://speleotrove.com/decimal/decarith.html&quot;&gt;The General Decimal Arithmetic Specification&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d384f46aa316c46d9da3980789c420f3f02914f" translate="yes" xml:space="preserve">
          <source>IBM037, IBM039</source>
          <target state="translated">IBM037、IBM039</target>
        </trans-unit>
        <trans-unit id="25c9f2e3939dfc2b3f7f8e99803711ba0f10dd8f" translate="yes" xml:space="preserve">
          <source>IBM775</source>
          <target state="translated">IBM775</target>
        </trans-unit>
        <trans-unit id="2e03293740ecf9023db87941f55d98d607008460" translate="yes" xml:space="preserve">
          <source>IBM864</source>
          <target state="translated">IBM864</target>
        </trans-unit>
        <trans-unit id="d0c6332e03ed7288ab9fabcfcbe8f7d47ead9f1d" translate="yes" xml:space="preserve">
          <source>IDL Type</source>
          <target state="translated">IDL型</target>
        </trans-unit>
        <trans-unit id="6bf8911095af71a660308ff2f022e3f091e35f17" translate="yes" xml:space="preserve">
          <source>IDL attributes map to instance attributes. For compatibility with the OMG IDL language mapping for Python, an attribute &lt;code&gt;foo&lt;/code&gt; can also be accessed through accessor methods &lt;code&gt;_get_foo()&lt;/code&gt; and &lt;code&gt;_set_foo()&lt;/code&gt;. &lt;code&gt;readonly&lt;/code&gt; attributes must not be changed; this is not enforced at runtime.</source>
          <target state="translated">IDL属性はインスタンス属性にマップされます。PythonのOMG IDL言語マッピングとの互換性のために、属性 &lt;code&gt;foo&lt;/code&gt; には、アクセサーメソッド &lt;code&gt;_get_foo()&lt;/code&gt; および &lt;code&gt;_set_foo()&lt;/code&gt; を介してアクセスすることもできます。 &lt;code&gt;readonly&lt;/code&gt; 属性は変更しないでください。これは実行時に適用されません。</target>
        </trans-unit>
        <trans-unit id="4646e9f2b71a8bdc5087acabdc0352b0d257af74" translate="yes" xml:space="preserve">
          <source>IDLE</source>
          <target state="translated">IDLE</target>
        </trans-unit>
        <trans-unit id="619274f5a3734b1f62b9c727af1d75beec311b03" translate="yes" xml:space="preserve">
          <source>IDLE Help</source>
          <target state="translated">IDLEヘルプ</target>
        </trans-unit>
        <trans-unit id="898dce9ecf90e7e7d5d02cf64e27fe2734513168" translate="yes" xml:space="preserve">
          <source>IDLE assumes that files with a known .py* extension contain Python code and that other files do not. Run Python code with the Run menu.</source>
          <target state="translated">IDLE は、既知の .py*拡張子を持つファイルには Python コードが含まれており、他のファイルには含まれていないことを前提としています。実行メニューでPythonコードを実行します。</target>
        </trans-unit>
        <trans-unit id="75bbc791a4aa40f6497c42cba8acc7f613d3b8cb" translate="yes" xml:space="preserve">
          <source>IDLE contains an extension facility. Preferences for extensions can be changed with the Extensions tab of the preferences dialog. See the beginning of config-extensions.def in the idlelib directory for further information. The only current default extension is zzdummy, an example also used for testing.</source>
          <target state="translated">IDLE には拡張機能があります。拡張機能の環境設定は、環境設定ダイアログの拡張機能タブで変更することができます。詳細は idlelib ディレクトリの config-extensions.def の冒頭を参照してください。現在のデフォルトの拡張機能は zzdummy だけです。</target>
        </trans-unit>
        <trans-unit id="9ea11f11dfc2e4dc9fcce02ad959e9a853a35043" translate="yes" xml:space="preserve">
          <source>IDLE has the following features:</source>
          <target state="translated">IDLEには以下のような機能があります。</target>
        </trans-unit>
        <trans-unit id="44f3701f5db6a9639148f6560d8fff5476184868" translate="yes" xml:space="preserve">
          <source>IDLE has two main window types, the Shell window and the Editor window. It is possible to have multiple editor windows simultaneously. On Windows and Linux, each has its own top menu. Each menu documented below indicates which window type it is associated with.</source>
          <target state="translated">IDLEには、シェルウィンドウとエディタウィンドウの2つの主要なウィンドウがあります。同時に複数のエディタウィンドウを持つことができます。WindowsとLinuxでは、それぞれにトップメニューがあります。以下に説明されている各メニューは、どのウィンドウタイプに関連付けられているかを示しています。</target>
        </trans-unit>
        <trans-unit id="44fac21ae0e0592212109932c2b71c550bd61ce6" translate="yes" xml:space="preserve">
          <source>IDLE is Python&amp;rsquo;s Integrated Development and Learning Environment.</source>
          <target state="translated">IDLEはPythonの統合開発および学習環境です。</target>
        </trans-unit>
        <trans-unit id="6e56c2de541f27a1c04500e97b2142294c0794aa" translate="yes" xml:space="preserve">
          <source>IDLE is intentionally different from standard Python in order to facilitate development of tkinter programs. Enter &lt;code&gt;import tkinter as tk;
root = tk.Tk()&lt;/code&gt; in standard Python and nothing appears. Enter the same in IDLE and a tk window appears. In standard Python, one must also enter &lt;code&gt;root.update()&lt;/code&gt; to see the window. IDLE does the equivalent in the background, about 20 times a second, which is about every 50 milliseconds. Next enter &lt;code&gt;b = tk.Button(root, text='button'); b.pack()&lt;/code&gt;. Again, nothing visibly changes in standard Python until one enters &lt;code&gt;root.update()&lt;/code&gt;.</source>
          <target state="translated">IDLEは、tkinterプログラムの開発を容易にするために、標準のPythonとは意図的に異なります。 &lt;code&gt;import tkinter as tk; root = tk.Tk()&lt;/code&gt; 入力します。標準Pythonではroot = tk.Tk（）で、何も表示されません。同じことをIDLEに入力すると、tkウィンドウが表示されます。標準のPythonでは、ウィンドウを表示するために &lt;code&gt;root.update()&lt;/code&gt; も入力する必要があります。 IDLEは、バックグラウンドで同等の処理を1秒に約20回、つまり約50ミリ秒ごとに実行します。次に &lt;code&gt;b = tk.Button(root, text='button'); b.pack()&lt;/code&gt; 。繰り返しますが、標準のPythonでは、 &lt;code&gt;root.update()&lt;/code&gt; に入るまで目に見える変化はありません。</target>
        </trans-unit>
        <trans-unit id="8d796c27be2cf21ed59c8759c905bc23b350d7b4" translate="yes" xml:space="preserve">
          <source>IDLE may open editor windows when it starts, depending on settings and how you start IDLE. Thereafter, use the File menu. There can be only one open editor window for a given file.</source>
          <target state="translated">設定やIDLEの起動方法によっては、起動時にエディタウィンドウが開くことがあります。それ以降は、ファイルメニューを使用してください。指定されたファイルに対して、開いているエディタ ウィンドウは 1 つしかありません。</target>
        </trans-unit>
        <trans-unit id="253f821a5f3a1c94a0536918c1450667d7b406ce" translate="yes" xml:space="preserve">
          <source>IDLE on macOS</source>
          <target state="translated">macOSのIDLE</target>
        </trans-unit>
        <trans-unit id="07b20364b24d2a4a15afcdbe6b5431a328e5b391" translate="yes" xml:space="preserve">
          <source>IDLE uses a socket to communicate between the IDLE GUI process and the user code execution process. A connection must be established whenever the Shell starts or restarts. (The latter is indicated by a divider line that says &amp;lsquo;RESTART&amp;rsquo;). If the user process fails to connect to the GUI process, it displays a &lt;code&gt;Tk&lt;/code&gt; error box with a &amp;lsquo;cannot connect&amp;rsquo; message that directs the user here. It then exits.</source>
          <target state="translated">IDLEはソケットを使用して、IDLE GUIプロセスとユーザーコード実行プロセスの間の通信を行います。シェルが起動または再起動するたびに接続を確立する必要があります。 （後者は、「再起動」という分割線で示されます）。ユーザープロセスがGUIプロセスへの接続に失敗した場合、 &lt;code&gt;Tk&lt;/code&gt; エラーボックスに「接続できません」というメッセージが表示され、ここでユーザーに指示されます。その後、終了します。</target>
        </trans-unit>
        <trans-unit id="294f9b9e7d21007e31d5bb92fc308b2f7b9ed947" translate="yes" xml:space="preserve">
          <source>IDLE&amp;rsquo;s standard stream replacements are not inherited by subprocesses created in the execution process, whether directly by user code or by modules such as multiprocessing. If such subprocess use &lt;code&gt;input&lt;/code&gt; from sys.stdin or &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; to sys.stdout or sys.stderr, IDLE should be started in a command line window. The secondary subprocess will then be attached to that window for input and output.</source>
          <target state="translated">IDLEの標準ストリーム置換は、ユーザーコードによって直接、またはマルチプロセッシングなどのモジュールによって、実行プロセスで作成されたサブプロセスによって継承されません。そのようなサブプロセスの使用の場合は &lt;code&gt;input&lt;/code&gt; sys.stdinをまたはから &lt;code&gt;print&lt;/code&gt; または &lt;code&gt;write&lt;/code&gt; sys.stdoutのかsys.stderrを持ちまで、IDLEは、コマンドラインウィンドウで起動する必要があります。次に、セカンダリサブプロセスがそのウィンドウに接続され、入力と出力が行われます。</target>
        </trans-unit>
        <trans-unit id="aea80ada688c48062d55019e094cc1143e3a0adc" translate="yes" xml:space="preserve">
          <source>IETF</source>
          <target state="translated">IETF</target>
        </trans-unit>
        <trans-unit id="a3cbd29464a3f016524be318899e3b8625bcb53b" translate="yes" xml:space="preserve">
          <source>IIS can be configured to pass the correct &lt;code&gt;PATH_INFO&lt;/code&gt;, but this causes another bug where &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; is wrong. Luckily this variable is rarely used and is not guaranteed by WSGI. On IIS&amp;lt;7, though, the setting can only be made on a vhost level, affecting all other script mappings, many of which break when exposed to the &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; bug. For this reason IIS&amp;lt;7 is almost never deployed with the fix (Even IIS7 rarely uses it because there is still no UI for it.).</source>
          <target state="translated">IIS can be configured to pass the correct &lt;code&gt;PATH_INFO&lt;/code&gt; , but this causes another bug where &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; is wrong. Luckily this variable is rarely used and is not guaranteed by WSGI. On IIS&amp;lt;7, though, the setting can only be made on a vhost level, affecting all other script mappings, many of which break when exposed to the &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; bug. For this reason IIS&amp;lt;7 is almost never deployed with the fix (Even IIS7 rarely uses it because there is still no UI for it.).</target>
        </trans-unit>
        <trans-unit id="f9c9fbbc612c61efdc44101bdc0b4c61f818bba4" translate="yes" xml:space="preserve">
          <source>IIS can be configured to pass the correct &lt;code&gt;PATH_INFO&lt;/code&gt;, but this causes another bug where &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; is wrong. Luckily this variable is rarely used and is not guaranteed by WSGI. On IIS&amp;lt;7, though, the setting can only be made on a vhost level, affecting all other script mappings, many of which break when exposed to the &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; bug. For this reason IIS&amp;lt;7 is almost never deployed with the fix. (Even IIS7 rarely uses it because there is still no UI for it.)</source>
          <target state="translated">IISは正しい &lt;code&gt;PATH_INFO&lt;/code&gt; を渡すように構成できますが、これにより &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; が間違っているという別のバグが発生します。幸い、この変数はめったに使用されず、WSGIによって保証されていません。ただし、IIS &amp;lt;7では、設定は仮想ホストレベルでのみ行うことができ、他のすべてのスクリプトマッピングに影響します。その多くは、 &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; バグにさらされると機能しなくなります。このため、IIS &amp;lt;7は修正プログラムと共に展開されることはほとんどありません。（UIがないため、IIS7でもめったに使用しません。）</target>
        </trans-unit>
        <trans-unit id="dc5982d33dd23bd8d90805fafc24a3114eaf3d91" translate="yes" xml:space="preserve">
          <source>IMAP (Internet Message Access Protocol) client</source>
          <target state="translated">アイエムエーピー</target>
        </trans-unit>
        <trans-unit id="ee980c33b9d65ac696be3577604e43ad769530f5" translate="yes" xml:space="preserve">
          <source>IMAP4 Example</source>
          <target state="translated">IMAP4の例</target>
        </trans-unit>
        <trans-unit id="0bf33cf42855fe39a37a956bf4ca9bce143662b0" translate="yes" xml:space="preserve">
          <source>IMAP4 Objects</source>
          <target state="translated">IMAP4 オブジェクト</target>
        </trans-unit>
        <trans-unit id="54a2e0f83d696897f7938ff4e902b96cfe7ebe39" translate="yes" xml:space="preserve">
          <source>IMAP4 server errors cause this exception to be raised. This is a sub-class of &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt;&lt;code&gt;IMAP4.error&lt;/code&gt;&lt;/a&gt;. Note that closing the instance and instantiating a new one will usually allow recovery from this exception.</source>
          <target state="translated">IMAP4サーバーエラーにより、この例外が発生します。これは&lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt; &lt;code&gt;IMAP4.error&lt;/code&gt; の&lt;/a&gt;サブクラスです。インスタンスを閉じて新しいインスタンスをインスタンス化すると、通常はこの例外から回復できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a7aaaf8103e147f7508e66b5f7be824742d34faa" translate="yes" xml:space="preserve">
          <source>IOError</source>
          <target state="translated">IOError</target>
        </trans-unit>
        <trans-unit id="2ccb5c6f3f5eedcfc4714430d8777d910b94fd71" translate="yes" xml:space="preserve">
          <source>IP Addresses</source>
          <target state="translated">IPアドレス</target>
        </trans-unit>
        <trans-unit id="9e3725069a7ec82ac5ffec06a0726dc4f7d933d6" translate="yes" xml:space="preserve">
          <source>IP Network definitions</source>
          <target state="translated">IPネットワークの定義</target>
        </trans-unit>
        <trans-unit id="0c1d08e522b1ada055f757b0f439e1183ee338ed" translate="yes" xml:space="preserve">
          <source>ISO 8601 week as a decimal number with Monday as the first day of the week. Week 01 is the week containing Jan 4.</source>
          <target state="translated">ISO 8601 週は月曜日を週の最初の日とする10進数です。週01は1月4日を含む週です。</target>
        </trans-unit>
        <trans-unit id="f8995e635cfe9c3a98e07c9ba781f0a6358cb3c9" translate="yes" xml:space="preserve">
          <source>ISO 8601 weekday as a decimal number where 1 is Monday.</source>
          <target state="translated">ISO 8601 平日は、1が月曜日である10進数である。</target>
        </trans-unit>
        <trans-unit id="514bf155d39ffefb08418af80af6de7e45130d9e" translate="yes" xml:space="preserve">
          <source>ISO 8601 year with century representing the year that contains the greater part of the ISO week (&lt;code&gt;%V&lt;/code&gt;).</source>
          <target state="translated">ISO 8601年。世紀はISO週の大部分を含む年を表します（ &lt;code&gt;%V&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f55f5622b2b522bc805cc41ff05e2c603a2bf278" translate="yes" xml:space="preserve">
          <source>ISO/IEC 9899:1999. &amp;ldquo;Programming languages &amp;ndash; C.&amp;rdquo; A public draft of this standard is available at &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&lt;/a&gt;.</source>
          <target state="translated">ISO / IEC 9899：1999。「プログラミング言語-C」この標準の公開草案は、&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="acd1e6f9426d838c20ce10c0d69c37b84f105784" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; except that &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; also attempts to preserve file metadata.</source>
          <target state="translated">&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;もファイルのメタデータを保持しようとする点を除いて、&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="3b67836a7558b5c8eb65d018d9c3da891c5dbd61" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt;&lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt;&lt;/a&gt;, except it also includes any time that the system is suspended.</source>
          <target state="translated">&lt;a href=&quot;#time.CLOCK_MONOTONIC&quot;&gt; &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; &lt;/a&gt;と同じですが、システムが一時停止されている時間も含まれます。</target>
        </trans-unit>
        <trans-unit id="82e2063541c7fa099ab5e5a901852b54a66c49b9" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#decimal.Decimal.to_integral_value&quot;&gt;&lt;code&gt;to_integral_value()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;to_integral&lt;/code&gt; name has been kept for compatibility with older versions.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.to_integral_value&quot;&gt; &lt;code&gt;to_integral_value()&lt;/code&gt; &lt;/a&gt;メソッドと同じです。 &lt;code&gt;to_integral&lt;/code&gt; 名は旧バージョンとの互換性のために保管されています。</target>
        </trans-unit>
        <trans-unit id="46f3fa216b3c32403a41514a86cd404ca3c83cb5" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="a45d4848c68ab0522b00bbc2c7242ac143f0b900" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="c6bfdcc3ee2262d164aa72a90a32911e18ec94a5" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#re.subn&quot;&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/a&gt; function, using the compiled pattern.</source>
          <target state="translated">コンパイルされたパターンを使用して、&lt;a href=&quot;#re.subn&quot;&gt; &lt;code&gt;subn()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="c2f8627bc91378e78cf995740ad3e1715d475219" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.iter_unpack&quot;&gt;&lt;code&gt;iter_unpack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes must be a multiple of &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#struct.iter_unpack&quot;&gt; &lt;code&gt;iter_unpack()&lt;/code&gt; &lt;/a&gt;関数と同じで、コンパイル済みフォーマットを使用します。バッファーのサイズ（バイト単位）は、&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; の&lt;/a&gt;倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d21eeb3027709bab3da92975257519368ad08d9e" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. (&lt;code&gt;len(result)&lt;/code&gt; will equal &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">コンパイルされた形式を使用して、&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; &lt;/a&gt;関数と同じです。（ &lt;code&gt;len(result)&lt;/code&gt; は&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;と同じになります。）</target>
        </trans-unit>
        <trans-unit id="c3375660e2fad4e52469c1195b329fc8e41df84c" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.pack_into&quot;&gt;&lt;code&gt;pack_into()&lt;/code&gt;&lt;/a&gt; function, using the compiled format.</source>
          <target state="translated">コンパイルされたフォーマットを使用する&lt;a href=&quot;#struct.pack_into&quot;&gt; &lt;code&gt;pack_into()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="0d39ae1b34f63264f0cee42f0a4d4a1a122e5077" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.unpack&quot;&gt;&lt;code&gt;unpack()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes must equal &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンパイルされたフォーマットを使用する、&lt;a href=&quot;#struct.unpack&quot;&gt; &lt;code&gt;unpack()&lt;/code&gt; &lt;/a&gt;関数と同じです。バッファーのサイズ（バイト単位）は、&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="a4fe688fb8f7fbdc7bcfef76db53d21a9a791cad" translate="yes" xml:space="preserve">
          <source>Identical to the &lt;a href=&quot;#struct.unpack_from&quot;&gt;&lt;code&gt;unpack_from()&lt;/code&gt;&lt;/a&gt; function, using the compiled format. The buffer&amp;rsquo;s size in bytes, starting at position &lt;em&gt;offset&lt;/em&gt;, must be at least &lt;a href=&quot;#struct.Struct.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンパイル済みフォーマットを使用して、&lt;a href=&quot;#struct.unpack_from&quot;&gt; &lt;code&gt;unpack_from()&lt;/code&gt; &lt;/a&gt;関数と同じです。位置&lt;em&gt;offset&lt;/em&gt;から始まるバッファーのサイズ（バイト単位）は、少なくとも&lt;a href=&quot;#struct.Struct.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="01924aa1a07ec0c16adf4b5d09634cea505a484d" translate="yes" xml:space="preserve">
          <source>Identifier of the device on which this file resides.</source>
          <target state="translated">このファイルが存在するデバイスの識別子。</target>
        </trans-unit>
        <trans-unit id="7c1a745105ff9b6c357cf50bdd91090ffef6ae55" translate="yes" xml:space="preserve">
          <source>Identifier removed</source>
          <target state="translated">識別子の削除</target>
        </trans-unit>
        <trans-unit id="1e75596418519eaa6fe966ace8634031be7fdfca" translate="yes" xml:space="preserve">
          <source>Identify the client using a plaintext password. The &lt;em&gt;password&lt;/em&gt; will be quoted.</source>
          <target state="translated">プレーンテキストのパスワードを使用してクライアントを識別します。&lt;em&gt;パスワードが&lt;/em&gt;引用されます。</target>
        </trans-unit>
        <trans-unit id="20298f2cb970734bced6da962363cfab14944346" translate="yes" xml:space="preserve">
          <source>Identify yourself to an ESMTP server using &lt;code&gt;EHLO&lt;/code&gt;. The hostname argument defaults to the fully qualified domain name of the local host. Examine the response for ESMTP option and store them for use by &lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt;&lt;code&gt;has_extn()&lt;/code&gt;&lt;/a&gt;. Also sets several informational attributes: the message returned by the server is stored as the &lt;code&gt;ehlo_resp&lt;/code&gt; attribute, &lt;code&gt;does_esmtp&lt;/code&gt; is set to true or false depending on whether the server supports ESMTP, and &lt;code&gt;esmtp_features&lt;/code&gt; will be a dictionary containing the names of the SMTP service extensions this server supports, and their parameters (if any).</source>
          <target state="translated">&lt;code&gt;EHLO&lt;/code&gt; を使用して、ESMTPサーバーに対して自分自身を識別します。 hostname引数のデフォルトは、ローカルホストの完全修飾ドメイン名です。 ESMTPオプションの応答を&lt;a href=&quot;#smtplib.SMTP.has_extn&quot;&gt; &lt;code&gt;has_extn()&lt;/code&gt; &lt;/a&gt;それらを格納してhas_extn（）で使用できるようにします。サーバーから返されたメッセージは次のように格納されます。また、いくつかの情報の属性設定 &lt;code&gt;ehlo_resp&lt;/code&gt; の属性、 &lt;code&gt;does_esmtp&lt;/code&gt; は、サーバーがESMTPをサポートしているかどうかに応じて、trueまたはfalseに設定されている、と &lt;code&gt;esmtp_features&lt;/code&gt; は、このサーバーのSMTPサービス拡張の名前を含む辞書になりますがサポート、およびそれらのパラメーター（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="1a6cc0c49eff29b1de2a0094d71e3e849917c5a5" translate="yes" xml:space="preserve">
          <source>Identify yourself to the SMTP server using &lt;code&gt;HELO&lt;/code&gt;. The hostname argument defaults to the fully qualified domain name of the local host. The message returned by the server is stored as the &lt;code&gt;helo_resp&lt;/code&gt; attribute of the object.</source>
          <target state="translated">&lt;code&gt;HELO&lt;/code&gt; を使用して、SMTPサーバーに対して自分自身を識別します。hostname引数のデフォルトは、ローカルホストの完全修飾ドメイン名です。サーバーから返されたメッセージは、オブジェクトの &lt;code&gt;helo_resp&lt;/code&gt; 属性として格納されます。</target>
        </trans-unit>
        <trans-unit id="7e5a975b6add84fd53e3710a9ceac15eb06663b7" translate="yes" xml:space="preserve">
          <source>Identity</source>
          <target state="translated">Identity</target>
        </trans-unit>
        <trans-unit id="bf6a9618acf9bc1e72899605a417801bb69aeed6" translate="yes" xml:space="preserve">
          <source>Idle defaults to black on white text, but colors text with special meanings. For the shell, these are shell output, shell error, user output, and user error. For Python code, at the shell prompt or in an editor, these are keywords, builtin class and function names, names following &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;def&lt;/code&gt;, strings, and comments. For any text window, these are the cursor (when present), found text (when possible), and selected text.</source>
          <target state="translated">Idleはデフォルトで白いテキストでは黒になりますが、特別な意味を持つテキストに色を付けます。シェルの場合、これらはシェル出力、シェルエラー、ユーザー出力、およびユーザーエラーです。Pythonコードの場合、シェルプロンプトまたはエディターでは、キーワード、組み込みクラスと関数の名前、 &lt;code&gt;class&lt;/code&gt; と &lt;code&gt;def&lt;/code&gt; に続く名前、文字列、コメントです。テキストウィンドウの場合、これらはカーソル（存在する場合）、見つかったテキスト（可能な場合）、および選択されたテキストです。</target>
        </trans-unit>
        <trans-unit id="4dbc654d77cb8c9c5dc993be159da8b61b1ecd5b" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;from&amp;rdquo; is used as the value of &lt;em&gt;etype&lt;/em&gt;, &lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt;&lt;code&gt;element_create()&lt;/code&gt;&lt;/a&gt; will clone an existing element. &lt;em&gt;args&lt;/em&gt; is expected to contain a themename, from which the element will be cloned, and optionally an element to clone from. If this element to clone from is not specified, an empty element will be used. &lt;em&gt;kw&lt;/em&gt; is discarded.</source>
          <target state="translated">「from」が&lt;em&gt;etype&lt;/em&gt;の値として使用されている場合、&lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt; &lt;code&gt;element_create()&lt;/code&gt; &lt;/a&gt;は既存の要素を複製します。&lt;em&gt;argsに&lt;/em&gt;は、要素のクローン元となるテーマ名と、オプションでクローン元の要素が含まれている必要があります。クローン元のこの要素が指定されていない場合、空の要素が使用されます。&lt;em&gt;kw&lt;/em&gt;は破棄されます。</target>
        </trans-unit>
        <trans-unit id="f944010bcb8e6d344f99a27fdf59f6cb446f5d23" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;image&amp;rdquo; is used, &lt;em&gt;args&lt;/em&gt; should contain the default image name followed by statespec/value pairs (this is the imagespec), and &lt;em&gt;kw&lt;/em&gt; may have the following options:</source>
          <target state="translated">「image」を使用する場合、&lt;em&gt;args&lt;/em&gt;にはデフォルトのイメージ名と、それに続くstatespec / valueのペア（これはimagespecです）が含まれている必要があり、&lt;em&gt;kwに&lt;/em&gt;は次のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="14802572f6d100ba7a53b320def8eef6093842e7" translate="yes" xml:space="preserve">
          <source>If 0 bytes are returned, and &lt;em&gt;size&lt;/em&gt; was not 0, this indicates end of file. If the object is in non-blocking mode and no bytes are available, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">0バイトが返され、&lt;em&gt;サイズ&lt;/em&gt;が0でない場合、これはファイルの終わりを示します。オブジェクトが非ブロッキングモードであり、使用可能なバイトがない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="03ee5cecdbc6fb98434a921a66e38d3fc5541ed7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#ast.NodeTransformer&quot;&gt;&lt;code&gt;NodeTransformer&lt;/code&gt;&lt;/a&gt; introduces new nodes (that weren&amp;rsquo;t part of original tree) without giving them location information (such as &lt;code&gt;lineno&lt;/code&gt;), &lt;a href=&quot;#ast.fix_missing_locations&quot;&gt;&lt;code&gt;fix_missing_locations()&lt;/code&gt;&lt;/a&gt; should be called with the new sub-tree to recalculate the location information:</source>
          <target state="translated">If &lt;a href=&quot;#ast.NodeTransformer&quot;&gt; &lt;code&gt;NodeTransformer&lt;/code&gt; &lt;/a&gt; introduces new nodes (that weren&amp;rsquo;t part of original tree) without giving them location information (such as &lt;code&gt;lineno&lt;/code&gt; ), &lt;a href=&quot;#ast.fix_missing_locations&quot;&gt; &lt;code&gt;fix_missing_locations()&lt;/code&gt; &lt;/a&gt; should be called with the new sub-tree to recalculate the location information:</target>
        </trans-unit>
        <trans-unit id="c02c4acde96b174846ba50faba8ca5546f01adef" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#asyncio.loop.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called before &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; is called, the loop will poll the I/O selector once with a timeout of zero, run all callbacks scheduled in response to I/O events (and those that were already scheduled), and then exit.</source>
          <target state="translated">場合は&lt;a href=&quot;#asyncio.loop.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;の前に呼び出される&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; &lt;/a&gt;と呼ばれ、ループがゼロのタイムアウトで一度I / Oセレクタをポーリングする、I / Oイベント（およびすでにスケジュールされたもの）に応じて、予定のすべてのコールバックを実行し、その後、終了します。</target>
        </trans-unit>
        <trans-unit id="05e8eca43c8b5bd5bc36cb778852fb6cfcbe90e4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#asyncio.loop.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called while &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; is running, the loop will run the current batch of callbacks and then exit. Note that new callbacks scheduled by callbacks will not run in this case; instead, they will run the next time &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;run_forever()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.loop.run_until_complete&quot;&gt;&lt;code&gt;run_until_complete()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">場合は&lt;a href=&quot;#asyncio.loop.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;しながら、呼ばれ&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; が&lt;/a&gt;実行されて、ループがコールバックして終了の現在のバッチを実行します。この場合、コールバックによってスケジュールされた新しいコールバックは実行されないことに注意してください。代わりに、次に&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;run_forever()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#asyncio.loop.run_until_complete&quot;&gt; &lt;code&gt;run_until_complete()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="d04305c691531cc120abb78c9b6420c339ccd744" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#cmdoption-timeit-n&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/a&gt; is not given, a suitable number of loops is calculated by trying increasing numbers from the sequence 1, 2, 5, 10, 20, 50, &amp;hellip; until the total time is at least 0.2 seconds.</source>
          <target state="translated">If &lt;a href=&quot;#cmdoption-timeit-n&quot;&gt; &lt;code&gt;-n&lt;/code&gt; &lt;/a&gt; is not given, a suitable number of loops is calculated by trying increasing numbers from the sequence 1, 2, 5, 10, 20, 50, &amp;hellip; until the total time is at least 0.2 seconds.</target>
        </trans-unit>
        <trans-unit id="d1678f57ce6088308b33179279e335b67a5b9075" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#cmdoption-timeit-n&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/a&gt; is not given, a suitable number of loops is calculated by trying successive powers of 10 until the total time is at least 0.2 seconds.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-timeit-n&quot;&gt; &lt;code&gt;-n&lt;/code&gt; &lt;/a&gt;が指定されていない場合、合計時間が少なくとも0.2秒になるまで10の累乗を試行することにより、適切な数のループが計算されます。</target>
        </trans-unit>
        <trans-unit id="582ba31da26c45d3b235552a7d51ae121320d8b0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;None&lt;/code&gt;, it is called without arguments to provide a default value for the given &lt;em&gt;key&lt;/em&gt;, this value is inserted in the dictionary for the &lt;em&gt;key&lt;/em&gt;, and returned.</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、引数なしで呼び出され、指定された&lt;em&gt;keyの&lt;/em&gt;デフォルト値を提供します。この値は、&lt;em&gt;key&lt;/em&gt;のディクショナリに挿入されて返されます。</target>
        </trans-unit>
        <trans-unit id="9cde1ada951bb0301fa7df4ab6c0c9e7ef70a81d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; is used just as a simple decorator with no parameters, it acts as if it has the default values documented in this signature. That is, these three uses of &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; are equivalent:</source>
          <target state="translated">場合&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;だけパラメータなしで単純なデコレータとして使用され、それは、このシグネチャに記載デフォルト値を有するかのように作用します。つまり、これら3つの&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; の&lt;/a&gt;使用法は同等です。</target>
        </trans-unit>
        <trans-unit id="06790524e2c9624dd66bf4e80174a491c71a47d3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance &lt;em&gt;d&lt;/em&gt; is naive, this is the same as &lt;code&gt;d.timetuple()&lt;/code&gt; except that &lt;code&gt;tm_isdst&lt;/code&gt; is forced to 0 regardless of what &lt;code&gt;d.dst()&lt;/code&gt; returns. DST is never in effect for a UTC time.</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;インスタンス&lt;em&gt;d&lt;/em&gt;がナイーブの場合、 &lt;code&gt;d.dst()&lt;/code&gt; が返すものに関係なく &lt;code&gt;tm_isdst&lt;/code&gt; が強制的に0になることを除いて、これは &lt;code&gt;d.timetuple()&lt;/code&gt; と同じです。DSTがUTC時間で有効になることはありません。</target>
        </trans-unit>
        <trans-unit id="7e0c40c35052a5f701990cfae358459eb5e545e6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.dst(self)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.dst(self)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f8caa4545a15722244f6b65e83c6c19542a6ab44" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.tzname(self)&lt;/code&gt;, raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a string object,</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;ある &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.tzname(self)&lt;/code&gt; 後者は返さないしない場合は、例外を発生させ &lt;code&gt;None&lt;/code&gt; か、文字列オブジェクトを、</target>
        </trans-unit>
        <trans-unit id="009d47938690bf44a446761016995961a2f2f6ff" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.utcoffset(self)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.utcoffset(self)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="aa3f64ecaf560bd1451a3c877d9f543b04fcbe06" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, a string is appended, giving the UTC offset:</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;返しません &lt;code&gt;None&lt;/code&gt; を、文字列は、UTCオフセットを与える、追加されます：</target>
        </trans-unit>
        <trans-unit id="e7fddffca5059ab1879694ef1968947dba191d2e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.dst(None)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt;, or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">もし&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;あるん &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.dst(None)&lt;/code&gt; 、後者が戻らない場合には例外を発生させます &lt;code&gt;None&lt;/code&gt; 、または&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;、1日未満の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f9853982dbae22fa9c2c2cdec0356caa1586b4dd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.tzname(None)&lt;/code&gt;, or raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a string object.</source>
          <target state="translated">もし&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のが&lt;/a&gt;あるん &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.tzname(None)&lt;/code&gt; 、または後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か、文字列オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="01eb5a0fb7bdeeed7668f56b440e9918155d69bd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;, else returns &lt;code&gt;self.tzinfo.utcoffset(None)&lt;/code&gt;, and raises an exception if the latter doesn&amp;rsquo;t return &lt;code&gt;None&lt;/code&gt; or a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object with magnitude less than one day.</source>
          <target state="translated">場合&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;ありません &lt;code&gt;None&lt;/code&gt; 、返す &lt;code&gt;None&lt;/code&gt; 、他返し &lt;code&gt;self.tzinfo.utcoffset(None)&lt;/code&gt; 、後者が戻らない場合には例外を発生させ &lt;code&gt;None&lt;/code&gt; か&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 1日以下の大きさを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bf4cf586488675e2ebba410a57aa3e353d6385cd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; should not return &lt;code&gt;None&lt;/code&gt; either.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返さない場合、&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;も &lt;code&gt;None&lt;/code&gt; を返すべきではありません。</target>
        </trans-unit>
        <trans-unit id="9011595808dcf4d293ad800bfc6c37bf4507550c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; has not been called before &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; will automatically create a new context for use in the current thread.</source>
          <target state="translated">&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; の&lt;/a&gt;前に&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;が呼び出されていない場合、&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt;は現在のスレッドで使用する新しいコンテキストを自動的に作成します。</target>
        </trans-unit>
        <trans-unit id="21415457c1d139549ef89f97140496dfdfab045c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#email.policy.Policy.cte_type&quot;&gt;&lt;code&gt;cte_type&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;8bit&lt;/code&gt;, non-ASCII binary data is converted back into bytes. Headers with binary data are not refolded, regardless of the &lt;code&gt;refold_header&lt;/code&gt; setting, since there is no way to know whether the binary data consists of single byte characters or multibyte characters.</source>
          <target state="translated">&lt;a href=&quot;#email.policy.Policy.cte_type&quot;&gt; &lt;code&gt;cte_type&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;8bit&lt;/code&gt; の場合、非ASCIIバイナリデータはバイトに変換されます。バイナリデータがシングルバイト文字で構成されているかマルチバイト文字で構成されているかを知る方法がないため、 &lt;code&gt;refold_header&lt;/code&gt; 設定に関係なく、バイナリデータを含むヘッダーは再折りたたみされません。</target>
        </trans-unit>
        <trans-unit id="c4c20a0126fb2339f46306a2ced37ad168e88f98" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#gc.DEBUG_SAVEALL&quot;&gt;&lt;code&gt;DEBUG_SAVEALL&lt;/code&gt;&lt;/a&gt; is set, then all unreachable objects will be added to this list rather than freed.</source>
          <target state="translated">&lt;a href=&quot;#gc.DEBUG_SAVEALL&quot;&gt; &lt;code&gt;DEBUG_SAVEALL&lt;/code&gt; &lt;/a&gt;が設定されている場合、到達できないオブジェクトはすべて、解放されるのではなく、このリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="5b0b664a2e9905229df91a5d790cbb723cbe0e9d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; returns true for the cookie domain, &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; is called for the cookie path. Otherwise, &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; are never called for that cookie domain. If &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; returns true, &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; is called with the &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; object itself for a full check. Otherwise, &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt; is never called for that cookie path.</source>
          <target state="translated">場合&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; は、&lt;/a&gt; Cookieドメインについてtrueを返す、&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; は&lt;/a&gt;クッキーのパスのために呼ばれています。それ以外の場合、そのcookieドメインに対して&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;が呼び出されることはありません。場合&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; が&lt;/a&gt; trueを返す、&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; を&lt;/a&gt;使って呼び出され&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;フルチェックのためのオブジェクトそのもの。そうでない場合、&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;はそのCookieパスに対して呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="f9948b67acbf113dce0d3f91e1cc50fba431b125" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;spec.loader.create_module&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;, then any pre-existing attributes will not be reset. Also, no &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if triggered while accessing &lt;strong&gt;spec&lt;/strong&gt; or setting an attribute on the module.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;spec.loader.create_module&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返さない場合、既存の属性はリセットされません。また、モジュールへの&lt;strong&gt;スペック&lt;/strong&gt;へのアクセスまたは属性の設定中にトリガーされた場合、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;は発生しません。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d25bfcae1ced7878a90923a3bbc911ce54352476" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; is defined, backwards-compatible functionality is provided.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;が定義されている場合、下位互換性のある機能が提供されます。</target>
        </trans-unit>
        <trans-unit id="f015a253da746e1e2dd5daec6dd710fa4d38756c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; is defined then backwards-compatible functionality is provided.</source>
          <target state="translated">場合&lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; は&lt;/a&gt;、次に定義されている下位互換機能が提供されます。</target>
        </trans-unit>
        <trans-unit id="9b326804ec799be875e38c1a2930a4c25cd8cef4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#memoryview.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; is one of the native format specifiers from the &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module, indexing with an integer or a tuple of integers is also supported and returns a single &lt;em&gt;element&lt;/em&gt; with the correct type. One-dimensional memoryviews can be indexed with an integer or a one-integer tuple. Multi-dimensional memoryviews can be indexed with tuples of exactly &lt;em&gt;ndim&lt;/em&gt; integers where &lt;em&gt;ndim&lt;/em&gt; is the number of dimensions. Zero-dimensional memoryviews can be indexed with the empty tuple.</source>
          <target state="translated">&lt;a href=&quot;#memoryview.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールのネイティブ形式指定子の1つである場合、整数または整数のタプルによるインデックス付けもサポートされ、正しいタイプの単一の&lt;em&gt;要素&lt;/em&gt;を返します。 1次元のメモリビューには、整数または1整数のタプルでインデックスを付けることができます。多次元メモリ&lt;em&gt;ビュー&lt;/em&gt;は、&lt;em&gt;ndim&lt;/em&gt;が次元数である&lt;em&gt;ndim&lt;/em&gt;整数のタプルでインデックスを付けることができます。ゼロ次元のメモリビューは、空のタプルでインデックス化できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e778bfa133d88df69f23727150ca404e8c30f386" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; returns a false value, the &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method will not be called upon unpickling.</source>
          <target state="translated">場合&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt; falseを返し、&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;メソッドは、unpickle化で呼び出されません。</target>
        </trans-unit>
        <trans-unit id="a3e787ee0d7f7e8be6223781b46958dd72b0562d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; is not provided, a modified copy of this mapping may be passed to the appropriate process-creation functions to cause child processes to use a modified environment.</source>
          <target state="translated">場合&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;提供されていない、このマッピングの変更コピーが変更された環境を使用して子プロセスを引き起こすために適切なプロセス生成関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="475a717000de0e2b757369a1ff16dc88df2752ce" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;obj&lt;/em&gt; is pickled as usual. Any other value causes &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; to emit the returned value as a persistent ID for &lt;em&gt;obj&lt;/em&gt;. The meaning of this persistent ID should be defined by &lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt;&lt;code&gt;Unpickler.persistent_load()&lt;/code&gt;&lt;/a&gt;. Note that the value returned by &lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt;&lt;code&gt;persistent_id()&lt;/code&gt;&lt;/a&gt; cannot itself have a persistent ID.</source>
          <target state="translated">&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;None&lt;/code&gt; を返す場合、&lt;em&gt;obj&lt;/em&gt;は通常どおりにピクルされます。その他の値を指定すると、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;は戻り値を&lt;em&gt;objの&lt;/em&gt;永続IDとして&lt;em&gt;発行し&lt;/em&gt;ます。この永続IDの意味は、&lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt; &lt;code&gt;Unpickler.persistent_load()&lt;/code&gt; で&lt;/a&gt;定義する必要があります。&lt;a href=&quot;#pickle.Pickler.persistent_id&quot;&gt; &lt;code&gt;persistent_id()&lt;/code&gt; &lt;/a&gt;によって返される値自体は、永続的なIDを持つことができないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b6eb3f096073e3576908ab443228929f5d208920" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, any character not declared to be a word character, whitespace, or a quote will be returned as a single-character token. If it is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; will only split words in whitespaces;</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、単語文字、空白、または引用符として宣言されていない文字は、1文字のトークンとして返されます。 &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;は単語を空白でのみ分割します。</target>
        </trans-unit>
        <trans-unit id="18eeb508085769b9d25fd4a01e99172032cc7b0e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;getdefaulttimeout()&lt;/code&gt;&lt;/a&gt; is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, sockets returned by the &lt;a href=&quot;#socket.socket.accept&quot;&gt;&lt;code&gt;accept()&lt;/code&gt;&lt;/a&gt; method inherit that timeout. Otherwise, the behaviour depends on settings of the listening socket:</source>
          <target state="translated">&lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;でない場合、&lt;a href=&quot;#socket.socket.accept&quot;&gt; &lt;code&gt;accept()&lt;/code&gt; &lt;/a&gt;メソッドによって返されたソケットはそのタイムアウトを継承します。それ以外の場合、動作はリスニングソケットの設定によって異なります。</target>
        </trans-unit>
        <trans-unit id="1595b340863f62eada1ad0f3d8d078a3995d33d4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.CompletedProcess.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; is non-zero, raise a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.CompletedProcess.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;がゼロ以外の場合は、&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; を送出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9911da4fc9a0f7d03f013c47079f09932dd87298" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESHOWWINDOW&quot;&gt;&lt;code&gt;STARTF_USESHOWWINDOW&lt;/code&gt;&lt;/a&gt;, this attribute can be any of the values that can be specified in the &lt;code&gt;nCmdShow&lt;/code&gt; parameter for the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms633548(v=vs.85).aspx&quot;&gt;ShowWindow&lt;/a&gt; function, except for &lt;code&gt;SW_SHOWDEFAULT&lt;/code&gt;. Otherwise, this attribute is ignored.</source>
          <target state="translated">場合&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; パラメータ&lt;/a&gt;を指定&lt;a href=&quot;#subprocess.STARTF_USESHOWWINDOW&quot;&gt; &lt;code&gt;STARTF_USESHOWWINDOW&lt;/code&gt; &lt;/a&gt;、この属性はで指定できる値のいずれかとすることができる &lt;code&gt;nCmdShow&lt;/code&gt; のためのパラメータ&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms633548(v=vs.85).aspx&quot;&gt;のShowWindowの&lt;/a&gt;を除いて、機能 &lt;code&gt;SW_SHOWDEFAULT&lt;/code&gt; 。それ以外の場合、この属性は無視されます。</target>
        </trans-unit>
        <trans-unit id="17afb4874f7b74c33ba1f0a22fdede7fd8bbd2cb" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard error handle for the process. Otherwise, this attribute is ignored and the default for standard error is the console window&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定している場合、この属性はプロセスの標準エラーハンドルです。それ以外の場合、この属性は無視され、標準エラーのデフォルトはコンソールウィンドウのバッファです。</target>
        </trans-unit>
        <trans-unit id="8fb5e8f987ab98575e4a5bf2c5bf6153ecdee636" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard input handle for the process. If &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt; is not specified, the default for standard input is the keyboard buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定している場合、この属性はプロセスの標準入力ハンドルです。場合&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; が&lt;/a&gt;指定されていない場合、標準入力のデフォルトはキーボードバッファです。</target>
        </trans-unit>
        <trans-unit id="2459b411dc5f72300ea61c717f86aac25d4f6c97" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt;&lt;code&gt;dwFlags&lt;/code&gt;&lt;/a&gt; specifies &lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt;&lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt;&lt;/a&gt;, this attribute is the standard output handle for the process. Otherwise, this attribute is ignored and the default for standard output is the console window&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO.dwFlags&quot;&gt; &lt;code&gt;dwFlags&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#subprocess.STARTF_USESTDHANDLES&quot;&gt; &lt;code&gt;STARTF_USESTDHANDLES&lt;/code&gt; を&lt;/a&gt;指定している場合、この属性はプロセスの標準出力ハンドルです。それ以外の場合、この属性は無視され、標準出力のデフォルトはコンソールウィンドウのバッファになります。</target>
        </trans-unit>
        <trans-unit id="0a30adf3ca5293f47c1189f27a38687cc18999e3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; has not been called prior to the call to &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;openlog()&lt;/code&gt; will be called with no arguments.</source>
          <target state="translated">場合&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;する前にコールに呼び出されていない&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;openlog()&lt;/code&gt; 引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa24a5d03ba78592ea146659696b16ffe43b9a77" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt; is false and &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; is true, each tab character will be replaced by a single space, which is &lt;em&gt;not&lt;/em&gt; the same as tab expansion.</source>
          <target state="translated">場合&lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; が&lt;/a&gt;虚偽であると&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; が&lt;/a&gt;真で、各タブ文字は単一のスペースで置き換えられます&lt;em&gt;ない&lt;/em&gt;タブ拡張と同じ。</target>
        </trans-unit>
        <trans-unit id="401fb6d910d793ac1a606938fd5c1e335d50c524" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; is false, newlines may appear in the middle of a line and cause strange output. For this reason, text should be split into paragraphs (using &lt;a href=&quot;stdtypes#str.splitlines&quot;&gt;&lt;code&gt;str.splitlines()&lt;/code&gt;&lt;/a&gt; or similar) which are wrapped separately.</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; &lt;/a&gt;がfalseの場合、改行が行の途中に表示され、奇妙な出力が発生する可能性があります。このため、テキストは（&lt;a href=&quot;stdtypes#str.splitlines&quot;&gt; &lt;code&gt;str.splitlines()&lt;/code&gt; &lt;/a&gt;などを使用して）段落に分割し、個別にラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="5440dd0e7910d37a11dd3863c46d6c4daaf6a686" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; fails, meaning that &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;ことを意味し、失敗した&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;呼び出されない場合、追加されたクリーンアップ関数はまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="11e9aa6a0b626486b9748ffe7b0fd4868dfa4de3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; succeeded, &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; will be run whether the test method succeeded or not.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; が&lt;/a&gt;成功した場合、テストメソッドが成功したかどうかにかかわらず、&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;が実行されます。</target>
        </trans-unit>
        <trans-unit id="2f754fa973712c4da8b8b5a253b88e6d78c5436a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; fails, meaning that &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;ことを意味し、失敗した&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; が&lt;/a&gt;呼び出されない場合、追加の任意のクリーンアップ機能がまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a56b554a11ada97428e4f6b7fc43139d2ce66dfd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; is set then it will be called after the call has been recorded, so if &lt;code&gt;side_effect&lt;/code&gt; raises an exception the call is still recorded.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; が&lt;/a&gt;設定されているコールが記録された後、それがあればそう、呼び出されます &lt;code&gt;side_effect&lt;/code&gt; は例外を発生させ、コールがまだ記録されています。</target>
        </trans-unit>
        <trans-unit id="0daae280f7ddf940c3563e2d3ab6d3e152cdba08" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; is used as a context manager, the value returned by the context manager is a dictionary where created mocks are keyed by name:</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; は、&lt;/a&gt;コンテキストマネージャとして使用される、コンテキストマネージャによって返される値は、作成したモックの名前をキーれる辞書です。</target>
        </trans-unit>
        <trans-unit id="7ea197c7086cd8e399adabc6fac58ed3712540b4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt;&lt;code&gt;origin_server&lt;/code&gt;&lt;/a&gt; is true, this string attribute is used to set the HTTP version of the response set to the client. It defaults to &lt;code&gt;&quot;1.0&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt; &lt;code&gt;origin_server&lt;/code&gt; が&lt;/a&gt; trueの場合、この文字列属性は、クライアントに設定され、応答のHTTPバージョンを設定するために使用されます。デフォルトは &lt;code&gt;&quot;1.0&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="273da1adde160734ed233b111094a596981762d8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt;&lt;code&gt;buffer_text&lt;/code&gt;&lt;/a&gt; is enabled, the number of bytes stored in the buffer. These bytes represent UTF-8 encoded text. This attribute has no meaningful interpretation when &lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt;&lt;code&gt;buffer_text&lt;/code&gt;&lt;/a&gt; is false.</source>
          <target state="translated">&lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt; &lt;code&gt;buffer_text&lt;/code&gt; &lt;/a&gt;が有効な場合、バッファに格納されているバイト数。これらのバイトは、UTF-8でエンコードされたテキストを表します。&lt;a href=&quot;#xml.parsers.expat.xmlparser.buffer_text&quot;&gt; &lt;code&gt;buffer_text&lt;/code&gt; &lt;/a&gt;がfalseの場合、この属性には意味のある解釈がありません。</target>
        </trans-unit>
        <trans-unit id="5969c407e8a5884e8705a2163a3f42bcc5ab4f5f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, any defects encountered will be raised as errors. If &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (the default), defects will be passed to the &lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt;&lt;code&gt;register_defect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、発生した欠陥はエラーとして発生します。&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;（デフォルト）の場合、欠陥は&lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt; &lt;code&gt;register_defect()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="fef1119ed2a7515183a2fa43ee13d86ddee0c639" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, lines starting with &lt;em&gt;&amp;ldquo;From &amp;ldquo;&lt;/em&gt; in the body are escaped by putting a &lt;code&gt;&amp;gt;&lt;/code&gt; in front of them. This parameter is used when the message is being serialized by a generator. Default: &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、本文の&lt;em&gt;「From」&lt;/em&gt;で始まる行は、その前に &lt;code&gt;&amp;gt;&lt;/code&gt; を付けることでエスケープされます。このパラメーターは、メッセージがジェネレーターによってシリアル化されるときに使用されます。デフォルト：&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3847911e0aa3faa42e57a768e6d9c9134161e5d0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not explicit defined, or if it is set to &lt;code&gt;None&lt;/code&gt;, then &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;may&lt;/em&gt; add an implicit &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Although not recommended, you can force &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; to create a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method with &lt;code&gt;unsafe_hash=True&lt;/code&gt;. This might be the case if your class is logically immutable but can nonetheless be mutated. This is a specialized use case and should be considered carefully.</source>
          <target state="translated">もし&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;明示的に定義されていないか、またはそれが設定されている場合は &lt;code&gt;None&lt;/code&gt; 、その後、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;も&lt;/em&gt;暗黙の追加&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを。推奨されませんが、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;unsafe_hash=True&lt;/code&gt; を指定して__hash &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドを作成するように強制できます。これは、クラスが論理的に不変であるにもかかわらず、変更できる場合に当てはまります。これは特殊な使用例であり、慎重に検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="e04c3d63f8f0b660bf5ea6424df45f9aabfeea2f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; is defined the value of the enum member will be passed to those methods:</source>
          <target state="translated">場合&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;定義される列挙体の値は、これらのメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="c2fc9783c650081b684b1471be048e00bfcf1c2a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not explicit defined, or if it is set to &lt;code&gt;None&lt;/code&gt;, then &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;may&lt;/em&gt; add an implicit &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. Although not recommended, you can force &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; to create a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method with &lt;code&gt;unsafe_hash=True&lt;/code&gt;. This might be the case if your class is logically immutable but can nonetheless be mutated. This is a specialized use case and should be considered carefully.</source>
          <target state="translated">If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; is not explicit defined, or if it is set to &lt;code&gt;None&lt;/code&gt; , then &lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;may&lt;/em&gt; add an implicit &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method. Although not recommended, you can force &lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; to create a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method with &lt;code&gt;unsafe_hash=True&lt;/code&gt; . This might be the case if your class is logically immutable but can nonetheless be mutated. This is a specialized use case and should be considered carefully.</target>
        </trans-unit>
        <trans-unit id="b6e0bf03147eeca5dcbc1a65f0d8dfc48889baf2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; is defined the value of the enum member will be passed to those methods:</source>
          <target state="translated">If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; is defined the value of the enum member will be passed to those methods:</target>
        </trans-unit>
        <trans-unit id="1a25fcf949e895e543466fc090449ac64a3c56b0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;signal#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t handled by Python (it was set to &lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt;), this function does nothing.</source>
          <target state="translated">If &lt;a href=&quot;signal#signal.SIGINT&quot;&gt; &lt;code&gt;signal.SIGINT&lt;/code&gt; &lt;/a&gt; isn&amp;rsquo;t handled by Python (it was set to &lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt; &lt;code&gt;signal.SIG_DFL&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt; &lt;code&gt;signal.SIG_IGN&lt;/code&gt; &lt;/a&gt;), this function does nothing.</target>
        </trans-unit>
        <trans-unit id="2a87d22d7e499f0ee61056877808ca82fe9ec45b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data is passed in, the result will also contain only &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. If &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; data is passed in, the result will contain only &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data.</source>
          <target state="translated">場合は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;データが渡され、結果ものみ含まれます&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;データを。場合は&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;データが渡され、その結果は含まれています&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;のデータを。</target>
        </trans-unit>
        <trans-unit id="aed3bfed2c45e20b453e673260527b4602b0fa6c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; is passed in, it is returned unchanged. Otherwise &lt;a href=&quot;#os.PathLike.__fspath__&quot;&gt;&lt;code&gt;__fspath__()&lt;/code&gt;&lt;/a&gt; is called and its value is returned as long as it is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. In all other cases, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">場合は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;渡され、それがそのまま返されます。それ以外の場合、&lt;a href=&quot;#os.PathLike.__fspath__&quot;&gt; &lt;code&gt;__fspath__()&lt;/code&gt; &lt;/a&gt;が呼び出され、&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトである限り、その値が返されます。その他の場合はすべて、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="caf032867f63b3726a28645ba313d2c3e89d2da5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, or &lt;code&gt;r&lt;/code&gt; is used, all arguments are placed in &lt;code&gt;sys.argv[1:...]&lt;/code&gt; and &lt;code&gt;sys.argv[0]&lt;/code&gt; is set to &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'-c'&lt;/code&gt;, or &lt;code&gt;'-r'&lt;/code&gt;. No editor window is opened, even if that is the default set in the Options dialog.</source>
          <target state="translated">もし &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt; 、または &lt;code&gt;r&lt;/code&gt; 使用される、すべての引数が中に配置されている &lt;code&gt;sys.argv[1:...]&lt;/code&gt; と &lt;code&gt;sys.argv[0]&lt;/code&gt; に設定されている &lt;code&gt;''&lt;/code&gt; 、 &lt;code&gt;'-c'&lt;/code&gt; 、または &lt;code&gt;'-r'&lt;/code&gt; 。[オプション]ダイアログでデフォルトで設定されている場合でも、エディタウィンドウは開きません。</target>
        </trans-unit>
        <trans-unit id="21627f7daf7e31d0ed2c5b5ad287f10a5bba0e4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; is supplied at the command line, the ArgumentParser help will be printed:</source>
          <target state="translated">場合 &lt;code&gt;-h&lt;/code&gt; または &lt;code&gt;--help&lt;/code&gt; をコマンドラインで供給され、ArgumentParserのヘルプが印刷されます。</target>
        </trans-unit>
        <trans-unit id="c7a9c72b700c6c23304dc413d4be9c57f931cd8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; and &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; without sharing any other knowledge, then the appropriate shared operation is the one involving the built in &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;, and both &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt; s land there, so &lt;code&gt;a+b
== b+a&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; と &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; 他の知識を共有することなく、適切な共有の動作が組み込ま含むものである&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;、そして両方&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt;が複数のランドは、そう &lt;code&gt;a+b == b+a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="860d1ded473a39b8214f3cb82ab754be95ed22c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; and &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; without sharing any other knowledge, then the appropriate shared operation is the one involving the built in &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;, and both &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt; s land there, so &lt;code&gt;a+b
== b+a&lt;/code&gt;.</source>
          <target state="translated">If &lt;code&gt;A &amp;lt;: Complex&lt;/code&gt; and &lt;code&gt;B &amp;lt;: Real&lt;/code&gt; without sharing any other knowledge, then the appropriate shared operation is the one involving the built in &lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;, and both &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt; s land there, so &lt;code&gt;a+b == b+a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b801947cfd092d953ccf6831d669c267f173f35e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; defines an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; which accepts &lt;code&gt;b&lt;/code&gt;, all is well.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; が &lt;code&gt;b&lt;/code&gt; を受け入れる&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;を定義している場合、すべて順調です。</target>
        </trans-unit>
        <trans-unit id="a3ba8aa5fe7b9755b92f7e04fab9b569ede2734b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; defines an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; which accepts &lt;code&gt;b&lt;/code&gt;, all is well.</source>
          <target state="translated">If &lt;code&gt;A&lt;/code&gt; defines an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt; which accepts &lt;code&gt;b&lt;/code&gt; , all is well.</target>
        </trans-unit>
        <trans-unit id="ed23788452e71ff7756d04b76ef0e4ea7b1ec3ee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; falls back to the boilerplate code, and it were to return a value from &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;, we&amp;rsquo;d miss the possibility that &lt;code&gt;B&lt;/code&gt; defines a more intelligent &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt;, so the boilerplate should return &lt;a href=&quot;constants#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;. (Or &lt;code&gt;A&lt;/code&gt; may not implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; at all.)</source>
          <target state="translated">場合 &lt;code&gt;A&lt;/code&gt; はバック定型コードに落ち、それから値を返すようにした&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;、我々はその可能性欠場だろ &lt;code&gt;B&lt;/code&gt; は、よりインテリジェントな定義&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt;定型が返す必要がありますので、&lt;a href=&quot;constants#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;。（または、 &lt;code&gt;A&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;をまったく実装しない場合があります。）</target>
        </trans-unit>
        <trans-unit id="c4777237f57dbf633ec241445ffb03cbb24e6301" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; falls back to the boilerplate code, and it were to return a value from &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;, we&amp;rsquo;d miss the possibility that &lt;code&gt;B&lt;/code&gt; defines a more intelligent &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__radd__&quot;&gt;&lt;code&gt;__radd__()&lt;/code&gt;&lt;/a&gt;, so the boilerplate should return &lt;a href=&quot;constants#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt;. (Or &lt;code&gt;A&lt;/code&gt; may not implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt;&lt;code&gt;__add__()&lt;/code&gt;&lt;/a&gt; at all.)</source>
          <target state="translated">If &lt;code&gt;A&lt;/code&gt; falls back to the boilerplate code, and it were to return a value from &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;, we&amp;rsquo;d miss the possibility that &lt;code&gt;B&lt;/code&gt; defines a more intelligent &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__radd__&quot;&gt; &lt;code&gt;__radd__()&lt;/code&gt; &lt;/a&gt;, so the boilerplate should return &lt;a href=&quot;constants#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt; from &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt;. (Or &lt;code&gt;A&lt;/code&gt; may not implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__add__&quot;&gt; &lt;code&gt;__add__()&lt;/code&gt; &lt;/a&gt; at all.)</target>
        </trans-unit>
        <trans-unit id="c99da1870c17ce7d3d3018a203be0bafc8dccfae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;B &amp;lt;: A&lt;/code&gt;, Python tries &lt;code&gt;B.__radd__&lt;/code&gt; before &lt;code&gt;A.__add__&lt;/code&gt;. This is ok, because it was implemented with knowledge of &lt;code&gt;A&lt;/code&gt;, so it can handle those instances before delegating to &lt;a href=&quot;#numbers.Complex&quot;&gt;&lt;code&gt;Complex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;B &amp;lt;: A&lt;/code&gt; 場合、Pythonは &lt;code&gt;B.__radd__&lt;/code&gt; 前にB .__ radd__を &lt;code&gt;A.__add__&lt;/code&gt; ます。 &lt;code&gt;A&lt;/code&gt; の知識で実装されているため、これは問題ありません。そのため、&lt;a href=&quot;#numbers.Complex&quot;&gt; &lt;code&gt;Complex&lt;/code&gt; &lt;/a&gt;に委任する前にそれらのインスタンスを処理できます。</target>
        </trans-unit>
        <trans-unit id="c0b502541a012336c972c1fd26bc2444183bb6c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;False&lt;/code&gt;, follow &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, supporting non-ASCII characters in headers by encoding them as &amp;ldquo;encoded words&amp;rdquo;. If &lt;code&gt;True&lt;/code&gt;, follow &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt; and use &lt;code&gt;utf-8&lt;/code&gt; encoding for headers. Messages formatted in this way may be passed to SMTP servers that support the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; の場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;に従い、ヘッダー内の非ASCII文字を「エンコードされた単語」としてエンコードすることでサポートします。 &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;に従い、ヘッダーに &lt;code&gt;utf-8&lt;/code&gt; エンコーディングを使用します。この方法でフォーマットされたメッセージは、 &lt;code&gt;SMTPUTF8&lt;/code&gt; 拡張（&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;）をサポートするSMTPサーバーに渡される場合があります。</target>
        </trans-unit>
        <trans-unit id="f0aa57a54bd4c37d36f82fb559a78314f58cdaa4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SMTPUTF8&lt;/code&gt; is included in &lt;em&gt;mail_options&lt;/em&gt;, and the server supports it, &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; may contain non-ASCII characters.</source>
          <target state="translated">場合 &lt;code&gt;SMTPUTF8&lt;/code&gt; が含まれ&lt;em&gt;mail_options&lt;/em&gt;、サーバーがサポートしている、&lt;em&gt;from_addr&lt;/em&gt;と&lt;em&gt;to_addrsは、&lt;/em&gt;非ASCII文字が含まれていてもよいです。</target>
        </trans-unit>
        <trans-unit id="b5dc45558ebcea6d610bad35d84ea39326606ff5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TOS&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object it is left as is. Otherwise, implements &lt;code&gt;TOS = iter(TOS)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;TOS&lt;/code&gt; がある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;ジェネレータイテレータ&lt;/a&gt;や&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;コルーチン&lt;/a&gt;対象であるとして、それが残されています。それ以外の場合は、 &lt;code&gt;TOS = iter(TOS)&lt;/code&gt; 実装します。</target>
        </trans-unit>
        <trans-unit id="e645f28378b987a0eff4f27f4b513520653577fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TOS&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object it is left as is. Otherwise, implements &lt;code&gt;TOS = iter(TOS)&lt;/code&gt;.</source>
          <target state="translated">If &lt;code&gt;TOS&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object it is left as is. Otherwise, implements &lt;code&gt;TOS = iter(TOS)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="711424b518e686db6f3128ec091800680cf2d7e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;True&lt;/code&gt;, tokens will only be split in whitespaces. This is useful, for example, for parsing command lines with &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;, getting tokens in a similar way to shell arguments. When used in combination with &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt;, tokens will be split on whitespace in addition to those characters.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; の場合、トークンは空白でのみ分割されます。これは、たとえば、&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;を使用してコマンドラインを解析し、シェル引数と同様の方法でトークンを取得する場合に役立ちます。&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​すると、トークンはこれらの文字に加えて空白で分割されます。</target>
        </trans-unit>
        <trans-unit id="17f7ba8d172e5c3d522143611d4e644d4d525629" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WIFEXITED(status)&lt;/code&gt; is true, return the integer parameter to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;exit(2)&lt;/a&gt;&lt;/em&gt; system call. Otherwise, the return value is meaningless.</source>
          <target state="translated">場合 &lt;code&gt;WIFEXITED(status)&lt;/code&gt; 真である、の整数パラメータを戻す&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/exit(2)&quot;&gt;出口（2）&lt;/a&gt;&lt;/em&gt;システムコール。それ以外の場合、戻り値は無意味です。</target>
        </trans-unit>
        <trans-unit id="eab713d9f34725181e53e9763d51930268ca8cbd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;arcname&lt;/code&gt; (or &lt;code&gt;filename&lt;/code&gt;, if &lt;code&gt;arcname&lt;/code&gt; is not given) contains a null byte, the name of the file in the archive will be truncated at the null byte.</source>
          <target state="translated">場合 &lt;code&gt;arcname&lt;/code&gt; （または &lt;code&gt;filename&lt;/code&gt; 場合、 &lt;code&gt;arcname&lt;/code&gt; が与えられていない）はヌルバイトが含まれている、アーカイブ内のファイルの名前には、NULLバイトで切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="fe6d01c5807b14dd92c652de9261e96f2f0d4073" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is an instance of &lt;a href=&quot;#multiprocessing.BufferTooShort&quot;&gt;&lt;code&gt;BufferTooShort&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;e.args[0]&lt;/code&gt; will give the message as a byte string.</source>
          <target state="translated">場合 &lt;code&gt;e&lt;/code&gt; のインスタンスである&lt;a href=&quot;#multiprocessing.BufferTooShort&quot;&gt; &lt;code&gt;BufferTooShort&lt;/code&gt; &lt;/a&gt;次いで &lt;code&gt;e.args[0]&lt;/code&gt; バイト列としてメッセージを与えます。</target>
        </trans-unit>
        <trans-unit id="700a5fc739f38418d59d1b88b3aa6552134ba97a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are both true, by default &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; will generate a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method for you. If &lt;code&gt;eq&lt;/code&gt; is true and &lt;code&gt;frozen&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;None&lt;/code&gt;, marking it unhashable (which it is, since it is mutable). If &lt;code&gt;eq&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be left untouched meaning the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method of the superclass will be used (if the superclass is &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, this means it will fall back to id-based hashing).</source>
          <target state="translated">場合は &lt;code&gt;eq&lt;/code&gt; と &lt;code&gt;frozen&lt;/code&gt; 、デフォルトでは、真の両方である&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;が生成されます&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;あなたのための方法を。場合は &lt;code&gt;eq&lt;/code&gt; 真とされ &lt;code&gt;frozen&lt;/code&gt; 偽、ある&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;に設定されます &lt;code&gt;None&lt;/code&gt; （これは変更可能であることから、それは、ある）非ハッシュそれをマーク、。 &lt;code&gt;eq&lt;/code&gt; がfalseの場合、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;はそのまま残り、スーパークラスの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;メソッドが使用されます（スーパークラスが&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; の&lt;/a&gt;場合、IDベースのハッシュにフォールバックします）。</target>
        </trans-unit>
        <trans-unit id="f3e7fdf20356595a6bde624dc8a0964ea7673d86" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are both true, by default &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; will generate a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method for you. If &lt;code&gt;eq&lt;/code&gt; is true and &lt;code&gt;frozen&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;None&lt;/code&gt;, marking it unhashable (which it is, since it is mutable). If &lt;code&gt;eq&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; will be left untouched meaning the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method of the superclass will be used (if the superclass is &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, this means it will fall back to id-based hashing).</source>
          <target state="translated">If &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are both true, by default &lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; will generate a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method for you. If &lt;code&gt;eq&lt;/code&gt; is true and &lt;code&gt;frozen&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; will be set to &lt;code&gt;None&lt;/code&gt; , marking it unhashable (which it is, since it is mutable). If &lt;code&gt;eq&lt;/code&gt; is false, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; will be left untouched meaning the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; method of the superclass will be used (if the superclass is &lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;, this means it will fall back to id-based hashing).</target>
        </trans-unit>
        <trans-unit id="0b14e032175d28c1ba6eb0b6e2412729c87fd343" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filename.py&lt;/code&gt; is specified its contents are tokenized to stdout. Otherwise, tokenization is performed on stdin.</source>
          <target state="translated">&lt;code&gt;filename.py&lt;/code&gt; が指定されている場合、その内容はstdoutにトークン化されます。それ以外の場合、トークン化はstdinで実行されます。</target>
        </trans-unit>
        <trans-unit id="933359dd3a335a93ae641667d496c6067a552576" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from __future__ import annotations&lt;/code&gt; is used in Python 3.7 or later, annotations are not evaluated at function definition time. Instead, they are stored as strings in &lt;code&gt;__annotations__&lt;/code&gt;, This makes it unnecessary to use quotes around the annotation. (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0563&quot; id=&quot;index-64&quot;&gt;&lt;strong&gt;PEP 563&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">If &lt;code&gt;from __future__ import annotations&lt;/code&gt; is used in Python 3.7 or later, annotations are not evaluated at function definition time. Instead, they are stored as strings in &lt;code&gt;__annotations__&lt;/code&gt; , This makes it unnecessary to use quotes around the annotation. (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0563&quot; id=&quot;index-64&quot;&gt;&lt;strong&gt;PEP 563&lt;/strong&gt;&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b78ebbf676987b9b08d03411af825fbaec6187a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;gather()&lt;/code&gt; is &lt;em&gt;cancelled&lt;/em&gt;, all submitted awaitables (that have not completed yet) are also &lt;em&gt;cancelled&lt;/em&gt;.</source>
          <target state="translated">Gather &lt;code&gt;gather()&lt;/code&gt; が&lt;em&gt;キャンセルされた&lt;/em&gt;場合、（まだ完了していない）送信&lt;em&gt;された&lt;/em&gt;すべての待機品も&lt;em&gt;キャンセルされ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e8177b4a39b5cb16f60785cde4b45bed17e60bdb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;infile&lt;/code&gt; is specified its contents are parsed to AST and dumped to stdout. Otherwise, the content is read from stdin.</source>
          <target state="translated">If &lt;code&gt;infile&lt;/code&gt; is specified its contents are parsed to AST and dumped to stdout. Otherwise, the content is read from stdin.</target>
        </trans-unit>
        <trans-unit id="98e2ca390d09cb4c5d93c787d1a1e77d3b50a6b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;load_tests&lt;/code&gt; exists then discovery does &lt;em&gt;not&lt;/em&gt; recurse into the package, &lt;code&gt;load_tests&lt;/code&gt; is responsible for loading all tests in the package.</source>
          <target state="translated">&lt;code&gt;load_tests&lt;/code&gt; が存在する場合、検出はパッケージに再帰しませ&lt;em&gt;ん&lt;/em&gt; &lt;code&gt;load_tests&lt;/code&gt; は、パッケージ内のすべてのテストをロードします。</target>
        </trans-unit>
        <trans-unit id="9a58c1405d0e16b64227f1566491186e0f5dddcb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;module&lt;/code&gt; is not supplied, and Enum cannot determine what it is, the new Enum members will not be unpicklable; to keep errors closer to the source, pickling will be disabled.</source>
          <target state="translated">場合は &lt;code&gt;module&lt;/code&gt; 提供されていない、と列挙型はそれが何であるかを判断することはできません、新しい列挙型メンバーはunpickle不可能ではありません。エラーをソースに近づけるために、酸洗いは無効になります。</target>
        </trans-unit>
        <trans-unit id="ab3736d9d355c250769a78d1fa815bd9cfa2ab47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newline=''&lt;/code&gt; is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use &lt;code&gt;\r\n&lt;/code&gt; linendings on write an extra &lt;code&gt;\r&lt;/code&gt; will be added. It should always be safe to specify &lt;code&gt;newline=''&lt;/code&gt;, since the csv module does its own (&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal&lt;/a&gt;) newline handling.</source>
          <target state="translated">&lt;code&gt;newline=''&lt;/code&gt; が指定されていない場合、引用符で囲まれたフィールド内に埋め込まれた改行は正しく解釈されず、 &lt;code&gt;\r\n&lt;/code&gt; ライニングを使用するプラットフォームでは、追加の &lt;code&gt;\r&lt;/code&gt; が追加されます。csvモジュールは独自の（&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;普遍的な&lt;/a&gt;）改行処理を行うため、常に &lt;code&gt;newline=''&lt;/code&gt; を指定しても安全です。</target>
        </trans-unit>
        <trans-unit id="db91609c54b3c7ee79666f02ea8dab67263fa1cc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newline=''&lt;/code&gt; is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use &lt;code&gt;\r\n&lt;/code&gt; linendings on write an extra &lt;code&gt;\r&lt;/code&gt; will be added. It should always be safe to specify &lt;code&gt;newline=''&lt;/code&gt;, since the csv module does its own (&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal&lt;/a&gt;) newline handling.</source>
          <target state="translated">If &lt;code&gt;newline=''&lt;/code&gt; is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use &lt;code&gt;\r\n&lt;/code&gt; linendings on write an extra &lt;code&gt;\r&lt;/code&gt; will be added. It should always be safe to specify &lt;code&gt;newline=''&lt;/code&gt; , since the csv module does its own (&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal&lt;/a&gt;) newline handling.</target>
        </trans-unit>
        <trans-unit id="abd59bc323474e8d28c3b6cf30956ad3087d1391" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.chflags in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the flags of a symbolic link. (&lt;code&gt;os.chflags&lt;/code&gt; is not available on all platforms.)</source>
          <target state="translated">&lt;code&gt;os.chflags in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクのフラグを変更できます。（ &lt;code&gt;os.chflags&lt;/code&gt; はすべてのプラットフォームで使用できるわけではありません。）</target>
        </trans-unit>
        <trans-unit id="8e10e24faf09ce3b9d96dd7e061eb030aca8d0b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.chmod in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the permission bits of a symbolic link.</source>
          <target state="translated">&lt;code&gt;os.chmod in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクの許可ビットを変更できます。</target>
        </trans-unit>
        <trans-unit id="33018c8d997e147843c0242b5f72f3cc52abfcee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;os.utime in os.supports_follow_symlinks&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; can modify the last access and modification times of a symbolic link.</source>
          <target state="translated">&lt;code&gt;os.utime in os.supports_follow_symlinks&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクの最終アクセス時刻と変更時刻を変更できます。</target>
        </trans-unit>
        <trans-unit id="a05957a485610f250e41b862c6cf8205d2ef4e95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proxy&lt;/code&gt; is a proxy whose referent is &lt;code&gt;obj&lt;/code&gt; then the expression</source>
          <target state="translated">場合は &lt;code&gt;proxy&lt;/code&gt; その参照先であるプロキシである &lt;code&gt;obj&lt;/code&gt; その式</target>
        </trans-unit>
        <trans-unit id="4198a79dad12cd8b876f2f71ca5d8af1485c0d0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;related&lt;/code&gt; is not included in &lt;em&gt;preferencelist&lt;/em&gt;, consider the root part (or subpart of the root part) of any related encountered as a candidate if the (sub-)part matches a preference.</source>
          <target state="translated">場合は &lt;code&gt;related&lt;/code&gt; 含まれていない&lt;em&gt;preferencelist&lt;/em&gt;、任意の関連（サブ）の部分は好みと一致した場合に候補として遭遇したの根元部分（またはルート一部のサブパートを）検討してください。</target>
        </trans-unit>
        <trans-unit id="876e1c7c8abfc9cc30ff4722fb3870e77a933987" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;respect_handler_level&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, a handler&amp;rsquo;s level is respected (compared with the level for the message) when deciding whether to pass messages to that handler; otherwise, the behaviour is as in previous Python versions - to always pass each message to each handler.</source>
          <target state="translated">&lt;code&gt;respect_handler_level&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、メッセージをそのハンドラーに渡すかどうかを決定するときに、ハンドラーのレベルが（メッセージのレベルと比較して）尊重されます。それ以外の場合の動作は、以前のPythonバージョンと同じです-常に各メッセージを各ハンドラーに渡します。</target>
        </trans-unit>
        <trans-unit id="b8ba649cc272ffd32fbf67fb183157eb6f6df18c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self.tzinfo&lt;/code&gt; is &lt;em&gt;tz&lt;/em&gt;, &lt;code&gt;self.astimezone(tz)&lt;/code&gt; is equal to &lt;em&gt;self&lt;/em&gt;: no adjustment of date or time data is performed. Else the result is local time in the timezone &lt;em&gt;tz&lt;/em&gt;, representing the same UTC time as &lt;em&gt;self&lt;/em&gt;: after &lt;code&gt;astz = dt.astimezone(tz)&lt;/code&gt;, &lt;code&gt;astz - astz.utcoffset()&lt;/code&gt; will have the same date and time data as &lt;code&gt;dt - dt.utcoffset()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self.tzinfo&lt;/code&gt; が&lt;em&gt;tzの&lt;/em&gt;場合、 &lt;code&gt;self.astimezone(tz)&lt;/code&gt; は&lt;em&gt;self&lt;/em&gt;と同じです。日付または時刻データの調整は実行されません。そうでなければ、結果はタイムゾーンの現地時間である&lt;em&gt;TZ&lt;/em&gt;と同じUTC時刻表現、&lt;em&gt;自己を&lt;/em&gt;：後 &lt;code&gt;astz = dt.astimezone(tz)&lt;/code&gt; 、 &lt;code&gt;astz - astz.utcoffset()&lt;/code&gt; と同じ日付と時刻データを持つことになります &lt;code&gt;dt - dt.utcoffset()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="367bdb474eb8abb8f4c9cfe3276f05ae7bdd8611" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setUpModule()&lt;/code&gt; fails, meaning that &lt;code&gt;tearDownModule()&lt;/code&gt; is not called, then any cleanup functions added will still be called.</source>
          <target state="translated">場合 &lt;code&gt;setUpModule()&lt;/code&gt; ことを意味し、失敗した &lt;code&gt;tearDownModule()&lt;/code&gt; が呼び出されない場合、追加の任意のクリーンアップ機能がまだ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5df6e6854ff33d1db70399b9e7421342b26d1f49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;side_effect&lt;/code&gt; is a function then whatever that function returns is what calls to the mock return. The &lt;code&gt;side_effect&lt;/code&gt; function is called with the same arguments as the mock. This allows you to vary the return value of the call dynamically, based on the input:</source>
          <target state="translated">場合 &lt;code&gt;side_effect&lt;/code&gt; は機能が、その後は何でもその関数の戻りはモックリターンに呼んで。 &lt;code&gt;side_effect&lt;/code&gt; の機能はモックと同じ引数で呼び出されます。これにより、入力に基づいて、呼び出しの戻り値を動的に変化させることができます。</target>
        </trans-unit>
        <trans-unit id="087e65b3a7a454d1f380ea833e17e5e2da02afee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;signal.SIGINT&lt;/code&gt; isn&amp;rsquo;t handled by Python (it was set to &lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt;), this function does nothing.</source>
          <target state="translated">&lt;code&gt;signal.SIGINT&lt;/code&gt; がPythonで処理されない場合（&lt;a href=&quot;signal#signal.SIG_DFL&quot;&gt; &lt;code&gt;signal.SIG_DFL&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;signal#signal.SIG_IGN&quot;&gt; &lt;code&gt;signal.SIG_IGN&lt;/code&gt; &lt;/a&gt;に設定されている場合）、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="f66a0119d36ff434bd176a0f14f955171a2dbfee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;something()&lt;/code&gt; is cancelled by other means (i.e. from within itself) that would also cancel &lt;code&gt;shield()&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;something()&lt;/code&gt; もキャンセルう他の手段（すなわち自身の中から）によりキャンセルされる &lt;code&gt;shield()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c1aae3855096a38e20d34c3153d0204c6e5add8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sys.stdin&lt;/code&gt; is used more than once, the second and further use will return no lines, except perhaps for interactive use, or if it has been explicitly reset (e.g. using &lt;code&gt;sys.stdin.seek(0)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sys.stdin&lt;/code&gt; が複数回使用される場合、おそらくインタラクティブな使用、または明示的にリセットされた場合（例： &lt;code&gt;sys.stdin.seek(0)&lt;/code&gt; を使用）を除いて、2回目以降の使用では行は返されません。</target>
        </trans-unit>
        <trans-unit id="a1540606a988a3eee5d0cd32d98e93f7bdb7662c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sys&lt;/code&gt; is reset by user code, such as with &lt;code&gt;importlib.reload(sys)&lt;/code&gt;, IDLE&amp;rsquo;s changes are lost and input from the keyboard and output to the screen will not work correctly.</source>
          <target state="translated">場合 &lt;code&gt;sys&lt;/code&gt; が、このような場合と同様に、ユーザーコードによってリセットされ &lt;code&gt;importlib.reload(sys)&lt;/code&gt; 、IDLEの変更が失われ、キーボードや出力から画面への入力は正常に動作しません。</target>
        </trans-unit>
        <trans-unit id="8ef4296b0d6745bb7998092ae95ff303a8c4712b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tempdir&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; (the default) at any call to any of the above functions except &lt;a href=&quot;#tempfile.gettempprefix&quot;&gt;&lt;code&gt;gettempprefix()&lt;/code&gt;&lt;/a&gt; it is initialized following the algorithm described in &lt;a href=&quot;#tempfile.gettempdir&quot;&gt;&lt;code&gt;gettempdir()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;tempdir&lt;/code&gt; ありません &lt;code&gt;None&lt;/code&gt; を除いて、上記の機能のいずれかへの呼び出しで（デフォルト）&lt;a href=&quot;#tempfile.gettempprefix&quot;&gt; &lt;code&gt;gettempprefix()&lt;/code&gt; &lt;/a&gt;それはで説明したアルゴリズムに従って初期化されます&lt;a href=&quot;#tempfile.gettempdir&quot;&gt; &lt;code&gt;gettempdir()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ce6afbd1542483776b1f19987aee4fdaea2af84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout &amp;gt; 0&lt;/code&gt;, this specifies the maximum wait time, in seconds. If &lt;code&gt;timeout &amp;lt;= 0&lt;/code&gt;, the call won&amp;rsquo;t block, and will report the currently ready file objects. If &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the call will block until a monitored file object becomes ready.</source>
          <target state="translated">&lt;code&gt;timeout &amp;gt; 0&lt;/code&gt; 場合、これは最大待機時間を秒単位で指定します。場合は &lt;code&gt;timeout &amp;lt;= 0&lt;/code&gt; 、呼び出しはブロックしませんし、現在準備ができてファイルオブジェクトを報告します。&lt;em&gt;timeout&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、監視されているファイルオブジェクトの準備ができるまで、呼び出しはブロックされます。</target>
        </trans-unit>
        <trans-unit id="4f3174ca6f611f2bc6b0b745bb585c33a3deecae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type_comments=True&lt;/code&gt; is given, the parser is modified to check and return type comments as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. This is equivalent to adding &lt;a href=&quot;#ast.PyCF_TYPE_COMMENTS&quot;&gt;&lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt;&lt;/a&gt; to the flags passed to &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;. This will report syntax errors for misplaced type comments. Without this flag, type comments will be ignored, and the &lt;code&gt;type_comment&lt;/code&gt; field on selected AST nodes will always be &lt;code&gt;None&lt;/code&gt;. In addition, the locations of &lt;code&gt;# type:
ignore&lt;/code&gt; comments will be returned as the &lt;code&gt;type_ignores&lt;/code&gt; attribute of &lt;code&gt;Module&lt;/code&gt; (otherwise it is always an empty list).</source>
          <target state="translated">If &lt;code&gt;type_comments=True&lt;/code&gt; is given, the parser is modified to check and return type comments as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. This is equivalent to adding &lt;a href=&quot;#ast.PyCF_TYPE_COMMENTS&quot;&gt; &lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt; &lt;/a&gt; to the flags passed to &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;. This will report syntax errors for misplaced type comments. Without this flag, type comments will be ignored, and the &lt;code&gt;type_comment&lt;/code&gt; field on selected AST nodes will always be &lt;code&gt;None&lt;/code&gt; . In addition, the locations of &lt;code&gt;# type: ignore&lt;/code&gt; comments will be returned as the &lt;code&gt;type_ignores&lt;/code&gt; attribute of &lt;code&gt;Module&lt;/code&gt; (otherwise it is always an empty list).</target>
        </trans-unit>
        <trans-unit id="b883d86f843b47e0cc5cb4e22ef7491a75061003" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type_comments=True&lt;/code&gt; is given, the parser is modified to check and return type comments as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. This is equivalent to adding &lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt; to the flags passed to &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;. This will report syntax errors for misplaced type comments. Without this flag, type comments will be ignored, and the &lt;code&gt;type_comment&lt;/code&gt; field on selected AST nodes will always be &lt;code&gt;None&lt;/code&gt;. In addition, the locations of &lt;code&gt;# type:
ignore&lt;/code&gt; comments will be returned as the &lt;code&gt;type_ignores&lt;/code&gt; attribute of &lt;code&gt;Module&lt;/code&gt; (otherwise it is always an empty list).</source>
          <target state="translated">場合 &lt;code&gt;type_comments=True&lt;/code&gt; 与えられ、パーサがで指定されたコメントを確認し、戻り値の型に変更され&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;及び&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;。これは、&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; に&lt;/a&gt;渡されるフラグに &lt;code&gt;ast.PyCF_TYPE_COMMENTS&lt;/code&gt; を追加することと同じです。これにより、型コメントの配置ミスに関する構文エラーが報告されます。このフラグがない場合、タイプコメントは無視され、選択したASTノードの &lt;code&gt;type_comment&lt;/code&gt; フィールドは常に &lt;code&gt;None&lt;/code&gt; になります。さらに、 &lt;code&gt;# type: ignore&lt;/code&gt; コメントの場所は、 &lt;code&gt;Module&lt;/code&gt; の &lt;code&gt;type_ignores&lt;/code&gt; 属性として返されます（それ以外の場合は常に空のリストです）。</target>
        </trans-unit>
        <trans-unit id="a0593491fc7f673a2fbc8bcde73d064bd5a237d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tzname()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;%Z&lt;/code&gt; is replaced by an empty string. Otherwise &lt;code&gt;%Z&lt;/code&gt; is replaced by the returned value, which must be a string.</source>
          <target state="translated">&lt;code&gt;tzname()&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; を返す場合、 &lt;code&gt;%Z&lt;/code&gt; は空の文字列に置き換えられます。それ以外の場合、 &lt;code&gt;%Z&lt;/code&gt; は戻り値で置き換えられます。戻り値は文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="2650dd8391d760c4b3dcdc53f8ee4bce8296ecf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a negative rational number define &lt;code&gt;hash(x)&lt;/code&gt; as &lt;code&gt;-hash(-x)&lt;/code&gt;. If the resulting hash is &lt;code&gt;-1&lt;/code&gt;, replace it with &lt;code&gt;-2&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;x = m / n&lt;/code&gt; である負の有理数定義 &lt;code&gt;hash(x)&lt;/code&gt; として &lt;code&gt;-hash(-x)&lt;/code&gt; 。結果のハッシュが &lt;code&gt;-1&lt;/code&gt; の場合、それを &lt;code&gt;-2&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="93635faa94af4f4c677484e54d0cfef7e6922367" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a nonnegative rational number and &lt;code&gt;n&lt;/code&gt; is divisible by &lt;code&gt;P&lt;/code&gt; (but &lt;code&gt;m&lt;/code&gt; is not) then &lt;code&gt;n&lt;/code&gt; has no inverse modulo &lt;code&gt;P&lt;/code&gt; and the rule above doesn&amp;rsquo;t apply; in this case define &lt;code&gt;hash(x)&lt;/code&gt; to be the constant value &lt;code&gt;sys.hash_info.inf&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;x = m / n&lt;/code&gt; 非負の有理数であり、 &lt;code&gt;n&lt;/code&gt; で割り切れる &lt;code&gt;P&lt;/code&gt; （ただし、 &lt;code&gt;m&lt;/code&gt; はない）、次いで &lt;code&gt;n&lt;/code&gt; 全く逆モジュロ持たない &lt;code&gt;P&lt;/code&gt; と適用されない上記のルールを、この場合、 &lt;code&gt;hash(x)&lt;/code&gt; を定数値 &lt;code&gt;sys.hash_info.inf&lt;/code&gt; と定義します。</target>
        </trans-unit>
        <trans-unit id="575b723cab08b731a281088430618a5e6637507d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x = m / n&lt;/code&gt; is a nonnegative rational number and &lt;code&gt;n&lt;/code&gt; is not divisible by &lt;code&gt;P&lt;/code&gt;, define &lt;code&gt;hash(x)&lt;/code&gt; as &lt;code&gt;m * invmod(n, P) % P&lt;/code&gt;, where &lt;code&gt;invmod(n,
P)&lt;/code&gt; gives the inverse of &lt;code&gt;n&lt;/code&gt; modulo &lt;code&gt;P&lt;/code&gt;.</source>
          <target state="translated">もし &lt;code&gt;x = m / n&lt;/code&gt; 非負の有理数であり、 &lt;code&gt;n&lt;/code&gt; で割り切れない &lt;code&gt;P&lt;/code&gt; 、定義 &lt;code&gt;hash(x)&lt;/code&gt; ように &lt;code&gt;m * invmod(n, P) % P&lt;/code&gt; 、 &lt;code&gt;invmod(n, P)&lt;/code&gt; の逆与える &lt;code&gt;n&lt;/code&gt; モジュロ &lt;code&gt;P&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="00f7d3383e6e96fe7eb1f9df5004df74f9efec98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;PIPE&lt;/em&gt; is passed to &lt;em&gt;stdin&lt;/em&gt; argument, the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt;&lt;code&gt;Process.stdin&lt;/code&gt;&lt;/a&gt; attribute will point to a &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;em&gt;PIPE&lt;/em&gt;が&lt;em&gt;stdin&lt;/em&gt;引数に渡される場合、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdin&quot;&gt; &lt;code&gt;Process.stdin&lt;/code&gt; &lt;/a&gt;属性は&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;インスタンスを指します。</target>
        </trans-unit>
        <trans-unit id="38a0b86cb262bdd72cf16c86faa970fbee2eca97" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;PIPE&lt;/em&gt; is passed to &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; arguments, the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt;&lt;code&gt;Process.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt;&lt;code&gt;Process.stderr&lt;/code&gt;&lt;/a&gt; attributes will point to &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;em&gt;PIPE&lt;/em&gt;が&lt;em&gt;stdout&lt;/em&gt;または&lt;em&gt;stderr&lt;/em&gt;引数に渡される場合、&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stdout&quot;&gt; &lt;code&gt;Process.stdout&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.stderr&quot;&gt; &lt;code&gt;Process.stderr&lt;/code&gt; &lt;/a&gt;属性は&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;インスタンスを指します。</target>
        </trans-unit>
        <trans-unit id="a3d56b8626e52a3b745f55fc2379e816f304457a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are of different lengths, or if an error occurs, a timing attack could theoretically reveal information about the types and lengths of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;&amp;mdash;but not their values.</source>
          <target state="translated">場合及び&lt;em&gt;Bは、&lt;/em&gt;異なる長さのものであるか、またはエラーが発生した場合、タイミング攻撃は理論的のタイプおよび長さに関する情報を明らかにする可能性があり、および&lt;em&gt;bは&lt;/em&gt;その値がないブタ。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc5c1185931e9b5fe08eb862e8faf706f6f24540" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; is an int, it is used directly.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;がintの場合は、直接使用されます。</target>
        </trans-unit>
        <trans-unit id="08098ecc02f15e5298805376eb97d21770273b65" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the current system time is used. If randomness sources are provided by the operating system, they are used instead of the system time (see the &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; function for details on availability).</source>
          <target state="translated">場合は省略していないか、され &lt;code&gt;None&lt;/code&gt; 、現在のシステム時刻が使用されています。ランダムソースがオペレーティングシステムによって提供される場合、それらはシステム時間の代わりに使用されます（可用性の詳細については、&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;関数を参照してください）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ddd2d43954115612f47582f7f40c2da1ce1c45e3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the node, &lt;em&gt;v2&lt;/em&gt; is the reference, and &lt;em&gt;v3&lt;/em&gt; should be set to 0.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt; 、次いで&lt;em&gt;V1は&lt;/em&gt;ノードであり、&lt;em&gt;V2は&lt;/em&gt;参考であり、&lt;em&gt;V3は&lt;/em&gt; 0に設定されるべきです。</target>
        </trans-unit>
        <trans-unit id="8daf1756c4685b74aa3a32fb2dad0e27162099fa" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the server type, &lt;em&gt;v2&lt;/em&gt; is the port identifier, and &lt;em&gt;v3&lt;/em&gt; should be 0.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt; 、その後、&lt;em&gt;v1は&lt;/em&gt;サーバタイプで、&lt;em&gt;v2は&lt;/em&gt;ポート識別子であり、&lt;em&gt;v3は&lt;/em&gt; 0でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5ee8f55dc5cb9c1fddf1d3f67dd30328327823b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;addr_type&lt;/em&gt; is &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt;, then &lt;em&gt;v1&lt;/em&gt; is the server type, &lt;em&gt;v2&lt;/em&gt; is the lower port number, and &lt;em&gt;v3&lt;/em&gt; is the upper port number.</source>
          <target state="translated">場合&lt;em&gt;ADDR_TYPEが&lt;/em&gt;ある &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt; 、次いで&lt;em&gt;V1は&lt;/em&gt;サーバ型であり、&lt;em&gt;V2は、&lt;/em&gt;下部ポート番号であり、&lt;em&gt;v3は&lt;/em&gt;、上側ポート番号です。</target>
        </trans-unit>
        <trans-unit id="e3c769a1fb511af595c339c328e4e17c4c3ff2b6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;aliased&lt;/em&gt; is true, the function will use aliases for various platforms that report system names which differ from their common names, for example SunOS will be reported as Solaris. The &lt;a href=&quot;#platform.system_alias&quot;&gt;&lt;code&gt;system_alias()&lt;/code&gt;&lt;/a&gt; function is used to implement this.</source>
          <target state="translated">場合は&lt;em&gt;エイリアスが&lt;/em&gt; trueの場合、この関数は、共通の名前と異なるレポートシステム名は、例えばSunOSのは、Solarisとして報告されることを様々なプラットフォーム用のエイリアスを使用します。&lt;a href=&quot;#platform.system_alias&quot;&gt; &lt;code&gt;system_alias()&lt;/code&gt; &lt;/a&gt;関数は、これを実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="35db95e9a28719ea3058976c910d71b26ef3098a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;all_frames&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, all frames of the traceback are checked. If &lt;em&gt;all_frames&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, only the most recent frame is checked.</source>
          <target state="translated">&lt;em&gt;all_frames&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、トレースバックのすべてのフレームがチェックされます。&lt;em&gt;all_frames&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、最新のフレームのみがチェックされます。</target>
        </trans-unit>
        <trans-unit id="3e12368612ae3dc2365f369a9caafd4788de7974" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allowZip64&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) zipfile will create ZIP files that use the ZIP64 extensions when the zipfile is larger than 4 GiB. If it is &lt;code&gt;false&lt;/code&gt;&lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; will raise an exception when the ZIP file would require ZIP64 extensions.</source>
          <target state="translated">場合&lt;em&gt;allowZip64が&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）ZIPファイルは、ZIPファイルが4ジブよりも大きい場合にZIP64拡張を使用ZIPファイルを作成します。 &lt;code&gt;false&lt;/code&gt; の場合、&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;は、ZIPファイルがZIP64拡張を必要とする場合に例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="eb1877b149e4a559e04aa18e7cbd9b76903ad1d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allow_nan&lt;/em&gt; is false (default: &lt;code&gt;True&lt;/code&gt;), then it will be a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to serialize out of range &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values (&lt;code&gt;nan&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;) in strict compliance of the JSON specification. If &lt;em&gt;allow_nan&lt;/em&gt; is true, their JavaScript equivalents (&lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;) will be used.</source>
          <target state="translated">場合&lt;em&gt;allow_nanが&lt;/em&gt; false（デフォルト：ある &lt;code&gt;True&lt;/code&gt; ）、次のようになります&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;範囲の外シリアライズする&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;値（ &lt;code&gt;nan&lt;/code&gt; 、 &lt;code&gt;inf&lt;/code&gt; 、 &lt;code&gt;-inf&lt;/code&gt; JSON仕様を厳密に遵守して）。場合&lt;em&gt;allow_nanが&lt;/em&gt;真である、彼らのJavaScriptの同等物（ &lt;code&gt;NaN&lt;/code&gt; で、 &lt;code&gt;Infinity&lt;/code&gt; 、 &lt;code&gt;-Infinity&lt;/code&gt; は）使用されます。</target>
        </trans-unit>
        <trans-unit id="365b8c9a025c7c15e2aa49096f5708db96335579" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;allow_nan&lt;/em&gt; is true (the default), then &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, and &lt;code&gt;-Infinity&lt;/code&gt; will be encoded as such. This behavior is not JSON specification compliant, but is consistent with most JavaScript based encoders and decoders. Otherwise, it will be a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to encode such floats.</source>
          <target state="translated">場合&lt;em&gt;allow_nanが&lt;/em&gt; true（デフォルト）であり、その後 &lt;code&gt;NaN&lt;/code&gt; 、 &lt;code&gt;Infinity&lt;/code&gt; 、および &lt;code&gt;-Infinity&lt;/code&gt; は、このようなとしてエンコードされます。この動作はJSON仕様に準拠していませんが、ほとんどのJavaScriptベースのエンコーダーおよびデコーダーと一致しています。それ以外の場合、そのような浮動小数点をエンコードするのは&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="c5a8dca769532cade2fe55bfaac93ebef45b3887" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;altinstall&lt;/em&gt; is set, then &lt;code&gt;pipX&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be installed.</source>
          <target state="translated">場合&lt;em&gt;altinstallが&lt;/em&gt;設定され、その後、 &lt;code&gt;pipX&lt;/code&gt; はなり&lt;em&gt;ません&lt;/em&gt;インストールされています。</target>
        </trans-unit>
        <trans-unit id="50026840e798123dd4e7c9c3c6b090021e307025" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is false then the awaits must be sequential. There can be extra calls before or after the specified awaits.</source>
          <target state="translated">&lt;em&gt;any_order&lt;/em&gt;がfalseの場合、&lt;em&gt;待機&lt;/em&gt;は順次でなければなりません。指定された待機の前または後に追加の呼び出しがある場合があります。</target>
        </trans-unit>
        <trans-unit id="83074f9b97aea52bc40947133bf7966023c0dfb4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is false then the calls must be sequential. There can be extra calls before or after the specified calls.</source>
          <target state="translated">場合&lt;em&gt;any_orderが&lt;/em&gt; falseで、その後の呼び出しが連続している必要があります。指定された呼び出しの前または後に余分な呼び出しがある場合があります。</target>
        </trans-unit>
        <trans-unit id="00f36f468d7fc72d5086c39c28c3ab3335e0b213" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is true then the awaits can be in any order, but they must all appear in &lt;a href=&quot;#unittest.mock.AsyncMock.await_args_list&quot;&gt;&lt;code&gt;await_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;any_order&lt;/em&gt;がtrueの場合、&lt;em&gt;待機&lt;/em&gt;は任意の順序にすることができますが、&lt;a href=&quot;#unittest.mock.AsyncMock.await_args_list&quot;&gt; &lt;code&gt;await_args_list&lt;/code&gt; &lt;/a&gt;はすべてawait_args_listに含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="77ac2e901cc5aeaa722f2e4e6b975f2f2972f688" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;any_order&lt;/em&gt; is true then the calls can be in any order, but they must all appear in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;any_orderが&lt;/em&gt;真である、その後の呼び出しは、任意の順序で指定できますが、それらはすべてに表示されなければなりません&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b896efed823ebecf1bef68285349fa5d05fe09f8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;arcname&lt;/em&gt; is specified, it is used as the name within the archive. If &lt;em&gt;arcname&lt;/em&gt; is not specified, the name will be the same as &lt;em&gt;filename&lt;/em&gt;, but with any drive letter and leading path separators removed.</source>
          <target state="translated">場合&lt;em&gt;arcnameが&lt;/em&gt;指定され、それがアーカイブ内の名前として使用されます。&lt;em&gt;arcname&lt;/em&gt;が指定されていない場合、名前は&lt;em&gt;filename&lt;/em&gt;と同じになり&lt;em&gt;ます&lt;/em&gt;が、ドライブ文字と先行パスの区切り文字は削除されます。</target>
        </trans-unit>
        <trans-unit id="bb3e312374b1b5d8dccea78b576f639dc980f7ee" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;atTime&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a &lt;code&gt;datetime.time&lt;/code&gt; instance which specifies the time of day when rollover occurs, for the cases where rollover is set to happen &amp;ldquo;at midnight&amp;rdquo; or &amp;ldquo;on a particular weekday&amp;rdquo;. Note that in these cases, the &lt;em&gt;atTime&lt;/em&gt; value is effectively used to compute the &lt;em&gt;initial&lt;/em&gt; rollover, and subsequent rollovers would be calculated via the normal interval calculation.</source>
          <target state="translated">場合&lt;em&gt;atTimeが&lt;/em&gt;ないではありません &lt;code&gt;None&lt;/code&gt; 、それがなければなりません &lt;code&gt;datetime.time&lt;/code&gt; ロールオーバーが「深夜」が起こるか「特定の平日」に設定されている場合のために、ロールオーバーが発生した時刻を指定するインスタンス。これらの場合、&lt;em&gt;atTime&lt;/em&gt;値は&lt;em&gt;初期&lt;/em&gt;ロールオーバーの計算に効果的に使用され、その後のロールオーバーは通常の間隔計算によって計算されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="64ed490d101bfcd7c524cd7f6470fd6dd92855bd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;authkey&lt;/em&gt; is given and not None, it should be a byte string and will be used as the secret key for an HMAC-based authentication challenge. No authentication is done if &lt;em&gt;authkey&lt;/em&gt; is None. &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised if authentication fails. See &lt;a href=&quot;#multiprocessing-auth-keys&quot;&gt;Authentication keys&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;てAuthKeyは&lt;/em&gt;どれも与えられないとされていない、それはバイト文字列であるべきで、HMACベースの認証チャレンジのための秘密鍵として使用されます。&lt;em&gt;authkey&lt;/em&gt;がNoneの場合、認証は行われません。&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;が失敗した場合、AuthenticationErrorが発生します。&lt;a href=&quot;#multiprocessing-auth-keys&quot;&gt;認証キーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="59231b8d6544c6fca57984e1be4fe078812fe3b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;aw&lt;/em&gt; is a coroutine it is automatically scheduled as a Task.</source>
          <target state="translated">場合&lt;em&gt;AWは&lt;/em&gt;コルーチンでは、自動的にタスクとして予定されています。</target>
        </trans-unit>
        <trans-unit id="846999a5b8612ebabe5165c0323a01a132f354c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;backupCount&lt;/em&gt; is nonzero, at most &lt;em&gt;backupCount&lt;/em&gt; files will be kept, and if more would be created when rollover occurs, the oldest one is deleted. The deletion logic uses the interval to determine which files to delete, so changing the interval may leave old files lying around.</source>
          <target state="translated">&lt;em&gt;backupCount&lt;/em&gt;がゼロ以外の場合、最大で&lt;em&gt;backupCount&lt;/em&gt;ファイルが保持され、ロールオーバーが発生したときにさらにファイルが作成される場合は、最も&lt;em&gt;古い&lt;/em&gt;ファイルが削除されます。削除ロジックは間隔を使用して削除するファイルを決定するため、間隔を変更すると古いファイルが残ったままになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="254adf80a9b6b968549efbd28f181bb6475f5a82" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;blocking&lt;/em&gt; is false executes the scheduled events due to expire soonest (if any) and then return the deadline of the next scheduled call in the scheduler (if any).</source>
          <target state="translated">&lt;em&gt;ブロッキング&lt;/em&gt;がfalseの場合、期限が最も近いためにスケジュールされたイベントを実行し（存在する場合）、次にスケジューラでスケジュールされている次の呼び出しの期限（存在する場合）を返します。</target>
        </trans-unit>
        <trans-unit id="a72b7baa5a4df5ed7a19b9faf38f50add7609350" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;body&lt;/em&gt; is specified, the specified data is sent after the headers are finished. It may be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, an open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or an iterable of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;body&lt;/em&gt; is a string, it is encoded as ISO-8859-1, the default for HTTP. If it is a bytes-like object, the bytes are sent as is. If it is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, the contents of the file is sent; this file object should support at least the &lt;code&gt;read()&lt;/code&gt; method. If the file object is an instance of &lt;a href=&quot;io#io.TextIOBase&quot;&gt;&lt;code&gt;io.TextIOBase&lt;/code&gt;&lt;/a&gt;, the data returned by the &lt;code&gt;read()&lt;/code&gt; method will be encoded as ISO-8859-1, otherwise the data returned by &lt;code&gt;read()&lt;/code&gt; is sent as is. If &lt;em&gt;body&lt;/em&gt; is an iterable, the elements of the iterable are sent as is until the iterable is exhausted.</source>
          <target state="translated">場合は&lt;em&gt;本体が&lt;/em&gt;指定されているヘッダが終了した後、指定されたデータが送信されます。それがあってもよい&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、オープン&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、または反復可能な&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。場合は&lt;em&gt;体が&lt;/em&gt;文字列である、それがISO-8859-1、HTTPのデフォルトとしてエンコードされます。バイトのようなオブジェクトの場合、バイトはそのまま送信されます。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;場合は、ファイルの内容が送信されます。このファイルオブジェクトは、少なくとも &lt;code&gt;read()&lt;/code&gt; メソッドをサポートする必要があります。ファイルオブジェクトが&lt;a href=&quot;io#io.TextIOBase&quot;&gt; &lt;code&gt;io.TextIOBase&lt;/code&gt; の&lt;/a&gt;インスタンスである場合、 &lt;code&gt;read()&lt;/code&gt; メソッドによって返されるデータはISO-8859-1としてエンコードされます。それ以外の場合、 &lt;code&gt;read()&lt;/code&gt; によって返されるデータそのまま送信されます。&lt;em&gt;body&lt;/em&gt;が反復可能である場合、反復可能の要素は、反復可能がなくなるまでそのまま送信されます。</target>
        </trans-unit>
        <trans-unit id="039a71d8df3fedc4f6546669f8067430aeab29a9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;body&lt;/em&gt; is specified, the specified data is sent after the headers are finished. It may be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, an open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or an iterable of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;body&lt;/em&gt; is a string, it is encoded as ISO-8859-1, the default for HTTP. If it is a bytes-like object, the bytes are sent as is. If it is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, the contents of the file is sent; this file object should support at least the &lt;code&gt;read()&lt;/code&gt; method. If the file object is an instance of &lt;a href=&quot;io#io.TextIOBase&quot;&gt;&lt;code&gt;io.TextIOBase&lt;/code&gt;&lt;/a&gt;, the data returned by the &lt;code&gt;read()&lt;/code&gt; method will be encoded as ISO-8859-1, otherwise the data returned by &lt;code&gt;read()&lt;/code&gt; is sent as is. If &lt;em&gt;body&lt;/em&gt; is an iterable, the elements of the iterable are sent as is until the iterable is exhausted.</source>
          <target state="translated">If &lt;em&gt;body&lt;/em&gt; is specified, the specified data is sent after the headers are finished. It may be a &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;, a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, an open &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, or an iterable of &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;. If &lt;em&gt;body&lt;/em&gt; is a string, it is encoded as ISO-8859-1, the default for HTTP. If it is a bytes-like object, the bytes are sent as is. If it is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, the contents of the file is sent; this file object should support at least the &lt;code&gt;read()&lt;/code&gt; method. If the file object is an instance of &lt;a href=&quot;io#io.TextIOBase&quot;&gt; &lt;code&gt;io.TextIOBase&lt;/code&gt; &lt;/a&gt;, the data returned by the &lt;code&gt;read()&lt;/code&gt; method will be encoded as ISO-8859-1, otherwise the data returned by &lt;code&gt;read()&lt;/code&gt; is sent as is. If &lt;em&gt;body&lt;/em&gt; is an iterable, the elements of the iterable are sent as is until the iterable is exhausted.</target>
        </trans-unit>
        <trans-unit id="a95a187d480705fc824e774d84d0311d36773db9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer_callback&lt;/em&gt; is None (the default), buffer views are serialized into &lt;em&gt;file&lt;/em&gt; as part of the pickle stream.</source>
          <target state="translated">場合&lt;em&gt;buffer_callbackは&lt;/em&gt;なし（デフォルト）ではありません、バッファビューはにシリアライズされ&lt;em&gt;たファイル&lt;/em&gt;ピクルスストリームの一部として。</target>
        </trans-unit>
        <trans-unit id="2802d994edfbf276788a825388162db7061822a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer_callback&lt;/em&gt; is not None, then it can be called any number of times with a buffer view. If the callback returns a false value (such as None), the given buffer is &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band&lt;/a&gt;; otherwise the buffer is serialized in-band, i.e. inside the pickle stream.</source>
          <target state="translated">&lt;em&gt;buffer_callback&lt;/em&gt;がNoneでない場合、バッファビューで何度でも呼び出すことができます。コールバックが偽の値（Noneなど）を返す場合、指定されたバッファーは&lt;a href=&quot;#pickle-oob&quot;&gt;帯域外&lt;/a&gt;です。それ以外の場合、バッファーは帯域内で、つまりピクルストリーム内でシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="65eadafe837a031d16efa4765ff11c2ea5982995" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffers&lt;/em&gt; is None (the default), then all data necessary for deserialization must be contained in the pickle stream. This means that the &lt;em&gt;buffer_callback&lt;/em&gt; argument was None when a &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; was instantiated (or when &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; was called).</source>
          <target state="translated">場合&lt;em&gt;、バッファは&lt;/em&gt;なし（デフォルト）ではありません、そして、直列化復元するために必要なすべてのデータは、漬物ストリームに含まれている必要があります。これは、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;がインスタンス化されたとき（または&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;が呼び出されたとき）の&lt;em&gt;buffer_callback&lt;/em&gt;引数がNoneだったことを意味します。</target>
        </trans-unit>
        <trans-unit id="3072f53b48e04deeb5f6a92a951e4b7b30fd9b43" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffers&lt;/em&gt; is not None, it should be an iterable of buffer-enabled objects that is consumed each time the pickle stream references an &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band&lt;/a&gt; buffer view. Such buffers have been given in order to the &lt;em&gt;buffer_callback&lt;/em&gt; of a Pickler object.</source>
          <target state="translated">&lt;em&gt;buffers&lt;/em&gt;がNoneでない場合は、ピクルストリームが&lt;a href=&quot;#pickle-oob&quot;&gt;帯域外&lt;/a&gt;バッファビューを参照するたびに消費される、バッファ対応オブジェクトの反復可能でなければなりません。このようなバッファは、Picklerオブジェクトの&lt;em&gt;buffer_callbackに割り当て&lt;/em&gt;られています。</target>
        </trans-unit>
        <trans-unit id="99e4b8756b05030f0547669e2cd91b89c6443032" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;c&lt;/em&gt; is an instance of &lt;em&gt;C&lt;/em&gt;, &lt;code&gt;c.x&lt;/code&gt; will invoke the getter, &lt;code&gt;c.x = value&lt;/code&gt; will invoke the setter and &lt;code&gt;del c.x&lt;/code&gt; the deleter.</source>
          <target state="translated">場合&lt;em&gt;cは&lt;/em&gt;のインスタンスである&lt;em&gt;C&lt;/em&gt;、 &lt;code&gt;c.x&lt;/code&gt; ゲッターを起動する、 &lt;code&gt;c.x = value&lt;/code&gt; 設定部を起動します &lt;code&gt;del c.x&lt;/code&gt; デリータ。</target>
        </trans-unit>
        <trans-unit id="c89346ab698759df4344532dd364a8daa21e4b53" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;callback&lt;/em&gt; is given and is not &lt;code&gt;None&lt;/code&gt;, it will be called after each trial with two arguments: &lt;code&gt;callback(number, time_taken)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;callback&lt;/em&gt;が指定されていて &lt;code&gt;None&lt;/code&gt; でない場合は、各試行の後に &lt;code&gt;callback(number, time_taken)&lt;/code&gt; という2つの引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="209e198351f5a2406fae647dd06611db91524849" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;callback&lt;/em&gt; is specified then it should be a callable which accepts a single argument. When the result becomes ready &lt;em&gt;callback&lt;/em&gt; is applied to it, that is unless the call failed, in which case the &lt;em&gt;error_callback&lt;/em&gt; is applied instead.</source>
          <target state="translated">&lt;em&gt;コールバック&lt;/em&gt;が指定されている場合、単一の引数を受け入れる呼び出し可能オブジェクトである必要があります。結果が準備完了になると、&lt;em&gt;コールバック&lt;/em&gt;が適用されます。つまり、呼び出しが失敗しない限り、代わりに&lt;em&gt;error_callback&lt;/em&gt;が適用されます。</target>
        </trans-unit>
        <trans-unit id="926477b21383aa762abee37a66c366b4fc577527" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cancel_futures&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, this method will cancel all pending futures that the executor has not started running. Any futures that are completed or running won&amp;rsquo;t be cancelled, regardless of the value of &lt;em&gt;cancel_futures&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;cancel_futures&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; , this method will cancel all pending futures that the executor has not started running. Any futures that are completed or running won&amp;rsquo;t be cancelled, regardless of the value of &lt;em&gt;cancel_futures&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="3329be05687a53fb5199343c2abf71b394411819" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the redirection of warnings to the logging system will stop, and warnings will be redirected to their original destinations (i.e. those in effect before &lt;code&gt;captureWarnings(True)&lt;/code&gt; was called).</source>
          <target state="translated">&lt;em&gt;capture&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、警告のロギングシステムへのリダイレクトは停止し、警告は元の宛先（つまり、 &lt;code&gt;captureWarnings(True)&lt;/code&gt; が呼び出される前に有効であった宛先）にリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="73194c77e6fb03e0903f0813816661b5e4e396b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, warnings issued by the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module will be redirected to the logging system. Specifically, a warning will be formatted using &lt;a href=&quot;warnings#warnings.formatwarning&quot;&gt;&lt;code&gt;warnings.formatwarning()&lt;/code&gt;&lt;/a&gt; and the resulting string logged to a logger named &lt;code&gt;'py.warnings'&lt;/code&gt; with a severity of &lt;code&gt;WARNING&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;capture&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュールによって発行された警告はロギングシステムにリダイレクトされます。具体的には、警告は、&lt;a href=&quot;warnings#warnings.formatwarning&quot;&gt; &lt;code&gt;warnings.formatwarning()&lt;/code&gt; &lt;/a&gt;を使用してフォーマットされ、結果の文字列は重大度が &lt;code&gt;WARNING&lt;/code&gt; の &lt;code&gt;'py.warnings'&lt;/code&gt; という名前のロガーに記録されます。</target>
        </trans-unit>
        <trans-unit id="8f69f734be44d12f98816d1aeb3d6e28ef2ec1b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;capture_output&lt;/em&gt; is true, stdout and stderr will be captured. When used, the internal &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; object is automatically created with &lt;code&gt;stdout=PIPE&lt;/code&gt; and &lt;code&gt;stderr=PIPE&lt;/code&gt;. The &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; arguments may not be supplied at the same time as &lt;em&gt;capture_output&lt;/em&gt;. If you wish to capture and combine both streams into one, use &lt;code&gt;stdout=PIPE&lt;/code&gt; and &lt;code&gt;stderr=STDOUT&lt;/code&gt; instead of &lt;em&gt;capture_output&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;capture_outputが&lt;/em&gt; trueで、stdoutとstderrをキャプチャされます。使用すると、内部&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;オブジェクトは &lt;code&gt;stdout=PIPE&lt;/code&gt; および &lt;code&gt;stderr=PIPE&lt;/code&gt; で自動的に作成されます。&lt;em&gt;標準出力&lt;/em&gt;と&lt;em&gt;標準エラー出力&lt;/em&gt;引数はと同時に供給されない場合があり&lt;em&gt;capture_output&lt;/em&gt;。両方のストリームをキャプチャして1つに結合する &lt;code&gt;stderr=STDOUT&lt;/code&gt; は、&lt;em&gt;capture_outputの&lt;/em&gt;代わりに &lt;code&gt;stdout=PIPE&lt;/code&gt; およびstderr = STDOUTを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d8516461260217396c41f9b221cbdb1d7bcd25" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;chain&lt;/em&gt; is not &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;__cause__&lt;/code&gt; and &lt;code&gt;__context__&lt;/code&gt; will not be formatted.</source>
          <target state="translated">&lt;em&gt;chain&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; でない場合、 &lt;code&gt;__cause__&lt;/code&gt; および &lt;code&gt;__context__&lt;/code&gt; はフォーマットされません。</target>
        </trans-unit>
        <trans-unit id="ac90c4494a891aa8301770b24d249be59f8193e9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;charset&lt;/em&gt; is provided (which is valid only for &lt;code&gt;str&lt;/code&gt;), encode the string to bytes using the specified character set. The default is &lt;code&gt;utf-8&lt;/code&gt;. If the specified &lt;em&gt;charset&lt;/em&gt; is a known alias for a standard MIME charset name, use the standard charset instead.</source>
          <target state="translated">&lt;em&gt;charset&lt;/em&gt;が指定されている場合（ &lt;code&gt;str&lt;/code&gt; に対してのみ有効）、指定された文字セットを使用して文字列をバイトにエンコードします。デフォルトは &lt;code&gt;utf-8&lt;/code&gt; です。指定された&lt;em&gt;文字セット&lt;/em&gt;が標準MIME文字セット名の既知のエイリアスである場合は、代わりに標準文字セットを使用してください。</target>
        </trans-unit>
        <trans-unit id="76ebf40876e36c44c7a4a24267a19bbe7cda5256" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check&lt;/em&gt; is true, and the process exits with a non-zero exit code, a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; exception will be raised. Attributes of that exception hold the arguments, the exit code, and stdout and stderr if they were captured.</source>
          <target state="translated">場合は&lt;em&gt;チェックが&lt;/em&gt; trueで、ゼロ以外の終了コードでプロセスが終了、&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; の&lt;/a&gt;例外が発生します。その例外の属性は、引数、終了コード、およびキャプチャされた場合のstdoutとstderrを保持します。</target>
        </trans-unit>
        <trans-unit id="3067072fcca20de243ec4fbab69b95d01e9a85a1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check_circular&lt;/em&gt; is false (default: &lt;code&gt;True&lt;/code&gt;), then the circular reference check for container types will be skipped and a circular reference will result in an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; (or worse).</source>
          <target state="translated">場合&lt;em&gt;check_circularは&lt;/em&gt;（デフォルト：falseです &lt;code&gt;True&lt;/code&gt; ）、その後、コンテナ型の循環参照チェックはスキップされ、循環参照はになります&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; を&lt;/a&gt;（またはより悪いです）。</target>
        </trans-unit>
        <trans-unit id="506ca45692a2977cbc33f7b00103c60271d4b598" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;check_circular&lt;/em&gt; is true (the default), then lists, dicts, and custom encoded objects will be checked for circular references during encoding to prevent an infinite recursion (which would cause an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;). Otherwise, no such check takes place.</source>
          <target state="translated">場合&lt;em&gt;check_circularが&lt;/em&gt; true（デフォルト）で、その後、リスト、dicts、およびカスタムエンコードされたオブジェクトは、（原因と思われる無限再帰を防ぐために、エンコード中に循環参照がチェックされます&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; をします&lt;/a&gt;）。それ以外の場合、そのようなチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="29652dd7c4e96908711afe7bf508091b6dae2068" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cid&lt;/em&gt; is specified, add a &lt;em&gt;Content-ID&lt;/em&gt; header with &lt;em&gt;cid&lt;/em&gt; as its value.</source>
          <target state="translated">&lt;em&gt;cid&lt;/em&gt;が指定されている場合は、&lt;em&gt;cid&lt;/em&gt;を値として持つ&lt;em&gt;Content-ID&lt;/em&gt;ヘッダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="575fcd59aad367b156b538716b2f3891b088a393" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;clear&lt;/em&gt; is true then the dictionary will be cleared before the new values are set.</source>
          <target state="translated">&lt;em&gt;clear&lt;/em&gt;がtrueの場合、新しい値が設定される前に辞書がクリアされます。</target>
        </trans-unit>
        <trans-unit id="c5d45120b80df607441d6ca3435c79fa5678f78f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;close_fds&lt;/em&gt; is true, all file descriptors except &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; will be closed before the child process is executed. Otherwise when &lt;em&gt;close_fds&lt;/em&gt; is false, file descriptors obey their inheritable flag as described in &lt;a href=&quot;os#fd-inheritance&quot;&gt;Inheritance of File Descriptors&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;close_fdsが&lt;/em&gt;真である、を除くすべてのファイルディスクリプタ &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;2&lt;/code&gt; は、子プロセスが実行される前に閉じられます。それ以外の場合、&lt;em&gt;close_fds&lt;/em&gt;がfalseの場合、ファイル記述子の&lt;a href=&quot;os#fd-inheritance&quot;&gt;継承で&lt;/a&gt;説明されているように、ファイル記述子は継承可能なフラグに従います。</target>
        </trans-unit>
        <trans-unit id="b29d4c51339df497f6673dde2e116862b6acefa2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;closefd&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a file descriptor rather than a filename was given, the underlying file descriptor will be kept open when the file is closed. If a filename is given &lt;em&gt;closefd&lt;/em&gt; must be &lt;code&gt;True&lt;/code&gt; (the default) otherwise an error will be raised.</source>
          <target state="translated">場合&lt;em&gt;closefdが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; とファイルディスクリプタではなく、ファイル名が与えられたファイルを閉じたときに、基礎となるファイルディスクリプタは開いたままになります。ファイル名を指定する場合、&lt;em&gt;closefd&lt;/em&gt;は &lt;code&gt;True&lt;/code&gt; （デフォルト）でなければなりません。そうでない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2066d93e3b1d41752de819f855fa84984bfaf655" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;column&lt;/em&gt; is specified, returns the bounding box of that cell. If the &lt;em&gt;item&lt;/em&gt; is not visible (i.e., if it is a descendant of a closed item or is scrolled offscreen), returns an empty string.</source>
          <target state="translated">&lt;em&gt;column&lt;/em&gt;が指定されている場合、そのセルの境界ボックスを返します。&lt;em&gt;アイテム&lt;/em&gt;が表示されていない場合（つまり、閉じたアイテムの子孫であるか、画面外にスクロールされている場合）、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="0213da647cc77316ae40d8c30349f6bd76c97885" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, it must be a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance describing the various SSL options. See &lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt;&lt;code&gt;HTTPSConnection&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;を指定する場合は、さまざまなSSLオプションを説明する&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;インスタンスである必要があります。詳細については、&lt;a href=&quot;http.client#http.client.HTTPSConnection&quot;&gt; &lt;code&gt;HTTPSConnection&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c7608590b57586e180487b61183db6caeedb6256" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), all character references (except the ones in &lt;code&gt;script&lt;/code&gt;/&lt;code&gt;style&lt;/code&gt; elements) are automatically converted to the corresponding Unicode characters.</source>
          <target state="translated">場合&lt;em&gt;convert_charrefsが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、（中のものを除くすべての文字参照 &lt;code&gt;script&lt;/code&gt; / &lt;code&gt;style&lt;/code&gt; 要素）に対応するUnicode文字に自動的に変換されます。</target>
        </trans-unit>
        <trans-unit id="6de5e65f0ef648a4c375cfaa4c0d9dd995bb3618" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that takes two arguments &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;, and will be used to copy &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; if &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt; cannot be used. If the source is a directory, &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; is called, passing it the &lt;code&gt;copy_function()&lt;/code&gt;. The default &lt;em&gt;copy_function&lt;/em&gt; is &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;. Using &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; as the &lt;em&gt;copy_function&lt;/em&gt; allows the move to succeed when it is not possible to also copy the metadata, at the expense of not copying any of the metadata.</source>
          <target state="translated">&lt;em&gt;copy_function&lt;/em&gt;を指定する場合は、2つの引数&lt;em&gt;src&lt;/em&gt;と&lt;em&gt;dst&lt;/em&gt;を取る呼び出し可能オブジェクトである必要があり、&lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; &lt;/a&gt;を使用できない場合に&lt;em&gt;src&lt;/em&gt;を&lt;em&gt;dest&lt;/em&gt;にコピーするために使用されます。ソースがディレクトリである場合は、&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;それを渡して、呼ばれている &lt;code&gt;copy_function()&lt;/code&gt; 。デフォルトの&lt;em&gt;copy_function&lt;/em&gt;は&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;です。&lt;em&gt;copy_ &lt;/em&gt;&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;を&lt;em&gt;copy_function&lt;/em&gt;として使用すると、メタデータもコピーできない場合にメタデータをコピーできない場合でも、移動を成功させることができます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf30482a1cb319bb4547b70cb32a2c3b05801150" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that takes two arguments &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;, and will be used to copy &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt; if &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt; cannot be used. If the source is a directory, &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; is called, passing it the &lt;code&gt;copy_function()&lt;/code&gt;. The default &lt;em&gt;copy_function&lt;/em&gt; is &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;. Using &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; as the &lt;em&gt;copy_function&lt;/em&gt; allows the move to succeed when it is not possible to also copy the metadata, at the expense of not copying any of the metadata.</source>
          <target state="translated">If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that takes two arguments &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;, and will be used to copy &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt; if &lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; &lt;/a&gt; cannot be used. If the source is a directory, &lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt; is called, passing it the &lt;code&gt;copy_function()&lt;/code&gt; . The default &lt;em&gt;copy_function&lt;/em&gt; is &lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;. Using &lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; as the &lt;em&gt;copy_function&lt;/em&gt; allows the move to succeed when it is not possible to also copy the metadata, at the expense of not copying any of the metadata.</target>
        </trans-unit>
        <trans-unit id="6bf033ef6d8a1bf2457829466585d1c77570d91e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_function&lt;/em&gt; is given, it must be a callable that will be used to copy each file. It will be called with the source path and the destination path as arguments. By default, &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; is used, but any function that supports the same signature (like &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt;) can be used.</source>
          <target state="translated">&lt;em&gt;copy_function&lt;/em&gt;を指定する場合は、各ファイルのコピーに使用される呼び出し可能である必要があります。ソースパスと宛先パスを引数として呼び出されます。デフォルトでは&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;が使用されますが、同じ署名をサポートする任意の関数（&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; など&lt;/a&gt;）を使用できます。</target>
        </trans-unit>
        <trans-unit id="a0549453cb5d46211e07003c2a7307ea21880714" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;create&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; and the &lt;em&gt;dirname&lt;/em&gt; path exists, it will be treated as an existing maildir without attempting to verify its directory layout.</source>
          <target state="translated">場合は&lt;em&gt;作成&lt;/em&gt;され &lt;code&gt;True&lt;/code&gt; と&lt;em&gt;DIRNAMEの&lt;/em&gt;パスが存在すると、そのディレクトリレイアウトを検証しようとすることなく、既存のmaildirとして扱われます。</target>
        </trans-unit>
        <trans-unit id="8898e2cfb55415011220e6c35dcb72cd30c93364" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cte&lt;/em&gt; is set, encode the payload using the specified content transfer encoding, and set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to that value. Possible values for &lt;em&gt;cte&lt;/em&gt; are &lt;code&gt;quoted-printable&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;7bit&lt;/code&gt;, &lt;code&gt;8bit&lt;/code&gt;, and &lt;code&gt;binary&lt;/code&gt;. If the input cannot be encoded in the specified encoding (for example, specifying a &lt;em&gt;cte&lt;/em&gt; of &lt;code&gt;7bit&lt;/code&gt; for an input that contains non-ASCII values), raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;cte&lt;/em&gt;が設定されている場合は、指定されたコンテンツ転送エンコーディングを使用してペイロードをエンコードし、&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーをその値に設定します。以下のための可能な値&lt;em&gt;CTEが&lt;/em&gt;ある &lt;code&gt;quoted-printable&lt;/code&gt; の、 &lt;code&gt;base64&lt;/code&gt; で、 &lt;code&gt;7bit&lt;/code&gt; 、 &lt;code&gt;8bit&lt;/code&gt; 、および &lt;code&gt;binary&lt;/code&gt; 。入力が指定されたエンコーディング（例えば、特定で符号化することができない場合に&lt;em&gt;CTE&lt;/em&gt;の &lt;code&gt;7bit&lt;/code&gt; ASCII以外の値が含まれている入力用）を上げる&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ac96e90d352b33de98fd5ace363c0516fa39090" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cumulative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, cumulate size and count of memory blocks of all frames of the traceback of a trace, not only the most recent frame. The cumulative mode can only be used with &lt;em&gt;key_type&lt;/em&gt; equals to &lt;code&gt;'filename'&lt;/code&gt; and &lt;code&gt;'lineno'&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;の累積&lt;/em&gt;である &lt;code&gt;True&lt;/code&gt; 、CUMULATEサイズは、トレースのトレースバックだけでなく、最新のフレームのすべてのフレームのメモリ・ブロックのカウント。累積モードは、&lt;em&gt;key_type&lt;/em&gt;が &lt;code&gt;'filename'&lt;/code&gt; および &lt;code&gt;'lineno'&lt;/code&gt; と等しい場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="eacfbd2cb2014105749c4358d998bb8bd55cbab6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;current_offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it refers to an instruction offset in the disassembled code. Setting this means &lt;a href=&quot;#dis.Bytecode.dis&quot;&gt;&lt;code&gt;dis()&lt;/code&gt;&lt;/a&gt; will display a &amp;ldquo;current instruction&amp;rdquo; marker against the specified opcode.</source>
          <target state="translated">&lt;em&gt;current_offset&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、逆アセンブルされたコードの命令オフセットを参照します。これを設定すると、&lt;a href=&quot;#dis.Bytecode.dis&quot;&gt; &lt;code&gt;dis()&lt;/code&gt; &lt;/a&gt;は指定されたオペコードに対して「現在の命令」マーカーを表示します。</target>
        </trans-unit>
        <trans-unit id="b5d4c33f63f2f37671afb0edc3a13524b04cb537" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cwd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the function changes the working directory to &lt;em&gt;cwd&lt;/em&gt; before executing the child. &lt;em&gt;cwd&lt;/em&gt; can be a string, bytes or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object. In particular, the function looks for &lt;em&gt;executable&lt;/em&gt; (or for the first item in &lt;em&gt;args&lt;/em&gt;) relative to &lt;em&gt;cwd&lt;/em&gt; if the executable path is a relative path.</source>
          <target state="translated">&lt;em&gt;cwd&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、関数は子を実行する前に作業ディレクトリを&lt;em&gt;cwd&lt;/em&gt;に変更します。&lt;em&gt;cwd&lt;/em&gt;は、文字列、バイト、または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのような&lt;/a&gt;オブジェクトです。特に、実行可能パスが相対パスの場合、&lt;em&gt;関数はcwd&lt;/em&gt;に対して&lt;em&gt;実行可能ファイル&lt;/em&gt;（または&lt;em&gt;args&lt;/em&gt;の最初の項目）を&lt;em&gt;探し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="92a7ab7c208d86687fece009c75e098dbaff2e60" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cwd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the function changes the working directory to &lt;em&gt;cwd&lt;/em&gt; before executing the child. &lt;em&gt;cwd&lt;/em&gt; can be a string, bytes or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object. In particular, the function looks for &lt;em&gt;executable&lt;/em&gt; (or for the first item in &lt;em&gt;args&lt;/em&gt;) relative to &lt;em&gt;cwd&lt;/em&gt; if the executable path is a relative path.</source>
          <target state="translated">If &lt;em&gt;cwd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; , the function changes the working directory to &lt;em&gt;cwd&lt;/em&gt; before executing the child. &lt;em&gt;cwd&lt;/em&gt; can be a string, bytes or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object. In particular, the function looks for &lt;em&gt;executable&lt;/em&gt; (or for the first item in &lt;em&gt;args&lt;/em&gt;) relative to &lt;em&gt;cwd&lt;/em&gt; if the executable path is a relative path.</target>
        </trans-unit>
        <trans-unit id="abe309a388dca84dd7a05e235de450c0f31358b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;d&lt;/em&gt; is aware, &lt;em&gt;d&lt;/em&gt; is normalized to UTC time, by subtracting &lt;code&gt;d.utcoffset()&lt;/code&gt;, and a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; for the normalized time is returned. &lt;code&gt;tm_isdst&lt;/code&gt; is forced to 0. Note that an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; may be raised if &lt;em&gt;d&lt;/em&gt;.year was &lt;code&gt;MINYEAR&lt;/code&gt; or &lt;code&gt;MAXYEAR&lt;/code&gt; and UTC adjustment spills over a year boundary.</source>
          <target state="translated">場合&lt;em&gt;dは&lt;/em&gt;認識している、&lt;em&gt;Dは&lt;/em&gt;減算することによって、UTC時間に正規化され &lt;code&gt;d.utcoffset()&lt;/code&gt; 、及び&lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt;正規化された時間が返されます。 &lt;code&gt;tm_isdst&lt;/code&gt; がでていること0注意を余儀なくされて&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;場合に発生することができる&lt;em&gt;D&lt;/em&gt;だった.year &lt;code&gt;MINYEAR&lt;/code&gt; または &lt;code&gt;MAXYEAR&lt;/code&gt; とUTC調整が年の境界の上に流出します。</target>
        </trans-unit>
        <trans-unit id="412f0af923015004c94c91a0798c5634f520a8c3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が空の場合、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1bd76e6354043e84cab72b15b26a288207008710" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is the concatenation of multiple compressed streams, decompress all of the streams.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が複数の圧縮ストリームを連結したものである場合は、すべてのストリームを解凍します。</target>
        </trans-unit>
        <trans-unit id="9dbf42aa701352d3426aa0b9e6d8ce207f8e0f9c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is the concatenation of multiple distinct compressed streams, decompress all of these streams, and return the concatenation of the results.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;が複数の異なる圧縮ストリームを連結したものである場合、これらのストリームをすべて解凍し、結果の連結を返します。</target>
        </trans-unit>
        <trans-unit id="3efb743eb6b84a13ce1c37d5a413fec15e776cc1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ddir&lt;/em&gt; is given, it is prepended to the path to each file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">場合&lt;em&gt;DDIRが&lt;/em&gt;与えられ、それは、コンパイル時間トレースバックでの使用のためにコンパイルされている各ファイルへのパスの前に付加され、また、それがソースの場合にトレースバックし、他のメッセージで使用されるバイトコードファイルにコンパイルされますバイトコードファイルの実行時にファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="0eb4f5a84f724ffad64d00f6c44b99d63a5274b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ddir&lt;/em&gt; is given, it is prepended to the path to the file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">場合&lt;em&gt;DDIRが&lt;/em&gt;与えられ、コンパイル時間トレースバックでの使用のためにコンパイルされているファイルへのパスの前に付加され、また、それは場合にトレースバックし、他のメッセージで使用されるバイトコードファイル、ソースにしてコンパイルされていますバイトコードファイルの実行時にファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="d4c4d1acb8ff67a497d8ef936eb0e07f0337e4c2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;debug&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the event loop will be run in debug mode.</source>
          <target state="translated">場合は&lt;em&gt;、デバッグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、イベントループは、デバッグモードで実行されます。</target>
        </trans-unit>
        <trans-unit id="475c14c8e2569012dc880a97fd4fa51777aa405a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;default_pip&lt;/em&gt; is set, then &lt;code&gt;pip&lt;/code&gt; will be installed in addition to the two regular scripts.</source>
          <target state="translated">&lt;em&gt;default_pip&lt;/em&gt;が設定されている場合、2つの通常のスクリプトに加えて &lt;code&gt;pip&lt;/code&gt; がインストールされます。</target>
        </trans-unit>
        <trans-unit id="1c8c126e6c7b0f2e8bd2913dccf7f6d01c5144a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;delay&lt;/em&gt; is true, then file opening is deferred until the first call to &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;遅延が&lt;/em&gt;真である場合、ファイルオープンのために最初の呼び出しまで延期される&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0056a36933eb229c50c4c08ad60c4c6100860930" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;delta&lt;/em&gt; is supplied instead of &lt;em&gt;places&lt;/em&gt; then the difference between &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; must be less or equal to (or greater than) &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;デルタが&lt;/em&gt;の代わりに供給される&lt;em&gt;場所&lt;/em&gt;次いで差&lt;em&gt;第一&lt;/em&gt;及び&lt;em&gt;第二は、&lt;/em&gt;より少ない又は等しい（又はより大きい）でなければならない&lt;em&gt;デルタ&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c3e614afb3a12f1f008bd5a8a6fdbe9c09e6230" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dereference&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, add symbolic and hard links to the archive. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, add the content of the target files to the archive. This has no effect on systems that do not support symbolic links.</source>
          <target state="translated">&lt;em&gt;逆参照&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、シンボリックリンクとハードリンクをアーカイブに追加します。&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、ターゲットファイルのコンテンツをアーカイブに追加します。これは、シンボリックリンクをサポートしないシステムには影響しません。</target>
        </trans-unit>
        <trans-unit id="89e297698f3919befb6ad412d44099f294057f3e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dir&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the file will be created in that directory; otherwise, a default directory is used. The default directory is chosen from a platform-dependent list, but the user of the application can control the directory location by setting the &lt;em&gt;TMPDIR&lt;/em&gt;, &lt;em&gt;TEMP&lt;/em&gt; or &lt;em&gt;TMP&lt;/em&gt; environment variables. There is thus no guarantee that the generated filename will have any nice properties, such as not requiring quoting when passed to external commands via &lt;code&gt;os.popen()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;dir&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、ファイルはそのディレクトリに作成されます。それ以外の場合は、デフォルトのディレクトリが使用されます。デフォルトのディレクトリはプラットフォーム依存のリストから選択されますが、アプリケーションのユーザーは、&lt;em&gt;TMPDIR&lt;/em&gt;、&lt;em&gt;TEMP、&lt;/em&gt;または&lt;em&gt;TMP&lt;/em&gt;環境変数を設定することにより、ディレクトリの場所を制御できます。したがって、生成されたファイル名が &lt;code&gt;os.popen()&lt;/code&gt; を介して外部コマンドに渡されたときに引用符を必要としないなど、優れたプロパティを持つことは保証されません。</target>
        </trans-unit>
        <trans-unit id="36e5a4ee826ffb2f15f36ae09720b225045e3a17" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dirname&lt;/em&gt; is a string, a &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; finder is created that searches that directory. If &lt;em&gt;dirname&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, a &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; finder is created that searches the current &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, plus any modules that are frozen or built-in.</source>
          <target state="translated">場合&lt;em&gt;DIRNAMEは&lt;/em&gt;文字列で、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;ファインダーは、その検索がそのディレクトリに作成されます。&lt;em&gt;dirname&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在の&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に加えて、フリーズまたは組み込みのモジュールを検索する&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;ファインダーが作成されます。</target>
        </trans-unit>
        <trans-unit id="551154ba8498eafba8ea7b74270354b26c0ca404" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;disposition&lt;/em&gt; is set, use it as the value of the &lt;em&gt;Content-Disposition&lt;/em&gt; header. If not specified, and &lt;em&gt;filename&lt;/em&gt; is specified, add the header with the value &lt;code&gt;attachment&lt;/code&gt;. If &lt;em&gt;disposition&lt;/em&gt; is not specified and &lt;em&gt;filename&lt;/em&gt; is also not specified, do not add the header. The only valid values for &lt;em&gt;disposition&lt;/em&gt; are &lt;code&gt;attachment&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;配置が&lt;/em&gt;設定されている、の値としてそれを使用する&lt;em&gt;コンテンツの廃棄の&lt;/em&gt;ヘッダー。指定されておらず、&lt;em&gt;ファイル名&lt;/em&gt;が指定されている場合は、値が &lt;code&gt;attachment&lt;/code&gt; のヘッダーを追加します。場合は&lt;em&gt;処分が&lt;/em&gt;指定されていない&lt;em&gt;ファイル名&lt;/em&gt;も指定されていない、ヘッダーを追加しないでください。以下のための唯一の有効な値&lt;em&gt;処分が&lt;/em&gt;ある &lt;code&gt;attachment&lt;/code&gt; と &lt;code&gt;inline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22732b32fe6ac6ba02ba73f066c5867ab756d641" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dnd_accept&lt;/em&gt; is not present or returns None, search moves to parent widget</source>
          <target state="translated">If &lt;em&gt;dnd_accept&lt;/em&gt; is not present or returns None, search moves to parent widget</target>
        </trans-unit>
        <trans-unit id="2ec590024eac4ba112689a063f854bf9db2f78c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dry_run&lt;/em&gt; is true, no archive is created, but the operations that would be executed are logged to &lt;em&gt;logger&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;もしdry_runが&lt;/em&gt;真である、何のアーカイブが作成されませんが、実行されます操作はに記録され&lt;em&gt;たロガー&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94267f95134956d72ce6e87e0afa84eedaad7aa3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dualstack_ipv6&lt;/em&gt; is true and the platform supports it the socket will be able to accept both IPv4 and IPv6 connections, else it will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Most POSIX platforms and Windows are supposed to support this functionality. When this functionality is enabled the address returned by &lt;a href=&quot;#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.getpeername()&lt;/code&gt;&lt;/a&gt; when an IPv4 connection occurs will be an IPv6 address represented as an IPv4-mapped IPv6 address. If &lt;em&gt;dualstack_ipv6&lt;/em&gt; is false it will explicitly disable this functionality on platforms that enable it by default (e.g. Linux). This parameter can be used in conjunction with &lt;a href=&quot;#socket.has_dualstack_ipv6&quot;&gt;&lt;code&gt;has_dualstack_ipv6()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">場合&lt;em&gt;dualstack_ipv6が&lt;/em&gt;真であるとプラットフォームがサポートしているソケットは、IPv4とIPv6の両方の接続を受け入れることができるようになります、そうでなければ発生します&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。ほとんどのPOSIXプラットフォームとWindowsは、この機能をサポートすることになっています。この機能を有効にすると、IPv4接続が発生したときに&lt;a href=&quot;#socket.socket.getpeername&quot;&gt; &lt;code&gt;socket.getpeername()&lt;/code&gt; &lt;/a&gt;によって返されるアドレスは、IPv4にマップされたIPv6アドレスとして表されるIPv6アドレスになります。&lt;em&gt;dualstack_ipv6&lt;/em&gt;がfalseの場合、デフォルトで有効にするプラットフォーム（Linuxなど）でこの機能が明示的に無効になります。このパラメーターは、&lt;a href=&quot;#socket.has_dualstack_ipv6&quot;&gt; &lt;code&gt;has_dualstack_ipv6()&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​できます。</target>
        </trans-unit>
        <trans-unit id="a9581453393604a0750f4d82252f2e5cd9d18898" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;duplex&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then the pipe is bidirectional. If &lt;em&gt;duplex&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then the pipe is unidirectional: &lt;code&gt;conn1&lt;/code&gt; can only be used for receiving messages and &lt;code&gt;conn2&lt;/code&gt; can only be used for sending messages.</source>
          <target state="translated">場合は&lt;em&gt;二重で&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、パイプは双方向です。場合は&lt;em&gt;、両面が&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; その後、パイプは一方向である： &lt;code&gt;conn1&lt;/code&gt; メッセージのみを受信するために使用することができ、 &lt;code&gt;conn2&lt;/code&gt; はメッセージのみを送信するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="99baa917d4196e3d9a478f232fed0c3fe22f8f57" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;effective_ids&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/a&gt; will perform its access checks using the effective uid/gid instead of the real uid/gid. &lt;em&gt;effective_ids&lt;/em&gt; may not be supported on your platform; you can check whether or not it is available using &lt;a href=&quot;#os.supports_effective_ids&quot;&gt;&lt;code&gt;os.supports_effective_ids&lt;/code&gt;&lt;/a&gt;. If it is unavailable, using it will raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;effective_ids&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;access()&lt;/code&gt; &lt;/a&gt;は実際のuid / gidではなく有効なuid / gidを使用してアクセスチェックを実行します。&lt;em&gt;Effective_ids&lt;/em&gt;はあなたのプラットフォームではサポートされていないかもしれません。&lt;a href=&quot;#os.supports_effective_ids&quot;&gt; &lt;code&gt;os.supports_effective_ids&lt;/code&gt; を&lt;/a&gt;使用して、それが使用可能かどうかを確認できます。使用できない場合は、使用すると&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="607534724be78a927f3354c8bcd6f86f04925384" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the result of each iteration of &lt;em&gt;message_body&lt;/em&gt; will be chunk-encoded as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1. How the data is encoded is dependent on the type of &lt;em&gt;message_body&lt;/em&gt;. If &lt;em&gt;message_body&lt;/em&gt; implements the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt; the encoding will result in a single chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;collections.abc.Iterable&lt;/code&gt;&lt;/a&gt;, each iteration of &lt;em&gt;message_body&lt;/em&gt; will result in a chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, each call to &lt;code&gt;.read()&lt;/code&gt; will result in a chunk. The method automatically signals the end of the chunk-encoded data immediately after &lt;em&gt;message_body&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;encode_chunked&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;em&gt;message_body&lt;/em&gt;の各反復の結果は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230の&lt;/strong&gt;&lt;/a&gt;セクション3.3.1で指定されているようにチャンクエンコードされます。データのエンコード方法は、&lt;em&gt;message_body&lt;/em&gt;のタイプによって異なります。&lt;em&gt;message_body&lt;/em&gt;が&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファインターフェースを&lt;/a&gt;実装している場合、エンコーディングは単一のチャンクになります。場合&lt;em&gt;MESSAGE_BODYが&lt;/em&gt;ある&lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;collections.abc.Iterable&lt;/code&gt; &lt;/a&gt;、の各反復&lt;em&gt;MESSAGE_BODYは&lt;/em&gt;チャンクになります。場合&lt;em&gt;MESSAGE_BODYが&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;、各呼び出しはする &lt;code&gt;.read()&lt;/code&gt; チャンクになります。このメソッドは、チャンクエンコードされたデータの終わりを&lt;em&gt;message_bodyの&lt;/em&gt;直後に自動的に通知します。</target>
        </trans-unit>
        <trans-unit id="7faf6374bee803b26834d04a5420d6f0d4969007" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the result of each iteration of &lt;em&gt;message_body&lt;/em&gt; will be chunk-encoded as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1. How the data is encoded is dependent on the type of &lt;em&gt;message_body&lt;/em&gt;. If &lt;em&gt;message_body&lt;/em&gt; implements the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt; the encoding will result in a single chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;collections.abc.Iterable&lt;/code&gt;&lt;/a&gt;, each iteration of &lt;em&gt;message_body&lt;/em&gt; will result in a chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, each call to &lt;code&gt;.read()&lt;/code&gt; will result in a chunk. The method automatically signals the end of the chunk-encoded data immediately after &lt;em&gt;message_body&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; , the result of each iteration of &lt;em&gt;message_body&lt;/em&gt; will be chunk-encoded as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1. How the data is encoded is dependent on the type of &lt;em&gt;message_body&lt;/em&gt;. If &lt;em&gt;message_body&lt;/em&gt; implements the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt; the encoding will result in a single chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;collections.abc.Iterable&lt;/code&gt; &lt;/a&gt;, each iteration of &lt;em&gt;message_body&lt;/em&gt; will result in a chunk. If &lt;em&gt;message_body&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, each call to &lt;code&gt;.read()&lt;/code&gt; will result in a chunk. The method automatically signals the end of the chunk-encoded data immediately after &lt;em&gt;message_body&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="7edf08fcadb288478ca315f1c2600e7b135a30a9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; (also known as &lt;em&gt;universal_newlines&lt;/em&gt;) is true, the file objects &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; will be opened in text mode using the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; specified in the call or the defaults for &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;エンコード&lt;/em&gt;または&lt;em&gt;エラーが&lt;/em&gt;指定されている、または&lt;em&gt;テキストは&lt;/em&gt;（としても知られている&lt;em&gt;universal_newlinesする&lt;/em&gt;）真である、ファイルはオブジェクト&lt;em&gt;標準入力&lt;/em&gt;、&lt;em&gt;標準出力を&lt;/em&gt;して&lt;em&gt;stderrは&lt;/em&gt;使用してテキストモードで開かれます&lt;em&gt;エンコーディング&lt;/em&gt;および&lt;em&gt;エラー&lt;/em&gt;の呼び出しで指定されたかのデフォルト&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="699e55008224a367497000a7c90840cae537dfba" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; is true, file objects for stdin, stdout and stderr are opened in text mode using the specified &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; or the &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; default. The &lt;em&gt;universal_newlines&lt;/em&gt; argument is equivalent to &lt;em&gt;text&lt;/em&gt; and is provided for backwards compatibility. By default, file objects are opened in binary mode.</source>
          <target state="translated">場合は&lt;em&gt;エンコード&lt;/em&gt;または&lt;em&gt;エラーが&lt;/em&gt;指定されている、または&lt;em&gt;テキストが&lt;/em&gt; trueの場合、ファイルは標準入力、標準出力のためのオブジェクトとstderrは、指定された使用してテキストモードで開かれている&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;または&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; の&lt;/a&gt;デフォルトを。&lt;em&gt;universal_newlinesの&lt;/em&gt;引数はに相当し&lt;em&gt;、テキスト&lt;/em&gt;と後方互換性のために提供されます。デフォルトでは、ファイルオブジェクトはバイナリモードで開かれます。</target>
        </trans-unit>
        <trans-unit id="52638c3e8d67fa2ec0fd557d0879c7a9e57eca8b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; are specified, or &lt;em&gt;text&lt;/em&gt; is true, the file objects &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; are opened in text mode with the specified encoding and &lt;em&gt;errors&lt;/em&gt;, as described above in &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt;. The &lt;em&gt;universal_newlines&lt;/em&gt; argument is equivalent to &lt;em&gt;text&lt;/em&gt; and is provided for backwards compatibility. By default, file objects are opened in binary mode.</source>
          <target state="translated">&lt;em&gt;エンコーディング&lt;/em&gt;または&lt;em&gt;エラー&lt;/em&gt;が指定されている場合、または&lt;em&gt;テキスト&lt;/em&gt;がtrueの場合、ファイルオブジェクト&lt;em&gt;stdin&lt;/em&gt;、&lt;em&gt;stdout&lt;/em&gt;、および&lt;em&gt;stderr&lt;/em&gt;は、前述の「&lt;a href=&quot;#frequently-used-arguments&quot;&gt;よく使用される引数」&lt;/a&gt;で説明されているように、指定されたエンコーディングと&lt;em&gt;エラー&lt;/em&gt;でテキストモードで開かれます。&lt;em&gt;universal_newlinesの&lt;/em&gt;引数はに相当し&lt;em&gt;、テキスト&lt;/em&gt;と後方互換性のために提供されます。デフォルトでは、ファイルオブジェクトはバイナリモードで開かれます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63d0f1a5631a1c9c1ee3f2e8299762fd8cd8e7d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ensure_ascii&lt;/em&gt; is true (the default), the output is guaranteed to have all incoming non-ASCII characters escaped. If &lt;em&gt;ensure_ascii&lt;/em&gt; is false, these characters will be output as-is.</source>
          <target state="translated">場合&lt;em&gt;ensure_asciiが&lt;/em&gt; true（デフォルト）で、出力はすべての着信非ASCII文字をエスケープ持つことが保証されています。&lt;em&gt;Ensure_ascii&lt;/em&gt;がfalseの場合、これらの文字はそのまま出力されます。</target>
        </trans-unit>
        <trans-unit id="f5c427089fb1de4505a7a9e6a8fc25b18c3e6e0c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;env&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process&amp;rsquo; environment.</source>
          <target state="translated">&lt;em&gt;env&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは新しいプロセスの環境変数を定義するマッピングでなければなりません。これらは、現在のプロセスの環境を継承するデフォルトの動作の代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="87535ea7e24348fb8f4d57c12202af9ca447538a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;env&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process&amp;rsquo; environment. It is passed directly to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;env&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは新しいプロセスの環境変数を定義するマッピングでなければなりません。これらは、現在のプロセスの環境を継承するデフォルトの動作の代わりに使用されます。&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; に&lt;/a&gt;直接渡されます。</target>
        </trans-unit>
        <trans-unit id="ff8cd5fc3865815194e6f233b530a23aa3eba258" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;error_callback&lt;/em&gt; is specified then it should be a callable which accepts a single argument. If the target function fails, then the &lt;em&gt;error_callback&lt;/em&gt; is called with the exception instance.</source>
          <target state="translated">&lt;em&gt;error_callback&lt;/em&gt;が指定されている場合、単一の引数を受け入れる呼び出し可能オブジェクトでなければなりません。ターゲット関数が失敗すると、例外インスタンスを使用して&lt;em&gt;error_callback&lt;/em&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a716812bb95f42a90866514c37dd0d4203eae841" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;errorlevel&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, all errors are ignored when using &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;TarFile.extract()&lt;/code&gt;&lt;/a&gt;. Nevertheless, they appear as error messages in the debug output, when debugging is enabled. If &lt;code&gt;1&lt;/code&gt;, all &lt;em&gt;fatal&lt;/em&gt; errors are raised as &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exceptions. If &lt;code&gt;2&lt;/code&gt;, all &lt;em&gt;non-fatal&lt;/em&gt; errors are raised as &lt;a href=&quot;#tarfile.TarError&quot;&gt;&lt;code&gt;TarError&lt;/code&gt;&lt;/a&gt; exceptions as well.</source>
          <target state="translated">場合は&lt;em&gt;ERRORLEVELが&lt;/em&gt;ある &lt;code&gt;0&lt;/code&gt; 使用した場合、すべてのエラーが無視され&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;TarFile.extract()&lt;/code&gt; &lt;/a&gt;。それにもかかわらず、デバッグが有効になっていると、デバッグ出力にエラーメッセージとして表示されます。 &lt;code&gt;1&lt;/code&gt; の場合、すべての&lt;em&gt;致命的な&lt;/em&gt;エラーは&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;例外として発生します。 &lt;code&gt;2&lt;/code&gt; の場合、すべて&lt;em&gt;の致命的で&lt;/em&gt;ないエラーも&lt;a href=&quot;#tarfile.TarError&quot;&gt; &lt;code&gt;TarError&lt;/code&gt; &lt;/a&gt;例外として発生します。</target>
        </trans-unit>
        <trans-unit id="e2f22ab75959b0a406d0827c55880256650c56f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;errors&lt;/em&gt; is specified, it&amp;rsquo;s used to determine how encoding errors are handled.</source>
          <target state="translated">If &lt;em&gt;errors&lt;/em&gt; is specified, it&amp;rsquo;s used to determine how encoding errors are handled.</target>
        </trans-unit>
        <trans-unit id="4cdee59d973926ccbf68873b846e74e0fc64b06e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exc_info&lt;/em&gt; does not evaluate as false, it causes exception information to be added to the logging message. If an exception tuple (in the format returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;) or an exception instance is provided, it is used; otherwise, &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt; is called to get the exception information.</source>
          <target state="translated">&lt;em&gt;exc_info&lt;/em&gt;がfalseと評価されない場合、例外メッセージがログメッセージに追加されます。例外タプル（&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される形式）または例外インスタンスが提供されている場合は、それが使用されます。それ以外の場合は、&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;を呼び出して例外情報を取得します。</target>
        </trans-unit>
        <trans-unit id="97d130dcbf3bae5b901a129e219774af57b99697" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exc_type&lt;/em&gt; is &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;, the exception is silently ignored. Otherwise, the exception is printed out on &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;exc_typeが&lt;/em&gt;ある&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; を&lt;/a&gt;、例外は黙って無視されます。それ以外の場合、例外は&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; に出力&lt;/a&gt;されます。</target>
        </trans-unit>
        <trans-unit id="d411ffd6142ab0891751015edec151dc77ef2c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default), an &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised if the target directory already exists.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （デフォルト）、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; は、&lt;/a&gt;ターゲットディレクトリがすでに存在する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="2db5d05fedef1a16fd234aa31609df5c35a8e34b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is false (the default), &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised if the target directory already exists.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt; false（デフォルト）で、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; は、&lt;/a&gt;ターゲットディレクトリがすでに存在する場合に発生します。</target>
        </trans-unit>
        <trans-unit id="151c18046b0057879a6273bc9b7b8b67d5a66254" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exist_ok&lt;/em&gt; is true, &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; exceptions will be ignored (same behavior as the POSIX &lt;code&gt;mkdir -p&lt;/code&gt; command), but only if the last path component is not an existing non-directory file.</source>
          <target state="translated">場合&lt;em&gt;exist_okが&lt;/em&gt;真である、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; の&lt;/a&gt;例外は（POSIXと同じ動作無視されます &lt;code&gt;mkdir -p&lt;/code&gt; コマンド）が、最後のパスコンポーネントは、既存の非ディレクトリファイルでない場合のみ。</target>
        </trans-unit>
        <trans-unit id="3700ef2eaa5a7011d3f7e0d02c4ae3309bb21da3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;, the path will not be expanded using the variables.</source>
          <target state="translated">&lt;em&gt;expand&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; に設定されている場合、パスは変数を使用して展開されません。</target>
        </trans-unit>
        <trans-unit id="d3d0c579641706b0f541c875d40a987796ca4535" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand&lt;/em&gt; is set to false, the paths will not be expanded.</source>
          <target state="translated">場合は&lt;em&gt;拡大&lt;/em&gt; falseに設定され、パスが展開されません。</target>
        </trans-unit>
        <trans-unit id="327ea4efd1b1ff657d3d4e06234f91e61ded279a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extra_groups&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the setgroups() system call will be made in the child process prior to the execution of the subprocess. Strings provided in &lt;em&gt;extra_groups&lt;/em&gt; will be looked up via &lt;a href=&quot;grp#grp.getgrnam&quot;&gt;&lt;code&gt;grp.getgrnam()&lt;/code&gt;&lt;/a&gt; and the values in &lt;code&gt;gr_gid&lt;/code&gt; will be used. Integer values will be passed verbatim. (POSIX only)</source>
          <target state="translated">If &lt;em&gt;extra_groups&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; , the setgroups() system call will be made in the child process prior to the execution of the subprocess. Strings provided in &lt;em&gt;extra_groups&lt;/em&gt; will be looked up via &lt;a href=&quot;grp#grp.getgrnam&quot;&gt; &lt;code&gt;grp.getgrnam()&lt;/code&gt; &lt;/a&gt; and the values in &lt;code&gt;gr_gid&lt;/code&gt; will be used. Integer values will be passed verbatim. (POSIX only)</target>
        </trans-unit>
        <trans-unit id="950957f8e4ed1166943a35b1541f1f3253fb73bb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;factory&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; the default task factory will be set. Otherwise, &lt;em&gt;factory&lt;/em&gt; must be a &lt;em&gt;callable&lt;/em&gt; with the signature matching &lt;code&gt;(loop, coro)&lt;/code&gt;, where &lt;em&gt;loop&lt;/em&gt; is a reference to the active event loop, and &lt;em&gt;coro&lt;/em&gt; is a coroutine object. The callable must return a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt;-compatible object.</source>
          <target state="translated">場合は&lt;em&gt;、工場が&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; デフォルトのタスクの工場が設定されます。それ以外の場合、&lt;em&gt;factory&lt;/em&gt;はシグネチャマッチング &lt;code&gt;(loop, coro)&lt;/code&gt; で&lt;em&gt;呼び出し可能&lt;/em&gt;でなければなりません。ここで、&lt;em&gt;loop&lt;/em&gt;はアクティブなイベントループへの参照であり、&lt;em&gt;coro&lt;/em&gt;はコルーチンオブジェクトです。呼び出し可能オブジェクトは、&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;互換オブジェクトを返す必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cde1a7a5d298627fbad97256eb936031b2f8b9e2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file&lt;/em&gt; is a string, open the file by that name, otherwise treat it as a file-like object. &lt;em&gt;mode&lt;/em&gt; can be:</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;が文字列の場合、その名前でファイルを開きます。それ以外の場合は、ファイルのようなオブジェクトとして扱います。&lt;em&gt;モード&lt;/em&gt;は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="67d175cb8486589a948e2cf74ce3849b7236be76" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file&lt;/em&gt; is not specified, read from &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="49c9ed3d94894a12395907e88bfe7b2901ae44f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_encoding&lt;/em&gt; is not given, it defaults to &lt;em&gt;data_encoding&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;file_encoding&lt;/em&gt;が指定されていない場合、デフォルトで&lt;em&gt;data_encodingになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="76758843e2e5c710ae0a6372d1081e6f9d9e89c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_or_dir&lt;/em&gt; is a directory and not a symbolic link, then recursively descend the directory tree named by &lt;em&gt;file_or_dir&lt;/em&gt;, checking all &lt;code&gt;.py&lt;/code&gt; files along the way. If &lt;em&gt;file_or_dir&lt;/em&gt; is an ordinary Python source file, it is checked for whitespace related problems. The diagnostic messages are written to standard output using the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">場合&lt;em&gt;file_or_dirが&lt;/em&gt;ディレクトリであってシンボリックリンクでない場合、再帰的で指定されたディレクトリツリー降り&lt;em&gt;file_or_dirを&lt;/em&gt;すべてチェックし、 &lt;code&gt;.py&lt;/code&gt; 道に沿ってファイルを。場合&lt;em&gt;file_or_dirは、&lt;/em&gt;通常のPythonのソースファイルで、それが空白関連する問題のためにチェックされています。診断メッセージは、&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;関数を使用して標準出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="8147d1cd319a466257a1243b03ade84b3c9e406b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filelike&lt;/em&gt; has a &lt;code&gt;close()&lt;/code&gt; method, the returned object will also have a &lt;code&gt;close()&lt;/code&gt; method, and it will invoke the &lt;em&gt;filelike&lt;/em&gt; object&amp;rsquo;s &lt;code&gt;close()&lt;/code&gt; method when called.</source>
          <target state="translated">場合&lt;em&gt;filelikeが&lt;/em&gt;持っている &lt;code&gt;close()&lt;/code&gt; メソッドを、返されたオブジェクトもあります &lt;code&gt;close()&lt;/code&gt; メソッドを、それが起動します&lt;em&gt;filelike&lt;/em&gt;オブジェクトの &lt;code&gt;close()&lt;/code&gt; というメソッドを。</target>
        </trans-unit>
        <trans-unit id="48cc1454e821d6920b8394ca56ab7ba76323cb6d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object, open the named file directly. Otherwise, &lt;em&gt;filename&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, which will be used to read or write the compressed data.</source>
          <target state="translated">場合は&lt;em&gt;、ファイル名が&lt;/em&gt;ある&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを、直接という名前のファイルを開きます。それ以外の場合、&lt;em&gt;filename&lt;/em&gt;は、圧縮データの読み取りまたは書き込みに使用される&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="2dd79be35e2c082fb1f3647342729bedac741b12" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object, open the named file directly. Otherwise, &lt;em&gt;filename&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, which will be used to read or write the compressed data.</source>
          <target state="translated">If &lt;em&gt;filename&lt;/em&gt; is a &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; object, open the named file directly. Otherwise, &lt;em&gt;filename&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, which will be used to read or write the compressed data.</target>
        </trans-unit>
        <trans-unit id="b07d149a1e1e8508bf416df0ffabf52508cd4717" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a file object (rather than an actual file name), a mode of &lt;code&gt;&quot;w&quot;&lt;/code&gt; does not truncate the file, and is instead equivalent to &lt;code&gt;&quot;a&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;、ファイル名は&lt;/em&gt;ファイルオブジェクト（よりむしろ実際のファイル名）、のモードである &lt;code&gt;&quot;w&quot;&lt;/code&gt; ファイルを切り捨て、そして代わりに等価でありません &lt;code&gt;&quot;a&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c18ac97e77df1feec965478ce33eedf1e1130a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is a file object (rather than an actual file name), a mode of &lt;code&gt;'w'&lt;/code&gt; does not truncate the file, and is instead equivalent to &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;が（実際のファイル名ではなく）ファイルオブジェクトの場合、モード &lt;code&gt;'w'&lt;/code&gt; はファイルを切り捨てず、代わりに &lt;code&gt;'a'&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4b4caaad3a0e78f58783527b4ec2b5bee1735031" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is specified, open the file in this &lt;a href=&quot;functions#filemodes&quot;&gt;mode&lt;/a&gt;. Defaults to &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル名&lt;/em&gt;を指定した場合は、この&lt;a href=&quot;functions#filemodes&quot;&gt;モードで&lt;/a&gt;ファイルを開きます。デフォルトは &lt;code&gt;'a'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6af85c4bc7806c30929d3ef968f1f66afef5d04c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is specified, use it as the value of the &lt;code&gt;filename&lt;/code&gt; parameter of the &lt;em&gt;Content-Disposition&lt;/em&gt; header.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;が指定されている場合は、それを&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーの &lt;code&gt;filename&lt;/code&gt; パラメーターの値として使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9df42f67fa743cce97d1afbbf64f8287dc75452d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filenames&lt;/em&gt; is a string, a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, it is treated as a single filename. If a file named in &lt;em&gt;filenames&lt;/em&gt; cannot be opened, that file will be ignored. This is designed so that you can specify an iterable of potential configuration file locations (for example, the current directory, the user&amp;rsquo;s home directory, and some system-wide directory), and all existing configuration files in the iterable will be read.</source>
          <target state="translated">場合&lt;em&gt;、ファイル名が&lt;/em&gt;文字列である&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトまたは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;は、単一のファイル名として扱われます。&lt;em&gt;filenamesで&lt;/em&gt;指定された&lt;em&gt;ファイル&lt;/em&gt;を開くことができない場合、そのファイルは無視されます。これは、潜在的な構成ファイルの場所（現在のディレクトリ、ユーザーのホームディレクトリ、システム全体のディレクトリなど）の反復可能オブジェクトを指定できるように設計されており、反復可能ファイル内の既存のすべての構成ファイルが読み取られます。</target>
        </trans-unit>
        <trans-unit id="8b2ae28dd64625ad8615f00b37b95205f862e6fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filenames&lt;/em&gt; is a string, a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, it is treated as a single filename. If a file named in &lt;em&gt;filenames&lt;/em&gt; cannot be opened, that file will be ignored. This is designed so that you can specify an iterable of potential configuration file locations (for example, the current directory, the user&amp;rsquo;s home directory, and some system-wide directory), and all existing configuration files in the iterable will be read.</source>
          <target state="translated">If &lt;em&gt;filenames&lt;/em&gt; is a string, a &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; object or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, it is treated as a single filename. If a file named in &lt;em&gt;filenames&lt;/em&gt; cannot be opened, that file will be ignored. This is designed so that you can specify an iterable of potential configuration file locations (for example, the current directory, the user&amp;rsquo;s home directory, and some system-wide directory), and all existing configuration files in the iterable will be read.</target>
        </trans-unit>
        <trans-unit id="cb50194f67b844fcbdfed4147a0e69c6aa03bd88" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileno&lt;/em&gt; is specified, the values for &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, and &lt;em&gt;proto&lt;/em&gt; are auto-detected from the specified file descriptor. Auto-detection can be overruled by calling the function with explicit &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, or &lt;em&gt;proto&lt;/em&gt; arguments. This only affects how Python represents e.g. the return value of &lt;a href=&quot;#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.getpeername()&lt;/code&gt;&lt;/a&gt; but not the actual OS resource. Unlike &lt;a href=&quot;#socket.fromfd&quot;&gt;&lt;code&gt;socket.fromfd()&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;fileno&lt;/em&gt; will return the same socket and not a duplicate. This may help close a detached socket using &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;socket.close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;FILENOが&lt;/em&gt;指定されている、の値&lt;em&gt;家族&lt;/em&gt;、&lt;em&gt;タイプ&lt;/em&gt;、および&lt;em&gt;プロトは、&lt;/em&gt;指定されたファイル記述子から自動検出しています。自動検出は、明示的な&lt;em&gt;family&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、または&lt;em&gt;proto&lt;/em&gt;引数を指定して関数を呼び出すことによって却下できます。これは、たとえば、&lt;a href=&quot;#socket.socket.getpeername&quot;&gt; &lt;code&gt;socket.getpeername()&lt;/code&gt; の&lt;/a&gt;戻り値などのPythonの表現方法にのみ影響しますが、実際のOSリソースには影響しません。&lt;a href=&quot;#socket.fromfd&quot;&gt; &lt;code&gt;socket.fromfd()&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;em&gt;fileno&lt;/em&gt;は同じソケットを返し、重複はしません。これは、&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;socket.close()&lt;/code&gt; &lt;/a&gt;を使用して、切り離されたソケットを閉じるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="cad3934c4f6ad00649995ab7289422c5ddfc6d68" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileobj&lt;/em&gt; is given, it is used for reading or writing data. If it can be determined, &lt;em&gt;mode&lt;/em&gt; is overridden by &lt;em&gt;fileobj&lt;/em&gt;&amp;rsquo;s mode. &lt;em&gt;fileobj&lt;/em&gt; will be used from position 0.</source>
          <target state="translated">場合&lt;em&gt;もしfileobjが&lt;/em&gt;与えられ、それがデータを読み書きするために使用されています。判別できる場合、&lt;em&gt;モード&lt;/em&gt;は&lt;em&gt;fileobj&lt;/em&gt;のモードによってオーバーライドされます。&lt;em&gt;fileobj&lt;/em&gt;は位置0から使用されます。</target>
        </trans-unit>
        <trans-unit id="d760e902d1a9a9274ea97101800dd62b508b5620" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileobj&lt;/em&gt; is specified, it is used as an alternative to a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened in binary mode for &lt;em&gt;name&lt;/em&gt;. It is supposed to be at position 0.</source>
          <target state="translated">&lt;em&gt;fileobj&lt;/em&gt;が指定されている場合、これは、&lt;em&gt;nameの&lt;/em&gt;バイナリモードで開かれた&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;代替として使用されます。位置0にあるはずです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eecdea127c82d2e7e3361c3981fe40eabedcc5c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fileobj&lt;/em&gt; is specified, it is used as an alternative to a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened in binary mode for &lt;em&gt;name&lt;/em&gt;. It is supposed to be at position 0.</source>
          <target state="translated">If &lt;em&gt;fileobj&lt;/em&gt; is specified, it is used as an alternative to a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened in binary mode for &lt;em&gt;name&lt;/em&gt;. It is supposed to be at position 0.</target>
        </trans-unit>
        <trans-unit id="dae7cbc850bce550396ab6a5e4f90017603d189c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;files&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; the internal data structure is completely rebuilt to its initial default value. This is a stable operation and will produce the same results when called multiple times.</source>
          <target state="translated">&lt;em&gt;files&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、内部データ構造は初期のデフォルト値に完全に再構築されます。これは安定した動作であり、複数回呼び出されても同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="342f942c82ec8e80a515a3a240295a1556b0f119" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;first_line&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it indicates the line number that should be reported for the first source line in the disassembled code. Otherwise, the source line information (if any) is taken directly from the disassembled code object.</source>
          <target state="translated">&lt;em&gt;first_line&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、逆アセンブルされたコードの最初のソース行について報告される必要がある行番号を示します。それ以外の場合、ソース行情報（存在する場合）は、逆アセンブルされたコードオブジェクトから直接取得されます。</target>
        </trans-unit>
        <trans-unit id="6e5911d01f22e7a53df624823fe8cad9cc059dfb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fix_imports&lt;/em&gt; is true and &lt;em&gt;protocol&lt;/em&gt; is less than 3, pickle will try to map the new Python 3 names to the old module names used in Python 2, so that the pickle data stream is readable with Python 2.</source>
          <target state="translated">場合&lt;em&gt;fix_importsが&lt;/em&gt; trueで、&lt;em&gt;プロトコルが&lt;/em&gt; 3未満である、漬物は漬物のデータ・ストリームは、Python 2と読めるように、Pythonの2で使われていた古いモジュール名に新しいPythonの3名をマップしようとします。</target>
        </trans-unit>
        <trans-unit id="7c458fcb92551aa4179a0ee8c3ec9f897777d84c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; has another value, then the status of the newsgroup should be considered unknown.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;に別の値がある場合、ニュースグループのステータスは不明と見なされます。</target>
        </trans-unit>
        <trans-unit id="fd5ac0ee5de4a2ac67078bdcdfed8efdc0a7e6d9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, after a few milliseconds, an escape sequence will not be interpreted, and will be left in the input stream as is.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、数ミリ秒後、エスケープシーケンスは解釈されず、入力ストリームにそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="05e2c86e5fa6ae70395c93eb2082fe2efd1b66ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, curses no longer considers using the hardware insert/delete character feature of the terminal; if &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, use of character insertion and deletion is enabled. When curses is first initialized, use of character insert/delete is enabled by default.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、cursesは端末のハードウェア挿入/削除文字機能の使用を考慮しなくなります。場合&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、文字の挿入と削除の使用が有効になっています。cursesが最初に初期化されるとき、文字の挿入/削除の使用はデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="93111a903d42affcb1b92cdf76c31a4ded5864f7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, cursor will always be at &amp;ldquo;cursor position&amp;rdquo; after an update.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、更新後、カーソルは常に「カーソル位置」にあります。</target>
        </trans-unit>
        <trans-unit id="927b0ac6123fcfbd9d4b43d6b6a0df82d95c5b38" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the effect is the same as calling &lt;a href=&quot;#curses.noqiflush&quot;&gt;&lt;code&gt;noqiflush()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, or no argument is provided, the queues will be flushed when these control characters are read.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; 、効果が呼び出した場合と同じである&lt;a href=&quot;#curses.noqiflush&quot;&gt; &lt;code&gt;noqiflush()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、または引数が指定されていない場合、これらの制御文字が読み取られるときにキューがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="dc34adf1b0cd9cd2daf9fae31e473262b7ba2c27" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will be non-blocking.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;は非ブロッキングになります。</target>
        </trans-unit>
        <trans-unit id="7b4b0114fea39b01c456c42a03e99b9d6724d928" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; will try and use hardware line editing facilities. Otherwise, line insertion/deletion are disabled.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;はハードウェア行編集機能を使用しようとします。それ以外の場合、行の挿入/削除は無効になります。</target>
        </trans-unit>
        <trans-unit id="76906428c5886677b5bf5a701073b0866ac9c47c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, allow 8-bit characters to be input. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, allow only 7-bit chars.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、8ビット文字を入力することを可能にします。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、7ビット文字のみを許可します。</target>
        </trans-unit>
        <trans-unit id="06fc114a8ed7cdc8c7c9f51b3779e8ccf43597dc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, any change in the window image automatically causes the window to be refreshed; you no longer have to call &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; yourself. However, it may degrade performance considerably, due to repeated calls to wrefresh. This option is disabled by default.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、ウィンドウの画像が変更されると、ウィンドウが自動的に更新されます。自分で&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;を呼び出す必要はありません。ただし、wrefreshを繰り返し呼び出すため、パフォーマンスが大幅に低下する可能性があります。このオプションはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="06be27fe5690b343d7c782f196aedecd59d5593b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, cursor is left where it is on update, instead of being at &amp;ldquo;cursor position.&amp;rdquo; This reduces cursor movement where possible. If possible the cursor will be made invisible.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、カーソルは「カーソル位置」ではなく、更新時のままになります。これにより、可能な場合はカーソルの移動が減少します。可能な場合、カーソルは非表示になります。</target>
        </trans-unit>
        <trans-unit id="e8f3b65bf56ecd36575c4c78068a2150d9cf1c52" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, escape sequences generated by some keys (keypad, function keys) will be interpreted by &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, escape sequences will be left as is in the input stream.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、一部のキー（キーパッド、ファンクションキー）によって生成されたエスケープシーケンスは&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;によって解釈されます。&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、エスケープシーケンスは入力ストリームにそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="a2a9d18c81906fc88496c93e2ee95c2ec1e7a5f5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, escape sequences will not be timed out.</source>
          <target state="translated">&lt;em&gt;flag&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、エスケープシーケンスはタイムアウトしません。</target>
        </trans-unit>
        <trans-unit id="ffb0dbfa616feb4ae93cd41e04da978adc1b3014" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; will clear the window completely.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、次の呼び出し&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;はウィンドウを完全に消去します。</target>
        </trans-unit>
        <trans-unit id="a8c3c261a3289123c7ec484215dd4ac72bcaec28" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, then &lt;a href=&quot;#curses.window.syncup&quot;&gt;&lt;code&gt;syncup()&lt;/code&gt;&lt;/a&gt; is called automatically whenever there is a change in the window.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、そして&lt;a href=&quot;#curses.window.syncup&quot;&gt; &lt;code&gt;syncup()&lt;/code&gt; &lt;/a&gt;ウィンドウに変更があるたびに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="54238747de3a909db924c82086364dce0b3b6035" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;flag&lt;/em&gt; is true, turn debugging on. Otherwise, turn debugging off. When debugging is on, commands to be executed are printed, and the shell is given &lt;code&gt;set -x&lt;/code&gt; command to be more verbose.</source>
          <target state="translated">場合は&lt;em&gt;フラグが&lt;/em&gt; trueで、デバッグをオンにします。それ以外の場合は、デバッグをオフにします。デバッグがオンの場合、実行されるコマンドが出力され、シェルには &lt;code&gt;set -x&lt;/code&gt; コマンドが与えられ、より冗長になります。</target>
        </trans-unit>
        <trans-unit id="0a676f79bdec3d8d55c49f7b6418938f946ea982" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fmt&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, use the following default &lt;em&gt;fmt&lt;/em&gt;:</source>
          <target state="translated">場合&lt;em&gt;FMTは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、次のデフォルトの使用&lt;em&gt;FMTを&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3b5abf51d5e979202e366a84df39077b1602bd52" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, return &lt;code&gt;True&lt;/code&gt; only if this entry is a directory (without following symlinks); return &lt;code&gt;False&lt;/code&gt; if the entry is any other kind of file or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を返す &lt;code&gt;True&lt;/code&gt; このエントリがディレクトリで（次のシンボリックリンクなし）の場合のみ。エントリが他の種類のファイルである場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b449d1a838bf30bc8e83f6404dc93c18180c4e9b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, return &lt;code&gt;True&lt;/code&gt; only if this entry is a file (without following symlinks); return &lt;code&gt;False&lt;/code&gt; if the entry is a directory or other non-file entry, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を返す &lt;code&gt;True&lt;/code&gt; このエントリは（シンボリックリンクを以下なし）のファイルである場合にのみ、エントリがディレクトリまたは他の非ファイルエントリである場合、または存在しない場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c810ead4934973b38f7ba460ecc6b76eb321e40" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false and &lt;em&gt;src&lt;/em&gt; is a symbolic link, a new symbolic link will be created instead of copying the file &lt;em&gt;src&lt;/em&gt; points to.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;srcが&lt;/em&gt;シンボリックリンクで、新しいシンボリックリンクは、ファイルのコピーの代わりに作成される&lt;em&gt;のsrc&lt;/em&gt;にポイントを。</target>
        </trans-unit>
        <trans-unit id="3791f9b1ad913c64dfe3c483d0e89806dc737039" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false, and &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; both refer to symbolic links, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; will operate on the symbolic links themselves rather than the files the symbolic links refer to&amp;mdash;reading the information from the &lt;em&gt;src&lt;/em&gt; symbolic link, and writing the information to the &lt;em&gt;dst&lt;/em&gt; symbolic link.</source>
          <target state="translated">もし&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;SRC&lt;/em&gt;と&lt;em&gt;DST&lt;/em&gt;シンボリックリンクを参照してください両方&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; は&lt;/a&gt;シンボリックリンクがへの読み取りからの情報を参照するファイルではなくシンボリックリンクそのものを操作します&lt;em&gt;SRC&lt;/em&gt;シンボリックリンク、とに情報を書き込みます&lt;em&gt;dst&lt;/em&gt;シンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="05aea198a5b1eab18e23d436268151142cdfb7c9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is false, and &lt;em&gt;src&lt;/em&gt; is a symbolic link, &lt;em&gt;dst&lt;/em&gt; will be created as a symbolic link. If &lt;em&gt;follow_symlinks&lt;/em&gt; is true and &lt;em&gt;src&lt;/em&gt; is a symbolic link, &lt;em&gt;dst&lt;/em&gt; will be a copy of the file &lt;em&gt;src&lt;/em&gt; refers to.</source>
          <target state="translated">場合&lt;em&gt;follow_symlinksが&lt;/em&gt;偽であり、&lt;em&gt;srcは&lt;/em&gt;シンボリックリンクで、&lt;em&gt;DSTは&lt;/em&gt;シンボリックリンクとして作成されます。場合&lt;em&gt;follow_symlinksが&lt;/em&gt; trueで、&lt;em&gt;srcが&lt;/em&gt;シンボリックリンクで、&lt;em&gt;DSTは、&lt;/em&gt;ファイルのコピーとなります&lt;em&gt;srcは&lt;/em&gt;を指します。</target>
        </trans-unit>
        <trans-unit id="ad63af89430c98aa694c40b5d47925c5c967f84b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;force&lt;/em&gt; is true, modules are re-compiled even if the timestamps are up to date.</source>
          <target state="translated">場合は&lt;em&gt;力が&lt;/em&gt; trueの場合、モジュールはタイムスタンプが最新である場合でも、再コンパイルされます。</target>
        </trans-unit>
        <trans-unit id="db56c32c75e8f39f5a049b963d87f7483bb3f491" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; is specified, use this style for the format string. One of &lt;code&gt;'%'&lt;/code&gt;, &lt;code&gt;'{'&lt;/code&gt; or &lt;code&gt;'$'&lt;/code&gt; for &lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;printf-style&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt; respectively. Defaults to &lt;code&gt;'%'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;が指定されている場合、フォーマット文字列にはこのスタイルを使用します。一つ &lt;code&gt;'%'&lt;/code&gt; 、 &lt;code&gt;'{'&lt;/code&gt; または &lt;code&gt;'$'&lt;/code&gt; のための&lt;a href=&quot;stdtypes#old-string-formatting&quot;&gt;printfスタイル&lt;/a&gt;、&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; &lt;/a&gt;それぞれ。デフォルトは &lt;code&gt;'%'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9c993dc4953aefb555e95150b85e635f8eb734c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; requires a single argument, &lt;em&gt;values&lt;/em&gt; may be a single non-tuple object. &lt;a href=&quot;#id16&quot; id=&quot;id10&quot;&gt;5&lt;/a&gt; Otherwise, &lt;em&gt;values&lt;/em&gt; must be a tuple with exactly the number of items specified by the format string, or a single mapping object (for example, a dictionary).</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;が単一の引数を必要とする場合、&lt;em&gt;値&lt;/em&gt;は単一の非タプルオブジェクトの場合があります。&lt;a href=&quot;#id16&quot; id=&quot;id10&quot;&gt;5&lt;/a&gt;それ以外の場合、&lt;em&gt;値&lt;/em&gt;は、フォーマット文字列で指定されたアイテム数と同じタプル、または単一のマッピングオブジェクト（たとえば、ディクショナリ）である必要があります。</target>
        </trans-unit>
        <trans-unit id="7bc9128599baccee2d3226e85c7c2b9cc2cb9b2f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; requires a single argument, &lt;em&gt;values&lt;/em&gt; may be a single non-tuple object. &lt;a href=&quot;#id16&quot; id=&quot;id11&quot;&gt;5&lt;/a&gt; Otherwise, &lt;em&gt;values&lt;/em&gt; must be a tuple with exactly the number of items specified by the format bytes object, or a single mapping object (for example, a dictionary).</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;が単一の引数を必要とする場合、&lt;em&gt;値&lt;/em&gt;は単一の非タプルオブジェクトである可能性があります。&lt;a href=&quot;#id16&quot; id=&quot;id11&quot;&gt;5&lt;/a&gt;それ以外の場合、&lt;em&gt;値&lt;/em&gt;は、バイト形式オブジェクトで指定されたアイテム数と同じ数のタプル、または単一のマッピングオブジェクト（ディクショナリなど）である必要があります。</target>
        </trans-unit>
        <trans-unit id="d48e3331edd32ebb17d2aa8d9c936c8508567fe2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;from_addr&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or &lt;em&gt;to_addrs&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;send_message&lt;/code&gt; fills those arguments with addresses extracted from the headers of &lt;em&gt;msg&lt;/em&gt; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;from_addr&lt;/em&gt; is set to the &lt;em&gt;Sender&lt;/em&gt; field if it is present, and otherwise to the &lt;em&gt;From&lt;/em&gt; field. &lt;em&gt;to_addrs&lt;/em&gt; combines the values (if any) of the &lt;em&gt;To&lt;/em&gt;, &lt;em&gt;Cc&lt;/em&gt;, and &lt;em&gt;Bcc&lt;/em&gt; fields from &lt;em&gt;msg&lt;/em&gt;. If exactly one set of &lt;em&gt;Resent-*&lt;/em&gt; headers appear in the message, the regular headers are ignored and the &lt;em&gt;Resent-*&lt;/em&gt; headers are used instead. If the message contains more than one set of &lt;em&gt;Resent-*&lt;/em&gt; headers, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised, since there is no way to unambiguously detect the most recent set of &lt;em&gt;Resent-&lt;/em&gt; headers.</source>
          <target state="translated">場合&lt;em&gt;from_addrは&lt;/em&gt;しない &lt;code&gt;None&lt;/code&gt; 又は&lt;em&gt;to_addrs&lt;/em&gt;しない &lt;code&gt;None&lt;/code&gt; 、 &lt;code&gt;send_message&lt;/code&gt; 塗りつぶしのヘッダから抽出されたアドレスを持つこれらの引数&lt;em&gt;MSG&lt;/em&gt;で指定されるように&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;：&lt;em&gt;from_addrが&lt;/em&gt;に設定されている&lt;em&gt;送信者&lt;/em&gt;が存在し、そうでないのであれば、フィールド&lt;em&gt;から&lt;/em&gt;フィールド。&lt;em&gt;to_addrs&lt;/em&gt;は、&lt;em&gt;msgの&lt;/em&gt;&lt;em&gt;To&lt;/em&gt;、&lt;em&gt;Cc&lt;/em&gt;、および&lt;em&gt;Bcc&lt;/em&gt;フィールドの値（存在する場合）を組み合わせます。&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーのセットが1つだけメッセージに表示される場合、通常のヘッダーは無視され、&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;代わりに&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーが使用されます。メッセージに複数の&lt;em&gt;Resent- *&lt;/em&gt;ヘッダーのセットが含まれている場合、最新の&lt;em&gt;Resent-&lt;/em&gt;ヘッダーのセットを明確に検出する方法がないため、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feea519ba7ec87396ed4869230c2a276f4279c66" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;func&lt;/em&gt; is supplied, it should be a function of two arguments. Elements of the input &lt;em&gt;iterable&lt;/em&gt; may be any type that can be accepted as arguments to &lt;em&gt;func&lt;/em&gt;. (For example, with the default operation of addition, elements may be any addable type including &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt;を指定する場合は、2つの引数の関数でなければなりません。入力&lt;em&gt;イテラブルの&lt;/em&gt;要素は、&lt;em&gt;funcの&lt;/em&gt;引数として受け入れることができる任意のタイプにすることができます。（たとえば、デフォルトの加算演算では、要素は&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;を含む任意の追加可能なタイプになる可能性があります。）</target>
        </trans-unit>
        <trans-unit id="164544b1932b60456584e8f1c72c01d2623fcbf2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;gen_func&lt;/em&gt; is a generator function, it will be modified in-place.</source>
          <target state="translated">&lt;em&gt;gen_func&lt;/em&gt;がジェネレーター関数の場合は、インプレースで変更されます。</target>
        </trans-unit>
        <trans-unit id="ae0ede519983eaf3ab2b7313089869e4e7d5c637" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;gen_func&lt;/em&gt; is not a generator function, it will be wrapped. If it returns an instance of &lt;a href=&quot;collections.abc#collections.abc.Generator&quot;&gt;&lt;code&gt;collections.abc.Generator&lt;/code&gt;&lt;/a&gt;, the instance will be wrapped in an &lt;em&gt;awaitable&lt;/em&gt; proxy object. All other types of objects will be returned as is.</source>
          <target state="translated">&lt;em&gt;gen_func&lt;/em&gt;がジェネレーター関数でない場合は、ラップされます。&lt;a href=&quot;collections.abc#collections.abc.Generator&quot;&gt; &lt;code&gt;collections.abc.Generator&lt;/code&gt; の&lt;/a&gt;インスタンスを返す場合、そのインスタンスは&lt;em&gt;待機可能な&lt;/em&gt;プロキシオブジェクトにラップされます。他のすべてのタイプのオブジェクトはそのまま返されます。</target>
        </trans-unit>
        <trans-unit id="cf24817a5521bbff63768774eb4199f2d3c3e247" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;generator&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; with no currently associated frame, then an empty dictionary is returned. &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;generator&lt;/em&gt; is not a Python generator object.</source>
          <target state="translated">場合&lt;em&gt;ジェネレータが&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;ない現在関連付けられているフレームと、空の辞書が返されます。&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;ジェネレータ&lt;/em&gt;がPythonジェネレータオブジェクトでない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="1fc71b1dd40b526df07584c19b8a60564d1afabb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;generator&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; with no currently associated frame, then an empty dictionary is returned. &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;generator&lt;/em&gt; is not a Python generator object.</source>
          <target state="translated">If &lt;em&gt;generator&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; with no currently associated frame, then an empty dictionary is returned. &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; is raised if &lt;em&gt;generator&lt;/em&gt; is not a Python generator object.</target>
        </trans-unit>
        <trans-unit id="32d78d5d1b808d4fae3e941bac29fe312e9966f1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;group&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the setregid() system call will be made in the child process prior to the execution of the subprocess. If the provided value is a string, it will be looked up via &lt;a href=&quot;grp#grp.getgrnam&quot;&gt;&lt;code&gt;grp.getgrnam()&lt;/code&gt;&lt;/a&gt; and the value in &lt;code&gt;gr_gid&lt;/code&gt; will be used. If the value is an integer, it will be passed verbatim. (POSIX only)</source>
          <target state="translated">If &lt;em&gt;group&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; , the setregid() system call will be made in the child process prior to the execution of the subprocess. If the provided value is a string, it will be looked up via &lt;a href=&quot;grp#grp.getgrnam&quot;&gt; &lt;code&gt;grp.getgrnam()&lt;/code&gt; &lt;/a&gt; and the value in &lt;code&gt;gr_gid&lt;/code&gt; will be used. If the value is an integer, it will be passed verbatim. (POSIX only)</target>
        </trans-unit>
        <trans-unit id="46bc5fd0aa6bec8a23e0345b1203f16848d81f41" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;handler&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the default exception handler will be set. Otherwise, &lt;em&gt;handler&lt;/em&gt; must be a callable with the signature matching &lt;code&gt;(loop, context)&lt;/code&gt;, where &lt;code&gt;loop&lt;/code&gt; is a reference to the active event loop, and &lt;code&gt;context&lt;/code&gt; is a &lt;code&gt;dict&lt;/code&gt; object containing the details of the exception (see &lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt;&lt;code&gt;call_exception_handler()&lt;/code&gt;&lt;/a&gt; documentation for details about context).</source>
          <target state="translated">場合&lt;em&gt;ハンドラは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、デフォルトの例外ハンドラが設定されます。それ以外の場合、&lt;em&gt;ハンドラー&lt;/em&gt;はシグネチャマッチング &lt;code&gt;(loop, context)&lt;/code&gt; で呼び出し可能である必要があります。 &lt;code&gt;loop&lt;/code&gt; はアクティブなイベントループへの参照であり、 &lt;code&gt;context&lt;/code&gt; は例外の詳細を含む &lt;code&gt;dict&lt;/code&gt; オブジェクト&lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt; &lt;code&gt;call_exception_handler()&lt;/code&gt; &lt;/a&gt;コンテキストの詳細については、call_exception_handler（）のドキュメントを参照））。</target>
        </trans-unit>
        <trans-unit id="d76c1251be1504007598c6c1b5f67777c519d2a0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;hardlink_dupes&lt;/em&gt; is true and two &lt;code&gt;.pyc&lt;/code&gt; files with different optimization level have the same content, use hard links to consolidate duplicate files.</source>
          <target state="translated">If &lt;em&gt;hardlink_dupes&lt;/em&gt; is true and two &lt;code&gt;.pyc&lt;/code&gt; files with different optimization level have the same content, use hard links to consolidate duplicate files.</target>
        </trans-unit>
        <trans-unit id="f0f448033d3ee18b041c00dcd5e55dde7d7efa40" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; contains neither Content-Length nor Transfer-Encoding, but there is a request body, one of those header fields will be added automatically. If &lt;em&gt;body&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the Content-Length header is set to &lt;code&gt;0&lt;/code&gt; for methods that expect a body (&lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, and &lt;code&gt;PATCH&lt;/code&gt;). If &lt;em&gt;body&lt;/em&gt; is a string or a bytes-like object that is not also a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file&lt;/a&gt;, the Content-Length header is set to its length. Any other type of &lt;em&gt;body&lt;/em&gt; (files and iterables in general) will be chunk-encoded, and the Transfer-Encoding header will automatically be set instead of Content-Length.</source>
          <target state="translated">場合は&lt;em&gt;、ヘッダーは&lt;/em&gt;どちらのContent-Lengthも転送エンコーディングが含まれていますが、リクエストボディがあり、それらのヘッダフィールドの一つが自動的に追加されます。&lt;em&gt;body&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、本文を期待するメソッド（ &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、および &lt;code&gt;PATCH&lt;/code&gt; ）のContent-Lengthヘッダーは &lt;code&gt;0&lt;/code&gt; に設定されます。場合&lt;em&gt;本体は&lt;/em&gt;文字列やバイトのようなオブジェクトにもないからである&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイル&lt;/a&gt;、Content-Lengthヘッダは、その長さに設定されています。その他のタイプの&lt;em&gt;本体&lt;/em&gt;（一般にファイルと反復可能ファイル）はチャンクエンコードされ、Content-Lengthの代わりにTransfer-Encodingヘッダーが自動的に設定されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b8df36b7b079d2ceeb7784e1710bf797f0f853e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; contains neither Content-Length nor Transfer-Encoding, but there is a request body, one of those header fields will be added automatically. If &lt;em&gt;body&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the Content-Length header is set to &lt;code&gt;0&lt;/code&gt; for methods that expect a body (&lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, and &lt;code&gt;PATCH&lt;/code&gt;). If &lt;em&gt;body&lt;/em&gt; is a string or a bytes-like object that is not also a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file&lt;/a&gt;, the Content-Length header is set to its length. Any other type of &lt;em&gt;body&lt;/em&gt; (files and iterables in general) will be chunk-encoded, and the Transfer-Encoding header will automatically be set instead of Content-Length.</source>
          <target state="translated">If &lt;em&gt;headers&lt;/em&gt; contains neither Content-Length nor Transfer-Encoding, but there is a request body, one of those header fields will be added automatically. If &lt;em&gt;body&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; , the Content-Length header is set to &lt;code&gt;0&lt;/code&gt; for methods that expect a body ( &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , and &lt;code&gt;PATCH&lt;/code&gt; ). If &lt;em&gt;body&lt;/em&gt; is a string or a bytes-like object that is not also a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file&lt;/a&gt;, the Content-Length header is set to its length. Any other type of &lt;em&gt;body&lt;/em&gt; (files and iterables in general) will be chunk-encoded, and the Transfer-Encoding header will automatically be set instead of Content-Length.</target>
        </trans-unit>
        <trans-unit id="5623776bc8cb206e64b194eac78038ac0ca5ac63" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; is specified and is a list of strings of the form &lt;code&gt;headername: headervalue&lt;/code&gt; or a list of &lt;code&gt;header&lt;/code&gt; objects (distinguished from strings by having a &lt;code&gt;name&lt;/code&gt; attribute), add the headers to &lt;em&gt;msg&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;ヘッダが&lt;/em&gt;指定されたフォームの文字列のリストである &lt;code&gt;headername: headervalue&lt;/code&gt; 又はリスト &lt;code&gt;header&lt;/code&gt; （持つことで文字列と区別オブジェクト &lt;code&gt;name&lt;/code&gt; 属性）が、にヘッダーを追加&lt;em&gt;MSG&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="67f11944e8694918226bb92f8c98cd866fee3ff0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;hkey&lt;/em&gt; is not closed using this method (or via &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;hkey.Close()&lt;/code&gt;&lt;/a&gt;), it is closed when the &lt;em&gt;hkey&lt;/em&gt; object is destroyed by Python.</source>
          <target state="translated">場合&lt;em&gt;HKEYは&lt;/em&gt;この方法を使用して閉じられていない（または経由&lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;hkey.Close()&lt;/code&gt; &lt;/a&gt;）において、それが閉じている&lt;em&gt;HKEYの&lt;/em&gt;オブジェクトはPythonによって破壊されます。</target>
        </trans-unit>
        <trans-unit id="0fe3a2ba8d8de975e9e62d14d77fcd64824c3a2c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is a sequence of strings, the TCP server is bound to all network interfaces specified by the sequence.</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt;が文字列のシーケンスである場合、TCPサーバーはシーケンスで指定されたすべてのネットワークインターフェイスにバインドされます。</target>
        </trans-unit>
        <trans-unit id="3f345f9c27305214c887b3eec3da087bc1be8192" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is a string, the TCP server is bound to a single network interface specified by &lt;em&gt;host&lt;/em&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、ホストが&lt;/em&gt;文字列で、TCPサーバーはで指定された単一のネットワークインタフェースにバインドされ&lt;em&gt;たホスト&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f9d505cd78099d9626b9c1d857032185127ef87" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is an empty string or &lt;code&gt;None&lt;/code&gt;, all interfaces are assumed and a list of multiple sockets will be returned (most likely one for IPv4 and another one for IPv6).</source>
          <target state="translated">場合&lt;em&gt;ホストは&lt;/em&gt;空の文字列またはある &lt;code&gt;None&lt;/code&gt; 、すべてのインターフェイスは、（ほとんどのIPv4用とIPv6の別のもの）と仮定され、複数のソケットのリストが返されます。</target>
        </trans-unit>
        <trans-unit id="7cc492cbe67d58bcc667802df9fc3fe37624b350" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;i&lt;/em&gt; or &lt;em&gt;j&lt;/em&gt; is negative, the index is relative to the end of sequence &lt;em&gt;s&lt;/em&gt;: &lt;code&gt;len(s) + i&lt;/code&gt; or &lt;code&gt;len(s) + j&lt;/code&gt; is substituted. But note that &lt;code&gt;-0&lt;/code&gt; is still &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;I&lt;/em&gt;または&lt;em&gt;jが&lt;/em&gt;負であり、インデックスは、シーケンスの終わりに相対的である&lt;em&gt;S&lt;/em&gt;： &lt;code&gt;len(s) + i&lt;/code&gt; または &lt;code&gt;len(s) + j&lt;/code&gt; 置換されています。ただし、 &lt;code&gt;-0&lt;/code&gt; はまだ &lt;code&gt;0&lt;/code&gt; であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="44afe41d193d3ce2b1d38185232d5624b2955990" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ignore&lt;/em&gt; is given, it must be a callable that will receive as its arguments the directory being visited by &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, and a list of its contents, as returned by &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;. Since &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; is called recursively, the &lt;em&gt;ignore&lt;/em&gt; callable will be called once for each directory that is copied. The callable must return a sequence of directory and file names relative to the current directory (i.e. a subset of the items in its second argument); these names will then be ignored in the copy process. &lt;a href=&quot;#shutil.ignore_patterns&quot;&gt;&lt;code&gt;ignore_patterns()&lt;/code&gt;&lt;/a&gt; can be used to create such a callable that ignores names based on glob-style patterns.</source>
          <target state="translated">場合は&lt;em&gt;無視&lt;/em&gt;与えられ、それがが訪問されているディレクトリの引数として受け取ります呼び出し可能でなければなりません&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;で返されると、その内容のリスト&lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt;。以来&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;、再帰的に呼び出され&lt;em&gt;、無視&lt;/em&gt;呼び出し可能がコピーされるディレクトリごとに一度呼び出されます。呼び出し可能オブジェクトは、現在のディレクトリ（つまり、2番目の引数の項目のサブセット）に関連する一連のディレクトリとファイル名を返す必要があります。これらの名前は、コピープロセスでは無視されます。&lt;a href=&quot;#shutil.ignore_patterns&quot;&gt; &lt;code&gt;ignore_patterns()&lt;/code&gt; &lt;/a&gt;を使用して、globスタイルのパターンに基づく名前を無視するような呼び出し可能オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="d785f3192b45198013e900cff1faf46eb9fbd317" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ignore_zeros&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, treat an empty block as the end of the archive. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, skip empty (and invalid) blocks and try to get as many members as possible. This is only useful for reading concatenated or damaged archives.</source>
          <target state="translated">&lt;em&gt;ignore_zeros&lt;/em&gt;が&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; の&lt;/a&gt;場合、空のブロックをアーカイブの終わりとして扱います。&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、空の（および無効な）ブロックをスキップして、できるだけ多くのメンバーを取得しようとします。これは、連結または破損したアーカイブを読み取る場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="a4a7904c070e056ee4cfdf2fa61877eb76ea87e7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (exclude), ignore memory blocks allocated in a file with a name matching &lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt;&lt;code&gt;filename_pattern&lt;/code&gt;&lt;/a&gt; at line number &lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;包括的で&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （除外）、名前マッチングのファイルに割り当てられたメモリ・ブロックを無視&lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt; &lt;code&gt;filename_pattern&lt;/code&gt; &lt;/a&gt;行番号で&lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b63248eefccbe6a3d667aec993979939e6087d1e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (exclude), match memory blocks not allocated in the address space &lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; （除外）の場合、アドレススペース&lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;割り当てられていないメモリブロックを照合します。</target>
        </trans-unit>
        <trans-unit id="49de2929ffeb92d24b9cb57a7b7a1ea592c5170b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (include), match memory blocks allocated in the address space &lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （インクルード）の場合、アドレススペース&lt;a href=&quot;#tracemalloc.DomainFilter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;割り当てられたメモリブロックを照合します。</target>
        </trans-unit>
        <trans-unit id="0dcfc5893b04256daaa03f0059c6ea1a4e39d096" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;inclusive&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (include), only match memory blocks allocated in a file with a name matching &lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt;&lt;code&gt;filename_pattern&lt;/code&gt;&lt;/a&gt; at line number &lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;inclusive&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; （インクルード）の場合、ファイルに割り当てられたメモリブロックと、名前が&lt;a href=&quot;#tracemalloc.Filter.filename_pattern&quot;&gt; &lt;code&gt;filename_pattern&lt;/code&gt; &lt;/a&gt;で行番号&lt;a href=&quot;#tracemalloc.Filter.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; に&lt;/a&gt;一致するファイルにのみ一致します。</target>
        </trans-unit>
        <trans-unit id="58fc395684d347d785cfee92daad9292f6d2e8a8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;indent&lt;/em&gt; is a non-negative integer or string, then JSON array elements and object members will be pretty-printed with that indent level. An indent level of 0, negative, or &lt;code&gt;&quot;&quot;&lt;/code&gt; will only insert newlines. &lt;code&gt;None&lt;/code&gt; (the default) selects the most compact representation. Using a positive integer indent indents that many spaces per level. If &lt;em&gt;indent&lt;/em&gt; is a string (such as &lt;code&gt;&quot;\t&quot;&lt;/code&gt;), that string is used to indent each level.</source>
          <target state="translated">場合&lt;em&gt;インデントは、&lt;/em&gt;非負整数または文字列であり、その後、JSONの配列要素とオブジェクトメンバはそのインデントレベルでかなり-印刷されます。インデントレベルが0、負、または &lt;code&gt;&quot;&quot;&lt;/code&gt; の場合、改行のみが挿入されます。 &lt;code&gt;None&lt;/code&gt; （デフォルト）は、最もコンパクトな表現を選択します。正の整数のインデントを使用すると、レベルごとに多くのスペースがインデントされます。場合&lt;em&gt;インデントは、&lt;/em&gt;（例えば、文字列である &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ）、その文字列は、各レベルをインデントするために使用されます。</target>
        </trans-unit>
        <trans-unit id="86444e3b248e51f216f473f027a72d0450d6ad4e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;indent&lt;/em&gt; is a non-negative integer or string, then the tree will be pretty-printed with that indent level. An indent level of 0, negative, or &lt;code&gt;&quot;&quot;&lt;/code&gt; will only insert newlines. &lt;code&gt;None&lt;/code&gt; (the default) selects the single line representation. Using a positive integer indent indents that many spaces per level. If &lt;em&gt;indent&lt;/em&gt; is a string (such as &lt;code&gt;&quot;\t&quot;&lt;/code&gt;), that string is used to indent each level.</source>
          <target state="translated">If &lt;em&gt;indent&lt;/em&gt; is a non-negative integer or string, then the tree will be pretty-printed with that indent level. An indent level of 0, negative, or &lt;code&gt;&quot;&quot;&lt;/code&gt; will only insert newlines. &lt;code&gt;None&lt;/code&gt; (the default) selects the single line representation. Using a positive integer indent indents that many spaces per level. If &lt;em&gt;indent&lt;/em&gt; is a string (such as &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ), that string is used to indent each level.</target>
        </trans-unit>
        <trans-unit id="685f4df3ebb7bcdd656a69b4b08c67818137a416" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;infile&lt;/em&gt; is not specified, read from &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;infile&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="af42a72d9390faa93a1048c54ee6e3245c21c2a3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;initializer&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; then each worker process will call &lt;code&gt;initializer(*initargs)&lt;/code&gt; when it starts.</source>
          <target state="translated">&lt;em&gt;初期化子&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、各ワーカープロセスは起動時に &lt;code&gt;initializer(*initargs)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fc855a607663f5eac05d5c21762309db29ce88bf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;input&lt;/em&gt; is given, it is passed to the &lt;a href=&quot;#http.cookies.BaseCookie.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">場合&lt;em&gt;入力が&lt;/em&gt;与えられ、それに渡される&lt;a href=&quot;#http.cookies.BaseCookie.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="2b8380ea7e230485aa00a5b7a9d5e448bafe1787" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isjunk&lt;/em&gt; was omitted or &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#difflib.SequenceMatcher.find_longest_match&quot;&gt;&lt;code&gt;find_longest_match()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;(i, j, k)&lt;/code&gt; such that &lt;code&gt;a[i:i+k]&lt;/code&gt; is equal to &lt;code&gt;b[j:j+k]&lt;/code&gt;, where &lt;code&gt;alo
&amp;lt;= i &amp;lt;= i+k &amp;lt;= ahi&lt;/code&gt; and &lt;code&gt;blo &amp;lt;= j &amp;lt;= j+k &amp;lt;= bhi&lt;/code&gt;. For all &lt;code&gt;(i', j',
k')&lt;/code&gt; meeting those conditions, the additional conditions &lt;code&gt;k &amp;gt;= k'&lt;/code&gt;, &lt;code&gt;i
&amp;lt;= i'&lt;/code&gt;, and if &lt;code&gt;i == i'&lt;/code&gt;, &lt;code&gt;j &amp;lt;= j'&lt;/code&gt; are also met. In other words, of all maximal matching blocks, return one that starts earliest in &lt;em&gt;a&lt;/em&gt;, and of all those maximal matching blocks that start earliest in &lt;em&gt;a&lt;/em&gt;, return the one that starts earliest in &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;isjunk&lt;/em&gt;が省略されたか &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;#difflib.SequenceMatcher.find_longest_match&quot;&gt; &lt;code&gt;find_longest_match()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;a[i:i+k]&lt;/code&gt; が &lt;code&gt;b[j:j+k]&lt;/code&gt; と等しくなるように &lt;code&gt;(i, j, k)&lt;/code&gt; ）を返します。ここで、 &lt;code&gt;alo &amp;lt;= i &amp;lt;= i+k &amp;lt;= ahi&lt;/code&gt; and &lt;code&gt;blo &amp;lt;= j &amp;lt;= j+k &amp;lt;= bhi&lt;/code&gt; です。これらの条件を満たすすべての &lt;code&gt;(i', j', k')&lt;/code&gt; について、追加の条件 &lt;code&gt;k &amp;gt;= k'&lt;/code&gt; 、 &lt;code&gt;i &amp;lt;= i'&lt;/code&gt; 、および &lt;code&gt;i == i'&lt;/code&gt; 場合、 &lt;code&gt;j &amp;lt;= j'&lt;/code&gt; も満たされます。言い換えれば、すべての最大のマッチングブロックで最初に始まる復帰1の、そして最も早い開始すべてのそれらの最大のマッチングブロックの&lt;em&gt;Aを&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;、&lt;em&gt;bで&lt;/em&gt;最初に始まるものを返します。</target>
        </trans-unit>
        <trans-unit id="75fee0a269e631f121c00c49961541eaff1b3b2d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isjunk&lt;/em&gt; was provided, first the longest matching block is determined as above, but with the additional restriction that no junk element appears in the block. Then that block is extended as far as possible by matching (only) junk elements on both sides. So the resulting block never matches on junk except as identical junk happens to be adjacent to an interesting match.</source>
          <target state="translated">&lt;em&gt;isjunk&lt;/em&gt;が提供された場合、最初に上記のように最長一致ブロックが決定されますが、ブロックにジャンク要素が表示されないという追加の制限があります。次に、そのブロックは、両側のジャンク要素（のみ）を照合することによって、可能な限り拡張されます。したがって、同じジャンクがたまたま興味深いマッチに隣接している場合を除いて、結果のブロックはジャンクにマッチしません。</target>
        </trans-unit>
        <trans-unit id="ab8363bacc86dbccdda686c60e9f57e64899a0a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is not specified, returns root children.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されていない場合、ルートの子を返します。</target>
        </trans-unit>
        <trans-unit id="640e4676019d2f35b4e680f21a70d725650c2978" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is specified, returns 1 or 0 depending on whether the specified &lt;em&gt;item&lt;/em&gt; has the given &lt;em&gt;tagname&lt;/em&gt;. Otherwise, returns a list of all items that have the specified tag.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されている場合、指定された&lt;em&gt;アイテム&lt;/em&gt;に指定された&lt;em&gt;tagname&lt;/em&gt;があるかどうかに応じて、1または0を返します。それ以外の場合は、指定されたタグを持つすべてのアイテムのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e440a41e05f93e2a1c6c6399b8430876ac4585da" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;item&lt;/em&gt; is specified, sets the focus item to &lt;em&gt;item&lt;/em&gt;. Otherwise, returns the current focus item, or &amp;lsquo;&amp;rsquo; if there is none.</source>
          <target state="translated">&lt;em&gt;item&lt;/em&gt;が指定されている場合、フォーカス項目を&lt;em&gt;itemに&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。それ以外の場合は、現在のフォーカス項目を返すか、存在しない場合は ''を返します。</target>
        </trans-unit>
        <trans-unit id="4bf186b875e926737f447fba52ea416adfe07ffd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;k&lt;/em&gt; is not specified or is None, then &lt;em&gt;k&lt;/em&gt; defaults to &lt;em&gt;n&lt;/em&gt; and the function returns &lt;code&gt;n!&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;kが&lt;/em&gt;指定されるか、またはNoneですされていない場合、&lt;em&gt;k個&lt;/em&gt;にデフォルトを&lt;em&gt;n個&lt;/em&gt;と関数が戻る &lt;code&gt;n!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e0d95fc7b381f24c17900b74659214f4eeca1c2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;keepends&lt;/em&gt; is false line-endings will be stripped from the lines returned.</source>
          <target state="translated">&lt;em&gt;keepends&lt;/em&gt;がfalseの場合、返される行から&lt;em&gt;行末&lt;/em&gt;が削除されます。</target>
        </trans-unit>
        <trans-unit id="344b03a8bbb6978f881befbb3ab7e00dbc466836" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is a handle returned by &lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt;&lt;code&gt;ConnectRegistry()&lt;/code&gt;&lt;/a&gt;, then the path specified in &lt;em&gt;file_name&lt;/em&gt; is relative to the remote computer.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;が&lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt; &lt;code&gt;ConnectRegistry()&lt;/code&gt; &lt;/a&gt;によって返されたハンドルである場合、&lt;em&gt;file_name&lt;/em&gt;で指定されたパスはリモートコンピューターからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="ab3be292f079b8eebf6e1f757e8daea0ea1d6b83" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is in the dictionary, remove it and return its value, else return &lt;em&gt;default&lt;/em&gt;. If &lt;em&gt;default&lt;/em&gt; is not given and &lt;em&gt;key&lt;/em&gt; is not in the dictionary, a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;がディクショナリにある場合は、削除してその値を返し&lt;em&gt;ます&lt;/em&gt;。そうでない&lt;em&gt;場合はdefaultを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。場合は&lt;em&gt;、デフォルトが&lt;/em&gt;与えられていないとされ&lt;em&gt;たキーが&lt;/em&gt;辞書にない、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="aa8380eba14f04ad4419f7fe956d6020b048af57" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is in the dictionary, return its value. If not, insert &lt;em&gt;key&lt;/em&gt; with a value of &lt;em&gt;default&lt;/em&gt; and return &lt;em&gt;default&lt;/em&gt;. &lt;em&gt;default&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、キーが&lt;/em&gt;辞書にある、その値を返します。そうでない場合、&lt;em&gt;デフォルトの&lt;/em&gt;値で&lt;em&gt;キー&lt;/em&gt;を挿入し、&lt;em&gt;デフォルト&lt;/em&gt;を返し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;デフォルトの&lt;/em&gt;デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4d7a7b3cf6e17b5ad90262940a29bd912e9ee0f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; is one of the predefined keys, &lt;em&gt;sub_key&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;. In that case, the handle returned is the same key handle passed in to the function.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt;が事前定義されたキーの1つである場合、&lt;em&gt;sub_key&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; になることがあります。その場合、返されるハンドルは、関数に渡されるキーハンドルと同じです。</target>
        </trans-unit>
        <trans-unit id="35e9d157870368f01d939d30e1c0a35b6624a0fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; represents a key on a remote computer, the path described by &lt;em&gt;file_name&lt;/em&gt; is relative to the remote computer. The caller of this method must possess the &lt;code&gt;SeBackupPrivilege&lt;/code&gt; security privilege. Note that privileges are different than permissions &amp;ndash; see the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;Conflicts Between User Rights and Permissions documentation&lt;/a&gt; for more details.</source>
          <target state="translated">keyがリモートコンピューター上の&lt;em&gt;キーを&lt;/em&gt;表す場合、&lt;em&gt;file_name&lt;/em&gt;で記述されるパスはリモートコンピューターからの相対パスです。このメソッドの呼び出し元は、 &lt;code&gt;SeBackupPrivilege&lt;/code&gt; セキュリティ特権を所有している必要があります。特権はアクセス許可とは異なることに注意してください。詳細については&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx&quot;&gt;、ユーザーの権利とアクセス許可の競合に関するドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="48e0a5a607822047e064bb2a97449353075f69c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are provided, they are used to create an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;キーファイル&lt;/em&gt;と&lt;em&gt;certfileには&lt;/em&gt;提供され、彼らが作成するために使用されている&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e59ed370148bc2a0a46b54a3228d31bb0bd9d0f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the column option values. If &lt;em&gt;option&lt;/em&gt; is specified then the value for that &lt;em&gt;option&lt;/em&gt; is returned. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、列オプション値のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値&lt;em&gt;オプションが&lt;/em&gt;返されます。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="22c41db084d38f1f4e00c46ef68becd286a4c27a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the heading option values. If &lt;em&gt;option&lt;/em&gt; is specified then the value for that &lt;em&gt;option&lt;/em&gt; is returned. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、見出しオプション値のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値&lt;em&gt;オプションが&lt;/em&gt;返されます。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="4d77b28bc9353645c16eb77f2989195d66a0666b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dict of the option settings for &lt;em&gt;tagname&lt;/em&gt;. If &lt;em&gt;option&lt;/em&gt; is specified, returns the value for that &lt;em&gt;option&lt;/em&gt; for the specified &lt;em&gt;tagname&lt;/em&gt;. Otherwise, sets the options to the corresponding values for the given &lt;em&gt;tagname&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、&lt;em&gt;tagnameの&lt;/em&gt;オプション設定のdictを返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのための値を返す&lt;em&gt;オプション&lt;/em&gt;指定のための&lt;em&gt;タグ名を&lt;/em&gt;。それ以外の場合は、オプションを指定された&lt;em&gt;tagnameの&lt;/em&gt;対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="23258f5a93a28264e5494954dc925f4fb9fe94ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;kw&lt;/em&gt; is not given, returns a dictionary of the tab option values. If &lt;em&gt;option&lt;/em&gt; is specified, returns the value of that &lt;em&gt;option&lt;/em&gt;. Otherwise, sets the options to the corresponding values.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt;が指定されていない場合、タブオプション値の辞書を返します。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、その値を返す&lt;em&gt;オプションを&lt;/em&gt;。それ以外の場合は、オプションを対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="5223d4b1bee76d3b490192f2e0c760f67a403d03" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;legacy&lt;/em&gt; is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python. The default is to write files to their &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; locations and names, which allows byte-code files from multiple versions of Python to coexist.</source>
          <target state="translated">場合&lt;em&gt;遺産が&lt;/em&gt;真である、バイトコードファイルはPythonの別のバージョンで作成されたバイトコードファイルを上書きする可能性がある、彼らの遺産の場所と名前に書き込まれます。デフォルトでは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147の&lt;/strong&gt;&lt;/a&gt;場所と名前にファイルを書き込みます。これにより、Pythonの複数のバージョンのバイトコードファイルを共存させることができます。</target>
        </trans-unit>
        <trans-unit id="edac46e04363a344725a2ab2e33375a697b6340a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;legacy&lt;/em&gt; is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python. The default is to write files to their &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; locations and names, which allows byte-code files from multiple versions of Python to coexist.</source>
          <target state="translated">場合&lt;em&gt;遺産が&lt;/em&gt;真である、バイトコードファイルはPythonの別のバージョンで作成されたバイトコードファイルを上書きする可能性がある、彼らの遺産の場所と名前に書き込まれます。デフォルトでは、&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3147の&lt;/strong&gt;&lt;/a&gt;場所と名前にファイルを書き込みます。これにより、Pythonの複数のバージョンのバイトコードファイルを共存させることができます。</target>
        </trans-unit>
        <trans-unit id="1f4f479018d14901ee93b65aaa185ab78cef0218" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is supplied, only this many frames are taken from &lt;em&gt;frame_gen&lt;/em&gt;. If &lt;em&gt;lookup_lines&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the returned &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects will not have read their lines in yet, making the cost of creating the &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; cheaper (which may be valuable if it may not actually get formatted). If &lt;em&gt;capture_locals&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; the local variables in each &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; are captured as object representations.</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt;が指定されている場合、この数のフレームのみが&lt;em&gt;frame_gen&lt;/em&gt;から&lt;em&gt;取得&lt;/em&gt;され&lt;em&gt;ます&lt;/em&gt;。場合&lt;em&gt;lookup_linesが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、返さ&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;オブジェクトは作成のコストなって、まだで自分のラインを読んだことがないであろう&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; を&lt;/a&gt;安く（それは実際にフォーマットされないことがあれば貴重であるかもしれません）。場合&lt;em&gt;capture_localsが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; それぞれのローカル変数&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; は、&lt;/a&gt;オブジェクト表現として取り込まれます。</target>
        </trans-unit>
        <trans-unit id="9ab87e10d3d835d14c47f616a3c51abbf809ee1f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_buffering&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;flush()&lt;/code&gt; is implied when a call to write contains a newline character or a carriage return.</source>
          <target state="translated">場合&lt;em&gt;line_bufferingが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、 &lt;code&gt;flush()&lt;/code&gt; 書き込みの呼び出しが改行文字やキャリッジリターンが含まれている場合に暗示されます。</target>
        </trans-unit>
        <trans-unit id="723be276409e68c389387a7fa507f58dd05a3b3c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_info&lt;/em&gt; is true, line number information will be included for all terminal tokens as a third element of the list representing the token. Note that the line number provided specifies the line on which the token &lt;em&gt;ends&lt;/em&gt;. This information is omitted if the flag is false or omitted.</source>
          <target state="translated">場合&lt;em&gt;line_infoが&lt;/em&gt;真である、行番号情報は、トークンを表すリストの3番目の要素として全ての端末のトークンのために含まれます。提供される行番号は、トークンが&lt;em&gt;終了&lt;/em&gt;する行を指定することに注意してください。フラグがfalseまたは省略されている場合、この情報は省略されます。</target>
        </trans-unit>
        <trans-unit id="a4aca6b106e2f5c8314da4294c104be01489c777" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;line_info&lt;/em&gt; is true, line number information will be included for all terminal tokens as a third element of the list representing the token. This information is omitted if the flag is false or omitted.</source>
          <target state="translated">場合&lt;em&gt;line_infoが&lt;/em&gt;真である、行番号情報は、トークンを表すリストの3番目の要素として全ての端末のトークンのために含まれます。フラグがfalseまたは省略されている場合、この情報は省略されます。</target>
        </trans-unit>
        <trans-unit id="33fc9ad31dc069d4994bc5cc54acaf1808e638de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;linesep&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, use it as the separator character between all the lines of the flattened message. If &lt;em&gt;linesep&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), use the value specified in the &lt;em&gt;policy&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;linesep&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それをフラット化されたメッセージのすべての行の間の区切り文字として使用します。場合&lt;em&gt;linesepは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; （デフォルト）に指定された値を使用&lt;em&gt;ポリシーを&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1569426afcc62ae89d6a7fcd1beae10acbe198a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;locale&lt;/em&gt; is given and not &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; modifies the locale setting for the &lt;em&gt;category&lt;/em&gt;. The available categories are listed in the data description below. &lt;em&gt;locale&lt;/em&gt; may be a string, or an iterable of two strings (language code and encoding). If it&amp;rsquo;s an iterable, it&amp;rsquo;s converted to a locale name using the locale aliasing engine. An empty string specifies the user&amp;rsquo;s default settings. If the modification of the locale fails, the exception &lt;a href=&quot;#locale.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised. If successful, the new locale setting is returned.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; でなく&lt;em&gt;locale&lt;/em&gt;が指定されている場合、&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;カテゴリの&lt;/em&gt;ロケール設定を変更します。利用可能なカテゴリは、以下のデータの説明にリストされています。&lt;em&gt;ロケール&lt;/em&gt;は文字列、または2つの文字列（言語コードとエンコーディング）のイテラブルです。イテラブルの場合は、ロケールエイリアスエンジンを使用してロケール名に変換されます。空の文字列は、ユーザーのデフォルト設定を指定します。ロケールの変更に失敗すると、例外&lt;a href=&quot;#locale.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;が発生します。成功すると、新しいロケール設定が返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="951c3928ce25063e5377b210aad3f1281db3bfa5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;locale&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the current setting for &lt;em&gt;category&lt;/em&gt; is returned.</source>
          <target state="translated">場合は&lt;em&gt;、ロケールが&lt;/em&gt;省略されているか、 &lt;code&gt;None&lt;/code&gt; 、現在の設定&lt;em&gt;カテゴリが&lt;/em&gt;返されません。</target>
        </trans-unit>
        <trans-unit id="9f4491f562e18db7a7f85c5110ce868482f309ac" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;localedir&lt;/em&gt; is not given, then the default system locale directory is used. &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; If &lt;em&gt;languages&lt;/em&gt; is not given, then the following environment variables are searched: &lt;code id=&quot;index-5&quot;&gt;LANGUAGE&lt;/code&gt;, &lt;code id=&quot;index-6&quot;&gt;LC_ALL&lt;/code&gt;, &lt;code id=&quot;index-7&quot;&gt;LC_MESSAGES&lt;/code&gt;, and &lt;code id=&quot;index-8&quot;&gt;LANG&lt;/code&gt;. The first one returning a non-empty value is used for the &lt;em&gt;languages&lt;/em&gt; variable. The environment variables should contain a colon separated list of languages, which will be split on the colon to produce the expected list of language code strings.</source>
          <target state="translated">&lt;em&gt;localedir&lt;/em&gt;が指定されていない場合、デフォルトのシステムロケールディレクトリが使用されます。&lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2 &lt;/a&gt;&lt;em&gt;言語&lt;/em&gt;が指定されていない場合、次の環境変数が検索されます： &lt;code id=&quot;index-5&quot;&gt;LANGUAGE&lt;/code&gt; 、 &lt;code id=&quot;index-6&quot;&gt;LC_ALL&lt;/code&gt; 、 &lt;code id=&quot;index-7&quot;&gt;LC_MESSAGES&lt;/code&gt; 、および &lt;code id=&quot;index-8&quot;&gt;LANG&lt;/code&gt; 。空でない値を返す最初のものが&lt;em&gt;言語&lt;/em&gt;変数に使用されます。環境変数には、コロンで区切られた言語のリストが含まれている必要があります。コロンで区切られて、言語コード文字列の予期されるリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="a0d295e26c689b54481242876c86a7d434af28e8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;localedir&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, then the current binding for &lt;em&gt;domain&lt;/em&gt; is returned. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;localedir&lt;/em&gt;が省略されるか &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;ドメイン&lt;/em&gt;の現在のバインディングが返されます。&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfea24b57f7d4e4b61af9826d1014c7238d0a2c5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then a new lock object is created to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object then that will be used to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then access to the returned object will not be automatically protected by a lock, so it will not necessarily be &amp;ldquo;process-safe&amp;rdquo;.</source>
          <target state="translated">場合は&lt;em&gt;ロックが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、新しいロックオブジェクトは値へのアクセスを同期するために作成されます。場合は&lt;em&gt;ロックが&lt;/em&gt;ある&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトは、その値へのアクセスを同期するために使用されます。&lt;em&gt;ロック&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、返されたオブジェクトへのアクセスはロックによって自動的に保護されないため、必ずしも「プロセスセーフ」ではありません。</target>
        </trans-unit>
        <trans-unit id="fb5a29a93024c0c287ced20dc12603ed825400c5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) then a new recursive lock object is created to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object then that will be used to synchronize access to the value. If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then access to the returned object will not be automatically protected by a lock, so it will not necessarily be &amp;ldquo;process-safe&amp;rdquo;.</source>
          <target state="translated">場合は&lt;em&gt;ロックが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）、新しい再帰的なロックオブジェクトは値へのアクセスを同期するために作成されます。場合は&lt;em&gt;ロックが&lt;/em&gt;ある&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトは、その値へのアクセスを同期するために使用されます。&lt;em&gt;ロック&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、返されたオブジェクトへのアクセスはロックによって自動的に保護されないため、必ずしも「プロセスセーフ」ではありません。</target>
        </trans-unit>
        <trans-unit id="2602fc87b0876ba602ab00278259ea7a79f410d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is specified then it should be a &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object from &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;が指定されている場合は、&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="bab9a02062082eb583249e7a6e16be3658394be6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lock&lt;/em&gt; is supplied then it should be a proxy for a &lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;ロック&lt;/em&gt;が提供される場合、それは&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; &lt;/a&gt;オブジェクトのプロキシである必要があります。</target>
        </trans-unit>
        <trans-unit id="590cdff25c02f75a07edf4cd1b5590e71db1db65" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt;&lt;code&gt;get_running_loop()&lt;/code&gt;&lt;/a&gt; is used for getting current loop.</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在のループを取得するために&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt; &lt;code&gt;get_running_loop()&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="937d955e2d780cdb674a48ea2b8300a8b1629db0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt;&lt;code&gt;get_event_loop()&lt;/code&gt;&lt;/a&gt; function is used to get the current loop.</source>
          <target state="translated">場合は&lt;em&gt;ループが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、&lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt; &lt;code&gt;get_event_loop()&lt;/code&gt; &lt;/a&gt;関数は、現在のループを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c63129023a997a153b9588c1c5afcfaec61cc024" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;loop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt;&lt;code&gt;get_running_loop()&lt;/code&gt;&lt;/a&gt; is used to get the current loop.</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、現在のループを取得するために&lt;a href=&quot;asyncio-eventloop#asyncio.get_running_loop&quot;&gt; &lt;code&gt;get_running_loop()&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="34f3c105305570e37994220800780f4e1998f389" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;max_length&lt;/em&gt; is nonnegative, returns at most &lt;em&gt;max_length&lt;/em&gt; bytes of decompressed data. If this limit is reached and further output can be produced, the &lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;False&lt;/code&gt;. In this case, the next call to &lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; may provide &lt;em&gt;data&lt;/em&gt; as &lt;code&gt;b''&lt;/code&gt; to obtain more of the output.</source>
          <target state="translated">&lt;em&gt;max_length&lt;/em&gt;が負でない場合、解凍されたデータの最大&lt;em&gt;max_length&lt;/em&gt;バイトを返します。この制限に達し、さらに出力を生成できる場合、&lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;False&lt;/code&gt; に設定されます。この場合、次に&lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; を&lt;/a&gt;呼び出すと、より多くの出力を取得するために、&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;b''&lt;/code&gt; として提供されます。</target>
        </trans-unit>
        <trans-unit id="fe10ae05e553743d5c3d20d35ac3316877086f58" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;max_length&lt;/em&gt; is nonnegative, returns at most &lt;em&gt;max_length&lt;/em&gt; bytes of decompressed data. If this limit is reached and further output can be produced, the &lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;False&lt;/code&gt;. In this case, the next call to &lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; may provide &lt;em&gt;data&lt;/em&gt; as &lt;code&gt;b''&lt;/code&gt; to obtain more of the output.</source>
          <target state="translated">&lt;em&gt;max_length&lt;/em&gt;が負でない場合、解凍されたデータの最大&lt;em&gt;max_length&lt;/em&gt;バイトを返します。この制限に達し、さらに出力を生成できる場合、&lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;False&lt;/code&gt; に設定されます。この場合、次に&lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; を&lt;/a&gt;呼び出すと、より多くの出力を取得するために、&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;b''&lt;/code&gt; として提供されます。</target>
        </trans-unit>
        <trans-unit id="10be81d98bdd051152d5d0719d26439da8df03a1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxheaderlen&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, refold any header lines that are longer than &lt;em&gt;maxheaderlen&lt;/em&gt;, or if &lt;code&gt;0&lt;/code&gt;, do not rewrap any headers. If &lt;em&gt;manheaderlen&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), wrap headers and other message lines according to the &lt;em&gt;policy&lt;/em&gt; settings.</source>
          <target state="translated">&lt;em&gt;maxheaderlen&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合は、&lt;em&gt;maxheaderlen&lt;/em&gt;より長いヘッダー行を再折りたたみするか、 &lt;code&gt;0&lt;/code&gt; の場合、ヘッダーを再ラップしないでください。場合&lt;em&gt;manheaderlenは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; に応じて（デフォルト）、ラップヘッダーおよびその他のメッセージ行&lt;em&gt;ポリシー&lt;/em&gt;の設定。</target>
        </trans-unit>
        <trans-unit id="422ba7aa2a79e6f2f30ccbe4d45f0fb30ec13a07" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxlen&lt;/em&gt; is not specified or is &lt;code&gt;None&lt;/code&gt;, deques may grow to an arbitrary length. Otherwise, the deque is bounded to the specified maximum length. Once a bounded length deque is full, when new items are added, a corresponding number of items are discarded from the opposite end. Bounded length deques provide functionality similar to the &lt;code&gt;tail&lt;/code&gt; filter in Unix. They are also useful for tracking transactions and other pools of data where only the most recent activity is of interest.</source>
          <target state="translated">場合&lt;em&gt;のmaxlenが&lt;/em&gt;指定されたりしませんされていない &lt;code&gt;None&lt;/code&gt; 、dequeのは、任意の長さに成長することがあります。それ以外の場合、両端キューは指定された最大長に制限されます。有限長の両端キューがいっぱいになると、新しいアイテムが追加されると、対応する数のアイテムが反対側から破棄されます。有限長の両端キューは、Unixの &lt;code&gt;tail&lt;/code&gt; フィルターと同様の機能を提供します。また、最新のアクティビティのみが対象となるトランザクションやその他のデータプールの追跡にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="2aec9f480deb51e518e61c9512cb8347bbb35566" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxlength&lt;/em&gt; is specified and the message is longer than &lt;em&gt;maxlength&lt;/em&gt; then &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised and the connection will no longer be readable.</source>
          <target state="translated">場合&lt;em&gt;MAXLENGTHが&lt;/em&gt;指定され、メッセージがより長いです&lt;em&gt;MAXLENGTH&lt;/em&gt;その後、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のが&lt;/a&gt;提起されていないとの接続はもはや読みやすいでしょう。</target>
        </trans-unit>
        <trans-unit id="fdda2ebb0037d0b6d351503e46dedbec8240b68d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxsize&lt;/em&gt; is less than or equal to zero, the queue size is infinite. If it is an integer greater than &lt;code&gt;0&lt;/code&gt;, then &lt;code&gt;await put()&lt;/code&gt; blocks when the queue reaches &lt;em&gt;maxsize&lt;/em&gt; until an item is removed by &lt;a href=&quot;#asyncio.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;maxsize&lt;/em&gt;がゼロ以下の場合、キューのサイズは無限です。それはより整数大きい場合 &lt;code&gt;0&lt;/code&gt; 、その後 &lt;code&gt;await put()&lt;/code&gt; キューが到達がときブロック&lt;em&gt;MAXSIZE&lt;/em&gt;アイテムがで削除されるまで&lt;a href=&quot;#asyncio.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d13e6738c5550a08c08c3e50baa5d941e96c9586" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxsize&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, the LRU feature is disabled and the cache can grow without bound.</source>
          <target state="translated">If &lt;em&gt;maxsize&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt; , the LRU feature is disabled and the cache can grow without bound.</target>
        </trans-unit>
        <trans-unit id="476559880ef6db18fddff1363483c9ce4ae594eb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;maxsize&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, the LRU feature is disabled and the cache can grow without bound. The LRU feature performs best when &lt;em&gt;maxsize&lt;/em&gt; is a power-of-two.</source>
          <target state="translated">&lt;em&gt;maxsize&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、LRU機能は無効になり、キャッシュは&lt;em&gt;無制限に拡張&lt;/em&gt;できます。LRU機能は、&lt;em&gt;maxsize&lt;/em&gt;が2の累乗である場合に最もよく機能します。</target>
        </trans-unit>
        <trans-unit id="fdb0dec0e620351e0bbd4aec3590e50d3841d53d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is omitted, the new instance is created in a default, empty state. If &lt;em&gt;message&lt;/em&gt; is an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, its contents are copied; furthermore, any format-specific information is converted insofar as possible if &lt;em&gt;message&lt;/em&gt; is a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance. If &lt;em&gt;message&lt;/em&gt; is a string, a byte string, or a file, it should contain an &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant message, which is read and parsed. Files should be open in binary mode, but text mode files are accepted for backward compatibility.</source>
          <target state="translated">場合は&lt;em&gt;、メッセージが&lt;/em&gt;省略され、新しいインスタンスはデフォルトで、空の状態で作成されます。場合&lt;em&gt;、メッセージが&lt;/em&gt;ある&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; の&lt;/a&gt;インスタンス、その内容がコピーされます。さらに、&lt;em&gt;メッセージ&lt;/em&gt;が&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;インスタンスである場合、フォーマット固有の情報は可能な限り変換されます。場合は&lt;em&gt;、メッセージが&lt;/em&gt;文字列、バイト列、またはファイルであり、それが含まれている必要があります&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;読み込み、解析され準拠のメッセージを、。ファイルはバイナリモードで開く必要がありますが、テキストモードのファイルは下位互換性のために受け入れられます。</target>
        </trans-unit>
        <trans-unit id="4cdc2a6c5973e55d431189d76aeebd82bf0b0c31" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;method&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the default context is returned. Otherwise &lt;em&gt;method&lt;/em&gt; should be &lt;code&gt;'fork'&lt;/code&gt;, &lt;code&gt;'spawn'&lt;/code&gt;, &lt;code&gt;'forkserver'&lt;/code&gt;. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the specified start method is not available.</source>
          <target state="translated">場合&lt;em&gt;方法は&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、デフォルトのコンテキストが返されます。それ以外の場合、&lt;em&gt;メソッド&lt;/em&gt;は &lt;code&gt;'fork'&lt;/code&gt; 、 &lt;code&gt;'spawn'&lt;/code&gt; 、 &lt;code&gt;'forkserver'&lt;/code&gt; である必要があります。指定された開始メソッドが使用できない場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ea5b1e7d5baff8f354aa38723d8e2f2c3c8b26f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;missing_ok&lt;/em&gt; is false (the default), &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is raised if the path does not exist.</source>
          <target state="translated">場合&lt;em&gt;missing_okが&lt;/em&gt; false（デフォルト）で、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; は&lt;/a&gt;パスが存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="99eaa9a1562cd18740313159312a1e81d02af31f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;missing_ok&lt;/em&gt; is true, &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; exceptions will be ignored (same behavior as the POSIX &lt;code&gt;rm -f&lt;/code&gt; command).</source>
          <target state="translated">場合&lt;em&gt;missing_okが&lt;/em&gt;真である、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; の&lt;/a&gt;例外は（POSIXと同じ動作無視される &lt;code&gt;rm -f&lt;/code&gt; コマンド）。</target>
        </trans-unit>
        <trans-unit id="ec95478d66e5bfa1b027996891cada38eb37683d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt;, this function returns the process id of the new process; if &lt;em&gt;mode&lt;/em&gt; is &lt;a href=&quot;#os.P_WAIT&quot;&gt;&lt;code&gt;P_WAIT&lt;/code&gt;&lt;/a&gt;, returns the process&amp;rsquo;s exit code if it exits normally, or &lt;code&gt;-signal&lt;/code&gt;, where &lt;em&gt;signal&lt;/em&gt; is the signal that killed the process. On Windows, the process id will actually be the process handle, so can be used with the &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;モード&lt;/em&gt;が&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; の&lt;/a&gt;場合、この関数は新しいプロセスのプロセスIDを返します。&lt;em&gt;mode&lt;/em&gt;が&lt;a href=&quot;#os.P_WAIT&quot;&gt; &lt;code&gt;P_WAIT&lt;/code&gt; の&lt;/a&gt;場合、プロセスが正常に終了した場合はプロセスの終了コードを返します。- &lt;em&gt;signal&lt;/em&gt;は、signalがプロセスを &lt;code&gt;-signal&lt;/code&gt; 終了したシグナルです。Windowsでは、プロセスIDは実際にはプロセスハンドルであるため、&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;関数で使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0375733b9f4f50742e4972b7f050e92927d8849" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt;, the input file may be the concatenation of multiple compressed streams.</source>
          <target state="translated">場合&lt;em&gt;モード&lt;/em&gt;で &lt;code&gt;'r'&lt;/code&gt; 、入力ファイルは、複数の圧縮ストリームの連結であってもよいです。</target>
        </trans-unit>
        <trans-unit id="814277edd95a4cd9bd45db5f9fa454a24e7e3f22" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, &lt;em&gt;compresslevel&lt;/em&gt; can be an integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; specifying the level of compression: &lt;code&gt;1&lt;/code&gt; produces the least compression, and &lt;code&gt;9&lt;/code&gt; (default) produces the most compression.</source>
          <target state="translated">場合&lt;em&gt;モード&lt;/em&gt;で &lt;code&gt;'w'&lt;/code&gt; または &lt;code&gt;'a'&lt;/code&gt; 、&lt;em&gt;COMPRESSLEVELの&lt;/em&gt;間の整数であることができる &lt;code&gt;1&lt;/code&gt; 及び &lt;code&gt;9&lt;/code&gt; ：圧縮のレベルを指定する &lt;code&gt;1&lt;/code&gt; 以上の圧縮を生成し、 &lt;code&gt;9&lt;/code&gt; （デフォルト）が最も圧縮を生成します。</target>
        </trans-unit>
        <trans-unit id="3992701b4ac0def94c8a1290fc024926c3c7f6d8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, no attempt to find the module will be made. This is obscure, of use mostly in testing doctest itself: if &lt;em&gt;module&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, or is &lt;code&gt;None&lt;/code&gt; but cannot be found automatically, then all objects are considered to belong to the (non-existent) module, so all contained objects will (recursively) be searched for doctests.</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、モジュールを見つける試みは行われません。これはあいまいで、主にdoctest自体のテストで使用されます。&lt;em&gt;モジュール&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; または &lt;code&gt;None&lt;/code&gt; であるが自動的に見つからない場合、すべてのオブジェクトは（存在しない）モジュールに属していると見なされるため、含まれているすべてのオブジェクトは（再帰的に） doctestを検索します。</target>
        </trans-unit>
        <trans-unit id="342c503a565a339b191d71f66fedb8027cd7cd94" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module&lt;/em&gt; is defined, the &lt;code&gt;__module__&lt;/code&gt; attribute of the named tuple is set to that value.</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;が定義されている場合、名前付きタプルの &lt;code&gt;__module__&lt;/code&gt; 属性はその値に設定されます。</target>
        </trans-unit>
        <trans-unit id="cf7e207e25f4af78f648134ee99a7b39d012d8fc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, then &lt;em&gt;filename&lt;/em&gt; specifies an OS-specific path. The path may be absolute or relative; relative paths are resolved with respect to the current working directory.</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;ファイル名は、&lt;/em&gt; OS固有のパスを指定します。パスは絶対パスでも相対パスでもかまいません。相対パスは、現在の作業ディレクトリを基準に解決されます。</target>
        </trans-unit>
        <trans-unit id="7f42640a3bf95f21f7a92a899894943811c847d3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, then each filename in &lt;em&gt;paths&lt;/em&gt; specifies an OS-specific path. The path may be absolute or relative; relative paths are resolved with respect to the current working directory.</source>
          <target state="translated">&lt;em&gt;module_relative&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;pathsの&lt;/em&gt;各ファイル名はOS固有のパスを指定します。パスは絶対パスでも相対パスでもかまいません。相対パスは、現在の作業ディレクトリを基準に解決されます。</target>
        </trans-unit>
        <trans-unit id="0697d5b67fdf347746c9d5703805474938f31243" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), then &lt;em&gt;filename&lt;/em&gt; specifies an OS-independent module-relative path. By default, this path is relative to the calling module&amp;rsquo;s directory; but if the &lt;em&gt;package&lt;/em&gt; argument is specified, then it is relative to that package. To ensure OS-independence, &lt;em&gt;filename&lt;/em&gt; should use &lt;code&gt;/&lt;/code&gt; characters to separate path segments, and may not be an absolute path (i.e., it may not begin with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）の場合、&lt;em&gt;ファイル名は&lt;/em&gt; OSに依存しないモジュールの相対パスを指定します。デフォルトでは、このパスは呼び出し側モジュールのディレクトリを基準にしています。ただし、&lt;em&gt;package&lt;/em&gt;引数が指定されている場合は、そのパッケージを基準にしています。 OSに依存しないようにするために、&lt;em&gt;ファイル名&lt;/em&gt;はパスセグメントを区切るために &lt;code&gt;/&lt;/code&gt; 文字を使用する必要があり、絶対パスではない場合があります（つまり、 &lt;code&gt;/&lt;/code&gt; で始まっていない場合があります）。</target>
        </trans-unit>
        <trans-unit id="8d02f9fb85e6627d59eb80ccf4ea6b3a9b4d8c95" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), then each filename in &lt;em&gt;paths&lt;/em&gt; specifies an OS-independent module-relative path. By default, this path is relative to the calling module&amp;rsquo;s directory; but if the &lt;em&gt;package&lt;/em&gt; argument is specified, then it is relative to that package. To ensure OS-independence, each filename should use &lt;code&gt;/&lt;/code&gt; characters to separate path segments, and may not be an absolute path (i.e., it may not begin with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">場合&lt;em&gt;module_relativeをが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; （デフォルト）の場合、各ファイル名の&lt;em&gt;パスは&lt;/em&gt; OSに依存しないモジュールの相対パスを指定します。デフォルトでは、このパスは呼び出し側モジュールのディレクトリを基準にしています。ただし、&lt;em&gt;package&lt;/em&gt;引数が指定されている場合は、そのパッケージを基準にしています。OSに依存しないようにするために、各ファイル名はパスセグメントを区切るために &lt;code&gt;/&lt;/code&gt; 文字を使用する必要があり、絶対パスではない場合があります（つまり、 &lt;code&gt;/&lt;/code&gt; で始まっていない場合があります）。</target>
        </trans-unit>
        <trans-unit id="d91389354c01f8abc2286ef2886fcba27cafd30c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;monetary&lt;/em&gt; is true, the conversion uses monetary thousands separator and grouping strings.</source>
          <target state="translated">場合は&lt;em&gt;金銭が&lt;/em&gt; trueの場合、変換は金銭桁区切り記号やグループ化文字列を使用しています。</target>
        </trans-unit>
        <trans-unit id="b66af921caa012e5b11170246ad9eb33b73367d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mutate_flag&lt;/em&gt; is true (the default), then the buffer is (in effect) passed to the underlying &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; system call, the latter&amp;rsquo;s return code is passed back to the calling Python, and the buffer&amp;rsquo;s new contents reflect the action of the &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt;. This is a slight simplification, because if the supplied buffer is less than 1024 bytes long it is first copied into a static buffer 1024 bytes long which is then passed to &lt;a href=&quot;#fcntl.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; and copied back into the supplied buffer.</source>
          <target state="translated">場合&lt;em&gt;mutate_flagが&lt;/em&gt; true（デフォルト）で、バッファが（実質的に）根本的に渡され、&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;システムコール、の後者のリターンコードは、コールバックのPythonに渡され、バッファの新しい内容がの行動に反映される&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;。これは少し単純化されています。指定されたバッファーが1024バイト未満の長さの場合、まず1024バイトの静的バッファーにコピーされ、次に&lt;a href=&quot;#fcntl.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; に&lt;/a&gt;渡されて、指定されたバッファーにコピーされます。</target>
        </trans-unit>
        <trans-unit id="9345507ddde308e47622c6e2a66a95ae7670e925" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is a string and is not known, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If a specific value for &lt;em&gt;name&lt;/em&gt; is not supported by the host system, even if it is included in &lt;code&gt;confstr_names&lt;/code&gt;, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with &lt;a href=&quot;errno#errno.EINVAL&quot;&gt;&lt;code&gt;errno.EINVAL&lt;/code&gt;&lt;/a&gt; for the error number.</source>
          <target state="translated">場合は&lt;em&gt;名前が&lt;/em&gt;文字列であると知られていない、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。&lt;em&gt;nameの&lt;/em&gt;特定の値がホストシステムでサポートされていない場合、それが &lt;code&gt;confstr_names&lt;/code&gt; に含まれていても、エラー番号の&lt;a href=&quot;errno#errno.EINVAL&quot;&gt; &lt;code&gt;errno.EINVAL&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1a2e0516f0e84799e5f5202bef0b9a437f74ac1b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is a string and is not known, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. If a specific value for &lt;em&gt;name&lt;/em&gt; is not supported by the host system, even if it is included in &lt;code&gt;pathconf_names&lt;/code&gt;, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised with &lt;a href=&quot;errno#errno.EINVAL&quot;&gt;&lt;code&gt;errno.EINVAL&lt;/code&gt;&lt;/a&gt; for the error number.</source>
          <target state="translated">場合は&lt;em&gt;名前が&lt;/em&gt;文字列であると知られていない、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;発生します。以下のための具体的な値場合&lt;em&gt;名は&lt;/em&gt;、それが中に含まれている場合でも、ホストシステムでサポートされていない &lt;code&gt;pathconf_names&lt;/code&gt; 、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のが&lt;/a&gt;で提起された&lt;a href=&quot;errno#errno.EINVAL&quot;&gt; &lt;code&gt;errno.EINVAL&lt;/code&gt; &lt;/a&gt;エラー番号のために。</target>
        </trans-unit>
        <trans-unit id="1489759a66ae1aa1d73ef33403aebd13063968d9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it is set as the name of the task using &lt;a href=&quot;#asyncio.Task.set_name&quot;&gt;&lt;code&gt;Task.set_name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合は、&lt;a href=&quot;#asyncio.Task.set_name&quot;&gt; &lt;code&gt;Task.set_name()&lt;/code&gt; &lt;/a&gt;を使用してタスクの名前として設定されます。</target>
        </trans-unit>
        <trans-unit id="9757d615d57917081da1f9a4bda1c19a2f37a8bd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is not found, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;が見つからない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d1f6781895f736e401572500b4ef19d36ece9f67" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;name&lt;/em&gt; is not provided in the constructor, the name returned by &lt;code&gt;tzname(dt)&lt;/code&gt; is generated from the value of the &lt;code&gt;offset&lt;/code&gt; as follows. If &lt;em&gt;offset&lt;/em&gt; is &lt;code&gt;timedelta(0)&lt;/code&gt;, the name is &amp;ldquo;UTC&amp;rdquo;, otherwise it is a string in the format &lt;code&gt;UTC&amp;plusmn;HH:MM&lt;/code&gt;, where &amp;plusmn; is the sign of &lt;code&gt;offset&lt;/code&gt;, HH and MM are two digits of &lt;code&gt;offset.hours&lt;/code&gt; and &lt;code&gt;offset.minutes&lt;/code&gt; respectively.</source>
          <target state="translated">コンストラクタで&lt;em&gt;名前&lt;/em&gt;が指定されていない場合、 &lt;code&gt;tzname(dt)&lt;/code&gt; によって返される名前は、次のように &lt;code&gt;offset&lt;/code&gt; の値から生成されます。場合は&lt;em&gt;オフセットが&lt;/em&gt;ある &lt;code&gt;timedelta(0)&lt;/code&gt; 名前は「UTC」で、それ以外の場合は、形式の文字列である &lt;code&gt;UTC&amp;plusmn;HH:MM&lt;/code&gt; &amp;plusmn;はの兆候である、 &lt;code&gt;offset&lt;/code&gt; 、HHとMMは2桁です &lt;code&gt;offset.hours&lt;/code&gt; と &lt;code&gt;offset.minutes&lt;/code&gt; それぞれ分。</target>
        </trans-unit>
        <trans-unit id="34baedb9fa444a6c6bcfd5a19fda6da4eff56aaf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;new&lt;/em&gt; is omitted, then the target is replaced with an &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the patched object is an async function or a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; otherwise. If &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is used as a decorator and &lt;em&gt;new&lt;/em&gt; is omitted, the created mock is passed in as an extra argument to the decorated function. If &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is used as a context manager the created mock is returned by the context manager.</source>
          <target state="translated">場合は&lt;em&gt;新しいが&lt;/em&gt;省略され、その後、ターゲットは置き換えられ&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt;パッチを適用したオブジェクトは、非同期関数またはある場合&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;そう。場合は&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;デコレータとして使用され、&lt;em&gt;新しいが&lt;/em&gt;省略され、作成されたモックが飾ら関数に追加の引数として渡されます。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;がコンテキストマネージャーとして使用される場合、作成されたモックはコンテキストマネージャーによって返されます。</target>
        </trans-unit>
        <trans-unit id="bdbb8a0ef01210cf36a93be1fc72449e2c9a07dd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;newindex&lt;/em&gt; is specified, sets the combobox value to the element position &lt;em&gt;newindex&lt;/em&gt;. Otherwise, returns the index of the current value or -1 if the current value is not in the values list.</source>
          <target state="translated">&lt;em&gt;newindex&lt;/em&gt;が指定されている場合、コンボボックスの値を要素の位置&lt;em&gt;newindex&lt;/em&gt;に設定します。それ以外の場合は、現在の値のインデックスを返すか、現在の値が値リストにない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="e337316c1e611ca8905f1e941e19e507d1281cae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ns&lt;/em&gt; is specified, it must be a 2-tuple of the form &lt;code&gt;(atime_ns, mtime_ns)&lt;/code&gt; where each member is an int expressing nanoseconds.</source>
          <target state="translated">&lt;em&gt;ns&lt;/em&gt;を指定する場合は、 &lt;code&gt;(atime_ns, mtime_ns)&lt;/code&gt; 形式の2タプルである必要があります。各メンバーは、ナノ秒を表すintです。</target>
        </trans-unit>
        <trans-unit id="17680ea1c66682ed7ecb735074a91fe5b504f141" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;numeric_owner&lt;/em&gt; is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the uid and gid numbers from the tarfile are used to set the owner/group for the extracted files. Otherwise, the named values from the tarfile are used.</source>
          <target state="translated">&lt;em&gt;numeric_owner&lt;/em&gt;が&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; の&lt;/a&gt;場合、tarfileからのuidおよびgid番号を使用して、抽出されたファイルの所有者/グループを設定します。それ以外の場合は、tarfileの名前付きの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="27c4c94e6ce3ccf84f7ed2aea1284d8994324b1c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;obj&lt;/em&gt; is neither of the above a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;が上記のいずれでもない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="26791b8e13e2f8fc527c3deabc666fe937e4ae87" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is given then data is read from that position in &lt;em&gt;buffer&lt;/em&gt;. If &lt;em&gt;size&lt;/em&gt; is given then that many bytes will be read from buffer. Very large buffers (approximately 32 MiB+, though it depends on the OS) may raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception</source>
          <target state="translated">&lt;em&gt;オフセット&lt;/em&gt;が指定&lt;em&gt;されて&lt;/em&gt;いる場合、データは&lt;em&gt;bufferの&lt;/em&gt;その位置から読み取られます。&lt;em&gt;サイズ&lt;/em&gt;が指定&lt;em&gt;されて&lt;/em&gt;いる場合、その数のバイトがバッファーから読み取られます。非常に大きなバッファー（OSによって異なりますが、約32 MiB +）は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;例外を発生させる可能性があります</target>
        </trans-unit>
        <trans-unit id="1eb1415e8bf69142526ae3a0d79981219d8743ee" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;onerror&lt;/em&gt; is provided, it must be a callable that accepts three parameters: &lt;em&gt;function&lt;/em&gt;, &lt;em&gt;path&lt;/em&gt;, and &lt;em&gt;excinfo&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;onerrorを指定する&lt;/em&gt;場合は、3つのパラメーター（&lt;em&gt;function&lt;/em&gt;、&lt;em&gt;path&lt;/em&gt;、および&lt;em&gt;excinfo）&lt;/em&gt;を受け入れる呼び出し可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7a54a6cff529e67ad9256b50db56cfc700f1a554" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;outcome&lt;/em&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the subtest succeeded. Otherwise, it failed with an exception where &lt;em&gt;outcome&lt;/em&gt; is a tuple of the form returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;(type, value, traceback)&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;結果が&lt;/em&gt;ありません&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、サブテストは成功しました。それ以外の場合、&lt;em&gt;結果&lt;/em&gt;は&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;によって返される形式のタプルであるという例外で失敗しました： &lt;code&gt;(type, value, traceback)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3b88cfef8d16d5c39cd9551217cde560b733287" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pad&lt;/em&gt; is true, the input is padded with &lt;code&gt;b'\0'&lt;/code&gt; so its length is a multiple of 4 bytes before encoding.</source>
          <target state="translated">場合&lt;em&gt;パッドが&lt;/em&gt;真である、入力がで埋められ &lt;code&gt;b'\0'&lt;/code&gt; 、その長さは、符号化前の4バイトの倍数になるように。</target>
        </trans-unit>
        <trans-unit id="21c2c919a75ee69d0dcd72db6a0617293d88b398" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padded&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the first line of a multi-line statement will be padded with spaces to match its original position.</source>
          <target state="translated">&lt;em&gt;padded&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、複数行ステートメントの最初の行は、元の位置と一致するようにスペースが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="122ddd43051ad3f6afe1e426367c921264fdf80e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;params&lt;/em&gt; is specified, iterate its &lt;code&gt;items&lt;/code&gt; method and use the resulting &lt;code&gt;(key, value)&lt;/code&gt; pairs to set additional parameters on the &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">&lt;em&gt;params&lt;/em&gt;が指定されている場合、その &lt;code&gt;items&lt;/code&gt; メソッドを反復し、結果の &lt;code&gt;(key, value)&lt;/code&gt; ペアを使用して、&lt;em&gt;Content-Type&lt;/em&gt;ヘッダーに追加のパラメーターを設定します。</target>
        </trans-unit>
        <trans-unit id="d2742098af95f156e52d71eb33134930cc5b2d2b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;parents&lt;/em&gt; is false (the default), a missing parent raises &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;親が&lt;/em&gt; false（デフォルト）で、不足している親が提起&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c4c366ed6d7e659455c85c50fcab426cfddafe8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;parents&lt;/em&gt; is true, any missing parents of this path are created as needed; they are created with the default permissions without taking &lt;em&gt;mode&lt;/em&gt; into account (mimicking the POSIX &lt;code&gt;mkdir -p&lt;/code&gt; command).</source>
          <target state="translated">&lt;em&gt;parents&lt;/em&gt;がtrueの場合、このパスの欠落している親は必要に応じて作成されます。これらは、&lt;em&gt;モード&lt;/em&gt;を考慮せずにデフォルトの権限で作成されます（POSIX &lt;code&gt;mkdir -p&lt;/code&gt; コマンドを模倣しています）。</target>
        </trans-unit>
        <trans-unit id="bfb728e63dc4d6becb096af8bffbd3133d9658f2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;path&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the temporary directory is created using &lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the context manager raises an exception on error. Otherwise, if &lt;em&gt;path&lt;/em&gt; is specified and cannot be created, only a warning is issued.</source>
          <target state="translated">場合は&lt;em&gt;、パスは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、一時ディレクトリを使用して作成され&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; &lt;/a&gt;。場合は&lt;em&gt;、静かで&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、コンテキストマネージャは、エラー時に例外が発生します。それ以外の場合、&lt;em&gt;パス&lt;/em&gt;が指定されていて作成できない場合は、警告のみが発行されます。</target>
        </trans-unit>
        <trans-unit id="279e8821e221ab83a590df5547bdc8fe83b891ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pathname&lt;/em&gt; is a file, the filename must end with &lt;code&gt;.py&lt;/code&gt;, and just the (corresponding &lt;code&gt;*.pyc&lt;/code&gt;) file is added at the top level (no path information). If &lt;em&gt;pathname&lt;/em&gt; is a file that does not end with &lt;code&gt;.py&lt;/code&gt;, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised. If it is a directory, and the directory is not a package directory, then all the files &lt;code&gt;*.pyc&lt;/code&gt; are added at the top level. If the directory is a package directory, then all &lt;code&gt;*.pyc&lt;/code&gt; are added under the package name as a file path, and if any subdirectories are package directories, all of these are added recursively in sorted order.</source>
          <target state="translated">&lt;em&gt;パス名&lt;/em&gt;がファイルの場合、ファイル&lt;em&gt;名&lt;/em&gt;は &lt;code&gt;.py&lt;/code&gt; で終わる必要があり、（対応する &lt;code&gt;*.pyc&lt;/code&gt; ）ファイルだけが最上位に追加されます（パス情報なし）。&lt;em&gt;パス名&lt;/em&gt;が &lt;code&gt;.py&lt;/code&gt; で終わらないファイルの場合、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。それがディレクトリであり、ディレクトリがパッケージディレクトリではない場合、すべてのファイル &lt;code&gt;*.pyc&lt;/code&gt; が最上位に追加されます。ディレクトリがパッケージディレクトリの場合は、すべての &lt;code&gt;*.pyc&lt;/code&gt; がパッケージ名の下にファイルパスとして追加され、サブディレクトリがパッケージディレクトリの場合は、これらすべてがソートされた順序で再帰的に追加されます。</target>
        </trans-unit>
        <trans-unit id="41b2681b700b43aa39bbefe5e6b6c8affd770518" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is absolute, the path must be absolute, and the whole path must match:</source>
          <target state="translated">場合&lt;em&gt;パターンは&lt;/em&gt;絶対であり、パスは、絶対でなければならず、全体のパスが一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="dc3dc34c3e256a8f40643eeec54c50b0a72ef1b0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is relative, the path can be either relative or absolute, and matching is done from the right:</source>
          <target state="translated">&lt;em&gt;パターン&lt;/em&gt;が相対である場合、パスは相対または絶対のいずれかであり、マッチングは右から行われます。</target>
        </trans-unit>
        <trans-unit id="ae4f495484349c434b35e20b4a937b07e53b6277" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pid&lt;/em&gt; is greater than &lt;code&gt;0&lt;/code&gt;, &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; requests status information for that specific process. If &lt;em&gt;pid&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, the request is for the status of any child in the process group of the current process. If &lt;em&gt;pid&lt;/em&gt; is &lt;code&gt;-1&lt;/code&gt;, the request pertains to any child of the current process. If &lt;em&gt;pid&lt;/em&gt; is less than &lt;code&gt;-1&lt;/code&gt;, status is requested for any process in the process group &lt;code&gt;-pid&lt;/code&gt; (the absolute value of &lt;em&gt;pid&lt;/em&gt;).</source>
          <target state="translated">場合&lt;em&gt;PIDが&lt;/em&gt;より大きい &lt;code&gt;0&lt;/code&gt; 、&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt;その特定のプロセスのステータス情報を要求します。場合&lt;em&gt;pidが&lt;/em&gt;ある &lt;code&gt;0&lt;/code&gt; 、要求は、現在のプロセスのプロセスグループ内のいずれかの子の状態のためです。もし&lt;em&gt;pidが&lt;/em&gt;ある &lt;code&gt;-1&lt;/code&gt; 、現在のプロセスのいずれかの子にリクエストが関係。場合&lt;em&gt;PIDが&lt;/em&gt;未満である &lt;code&gt;-1&lt;/code&gt; 、ステータスは、プロセスグループ内の任意のプロセスのために要求される &lt;code&gt;-pid&lt;/code&gt; （の絶対値&lt;em&gt;PID&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="158f301a96505e39d53ef0b213995b204eb36ca6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, the default policy is restored.</source>
          <target state="translated">&lt;em&gt;ポリシー&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; に設定されている場合、デフォルトのポリシーが復元されます。</target>
        </trans-unit>
        <trans-unit id="a33cda1caeb8620df4cbd866550cefe362b20013" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is specified (it must be an instance of a &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; class) use the rules it specifies to update and serialize the representation of the message. If &lt;em&gt;policy&lt;/em&gt; is not set, use the &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; policy, which maintains backward compatibility with the Python 3.2 version of the email package. For more information see the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;em&gt;ポリシー&lt;/em&gt;が指定されている場合（&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;クラスのインスタンスである必要があります）、メッセージの表現を更新およびシリアル化するために、ポリシーが指定するルールを使用します。&lt;em&gt;ポリシー&lt;/em&gt;が設定されていない場合は、メールパッケージのPython 3.2バージョンとの下位互換性を維持する&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;ポリシーを使用します。詳細については、&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b06b36408a6fd37b66a32d5d1725489b1aa43b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is specified use the rules it specifies to update and serialize the representation of the message. If &lt;em&gt;policy&lt;/em&gt; is not set, use the &lt;a href=&quot;email.policy#email.policy.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; policy, which follows the rules of the email RFCs except for line endings (instead of the RFC mandated &lt;code&gt;\r\n&lt;/code&gt;, it uses the Python standard &lt;code&gt;\n&lt;/code&gt; line endings). For more information see the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;em&gt;ポリシー&lt;/em&gt;が指定されている場合は、メッセージの表現を更新およびシリアル化するために指定されているルールを使用します。&lt;em&gt;ポリシー&lt;/em&gt;が設定されていない場合、&lt;a href=&quot;email.policy#email.policy.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ポリシーを使用します。これは、行末を除く電子メールRFCのルールに従います（RFCで義務付けられている &lt;code&gt;\r\n&lt;/code&gt; ではなく、Python標準の &lt;code&gt;\n&lt;/code&gt; 行末を使用します）。詳細については、&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a6693268834f69640651269a3a6f634c6aa263db" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is specified use the rules it specifies to update the representation of the message. If &lt;em&gt;policy&lt;/em&gt; is not set, use the &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; policy, which maintains backward compatibility with the Python 3.2 version of the email package and provides &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; as the default factory. All other policies provide &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; as the default &lt;em&gt;_factory&lt;/em&gt;. For more information on what else &lt;em&gt;policy&lt;/em&gt; controls, see the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;em&gt;ポリシー&lt;/em&gt;が指定されている場合、メッセージの表現を更新するために指定されているルールを使用します。&lt;em&gt;ポリシー&lt;/em&gt;が設定されていない場合は、&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;ポリシーを使用します。これは、メールパッケージのPython 3.2バージョンとの下位互換性を維持し、デフォルトのファクトリとして&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;を提供します。他のすべてのポリシーが提供&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のを&lt;/a&gt;デフォルトとして&lt;em&gt;_factory&lt;/em&gt;。その他の&lt;em&gt;ポリシー&lt;/em&gt;制御について詳しくは、&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="f1b19921a08fb3038055adec87fe883544995964" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is specified, (defaults to the &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; policy) it will be passed to &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、ポリシーが&lt;/em&gt;指定され、（デフォルト&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; の&lt;/a&gt;方針は）それがに渡されます&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2399425e522c294a6da30e75c6833061e72088e7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;policy&lt;/em&gt; is specified, use that policy to control message generation. If &lt;em&gt;policy&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), use the policy associated with the &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object passed to &lt;code&gt;flatten&lt;/code&gt; to control the message generation. See &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;email.policy&lt;/code&gt;&lt;/a&gt; for details on what &lt;em&gt;policy&lt;/em&gt; controls.</source>
          <target state="translated">&lt;em&gt;ポリシー&lt;/em&gt;が指定されている場合は、そのポリシーを使用してメッセージの生成を制御します。場合&lt;em&gt;ポリシーは&lt;/em&gt;しない &lt;code&gt;None&lt;/code&gt; （デフォルト）、関連付けられたポリシーを使用&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt;目的は、に渡さ &lt;code&gt;flatten&lt;/code&gt; メッセージの生成を制御します。参照してください&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;email.policy&lt;/code&gt; &lt;/a&gt;何の詳細については、&lt;em&gt;ポリシー&lt;/em&gt;を制御します。</target>
        </trans-unit>
        <trans-unit id="234372ba74ab2a1f7e9543f3c025cced7baa0bcd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;preexec_fn&lt;/em&gt; is set to a callable object, this object will be called in the child process just before the child is executed. (POSIX only)</source>
          <target state="translated">場合&lt;em&gt;preexec_fnに&lt;/em&gt;呼び出し可能オブジェクトに設定され、このオブジェクトは、子が実行される直前に子プロセスで呼び出されます。（POSIXのみ）</target>
        </trans-unit>
        <trans-unit id="e055baae3a89e75ac216cb3b78aecef961d8ea30" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;prefix&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the file name will begin with that prefix; otherwise, a default prefix is used. The default is the return value of &lt;a href=&quot;#tempfile.gettempprefix&quot;&gt;&lt;code&gt;gettempprefix()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tempfile.gettempprefixb&quot;&gt;&lt;code&gt;gettempprefixb()&lt;/code&gt;&lt;/a&gt;, as appropriate.</source>
          <target state="translated">&lt;em&gt;prefix&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、ファイル名はそのプレフィックスで始まります。それ以外の場合は、デフォルトのプレフィックスが使用されます。デフォルトは、必要に&lt;a href=&quot;#tempfile.gettempprefixb&quot;&gt; &lt;code&gt;gettempprefixb()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#tempfile.gettempprefix&quot;&gt; &lt;code&gt;gettempprefix()&lt;/code&gt; &lt;/a&gt;またはgettempprefixb（）の戻り値です。</target>
        </trans-unit>
        <trans-unit id="320d6a341f543a03504526e2053eb17df2ebd864" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;progress&lt;/em&gt; is specified, it must either be &lt;code&gt;None&lt;/code&gt; or a callable object that will be executed at each iteration with three integer arguments, respectively the &lt;em&gt;status&lt;/em&gt; of the last iteration, the &lt;em&gt;remaining&lt;/em&gt; number of pages still to be copied and the &lt;em&gt;total&lt;/em&gt; number of pages.</source>
          <target state="translated">&lt;em&gt;進行状況&lt;/em&gt;が指定されている場合、それは &lt;code&gt;None&lt;/code&gt; または3つの整数引数を使用して各反復で実行される呼び出し可能なオブジェクトである必要があります。それぞれ、最後の反復の&lt;em&gt;ステータス&lt;/em&gt;、コピーされる&lt;em&gt;残り&lt;/em&gt;のページ数、およびページの&lt;em&gt;総数&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="fd9af5ff1d54bf3dba9ffd1e4521d25aa43c2aa9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and it is not possible to create or change the CWD, an error is raised. Otherwise, only a warning is raised and the original CWD is used.</source>
          <target state="translated">場合は&lt;em&gt;、静かで&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; 、CWDを作成または変更することはできません、エラーが発生します。それ以外の場合は、警告のみが発生し、元のCWDが使用されます。</target>
        </trans-unit>
        <trans-unit id="835884060a8a9192218bcab1cde5f47ef1b050ce" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; (the default), the filenames and other information are printed to standard out. Set to &lt;code&gt;1&lt;/code&gt;, only errors are printed. Set to &lt;code&gt;2&lt;/code&gt;, all output is suppressed.</source>
          <target state="translated">場合は&lt;em&gt;、静かで&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; または &lt;code&gt;0&lt;/code&gt; （デフォルト）、ファイル名やその他の情報を標準出力に出力されます。 &lt;code&gt;1&lt;/code&gt; に設定すると、エラーのみが出力されます。 &lt;code&gt;2&lt;/code&gt; に設定すると、すべての出力が抑制されます。</target>
        </trans-unit>
        <trans-unit id="8dadb44823dad128ad864c2298313a9d5da71265" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the context manager raises an exception on error. Otherwise, it issues only a warning and keeps the current working directory the same.</source>
          <target state="translated">場合は&lt;em&gt;、静かで&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、コンテキストマネージャは、エラー時に例外が発生します。それ以外の場合は、警告のみを発行し、現在の作業ディレクトリを同じままにします。</target>
        </trans-unit>
        <trans-unit id="e77db954cc02cf6ffcd1e5162b0740633d6c9859" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;r&lt;/em&gt; is not specified or is &lt;code&gt;None&lt;/code&gt;, then &lt;em&gt;r&lt;/em&gt; defaults to the length of the &lt;em&gt;iterable&lt;/em&gt; and all possible full-length permutations are generated.</source>
          <target state="translated">場合&lt;em&gt;Rが&lt;/em&gt;指定され又はされていないされていない &lt;code&gt;None&lt;/code&gt; 、次いで&lt;em&gt;rの&lt;/em&gt;長さにデフォルト値を&lt;em&gt;反復可能&lt;/em&gt;かつ全ての可能な完全長の順列が生成されます。</target>
        </trans-unit>
        <trans-unit id="eb898bae774457e0cd44b1cda07745bfe870b0dd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;rawdata&lt;/em&gt; is a string, parse it as an &lt;code&gt;HTTP_COOKIE&lt;/code&gt; and add the values found there as &lt;a href=&quot;#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt;s. If it is a dictionary, it is equivalent to:</source>
          <target state="translated">場合は&lt;em&gt;生データが&lt;/em&gt;文字列である、としてそれを解析 &lt;code&gt;HTTP_COOKIE&lt;/code&gt; と値を追加してそこにい&lt;a href=&quot;#http.cookies.Morsel&quot;&gt; &lt;code&gt;Morsel&lt;/code&gt; &lt;/a&gt;秒。辞書の場合、次と同等です。</target>
        </trans-unit>
        <trans-unit id="c178f6125a527b13b9c928333c2db9e291dd9095" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;recursive&lt;/em&gt; is true, the pattern &amp;ldquo;&lt;code&gt;**&lt;/code&gt;&amp;rdquo; will match any files and zero or more directories, subdirectories and symbolic links to directories. If the pattern is followed by an &lt;a href=&quot;os#os.sep&quot;&gt;&lt;code&gt;os.sep&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.altsep&quot;&gt;&lt;code&gt;os.altsep&lt;/code&gt;&lt;/a&gt; then files will not match.</source>
          <target state="translated">場合は&lt;em&gt;、再帰的に&lt;/em&gt;真である、パターンが「 &lt;code&gt;**&lt;/code&gt; 」のすべてのファイルと0個以上のディレクトリ、サブディレクトリとディレクトリへのシンボリックリンクにマッチします。パターンの後に&lt;a href=&quot;os#os.sep&quot;&gt; &lt;code&gt;os.sep&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.altsep&quot;&gt; &lt;code&gt;os.altsep&lt;/code&gt; &lt;/a&gt;が続く場合、ファイルは一致しません。</target>
        </trans-unit>
        <trans-unit id="652f42ab0e60e31310c32efc30bfe26cd213dcee" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;rename&lt;/em&gt; is true, invalid fieldnames are automatically replaced with positional names. For example, &lt;code&gt;['abc', 'def', 'ghi', 'abc']&lt;/code&gt; is converted to &lt;code&gt;['abc', '_1', 'ghi', '_3']&lt;/code&gt;, eliminating the keyword &lt;code&gt;def&lt;/code&gt; and the duplicate fieldname &lt;code&gt;abc&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;、名前変更が&lt;/em&gt; trueの場合、無効なフィールド名が自動的に位置名に置き換えられます。たとえば、 &lt;code&gt;['abc', 'def', 'ghi', 'abc']&lt;/code&gt; は &lt;code&gt;['abc', '_1', 'ghi', '_3']&lt;/code&gt; に変換され、キーワード &lt;code&gt;def&lt;/code&gt; と重複するフィールド名 &lt;code&gt;abc&lt;/code&gt; が削除されます。</target>
        </trans-unit>
        <trans-unit id="6b0fc2117fa452e5fb0901602f2e235ae4931393" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;repl&lt;/em&gt; is a function, it is called for every non-overlapping occurrence of &lt;em&gt;pattern&lt;/em&gt;. The function takes a single &lt;a href=&quot;#match-objects&quot;&gt;match object&lt;/a&gt; argument, and returns the replacement string. For example:</source>
          <target state="translated">&lt;em&gt;repl&lt;/em&gt;が関数の場合、&lt;em&gt;patternが&lt;/em&gt;重複しない場合に呼び出され&lt;em&gt;ます&lt;/em&gt;。この関数は、単一の&lt;a href=&quot;#match-objects&quot;&gt;一致オブジェクト&lt;/a&gt;引数を取り、置換文字列を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="2a093846d95a069713492d1fd6ead5de8bd55f04" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;replace&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default) the header is moved to the end of the list of headers. If &lt;em&gt;replace&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the header will be updated in place.</source>
          <target state="translated">場合&lt;em&gt;置き換える&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （デフォルト）ヘッダはヘッダのリストの末尾に移動します。場合&lt;em&gt;置き換える&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、ヘッダは、所定の位置に更新されます。</target>
        </trans-unit>
        <trans-unit id="989522b42bb979106607a604c110fad8c9045475" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;restore_signals&lt;/em&gt; is true (the default) all signals that Python has set to SIG_IGN are restored to SIG_DFL in the child process before the exec. Currently this includes the SIGPIPE, SIGXFZ and SIGXFSZ signals. (POSIX only)</source>
          <target state="translated">場合&lt;em&gt;restore_signalsが&lt;/em&gt;真である（デフォルト）PythonがSIG_IGNに設定されたことをすべての信号はexecの前に、子プロセスでSIG_DFLに復元されています。現在、これにはSIGPIPE、SIGXFZ、およびSIGXFSZ信号が含まれます。（POSIXのみ）</target>
        </trans-unit>
        <trans-unit id="eb9630daaf2813c2a4fbd9d5532117273440d21b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;result&lt;/em&gt; is provided, it is returned to the caller when the coroutine completes.</source>
          <target state="translated">場合は&lt;em&gt;、結果が&lt;/em&gt;提供されコルーチンが完了したとき、それが呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="5684052c764729c0f68c3561f034eace258e3a1a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;return_exceptions&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (default), the first raised exception is immediately propagated to the task that awaits on &lt;code&gt;gather()&lt;/code&gt;. Other awaitables in the &lt;em&gt;aws&lt;/em&gt; sequence &lt;strong&gt;won&amp;rsquo;t be cancelled&lt;/strong&gt; and will continue to run.</source>
          <target state="translated">場合&lt;em&gt;return_exceptionsが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （デフォルト）、最初に発生した例外はすぐに上の待ち受けがそのタスクに伝播される &lt;code&gt;gather()&lt;/code&gt; 。&lt;em&gt;aws&lt;/em&gt;シーケンスの他のawaitablesは&lt;strong&gt;キャンセルされず&lt;/strong&gt;、引き続き実行されます。</target>
        </trans-unit>
        <trans-unit id="d6de4a327272d8e394442d6de35dbc10f4156abb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;return_exceptions&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, exceptions are treated the same as successful results, and aggregated in the result list.</source>
          <target state="translated">&lt;em&gt;return_exceptions&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、例外は成功した結果と同様に扱われ、結果リストに集計されます。</target>
        </trans-unit>
        <trans-unit id="251118657a646dd1a14d95161e6af339f8202cf4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;return_exceptions&lt;/em&gt; is False, cancelling gather() after it has been marked done won&amp;rsquo;t cancel any submitted awaitables. For instance, gather can be marked done after propagating an exception to the caller, therefore, calling &lt;code&gt;gather.cancel()&lt;/code&gt; after catching an exception (raised by one of the awaitables) from gather won&amp;rsquo;t cancel any other awaitables.</source>
          <target state="translated">If &lt;em&gt;return_exceptions&lt;/em&gt; is False, cancelling gather() after it has been marked done won&amp;rsquo;t cancel any submitted awaitables. For instance, gather can be marked done after propagating an exception to the caller, therefore, calling &lt;code&gt;gather.cancel()&lt;/code&gt; after catching an exception (raised by one of the awaitables) from gather won&amp;rsquo;t cancel any other awaitables.</target>
        </trans-unit>
        <trans-unit id="c43a33c76c7da2f4198988b499c7fcff4ea7e0ba" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;rx&lt;/em&gt; is given, its search method is called on the complete path to each file considered for compilation, and if it returns a true value, the file is skipped.</source>
          <target state="translated">&lt;em&gt;rx&lt;/em&gt;が指定されている場合、その検索メソッドは、コンパイル対象と見なされる各ファイルへの完全なパスで呼び出され、true値を返す場合、ファイルはスキップされます。</target>
        </trans-unit>
        <trans-unit id="bceb5a6050a398999357f2debabd55d53448093b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;rx&lt;/em&gt; is given, its search method is passed the full path name to the file being compiled, and if it returns a true value, the file is not compiled and &lt;code&gt;True&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;em&gt;rx&lt;/em&gt;が指定されている場合、その検索メソッドにはコンパイル中のファイルへのフルパス名が渡され、true値を返す場合、ファイルはコンパイルされず、 &lt;code&gt;True&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="11ffb51839f338f99c26b93f469a2ff3e996354c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;s&lt;/em&gt; is an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, then &lt;em&gt;charset&lt;/em&gt; is a hint specifying the character set of the characters in the string.</source>
          <target state="translated">場合は&lt;em&gt;sが&lt;/em&gt;のインスタンスである&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; が&lt;/a&gt;、その後、&lt;em&gt;文字セットは&lt;/em&gt;、文字列の文字セットを決定するためのヒントです。</target>
        </trans-unit>
        <trans-unit id="c4b191218804654e28d488d61d7963e295b8ba38" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scheme&lt;/em&gt; is not an existing scheme, &lt;a href=&quot;#sysconfig.get_paths&quot;&gt;&lt;code&gt;get_paths()&lt;/code&gt;&lt;/a&gt; will raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;スキーム&lt;/em&gt;が既存のスキームでない場合、&lt;a href=&quot;#sysconfig.get_paths&quot;&gt; &lt;code&gt;get_paths()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="579ce2501f9bd2e51356cbfaa3d40376b9ab476a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scheme&lt;/em&gt; is not provided, will use the default scheme for the current platform.</source>
          <target state="translated">&lt;em&gt;スキーム&lt;/em&gt;が指定されていない場合は、現在のプラットフォームのデフォルトのスキームが使用されます。</target>
        </trans-unit>
        <trans-unit id="dcde2be3fbea710fd434bc34595dec1ea0f24076" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scheme&lt;/em&gt; is provided, it must be a value from the list returned by &lt;a href=&quot;#sysconfig.get_scheme_names&quot;&gt;&lt;code&gt;get_scheme_names()&lt;/code&gt;&lt;/a&gt;. Otherwise, the default scheme for the current platform is used.</source>
          <target state="translated">&lt;em&gt;スキーム&lt;/em&gt;が提供される場合、それは&lt;a href=&quot;#sysconfig.get_scheme_names&quot;&gt; &lt;code&gt;get_scheme_names()&lt;/code&gt; &lt;/a&gt;によって返されるリストからの値でなければなりません。それ以外の場合は、現在のプラットフォームのデフォルトのスキームが使用されます。</target>
        </trans-unit>
        <trans-unit id="0e383345ed1ffb777fd51335060944d7c8849d95" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;secs&lt;/em&gt; is not provided or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the current time as returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; is used. &lt;code&gt;ctime(secs)&lt;/code&gt; is equivalent to &lt;code&gt;asctime(localtime(secs))&lt;/code&gt;. Locale information is not used by &lt;a href=&quot;#time.ctime&quot;&gt;&lt;code&gt;ctime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;秒が&lt;/em&gt;設けられていない、またはされていない&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;、によって返される現在時刻&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;使用されます。 &lt;code&gt;ctime(secs)&lt;/code&gt; は &lt;code&gt;asctime(localtime(secs))&lt;/code&gt; と同等です。ロケール情報は&lt;a href=&quot;#time.ctime&quot;&gt; &lt;code&gt;ctime()&lt;/code&gt; &lt;/a&gt;では使用されません。</target>
        </trans-unit>
        <trans-unit id="52127174ed10907e5ff17d5141342c89e06f5f85" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;seed&lt;/em&gt; is given, creates a new instance of the underlying random number generator. This is useful for creating reproducible results, even in a multi-threading context.</source>
          <target state="translated">場合は&lt;em&gt;シードが&lt;/em&gt;与えられ、基礎となる乱数生成器の新しいインスタンスを作成します。これは、マルチスレッドのコンテキストでも再現可能な結果を​​作成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="4edab34fe0d303f2ab6c480c28b9df03c2bd34c0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;self&lt;/em&gt; is alive then mark it as dead and return the result of calling &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;. If &lt;em&gt;self&lt;/em&gt; is dead then return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;自分自身&lt;/em&gt;が生きている場合は、それをデッドとしてマークし、 &lt;code&gt;func(*args, **kwargs)&lt;/code&gt; を呼び出した結果を返します。&lt;em&gt;自分&lt;/em&gt;が死んでいる場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="1d5cc9d166c3fd7fa9f433e7f26249d72bf951f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;self&lt;/em&gt; is alive then mark it as dead and return the tuple &lt;code&gt;(obj, func, args, kwargs)&lt;/code&gt;. If &lt;em&gt;self&lt;/em&gt; is dead then return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;自分自身&lt;/em&gt;が生きている場合は、それをデッドとしてマークし、タプル &lt;code&gt;(obj, func, args, kwargs)&lt;/code&gt; ます。&lt;em&gt;自分&lt;/em&gt;が死んでいる場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d62395a4c8cd7edcdbc400ae85af1063602e83fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;self&lt;/em&gt; is alive then return the tuple &lt;code&gt;(obj, func, args,
kwargs)&lt;/code&gt;. If &lt;em&gt;self&lt;/em&gt; is dead then return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;自分自身&lt;/em&gt;が生きている場合は、タプル &lt;code&gt;(obj, func, args, kwargs)&lt;/code&gt; ます。&lt;em&gt;自分&lt;/em&gt;が死んでいる場合は&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7c78e910291328954d1c689354013e70073a04fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is given, consecutive delimiters are not grouped together and are deemed to delimit empty strings (for example, &lt;code&gt;'1,,2'.split(',')&lt;/code&gt; returns &lt;code&gt;['1', '', '2']&lt;/code&gt;). The &lt;em&gt;sep&lt;/em&gt; argument may consist of multiple characters (for example, &lt;code&gt;'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split('&amp;lt;&amp;gt;')&lt;/code&gt; returns &lt;code&gt;['1', '2', '3']&lt;/code&gt;). Splitting an empty string with a specified separator returns &lt;code&gt;['']&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;9月が&lt;/em&gt;与えられ、連続する区切り文字はグループ化されず、空の文字列（例えば、区切りとみなされる &lt;code&gt;'1,,2'.split(',')&lt;/code&gt; 戻り &lt;code&gt;['1', '', '2']&lt;/code&gt; ）。&lt;em&gt;SEP&lt;/em&gt;引数が複数の文字からなることができる（例えば、 &lt;code&gt;'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split('&amp;lt;&amp;gt;')&lt;/code&gt; 戻り &lt;code&gt;['1', '2', '3']&lt;/code&gt; ）。指定されたセパレータで空の文字列を分割すると、 &lt;code&gt;['']&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d32a65d384a22e7aca1e7f72f27cdc388ee1ce1e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is given, consecutive delimiters are not grouped together and are deemed to delimit empty subsequences (for example, &lt;code&gt;b'1,,2'.split(b',')&lt;/code&gt; returns &lt;code&gt;[b'1', b'', b'2']&lt;/code&gt;). The &lt;em&gt;sep&lt;/em&gt; argument may consist of a multibyte sequence (for example, &lt;code&gt;b'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split(b'&amp;lt;&amp;gt;')&lt;/code&gt; returns &lt;code&gt;[b'1', b'2', b'3']&lt;/code&gt;). Splitting an empty sequence with a specified separator returns &lt;code&gt;[b'']&lt;/code&gt; or &lt;code&gt;[bytearray(b'')]&lt;/code&gt; depending on the type of object being split. The &lt;em&gt;sep&lt;/em&gt; argument may be any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt;が指定されている場合、連続する区切り文字はグループ化されず、空のサブシーケンスを区切るものと見なされます（たとえば、 &lt;code&gt;b'1,,2'.split(b',')&lt;/code&gt; は &lt;code&gt;[b'1', b'', b'2']&lt;/code&gt; 返します2 ']）。&lt;em&gt;SEP&lt;/em&gt;引数は、マルチバイトシーケンスからなってもよい（例えば、 &lt;code&gt;b'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split(b'&amp;lt;&amp;gt;')&lt;/code&gt; 戻り &lt;code&gt;[b'1', b'2', b'3']&lt;/code&gt; ） 。指定されたセパレータで空のシーケンスを分割すると、分割されるオブジェクトのタイプに応じて &lt;code&gt;[b'']&lt;/code&gt; または &lt;code&gt;[bytearray(b'')]&lt;/code&gt; れます。&lt;em&gt;9月の&lt;/em&gt;引数はいずれであってもよい&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="549838992282f145747633c71b5315b9744fad84" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is given, consecutive delimiters are not grouped together and are deemed to delimit empty subsequences (for example, &lt;code&gt;b'1,,2'.split(b',')&lt;/code&gt; returns &lt;code&gt;[b'1', b'', b'2']&lt;/code&gt;). The &lt;em&gt;sep&lt;/em&gt; argument may consist of a multibyte sequence (for example, &lt;code&gt;b'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split(b'&amp;lt;&amp;gt;')&lt;/code&gt; returns &lt;code&gt;[b'1', b'2', b'3']&lt;/code&gt;). Splitting an empty sequence with a specified separator returns &lt;code&gt;[b'']&lt;/code&gt; or &lt;code&gt;[bytearray(b'')]&lt;/code&gt; depending on the type of object being split. The &lt;em&gt;sep&lt;/em&gt; argument may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">If &lt;em&gt;sep&lt;/em&gt; is given, consecutive delimiters are not grouped together and are deemed to delimit empty subsequences (for example, &lt;code&gt;b'1,,2'.split(b',')&lt;/code&gt; returns &lt;code&gt;[b'1', b'', b'2']&lt;/code&gt; ). The &lt;em&gt;sep&lt;/em&gt; argument may consist of a multibyte sequence (for example, &lt;code&gt;b'1&amp;lt;&amp;gt;2&amp;lt;&amp;gt;3'.split(b'&amp;lt;&amp;gt;')&lt;/code&gt; returns &lt;code&gt;[b'1', b'2', b'3']&lt;/code&gt; ). Splitting an empty sequence with a specified separator returns &lt;code&gt;[b'']&lt;/code&gt; or &lt;code&gt;[bytearray(b'')]&lt;/code&gt; depending on the type of object being split. The &lt;em&gt;sep&lt;/em&gt; argument may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ddf21781d7159ff06d30d7d7782c5cadffcfb73e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is not specified or is &lt;code&gt;None&lt;/code&gt;, a different splitting algorithm is applied: runs of consecutive ASCII whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the sequence has leading or trailing whitespace. Consequently, splitting an empty sequence or a sequence consisting solely of ASCII whitespace without a specified separator returns &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;9月を&lt;/em&gt;指定するかしないれていない &lt;code&gt;None&lt;/code&gt; 単一セパレータと見なされる空白の連続するASCIIの実行を、そして配列が空白を先頭または末尾た場合、結果は、開始または終了時に空の文字列が含まれていません：、異なる分割アルゴリズムが適用されます。その結果、空のシーケンスまたは指定されたセパレータなしのASCII空白のみで構成されるシーケンスを分割すると、 &lt;code&gt;[]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="75815e1c039cef44f7ce05b27c1b9d61fa4ea0ed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is not specified or is &lt;code&gt;None&lt;/code&gt;, a different splitting algorithm is applied: runs of consecutive whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the string has leading or trailing whitespace. Consequently, splitting an empty string or a string consisting of just whitespace with a &lt;code&gt;None&lt;/code&gt; separator returns &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;9月を&lt;/em&gt;指定するかしないれていない &lt;code&gt;None&lt;/code&gt; 、異なる分割アルゴリズムが適用される：連続空白の実行は、単一のセパレータとみなされ、そして文字列が空白を先頭または末尾た場合、結果は、開始または終了時に空の文字列が含まれていません。その結果、空の文字列または空白のみで構成される文字列を &lt;code&gt;None&lt;/code&gt; セパレータで分割すると、 &lt;code&gt;[]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="bacd7e201472689d45d2129900593e8ba53a276f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sep&lt;/em&gt; is specified, it must be a single character str or bytes object. It will be inserted in the output after every &lt;em&gt;bytes_per_sep&lt;/em&gt; input bytes. Separator placement is counted from the right end of the output by default, if you wish to count from the left, supply a negative &lt;em&gt;bytes_per_sep&lt;/em&gt; value.</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt;を指定する場合は、1文字のstrまたはbytesオブジェクトでなければなりません。これは、各&lt;em&gt;bytes_per_sep&lt;/em&gt;入力バイトの後に出力に挿入されます。セパレーターの配置は、デフォルトでは出力の右端からカウントされます。左からカウントする場合は、負の&lt;em&gt;bytes_per_sep&lt;/em&gt;値を&lt;em&gt;指定し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b2e53523b64aa1ece0f05f00001ffc33c683dfc6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shallow&lt;/em&gt; is true, files with identical &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; signatures are taken to be equal. Otherwise, the contents of the files are compared.</source>
          <target state="translated">場合&lt;em&gt;浅いが&lt;/em&gt;真である、同一のファイル&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;シグネチャが等しくなるように取られます。それ以外の場合は、ファイルの内容が比較されます。</target>
        </trans-unit>
        <trans-unit id="6a14ade8fc04b529f8c66e54b142b5f11123facc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the specified command will be executed through the shell. This can be useful if you are using Python primarily for the enhanced control flow it offers over most system shells and still want convenient access to other shell features such as shell pipes, filename wildcards, environment variable expansion, and expansion of &lt;code&gt;~&lt;/code&gt; to a user&amp;rsquo;s home directory. However, note that Python itself offers implementations of many shell-like features (in particular, &lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.walk&quot;&gt;&lt;code&gt;os.walk()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os.path#os.path.expandvars&quot;&gt;&lt;code&gt;os.path.expandvars()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">場合は&lt;em&gt;シェルが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、指定されたコマンドは、シェルを介して実行されます。これは、Pythonを主に拡張制御フローに使用していて、ほとんどのシステムシェルで提供されているにもかかわらず、シェルパイプ、ファイル名のワイルドカード、環境変数の展開、ユーザーの家への &lt;code&gt;~&lt;/code&gt; 展開など、他のシェル機能への便利なアクセスが必要な場合に役立ちます。ディレクトリ。ただし、Python自体がシェルのような多くの機能の実装を提供していることに注意してください（特に、&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt; &lt;code&gt;fnmatch&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os#os.walk&quot;&gt; &lt;code&gt;os.walk()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os.path#os.path.expandvars&quot;&gt; &lt;code&gt;os.path.expandvars()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os.path#os.path.expanduser&quot;&gt; &lt;code&gt;os.path.expanduser()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c3fabb4f0dfc614531e56476a132b5752f344c2f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;side_effect&lt;/em&gt; is an iterable then each call to the mock will return the next value from the iterable.</source>
          <target state="translated">&lt;em&gt;side_effect&lt;/em&gt;が反復可能である場合、モックを呼び出すたびに、反復可能から次の値が返されます。</target>
        </trans-unit>
        <trans-unit id="32d4906d1c181de707adccc5361aecabb724997b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sigma&lt;/em&gt; is negative, raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sigma&lt;/em&gt;が負の場合、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;を送出します。</target>
        </trans-unit>
        <trans-unit id="84a4b0f24b46c93f18da5c06f6ae94445c0fe2cf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;signalnum&lt;/em&gt; is 0, then no signal is sent, but error checking is still performed; this can be used to check if the target thread is still running.</source>
          <target state="translated">&lt;em&gt;signalnum&lt;/em&gt;が0の場合、シグナルは送信されませんが、エラーチェックは実行されます。これは、ターゲットスレッドがまだ実行されているかどうかを確認するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d8a8c085c8f93c34a62d1f5006e023a789d7f748" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is &lt;code&gt;-1&lt;/code&gt; (the default), an arbitrary number of bytes are returned (more than zero unless EOF is reached).</source>
          <target state="translated">場合&lt;em&gt;サイズが&lt;/em&gt;ある &lt;code&gt;-1&lt;/code&gt; （デフォルト）（EOFに到達しない限り、複数ゼロよりも）、任意のバイト数が返されます。</target>
        </trans-unit>
        <trans-unit id="783061ee6ebe0a3e848628b0e39a754d7f845bd2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, at most &lt;em&gt;size&lt;/em&gt; characters will be read.</source>
          <target state="translated">場合は&lt;em&gt;サイズが&lt;/em&gt;指定されている、ほとんどの&lt;em&gt;サイズの&lt;/em&gt;文字を読み込みます。</target>
        </trans-unit>
        <trans-unit id="847d50bbad63ed5c73adc70a9729f398c1c78b9f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;skip_curdir&lt;/em&gt; is true (the default), the current directory is not included in the search. All other parameters are passed to the &lt;a href=&quot;#compileall.compile_dir&quot;&gt;&lt;code&gt;compile_dir()&lt;/code&gt;&lt;/a&gt; function. Note that unlike the other compile functions, &lt;code&gt;maxlevels&lt;/code&gt; defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;skip_curdirが&lt;/em&gt; true（デフォルト）で、現在のディレクトリが検索に含まれていません。他のすべてのパラメーターは、&lt;a href=&quot;#compileall.compile_dir&quot;&gt; &lt;code&gt;compile_dir()&lt;/code&gt; &lt;/a&gt;関数に渡されます。他のコンパイル関数とは異なり、 &lt;code&gt;maxlevels&lt;/code&gt; のデフォルトは &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1622612acffaa08ff5b0ba0489c4b9b99e2215a3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;skipkeys&lt;/em&gt; is false (the default), then it is a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; to attempt encoding of keys that are not &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;None&lt;/code&gt;. If &lt;em&gt;skipkeys&lt;/em&gt; is true, such items are simply skipped.</source>
          <target state="translated">場合&lt;em&gt;skipkeysが&lt;/em&gt; false（デフォルト）で、ある&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外&lt;/a&gt;ではありませんキーの符号化の試行する&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;None&lt;/code&gt; 。場合&lt;em&gt;skipkeysが&lt;/em&gt; trueの場合、このような項目は単にスキップされます。</target>
        </trans-unit>
        <trans-unit id="fdad7b18b91cc5adf5f82da39ab59d5d78a1ecfd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;skipkeys&lt;/em&gt; is true (default: &lt;code&gt;False&lt;/code&gt;), then dict keys that are not of a basic type (&lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;None&lt;/code&gt;) will be skipped instead of raising a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;skipkeysが&lt;/em&gt; true（デフォルト：ある &lt;code&gt;False&lt;/code&gt; ）、そして基本的なタイプではないdictのキー（&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;None&lt;/code&gt; ）引き上げの代わりにスキップされません&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="919e52d14550425c25e9a8891929227e5c2b4b36" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sort_keys&lt;/em&gt; is true (default: &lt;code&gt;False&lt;/code&gt;), then the output of dictionaries will be sorted by key.</source>
          <target state="translated">場合&lt;em&gt;sort_keysが&lt;/em&gt; true（デフォルト：ある &lt;code&gt;False&lt;/code&gt; ）、その後、辞書の出力がキーでソートされます。</target>
        </trans-unit>
        <trans-unit id="141cc93734b2806ef0b422eaafd25c2a3bb5717d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sort_keys&lt;/em&gt; is true (default: &lt;code&gt;False&lt;/code&gt;), then the output of dictionaries will be sorted by key; this is useful for regression tests to ensure that JSON serializations can be compared on a day-to-day basis.</source>
          <target state="translated">場合&lt;em&gt;sort_keysが&lt;/em&gt; true（デフォルト：ある &lt;code&gt;False&lt;/code&gt; ）、その後、辞書の出力がキーでソートされます。これは、JSONシリアル化を日常的に比較できることを確認する回帰テストに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0ec4d3670001eb4630add8e5d77a6b7f8a38307e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;source&lt;/em&gt; is a directory, this will create an archive from the contents of &lt;em&gt;source&lt;/em&gt;. If &lt;em&gt;source&lt;/em&gt; is a file, it should be an archive, and it will be copied to the target archive (or the contents of its shebang line will be displayed if the &amp;ndash;info option is specified).</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt;がディレクトリの場合、これは&lt;em&gt;source&lt;/em&gt;のコンテンツからアーカイブを作成します。&lt;em&gt;ソース&lt;/em&gt;がファイルの場合、それはアーカイブである必要があり、それはターゲットアーカイブにコピーされます（または、-infoオプションが指定されている場合は、そのシバン行の内容が表示されます）。</target>
        </trans-unit>
        <trans-unit id="dd866a51c1af75263cc3da023ee73b4ff52a8f3f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;spec&lt;/em&gt; is an object (rather than a list of strings) then &lt;a href=&quot;stdtypes#instance.__class__&quot;&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/a&gt; returns the class of the spec object. This allows mocks to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests.</source>
          <target state="translated">&lt;em&gt;spec&lt;/em&gt;が（文字列のリストではなく）オブジェクトの場合、&lt;a href=&quot;stdtypes#instance.__class__&quot;&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;/a&gt;はspecオブジェクトのクラスを返します。これにより、モックは&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;テストに合格できます。</target>
        </trans-unit>
        <trans-unit id="e430ec45184814b7e3a5423aaa67762e8ff2ee26" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;spec_set&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; then attempting to set attributes that don&amp;rsquo;t exist on the spec object will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;spec_set&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、specオブジェクトに存在しない属性を設定しようとすると、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="afed44ee7ef600b461a700a3398505683d4ea66e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;spec_set&lt;/em&gt; is true then only attributes on the spec can be set.</source>
          <target state="translated">&lt;em&gt;spec_set&lt;/em&gt;がtrueの場合、設定できるのは仕様の属性のみです。</target>
        </trans-unit>
        <trans-unit id="e7a8ce63e7abc528992721347309573385b89984" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;start&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then iteration starts at zero. If &lt;em&gt;step&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the step defaults to one.</source>
          <target state="translated">場合は&lt;em&gt;、スタートが&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、その後、反復はゼロから始まります。&lt;em&gt;step&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、ステップのデフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="24863e0f029a6a7992cca82f7b21086bad27e744" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;start_new_session&lt;/em&gt; is true the setsid() system call will be made in the child process prior to the execution of the subprocess. (POSIX only)</source>
          <target state="translated">場合&lt;em&gt;start_new_sessionが&lt;/em&gt;真であるがsetsid（）システムコールは、サブプロセスの実行前に、子プロセスで行われます。（POSIXのみ）</target>
        </trans-unit>
        <trans-unit id="dae10e2b8108370fbc36f3fb951b2b6fcfa7ee03" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;state&lt;/em&gt; is specified, it is expected to be a sequence of one or more states. If the &lt;em&gt;default&lt;/em&gt; argument is set, it is used as a fallback value in case no specification for option is found.</source>
          <target state="translated">場合は&lt;em&gt;状態が&lt;/em&gt;指定され、一つ以上の状態のシーケンスであることが予想されます。場合は&lt;em&gt;、デフォルトの&lt;/em&gt;引数が設定されている、それはオプションのための仕様が見つからない場合には代替値として使用されます。</target>
        </trans-unit>
        <trans-unit id="03eb4116ba9791728aa443f40f34198f5e04395f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; and host bits are set in the supplied address, then &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. Otherwise, the host bits are masked out to determine the appropriate network address.</source>
          <target state="translated">場合&lt;em&gt;厳密で&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; とホストビットが供給されたアドレスに設定され、その後&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;上昇します。そうでない場合、ホストビットは適切なネットワークアドレスを決定するためにマスクされます。</target>
        </trans-unit>
        <trans-unit id="973cfc980a368126ab372341f5a82f90bd2ace1b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, information will be added to list of standard types, else to the list of non-standard types.</source>
          <target state="translated">&lt;em&gt;strict&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、情報は標準タイプのリストに追加され、そうでない場合は非標準タイプのリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="c63d58de5c2b785bb280134953605f32b3e0b06f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, information will be added to the list of standard types, else to the list of non-standard types.</source>
          <target state="translated">&lt;em&gt;strict&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、情報は標準タイプのリストに追加され、そうでない場合は非標準タイプのリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="59fa67b55f66822993cd529b9e43d4b11387a896" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is false (&lt;code&gt;True&lt;/code&gt; is the default), then control characters will be allowed inside strings. Control characters in this context are those with character codes in the 0&amp;ndash;31 range, including &lt;code&gt;'\t'&lt;/code&gt; (tab), &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt; and &lt;code&gt;'\0'&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;em&gt;厳密には&lt;/em&gt;（偽である &lt;code&gt;True&lt;/code&gt; デフォルトです）、その後、制御文字は文字列の内側に許可されます。このコンテキストでの制御文字は、 &lt;code&gt;'\t'&lt;/code&gt; （タブ）、 &lt;code&gt;'\n'&lt;/code&gt; 、 &lt;code&gt;'\r'&lt;/code&gt; 、および &lt;code&gt;'\0'&lt;/code&gt; を含む、0〜31の範囲の文字コードを持つものです。</target>
        </trans-unit>
        <trans-unit id="00bb41b8d4ff338b7ff04695279e77d2e3c93ebd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;suffix&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the file name will end with that suffix, otherwise there will be no suffix. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; does not put a dot between the file name and the suffix; if you need one, put it at the beginning of &lt;em&gt;suffix&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;suffix&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、ファイル名はそのサフィックスで終わります。それ以外の場合、サフィックスはありません。&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;は、ファイル名とサフィックスの間にドットを入れません。必要な場合は、&lt;em&gt;サフィックス&lt;/em&gt;の最初に&lt;em&gt;付けてください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="13150c99ab21ad6513149f3afd00516abf1afabf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;symlinks&lt;/em&gt; is true, symbolic links in the source tree are represented as symbolic links in the new tree and the metadata of the original links will be copied as far as the platform allows; if false or omitted, the contents and metadata of the linked files are copied to the new tree.</source>
          <target state="translated">&lt;em&gt;symlinks&lt;/em&gt;がtrueの場合、ソースツリーのシンボリックリンクは新しいツリーのシンボリックリンクとして表され、元のリンクのメタデータはプラットフォームが許可する限りコピーされます。falseまたは省略した場合、リンクされたファイルのコンテンツとメタデータが新しいツリーにコピーされます。</target>
        </trans-unit>
        <trans-unit id="790a7891dbe26c0d182cc188c6888155d0da69dc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;t&lt;/em&gt; is not provided, the current time as returned by &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; is used. Locale information is not used by &lt;a href=&quot;#time.asctime&quot;&gt;&lt;code&gt;asctime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;t&lt;/em&gt;が指定されていない場合は、&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;によって返された現在時刻が使用されます。ロケール情報は&lt;a href=&quot;#time.asctime&quot;&gt; &lt;code&gt;asctime()&lt;/code&gt; &lt;/a&gt;では使用されません。</target>
        </trans-unit>
        <trans-unit id="02d5c93f7a324aa5bde0984e4ba37a751a5f3a3c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tests&lt;/em&gt; is given, it must be an iterable of individual test cases or other test suites that will be used to build the suite initially. Additional methods are provided to add test cases and suites to the collection later on.</source>
          <target state="translated">場合&lt;em&gt;のテストが&lt;/em&gt;与えられ、それは最初はスイートを構築するために使用される個々のテストケースや他のテストスイートの反復可能でなければなりません。後でコレクションにテストケースとスイートを追加するための追加のメソッドが提供されます。</target>
        </trans-unit>
        <trans-unit id="fcb23f5faf7c3355639ee77c0a34b931b944acce" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;text&lt;/em&gt; is specified and true, the file is opened in text mode. Otherwise, (the default) the file is opened in binary mode.</source>
          <target state="translated">If &lt;em&gt;text&lt;/em&gt; is specified and true, the file is opened in text mode. Otherwise, (the default) the file is opened in binary mode.</target>
        </trans-unit>
        <trans-unit id="32cd3e51c090a1bc9065f8c1d01729be7286d1ed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;text&lt;/em&gt; is specified, it indicates whether to open the file in binary mode (the default) or text mode. On some platforms, this makes no difference.</source>
          <target state="translated">&lt;em&gt;テキスト&lt;/em&gt;が指定されている場合は、ファイルをバイナリモード（デフォルト）で開くか、&lt;em&gt;テキスト&lt;/em&gt;モードで開くかを示します。一部のプラットフォームでは、これは違いがありません。</target>
        </trans-unit>
        <trans-unit id="a4559c7dea064e6ee3c47db167d23f484bc1c7d3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;themename&lt;/em&gt; is not given, returns the theme in use. Otherwise, sets the current theme to &lt;em&gt;themename&lt;/em&gt;, refreshes all widgets and emits a &amp;lt;&amp;lt;ThemeChanged&amp;gt;&amp;gt; event.</source>
          <target state="translated">&lt;em&gt;themename&lt;/em&gt;が指定されていない場合、使用中のテーマを返します。それ以外の場合は、現在のテーマを&lt;em&gt;themename&lt;/em&gt;に設定し、すべてのウィジェットを更新して、&amp;lt;&amp;lt; ThemeChanged &amp;gt;&amp;gt;イベントを発行します。</target>
        </trans-unit>
        <trans-unit id="ba360f6f7820bc6cf274624bc159ffe1e870fd90" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;time&lt;/em&gt; is non-zero, this function requests that a &lt;a href=&quot;#signal.SIGALRM&quot;&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;/a&gt; signal be sent to the process in &lt;em&gt;time&lt;/em&gt; seconds. Any previously scheduled alarm is canceled (only one alarm can be scheduled at any time). The returned value is then the number of seconds before any previously set alarm was to have been delivered. If &lt;em&gt;time&lt;/em&gt; is zero, no alarm is scheduled, and any scheduled alarm is canceled. If the return value is zero, no alarm is currently scheduled.</source>
          <target state="translated">If &lt;em&gt;time&lt;/em&gt; is non-zero, this function requests that a &lt;a href=&quot;#signal.SIGALRM&quot;&gt; &lt;code&gt;SIGALRM&lt;/code&gt; &lt;/a&gt; signal be sent to the process in &lt;em&gt;time&lt;/em&gt; seconds. Any previously scheduled alarm is canceled (only one alarm can be scheduled at any time). The returned value is then the number of seconds before any previously set alarm was to have been delivered. If &lt;em&gt;time&lt;/em&gt; is zero, no alarm is scheduled, and any scheduled alarm is canceled. If the return value is zero, no alarm is currently scheduled.</target>
        </trans-unit>
        <trans-unit id="28532016ce2dec2f43f2440bb50823bc42171d6a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;time&lt;/em&gt; is non-zero, this function requests that a &lt;code&gt;SIGALRM&lt;/code&gt; signal be sent to the process in &lt;em&gt;time&lt;/em&gt; seconds. Any previously scheduled alarm is canceled (only one alarm can be scheduled at any time). The returned value is then the number of seconds before any previously set alarm was to have been delivered. If &lt;em&gt;time&lt;/em&gt; is zero, no alarm is scheduled, and any scheduled alarm is canceled. If the return value is zero, no alarm is currently scheduled.</source>
          <target state="translated">場合は&lt;em&gt;、時間が&lt;/em&gt;あることゼロで、この関数は、要求 &lt;code&gt;SIGALRM&lt;/code&gt; のシグナルがプロセスに送信され&lt;em&gt;た時間&lt;/em&gt;秒。以前にスケジュールされたアラームはキャンセルされます（いつでもスケジュールできるアラームは1つだけです）。戻り値は、以前に設定されたアラームが配信される前の秒数になります。場合は&lt;em&gt;時間が&lt;/em&gt;ゼロである、何のアラームが予定されていない、と任意のスケジュールされた警報は解除されます。戻り値がゼロの場合、現在アラームはスケジュールされていません。</target>
        </trans-unit>
        <trans-unit id="497079b5b5c0bcfc850eb270a835cdeff89fcdd1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;timeout&lt;/em&gt; is not specified then it will return immediately. If &lt;em&gt;timeout&lt;/em&gt; is a number then this specifies the maximum time in seconds to block. If &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then an infinite timeout is used.</source>
          <target state="translated">&lt;em&gt;タイムアウト&lt;/em&gt;が指定されていない場合は、すぐに戻ります。場合は&lt;em&gt;タイムアウトが&lt;/em&gt;数で、これはブロックに最大の時間を秒単位で指定します。場合は&lt;em&gt;タイムアウトは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; そして無限のタイムアウトが使用されています。</target>
        </trans-unit>
        <trans-unit id="38330b7243617ce7e169c4b1ec03b6f57cadf500" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;times&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; and &lt;em&gt;ns&lt;/em&gt; is unspecified, this is equivalent to specifying &lt;code&gt;ns=(atime_ns, mtime_ns)&lt;/code&gt; where both times are the current time.</source>
          <target state="translated">場合&lt;em&gt;倍&lt;/em&gt;である &lt;code&gt;None&lt;/code&gt; と&lt;em&gt;NSは&lt;/em&gt;不特定ではない、これは指定することと同じである &lt;code&gt;ns=(atime_ns, mtime_ns)&lt;/code&gt; 両方の時間が現在の時間です。</target>
        </trans-unit>
        <trans-unit id="8db77a303cd49acf6960de74cc642fc8c3611507" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;times&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a 2-tuple of the form &lt;code&gt;(atime, mtime)&lt;/code&gt; where each member is an int or float expressing seconds.</source>
          <target state="translated">&lt;em&gt;times&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、各メンバーは秒を表すintまたはfloat の形式 &lt;code&gt;(atime, mtime)&lt;/code&gt; 2タプルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="347e1c7b8f66668341af1aa8af2cae34d5219df5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;typed&lt;/em&gt; is set to true, function arguments of different types will be cached separately. For example, &lt;code&gt;f(3)&lt;/code&gt; and &lt;code&gt;f(3.0)&lt;/code&gt; will be treated as distinct calls with distinct results.</source>
          <target state="translated">場合&lt;em&gt;型付きが&lt;/em&gt; trueに設定されている、さまざまな種類の関数の引数は、個別にキャッシュされます。たとえば、 &lt;code&gt;f(3)&lt;/code&gt; と &lt;code&gt;f(3.0)&lt;/code&gt; は異なる呼び出しとして扱われ、異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="35713c7d2a1b17f3adfee94e67fe51913e45bad5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tz&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass, and the current date and time are converted to &lt;em&gt;tz&lt;/em&gt;&amp;rsquo;s time zone.</source>
          <target state="translated">&lt;em&gt;tz&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスである必要があり、現在の日付と時刻は&lt;em&gt;tz&lt;/em&gt;のタイムゾーンに変換されます。</target>
        </trans-unit>
        <trans-unit id="260c901c4e473510ed15a11c2c9dd83021ee8189" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tz&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass, and the timestamp is converted to &lt;em&gt;tz&lt;/em&gt;&amp;rsquo;s time zone.</source>
          <target state="translated">&lt;em&gt;tz&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、それは&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスでなければならず、タイムスタンプは&lt;em&gt;tz&lt;/em&gt;のタイムゾーンに変換されます。</target>
        </trans-unit>
        <trans-unit id="671abd2eb30c7f4417a4a9a96ff13ac2bb83e4e0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;umask&lt;/em&gt; is not negative, the umask() system call will be made in the child process prior to the execution of the subprocess.</source>
          <target state="translated">If &lt;em&gt;umask&lt;/em&gt; is not negative, the umask() system call will be made in the child process prior to the execution of the subprocess.</target>
        </trans-unit>
        <trans-unit id="8a43748fde1efea83cc1d49bf1dde82fa0eb165d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;unixfrom&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, print the envelope header delimiter used by the Unix mailbox format (see &lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;) before the first of the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; headers of the root message object. If the root object has no envelope header, craft a standard one. The default is &lt;code&gt;False&lt;/code&gt;. Note that for subparts, no envelope header is ever printed.</source>
          <target state="translated">&lt;em&gt;unixfrom&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、ルートメッセージオブジェクトの&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;ヘッダーの最初の前に、Unixメールボックス形式（&lt;a href=&quot;mailbox#module-mailbox&quot;&gt; &lt;code&gt;mailbox&lt;/code&gt; &lt;/a&gt;参照）で使用されるエンベロープヘッダー区切り文字を出力します。ルートオブジェクトにエンベロープヘッダーがない場合は、標準のヘッダーを作成します。デフォルトは &lt;code&gt;False&lt;/code&gt; です。サブパーツの場合、エンベロープヘッダーは印刷されないことに注意してください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09ee2106f178148b8593077159fed634361f4c90" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;unixfrom&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, print the envelope header delimiter used by the Unix mailbox format (see &lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;) before the first of the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; headers of the root message object. If the root object has no envelope header, craft a standard one. The default is &lt;code&gt;False&lt;/code&gt;. Note that for subparts, no envelope header is ever printed.</source>
          <target state="translated">&lt;em&gt;unixfrom&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、ルートメッセージオブジェクトの&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;ヘッダーの最初の前に、Unixメールボックス形式（&lt;a href=&quot;mailbox#module-mailbox&quot;&gt; &lt;code&gt;mailbox&lt;/code&gt; &lt;/a&gt;参照）で使用されるエンベロープヘッダー区切り文字を出力します。ルートオブジェクトにエンベロープヘッダーがない場合は、標準のヘッダーを作成します。デフォルトは &lt;code&gt;False&lt;/code&gt; です。サブパーツの場合、エンベロープヘッダーは印刷されないことに注意してください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="564c391e2eea7b00e0d4511879cbcfaf5a4d8d17" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;uri&lt;/em&gt; is true, &lt;em&gt;database&lt;/em&gt; is interpreted as a URI. This allows you to specify options. For example, to open a database in read-only mode you can use:</source>
          <target state="translated">場合&lt;em&gt;URIが&lt;/em&gt; trueの場合、&lt;em&gt;データベースは、&lt;/em&gt; URIとして解釈されます。これにより、オプションを指定できます。たとえば、データベースを読み取り専用モードで開くには、次のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="92ee0e1dd0fe08e277eb2f16cc058b3ac9c272b9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; contains a fragment identifier, return a modified version of &lt;em&gt;url&lt;/em&gt; with no fragment identifier, and the fragment identifier as a separate string. If there is no fragment identifier in &lt;em&gt;url&lt;/em&gt;, return &lt;em&gt;url&lt;/em&gt; unmodified and an empty string.</source>
          <target state="translated">&lt;em&gt;url&lt;/em&gt;にフラグメント識別子が含まれている場合、フラグメント識別子のない変更されたバージョンの&lt;em&gt;url&lt;/em&gt;を返し、フラグメント識別子を別の文字列として返します。&lt;em&gt;url&lt;/em&gt;にフラグメント識別子がない場合、変更されていない&lt;em&gt;url&lt;/em&gt;と空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e5f91bc86de3ed1dffc056104c7cbb413cf49813" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; is an absolute URL (that is, it starts with &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;scheme://&lt;/code&gt;), the &lt;em&gt;url&lt;/em&gt;&amp;rsquo;s hostname and/or scheme will be present in the result. For example:</source>
          <target state="translated">If &lt;em&gt;url&lt;/em&gt; is an absolute URL (that is, it starts with &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;scheme://&lt;/code&gt; ), the &lt;em&gt;url&lt;/em&gt;&amp;rsquo;s hostname and/or scheme will be present in the result. For example:</target>
        </trans-unit>
        <trans-unit id="35a93d83feb3c7efc87442bcc3ea9ca48667e136" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; is an absolute URL (that is, starting with &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;scheme://&lt;/code&gt;), the &lt;em&gt;url&lt;/em&gt;&amp;rsquo;s host name and/or scheme will be present in the result. For example:</source>
          <target state="translated">場合は&lt;em&gt;、URLは&lt;/em&gt;（、で始まる絶対URLである &lt;code&gt;//&lt;/code&gt; または &lt;code&gt;scheme://&lt;/code&gt; ）、&lt;em&gt;URL&lt;/em&gt;のホスト名および/またはスキームは、結果で存在するであろう。例えば：</target>
        </trans-unit>
        <trans-unit id="d52da6544fdd2712a853ec73945e433591662e8f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;use_builtin_types&lt;/em&gt; is true (the default) binary data will be returned as instances of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, otherwise it is returned as instances of &lt;a href=&quot;#plistlib.Data&quot;&gt;&lt;code&gt;Data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;use_builtin_typesが&lt;/em&gt;真である（デフォルト）のバイナリデータは、のインスタンスとして返されます&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;それ以外の場合は、のインスタンスとして返され、&lt;a href=&quot;#plistlib.Data&quot;&gt; &lt;code&gt;Data&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="981f67d5d84b9f07425940203d6eec1b5f6b9559" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;user&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the setreuid() system call will be made in the child process prior to the execution of the subprocess. If the provided value is a string, it will be looked up via &lt;a href=&quot;pwd#pwd.getpwnam&quot;&gt;&lt;code&gt;pwd.getpwnam()&lt;/code&gt;&lt;/a&gt; and the value in &lt;code&gt;pw_uid&lt;/code&gt; will be used. If the value is an integer, it will be passed verbatim. (POSIX only)</source>
          <target state="translated">If &lt;em&gt;user&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; , the setreuid() system call will be made in the child process prior to the execution of the subprocess. If the provided value is a string, it will be looked up via &lt;a href=&quot;pwd#pwd.getpwnam&quot;&gt; &lt;code&gt;pwd.getpwnam()&lt;/code&gt; &lt;/a&gt; and the value in &lt;code&gt;pw_uid&lt;/code&gt; will be used. If the value is an integer, it will be passed verbatim. (POSIX only)</target>
        </trans-unit>
        <trans-unit id="6a9f1ac8559eac5c86eefcea83c87b1263668062" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;user_function&lt;/em&gt; is specified, it must be a callable. This allows the &lt;em&gt;lru_cache&lt;/em&gt; decorator to be applied directly to a user function, leaving the &lt;em&gt;maxsize&lt;/em&gt; at its default value of 128:</source>
          <target state="translated">&lt;em&gt;user_function&lt;/em&gt;が指定されている場合、それは呼び出し可能でなければなりません。これにより、&lt;em&gt;lru_cache&lt;/em&gt;デコレーターをユーザー関数に直接適用して、&lt;em&gt;maxsize&lt;/em&gt;をデフォルト値の128のままにすることができます。</target>
        </trans-unit>
        <trans-unit id="a9352d72ddc99ca448cdec42d9f75b91943270d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;validate&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default), characters that are neither in the normal base-64 alphabet nor the alternative alphabet are discarded prior to the padding check. If &lt;em&gt;validate&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, these non-alphabet characters in the input result in a &lt;a href=&quot;binascii#binascii.Error&quot;&gt;&lt;code&gt;binascii.Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;検証が&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; （デフォルト）、通常のベース64アルファベットや代替アルファベットでもないん文字がパディングチェックする前に破棄されます。&lt;em&gt;validate&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、入力内のこれらの非アルファベット文字は&lt;a href=&quot;binascii#binascii.Error&quot;&gt; &lt;code&gt;binascii.Error&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="041b397f09c0fc84d045447fef90474b85a692b7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, the binary floating point value is losslessly converted to its exact decimal equivalent. This conversion can often require 53 or more digits of precision. For example, &lt;code&gt;Decimal(float('1.1'))&lt;/code&gt; converts to &lt;code&gt;Decimal('1.100000000000000088817841970012523233890533447265625')&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;値が&lt;/em&gt;ある&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;、バイナリ浮動小数点値は、可逆その正確な小数等価に変換されます。多くの場合、この変換には53桁以上の精度が必要です。たとえば、 &lt;code&gt;Decimal(float('1.1'))&lt;/code&gt; は &lt;code&gt;Decimal('1.100000000000000088817841970012523233890533447265625')&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="16a5fca024ec28b87ad8022c2ff864fdc8a9edce" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is a &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;, it should have three components, a sign (&lt;code&gt;0&lt;/code&gt; for positive or &lt;code&gt;1&lt;/code&gt; for negative), a &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; of digits, and an integer exponent. For example, &lt;code&gt;Decimal((0, (1, 4, 1, 4), -3))&lt;/code&gt; returns &lt;code&gt;Decimal('1.414')&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt;が&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;場合、3つのコンポーネント、符号（正の場合は &lt;code&gt;0&lt;/code&gt; 、負の場合は &lt;code&gt;1&lt;/code&gt; ）、数字の&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;、および整数の指数が必要です。たとえば、 &lt;code&gt;Decimal((0, (1, 4, 1, 4), -3))&lt;/code&gt; &lt;code&gt;Decimal('1.414')&lt;/code&gt; ）、-3））はDecimal（ '1.414'）を返します。</target>
        </trans-unit>
        <trans-unit id="e6a26098b49583f3821ec64d052c3aa7592a7689" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, this function prints &lt;code&gt;repr(value)&lt;/code&gt; to &lt;code&gt;sys.stdout&lt;/code&gt;, and saves &lt;em&gt;value&lt;/em&gt; in &lt;code&gt;builtins._&lt;/code&gt;. If &lt;code&gt;repr(value)&lt;/code&gt; is not encodable to &lt;code&gt;sys.stdout.encoding&lt;/code&gt; with &lt;code&gt;sys.stdout.errors&lt;/code&gt; error handler (which is probably &lt;code&gt;'strict'&lt;/code&gt;), encode it to &lt;code&gt;sys.stdout.encoding&lt;/code&gt; with &lt;code&gt;'backslashreplace'&lt;/code&gt; error handler.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、この関数は &lt;code&gt;repr(value)&lt;/code&gt; を &lt;code&gt;sys.stdout&lt;/code&gt; に出力し、 &lt;code&gt;builtins._&lt;/code&gt; に&lt;em&gt;値&lt;/em&gt;を保存し&lt;em&gt;ます&lt;/em&gt;。場合 &lt;code&gt;repr(value)&lt;/code&gt; にエンコード可能ではありません &lt;code&gt;sys.stdout.encoding&lt;/code&gt; で &lt;code&gt;sys.stdout.errors&lt;/code&gt; の（おそらくエラーハンドラ &lt;code&gt;'strict'&lt;/code&gt; ）、それをコード化する &lt;code&gt;sys.stdout.encoding&lt;/code&gt; で &lt;code&gt;'backslashreplace'&lt;/code&gt; エラーハンドラ。</target>
        </trans-unit>
        <trans-unit id="b6c068a3fde871a0618297833b8d4828d3974011" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;vars&lt;/em&gt; is provided, it must be a dictionary of variables that will update the dictionary return by &lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt;&lt;code&gt;get_config_vars()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;varsを指定する&lt;/em&gt;場合は、&lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt; &lt;code&gt;get_config_vars()&lt;/code&gt; &lt;/a&gt;によって返される辞書を更新する変数の辞書でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a8460fba468dd9bc7ed1d9f47454b97a770706f8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;vars&lt;/em&gt; is provided, it must be a dictionary of variables that will update the dictionary used to expand the paths.</source>
          <target state="translated">&lt;em&gt;varsを指定する&lt;/em&gt;場合は、パスの展開に使用される辞書を更新する変数の辞書である必要があります。</target>
        </trans-unit>
        <trans-unit id="65259ad55e207c66c56ade920231ad288fcf9123" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;verbosity&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;doctest#doctest.testmod&quot;&gt;&lt;code&gt;doctest.testmod()&lt;/code&gt;&lt;/a&gt; is run with verbosity set to &lt;a href=&quot;#test.support.verbose&quot;&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/a&gt;. Otherwise, it is run with verbosity set to &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;optionflags&lt;/em&gt; is passed as &lt;code&gt;optionflags&lt;/code&gt; to &lt;a href=&quot;doctest#doctest.testmod&quot;&gt;&lt;code&gt;doctest.testmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;verbosity&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;doctest#doctest.testmod&quot;&gt; &lt;code&gt;doctest.testmod()&lt;/code&gt; &lt;/a&gt;は、verbosityを&lt;a href=&quot;#test.support.verbose&quot;&gt; &lt;code&gt;verbose&lt;/code&gt; に&lt;/a&gt;設定して実行されます。それ以外の場合は、冗長性を &lt;code&gt;None&lt;/code&gt; に設定して実行されます。&lt;em&gt;optionflagsはを&lt;/em&gt;として渡され &lt;code&gt;optionflags&lt;/code&gt; はし&lt;a href=&quot;doctest#doctest.testmod&quot;&gt; &lt;code&gt;doctest.testmod()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="942606e11a16e77c16cf6f2083e90d213368e12c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;wait&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; then this method will not return until all the pending futures are done executing and the resources associated with the executor have been freed. If &lt;em&gt;wait&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; then this method will return immediately and the resources associated with the executor will be freed when all pending futures are done executing. Regardless of the value of &lt;em&gt;wait&lt;/em&gt;, the entire Python program will not exit until all pending futures are done executing.</source>
          <target state="translated">&lt;em&gt;wait&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、保留中のフューチャーがすべて実行され、executorに関連付けられたリソースが解放されるまで、このメソッドは戻りません。&lt;em&gt;wait&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、このメソッドはすぐに戻り、保留中のフューチャーがすべて実行されると、executorに関連付けられたリソースが解放されます。&lt;em&gt;wait&lt;/em&gt;の値に関係なく、保留中のフューチャーがすべて実行されるまで、Pythonプログラム全体は終了しません。</target>
        </trans-unit>
        <trans-unit id="1c093aaca359d099d06e48dc626af24bc9190ff1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;write_through&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, calls to &lt;code&gt;write()&lt;/code&gt; are guaranteed not to be buffered: any data written on the &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; object is immediately handled to its underlying binary &lt;em&gt;buffer&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;write_through&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;write()&lt;/code&gt; への呼び出しはバッファーに入れられないことが保証されます&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;オブジェクトに書き込まれたデータはすべて、基礎となるバイナリ&lt;em&gt;バッファーに&lt;/em&gt;すぐに処理されます。</target>
        </trans-unit>
        <trans-unit id="89941db7dc37fa051d978feefe492a3b2d60c160" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is a NaN (not a number), return &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is a NaN (not a number), return &lt;em&gt;x&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="fbd4a3eed4c5fc90391439bed8e6c3cdba1f0223" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is a positive infinity, return &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is a positive infinity, return &lt;em&gt;x&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="bf5e9e1b1ced1ef52b23a71fc8faa47dd2371ade" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is equal to &lt;em&gt;y&lt;/em&gt;, return &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is equal to &lt;em&gt;y&lt;/em&gt;, return &lt;em&gt;y&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4f2027938d5b7550dde99cbf6a67846b4b5839b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is equal to the largest positive representable float, return the value of the least significant bit of &lt;em&gt;x&lt;/em&gt;, such that the first float smaller than &lt;em&gt;x&lt;/em&gt; is &lt;code&gt;x - ulp(x)&lt;/code&gt;.</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is equal to the largest positive representable float, return the value of the least significant bit of &lt;em&gt;x&lt;/em&gt;, such that the first float smaller than &lt;em&gt;x&lt;/em&gt; is &lt;code&gt;x - ulp(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73659e25dc030b5fc23225d81923aa74c8ea28c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is equal to zero, return the smallest positive &lt;em&gt;denormalized&lt;/em&gt; representable float (smaller than the minimum positive &lt;em&gt;normalized&lt;/em&gt; float, &lt;a href=&quot;sys#sys.float_info&quot;&gt;&lt;code&gt;sys.float_info.min&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is equal to zero, return the smallest positive &lt;em&gt;denormalized&lt;/em&gt; representable float (smaller than the minimum positive &lt;em&gt;normalized&lt;/em&gt; float, &lt;a href=&quot;sys#sys.float_info&quot;&gt; &lt;code&gt;sys.float_info.min&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c535ae7c392d25365cbc29e7cb109ff9af4fc6e6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is negative, return &lt;code&gt;ulp(-x)&lt;/code&gt;.</source>
          <target state="translated">If &lt;em&gt;x&lt;/em&gt; is negative, return &lt;code&gt;ulp(-x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eabe5555eb349dd57c749df6fcb8345ed8d6ff8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is not a number or if &lt;em&gt;base&lt;/em&gt; is given, then &lt;em&gt;x&lt;/em&gt; must be a string, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; instance representing an &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#integers&quot;&gt;integer literal&lt;/a&gt; in radix &lt;em&gt;base&lt;/em&gt;. Optionally, the literal can be preceded by &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; (with no space in between) and surrounded by whitespace. A base-n literal consists of the digits 0 to n-1, with &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt; (or &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;) having values 10 to 35. The default &lt;em&gt;base&lt;/em&gt; is 10. The allowed values are 0 and 2&amp;ndash;36. Base-2, -8, and -16 literals can be optionally prefixed with &lt;code&gt;0b&lt;/code&gt;/&lt;code&gt;0B&lt;/code&gt;, &lt;code&gt;0o&lt;/code&gt;/&lt;code&gt;0O&lt;/code&gt;, or &lt;code&gt;0x&lt;/code&gt;/&lt;code&gt;0X&lt;/code&gt;, as with integer literals in code. Base 0 means to interpret exactly as a code literal, so that the actual base is 2, 8, 10, or 16, and so that &lt;code&gt;int('010', 0)&lt;/code&gt; is not legal, while &lt;code&gt;int('010')&lt;/code&gt; is, as well as &lt;code&gt;int('010', 8)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が数値ではない場合、または&lt;em&gt;base&lt;/em&gt;が指定されている場合、&lt;em&gt;x&lt;/em&gt;は、基数&lt;em&gt;baseの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#integers&quot;&gt;整数リテラル&lt;/a&gt;を表す文字列、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;、またはバイト&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;インスタンスでなければなりません。オプションで、リテラルの前に &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; （間にスペースなし）を置き、空白で囲むことができます。 base-nリテラルは、0からn-1の数字で構成され、 &lt;code&gt;a&lt;/code&gt; から &lt;code&gt;z&lt;/code&gt; （または &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;Z&lt;/code&gt; ）の値は10から35 です。デフォルトの&lt;em&gt;基数&lt;/em&gt;は10です。許可される値は0と2から36です。 Base-2、-8、および-16リテラルには、オプションで &lt;code&gt;0b&lt;/code&gt; をプレフィックスとして付けることができます&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;/ &lt;code&gt;0B&lt;/code&gt; 、 &lt;code&gt;0o&lt;/code&gt; / &lt;code&gt;0O&lt;/code&gt; 、または &lt;code&gt;0x&lt;/code&gt; / &lt;code&gt;0X&lt;/code&gt; 、コード内の整数リテラルと同様。ベース0は、コードリテラルとして正確に解釈することを意味します。したがって、実際のベースは2、8、10、または16であり、 &lt;code&gt;int('010', 0)&lt;/code&gt; は無効ですが、 &lt;code&gt;int('010')&lt;/code&gt; は、 &lt;code&gt;int('010', 8)&lt;/code&gt; も同様です。</target>
        </trans-unit>
        <trans-unit id="00d4afdbff112153e973e5a044420332986c19dd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is not a number or if &lt;em&gt;base&lt;/em&gt; is given, then &lt;em&gt;x&lt;/em&gt; must be a string, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; instance representing an &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#integers&quot;&gt;integer literal&lt;/a&gt; in radix &lt;em&gt;base&lt;/em&gt;. Optionally, the literal can be preceded by &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; (with no space in between) and surrounded by whitespace. A base-n literal consists of the digits 0 to n-1, with &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt; (or &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;) having values 10 to 35. The default &lt;em&gt;base&lt;/em&gt; is 10. The allowed values are 0 and 2&amp;ndash;36. Base-2, -8, and -16 literals can be optionally prefixed with &lt;code&gt;0b&lt;/code&gt;/&lt;code&gt;0B&lt;/code&gt;, &lt;code&gt;0o&lt;/code&gt;/&lt;code&gt;0O&lt;/code&gt;, or &lt;code&gt;0x&lt;/code&gt;/&lt;code&gt;0X&lt;/code&gt;, as with integer literals in code. Base 0 means to interpret exactly as a code literal, so that the actual base is 2, 8, 10, or 16, and so that &lt;code&gt;int('010', 0)&lt;/code&gt; is not legal, while &lt;code&gt;int('010')&lt;/code&gt; is, as well as &lt;code&gt;int('010', 8)&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;、xは&lt;/em&gt;数ではない場合、または&lt;em&gt;塩基が&lt;/em&gt;与えられ、その後、&lt;em&gt;xは&lt;/em&gt;文字列である必要があり、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;インスタンスを表す&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#integers&quot;&gt;整数リテラル&lt;/a&gt;で基数&lt;em&gt;ベース&lt;/em&gt;。オプションで、リテラルの前に &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; （間にスペースを入れないで）を付け、空白で囲むことができます。基数nリテラルは、0からn-1の数字で構成され、 &lt;code&gt;a&lt;/code&gt; から &lt;code&gt;z&lt;/code&gt; （または &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;Z&lt;/code&gt; ）の値は10から35です。デフォルトの&lt;em&gt;基数&lt;/em&gt;は10です。許可される値は0と2から36です。 Base-2、-8、および-16リテラルには、オプションで &lt;code&gt;0b&lt;/code&gt; のプレフィックスを付けることができます。/ &lt;code&gt;0B&lt;/code&gt; 、 &lt;code&gt;0o&lt;/code&gt; / &lt;code&gt;0O&lt;/code&gt; 、または &lt;code&gt;0x&lt;/code&gt; / &lt;code&gt;0X&lt;/code&gt; 、コード内の整数リテラルと同様。基数0は、コードリテラルとして正確に解釈することを意味します。したがって、実際の基数は2、8、10、または16であり、 &lt;code&gt;int('010', 0)&lt;/code&gt; は無効ですが、 &lt;code&gt;int('010')&lt;/code&gt; は同様に &lt;code&gt;int('010', 8)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ca00c56cdce0b10d4e7ca75f4203a4d4dbe4b3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;x&lt;/em&gt; must be a pair of coordinates or a &lt;a href=&quot;#turtle.Vec2D&quot;&gt;&lt;code&gt;Vec2D&lt;/code&gt;&lt;/a&gt; (e.g. as returned by &lt;a href=&quot;#turtle.pos&quot;&gt;&lt;code&gt;pos()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、&lt;em&gt;x&lt;/em&gt;は座標のペアまたは&lt;a href=&quot;#turtle.Vec2D&quot;&gt; &lt;code&gt;Vec2D&lt;/code&gt; &lt;/a&gt;（たとえば、&lt;a href=&quot;#turtle.pos&quot;&gt; &lt;code&gt;pos()&lt;/code&gt; &lt;/a&gt;によって返される）でなければなりません。</target>
        </trans-unit>
        <trans-unit id="fdae1f0f9315700b86b3f53ba94aa3d7efe1b994" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;zdict&lt;/em&gt; is a mutable object (such as a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;), you must not modify its contents between the call to &lt;a href=&quot;#zlib.decompressobj&quot;&gt;&lt;code&gt;decompressobj()&lt;/code&gt;&lt;/a&gt; and the first call to the decompressor&amp;rsquo;s &lt;code&gt;decompress()&lt;/code&gt; method.</source>
          <target state="translated">場合&lt;em&gt;zdictは&lt;/em&gt;（のような変更可能なオブジェクトである&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;）、あなたはへの呼び出しの間でその内容を変更してはなりません&lt;a href=&quot;#zlib.decompressobj&quot;&gt; &lt;code&gt;decompressobj()&lt;/code&gt; &lt;/a&gt;およびデコンプレッサのを最初に呼び出し &lt;code&gt;decompress()&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="98b6444e6bf4fa2e7a824739c1040724489b08e5" translate="yes" xml:space="preserve">
          <source>If &lt;strong&gt;name&lt;/strong&gt; has no leading dots, then &lt;strong&gt;name&lt;/strong&gt; is simply returned. This allows for usage such as &lt;code&gt;importlib.util.resolve_name('sys', __package__)&lt;/code&gt; without doing a check to see if the &lt;strong&gt;package&lt;/strong&gt; argument is needed.</source>
          <target state="translated">&lt;strong&gt;名前&lt;/strong&gt;に先行ドットがない場合、&lt;strong&gt;名前&lt;/strong&gt;は単に返されます。これにより、&lt;strong&gt;package&lt;/strong&gt;引数が必要かどうかを確認するチェックを行わなくても、 &lt;code&gt;importlib.util.resolve_name('sys', __package__)&lt;/code&gt; などの使用が可能になります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4184d0852443b8deb67c16f50527b5c78f15fd7" translate="yes" xml:space="preserve">
          <source>If &lt;strong&gt;name&lt;/strong&gt; is for a submodule (contains a dot), the parent module is automatically imported.</source>
          <target state="translated">場合&lt;strong&gt;名前は&lt;/strong&gt;（ドットが含まれている）サブモジュール用で、親モジュールが自動的にインポートされます。</target>
        </trans-unit>
        <trans-unit id="a96ea5a5013dd3fe9b6e8602e6df4e7d733e2d24" translate="yes" xml:space="preserve">
          <source>If EOF is reached before the complete separator is found, an &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt;&lt;code&gt;IncompleteReadError&lt;/code&gt;&lt;/a&gt; exception is raised, and the internal buffer is reset. The &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt;&lt;code&gt;IncompleteReadError.partial&lt;/code&gt;&lt;/a&gt; attribute may contain a portion of the separator.</source>
          <target state="translated">完全なセパレータが見つかる前にEOFに達すると、&lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt; &lt;code&gt;IncompleteReadError&lt;/code&gt; &lt;/a&gt;例外が発生し、内部バッファがリセットされます。&lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt; &lt;code&gt;IncompleteReadError.partial&lt;/code&gt; の&lt;/a&gt;属性は、セパレータの部分を含んでいてもよいです。</target>
        </trans-unit>
        <trans-unit id="64966df5aaf0fe93384998cc74db09b1b1e0908b" translate="yes" xml:space="preserve">
          <source>If EOF is received and &lt;code&gt;\n&lt;/code&gt; was not found, the method returns partially read data.</source>
          <target state="translated">EOFが受信され、 &lt;code&gt;\n&lt;/code&gt; が見つからなかった場合、メソッドは部分的に読み取られたデータを返します。</target>
        </trans-unit>
        <trans-unit id="37ccc310a3c93f0e5b0c94cdc94d47902bd4a292" translate="yes" xml:space="preserve">
          <source>If EOF is received and the internal buffer is empty, return an empty &lt;code&gt;bytes&lt;/code&gt; object.</source>
          <target state="translated">EOFが受信され、内部バッファーが空の場合、空の &lt;code&gt;bytes&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b333fc07ff7677c5890283c373e9cd05a53e6b15" translate="yes" xml:space="preserve">
          <source>If EOF was received and the internal buffer is empty, return an empty &lt;code&gt;bytes&lt;/code&gt; object.</source>
          <target state="translated">EOFが受信され、内部バッファが空の場合、空の &lt;code&gt;bytes&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="565904950e6bb3477bfa33cb4d9c35fc162ea0d1" translate="yes" xml:space="preserve">
          <source>If IDLE is started with the -n command line switch it will run in a single process and will not create the subprocess which runs the RPC Python execution server. This can be useful if Python cannot create the subprocess or the RPC socket interface on your platform. However, in this mode user code is not isolated from IDLE itself. Also, the environment is not restarted when Run/Run Module (F5) is selected. If your code has been modified, you must reload() the affected modules and re-import any specific items (e.g. from foo import baz) if the changes are to take effect. For these reasons, it is preferable to run IDLE with the default subprocess if at all possible.</source>
          <target state="translated">n コマンドラインスイッチで IDLE が起動された場合、単一プロセスで実行され、RPC Python 実行サーバを実行するサブプロセスは作成されません。これは、Pythonがサブプロセスやプラットフォーム上のRPCソケットインターフェイスを作成できない場合に便利です。しかし、このモードでは、ユーザーコードはIDLE自体から分離されません。また、Run/Run Module (F5)を選択しても環境は再起動されません。コードが変更されている場合は、影響を受けるモジュールをリロード()し、変更が有効になるように特定の項目を再インポートしなければなりません (例:foo import baz)。これらの理由から、可能な限りデフォルトのサブプロセスで IDLE を実行することが望ましいです。</target>
        </trans-unit>
        <trans-unit id="4b89fe059f09f502735b8f9ac90a0efcb1f4144f" translate="yes" xml:space="preserve">
          <source>If IDLE quits with no message, and it was not started from a console, try starting from a console (&lt;code&gt;python -m idlelib&lt;/code&gt;) and see if a message appears.</source>
          <target state="translated">IDLEがメッセージなしで終了し、コンソールから開始されなかった場合は、コンソール（ &lt;code&gt;python -m idlelib&lt;/code&gt; ）から開始して、メッセージが表示されるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="4e02c39cf406d0755b61de585d444500dd611ac8" translate="yes" xml:space="preserve">
          <source>If IDLE quits with no message, and it was not started from a console, try starting it from a console or terminal (&lt;code&gt;python -m idlelib&lt;/code&gt;) and see if this results in an error message.</source>
          <target state="translated">IDLEがメッセージなしで終了し、コンソールから起動されなかった場合は、コンソールまたはターミナル（ &lt;code&gt;python -m idlelib&lt;/code&gt; ）から起動してみて、エラーメッセージが表示されるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="6da326dbc2e0f620d5b3562ac4003336f6c4fcbf" translate="yes" xml:space="preserve">
          <source>If Python is configured &amp;ndash;with-pydebug, it also performs some expensive internal consistency checks.</source>
          <target state="translated">Pythonが&amp;ndash;with-pydebugで構成されている場合は、高価な内部整合性チェックも実行されます。</target>
        </trans-unit>
        <trans-unit id="7e8ad6a5bf4b4e800e3d3c07556ce745ad232c22" translate="yes" xml:space="preserve">
          <source>If TOS is &lt;code&gt;NULL&lt;/code&gt; (pushed by &lt;a href=&quot;#opcode-BEGIN_FINALLY&quot;&gt;&lt;code&gt;BEGIN_FINALLY&lt;/code&gt;&lt;/a&gt;) continue from the next instruction. TOS is popped.</source>
          <target state="translated">TOSが &lt;code&gt;NULL&lt;/code&gt; の場合（&lt;a href=&quot;#opcode-BEGIN_FINALLY&quot;&gt; &lt;code&gt;BEGIN_FINALLY&lt;/code&gt; &lt;/a&gt;によってプッシュされる）、次の命令から続行します。TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="4cf9fa5811d78e12561243fd40b78efba546d577" translate="yes" xml:space="preserve">
          <source>If TOS is &lt;code&gt;NULL&lt;/code&gt; or an integer (pushed by &lt;a href=&quot;#opcode-BEGIN_FINALLY&quot;&gt;&lt;code&gt;BEGIN_FINALLY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#opcode-CALL_FINALLY&quot;&gt;&lt;code&gt;CALL_FINALLY&lt;/code&gt;&lt;/a&gt;) it is popped from the stack.</source>
          <target state="translated">TOSが &lt;code&gt;NULL&lt;/code&gt; または整数（&lt;a href=&quot;#opcode-BEGIN_FINALLY&quot;&gt; &lt;code&gt;BEGIN_FINALLY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#opcode-CALL_FINALLY&quot;&gt; &lt;code&gt;CALL_FINALLY&lt;/code&gt; &lt;/a&gt;によってプッシュされる）の場合、それはスタックからポップされます。</target>
        </trans-unit>
        <trans-unit id="f48c5490bf7b7f8935f8dee66c02900d2c4ab8df" translate="yes" xml:space="preserve">
          <source>If TOS is &lt;code&gt;NULL&lt;/code&gt;, calls &lt;code&gt;SECOND(None, None, None)&lt;/code&gt;, removes the function from the stack, leaving TOS, and pushes &lt;code&gt;None&lt;/code&gt; to the stack. Otherwise calls &lt;code&gt;SEVENTH(TOP, SECOND, THIRD)&lt;/code&gt;, shifts the bottom 3 values of the stack down, replaces the empty spot with &lt;code&gt;NULL&lt;/code&gt; and pushes TOS. Finally pushes the result of the call.</source>
          <target state="translated">TOSが &lt;code&gt;NULL&lt;/code&gt; の場合、 &lt;code&gt;SECOND(None, None, None)&lt;/code&gt; 呼び出し、スタックから関数を削除してTOSを残し、 &lt;code&gt;None&lt;/code&gt; をスタックにプッシュします。それ以外の場合は &lt;code&gt;SEVENTH(TOP, SECOND, THIRD)&lt;/code&gt; 呼び出し、スタックの下位3つの値を下にシフトし、空のスポットを &lt;code&gt;NULL&lt;/code&gt; に置き換えてTOSをプッシュします。最後に、呼び出しの結果をプッシュします。</target>
        </trans-unit>
        <trans-unit id="abb8b40f1da2f2b2347978a298ac651c1725f8e8" translate="yes" xml:space="preserve">
          <source>If TOS is an exception type (pushed when an exception has been raised) 6 values are popped from the stack, the first three popped values are used to re-raise the exception and the last three popped values are used to restore the exception state. An exception handler block is removed from the block stack.</source>
          <target state="translated">TOSが例外タイプの場合(例外が発生したときにプッシュされます)、スタックから6つの値がポップされ、最初の3つの値は例外を再発生させるために使用され、最後の3つの値は例外の状態を復元するために使用されます。ブロックスタックから例外ハンドラブロックが削除されます。</target>
        </trans-unit>
        <trans-unit id="2302c4982e8b01f632b216292ea649801c6c0d96" translate="yes" xml:space="preserve">
          <source>If TOS is an exception type (pushed when an exception has been raised) 6 values are popped from the stack, the last three popped values are used to restore the exception state. An exception handler block is removed from the block stack.</source>
          <target state="translated">TOSが例外タイプの場合(例外が発生したときにプッシュされます)、6つの値がスタックからポップされ、最後の3つのポップされた値が例外状態を復元するために使用されます。例外ハンドラブロックはブロックスタックから削除されます。</target>
        </trans-unit>
        <trans-unit id="fd2cf047c9942e0f550e6077fa8d21cb90b76cb7" translate="yes" xml:space="preserve">
          <source>If TOS is an integer (pushed by &lt;a href=&quot;#opcode-CALL_FINALLY&quot;&gt;&lt;code&gt;CALL_FINALLY&lt;/code&gt;&lt;/a&gt;), sets the bytecode counter to TOS. TOS is popped.</source>
          <target state="translated">TOSが整数の場合（&lt;a href=&quot;#opcode-CALL_FINALLY&quot;&gt; &lt;code&gt;CALL_FINALLY&lt;/code&gt; &lt;/a&gt;によってプッシュされる）、バイトコードカウンターをTOSに設定します。TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="f6c824aa2841edf27744c99adfaeb683cc13ab98" translate="yes" xml:space="preserve">
          <source>If TOS is false, sets the bytecode counter to &lt;em&gt;target&lt;/em&gt; and leaves TOS on the stack. Otherwise (TOS is true), TOS is popped.</source>
          <target state="translated">TOSがfalseの場合、バイトコードカウンターを&lt;em&gt;ターゲットに&lt;/em&gt;設定し、TOSをスタックに残します。それ以外の場合（TOSがtrue）、TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="38d252fb2c0b51db170eaaf60178e5958dde0da6" translate="yes" xml:space="preserve">
          <source>If TOS is false, sets the bytecode counter to &lt;em&gt;target&lt;/em&gt;. TOS is popped.</source>
          <target state="translated">TOSがfalseの場合、バイトコードカウンターを&lt;em&gt;targetに設定し&lt;/em&gt;ます。TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="4d11fcb64b49991d5e23ff5378876664a570eb06" translate="yes" xml:space="preserve">
          <source>If TOS is true, sets the bytecode counter to &lt;em&gt;target&lt;/em&gt; and leaves TOS on the stack. Otherwise (TOS is false), TOS is popped.</source>
          <target state="translated">TOSがtrueの場合、バイトコードカウンターを&lt;em&gt;ターゲットに&lt;/em&gt;設定し、TOSをスタックに残します。それ以外の場合（TOSがfalse）、TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="8563156513d08688acbcc0dcf86ef18bbf609716" translate="yes" xml:space="preserve">
          <source>If TOS is true, sets the bytecode counter to &lt;em&gt;target&lt;/em&gt;. TOS is popped.</source>
          <target state="translated">TOSがtrueの場合、バイトコードカウンターを&lt;em&gt;targetに設定し&lt;/em&gt;ます。TOSがポップされます。</target>
        </trans-unit>
        <trans-unit id="7cc1fd538beeedcb8c3c03d14bb5f0c903b80416" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#asyncio.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; is currently blocking, it will resume when all items have been processed (meaning that a &lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; call was received for every item that had been &lt;a href=&quot;#asyncio.Queue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; into the queue).</source>
          <target state="translated">場合は&lt;a href=&quot;#asyncio.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、現在ブロックしているすべての項目が（つまり処理されたとき、それが再開します&lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;の呼び出しがされていたすべてのアイテムのために受信された&lt;a href=&quot;#asyncio.Queue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;キューに）。</target>
        </trans-unit>
        <trans-unit id="0f22d8dc16cef20350827c1688943ea1d51e1b6e" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; specifies a &lt;code&gt;default_factory&lt;/code&gt;, it is called with zero arguments when a default value for the field is needed. For example, to create a new instance of a list, use:</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.field&quot;&gt; &lt;code&gt;field()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;default_factory&lt;/code&gt; を指定している場合、フィールドのデフォルト値が必要なときに、引数なしで呼び出されます。たとえば、リストの新しいインスタンスを作成するには、次を使用します。</target>
        </trans-unit>
        <trans-unit id="88fb56a53222e7bda82191727d7975a25a26bcde" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; is currently blocking, it will resume when all items have been processed (meaning that a &lt;a href=&quot;#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; call was received for every item that had been &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; into the queue).</source>
          <target state="translated">場合は&lt;a href=&quot;#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、現在ブロックしているすべての項目が（つまり処理されたとき、それが再開します&lt;a href=&quot;#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;の呼び出しがされていたすべてのアイテムのために受信された&lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;キューに）。</target>
        </trans-unit>
        <trans-unit id="8738b4c21d7c83839b7de0b30dc8bf54b691da48" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;asyncio-future#asyncio.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt; is called but the Future object is never awaited on, the exception would never be propagated to the user code. In this case, asyncio would emit a log message when the Future object is garbage collected.</source>
          <target state="translated">もし&lt;a href=&quot;asyncio-future#asyncio.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt;と呼ばれているが、今後のオブジェクトが上待望されることはありません、例外がユーザーコードに伝播することはないだろう。この場合、Futureオブジェクトがガベージコレクションされると、asyncioはログメッセージを発行します。</target>
        </trans-unit>
        <trans-unit id="8e4d1e78b745e52d4ebe30db3c57ec62db32a37b" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;queue#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; is currently blocking, it will resume when all items have been processed (meaning that a &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; call was received for every item that had been &lt;a href=&quot;#multiprocessing.Queue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; into the queue).</source>
          <target state="translated">場合は&lt;a href=&quot;queue#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、現在ブロックしているすべての項目が（つまり処理されたとき、それが再開します&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;の呼び出しがされていたすべてのアイテムのために受信された&lt;a href=&quot;#multiprocessing.Queue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt;キューに）。</target>
        </trans-unit>
        <trans-unit id="d195caefdbc4c716fdba586aa4513e02d88af028" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;venv#venv-def&quot;&gt;virtual environment&lt;/a&gt; is in effect, this value will be changed in &lt;code&gt;site.py&lt;/code&gt; to point to the virtual environment. The value for the Python installation will still be available, via &lt;a href=&quot;#sys.base_exec_prefix&quot;&gt;&lt;code&gt;base_exec_prefix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;venv#venv-def&quot;&gt;、仮想環境が&lt;/a&gt;有効である、この値が変更されます &lt;code&gt;site.py&lt;/code&gt; 仮想環境へのポイントに。Pythonインストールの値は、&lt;a href=&quot;#sys.base_exec_prefix&quot;&gt; &lt;code&gt;base_exec_prefix&lt;/code&gt; &lt;/a&gt;を介して引き続き利用できます。</target>
        </trans-unit>
        <trans-unit id="cadf44283b95910d5b7d617daadb92f12ea1588c" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;venv#venv-def&quot;&gt;virtual environment&lt;/a&gt; is in effect, this value will be changed in &lt;code&gt;site.py&lt;/code&gt; to point to the virtual environment. The value for the Python installation will still be available, via &lt;a href=&quot;#sys.base_prefix&quot;&gt;&lt;code&gt;base_prefix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;venv#venv-def&quot;&gt;、仮想環境が&lt;/a&gt;有効である、この値が変更されます &lt;code&gt;site.py&lt;/code&gt; 仮想環境へのポイントに。Pythonインストールの値は、&lt;a href=&quot;#sys.base_prefix&quot;&gt; &lt;code&gt;base_prefix&lt;/code&gt; &lt;/a&gt;を介して引き続き利用できます。</target>
        </trans-unit>
        <trans-unit id="0fe39842fffdbab07a3dcbd6ca0ebfc6e8ddea4e" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;func&lt;/em&gt; call raises an exception, then that exception will be raised when its value is retrieved from the iterator.</source>
          <target state="translated">場合&lt;em&gt;FUNCの&lt;/em&gt;呼び出しが例外を発生させ、その値は、イテレータから取得されたときに、その例外が発生します。</target>
        </trans-unit>
        <trans-unit id="514035568d6c1e520c43a7a94949e224b330525e" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;weights&lt;/em&gt; sequence is specified, selections are made according to the relative weights. Alternatively, if a &lt;em&gt;cum_weights&lt;/em&gt; sequence is given, the selections are made according to the cumulative weights (perhaps computed using &lt;a href=&quot;itertools#itertools.accumulate&quot;&gt;&lt;code&gt;itertools.accumulate()&lt;/code&gt;&lt;/a&gt;). For example, the relative weights &lt;code&gt;[10, 5, 30, 5]&lt;/code&gt; are equivalent to the cumulative weights &lt;code&gt;[10, 15, 45, 50]&lt;/code&gt;. Internally, the relative weights are converted to cumulative weights before making selections, so supplying the cumulative weights saves work.</source>
          <target state="translated">&lt;em&gt;重み&lt;/em&gt;シーケンスが指定されている場合、選択は相対重みに従って行われます。あるいは、&lt;em&gt;cum_weights&lt;/em&gt;シーケンスが指定されている場合、選択は累積ウェイトに従って行われます（おそらく&lt;a href=&quot;itertools#itertools.accumulate&quot;&gt; &lt;code&gt;itertools.accumulate()&lt;/code&gt; &lt;/a&gt;を使用して計算されます）。たとえば、相対ウェイト &lt;code&gt;[10, 5, 30, 5]&lt;/code&gt; 10、5、30、5 ]は、累積ウェイト &lt;code&gt;[10, 15, 45, 50]&lt;/code&gt; 10、15、45、50 ]と同等です。内部的には、相対的な重みは選択を行う前に累積的な重みに変換されるため、累積的な重みを指定すると作業が節約されます。</target>
        </trans-unit>
        <trans-unit id="4f41fb59be7ba020951a7118cd7f719bcea2d8d7" translate="yes" xml:space="preserve">
          <source>If a DOM implementation supports modification of the document, the &lt;code&gt;NodeList&lt;/code&gt; implementation must also support the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">DOM実装がドキュメントの変更をサポートする場合、 &lt;code&gt;NodeList&lt;/code&gt; 実装は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt;メソッドもサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="64bf7c7fc48cc78730527a733ed22e3d79475ac8" translate="yes" xml:space="preserve">
          <source>If a DOM implementation supports modification of the document, the &lt;code&gt;NodeList&lt;/code&gt; implementation must also support the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">DOM実装がドキュメントの変更をサポートしている場合、 &lt;code&gt;NodeList&lt;/code&gt; 実装は&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt;メソッドもサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="5a7b9e9c072e9d7f0dad90957cde9dde1a308b30" translate="yes" xml:space="preserve">
          <source>If a Python build or implementation cannot reasonably compute this information, &lt;a href=&quot;#sys.getallocatedblocks&quot;&gt;&lt;code&gt;getallocatedblocks()&lt;/code&gt;&lt;/a&gt; is allowed to return 0 instead.</source>
          <target state="translated">Pythonのビルドまたは実装がこの情報を合理的に計算できない場合、&lt;a href=&quot;#sys.getallocatedblocks&quot;&gt; &lt;code&gt;getallocatedblocks()&lt;/code&gt; &lt;/a&gt;は代わりに0を返すことができます。</target>
        </trans-unit>
        <trans-unit id="60da62d17196410fef26f1732934782af59026ed" translate="yes" xml:space="preserve">
          <source>If a bytes object is specified as first argument, the buffer is made one item larger than its length so that the last element in the array is a NUL termination character. An integer can be passed as second argument which allows specifying the size of the array if the length of the bytes should not be used.</source>
          <target state="translated">第一引数に bytes オブジェクトを指定した場合、配列の最後の要素が NUL 終了文字になるように、バッファをその長さよりも 1 つ大きくします。第二引数に整数を渡すことができ、バイト長を使用しない場合は配列のサイズを指定することができます。</target>
        </trans-unit>
        <trans-unit id="e0a9df58cde01c85e3e361479c2eaa47542a1d1e" translate="yes" xml:space="preserve">
          <source>If a class is used as a spec then the return value of the mock (the instance of the class) will have the same spec. You can use a class as the spec for an instance object by passing &lt;code&gt;instance=True&lt;/code&gt;. The returned mock will only be callable if instances of the mock are callable.</source>
          <target state="translated">クラスが仕様として使用されている場合、モック（クラスのインスタンス）の戻り値は同じ仕様になります。 &lt;code&gt;instance=True&lt;/code&gt; を渡すことにより、クラスをインスタンスオブジェクトの仕様として使用できます。返されたモックは、モックのインスタンスが呼び出し可能である場合にのみ呼び出し可能です。</target>
        </trans-unit>
        <trans-unit id="b4f43db4f49808e0e46033f11efdb30feae93504" translate="yes" xml:space="preserve">
          <source>If a client certificate is needed for the connection, it can be added with &lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt;&lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">接続にクライアント証明書が必要な場合は、&lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt; &lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt; &lt;/a&gt;を使用して追加できます。</target>
        </trans-unit>
        <trans-unit id="58b445a457d97e0f901bef2a89a3d771923959d7" translate="yes" xml:space="preserve">
          <source>If a combination of Flag members is not named, the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; will include all named flags and all named combinations of flags that are in the value:</source>
          <target state="translated">Flagメンバーの組み合わせに名前が付けられていない場合、&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;には、値に含まれるすべての名前付きフラグとすべての名前付きフラグの組み合わせが含まれます。</target>
        </trans-unit>
        <trans-unit id="5ec6b65a6b4e8ded11a923539e5e70636ccd0baa" translate="yes" xml:space="preserve">
          <source>If a derived class does not wish to comply with this requirement, all of the special methods supported by this class will need to be overridden; please consult the sources for information about the methods which need to be provided in that case.</source>
          <target state="translated">派生クラスがこの要件を遵守したくない場合、このクラスでサポートされているすべての特別なメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="06eec7a5cb652201659973dd7752b18166617a4a" translate="yes" xml:space="preserve">
          <source>If a fallback has been set, forward &lt;a href=&quot;#gettext.npgettext&quot;&gt;&lt;code&gt;npgettext()&lt;/code&gt;&lt;/a&gt; to the fallback. Otherwise, return the translated message. Overridden in derived classes.</source>
          <target state="translated">フォールバックが設定されている場合は、&lt;a href=&quot;#gettext.npgettext&quot;&gt; &lt;code&gt;npgettext()&lt;/code&gt; &lt;/a&gt;をフォールバックに転送します。それ以外の場合は、翻訳されたメッセージを返します。派生クラスでオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="dc269c958946b76f1994096408ccbb977101ec26" translate="yes" xml:space="preserve">
          <source>If a fallback has been set, forward &lt;a href=&quot;#gettext.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt; to the fallback. Otherwise, return the translated message. Overridden in derived classes.</source>
          <target state="translated">フォールバックが設定されている場合は、&lt;a href=&quot;#gettext.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt;をフォールバックに転送します。それ以外の場合は、翻訳されたメッセージを返します。派生クラスでオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="31061e62016f356b1c4c0fbc4aa1f88db7f71ad7" translate="yes" xml:space="preserve">
          <source>If a fallback has been set, forward &lt;code&gt;gettext()&lt;/code&gt; to the fallback. Otherwise, return &lt;em&gt;message&lt;/em&gt;. Overridden in derived classes.</source>
          <target state="translated">フォールバックが設定されている場合は、 &lt;code&gt;gettext()&lt;/code&gt; をフォールバックに転送します。それ以外の場合は、&lt;em&gt;メッセージを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。派生クラスでオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="1742c3486fc827c0e30b5e6a8b02073a52c6f50e" translate="yes" xml:space="preserve">
          <source>If a fallback has been set, forward &lt;code&gt;ngettext()&lt;/code&gt; to the fallback. Otherwise, return &lt;em&gt;singular&lt;/em&gt; if &lt;em&gt;n&lt;/em&gt; is 1; return &lt;em&gt;plural&lt;/em&gt; otherwise. Overridden in derived classes.</source>
          <target state="translated">フォールバックが設定されている場合、 &lt;code&gt;ngettext()&lt;/code&gt; をフォールバックに転送します。それ以外の場合、&lt;em&gt;n&lt;/em&gt;が1の場合は&lt;em&gt;単数を&lt;/em&gt;返します。それ以外の場合は&lt;em&gt;複数を&lt;/em&gt;返します。派生クラスでオーバーライドされます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d7b45636976cf2d05c5fad71555cb6ec8a500e2" translate="yes" xml:space="preserve">
          <source>If a field is excluded from &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; (using &lt;code&gt;init=False&lt;/code&gt;) and the field also specifies &lt;code&gt;default_factory&lt;/code&gt;, then the default factory function will always be called from the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; function. This happens because there is no other way to give the field an initial value.</source>
          <target state="translated">フィールドが&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;から除外され（ &lt;code&gt;init=False&lt;/code&gt; を使用）、フィールドに &lt;code&gt;default_factory&lt;/code&gt; も指定されている場合、デフォルトのファクトリー関数は常に、生成された&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;関数から呼び出されます。これは、フィールドに初期値を与える他の方法がないために発生します。</target>
        </trans-unit>
        <trans-unit id="b816e391be58835aacea83280a02125eac7068b2" translate="yes" xml:space="preserve">
          <source>If a field is excluded from &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; (using &lt;code&gt;init=False&lt;/code&gt;) and the field also specifies &lt;code&gt;default_factory&lt;/code&gt;, then the default factory function will always be called from the generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; function. This happens because there is no other way to give the field an initial value.</source>
          <target state="translated">フィールドが&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;から除外され（ &lt;code&gt;init=False&lt;/code&gt; を使用）、フィールドが &lt;code&gt;default_factory&lt;/code&gt; も指定している場合、デフォルトのファクトリ関数は常に生成された&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;関数から呼び出されます。これは、フィールドに初期値を与える他の方法がないために発生します。</target>
        </trans-unit>
        <trans-unit id="565807013493930067f8f17afe47ed0e67b8a0c2" translate="yes" xml:space="preserve">
          <source>If a field represents an uploaded file, accessing the value via the &lt;code&gt;value&lt;/code&gt; attribute or the &lt;code&gt;getvalue()&lt;/code&gt; method reads the entire file in memory as bytes. This may not be what you want. You can test for an uploaded file by testing either the &lt;code&gt;filename&lt;/code&gt; attribute or the &lt;code&gt;file&lt;/code&gt; attribute. You can then read the data from the &lt;code&gt;file&lt;/code&gt; attribute before it is automatically closed as part of the garbage collection of the &lt;code&gt;FieldStorage&lt;/code&gt; instance (the &lt;a href=&quot;io#io.RawIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; methods will return bytes):</source>
          <target state="translated">フィールドがアップロードされたファイルを表す場合、 &lt;code&gt;value&lt;/code&gt; 属性または &lt;code&gt;getvalue()&lt;/code&gt; メソッドを介して値にアクセスすると、メモリ内のファイル全体がバイトとして読み込まれます。これはあなたが望むものではないかもしれません。 &lt;code&gt;filename&lt;/code&gt; 属性またはファイル属性をテストすることにより、アップロードされたファイルをテスト &lt;code&gt;file&lt;/code&gt; ます。その後、 &lt;code&gt;FieldStorage&lt;/code&gt; インスタンスのガベージコレクションの一部として自動的に閉じる前に、 &lt;code&gt;file&lt;/code&gt; 属性からデータを読み取ることができます（&lt;a href=&quot;io#io.RawIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;メソッドとreadline（）メソッドはバイトを返します）。</target>
        </trans-unit>
        <trans-unit id="2ac00aa24d225f2a25916402cc6d54632f003730" translate="yes" xml:space="preserve">
          <source>If a file &lt;code&gt;.pdbrc&lt;/code&gt; exists in the user&amp;rsquo;s home directory or in the current directory, it is read in and executed as if it had been typed at the debugger prompt. This is particularly useful for aliases. If both files exist, the one in the home directory is read first and aliases defined there can be overridden by the local file.</source>
          <target state="translated">ユーザーのホームディレクトリまたは現在のディレクトリにファイル &lt;code&gt;.pdbrc&lt;/code&gt; が存在する場合は、デバッガープロンプトで入力されたかのように読み込まれ、実行されます。これは、エイリアスに特に役立ちます。両方のファイルが存在する場合、ホームディレクトリ内のファイルが最初に読み取られ、そこで定義されたエイリアスがローカルファイルによって上書きされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5448f252b6aeff14276e99301e4c6e612a601743" translate="yes" xml:space="preserve">
          <source>If a file named &amp;ldquo;pyvenv.cfg&amp;rdquo; exists one directory above sys.executable, sys.prefix and sys.exec_prefix are set to that directory and it is also checked for site-packages (sys.base_prefix and sys.base_exec_prefix will always be the &amp;ldquo;real&amp;rdquo; prefixes of the Python installation). If &amp;ldquo;pyvenv.cfg&amp;rdquo; (a bootstrap configuration file) contains the key &amp;ldquo;include-system-site-packages&amp;rdquo; set to anything other than &amp;ldquo;true&amp;rdquo; (case-insensitive), the system-level prefixes will not be searched for site-packages; otherwise they will.</source>
          <target state="translated">「pyvenv.cfg」という名前のファイルがsys.executableの1つ上のディレクトリに存在する場合、sys.prefixとsys.exec_prefixはそのディレクトリに設定され、サイトパッケージもチェックされます（sys.base_prefixとsys.base_exec_prefixは常にPythonインストールの「実際の」プレフィックス）。 「pyvenv.cfg」（ブートストラップ構成ファイル）に「true」（大文字と小文字を区別しない）以外に設定されたキー「include-system-site-packages」が含まれている場合、システムレベルのプレフィックスでサイトの検索は行われません。パッケージ;そうでなければ彼らはそうするでしょう。</target>
        </trans-unit>
        <trans-unit id="b1c78860034600d414c83db7d32c54bb73e1ecd7" translate="yes" xml:space="preserve">
          <source>If a file named &lt;em&gt;filename&lt;/em&gt; is not found, the function first checks for a &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;&lt;code&gt;__loader__&lt;/code&gt; in &lt;em&gt;module_globals&lt;/em&gt;. If there is such a loader and it defines a &lt;code&gt;get_source&lt;/code&gt; method, then that determines the source lines (if &lt;code&gt;get_source()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;''&lt;/code&gt; is returned). Finally, if &lt;em&gt;filename&lt;/em&gt; is a relative filename, it is looked up relative to the entries in the module search path, &lt;code&gt;sys.path&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイル&lt;/em&gt;が見つからない場合、関数は最初に &lt;code&gt;__loader__&lt;/code&gt; で&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; __loader__を&lt;em&gt;チェックし&lt;/em&gt;ます。そのようなローダーがあり、それが &lt;code&gt;get_source&lt;/code&gt; メソッドを定義している場合、それによってソース行が決定されます（ &lt;code&gt;get_source()&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; を返す場合、 &lt;code&gt;''&lt;/code&gt; が返されます）。最後に、&lt;em&gt;filename&lt;/em&gt;が相対ファイル名の場合、モジュール検索パス &lt;code&gt;sys.path&lt;/code&gt; のエントリを基準にして検索されます。</target>
        </trans-unit>
        <trans-unit id="f21e40fc27ce27eb35a61db85ca27f562b3c3c39" translate="yes" xml:space="preserve">
          <source>If a file object is specified for &lt;em&gt;source&lt;/em&gt; or &lt;em&gt;target&lt;/em&gt;, it is the caller&amp;rsquo;s responsibility to close it after calling create_archive.</source>
          <target state="translated">ファイルオブジェクトが&lt;em&gt;source&lt;/em&gt;または&lt;em&gt;targetに&lt;/em&gt;指定されて&lt;em&gt;いる&lt;/em&gt;場合、create_archiveを呼び出した後にファイルオブジェクトを閉じるのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="b9fb12c7a74ac666cff163edc7c96b0feb897a76" translate="yes" xml:space="preserve">
          <source>If a formatter is specified, it is used to format the record. The record is then written to the stream followed by &lt;a href=&quot;#logging.StreamHandler.terminator&quot;&gt;&lt;code&gt;terminator&lt;/code&gt;&lt;/a&gt;. If exception information is present, it is formatted using &lt;a href=&quot;traceback#traceback.print_exception&quot;&gt;&lt;code&gt;traceback.print_exception()&lt;/code&gt;&lt;/a&gt; and appended to the stream.</source>
          <target state="translated">フォーマッターが指定されている場合、それはレコードのフォーマットに使用されます。次に、レコードがストリームに書き込まれ、その後に&lt;a href=&quot;#logging.StreamHandler.terminator&quot;&gt; &lt;code&gt;terminator&lt;/code&gt; &lt;/a&gt;続きます。例外情報が存在する場合は、&lt;a href=&quot;traceback#traceback.print_exception&quot;&gt; &lt;code&gt;traceback.print_exception()&lt;/code&gt; &lt;/a&gt;を使用してフォーマットされ、ストリームに追加されます。</target>
        </trans-unit>
        <trans-unit id="a3207350b9a94fa842bcda66334617cd920267c5" translate="yes" xml:space="preserve">
          <source>If a formatter is specified, it is used to format the record. The record is then written to the stream with a terminator. If exception information is present, it is formatted using &lt;a href=&quot;traceback#traceback.print_exception&quot;&gt;&lt;code&gt;traceback.print_exception()&lt;/code&gt;&lt;/a&gt; and appended to the stream.</source>
          <target state="translated">フォーマッターが指定されている場合は、それを使用してレコードをフォーマットします。次に、レコードはターミネーターを使用してストリームに書き込まれます。例外情報が存在する場合は、&lt;a href=&quot;traceback#traceback.print_exception&quot;&gt; &lt;code&gt;traceback.print_exception()&lt;/code&gt; &lt;/a&gt;を使用してフォーマットされ、ストリームに追加されます。</target>
        </trans-unit>
        <trans-unit id="76e26d9c99665021cd2747cf34bdb27b0c694a2b" translate="yes" xml:space="preserve">
          <source>If a generator code directly or indirectly raises &lt;a href=&quot;#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt;, it is converted into a &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; (retaining the &lt;a href=&quot;#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; as the new exception&amp;rsquo;s cause).</source>
          <target state="translated">ジェネレータコードが直接的または間接的に&lt;a href=&quot;#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; を&lt;/a&gt;発生させる場合、それは&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; に&lt;/a&gt;変換されます（新しい例外の原因として&lt;a href=&quot;#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;を保持します）。</target>
        </trans-unit>
        <trans-unit id="93d34f8fd817c6e0f1345b2e762a4c72177524ff" translate="yes" xml:space="preserve">
          <source>If a group matches multiple times, only the last match is accessible:</source>
          <target state="translated">グループが複数回マッチした場合、最後にマッチしたものだけがアクセス可能です。</target>
        </trans-unit>
        <trans-unit id="5cbbe58498c91a0c4d108c85bbbabc900782816b" translate="yes" xml:space="preserve">
          <source>If a member filename is an absolute path, a drive/UNC sharepoint and leading (back)slashes will be stripped, e.g.: &lt;code&gt;///foo/bar&lt;/code&gt; becomes &lt;code&gt;foo/bar&lt;/code&gt; on Unix, and &lt;code&gt;C:\foo\bar&lt;/code&gt; becomes &lt;code&gt;foo\bar&lt;/code&gt; on Windows. And all &lt;code&gt;&quot;..&quot;&lt;/code&gt; components in a member filename will be removed, e.g.: &lt;code&gt;../../foo../../ba..r&lt;/code&gt; becomes &lt;code&gt;foo../ba..r&lt;/code&gt;. On Windows illegal characters (&lt;code&gt;:&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, and &lt;code&gt;*&lt;/code&gt;) replaced by underscore (&lt;code&gt;_&lt;/code&gt;).</source>
          <target state="translated">メンバーファイル名が絶対パスの場合、ドライブ/ UNCシェアポイントと先頭の（バック）スラッシュは削除されます。例： &lt;code&gt;///foo/bar&lt;/code&gt; はUnixでは &lt;code&gt;foo/bar&lt;/code&gt; になり、 &lt;code&gt;C:\foo\bar&lt;/code&gt; は &lt;code&gt;foo\bar&lt;/code&gt; なります Windowsの場合。そして、メンバーファイル名のすべての &lt;code&gt;&quot;..&quot;&lt;/code&gt; コンポーネントが削除されます。例： &lt;code&gt;../../foo../../ba..r&lt;/code&gt; &lt;code&gt;foo../ba..r&lt;/code&gt; ../../ba..rはfoo ../ ba..rになります。 Windowsでは、不正な文字（ &lt;code&gt;:&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;&quot;&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、および &lt;code&gt;*&lt;/code&gt; ）はアンダースコア（ &lt;code&gt;_&lt;/code&gt; ）に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="503137eb198604b87efeb2bcd433e998e37317d8" translate="yes" xml:space="preserve">
          <source>If a member occurs more than once in the archive, its last occurrence is assumed to be the most up-to-date version.</source>
          <target state="translated">メンバーがアーカイブ内で複数回出現した場合、最後に出現したものが最新バージョンとみなされます。</target>
        </trans-unit>
        <trans-unit id="f787e74c446e2990e618d08579803f817ebdb5cc" translate="yes" xml:space="preserve">
          <source>If a mock instance with a name or a spec is assigned to an attribute it won&amp;rsquo;t be considered in the sealing chain. This allows one to prevent seal from fixing part of the mock object.</source>
          <target state="translated">名前または仕様のモックインスタンスが属性に割り当てられている場合、シーリングチェーンでは考慮されません。これにより、モックオブジェクトの一部がシールによって固定されるのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="392fa48383638f6ca8f0993f37a1ecb79cf4aca5" translate="yes" xml:space="preserve">
          <source>If a module imports objects from another module using &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; &amp;hellip;, calling &lt;a href=&quot;#importlib.reload&quot;&gt;&lt;code&gt;reload()&lt;/code&gt;&lt;/a&gt; for the other module does not redefine the objects imported from it &amp;mdash; one way around this is to re-execute the &lt;code&gt;from&lt;/code&gt; statement, another is to use &lt;code&gt;import&lt;/code&gt; and qualified names (&lt;em&gt;module.name&lt;/em&gt;) instead.</source>
          <target state="translated">使用して、別のモジュールからモジュールをインポートしたオブジェクト場合&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#from&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; ...、呼び出し&lt;a href=&quot;#importlib.reload&quot;&gt; &lt;code&gt;reload()&lt;/code&gt; &lt;/a&gt;他のモジュールのためには、それからインポートされたオブジェクトを再定義しない-これを回避片道再実行することです &lt;code&gt;from&lt;/code&gt; 声明、他は使用することです &lt;code&gt;import&lt;/code&gt; し、代わりに修飾名（&lt;em&gt;module.name&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="e0fbd5416d4fb25d2ad3b48282765b7c4ee154b5" translate="yes" xml:space="preserve">
          <source>If a module imports objects from another module using &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; &amp;hellip;, calling &lt;a href=&quot;#importlib.reload&quot;&gt;&lt;code&gt;reload()&lt;/code&gt;&lt;/a&gt; for the other module does not redefine the objects imported from it &amp;mdash; one way around this is to re-execute the &lt;code&gt;from&lt;/code&gt; statement, another is to use &lt;code&gt;import&lt;/code&gt; and qualified names (&lt;em&gt;module.name&lt;/em&gt;) instead.</source>
          <target state="translated">モジュールが&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#from&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; &amp;hellip;を使用して別のモジュールからオブジェクトをインポートする場合、他のモジュールに対して&lt;a href=&quot;#importlib.reload&quot;&gt; &lt;code&gt;reload()&lt;/code&gt; &lt;/a&gt;を呼び出しても、インポートされたオブジェクトは再定義されません。これを回避する1つの方法は、 &lt;code&gt;from&lt;/code&gt; ステートメントを再実行することです。別の方法は、 &lt;code&gt;import&lt;/code&gt; とを使用することです。代わりに修飾名（&lt;em&gt;module.name&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="b76b30a9fc3685533f4941dde34b064d15308902" translate="yes" xml:space="preserve">
          <source>If a module instantiates instances of a class, reloading the module that defines the class does not affect the method definitions of the instances &amp;mdash; they continue to use the old class definition. The same is true for derived classes.</source>
          <target state="translated">モジュールがクラスのインスタンスをインスタンス化する場合、クラスを定義するモジュールを再ロードしても、インスタンスのメソッド定義には影響しません&amp;mdash;古いクラス定義を引き続き使用します。派生クラスについても同様です。</target>
        </trans-unit>
        <trans-unit id="c7274841cd2a6c4fb6fc0a1fd5f00a02812a3cd7" translate="yes" xml:space="preserve">
          <source>If a module provides a &lt;code&gt;load_tests&lt;/code&gt; function it will be called to load the tests. This allows modules to customize test loading. This is the &lt;a href=&quot;#load-tests-protocol&quot;&gt;load_tests protocol&lt;/a&gt;. The &lt;em&gt;pattern&lt;/em&gt; argument is passed as the third argument to &lt;code&gt;load_tests&lt;/code&gt;.</source>
          <target state="translated">モジュールが &lt;code&gt;load_tests&lt;/code&gt; 関数を提供する場合、テストをロードするために呼び出されます。これにより、モジュールはテストの読み込みをカスタマイズできます。これは&lt;a href=&quot;#load-tests-protocol&quot;&gt;load_testsプロトコルです&lt;/a&gt;。&lt;em&gt;パターン&lt;/em&gt;引数は、第3引数として渡され &lt;code&gt;load_tests&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9967a7e9f61023ca795710b85aa3fd3437d08d6a" translate="yes" xml:space="preserve">
          <source>If a mutable buffer is passed, then the behaviour is determined by the value of the &lt;em&gt;mutate_flag&lt;/em&gt; parameter.</source>
          <target state="translated">可変バッファが渡される場合、動作は&lt;em&gt;mutate_flag&lt;/em&gt;パラメータの値によって&lt;em&gt;決まり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6c9bf31eba484225f370bea56998b125d4165981" translate="yes" xml:space="preserve">
          <source>If a mutable mapping is not available or if space-efficient key sharing is desired, an effect similar to &lt;a href=&quot;#functools.cached_property&quot;&gt;&lt;code&gt;cached_property()&lt;/code&gt;&lt;/a&gt; can be achieved by a stacking &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; on top of &lt;a href=&quot;#functools.cache&quot;&gt;&lt;code&gt;cache()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">可変マッピングが利用できない場合、またはスペース効率の高いキー共有が必要な場合は、&lt;a href=&quot;#functools.cache&quot;&gt; &lt;code&gt;cache()&lt;/code&gt; の&lt;/a&gt;上に&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;をスタックすることで、&lt;a href=&quot;#functools.cached_property&quot;&gt; &lt;code&gt;cached_property()&lt;/code&gt; &lt;/a&gt;と同様の効果を実現できます。</target>
        </trans-unit>
        <trans-unit id="a1fc9fb74f4ebf143daf34473be06e5da4ab833c" translate="yes" xml:space="preserve">
          <source>If a new seeding method is added, then a backward compatible seeder will be offered.</source>
          <target state="translated">新たな播種方法が追加された場合は、下位互換性のある播種機が提供されます。</target>
        </trans-unit>
        <trans-unit id="133e9d936cb0cf3ade6b9637c210b91b2ab80815" translate="yes" xml:space="preserve">
          <source>If a package (a directory containing a file named &lt;code&gt;__init__.py&lt;/code&gt;) is found, the package will be checked for a &lt;code&gt;load_tests&lt;/code&gt; function. If this exists then it will be called &lt;code&gt;package.load_tests(loader, tests, pattern)&lt;/code&gt;. Test discovery takes care to ensure that a package is only checked for tests once during an invocation, even if the load_tests function itself calls &lt;code&gt;loader.discover&lt;/code&gt;.</source>
          <target state="translated">パッケージ（ &lt;code&gt;__init__.py&lt;/code&gt; という名前のファイルを含むディレクトリ）が見つかった場合、パッケージの &lt;code&gt;load_tests&lt;/code&gt; 関数がチェックされます。これが存在する場合、 &lt;code&gt;package.load_tests(loader, tests, pattern)&lt;/code&gt; と呼ばれます。テスト検出は、load_tests関数自体が &lt;code&gt;loader.discover&lt;/code&gt; を呼び出した場合でも、呼び出し中にパッケージのテストが1回だけ確認されるように注意します。</target>
        </trans-unit>
        <trans-unit id="de4d246a31d1c98bfbbe12597b38a1577e9dcbc3" translate="yes" xml:space="preserve">
          <source>If a part has a &lt;em&gt;Content-Disposition&lt;/em&gt; header, only consider the part a candidate match if the value of the header is &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">パーツに&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーがある場合、ヘッダーの値が &lt;code&gt;inline&lt;/code&gt; である場合にのみ、候補の一致と見なされます。</target>
        </trans-unit>
        <trans-unit id="08bdb3b5117fe753e55ab3386000a7b11f147e33" translate="yes" xml:space="preserve">
          <source>If a particular application uses this pattern a lot, it can be simplified even further by means of a small helper class:</source>
          <target state="translated">特定のアプリケーションがこのパターンを多用する場合は、小さなヘルパークラスを使用することでさらに簡略化することができます。</target>
        </trans-unit>
        <trans-unit id="ca72e817de266e57decb5a9ba95638d41c318561" translate="yes" xml:space="preserve">
          <source>If a pointer points to an array, its elements can be read and written using standard subscript and slice accesses. Pointer objects have no size, so &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. Negative subscripts will read from the memory &lt;em&gt;before&lt;/em&gt; the pointer (as in C), and out-of-range subscripts will probably crash with an access violation (if you&amp;rsquo;re lucky).</source>
          <target state="translated">ポインターが配列を指す場合、その要素は、標準の添え字アクセスとスライスアクセスを使用して読み書きできます。ポインタオブジェクトにはサイズがないため、&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を送出し&lt;/a&gt;ます。負の添え字はポインターの&lt;em&gt;前&lt;/em&gt;にメモリーから読み取られ（Cのように）、範囲外の添え字はおそらくアクセス違反でクラッシュします（運が良ければ）。</target>
        </trans-unit>
        <trans-unit id="eed381cd380722df57d19d1544f97f6af790e234" translate="yes" xml:space="preserve">
          <source>If a process is killed using &lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt;&lt;code&gt;Process.terminate()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.kill&quot;&gt;&lt;code&gt;os.kill()&lt;/code&gt;&lt;/a&gt; while it is trying to use a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, then the data in the queue is likely to become corrupted. This may cause any other process to get an exception when it tries to use the queue later on.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;を使用しようとしている&lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt; &lt;code&gt;Process.terminate()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;os#os.kill&quot;&gt; &lt;code&gt;os.kill()&lt;/code&gt; &lt;/a&gt;を使用してプロセスを強制終了すると、キュー内のデータが破損する可能性があります。これにより、他のプロセスが後でキューを使用しようとしたときに例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="56d1f01d3ec2d55cce1c8cf716b703713495099e" translate="yes" xml:space="preserve">
          <source>If a process is killed while it is trying to read or write to a pipe then the data in the pipe is likely to become corrupted, because it may become impossible to be sure where the message boundaries lie.</source>
          <target state="translated">パイプに読み書きしようとしている間にプロセスが殺された場合、パイプ内のデータが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ee27c621c4af454357253732e654ec550abd9b30" translate="yes" xml:space="preserve">
          <source>If a regular expression ends with a greedy match (such as &lt;code&gt;.*&lt;/code&gt;) or if more than one expression can match the same input, the results are non-deterministic, and may depend on the I/O timing.</source>
          <target state="translated">正規表現が貪欲な一致（ &lt;code&gt;.*&lt;/code&gt; など）で終了する場合、または複数の表現が同じ入力に一致する可能性がある場合、結果は非決定的であり、I / Oタイミングに依存する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9f18a5c5319b593cf33dfdbccb25dc47d86b19fc" translate="yes" xml:space="preserve">
          <source>If a row has more fields than fieldnames, the remaining data is put in a list and stored with the fieldname specified by &lt;em&gt;restkey&lt;/em&gt; (which defaults to &lt;code&gt;None&lt;/code&gt;). If a non-blank row has fewer fields than fieldnames, the missing values are filled-in with &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">行にフィールド名よりも多くのフィールドがある場合、残りのデータはリストに入れられ、&lt;em&gt;restkeyで&lt;/em&gt;指定されたフィールド名（デフォルトは &lt;code&gt;None&lt;/code&gt; ）で格納されます。空白でない行のフィールド名がフィールド名より少ない場合、欠落している値は &lt;code&gt;None&lt;/code&gt; で埋められます。</target>
        </trans-unit>
        <trans-unit id="3dd35a6c80f7f0600c8d0aa1d7f3052ebfaabfee" translate="yes" xml:space="preserve">
          <source>If a row has more fields than fieldnames, the remaining data is put in a list and stored with the fieldname specified by &lt;em&gt;restkey&lt;/em&gt; (which defaults to &lt;code&gt;None&lt;/code&gt;). If a non-blank row has fewer fields than fieldnames, the missing values are filled-in with the value of &lt;em&gt;restval&lt;/em&gt; (which defaults to &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">行にフィールド名よりも多くのフィールドがある場合、残りのデータはリストに入れられ、&lt;em&gt;restkeyで&lt;/em&gt;指定されたフィールド名（デフォルトは &lt;code&gt;None&lt;/code&gt; ）で保存されます。空白以外の行のフィールドがフィールド名よりも少ない場合、欠落している値は&lt;em&gt;restval&lt;/em&gt;の値（デフォルトは &lt;code&gt;None&lt;/code&gt; ）で埋められます。</target>
        </trans-unit>
        <trans-unit id="005f4f5ea8b5cbe5aac64333d420adc456c1595c" translate="yes" xml:space="preserve">
          <source>If a second argument is present, it is an expression which must evaluate to true before the breakpoint is honored.</source>
          <target state="translated">第2引数が存在する場合、ブレークポイントが実行される前に真を評価しなければならない式です。</target>
        </trans-unit>
        <trans-unit id="8557dead7893ee28dc4312dd3fbd82bd7ef26377" translate="yes" xml:space="preserve">
          <source>If a sequence of events takes longer to run than the time available before the next event, the scheduler will simply fall behind. No events will be dropped; the calling code is responsible for canceling events which are no longer pertinent.</source>
          <target state="translated">一連のイベントの実行に次のイベントまでの時間よりも長い時間がかかる場合、スケジューラは単に遅れてしまいます。イベントが削除されることはありません。</target>
        </trans-unit>
        <trans-unit id="a04337ee52a07d55c116e62a9138163aca040133" translate="yes" xml:space="preserve">
          <source>If a string is returned, the string should be interpreted as the name of a global variable. It should be the object&amp;rsquo;s local name relative to its module; the pickle module searches the module namespace to determine the object&amp;rsquo;s module. This behaviour is typically useful for singletons.</source>
          <target state="translated">文字列が返された場合、その文字列はグローバル変数の名前として解釈されます。これは、そのモジュールに対するオブジェクトのローカル名である必要があります。pickleモジュールはモジュール名前空間を検索してオブジェクトのモジュールを決定します。この動作は通常、シングルトンに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b77fc0289dcb779f53a98f0301822ac00449bb60" translate="yes" xml:space="preserve">
          <source>If a string is specified as first argument, the buffer is made one item larger than the length of the string so that the last element in the array is a NUL termination character. An integer can be passed as second argument which allows specifying the size of the array if the length of the string should not be used.</source>
          <target state="translated">第1引数に文字列を指定した場合は、配列の最後の要素がNUL終端文字となるように、バッファを文字列の長さよりも1項目大きくします。第2引数に整数を渡すことで、文字列の長さを使わない場合の配列のサイズを指定することができます。</target>
        </trans-unit>
        <trans-unit id="21c6bea79d147aa97afcd362c1b240007ff84d93" translate="yes" xml:space="preserve">
          <source>If a string of characters is typed, the ACW selection will jump to the entry most closely matching those characters. Entering a</source>
          <target state="translated">文字列が入力されると、ACW 選択範囲はそれらの文字に最も近いエントリにジャンプします。文字列を入力する</target>
        </trans-unit>
        <trans-unit id="1ad7ab62792840cafd5c6a7e7c21e711f92ec2c4" translate="yes" xml:space="preserve">
          <source>If a subclass of dict defines a method &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;key&lt;/em&gt; is not present, the &lt;code&gt;d[key]&lt;/code&gt; operation calls that method with the key &lt;em&gt;key&lt;/em&gt; as argument. The &lt;code&gt;d[key]&lt;/code&gt; operation then returns or raises whatever is returned or raised by the &lt;code&gt;__missing__(key)&lt;/code&gt; call. No other operations or methods invoke &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is not defined, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised. &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; must be a method; it cannot be an instance variable:</source>
          <target state="translated">dictのサブクラスがメソッド&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;を定義し、&lt;em&gt;key&lt;/em&gt;が存在しない場合、 &lt;code&gt;d[key]&lt;/code&gt; 操作は、キー&lt;em&gt;key&lt;/em&gt;を引数としてそのメソッドを呼び出します。次に、 &lt;code&gt;d[key]&lt;/code&gt; 操作は、 &lt;code&gt;__missing__(key)&lt;/code&gt; 呼び出しによって返された、または発生したものを返すか発生させます。他の操作やメソッドは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;呼び出しません。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;が定義されていない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;はメソッドでなければなりません。インスタンス変数にすることはできません：</target>
        </trans-unit>
        <trans-unit id="424b2b429c597fc703ea743529e362c1e6d5508f" translate="yes" xml:space="preserve">
          <source>If a subclass of dict defines a method &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;key&lt;/em&gt; is not present, the &lt;code&gt;d[key]&lt;/code&gt; operation calls that method with the key &lt;em&gt;key&lt;/em&gt; as argument. The &lt;code&gt;d[key]&lt;/code&gt; operation then returns or raises whatever is returned or raised by the &lt;code&gt;__missing__(key)&lt;/code&gt; call. No other operations or methods invoke &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is not defined, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised. &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; must be a method; it cannot be an instance variable:</source>
          <target state="translated">辞書のサブクラスがメソッド定義されている場合&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;と&lt;em&gt;キーが&lt;/em&gt;存在しない場合、 &lt;code&gt;d[key]&lt;/code&gt; の操作キーと、そのメソッドを呼び出す&lt;em&gt;キー&lt;/em&gt;引数として。次に、 &lt;code&gt;d[key]&lt;/code&gt; 操作は、 &lt;code&gt;__missing__(key)&lt;/code&gt; 呼び出しによって返されるか発生したものをすべて返すか発生させます。他の操作やメソッドは&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;呼び出しません。&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;が定義されていない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;はメソッドでなければなりません。インスタンス変数にすることはできません。</target>
        </trans-unit>
        <trans-unit id="f05a402a563718610b92e3f5ebab6bc115c75aff" translate="yes" xml:space="preserve">
          <source>If a subclass overrides the constructor, it must make sure it invokes the base class constructor (&lt;code&gt;Process.__init__()&lt;/code&gt;) before doing anything else to the process.</source>
          <target state="translated">サブクラスがコンストラクターをオーバーライドする場合、 &lt;code&gt;Process.__init__()&lt;/code&gt; に対して何かを行う前に、サブクラスが基本クラスコンストラクター（Process .__ init __（））を呼び出すことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7167bd01592177c6831e227c0f96cfa70f5703f6" translate="yes" xml:space="preserve">
          <source>If a test is dependent on a specific condition of the operating system then verify the condition already exists before attempting the test.</source>
          <target state="translated">テストがオペレーティングシステムの特定の条件に依存している場合は、テストを試みる前に、その条件がすでに存在することを確認してください。</target>
        </trans-unit>
        <trans-unit id="fdb64156356707d7f00a7d8b9a96bfe1ba13d7ee" translate="yes" xml:space="preserve">
          <source>If a test module defines &lt;code&gt;load_tests&lt;/code&gt; it will be called by &lt;a href=&quot;#unittest.TestLoader.loadTestsFromModule&quot;&gt;&lt;code&gt;TestLoader.loadTestsFromModule()&lt;/code&gt;&lt;/a&gt; with the following arguments:</source>
          <target state="translated">テストモジュールが &lt;code&gt;load_tests&lt;/code&gt; を定義する場合、次の引数を使用して&lt;a href=&quot;#unittest.TestLoader.loadTestsFromModule&quot;&gt; &lt;code&gt;TestLoader.loadTestsFromModule()&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7b41e613a791d1534ee88b6d5457f6ce5e983848" translate="yes" xml:space="preserve">
          <source>If a test using &lt;a href=&quot;#test.support.SHORT_TIMEOUT&quot;&gt;&lt;code&gt;SHORT_TIMEOUT&lt;/code&gt;&lt;/a&gt; starts to fail randomly on slow buildbots, use &lt;a href=&quot;#test.support.LONG_TIMEOUT&quot;&gt;&lt;code&gt;LONG_TIMEOUT&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#test.support.SHORT_TIMEOUT&quot;&gt; &lt;code&gt;SHORT_TIMEOUT&lt;/code&gt; &lt;/a&gt;を使用したテストが遅いビルドボットでランダムに失敗し始めた場合は、代わりにLONG_TIMEOUTを使用して&lt;a href=&quot;#test.support.LONG_TIMEOUT&quot;&gt; &lt;code&gt;LONG_TIMEOUT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56a75cd42f01b47ed5b176576dca9593b3d7d4ee" translate="yes" xml:space="preserve">
          <source>If a timeout occurs, it cancels the task and raises &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイムアウトが発生すると、タスクがキャンセルされ、&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="4894447c60737f3d9dbafbd5dd46efa9b16f3b36" translate="yes" xml:space="preserve">
          <source>If a timestamp stored in SQLite has a fractional part longer than 6 numbers, its value will be truncated to microsecond precision by the timestamp converter.</source>
          <target state="translated">SQLite に保存されているタイムスタンプが 6 つの数字よりも長い端数部分を持つ場合、その値はタイムスタンプ変換器によってマイクロ秒の精度に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="5ac42206d9872e5d1063a9d182b043d77e4d7069" translate="yes" xml:space="preserve">
          <source>If a valid &lt;em&gt;align&lt;/em&gt; value is specified, it can be preceded by a &lt;em&gt;fill&lt;/em&gt; character that can be any character and defaults to a space if omitted. It is not possible to use a literal curly brace (&amp;ldquo;&lt;code&gt;{&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;}&lt;/code&gt;&amp;rdquo;) as the &lt;em&gt;fill&lt;/em&gt; character in a &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literal&lt;/a&gt; or when using the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method. However, it is possible to insert a curly brace with a nested replacement field. This limitation doesn&amp;rsquo;t affect the &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">有効な&lt;em&gt;align&lt;/em&gt;値が指定されている場合、その前に任意の文字である&lt;em&gt;埋め込み&lt;/em&gt;文字を&lt;em&gt;付ける&lt;/em&gt;ことができ、省略された場合はデフォルトでスペースになります。&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;フォーマットされた文字列リテラルの&lt;/a&gt;&lt;em&gt;充填&lt;/em&gt;文字として、または&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;メソッドを使用する場合、リテラル中括弧（「 &lt;code&gt;{&lt;/code&gt; 」または「 &lt;code&gt;}&lt;/code&gt; 」）を使用することはできません。ただし、入れ子の置換フィールドを持つ中括弧を挿入することは可能です。この制限は&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;関数には影響しません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="209e528a468007cdf3064daca793d8a4165d42e3" translate="yes" xml:space="preserve">
          <source>If a valid &lt;em&gt;align&lt;/em&gt; value is specified, it can be preceded by a &lt;em&gt;fill&lt;/em&gt; character that can be any character and defaults to a space if omitted. It is not possible to use a literal curly brace (&amp;ldquo;&lt;code&gt;{&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;}&lt;/code&gt;&amp;rdquo;) as the &lt;em&gt;fill&lt;/em&gt; character in a &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literal&lt;/a&gt; or when using the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method. However, it is possible to insert a curly brace with a nested replacement field. This limitation doesn&amp;rsquo;t affect the &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">有効な&lt;em&gt;整列&lt;/em&gt;値が指定されている場合、その前に任意の文字を使用できる&lt;em&gt;塗りつぶし&lt;/em&gt;文字を&lt;em&gt;付ける&lt;/em&gt;ことができ、省略した場合はデフォルトでスペースになります。&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;フォーマットされた文字列リテラルの&lt;/a&gt;&lt;em&gt;塗りつぶし&lt;/em&gt;文字として、または&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;メソッドを使用する場合、リテラル中括弧（&amp;ldquo; &lt;code&gt;{&lt;/code&gt; &amp;rdquo;または&amp;ldquo; &lt;code&gt;}&lt;/code&gt; &amp;rdquo;）を使用することはできません。ただし、ネストされた置換フィールドを使用して中括弧を挿入することは可能です。この制限は、&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;関数には影響しません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c00602bdfa725779b622a293e31f264d4ee274c" translate="yes" xml:space="preserve">
          <source>If a warning is reported and doesn&amp;rsquo;t match any registered filter then the &amp;ldquo;default&amp;rdquo; action is applied (hence its name).</source>
          <target state="translated">警告が報告され、登録されているどのフィルターにも一致しない場合、「デフォルト」アクションが適用されます（そのため、その名前になります）。</target>
        </trans-unit>
        <trans-unit id="cb0337d207d18ad7007727b229c1af4d0cd626a1" translate="yes" xml:space="preserve">
          <source>If a welcome message is not received, then &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">ウェルカムメッセージが受信されない場合、&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="8fcc1d5a91e23de43d9a5dc52b88297e33f33bba" translate="yes" xml:space="preserve">
          <source>If all awaitables are completed successfully, the result is an aggregate list of returned values. The order of result values corresponds to the order of awaitables in &lt;em&gt;aws&lt;/em&gt;.</source>
          <target state="translated">すべての待機可能変数が正常に完了した場合、結果は戻り値の集約リストになります。結果値の順序は、&lt;em&gt;aws&lt;/em&gt;のawaitableの順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="2547834e994630d32d2037a19c05c10c7d6ee975" translate="yes" xml:space="preserve">
          <source>If all of the input data was decompressed and returned (either because this was less than &lt;em&gt;max_length&lt;/em&gt; bytes, or because &lt;em&gt;max_length&lt;/em&gt; was negative), the &lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">すべての入力データが解凍されて返された場合（これが&lt;em&gt;max_length&lt;/em&gt;バイト未満だったため、または&lt;em&gt;max_length&lt;/em&gt;が負だったため）、&lt;a href=&quot;#bz2.BZ2Decompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;True&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="6e121cbdbd9c19e9656d52cccebd105f837012c9" translate="yes" xml:space="preserve">
          <source>If all of the input data was decompressed and returned (either because this was less than &lt;em&gt;max_length&lt;/em&gt; bytes, or because &lt;em&gt;max_length&lt;/em&gt; was negative), the &lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt;&lt;code&gt;needs_input&lt;/code&gt;&lt;/a&gt; attribute will be set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">すべての入力データが解凍されて返された場合（これが&lt;em&gt;max_length&lt;/em&gt;バイト未満だったため、または&lt;em&gt;max_length&lt;/em&gt;が負だったため）、&lt;a href=&quot;#lzma.LZMADecompressor.needs_input&quot;&gt; &lt;code&gt;needs_input&lt;/code&gt; &lt;/a&gt;属性は &lt;code&gt;True&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="d829aa8e2300eed8aa97b16a76abdddadb851327" translate="yes" xml:space="preserve">
          <source>If all you want is a unique ID, you should probably call &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt; may compromise privacy since it creates a UUID containing the computer&amp;rsquo;s network address. &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt; creates a random UUID.</source>
          <target state="translated">一意のIDだけが必要な場合は、おそらく&lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。&lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt;はコンピューターのネットワークアドレスを含むUUIDを作成するため、プライバシーが侵害される可能性があることに注意してください。&lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; &lt;/a&gt;はランダムなUUIDを作成します。</target>
        </trans-unit>
        <trans-unit id="a1f1d33458f6e961931c3b1a1e541c58fb116cf6" translate="yes" xml:space="preserve">
          <source>If an &lt;em&gt;action&lt;/em&gt; was provided to the constructor, one of the threads will have called it prior to being released. Should this call raise an error, the barrier is put into the broken state.</source>
          <target state="translated">&lt;em&gt;アクション&lt;/em&gt;がコンストラクターに提供された場合、スレッドの1つが解放される前にそれを呼び出します。この呼び出しでエラーが発生した場合、バリアは壊れた状態になります。</target>
        </trans-unit>
        <trans-unit id="299a160b2857a2e046717940313b837ea0255ecb" translate="yes" xml:space="preserve">
          <source>If an address of &amp;lsquo;0.0.0.0&amp;rsquo; is used, the address will not be a connectable end point on Windows. If you require a connectable end-point, you should use &amp;lsquo;127.0.0.1&amp;rsquo;.</source>
          <target state="translated">「0.0.0.0」のアドレスが使用されている場合、そのアドレスはWindowsで接続可能なエンドポイントにはなりません。接続可能なエンドポイントが必要な場合は、「127.0.0.1」を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fafdef20b0392cfa5094409aaee99cd26f4d16c3" translate="yes" xml:space="preserve">
          <source>If an ancestor is found with a level other than NOTSET, then that ancestor&amp;rsquo;s level is treated as the effective level of the logger where the ancestor search began, and is used to determine how a logging event is handled.</source>
          <target state="translated">NOTSET以外のレベルで祖先が見つかった場合、その祖先のレベルは、祖先検索が開始されたロガーの有効レベルとして扱われ、ロギングイベントの処理方法を決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="042dca6beb53678ea3404d9d765bfdcb1778c211" translate="yes" xml:space="preserve">
          <source>If an application archive has a shebang line, it may have the executable bit set on POSIX systems, to allow it to be executed directly.</source>
          <target state="translated">アプリケーションアーカイブに shebang 行がある場合、POSIX システムでは、それが直接実行できるように、実行可能ビットが設定されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="256f4fa29f36d441db33ab5876bc2ec311be265f" translate="yes" xml:space="preserve">
          <source>If an application does not care about tracking significance, it is easy to remove the exponent and trailing zeroes, losing significance, but keeping the value unchanged:</source>
          <target state="translated">アプリケーションが有意性の追跡を気にしない場合、指数と末尾のゼロを削除して有意性を失いますが、値は変更しないままにしておくことは簡単です。</target>
        </trans-unit>
        <trans-unit id="adadff191e4f3cff9fafee17cbdf1b2c0fa260d7" translate="yes" xml:space="preserve">
          <source>If an argument outside those ranges is given, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">これらの範囲外の引数が指定された場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ac5211f8f4fad0b439f05ba8bae6b1f51d4b9857" translate="yes" xml:space="preserve">
          <source>If an argument outside those ranges is given, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. All default to &lt;code&gt;0&lt;/code&gt; except &lt;em&gt;tzinfo&lt;/em&gt;, which defaults to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの範囲外の引数が指定された場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;em&gt;tzinfo&lt;/em&gt;を除くすべてのデフォルトは &lt;code&gt;0&lt;/code&gt; で、&lt;em&gt;tzinfoの&lt;/em&gt;デフォルトは&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5cf8ab7a4f610ae0e91814539a3ad269a9742c39" translate="yes" xml:space="preserve">
          <source>If an attempt is made to change any object in a way that is not permitted with regard to the &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt; recommendation, this exception is raised.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XMLの&lt;/a&gt;推奨事項に関して許可されていない方法でオブジェクトを変更しようとすると、この例外が発生します。</target>
        </trans-unit>
        <trans-unit id="53d8a1b202b136b96256c5d5d6a53d98a6548fc9" translate="yes" xml:space="preserve">
          <source>If an error is encountered during configuration, this function will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; with a suitably descriptive message. The following is a (possibly incomplete) list of conditions which will raise an error:</source>
          <target state="translated">設定中にエラーが発生した場合、この関数は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;を発生させ、適切な説明メッセージを表示します。以下は、エラーが発生する条件の（おそらく不完全な）リストです。</target>
        </trans-unit>
        <trans-unit id="4574f822c008c1deacbc94bbf73252f1957961ce" translate="yes" xml:space="preserve">
          <source>If an error is encountered when obtaining the contents of an uploaded file (for example, when the user interrupts the form submission by clicking on a Back or Cancel button) the &lt;code&gt;done&lt;/code&gt; attribute of the object for the field will be set to the value -1.</source>
          <target state="translated">アップロードされたファイルのコンテンツを取得するときにエラーが発生した場合（たとえば、ユーザーが[戻る]または[キャンセル]ボタンをクリックしてフォームの送信を中断した場合）、フィールドのオブジェクトの &lt;code&gt;done&lt;/code&gt; 属性は値-1に設定されます。</target>
        </trans-unit>
        <trans-unit id="f60eea2b32259323dba912ba5d7f1dfbdfc71476" translate="yes" xml:space="preserve">
          <source>If an exception is raised by the call, then is re-raised by &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt;&lt;code&gt;_callmethod()&lt;/code&gt;&lt;/a&gt;. If some other exception is raised in the manager&amp;rsquo;s process then this is converted into a &lt;code&gt;RemoteError&lt;/code&gt; exception and is raised by &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt;&lt;code&gt;_callmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しによって例外が発生した場合は、&lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt; &lt;code&gt;_callmethod()&lt;/code&gt; &lt;/a&gt;によって再発生されます。マネージャーのプロセスで他の例外が発生した場合、これは &lt;code&gt;RemoteError&lt;/code&gt; 例外に変換され、&lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt; &lt;code&gt;_callmethod()&lt;/code&gt; &lt;/a&gt;によって発生します。</target>
        </trans-unit>
        <trans-unit id="f85bdbc54de505eec7f8ff1f7bab9e90300754e6" translate="yes" xml:space="preserve">
          <source>If an exception is raised by the decorated method and a module was added to &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then the module will be removed to prevent a partially initialized module from being in left in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;. If the module was already in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; then it is left alone.</source>
          <target state="translated">装飾されたメソッドによって例外が発生し、モジュールが&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;に追加された場合、モジュールは削除され、部分的に初期化されたモジュールが&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;に残されないようにします。モジュールがすでに&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; に&lt;/a&gt;あった場合、それはそのままになります。</target>
        </trans-unit>
        <trans-unit id="a7bc6eb7f643b6c0eaaabf73ac57b62236f71065" translate="yes" xml:space="preserve">
          <source>If an exception is raised during a &lt;code&gt;setUpClass&lt;/code&gt; then the tests in the class are not run and the &lt;code&gt;tearDownClass&lt;/code&gt; is not run. Skipped classes will not have &lt;code&gt;setUpClass&lt;/code&gt; or &lt;code&gt;tearDownClass&lt;/code&gt; run. If the exception is a &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; exception then the class will be reported as having been skipped instead of as an error.</source>
          <target state="translated">&lt;code&gt;setUpClass&lt;/code&gt; の実行中に例外が発生した場合、クラスのテストは実行されず、 &lt;code&gt;tearDownClass&lt;/code&gt; は実行されません。スキップされたクラスは、 &lt;code&gt;setUpClass&lt;/code&gt; または &lt;code&gt;tearDownClass&lt;/code&gt; を実行しません。例外が&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;例外である場合、クラスはエラーではなくスキップされたと報告されます。</target>
        </trans-unit>
        <trans-unit id="4533ac88ecc0c7c6a8780ebbf4203e5ab1429294" translate="yes" xml:space="preserve">
          <source>If an exception is raised during execution of the exit handlers, a traceback is printed (unless &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; is raised) and the exception information is saved. After all exit handlers have had a chance to run the last exception to be raised is re-raised.</source>
          <target state="translated">出口ハンドラーの実行中に例外が発生すると、（&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;が発生しない限り）トレースバックが出力され、例外情報が保存されます。すべての出口ハンドラーが実行する機会を得た後、発生する最後の例外が再発生します。</target>
        </trans-unit>
        <trans-unit id="7d998d88a8ce16f7be9ebac1b439bf842f586529" translate="yes" xml:space="preserve">
          <source>If an exception is raised from the &lt;em&gt;sni_callback&lt;/em&gt; function the TLS connection will terminate with a fatal TLS alert message &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_HANDSHAKE_FAILURE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sni_callback&lt;/em&gt;関数から例外が発生した場合、TLS接続は致命的なTLSアラートメッセージ&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_HANDSHAKE_FAILURE&lt;/code&gt; で&lt;/a&gt;終了します。</target>
        </trans-unit>
        <trans-unit id="2a43dea4c94d3c2af36ea8264f982c5356cb01f9" translate="yes" xml:space="preserve">
          <source>If an exception is raised in a &lt;code&gt;setUpModule&lt;/code&gt; then none of the tests in the module will be run and the &lt;code&gt;tearDownModule&lt;/code&gt; will not be run. If the exception is a &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; exception then the module will be reported as having been skipped instead of as an error.</source>
          <target state="translated">&lt;code&gt;setUpModule&lt;/code&gt; で例外が発生した場合、モジュール内のテストは実行されず、 &lt;code&gt;tearDownModule&lt;/code&gt; は実行されません。例外が&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;例外の場合、モジュールはエラーではなくスキップされたと報告されます。</target>
        </trans-unit>
        <trans-unit id="dd703abca148b756a14a9c781a44d9f0b2ac0696" translate="yes" xml:space="preserve">
          <source>If an exception is raised in the coroutine, the returned Future will be notified. It can also be used to cancel the task in the event loop:</source>
          <target state="translated">コアーチンで例外が発生した場合は、返されたFutureが通知されます。また、イベントループでタスクをキャンセルする際にも使用できます。</target>
        </trans-unit>
        <trans-unit id="69318769e5465805a618fdb34321a2c144def90e" translate="yes" xml:space="preserve">
          <source>If an implementation registered to &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt;, virtual subclasses will be dispatched to that implementation:</source>
          <target state="translated">実装が&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基本クラスに&lt;/a&gt;登録されている場合、仮想サブクラスはその実装にディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="0153b7e6f09b5f4cdeeae21ebab69aa25ec08be0" translate="yes" xml:space="preserve">
          <source>If an implementation wishes to retain compatibility with the existing email package policies, &lt;em&gt;name&lt;/em&gt; should be the case preserved name (all characters up to the &amp;lsquo;&lt;code&gt;:&lt;/code&gt;&amp;rsquo; separator), while &lt;em&gt;value&lt;/em&gt; should be the unfolded value (all line separator characters removed, but whitespace kept intact), stripped of leading whitespace.</source>
          <target state="translated">実装は、既存の電子メールのパッケージポリシーとの互換性を維持することを希望する場合、&lt;em&gt;名前は&lt;/em&gt;ケースに保存名前（「までのすべての文字まででなければなりません &lt;code&gt;:&lt;/code&gt; 」区切り）をしながら、&lt;em&gt;値が&lt;/em&gt;折り畳まれていない値である必要があります（すべての行区切り文字は削除されますが、空白ままそのまま）、先頭の空白が削除されます。</target>
        </trans-unit>
        <trans-unit id="e6cd0b0b3afc2fba0e7fc3c8402c2b5436592af6" translate="yes" xml:space="preserve">
          <source>If an implementation wishes to retain compatibility with the existing email package policies, the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; should be strings or string subclasses that do not change the content of the passed in arguments.</source>
          <target state="translated">実装が既存の電子メールパッケージポリシーとの互換性を維持したい場合、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;は、渡された引数の内容を変更しない文字列または文字列サブクラスである必要があります。</target>
        </trans-unit>
        <trans-unit id="473758267eec1e5950bafaa348a2308deafd8f71" translate="yes" xml:space="preserve">
          <source>If an iterable of key names is passed to the &lt;code&gt;only_keys&lt;/code&gt; parameter, only the specified keys will be removed from the cache. Keys passed to &lt;code&gt;only_keys&lt;/code&gt; but not found in the cache are ignored.</source>
          <target state="translated">反復可能なキー名が &lt;code&gt;only_keys&lt;/code&gt; パラメーターに渡されると、指定されたキーのみがキャッシュから削除されます。 &lt;code&gt;only_keys&lt;/code&gt; に渡されたが、キャッシュに見つからなかったキーは無視されます。</target>
        </trans-unit>
        <trans-unit id="4cbad0f63bdd9fa84f8130dbeeb23dc3b6cbb508" translate="yes" xml:space="preserve">
          <source>If an object containing an unsupported type was marshalled with &lt;a href=&quot;#marshal.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#marshal.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; will substitute &lt;code&gt;None&lt;/code&gt; for the unmarshallable type.</source>
          <target state="translated">サポートされていないタイプを含むオブジェクトが&lt;a href=&quot;#marshal.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;でマーシャリングされた場合、&lt;a href=&quot;#marshal.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;は、非マーシャリング可能なタイプを &lt;code&gt;None&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4d67c470c08505e21fcfb4046a1dfce4ba755fea" translate="yes" xml:space="preserve">
          <source>If any Task or Future from the &lt;em&gt;aws&lt;/em&gt; sequence is &lt;em&gt;cancelled&lt;/em&gt;, it is treated as if it raised &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; &amp;ndash; the &lt;code&gt;gather()&lt;/code&gt; call is &lt;strong&gt;not&lt;/strong&gt; cancelled in this case. This is to prevent the cancellation of one submitted Task/Future to cause other Tasks/Futures to be cancelled.</source>
          <target state="translated">&lt;em&gt;aws&lt;/em&gt;シーケンスのTaskまたはFuture が&lt;em&gt;キャンセル&lt;/em&gt;された場合、&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; が&lt;/a&gt;発生したかのように処理されます。この場合、 &lt;code&gt;gather()&lt;/code&gt; 呼び出しはキャンセルされ&lt;strong&gt;ません&lt;/strong&gt;。これは、送信された1つのタスク/フューチャーがキャンセルされて、他のタスク/フューチャーがキャンセルされるのを防ぐためです。</target>
        </trans-unit>
        <trans-unit id="05fdb3a1d8014df423fd4d720c0c1096b43f8291" translate="yes" xml:space="preserve">
          <source>If any argument is a float and there are fractional microseconds, the fractional microseconds left over from all arguments are combined and their sum is rounded to the nearest microsecond using round-half-to-even tiebreaker. If no argument is a float, the conversion and normalization processes are exact (no information is lost).</source>
          <target state="translated">いずれかの引数が float であり、小数のマイクロ秒がある場合、すべての引数から残った小数のマイクロ秒が結合され、それらの合計は、ラウンドハーフからイーブンへのタイブレーカーを使用して、最も近いマイクロ秒に丸められます。引数が float でない場合、変換および正規化処理は正確に行われます(情報は失われません)。</target>
        </trans-unit>
        <trans-unit id="9d56491638c3d7ac65a56ae607e299d4de0401c5" translate="yes" xml:space="preserve">
          <source>If any awaitable in &lt;em&gt;aws&lt;/em&gt; is a coroutine, it is automatically scheduled as a Task.</source>
          <target state="translated">&lt;em&gt;aws&lt;/em&gt;で待機可能なものがコルーチンである場合、それは自動的にタスクとしてスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="81778e138b261a1b662e58bf1322d9bab8e64c16" translate="yes" xml:space="preserve">
          <source>If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt;&lt;code&gt;CycleError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">いずれかのサイクルが検出されると、&lt;a href=&quot;#graphlib.CycleError&quot;&gt; &lt;code&gt;CycleError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="c5aebf3c75452198e6c5d279e23fde1e5f1cf025" translate="yes" xml:space="preserve">
          <source>If any members of the iterable are exceptions they will be raised instead of returned:</source>
          <target state="translated">iterableのメンバが例外である場合は、それが返されるのではなく発生します。</target>
        </trans-unit>
        <trans-unit id="27863231d65cea126a57b6d24dbf17c8f2a32c4a" translate="yes" xml:space="preserve">
          <source>If any of &lt;em&gt;suffix&lt;/em&gt;, &lt;em&gt;prefix&lt;/em&gt;, and &lt;em&gt;dir&lt;/em&gt; are not &lt;code&gt;None&lt;/code&gt;, they must be the same type. If they are bytes, the returned name will be bytes instead of str. If you want to force a bytes return value with otherwise default behavior, pass &lt;code&gt;suffix=b''&lt;/code&gt;.</source>
          <target state="translated">いずれかの場合は&lt;em&gt;接尾辞&lt;/em&gt;、&lt;em&gt;接頭辞&lt;/em&gt;、および&lt;em&gt;dirが&lt;/em&gt;ないではない &lt;code&gt;None&lt;/code&gt; 、彼らは同じ型でなければなりません。それらがバイトの場合、返される名前はstrではなくbytesになります。デフォルトの動作でバイトの戻り値を強制したい場合は、 &lt;code&gt;suffix=b''&lt;/code&gt; 渡します。</target>
        </trans-unit>
        <trans-unit id="907ec62b4e5199551950ce42a0c4c3bcd986262a" translate="yes" xml:space="preserve">
          <source>If any option is given, the script will exit with one of these values: &lt;code&gt;0&lt;/code&gt; if the user site-packages directory is enabled, &lt;code&gt;1&lt;/code&gt; if it was disabled by the user, &lt;code&gt;2&lt;/code&gt; if it is disabled for security reasons or by an administrator, and a value greater than 2 if there is an error.</source>
          <target state="translated">いずれかのオプションが与えられた場合、スクリプトは、次のいずれかの値で終了します： &lt;code&gt;0&lt;/code&gt; ユーザーsite-packagesディレクトリが有効になっている場合、 &lt;code&gt;1&lt;/code&gt; には、ユーザによって無効になっていた場合 &lt;code&gt;2&lt;/code&gt; 、それはセキュリティ上の理由からか、管理者によって無効にされている場合、およびエラーが発生した場合は、2より大きい値。</target>
        </trans-unit>
        <trans-unit id="24d1e1e82f1f2ee9e1949816fed45d7ac33121d6" translate="yes" xml:space="preserve">
          <source>If any precondition isn&amp;rsquo;t met (e.g. not TLS 1.3, PHA not enabled), an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">前提条件が満たされていない場合（TLS 1.3、PHAが有効になっていないなど）、&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="37276ee5d3e42e8336da18222c175ce80e212073" translate="yes" xml:space="preserve">
          <source>If at least one of &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is given, &lt;em&gt;object&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; (e.g. &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;). In this case, if &lt;em&gt;object&lt;/em&gt; is a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;) object, then &lt;code&gt;str(bytes, encoding, errors)&lt;/code&gt; is equivalent to &lt;a href=&quot;#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode(encoding, errors)&lt;/code&gt;&lt;/a&gt;. Otherwise, the bytes object underlying the buffer object is obtained before calling &lt;a href=&quot;#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#binaryseq&quot;&gt;Binary Sequence Types &amp;mdash; bytes, bytearray, memoryview&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;Buffer Protocol&lt;/a&gt; for information on buffer objects.</source>
          <target state="translated">&lt;em&gt;エンコーディング&lt;/em&gt;または&lt;em&gt;エラーの&lt;/em&gt;少なくとも1つが指定されている場合、&lt;em&gt;オブジェクト&lt;/em&gt;は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;（たとえば、&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;）である必要があります。この場合、&lt;em&gt;object&lt;/em&gt;が&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;）オブジェクトの場合、 &lt;code&gt;str(bytes, encoding, errors)&lt;/code&gt; は&lt;a href=&quot;#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode(encoding, errors)&lt;/code&gt; &lt;/a&gt;と同等です。それ以外の場合は、&lt;a href=&quot;#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; を&lt;/a&gt;呼び出す前に、バッファオブジェクトの基礎となるbytesオブジェクトを取得します。バッファオブジェクトの詳細については、&lt;a href=&quot;#binaryseq&quot;&gt;バイナリシーケンスタイプ&amp;mdash;バイト、バイト配列、メモリビュー、&lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;バッファプロトコル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="03bda2a56d81b4318fc811314de9ec490f7f7bc7" translate="yes" xml:space="preserve">
          <source>If at least one of &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is given, &lt;em&gt;object&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; (e.g. &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;). In this case, if &lt;em&gt;object&lt;/em&gt; is a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;) object, then &lt;code&gt;str(bytes, encoding, errors)&lt;/code&gt; is equivalent to &lt;a href=&quot;#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode(encoding, errors)&lt;/code&gt;&lt;/a&gt;. Otherwise, the bytes object underlying the buffer object is obtained before calling &lt;a href=&quot;#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#binaryseq&quot;&gt;Binary Sequence Types &amp;mdash; bytes, bytearray, memoryview&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;Buffer Protocol&lt;/a&gt; for information on buffer objects.</source>
          <target state="translated">&lt;em&gt;エンコーディング&lt;/em&gt;または&lt;em&gt;エラーの&lt;/em&gt;少なくとも1つが指定されている場合、&lt;em&gt;オブジェクト&lt;/em&gt;は&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトで&lt;/a&gt;ある必要があります（例：&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;）。この場合、&lt;em&gt;オブジェクト&lt;/em&gt;が&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;）オブジェクトの場合、 &lt;code&gt;str(bytes, encoding, errors)&lt;/code&gt; は&lt;a href=&quot;#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode(encoding, errors)&lt;/code&gt; &lt;/a&gt;と同等です。それ以外の場合は、&lt;a href=&quot;#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; を&lt;/a&gt;呼び出す前に、バッファオブジェクトの基礎となるbytesオブジェクトが取得されます。バッファオブジェクトの詳細については、&lt;a href=&quot;#binaryseq&quot;&gt;バイナリシーケンスタイプ&amp;mdash;バイト、バイトアレイ、メモリビュー&lt;/a&gt;、および&lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;バッファプロトコル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a08ad24a4b377d2b7fc4af8b136e23de7adba584" translate="yes" xml:space="preserve">
          <source>If authentication is requested but no authentication key is specified then the return value of &lt;code&gt;current_process().authkey&lt;/code&gt; is used (see &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt;). This value will be automatically inherited by any &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object that the current process creates. This means that (by default) all processes of a multi-process program will share a single authentication key which can be used when setting up connections between themselves.</source>
          <target state="translated">認証が要求されても認証キーが指定されていない場合は、 &lt;code&gt;current_process().authkey&lt;/code&gt; 戻り値が使用されます（&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; を&lt;/a&gt;参照）。この値は、現在のプロセスが作成するすべての&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;オブジェクトによって自動的に継承されます。これは、（デフォルトで）マルチプロセスプログラムのすべてのプロセスが、それらの間の接続をセットアップするときに使用できる単一の認証キーを共有することを意味します。</target>
        </trans-unit>
        <trans-unit id="e20a8216bd741a08c72ea1c6ed3561d4c0175953" translate="yes" xml:space="preserve">
          <source>If backslashes immediately precede a double quotation mark, every pair of backslashes is interpreted as a literal backslash. If the number of backslashes is odd, the last backslash escapes the next double quotation mark as described in rule 3.</source>
          <target state="translated">ダブルクォーテーションマークの直前にバックスラッシュがある場合、すべてのバックスラッシュのペアはリテラルバックスラッシュとして解釈されます。バックスラッシュの数が奇数の場合、規則3で説明されているように、最後のバックスラッシュは次のダブルクォーテーションマークをエスケープします。</target>
        </trans-unit>
        <trans-unit id="c7810826d744dce10312fc8b927b0de025784f99" translate="yes" xml:space="preserve">
          <source>If both &lt;em&gt;cancel_futures&lt;/em&gt; and &lt;em&gt;wait&lt;/em&gt; are &lt;code&gt;True&lt;/code&gt;, all futures that the executor has started running will be completed prior to this method returning. The remaining futures are cancelled.</source>
          <target state="translated">&lt;em&gt;cancel_futures&lt;/em&gt;と&lt;em&gt;waitの&lt;/em&gt;両方が &lt;code&gt;True&lt;/code&gt; の場合、エグゼキュータが実行を開始したすべての&lt;em&gt;futureは&lt;/em&gt;、このメソッドが戻る前に完了します。残りの先物はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="c7232d0f35717aeee89b7f01e116b1ce15ef033a" translate="yes" xml:space="preserve">
          <source>If both are aware and have different &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attributes, &lt;code&gt;a-b&lt;/code&gt; acts as if &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; were first converted to naive UTC datetimes first. The result is &lt;code&gt;(a.replace(tzinfo=None) - a.utcoffset()) - (b.replace(tzinfo=None)
- b.utcoffset())&lt;/code&gt; except that the implementation never overflows.</source>
          <target state="translated">両方が認識していて、&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性が異なる場合、 &lt;code&gt;a-b&lt;/code&gt; &lt;em&gt;は&lt;/em&gt;、&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;が最初に単純なUTC日時に最初に変換されたかのように動作します。結果は &lt;code&gt;(a.replace(tzinfo=None) - a.utcoffset()) - (b.replace(tzinfo=None) - b.utcoffset())&lt;/code&gt; になりますが、実装がオーバーフローすることはありません。</target>
        </trans-unit>
        <trans-unit id="21414aeb047eb522c66140299d9c38360d32d811" translate="yes" xml:space="preserve">
          <source>If both are naive, or both are aware and have the same &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute, the &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attributes are ignored, and the result is a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;t&lt;/em&gt; such that &lt;code&gt;datetime2 + t == datetime1&lt;/code&gt;. No time zone adjustments are done in this case.</source>
          <target state="translated">両方がナイーブであるか、両方が認識されており、同じ&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持っている場合、&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性は無視され、結果は &lt;code&gt;datetime2 + t == datetime1&lt;/code&gt; ような&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;em&gt;tに&lt;/em&gt;なります。この場合、タイムゾーンの調整は行われません。</target>
        </trans-unit>
        <trans-unit id="a6f9d2935f72f29d54f2f1f7b010c9d2226c8c57" translate="yes" xml:space="preserve">
          <source>If both callbacks signal EOF then &lt;em&gt;spawn&lt;/em&gt; will probably never return, unless &lt;em&gt;select&lt;/em&gt; throws an error on your platform when passed three empty lists. This is a bug, documented in &lt;a href=&quot;https://bugs.python.org/issue26228&quot;&gt;issue 26228&lt;/a&gt;.</source>
          <target state="translated">両方のコールバックがEOFを通知する場合、&lt;em&gt;select&lt;/em&gt;が3つの空のリストを渡してプラットフォームでエラーをスローしない限り、&lt;em&gt;spawn&lt;/em&gt;はおそらく決して戻りません。これはバグであり、&lt;a href=&quot;https://bugs.python.org/issue26228&quot;&gt;問題26228&lt;/a&gt;に記載されています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b4e1f0c2a028fb50a27b3609c4d3827918db65a" translate="yes" xml:space="preserve">
          <source>If both comparands are aware, and have the same &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute, the common &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute is ignored and the base datetimes are compared. If both comparands are aware and have different &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attributes, the comparands are first adjusted by subtracting their UTC offsets (obtained from &lt;code&gt;self.utcoffset()&lt;/code&gt;).</source>
          <target state="translated">両方の被比較数が認識されており、同じ&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持っている場合、共通の&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性は無視され、基準日時が比較されます。両方の比較対象が認識され、異なる&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持っている場合、最初に、比較対象はUTCオフセット（ &lt;code&gt;self.utcoffset()&lt;/code&gt; から取得）を差し引くことによって調整されます。</target>
        </trans-unit>
        <trans-unit id="d641321a92c1f78e2ea9102fa10acde0aa020cab" translate="yes" xml:space="preserve">
          <source>If both comparands are aware, and have the same &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute, the common &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute is ignored and the base times are compared. If both comparands are aware and have different &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attributes, the comparands are first adjusted by subtracting their UTC offsets (obtained from &lt;code&gt;self.utcoffset()&lt;/code&gt;). In order to stop mixed-type comparisons from falling back to the default comparison by object address, when a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised unless the comparison is &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;. The latter cases return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">両方の被比較数が認識されており、同じ&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持っている場合、共通の&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性は無視され、基準時刻が比較されます。両方の比較対象が認識され、異なる&lt;a href=&quot;#datetime.time.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持っている場合、最初に、比較対象はUTCオフセット（ &lt;code&gt;self.utcoffset()&lt;/code&gt; から取得）を差し引くことによって調整されます。混合タイプの比較がオブジェクトアドレスによるデフォルトの比較にフォールバックしないようにするために、&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトが異なるタイプのオブジェクトと比較されると、比較が &lt;code&gt;==&lt;/code&gt; または &lt;code&gt;!=&lt;/code&gt; でない限り、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。後者の場合は、それぞれ&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="640348c16c27f575031545c2822c834b44553bb0" translate="yes" xml:space="preserve">
          <source>If both options are given, user base and user site will be printed (always in this order), separated by &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">両方のオプションを指定すると、ユーザーベースとユーザーサイトが（常にこの順序で）印刷され、&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; &lt;/a&gt;で区切られます。</target>
        </trans-unit>
        <trans-unit id="5636d444bb3185b61c96a8708aabc4aa7259b873" translate="yes" xml:space="preserve">
          <source>If both the &lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt;&lt;code&gt;dispatch_table&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt;&lt;code&gt;reducer_override()&lt;/code&gt;&lt;/a&gt; are defined, then &lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt;&lt;code&gt;reducer_override()&lt;/code&gt;&lt;/a&gt; method takes priority.</source>
          <target state="translated">両方の場合&lt;a href=&quot;#pickle.Pickler.dispatch_table&quot;&gt; &lt;code&gt;dispatch_table&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt; &lt;code&gt;reducer_override()&lt;/code&gt; が&lt;/a&gt;定義され、次いで&lt;a href=&quot;#pickle.Pickler.reducer_override&quot;&gt; &lt;code&gt;reducer_override()&lt;/code&gt; &lt;/a&gt;メソッドが優先されます。</target>
        </trans-unit>
        <trans-unit id="0084a482d9be8fc3608c4a7c65006f2f65fc3c35" translate="yes" xml:space="preserve">
          <source>If called for &lt;em&gt;text&lt;/em&gt; that doesn&amp;rsquo;t include a period character (&lt;code&gt;'.'&lt;/code&gt;), it will complete from names currently defined in &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; and keywords (as defined by the &lt;a href=&quot;keyword#module-keyword&quot;&gt;&lt;code&gt;keyword&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">ピリオド文字（ &lt;code&gt;'.'&lt;/code&gt; ）を含まない&lt;em&gt;テキスト&lt;/em&gt;を呼び出すと、現在&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;で定義されている名前、&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;キーワード、および&lt;a href=&quot;keyword#module-keyword&quot;&gt; &lt;code&gt;keyword&lt;/code&gt; &lt;/a&gt;モジュールで定義されているキーワードから補完されます。</target>
        </trans-unit>
        <trans-unit id="9c41c5f7a69443087f2a6c12e1c09cf638abbcdd" translate="yes" xml:space="preserve">
          <source>If called for a dotted name, it will try to evaluate anything without obvious side-effects (functions will not be evaluated, but it can generate calls to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt;) up to the last part, and find matches for the rest via the &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; function. Any exception raised during the evaluation of the expression is caught, silenced and &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">点線の名前を呼ばれた場合、それは明白な副作用なしには何も評価しよう（関数が評価されることはありませんが、それはへの呼び出しを生成することができます&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;）までの最後の部分に、を介して残りの試合を見つける&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;関数。式の評価中に発生した例外はすべてキャッチされ、沈黙し、&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="171e72faae12dc9ef9de58a438c5f686dc15f91c" translate="yes" xml:space="preserve">
          <source>If called for a dotted name, it will try to evaluate anything without obvious side-effects (functions will not be evaluated, but it can generate calls to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt;) up to the last part, and find matches for the rest via the &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; function. Any exception raised during the evaluation of the expression is caught, silenced and &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">点線の名前が呼び出された場合、明らかな副作用なしに何でも評価しようとします（関数は評価されませんが、最後の部分まで&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;呼び出しを生成できます）、&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;介して残りの一致を見つけます（）関数。式の評価中に発生した例外はすべてキャッチされ、サイレンシングされ、&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="071a888c3aee29315903d24cf15d5cd34fe41222" translate="yes" xml:space="preserve">
          <source>If called multiple times with the same node argument, the set of dependencies will be the union of all dependencies passed in.</source>
          <target state="translated">同じノードの引数で複数回呼び出された場合、依存関係のセットは、渡されたすべての依存関係の和になります。</target>
        </trans-unit>
        <trans-unit id="1db8ca82fb7c38924ab71e87dc3d3f1a74a4cf1e" translate="yes" xml:space="preserve">
          <source>If called without arguments (or with &lt;code&gt;tz=None&lt;/code&gt;) the system local timezone is assumed for the target timezone. The &lt;code&gt;.tzinfo&lt;/code&gt; attribute of the converted datetime instance will be set to an instance of &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; with the zone name and offset obtained from the OS.</source>
          <target state="translated">引数 &lt;code&gt;tz=None&lt;/code&gt; （またはtz = Noneを使用して）呼び出されると、システムのローカルタイムゾーンがターゲットタイムゾーンと見なされます。変換された日時インスタンスの &lt;code&gt;.tzinfo&lt;/code&gt; 属性は、OSから取得したゾーン名とオフセットを使用して&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;インスタンスに設定されます。</target>
        </trans-unit>
        <trans-unit id="ed2cd04e51ea2f7f1214c3f95faf0caa16f6b695" translate="yes" xml:space="preserve">
          <source>If calling &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; raises an exception this exception is propagated unchanged.</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;を呼び出すと例外が発生する場合、この例外は変更されずに伝播されます。</target>
        </trans-unit>
        <trans-unit id="52f86dd4dc687753a2bf5577502ab4b99d7efacd" translate="yes" xml:space="preserve">
          <source>If completion is enabled, completing commands will be done automatically, and completing of commands args is done by calling &lt;code&gt;complete_foo()&lt;/code&gt; with arguments &lt;em&gt;text&lt;/em&gt;, &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;begidx&lt;/em&gt;, and &lt;em&gt;endidx&lt;/em&gt;. &lt;em&gt;text&lt;/em&gt; is the string prefix we are attempting to match: all returned matches must begin with it. &lt;em&gt;line&lt;/em&gt; is the current input line with leading whitespace removed, &lt;em&gt;begidx&lt;/em&gt; and &lt;em&gt;endidx&lt;/em&gt; are the beginning and ending indexes of the prefix text, which could be used to provide different completion depending upon which position the argument is in.</source>
          <target state="translated">補完が有効になっている場合、コマンドの補完は自動的に行われ、コマンドargsの補完は、引数&lt;em&gt;text&lt;/em&gt;、&lt;em&gt;line&lt;/em&gt;、&lt;em&gt;begidx&lt;/em&gt;、および&lt;em&gt;endidx&lt;/em&gt;を指定して &lt;code&gt;complete_foo()&lt;/code&gt; を呼び出すことによって行われ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;text&lt;/em&gt;は、照合しようとしている文字列プレフィックスです。返されるすべての一致は、それで始まる必要があります。&lt;em&gt;line&lt;/em&gt;は、先頭の空白が削除された現在の入力行です&lt;em&gt;。begidx&lt;/em&gt;と&lt;em&gt;endidx&lt;/em&gt;は、プレフィックステキストの開始インデックスと終了インデックスです。これを使用して、引数の位置に応じて異なる補完を提供できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0fec01fc70889d001a5e5d5e76ebae2d730e863d" translate="yes" xml:space="preserve">
          <source>If cookie has the named cookie-attribute, return its value. Otherwise, return &lt;em&gt;default&lt;/em&gt;.</source>
          <target state="translated">cookieに名前付きのcookie-attributeがある場合、その値を返します。それ以外の場合は、&lt;em&gt;デフォルトを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="67343970e1a1e7fd355a02bf76406a533d9720d9" translate="yes" xml:space="preserve">
          <source>If defined, &lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt;&lt;code&gt;persistent_load()&lt;/code&gt;&lt;/a&gt; should return the object specified by the persistent ID &lt;em&gt;pid&lt;/em&gt;. If an invalid persistent ID is encountered, an &lt;a href=&quot;#pickle.UnpicklingError&quot;&gt;&lt;code&gt;UnpicklingError&lt;/code&gt;&lt;/a&gt; should be raised.</source>
          <target state="translated">定義されている場合、&lt;a href=&quot;#pickle.Unpickler.persistent_load&quot;&gt; &lt;code&gt;persistent_load()&lt;/code&gt; &lt;/a&gt;は、永続ID &lt;em&gt;pidで&lt;/em&gt;指定されたオブジェクトを返す必要があります。無効な永続IDが検出されると、&lt;a href=&quot;#pickle.UnpicklingError&quot;&gt; &lt;code&gt;UnpicklingError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6474a9f723b4362b908bfb9818eb48e3ccd80f58" translate="yes" xml:space="preserve">
          <source>If discovery is started in a directory containing a package, either from the command line or by calling &lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt;&lt;code&gt;TestLoader.discover()&lt;/code&gt;&lt;/a&gt;, then the package &lt;code&gt;__init__.py&lt;/code&gt; will be checked for &lt;code&gt;load_tests&lt;/code&gt;. If that function does not exist, discovery will recurse into the package as though it were just another directory. Otherwise, discovery of the package&amp;rsquo;s tests will be left up to &lt;code&gt;load_tests&lt;/code&gt; which is called with the following arguments:</source>
          <target state="translated">コマンドラインから、&lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt; &lt;code&gt;TestLoader.discover()&lt;/code&gt; &lt;/a&gt;呼び出して、パッケージを含むディレクトリで検出が開始されると、パッケージ &lt;code&gt;__init__.py&lt;/code&gt; で &lt;code&gt;load_tests&lt;/code&gt; がチェックされます。その機能が存在しない場合、あたかも別のディレクトリであるかのように、検出がパッケージに再帰します。それ以外の場合、パッケージのテストの検出は、次の引数で呼び出される &lt;code&gt;load_tests&lt;/code&gt; に任されます。</target>
        </trans-unit>
        <trans-unit id="f3d282be498a158600c18b4f9266fe30d1c639ff" translate="yes" xml:space="preserve">
          <source>If echo free input is unavailable getpass() falls back to printing a warning message to &lt;em&gt;stream&lt;/em&gt; and reading from &lt;code&gt;sys.stdin&lt;/code&gt; and issuing a &lt;a href=&quot;#getpass.GetPassWarning&quot;&gt;&lt;code&gt;GetPassWarning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エコーのない入力が利用できない場合、getpass（）はフォールバックして、 &lt;code&gt;sys.stdin&lt;/code&gt; から&lt;em&gt;ストリーミング&lt;/em&gt;および読み取りを行う警告メッセージを&lt;a href=&quot;#getpass.GetPassWarning&quot;&gt; &lt;code&gt;GetPassWarning&lt;/code&gt; &lt;/a&gt;し、GetPassWarningを発行します。</target>
        </trans-unit>
        <trans-unit id="f9040a07fe9c1bf05ab58e880006a37bf7aba0a3" translate="yes" xml:space="preserve">
          <source>If either &lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt;&lt;code&gt;ConnectionResetError&lt;/code&gt;&lt;/a&gt; exception is raised when writing &lt;em&gt;input&lt;/em&gt; into &lt;em&gt;stdin&lt;/em&gt;, the exception is ignored. This condition occurs when the process exits before all data are written into &lt;em&gt;stdin&lt;/em&gt;.</source>
          <target state="translated">いずれかの場合&lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#ConnectionResetError&quot;&gt; &lt;code&gt;ConnectionResetError&lt;/code&gt; &lt;/a&gt;書き込み時に例外が発生した&lt;em&gt;入力&lt;/em&gt;に&lt;em&gt;STDINを&lt;/em&gt;、例外は無視されます。この状態は、すべてのデータが&lt;em&gt;stdinに&lt;/em&gt;書き込まれる前にプロセスが終了したときに発生します。</target>
        </trans-unit>
        <trans-unit id="be4f44baf0b306a7dfcbf05bf212b256e0623d5a" translate="yes" xml:space="preserve">
          <source>If either format string is not supported by the &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module, then the objects will always compare as unequal (even if the format strings and buffer contents are identical):</source>
          <target state="translated">どちらかのフォーマット文字列が&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールでサポートされていない場合、オブジェクトは常に不等として比較されます（フォーマット文字列とバッファーの内容が同じであっても）。</target>
        </trans-unit>
        <trans-unit id="2b8cf100d8fc5cb58fc7dd2777bc293a42ecb2c2" translate="yes" xml:space="preserve">
          <source>If end of file is found and no bytes were read, raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;. Otherwise, when nothing matches, return &lt;code&gt;(-1, None, data)&lt;/code&gt; where &lt;em&gt;data&lt;/em&gt; is the bytes received so far (may be empty bytes if a timeout happened).</source>
          <target state="translated">ファイルの終わりが見つかり、バイトが読み取られなかった場合は、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; を送出し&lt;/a&gt;ます。それ以外の場合、何も一致しない場合は、 &lt;code&gt;(-1, None, data)&lt;/code&gt; 返します。ここで、&lt;em&gt;データ&lt;/em&gt;はこれまでに受信したバイトです（タイムアウトが発生した場合は空のバイトになる場合があります）。</target>
        </trans-unit>
        <trans-unit id="2e0604802c9b1772457ef4937546641bbade8d20" translate="yes" xml:space="preserve">
          <source>If exception(s) occur, an &lt;a href=&quot;#shutil.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised with a list of reasons.</source>
          <target state="translated">例外が発生すると、理由のリストとともに&lt;a href=&quot;#shutil.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="71e75d563ccaca9a7a7e9ebdc073bdb50eae3f53" translate="yes" xml:space="preserve">
          <source>If fullname contains a &amp;lsquo;.&amp;rsquo;, the finders will be for the package containing fullname, otherwise they will be all registered top level finders (i.e. those on both sys.meta_path and sys.path_hooks).</source>
          <target state="translated">fullnameに「。」が含まれている場合、ファインダーはfullnameを含むパッケージ用です。それ以外の場合、それらはすべて登録されたトップレベルのファインダー（つまり、sys.meta_pathとsys.path_hooksの両方）になります。</target>
        </trans-unit>
        <trans-unit id="01110f1d67d6e9a5355fb7676557e4a50b926762" translate="yes" xml:space="preserve">
          <source>If given a list or string, the initializer is passed to the new array&amp;rsquo;s &lt;a href=&quot;#array.array.fromlist&quot;&gt;&lt;code&gt;fromlist()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#array.array.fromunicode&quot;&gt;&lt;code&gt;fromunicode()&lt;/code&gt;&lt;/a&gt; method (see below) to add initial items to the array. Otherwise, the iterable initializer is passed to the &lt;a href=&quot;#array.array.extend&quot;&gt;&lt;code&gt;extend()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">リストまたは文字列が指定されている場合、初期化子は新しい配列の&lt;a href=&quot;#array.array.fromlist&quot;&gt; &lt;code&gt;fromlist()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#array.array.fromunicode&quot;&gt; &lt;code&gt;fromunicode()&lt;/code&gt; &lt;/a&gt;メソッド（下記を参照）に渡され、配列に初期項目が追加されます。それ以外の場合、反復可能な初期化子は、&lt;a href=&quot;#array.array.extend&quot;&gt; &lt;code&gt;extend()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="2af680c07fb1f88b58852d1a71d38f2be07b2607" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;compress_type&lt;/em&gt; overrides the value given for the &lt;em&gt;compression&lt;/em&gt; parameter to the constructor for the new entry, or in the &lt;em&gt;zinfo_or_arcname&lt;/em&gt; (if that is a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; instance). Similarly, &lt;em&gt;compresslevel&lt;/em&gt; will override the constructor if given.</source>
          <target state="translated">与えられた場合、&lt;em&gt;compress_type&lt;/em&gt;は、新しいパラメーターのコンストラクター、または&lt;em&gt;zinfo_or_arcname&lt;/em&gt;（&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;インスタンスの場合）の&lt;em&gt;圧縮&lt;/em&gt;パラメーターに指定された値をオーバーライドします。同様に、&lt;em&gt;compresslevelを指定&lt;/em&gt;すると、コンストラクターがオーバーライドされます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="609f14a5d88e9d16549cb48055d0b9bddf3d600e" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;default&lt;/em&gt; will be returned if the object does not provide means to retrieve the size. Otherwise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;em&gt;指定&lt;/em&gt;すると、オブジェクトがサイズを取得する手段を提供しない場合、&lt;em&gt;デフォルト&lt;/em&gt;が返されます。それ以外の場合は、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9f38935e27047cadfc0462ecbb2dd5665952c0eb" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;doc&lt;/em&gt; will be the docstring of the property attribute. Otherwise, the property will copy &lt;em&gt;fget&lt;/em&gt;&amp;rsquo;s docstring (if it exists). This makes it possible to create read-only properties easily using &lt;a href=&quot;#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;:</source>
          <target state="translated">指定した場合、&lt;em&gt;doc&lt;/em&gt;はプロパティ属性のdocstringになります。それ以外の場合、プロパティは&lt;em&gt;fgetのドキュメント&lt;/em&gt;文字列（存在する場合）をコピーします。これにより、&lt;a href=&quot;#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;として使用して、読み取り専用プロパティを簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="057ea557c800c9d2cad77504cc427d0666f2d7db" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;doc&lt;/em&gt; will be the docstring of the property attribute. Otherwise, the property will copy &lt;em&gt;fget&lt;/em&gt;&amp;rsquo;s docstring (if it exists). This makes it possible to create read-only properties easily using &lt;a href=&quot;#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt;:</source>
          <target state="translated">指定した場合、&lt;em&gt;doc&lt;/em&gt;はプロパティ属性のdocstringになります。それ以外の場合、プロパティは&lt;em&gt;fget&lt;/em&gt;のdocstringをコピーします（存在する場合）。これにより、&lt;a href=&quot;#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt;として使用して、読み取り専用プロパティを簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="47874343de9186efbf845a71e131f69e43d9eafd" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;extra_args&lt;/em&gt; is a sequence of &lt;code&gt;(name, value)&lt;/code&gt; pairs that will be used as extra keywords arguments when the archiver callable is used.</source>
          <target state="translated">指定された場合、&lt;em&gt;extra_args&lt;/em&gt;は、 &lt;code&gt;(name, value)&lt;/code&gt; ペアのシーケンスであり、アーカイバー呼び出し可能オブジェクトが使用されるときに追加のキーワード引数として使用されます。</target>
        </trans-unit>
        <trans-unit id="fa087efbf7689c1c4adc26135d774f6bca7fd2e9" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;level&lt;/em&gt; should be either a numeric logging level or its string equivalent (for example either &lt;code&gt;&quot;ERROR&quot;&lt;/code&gt; or &lt;code&gt;logging.ERROR&lt;/code&gt;). The default is &lt;code&gt;logging.INFO&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;level&lt;/em&gt;を指定する場合、&lt;em&gt;レベル&lt;/em&gt;は数値のログレベルまたはそれに相当する文字列（たとえば、 &lt;code&gt;&quot;ERROR&quot;&lt;/code&gt; または &lt;code&gt;logging.ERROR&lt;/code&gt; ）のいずれかでなければなりません。デフォルトは &lt;code&gt;logging.INFO&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="00080200be66b5d6036d730a780ead8b97d4a8db" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;logger&lt;/em&gt; should be a &lt;a href=&quot;logging#logging.Logger&quot;&gt;&lt;code&gt;logging.Logger&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; giving the name of a logger. The default is the root logger, which will catch all messages that were not blocked by a non-propagating descendent logger.</source>
          <target state="translated">指定する場合、&lt;em&gt;logger&lt;/em&gt;は&lt;a href=&quot;logging#logging.Logger&quot;&gt; &lt;code&gt;logging.Logger&lt;/code&gt; &lt;/a&gt;オブジェクトまたはロガーの名前を指定する&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; である&lt;/a&gt;必要があります。デフォルトはルートロガーであり、伝播しない子孫ロガーによってブロックされなかったすべてのメッセージをキャッチします。</target>
        </trans-unit>
        <trans-unit id="6742a72866173acc4c64ea3543dda8799bca224e" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;logger&lt;/em&gt; should be a &lt;a href=&quot;logging#logging.Logger&quot;&gt;&lt;code&gt;logging.Logger&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; giving the name of a logger. The default is the root logger, which will catch all messages.</source>
          <target state="translated">指定する場合、&lt;em&gt;ロガー&lt;/em&gt;は&lt;a href=&quot;logging#logging.Logger&quot;&gt; &lt;code&gt;logging.Logger&lt;/code&gt; &lt;/a&gt;オブジェクトまたはロガーの名前を示す&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; に&lt;/a&gt;する必要があります。デフォルトはルートロガーで、すべてのメッセージをキャッチします。</target>
        </trans-unit>
        <trans-unit id="5d1743db3a55e3d1d851253caed66fb63e4ec4ba" translate="yes" xml:space="preserve">
          <source>If given, &lt;em&gt;startupinfo&lt;/em&gt; will be a &lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt;&lt;code&gt;STARTUPINFO&lt;/code&gt;&lt;/a&gt; object, which is passed to the underlying &lt;code&gt;CreateProcess&lt;/code&gt; function. &lt;em&gt;creationflags&lt;/em&gt;, if given, can be one or more of the following flags:</source>
          <target state="translated">指定された場合、&lt;em&gt;startupinfo&lt;/em&gt;は&lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt; &lt;code&gt;STARTUPINFO&lt;/code&gt; &lt;/a&gt;オブジェクトであり、基礎となる &lt;code&gt;CreateProcess&lt;/code&gt; 関数に渡されます。&lt;em&gt;creationflags&lt;/em&gt;は、指定する場合、次のフラグの1つ以上にすることができます。</target>
        </trans-unit>
        <trans-unit id="44cb0cd8c45e437d22c4b42cdbed99611a31b48c" translate="yes" xml:space="preserve">
          <source>If greater than zero, specifies how much space, in character widths, to allocate for the text label, if less than zero, specifies a minimum width. If zero or unspecified, the natural width of the text label is used.</source>
          <target state="translated">ゼロより大きい場合は、 テキス ト ラ ベルに割り当てるスペースを文字幅で指定し、 ゼロより小さい場合は最小幅を指定します。ゼロまたは指定しない場合、テキストラベルの自然な幅が使用されます。</target>
        </trans-unit>
        <trans-unit id="718d9d10f66de628c1bab6c410a233a3ac12213c" translate="yes" xml:space="preserve">
          <source>If importing a module fails, for example due to a syntax error, then this will be recorded as a single error and discovery will continue. If the import failure is due to &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; being raised, it will be recorded as a skip instead of an error.</source>
          <target state="translated">構文エラーなどが原因でモジュールのインポートが失敗した場合、これは単一のエラーとして記録され、検出が続行されます。&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;が発生したことがインポートの失敗の原因である場合、エラーではなくスキップとして記録されます。</target>
        </trans-unit>
        <trans-unit id="79f23909838ce6528a57771817116435f2739054" translate="yes" xml:space="preserve">
          <source>If input is a number greater than 10 or smaller than 0.5, speed is set to 0. Speedstrings are mapped to speedvalues as follows:</source>
          <target state="translated">入力が10以上0.5以下の数値の場合、速度は0に設定されます。 速度文字列は以下のように速度値にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="5989f9c468e2d22d579475f78ddf414d62121f7d" translate="yes" xml:space="preserve">
          <source>If invalid arguments are passed in, it will issue an error:</source>
          <target state="translated">無効な引数が渡された場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="93a952190c9333e02d422078312ba6dfe53a93fe" translate="yes" xml:space="preserve">
          <source>If invoked without arguments, clear all cookies. If given a single argument, only cookies belonging to that &lt;em&gt;domain&lt;/em&gt; will be removed. If given two arguments, cookies belonging to the specified &lt;em&gt;domain&lt;/em&gt; and URL &lt;em&gt;path&lt;/em&gt; are removed. If given three arguments, then the cookie with the specified &lt;em&gt;domain&lt;/em&gt;, &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt; is removed.</source>
          <target state="translated">引数なしで呼び出された場合、すべてのCookieをクリアします。単一の引数を指定すると、その&lt;em&gt;ドメインに&lt;/em&gt;属するCookieのみが削除されます。2つの引数を指定すると、指定した&lt;em&gt;ドメイン&lt;/em&gt;およびURL &lt;em&gt;パスに&lt;/em&gt;属するCookie が削除されます。3つの引数が指定された&lt;em&gt;場合&lt;/em&gt;、指定された&lt;em&gt;ドメイン&lt;/em&gt;、&lt;em&gt;パス&lt;/em&gt;、および&lt;em&gt;名前&lt;/em&gt;のCookie が削除されます。</target>
        </trans-unit>
        <trans-unit id="00314545be4a33bc05a395af1ac6499955ea39c3" translate="yes" xml:space="preserve">
          <source>If it falls back to the boilerplate, there are no more possible methods to try, so this is where the default implementation should live.</source>
          <target state="translated">それがボイラープレートに戻ってしまうと、試すことができるメソッドがなくなってしまうので、ここはデフォルトの実装が生きているはずです。</target>
        </trans-unit>
        <trans-unit id="967a860c70a7b59392bb2e73d01133edf0c97f92" translate="yes" xml:space="preserve">
          <source>If it is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, unescaped non-ASCII characters in &lt;em&gt;string&lt;/em&gt; are encoded into UTF-8 bytes.</source>
          <target state="translated">もしそうであれば&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、中にエスケープされていない非ASCII文字&lt;em&gt;列を&lt;/em&gt; UTF-8バイトにエンコードされています。</target>
        </trans-unit>
        <trans-unit id="cb04b7e71c45bcf4eca27bc7c2fbd2f0873fc977" translate="yes" xml:space="preserve">
          <source>If it is a &lt;em&gt;string&lt;/em&gt;, you must also give the &lt;em&gt;encoding&lt;/em&gt; (and optionally, &lt;em&gt;errors&lt;/em&gt;) parameters; &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray()&lt;/code&gt;&lt;/a&gt; then converts the string to bytes using &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;文字列の&lt;/em&gt;場合は、&lt;em&gt;エンコーディング&lt;/em&gt;（およびオプションで&lt;em&gt;エラー&lt;/em&gt;）パラメータも指定する必要があります。&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray()&lt;/code&gt; &lt;/a&gt;次に使用バイトに文字列を変換&lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e5fd905d7cb634eab36e5f7022d541dd08678a8" translate="yes" xml:space="preserve">
          <source>If it is an &lt;em&gt;integer&lt;/em&gt;, the array will have that size and will be initialized with null bytes.</source>
          <target state="translated">もしそうであれば&lt;em&gt;、整数&lt;/em&gt;、アレイは、その大きさを有し、ヌルバイトで初期化されます。</target>
        </trans-unit>
        <trans-unit id="ddd8748ceb366423912a917b053d73ddd49a2edd" translate="yes" xml:space="preserve">
          <source>If it is an &lt;em&gt;iterable&lt;/em&gt;, it must be an iterable of integers in the range &lt;code&gt;0 &amp;lt;= x &amp;lt; 256&lt;/code&gt;, which are used as the initial contents of the array.</source>
          <target state="translated">&lt;em&gt;iterableの&lt;/em&gt;場合、配列の初期コンテンツとして使用される &lt;code&gt;0 &amp;lt;= x &amp;lt; 256&lt;/code&gt; 範囲の整数のiterableでなければなりません。</target>
        </trans-unit>
        <trans-unit id="2af15e7e8ced9c0a8f7a9019fcb44881f1e7e0b3" translate="yes" xml:space="preserve">
          <source>If it is an object conforming to the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt;, a read-only buffer of the object will be used to initialize the bytes array.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;バッファインターフェイスに&lt;/a&gt;準拠するオブジェクトの場合、オブジェクトの読み取り専用バッファがバイト配列の初期化に使用されます。</target>
        </trans-unit>
        <trans-unit id="b3634a5c7e10c7f8808e49a74bf8a6b4e7fd50a4" translate="yes" xml:space="preserve">
          <source>If it is an object conforming to the &lt;em&gt;buffer&lt;/em&gt; interface, a read-only buffer of the object will be used to initialize the bytes array.</source>
          <target state="translated">&lt;em&gt;バッファ&lt;/em&gt;インターフェースに準拠したオブジェクトの場合、バイト配列を初期化するためにオブジェクトの読み取り専用バッファが使用されます。</target>
        </trans-unit>
        <trans-unit id="9cdca5ec79b73d99eb39c2ec4e51e31cb8a1c732" translate="yes" xml:space="preserve">
          <source>If it is an open file object, the archive will be written to that file object, which must be open for writing in bytes mode.</source>
          <target state="translated">それがオープンなファイルオブジェクトであれば、アーカイブはそのファイルオブジェクトに書き込まれますが、そのファイルオブジェクトはバイトモードで書き込むためにはオープンでなければなりません。</target>
        </trans-unit>
        <trans-unit id="44706e24cce0d97822e15cc2cdd3d9f22b0e7993" translate="yes" xml:space="preserve">
          <source>If it is called without arguments, it will print the contents of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; on the standard output, followed by the value of &lt;a href=&quot;#site.USER_BASE&quot;&gt;&lt;code&gt;USER_BASE&lt;/code&gt;&lt;/a&gt; and whether the directory exists, then the same thing for &lt;a href=&quot;#site.USER_SITE&quot;&gt;&lt;code&gt;USER_SITE&lt;/code&gt;&lt;/a&gt;, and finally the value of &lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt;&lt;code&gt;ENABLE_USER_SITE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それは、引数なしで呼び出された場合、それはの内容に印刷されます&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;値に続いて、標準出力に&lt;a href=&quot;#site.USER_BASE&quot;&gt; &lt;code&gt;USER_BASE&lt;/code&gt; &lt;/a&gt;やディレクトリが存在するかどうか、そして、同じこと&lt;a href=&quot;#site.USER_SITE&quot;&gt; &lt;code&gt;USER_SITE&lt;/code&gt; &lt;/a&gt;、との最後に値&lt;a href=&quot;#site.ENABLE_USER_SITE&quot;&gt; &lt;code&gt;ENABLE_USER_SITE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e4f1f075612bafa0ec058bfc6d0d37706417e13" translate="yes" xml:space="preserve">
          <source>If it is desired to completely ignore cancellation (not recommended) the &lt;code&gt;shield()&lt;/code&gt; function should be combined with a try/except clause, as follows:</source>
          <target state="translated">キャンセルを完全に無視することが望ましい場合（非推奨）、次のように、 &lt;code&gt;shield()&lt;/code&gt; 関数をtry / except句と組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="01192a9f95f76e2eb7be7dea65299a6baa4bc2ab" translate="yes" xml:space="preserve">
          <source>If it is desired to send data to the process&amp;rsquo; &lt;em&gt;stdin&lt;/em&gt;, the process needs to be created with &lt;code&gt;stdin=PIPE&lt;/code&gt;. Similarly, to get anything other than &lt;code&gt;None&lt;/code&gt; in the result tuple, the process has to be created with &lt;code&gt;stdout=PIPE&lt;/code&gt; and/or &lt;code&gt;stderr=PIPE&lt;/code&gt; arguments.</source>
          <target state="translated">プロセスの&lt;em&gt;stdinに&lt;/em&gt;データを送信する必要がある場合は、プロセスを &lt;code&gt;stdin=PIPE&lt;/code&gt; で作成する必要があります。同様に、結果タプルで &lt;code&gt;None&lt;/code&gt; 以外のものを取得するには、プロセスを &lt;code&gt;stdout=PIPE&lt;/code&gt; や &lt;code&gt;stderr=PIPE&lt;/code&gt; 引数で作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="36e5b58797559e7d7360ba24eec2865eada11f86" translate="yes" xml:space="preserve">
          <source>If it is false, the buffer&amp;rsquo;s mutability is ignored and behaviour is as for a read-only buffer, except that the 1024 byte limit mentioned above is avoided &amp;ndash; so long as the buffer you pass is at least as long as what the operating system wants to put there, things should work.</source>
          <target state="translated">falseの場合、バッファーの可変性は無視され、読み取り専用バッファーの場合と同様の動作になります。ただし、上記の1024バイトの制限は回避されます&amp;ndash;渡すバッファーが少なくともオペレーティングシステムの要求する長さである限りそこに置くために、物事はうまくいくはずです。</target>
        </trans-unit>
        <trans-unit id="f61ccb0d5046c26bcd78e1f1f830264ae4214727" translate="yes" xml:space="preserve">
          <source>If it is temporary or not.</source>
          <target state="translated">それが一時的なものかどうか。</target>
        </trans-unit>
        <trans-unit id="04ea50b1d44dcb9e42bb0e15073254ec5d646ca9" translate="yes" xml:space="preserve">
          <source>If it is the name of a file, or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, the archive will be written to that file.</source>
          <target state="translated">ファイルの名前または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトの&lt;/a&gt;場合、アーカイブはそのファイルに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="7bd6548196bed46b55e5764fa2387dba5c9f7a2e" translate="yes" xml:space="preserve">
          <source>If it is the name of a file, or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, the archive will be written to that file.</source>
          <target state="translated">それがファイルの名前、または&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトである&lt;/a&gt;場合、アーカイブはそのファイルに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="b445164335a5373b51d2219b8df35ac044c9a899" translate="yes" xml:space="preserve">
          <source>If it must be ignored the next N times.</source>
          <target state="translated">次のN回を無視しなければならない場合。</target>
        </trans-unit>
        <trans-unit id="9df4a0ab1dcaed9052df14308a45b7732b61c521" translate="yes" xml:space="preserve">
          <source>If it was set via line number, it checks if &lt;code&gt;b.line&lt;/code&gt; is the same as the one in the frame also passed as argument. If the breakpoint was set via function name, we have to check we are in the right frame (the right function) and if we are in its first executable line.</source>
          <target state="translated">行番号を介して設定されている場合、 &lt;code&gt;b.line&lt;/code&gt; が、引数として渡されたフレーム内のものと同じかどうかを確認します。ブレークポイントが関数名で設定されている場合は、正しいフレーム（正しい関数）にいることと、その最初の実行可能行にあることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="d92fb59232d64b94f33278f3d1f5a387b837f8fe" translate="yes" xml:space="preserve">
          <source>If keyword arguments are given, the keyword arguments and their values are added to the dictionary created from the positional argument. If a key being added is already present, the value from the keyword argument replaces the value from the positional argument.</source>
          <target state="translated">キーワード引数が与えられた場合、キーワード引数とその値は、位置引数から作成された辞書に追加されます。追加されるキーが既に存在する場合、キーワード引数の値が位置引数の値を置き換えます。</target>
        </trans-unit>
        <trans-unit id="298d4ffd5a1a153665fe65937860d394e9ce55c5" translate="yes" xml:space="preserve">
          <source>If line is blank, delete it, otherwise clear to end of line.</source>
          <target state="translated">行が空白の場合は削除し、そうでない場合は行末までクリアします。</target>
        </trans-unit>
        <trans-unit id="e5b5e5077dcfb2543cd16c5eaa3971bdfe538b2b" translate="yes" xml:space="preserve">
          <source>If modifying your production classes to add defaults isn&amp;rsquo;t to your liking then there are more options. One of these is simply to use an instance as the spec rather than the class. The other is to create a subclass of the production class and add the defaults to the subclass without affecting the production class. Both of these require you to use an alternative object as the spec. Thankfully &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; supports this - you can simply pass the alternative object as the &lt;em&gt;autospec&lt;/em&gt; argument:</source>
          <target state="translated">プロダクションクラスを変更してデフォルトを追加することが好みに合わない場合は、さらに多くのオプションがあります。これらの1つは、クラスではなくインスタンスを仕様として使用することです。もう1つは、本番クラスのサブクラスを作成し、本番クラスに影響を与えずにデフォルトをサブクラスに追加することです。これらはどちらも、仕様として代替オブジェクトを使用する必要があります。ありがたいことに、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;はこれをサポートしています&lt;em&gt;。autospec&lt;/em&gt;引数として代替オブジェクトを渡すだけです。</target>
        </trans-unit>
        <trans-unit id="17ae7629605c78f2ad74ec604b851cab4b9b9b18" translate="yes" xml:space="preserve">
          <source>If multiple directive comments are used for a single example, then they are combined:</source>
          <target state="translated">複数のディレクティブコメントが一つの例に使用されている場合は、それらが結合されます。</target>
        </trans-unit>
        <trans-unit id="7453bc4e224cf54a5aeef5110e30a59fe07fd075" translate="yes" xml:space="preserve">
          <source>If multiple files are found, later files are used as fallbacks for earlier ones. To allow setting the fallback, &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; is used to clone each translation object from the cache; the actual instance data is still shared with the cache.</source>
          <target state="translated">複数のファイルが見つかった場合、後のファイルが前のファイルのフォールバックとして使用されます。フォールバックを設定できるようにするには、&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;を使用して、キャッシュから各変換オブジェクトを複製します。実際のインスタンスデータは引き続きキャッシュと共有されます。</target>
        </trans-unit>
        <trans-unit id="8452349a938b29d0b36774ae51c5edbf888f2236" translate="yes" xml:space="preserve">
          <source>If multiple items are maximal, the function returns the first one encountered. This is consistent with other sort-stability preserving tools such as &lt;code&gt;sorted(iterable, key=keyfunc, reverse=True)[0]&lt;/code&gt; and &lt;code&gt;heapq.nlargest(1, iterable, key=keyfunc)&lt;/code&gt;.</source>
          <target state="translated">複数のアイテムが最大の場合、関数は最初に見つかったアイテムを返します。これは、 &lt;code&gt;sorted(iterable, key=keyfunc, reverse=True)[0]&lt;/code&gt; や &lt;code&gt;heapq.nlargest(1, iterable, key=keyfunc)&lt;/code&gt; などの他のソート安定性保持ツールと一致しています。</target>
        </trans-unit>
        <trans-unit id="c3c9e3d0380e3afc1d3245499ca493b8cdbe62b9" translate="yes" xml:space="preserve">
          <source>If multiple items are minimal, the function returns the first one encountered. This is consistent with other sort-stability preserving tools such as &lt;code&gt;sorted(iterable, key=keyfunc)[0]&lt;/code&gt; and &lt;code&gt;heapq.nsmallest(1,
iterable, key=keyfunc)&lt;/code&gt;.</source>
          <target state="translated">複数のアイテムが最小の場合、関数は最初に見つかったアイテムを返します。これは、 &lt;code&gt;sorted(iterable, key=keyfunc)[0]&lt;/code&gt; や &lt;code&gt;heapq.nsmallest(1, iterable, key=keyfunc)&lt;/code&gt; などの他のソート安定性保持ツールと一致しています。</target>
        </trans-unit>
        <trans-unit id="f562be4d3070268fdf6e36d18ca74512853d9784" translate="yes" xml:space="preserve">
          <source>If multiple processes are enqueuing objects, it is possible for the objects to be received at the other end out-of-order. However, objects enqueued by the same process will always be in the expected order with respect to each other.</source>
          <target state="translated">複数のプロセスがオブジェクトを待ち受けにしている場合、オブジェクトが他方の端で順番外に受信される可能性があります。しかし、同じプロセスによって待ち受けにされたオブジェクトは、常に互いに期待される順序になります。</target>
        </trans-unit>
        <trans-unit id="b636cc065ec6ef42100c3456eb6185694bc5d4f7" translate="yes" xml:space="preserve">
          <source>If name is not given, this examines the available implementations to find one with the required feature set. If no implementation can be found, raise an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;. The features list must be a sequence of &lt;code&gt;(feature,
version)&lt;/code&gt; pairs which are passed to the &lt;code&gt;hasFeature()&lt;/code&gt; method on available &lt;code&gt;DOMImplementation&lt;/code&gt; objects.</source>
          <target state="translated">名前が指定されていない場合は、使用可能な実装を調べて、必要な機能セットを持つ実装を見つけます。実装が見つからない場合は、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; を送出し&lt;/a&gt;ます。機能リストは、使用可能な &lt;code&gt;DOMImplementation&lt;/code&gt; オブジェクトの &lt;code&gt;hasFeature()&lt;/code&gt; メソッドに渡される一連の &lt;code&gt;(feature, version)&lt;/code&gt; ペアである必要があります。</target>
        </trans-unit>
        <trans-unit id="26b2ddfd53b925d6fed2be41cbcc44c6bb590446" translate="yes" xml:space="preserve">
          <source>If neither &lt;em&gt;encoding&lt;/em&gt; nor &lt;em&gt;errors&lt;/em&gt; is given, &lt;code&gt;str(object)&lt;/code&gt; returns &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;object.__str__()&lt;/code&gt;&lt;/a&gt;, which is the &amp;ldquo;informal&amp;rdquo; or nicely printable string representation of &lt;em&gt;object&lt;/em&gt;. For string objects, this is the string itself. If &lt;em&gt;object&lt;/em&gt; does not have a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; method, then &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; falls back to returning &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr(object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どちらの場合&lt;em&gt;エンコーディング&lt;/em&gt;も&lt;em&gt;エラーが&lt;/em&gt;与えられ、 &lt;code&gt;str(object)&lt;/code&gt; を返しますが&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;object.__str__()&lt;/code&gt; &lt;/a&gt;の「非公式」またはきれいに印字可能な文字列表現である、&lt;em&gt;オブジェクトを&lt;/em&gt;。文字列オブジェクトの場合、これは文字列自体です。&lt;em&gt;オブジェクトに&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;メソッドがない場合、&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr(object)&lt;/code&gt; &lt;/a&gt;を返すようにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="9a3eaa6c4bd2b94ab28cee529eb78a1fa8fef6b4" translate="yes" xml:space="preserve">
          <source>If neither &lt;em&gt;encoding&lt;/em&gt; nor &lt;em&gt;errors&lt;/em&gt; is given, &lt;code&gt;str(object)&lt;/code&gt; returns &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;object.__str__()&lt;/code&gt;&lt;/a&gt;, which is the &amp;ldquo;informal&amp;rdquo; or nicely printable string representation of &lt;em&gt;object&lt;/em&gt;. For string objects, this is the string itself. If &lt;em&gt;object&lt;/em&gt; does not have a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; method, then &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; falls back to returning &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr(object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どちらの場合&lt;em&gt;エンコーディング&lt;/em&gt;も&lt;em&gt;エラーが&lt;/em&gt;与えられ、 &lt;code&gt;str(object)&lt;/code&gt; を返しますが&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;object.__str__()&lt;/code&gt; &lt;/a&gt;の「非公式」またはきれいに印字可能な文字列表現である、&lt;em&gt;オブジェクトを&lt;/em&gt;。文字列オブジェクトの場合、これは文字列自体です。&lt;em&gt;オブジェクトに&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;メソッドがない場合、&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; は&lt;/a&gt;フォールバックして&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr(object)&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="54d4d7ea65c7bad4af575a43659f61752244563a" translate="yes" xml:space="preserve">
          <source>If neither &lt;em&gt;weights&lt;/em&gt; nor &lt;em&gt;cum_weights&lt;/em&gt; are specified, selections are made with equal probability. If a weights sequence is supplied, it must be the same length as the &lt;em&gt;population&lt;/em&gt; sequence. It is a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; to specify both &lt;em&gt;weights&lt;/em&gt; and &lt;em&gt;cum_weights&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;weights&lt;/em&gt;も&lt;em&gt;cum_weights&lt;/em&gt;も指定されていない場合、選択は同じ確率で行われます。重みシーケンスが指定されている場合、それは&lt;em&gt;母集団&lt;/em&gt;シーケンスと同じ長さでなければなりません。&lt;em&gt;weight&lt;/em&gt;と&lt;em&gt;cum_weightsの&lt;/em&gt;両方を指定するのは&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;です&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23e71f0816a9280c7a878c8d86eb0dc6fc13142c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;.mo&lt;/code&gt; file is found, this function raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fallback&lt;/em&gt; is false (which is the default), and returns a &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt; instance if &lt;em&gt;fallback&lt;/em&gt; is true.</source>
          <target state="translated">&lt;code&gt;.mo&lt;/code&gt; ファイルが見つからない場合、この関数は、&lt;em&gt;フォールバック&lt;/em&gt;がfalse（デフォルト）の場合に&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;を発生させ、&lt;em&gt;フォール&lt;/em&gt;&lt;em&gt;バック&lt;/em&gt;がtrueの場合に&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;インスタンスを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5fa475a3d6271ad07e3d7908a4b54063aef9110" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;Content-Length&lt;/em&gt; header was supplied, urlretrieve can not check the size of the data it has downloaded, and just returns it. In this case you just have to assume that the download was successful.</source>
          <target state="translated">何場合&lt;em&gt;のContent-Length&lt;/em&gt;ヘッダが供給されなかった、urlretrieveは、それがダウンロードされたデータのサイズをチェックし、それを返すことができません。この場合、ダウンロードが成功したと想定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b66b107ef18a6ec29206237c3b1968db398d135d" translate="yes" xml:space="preserve">
          <source>If no argument is given, &lt;code&gt;0.0&lt;/code&gt; is returned.</source>
          <target state="translated">引数を指定しない場合、 &lt;code&gt;0.0&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="46157783a038d57f5604740e6a9b616a64d86cd0" translate="yes" xml:space="preserve">
          <source>If no arguments are given, return current (canvaswidth, canvasheight). Else resize the canvas the turtles are drawing on. Do not alter the drawing window. To observe hidden parts of the canvas, use the scrollbars. With this method, one can make visible those parts of a drawing which were outside the canvas before.</source>
          <target state="translated">引数が与えられない場合は、現在の (canvaswidth,canvasheight)を返します。そうでなければ、カメが描いているキャンバスのサイズを変更します。描画ウィンドウを変更しないでください。キャンバスの隠れた部分を見るには、スクロールバーを使います。この方法を使うと、 キャンバスの外にあった部分を見えるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="5e52dc62f51669f668a33bf460b7f8bf82543a15" translate="yes" xml:space="preserve">
          <source>If no arguments are specified, it defaults to:</source>
          <target state="translated">引数が指定されていない場合はデフォルトです。</target>
        </trans-unit>
        <trans-unit id="17c7d031f77de40c273fcdef1ad3809784776686" translate="yes" xml:space="preserve">
          <source>If no blocks match, this returns &lt;code&gt;(alo, blo, 0)&lt;/code&gt;.</source>
          <target state="translated">一致するブロックがない場合、これは &lt;code&gt;(alo, blo, 0)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="fce8e5571f9d4e61cf90e90a33029b4a46f9fdae" translate="yes" xml:space="preserve">
          <source>If no encoding is specified, then the default of &lt;code&gt;'utf-8'&lt;/code&gt; will be returned.</source>
          <target state="translated">エンコーディングが指定されていない場合、デフォルトの &lt;code&gt;'utf-8'&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d0b220a8961aa756600716c9da500833111cb46e" translate="yes" xml:space="preserve">
          <source>If no errors occur, the result will be: &lt;code&gt;abs(a-b) &amp;lt;= max(rel_tol * max(abs(a), abs(b)), abs_tol)&lt;/code&gt;.</source>
          <target state="translated">エラーが発生しない場合、結果は &lt;code&gt;abs(a-b) &amp;lt;= max(rel_tol * max(abs(a), abs(b)), abs_tol)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ad242d3e56bb64a3f42863144cd33fbe0e3221f2" translate="yes" xml:space="preserve">
          <source>If no exception is being handled anywhere on the stack, a tuple containing three &lt;code&gt;None&lt;/code&gt; values is returned. Otherwise, the values returned are &lt;code&gt;(type, value, traceback)&lt;/code&gt;. Their meaning is: &lt;em&gt;type&lt;/em&gt; gets the type of the exception being handled (a subclass of &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;); &lt;em&gt;value&lt;/em&gt; gets the exception instance (an instance of the exception type); &lt;em&gt;traceback&lt;/em&gt; gets a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#traceback-objects&quot;&gt;traceback object&lt;/a&gt; which encapsulates the call stack at the point where the exception originally occurred.</source>
          <target state="translated">スタックのどこでも例外が処理されていない場合、3つの &lt;code&gt;None&lt;/code&gt; 値を含むタプルが返されます。それ以外の場合、返される値は &lt;code&gt;(type, value, traceback)&lt;/code&gt; です。これらの意味は次のとおりです。&lt;em&gt;タイプが&lt;/em&gt;処理された例外（のサブクラスの種類を取得&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; を&lt;/a&gt;）。&lt;em&gt;value&lt;/em&gt;は例外インスタンス（例外タイプのインスタンス）を取得します。&lt;em&gt;traceback&lt;/em&gt;は、例外が最初に発生した時点で呼び出しスタックをカプセル化する&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#traceback-objects&quot;&gt;tracebackオブジェクト&lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="88436f65e40ce29110257b5101c9f174bd5fe58f" translate="yes" xml:space="preserve">
          <source>If no exception is being handled anywhere on the stack, a tuple containing three &lt;code&gt;None&lt;/code&gt; values is returned. Otherwise, the values returned are &lt;code&gt;(type, value, traceback)&lt;/code&gt;. Their meaning is: &lt;em&gt;type&lt;/em&gt; gets the type of the exception being handled (a subclass of &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;); &lt;em&gt;value&lt;/em&gt; gets the exception instance (an instance of the exception type); &lt;em&gt;traceback&lt;/em&gt; gets a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#traceback-objects&quot;&gt;traceback object&lt;/a&gt; which encapsulates the call stack at the point where the exception originally occurred.</source>
          <target state="translated">スタックのどこにも例外が処理されていない場合、3つの &lt;code&gt;None&lt;/code&gt; 値を含むタプルが返されます。それ以外の場合、返される値は &lt;code&gt;(type, value, traceback)&lt;/code&gt; です。これらの意味は次のとおりです。&lt;em&gt;タイプが&lt;/em&gt;処理された例外（のサブクラスの種類を取得&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; を&lt;/a&gt;）。&lt;em&gt;value&lt;/em&gt;は、例外インスタンス（例外タイプのインスタンス）を取得します。&lt;em&gt;traceback&lt;/em&gt;は、例外が最初に発生したポイントでコールスタックをカプセル化する&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#traceback-objects&quot;&gt;tracebackオブジェクト&lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="34d9b732c3afcc7950723fecbb0bb73802acc5f0" translate="yes" xml:space="preserve">
          <source>If no file matching &lt;code&gt;key&lt;/code&gt; is found, the constructor will raise &lt;a href=&quot;#zoneinfo.ZoneInfoNotFoundError&quot;&gt;&lt;code&gt;ZoneInfoNotFoundError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一致するファイル &lt;code&gt;key&lt;/code&gt; が見つからない場合、コンストラクターは&lt;a href=&quot;#zoneinfo.ZoneInfoNotFoundError&quot;&gt; &lt;code&gt;ZoneInfoNotFoundError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a41e77f992af07e40b87a473294e5a8dd6509be1" translate="yes" xml:space="preserve">
          <source>If no free slot is immediately available, raise &lt;a href=&quot;#asyncio.QueueFull&quot;&gt;&lt;code&gt;QueueFull&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すぐに利用できる空きスロットがない場合は、&lt;a href=&quot;#asyncio.QueueFull&quot;&gt; &lt;code&gt;QueueFull&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a4ced0a7f5ac900ff7845bee14185b70154aab39" translate="yes" xml:space="preserve">
          <source>If no module name is specified, all top level finders are produced.</source>
          <target state="translated">モジュール名が指定されていない場合は、すべてのトップレベルのファインダーが生成されます。</target>
        </trans-unit>
        <trans-unit id="24caaa893d53e123c1924dd2370cf821d291d32b" translate="yes" xml:space="preserve">
          <source>If no name has been explicitly assigned to the Task, the default asyncio Task implementation generates a default name during instantiation.</source>
          <target state="translated">タスクに名前が明示的に割り当てられていない場合、デフォルトのasyncioタスクの実装では、インスタンス化時にデフォルトの名前が生成されます。</target>
        </trans-unit>
        <trans-unit id="476aa611f101edc0bc9619df18f523a41ebd1c82" translate="yes" xml:space="preserve">
          <source>If no options are given, a dict with options/values for the item is returned. If &lt;em&gt;option&lt;/em&gt; is specified then the value for that option is returned. Otherwise, sets the options to the corresponding values as given by &lt;em&gt;kw&lt;/em&gt;.</source>
          <target state="translated">オプションが指定されていない場合、アイテムのオプション/値を持つdictが返されます。場合は&lt;em&gt;オプションが&lt;/em&gt;指定され、そのオプションの値が返されます。それ以外の場合は、オプションを&lt;em&gt;kwで&lt;/em&gt;指定された対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="bea50889454379e91f30a2f42fee654aa7de3fcf" translate="yes" xml:space="preserve">
          <source>If no positional argument is given, an empty dictionary is created. If a positional argument is given and it is a mapping object, a dictionary is created with the same key-value pairs as the mapping object. Otherwise, the positional argument must be an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; object. Each item in the iterable must itself be an iterable with exactly two objects. The first object of each item becomes a key in the new dictionary, and the second object the corresponding value. If a key occurs more than once, the last value for that key becomes the corresponding value in the new dictionary.</source>
          <target state="translated">位置引数を指定しない場合、空の辞書が作成されます。位置引数が指定され、それがマッピングオブジェクトである場合、マッピングオブジェクトと同じキーと値のペアを使用して辞書が作成されます。それ以外の場合、位置引数は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能な&lt;/a&gt;オブジェクトでなければなりません。反復可能オブジェクトの各アイテムは、それ自体が2つのオブジェクトを持つ反復可能でなければなりません。各項目の最初のオブジェクトは新しい辞書のキーになり、2番目のオブジェクトは対応する値になります。キーが複数回出現する場合、そのキーの最後の値が新しい辞書の対応する値になります。</target>
        </trans-unit>
        <trans-unit id="6cb6e711d11502051b84da987dc6857a45dcdf68" translate="yes" xml:space="preserve">
          <source>If no positional argument is given, an empty dictionary is created. If a positional argument is given and it is a mapping object, a dictionary is created with the same key-value pairs as the mapping object. Otherwise, the positional argument must be an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; object. Each item in the iterable must itself be an iterable with exactly two objects. The first object of each item becomes a key in the new dictionary, and the second object the corresponding value. If a key occurs more than once, the last value for that key becomes the corresponding value in the new dictionary.</source>
          <target state="translated">位置引数が指定されていない場合、空の辞書が作成されます。位置引数が指定され、それがマッピングオブジェクトである場合、ディクショナリはマッピングオブジェクトと同じキーと値のペアで作成されます。それ以外の場合、positional引数は&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;反復可能な&lt;/a&gt;オブジェクトである必要があります。 iterableの各アイテムは、それ自体が正確に2つのオブジェクトを持つiterableである必要があります。各アイテムの最初のオブジェクトが新しいディクショナリのキーになり、2番目のオブジェクトが対応する値になります。キーが複数回出現する場合、そのキーの最後の値が新しいディクショナリの対応する値になります。</target>
        </trans-unit>
        <trans-unit id="a3c12853377a0fdf751ae91320dcc270d07f4698" translate="yes" xml:space="preserve">
          <source>If no signature is defined for the method, a non-array value is returned. In Python this means that the type of the returned value will be something other than list.</source>
          <target state="translated">メソッドのシグネチャが定義されていない場合、配列以外の値が返されます。Pythonでは、これは返される値の型がリスト以外のものになることを意味します。</target>
        </trans-unit>
        <trans-unit id="20bea7147a663550bf73fbd6aa35936ec0f1727f" translate="yes" xml:space="preserve">
          <source>If no such message exists, a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception is raised if the method was called as &lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mailbox.Mailbox.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; but no exception is raised if the method was called as &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt;. The behavior of &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt; may be preferred if the underlying mailbox format supports concurrent modification by other processes.</source>
          <target state="translated">そのようなメッセージが存在しない場合、メソッドが&lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#mailbox.Mailbox.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt;として呼び出された場合は&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外が発生しますが、メソッドが&lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;として呼び出された場合は例外は発生しません。基になるメールボックス形式が他のプロセスによる同時変更をサポートしている場合、&lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;の動作が優先される場合があります。</target>
        </trans-unit>
        <trans-unit id="45e9812c267ec3985a1625ec9046fbcadc9ebd5a" translate="yes" xml:space="preserve">
          <source>If no target widget is found, then the target object is None</source>
          <target state="translated">ターゲットウィジェットが見つからない場合、ターゲットオブジェクトは None です。</target>
        </trans-unit>
        <trans-unit id="3cd75852ba66a942e3ef9da043c72d0616bb9860" translate="yes" xml:space="preserve">
          <source>If none of the above match, repeat all of the checks above for each of the types in the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mro&quot;&gt;MRO&lt;/a&gt; (&lt;code&gt;typ.__mro__&lt;/code&gt;). Finally, if no other key yields a handler, check for a handler for the key &lt;code&gt;None&lt;/code&gt;. If there is no handler for &lt;code&gt;None&lt;/code&gt;, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; for the fully qualified name of the type.</source>
          <target state="translated">上記のいずれも一致しない場合は、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mro&quot;&gt;MROの&lt;/a&gt;各タイプ（ &lt;code&gt;typ.__mro__&lt;/code&gt; ）について上記のチェックをすべて繰り返します。最後に、ハンドラーを生成する他のキーがない場合は、キー &lt;code&gt;None&lt;/code&gt; のハンドラーを確認します。以下のためのハンドラが存在しない場合は &lt;code&gt;None&lt;/code&gt; 、調達&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外&lt;/a&gt;型の完全修飾名のために。</target>
        </trans-unit>
        <trans-unit id="a4dfb5341e97fb222600b0bf937e30412692a3d4" translate="yes" xml:space="preserve">
          <source>If none of the above match, repeat all of the checks above for each of the types in the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mro&quot;&gt;MRO&lt;/a&gt; (&lt;code&gt;typ.__mro__&lt;/code&gt;). Finally, if no other key yields a handler, check for a handler for the key &lt;code&gt;None&lt;/code&gt;. If there is no handler for &lt;code&gt;None&lt;/code&gt;, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; for the fully qualified name of the type.</source>
          <target state="translated">上記のいずれにも一致しない場合は、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mro&quot;&gt;MRO&lt;/a&gt;のタイプごとに上記のすべてのチェックを繰り返します（ &lt;code&gt;typ.__mro__&lt;/code&gt; ）。最後に、他のキーがハンドラーを生成しない場合は、キー &lt;code&gt;None&lt;/code&gt; のハンドラーを確認します。以下のためのハンドラが存在しない場合は &lt;code&gt;None&lt;/code&gt; 、調達&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 例外&lt;/a&gt;型の完全修飾名のために。</target>
        </trans-unit>
        <trans-unit id="6ab966a0bae68c566e4582d75c7e75e79ff60df0" translate="yes" xml:space="preserve">
          <source>If none of the candidates matches any of the preferences in &lt;em&gt;preferencelist&lt;/em&gt;, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">候補者のどれもに好みのいずれかに一致しない場合&lt;em&gt;preferencelist&lt;/em&gt;、リターン &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0af9b04d52a06016027c04f7762d012d26364887" translate="yes" xml:space="preserve">
          <source>If none of the matrix elements are given, return the transformation matrix as a tuple of 4 elements. Otherwise set the given elements and transform the turtleshape according to the matrix consisting of first row t11, t12 and second row t21, 22. The determinant t11 * t22 - t12 * t21 must not be zero, otherwise an error is raised. Modify stretchfactor, shearfactor and tiltangle according to the given matrix.</source>
          <target state="translated">行列の要素が与えられていない場合は,4つの要素のタプルとして変換行列を返します.そうでなければ,与えられた要素をセットし,1行目のt11,t12と2行目のt21,22からなる行列に従ってタートルシェープを変換します.行列式 t11*t22-t12*t21 はゼロであってはいけません.与えられた行列に従って,ストレッチファクター,シアファクター,傾斜角を修正します.</target>
        </trans-unit>
        <trans-unit id="d022ff617a119c979b5be13e4ac716aea9e10a76" translate="yes" xml:space="preserve">
          <source>If none of the named files exist, the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; instance will contain an empty dataset. An application which requires initial values to be loaded from a file should load the required file or files using &lt;a href=&quot;#configparser.ConfigParser.read_file&quot;&gt;&lt;code&gt;read_file()&lt;/code&gt;&lt;/a&gt; before calling &lt;a href=&quot;#configparser.ConfigParser.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; for any optional files:</source>
          <target state="translated">名前付きファイルが存在しない場合、&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;インスタンスには空のデータセットが含まれます。ファイルから初期値をロードする必要があるアプリケーションは、オプションのファイルに対して&lt;a href=&quot;#configparser.ConfigParser.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;を呼び出す前に、&lt;a href=&quot;#configparser.ConfigParser.read_file&quot;&gt; &lt;code&gt;read_file()&lt;/code&gt; &lt;/a&gt;を使用して必要なファイルをロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="d63f28fd05ae33a3c995e80b7d7ac4d24283f9a6" translate="yes" xml:space="preserve">
          <source>If none of these keys produce a handler, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; for the full MIME type.</source>
          <target state="translated">これらのキーのいずれもハンドラを生成しない場合は、完全なMIMEタイプの&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;を送出します。</target>
        </trans-unit>
        <trans-unit id="c4b559d6709f523acb559ebc9de05a632f179410" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;daemon&lt;/em&gt; explicitly sets whether the thread is daemonic. If &lt;code&gt;None&lt;/code&gt; (the default), the daemonic property is inherited from the current thread.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; でない場合、&lt;em&gt;daemon&lt;/em&gt;はスレッドが&lt;em&gt;デーモンである&lt;/em&gt;かどうかを明示的に設定します。場合 &lt;code&gt;None&lt;/code&gt; （デフォルト）、鬼神のプロパティは、現在のスレッドから継承されます。</target>
        </trans-unit>
        <trans-unit id="1c475ada572eb526f097538d76dc4f24e8fb21ac" translate="yes" xml:space="preserve">
          <source>If not passed as a parameter when creating the object, this attribute is initialized upon first access or when the first record is read from the file.</source>
          <target state="translated">オブジェクトの作成時にパラメータとして渡されなかった場合、この属性は最初のアクセス時、または最初のレコードがファイルから読み込まれた時に初期化されます。</target>
        </trans-unit>
        <trans-unit id="e5b0f653097180825fd4fc47faf0827556509908" translate="yes" xml:space="preserve">
          <source>If not specified, the directory to serve is the current working directory.</source>
          <target state="translated">指定されていない場合、サービスを提供するディレクトリは現在の作業ディレクトリになります。</target>
        </trans-unit>
        <trans-unit id="46415929d11820d8c6bb9f358d9a2092933c6fcf" translate="yes" xml:space="preserve">
          <source>If one comparand is naive and the other is aware, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if an order comparison is attempted. For equality comparisons, naive instances are never equal to aware instances.</source>
          <target state="translated">一方の被比較数がナイーブで、もう一方が認識している場合、順序比較が試行されると&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。同等性の比較では、ナイーブインスタンスが認識インスタンスと等しくなることはありません。</target>
        </trans-unit>
        <trans-unit id="f586af1a41a07ac3dcc0f4d3f82539d6176c3e4c" translate="yes" xml:space="preserve">
          <source>If one of the iterables is potentially infinite, then the &lt;a href=&quot;#itertools.zip_longest&quot;&gt;&lt;code&gt;zip_longest()&lt;/code&gt;&lt;/a&gt; function should be wrapped with something that limits the number of calls (for example &lt;a href=&quot;#itertools.islice&quot;&gt;&lt;code&gt;islice()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#itertools.takewhile&quot;&gt;&lt;code&gt;takewhile()&lt;/code&gt;&lt;/a&gt;). If not specified, &lt;em&gt;fillvalue&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#itertools.zip_longest&quot;&gt; &lt;code&gt;zip_longest()&lt;/code&gt; &lt;/a&gt; 1つが潜在的に無限である場合、zip_longest（）関数は、呼び出し数を制限するもの（例えば&lt;a href=&quot;#itertools.islice&quot;&gt; &lt;code&gt;islice()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#itertools.takewhile&quot;&gt; &lt;code&gt;takewhile()&lt;/code&gt; &lt;/a&gt;）でラップする必要があります。指定しない場合、&lt;em&gt;fillvalueの&lt;/em&gt;デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fed106ddf387a9f27caba16b43370e63282aec73" translate="yes" xml:space="preserve">
          <source>If one positional argument is provided, it should be an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;. The largest item in the iterable is returned. If two or more positional arguments are provided, the largest of the positional arguments is returned.</source>
          <target state="translated">位置引数が1つ提供される場合、それは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;でなければなりません。イテラブルの最大のアイテムが返されます。2つ以上の位置引数が指定されている場合、最大の位置引数が返されます。</target>
        </trans-unit>
        <trans-unit id="cd31c867fd89a7c1d95f7f40da4f4f0882fa7af1" translate="yes" xml:space="preserve">
          <source>If one positional argument is provided, it should be an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;. The smallest item in the iterable is returned. If two or more positional arguments are provided, the smallest of the positional arguments is returned.</source>
          <target state="translated">位置引数が1つ提供される場合、それは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;でなければなりません。イテラブルの最小のアイテムが返されます。2つ以上の位置引数が指定されている場合、位置引数の最小値が返されます。</target>
        </trans-unit>
        <trans-unit id="11f5d7571b209076fb198c26e5bd96ac847a230a" translate="yes" xml:space="preserve">
          <source>If one positional argument is provided, it should be an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;. The largest item in the iterable is returned. If two or more positional arguments are provided, the largest of the positional arguments is returned.</source>
          <target state="translated">位置引数が1つ指定されている場合、それは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;である必要があります。iterableの最大のアイテムが返されます。2つ以上の位置引数が指定されている場合、最大の位置引数が返されます。</target>
        </trans-unit>
        <trans-unit id="59628cf0daf40f1b0bef9a91cb696904b200b43b" translate="yes" xml:space="preserve">
          <source>If one positional argument is provided, it should be an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt;. The smallest item in the iterable is returned. If two or more positional arguments are provided, the smallest of the positional arguments is returned.</source>
          <target state="translated">位置引数が1つ指定されている場合、それは&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;である必要があります。 iterableの最小のアイテムが返されます。 2つ以上の位置引数が指定されている場合、最小の位置引数が返されます。</target>
        </trans-unit>
        <trans-unit id="b1237f29843fb6e1241d53edd8dcf105508a566f" translate="yes" xml:space="preserve">
          <source>If one wants more information about all matches of a pattern than the matched text, &lt;a href=&quot;#re.finditer&quot;&gt;&lt;code&gt;finditer()&lt;/code&gt;&lt;/a&gt; is useful as it provides &lt;a href=&quot;#match-objects&quot;&gt;match objects&lt;/a&gt; instead of strings. Continuing with the previous example, if a writer wanted to find all of the adverbs &lt;em&gt;and their positions&lt;/em&gt; in some text, they would use &lt;a href=&quot;#re.finditer&quot;&gt;&lt;code&gt;finditer()&lt;/code&gt;&lt;/a&gt; in the following manner:</source>
          <target state="translated">パターンのすべての一致について、一致したテキストよりも多くの情報が必要な場合、&lt;a href=&quot;#re.finditer&quot;&gt; &lt;code&gt;finditer()&lt;/code&gt; &lt;/a&gt;は文字列ではなく&lt;a href=&quot;#match-objects&quot;&gt;一致オブジェクト&lt;/a&gt;を提供するので便利です。前の例を続けると、ライターがすべての副詞&lt;em&gt;とその&lt;/em&gt;テキスト内の&lt;em&gt;位置&lt;/em&gt;を見つけたい場合、次のように&lt;a href=&quot;#re.finditer&quot;&gt; &lt;code&gt;finditer()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f1347dbe4680d59bafdc6451d2e8d67e574fff02" translate="yes" xml:space="preserve">
          <source>If one wants to customize pickling of some classes without disturbing any other code which depends on pickling, then one can create a pickler with a private dispatch table.</source>
          <target state="translated">picklingに依存する他のコードを邪魔することなく、いくつかのクラスのpicklingをカスタマイズしたい場合は、プライベートなディスパッチテーブルを使ってpicklerを作成することができます。</target>
        </trans-unit>
        <trans-unit id="37a72b7770c6c17e2466572d1f613dd461295e35" translate="yes" xml:space="preserve">
          <source>If only some components are abstract, only those components need to be updated to create a concrete property in a subclass:</source>
          <target state="translated">一部のコンポーネントだけが抽象化されている場合は、サブクラスで具体的なプロパティを作成するために、そのコンポーネントだけを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c740863730ebbf14b847aaee2c1d18d2436d45e" translate="yes" xml:space="preserve">
          <source>If only the &lt;em&gt;exception&lt;/em&gt; and possibly the &lt;em&gt;msg&lt;/em&gt; arguments are given, return a context manager so that the code under test can be written inline rather than as a function:</source>
          <target state="translated">場合にのみ、&lt;em&gt;例外&lt;/em&gt;とはおそらく&lt;em&gt;MSGの&lt;/em&gt;引数が与えられ、テスト対象コードはむしろ関数としてよりもインラインで書き込むことができるようにコンテキストマネージャを返します。</target>
        </trans-unit>
        <trans-unit id="7753140c3a7be41fbf94278880c58bc397646c99" translate="yes" xml:space="preserve">
          <source>If only the &lt;em&gt;warning&lt;/em&gt; and possibly the &lt;em&gt;msg&lt;/em&gt; arguments are given, return a context manager so that the code under test can be written inline rather than as a function:</source>
          <target state="translated">場合にのみ&lt;em&gt;警告&lt;/em&gt;おそらくと&lt;em&gt;のMSG&lt;/em&gt;：引数が与えられているテスト対象のコードが書かれたインラインではなく関数としてできるように、コンテキストマネージャを返します</target>
        </trans-unit>
        <trans-unit id="daaad11308bf3ecc56da6270a84c953330e34e9b" translate="yes" xml:space="preserve">
          <source>If optional &lt;em&gt;charset&lt;/em&gt; is specified, the parameter will be encoded according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;. Optional &lt;em&gt;language&lt;/em&gt; specifies the RFC 2231 language, defaulting to the empty string. Both &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;language&lt;/em&gt; should be strings.</source>
          <target state="translated">オプションの&lt;em&gt;文字セット&lt;/em&gt;が指定されている場合、パラメーターは&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;に従ってエンコードされ&lt;strong&gt;ます&lt;/strong&gt;。オプションの&lt;em&gt;言語&lt;/em&gt;はRFC 2231 &lt;em&gt;言語を&lt;/em&gt;指定し、デフォルトでは空の文字列になります。&lt;em&gt;文字セット&lt;/em&gt;と&lt;em&gt;言語&lt;/em&gt;はどちらも&lt;em&gt;文字&lt;/em&gt;列である必要があります。</target>
        </trans-unit>
        <trans-unit id="30e460f7c1de270b9a5d3d19b52510be2728dbac" translate="yes" xml:space="preserve">
          <source>If optional &lt;em&gt;mangle_from_&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, put a &lt;code&gt;&amp;gt;&lt;/code&gt; character in front of any line in the body that starts with the exact string &lt;code&gt;&quot;From &quot;&lt;/code&gt;, that is &lt;code&gt;From&lt;/code&gt; followed by a space at the beginning of a line. &lt;em&gt;mangle_from_&lt;/em&gt; defaults to the value of the &lt;a href=&quot;email.policy#email.policy.Policy.mangle_from_&quot;&gt;&lt;code&gt;mangle_from_&lt;/code&gt;&lt;/a&gt; setting of the &lt;em&gt;policy&lt;/em&gt; (which is &lt;code&gt;True&lt;/code&gt; for the &lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt; policy and &lt;code&gt;False&lt;/code&gt; for all others). &lt;em&gt;mangle_from_&lt;/em&gt; is intended for use when messages are stored in unix mbox format (see &lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.jwz.org/doc/content-length.html&quot;&gt;WHY THE CONTENT-LENGTH FORMAT IS BAD&lt;/a&gt;).</source>
          <target state="translated">オプションの&lt;em&gt;mangle_from_&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、正確な文字列 &lt;code&gt;&quot;From &quot;&lt;/code&gt; で始まる本文の行の前に &lt;code&gt;&amp;gt;&lt;/code&gt; 文字を置きます。つまり、 &lt;code&gt;From&lt;/code&gt; の後に行の先頭にスペースが続きます。&lt;em&gt;mangle_from_の&lt;/em&gt;デフォルトは、&lt;em&gt;ポリシーの&lt;/em&gt;&lt;a href=&quot;email.policy#email.policy.Policy.mangle_from_&quot;&gt; &lt;code&gt;mangle_from_&lt;/code&gt; &lt;/a&gt;設定の値です（&lt;a href=&quot;email.policy#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;ポリシーの場合は &lt;code&gt;True&lt;/code&gt; 、その他の場合は &lt;code&gt;False&lt;/code&gt; です）。&lt;em&gt;mangle_from_&lt;/em&gt;は、メッセージがunix mbox形式で格納されている場合に使用することを目的としています（&lt;a href=&quot;mailbox#module-mailbox&quot;&gt; &lt;code&gt;mailbox&lt;/code&gt; &lt;/a&gt;と、&lt;a href=&quot;https://www.jwz.org/doc/content-length.html&quot;&gt;コンテンツの長さの&lt;/a&gt;形式が&lt;em&gt;不適切な理由を&lt;/em&gt;参照してください）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c8605e1fe87239a6939ac038c36a1310db420f6" translate="yes" xml:space="preserve">
          <source>If optional &lt;em&gt;rest&lt;/em&gt; is given, a &lt;code&gt;REST&lt;/code&gt; command is sent to the server, passing &lt;em&gt;rest&lt;/em&gt; as an argument. &lt;em&gt;rest&lt;/em&gt; is usually a byte offset into the requested file, telling the server to restart sending the file&amp;rsquo;s bytes at the requested offset, skipping over the initial bytes. Note however that &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt; requires only that &lt;em&gt;rest&lt;/em&gt; be a string containing characters in the printable range from ASCII code 33 to ASCII code 126. The &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method, therefore, converts &lt;em&gt;rest&lt;/em&gt; to a string, but no check is performed on the string&amp;rsquo;s contents. If the server does not recognize the &lt;code&gt;REST&lt;/code&gt; command, an &lt;a href=&quot;#ftplib.error_reply&quot;&gt;&lt;code&gt;error_reply&lt;/code&gt;&lt;/a&gt; exception will be raised. If this happens, simply call &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; without a &lt;em&gt;rest&lt;/em&gt; argument.</source>
          <target state="translated">オプションの&lt;em&gt;rest&lt;/em&gt;を指定すると、 &lt;code&gt;REST&lt;/code&gt; コマンドがサーバーに送信され、&lt;em&gt;rest&lt;/em&gt;が引数として渡されます。&lt;em&gt;rest&lt;/em&gt;は通常、要求されたファイルへのバイトオフセットであり、要求されたオフセットでファイルのバイトの送信を再開し、初期バイトをスキップするようサーバーに指示します。ただし、&lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;では、&lt;em&gt;残り&lt;/em&gt;がASCIIコード33からASCIIコード126までの印刷可能な範囲の文字を含む文字列のみである必要があることに注意してください。したがって、&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;メソッドは、&lt;em&gt;残り&lt;/em&gt;を文字列に変換しますが、文字列の内容はチェックされません。 。サーバーが &lt;code&gt;REST&lt;/code&gt; コマンドを認識しない場合、&lt;a href=&quot;#ftplib.error_reply&quot;&gt; &lt;code&gt;error_reply&lt;/code&gt; &lt;/a&gt;例外が発生します。これが発生した場合は、&lt;em&gt;残余&lt;/em&gt;引数なしで&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;を呼び出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d94c1f68a1301d564a3fd1e1a26bde153039ac4c" translate="yes" xml:space="preserve">
          <source>If optional &lt;em&gt;rest&lt;/em&gt; is given, a &lt;code&gt;REST&lt;/code&gt; command is sent to the server, passing &lt;em&gt;rest&lt;/em&gt; as an argument. &lt;em&gt;rest&lt;/em&gt; is usually a byte offset into the requested file, telling the server to restart sending the file&amp;rsquo;s bytes at the requested offset, skipping over the initial bytes. Note however that the &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; method converts &lt;em&gt;rest&lt;/em&gt; to a string with the &lt;em&gt;encoding&lt;/em&gt; parameter specified at initialization, but no check is performed on the string&amp;rsquo;s contents. If the server does not recognize the &lt;code&gt;REST&lt;/code&gt; command, an &lt;a href=&quot;#ftplib.error_reply&quot;&gt;&lt;code&gt;error_reply&lt;/code&gt;&lt;/a&gt; exception will be raised. If this happens, simply call &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt; without a &lt;em&gt;rest&lt;/em&gt; argument.</source>
          <target state="translated">オプションの&lt;em&gt;rest&lt;/em&gt;が指定されている場合、 &lt;code&gt;REST&lt;/code&gt; コマンドがサーバーに送信され、&lt;em&gt;rest&lt;/em&gt;が引数として渡されます。&lt;em&gt;rest&lt;/em&gt;は通常、要求されたファイルへのバイトオフセットであり、最初のバイトをスキップして、要求されたオフセットでファイルのバイトの送信を再開するようにサーバーに指示します。ただし、&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;メソッドは、&lt;em&gt;残り&lt;/em&gt;を初期化時に指定された&lt;em&gt;エンコーディング&lt;/em&gt;パラメータを使用して文字列に変換しますが、文字列の内容はチェックされないことに注意してください。サーバーが &lt;code&gt;REST&lt;/code&gt; コマンドを認識しない場合、&lt;a href=&quot;#ftplib.error_reply&quot;&gt; &lt;code&gt;error_reply&lt;/code&gt; &lt;/a&gt;例外が発生します。これが発生した場合は、&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;を呼び出すだけです。&lt;em&gt;残りの&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="12e5876c996fe3ce7e5f11f23f2acba47a2002c2" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;em&gt;topdown&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; or not specified, the triple for a directory is generated before the triples for any of its subdirectories (directories are generated top-down). If &lt;em&gt;topdown&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the triple for a directory is generated after the triples for all of its subdirectories (directories are generated bottom-up). No matter the value of &lt;em&gt;topdown&lt;/em&gt;, the list of subdirectories is retrieved before the tuples for the directory and its subdirectories are generated.</source>
          <target state="translated">オプションの引数&lt;em&gt;topdown&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; または指定されていない場合、ディレクトリのトリプルは、そのサブディレクトリのトリプルの前に生成されます（ディレクトリはトップダウンで生成されます）。&lt;em&gt;topdown&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、ディレクトリのトリプルは、そのすべてのサブディレクトリのトリプルの後に生成されます（ディレクトリはボトムアップで生成されます）。&lt;em&gt;topdown&lt;/em&gt;の値に関係なく、サブディレクトリのリストは、ディレクトリとそのサブディレクトリのタプルが生成される前に取得されます。</target>
        </trans-unit>
        <trans-unit id="c43cb00d5fc16bd54dc39ceae5b45c2ffe796cc5" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;em&gt;tz&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not specified, this is like &lt;a href=&quot;#datetime.datetime.today&quot;&gt;&lt;code&gt;today()&lt;/code&gt;&lt;/a&gt;, but, if possible, supplies more precision than can be gotten from going through a &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt; timestamp (for example, this may be possible on platforms supplying the C &lt;code&gt;gettimeofday()&lt;/code&gt; function).</source>
          <target state="translated">オプションの引数&lt;em&gt;tz&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; または指定されていない場合、これは&lt;a href=&quot;#datetime.datetime.today&quot;&gt; &lt;code&gt;today()&lt;/code&gt; &lt;/a&gt;に似ていますが、可能であれば、&lt;a href=&quot;time#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;タイムスタンプを通過することで得られるよりも高い精度を提供します（たとえば、これは、 Cの &lt;code&gt;gettimeofday()&lt;/code&gt; 関数）。</target>
        </trans-unit>
        <trans-unit id="8ebb578f00d1c7fad8844f4eebad620649156c22" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;em&gt;verbose&lt;/em&gt; is true, output is generated even if there are no failures. By default, output is generated only in case of an example failure.</source>
          <target state="translated">オプションの引数&lt;em&gt;verbose&lt;/em&gt;がtrueの場合、失敗がなくても出力が生成されます。デフォルトでは、サンプルの失敗の場合にのみ出力が生成されます。</target>
        </trans-unit>
        <trans-unit id="8ffdd4e7b5895f1e0d5dff890e02c15a4800f31a" translate="yes" xml:space="preserve">
          <source>If optional keyword argument &lt;em&gt;initial_response_ok&lt;/em&gt; is true, &lt;code&gt;authobject()&lt;/code&gt; will be called first with no argument. It can return the &lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 4954&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;initial response&amp;rdquo; ASCII &lt;code&gt;str&lt;/code&gt; which will be encoded and sent with the &lt;code&gt;AUTH&lt;/code&gt; command as below. If the &lt;code&gt;authobject()&lt;/code&gt; does not support an initial response (e.g. because it requires a challenge), it should return &lt;code&gt;None&lt;/code&gt; when called with &lt;code&gt;challenge=None&lt;/code&gt;. If &lt;em&gt;initial_response_ok&lt;/em&gt; is false, then &lt;code&gt;authobject()&lt;/code&gt; will not be called first with &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">オプションのキーワード引数&lt;em&gt;initial_response_ok&lt;/em&gt;がtrueの場合、 &lt;code&gt;authobject()&lt;/code&gt; が引数なしで最初に呼び出されます。&lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 4954の&lt;/strong&gt;&lt;/a&gt;「初期応答」ASCII &lt;code&gt;str&lt;/code&gt; を返すことができます。これは、エンコードされ、以下のように &lt;code&gt;AUTH&lt;/code&gt; コマンドで送信されます。 &lt;code&gt;authobject()&lt;/code&gt; が初期応答をサポートしていない場合（チャレンジが必要な場合など）、 &lt;code&gt;challenge=None&lt;/code&gt; で呼び出された場合、 &lt;code&gt;None&lt;/code&gt; を返す必要があります。場合&lt;em&gt;initial_response_okが&lt;/em&gt;偽である場合、 &lt;code&gt;authobject()&lt;/code&gt; で最初に呼び出されることはありません &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aae29e2c8c341be783838f132ff21d9ab34d97fc" translate="yes" xml:space="preserve">
          <source>If passed an object that is not a context manager, this method assumes it is a callback with the same signature as a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method and adds it directly to the callback stack.</source>
          <target state="translated">コンテキストマネージャではないオブジェクトが渡された場合、このメソッドは、それがコンテキストマネージャの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドと同じシグネチャを持つコールバックであると想定し、コールバックスタックに直接追加します。</target>
        </trans-unit>
        <trans-unit id="2255fce40f35cd4e01f62b3f7cb6658b67441be6" translate="yes" xml:space="preserve">
          <source>If passed an object that is not a context manager, this method assumes it is a callback with the same signature as a context manager&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method and adds it directly to the callback stack.</source>
          <target state="translated">コンテキストマネージャーではないオブジェクトが渡された場合、このメソッドは、それがコンテキストマネージャーの&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;メソッドと同じ署名を持つコールバックであると見なし、コールバックスタックに直接追加します。</target>
        </trans-unit>
        <trans-unit id="38619f38fb2e8ea83cef76fefbe9fa418722ab8f" translate="yes" xml:space="preserve">
          <source>If policy allows (ie. the &lt;code&gt;rfc2965&lt;/code&gt; and &lt;code&gt;hide_cookie2&lt;/code&gt; attributes of the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; instance are true and false respectively), the &lt;em&gt;Cookie2&lt;/em&gt; header is also added when appropriate.</source>
          <target state="translated">ポリシーが許可されている場合（すなわち、 &lt;code&gt;rfc2965&lt;/code&gt; 及び &lt;code&gt;hide_cookie2&lt;/code&gt; の属性&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;インスタンスは、それぞれ真および偽である）、&lt;em&gt;Cookie2の&lt;/em&gt;ヘッダはまた、適切な場合に添加されます。</target>
        </trans-unit>
        <trans-unit id="d11ebbe292ed1e1ee178b91b1ecd2889a70e4116" translate="yes" xml:space="preserve">
          <source>If precision is &lt;code&gt;N&lt;/code&gt;, the output is truncated to &lt;code&gt;N&lt;/code&gt; characters.</source>
          <target state="translated">精度が &lt;code&gt;N&lt;/code&gt; の場合、出力は &lt;code&gt;N&lt;/code&gt; 文字に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="443ece5632be703c310845263c3ce1e3e31a1c39" translate="yes" xml:space="preserve">
          <source>If prefix &amp;ldquo;0b&amp;rdquo; is desired or not, you can use either of the following ways.</source>
          <target state="translated">プレフィックス「0b」が必要かどうかは、次のいずれかの方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="e4ce265a9ea589b84bb1ae1a723bd20e1e88bd3e" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specified the desired width of the pane area (not including internal padding). Otherwise, the maximum width of all panes is used.</source>
          <target state="translated">存在し、ゼロより大きい場合は、希望するペイン領域の幅を指定します(内部パディングは含まれません)。それ以外の場合は、すべてのペインの最大幅が使用されます。</target>
        </trans-unit>
        <trans-unit id="3b03a80e9a562cf9b1589a814197ce3243d92bcb" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specifies the desired height of the pane area (not including internal padding or tabs). Otherwise, the maximum height of all panes is used.</source>
          <target state="translated">存在し、0より大きい場合は、ペイン領域の希望する高さを指定します(内部のパディングやタブは含まれません)。それ以外の場合は、すべてのペインの最大高さが使用されます。</target>
        </trans-unit>
        <trans-unit id="4545dbeee8dafb95a5bd0e1db8e7852d40b3ad54" translate="yes" xml:space="preserve">
          <source>If provided, &lt;em&gt;tz&lt;/em&gt; must be an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass, and its &lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; methods must not return &lt;code&gt;None&lt;/code&gt;. If &lt;em&gt;self&lt;/em&gt; is naive, it is presumed to represent time in the system timezone.</source>
          <target state="translated">指定する場合、&lt;em&gt;tz&lt;/em&gt;は&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;サブクラスのインスタンスである必要があり、その&lt;a href=&quot;#datetime.datetime.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#datetime.datetime.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;None&lt;/code&gt; を返してはなりません。&lt;em&gt;自分自身&lt;/em&gt;がナイーブである場合、それはシステムのタイムゾーンの時間を表すと推定されます。</target>
        </trans-unit>
        <trans-unit id="70f41e2c7bc507b15fffa53f66966c258b97643a" translate="yes" xml:space="preserve">
          <source>If returning a tuple doesn&amp;rsquo;t suffice and you want name-based access to columns, you should consider setting &lt;a href=&quot;#sqlite3.Connection.row_factory&quot;&gt;&lt;code&gt;row_factory&lt;/code&gt;&lt;/a&gt; to the highly-optimized &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;sqlite3.Row&lt;/code&gt;&lt;/a&gt; type. &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;Row&lt;/code&gt;&lt;/a&gt; provides both index-based and case-insensitive name-based access to columns with almost no memory overhead. It will probably be better than your own custom dictionary-based approach or even a db_row based solution.</source>
          <target state="translated">タプルを返すだけでは不十分で、列への名前ベースのアクセスが必要な場合は、&lt;a href=&quot;#sqlite3.Connection.row_factory&quot;&gt; &lt;code&gt;row_factory&lt;/code&gt; &lt;/a&gt;を高度に最適化された&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;sqlite3.Row&lt;/code&gt; &lt;/a&gt;タイプに設定することを検討する必要があります。&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;Row&lt;/code&gt; &lt;/a&gt;は、メモリオーバーヘッドをほとんど発生させることなく、インデックスベースと大文字と小文字を区別しない名前ベースの両方の列へのアクセスを提供します。おそらく、独自のカスタム辞書ベースのアプローチや、db_rowベースのソリューションよりも優れています。</target>
        </trans-unit>
        <trans-unit id="fb1cc245a11320da1db54ed5268d026fb86fcc00" translate="yes" xml:space="preserve">
          <source>If set to 1, causes the element and all of its descendants to be treated as a single element for the purposes of &lt;a href=&quot;#tkinter.ttk.Widget.identify&quot;&gt;&lt;code&gt;Widget.identify()&lt;/code&gt;&lt;/a&gt; et al. It&amp;rsquo;s used for things like scrollbar thumbs with grips.</source>
          <target state="translated">1に設定すると、要素とそのすべての子孫が&lt;a href=&quot;#tkinter.ttk.Widget.identify&quot;&gt; &lt;code&gt;Widget.identify()&lt;/code&gt; などの&lt;/a&gt;目的で単一の要素として扱われます。グリップ付きのスクロールバーのつまみのようなものに使用されます。</target>
        </trans-unit>
        <trans-unit id="8e4c1e34442088e1b288c391bdce23a843d942a1" translate="yes" xml:space="preserve">
          <source>If set to a non-zero integer, the parser will report only those attributes which were specified in the document instance and not those which were derived from attribute declarations. Applications which set this need to be especially careful to use what additional information is available from the declarations as needed to comply with the standards for the behavior of XML processors. By default, this attribute is false; it may be changed at any time.</source>
          <target state="translated">0以外の整数に設定された場合、パーサは文書インスタンスで指定された属性のみを報告し、属性宣言から派生した属性は報告しません。これを設定したアプリケーションは、XMLプロセッサの動作の標準に準拠するために必要な宣言から利用可能な追加情報を使用するように特に注意する必要があります。デフォルトでは、この属性はfalseです。</target>
        </trans-unit>
        <trans-unit id="3ee3f2b48192a68f3a6682ab4100a180bef3319f" translate="yes" xml:space="preserve">
          <source>If set to true &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; will be called on the first failure or error, halting the test run.</source>
          <target state="translated">trueに設定すると、最初の失敗またはエラー時に&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;が呼び出され、テストの実行が停止します。</target>
        </trans-unit>
        <trans-unit id="e51e0d8058becfc44eb0b15e9fbb655eff6ca1d8" translate="yes" xml:space="preserve">
          <source>If set to true then local variables will be shown in tracebacks.</source>
          <target state="translated">true に設定すると、ローカル変数がトレースバックで表示されます。</target>
        </trans-unit>
        <trans-unit id="64b6f3bafe48fa6aa11d7a7bedca0dc485936902" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;code&gt;sys.stdout&lt;/code&gt; and &lt;code&gt;sys.stderr&lt;/code&gt; will be buffered in between &lt;a href=&quot;#unittest.TestResult.startTest&quot;&gt;&lt;code&gt;startTest()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestResult.stopTest&quot;&gt;&lt;code&gt;stopTest()&lt;/code&gt;&lt;/a&gt; being called. Collected output will only be echoed onto the real &lt;code&gt;sys.stdout&lt;/code&gt; and &lt;code&gt;sys.stderr&lt;/code&gt; if the test fails or errors. Any output is also attached to the failure / error message.</source>
          <target state="translated">trueに設定すると、 &lt;code&gt;sys.stdout&lt;/code&gt; と &lt;code&gt;sys.stderr&lt;/code&gt; は、&lt;a href=&quot;#unittest.TestResult.startTest&quot;&gt; &lt;code&gt;startTest()&lt;/code&gt; &lt;/a&gt;れているstartTest（）と&lt;a href=&quot;#unittest.TestResult.stopTest&quot;&gt; &lt;code&gt;stopTest()&lt;/code&gt; の&lt;/a&gt;間にバッファリングされます。収集された出力は、テストが失敗またはエラーになった場合にのみ、実際の &lt;code&gt;sys.stdout&lt;/code&gt; および &lt;code&gt;sys.stderr&lt;/code&gt; にエコーされます。すべての出力は、失敗/エラーメッセージにも添付されます。</target>
        </trans-unit>
        <trans-unit id="ecf8c4b33b20be57bc6efdf4b39c10800d750a9d" translate="yes" xml:space="preserve">
          <source>If set, a new dict will be created for the frame&amp;rsquo;s &lt;code&gt;f_locals&lt;/code&gt; when the code object is executed.</source>
          <target state="translated">設定されている場合、コードオブジェクトが実行されるときに、フレームの &lt;code&gt;f_locals&lt;/code&gt; に対して新しいdictが作成されます。</target>
        </trans-unit>
        <trans-unit id="90c8757d24024109684a25cf5517e4c9f2ec4bd1" translate="yes" xml:space="preserve">
          <source>If set, specifies the index (0-based) of a character to underline in the text string. The underline character is used for mnemonic activation.</source>
          <target state="translated">セットされている場合、テキスト文字列の下線を引く文字のインデックス (0 ベース)を指定します。下線文字はニーモニック活性化のために使用されます。</target>
        </trans-unit>
        <trans-unit id="8a6c0ce7a7752011eb06bc4de3089d05ce6f551e" translate="yes" xml:space="preserve">
          <source>If some data was successfully read, it will return the number of bytes read. If no bytes were read, it will return &lt;code&gt;-1&lt;/code&gt; and set errno to &lt;a href=&quot;errno#errno.EAGAIN&quot;&gt;&lt;code&gt;errno.EAGAIN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のデータが正常に読み取られた場合は、読み取られたバイト数を返します。バイトが読み取られなかった場合は、 &lt;code&gt;-1&lt;/code&gt; を返し、errnoを&lt;a href=&quot;errno#errno.EAGAIN&quot;&gt; &lt;code&gt;errno.EAGAIN&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="8c0a8612344f25e81798fab5bf81643a26a155fd" translate="yes" xml:space="preserve">
          <source>If source code is available, then the method should return the path to the source file, regardless of whether a bytecode was used to load the module.</source>
          <target state="translated">ソースコードが利用可能な場合、モジュールをロードするためにバイトコードが使用されたかどうかに関わらず、このメソッドはソースファイルへのパスを返します。</target>
        </trans-unit>
        <trans-unit id="0e0b6d4c847d28d357f25ee69a7125504c0d6bad" translate="yes" xml:space="preserve">
          <source>If specified, &lt;em&gt;default&lt;/em&gt; should be a function that gets called for objects that can&amp;rsquo;t otherwise be serialized. It should return a JSON encodable version of the object or raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. If not specified, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定する場合、&lt;em&gt;デフォルト&lt;/em&gt;は、他の方法ではシリアル化できないオブジェクトに対して呼び出される関数にする必要があります。オブジェクトのJSONエンコード可能なバージョンを返すか、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生させ&lt;/a&gt;ます。指定しない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="59bccf61da6bc8aa73e6b26d9107f86de89d1f17" translate="yes" xml:space="preserve">
          <source>If specified, &lt;em&gt;env&lt;/em&gt; must provide any variables required for the program to execute. On Windows, in order to run a &lt;a href=&quot;https://en.wikipedia.org/wiki/Side-by-Side_Assembly&quot;&gt;side-by-side assembly&lt;/a&gt; the specified &lt;em&gt;env&lt;/em&gt;&lt;strong&gt;must&lt;/strong&gt; include a valid &lt;code id=&quot;index-3&quot;&gt;SystemRoot&lt;/code&gt;.</source>
          <target state="translated">指定した場合、&lt;em&gt;env&lt;/em&gt;はプログラムの実行に必要な変数を提供する必要があります。Windowsでは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Side-by-Side_Assembly&quot;&gt;サイドバイサイドアセンブリ&lt;/a&gt;を実行するために、指定された&lt;em&gt;envに&lt;/em&gt;有効な &lt;code id=&quot;index-3&quot;&gt;SystemRoot&lt;/code&gt; が含まれている&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="55004220c3f31c4448c84db4c687ec30a9bc0a57" translate="yes" xml:space="preserve">
          <source>If specified, &lt;em&gt;separators&lt;/em&gt; should be an &lt;code&gt;(item_separator, key_separator)&lt;/code&gt; tuple. The default is &lt;code&gt;(', ', ': ')&lt;/code&gt; if &lt;em&gt;indent&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;(',', ': ')&lt;/code&gt; otherwise. To get the most compact JSON representation, you should specify &lt;code&gt;(',', ':')&lt;/code&gt; to eliminate whitespace.</source>
          <target state="translated">指定する場合、&lt;em&gt;セパレーター&lt;/em&gt;は &lt;code&gt;(item_separator, key_separator)&lt;/code&gt; タプルである必要があります。デフォルトは &lt;code&gt;(', ', ': ')&lt;/code&gt; 場合&lt;em&gt;インデントは&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; と &lt;code&gt;(',', ': ')&lt;/code&gt; そう。最もコンパクトなJSON表現を取得するには、 &lt;code&gt;(',', ':')&lt;/code&gt; を指定して空白を削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="51387c50308ba22f05c775c6091c3e23657f8358" translate="yes" xml:space="preserve">
          <source>If specified, this should be an iterable of already created handlers to add to the root logger. Any handlers which don&amp;rsquo;t already have a formatter set will be assigned the default formatter created in this function. Note that this argument is incompatible with &lt;em&gt;filename&lt;/em&gt; or &lt;em&gt;stream&lt;/em&gt; - if both are present, a &lt;code&gt;ValueError&lt;/code&gt; is raised.</source>
          <target state="translated">指定する場合、これはルートロガーに追加するために作成済みのハンドラーの反復可能でなければなりません。フォーマッタセットがまだないハンドラには、この関数で作成されたデフォルトのフォーマッタが割り当てられます。この引数は&lt;em&gt;ファイル名&lt;/em&gt;または&lt;em&gt;ストリーム&lt;/em&gt;と互換性がないことに注意してください-両方が存在する &lt;code&gt;ValueError&lt;/code&gt; 、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="2396c9bd05ca934d78b97fe306102f571da9db25" translate="yes" xml:space="preserve">
          <source>If stack information is available, it&amp;rsquo;s appended after the exception information, using &lt;a href=&quot;#logging.Formatter.formatStack&quot;&gt;&lt;code&gt;formatStack()&lt;/code&gt;&lt;/a&gt; to transform it if necessary.</source>
          <target state="translated">スタック情報が利用可能な場合は、例外情報の後に追加され、必要に応じて&lt;a href=&quot;#logging.Formatter.formatStack&quot;&gt; &lt;code&gt;formatStack()&lt;/code&gt; &lt;/a&gt;を使用して変換します。</target>
        </trans-unit>
        <trans-unit id="49e5edaf7d45ad995b7d09a564fc8b598f00fc32" translate="yes" xml:space="preserve">
          <source>If standard (non-proxy) &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; objects are contained in a referent, modifications to those mutable values will not be propagated through the manager because the proxy has no way of knowing when the values contained within are modified. However, storing a value in a container proxy (which triggers a &lt;code&gt;__setitem__&lt;/code&gt; on the proxy object) does propagate through the manager and so to effectively modify such an item, one could re-assign the modified value to the container proxy:</source>
          <target state="translated">標準（非プロキシ）&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;オブジェクトがリファレントに含まれている場合、プロキシには内部に含まれる値がいつ変更されるかを知る方法がないため、これらの変更可能な値への変更はマネージャーを通じて伝播されません。ただし、値をコンテナープロキシに格納すると（プロキシオブジェクトで &lt;code&gt;__setitem__&lt;/code&gt; がトリガーされます）、マネージャーを通じて伝達されるため、そのようなアイテムを効果的に変更するには、変更した値をコンテナープロキシに再度割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="af8f87d5d4d9f4f5995cccc6502c2c7f249e6db4" translate="yes" xml:space="preserve">
          <source>If supplied, &lt;em&gt;source_address&lt;/em&gt; must be a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt; for the socket to bind to as its source address before connecting. If host or port are &amp;lsquo;&amp;rsquo; or 0 respectively the OS default behavior will be used.</source>
          <target state="translated">指定する場合、ソケットが接続前にソースアドレスとしてバインドするには、&lt;em&gt;source_address&lt;/em&gt;は2タプル &lt;code&gt;(host, port)&lt;/code&gt; である必要があります。ホストまたはポートがそれぞれ ''または0の場合、OSのデフォルトの動作が使用されます。</target>
        </trans-unit>
        <trans-unit id="7158776ee648d11018c88143c872cabdaad5856c" translate="yes" xml:space="preserve">
          <source>If text mode is not used, &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; will be opened as binary streams. No encoding or line ending conversion is performed.</source>
          <target state="translated">テキストモードを使用しない場合、&lt;em&gt;stdin&lt;/em&gt;、&lt;em&gt;stdout&lt;/em&gt;、および&lt;em&gt;stderr&lt;/em&gt;はバイナリストリームとして開かれます。エンコードや行末変換は行われません。</target>
        </trans-unit>
        <trans-unit id="b647614fdb703e999c4e6277543848afe83dfe6b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt; attribute is &lt;code&gt;None&lt;/code&gt;, this raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception with the &lt;em&gt;key&lt;/em&gt; as argument.</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;属性が &lt;code&gt;None&lt;/code&gt; の場合、これは&lt;em&gt;キー&lt;/em&gt;を引数として&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;例外を発生させます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5166c50db841216329f470ef00ee35316868399a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt; signal is trapped, accidental mixing of decimals and floats in constructors or ordering comparisons raises an exception:</source>
          <target state="translated">&lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; &lt;/a&gt;信号がトラップされた場合、コンストラクターでの小数と浮動小数の偶然の混合、または比較の順序付けで例外が発生します。</target>
        </trans-unit>
        <trans-unit id="9bbeb2f2786191004c4aacbd9b237c32b9a9e470" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag is set, then &lt;a href=&quot;#os.getrandom&quot;&gt;&lt;code&gt;getrandom()&lt;/code&gt;&lt;/a&gt; does not block in these cases, but instead immediately raises &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; の&lt;/a&gt;フラグがセットされ、次いで&lt;a href=&quot;#os.getrandom&quot;&gt; &lt;code&gt;getrandom()&lt;/code&gt; &lt;/a&gt;これらの場合にはブロックしないが、代わりに直ちに上昇させる&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e5c2c854be11bcf191a49fa0ebcc698cb65781e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method raises an exception, &lt;a href=&quot;#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; is called to handle it. By default, &lt;a href=&quot;#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; ignores silently &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドが例外を発生させ、&lt;a href=&quot;#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; は&lt;/a&gt;、それを処理するために呼び出されます。デフォルトでは、&lt;a href=&quot;#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; &lt;/a&gt;は暗黙的に&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; を&lt;/a&gt;無視します。</target>
        </trans-unit>
        <trans-unit id="e96f8cfc40738bbb062383e1cc52fead6fbf34f8" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; method raises an exception while the test is running, the framework will consider the test to have suffered an error, and the test method will not be executed.</source>
          <target state="translated">場合&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;テストの実行中にメソッドは例外を発生させ、フレームワークは、テストがエラーを受けていると考えます、そして試験方法が実行されません。</target>
        </trans-unit>
        <trans-unit id="a83922f016248c8cd1e133445c39b06053bf60d4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt;&lt;code&gt;origin_server&lt;/code&gt;&lt;/a&gt; attribute is set, this attribute&amp;rsquo;s value is used to set the default &lt;code&gt;SERVER_SOFTWARE&lt;/code&gt; WSGI environment variable, and also to set a default &lt;code&gt;Server:&lt;/code&gt; header in HTTP responses. It is ignored for handlers (such as &lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt;&lt;code&gt;BaseCGIHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt;&lt;code&gt;CGIHandler&lt;/code&gt;&lt;/a&gt;) that are not HTTP origin servers.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.BaseHandler.origin_server&quot;&gt; &lt;code&gt;origin_server&lt;/code&gt; &lt;/a&gt;属性が設定されている場合、この属性の値は、デフォルトの &lt;code&gt;SERVER_SOFTWARE&lt;/code&gt; WSGI環境変数を設定するため、およびHTTP応答でデフォルトの &lt;code&gt;Server:&lt;/code&gt; ヘッダーを設定するためにも使用されます。HTTPオリジンサーバーではないハンドラー（&lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt; &lt;code&gt;BaseCGIHandler&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#wsgiref.handlers.CGIHandler&quot;&gt; &lt;code&gt;CGIHandler&lt;/code&gt; など&lt;/a&gt;）では無視されます。</target>
        </trans-unit>
        <trans-unit id="9e6190ef04b122e93b83bb48591b9a20ea9d1832" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; option &lt;a href=&quot;email.policy#email.policy.Policy.cte_type&quot;&gt;&lt;code&gt;cte_type&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;8bit&lt;/code&gt; (the default), copy any headers in the original parsed message that have not been modified to the output with any bytes with the high bit set reproduced as in the original, and preserve the non-ASCII &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; of any body parts that have them. If &lt;code&gt;cte_type&lt;/code&gt; is &lt;code&gt;7bit&lt;/code&gt;, convert the bytes with the high bit set as needed using an ASCII-compatible &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;. That is, transform parts with non-ASCII &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; (&lt;em&gt;Content-Transfer-Encoding: 8bit&lt;/em&gt;) to an ASCII compatible &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;, and encode RFC-invalid non-ASCII bytes in headers using the MIME &lt;code&gt;unknown-8bit&lt;/code&gt; character set, thus rendering them RFC-compliant.</source>
          <target state="translated">場合&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;オプション&lt;a href=&quot;email.policy#email.policy.Policy.cte_type&quot;&gt; &lt;code&gt;cte_type&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;8bit&lt;/code&gt; （デフォルト）は、元のように再生高いビットが設定された任意のバイトで出力するように変更されていない元の構文解析されたメッセージ内の任意のヘッダがコピー、および非ASCII保存&lt;em&gt;たContentを&lt;/em&gt;それらを持っているすべての体の部分の&lt;em&gt;転送エンコーディング&lt;/em&gt;。場合 &lt;code&gt;cte_type&lt;/code&gt; がある &lt;code&gt;7bit&lt;/code&gt; ASCII互換使用して、必要に応じて、高ビットが設定されたバイト数を変換する&lt;em&gt;コンテンツ転送エンコードを&lt;/em&gt;。つまり、ASCII以外の&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;（&lt;em&gt;Content-Transfer-Encoding：8bit&lt;/em&gt;）のパーツをASCII互換の&lt;em&gt;Content-Transfer-Encodingに変換します。&lt;/em&gt;、およびヘッダーのRFC無効な非ASCIIバイトをMIMEの &lt;code&gt;unknown-8bit&lt;/code&gt; 文字セットを使用してエンコードし、RFC 準拠にします。</target>
        </trans-unit>
        <trans-unit id="2c701b67912c6e3c4a20fa3bedd65247e3914281" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; option &lt;a href=&quot;email.policy#email.policy.Policy.cte_type&quot;&gt;&lt;code&gt;cte_type&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;8bit&lt;/code&gt;, generate the message as if the option were set to &lt;code&gt;7bit&lt;/code&gt;. (This is required because strings cannot represent non-ASCII bytes.) Convert any bytes with the high bit set as needed using an ASCII-compatible &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;. That is, transform parts with non-ASCII &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; (&lt;em&gt;Content-Transfer-Encoding: 8bit&lt;/em&gt;) to an ASCII compatible &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;, and encode RFC-invalid non-ASCII bytes in headers using the MIME &lt;code&gt;unknown-8bit&lt;/code&gt; character set, thus rendering them RFC-compliant.</source>
          <target state="translated">場合は&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;オプション&lt;a href=&quot;email.policy#email.policy.Policy.cte_type&quot;&gt; &lt;code&gt;cte_type&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;8bit&lt;/code&gt; のオプションに設定しているかのように、メッセージを生成する &lt;code&gt;7bit&lt;/code&gt; 。 （これは、文字列が非ASCIIバイトを表すことができないために必要です。）ASCII互換の&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;を使用して、必要に応じて上位ビットが設定されたバイトを変換します。つまり、ASCII以外の&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;（&lt;em&gt;Content-Transfer-Encoding：8bit&lt;/em&gt;）の部分をASCII互換の&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;に変換し、MIME &lt;code&gt;unknown-8bit&lt;/code&gt; を使用してヘッダー内のRFC無効な非ASCIIバイトをエンコードします。文字セット、したがってそれらをRFC準拠にレンダリングします。</target>
        </trans-unit>
        <trans-unit id="4257dc89794becc22be3811003a5f35196f494f3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; of the class&amp;rsquo; metaclass is present, it will take precedence over the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; defined in the class (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt; for more details).</source>
          <target state="translated">クラスのメタクラスの&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;が存在する場合、クラスで定義されている&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt;よりも優先されます（詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-54&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="6705ff167ef2a10be922c82015337dad5632886f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module is loaded, input will automatically inherit &lt;strong&gt;bash&lt;/strong&gt;-like history-list editing (e.g.</source>
          <target state="translated">&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;モジュールがロードされている場合、入力は自動的に&lt;strong&gt;bashの&lt;/strong&gt;ような履歴リストの編集（たとえば、</target>
        </trans-unit>
        <trans-unit id="992e16a7eb0c65f78ed4d6b22ea21a69e69f88d9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module was loaded, then &lt;a href=&quot;#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; will use it to provide elaborate line editing and history features.</source>
          <target state="translated">場合は&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; の&lt;/a&gt;モジュールがロードされた後、&lt;a href=&quot;#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;精緻な行編集およびヒストリ機能を提供するために、それを使用します。</target>
        </trans-unit>
        <trans-unit id="7f400827c02071e6ef95ee0237e542f0c4ec14fd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;.mo&lt;/code&gt; file&amp;rsquo;s magic number is invalid, the major version number is unexpected, or if other problems occur while reading the file, instantiating a &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; class can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;.mo&lt;/code&gt; ファイルのマジック番号が無効である、メジャーバージョン番号は予想外である、またはファイルを読みながら、他の問題が発生した場合、インスタンス化&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; の&lt;/a&gt;クラスは上げることができ&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="210a0037ce73d1bfc67ee4b4b5e95490df8f8b6b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;REPLACE&lt;/code&gt; statement failed to insert the previous successful rowid is returned.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; または &lt;code&gt;REPLACE&lt;/code&gt; ステートメントが前の正常なROWIDの挿入に失敗した場合は返されます。</target>
        </trans-unit>
        <trans-unit id="cf74d5b2f54438d18ff96c889c2efdf40add3ab4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;__cleanenv&lt;/code&gt; keyword is set, &lt;em&gt;env_vars&lt;/em&gt; is used as a fresh environment.</source>
          <target state="translated">場合 &lt;code&gt;__cleanenv&lt;/code&gt; のキーワードが設定されている、&lt;em&gt;env_varsは、&lt;/em&gt;新鮮な環境として使用されています。</target>
        </trans-unit>
        <trans-unit id="7797779c313c0745d10542dc3e51baa071288853" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;binary_form&lt;/code&gt; parameter is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, and a certificate was received from the peer, this method returns a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instance. If the certificate was not validated, the dict is empty. If the certificate was validated, it returns a dict with several keys, amongst them &lt;code&gt;subject&lt;/code&gt; (the principal for which the certificate was issued) and &lt;code&gt;issuer&lt;/code&gt; (the principal issuing the certificate). If a certificate contains an instance of the &lt;em&gt;Subject Alternative Name&lt;/em&gt; extension (see &lt;a href=&quot;https://tools.ietf.org/html/rfc3280.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 3280&lt;/strong&gt;&lt;/a&gt;), there will also be a &lt;code&gt;subjectAltName&lt;/code&gt; key in the dictionary.</source>
          <target state="translated">場合 &lt;code&gt;binary_form&lt;/code&gt; のパラメータである&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;、及び証明書がピアから受信し、この方法は、返し&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;インスタンス。証明書が検証されなかった場合、dictは空です。証明書が検証された場合、 &lt;code&gt;subject&lt;/code&gt; （証明書が発行されたプリンシパル）と &lt;code&gt;issuer&lt;/code&gt; （証明書を発行したプリンシパル）の間でいくつかのキーを持つdictを返します。証明書に&lt;em&gt;サブジェクト代替名&lt;/em&gt;拡張のインスタンスが含まれている場合（&lt;a href=&quot;https://tools.ietf.org/html/rfc3280.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 3280を&lt;/strong&gt;&lt;/a&gt;参照）、ディクショナリにも &lt;code&gt;subjectAltName&lt;/code&gt; キーがあります。</target>
        </trans-unit>
        <trans-unit id="c2e0d519216a7d9523337363e10594cf657eace6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;binary_form&lt;/code&gt; parameter is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, and a certificate was provided, this method returns the DER-encoded form of the entire certificate as a sequence of bytes, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the peer did not provide a certificate. Whether the peer provides a certificate depends on the SSL socket&amp;rsquo;s role:</source>
          <target state="translated">場合 &lt;code&gt;binary_form&lt;/code&gt; のパラメータである&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;、および証明書を提供し、この方法戻りバイトのシーケンスとして、または全体の証明書のDER符号化された形&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;ピアが証明書を提供しなかった場合。ピアが証明書を提供するかどうかは、SSLソケットの役割によって異なります。</target>
        </trans-unit>
        <trans-unit id="b7602209fb479da231610b89b7e98c9ce4312d1b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;default&lt;/code&gt; value is a string, the parser parses the value as if it were a command-line argument. In particular, the parser applies any &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; conversion argument, if provided, before setting the attribute on the &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; return value. Otherwise, the parser uses the value as is:</source>
          <target state="translated">場合は &lt;code&gt;default&lt;/code&gt; 値が文字列であることは、コマンドライン引数であるかのように、パーサは値を解析します。特に、パーサーは、&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;戻り値に属性を設定する前に、提供されている場合は、&lt;a href=&quot;#type&quot;&gt;型&lt;/a&gt;変換引数を適用します。それ以外の場合、パーサーは値をそのまま使用します。</target>
        </trans-unit>
        <trans-unit id="524a418bcb1a0b57bbd955c0618848eef7130b81" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;errcheck&lt;/code&gt; function returns the argument tuple it receives unchanged, &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; continues the normal processing it does on the output parameters. If you want to return a tuple of window coordinates instead of a &lt;code&gt;RECT&lt;/code&gt; instance, you can retrieve the fields in the function and return them instead, the normal processing will no longer take place:</source>
          <target state="translated">&lt;code&gt;errcheck&lt;/code&gt; 関数が受け取った引数タプルを変更せずに返す場合、&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;は出力パラメーターに対して行う通常の処理を続行します。 &lt;code&gt;RECT&lt;/code&gt; インスタンスの代わりにウィンドウ座標のタプルを返したい場合は、関数内のフィールドを取得してそれらを返すことができます。通常の処理は行われなくなります。</target>
        </trans-unit>
        <trans-unit id="bf2573a0870de1e1acad81d1f5302762db9e30a1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fcntl()&lt;/code&gt; fails, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">場合 &lt;code&gt;fcntl()&lt;/code&gt; 失敗し、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のが&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="ed678ab7c2a7ff6be9a99eeaf17a3ebf9fd3c1d0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flock()&lt;/code&gt; fails, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">場合 &lt;code&gt;flock()&lt;/code&gt; 失敗し、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のの&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="a7eec3c89612e0c25a2a5977559eba7c168d3900" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;freeze_support()&lt;/code&gt; line is omitted then trying to run the frozen executable will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;freeze_support()&lt;/code&gt; ラインが省略されて凍結された実行可能ファイルを実行しようとすると発生します&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; がします&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed2522d782a9625d0947133482aaae29a6c466db" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ioctl()&lt;/code&gt; fails, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">場合 &lt;code&gt;ioctl()&lt;/code&gt; 失敗し、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; のの&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="0cc2fbe72c3b4ad145fe3964a92c94ac6062f4e1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;maintype&lt;/code&gt; is &lt;code&gt;multipart&lt;/code&gt;, raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;; otherwise look up a handler function based on the type of &lt;em&gt;obj&lt;/em&gt; (see next paragraph), call &lt;a href=&quot;email.message#email.message.EmailMessage.clear_content&quot;&gt;&lt;code&gt;clear_content()&lt;/code&gt;&lt;/a&gt; on the &lt;em&gt;msg&lt;/em&gt;, and call the handler function, passing through all arguments. The expectation is that the handler will transform and store &lt;em&gt;obj&lt;/em&gt; into &lt;em&gt;msg&lt;/em&gt;, possibly making other changes to &lt;em&gt;msg&lt;/em&gt; as well, such as adding various MIME headers to encode information needed to interpret the stored data.</source>
          <target state="translated">場合 &lt;code&gt;maintype&lt;/code&gt; がある &lt;code&gt;multipart&lt;/code&gt; 、調達&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外を&lt;/a&gt;。それ以外の場合は、&lt;em&gt;obj&lt;/em&gt;のタイプに基づいてハンドラー関数を検索し（次の段落を参照&lt;a href=&quot;email.message#email.message.EmailMessage.clear_content&quot;&gt; &lt;code&gt;clear_content()&lt;/code&gt; &lt;/a&gt;、&lt;em&gt;msg&lt;/em&gt;に対してclear_content（）を呼び出し、すべての引数を渡してハンドラー関数を呼び出します。期待されるのは、ハンドラーが&lt;em&gt;obj&lt;/em&gt;を&lt;em&gt;msgに&lt;/em&gt;変換して格納し、おそらく格納されたデータを解釈するために必要な情報をエンコードするさまざまなMIMEヘッダーを追加するなど、&lt;em&gt;msgに&lt;/em&gt;他の変更を加えることです。</target>
        </trans-unit>
        <trans-unit id="01aab64feb734e15541a9ef45d407a359bd7163d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;nargs&lt;/code&gt; keyword argument is not provided, the number of arguments consumed is determined by the &lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt;. Generally this means a single command-line argument will be consumed and a single item (not a list) will be produced.</source>
          <target state="translated">場合 &lt;code&gt;nargs&lt;/code&gt; キーワード引数が提供されていない、引数の数は、によって決定される消費&lt;a href=&quot;#action&quot;&gt;行動&lt;/a&gt;。通常、これは単一のコマンドライン引数が消費され、単一のアイテム（リストではない）が生成されることを意味します。</target>
        </trans-unit>
        <trans-unit id="d61c61e67464c67c3680c4713d3809692520d001" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;policy&lt;/code&gt; defines certain headers to be unique (as the standard policies do), this method may raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when an attempt is made to assign a value to such a header when one already exists. This behavior is intentional for consistency&amp;rsquo;s sake, but do not depend on it as we may choose to make such assignments do an automatic deletion of the existing header in the future.</source>
          <target state="translated">&lt;code&gt;policy&lt;/code&gt; 特定のヘッダーが一意であると定義されている場合（標準のポリシーと同様）、このメソッドは、ヘッダーが既に存在する場合にそのようなヘッダーに値を割り当てようとすると、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を&lt;/a&gt;発生させることがあります。この動作は、一貫性を保つために意図的なものですが、将来的に既存のヘッダーを自動的に削除するように割り当てることができるので、これに依存しないでください。</target>
        </trans-unit>
        <trans-unit id="4b0c4b939b714d8d4621edf9c00758ce14c62b46" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;allow_fragments&lt;/em&gt; argument is false, fragment identifiers are not recognized. Instead, they are parsed as part of the path, parameters or query component, and &lt;code&gt;fragment&lt;/code&gt; is set to the empty string in the return value.</source>
          <target state="translated">&lt;em&gt;allow_fragments&lt;/em&gt;引数がfalseの場合、フラグメント識別子は認識されません。代わりに、それらはパス、パラメーター、またはクエリコンポーネントの一部として解析され、 &lt;code&gt;fragment&lt;/code&gt; は戻り値の空の文字列に設定されます。</target>
        </trans-unit>
        <trans-unit id="07fd1d70e19aeb308ff95aa96b168f877108f2f2" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;data&lt;/em&gt; elements are not comparable, the data can be wrapped in a class that ignores the data item and only compares the priority number:</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;要素が比較できない場合、&lt;em&gt;データ&lt;/em&gt;項目を無視し、優先順位番号のみを比較するクラスでデータをラップできます。</target>
        </trans-unit>
        <trans-unit id="2ff12e160cec1aee3fa846e0341806c3c002aa1b" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;decode_data&lt;/em&gt; constructor keyword is set to &lt;code&gt;True&lt;/code&gt;, the &lt;em&gt;data&lt;/em&gt; argument will be a unicode string. If it is set to &lt;code&gt;False&lt;/code&gt;, it will be a bytes object.</source>
          <target state="translated">場合&lt;em&gt;decode_data&lt;/em&gt;コンストラクタキーワードがに設定されている &lt;code&gt;True&lt;/code&gt; 、&lt;em&gt;データ&lt;/em&gt;引数はUnicode文字列になります。 &lt;code&gt;False&lt;/code&gt; に設定されている場合、それはbytesオブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="b6fd4d95e538d8f47be51a60097509c8d1f0049b" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;globals&lt;/em&gt; dictionary does not contain a value for the key &lt;code&gt;__builtins__&lt;/code&gt;, a reference to the dictionary of the built-in module &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; is inserted under that key. That way you can control what builtins are available to the executed code by inserting your own &lt;code&gt;__builtins__&lt;/code&gt; dictionary into &lt;em&gt;globals&lt;/em&gt; before passing it to &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;グローバル&lt;/em&gt;ディクショナリにキー &lt;code&gt;__builtins__&lt;/code&gt; の値が含まれていない場合、&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールbuiltinsのディクショナリへの参照がそのキーの下に挿入されます。このように、独自の &lt;code&gt;__builtins__&lt;/code&gt; ディクショナリを&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;に渡す前に&lt;em&gt;グローバル&lt;/em&gt;に挿入することにより、実行されたコードで利用できる組み込み関数を制御できます。</target>
        </trans-unit>
        <trans-unit id="069dacc3747df8898ad29dd490b8b3d318fd8df1" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;lock&lt;/em&gt; argument is given and not &lt;code&gt;None&lt;/code&gt;, it must be a &lt;a href=&quot;#threading.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object, and it is used as the underlying lock. Otherwise, a new &lt;a href=&quot;#threading.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; object is created and used as the underlying lock.</source>
          <target state="translated">場合は&lt;em&gt;ロック&lt;/em&gt;引数が与えられていないとされていない &lt;code&gt;None&lt;/code&gt; 、それがなければなりません&lt;a href=&quot;#threading.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#threading.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクト、およびそれが根底にあるロックとして使用されています。それ以外の場合は、新しい&lt;a href=&quot;#threading.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、基になるロックとして使用されます。</target>
        </trans-unit>
        <trans-unit id="2b6ebb4583fd8191695e04b7d39b1f581cf29da7" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;name&lt;/em&gt; argument is provided and not &lt;code&gt;None&lt;/code&gt;, it is set as the name of the task using &lt;a href=&quot;asyncio-task#asyncio.Task.set_name&quot;&gt;&lt;code&gt;Task.set_name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;em&gt;名前の&lt;/em&gt;引数が指定されていないとされていない &lt;code&gt;None&lt;/code&gt; 、それが使用して、タスクの名前として設定されている&lt;a href=&quot;asyncio-task#asyncio.Task.set_name&quot;&gt; &lt;code&gt;Task.set_name()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="944dd20e7d4a05557cec3a977a23d9d4d3f2d8ce" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;names&lt;/em&gt; parameter is given, it must be a sequence containing the names of functions you want to install in the builtins namespace in addition to &lt;code&gt;_()&lt;/code&gt;. Supported names are &lt;code&gt;'gettext'&lt;/code&gt;, &lt;code&gt;'ngettext'&lt;/code&gt;, &lt;code&gt;'pgettext'&lt;/code&gt;, &lt;code&gt;'npgettext'&lt;/code&gt;, &lt;code&gt;'lgettext'&lt;/code&gt;, and &lt;code&gt;'lngettext'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;names&lt;/em&gt;パラメータを指定する場合は、 &lt;code&gt;_()&lt;/code&gt; に加えて組み込みの名前空間にインストールする関数の名前を含むシーケンスである必要があります。サポートされている名前は、 &lt;code&gt;'gettext'&lt;/code&gt; 、 &lt;code&gt;'ngettext'&lt;/code&gt; 、 &lt;code&gt;'pgettext'&lt;/code&gt; 、 &lt;code&gt;'npgettext'&lt;/code&gt; 、 &lt;code&gt;'lgettext'&lt;/code&gt; 、および &lt;code&gt;'lngettext'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="158a36858ed9af1b9e9c3d28c384cc021e46769c" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;optimize&lt;/em&gt; parameter to &lt;a href=&quot;#zipfile.PyZipFile&quot;&gt;&lt;code&gt;PyZipFile&lt;/code&gt;&lt;/a&gt; was &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;, only files with that optimization level (see &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;) are added to the archive, compiling if necessary.</source>
          <target state="translated">場合は&lt;em&gt;最適化&lt;/em&gt;へのパラメータ&lt;a href=&quot;#zipfile.PyZipFile&quot;&gt; &lt;code&gt;PyZipFile&lt;/code&gt; が&lt;/a&gt;いた &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; または &lt;code&gt;2&lt;/code&gt; 、その最適化レベルを持つファイルだけが（参照&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;）必要に応じてコンパイル、アーカイブに追加されます。</target>
        </trans-unit>
        <trans-unit id="7d5c62ff88707e4df1f101083878379244687d02" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;optimize&lt;/em&gt; parameter to &lt;a href=&quot;#zipfile.PyZipFile&quot;&gt;&lt;code&gt;PyZipFile&lt;/code&gt;&lt;/a&gt; was not given or &lt;code&gt;-1&lt;/code&gt;, the corresponding file is a &lt;code&gt;*.pyc&lt;/code&gt; file, compiling if necessary.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.PyZipFile&quot;&gt; &lt;code&gt;PyZipFile&lt;/code&gt; &lt;/a&gt;への&lt;em&gt;最適化&lt;/em&gt;パラメータが指定されていないか &lt;code&gt;-1&lt;/code&gt; の場合、対応するファイルは &lt;code&gt;*.pyc&lt;/code&gt; ファイルであり、必要に応じてコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="c7cdfc5e325d7266ce128da3b51f1e8b3f9943d8" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;password&lt;/em&gt; argument is not specified and a password is required, OpenSSL&amp;rsquo;s built-in password prompting mechanism will be used to interactively prompt the user for a password.</source>
          <target state="translated">場合は&lt;em&gt;、パスワードの&lt;/em&gt;引数が指定されていないとパスワードが要求され、OpenSSLの内蔵のパスワードプロンプトのメカニズムは、パスワードの対話的プロンプトユーザーに使用されます。</target>
        </trans-unit>
        <trans-unit id="35fcb585a20584b556f4e162e5309c98983b0178" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;path&lt;/em&gt; is a string object (directly or indirectly through a &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the result will also be a string object, and the call may raise a UnicodeDecodeError. If the &lt;em&gt;path&lt;/em&gt; is a bytes object (direct or indirectly), the result will be a bytes object.</source>
          <target state="translated">場合&lt;em&gt;パスは&lt;/em&gt;、文字列オブジェクトが（直接的または間接的に介している&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; の&lt;/a&gt;インターフェース）、結果はまた、文字列オブジェクトになり、そしてコールがUnicodeDecodeErrorを上げることができます。場合&lt;em&gt;パスが&lt;/em&gt;オブジェクト（直接または間接的に）バイトであり、結果は、バイトのオブジェクトであろう。</target>
        </trans-unit>
        <trans-unit id="8c9066b80c3d8a541423631fefca4e57b368ec7b" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;prompt&lt;/em&gt; argument is present, it is written to standard output without a trailing newline. The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that. When EOF is read, &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; is raised. Example:</source>
          <target state="translated">&lt;em&gt;プロンプト&lt;/em&gt;引数が存在する場合、後続の改行なしで標準出力に書き込まれます。次に、関数は入力から行を読み取り、それを文字列に変換し（末尾の改行を削除）、それを返します。EOFが読み取られると、&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;が発生します。例：</target>
        </trans-unit>
        <trans-unit id="93285696a22411d5d2e8a7f6363aa84855969bd3" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;resetids&lt;/em&gt; argument is &lt;code&gt;True&lt;/code&gt; it will reset the effective UID and GID of the child to the real UID and GID of the parent process. If the argument is &lt;code&gt;False&lt;/code&gt;, then the child retains the effective UID and GID of the parent. In either case, if the set-user-ID and set-group-ID permission bits are enabled on the executable file, their effect will override the setting of the effective UID and GID. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_RESETIDS&lt;/code&gt; flag.</source>
          <target state="translated">&lt;em&gt;resetids&lt;/em&gt;引数が &lt;code&gt;True&lt;/code&gt; の場合、子の実効UIDおよびGIDを親プロセスの実際のUIDおよびGIDにリセットします。引数が &lt;code&gt;False&lt;/code&gt; の場合、子は親の有効なUIDおよびGIDを保持します。どちらの場合も、実行可能ファイルでset-user-IDおよびset-group-ID許可ビットが有効になっている場合、それらの効果は有効なUIDおよびGIDの設定をオーバーライドします。この引数は、Cライブラリの &lt;code&gt;POSIX_SPAWN_RESETIDS&lt;/code&gt; フラグに対応しています。</target>
        </trans-unit>
        <trans-unit id="88919bba2afc8f184e2a327acf142c1486867e0d" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;setsid&lt;/em&gt; argument is &lt;code&gt;True&lt;/code&gt;, it will create a new session ID for &lt;code&gt;posix_spawn&lt;/code&gt;. &lt;em&gt;setsid&lt;/em&gt; requires &lt;code&gt;POSIX_SPAWN_SETSID&lt;/code&gt; or &lt;code&gt;POSIX_SPAWN_SETSID_NP&lt;/code&gt; flag. Otherwise, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;setsid&lt;/em&gt;引数が &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;posix_spawn&lt;/code&gt; の新しいセッションIDが作成されます。&lt;em&gt;setsidに&lt;/em&gt;は、 &lt;code&gt;POSIX_SPAWN_SETSID&lt;/code&gt; または &lt;code&gt;POSIX_SPAWN_SETSID_NP&lt;/code&gt; フラグが必要です。それ以外の場合、&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="2d24ec0d17c1f7e1a0a329ec520394941ae2b010" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;stderr&lt;/em&gt; argument was &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is a readable stream object as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Reading from the stream provides error output from the child process. If the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments were specified or the &lt;em&gt;universal_newlines&lt;/em&gt; argument was &lt;code&gt;True&lt;/code&gt;, the stream is a text stream, otherwise it is a byte stream. If the &lt;em&gt;stderr&lt;/em&gt; argument was not &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;stderr&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; の&lt;/a&gt;場合、この属性は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返される読み取り可能なストリームオブジェクトです。ストリームから読み取ると、子プロセスからのエラー出力が提供されます。場合&lt;em&gt;のエンコード&lt;/em&gt;や&lt;em&gt;エラー&lt;/em&gt;引数が指定されたりして&lt;em&gt;universal_newlinesの&lt;/em&gt;引数がした &lt;code&gt;True&lt;/code&gt; 、ストリームは、それ以外の場合はバイトストリームで、テキスト・ストリームです。&lt;em&gt;stderr&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt;でない場合、この属性は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1e6be0106d84be33c234e54aaea99852564b5e3c" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;stdin&lt;/em&gt; argument was &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is a writeable stream object as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments were specified or the &lt;em&gt;universal_newlines&lt;/em&gt; argument was &lt;code&gt;True&lt;/code&gt;, the stream is a text stream, otherwise it is a byte stream. If the &lt;em&gt;stdin&lt;/em&gt; argument was not &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; の&lt;/a&gt;場合、この属性は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返される書き込み可能なストリームオブジェクトです。場合&lt;em&gt;のエンコード&lt;/em&gt;や&lt;em&gt;エラー&lt;/em&gt;引数が指定されたりして&lt;em&gt;universal_newlinesの&lt;/em&gt;引数がした &lt;code&gt;True&lt;/code&gt; 、ストリームは、それ以外の場合はバイトストリームで、テキスト・ストリームです。&lt;em&gt;stdin&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt;でない場合、この属性は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ec355cf89b9dc73b02f80f0df2eaf169cc492684" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;stdout&lt;/em&gt; argument was &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is a readable stream object as returned by &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Reading from the stream provides output from the child process. If the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments were specified or the &lt;em&gt;universal_newlines&lt;/em&gt; argument was &lt;code&gt;True&lt;/code&gt;, the stream is a text stream, otherwise it is a byte stream. If the &lt;em&gt;stdout&lt;/em&gt; argument was not &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, this attribute is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;stdout&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; の&lt;/a&gt;場合、この属性は&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;によって返される読み取り可能なストリームオブジェクトです。ストリームからの読み取りは、子プロセスからの出力を提供します。場合&lt;em&gt;のエンコード&lt;/em&gt;や&lt;em&gt;エラー&lt;/em&gt;引数が指定されたりして&lt;em&gt;universal_newlinesの&lt;/em&gt;引数がした &lt;code&gt;True&lt;/code&gt; 、ストリームは、それ以外の場合はバイトストリームで、テキスト・ストリームです。&lt;em&gt;stdout&lt;/em&gt;引数が&lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt;でなかった場合、この属性は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="60dd2e899bc85f2db36a0109aa802d1a7f4ce7a0" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;url&lt;/em&gt; uses the &lt;code&gt;http:&lt;/code&gt; scheme identifier, the optional &lt;em&gt;data&lt;/em&gt; argument may be given to specify a &lt;code&gt;POST&lt;/code&gt; request (normally the request type is &lt;code&gt;GET&lt;/code&gt;). The &lt;em&gt;data&lt;/em&gt; argument must be a bytes object in standard &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; format; see the &lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;URL&lt;/em&gt;が &lt;code&gt;http:&lt;/code&gt; スキーム識別子を使用する場合、オプションの&lt;em&gt;データ&lt;/em&gt;引数を指定して &lt;code&gt;POST&lt;/code&gt; リクエストを指定できます（通常、リクエストタイプは &lt;code&gt;GET&lt;/code&gt; です）。&lt;em&gt;データ&lt;/em&gt;引数は、標準のバイトのオブジェクトでなければならない&lt;em&gt;アプリケーション/ x-www-form-urlencodedで&lt;/em&gt;フォーマット。&lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="294c59bd568e04803a80acb61e134333ab0b073c" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;url&lt;/em&gt; uses the &lt;code&gt;http:&lt;/code&gt; scheme identifier, the optional &lt;em&gt;data&lt;/em&gt; argument may be given to specify a &lt;code&gt;POST&lt;/code&gt; request (normally the request type is &lt;code&gt;GET&lt;/code&gt;). The &lt;em&gt;data&lt;/em&gt; argument must in standard &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; format; see the &lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;URL&lt;/em&gt;が &lt;code&gt;http:&lt;/code&gt; スキーム識別子を使用する場合、オプションの&lt;em&gt;データ&lt;/em&gt;引数を指定して &lt;code&gt;POST&lt;/code&gt; リクエストを指定できます（通常、リクエストタイプは &lt;code&gt;GET&lt;/code&gt; です）。&lt;em&gt;データ&lt;/em&gt;標準で引数必須&lt;em&gt;アプリケーション/ x-www-form-urlencodedで&lt;/em&gt;フォーマット。&lt;a href=&quot;urllib.parse#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="9974f7a3aebe3f3ce47175d7359b29d02772cfa6" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;utc&lt;/em&gt; argument is true, times in UTC will be used; otherwise local time is used.</source>
          <target state="translated">&lt;em&gt;utc&lt;/em&gt;引数がtrueの場合、UTCの時間が使用されます。それ以外の場合は、現地時間が使用されます。</target>
        </trans-unit>
        <trans-unit id="b84602b7fa18863b22e6dbcff32969883dda4684" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;writeback&lt;/em&gt; parameter is &lt;code&gt;True&lt;/code&gt;, the object will hold a cache of all entries accessed and write them back to the &lt;em&gt;dict&lt;/em&gt; at sync and close times. This allows natural operations on mutable entries, but can consume much more memory and make sync and close take a long time.</source>
          <target state="translated">場合は&lt;em&gt;ライトバックの&lt;/em&gt;パラメータがある &lt;code&gt;True&lt;/code&gt; 、オブジェクトがアクセスされたすべてのエントリのキャッシュを保持し、バックにそれらを書き込みます&lt;em&gt;dictの&lt;/em&gt;同期と近い時期に。これにより、変更可能なエントリでの自然な操作が可能になりますが、より多くのメモリを消費し、同期とクローズに長時間かかる場合があります。</target>
        </trans-unit>
        <trans-unit id="c144dbd6eb2a2ec5c9464d6a3b5b49fd560d35b3" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;parse&lt;/strong&gt; attribute is omitted, it defaults to &amp;ldquo;xml&amp;rdquo;. The href attribute is required.</source>
          <target state="translated">場合は&lt;strong&gt;、解析&lt;/strong&gt;「XML」に属性が省略され、それがデフォルトになります。href属性は必須です。</target>
        </trans-unit>
        <trans-unit id="651912b3d40236c9ca01d4f642c00c2265e6c0e1" translate="yes" xml:space="preserve">
          <source>If the Future has been &lt;em&gt;cancelled&lt;/em&gt;, this method raises a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Futureが&lt;em&gt;キャンセル&lt;/em&gt;さ&lt;em&gt;れた&lt;/em&gt;場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="6620141bffb844ff7e0a325c37437088a6fc0bb4" translate="yes" xml:space="preserve">
          <source>If the Future is &lt;em&gt;done&lt;/em&gt; and has a result set by the &lt;a href=&quot;#asyncio.Future.set_result&quot;&gt;&lt;code&gt;set_result()&lt;/code&gt;&lt;/a&gt; method, the result value is returned.</source>
          <target state="translated">Futureが&lt;em&gt;完了&lt;/em&gt;し、&lt;a href=&quot;#asyncio.Future.set_result&quot;&gt; &lt;code&gt;set_result()&lt;/code&gt; &lt;/a&gt;メソッドによって結果セットが設定されている場合、結果値が返されます。</target>
        </trans-unit>
        <trans-unit id="e0644b75daac5e15661852c684cb262de9f51c89" translate="yes" xml:space="preserve">
          <source>If the Future is &lt;em&gt;done&lt;/em&gt; and has an exception set by the &lt;a href=&quot;#asyncio.Future.set_exception&quot;&gt;&lt;code&gt;set_exception()&lt;/code&gt;&lt;/a&gt; method, this method raises the exception.</source>
          <target state="translated">Futureが&lt;em&gt;完了&lt;/em&gt;し、&lt;a href=&quot;#asyncio.Future.set_exception&quot;&gt; &lt;code&gt;set_exception()&lt;/code&gt; &lt;/a&gt;メソッドによって設定された例外がある場合、このメソッドは例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="1195f6304df98cd2d3bc86ac4e83f5d2f868771a" translate="yes" xml:space="preserve">
          <source>If the Future is already &lt;em&gt;done&lt;/em&gt; or &lt;em&gt;cancelled&lt;/em&gt;, return &lt;code&gt;False&lt;/code&gt;. Otherwise, change the Future&amp;rsquo;s state to &lt;em&gt;cancelled&lt;/em&gt;, schedule the callbacks, and return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Futureがすでに&lt;em&gt;完了&lt;/em&gt;または&lt;em&gt;キャンセルされ&lt;/em&gt;て&lt;em&gt;いる&lt;/em&gt;場合は、 &lt;code&gt;False&lt;/code&gt; を返します。それ以外の場合は、Futureの状態を&lt;em&gt;cancelled&lt;/em&gt;に変更し、コールバックをスケジュールして、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="37006e9f079c3accc6d5f6040b789291ba917d94" translate="yes" xml:space="preserve">
          <source>If the Future is already &lt;em&gt;done&lt;/em&gt; when this method is called, the callback is scheduled with &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドが呼び出さ&lt;em&gt;れた&lt;/em&gt;ときにFutureがすでに&lt;em&gt;完了&lt;/em&gt;して&lt;em&gt;いる&lt;/em&gt;場合、コールバックは&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; で&lt;/a&gt;スケジュールされます。</target>
        </trans-unit>
        <trans-unit id="cb914681d6d5d5b08170de81c66e21d60e415ba0" translate="yes" xml:space="preserve">
          <source>If the Future isn&amp;rsquo;t &lt;em&gt;done&lt;/em&gt; yet, this method raises an &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Futureがまだ&lt;em&gt;完了して&lt;/em&gt;いない場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="81ccf8aacb015ef04d4641484c8369a9b1dc7178" translate="yes" xml:space="preserve">
          <source>If the Future&amp;rsquo;s result isn&amp;rsquo;t yet available, this method raises a &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">Futureの結果がまだ利用できない場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="2b7f6762700d8fee47524d6de578cf0f5d964de0" translate="yes" xml:space="preserve">
          <source>If the IPv4 address string passed to this function is invalid, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. Note that exactly what is valid depends on the underlying C implementation of &lt;code&gt;inet_aton()&lt;/code&gt;.</source>
          <target state="translated">この関数に渡されたIPv4アドレス文字列が無効な場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。正確に何が有効であるかは、 &lt;code&gt;inet_aton()&lt;/code&gt; の基礎となるC実装に依存することに注意してください。</target>
        </trans-unit>
        <trans-unit id="560fe43f47d62379a66ce9688e16e4014a73fc5a" translate="yes" xml:space="preserve">
          <source>If the Python installation has SSL support (i.e., if the &lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module can be imported), &lt;a href=&quot;#urllib.request.HTTPSHandler&quot;&gt;&lt;code&gt;HTTPSHandler&lt;/code&gt;&lt;/a&gt; will also be added.</source>
          <target state="translated">PythonのインストールでSSLがサポートされている場合（つまり、&lt;a href=&quot;ssl#module-ssl&quot;&gt; &lt;code&gt;ssl&lt;/code&gt; &lt;/a&gt;モジュールをインポートできる場合）、&lt;a href=&quot;#urllib.request.HTTPSHandler&quot;&gt; &lt;code&gt;HTTPSHandler&lt;/code&gt; &lt;/a&gt;も追加されます。</target>
        </trans-unit>
        <trans-unit id="3ea0b3ed7f3baf4db7002928837be7003ffe5eb0" translate="yes" xml:space="preserve">
          <source>If the SIGINT signal generated by</source>
          <target state="translated">によって生成されたSIGINT信号が</target>
        </trans-unit>
        <trans-unit id="ca9dca35c700b2a4f039a704ed976b0b70c0a61f" translate="yes" xml:space="preserve">
          <source>If the Task has been &lt;em&gt;cancelled&lt;/em&gt;, this method raises a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">タスクが&lt;em&gt;キャンセル&lt;/em&gt;さ&lt;em&gt;れた&lt;/em&gt;場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="de231fa26bffd71d36d4fadee99f70cdd007208c" translate="yes" xml:space="preserve">
          <source>If the Task is &lt;em&gt;done&lt;/em&gt;, the result of the wrapped coroutine is returned (or if the coroutine raised an exception, that exception is re-raised.)</source>
          <target state="translated">タスクが&lt;em&gt;完了した&lt;/em&gt;場合、ラップされたコルーチンの結果が返されます（またはコルーチンが例外を発生させた場合、その例外は再発生します）。</target>
        </trans-unit>
        <trans-unit id="c6606fc1940874e65aa19f560ba1745a72e10a6e" translate="yes" xml:space="preserve">
          <source>If the Task isn&amp;rsquo;t &lt;em&gt;done&lt;/em&gt; yet, this method raises an &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">タスクがまだ&lt;em&gt;完了して&lt;/em&gt;いない場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="1dc46f1d10f9c96a479d508e9267096933ed6fa6" translate="yes" xml:space="preserve">
          <source>If the Task&amp;rsquo;s result isn&amp;rsquo;t yet available, this method raises a &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">タスクの結果がまだ利用できない場合、このメソッドは&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="0d2428fdf8b60d8010dea0a01f7c47a9ea2e0739" translate="yes" xml:space="preserve">
          <source>If the XML input has &lt;a href=&quot;https://en.wikipedia.org/wiki/XML_namespace&quot;&gt;namespaces&lt;/a&gt;, tags and attributes with prefixes in the form &lt;code&gt;prefix:sometag&lt;/code&gt; get expanded to &lt;code&gt;{uri}sometag&lt;/code&gt; where the &lt;em&gt;prefix&lt;/em&gt; is replaced by the full &lt;em&gt;URI&lt;/em&gt;. Also, if there is a &lt;a href=&quot;https://www.w3.org/TR/xml-names/#defaulting&quot;&gt;default namespace&lt;/a&gt;, that full URI gets prepended to all of the non-prefixed tags.</source>
          <target state="translated">XML入力に&lt;a href=&quot;https://en.wikipedia.org/wiki/XML_namespace&quot;&gt;名前空間&lt;/a&gt;がある場合、 &lt;code&gt;prefix:sometag&lt;/code&gt; という形式のプレフィックスを持つタグと属性は、 &lt;code&gt;{uri}sometag&lt;/code&gt; に展開され、&lt;em&gt;プレフィックス&lt;/em&gt;は完全な&lt;em&gt;URIに&lt;/em&gt;置き換えられます。また、&lt;a href=&quot;https://www.w3.org/TR/xml-names/#defaulting&quot;&gt;デフォルトの名前空間&lt;/a&gt;がある場合、その完全なURIが接頭辞のないすべてのタグの前に付加されます。</target>
        </trans-unit>
        <trans-unit id="1035788874be82f93e34090a34131ddf3cbc5486" translate="yes" xml:space="preserve">
          <source>If the amount of data read exceeds the configured stream limit, a &lt;a href=&quot;asyncio-exceptions#asyncio.LimitOverrunError&quot;&gt;&lt;code&gt;LimitOverrunError&lt;/code&gt;&lt;/a&gt; exception is raised, and the data is left in the internal buffer and can be read again.</source>
          <target state="translated">読み取られたデータの量が構成されたストリーム制限を超えると、&lt;a href=&quot;asyncio-exceptions#asyncio.LimitOverrunError&quot;&gt; &lt;code&gt;LimitOverrunError&lt;/code&gt; &lt;/a&gt;例外が発生し、データは内部バッファーに残り、再度読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="9b49e74988c341dbee66d98c70300f05b412e8ad" translate="yes" xml:space="preserve">
          <source>If the application knows the character encoding of the byte stream, it should set it with the setEncoding method.</source>
          <target state="translated">アプリケーションがバイトストリームの文字エンコーディングを知っている場合は、setEncodingメソッドで設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3fa82cef5f28606b6fd2a9d2c0bbbdbbb88b6591" translate="yes" xml:space="preserve">
          <source>If the argument &lt;em&gt;alter_sys&lt;/em&gt; is supplied and evaluates to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.argv[0]&lt;/code&gt; is updated with the value of &lt;code&gt;__file__&lt;/code&gt; and &lt;code&gt;sys.modules[__name__]&lt;/code&gt; is updated with a temporary module object for the module being executed. Both &lt;code&gt;sys.argv[0]&lt;/code&gt; and &lt;code&gt;sys.modules[__name__]&lt;/code&gt; are restored to their original values before the function returns.</source>
          <target state="translated">引数の場合&lt;em&gt;alter_sysが&lt;/em&gt;供給さに評価される&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;、その後、 &lt;code&gt;sys.argv[0]&lt;/code&gt; の値で更新され &lt;code&gt;__file__&lt;/code&gt; と &lt;code&gt;sys.modules[__name__]&lt;/code&gt; 実行されているモジュールのための一時的なモジュールオブジェクトで更新されます。 &lt;code&gt;sys.argv[0]&lt;/code&gt; と &lt;code&gt;sys.modules[__name__]&lt;/code&gt; はどちらも、関数が戻る前に元の値に復元されます。</target>
        </trans-unit>
        <trans-unit id="a5411ed7af975d74d9bde61eea8619af34a7725c" translate="yes" xml:space="preserve">
          <source>If the argument is a &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;coroutine object&lt;/a&gt; it is implicitly scheduled to run as a &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;asyncio.Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数が&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;コルーチンオブジェクトの&lt;/a&gt;場合、暗黙的に&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;asyncio.Task&lt;/code&gt; &lt;/a&gt;として実行するようにスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="81ba162b85ef412221638aff281d53793a7875ce" translate="yes" xml:space="preserve">
          <source>If the argument is a string, it should contain a decimal number, optionally preceded by a sign, and optionally embedded in whitespace. The optional sign may be &lt;code&gt;'+'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;; a &lt;code&gt;'+'&lt;/code&gt; sign has no effect on the value produced. The argument may also be a string representing a NaN (not-a-number), or a positive or negative infinity. More precisely, the input must conform to the following grammar after leading and trailing whitespace characters are removed:</source>
          <target state="translated">引数が文字列の場合、10進数を含み、オプションで前に符号を付け、オプションで空白に埋め込む必要があります。オプションの符号は &lt;code&gt;'+'&lt;/code&gt; または &lt;code&gt;'-'&lt;/code&gt; です。 &lt;code&gt;'+'&lt;/code&gt; 記号が生成される値には影響しません。引数は、NaN（非数）、または正または負の無限大を表す文字列にすることもできます。より正確には、先頭と末尾の空白文字が削除された後、入力は次の文法に準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="e0bf4582d5afa94925ba1fb86d35299839904863" translate="yes" xml:space="preserve">
          <source>If the argument is positive, and the underlying raw stream is not interactive, multiple raw reads may be issued to satisfy the byte count (unless EOF is reached first). But for interactive raw streams, at most one raw read will be issued, and a short result does not imply that EOF is imminent.</source>
          <target state="translated">引数が正の値で、基礎となる生ストリームが対話的でない場合、バイト数を満たすために複数のraw readを発行することができます(最初にEOFに到達しない限り)。しかし、対話的なRawストリームの場合、最大でも1回のRawリードが発行され、結果が短くてもEOFが差し迫っていることを意味するものではありません。</target>
        </trans-unit>
        <trans-unit id="bf5c155da4b8b4fe57abec8d0c0e72c648a413c5" translate="yes" xml:space="preserve">
          <source>If the argument to the closure is not an existing directory, &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">クロージャの引数が既存のディレクトリでない場合、&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9e34bdcceb6034130f11958c3ceb8f25313fc52d" translate="yes" xml:space="preserve">
          <source>If the attempt to make the socket connection fails, Idle will notify you. Such failures are sometimes transient, but if persistent, the problem may be either a firewall blocking the connection or misconfiguration of a particular system. Until the problem is fixed, one can run Idle with the -n command line switch.</source>
          <target state="translated">ソケット接続の試みが失敗した場合、Idle はその旨を通知します。このような失敗は一過性のものであることもありますが、もし失敗が続く場合は、ファイアウォールが接続をブロックしているか、特定のシステムの設定ミスが原因である可能性があります。問題が解決するまでは、-n コマンドラインスイッチを使って Idle を実行することができます。</target>
        </trans-unit>
        <trans-unit id="4a14d9ea3ec7e959887154398109ffeb0809f131" translate="yes" xml:space="preserve">
          <source>If the binary data ends with the &lt;em&gt;suffix&lt;/em&gt; string and that &lt;em&gt;suffix&lt;/em&gt; is not empty, return &lt;code&gt;bytes[:-len(suffix)]&lt;/code&gt;. Otherwise, return a copy of the original binary data:</source>
          <target state="translated">バイナリデータが&lt;em&gt;サフィックス&lt;/em&gt;文字列で終わり、その&lt;em&gt;サフィックス&lt;/em&gt;が空でない場合は、 &lt;code&gt;bytes[:-len(suffix)]&lt;/code&gt; 返します。それ以外の場合は、元のバイナリデータのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="6a461ee183aff7f6ef68fb8f009900420db64dbe" translate="yes" xml:space="preserve">
          <source>If the binary data starts with the &lt;em&gt;prefix&lt;/em&gt; string, return &lt;code&gt;bytes[len(prefix):]&lt;/code&gt;. Otherwise, return a copy of the original binary data:</source>
          <target state="translated">バイナリデータが&lt;em&gt;プレフィックス&lt;/em&gt;文字列で始まる場合は、 &lt;code&gt;bytes[len(prefix):]&lt;/code&gt; 返します。それ以外の場合は、元のバイナリデータのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="5376fd70393bce3b2627873412a2a120086e43a7" translate="yes" xml:space="preserve">
          <source>If the buffer is too short then a &lt;code&gt;BufferTooShort&lt;/code&gt; exception is raised and the complete message is available as &lt;code&gt;e.args[0]&lt;/code&gt; where &lt;code&gt;e&lt;/code&gt; is the exception instance.</source>
          <target state="translated">バッファが短すぎる場合、 &lt;code&gt;BufferTooShort&lt;/code&gt; 例外が発生し、完全なメッセージは &lt;code&gt;e.args[0]&lt;/code&gt; として利用できます。ここで、 &lt;code&gt;e&lt;/code&gt; は例外インスタンスです。</target>
        </trans-unit>
        <trans-unit id="b55ba6cd680fc7c446defa1148be7f603a8c347a" translate="yes" xml:space="preserve">
          <source>If the buffer size equals the high watermark, &lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt; is not called: the buffer size must go strictly over.</source>
          <target state="translated">バッファサイズが最高水準点と等しい場合、&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt; &lt;code&gt;pause_writing()&lt;/code&gt; &lt;/a&gt;は呼び出されません。バッファサイズは厳密に超えなければなりません。</target>
        </trans-unit>
        <trans-unit id="c975333ddfdaa3bf375713fbe96ca6198feddace" translate="yes" xml:space="preserve">
          <source>If the byte sequence passed to this function is not exactly 4 bytes in length, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. &lt;a href=&quot;#socket.inet_ntoa&quot;&gt;&lt;code&gt;inet_ntoa()&lt;/code&gt;&lt;/a&gt; does not support IPv6, and &lt;a href=&quot;#socket.inet_ntop&quot;&gt;&lt;code&gt;inet_ntop()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">この関数に渡されるバイトシーケンスの長さが正確に4バイトでない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。&lt;a href=&quot;#socket.inet_ntoa&quot;&gt; &lt;code&gt;inet_ntoa()&lt;/code&gt; &lt;/a&gt;はIPv6をサポートしていません&lt;a href=&quot;#socket.inet_ntop&quot;&gt; &lt;code&gt;inet_ntop()&lt;/code&gt; &lt;/a&gt; / v6デュアルスタックをサポートするには、代わりにinet_ntop（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="4080aabef6f9144e191027041093c739d2c1b3bd" translate="yes" xml:space="preserve">
          <source>If the call completed without raising, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">呼び出しが発生せずに完了した場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f83b4efd6f712f456500a47232013459d991539c" translate="yes" xml:space="preserve">
          <source>If the call raised, this method will raise the same exception.</source>
          <target state="translated">呼び出しが発生した場合、このメソッドは同じ例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="98c6607719d86226a4951bc27faa2632178e9837" translate="yes" xml:space="preserve">
          <source>If the call times out, the barrier is put into the broken state.</source>
          <target state="translated">呼び出しがタイムアウトすると、バリアが壊れた状態になります。</target>
        </trans-unit>
        <trans-unit id="34c6962c614477a6094fef9f3349e26138a51253" translate="yes" xml:space="preserve">
          <source>If the calling task has not acquired the lock when this method is called, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドが呼び出されたときに呼び出しタスクがロックを取得していない場合、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="8100a6b6af3438279c1efdd3048e83262e4a542c" translate="yes" xml:space="preserve">
          <source>If the character set must be encoded before it can be used in an email header, this attribute will be set to &lt;code&gt;Charset.QP&lt;/code&gt; (for quoted-printable), &lt;code&gt;Charset.BASE64&lt;/code&gt; (for base64 encoding), or &lt;code&gt;Charset.SHORTEST&lt;/code&gt; for the shortest of QP or BASE64 encoding. Otherwise, it will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">文字セットをメールヘッダーで使用する前にエンコードする必要がある場合、この属性は &lt;code&gt;Charset.QP&lt;/code&gt; （quoted-printableの場合）、 &lt;code&gt;Charset.BASE64&lt;/code&gt; （base64エンコードの場合）、または &lt;code&gt;Charset.SHORTEST&lt;/code&gt; に設定されます。QPまたはBASE64エンコーディング。それ以外の場合は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="6e8caac2adb6bf9423fea6039c1be36f8bc7d75e" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスがすでに&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="5173bdebec1086940c7a8a6c5f27b3d81d48ed3a" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスが&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;すでに定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="8cb1399398df7c668ff6210d8b504532d3b5fe53" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスがすでに&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="5945c15a8568d448fdb75e585a76c1b4841617db" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスがすでに&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="320b0db4c9292986c143110a9901c88cf4b081b4" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスがすでに&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="8523a502465aa7a7af85ffbc4a99e870d9713c23" translate="yes" xml:space="preserve">
          <source>If the class already defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;, this parameter is ignored.</source>
          <target state="translated">クラスがすでに&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;定義している場合、このパラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="d1e40f424d0a60fa1524e20d8b1ff8a462f2310e" translate="yes" xml:space="preserve">
          <source>If the class already defines any of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">クラスはすでに、任意の定義されている場合&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;、その後、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="5e877c2db467eb6d0727341a6964f7d1ce158c0c" translate="yes" xml:space="preserve">
          <source>If the class already defines any of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">クラスはすでに、任意の定義されている場合&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;、その後、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="18d54afc52e2190ab5698bf62a007d327a0d9532" translate="yes" xml:space="preserve">
          <source>If the class is instantiated multiple times you could use &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; to return a new mock each time. Alternatively you can set the &lt;em&gt;return_value&lt;/em&gt; to be anything you want.</source>
          <target state="translated">クラスが複数回インスタンス化されている場合は、&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt;を使用して毎回新しいモックを返すことができます。または、&lt;em&gt;return_value&lt;/em&gt;を任意の値に設定できます。</target>
        </trans-unit>
        <trans-unit id="0844b2f1f4f28f1d3c7e82725d649a65558d8346" translate="yes" xml:space="preserve">
          <source>If the cmd argument to popen2 functions is a string, the command is executed through /bin/sh. If it is a list, the command is directly executed.</source>
          <target state="translated">popen2関数へのcmdの引数が文字列の場合、コマンドは/bin/shを通して実行されます。リストの場合は直接実行されます。</target>
        </trans-unit>
        <trans-unit id="0b487b3fa1bfe238daee50939a9f3547d743abdb" translate="yes" xml:space="preserve">
          <source>If the code has a jump target and &lt;em&gt;jump&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;#dis.stack_effect&quot;&gt;&lt;code&gt;stack_effect()&lt;/code&gt;&lt;/a&gt; will return the stack effect of jumping. If &lt;em&gt;jump&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, it will return the stack effect of not jumping. And if &lt;em&gt;jump&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (default), it will return the maximal stack effect of both cases.</source>
          <target state="translated">コードにジャンプターゲットがあり、&lt;em&gt;jump&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;#dis.stack_effect&quot;&gt; &lt;code&gt;stack_effect()&lt;/code&gt; &lt;/a&gt;はジャンプのスタック効果を返します。&lt;em&gt;jump&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;em&gt;ジャンプし&lt;/em&gt;ないというスタック効果を返します。場合や&lt;em&gt;ジャンプが&lt;/em&gt;あるん &lt;code&gt;None&lt;/code&gt; （デフォルト）、それは両方のケースの最大スタック効果を返します。</target>
        </trans-unit>
        <trans-unit id="4f49dfb1d7b288c0f309278b39f37d05e88304b1" translate="yes" xml:space="preserve">
          <source>If the configuration value specified by &lt;em&gt;name&lt;/em&gt; isn&amp;rsquo;t defined, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;で指定された構成値が定義されていない場合、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a0290d581f118be47fbc672209c5237cf2ee347a" translate="yes" xml:space="preserve">
          <source>If the connection is interrupted by a signal, the method waits until the connection completes, or raise a &lt;a href=&quot;#socket.timeout&quot;&gt;&lt;code&gt;socket.timeout&lt;/code&gt;&lt;/a&gt; on timeout, if the signal handler doesn&amp;rsquo;t raise an exception and the socket is blocking or has a timeout. For non-blocking sockets, the method raises an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception if the connection is interrupted by a signal (or the exception raised by the signal handler).</source>
          <target state="translated">接続がシグナルによって中断された場合、メソッドは接続が完了するまで待機するか、またはシグナルハンドラーが例外を発生させず、ソケットがブロックされているかタイムアウトしている場合は、タイムアウト時に&lt;a href=&quot;#socket.timeout&quot;&gt; &lt;code&gt;socket.timeout&lt;/code&gt; &lt;/a&gt;を発生させます。非ブロッキングソケットの場合、接続がシグナルによって中断された場合（またはシグナルハンドラーによって発生した例外）、メソッドは&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="1ccfc1df4a51fc69641651224aae9f0339a11398" translate="yes" xml:space="preserve">
          <source>If the connection to the server is lost while waiting for the reply, &lt;a href=&quot;#smtplib.SMTPServerDisconnected&quot;&gt;&lt;code&gt;SMTPServerDisconnected&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">応答の待機中にサーバーへの接続が失われた場合、&lt;a href=&quot;#smtplib.SMTPServerDisconnected&quot;&gt; &lt;code&gt;SMTPServerDisconnected&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="3ad155938abd6bd816f11164daa5559b5b6f8335" translate="yes" xml:space="preserve">
          <source>If the containing toplevel&amp;rsquo;s position was specified relative to the right or bottom of the screen (e.g. &amp;hellip;.), the &lt;code&gt;Sizegrip&lt;/code&gt; widget will not resize the window.</source>
          <target state="translated">含むトップレベルの位置が画面の右または下を基準にして指定された場合（例：&amp;hellip;）、 &lt;code&gt;Sizegrip&lt;/code&gt; ウィジェットはウィンドウのサイズを変更しません。</target>
        </trans-unit>
        <trans-unit id="43dd941fcd2c8ec7d6f5b3b06bac3aa6c32162ba" translate="yes" xml:space="preserve">
          <source>If the context&amp;rsquo;s trap enabler is set for the signal, then the condition causes a Python exception to be raised. For example, if the &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt; trap is set, then a &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt; exception is raised upon encountering the condition.</source>
          <target state="translated">コンテキストのトラップイネーブラーが信号に設定されている場合、条件によりPython例外が発生します。たとえば、&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;トラップが設定されている場合、条件が発生すると&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="22595aef4892c0871cfe75e3e28f828bb007ef0c" translate="yes" xml:space="preserve">
          <source>If the converter needs to access the state of the parser, it can be implemented as a method on a config parser subclass. If the name of this method starts with &lt;code&gt;get&lt;/code&gt;, it will be available on all section proxies, in the dict-compatible form (see the &lt;code&gt;getdecimal()&lt;/code&gt; example above).</source>
          <target state="translated">コンバーターがパーサーの状態にアクセスする必要がある場合は、構成パーサーサブクラスのメソッドとして実装できます。このメソッドの名前が &lt;code&gt;get&lt;/code&gt; で始まる場合、すべてのセクションプロキシでdict互換の形式で使用できます（上記の &lt;code&gt;getdecimal()&lt;/code&gt; の例を参照）。</target>
        </trans-unit>
        <trans-unit id="8b3d3dc34b0d0bf1c8c7d4897bc704963dd23f37" translate="yes" xml:space="preserve">
          <source>If the cursor is over an output line, squeeze all the output between the code above and the prompt below down to a &amp;lsquo;Squeezed text&amp;rsquo; label.</source>
          <target state="translated">カーソルが出力行の上にある場合は、上のコードと下のプロンプトの間のすべての出力を「スクイーズされたテキスト」ラベルまでスクイーズします。</target>
        </trans-unit>
        <trans-unit id="a84ed8f0fda6ec2ae9ca1bc860b4c3906be5fb5d" translate="yes" xml:space="preserve">
          <source>If the data being deserialized is not a valid JSON document, a &lt;a href=&quot;#json.JSONDecodeError&quot;&gt;&lt;code&gt;JSONDecodeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">逆シリアル化されるデータが有効なJSONドキュメントでない場合、&lt;a href=&quot;#json.JSONDecodeError&quot;&gt; &lt;code&gt;JSONDecodeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="722e3f031b5abfe9b3484e64e6d2902f708fa4b0" translate="yes" xml:space="preserve">
          <source>If the data is ordinal (supports order operations) but not numeric (doesn&amp;rsquo;t support addition), consider using &lt;a href=&quot;#statistics.median_low&quot;&gt;&lt;code&gt;median_low()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#statistics.median_high&quot;&gt;&lt;code&gt;median_high()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">データが序数である（注文操作をサポートする）が数値ではない（加算をサポートしていない）場合は、代わりに&lt;a href=&quot;#statistics.median_low&quot;&gt; &lt;code&gt;median_low()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#statistics.median_high&quot;&gt; &lt;code&gt;median_high()&lt;/code&gt; の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="154822805c12d2aab70f1b641202eb990335ef91" translate="yes" xml:space="preserve">
          <source>If the database file already exists, the &lt;a href=&quot;#dbm.whichdb&quot;&gt;&lt;code&gt;whichdb()&lt;/code&gt;&lt;/a&gt; function is used to determine its type and the appropriate module is used; if it does not exist, the first module listed above that can be imported is used.</source>
          <target state="translated">データベースファイルがすでに存在する場合は、&lt;a href=&quot;#dbm.whichdb&quot;&gt; &lt;code&gt;whichdb()&lt;/code&gt; &lt;/a&gt;関数を使用してそのタイプを判別し、適切なモジュールを使用します。存在しない場合は、上記の最初にインポートできるモジュールが使用されます。</target>
        </trans-unit>
        <trans-unit id="b118369699b7fc02d2c91e666ca503503b584356" translate="yes" xml:space="preserve">
          <source>If the debugger should stop at this exception, invokes the &lt;a href=&quot;#bdb.Bdb.user_exception&quot;&gt;&lt;code&gt;user_exception()&lt;/code&gt;&lt;/a&gt; method (which should be overridden in subclasses). Raise a &lt;a href=&quot;#bdb.BdbQuit&quot;&gt;&lt;code&gt;BdbQuit&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;Bdb.quitting&lt;/code&gt; flag is set (which can be set from &lt;a href=&quot;#bdb.Bdb.user_exception&quot;&gt;&lt;code&gt;user_exception()&lt;/code&gt;&lt;/a&gt;). Return a reference to the &lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt;&lt;code&gt;trace_dispatch()&lt;/code&gt;&lt;/a&gt; method for further tracing in that scope.</source>
          <target state="translated">デバッガーがこの例外で停止する必要がある場合は、&lt;a href=&quot;#bdb.Bdb.user_exception&quot;&gt; &lt;code&gt;user_exception()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します（サブクラスでオーバーライドする必要があります）。 &lt;code&gt;Bdb.quitting&lt;/code&gt; フラグが設定されている&lt;a href=&quot;#bdb.Bdb.user_exception&quot;&gt; &lt;code&gt;user_exception()&lt;/code&gt; &lt;/a&gt;から設定できます）、&lt;a href=&quot;#bdb.BdbQuit&quot;&gt; &lt;code&gt;BdbQuit&lt;/code&gt; &lt;/a&gt;例外を発生させます。そのスコープでさらにトレースするには、&lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt; &lt;code&gt;trace_dispatch()&lt;/code&gt; &lt;/a&gt;メソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="d65f4eae2712c33680ab9efbc1f19062565841d8" translate="yes" xml:space="preserve">
          <source>If the debugger should stop on the current line, invoke the &lt;a href=&quot;#bdb.Bdb.user_line&quot;&gt;&lt;code&gt;user_line()&lt;/code&gt;&lt;/a&gt; method (which should be overridden in subclasses). Raise a &lt;a href=&quot;#bdb.BdbQuit&quot;&gt;&lt;code&gt;BdbQuit&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;Bdb.quitting&lt;/code&gt; flag is set (which can be set from &lt;a href=&quot;#bdb.Bdb.user_line&quot;&gt;&lt;code&gt;user_line()&lt;/code&gt;&lt;/a&gt;). Return a reference to the &lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt;&lt;code&gt;trace_dispatch()&lt;/code&gt;&lt;/a&gt; method for further tracing in that scope.</source>
          <target state="translated">デバッガーが現在の行で停止する必要がある場合は、&lt;a href=&quot;#bdb.Bdb.user_line&quot;&gt; &lt;code&gt;user_line()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します（これはサブクラスでオーバーライドする必要があります）。 &lt;code&gt;Bdb.quitting&lt;/code&gt; フラグが設定されている&lt;a href=&quot;#bdb.Bdb.user_line&quot;&gt; &lt;code&gt;user_line()&lt;/code&gt; &lt;/a&gt;から設定できます）、&lt;a href=&quot;#bdb.BdbQuit&quot;&gt; &lt;code&gt;BdbQuit&lt;/code&gt; &lt;/a&gt;例外を発生させます。そのスコープでさらにトレースするには、&lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt; &lt;code&gt;trace_dispatch()&lt;/code&gt; &lt;/a&gt;メソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="f1c7df4d0adf08d6f3c7e84cf0ae146dc6be7d64" translate="yes" xml:space="preserve">
          <source>If the debugger should stop on this function call, invoke the &lt;a href=&quot;#bdb.Bdb.user_call&quot;&gt;&lt;code&gt;user_call()&lt;/code&gt;&lt;/a&gt; method (which should be overridden in subclasses). Raise a &lt;a href=&quot;#bdb.BdbQuit&quot;&gt;&lt;code&gt;BdbQuit&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;Bdb.quitting&lt;/code&gt; flag is set (which can be set from &lt;a href=&quot;#bdb.Bdb.user_call&quot;&gt;&lt;code&gt;user_call()&lt;/code&gt;&lt;/a&gt;). Return a reference to the &lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt;&lt;code&gt;trace_dispatch()&lt;/code&gt;&lt;/a&gt; method for further tracing in that scope.</source>
          <target state="translated">デバッガーがこの関数呼び出しで停止する必要がある場合は、&lt;a href=&quot;#bdb.Bdb.user_call&quot;&gt; &lt;code&gt;user_call()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します（サブクラスでオーバーライドする必要があります）。 &lt;code&gt;Bdb.quitting&lt;/code&gt; フラグが設定されている&lt;a href=&quot;#bdb.Bdb.user_call&quot;&gt; &lt;code&gt;user_call()&lt;/code&gt; &lt;/a&gt;から設定できます）、&lt;a href=&quot;#bdb.BdbQuit&quot;&gt; &lt;code&gt;BdbQuit&lt;/code&gt; &lt;/a&gt;例外を発生させます。そのスコープでさらにトレースするには、&lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt; &lt;code&gt;trace_dispatch()&lt;/code&gt; &lt;/a&gt;メソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="be5272f439cf1bb932bed5ba2fa9705c6449082c" translate="yes" xml:space="preserve">
          <source>If the debugger should stop on this function return, invoke the &lt;a href=&quot;#bdb.Bdb.user_return&quot;&gt;&lt;code&gt;user_return()&lt;/code&gt;&lt;/a&gt; method (which should be overridden in subclasses). Raise a &lt;a href=&quot;#bdb.BdbQuit&quot;&gt;&lt;code&gt;BdbQuit&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;Bdb.quitting&lt;/code&gt; flag is set (which can be set from &lt;a href=&quot;#bdb.Bdb.user_return&quot;&gt;&lt;code&gt;user_return()&lt;/code&gt;&lt;/a&gt;). Return a reference to the &lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt;&lt;code&gt;trace_dispatch()&lt;/code&gt;&lt;/a&gt; method for further tracing in that scope.</source>
          <target state="translated">デバッガーがこの関数の戻りで停止する必要がある場合は、&lt;a href=&quot;#bdb.Bdb.user_return&quot;&gt; &lt;code&gt;user_return()&lt;/code&gt; &lt;/a&gt;メソッド（サブクラスでオーバーライドする必要があります）を呼び出します。 &lt;code&gt;Bdb.quitting&lt;/code&gt; フラグが設定されている&lt;a href=&quot;#bdb.Bdb.user_return&quot;&gt; &lt;code&gt;user_return()&lt;/code&gt; &lt;/a&gt;から設定できます）、&lt;a href=&quot;#bdb.BdbQuit&quot;&gt; &lt;code&gt;BdbQuit&lt;/code&gt; &lt;/a&gt;例外を発生させます。そのスコープでさらにトレースするには、&lt;a href=&quot;#bdb.Bdb.trace_dispatch&quot;&gt; &lt;code&gt;trace_dispatch()&lt;/code&gt; &lt;/a&gt;メソッドへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="201fc8099c1ec49d0ede598d1afe842c5aadcbab" translate="yes" xml:space="preserve">
          <source>If the default value of a field is specified by a call to &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt;, then the class attribute for this field will be replaced by the specified &lt;code&gt;default&lt;/code&gt; value. If no &lt;code&gt;default&lt;/code&gt; is provided, then the class attribute will be deleted. The intent is that after the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator runs, the class attributes will all contain the default values for the fields, just as if the default value itself were specified. For example, after:</source>
          <target state="translated">フィールドのデフォルト値が&lt;a href=&quot;#dataclasses.field&quot;&gt; &lt;code&gt;field()&lt;/code&gt; の&lt;/a&gt;呼び出しで指定されている場合、このフィールドのクラス属性は指定された &lt;code&gt;default&lt;/code&gt; 値で置き換えられます。 &lt;code&gt;default&lt;/code&gt; が指定されていない場合、クラス属性は削除されます。その意図は、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;デコレーターが実行された後、クラス属性にはすべて、デフォルト値自体が指定されたかのように、フィールドのデフォルト値が含まれることです。たとえば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="5ae4681cafc2df817b63559ac73e2e01d8b7ddf0" translate="yes" xml:space="preserve">
          <source>If the destination is an existing directory, then &lt;em&gt;src&lt;/em&gt; is moved inside that directory. If the destination already exists but is not a directory, it may be overwritten depending on &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt; semantics.</source>
          <target state="translated">宛先が既存のディレクトリの場合、&lt;em&gt;src&lt;/em&gt;はそのディレクトリ内に移動されます。宛先がすでに存在しているがディレクトリではない場合、&lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; &lt;/a&gt;セマンティクスによっては上書きされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="90a483529ef380acfabb4df595aa7f9eedaacd18" translate="yes" xml:space="preserve">
          <source>If the destination is on the current filesystem, then &lt;a href=&quot;os#os.rename&quot;&gt;&lt;code&gt;os.rename()&lt;/code&gt;&lt;/a&gt; is used. Otherwise, &lt;em&gt;src&lt;/em&gt; is copied to &lt;em&gt;dst&lt;/em&gt; using &lt;em&gt;copy_function&lt;/em&gt; and then removed. In case of symlinks, a new symlink pointing to the target of &lt;em&gt;src&lt;/em&gt; will be created in or as &lt;em&gt;dst&lt;/em&gt; and &lt;em&gt;src&lt;/em&gt; will be removed.</source>
          <target state="translated">宛先が現在のファイルシステムにある場合、&lt;a href=&quot;os#os.rename&quot;&gt; &lt;code&gt;os.rename()&lt;/code&gt; &lt;/a&gt;が使用されます。それ以外の場合、&lt;em&gt;src&lt;/em&gt;は&lt;em&gt;copy_function&lt;/em&gt;を使用して&lt;em&gt;dstに&lt;/em&gt;コピーされ、その後削除されます。シンボリックリンクの場合、&lt;em&gt;src&lt;/em&gt;のターゲットを指す新しいシンボリックリンクが、&lt;em&gt;dst内またはdst&lt;/em&gt;として作成され、&lt;em&gt;src&lt;/em&gt;が削除されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7f148091df358050d8bcfaf1e96d8acba5a8a3d" translate="yes" xml:space="preserve">
          <source>If the directory already exists, &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">ディレクトリがすでに存在する場合、&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="f4bf018015908f2a980d2821276c417e78ee5737" translate="yes" xml:space="preserve">
          <source>If the directory contains files starting with &lt;code&gt;.&lt;/code&gt; they won&amp;rsquo;t be matched by default. For example, consider a directory containing &lt;code&gt;card.gif&lt;/code&gt; and &lt;code&gt;.card.gif&lt;/code&gt;:</source>
          <target state="translated">ディレクトリにで始まるファイルが含まれている場合 &lt;code&gt;.&lt;/code&gt; デフォルトでは一致しません。たとえば、 &lt;code&gt;card.gif&lt;/code&gt; と &lt;code&gt;.card.gif&lt;/code&gt; を含むディレクトリを考えます。</target>
        </trans-unit>
        <trans-unit id="7ced573f72ad49106a583ae064c2db74e18bb9c9" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code id=&quot;index-0&quot;&gt;BROWSER&lt;/code&gt; exists, it is interpreted as the &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;-separated list of browsers to try ahead of the platform defaults. When the value of a list part contains the string &lt;code&gt;%s&lt;/code&gt;, then it is interpreted as a literal browser command line to be used with the argument URL substituted for &lt;code&gt;%s&lt;/code&gt;; if the part does not contain &lt;code&gt;%s&lt;/code&gt;, it is simply interpreted as the name of the browser to launch. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">環境変数 &lt;code id=&quot;index-0&quot;&gt;BROWSER&lt;/code&gt; が存在する場合、プラットフォームのデフォルトよりも先に試すために、ブラウザーの&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; &lt;/a&gt;で区切られたリストとして解釈されます。リストパーツの値に文字列 &lt;code&gt;%s&lt;/code&gt; が含まれている場合、文字列ブラウザコマンドラインとして解釈され、 &lt;code&gt;%s&lt;/code&gt; の代わりに引数URLが使用されます。パーツに &lt;code&gt;%s&lt;/code&gt; が含まれていない場合は、起動するブラウザの名前として解釈されます。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4992ba0add3e62936beba1abed0141fdfe5937a4" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;REQUEST_METHOD&lt;/code&gt; is set, which usually indicates your script is running in a CGI environment, the environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt; (uppercase &lt;code&gt;_PROXY&lt;/code&gt;) will be ignored. This is because that variable can be injected by a client using the &amp;ldquo;Proxy:&amp;rdquo; HTTP header. If you need to use an HTTP proxy in a CGI environment, either use &lt;code&gt;ProxyHandler&lt;/code&gt; explicitly, or make sure the variable name is in lowercase (or at least the &lt;code&gt;_proxy&lt;/code&gt; suffix).</source>
          <target state="translated">環境変数 &lt;code&gt;REQUEST_METHOD&lt;/code&gt; が設定されている場合、これは通常、スクリプトがCGI環境で実行されていることを示し、環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; （大文字の &lt;code&gt;_PROXY&lt;/code&gt; ）は無視されます。これは、「Proxy：」HTTPヘッダーを使用してクライアントが変数を注入できるためです。CGI環境でHTTPプロキシを使用する必要がある場合は、 &lt;code&gt;ProxyHandler&lt;/code&gt; を明示的に使用するか、変数名が小文字（または少なくとも &lt;code&gt;_proxy&lt;/code&gt; サフィックス）であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="733c3f8ae616712998ec582c7dc9418f60036c61" translate="yes" xml:space="preserve">
          <source>If the event is set, return &lt;code&gt;True&lt;/code&gt; immediately. Otherwise block until another task calls &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">イベントが設定されている場合は、すぐに &lt;code&gt;True&lt;/code&gt; を返します。それ以外の場合は、別のタスクが&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; を&lt;/a&gt;呼び出すまでブロックします。</target>
        </trans-unit>
        <trans-unit id="378c9e1cdfb8344fd77c512889f953f89cb90508" translate="yes" xml:space="preserve">
          <source>If the exact value is unimportant you can use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">正確な値が重要でない場合は、&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="80196981eb3b8cd3185224864fb45d685edece2b" translate="yes" xml:space="preserve">
          <source>If the expansion fails or if the path does not begin with a tilde, the path is returned unchanged.</source>
          <target state="translated">展開に失敗した場合、またはパスがチルダで始まらない場合、パスは変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="25581f556094bf0f7a3af63df730aedc4bbc5af1" translate="yes" xml:space="preserve">
          <source>If the exponent of the second operand is larger than that of the first then rounding may be necessary. In this case, the rounding mode is determined by the &lt;code&gt;rounding&lt;/code&gt; argument if given, else by the given &lt;code&gt;context&lt;/code&gt; argument; if neither argument is given the rounding mode of the current thread&amp;rsquo;s context is used.</source>
          <target state="translated">2番目のオペランドの指数が最初のオペランドの指数より大きい場合、丸めが必要になることがあります。この場合、丸めモードは、 &lt;code&gt;rounding&lt;/code&gt; 引数が指定されている場合はそれによって決定され、そうでない場合は &lt;code&gt;context&lt;/code&gt; 引数によって決定されます。どちらの引数も指定されていない場合は、現在のスレッドのコンテキストの丸めモードが使用されます。</target>
        </trans-unit>
        <trans-unit id="f40d8b7c76b10f8d6afc27ed43238ec343c52d0a" translate="yes" xml:space="preserve">
          <source>If the fast-copy operation fails and no data was written in the destination file then shutil will silently fallback on using less efficient &lt;a href=&quot;#shutil.copyfileobj&quot;&gt;&lt;code&gt;copyfileobj()&lt;/code&gt;&lt;/a&gt; function internally.</source>
          <target state="translated">高速コピー操作が失敗し、宛先ファイルにデータが書き込まれなかった場合、shutilは効率の悪いcopyfileobj &lt;a href=&quot;#shutil.copyfileobj&quot;&gt; &lt;code&gt;copyfileobj()&lt;/code&gt; &lt;/a&gt;関数を内部で使用してフォールバックします。</target>
        </trans-unit>
        <trans-unit id="7904f5dd4c3c1ff4fa7eecbfcee0078bf02fe590" translate="yes" xml:space="preserve">
          <source>If the file descriptor is not connected to a terminal, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">ファイル記述子が端末に接続されていない場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="204d5c0bddce0bad70b8e8384a949257afd035f7" translate="yes" xml:space="preserve">
          <source>If the file is created with mode &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt; and then &lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; without adding any files to the archive, the appropriate ZIP structures for an empty archive will be written to the file.</source>
          <target state="translated">ファイルがモード &lt;code&gt;'w'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; または &lt;code&gt;'a'&lt;/code&gt; で作成され、ファイルをアーカイブに追加せずに&lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;た場合、空のアーカイブに適切なZIP構造がファイルに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="e0b3807f55b2bb553078d84e9b4f290c46390447" translate="yes" xml:space="preserve">
          <source>If the first character is not one of these, &lt;code&gt;'@'&lt;/code&gt; is assumed.</source>
          <target state="translated">最初の文字がこれらのいずれでもない場合、 &lt;code&gt;'@'&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="ecd2158e2f17566a6c9110f348c8d34a00d129fc" translate="yes" xml:space="preserve">
          <source>If the first character of the option string is &lt;code&gt;'+'&lt;/code&gt;, or if the environment variable &lt;code id=&quot;index-0&quot;&gt;POSIXLY_CORRECT&lt;/code&gt; is set, then option processing stops as soon as a non-option argument is encountered.</source>
          <target state="translated">オプション文字列の最初の文字が &lt;code&gt;'+'&lt;/code&gt; の場合、または環境変数 &lt;code id=&quot;index-0&quot;&gt;POSIXLY_CORRECT&lt;/code&gt; が設定されている場合、非オプション引数が検出されるとすぐにオプション処理が停止します。</target>
        </trans-unit>
        <trans-unit id="c76146671826ba2b4412a62fe7631ca797af78d5" translate="yes" xml:space="preserve">
          <source>If the floating-point &lt;em&gt;timeout&lt;/em&gt; argument is present and positive, it specifies the maximum wait time in seconds before returning. A negative &lt;em&gt;timeout&lt;/em&gt; argument specifies an unbounded wait. You cannot specify a &lt;em&gt;timeout&lt;/em&gt; if &lt;em&gt;waitflag&lt;/em&gt; is zero.</source>
          <target state="translated">浮動小数点&lt;em&gt;タイムアウト&lt;/em&gt;引数が存在し、正の場合は、戻る前の最大待機時間を秒単位で指定します。負の&lt;em&gt;タイムアウト&lt;/em&gt;引数は、無制限の待機を指定します。&lt;em&gt;waitflag&lt;/em&gt;がゼロの場合、&lt;em&gt;タイムアウトを&lt;/em&gt;指定することはできません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71f137ca45f1f4315df5ce3a53742f74127f3689" translate="yes" xml:space="preserve">
          <source>If the function also supports &lt;em&gt;dir_fd&lt;/em&gt; or &lt;em&gt;follow_symlinks&lt;/em&gt; arguments, it&amp;rsquo;s an error to specify one of those when supplying &lt;em&gt;path&lt;/em&gt; as a file descriptor.</source>
          <target state="translated">関数が&lt;em&gt;dir_fd&lt;/em&gt;または&lt;em&gt;follow_symlinks&lt;/em&gt;引数もサポートする場合、&lt;em&gt;パス&lt;/em&gt;をファイル記述子として指定するときにこれらの引数の1つを指定するとエラーになります。</target>
        </trans-unit>
        <trans-unit id="9e255e0f89d3c1037cfd2af8f07b7a7b9b651a55" translate="yes" xml:space="preserve">
          <source>If the function fails, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">関数が失敗すると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="5356d77e205569cd60b75101b731b99c07bcf65d" translate="yes" xml:space="preserve">
          <source>If the future has already completed or been cancelled, &lt;em&gt;fn&lt;/em&gt; will be called immediately.</source>
          <target state="translated">futureがすでに完了しているかキャンセルされている場合は、&lt;em&gt;fn&lt;/em&gt;がすぐに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d7602bbb5410a8b437816b287f32e8aba7e81abc" translate="yes" xml:space="preserve">
          <source>If the future is cancelled before completing then &lt;a href=&quot;#concurrent.futures.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">完了する前にフューチャーがキャンセルされた場合、&lt;a href=&quot;#concurrent.futures.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="22d45851562f9f10333edeb0961c986bb8146cb1" translate="yes" xml:space="preserve">
          <source>If the given &lt;em&gt;section&lt;/em&gt; exists, and contains the given &lt;em&gt;option&lt;/em&gt;, return &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. If the specified &lt;em&gt;section&lt;/em&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; or an empty string, DEFAULT is assumed.</source>
          <target state="translated">指定された&lt;em&gt;セクション&lt;/em&gt;が存在し、指定された&lt;em&gt;オプション&lt;/em&gt;が含まれている&lt;em&gt;場合は&lt;/em&gt;、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; を&lt;/a&gt;返します。それ以外の場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。指定された&lt;em&gt;セクション&lt;/em&gt;が&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;または空の文字列の場合、DEFAULTが想定されます。</target>
        </trans-unit>
        <trans-unit id="1285768fc63d1e86280e3cad6887bc85265a423a" translate="yes" xml:space="preserve">
          <source>If the given encoding is not known, the function defaults to the default encoding for the locale code just like &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたエンコーディングが不明な場合、関数はデフォルトで&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; と&lt;/a&gt;同様にロケールコードのデフォルトエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="5e03a404aa9f2043079442bcf94d4ec5e79efc91" translate="yes" xml:space="preserve">
          <source>If the given section exists, set the given option to the specified value; otherwise raise &lt;a href=&quot;#configparser.NoSectionError&quot;&gt;&lt;code&gt;NoSectionError&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;option&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be strings; if not, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">指定されたセクションが存在する場合、指定されたオプションを指定された値に設定します。それ以外の場合は&lt;a href=&quot;#configparser.NoSectionError&quot;&gt; &lt;code&gt;NoSectionError&lt;/code&gt; を発生させ&lt;/a&gt;ます。&lt;em&gt;オプション&lt;/em&gt;と&lt;em&gt;値&lt;/em&gt;は文字列でなければなりません。そうでない場合、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1402525cf09cdaaddadb10846e26316cab80e378" translate="yes" xml:space="preserve">
          <source>If the given section exists, set the given option to the specified value; otherwise raise &lt;a href=&quot;#configparser.NoSectionError&quot;&gt;&lt;code&gt;NoSectionError&lt;/code&gt;&lt;/a&gt;. While it is possible to use &lt;a href=&quot;#configparser.RawConfigParser&quot;&gt;&lt;code&gt;RawConfigParser&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; with &lt;em&gt;raw&lt;/em&gt; parameters set to true) for &lt;em&gt;internal&lt;/em&gt; storage of non-string values, full functionality (including interpolation and output to files) can only be achieved using string values.</source>
          <target state="translated">指定されたセクションが存在する場合、指定されたオプションを指定された値に設定します。それ以外の場合は&lt;a href=&quot;#configparser.NoSectionError&quot;&gt; &lt;code&gt;NoSectionError&lt;/code&gt; を発生させ&lt;/a&gt;ます。それは使用することが可能であるが&lt;a href=&quot;#configparser.RawConfigParser&quot;&gt; &lt;code&gt;RawConfigParser&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;有する&lt;em&gt;生&lt;/em&gt;をtrueに設定されたパラメータ）&lt;em&gt;内部&lt;/em&gt;の非文字列値の記憶、（ファイルに補間出力を含む）すべての機能は、文字列値を使用して達成することができます。</target>
        </trans-unit>
        <trans-unit id="25fbf997b0a78ead811d3ad55217a116fa50d909" translate="yes" xml:space="preserve">
          <source>If the handle is already closed, no error is raised.</source>
          <target state="translated">ハンドルが既に閉じられている場合は、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="641b7d4d28be7e1599a1dccf300ba61a3ce1d4ca" translate="yes" xml:space="preserve">
          <source>If the header value can be recognized as a valid date of one form or another, this attribute will contain a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance representing that date. If the timezone of the input date is specified as &lt;code&gt;-0000&lt;/code&gt; (indicating it is in UTC but contains no information about the source timezone), then &lt;a href=&quot;#email.headerregistry.DateHeader.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; will be a naive &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. If a specific timezone offset is found (including &lt;code&gt;+0000&lt;/code&gt;), then &lt;a href=&quot;#email.headerregistry.DateHeader.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; will contain an aware &lt;code&gt;datetime&lt;/code&gt; that uses &lt;a href=&quot;datetime#datetime.timezone&quot;&gt;&lt;code&gt;datetime.timezone&lt;/code&gt;&lt;/a&gt; to record the timezone offset.</source>
          <target state="translated">ヘッダー値が&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;形式の有効な日付として認識できる場合、この属性にはその日付を表すdatetimeインスタンスが含まれます。入力日付のタイムゾーンが &lt;code&gt;-0000&lt;/code&gt; （UTCであるがソースのタイムゾーンに関する情報が含まれていないことを示す）と指定されている場合、&lt;a href=&quot;#email.headerregistry.DateHeader.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;は単純な&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; になり&lt;/a&gt;ます。特定のオフセットのタイムゾーンが（を含む発見された場合 &lt;code&gt;+0000&lt;/code&gt; ）、その後、&lt;a href=&quot;#email.headerregistry.DateHeader.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;承知含まれます &lt;code&gt;datetime&lt;/code&gt; 用途があること&lt;a href=&quot;datetime#datetime.timezone&quot;&gt; &lt;code&gt;datetime.timezone&lt;/code&gt; &lt;/a&gt;タイムゾーンのオフセットを記録します。</target>
        </trans-unit>
        <trans-unit id="06a777ed5d38b562baf8f3d74ea5382e00d35e44" translate="yes" xml:space="preserve">
          <source>If the higher-level protocol supports its own compression mechanism, you can use &lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt;&lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt;&lt;/a&gt; to disable SSL-level compression.</source>
          <target state="translated">上位レベルのプロトコルが独自の圧縮メカニズムをサポートしている場合は、&lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt; &lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt; &lt;/a&gt;を使用してSSLレベルの圧縮を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="52c8f2ad85aead8b4995e491e22aafadac0261c9" translate="yes" xml:space="preserve">
          <source>If the index or keyword refers to an item that does not exist, then an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; should be raised.</source>
          <target state="translated">インデックスまたはキーワードが存在しないアイテムを参照している場合、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="c788569ddd7977c4b0bf996b77dcb6e2c7a3c442" translate="yes" xml:space="preserve">
          <source>If the initial response check returns &lt;code&gt;None&lt;/code&gt;, or if &lt;em&gt;initial_response_ok&lt;/em&gt; is false, &lt;code&gt;authobject()&lt;/code&gt; will be called to process the server&amp;rsquo;s challenge response; the &lt;em&gt;challenge&lt;/em&gt; argument it is passed will be a &lt;code&gt;bytes&lt;/code&gt;. It should return ASCII &lt;code&gt;str&lt;/code&gt;&lt;em&gt;data&lt;/em&gt; that will be base64 encoded and sent to the server.</source>
          <target state="translated">初期応答チェックで &lt;code&gt;None&lt;/code&gt; が返された場合、または&lt;em&gt;initial_response_ok&lt;/em&gt;がfalseの場合、 &lt;code&gt;authobject()&lt;/code&gt; が呼び出されてサーバーのチャレンジ応答が処理されます。&lt;em&gt;チャレンジ&lt;/em&gt;それが渡された引数になります &lt;code&gt;bytes&lt;/code&gt; 。これは、base64でエンコードされ、サーバーに送信されるASCII &lt;code&gt;str&lt;/code&gt; &lt;em&gt;データ&lt;/em&gt;を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="dab9d8717f742399cb738b981063ba490b7eb6fd" translate="yes" xml:space="preserve">
          <source>If the input path is not a list (as is the case for frozen packages) it is returned unchanged. The input path is not modified; an extended copy is returned. Items are only appended to the copy at the end.</source>
          <target state="translated">入力パスがリストでない場合 (フリーズしたパッケージの場合のように)は、変更されずに返されます。入力パスは変更されず、拡張コピーが返されます。アイテムは、最後にコピーに追加されるだけです。</target>
        </trans-unit>
        <trans-unit id="b943d29ac87cd73e259d10ec9f1b9fd2ca008d7c" translate="yes" xml:space="preserve">
          <source>If the insertion would cause a bounded deque to grow beyond &lt;em&gt;maxlen&lt;/em&gt;, an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">挿入によって制限された両端キューが&lt;em&gt;maxlen&lt;/em&gt;を超える場合、&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="ed6b40b45f9572155a78f6d589785061f5e1cae3" translate="yes" xml:space="preserve">
          <source>If the instance &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; is shadowed by another member (for example a property) then this function will be unable to find instance members.</source>
          <target state="translated">インスタンス&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;が別のメンバー（プロパティなど）によってシャドウされている場合、この関数はインスタンスメンバーを見つけることができません。</target>
        </trans-unit>
        <trans-unit id="bb4531fcea1f06a7582067573022ca8343fb967f" translate="yes" xml:space="preserve">
          <source>If the integer &lt;em&gt;waitflag&lt;/em&gt; argument is present, the action depends on its value: if it is zero, the lock is only acquired if it can be acquired immediately without waiting, while if it is nonzero, the lock is acquired unconditionally as above.</source>
          <target state="translated">整数の&lt;em&gt;waitflag&lt;/em&gt;引数が存在する場合、アクションはその値に依存します。ゼロの場合、ロックは待機せずにすぐに取得できる場合にのみ取得されます。ゼロ以外の場合、上記のようにロックは無条件に取得されます。</target>
        </trans-unit>
        <trans-unit id="205ca1ee8e670ddfe86eb319c90becb94497b60e" translate="yes" xml:space="preserve">
          <source>If the internal counter is greater than zero, decrement it by one and return &lt;code&gt;True&lt;/code&gt; immediately. If it is zero, wait until a &lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; is called and return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">内部カウンタが0より大きい場合は、1だけ減らし、すぐに &lt;code&gt;True&lt;/code&gt; を返します。ゼロの場合は、&lt;a href=&quot;#asyncio.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;が呼び出されるまで待機し、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9198aebf4f31811d32099cd373d77078c5c73698" translate="yes" xml:space="preserve">
          <source>If the internal counter is larger than zero on entry, decrement it by one and return &lt;code&gt;True&lt;/code&gt; immediately.</source>
          <target state="translated">入力時に内部カウンターがゼロより大きい場合は、カウンターを1つ減らし、すぐに &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="21e399ee49393f3430f9b48c05c804f297ac4618" translate="yes" xml:space="preserve">
          <source>If the internal counter is zero on entry, block until awoken by a call to &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;. Once awoken (and the counter is greater than 0), decrement the counter by 1 and return &lt;code&gt;True&lt;/code&gt;. Exactly one thread will be awoken by each call to &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;. The order in which threads are awoken should not be relied on.</source>
          <target state="translated">エントリの内部カウンタがゼロの場合、&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; の&lt;/a&gt;呼び出しによって起こされるまでブロックします。目覚めたら（そしてカウンターが0より大きい場合）、カウンターを1だけ減らし、 &lt;code&gt;True&lt;/code&gt; を返します。&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; を&lt;/a&gt;呼び出すたびに、正確に1つのスレッドが起こされます。スレッドが起こされる順序に依存すべきではありません。</target>
        </trans-unit>
        <trans-unit id="9ae60cc570833d155b59d2cc8b8afcbadf08444b" translate="yes" xml:space="preserve">
          <source>If the internal limits of the C version are exceeded, constructing a decimal raises &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Cバージョンの内部制限を超えている場合、10進数を作成すると&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="8ffeab8a7c96e27484e303216d68be0fc6343fa6" translate="yes" xml:space="preserve">
          <source>If the interpreter would have been started with &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, the sample would have printed &lt;code&gt;c_long(1)&lt;/code&gt;, or &lt;code&gt;c_long(2)&lt;/code&gt; if &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt; would have been specified.</source>
          <target state="translated">インタープリターが&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;で開始された場合、サンプルは &lt;code&gt;c_long(1)&lt;/code&gt; を出力し、 &lt;code&gt;c_long(2)&lt;/code&gt; が指定された場合は&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;（2）を出力します。</target>
        </trans-unit>
        <trans-unit id="fd1ebc0356b70021a18986beb6098d967d806f05" translate="yes" xml:space="preserve">
          <source>If the interpreter would have been started with &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, the sample would have printed &lt;code&gt;c_long(1)&lt;/code&gt;, or &lt;code&gt;c_long(2)&lt;/code&gt; if &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt; would have been specified.</source>
          <target state="translated">インタプリタが&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;で開始された場合、サンプルは &lt;code&gt;c_long(1)&lt;/code&gt; を出力し、 &lt;code&gt;c_long(2)&lt;/code&gt; が指定された場合は&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;（2）を出力します。</target>
        </trans-unit>
        <trans-unit id="7ef843c9a43f59994d3da2c5e8418b405453ca10" translate="yes" xml:space="preserve">
          <source>If the key already exists, this function opens the existing key.</source>
          <target state="translated">既にキーが存在する場合、この関数は既存のキーを開きます。</target>
        </trans-unit>
        <trans-unit id="509b60b16f13bbedfe1f6d9e50bffcd673298294" translate="yes" xml:space="preserve">
          <source>If the key is not on the reflection list, the function succeeds but has no effect. Disabling reflection for a key does not affect reflection of any subkeys.</source>
          <target state="translated">キーが反映リストにない場合、この関数は成功しますが、何の効果もありません。キーの反射を無効にしても、サブキーの反射には影響しません。</target>
        </trans-unit>
        <trans-unit id="930e9f6ed338a6954d9cbd0e2a7335e5749df5c2" translate="yes" xml:space="preserve">
          <source>If the key specified by the &lt;em&gt;sub_key&lt;/em&gt; parameter does not exist, the SetValue function creates it.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt;パラメータで指定されたキーが存在しない場合、SetValue関数がそれを作成します。</target>
        </trans-unit>
        <trans-unit id="7f0fd305b3a1c159e43727b6d7cbb51944be9b83" translate="yes" xml:space="preserve">
          <source>If the listener object uses a socket then &lt;em&gt;backlog&lt;/em&gt; (1 by default) is passed to the &lt;a href=&quot;socket#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; method of the socket once it has been bound.</source>
          <target state="translated">リスナーオブジェクトがソケットを使用する場合、バインドされると、&lt;em&gt;バックログ&lt;/em&gt;（デフォルトでは1）がソケットの&lt;a href=&quot;socket#socket.socket.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt;メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="4fcbb3ff56b47c3934c001b5fdf01a88c7f7abf9" translate="yes" xml:space="preserve">
          <source>If the lock is &lt;em&gt;unlocked&lt;/em&gt;, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">ロックが&lt;em&gt;ロック解除される&lt;/em&gt;と、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="0cd48a8f0e050bbf8d1af3c021ed42cd478aed78" translate="yes" xml:space="preserve">
          <source>If the locking flags &lt;a href=&quot;os#os.O_SHLOCK&quot;&gt;&lt;code&gt;O_SHLOCK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.O_EXLOCK&quot;&gt;&lt;code&gt;O_EXLOCK&lt;/code&gt;&lt;/a&gt; are present in the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module (on BSD only), the &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; function provides an alternative to the &lt;a href=&quot;#fcntl.lockf&quot;&gt;&lt;code&gt;lockf()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fcntl.flock&quot;&gt;&lt;code&gt;flock()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">ロックフラグ&lt;a href=&quot;os#os.O_SHLOCK&quot;&gt; &lt;code&gt;O_SHLOCK&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;os#os.O_EXLOCK&quot;&gt; &lt;code&gt;O_EXLOCK&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールに存在する場合（BSDのみ）、&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;関数は、&lt;a href=&quot;#fcntl.lockf&quot;&gt; &lt;code&gt;lockf()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#fcntl.flock&quot;&gt; &lt;code&gt;flock()&lt;/code&gt; &lt;/a&gt;関数の代替手段を提供します。</target>
        </trans-unit>
        <trans-unit id="266c606d27bf00d6844ea3d600920e9ed72976cd" translate="yes" xml:space="preserve">
          <source>If the message id for &lt;em&gt;context&lt;/em&gt; is not found in the catalog, and a fallback is specified, the request is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.npgettext&quot;&gt;&lt;code&gt;npgettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, when &lt;em&gt;n&lt;/em&gt; is 1 &lt;em&gt;singular&lt;/em&gt; is returned, and &lt;em&gt;plural&lt;/em&gt; is returned in all other cases.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;のメッセージID がカタログで見つからず、フォールバックが指定されている場合、リクエストはフォールバックの&lt;a href=&quot;#gettext.npgettext&quot;&gt; &lt;code&gt;npgettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合、&lt;em&gt;n&lt;/em&gt;が1の&lt;em&gt;場合&lt;/em&gt;は&lt;em&gt;単数&lt;/em&gt;が返され、それ以外の場合は&lt;em&gt;複数&lt;/em&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="83b4d9a88e07f7820cdb0b2639ae3a66c2f8ddbd" translate="yes" xml:space="preserve">
          <source>If the message id is not found in the catalog, and a fallback is specified, the request is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, when &lt;em&gt;n&lt;/em&gt; is 1 &lt;em&gt;singular&lt;/em&gt; is returned, and &lt;em&gt;plural&lt;/em&gt; is returned in all other cases.</source>
          <target state="translated">メッセージIDがカタログで見つからず、フォールバックが指定されている場合、リクエストはフォールバックの&lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;メソッドに転送されます。それ以外の場合、&lt;em&gt;n&lt;/em&gt;が1の&lt;em&gt;場合&lt;/em&gt;は&lt;em&gt;単数&lt;/em&gt;が返され、それ以外の場合は&lt;em&gt;複数&lt;/em&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="84aa620a75940f54a9d2650b7be09bf90a61d67a" translate="yes" xml:space="preserve">
          <source>If the message is a &lt;code&gt;multipart/alternative&lt;/code&gt;, create a new message object, pass all of the arguments to its &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method, and &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; it to the &lt;code&gt;multipart&lt;/code&gt;. If the message is a non-&lt;code&gt;multipart&lt;/code&gt; or &lt;code&gt;multipart/related&lt;/code&gt;, call &lt;a href=&quot;#email.message.EmailMessage.make_alternative&quot;&gt;&lt;code&gt;make_alternative()&lt;/code&gt;&lt;/a&gt; and then proceed as above. If the message is any other type of &lt;code&gt;multipart&lt;/code&gt;, raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;content_manager&lt;/em&gt; is not specified, use the &lt;code&gt;content_manager&lt;/code&gt; specified by the current &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メッセージが &lt;code&gt;multipart/alternative&lt;/code&gt; の場合は、新しいメッセージオブジェクトを作成し、すべての引数を&lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;メソッドに渡し、&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;して &lt;code&gt;multipart&lt;/code&gt; に渡します。メッセージが非 &lt;code&gt;multipart&lt;/code&gt; または &lt;code&gt;multipart/related&lt;/code&gt; の場合は、&lt;a href=&quot;#email.message.EmailMessage.make_alternative&quot;&gt; &lt;code&gt;make_alternative()&lt;/code&gt; &lt;/a&gt;を呼び出してから上記の手順を実行します。メッセージが他のタイプの &lt;code&gt;multipart&lt;/code&gt; 場合は、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を送出し&lt;/a&gt;ます。&lt;em&gt;content_manager&lt;/em&gt;が指定されていない場合は、現在の&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;指定されている &lt;code&gt;content_manager&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0b6c62590a9b06138d696cdbccce215f1bf1d175" translate="yes" xml:space="preserve">
          <source>If the message is a &lt;code&gt;multipart/mixed&lt;/code&gt;, create a new message object, pass all of the arguments to its &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method, and &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; it to the &lt;code&gt;multipart&lt;/code&gt;. If the message is a non-&lt;code&gt;multipart&lt;/code&gt;, &lt;code&gt;multipart/related&lt;/code&gt;, or &lt;code&gt;multipart/alternative&lt;/code&gt;, call &lt;a href=&quot;#email.message.EmailMessage.make_mixed&quot;&gt;&lt;code&gt;make_mixed()&lt;/code&gt;&lt;/a&gt; and then proceed as above. If &lt;em&gt;content_manager&lt;/em&gt; is not specified, use the &lt;code&gt;content_manager&lt;/code&gt; specified by the current &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt;. If the added part has no &lt;em&gt;Content-Disposition&lt;/em&gt; header, add one with the value &lt;code&gt;attachment&lt;/code&gt;. This method can be used both for explicit attachments (&lt;em&gt;Content-Disposition: attachment&lt;/em&gt;) and &lt;code&gt;inline&lt;/code&gt; attachments (&lt;em&gt;Content-Disposition: inline&lt;/em&gt;), by passing appropriate options to the &lt;code&gt;content_manager&lt;/code&gt;.</source>
          <target state="translated">メッセージが &lt;code&gt;multipart/mixed&lt;/code&gt; の場合は、新しいメッセージオブジェクトを作成し、すべての引数を&lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;メソッドに渡し、&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;して &lt;code&gt;multipart&lt;/code&gt; に渡します。メッセージが非 &lt;code&gt;multipart&lt;/code&gt; 、 &lt;code&gt;multipart/related&lt;/code&gt; 、または &lt;code&gt;multipart/alternative&lt;/code&gt; の場合は、&lt;a href=&quot;#email.message.EmailMessage.make_mixed&quot;&gt; &lt;code&gt;make_mixed()&lt;/code&gt; &lt;/a&gt;を呼び出してから上記の手順に進みます。&lt;em&gt;content_manager&lt;/em&gt;が指定されていない場合は、現在の&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;指定されている &lt;code&gt;content_manager&lt;/code&gt; を使用します。追加されたパーツに&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーがない場合は、値が &lt;code&gt;attachment&lt;/code&gt; のヘッダーを追加します&lt;em&gt;&lt;/em&gt;。このメソッドは、適切なオプションを &lt;code&gt;content_manager&lt;/code&gt; に渡すことにより、明示的な添付ファイル（&lt;em&gt;Content-Disposition：attachment&lt;/em&gt;）と &lt;code&gt;inline&lt;/code&gt; 添付ファイル（&lt;em&gt;Content-Disposition：inline&lt;/em&gt;）の両方に使用できます。</target>
        </trans-unit>
        <trans-unit id="242ebb9aa3a221a1cc2e7cc02579fdb6a91649b7" translate="yes" xml:space="preserve">
          <source>If the message is a &lt;code&gt;multipart/related&lt;/code&gt;, create a new message object, pass all of the arguments to its &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method, and &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;attach()&lt;/code&gt;&lt;/a&gt; it to the &lt;code&gt;multipart&lt;/code&gt;. If the message is a non-&lt;code&gt;multipart&lt;/code&gt;, call &lt;a href=&quot;#email.message.EmailMessage.make_related&quot;&gt;&lt;code&gt;make_related()&lt;/code&gt;&lt;/a&gt; and then proceed as above. If the message is any other type of &lt;code&gt;multipart&lt;/code&gt;, raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;content_manager&lt;/em&gt; is not specified, use the &lt;code&gt;content_manager&lt;/code&gt; specified by the current &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt;. If the added part has no &lt;em&gt;Content-Disposition&lt;/em&gt; header, add one with the value &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">メッセージが &lt;code&gt;multipart/related&lt;/code&gt; の場合は、新しいメッセージオブジェクトを作成し、すべての引数を&lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;メソッドに渡し、&lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;attach()&lt;/code&gt; &lt;/a&gt;して &lt;code&gt;multipart&lt;/code&gt; に渡します。メッセージが非 &lt;code&gt;multipart&lt;/code&gt; 場合は、&lt;a href=&quot;#email.message.EmailMessage.make_related&quot;&gt; &lt;code&gt;make_related()&lt;/code&gt; &lt;/a&gt;を呼び出してから上記の手順を実行します。メッセージが他のタイプの &lt;code&gt;multipart&lt;/code&gt; 場合は、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を送出し&lt;/a&gt;ます。&lt;em&gt;content_manager&lt;/em&gt;が指定されていない場合は、現在の&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;指定されている &lt;code&gt;content_manager&lt;/code&gt; を使用します。追加されたパーツに&lt;em&gt;Content-Disposition&lt;/em&gt;ヘッダーがない場合は、値 &lt;code&gt;inline&lt;/code&gt; のヘッダーを追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c9d1deafb768d7777ddc466b02dc8f72673a7cf" translate="yes" xml:space="preserve">
          <source>If the message object contains binary data that is not encoded according to RFC standards, the non-compliant data will be replaced by unicode &amp;ldquo;unknown character&amp;rdquo; code points. (See also &lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">メッセージオブジェクトにRFC標準に従ってエンコードされていないバイナリデータが含まれている場合、非準拠のデータはUnicodeの「不明な文字」コードポイントに置き換えられます。（&lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;も参照してください。）</target>
        </trans-unit>
        <trans-unit id="1d471d00aa6a8fd988a0ba607f8c74c947b07502" translate="yes" xml:space="preserve">
          <source>If the method returns &lt;code&gt;False&lt;/code&gt; then the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; was cancelled, i.e. &lt;a href=&quot;#concurrent.futures.Future.cancel&quot;&gt;&lt;code&gt;Future.cancel()&lt;/code&gt;&lt;/a&gt; was called and returned &lt;code&gt;True&lt;/code&gt;. Any threads waiting on the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; completing (i.e. through &lt;a href=&quot;#concurrent.futures.as_completed&quot;&gt;&lt;code&gt;as_completed()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;) will be woken up.</source>
          <target state="translated">メソッドが &lt;code&gt;False&lt;/code&gt; を返した場合、&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;はキャンセルされました。つまり、&lt;a href=&quot;#concurrent.futures.Future.cancel&quot;&gt; &lt;code&gt;Future.cancel()&lt;/code&gt; &lt;/a&gt;が呼び出されて &lt;code&gt;True&lt;/code&gt; が返されました。&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; が&lt;/a&gt;完了するのを（つまり、&lt;a href=&quot;#concurrent.futures.as_completed&quot;&gt; &lt;code&gt;as_completed()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#concurrent.futures.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; を&lt;/a&gt;介して）待機しているスレッドはすべて起こされます。</target>
        </trans-unit>
        <trans-unit id="3cec9785f35a66b9250f6994cb4b5ad2f020d3b4" translate="yes" xml:space="preserve">
          <source>If the method returns &lt;code&gt;True&lt;/code&gt; then the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; was not cancelled and has been put in the running state, i.e. calls to &lt;a href=&quot;#concurrent.futures.Future.running&quot;&gt;&lt;code&gt;Future.running()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">メソッドが &lt;code&gt;True&lt;/code&gt; を返す場合、&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;はキャンセルされておらず、実行状態になっています。つまり、&lt;a href=&quot;#concurrent.futures.Future.running&quot;&gt; &lt;code&gt;Future.running()&lt;/code&gt; &lt;/a&gt;を呼び出すと &lt;code&gt;True&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="fbff94a7b3ccf99de926f202b3c2b1024530b6b5" translate="yes" xml:space="preserve">
          <source>If the method succeeds, the entire key, including all of its values, is removed. If the method fails, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">メソッドが成功すると、すべての値を含むキー全体が削除されます。メソッドが失敗すると、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="0c7e815087343f8292c99aab7ab0f093f5891323" translate="yes" xml:space="preserve">
          <source>If the method succeeds, the server&amp;rsquo;s response is returned. If the server refuses posting, a &lt;a href=&quot;#nntplib.NNTPReplyError&quot;&gt;&lt;code&gt;NNTPReplyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">メソッドが成功すると、サーバーの応答が返されます。サーバーが投稿を拒否すると、&lt;a href=&quot;#nntplib.NNTPReplyError&quot;&gt; &lt;code&gt;NNTPReplyError&lt;/code&gt; &lt;/a&gt;が送出されます。</target>
        </trans-unit>
        <trans-unit id="7153563f652430df4d79eea119afe5c6dc69a83e" translate="yes" xml:space="preserve">
          <source>If the mock has an explicit &lt;em&gt;return_value&lt;/em&gt; set then calls are not passed to the wrapped object and the &lt;em&gt;return_value&lt;/em&gt; is returned instead.</source>
          <target state="translated">モックに明示的な&lt;em&gt;return_valueが&lt;/em&gt;設定されている場合、呼び出しはラップされたオブジェクトに渡されず、代わりに&lt;em&gt;return_value&lt;/em&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="45919ac1b7a80b5e3b67f287a2f90644613d8e96" translate="yes" xml:space="preserve">
          <source>If the module or package is accessible via the normal import mechanism, a wrapper around the relevant part of that machinery is returned. Returns &lt;code&gt;None&lt;/code&gt; if the module cannot be found or imported. If the named module is not already imported, its containing package (if any) is imported, in order to establish the package &lt;code&gt;__path__&lt;/code&gt;.</source>
          <target state="translated">通常のインポートメカニズムを介してモジュールまたはパッケージにアクセスできる場合、その機構の関連部分のラッパーが返されます。モジュールが見つからないかインポートできない場合は、 &lt;code&gt;None&lt;/code&gt; を返します。名前付きモジュールがまだインポートされていない場合は、パッケージ &lt;code&gt;__path__&lt;/code&gt; を確立するために、含まれているパッケージ（存在する場合）がインポートされます。</target>
        </trans-unit>
        <trans-unit id="51e5842707c11d94e17db137bb67b47236a037bf" translate="yes" xml:space="preserve">
          <source>If the name is used as the target of a function or class statement, this will be true.</source>
          <target state="translated">関数やクラス文のターゲットとして名前が使われている場合、これは真になります。</target>
        </trans-unit>
        <trans-unit id="cc0362f1195e807cb7d35fcee8c326c2a06bfad6" translate="yes" xml:space="preserve">
          <source>If the named module is in a package, that package is imported as a side effect of invoking this function.</source>
          <target state="translated">指定されたモジュールがパッケージ内にある場合、そのパッケージはこの関数を呼び出した副作用としてインポートされます。</target>
        </trans-unit>
        <trans-unit id="9189c0d6152e209a08169bddf71ad00af16f14e9" translate="yes" xml:space="preserve">
          <source>If the new limit is too low at the current recursion depth, a &lt;a href=&quot;exceptions#RecursionError&quot;&gt;&lt;code&gt;RecursionError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">現在の再帰の深さで新しい制限が低すぎる場合、&lt;a href=&quot;exceptions#RecursionError&quot;&gt; &lt;code&gt;RecursionError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="8460feb89a7b7829874aae5225965d9b87e2ad34" translate="yes" xml:space="preserve">
          <source>If the normalized value of days lies outside the indicated range, &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">日数の正規化された値が示された範囲外にある場合、&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="588410c54abe56967f1464e64a03d18c20cd3967" translate="yes" xml:space="preserve">
          <source>If the object does not provide &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, the function tries its best to gather information from the object&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute, if defined, and from its type object. The resulting list is not necessarily complete, and may be inaccurate when the object has a custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;提供しない場合、関数はオブジェクトの&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性（定義されている場合）およびその型オブジェクトから情報を収集するために最善を尽くします。結果のリストは完全である必要はなく、オブジェクトにカスタムの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;がある場合は不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="05bbe2559834e2f6af2c3f6c9eb444fb9f753c6a" translate="yes" xml:space="preserve">
          <source>If the object does not provide &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, the function tries its best to gather information from the object&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute, if defined, and from its type object. The resulting list is not necessarily complete, and may be inaccurate when the object has a custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトが&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;提供しない場合、関数は、定義されている場合はオブジェクトの&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性、およびその型オブジェクトから情報を収集するために最善を尽くします。結果のリストは必ずしも完全ではなく、オブジェクトにカスタム&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;がある場合は不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="00cb3870e9b06174890128e7e72fbdcdb2084f55" translate="yes" xml:space="preserve">
          <source>If the object has a method named &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, this method will be called and must return the list of attributes. This allows objects that implement a custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; function to customize the way &lt;a href=&quot;#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; reports their attributes.</source>
          <target state="translated">オブジェクトに&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;という名前のメソッドがある場合、このメソッドが呼び出され、属性のリストを返す必要があります。これにより、カスタムの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;関数を実装するオブジェクトが、&lt;a href=&quot;#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;が属性を報告する方法をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="90be18a105f4b897e5b361feac130f50b2b05c2c" translate="yes" xml:space="preserve">
          <source>If the object has a method named &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, this method will be called and must return the list of attributes. This allows objects that implement a custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; function to customize the way &lt;a href=&quot;#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; reports their attributes.</source>
          <target state="translated">オブジェクトに&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;という名前のメソッドがある場合、このメソッドが呼び出され、属性のリストを返す必要があります。これにより、カスタム&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;関数を実装するオブジェクトは、&lt;a href=&quot;#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;が属性を報告する方法をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="6efa5f83d57e360fb04084d7429ce45f6b697027" translate="yes" xml:space="preserve">
          <source>If the object is a module object, the list contains the names of the module&amp;rsquo;s attributes.</source>
          <target state="translated">オブジェクトがモジュールオブジェクトの場合、リストにはモジュールの属性の名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="7573a086962ae326425c85210e2af2f83614b6a3" translate="yes" xml:space="preserve">
          <source>If the object is a type or class object, the list contains the names of its attributes, and recursively of the attributes of its bases.</source>
          <target state="translated">オブジェクトが型やクラスのオブジェクトである場合、リストはその属性の名前と、そのベースの属性の再帰的な名前を含みます。</target>
        </trans-unit>
        <trans-unit id="2997ac7e88144e3d7c1c1886f52b5f3da5581222" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;infile&lt;/code&gt; and &lt;code&gt;outfile&lt;/code&gt; arguments are not specified, &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; will be used respectively:</source>
          <target state="translated">オプションの &lt;code&gt;infile&lt;/code&gt; および &lt;code&gt;outfile&lt;/code&gt; 引数が指定されていない場合、それぞれ&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="549e746dc68c5d98d85de52964752ff8fe6a8117" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;allow_dotted_names&lt;/em&gt; argument is true and the instance does not have a &lt;code&gt;_dispatch()&lt;/code&gt; method, then if the requested method name contains periods, each component of the method name is searched for individually, with the effect that a simple hierarchical search is performed. The value found from this search is then called with the parameters from the request, and the return value is passed back to the client.</source>
          <target state="translated">オプションの&lt;em&gt;allow_dotted_names&lt;/em&gt;引数がtrueでインスタンスに &lt;code&gt;_dispatch()&lt;/code&gt; メソッドがない場合、リクエストされたメソッド名にピリオドが含まれていると、メソッド名の各コンポーネントが個別に検索され、単純な階層検索が実行されます。次に、この検索で​​見つかった値がリクエストのパラメーターで呼び出され、戻り値がクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="77cf8956342ad1c505b15b2821104ecf26fa5b1d" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;graph&lt;/em&gt; argument is provided it must be a dictionary representing a directed acyclic graph where the keys are nodes and the values are iterables of all predecessors of that node in the graph (the nodes that have edges that point to the value in the key). Additional nodes can be added to the graph using the &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">オプションの&lt;em&gt;グラフ&lt;/em&gt;引数を指定する場合は、キーがノードであり、値がグラフ内のそのノードのすべての先行ノード（キー内の値を指すエッジを持つノード）の反復可能である有向非巡回グラフを表すディクショナリである必要があります。 ）。&lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、追加のノードをグラフに追加できます。</target>
        </trans-unit>
        <trans-unit id="7bf594fe9f1e866693d0d56f18167c8228362f08" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;em&gt;exclude_empty&lt;/em&gt; is false, then &lt;a href=&quot;#doctest.DocTestFinder.find&quot;&gt;&lt;code&gt;DocTestFinder.find()&lt;/code&gt;&lt;/a&gt; will include tests for objects with empty docstrings.</source>
          <target state="translated">オプションの引数&lt;em&gt;exclude_empty&lt;/em&gt;がfalseの場合、&lt;a href=&quot;#doctest.DocTestFinder.find&quot;&gt; &lt;code&gt;DocTestFinder.find()&lt;/code&gt; &lt;/a&gt;は空のdocstringを持つオブジェクトのテストを含めます。</target>
        </trans-unit>
        <trans-unit id="4dda0a6681904db033d6436f3b4c07ed02a5cd5c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;em&gt;recurse&lt;/em&gt; is false, then &lt;a href=&quot;#doctest.DocTestFinder.find&quot;&gt;&lt;code&gt;DocTestFinder.find()&lt;/code&gt;&lt;/a&gt; will only examine the given object, and not any contained objects.</source>
          <target state="translated">オプションの引数&lt;em&gt;recurse&lt;/em&gt;がfalseの場合、&lt;a href=&quot;#doctest.DocTestFinder.find&quot;&gt; &lt;code&gt;DocTestFinder.find()&lt;/code&gt; &lt;/a&gt;は指定されたオブジェクトのみを検査し、含まれているオブジェクトは検査しません。</target>
        </trans-unit>
        <trans-unit id="87f9d738288c72fc56cefc596ae3035e04fd6c01" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), the method blocks until the process whose &lt;a href=&quot;#multiprocessing.Process.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method is called terminates. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds. Note that the method returns &lt;code&gt;None&lt;/code&gt; if its process terminates or if the method times out. Check the process&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt;&lt;code&gt;exitcode&lt;/code&gt;&lt;/a&gt; to determine if it terminated.</source>
          <target state="translated">オプションの引数&lt;em&gt;timeout&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、&lt;a href=&quot;#multiprocessing.Process.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたプロセスが終了するまで、メソッドはブロックされます。&lt;em&gt;timeout&lt;/em&gt;が正の数の場合、最大で&lt;em&gt;timeout&lt;/em&gt;秒ブロックされます。プロセスが終了した場合、またはメソッドがタイムアウトした場合、メソッドは &lt;code&gt;None&lt;/code&gt; を返すことに注意してください。プロセスの終了&lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt; &lt;code&gt;exitcode&lt;/code&gt; &lt;/a&gt;を調べて、プロセスが終了したかどうかを判別してください。</target>
        </trans-unit>
        <trans-unit id="907e323a441ade6004f0f9b1d15889b1a6cbc0b5" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;em&gt;max_length&lt;/em&gt; is non-zero then the return value will be no longer than &lt;em&gt;max_length&lt;/em&gt;. This may mean that not all of the compressed input can be processed; and unconsumed data will be stored in the attribute &lt;a href=&quot;#zlib.Decompress.unconsumed_tail&quot;&gt;&lt;code&gt;unconsumed_tail&lt;/code&gt;&lt;/a&gt;. This bytestring must be passed to a subsequent call to &lt;a href=&quot;#zlib.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; if decompression is to continue. If &lt;em&gt;max_length&lt;/em&gt; is zero then the whole input is decompressed, and &lt;a href=&quot;#zlib.Decompress.unconsumed_tail&quot;&gt;&lt;code&gt;unconsumed_tail&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">オプションのパラメーター&lt;em&gt;max_length&lt;/em&gt;がゼロ以外の場合、戻り値は&lt;em&gt;max_length&lt;/em&gt;以下になります。これは、圧縮された入力のすべてを処理できるわけではないことを意味する場合があります。消費されなかったデータは、属性&lt;a href=&quot;#zlib.Decompress.unconsumed_tail&quot;&gt; &lt;code&gt;unconsumed_tail&lt;/code&gt; に&lt;/a&gt;格納されます。解凍を続行する場合は、このバイト文字列を&lt;a href=&quot;#zlib.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;への後続の呼び出しに渡す必要があります。場合&lt;em&gt;MAX_LENGTHが&lt;/em&gt;ゼロである全ての入力が解凍され、され&lt;a href=&quot;#zlib.Decompress.unconsumed_tail&quot;&gt; &lt;code&gt;unconsumed_tail&lt;/code&gt; 属性は&lt;/a&gt;空です。</target>
        </trans-unit>
        <trans-unit id="1d1a61b6065550962e0f197aa4aa509c70c359be" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;em&gt;mu&lt;/em&gt; is given, it is typically the mean of the &lt;em&gt;data&lt;/em&gt;. It can also be used to compute the second moment around a point that is not the mean. If it is missing or &lt;code&gt;None&lt;/code&gt; (the default), the arithmetic mean is automatically calculated.</source>
          <target state="translated">オプションの2番目の引数&lt;em&gt;mu&lt;/em&gt;が指定されている場合、これは通常、&lt;em&gt;データの&lt;/em&gt;平均です。また、平均ではない点の周りの2次モーメントを計算するためにも使用できます。欠落しているか、 &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、算術平均は自動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="e99c895d04ea8fb9d48b5ad452d4282ff6838cfb" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;em&gt;xbar&lt;/em&gt; is given, it should be the mean of &lt;em&gt;data&lt;/em&gt;. If it is missing or &lt;code&gt;None&lt;/code&gt; (the default), the mean is automatically calculated.</source>
          <target state="translated">オプションの2番目の引数&lt;em&gt;xbar&lt;/em&gt;が指定されている場合、それは&lt;em&gt;データ&lt;/em&gt;の平均でなければなりません。欠落しているか、 &lt;code&gt;None&lt;/code&gt; （デフォルト）の場合、平均は自動的に計算されます。</target>
        </trans-unit>
        <trans-unit id="519de9aef0c2fe8269af8bb45ede63861ec8669a" translate="yes" xml:space="preserve">
          <source>If the package cannot be located or loaded, or it uses a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which does not support &lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;None&lt;/code&gt; is returned. In particular, the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt; does not support &lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パッケージが置かまたはロードされ、またはそれを使用することができない場合は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;、ローダー&lt;/a&gt;をサポートしていません&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; を&lt;/a&gt;、そして &lt;code&gt;None&lt;/code&gt; 返されません。特に、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;名前空間パッケージ&lt;/a&gt;の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;は&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; を&lt;/a&gt;サポートしていません。</target>
        </trans-unit>
        <trans-unit id="2de8d486f783e0a5a20dff7958c406ae1774f7e7" translate="yes" xml:space="preserve">
          <source>If the package cannot be located or loaded, or it uses a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which does not support &lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;None&lt;/code&gt; is returned. In particular, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt; does not support &lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パッケージが置かまたはロードされ、またはそれを使用することができない場合は&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;、ローダー&lt;/a&gt;をサポートしていません&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; を&lt;/a&gt;、そして &lt;code&gt;None&lt;/code&gt; 返されません。特に、&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;名前空間パッケージ&lt;/a&gt;の&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;は&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; を&lt;/a&gt;サポートしていません。</target>
        </trans-unit>
        <trans-unit id="2bf31cbb63bcd5170fdee78792fd311e362a5c3e" translate="yes" xml:space="preserve">
          <source>If the path contains a UNC path, drive will contain the host name and share, up to but not including the fourth separator. e.g. &lt;code&gt;splitdrive(&quot;//host/computer/dir&quot;)&lt;/code&gt; returns &lt;code&gt;(&quot;//host/computer&quot;, &quot;/dir&quot;)&lt;/code&gt;</source>
          <target state="translated">パスにUNCパスが含まれている場合、ドライブにはホスト名と共有が含まれますが、4番目の区切り文字は含まれません。たとえば、 &lt;code&gt;splitdrive(&quot;//host/computer/dir&quot;)&lt;/code&gt; は &lt;code&gt;(&quot;//host/computer&quot;, &quot;/dir&quot;)&lt;/code&gt; 返します</target>
        </trans-unit>
        <trans-unit id="7031f23f71038fb209bf8f54ab8a04e1845013c6" translate="yes" xml:space="preserve">
          <source>If the path contains a drive letter, drive will contain everything up to and including the colon. e.g. &lt;code&gt;splitdrive(&quot;c:/dir&quot;)&lt;/code&gt; returns &lt;code&gt;(&quot;c:&quot;, &quot;/dir&quot;)&lt;/code&gt;</source>
          <target state="translated">パスにドライブ文字が含まれている場合、ドライブにはコロンまでのすべてが含まれます。たとえば、 &lt;code&gt;splitdrive(&quot;c:/dir&quot;)&lt;/code&gt; は &lt;code&gt;(&quot;c:&quot;, &quot;/dir&quot;)&lt;/code&gt; 返します</target>
        </trans-unit>
        <trans-unit id="af52da286f518b1289952aa6209b0505b4fe92ec" translate="yes" xml:space="preserve">
          <source>If the path doesn&amp;rsquo;t exist and &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is raised. If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the path is resolved as far as possible and any remainder is appended without checking whether it exists. If an infinite loop is encountered along the resolution path, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">パスが存在せず、&lt;em&gt;strict&lt;/em&gt;が &lt;code&gt;True&lt;/code&gt; の場合、&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;が発生します。場合&lt;em&gt;厳密で&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、パスが可能な限り解決され、任意の残りの部分は、それが存在するかどうかをチェックせずに添付されています。解決パスに沿って無限ループが発生すると、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="40dbde78914080d45949f61923851c99159b5b52" translate="yes" xml:space="preserve">
          <source>If the path points to a symlink, &lt;a href=&quot;#pathlib.Path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt; returns whether the symlink &lt;em&gt;points to&lt;/em&gt; an existing file or directory.</source>
          <target state="translated">パスがシンボリックリンクを指している場合、&lt;a href=&quot;#pathlib.Path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;はシンボリックリンクが既存のファイルまたはディレクトリを&lt;em&gt;指して&lt;/em&gt;いるかどうかを返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
