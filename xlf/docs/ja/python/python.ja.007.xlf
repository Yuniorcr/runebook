<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="5f21abc5483fdb8f08f53be6b64d18d0cc42bc13" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function now sleeps at least &lt;em&gt;secs&lt;/em&gt; even if the sleep is interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">バージョン3.5で変更：シグナルハンドラーが例外を発生させた場合を除き、スリープによってシグナルが中断された場合でも、関数は少なくとも数&lt;em&gt;秒&lt;/em&gt;スリープします（根拠については&lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="c4d97776a79f59211ce60e8fb10f881e5ed7b91b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The index() method added support for &lt;em&gt;stop&lt;/em&gt; and &lt;em&gt;start&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.5で変更：index（）メソッドは、&lt;em&gt;stop&lt;/em&gt;および&lt;em&gt;start&lt;/em&gt;引数のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="da05a825d634de68f59da743c4d2a7f5ce5035ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The items, keys, and values &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt; of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; now support reverse iteration using &lt;a href=&quot;functions#reversed&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.5で変更：&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;の項目、キー、および値の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;ビュー&lt;/a&gt;は、&lt;a href=&quot;functions#reversed&quot;&gt; &lt;code&gt;reversed()&lt;/code&gt; &lt;/a&gt;を使用した逆反復をサポートするようになりました。</target>
        </trans-unit>
        <trans-unit id="79c57cbd4804445828ab5e973eb271929cf25d89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The method now waits until the connection completes instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception if the connection is interrupted by a signal, the signal handler doesn&amp;rsquo;t raise an exception and the socket is blocking or has a timeout (see the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">バージョン3.5で変更：このメソッドは、接続がシグナルによって中断された場合、&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;例外を発生させる代わりに、接続が完了するまで待機します。シグナルハンドラーは例外を発生させず、ソケットはブロックされているか、タイムアウトします（&lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEPを&lt;/strong&gt;&lt;/a&gt;参照）根拠には&lt;strong&gt;475&lt;/strong&gt;）。</target>
        </trans-unit>
        <trans-unit id="4df2146f3dca6cd39d3b1ddb4d8142081fd1d651" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The optional &lt;em&gt;globals&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.5で変更：オプションの&lt;em&gt;globals&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="65762040faae1031458237f8c5a0b6b7f2da4c2d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The output is now in the same order as the input. Use the &lt;a href=&quot;#cmdoption-json-tool-sort-keys&quot;&gt;&lt;code&gt;--sort-keys&lt;/code&gt;&lt;/a&gt; option to sort the output of dictionaries alphabetically by key.</source>
          <target state="translated">バージョン3.5で変更：出力が入力と同じ順序になりました。&lt;a href=&quot;#cmdoption-json-tool-sort-keys&quot;&gt; &lt;code&gt;--sort-keys&lt;/code&gt; &lt;/a&gt;オプションを使用して、辞書の出力をキーのアルファベット順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="14f5a37d0372dc4586c6852ae047240ef6dcd7cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The selector is now retried with a recomputed timeout when interrupted by a signal if the signal handler did not raise an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of returning an empty list of events before the timeout.</source>
          <target state="translated">バージョン3.5で変更：セレクターは、タイムアウトの前にイベントの空のリストを返す代わりに、シグナルハンドラーが例外を発生させなかった場合（根拠については&lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt;を参照）、シグナルによって中断されると、再計算されたタイムアウトで再試行されるようになりました。</target>
        </trans-unit>
        <trans-unit id="0e17fb2eaeba3a82cc077a4c48b27254e7f2f05f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration of the handshake.</source>
          <target state="translated">バージョン 3.5 で変更:バイトを受信または送信するたびにソケットのタイムアウトがリセットされなくなりました。ソケットタイムアウトはハンドシェイクの合計時間の最大値になりました。</target>
        </trans-unit>
        <trans-unit id="4e50df90065c82bdb3626de39980dee462f8e777" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration to read up to &lt;em&gt;len&lt;/em&gt; bytes.</source>
          <target state="translated">バージョン3.5で変更：バイトが受信または送信されるたびにソケットタイムアウトがリセットされなくなりました。ソケットのタイムアウトは、最大で&lt;em&gt;len&lt;/em&gt;バイトまでの合計読み取り時間になりました。</target>
        </trans-unit>
        <trans-unit id="1de2fd5869036090f8eb1cf871d89f7fafacf169" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration to write &lt;em&gt;buf&lt;/em&gt;.</source>
          <target state="translated">バージョン3.5で変更：バイトが受信または送信されるたびにソケットタイムアウトがリセットされなくなりました。ソケットのタイムアウトが&lt;em&gt;buf&lt;/em&gt;を書き込むための最大合計時間になりました。</target>
        </trans-unit>
        <trans-unit id="514beb65bbe6ff9a06ba2a38366dda7a2557951e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time data is sent successfully. The socket timeout is now the maximum total duration to send all data.</source>
          <target state="translated">バージョン 3.5 で変更:データ送信が成功するたびにソケットのタイムアウトがリセットされなくなりました。ソケットタイムアウトは、すべてのデータを送信するための最大合計時間になりました。</target>
        </trans-unit>
        <trans-unit id="dd4666543dddf9a156068418751783136c794b54" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The source format is no longer restricted when casting to a byte view.</source>
          <target state="translated">バージョン 3.5 で変更:バイトビューへのキャスト時にソース形式が制限されなくなりました。</target>
        </trans-unit>
        <trans-unit id="4d57e4cac6c885d69fdf75a22765a130f12387e2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The undocumented and unofficial &lt;em&gt;use_load_tests&lt;/em&gt; default argument is deprecated and ignored, although it is still accepted for backward compatibility. The method also now accepts a keyword-only argument &lt;em&gt;pattern&lt;/em&gt; which is passed to &lt;code&gt;load_tests&lt;/code&gt; as the third argument.</source>
          <target state="translated">バージョン3.5で変更：ドキュメント化されて&lt;em&gt;おらず&lt;/em&gt;、非公式の&lt;em&gt;use_load_tests&lt;/em&gt;デフォルト引数は非推奨であり、無視されますが、下位互換性のために引き続き受け入れられます。このメソッドは、 &lt;code&gt;load_tests&lt;/code&gt; に3番目の引数として渡されるキーワードのみの引数&lt;em&gt;パターン&lt;/em&gt;も受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="8b88b8d6709ad625a1f3eb3bb0dd276a8e190ee2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The use of &lt;code&gt;venv&lt;/code&gt; is now recommended for creating virtual environments.</source>
          <target state="translated">バージョン3.5で変更：仮想環境の作成に &lt;code&gt;venv&lt;/code&gt; の使用が推奨されるようになりました。</target>
        </trans-unit>
        <trans-unit id="dd45381ddd7cbadd6ee2256342ae20ba6240a7c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The value is no longer dependent on &lt;code&gt;__debug__&lt;/code&gt;.</source>
          <target state="translated">バージョン3.5で変更：値は &lt;code&gt;__debug__&lt;/code&gt; に依存しなくなりました。</target>
        </trans-unit>
        <trans-unit id="df3b7d6c5ffd76afee4cfb5c246fb0244f9f3b1d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: This function now calls &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;os.scandir()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;, making it faster by reducing the number of calls to &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.5で変更：この関数は&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;os.scandir()&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt;を呼び出すようになり、&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; の&lt;/a&gt;呼び出し回数を減らすことで高速化しました。</target>
        </trans-unit>
        <trans-unit id="2cd23e59766668dee39e931d3c5c18d703eb5790" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Unmatched groups are replaced with an empty string.</source>
          <target state="translated">バージョン3.5で変更されました:一致しないグループは空の文字列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="90d14ca1e7a86c6e1aa111ee26ab80044466c4d0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows now returns the file index as &lt;a href=&quot;#os.stat_result.st_ino&quot;&gt;&lt;code&gt;st_ino&lt;/code&gt;&lt;/a&gt; when available.</source>
          <target state="translated">バージョン3.5で変更：Windowsは、利用可能な場合、ファイルインデックスを&lt;a href=&quot;#os.stat_result.st_ino&quot;&gt; &lt;code&gt;st_ino&lt;/code&gt; &lt;/a&gt;として返すようになりました。</target>
        </trans-unit>
        <trans-unit id="2455c48396e9048bec5df8b41196f12b69e2c0a9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows support added.</source>
          <target state="translated">バージョン3.5での変更点:Windows対応を追加しました。</target>
        </trans-unit>
        <trans-unit id="a75d4cab65a904ada83fc80cdf323b0859864ba3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows will now zero-fill files when extending.</source>
          <target state="translated">バージョン 3.5 で変更:Windows が拡張時にファイルをゼロフィルするようになりました。</target>
        </trans-unit>
        <trans-unit id="2bf35f5c0b06d57f477a6074d4165c5861508ac8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is now accepted.</source>
          <target state="translated">バージョン3.5で変更：書き込み可能な&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;が受け入れられます。</target>
        </trans-unit>
        <trans-unit id="781ff19f4da9469731f10cab675e57e1a67651fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: an error is raised for invalid keys.</source>
          <target state="translated">バージョン 3.5 で変更:無効なキーに対してエラーが発生するようになりました。</target>
        </trans-unit>
        <trans-unit id="e08b287047b68e950f3b70fddd2fd42a808f85b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: memoryviews can now be indexed with tuple of integers.</source>
          <target state="translated">バージョン 3.5 で変更:メモリビューを整数のタプルでインデックス化できるようになりました。</target>
        </trans-unit>
        <trans-unit id="4de420d68c43105170ced7ec47395947ed5c63e4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: return a Morsel object instead of a dict.</source>
          <target state="translated">バージョン 3.5 で変更されました:dict の代わりに Morsel オブジェクトを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="8141eda3cc928d8c1a170240e88d9a76b94d4872" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: signal (SIG*), handler (&lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_IGN&quot;&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;/a&gt;) and sigmask (&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;/a&gt;) related constants listed below were turned into &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enums&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#signal.getsignal&quot;&gt;&lt;code&gt;getsignal()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.sigpending&quot;&gt;&lt;code&gt;sigpending()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#signal.sigwait&quot;&gt;&lt;code&gt;sigwait()&lt;/code&gt;&lt;/a&gt; functions return human-readable &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enums&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.5で変更：シグナル（SIG *）、ハンドラー（&lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIG_IGN&quot;&gt; &lt;code&gt;SIG_IGN&lt;/code&gt; &lt;/a&gt;）およびsigmask（&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt; &lt;code&gt;SIG_BLOCK&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt; &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt; &lt;code&gt;SIG_SETMASK&lt;/code&gt; &lt;/a&gt;）に関連する以下の定数が列挙&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enums&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#signal.getsignal&quot;&gt; &lt;code&gt;getsignal()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#signal.sigpending&quot;&gt; &lt;code&gt;sigpending()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#signal.sigwait&quot;&gt; &lt;code&gt;sigwait()&lt;/code&gt; &lt;/a&gt;関数は、人間が読める&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enums&lt;/code&gt; &lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="467469d597a955220930d635afd411d497f2b551" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: string usernames and passwords are now encoded to &lt;code&gt;utf-8&lt;/code&gt; instead of being limited to ASCII.</source>
          <target state="translated">バージョン3.5で変更：文字列のユーザー名とパスワードは、ASCIIに限定されるのではなく、 &lt;code&gt;utf-8&lt;/code&gt; にエンコードされるようになりました。</target>
        </trans-unit>
        <trans-unit id="c4703595cbc94b658dbf457977e01f8dfb58ccfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.</source>
          <target state="translated">バージョン3.6で変更。</target>
        </trans-unit>
        <trans-unit id="33c68bc30b0eb278dd1c90631136da54fcb004b1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.0: On Linux, &lt;code&gt;getrandom()&lt;/code&gt; is now used in blocking mode to increase the security.</source>
          <target state="translated">バージョン3.6.0で変更：Linuxでは、 &lt;code&gt;getrandom()&lt;/code&gt; がブロックモードで使用され、セキュリティが向上しています。</target>
        </trans-unit>
        <trans-unit id="dde59447fb0b1c0d10529b755056cb84bb2339b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.1: Added support for default values, methods, and docstrings.</source>
          <target state="translated">バージョン 3.6.1 で変更。デフォルト値、メソッド、docstringのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="534b88d9ec35ce43c4c4ff16164bbebe4f19d1a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;file&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6.2で変更：&lt;em&gt;file&lt;/em&gt;パラメータは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="39aa3b49c9ac294c623640b7f29bc7454d56c306" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;filename&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6.2で変更：&lt;em&gt;filename&lt;/em&gt;パラメータは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="6a61102e29a9c9dbe5d79d04be77cc22257f9a1c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6.2で変更：&lt;em&gt;path&lt;/em&gt;パラメータは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="13ddbda255522a38da65b29a502dcc59e7e40503" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;pathname&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6.2で変更：&lt;em&gt;pathname&lt;/em&gt;パラメータは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="a7282efa64fed355792dd16b448581da28b486a6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.5: On Windows, &lt;code&gt;TCP_FASTOPEN&lt;/code&gt;, &lt;code&gt;TCP_KEEPCNT&lt;/code&gt; appear if run-time Windows supports.</source>
          <target state="translated">バージョン3.6.5で変更：Windowsでは、 &lt;code&gt;TCP_FASTOPEN&lt;/code&gt; Windowsがサポートしている場合、TCP_FASTOPEN、 &lt;code&gt;TCP_KEEPCNT&lt;/code&gt; が表示されます。</target>
        </trans-unit>
        <trans-unit id="88fa871cf9152c017e09b20c3dbfc862ce905690" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6:</source>
          <target state="translated">バージョン3.6で変更。</target>
        </trans-unit>
        <trans-unit id="f4b5633e031e529eac5baaa35ca0ffbd9f4ff8f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt; may return instances with &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; set to 1.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;が1に設定されたインスタンスを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="4210689792814f2f7aced7f6c7dddfe07722f034" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;create_module()&lt;/code&gt;&lt;/a&gt; must also be defined.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;create_module()&lt;/code&gt; &lt;/a&gt;も定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="4eff032926f13e331a854e926a8512ccde50c869" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; used to implicitly commit an open transaction before DDL statements. This is no longer the case.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;は、DDLステートメントの前に開いているトランザクションを暗黙的にコミットするために使用されていました。これはもう当てはまりません。</target>
        </trans-unit>
        <trans-unit id="00ae6764d29f01ba13d1877d04357df49876b0d0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; is now used in protocols 2 and 3.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;がプロトコル2および3で使用されるようになりました。</target>
        </trans-unit>
        <trans-unit id="e7f733aadefd7484de6cce101c64f7e3e26c3174" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; can be used only with bytes patterns and is not compatible with &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;re.ASCII&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt;はバイトパターンでのみ使用でき、&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;re.ASCII&lt;/code&gt; と&lt;/a&gt;互換性がありません。</target>
        </trans-unit>
        <trans-unit id="3d4b70216f734710b0f71b84015d0fffedf444ce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.Options&quot;&gt;&lt;code&gt;Options&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#ssl.Options&quot;&gt; &lt;code&gt;Options&lt;/code&gt; &lt;/a&gt;フラグを返します。</target>
        </trans-unit>
        <trans-unit id="8ebc7fa62b30bc16cb08962d6d2a6cc396de3672" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.VerifyFlags&quot;&gt;&lt;code&gt;VerifyFlags&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#ssl.VerifyFlags&quot;&gt; &lt;code&gt;VerifyFlags&lt;/code&gt; &lt;/a&gt;フラグを返します：</target>
        </trans-unit>
        <trans-unit id="da89f524a3cf6c20b08474ba9dbdb0bb72c78f1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.VerifyMode&quot;&gt;&lt;code&gt;VerifyMode&lt;/code&gt;&lt;/a&gt; enum:</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#ssl.VerifyMode&quot;&gt; &lt;code&gt;VerifyMode&lt;/code&gt; &lt;/a&gt; enumを返します：</target>
        </trans-unit>
        <trans-unit id="9c71667e821804ce244b7e8ab940e0a4ae47ec96" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#tracemalloc.DomainFilter&quot;&gt;&lt;code&gt;DomainFilter&lt;/code&gt;&lt;/a&gt; instances are now also accepted in &lt;em&gt;filters&lt;/em&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#tracemalloc.DomainFilter&quot;&gt; &lt;code&gt;DomainFilter&lt;/code&gt; &lt;/a&gt;インスタンスが&lt;em&gt;フィルターで&lt;/em&gt;も受け入れられるようになりました。</target>
        </trans-unit>
        <trans-unit id="fc35f941ba9beee55bf4e8743d796929aa39c697" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is now raised if an error occurs when the underlying &lt;code&gt;close()&lt;/code&gt; call is made.</source>
          <target state="translated">バージョン3.6で変更：基礎となる &lt;code&gt;close()&lt;/code&gt; 呼び出しが行われたときにエラーが発生した場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生するようになりました。</target>
        </trans-unit>
        <trans-unit id="43b467e71f1b1a0f133a955c8d9f1c706ca89be1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; can now be used to write files into the archive with the &lt;code&gt;mode='w'&lt;/code&gt; option.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;mode='w'&lt;/code&gt; オプションでアーカイブにファイルを書き込むことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="bb7e44cc836d981707db26592dad1f82b31b9f6c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;SIO_LOOPBACK_FAST_PATH&lt;/code&gt; was added.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;SIO_LOOPBACK_FAST_PATH&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="e7f78e00f429bc4a194ed00224c7519fa919edf9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;SO_DOMAIN&lt;/code&gt;, &lt;code&gt;SO_PROTOCOL&lt;/code&gt;, &lt;code&gt;SO_PEERSEC&lt;/code&gt;, &lt;code&gt;SO_PASSSEC&lt;/code&gt;, &lt;code&gt;TCP_USER_TIMEOUT&lt;/code&gt;, &lt;code&gt;TCP_CONGESTION&lt;/code&gt; were added.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;SO_DOMAIN&lt;/code&gt; 、 &lt;code&gt;SO_PROTOCOL&lt;/code&gt; 、 &lt;code&gt;SO_PEERSEC&lt;/code&gt; 、 &lt;code&gt;SO_PASSSEC&lt;/code&gt; 、 &lt;code&gt;TCP_USER_TIMEOUT&lt;/code&gt; 、 &lt;code&gt;TCP_CONGESTION&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="c7e3ffb98f73373e2379aeb30c589269e8450cd6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;StreamRequestHandler.wfile&lt;/code&gt; also supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; writable interface.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;StreamRequestHandler.wfile&lt;/code&gt; は&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;書き込み可能インターフェースもサポートします。</target>
        </trans-unit>
        <trans-unit id="af292d5b2ccd04b75f9cea60a24e59968c03fe31" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;_class&lt;/em&gt; defaults to the policy &lt;code&gt;message_factory&lt;/code&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;_class&lt;/em&gt;デフォルトはポリシー &lt;code&gt;message_factory&lt;/code&gt; になっています。</target>
        </trans-unit>
        <trans-unit id="dcf9eaa5862672540ea39d8597a4d9b17eabc5b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;_factory&lt;/em&gt; defaults to the policy &lt;code&gt;message_factory&lt;/code&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;_factoryの&lt;/em&gt;デフォルトはポリシー &lt;code&gt;message_factory&lt;/code&gt; になりました。</target>
        </trans-unit>
        <trans-unit id="1d08b3d9107e6d6d6ece8eb5e582f8e99a89f34a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing path-like objects on POSIX.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;args&lt;/em&gt;パラメータは、&lt;em&gt;shell&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;と、POSIX上のパスのようなオブジェクトを含むシーケンスを受け入れます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d86cbdc32791ac508e8f47dbb278087c01e6acb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;cwd&lt;/em&gt;パラメータは、POSIX上の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="4c980ee857443405a386cbe78274a15827552196" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;decode_data&lt;/em&gt; is now &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;decode_data&lt;/em&gt;がデフォルトで &lt;code&gt;False&lt;/code&gt; になりました。</target>
        </trans-unit>
        <trans-unit id="47741318ca8574e0af3ac49bc8b84e45643a59fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;delete&lt;/em&gt; is now supported as a keyword argument.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;delete&lt;/em&gt;がキーワード引数としてサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="21965ce1bba4a40b703f9cbd47d7a8ec640e6c09" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; were added. See &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;が追加されました。詳細については、&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="be3dfffa6ddcd046058cb9dcff84508473e3344e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;executable&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;実行可能&lt;/em&gt;パラメーターは、POSIX上の&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="31b08051ac4f94d01491e01039839a3b077ce116" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;fp&lt;/em&gt; can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;. The input encoding should be UTF-8, UTF-16 or UTF-32.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;fp&lt;/em&gt;を&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリファイルに&lt;/a&gt;できるようになりました。入力エンコーディングは、UTF-8、UTF-16、またはUTF-32である必要があります。</target>
        </trans-unit>
        <trans-unit id="026a8bed5c291e73c8ea340a14374666fe21b9d7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;items&lt;/em&gt; can be passed as separate arguments, not just as a single tuple.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;アイテム&lt;/em&gt;は、単一のタプルとしてだけでなく、個別の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="eadf3f754c78312c2ca097daad9bf6d87d412074" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;level&lt;/em&gt; can now be used as a keyword parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;level&lt;/em&gt;をキーワードパラメータとして使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="59ae0db1d9e6283e9808d22706c028dc6a10619e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;max_length&lt;/em&gt; can be used as a keyword argument.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;max_length&lt;/em&gt;をキーワード引数として使用できます。</target>
        </trans-unit>
        <trans-unit id="ffc027abbb534ce36d0cf8b43100ff69bf20c0ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;s&lt;/em&gt; can now be of type &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. The input encoding should be UTF-8, UTF-16 or UTF-32.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;s&lt;/em&gt;の型を&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; に&lt;/a&gt;することができます。入力エンコーディングは、UTF-8、UTF-16、またはUTF-32である必要があります。</target>
        </trans-unit>
        <trans-unit id="df42dc94062c23ea1ce9b505866c2b67ec71fbbc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;session&lt;/em&gt; argument was added.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;session&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="6834f1f201f2e030bd37d366063f0aad0ca492be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;wbits&lt;/em&gt; and &lt;em&gt;bufsize&lt;/em&gt; can be used as keyword arguments.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;wbits&lt;/em&gt;および&lt;em&gt;bufsize&lt;/em&gt;をキーワード引数として使用できます。</target>
        </trans-unit>
        <trans-unit id="148e1eddf44736168986e7b432a12d1ae142d0d6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;old&lt;/em&gt; and &lt;em&gt;new&lt;/em&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;old&lt;/em&gt;と&lt;em&gt;newの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b539484d3c533991a9390495e6ec8515b5633e78" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;パス&lt;/em&gt;と&lt;em&gt;属性&lt;/em&gt;に&lt;em&gt;パスの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;ようなオブジェクト&lt;/a&gt;を受け入れ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61bb5fd852218eca9364c0a8a6d0490b6c60c202" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;paths&lt;/em&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;path&lt;/em&gt;および&lt;em&gt;pathsにパスの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;ようなオブジェクト&lt;/a&gt;を受け入れ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ec64363e8765b00c9861b598746ddb49c8a31b8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;src&lt;/em&gt;および&lt;em&gt;dstの&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b6e668cddc79fa4ede6446293ab218e665bce22" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Unix.</source>
          <target state="translated">バージョン3.6で変更：Unixで&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="3bcacbb4ebcaf9b04a248a42fcef191f8d38cf24" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="fdb53daf2295762bd00f7a5e887b11c2e3b59860" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトの&lt;/a&gt;シーケンスを受け入れます。</target>
        </trans-unit>
        <trans-unit id="904cf11c11da5661ef50b77309c0b6f2c48e0c07" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Add the &lt;em&gt;source&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;source&lt;/em&gt;パラメータを追加します。</target>
        </trans-unit>
        <trans-unit id="661d84cd7b5474b1db80448f4e25cac38fa84565" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;パラメータを追加</target>
        </trans-unit>
        <trans-unit id="efc65c840197916f73adfad11daa456d87d65094" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;exitmsg&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;exitmsg&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="244013f2dc41d47d4650de3cd1eab373c0e08606" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;platform_version&lt;/em&gt;</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;platform_versionを&lt;/em&gt;追加し&lt;em&gt;ました&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17d6e03f3e31f34b755aa6e6364d1c9e062fc3d9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;policy&lt;/em&gt; keyword-only parameter.</source>
          <target state="translated">バージョン3.6で変更：追加された&lt;em&gt;ポリシー&lt;/em&gt;キーワードのみのパラメーター。</target>
        </trans-unit>
        <trans-unit id="fdb15c310c69c258007868241b4def4b4f1f7041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;source&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;source&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="8f9fd2f6eaa8d90f6efddaa04d63483e63f7754d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; variable annotation syntax.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;変数アノテーション構文のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="8eba4298466546394f7d1f2e11c48c951fe0900e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface. Added support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; paths on Windows.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;インターフェースのサポートが追加されました。Windows での&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;パスのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="dc29d77e82e791ac81a913b451e59e0fb9aae46f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;インターフェースのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4a6bd1f4d14bb80b1530162aeca6feab3875d186" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;code&gt;'e'&lt;/code&gt; format.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;'e'&lt;/code&gt; 形式のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c6caaa3f11f228f0f18896eb0046ce2e95c78349" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;code&gt;REPLACE&lt;/code&gt; statement.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;REPLACE&lt;/code&gt; ステートメントのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="84bf7046c98badd1e2c10be9726147d97f3d450b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support of type tags with prefixes (e.g. &lt;code&gt;ex:nil&lt;/code&gt;). Added support of unmarshalling additional types used by Apache XML-RPC implementation for numerics: &lt;code&gt;i1&lt;/code&gt;, &lt;code&gt;i2&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;biginteger&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;bigdecimal&lt;/code&gt;. See &lt;a href=&quot;http://ws.apache.org/xmlrpc/types.html&quot;&gt;http://ws.apache.org/xmlrpc/types.html&lt;/a&gt; for a description.</source>
          <target state="translated">バージョン3.6で変更：プレフィックス付きの型タグのサポートが追加されました（例： &lt;code&gt;ex:nil&lt;/code&gt; ）。数値のApache XML-RPC実装で使用される非整列化の追加タイプのサポートが追加されました： &lt;code&gt;i1&lt;/code&gt; 、 &lt;code&gt;i2&lt;/code&gt; 、 &lt;code&gt;i8&lt;/code&gt; 、 &lt;code&gt;biginteger&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;bigdecimal&lt;/code&gt; 。説明については、&lt;a href=&quot;http://ws.apache.org/xmlrpc/types.html&quot;&gt;http：//ws.apache.org/xmlrpc/types.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1fc5a42350730517b6e861c0a65061fd11439227" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;a href=&quot;#tracemalloc.Filter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#tracemalloc.Filter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;属性が追加されました。</target>
        </trans-unit>
        <trans-unit id="f8786691f814a91efed79119397beb7c2ef256a4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;a href=&quot;#tracemalloc.Trace.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#tracemalloc.Trace.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;属性が追加されました。</target>
        </trans-unit>
        <trans-unit id="02bed7ce0af4a645cde20abc1f5a7f63c7a59bdf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;code&gt;'_'&lt;/code&gt; option (see also &lt;a href=&quot;https://www.python.org/dev/peps/pep-0515&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 515&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;'_'&lt;/code&gt; オプションが追加されました（&lt;a href=&quot;https://www.python.org/dev/peps/pep-0515&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 515&lt;/strong&gt;&lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="3faae8268eb15d80704094090cf21ed299b86137" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;code&gt;prompt&lt;/code&gt; parameter</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;prompt&lt;/code&gt; パラメーターが追加されました</target>
        </trans-unit>
        <trans-unit id="ec30ff36ff4af3da1db5067cd972ca984d0e7dd2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;module&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;module&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="c1bf215ec632bfd1f400d30c9d6b6d86dc6b6796" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;newline&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;newline&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="83c6caf82f7fa5ecc8f20c95470d7a1fa8ac2567" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;tzinfo&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;tzinfo&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="b75ee1e6676222f86192ccfe7f93d0e540e584de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the optional &lt;em&gt;errors&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.6で変更：オプションの&lt;em&gt;エラー&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="0bc64c20d32fa8a2e6ddb595d9c482ba548d43d2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added two keyword only argument to the reset_mock function.</source>
          <target state="translated">バージョン3.6で変更しました。reset_mock関数に2つのキーワードのみの引数を追加しました。</target>
        </trans-unit>
        <trans-unit id="6834fb7db8ddccba1d71de5cddf2e437b98ce856" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All optional parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：すべてのオプションパラメータが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;キーワードのみになりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeef22f2414132bdf82d6bb131f49bbb1c094415" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：すべてのパラメーターが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;キーワードのみになりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc42e7c39d1020fb7d8042da00c5c87a8ff9f5b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: As well as string values, &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects are also accepted for the &lt;em&gt;filename&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.6で変更：文字列値だけでなく、&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;オブジェクトも&lt;em&gt;ファイル名&lt;/em&gt;引数として受け入れられます。</target>
        </trans-unit>
        <trans-unit id="9c9c99b92f7ee6f238e98e472e1d0db054f92cf9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Before Python 3.6, &lt;a href=&quot;#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt; was called instead of &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; in protocols 2 and 3.</source>
          <target state="translated">バージョン3.6で変更：Pythonの3.6の前に、&lt;a href=&quot;#object.__getnewargs__&quot;&gt; &lt;code&gt;__getnewargs__()&lt;/code&gt; &lt;/a&gt;の代わりに呼ばれた&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;プロトコル2及び3に。</target>
        </trans-unit>
        <trans-unit id="c3578fbb63098457792e086a73bda347f062eee9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Began calling &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;create_module()&lt;/code&gt;&lt;/a&gt;, removing the compatibility warning for &lt;a href=&quot;#importlib.machinery.BuiltinImporter&quot;&gt;&lt;code&gt;importlib.machinery.BuiltinImporter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.machinery.ExtensionFileLoader&quot;&gt;&lt;code&gt;importlib.machinery.ExtensionFileLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;create_module()&lt;/code&gt; の&lt;/a&gt;呼び出しを開始し、&lt;a href=&quot;#importlib.machinery.BuiltinImporter&quot;&gt; &lt;code&gt;importlib.machinery.BuiltinImporter&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#importlib.machinery.ExtensionFileLoader&quot;&gt; &lt;code&gt;importlib.machinery.ExtensionFileLoader&lt;/code&gt; の&lt;/a&gt;互換性警告を削除しました。</target>
        </trans-unit>
        <trans-unit id="81f5fb3277eda0f09e3b1ab4e8b8b4be6ce2a6b7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：閉じたZipFileで&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="abd5065335da08bc768e67f828147c1a91517f51" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.extractall&quot;&gt;&lt;code&gt;extractall()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：閉じたZipFileでextractall &lt;a href=&quot;#zipfile.ZipFile.extractall&quot;&gt; &lt;code&gt;extractall()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="fb4d8a2d87f6c41f5ec683aebb91b2cdee0c5951" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：閉じたZipFileで&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="69371a6a0b2ea4ceef3672fe2e6444ee85a40b7a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：閉じたZipFileで&lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="09e606d922018199d76c9f4841e2ae6b3d1995de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.testzip&quot;&gt;&lt;code&gt;testzip()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：閉じたZipFileで&lt;a href=&quot;#zipfile.ZipFile.testzip&quot;&gt; &lt;code&gt;testzip()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="19507c4a6dd5de17875125eb209ad9e5c5203886" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; on a ZipFile created with mode &lt;code&gt;'r'&lt;/code&gt; or a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：モード &lt;code&gt;'r'&lt;/code&gt; で作成されたZipFile または閉じられたZipFileで&lt;a href=&quot;#zipfile.ZipFile.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="f893c42a7560cf57f345084d2888b7b323144ffd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.writestr&quot;&gt;&lt;code&gt;writestr()&lt;/code&gt;&lt;/a&gt; on a ZipFile created with mode &lt;code&gt;'r'&lt;/code&gt; or a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">バージョン3.6で変更：モード &lt;code&gt;'r'&lt;/code&gt; で作成されたZipFile または閉じられたZipFileで&lt;a href=&quot;#zipfile.ZipFile.writestr&quot;&gt; &lt;code&gt;writestr()&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; が発生し&lt;/a&gt;ます。以前は、&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生していました。</target>
        </trans-unit>
        <trans-unit id="e104b55e12a98e869f50d2a78cf2b771895f3eab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: ChaCha20/Poly1305 was added to the default cipher string.</source>
          <target state="translated">バージョン3.6で変更されました。デフォルトの暗号文字列に ChaCha20/Poly1305 が追加されました。</target>
        </trans-unit>
        <trans-unit id="1cdd0c248c5c1d59c4ceba709d6e7ff9be4ae28a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Context manager support added</source>
          <target state="translated">バージョン3.6で変更されました。コンテキストマネージャのサポートを追加</target>
        </trans-unit>
        <trans-unit id="7ea05556a2694d635edac127c2dc2f4a7bae00c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Do not raise an error if the &lt;code&gt;Content-Length&lt;/code&gt; has not been provided and &lt;em&gt;data&lt;/em&gt; is neither &lt;code&gt;None&lt;/code&gt; nor a bytes object. Fall back to use chunked transfer encoding instead.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;Content-Length&lt;/code&gt; が提供されておらず、&lt;em&gt;データ&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でもbytesオブジェクトでもない場合でもエラーを発生させません。代わりにチャンク転送エンコーディングを使用するようにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="791ba32c17141614f86526c6e800684f41b2c687" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Docs reorganized and rewritten to promote the new &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">バージョン3.6で変更：ドキュメントを再編成して、新しい促進するために書き換え&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt; / &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; の&lt;/a&gt; APIを。</target>
        </trans-unit>
        <trans-unit id="44910a602937d4a457f8f426faa2c7eff65fedab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Flag constants are now instances of &lt;code&gt;RegexFlag&lt;/code&gt;, which is a subclass of &lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：フラグ定数は、 &lt;code&gt;RegexFlag&lt;/code&gt; のサブクラスである&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt;インスタンスになりました。</target>
        </trans-unit>
        <trans-unit id="5ff42ee71222be0bc243e3c53a39a36f3d0c5a7e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Grouping digits with underscores as in code literals is allowed.</source>
          <target state="translated">バージョン3.6で変更されました。コードリテラルのようにアンダースコアで数字をグループ化することができるようになりました。</target>
        </trans-unit>
        <trans-unit id="79a14d89e13bf8017c2b2f0bfbf92b7bd976edcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: If an error occurs in the cleanup after the Python interpreter has caught &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; (such as an error flushing buffered data in the standard streams), the exit status is changed to 120.</source>
          <target state="translated">バージョン3.6で変更：Pythonインタープリターが&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;をキャッチした後のクリーンアップでエラーが発生した場合（標準ストリームのバッファーデータをフラッシュするエラーなど）、終了ステータスが120に変更されます。</target>
        </trans-unit>
        <trans-unit id="bf1631221452824bfa3bd9dbf7c0b37b41d48114" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: If neither Content-Length nor Transfer-Encoding are set in &lt;em&gt;headers&lt;/em&gt;, file and iterable &lt;em&gt;body&lt;/em&gt; objects are now chunk-encoded. The &lt;em&gt;encode_chunked&lt;/em&gt; argument was added. No attempt is made to determine the Content-Length for file objects.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;ヘッダー&lt;/em&gt;にContent-LengthもTransfer-Encodingも設定されていない場合、ファイルおよび反復可能&lt;em&gt;ボディ&lt;/em&gt;オブジェクトはチャンクエンコードされます。&lt;em&gt;encode_chunked&lt;/em&gt;引数が追加されました。ファイルオブジェクトのContent-Lengthを決定する試みは行われません。</target>
        </trans-unit>
        <trans-unit id="605dda57e256146c97bfd5b9c9395e8f2a8b0ea0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Keyword arguments are packed in a tuple instead of a dictionary, &lt;em&gt;argc&lt;/em&gt; indicates the total number of arguments.</source>
          <target state="translated">バージョン3.6で変更：キーワード引数は辞書ではなくタプルにパックされ、&lt;em&gt;argc&lt;/em&gt;は引数の総数を示します。</target>
        </trans-unit>
        <trans-unit id="3cf3c210e1299a90c9deabf241109b52370e3490" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Line numbers can be decreasing. Before, they were always increasing.</source>
          <target state="translated">バージョン3.6で変更しました。行番号を減少させることができるようになりました。以前は常に増加していました。</target>
        </trans-unit>
        <trans-unit id="787edc2737bb2c9ea11447c3109e6c133e7f14aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Long sequences of repeated frames are now abbreviated.</source>
          <target state="translated">バージョン3.6で変更されました。繰り返されるフレームの長いシーケンスが省略されるようになりました。</target>
        </trans-unit>
        <trans-unit id="616cd601b2258b198c57c61c05877687b4afdb02" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Name generated from &lt;code&gt;offset=timedelta(0)&lt;/code&gt; is now plain &lt;code&gt;&amp;lsquo;UTC&amp;rsquo;&lt;/code&gt;, not &lt;code&gt;'UTC+00:00'&lt;/code&gt;.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;offset=timedelta(0)&lt;/code&gt; から生成された名前が &lt;code&gt;'UTC+00:00'&lt;/code&gt; &lt;code&gt;&amp;lsquo;UTC&amp;rsquo;&lt;/code&gt; ではなく、プレーンな'UTC'になりました。</target>
        </trans-unit>
        <trans-unit id="2aef86d6a3e42074fc4b0901a01117aa5ba82d5a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Now every instruction has an argument, but opcodes &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; ignore it. Before, only opcodes &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; had an argument.</source>
          <target state="translated">バージョン3.6で変更：すべての命令に引数がありますが、オペコード &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; それを無視します。以前は、オペコード &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; のみに引数がありました。</target>
        </trans-unit>
        <trans-unit id="4cf1956c52a1b7328be4f368a0141a6fcea495cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Now only called for exceptions derived from the &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;クラスから派生した例外に対してのみ呼び出されるようになりました。</target>
        </trans-unit>
        <trans-unit id="5e275ee5ae112033e12a822dbbc574cd6e91f8aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: On Linux, the value of the environment variable &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; is used when searching for libraries, if a library cannot be found by any other means.</source>
          <target state="translated">バージョン3.6で変更：Linuxでは、他の方法でライブラリが見つからない場合、ライブラリの検索時に環境変数 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="f782815a0d997bf3eb1fea6613cde1e1c5c6ed1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: On Windows, a handler for Windows exception is also installed.</source>
          <target state="translated">バージョン3.6で変更しました。Windowsでは、Windows例外用のハンドラもインストールされています。</target>
        </trans-unit>
        <trans-unit id="336c3cbf1caca7ddfe79d9d6314943d753878dcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: OpenSSL 0.9.8, 1.0.0 and 1.0.1 are deprecated and no longer supported. In the future the ssl module will require at least OpenSSL 1.0.2 or 1.1.0.</source>
          <target state="translated">バージョン3.6で変更されました。OpenSSL 0.9.8、1.0.0、1.0.1 は非推奨となり、サポートされなくなりました。将来的には、ssl モジュールは少なくとも OpenSSL 1.0.2 または 1.1.0.0 を必要とします。</target>
        </trans-unit>
        <trans-unit id="9f3065fe2486220fa9301dca7bebf289068b88fb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Optimization opportunity recognized for us-ascii.</source>
          <target state="translated">バージョン3.6で変更されました。us-asciiに最適化の機会を認識しました。</target>
        </trans-unit>
        <trans-unit id="d5927d1215f042d4afd170e200cf8e87bc07a75c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Out-of-range port numbers now raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;, instead of returning &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：範囲外のポート番号は、&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返す代わりに&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を送出&lt;/a&gt;するようになりました。</target>
        </trans-unit>
        <trans-unit id="34e5917bef113a7b0c5c8d3739dc8e343db882bc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Popen destructor now emits a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; warning if the child process is still running.</source>
          <target state="translated">バージョン3.6で変更：Popenデストラクタは、子プロセスがまだ実行されている場合に&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;警告を発行するようになりました。</target>
        </trans-unit>
        <trans-unit id="399985730a2b211003ea4bc835c87b09523b5270" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Previously, a plain &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised for unrecognized compression values.</source>
          <target state="translated">バージョン3.6で変更：以前は、認識されない圧縮値に対して単純な&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生しました。</target>
        </trans-unit>
        <trans-unit id="89415e91e357e38c8de371d5cfe4b140d1bd6da1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Print an exit message when exiting.</source>
          <target state="translated">バージョン3.6で変更。終了時に終了メッセージを表示するようにしました。</target>
        </trans-unit>
        <trans-unit id="eaf2818ab7215710cf1a81af9b1443b3fd029e49" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Raises a &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the user doesn&amp;rsquo;t have privileges.</source>
          <target state="translated">バージョン3.6で変更：ユーザーが権限を持っていない場合、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;を送出します。</target>
        </trans-unit>
        <trans-unit id="f684816076b069f0499c8eda34d37bf22e71ce48" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Removed support of &lt;code&gt;mode='U'&lt;/code&gt;. Use &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; for reading compressed text files in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;mode='U'&lt;/code&gt; のサポートを削除しました。&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;ユニバーサル改行&lt;/a&gt;モードで圧縮テキストファイルを読み取るには、&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="366b569e5d5e8488c96eabe60c2a1c8ebdfeb127" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Shared objects are capable of being nested. For example, a shared container object such as a shared list can contain other shared objects which will all be managed and synchronized by the &lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt;&lt;code&gt;SyncManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：共有オブジェクトはネストすることができます。たとえば、共有リストなどの共有コンテナオブジェクトには、&lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt; &lt;code&gt;SyncManager&lt;/code&gt; &lt;/a&gt;によってすべて管理および同期される他の共有オブジェクトを含めることができます。</target>
        </trans-unit>
        <trans-unit id="607cbe3b77c10b554f6576e89d00b1ae5fd69f9c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Subclasses of &lt;a href=&quot;#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; which don&amp;rsquo;t override &lt;code&gt;type.__new__&lt;/code&gt; may no longer use the one-argument form to get the type of an object.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;type.__new__&lt;/code&gt; オーバーライドしない&lt;a href=&quot;#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; の&lt;/a&gt;サブクラスは、1つの引数のフォームを使用してオブジェクトのタイプを取得できなくなりました。</target>
        </trans-unit>
        <trans-unit id="55c43f1950d8c9f56bd735b84d226d8fca96012a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Support added to accept objects implementing the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトを受け入れるためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="041d5e65453b6f7fc2f685c14dac62a1a8ce7566" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Support for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol was added. Exiting the context manager is equivalent to calling &lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt;&lt;code&gt;server_close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャ&lt;/a&gt;プロトコルのサポートが追加されました。コンテキストマネージャを終了することは、&lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt; &lt;code&gt;server_close()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="7be5990d30aaac4624a70d5afc43be32948148a5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Supports a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;サポートします。</target>
        </trans-unit>
        <trans-unit id="41a3a7aec9247cb8718deed5900f666c68eb6aef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt; method can now be called on naive instances that are presumed to represent system local time.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; &lt;/a&gt;メソッドは、システムの現地時間を表すと推定される単純なインスタンスで呼び出すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="bd00b2b9bda2f0a43f815de9c99730b53cd8dcce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#datetime.datetime.timestamp&quot;&gt;&lt;code&gt;timestamp()&lt;/code&gt;&lt;/a&gt; method uses the &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; attribute to disambiguate the times during a repeated interval.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#datetime.datetime.timestamp&quot;&gt; &lt;code&gt;timestamp()&lt;/code&gt; &lt;/a&gt;メソッドは、&lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;属性を使用して、繰り返される間隔の時間を明確にします。</target>
        </trans-unit>
        <trans-unit id="c14fc28d090a7a4a6192eeb3ffa7f392ba03e464" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; attributes &lt;code&gt;tm_gmtoff&lt;/code&gt; and &lt;code&gt;tm_zone&lt;/code&gt; are now available on all platforms.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;属性 &lt;code&gt;tm_gmtoff&lt;/code&gt; および &lt;code&gt;tm_zone&lt;/code&gt; がすべてのプラットフォームで使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6c1601b22a09f56bcdfb7dbfe073770b50277f66" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;dir&lt;/em&gt; parameter now accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;dir&lt;/em&gt;パラメータが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="ff1b08458aab5c1aa8d82aa99fba2786e8120c91" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;flushOnClose&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;flushOnClose&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="e2a08ca44663fce0fdc042bbe46970b340789437" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;name&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;name&lt;/em&gt;パラメータは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="0289b70d7edd96587dbe4193f745728f2d10c869" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;path&lt;/em&gt;パラメータは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れます。</target>
        </trans-unit>
        <trans-unit id="5c50fa586d92b952d86552ea1abedd0f3fa2666d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;punctuation_chars&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;punctuation_chars&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="442a64ddd0d72e61f33e08b53ca0af9d19232452" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;readrc&lt;/em&gt; argument.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;readrc&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="ab4ac59316713f9f5be737fedb24a6a2e44c7565" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;verbose&lt;/em&gt; and &lt;em&gt;rename&lt;/em&gt; parameters became &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;verbose&lt;/em&gt;および&lt;em&gt;rename&lt;/em&gt;パラメータは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;キーワードのみの引数になりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2c2bcb1c869e2babe86635912b1056192cea694" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The context is created with secure default values. The options &lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt;&lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_CIPHER_SERVER_PREFERENCE&quot;&gt;&lt;code&gt;OP_CIPHER_SERVER_PREFERENCE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt;&lt;code&gt;OP_NO_SSLv2&lt;/code&gt;&lt;/a&gt; (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt;&lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt;&lt;/a&gt;), and &lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt;&lt;code&gt;OP_NO_SSLv3&lt;/code&gt;&lt;/a&gt; (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt;&lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt;&lt;/a&gt;) are set by default. The initial cipher suite list contains only &lt;code&gt;HIGH&lt;/code&gt; ciphers, no &lt;code&gt;NULL&lt;/code&gt; ciphers and no &lt;code&gt;MD5&lt;/code&gt; ciphers (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt;&lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">バージョン3.6で変更：コンテキストは安全なデフォルト値で作成されます。オプション&lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt; &lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.OP_CIPHER_SERVER_PREFERENCE&quot;&gt; &lt;code&gt;OP_CIPHER_SERVER_PREFERENCE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt; &lt;code&gt;OP_NO_SSLv2&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt; &lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt; &lt;/a&gt;を除く）、および&lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt; &lt;code&gt;OP_NO_SSLv3&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt; &lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt; &lt;/a&gt;を除く）はデフォルトで設定されています。初期の暗号スイートリストには、 &lt;code&gt;HIGH&lt;/code&gt; 暗号のみが含まれ、 &lt;code&gt;NULL&lt;/code&gt; 暗号および &lt;code&gt;MD5&lt;/code&gt; 暗号は含まれません（&lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt; &lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt; &lt;/a&gt;を除く）。</target>
        </trans-unit>
        <trans-unit id="0feb236c2e9e6b33da5e1a29cf20065da02c73f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The default behavior of the &lt;em&gt;mangle_from_&lt;/em&gt; and &lt;em&gt;maxheaderlen&lt;/em&gt; parameters is to follow the policy.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;mangle_from_&lt;/em&gt;および&lt;em&gt;maxheaderlen&lt;/em&gt;パラメータのデフォルトの動作はポリシーに従うことです。</target>
        </trans-unit>
        <trans-unit id="8f24009c9fcdbdcfe41d3cafda444055a778669d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The default value for the &lt;code&gt;namespace&lt;/code&gt; element of the returned tuple has changed. Now an insertion-order-preserving mapping is used when the metaclass does not have a &lt;code&gt;__prepare__&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.6で変更：返されるタプルの &lt;code&gt;namespace&lt;/code&gt; 要素のデフォルト値が変更されました。メタクラスに &lt;code&gt;__prepare__&lt;/code&gt; メソッドがない場合、挿入順序を保持するマッピングが使用されるようになりました。</target>
        </trans-unit>
        <trans-unit id="529b3087ab0d08a79c349e88fb83dc24d24ecdc8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The fold value is copied to the returned &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">バージョン3.6で変更：fold値は返された&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;オブジェクトにコピーされます。</target>
        </trans-unit>
        <trans-unit id="77cad653f9bf3f387c9beee9e5bb0feef3c21949" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The number of bytes written is now returned.</source>
          <target state="translated">バージョン3.6で変更しました。書き込まれたバイト数を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="c4391597e5966cafdab0c1a99f49ad21366688a9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The position of the callable is determined by adding 2 to the opcode argument instead of encoding it in the second byte of the argument.</source>
          <target state="translated">バージョン3.6で変更されました。callableの位置は、引数の2バイト目にエンコードするのではなく、opcodeの引数に2を追加することで決定されます。</target>
        </trans-unit>
        <trans-unit id="bf716a197b06cfe0d2e3d4d1a64a3dd46c042200" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The socket option &lt;code&gt;TCP_NODELAY&lt;/code&gt; is set by default for all TCP connections.</source>
          <target state="translated">バージョン3.6で変更：ソケットオプション &lt;code&gt;TCP_NODELAY&lt;/code&gt; がデフォルトですべてのTCP接続に設定されます。</target>
        </trans-unit>
        <trans-unit id="9b7160a605c2fd0edcd54d7fa90f36fc39c3024a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: These parameter names are exposed by this module as names like &lt;code&gt;implicit0&lt;/code&gt;.</source>
          <target state="translated">バージョン3.6で変更：これらのパラメーター名は、 &lt;code&gt;implicit0&lt;/code&gt; のような名前としてこのモジュールによって公開されます。</target>
        </trans-unit>
        <trans-unit id="4fc702e0737c8c03b1b89845a0ed850914569676" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This is an &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">バージョン3.6で変更：これは&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;ストリームです。</target>
        </trans-unit>
        <trans-unit id="6ba2f7ac2d1b1ed5cc1618db7b2eb701becad041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This method was previously documented as deprecated in favour of &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; in Python 3.5, but that decision has been reversed in order to restore a clearly supported standard interface for single-source Python 2/3 code migrating away from the legacy &lt;a href=&quot;#inspect.getargspec&quot;&gt;&lt;code&gt;getargspec()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">バージョン3.6で変更：このメソッドは以前はPython 3.5 での&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; を&lt;/a&gt;支持して非推奨として文書化されていましたが、シングルソースPython 2/3コードから明確にサポートされている標準インターフェースを復元するために、その決定は逆になりました。レガシー&lt;a href=&quot;#inspect.getargspec&quot;&gt; &lt;code&gt;getargspec()&lt;/code&gt; &lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="334608ea2b0b18725fe8d003f8cb5a065167f2b8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This opcode is used only for calls with positional arguments.</source>
          <target state="translated">バージョン 3.6 で変更されました。このオペコードは位置引数を持つ呼び出しにのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="08f9fb025dd725a9ead7f1219f9916ce646c6348" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Underscores are allowed for grouping, as with integral and floating-point literals in code.</source>
          <target state="translated">バージョン 3.6 で変更されました。アンダースコアは、コード中の積分リテラルや浮動小数点リテラルと同様に、グループ化のために許可されます。</target>
        </trans-unit>
        <trans-unit id="2ca6b6a48fb6ab01a2db9b277f3caeb3e87c242e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Unknown escapes consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;'\'&lt;/code&gt; とASCII文字で構成される不明なエスケープはエラーになります。</target>
        </trans-unit>
        <trans-unit id="c1a466a2d5a4ef50c6c44e746edd476ef8bcf3cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Unknown escapes in &lt;em&gt;pattern&lt;/em&gt; consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">バージョン3.6で変更： &lt;code&gt;'\'&lt;/code&gt; とASCII文字で構成される&lt;em&gt;パターンの&lt;/em&gt;不明なエスケープはエラーになります。</target>
        </trans-unit>
        <trans-unit id="04c4b5ae4d19b860fe472429206d8259f62bb0f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Use 2 bytes for each instruction. Previously the number of bytes varied by instruction.</source>
          <target state="translated">バージョン3.6で変更されました。各命令に2バイトを使用するようになりました。これまでは命令によってバイト数が異なりましたが、バージョン3.6では命令ごとに2バイトを使用するようになりました。</target>
        </trans-unit>
        <trans-unit id="7b6b813fb7d1e23630581e7642cc4cdbb88b7b52" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Windows is no longer guaranteed to return &lt;code&gt;'mbcs'&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt;&lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">バージョン3.6で変更：Windowsは &lt;code&gt;'mbcs'&lt;/code&gt; を返すことが保証されなくなりました。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;および&lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt; &lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7fb28f57d1b2cd11ca2d899fc0d5453adb8c1119" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: With the acceptance of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 468&lt;/strong&gt;&lt;/a&gt;, order is retained for keyword arguments passed to the &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; constructor and its &lt;code&gt;update()&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.6で変更：&lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 468&lt;/strong&gt;&lt;/a&gt;の採用により、&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;コンストラクターとその &lt;code&gt;update()&lt;/code&gt; メソッドに渡されるキーワード引数の順序が保持されます。</target>
        </trans-unit>
        <trans-unit id="b5942c298d9518ff3c6eefc47a856dba249a76c1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: setsockopt(level, optname, None, optlen: int) form added.</source>
          <target state="translated">バージョン 3.6 で変更:setsockopt(level,optname,None,optlen:int)フォームを追加。</target>
        </trans-unit>
        <trans-unit id="8b9733e97b24f0a252f62413195ccd5523d9a173" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: the default behavior when &lt;em&gt;maxheaderlen&lt;/em&gt; is not specified was changed from defaulting to 0 to defaulting to the value of &lt;em&gt;max_line_length&lt;/em&gt; from the policy.</source>
          <target state="translated">バージョン3.6で変更：&lt;em&gt;maxheaderlen&lt;/em&gt;が指定されていない場合のデフォルトの動作が、デフォルトの0からポリシーの&lt;em&gt;max_line_lengthの&lt;/em&gt;デフォルトの値に&lt;em&gt;変更さ&lt;/em&gt;れました。</target>
        </trans-unit>
        <trans-unit id="57366972e1fc2abf14f9dd41ead9001204f7afe6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.1: The SAX parser no longer processes general external entities by default to increase security by default. To enable processing of external entities, pass a custom parser instance in:</source>
          <target state="translated">バージョン 3.7.1 で変更されました。SAX パーサーは、デフォルトでセキュリティを高めるために、デフォルトでは一般的な外部エンティティを処理しなくなりました。外部エンティティの処理を有効にするには、カスタムパーサーのインスタンスを</target>
        </trans-unit>
        <trans-unit id="76b6121622d855eab2bab4955f409032a236194f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.1: The SAX parser no longer processes general external entities by default to increase security. Before, the parser created network connections to fetch remote files or loaded local files from the file system for DTD and entities. The feature can be enabled again with method &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader.setFeature&quot;&gt;&lt;code&gt;setFeature()&lt;/code&gt;&lt;/a&gt; on the parser object and argument &lt;a href=&quot;xml.sax.handler#xml.sax.handler.feature_external_ges&quot;&gt;&lt;code&gt;feature_external_ges&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7.1で変更：SAXパーサーは、セキュリティを強化するためにデフォルトで一般的な外部エンティティを処理しなくなりました。以前は、パーサーはDTDおよびエンティティのファイルシステムからリモートファイルまたはロードされたローカルファイルをフェッチするためのネットワーク接続を作成していました。この機能は、パーサーオブジェクトの&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader.setFeature&quot;&gt; &lt;code&gt;setFeature()&lt;/code&gt; &lt;/a&gt;メソッドと引数&lt;a href=&quot;xml.sax.handler#xml.sax.handler.feature_external_ges&quot;&gt; &lt;code&gt;feature_external_ges&lt;/code&gt; で&lt;/a&gt;再度有効にできます。</target>
        </trans-unit>
        <trans-unit id="e440d806435b0b1d2c049dd90c5d238e0f47e068" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: The &lt;code id=&quot;index-7&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable no longer overrides the value of the &lt;em&gt;invalidation_mode&lt;/em&gt; argument, and determines its default value instead.</source>
          <target state="translated">バージョン3.7.2で変更： &lt;code id=&quot;index-7&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 環境変数は&lt;em&gt;invalidation_mode&lt;/em&gt;引数の値をオーバーライドしなくなり、代わりにデフォルト値を決定します。</target>
        </trans-unit>
        <trans-unit id="5084e6e92ac29faf18eaac15f6ab04d0f9d8c248" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter&amp;rsquo;s default value is updated to None.</source>
          <target state="translated">バージョン3.7.2で変更：&lt;em&gt;invalidation_mode&lt;/em&gt;パラメータのデフォルト値がNoneに更新されました。</target>
        </trans-unit>
        <trans-unit id="853422b51da6f3ec929e72af5ca1f69f10e7f9ba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: Windows now uses redirector scripts for &lt;code&gt;python[w].exe&lt;/code&gt; instead of copying the actual binaries. In 3.7.2 only &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt; does nothing unless running from a build in the source tree.</source>
          <target state="translated">バージョン3.7.2で変更：Windowsは、実際のバイナリをコピーする代わりに、 &lt;code&gt;python[w].exe&lt;/code&gt; リダイレクタスクリプトを使用するようになりました。3.7.2 では、ソースツリーのビルドから実行しない限り、&lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt;のみは何もしません。</target>
        </trans-unit>
        <trans-unit id="863b9e87b22dedfa950bc40f94561d8e09c439cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.3: Windows copies the redirector scripts as part of &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt;&lt;code&gt;setup_scripts()&lt;/code&gt;&lt;/a&gt;. This was not the case in 3.7.2. When using symlinks, the original executables will be linked.</source>
          <target state="translated">バージョン3.7.3で変更：の一環として、Windowsがコピーリダイレクタスクリプトを&lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt;の代わりに、&lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt; &lt;code&gt;setup_scripts()&lt;/code&gt; &lt;/a&gt;。これは3.7.2では当てはまりませんでした。シンボリックリンクを使用すると、元の実行可能ファイルがリンクされます。</target>
        </trans-unit>
        <trans-unit id="ce1f2abb9a1c602554e6e77610c65467dc680350" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#bytearray.fromhex&quot;&gt;&lt;code&gt;bytearray.fromhex()&lt;/code&gt;&lt;/a&gt; now skips all ASCII whitespace in the string, not just spaces.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#bytearray.fromhex&quot;&gt; &lt;code&gt;bytearray.fromhex()&lt;/code&gt; &lt;/a&gt;は、スペースだけでなく、文字列内のすべてのASCII空白をスキップするようになりました。</target>
        </trans-unit>
        <trans-unit id="4e907378ff5219221520fe7f88ff88e3df28ad7c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#bytes.fromhex&quot;&gt;&lt;code&gt;bytes.fromhex()&lt;/code&gt;&lt;/a&gt; now skips all ASCII whitespace in the string, not just spaces.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#bytes.fromhex&quot;&gt; &lt;code&gt;bytes.fromhex()&lt;/code&gt; &lt;/a&gt;は、スペースだけでなく、文字列内のすべてのASCII空白をスキップするようになりました。</target>
        </trans-unit>
        <trans-unit id="7b2c673ab99dce6e19eaceaf702384d6a23add82" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is now automatically changed to &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; when hostname checking is enabled and &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. Previously the same operation would have failed with a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：ホスト名チェックが有効で、&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; の&lt;/a&gt;場合、&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;が自動的に&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;に変更されます。以前は、同じ操作が&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; で&lt;/a&gt;失敗していました。</target>
        </trans-unit>
        <trans-unit id="dfa81cd93d9170a0c80bedb76a14f8b58e310a1e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; instances must to created with &lt;a href=&quot;#ssl.SSLContext.wrap_bio&quot;&gt;&lt;code&gt;wrap_bio()&lt;/code&gt;&lt;/a&gt;. In earlier versions, it was possible to create instances directly. This was never documented or officially supported.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;インスタンスは&lt;a href=&quot;#ssl.SSLContext.wrap_bio&quot;&gt; &lt;code&gt;wrap_bio()&lt;/code&gt; で&lt;/a&gt;作成する必要があります。以前のバージョンでは、インスタンスを直接作成することが可能でした。これは文書化されておらず、公式にもサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e5431937e71157adb38413677dcdb582aed2a2d5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; instances must to created with &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In earlier versions, it was possible to create instances directly. This was never documented or officially supported.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;インスタンスは&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; で&lt;/a&gt;作成する必要があります。以前のバージョンでは、インスタンスを直接作成することが可能でした。これは文書化されておらず、公式にもサポートされていません。</target>
        </trans-unit>
        <trans-unit id="072fcad98c97a642bd658f3fc593da376dc30c7b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; no longer has a custom metaclass.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; に&lt;/a&gt;カスタムメタクラスがなくなりました。</target>
        </trans-unit>
        <trans-unit id="ff966d919068447171afb2c58e7bf10e243f6b23" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt; can be used as a decorator.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;はデコレータとして使用できます。</target>
        </trans-unit>
        <trans-unit id="8532a04bf853c0100f105eb3c85361fedaa0b141" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt; can be used as a decorator.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;はデコレータとして使用できます。</target>
        </trans-unit>
        <trans-unit id="958fda0332dbe58b2edceff2aa0e2f0d7be788a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#BytesWarning&quot;&gt;&lt;code&gt;BytesWarning&lt;/code&gt;&lt;/a&gt; no longer appears in the default filter list and is instead configured via &lt;a href=&quot;sys#sys.warnoptions&quot;&gt;&lt;code&gt;sys.warnoptions&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; is specified twice.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;exceptions#BytesWarning&quot;&gt; &lt;code&gt;BytesWarning&lt;/code&gt; &lt;/a&gt;はデフォルトのフィルターリストに表示されなくなり、代わりに&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt;が2回指定されたときに&lt;a href=&quot;sys#sys.warnoptions&quot;&gt; &lt;code&gt;sys.warnoptions&lt;/code&gt; &lt;/a&gt;を介して設定されます。</target>
        </trans-unit>
        <trans-unit id="5d83e5c9f96f820b07ec2445379a4f97311df428" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is once again shown by default when triggered directly by code in &lt;code&gt;__main__&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;__main__&lt;/code&gt; のコードによって直接トリガーされたときに、デフォルトで再び表示されます。</target>
        </trans-unit>
        <trans-unit id="52514f9fea9a951eaedf4ee981ffe49ecd19a38a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#FutureWarning&quot;&gt;&lt;code&gt;FutureWarning&lt;/code&gt;&lt;/a&gt; is raised if a character set contains constructs that will change semantically in the future.</source>
          <target state="translated">バージョン3.7で変更：文字セットに将来意味的に変更される構成が含まれている場合、&lt;a href=&quot;exceptions#FutureWarning&quot;&gt; &lt;code&gt;FutureWarning&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="6ba029452d9e1d657784def8280827eb4616538a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt;&lt;/a&gt; is raised when the module being reloaded lacks a &lt;code&gt;ModuleSpec&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt; &lt;code&gt;ModuleNotFoundError&lt;/code&gt; が&lt;/a&gt;再ロードされているモジュールが不足しているときに発生する &lt;code&gt;ModuleSpec&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="b0a52bfab7242e1551b24ccc7aedaf1dc193c07f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; is used to find the location of the &lt;code&gt;.netrc&lt;/code&gt; file when &lt;em&gt;file&lt;/em&gt; is not passed as argument.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;os.path#os.path.expanduser&quot;&gt; &lt;code&gt;os.path.expanduser()&lt;/code&gt; &lt;/a&gt;は、&lt;em&gt;ファイル&lt;/em&gt;が引数として渡されない場合に &lt;code&gt;.netrc&lt;/code&gt; ファイルの場所を見つけるために使用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ed9510481315ef1e285830c40761da187514d9e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;'opcode'&lt;/code&gt; event type added; &lt;code&gt;f_trace_lines&lt;/code&gt; and &lt;code&gt;f_trace_opcodes&lt;/code&gt; attributes added to frames</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;'opcode'&lt;/code&gt; イベントタイプが追加されました。フレームに追加された &lt;code&gt;f_trace_lines&lt;/code&gt; および &lt;code&gt;f_trace_opcodes&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="f1653c4ac39612e8b24b2cb727689f207dc70253" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;TCP_NOTSENT_LOWAT&lt;/code&gt; was added.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;TCP_NOTSENT_LOWAT&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="a9f27c06084e9dccbac7a0689c03fc248630c851" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; and &lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; now waits until all child processes and non-daemonic threads complete. Add a new &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; class attribute to opt-in for the pre-3.7 behaviour.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; および &lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; は、すべての子プロセスと非デーモンスレッドが完了するまで待機するようになりました。新しい &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; クラス属性を、3.7より前の動作のオプトインに追加します。</target>
        </trans-unit>
        <trans-unit id="5420ef0fe10222c5496fa6a334b7a0339c502e25" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;blocksize&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;blocksize&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="83ff726260f8e69378e79602e1210c4883952c3c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;braceidpattern&lt;/em&gt; can be used to define separate patterns used inside and outside the braces.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;braceidpattern&lt;/em&gt;を使用して、中括弧の内側と外側で使用される個別のパターンを定義できます。</target>
        </trans-unit>
        <trans-unit id="fdfeec329b2e0f3b6e7d1731af8f5d54d20a5b61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;cwd&lt;/em&gt;パラメータはWindowsで&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="f9d5f3ab99e40292515541dc053d44e92890ed00" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;database&lt;/em&gt; can now also be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, not only a string.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;データベース&lt;/em&gt;は文字列だけでなく、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;にもなります。</target>
        </trans-unit>
        <trans-unit id="25673de31f6dc63dfce87e4e0ffd174a0e944cc5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;preferred&lt;/em&gt; keyword-only parameter was added.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;優先&lt;/em&gt;キーワードのみのパラメーターが追加されました。</target>
        </trans-unit>
        <trans-unit id="4b32b2da612c5f2e914848a82c44cec7a74b4b64" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;x&lt;/em&gt; is now a positional-only parameter.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;x&lt;/em&gt;は位置のみのパラメーターになりました。</target>
        </trans-unit>
        <trans-unit id="8fb81dde3c6868c8816033e3940e4a528dd4ff90" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: A format string argument is now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#positional-only-parameter&quot;&gt;positional-only&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：書式文字列引数が&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#positional-only-parameter&quot;&gt;位置のみになりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88e9614aa0ccf9378df756021c64cdc0fe334309" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;extract_dir&lt;/em&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;filename&lt;/em&gt;と&lt;em&gt;extract_dirに&lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b19b7cef93aa3b4d11a1892c09dddbdb57f2f88" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Add &lt;code&gt;cr_origin&lt;/code&gt; attribute to coroutines.</source>
          <target state="translated">バージョン3.7で変更：コルーチンに &lt;code&gt;cr_origin&lt;/code&gt; 属性を追加しました。</target>
        </trans-unit>
        <trans-unit id="005e3255d5f8977a065552b865587d2b7803353b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Add the &lt;em&gt;compresslevel&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;compresslevel&lt;/em&gt;パラメータを追加します。</target>
        </trans-unit>
        <trans-unit id="d89809fc2c3d7dd78187400b369602ad43ce59b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;a href=&quot;#token.COMMENT&quot;&gt;&lt;code&gt;COMMENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#token.NL&quot;&gt;&lt;code&gt;NL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#token.COMMENT&quot;&gt; &lt;code&gt;COMMENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#token.NL&quot;&gt; &lt;code&gt;NL&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt;トークンが追加されました。</target>
        </trans-unit>
        <trans-unit id="cc27d9e806737cd06b840e7b2c10ea8f94f36ebd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;421 MISDIRECTED_REQUEST&lt;/code&gt; status code.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;421 MISDIRECTED_REQUEST&lt;/code&gt; ステータスコードが追加されました。</target>
        </trans-unit>
        <trans-unit id="00d77f9e277a9641da3776637a3f1564d4e52e4f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; constant.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; 定数が追加されました。</target>
        </trans-unit>
        <trans-unit id="d6c4dbaae4cbfde8ae2d0f74232d5dbb049f2f8f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;dev_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt; flag and &lt;code&gt;utf8_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; flag.</source>
          <target state="translated">バージョン3.7で変更：新しい&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;dev&lt;/code&gt; フラグに &lt;code&gt;utf8_mode&lt;/code&gt; 属性を追加し、新しい&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; フラグに &lt;code&gt;dev_mode&lt;/code&gt; 属性を追加しました。</target>
        </trans-unit>
        <trans-unit id="5434c44d309bc59f3b75446b7e31a8cb756fac0b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;warn_on_full_buffer&lt;/code&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;warn_on_full_buffer&lt;/code&gt; パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="42d9c3d66c4e3627ae65d097e1d9953f826138cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for &lt;a href=&quot;#path-fd&quot;&gt;file descriptors&lt;/a&gt; on Unix.</source>
          <target state="translated">バージョン3.7で変更：Unix での&lt;a href=&quot;#path-fd&quot;&gt;ファイル記述子の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c3e35d23b662d36a9a65d36d22142c8c396781db" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; paths.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;パスのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="b9a6f0b02dd548682cd7267a5971ba09d0fa1344" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for the &lt;a href=&quot;contextvars#module-contextvars&quot;&gt;&lt;code&gt;contextvars&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;contextvars#module-contextvars&quot;&gt; &lt;code&gt;contextvars&lt;/code&gt; &lt;/a&gt;モジュールのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="d820da626a4aab5c2c4319d07a3407d2d96c4c4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt;. Compiled regular expression objects are considered atomic.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; の&lt;/a&gt;サポートが追加されました。コンパイルされた正規表現オブジェクトはアトミックと見なされます。</target>
        </trans-unit>
        <trans-unit id="48793cd02ed211f53c5ea31e127b4b991e16b5ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt;. Match objects are considered atomic.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; の&lt;/a&gt;サポートが追加されました。一致オブジェクトはアトミックと見なされます。</target>
        </trans-unit>
        <trans-unit id="4b598fa526cd8ee2f3f979e80d0a3ddf4f68d422" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of splitting on a pattern that could match an empty string.</source>
          <target state="translated">バージョン 3.7 で変更:空の文字列にマッチするパターンでの分割のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="b1d015d6e51e99b300bea59b8a79980df9b957e9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;code&gt;--invalidation-mode&lt;/code&gt; option.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;--invalidation-mode&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="de4f686ae04d3e85c2b797d3439b11bccb70616b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;code&gt;-n&lt;/code&gt; option.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;-n&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="1aad3a3294b1f64dd7c4b7832ff8c9cd0754a3d8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;backtick&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;backtick&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="0317b52c4a8e21fcd01232edd547138845488c9d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;defaults&lt;/em&gt; parameter and the &lt;code&gt;_field_defaults&lt;/code&gt; attribute.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;defaults&lt;/em&gt;パラメータと &lt;code&gt;_field_defaults&lt;/code&gt; 属性が追加されました。</target>
        </trans-unit>
        <trans-unit id="adc3579ebc4d8ddb1d8ec5db66d8ad238a07a3df" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters. For non-file fields, the value is now a list of strings, not bytes.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;encoding&lt;/em&gt;および&lt;em&gt;errors&lt;/em&gt;パラメータが追加されました。非ファイルフィールドの場合、値はバイトではなく文字列のリストになりました。</target>
        </trans-unit>
        <trans-unit id="2b23c4e756c187cc356d0e00f471b02851185150" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;initializer&lt;/em&gt; and &lt;em&gt;initargs&lt;/em&gt; arguments.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;initializer&lt;/em&gt;および&lt;em&gt;initargs&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="97d2d81a19460f59b22d1bd87d82c58680a429be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;rounds&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;rounds&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="23ea6cbe7ed92a135648d37aa905503e14da2ccd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;text&lt;/em&gt; parameter, as a more understandable alias of &lt;em&gt;universal_newlines&lt;/em&gt;. Added the &lt;em&gt;capture_output&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;Universal_newlinesの&lt;/em&gt;よりわかりやすいエイリアスとして、&lt;em&gt;テキスト&lt;/em&gt;パラメータを追加しました。&lt;em&gt;capture_output&lt;/em&gt;パラメータが追加されました。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e54ef8aec539006f4c7bc0e37e371b73f778818c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: As a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; subclass, &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; Inherited the capability to remember insertion order. Math operations on &lt;em&gt;Counter&lt;/em&gt; objects also preserve order. Results are ordered according to when an element is first encountered in the left operand and then by the order encountered in the right operand.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;サブクラスとして、&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt; Inheritedは挿入順序を記憶する機能を継承しました。&lt;em&gt;Counter&lt;/em&gt;オブジェクトの数学演算でも順序が保持されます。結果は、要素が最初に左のオペランドで検出され、次に右のオペランドで検出された順序に従って並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="c73643909c1002b12f74966226d3fa6f0f4ac2a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Attributes &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookies.Morsel.coded_value&quot;&gt;&lt;code&gt;coded_value&lt;/code&gt;&lt;/a&gt; are read-only. Use &lt;a href=&quot;#http.cookies.Morsel.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; for setting them.</source>
          <target state="translated">バージョン3.7で変更：属性&lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookies.Morsel.coded_value&quot;&gt; &lt;code&gt;coded_value&lt;/code&gt; &lt;/a&gt;は読み取り専用です。それらを設定するには&lt;a href=&quot;#http.cookies.Morsel.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="08d385f8b4af8122d20b24bc954682b188fbb9aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Both &lt;em&gt;getaddrinfo&lt;/em&gt; and &lt;em&gt;getnameinfo&lt;/em&gt; methods were always documented to return a coroutine, but prior to Python 3.7 they were, in fact, returning &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; objects. Starting with Python 3.7 both methods are coroutines.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;getaddrinfo&lt;/em&gt;メソッドと&lt;em&gt;getnameinfo&lt;/em&gt;メソッドの両方が常にコルーチンを返すようにドキュメント化されていましたが、Python 3.7より前のバージョンでは、実際には&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;オブジェクトを返していました。Python 3.7以降では、どちらの方法もコルーチンです。</target>
        </trans-unit>
        <trans-unit id="e5eeda500553fc3daf1a38acc5d91e602a800efb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Compiled regular expression objects with the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; flag no longer depend on the locale at compile time. Only the locale at matching time affects the result of matching.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt;フラグを使用してコンパイルされた正規表現オブジェクトは、コンパイル時にロケールに依存しなくなりました。マッチング時のロケールのみが、マッチングの結果に影響します。</target>
        </trans-unit>
        <trans-unit id="ef2ddd4188047df7cdd5ca3adb4ca4623cd79e50" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Default value of &lt;em&gt;repeat&lt;/em&gt; changed from 3 to 5.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;繰り返しの&lt;/em&gt;デフォルト値が3から5に変更されました。</target>
        </trans-unit>
        <trans-unit id="2803c654fc8043e748ab9d4c2c9519e10111ff8d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dict values in the result are now normal dicts. You no longer can use attribute access to access items of these dictionaries.</source>
          <target state="translated">バージョン 3.7 で変更:結果のディクショナリ値は通常のディクショナリになりました。これらの辞書の項目にアクセスするために属性アクセスを使用できなくなりました。</target>
        </trans-unit>
        <trans-unit id="dd5b330856b3b05e17f6ac214644983ee1132e19" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dictionary order is guaranteed to be insertion order.</source>
          <target state="translated">バージョン3.7での変更点:辞書の順番は挿入順であることが保証されるようになりました。</target>
        </trans-unit>
        <trans-unit id="03b8e402e5897f7b400bf177bff4b0b5a5e9cec6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dictionary order is guaranteed to be insertion order. This behavior was an implementation detail of CPython from 3.6.</source>
          <target state="translated">バージョン3.7で変更されました:辞書の順番は挿入順であることが保証されています。この動作は3.6からのCPythonの実装の詳細でした。</target>
        </trans-unit>
        <trans-unit id="224ba841fb0315c612423d440ccc11d21473f87a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Don&amp;rsquo;t remove explicit subclasses from unions at runtime.</source>
          <target state="translated">バージョン3.7で変更：実行時に共用体から明示的なサブクラスを削除しません。</target>
        </trans-unit>
        <trans-unit id="d33466a3a55b93c29b2974e799bfb0bc3559bfb8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Empty matches for the pattern are replaced when adjacent to a previous non-empty match.</source>
          <target state="translated">バージョン 3.7 で変更されました:パターンの空のマッチは、以前の空でないマッチに隣接している場合に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="dd921b175b4978478211062373a7df7bd07ad5ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Enable &lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt; for all code by default: a &lt;a href=&quot;#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; error raised in a generator is transformed into a &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：デフォルトですべてのコードに対して&lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt;を有効にします。ジェネレーターで発生した&lt;a href=&quot;#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;エラーは&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; に&lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="310df6132eebe18bfe9a4ff0baae65e29db2960f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Entries of &lt;code&gt;None&lt;/code&gt; in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; are deleted.</source>
          <target state="translated">バージョン3.7で変更：のエントリ &lt;code&gt;None&lt;/code&gt; で&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; が&lt;/a&gt;削除されます。</target>
        </trans-unit>
        <trans-unit id="e90fc9d5ae6ab7c198786b4fb81ae2896257f828" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though the method was always documented as a coroutine method, before Python 3.7 it returned a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7, this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.7で変更：メソッドは常にコルーチンメソッドとして文書化されていましたが、Python 3.7より前は&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; を&lt;/a&gt;返していました。Python 3.7以降、これは &lt;code&gt;async def&lt;/code&gt; メソッドです。</target>
        </trans-unit>
        <trans-unit id="0f5f425c09be0889f7993c692dd8bf24c225a967" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though the method was always documented as a coroutine method, before Python 3.7 it returned an &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7, this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.7で変更：メソッドは常にコルーチンメソッドとして文書化されていましたが、Python 3.7より前は&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; を&lt;/a&gt;返していました。Python 3.7以降、これは &lt;code&gt;async def&lt;/code&gt; メソッドです。</target>
        </trans-unit>
        <trans-unit id="71ca8a8740b86472133c098a2412f4ed16a5c1cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though this method was always documented as a coroutine method, releases before Python 3.7 returned a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7 this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.7で変更：このメソッドは常にコルーチンメソッドとして文書化されていましたが、Python 3.7より前のリリースでは&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; が&lt;/a&gt;返されました。Python 3.7以降、これは &lt;code&gt;async def&lt;/code&gt; メソッドです。</target>
        </trans-unit>
        <trans-unit id="cdf4cfab0e5e9be03dbae5dcb5092ffe198eb1bb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast IPv6 address, first item of &lt;em&gt;address&lt;/em&gt; does not contain &lt;code&gt;%scope&lt;/code&gt; part anymore. In order to get full IPv6 address use &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：マルチキャストIPv6アドレスの場合は、の最初の項目&lt;em&gt;のアドレスが&lt;/em&gt;含まれていません &lt;code&gt;%scope&lt;/code&gt; もう一部を。完全なIPv6アドレスを取得するには、&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="58f9ac05991bb7a84f3240f897ba8453b0675a59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast addresses (with &lt;em&gt;scopeid&lt;/em&gt; meaningful) &lt;em&gt;address&lt;/em&gt; may not contain &lt;code&gt;%scope&lt;/code&gt; (or &lt;code&gt;zone id&lt;/code&gt;) part. This information is superfluous and may be safely omitted (recommended).</source>
          <target state="translated">バージョン3.7で変更：マルチキャストアドレス（&lt;em&gt;scopeidが&lt;/em&gt;意味を持つ）の場合、&lt;em&gt;アドレスに&lt;/em&gt; &lt;code&gt;%scope&lt;/code&gt; （または &lt;code&gt;zone id&lt;/code&gt; ）の部分が含まれていない可能性があります。この情報は不必要であり、省略しても安全です（推奨）。</target>
        </trans-unit>
        <trans-unit id="f64155711e04b98bbb73e56efc650d345afe3167" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Frames are now sorted from the oldest to the most recent, instead of most recent to oldest.</source>
          <target state="translated">バージョン 3.7 で変更:フレームは、最も新しいものから最も古いものへではなく、最も新しいものから順に並べ替えられるようになりました。</target>
        </trans-unit>
        <trans-unit id="92f5733073625cb98d59fd1d8faaab4f0b1c77bf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Hostname matchings is now performed by OpenSSL. Python no longer uses &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：ホスト名の照合がOpenSSLによって実行されるようになりました。Pythonは&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; を&lt;/a&gt;使用しなくなりました。</target>
        </trans-unit>
        <trans-unit id="c6a58aa0011775f9760065b8a20e76eee03e4de6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Hostname or IP address is matched by OpenSSL during handshake. The function &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt; is no longer used. In case OpenSSL refuses a hostname or IP address, the handshake is aborted early and a TLS alert message is send to the peer.</source>
          <target state="translated">バージョン3.7で変更：ホスト名またはIPアドレスは、ハンドシェイク中にOpenSSLによって照合されます。関数&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt;は使用されなくなりました。OpenSSLがホスト名またはIPアドレスを拒否した場合、ハンドシェイクは早期に中止され、TLS警告メッセージがピアに送信されます。</target>
        </trans-unit>
        <trans-unit id="54f26d0d443361de9a340bf24f12e94e0997b527" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: If the &lt;em&gt;gather&lt;/em&gt; itself is cancelled, the cancellation is propagated regardless of &lt;em&gt;return_exceptions&lt;/em&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;ギャザー&lt;/em&gt;自体がキャンセルされた場合、キャンセルは&lt;em&gt;return_exceptionsに&lt;/em&gt;関係なく伝播されます。</target>
        </trans-unit>
        <trans-unit id="36f8744d003d4bb3fd7fb074add0867bae41d650" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: If the result is not ready, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：結果の準備ができていない場合、&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="4aeb098b2c1827b621d71a3dc4e9379421ab98a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Implemented recursive disassembling and added &lt;em&gt;depth&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.7で変更：再帰的な逆アセンブルを実装し、&lt;em&gt;深さ&lt;/em&gt;パラメーターを追加しました。</target>
        </trans-unit>
        <trans-unit id="b4afb43fb6380dd98067a8058908c4a730227d6b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Introduced the optional &lt;code&gt;get_resource_reader()&lt;/code&gt; method.</source>
          <target state="translated">バージョン3.7で変更：オプションの &lt;code&gt;get_resource_reader()&lt;/code&gt; メソッドが導入されました。</target>
        </trans-unit>
        <trans-unit id="52ad99ef5385aa9d237e4ae0d4a6648acd91bad0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Keyword-only argument support was added.</source>
          <target state="translated">バージョン3.7での変更点:キーワードのみの引数サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="d9e4f645bbf66a880ce115a5fb043317e4d4834e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: LIFO order is now guaranteed. In prior versions, &lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; would return an arbitrary key/value pair.</source>
          <target state="translated">バージョン3.7で変更：LIFOの順序が保証されるようになりました。以前のバージョンでは、&lt;a href=&quot;#dict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt;は任意のキーと値のペアを返していました。</target>
        </trans-unit>
        <trans-unit id="b7977568df1a78fe4cd469b7bb3bf93fb6697060" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Loggers can now be pickled and unpickled.</source>
          <target state="translated">バージョン3.7で変更されました:ロガーがピクルスとアンピクルスができるようになりました。</target>
        </trans-unit>
        <trans-unit id="a4bddd28b524df1151d1b06ebe056c65a6c1ad59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Moved from &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt; for quoting URL strings. &amp;ldquo;~&amp;rdquo; is now included in the set of unreserved characters.</source>
          <target state="translated">バージョン3.7で変更：URL文字列を引用するために&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;から&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3986に&lt;/strong&gt;&lt;/a&gt;移動し&lt;strong&gt;ました&lt;/strong&gt;。「〜」が予約されていない文字のセットに含まれるようになりました。</target>
        </trans-unit>
        <trans-unit id="ad63bee98302470588873ca81fb88b939ad538d6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: New &lt;em&gt;required&lt;/em&gt; keyword argument.</source>
          <target state="translated">バージョン3.7で変更：新しい&lt;em&gt;必須&lt;/em&gt;キーワード引数。</target>
        </trans-unit>
        <trans-unit id="219bd330cb3659255613f152759bc342ec0cb230" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Non-empty matches can now start just after a previous empty match.</source>
          <target state="translated">バージョン 3.7 で変更:空でないマッチは、前の空マッチの直後に開始できるようになりました。</target>
        </trans-unit>
        <trans-unit id="d354147bae8e616fec012c97b780dea93e35367b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: On Windows the default for &lt;em&gt;close_fds&lt;/em&gt; was changed from &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; when redirecting the standard handles. It&amp;rsquo;s now possible to set &lt;em&gt;close_fds&lt;/em&gt; to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; when redirecting the standard handles.</source>
          <target state="translated">バージョン3.7で変更：Windowsでのデフォルト&lt;em&gt;close_fdsが&lt;/em&gt;から変更された&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;標準ハンドルをリダイレクトするとき。標準ハンドルをリダイレクトするときに&lt;em&gt;close_fds&lt;/em&gt;を&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;に設定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6bb422e425245dd7836e19b282ffcd40ca9229eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Only characters that can have special meaning in a regular expression are escaped. As a result, &lt;code&gt;'!'&lt;/code&gt;, &lt;code&gt;'&quot;'&lt;/code&gt;, &lt;code&gt;'%'&lt;/code&gt;, &lt;code&gt;&quot;'&quot;&lt;/code&gt;, &lt;code&gt;','&lt;/code&gt;, &lt;code&gt;'/'&lt;/code&gt;, &lt;code&gt;':'&lt;/code&gt;, &lt;code&gt;';'&lt;/code&gt;, &lt;code&gt;'&amp;lt;'&lt;/code&gt;, &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;'&amp;gt;'&lt;/code&gt;, &lt;code&gt;'@'&lt;/code&gt;, and &lt;code&gt;&quot;`&quot;&lt;/code&gt; are no longer escaped.</source>
          <target state="translated">バージョン3.7で変更：正規表現で特別な意味を持つことができる文字のみがエスケープされます。その結果、 &lt;code&gt;'!'&lt;/code&gt; 、 &lt;code&gt;'&quot;'&lt;/code&gt; 、 &lt;code&gt;'%'&lt;/code&gt; 、 &lt;code&gt;&quot;'&quot;&lt;/code&gt; 、 &lt;code&gt;','&lt;/code&gt; 、 &lt;code&gt;'/'&lt;/code&gt; 、 &lt;code&gt;':'&lt;/code&gt; 、 &lt;code&gt;';'&lt;/code&gt; 、 &lt;code&gt;'&amp;lt;'&lt;/code&gt; 、 &lt;code&gt;'='&lt;/code&gt; 、 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 、 &lt;code&gt;'@'&lt;/code&gt; 、および &lt;code&gt;&quot;`&quot;&lt;/code&gt; はエスケープされなくなりました。</target>
        </trans-unit>
        <trans-unit id="bc9c22b78b1f1cf43054d048df869b60a2b3ba4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Previously &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#FutureWarning&quot;&gt;&lt;code&gt;FutureWarning&lt;/code&gt;&lt;/a&gt; were distinguished based on whether a feature was being removed entirely or changing its behaviour. They are now distinguished based on their intended audience and the way they&amp;rsquo;re handled by the default warnings filters.</source>
          <target state="translated">バージョン3.7で変更：以前は&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;exceptions#FutureWarning&quot;&gt; &lt;code&gt;FutureWarning&lt;/code&gt; &lt;/a&gt;は、機能が完全に削除されているのか、その動作が変更されているのかに基づいて区別されていました。これらは、対象となるユーザーと、デフォルトの警告フィルターによる処理方法に基づいて区別されるようになりました。</target>
        </trans-unit>
        <trans-unit id="761b82bb9f3e39894a8ead078b602c393cc1c084" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Prior to Python 3.7 &lt;code&gt;Server.sockets&lt;/code&gt; used to return an internal list of server sockets directly. In 3.7 a copy of that list is returned.</source>
          <target state="translated">バージョン3.7で変更：Python 3.7より前では、サーバーソケットの内部リストを直接返すために使用される &lt;code&gt;Server.sockets&lt;/code&gt; 。3.7では、そのリストのコピーが返されます。</target>
        </trans-unit>
        <trans-unit id="bfaf67a2306728f130643ef47a0f75b8c1c3dcfd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Python only explicitly guaranteed that it preserved the declaration order of keyword-only parameters as of version 3.7, although in practice this order had always been preserved in Python 3.</source>
          <target state="translated">バージョン3.7での変更点:Pythonはバージョン3.7ではキーワードのみのパラメータの宣言順序を保持することを明示的に保証していましたが、実際にはこの順序はPython 3では常に保持されていました。</target>
        </trans-unit>
        <trans-unit id="036c28f3ee4988343448982d5850ccafe53f1041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Raises &lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; if &lt;strong&gt;package&lt;/strong&gt; is in fact not a package (i.e. lacks a &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute).</source>
          <target state="translated">バージョン3.7で変更：発生させ&lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt; &lt;code&gt;ModuleNotFoundError&lt;/code&gt; &lt;/a&gt;の代わりに&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;場合&lt;strong&gt;、パッケージは&lt;/strong&gt;実際にはないパッケージ（すなわち欠けている&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性）。</target>
        </trans-unit>
        <trans-unit id="78b99ed6875e90446566b4b67da8a139d9e9e6c4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Recursion adds entries in sorted order.</source>
          <target state="translated">バージョン 3.7 での変更:再帰はソートされた順序でエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="2a0f34a446e8c24793f0ab66c660dd8465227596" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Recursion sorts directory entries.</source>
          <target state="translated">バージョン 3.7 で変更:再帰でディレクトリエントリをソートするようにしました。</target>
        </trans-unit>
        <trans-unit id="569160f812f72c47a012b4e305500d9268a56598" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Removed &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens. &amp;ldquo;async&amp;rdquo; and &amp;ldquo;await&amp;rdquo; are now tokenized as &lt;a href=&quot;#token.NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt;トークンが削除されました。「async」と「await」は、&lt;a href=&quot;#token.NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;トークンとしてトークン化されます。</target>
        </trans-unit>
        <trans-unit id="1530550a15d6381c9d902a94f2bb626c5ce09e98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Removed the &lt;em&gt;verbose&lt;/em&gt; parameter and the &lt;code&gt;_source&lt;/code&gt; attribute.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;verbose&lt;/em&gt;パラメーターと &lt;code&gt;_source&lt;/code&gt; 属性を削除しました。</target>
        </trans-unit>
        <trans-unit id="065a9ef431a7874f0d88a1335a9951817b25dc01" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Return &amp;lsquo;utf-8&amp;rsquo; in the UTF-8 mode.</source>
          <target state="translated">バージョン3.7で変更：UTF-8モードで 'utf-8'を返します。</target>
        </trans-unit>
        <trans-unit id="80a4f1a4d9212d250deafd14b1f8f067da07e8cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Return &lt;em&gt;fd2&lt;/em&gt; on success. Previously, &lt;code&gt;None&lt;/code&gt; was always returned.</source>
          <target state="translated">バージョン3.7で変更：成功すると&lt;em&gt;fd2&lt;/em&gt;を返します。以前は、常に &lt;code&gt;None&lt;/code&gt; が返されていました。</target>
        </trans-unit>
        <trans-unit id="c8e3d19e352067d130873d8534ad58df73e4991b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Returning awaitable objects from &lt;code&gt;__aiter__&lt;/code&gt; is no longer supported.</source>
          <target state="translated">バージョン3.7で変更：待機可能なオブジェクトを &lt;code&gt;__aiter__&lt;/code&gt; から返すことはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="25f4bb9dd33ebe139dbd78dc864134fae375d1a5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Server object is an asynchronous context manager since Python 3.7.</source>
          <target state="translated">バージョン3.7で変更されました:Python 3.7からServerオブジェクトは非同期コンテキストマネージャーになりました。</target>
        </trans-unit>
        <trans-unit id="f6708785ca9656deb39bac7ad9a1f81ab835388c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Support of the &lt;code&gt;'If-Modified-Since'&lt;/code&gt; header.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;'If-Modified-Since'&lt;/code&gt; ヘッダーのサポート。</target>
        </trans-unit>
        <trans-unit id="313dcbd62279ce0fa999ad115bed2f485bc331ca" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;code&gt;register()&lt;/code&gt; attribute supports using type annotations.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;register()&lt;/code&gt; 属性は型注釈の使用をサポートします。</target>
        </trans-unit>
        <trans-unit id="6d355da2c48c4edbf9bfdcfc58a38ae0ab6757b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;code&gt;sentinel&lt;/code&gt; attributes now preserve their identity when they are &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copied&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;sentinel&lt;/code&gt; 属性は、&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copied&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickled&lt;/code&gt; &lt;/a&gt;されたときにIDを保持します。</target>
        </trans-unit>
        <trans-unit id="1473a3f137830f618ab59647a1642922e4b467f2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;context&lt;/em&gt; keyword-onlyパラメーターが追加されました。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="281531de0129d817a592fecc05ed6fd2cd979827" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;context&lt;/em&gt; keyword-onlyパラメーターが追加されました。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="70e777e2ff00d859e456bcb40962bedb3be7dc81" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;context&lt;/em&gt; keyword-onlyパラメーターが追加されました。詳細については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="23966d390a7fbbf69b4ed87e59fafe8930184ae9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;defaults&lt;/em&gt; argument is read with &lt;a href=&quot;#configparser.ConfigParser.read_dict&quot;&gt;&lt;code&gt;read_dict()&lt;/code&gt;&lt;/a&gt;, providing consistent behavior across the parser: non-string keys and values are implicitly converted to strings.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;デフォルトの&lt;/em&gt;引数が&lt;a href=&quot;#configparser.ConfigParser.read_dict&quot;&gt; &lt;code&gt;read_dict()&lt;/code&gt; &lt;/a&gt;で読み込まれ、パーサー全体で一貫した動作が提供されます。非文字列のキーと値は暗黙的に文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="ace86151c580273a23d7f1daa7c9690a08d668eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter was added as specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0552&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 552&lt;/strong&gt;&lt;/a&gt;. If the &lt;code id=&quot;index-6&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, &lt;em&gt;invalidation_mode&lt;/em&gt; will be forced to &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;invalidation_mode&lt;/em&gt;パラメータが&lt;a href=&quot;https://www.python.org/dev/peps/pep-0552&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 552での&lt;/strong&gt;&lt;/a&gt;指定に従って追加されました。場合 &lt;code id=&quot;index-6&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; の環境変数が設定されている、&lt;em&gt;invalidation_modeは&lt;/em&gt;に強制されます&lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7acc57bdf60e371b544084df05cbaf9d4e70bf27" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;invalidation_mode&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="30bb44696801b120c3eae99aa7bfb0a254272e2c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;level&lt;/em&gt; parameter was defaulted to level &lt;code&gt;CRITICAL&lt;/code&gt;. See Issue #28524 for more information about this change.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;level&lt;/em&gt;パラメータのデフォルトはlevel &lt;code&gt;CRITICAL&lt;/code&gt; になりました。この変更の詳細については、問題＃28524を参照してください。</target>
        </trans-unit>
        <trans-unit id="59a3e1d930e416389193cd03687cd0c8da4d6344" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;mode&lt;/em&gt; argument no longer affects the file permission bits of newly-created intermediate-level directories.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;mode&lt;/em&gt;引数は、新しく作成された中間レベルのディレクトリのファイル許可ビットに影響しなくなりました。</target>
        </trans-unit>
        <trans-unit id="4d29f7b5c750846336eeecbfa4ebc1699a9fb698" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;monetary&lt;/em&gt; keyword parameter was added.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;monetary&lt;/em&gt;キーワードパラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="e417c4c711ce296d60a6aa737bf6bbc748b0b665" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;mp_context&lt;/em&gt; argument was added to allow users to control the start_method for worker processes created by the pool.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;mp_context&lt;/em&gt;引数が追加され、ユーザーがプールによって作成されたワーカープロセスのstart_methodを制御できるようになりました。</target>
        </trans-unit>
        <trans-unit id="4c80129eb003cdb51a3993fac5f9a9d2c5811d28" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;path&lt;/em&gt;パラメータを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトに&lt;/a&gt;できるようになりました</target>
        </trans-unit>
        <trans-unit id="4da753b5f2d08188ac32f8db89a33688f0a0e9ec" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;path&lt;/em&gt;パラメータを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトに&lt;/a&gt;できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1bf140b37fb4c152fda270d63a101e9dd03431a4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;path&lt;/em&gt;パラメータを&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;オブジェクトにできるようになりました。</target>
        </trans-unit>
        <trans-unit id="ffabd493ab6e9cd5376b767738c2ddf3a3b582cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;size&lt;/em&gt; argument is now optional.</source>
          <target state="translated">バージョン3.7で変更：&lt;em&gt;size&lt;/em&gt;引数はオプションになりました。</target>
        </trans-unit>
        <trans-unit id="29dacabfaa9c6c343bb8aefa1e6d2d71cb6e9b1e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The CAN_ISOTP protocol was added.</source>
          <target state="translated">バージョン3.7での変更点:CAN_ISOTPプロトコルを追加しました。</target>
        </trans-unit>
        <trans-unit id="1c20bc4392805d9f7507eec633eb2ec48c2a8ba5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The DST offset is not restricted to a whole number of minutes.</source>
          <target state="translated">バージョン3.7での変更点:DSTオフセットが整数分に制限されないようにしました。</target>
        </trans-unit>
        <trans-unit id="a3917c6efd138287b9c437bd80c55daa1283692b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The UTC offset is not restricted to a whole number of minutes.</source>
          <target state="translated">バージョン3.7での変更点:UTCオフセットが整数分に制限されないようになりました。</target>
        </trans-unit>
        <trans-unit id="9421e67326aa910e6b552dd9cd1aa86a797b35f9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The attribute is now always ASCII text. When &lt;code&gt;server_hostname&lt;/code&gt; is an internationalized domain name (IDN), this attribute now stores the A-label form (&lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt;), rather than the U-label form (&lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt;).</source>
          <target state="translated">バージョン3.7で変更：属性は常にASCIIテキストになりました。とき &lt;code&gt;server_hostname&lt;/code&gt; は、国際化ドメイン名（IDN）で、この属性は現在、A-ラベル形式（保存する &lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt; ）ではなく、U-ラベル形式（ &lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0dce6902c5777906cc0dc6ca96bddf065b4ec699" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The exception is now an alias for &lt;a href=&quot;#ssl.SSLCertVerificationError&quot;&gt;&lt;code&gt;SSLCertVerificationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：例外は&lt;a href=&quot;#ssl.SSLCertVerificationError&quot;&gt; &lt;code&gt;SSLCertVerificationError&lt;/code&gt; の&lt;/a&gt;エイリアスになりました。</target>
        </trans-unit>
        <trans-unit id="5e3661bc361b4a987eae38908309262c1f621680" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The format string type is now &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：書式文字列の型が、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;なく&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;になりました。</target>
        </trans-unit>
        <trans-unit id="03d454b402d7b7f7235b9a5f3e42750fe257f48e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function is no longer used to TLS connections. Hostname matching is now performed by OpenSSL.</source>
          <target state="translated">バージョン 3.7 で変更:この機能は TLS 接続には使用されなくなりました。ホスト名のマッチングはOpenSSLで行われるようになりました。</target>
        </trans-unit>
        <trans-unit id="52d6a0a900003c0563bb16d76ee2a511ba0bcc55" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function now always returns &lt;code&gt;UTF-8&lt;/code&gt; on Android or if the UTF-8 mode is enabled.</source>
          <target state="translated">バージョン3.7で変更：この関数は、AndroidまたはUTF-8モードが有効な場合に常に &lt;code&gt;UTF-8&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="055741cfc92d31ff4fd42273ed84921147f3853c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function now sets temporarily the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale to the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale in some cases.</source>
          <target state="translated">バージョン3.7で変更：関数が &lt;code&gt;LC_CTYPE&lt;/code&gt; ロケールを一時的に &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケールに設定する場合があります。</target>
        </trans-unit>
        <trans-unit id="38a0c3ed9c4f853162b6ebd38629f4478e19fe49" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The keyword-only argument &lt;em&gt;header&lt;/em&gt;.</source>
          <target state="translated">バージョン3.7で変更：キーワードのみの引数&lt;em&gt;header&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="449bdcc9d03d0a7ab5383043965b98923fd3eaa1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The letters &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt; and &lt;code&gt;'u'&lt;/code&gt; also can be used in a group.</source>
          <target state="translated">バージョン3.7で変更：文字 &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'L'&lt;/code&gt; 、 &lt;code&gt;'u'&lt;/code&gt; もグループで使用できます。</target>
        </trans-unit>
        <trans-unit id="df62ee5fed95a6034869b1248da4f8b086e9f085" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method is idempotent, i.e. it can be called when the transport is already paused or closed.</source>
          <target state="translated">バージョン3.7で変更されました:このメソッドはidempotentで、つまり、トランスポートがすでに一時停止しているか閉じているときに 呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9799808ac3056e2dbf1f2ad97c6d039d2e8934b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method is idempotent, i.e. it can be called when the transport is already reading.</source>
          <target state="translated">バージョン3.7で変更されました:このメソッドはidempotentで、つまり、トランスポートがすでに読み込んでいるときに呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="eeebc224c5d44a3e3b340ee44af511d2ee66fbb5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method no longer applies &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag on &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：メソッドは、&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグを適用しなくなり&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c07d5e5cc733d96ef81bcc3c76809605d89d126" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method no longer toggles &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag on &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：このメソッドは、&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;フラグをトグルしなくなりました。</target>
        </trans-unit>
        <trans-unit id="82200f6389afb9d8e7627597186f4f850f09540f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method returns on instance of &lt;a href=&quot;#ssl.SSLContext.sslobject_class&quot;&gt;&lt;code&gt;SSLContext.sslobject_class&lt;/code&gt;&lt;/a&gt; instead of hard-coded &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：このメソッドは、ハードコードされた&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;#ssl.SSLContext.sslobject_class&quot;&gt; &lt;code&gt;SSLContext.sslobject_class&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="fb997593448d4de056ec738e74e2faab6d14c6ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method returns on instance of &lt;a href=&quot;#ssl.SSLContext.sslsocket_class&quot;&gt;&lt;code&gt;SSLContext.sslsocket_class&lt;/code&gt;&lt;/a&gt; instead of hard-coded &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.7で変更：このメソッドは、ハードコードされた&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;ではなく、&lt;a href=&quot;#ssl.SSLContext.sslsocket_class&quot;&gt; &lt;code&gt;SSLContext.sslsocket_class&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="ad9db1553c06c7191f9ee0b4ed53874f6cd8b140" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The new &lt;code&gt;-X dev&lt;/code&gt; command line option can now also be used to enable the debug mode.</source>
          <target state="translated">バージョン3.7で変更：新しい &lt;code&gt;-X dev&lt;/code&gt; コマンドラインオプションを使用して、デバッグモードを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="1c77840ad2d5592bc00c879318874ec74af0fb9b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This can now handle coroutine and asynchronous generator objects.</source>
          <target state="translated">バージョン 3.7 で変更:これは、コアーチンと非同期ジェネレータオブジェクトを扱うことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="19c46c9fa367b68cf4925782a73a05f9e5ca8337" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This function is now always available.</source>
          <target state="translated">バージョン3.7で変更されました:この機能は常に利用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="00bfb8b4f668c98ef6c4d0b1a36d185e0a634671" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This module used to be optional, it is now always available.</source>
          <target state="translated">バージョン 3.7 で変更:このモジュールはオプションでしたが、現在は常に利用可能です。</target>
        </trans-unit>
        <trans-unit id="1eaae74ea8a6601e07e5dfc8fa087a5ddec73403" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Universally administered MAC addresses are preferred over locally administered MAC addresses, since the former are guaranteed to be globally unique, while the latter are not.</source>
          <target state="translated">バージョン 3.7 で変更:前者はグローバルに一意であることが保証されているが、後者はそうではないため、ローカルに管理されている MAC アドレスよりも、普遍的に管理されている MAC アドレスの方が優先されるようになりました。</target>
        </trans-unit>
        <trans-unit id="2f5d983764356be79d6081c58b524d4cf280cb8e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Unknown escapes in &lt;em&gt;repl&lt;/em&gt; consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;'\'&lt;/code&gt; とASCII文字で構成される&lt;em&gt;replの&lt;/em&gt;不明なエスケープはエラーになります。</target>
        </trans-unit>
        <trans-unit id="5dd57134070a7ae47d1723a0687270c3df408aba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt;&lt;code&gt;SOCK_CLOEXEC&lt;/code&gt;&lt;/a&gt; bit flags are applied to &lt;em&gt;type&lt;/em&gt; they are cleared, and &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt; will not reflect them. They are still passed to the underlying system &lt;code&gt;socket()&lt;/code&gt; call. Therefore::</source>
          <target state="translated">バージョン3.7で変更：&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt; &lt;code&gt;SOCK_CLOEXEC&lt;/code&gt; &lt;/a&gt;ビットフラグが&lt;em&gt;タイプ&lt;/em&gt;に適用されると、それらはクリアされ、&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;はそれらを反映しません。それらは、基礎となるシステムの &lt;code&gt;socket()&lt;/code&gt; 呼び出しに渡されます。したがって::</target>
        </trans-unit>
        <trans-unit id="d74669ae73c841e0ede8298cbe80aed7df5b0636" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When &lt;em&gt;aw&lt;/em&gt; is cancelled due to a timeout, &lt;code&gt;wait_for&lt;/code&gt; waits for &lt;em&gt;aw&lt;/em&gt; to be cancelled. Previously, it raised &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt; immediately.</source>
          <target state="translated">バージョン3.7で変更：タイムアウトにより&lt;em&gt;aw&lt;/em&gt;がキャンセルされると、 &lt;code&gt;wait_for&lt;/code&gt; は&lt;em&gt;aw&lt;/em&gt;がキャンセルされるのを待ちます。以前は、&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; が&lt;/a&gt;すぐに発生していました。</target>
        </trans-unit>
        <trans-unit id="7de4997d181a00a8d7d4f85ca7f84989adab5e4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When formatting a number with the &lt;code&gt;n&lt;/code&gt; type, the function sets temporarily the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale to the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale in some cases.</source>
          <target state="translated">バージョン3.7で変更：数値を &lt;code&gt;n&lt;/code&gt; タイプでフォーマットする場合、関数は &lt;code&gt;LC_CTYPE&lt;/code&gt; ロケールを一時的に &lt;code&gt;LC_NUMERIC&lt;/code&gt; ロケールに設定する場合があります。</target>
        </trans-unit>
        <trans-unit id="f11c53613bb7c772c67d7c12c89026d5e8d86eef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When the &lt;code&gt;%z&lt;/code&gt; directive is provided to the &lt;code&gt;strptime()&lt;/code&gt; method, the UTC offsets can have a colon as a separator between hours, minutes and seconds. For example, &lt;code&gt;'+01:00:00'&lt;/code&gt; will be parsed as an offset of one hour. In addition, providing &lt;code&gt;'Z'&lt;/code&gt; is identical to &lt;code&gt;'+00:00'&lt;/code&gt;.</source>
          <target state="translated">バージョン3.7で変更： &lt;code&gt;%z&lt;/code&gt; ディレクティブが &lt;code&gt;strptime()&lt;/code&gt; メソッドに提供される場合、UTCオフセットは、時、分、秒の間の区切り文字としてコロンを持つことができます。たとえば、 &lt;code&gt;'+01:00:00'&lt;/code&gt; は1時間のオフセットとして解析されます。さらに、 &lt;code&gt;'Z'&lt;/code&gt; は &lt;code&gt;'+00:00'&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="383d94cc2ab687e7b8289bf5f5b782e2f674dcb0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When used with C-API subinterpreters, registered functions are local to the interpreter they were registered in.</source>
          <target state="translated">バージョン3.7での変更点:C-APIサブインタプリタで使用する場合、登録した関数は登録したインタプリタのローカルになります。</target>
        </trans-unit>
        <trans-unit id="e6bf880f19721932f7193c2bc9a1aaf9d89f415f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: for IPv6 multicast addresses, string representing an address will not contain &lt;code&gt;%scope&lt;/code&gt; part.</source>
          <target state="translated">バージョン3.7で変更：IPv6マルチキャストアドレスの場合、アドレスを表す文字列に &lt;code&gt;%scope&lt;/code&gt; 部分が含まれません。</target>
        </trans-unit>
        <trans-unit id="f3a8e9c88f4b5098bfe5936bd969ca2d449dfa3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.</source>
          <target state="translated">バージョン3.8で変更。</target>
        </trans-unit>
        <trans-unit id="df4658034943acda362e8e981becbd8548ca8cf5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: Exceptions derived from &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; but not &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; are no longer suppressed.</source>
          <target state="translated">バージョン3.8.1で変更：&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;から派生した例外が抑制されなくなりました。</target>
        </trans-unit>
        <trans-unit id="8056264cda6c7ccd83ceeb269534817f45c1471f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: IPv6 address strings no longer have a trailing new line.</source>
          <target state="translated">バージョン 3.8.1 で変更。IPv6 アドレス文字列の末尾に改行がないようになりました。</target>
        </trans-unit>
        <trans-unit id="d06d61415c6331ec913d49936788330c97e215e6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: The &lt;em&gt;reuse_address&lt;/em&gt; parameter is no longer supported due to security concerns.</source>
          <target state="translated">バージョン3.8.1で変更：セキュリティ上の問題により、&lt;em&gt;reuse_address&lt;/em&gt;パラメータはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="1706a2be0443070d845b707ec9bc7c136db6a1a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &amp;ldquo;unicode_internal&amp;rdquo; codec is removed.</source>
          <target state="translated">バージョン3.8で変更：「unicode_internal」コーデックが削除されました。</target>
        </trans-unit>
        <trans-unit id="af0f1ad6011a44c2713308e021dfbb91fd5b6f3b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; is now a subclass of &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; の&lt;/a&gt;サブクラスになりました。</target>
        </trans-unit>
        <trans-unit id="a6e38f3cbadfb325f4bb500eb3e0d7bd2266fbbd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#bytes.hex&quot;&gt;&lt;code&gt;bytes.hex()&lt;/code&gt;&lt;/a&gt; now supports optional &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters to insert separators between bytes in the hex output.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#bytes.hex&quot;&gt; &lt;code&gt;bytes.hex()&lt;/code&gt; &lt;/a&gt;がオプションの&lt;em&gt;sep&lt;/em&gt;および&lt;em&gt;bytes_per_sep&lt;/em&gt;パラメータをサポートし、16 &lt;em&gt;進出力の&lt;/em&gt;バイト間にセパレータを挿入します。</target>
        </trans-unit>
        <trans-unit id="81c31c860eba7acae35d3100c31cfbdd21836c93" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#csv.DictWriter.writeheader&quot;&gt;&lt;code&gt;writeheader()&lt;/code&gt;&lt;/a&gt; now also returns the value returned by the &lt;a href=&quot;#csv.csvwriter.writerow&quot;&gt;&lt;code&gt;csvwriter.writerow()&lt;/code&gt;&lt;/a&gt; method it uses internally.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#csv.DictWriter.writeheader&quot;&gt; &lt;code&gt;writeheader()&lt;/code&gt; が&lt;/a&gt;今もによって返される値を返し&lt;a href=&quot;#csv.csvwriter.writerow&quot;&gt; &lt;code&gt;csvwriter.writerow()&lt;/code&gt; &lt;/a&gt;が内部的に使用する方法を。</target>
        </trans-unit>
        <trans-unit id="6803748c888592e4126275b8b69ea85dabc1ca37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.lexists&quot;&gt;&lt;code&gt;lexists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.isdir&quot;&gt;&lt;code&gt;isdir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.isfile&quot;&gt;&lt;code&gt;isfile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.path.ismount&quot;&gt;&lt;code&gt;ismount()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;False&lt;/code&gt; instead of raising an exception for paths that contain characters or bytes unrepresentable at the OS level.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.path.lexists&quot;&gt; &lt;code&gt;lexists()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.path.isdir&quot;&gt; &lt;code&gt;isdir()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.path.isfile&quot;&gt; &lt;code&gt;isfile()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#os.path.ismount&quot;&gt; &lt;code&gt;ismount()&lt;/code&gt; &lt;/a&gt;は、OSレベルでは表現できない文字またはバイトを含むパスの例外を発生させる代わりに、 &lt;code&gt;False&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="c3b5cd964e3b5bf9c2c811150970155ae3bbda23" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#pathlib.Path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_dir&quot;&gt;&lt;code&gt;is_dir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_file&quot;&gt;&lt;code&gt;is_file()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_mount&quot;&gt;&lt;code&gt;is_mount()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_symlink&quot;&gt;&lt;code&gt;is_symlink()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_block_device&quot;&gt;&lt;code&gt;is_block_device()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_char_device&quot;&gt;&lt;code&gt;is_char_device()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_fifo&quot;&gt;&lt;code&gt;is_fifo()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_socket&quot;&gt;&lt;code&gt;is_socket()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;False&lt;/code&gt; instead of raising an exception for paths that contain characters unrepresentable at the OS level.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#pathlib.Path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_dir&quot;&gt; &lt;code&gt;is_dir()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_file&quot;&gt; &lt;code&gt;is_file()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_mount&quot;&gt; &lt;code&gt;is_mount()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_symlink&quot;&gt; &lt;code&gt;is_symlink()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_block_device&quot;&gt; &lt;code&gt;is_block_device()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_char_device&quot;&gt; &lt;code&gt;is_char_device()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_fifo&quot;&gt; &lt;code&gt;is_fifo()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#pathlib.Path.is_socket&quot;&gt; &lt;code&gt;is_socket()&lt;/code&gt; &lt;/a&gt;がパスの例外を発生させる代わりに &lt;code&gt;False&lt;/code&gt; を返すようになりましたOSレベルでは表現できない文字が含まれている。</target>
        </trans-unit>
        <trans-unit id="100447f373cf908f962f93a2eb840b7b2d13797c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; now returns an &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the target is an async function.</source>
          <target state="translated">バージョン3.8で変更：ターゲットが非同期関数の場合、&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; を&lt;/a&gt;返すようになりました。</target>
        </trans-unit>
        <trans-unit id="7a64ffb85f2cea7c0ecfd277773ab2ec9b42c583" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; now returns an &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the target is an async function.</source>
          <target state="translated">バージョン3.8で変更：ターゲットが非同期関数の場合、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; を&lt;/a&gt;返すようになりました。</target>
        </trans-unit>
        <trans-unit id="97bc0a31259da0ed63530c33af10151216b7c662" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; now returns the patched dictionary when used as a context manager.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;は、コンテキストマネージャとして使用された場合、パッチが適用されたディクショナリを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="6365e06841bd458059d48832636ce043a87c70f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;sys#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; is now used to handle unhandled exceptions.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;sys#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt;が未処理の例外の処理に使用されるようになりました。</target>
        </trans-unit>
        <trans-unit id="2da8582469e396d8a0108eab31e644d75023c56b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;code&gt;cp65001&lt;/code&gt; is now an alias to &lt;code&gt;utf_8&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;cp65001&lt;/code&gt; がutf_8のエイリアスになり &lt;code&gt;utf_8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ff13e8054b77640eea691e900144e858f2ac641" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;code&gt;selection()&lt;/code&gt; no longer takes arguments. For changing the selection state use the following selection methods.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;selection()&lt;/code&gt; は引数を取りません。選択状態を変更するには、次の選択方法を使用します。</target>
        </trans-unit>
        <trans-unit id="a7106000ee2db61cf6344717ae00196ac8fe857b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing bytes and path-like objects on Windows.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;args&lt;/em&gt;パラメータは、&lt;em&gt;shell&lt;/em&gt;が &lt;code&gt;False&lt;/code&gt; の場合に&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;受け入れ、Windowsでバイトとパスのようなオブジェクトを含むシーケンスを受け入れます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f42e4cbdf9e33b72d6f68cb69b4b3398c2524035" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a bytes object on Windows.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;cwd&lt;/em&gt;パラメータはWindowsでバイトオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="2e26498fa0f7b1bd3cc95e135354843c36c794c6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;executable&lt;/em&gt; parameter accepts a bytes and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">バージョン3.8で変更：Windowsで&lt;em&gt;実行可能&lt;/em&gt;パラメーターがバイトと&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="667a5e0fb76f46a5241c9b37471c704d1afd7145" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: A database opened with flags &lt;code&gt;'r'&lt;/code&gt; is now read-only. Opening with flags &lt;code&gt;'r'&lt;/code&gt; and &lt;code&gt;'w'&lt;/code&gt; no longer creates a database if it does not exist.</source>
          <target state="translated">バージョン3.8で変更：フラグ &lt;code&gt;'r'&lt;/code&gt; で開かれたデータベースは読み取り専用になりました。フラグ &lt;code&gt;'r'&lt;/code&gt; および &lt;code&gt;'w'&lt;/code&gt; で開くと、データベースが存在しない場合にデータベースが作成されなくなりました。</target>
        </trans-unit>
        <trans-unit id="60260c0ef18230115e3bd205b05c5e5eb434f63f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; and a bytes object on Windows.</source>
          <target state="translated">バージョン3.8で変更：Windowsで&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;とバイトオブジェクトを受け入れます。</target>
        </trans-unit>
        <trans-unit id="49e5b893ff9de5c7f9e0e41ebc36e6ebfa0c6cd8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Add a new command line interface with a usage. By default, when you will execute the CLI, the default compression level is 6.</source>
          <target state="translated">バージョン3.8で変更。使用法を持つ新しいコマンドラインインターフェイスを追加しました。CLIを実行するときのデフォルトでは、圧縮レベルは6になっています。</target>
        </trans-unit>
        <trans-unit id="9ba2f9d418b56cbf0bdc482a139585b63a14612a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt;&lt;code&gt;TYPE_COMMENT&lt;/code&gt;&lt;/a&gt;. Added &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens back (they&amp;rsquo;re needed to support parsing older Python versions for &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;feature_version&lt;/code&gt; set to 6 or lower).</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt; &lt;code&gt;TYPE_COMMENT&lt;/code&gt; が&lt;/a&gt;追加されました。&lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt;トークンと&lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt;トークンが追加されました（これらは、 &lt;code&gt;feature_version&lt;/code&gt; が6以下に設定された&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; の&lt;/a&gt;古いPythonバージョンの解析をサポートするために必要です）。</target>
        </trans-unit>
        <trans-unit id="85bf577b26acc12624d4ca2c826e33abca71e309" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt; support to compression objects.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; の&lt;/a&gt;サポートが圧縮オブジェクトに追加されました。</target>
        </trans-unit>
        <trans-unit id="f31ae1dc62be20d1904b6ef010aba8ac05b24205" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt; support to decompression objects.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; の&lt;/a&gt;サポートを追加して、オブジェクトを解凍します。</target>
        </trans-unit>
        <trans-unit id="243af55c0378cdbbded1db6bef1bbff921e9eee1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; to implementation so that iteration (such as in for loops) correctly consumes &lt;em&gt;read_data&lt;/em&gt;.</source>
          <target state="translated">バージョン3.8で変更：反復（forループなど）が&lt;em&gt;read_dataを&lt;/em&gt;正しく消費するように、実装に&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;を追加しました。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62c01d2d0c1778b221ec31e21a6119715f803d4a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;code&gt;'pgettext'&lt;/code&gt; and &lt;code&gt;'npgettext'&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;'pgettext'&lt;/code&gt; と &lt;code&gt;'npgettext'&lt;/code&gt; 追加されました。</target>
        </trans-unit>
        <trans-unit id="65dbd070cb831a01e0a6beb8e31f00d65fca0883" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;code&gt;type_comments&lt;/code&gt;, &lt;code&gt;mode='func_type'&lt;/code&gt; and &lt;code&gt;feature_version&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;type_comments&lt;/code&gt; 、 &lt;code&gt;mode='func_type'&lt;/code&gt; および &lt;code&gt;feature_version&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="1a945b440caa31c1218541ffce3792d7ff73b42a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;errors&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;エラー&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="8be1fec5912a053ae74fd5cb1c6a1506fea5f39e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;jump&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;ジャンプ&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="ebd45b31cee3ab274b2ea7af9bf66385569a6228" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;max_num_fields&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;max_num_fields&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="685468a4f03d21a32aab42ecb0ed335d75773dbf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;winmode&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;winmode&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="62412d9eee6e113fb8fc8e9c426cf34001732a79" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added context manager support.</source>
          <target state="translated">バージョン3.8で変更。コンテキストマネージャのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="4080dfae308ecef66d9c369edcbecc54e37de96a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added return value, return the new Path instance.</source>
          <target state="translated">バージョン3.8で変更。戻り値を追加し、新しいPathインスタンスを返すようにしました。</target>
        </trans-unit>
        <trans-unit id="0bf01e2e9b38182c15e660446b2de51612d44be7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for &lt;a href=&quot;os#os.PathLike.__fspath__&quot;&gt;&lt;code&gt;os.PathLike.__fspath__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;os#os.PathLike.__fspath__&quot;&gt; &lt;code&gt;os.PathLike.__fspath__()&lt;/code&gt; &lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f6397f6833a372c407e53c2226f1b598309729d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for &lt;code&gt;__aenter__&lt;/code&gt;, &lt;code&gt;__aexit__&lt;/code&gt;, &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;__aenter__&lt;/code&gt; 、 &lt;code&gt;__aexit__&lt;/code&gt; 、 &lt;code&gt;__aiter__&lt;/code&gt; および &lt;code&gt;__anext__&lt;/code&gt; のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="22f3f2ae8c3d95345ee045b49a607378542c9c58" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for Windows.</source>
          <target state="translated">バージョン3.8で変更。Windowsのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="111ee0e2d6efd819c0f50346eb0752b8c7d08bdd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for directory junctions, and changed to return the substitution path (which typically includes &lt;code&gt;\\?\&lt;/code&gt; prefix) rather than the optional &amp;ldquo;print name&amp;rdquo; field that was previously returned.</source>
          <target state="translated">バージョン3.8で変更：ディレクトリジャンクションのサポートが追加され、以前に返されたオプションの「印刷名」フィールドではなく、置換パス（通常は &lt;code&gt;\\?\&lt;/code&gt; プレフィックスを含む）を返すように変更されました。</target>
        </trans-unit>
        <trans-unit id="5327cdd1c73309d4091a8053e4d225cc7334ede9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for n-dimensional points. Formerly, only the two dimensional case was supported.</source>
          <target state="translated">バージョン3.8で変更。n次元の点のサポートを追加しました。以前は2次元の場合のみサポートしていました。</target>
        </trans-unit>
        <trans-unit id="1fa2749c2e418cedf5de7ab07760f0ea858169e2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for the &lt;code&gt;samesite&lt;/code&gt; attribute.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;samesite&lt;/code&gt; 属性のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="ab12ecc48d52b1e8b9e2104a70beba43f3fe3743" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for unelevated symlinks on Windows with Developer Mode.</source>
          <target state="translated">バージョン3.8で変更。デベロッパーモードでのWindowsでの高さのないシンボリックリンクのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="d88a9dcb849d992a4df4aa2e4a4bec3b869b282f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for url being a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクト&lt;/a&gt;であるurlのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="8d85d8c9e1d0a38d127796dca5265cc603883e98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support of path-like objects.</source>
          <target state="translated">バージョン3.8で変更。パスライクなオブジェクトのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="627839da16e067a49e0d33936728805c02e137af" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;name&lt;/code&gt; パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="cfc2f66fa120e637f453f4049faa961de95fdd6e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;mtime&lt;/em&gt; parameter for reproducible output.</source>
          <target state="translated">バージョン3.8で変更：再現可能な出力用の&lt;em&gt;mtime&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="09550e3388d5be9c6c21c341b23443beca5275fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;sort_dicts&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;sort_dicts&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="8a92a4d32cfddd54ebb25fd97ec3c49c8fb22e0b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;user_function&lt;/em&gt; option.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;user_function&lt;/em&gt;オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="1a7448849d50cf653cc4b4904f2a2d1f7fd4125c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the optional &lt;em&gt;initial&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：オプションの&lt;em&gt;初期&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="6b0eeffbe0d9c9f9658bab0732edf413b6ba7385" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Calling &lt;code&gt;fork()&lt;/code&gt; in a subinterpreter is no longer supported (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">バージョン3.8で変更：サブインタープリターでの &lt;code&gt;fork()&lt;/code&gt; の呼び出しはサポートされなくなりました（&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します）。</target>
        </trans-unit>
        <trans-unit id="dc1233650127597c1e3ed44703cae5441cf988b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Calling &lt;code&gt;forkpty()&lt;/code&gt; in a subinterpreter is no longer supported (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">バージョン3.8で変更：サブ &lt;code&gt;forkpty()&lt;/code&gt; 呼び出しはサポートされなくなりました（&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;が発生します）。</target>
        </trans-unit>
        <trans-unit id="41fba3f8ff588e17649c0d67f0a09049cf8b8539" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Characters that affect netloc parsing under NFKC normalization will now raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：NFKC正規化でのnetloc解析に影響する文字は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を発生するようになりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92367a873d65bd0ff55351395a97b6c12ae2aa89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Default flags became an empty string (&lt;code&gt;m&lt;/code&gt; flag for pymalloc has been removed).</source>
          <target state="translated">バージョン3.8で変更：デフォルトのフラグが空の文字列になりました（pymallocの &lt;code&gt;m&lt;/code&gt; フラグが削除されました）。</target>
        </trans-unit>
        <trans-unit id="dab3cb8452c55aced76434db8182fcd36e0282ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Default value of &lt;em&gt;max_workers&lt;/em&gt; is changed to &lt;code&gt;min(32, os.cpu_count() + 4)&lt;/code&gt;. This default value preserves at least 5 workers for I/O bound tasks. It utilizes at most 32 CPU cores for CPU bound tasks which release the GIL. And it avoids using very large resources implicitly on many-core machines.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;max_workersの&lt;/em&gt;デフォルト値が &lt;code&gt;min(32, os.cpu_count() + 4)&lt;/code&gt; 変更されました。このデフォルト値では、I / Oバウンドタスク用に少なくとも5つのワーカーが保持されます。GILをリリースするCPUバウンドタスクに最大32のCPUコアを使用します。また、メニーコアマシンで非常に大きなリソースを暗黙的に使用することを回避します。</target>
        </trans-unit>
        <trans-unit id="b93c90c6fb707a6f2b293d751a03ea7a6d18ba47" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Deleting a key from a read-only database raises database module specific error instead of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：読み取り専用データベースからキーを削除すると、&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;ではなくデータベースモジュール固有のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="432eca001bd04c7ba242894fff602390d5231539" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Deprecated the &lt;code&gt;_field_types&lt;/code&gt; attribute in favor of the more standard &lt;code&gt;__annotations__&lt;/code&gt; attribute which has the same information.</source>
          <target state="translated">バージョン3.8で変更：同じ情報を持つより標準的な &lt;code&gt;__annotations__&lt;/code&gt; 属性を優先して、 &lt;code&gt;_field_types&lt;/code&gt; 属性を非推奨にしました。</target>
        </trans-unit>
        <trans-unit id="636cfb064ef442eaa8f69edb55521b6e55a6be1b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Dictionaries are now reversible.</source>
          <target state="translated">バージョン3.8で変更されました。辞書が可逆的になりました。</target>
        </trans-unit>
        <trans-unit id="e724f91c91d15f557b6b322087cf9f46e9ea19be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Dictionary views are now reversible.</source>
          <target state="translated">バージョン3.8で変更されました。辞書表示が反転可能になりました。</target>
        </trans-unit>
        <trans-unit id="21e0be51955c9a617508fee8b7b93ee60596effd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Extended the operator support on proxy objects to include the matrix multiplication operators &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;@=&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更：行列乗算演算子 &lt;code&gt;@&lt;/code&gt; および &lt;code&gt;@=&lt;/code&gt; を含むように、プロキシオブジェクトの演算子サポートを拡張しました。</target>
        </trans-unit>
        <trans-unit id="f5f7c55b2b1ca802981084e2879993fa38ecd2cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; are not defined.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;が定義されていない場合、__ index __（）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="250e7998a8d3945c7884a200ab403ca9f74a4e47" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;が定義されていない場合、__ index __（）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="a766d3e802d76087f7b103f5af3122d858451ff8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;__int__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt; &lt;code&gt;__int__()&lt;/code&gt; &lt;/a&gt;が定義されていない場合、__ index __（）にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="dec366f29ac064f775914b156586406141d52403" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands, the three-argument form of &lt;code&gt;pow&lt;/code&gt; now allows the second argument to be negative, permitting computation of modular inverses.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;オペランドの場合、 &lt;code&gt;pow&lt;/code&gt; の 3引数形式で2番目の引数を負にできるようになり、モジュラー逆行列の計算が可能になりました。</target>
        </trans-unit>
        <trans-unit id="218e095b52b44196afd64d1e7efa5d2ec14182b1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; で&lt;/a&gt;ラップされた関数は、ラップされた関数が&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;非同期ジェネレーター&lt;/a&gt;関数である場合に &lt;code&gt;True&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="f879bbde3494fc30b09c6543fc16a3cbda1dbe14" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; で&lt;/a&gt;ラップされた関数は、ラップされた関数が&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;コルーチン関数&lt;/a&gt;である場合に &lt;code&gt;True&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="585bc4401c0ae497b558c92913179ed8a242c354" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a Python generator function.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; で&lt;/a&gt;ラップされた関数は、ラップされた関数がPythonジェネレーター関数である場合に &lt;code&gt;True&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="fc5c82dbf0c9fa08dd657d78cb16cdf1c578c93e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: If the queue is closed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：キューが閉じている場合、&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="7e27fbfb81b0893d996ef46ddc6e722a418a1d41" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: If the queue is closed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：キューが閉じている場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="4f2e2deef19f69f1802f1c5f2846b36ce81124da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier timeouts (relative &lt;em&gt;delay&lt;/em&gt; or absolute &lt;em&gt;when&lt;/em&gt;) should not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">バージョン3.8で変更：でPythonの3.7およびそれ以前のタイムアウト（相対&lt;em&gt;遅延&lt;/em&gt;または絶対）一日超えてはなりません。これはPython 3.8で修正されました。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b306bea24a4c57956795f6db2ec02939084e17db" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier with the default event loop implementation, the &lt;em&gt;delay&lt;/em&gt; could not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">バージョン3.8で変更：デフォルトのイベントループ実装を備えたPython 3.7以前では、&lt;em&gt;遅延&lt;/em&gt;が1日を超えることはできませんでした。これはPython 3.8で修正されました。</target>
        </trans-unit>
        <trans-unit id="364e6ee7cdc048900b6445d6c8117caf2c0cfd56" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier with the default event loop implementation, the difference between &lt;em&gt;when&lt;/em&gt; and the current time could not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">バージョン3.8で変更：デフォルトのイベントループの実装ではPython 3.7以前では、違いと現在の時刻が1日を超えませんでした。これはPython 3.8で修正されました。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3190ce76e0c243b2f88ae47f0214db2a027a9bb8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In previous versions, &lt;em&gt;allow_abbrev&lt;/em&gt; also disabled grouping of short flags such as &lt;code&gt;-vv&lt;/code&gt; to mean &lt;code&gt;-v -v&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更：以前のバージョンでは、&lt;em&gt;allow_abbrev&lt;/em&gt;ような短いフラグも無効グルーピング &lt;code&gt;-vv&lt;/code&gt; を意味する &lt;code&gt;-v -v&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="03b3b8c5eb4048d799cb9ba7128e1cb869157cc0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Items present in &lt;em&gt;vars&lt;/em&gt; no longer appear in the result. The previous behaviour mixed actual parser options with variables provided for interpolation.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;varsに&lt;/em&gt;存在するアイテムが結果に表示されなくなりました。以前の動作では、実際のパーサーオプションと補間用に提供された変数が混在していました。</target>
        </trans-unit>
        <trans-unit id="79a3154c920b183709f109f73e34fb5c454713a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Map value is TOS and map key is TOS1. Before, those were reversed.</source>
          <target state="translated">バージョン3.8で変更されました。マップ値がTOS、マップキーがTOS1になりました。以前は逆になっていました。</target>
        </trans-unit>
        <trans-unit id="c7cf250c329387da0ae484e1e77aa116c97d5d02" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: New &lt;em&gt;generation&lt;/em&gt; parameter.</source>
          <target state="translated">バージョン3.8で変更：新しい&lt;em&gt;生成&lt;/em&gt;パラメーター。</target>
        </trans-unit>
        <trans-unit id="9884e8277b78d2c0c28d3c58ee762e217f9f4193" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: No longer uses &lt;code id=&quot;index-7&quot;&gt;HOME&lt;/code&gt; on Windows.</source>
          <target state="translated">バージョン3.8で変更：Windowsで &lt;code id=&quot;index-7&quot;&gt;HOME&lt;/code&gt; を使用しなくなりました。</target>
        </trans-unit>
        <trans-unit id="8db32303e90c253dc76ce9d7ff43edde68e73d5e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Now handles multimodal datasets by returning the first mode encountered. Formerly, it raised &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; when more than one mode was found.</source>
          <target state="translated">バージョン3.8で変更：遭遇した最初のモードを返すことにより、マルチモーダルデータセットを処理するようになりました。以前は、複数のモードが見つかったときに&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; を送出&lt;/a&gt;していました。</target>
        </trans-unit>
        <trans-unit id="6cf7e3aa31007df0e9606ca93c1861f61405e9c8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On AIX, &lt;a href=&quot;#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t contain the major version anymore. It is always &lt;code&gt;'aix'&lt;/code&gt;, instead of &lt;code&gt;'aix5'&lt;/code&gt; or &lt;code&gt;'aix7'&lt;/code&gt;. Since older Python versions include the version number, it is recommended to always use the &lt;code&gt;startswith&lt;/code&gt; idiom presented above.</source>
          <target state="translated">バージョン3.8で変更：AIXでは、&lt;a href=&quot;#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt;にメジャーバージョンが含まれなくなりました。 &lt;code&gt;'aix5'&lt;/code&gt; または &lt;code&gt;'aix7'&lt;/code&gt; ではなく、常に &lt;code&gt;'aix'&lt;/code&gt; 'です。古いPythonバージョンにはバージョン番号が含まれているため、上記の &lt;code&gt;startswith&lt;/code&gt; イディオムを常に使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d3d15aa1b625c33d2282329dcc41be9853e34a74" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is now the default event loop.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;がデフォルトのイベントループになりました。</target>
        </trans-unit>
        <trans-unit id="321794742ff1f16881c420f7b3081c62bfbe34ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is now used by default.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、デフォルトで&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;が使用されるようになりました。</target>
        </trans-unit>
        <trans-unit id="6a2faa44612f89d4855c4735f92edaa7aeb752f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;em&gt;path&lt;/em&gt; can now be a file or directory.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、&lt;em&gt;パス&lt;/em&gt;をファイルまたはディレクトリにできるようになりました。</target>
        </trans-unit>
        <trans-unit id="3ec19b40aa61828132d4263c79f6b45d57a7d3b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, all reparse points that can be resolved by the operating system are now followed, and passing &lt;code&gt;follow_symlinks=False&lt;/code&gt; disables following all name surrogate reparse points. If the operating system reaches a reparse point that it is not able to follow, &lt;em&gt;stat&lt;/em&gt; now returns the information for the original path as if &lt;code&gt;follow_symlinks=False&lt;/code&gt; had been specified instead of raising an error.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、オペレーティングシステムで解決できるすべての再解析ポイントが追跡されるようになり、 &lt;code&gt;follow_symlinks=False&lt;/code&gt; を渡すと、すべての名前サロゲート再解析ポイントの追跡が無効になります。オペレーティングシステムが追跡できない再解析ポイントに到達した場合、&lt;em&gt;stat&lt;/em&gt;は、エラーを発生させる代わりに &lt;code&gt;follow_symlinks=False&lt;/code&gt; が指定されているかのように、元のパスの情報を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="af3954d78bb710bcad80e9e013679ea387e65239" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, now opens reparse points that represent another path (name surrogates), including symbolic links and directory junctions. Other kinds of reparse points are resolved by the operating system as for &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、シンボリックリンクやディレクトリジャンクションなど、別のパス（代理名）を表す再解析ポイントを開くようになりました。他の種類の再解析ポイントは、&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; の場合と&lt;/a&gt;同様にオペレーティングシステムによって解決されます。</target>
        </trans-unit>
        <trans-unit id="da82419ed22b58831c1cd055afaf87bbe5700f1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, the &lt;a href=&quot;#os.stat_result.st_mode&quot;&gt;&lt;code&gt;st_mode&lt;/code&gt;&lt;/a&gt; member now identifies special files as &lt;code&gt;S_IFCHR&lt;/code&gt;, &lt;code&gt;S_IFIFO&lt;/code&gt; or &lt;code&gt;S_IFBLK&lt;/code&gt; as appropriate.</source>
          <target state="translated">バージョン3.8で変更：Windowsでは、&lt;a href=&quot;#os.stat_result.st_mode&quot;&gt; &lt;code&gt;st_mode&lt;/code&gt; &lt;/a&gt;メンバーが特殊ファイルを &lt;code&gt;S_IFCHR&lt;/code&gt; 、 &lt;code&gt;S_IFIFO&lt;/code&gt; 、または &lt;code&gt;S_IFBLK&lt;/code&gt; として適切に識別するようになりました。</target>
        </trans-unit>
        <trans-unit id="dc1dfb9cf99cd9e9afbcb41a940a37f25460468b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, will no longer delete the contents of a directory junction before removing the junction.</source>
          <target state="translated">バージョン3.8で変更。Windowsでは、ジャンクションを削除する前にディレクトリのジャンクションの内容を削除しないようになりました。</target>
        </trans-unit>
        <trans-unit id="b4e8ad33f11f576b908c896726117c2b925a31fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On macOS, the &lt;em&gt;spawn&lt;/em&gt; start method is now the default. The &lt;em&gt;fork&lt;/em&gt; start method should be considered unsafe as it can lead to crashes of the subprocess. See &lt;a href=&quot;https://bugs.python.org/issue33725&quot;&gt;bpo-33725&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：macOSでは、&lt;em&gt;spawn&lt;/em&gt; startメソッドがデフォルトになりました。&lt;em&gt;フォーク&lt;/em&gt;、それがサブプロセスのクラッシュにつながる可能性としてスタート方法は安全ではないと考えるべきです。&lt;a href=&quot;https://bugs.python.org/issue33725&quot;&gt;bpo-33725を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bf388b4db7526b8e0b2e87c81a16c4ea346ee37f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On macOS, the function now uses &lt;a href=&quot;#platform.mac_ver&quot;&gt;&lt;code&gt;mac_ver()&lt;/code&gt;&lt;/a&gt;, if it returns a non-empty release string, to get the macOS version rather than the darwin version.</source>
          <target state="translated">バージョン3.8で変更：macOSでは、空ではないリリース文字列を返す場合、関数は&lt;a href=&quot;#platform.mac_ver&quot;&gt; &lt;code&gt;mac_ver()&lt;/code&gt; を&lt;/a&gt;使用して、darwinバージョンではなくmacOSバージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="f5ee98a81938a7ff66dd2abd2114188007138053" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;. The &lt;em&gt;html&lt;/em&gt; argument no longer supported.</source>
          <target state="translated">バージョン3.8で変更：パラメータは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;キーワードのみになりました&lt;/a&gt;。&lt;em&gt;HTMLの&lt;/em&gt;引数は、もはやサポートされません。</target>
        </trans-unit>
        <trans-unit id="674856e5cbc678787031b27b926924c3b5c4bae3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Platform-specific fast-copy syscalls may be used internally in order to copy the file more efficiently. See &lt;a href=&quot;#shutil-platform-dependent-efficient-copy-operations&quot;&gt;Platform-dependent efficient copy operations&lt;/a&gt; section.</source>
          <target state="translated">バージョン3.8で変更：ファイルをより効率的にコピーするために、プラットフォーム固有の高速コピーsyscallが内部で使用される場合があります。&lt;a href=&quot;#shutil-platform-dependent-efficient-copy-operations&quot;&gt;プラットフォームに依存する効率的なコピー操作の&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="3c9f4928282828175df5dc23d18d899616697149" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Popen can use &lt;a href=&quot;os#os.posix_spawn&quot;&gt;&lt;code&gt;os.posix_spawn()&lt;/code&gt;&lt;/a&gt; in some cases for better performance. On Windows Subsystem for Linux and QEMU User Emulation, Popen constructor using &lt;a href=&quot;os#os.posix_spawn&quot;&gt;&lt;code&gt;os.posix_spawn()&lt;/code&gt;&lt;/a&gt; no longer raise an exception on errors like missing program, but the child process fails with a non-zero &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：Popenはパフォーマンスを向上させるために&lt;a href=&quot;os#os.posix_spawn&quot;&gt; &lt;code&gt;os.posix_spawn()&lt;/code&gt; &lt;/a&gt;を使用できる場合があります。LinuxおよびQEMUユーザーエミュレーション用のWindowsサブシステムでは、&lt;a href=&quot;os#os.posix_spawn&quot;&gt; &lt;code&gt;os.posix_spawn()&lt;/code&gt; &lt;/a&gt;を使用するPopenコンストラクターがプログラムの欠落などのエラーで例外を発生させなくなりましたが、子プロセスはゼロ以外の&lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="d7e2b1c4fa696cecaaa37855f031bca696cf1145" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Previously, ZIP archives with an archive comment were not supported.</source>
          <target state="translated">バージョン3.8で変更されました。以前はアーカイブコメント付きのZIPアーカイブはサポートされていませんでした。</target>
        </trans-unit>
        <trans-unit id="285b58ffd1f812e4e4764fa8e479e3e50a4f0ba6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Previously, a nonzero value was returned on success; zero was returned on error under Windows. A zero value was returned on success; an exception was raised on error under Unix.</source>
          <target state="translated">バージョン 3.8 で変更されました。以前のバージョンでは、成功すると 0 以外の値が返され、Windows ではエラーになると 0 が返されました。Windows ではエラー時にゼロが返されましたが、Unix ではエラー時に例外が発生しました。</target>
        </trans-unit>
        <trans-unit id="e7d9fdfa90b54fb7332eeb8ce63a74646df3cc71" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Returned rows are now of type &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：返される行のタイプが&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; になりました&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c4fcc5cb75fecf2a77c59e708d98f606a489542" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Returns a regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instead of an &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt;. As of Python 3.7, regular dicts are guaranteed to be ordered. If the extra features of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; are required, the suggested remediation is to cast the result to the desired type: &lt;code&gt;OrderedDict(nt._asdict())&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;ではなく、通常の&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; を&lt;/a&gt;返します。Python 3.7以降では、通常の辞書が注文されることが保証されています。&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;の追加機能が必要な場合、推奨される修正方法は、結果を目的のタイプ &lt;code&gt;OrderedDict(nt._asdict())&lt;/code&gt; にキャストすることです。</target>
        </trans-unit>
        <trans-unit id="42c0e83bf67370a70fde9806c1efb6193c5f9e9f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Setting &lt;em&gt;workers&lt;/em&gt; to 0 now chooses the optimal number of cores.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;ワーカー&lt;/em&gt;を0に設定すると、最適なコア数が選択されるようになりました。</target>
        </trans-unit>
        <trans-unit id="771d8e9a3851df3af49e1b07022c4bbb765a0cb7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support added for reading and writing &lt;a href=&quot;#plistlib.UID&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt; tokens in binary plists as used by NSKeyedArchiver and NSKeyedUnarchiver.</source>
          <target state="translated">バージョン3.8で変更：NSKeyedArchiverおよびNSKeyedUnarchiverで使用されるバイナリplistの&lt;a href=&quot;#plistlib.UID&quot;&gt; &lt;code&gt;UID&lt;/code&gt; &lt;/a&gt;トークンの読み取りおよび書き込みのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="9720a4ffa61eb77da0fdc99321eb402eeaac087a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support for key logging to &lt;code id=&quot;index-3&quot;&gt;SSLKEYLOGFILE&lt;/code&gt; was added.</source>
          <target state="translated">バージョン3.8で変更： &lt;code id=&quot;index-3&quot;&gt;SSLKEYLOGFILE&lt;/code&gt; へのキーロギングのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="75777e254a30feb278083974f6981f20492dbf1d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support for star-wildcards was added.</source>
          <target state="translated">バージョン3.8で変更。スターワイルドカードのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f977148ca3ef260c9200e745bffff2c196e4d7f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Symbolic links and junctions are now resolved on Windows.</source>
          <target state="translated">バージョン3.8で変更しました。シンボリックリンクとジャンクションがWindowsで解決されるようになりました。</target>
        </trans-unit>
        <trans-unit id="5be9770a73269ed026cc13faf9459913d4871b04" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt; attribute was made compatible with the &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;属性が&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; &lt;/a&gt;属性と互換性を持つようになりました。</target>
        </trans-unit>
        <trans-unit id="4effcea4ba9372bfad772ce4649f999c1bbf590d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.toprettyxml&quot;&gt;&lt;code&gt;toprettyxml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.dom.minidom.Node.toprettyxml&quot;&gt; &lt;code&gt;toprettyxml()&lt;/code&gt; &lt;/a&gt;メソッドは、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="326209dfec75a6993833ab27dead655d771dfc17" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt;&lt;code&gt;toxml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt; &lt;code&gt;toxml()&lt;/code&gt; &lt;/a&gt;メソッドは、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="2e7d1fbd98c93c651aa3b92c1f1760f7bd5327dd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.writexml&quot;&gt;&lt;code&gt;writexml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.dom.minidom.Node.writexml&quot;&gt; &lt;code&gt;writexml()&lt;/code&gt; &lt;/a&gt;メソッドは、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="909beb02ff419b4de4b0efc0e870106ad9d3bdcc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;メソッドは、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="e808102c95ed39303f4a53fcb0d25dea27463410" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.etree.ElementTree.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;関数は、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="e85e90ad56b7d62906f992aaa7e1cf73baa7f9ed" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.tostring&quot;&gt;&lt;code&gt;tostring()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.etree.ElementTree.tostring&quot;&gt; &lt;code&gt;tostring()&lt;/code&gt; &lt;/a&gt;関数は、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="c2c6ad543541a6fb9935b4a3ece7e74c7dcc5189" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.tostringlist&quot;&gt;&lt;code&gt;tostringlist()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#xml.etree.ElementTree.tostringlist&quot;&gt; &lt;code&gt;tostringlist()&lt;/code&gt; &lt;/a&gt;関数は、ユーザーが指定した属性の順序を保持するようになりました。</target>
        </trans-unit>
        <trans-unit id="04170cbe44ff070972d8a2dcd99fab5945d3b5f1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; type is now accepted. If &lt;em&gt;cmd&lt;/em&gt; type is &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, the result type is also &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;タイプが受け入れられるようになりました。場合&lt;em&gt;CMD&lt;/em&gt;タイプは&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;、結果の型もある&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04e5fc248d06e2fdcad168e09a0ae38f0d419860" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;'\N{name}'&lt;/code&gt; escape sequence has been added. As in string literals, it expands to the named Unicode character (e.g. &lt;code&gt;'\N{EM DASH}'&lt;/code&gt;).</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;'\N{name}'&lt;/code&gt; エスケープシーケンスが追加されました。文字列リテラルと同様に、名前付きUnicode文字（たとえば、 &lt;code&gt;'\N{EM DASH}'&lt;/code&gt; ）に展開されます。</target>
        </trans-unit>
        <trans-unit id="05a88a1b4cbe0fdbe8c2f1496ed13debc25f66fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;_field_types&lt;/code&gt; and &lt;code&gt;__annotations__&lt;/code&gt; attributes are now regular dictionaries instead of instances of &lt;code&gt;OrderedDict&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;_field_types&lt;/code&gt; および &lt;code&gt;__annotations__&lt;/code&gt; 属性は、OrderedDictのインスタンスではなく、通常の辞書に &lt;code&gt;OrderedDict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85005cbe9e06b1381a087810cbd29bc4491e2533" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;pi&lt;/code&gt; events were added.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;comment&lt;/code&gt; と &lt;code&gt;pi&lt;/code&gt; イベントが追加されました。</target>
        </trans-unit>
        <trans-unit id="20aae1268b45710bee0f9a45ba5d871f93774ee7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;buffer_callback&lt;/em&gt; argument was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;buffer_callback&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="bfea79cdb17f5d2f932915fc6eddf8bf85ff7bfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;buffers&lt;/em&gt; argument was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;buffers&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="8af20677aabd86ef4ee40f96687d7d7ad8cc79c2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;deterministic&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;deterministic&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="8de17286b581affb7149eabb59d1e88b826c62e3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;force&lt;/em&gt; argument was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;force&lt;/em&gt;引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="d4167f909eaebd0f1a2d98d8fe827a008311466c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;headers&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;headers&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="0c7564c56b881507def86cd5f768f71b8d7f7fe6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;key&lt;/em&gt; can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;キー&lt;/em&gt;は &lt;code&gt;None&lt;/code&gt; にできます。</target>
        </trans-unit>
        <trans-unit id="8d672a75520bf1c65d12f1e74fd4e6cfc4d52217" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;missing_ok&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;missing_ok&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="dc56e812f676bb5fb614b867d6d2a62b1b7f7830" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;parser_list&lt;/em&gt; argument can be any iterable, not just a list.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;parser_list&lt;/em&gt;引数は、単なるリストではなく、任意の反復可能にすることができます。</target>
        </trans-unit>
        <trans-unit id="2977667c5b6f66dc8500038aea491d8f93f2b91c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;preexec_fn&lt;/em&gt; parameter is no longer supported in subinterpreters. The use of the parameter in a subinterpreter raises &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. The new restriction may affect applications that are deployed in mod_wsgi, uWSGI, and other embedded environments.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;preexec_fn&lt;/em&gt;パラメータはサブ&lt;em&gt;インタプリタで&lt;/em&gt;サポートされなくなりました。サブ&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;パラメーターを使用すると、RuntimeErrorが発生します。新しい制限は、mod_wsgi、uWSGI、およびその他の組み込み環境にデプロイされるアプリケーションに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="a0712600c6d7cf96989cbad4de45d18a860e3a0f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;quiet&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;quiet&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="ca1110df96a867622ea909c23654958b8a76da3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters were added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;sep&lt;/em&gt;および&lt;em&gt;bytes_per_sep&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="50b9e319e72a8559c451121d4790f2d8aa23b533" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;stacklevel&lt;/em&gt; parameter was added.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;stacklevel&lt;/em&gt;パラメータが追加されました。</target>
        </trans-unit>
        <trans-unit id="aa3d4dc6c843ea6c05d7ffbd261a97206ae34fac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;start&lt;/em&gt; parameter can be specified as a keyword argument.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;start&lt;/em&gt;パラメータをキーワード引数として指定できます。</target>
        </trans-unit>
        <trans-unit id="304b6ab556570c7a549f454b50a7badc313c03eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;validate&lt;/em&gt; parameter was added. Incorrect or mismatched style and fmt will raise a &lt;code&gt;ValueError&lt;/code&gt;. For example: &lt;code&gt;logging.Formatter('%(asctime)s - %(message)s', style='{')&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更：&lt;em&gt;validate&lt;/em&gt;パラメーターが追加されました。不正または不一致のスタイルとfmtは &lt;code&gt;ValueError&lt;/code&gt; を発生させます。例： &lt;code&gt;logging.Formatter('%(asctime)s - %(message)s', style='{')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="545457c2549e483aebc6f3ac0d4ce0f41d77d954" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default &lt;em&gt;dict_type&lt;/em&gt; is &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, since it now preserves insertion order.</source>
          <target state="translated">バージョン3.8で変更：デフォルトの&lt;em&gt;dict_type&lt;/em&gt;は&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;です。挿入順序が保持されるようになったためです。</target>
        </trans-unit>
        <trans-unit id="2079684575028851b7d3eb6467b105a6b2aa4269" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default format for new archives was changed to &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：新しいアーカイブのデフォルトのフォーマットが&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt; &lt;code&gt;GNU_FORMAT&lt;/code&gt; &lt;/a&gt;に変更されました。</target>
        </trans-unit>
        <trans-unit id="ca908339a30e0cba4eb37cb923b1f06c7f659cbc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default protocol is 4.</source>
          <target state="translated">バージョン3.8で変更。デフォルトのプロトコルは4です。</target>
        </trans-unit>
        <trans-unit id="2ebef822be8ee5749e6479312aa65310e5253fef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The fcntl module now contains &lt;code&gt;F_ADD_SEALS&lt;/code&gt;, &lt;code&gt;F_GET_SEALS&lt;/code&gt;, and &lt;code&gt;F_SEAL_*&lt;/code&gt; constants for sealing of &lt;a href=&quot;os#os.memfd_create&quot;&gt;&lt;code&gt;os.memfd_create()&lt;/code&gt;&lt;/a&gt; file descriptors.</source>
          <target state="translated">バージョン3.8で変更：fcntlモジュールに、&lt;a href=&quot;os#os.memfd_create&quot;&gt; &lt;code&gt;os.memfd_create()&lt;/code&gt; &lt;/a&gt;ファイル記述子のシーリング用のF_ADD_SEALS、 &lt;code&gt;F_GET_SEALS&lt;/code&gt; 、および &lt;code&gt;F_SEAL_*&lt;/code&gt; 定数が含ま &lt;code&gt;F_ADD_SEALS&lt;/code&gt; ようになりました。</target>
        </trans-unit>
        <trans-unit id="0fdd61387c56eea4e65ebef132dca0bf826a81f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The filename parameter supports a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">バージョン3.8で変更：filenameパラメータは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パスのようなオブジェクトを&lt;/a&gt;サポートします。</target>
        </trans-unit>
        <trans-unit id="a79c8d0eb106105a3ea60ee7c51023f0f18220dc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The first character is now put into titlecase rather than uppercase. This means that characters like digraphs will only have their first letter capitalized, instead of the full character.</source>
          <target state="translated">バージョン3.8で変更。最初の文字は大文字ではなく、タイトルケースに入れられるようになりました。これは、ディグラフのような文字は完全な文字ではなく、最初の文字だけが大文字になることを意味します。</target>
        </trans-unit>
        <trans-unit id="d53fb1433995b4dd43f06ceff736b40af2af8986" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The function now uses the UTF-8 encoding on Windows, rather than the ANSI code page: see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for the rationale. The function is no longer deprecated on Windows.</source>
          <target state="translated">バージョン3.8で変更：この関数は、ANSIコードページではなく、WindowsでUTF-8エンコーディングを使用するようになりました。根拠については、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;を参照してください。この関数はWindowsでは廃止されなくなりました。</target>
        </trans-unit>
        <trans-unit id="d061a5db8b557f94300e6c84551a181737a7570c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The keyword parameter &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are now keyword-only.</source>
          <target state="translated">バージョン3.8で変更：キーワードパラメータ&lt;em&gt;モード&lt;/em&gt;と&lt;em&gt;openhook&lt;/em&gt;がキーワードのみになりました。</target>
        </trans-unit>
        <trans-unit id="80b97dbd985f32b99f90ad6e77eabda0e07eecfb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The keyword parameters &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are now keyword-only.</source>
          <target state="translated">バージョン3.8で変更：キーワードパラメータ&lt;em&gt;モード&lt;/em&gt;と&lt;em&gt;openhook&lt;/em&gt;がキーワードのみになりました。</target>
        </trans-unit>
        <trans-unit id="a137e2a56b6aa0ecceee0ed1e0ac6782df1c991e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The method no longer ignores silently arbitrary exceptions.</source>
          <target state="translated">バージョン 3.8 で変更されました。メソッドは静かに任意の例外を無視しなくなりました。</target>
        </trans-unit>
        <trans-unit id="624940251496d3462640e233cff8fb9eda270ed3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The modern pax (POSIX.1-2001) format is now used instead of the legacy GNU format for archives created with &lt;code&gt;format=&quot;tar&quot;&lt;/code&gt;.</source>
          <target state="translated">バージョン3.8で変更： &lt;code&gt;format=&quot;tar&quot;&lt;/code&gt; で作成されたアーカイブのレガシーGNU形式の代わりに、最新のpax（POSIX.1-2001）形式が使用されるようになりました。</target>
        </trans-unit>
        <trans-unit id="f239db16b98ad4803eba4a67a02896aa106622c7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: This class now enables TLS 1.3 &lt;a href=&quot;ssl#ssl.SSLContext.post_handshake_auth&quot;&gt;&lt;code&gt;ssl.SSLContext.post_handshake_auth&lt;/code&gt;&lt;/a&gt; for the default &lt;em&gt;context&lt;/em&gt; or when &lt;em&gt;cert_file&lt;/em&gt; is passed with a custom &lt;em&gt;context&lt;/em&gt;.</source>
          <target state="translated">バージョン3.8で変更：このクラスは、デフォルトの&lt;em&gt;コンテキスト&lt;/em&gt;に対して、または&lt;em&gt;cert_file&lt;/em&gt;がカスタム&lt;em&gt;コンテキスト&lt;/em&gt;とともに渡されるときに、TLS 1.3 &lt;a href=&quot;ssl#ssl.SSLContext.post_handshake_auth&quot;&gt; &lt;code&gt;ssl.SSLContext.post_handshake_auth&lt;/code&gt; &lt;/a&gt;を有効にします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1ef2c7ccf036ca4439f82be8e884fdde51a215" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: This method raises &lt;a href=&quot;#concurrent.futures.InvalidStateError&quot;&gt;&lt;code&gt;concurrent.futures.InvalidStateError&lt;/code&gt;&lt;/a&gt; if the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; is already done.</source>
          <target state="translated">バージョン3.8で変更：&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;がすでに完了&lt;a href=&quot;#concurrent.futures.InvalidStateError&quot;&gt; &lt;code&gt;concurrent.futures.InvalidStateError&lt;/code&gt; &lt;/a&gt;場合、このメソッドはconcurrent.futures.InvalidStateErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="394c353092cb3b47cf57048f40226b28c269ae25" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: UNIX switched to use &lt;a href=&quot;asyncio-policy#asyncio.ThreadedChildWatcher&quot;&gt;&lt;code&gt;ThreadedChildWatcher&lt;/code&gt;&lt;/a&gt; for spawning subprocesses from different threads without any limitation.</source>
          <target state="translated">バージョン3.8で変更：UNIXは、制限なしに異なるスレッドからサブプロセスを生成するために&lt;a href=&quot;asyncio-policy#asyncio.ThreadedChildWatcher&quot;&gt; &lt;code&gt;ThreadedChildWatcher&lt;/code&gt; &lt;/a&gt;を使用するように切り替えました。</target>
        </trans-unit>
        <trans-unit id="33e5ec1bbfa2ed27a529c45ada501894f3d10001" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Windows support was added.</source>
          <target state="translated">バージョン3.8で変更しました。Windows対応を追加しました。</target>
        </trans-unit>
        <trans-unit id="cd45d23bbce40d05aaa814b4f7e6f45c5797132d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: a &lt;code&gt;validate&lt;/code&gt; key (with default of &lt;code&gt;True&lt;/code&gt;) can be added into the &lt;code&gt;formatters&lt;/code&gt; section of the configuring dict, this is to validate the format.</source>
          <target state="translated">バージョン3.8で変更：設定キーの &lt;code&gt;formatters&lt;/code&gt; セクションに &lt;code&gt;validate&lt;/code&gt; キー（デフォルトは &lt;code&gt;True&lt;/code&gt; ）を追加できます。これはフォーマットを検証するためのものです。</target>
        </trans-unit>
        <trans-unit id="3774ed7c81160fa9e0449194cd87eb400bb3d2a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Allow keyword arguments. Formerly, only positional arguments were supported.</source>
          <target state="translated">バージョン 3.9 で変更されました:キーワード引数を許可します。以前は位置引数のみがサポートされていました。</target>
        </trans-unit>
        <trans-unit id="34ea7116b7f684eddf2aab307124c9f724d616c8" translate="yes" xml:space="preserve">
          <source>Changes since Python 2.6</source>
          <target state="translated">Python 2.6 からの変更点</target>
        </trans-unit>
        <trans-unit id="af27daa71fe1a7571008063e945c7b851188960d" translate="yes" xml:space="preserve">
          <source>Changes since Python 3.0</source>
          <target state="translated">Python 3.0からの変更点</target>
        </trans-unit>
        <trans-unit id="b5285ff82915084c24f53b021089e3c038bd39bb" translate="yes" xml:space="preserve">
          <source>Changes the default filesystem encoding and errors mode to &amp;lsquo;mbcs&amp;rsquo; and &amp;lsquo;replace&amp;rsquo; respectively, for consistency with versions of Python prior to 3.6.</source>
          <target state="translated">3.6より前のバージョンのPythonとの一貫性を保つために、デフォルトのファイルシステムエンコーディングとエラーモードをそれぞれ「mbcs」と「replace」に変更します。</target>
        </trans-unit>
        <trans-unit id="35d06bc14accb579d39bcde755717fa935c382a4" translate="yes" xml:space="preserve">
          <source>Changing languages on the fly</source>
          <target state="translated">言語を変更するには</target>
        </trans-unit>
        <trans-unit id="919bca2b1a9515d85755dd3cba4305e371637972" translate="yes" xml:space="preserve">
          <source>Channel number out of range</source>
          <target state="translated">チャンネル番号が範囲外</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="c6f67a848f6294b1692cf5231f1d0f0b0180be08" translate="yes" xml:space="preserve">
          <source>Character Encodings</source>
          <target state="translated">文字エンコード</target>
        </trans-unit>
        <trans-unit id="79ef15c3c8a14317ac1a3204f73b4c4dd198d717" translate="yes" xml:space="preserve">
          <source>Character classes such as &lt;code&gt;\w&lt;/code&gt; or &lt;code&gt;\S&lt;/code&gt; (defined below) are also accepted inside a set, although the characters they match depends on whether &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; mode is in force.</source>
          <target state="translated">などの文字クラス &lt;code&gt;\w&lt;/code&gt; または &lt;code&gt;\S&lt;/code&gt; これらが一致する文字かどうかにもよるが（以下に定義）はまた、セットの内部に受け入れられる&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;モードが有効です。</target>
        </trans-unit>
        <trans-unit id="1ce4e1be05a213a12afbc5b91825b11c73d700b6" translate="yes" xml:space="preserve">
          <source>Character device.</source>
          <target state="translated">キャラクターデバイス。</target>
        </trans-unit>
        <trans-unit id="ce2eee32fbe53d901877b0a20c65b4e0da28f119" translate="yes" xml:space="preserve">
          <source>Character offset into the line where the error occurred. The first column is numbered &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">エラーが発生した行への文字オフセット。最初の列の番号は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="af5854c5bfb98a5f3f51341e1afa34e02116ee5e" translate="yes" xml:space="preserve">
          <source>Character used between groups.</source>
          <target state="translated">グループ間で使用するキャラクター</target>
        </trans-unit>
        <trans-unit id="23f54a58b8d8993addcad6b92bb765b4dee510f2" translate="yes" xml:space="preserve">
          <source>Character. Converts the integer to the corresponding unicode character before printing.</source>
          <target state="translated">文字。印刷前に整数を対応するユニコード文字に変換します。</target>
        </trans-unit>
        <trans-unit id="4d207fdbae5dcf67e4a93303f412b5af86046702" translate="yes" xml:space="preserve">
          <source>Characters can be listed individually, e.g. &lt;code&gt;[amk]&lt;/code&gt; will match &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, or &lt;code&gt;'k'&lt;/code&gt;.</source>
          <target state="translated">文字は個別にリストできます。たとえば、 &lt;code&gt;[amk]&lt;/code&gt; は &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'m'&lt;/code&gt; 、または &lt;code&gt;'k'&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="ed95a72b6d2b9c9f84061a97cd5b03fb39eb81cd" translate="yes" xml:space="preserve">
          <source>Characters in &lt;a href=&quot;#shlex.shlex.quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; that will interpret escape characters defined in &lt;a href=&quot;#shlex.shlex.escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt;. This is only used in POSIX mode, and includes just &lt;code&gt;'&quot;'&lt;/code&gt; by default.</source>
          <target state="translated">escapeで定義された&lt;a href=&quot;#shlex.shlex.escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;文字を解釈する&lt;a href=&quot;#shlex.shlex.quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;内の文字。これはPOSIXモードでのみ使用され、デフォルトでは &lt;code&gt;'&quot;'&lt;/code&gt; のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="3054d86a10c4fbce4def9f7d923ccba51bcd5280" translate="yes" xml:space="preserve">
          <source>Characters in the &lt;code&gt;netloc&lt;/code&gt; attribute that decompose under NFKC normalization (as used by the IDNA encoding) into any of &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, or &lt;code&gt;:&lt;/code&gt; will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. If the URL is decomposed before parsing, no error will be raised.</source>
          <target state="translated">文字 &lt;code&gt;netloc&lt;/code&gt; 属性のいずれかに分解するNFKC正規下（IDNA符号化で使用される）は &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;#&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、または &lt;code&gt;:&lt;/code&gt; は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; を発生させ&lt;/a&gt;ます。解析前にURLが分解されても、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="f0892b805a19e7979539da13f4a03fa4c7a3b47b" translate="yes" xml:space="preserve">
          <source>Characters that are not within a range can be matched by &lt;em&gt;complementing&lt;/em&gt; the set. If the first character of the set is &lt;code&gt;'^'&lt;/code&gt;, all the characters that are &lt;em&gt;not&lt;/em&gt; in the set will be matched. For example, &lt;code&gt;[^5]&lt;/code&gt; will match any character except &lt;code&gt;'5'&lt;/code&gt;, and &lt;code&gt;[^^]&lt;/code&gt; will match any character except &lt;code&gt;'^'&lt;/code&gt;. &lt;code&gt;^&lt;/code&gt; has no special meaning if it&amp;rsquo;s not the first character in the set.</source>
          <target state="translated">範囲内にない文字は、セットを&lt;em&gt;補完&lt;/em&gt;することで一致させることができます。セットの最初の文字が &lt;code&gt;'^'&lt;/code&gt; の場合、セットに&lt;em&gt;ない&lt;/em&gt;すべての文字が一致します。たとえば、 &lt;code&gt;[^5]&lt;/code&gt; は &lt;code&gt;'5'&lt;/code&gt; 以外のすべての文字に一致し、 &lt;code&gt;[^^]&lt;/code&gt; は &lt;code&gt;'^'&lt;/code&gt; 以外のすべての文字に一致します。 &lt;code&gt;^&lt;/code&gt; は、セットの最初の文字でなければ特別な意味はありません。</target>
        </trans-unit>
        <trans-unit id="8f2b9c747864cdbd3e6dd42f23d020134d4855b8" translate="yes" xml:space="preserve">
          <source>Characters that will be considered as escape. This will be only used in POSIX mode, and includes just &lt;code&gt;'\'&lt;/code&gt; by default.</source>
          <target state="translated">エスケープと見なされる文字。これはPOSIXモードでのみ使用され、デフォルトでは &lt;code&gt;'\'&lt;/code&gt; のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="56fdbebeb62e8c8ad650db8d2d4f8c89cabe16d9" translate="yes" xml:space="preserve">
          <source>Characters that will be considered string quotes. The token accumulates until the same quote is encountered again (thus, different quote types protect each other as in the shell.) By default, includes ASCII single and double quotes.</source>
          <target state="translated">文字列引用符とみなされる文字。トークンは、同じ引用符に再び遭遇するまで蓄積されます (このように、異なる引用符タイプはシェルのようにお互いを保護します)。 デフォルトでは、ASCII のシングル引用符とダブル引用符を含みます。</target>
        </trans-unit>
        <trans-unit id="e26e84066665808d0cbf6f9f145fc15a6a637560" translate="yes" xml:space="preserve">
          <source>Characters that will be considered whitespace and skipped. Whitespace bounds tokens. By default, includes space, tab, linefeed and carriage-return.</source>
          <target state="translated">空白とみなされてスキップされる文字。空白はトークンの境界線となります。デフォルトでは、スペース、タブ、改行、キャリッジリターンが含まれます。</target>
        </trans-unit>
        <trans-unit id="d022970dc0ba6ab2971b67f3a7fd54783cabb675" translate="yes" xml:space="preserve">
          <source>Characters were found in the public id that are not allowed.</source>
          <target state="translated">公開IDに許可されていない文字が見つかりました。</target>
        </trans-unit>
        <trans-unit id="f10275b2cd296a2c580926b8c3dffee509567a95" translate="yes" xml:space="preserve">
          <source>Check Module</source>
          <target state="translated">チェックモジュール</target>
        </trans-unit>
        <trans-unit id="bdb8b91f2d740baa2cabe90961bbc2589b6c57cb" translate="yes" xml:space="preserve">
          <source>Check for presence of docstrings.</source>
          <target state="translated">ドクストリングスの存在を確認します。</target>
        </trans-unit>
        <trans-unit id="85e4c713edbbd946421533a48cad53799b73f5e8" translate="yes" xml:space="preserve">
          <source>Check for the existence of the compiler executables whose names are listed in &lt;em&gt;cmd_names&lt;/em&gt; or all the compiler executables when &lt;em&gt;cmd_names&lt;/em&gt; is empty and return the first missing executable or &lt;code&gt;None&lt;/code&gt; when none is found missing.</source>
          <target state="translated">名前が&lt;em&gt;cmd_namesに&lt;/em&gt;リストされているコンパイラ実行可能ファイル、または&lt;em&gt;cmd_names&lt;/em&gt;が空の場合はすべてのコンパイラ実行可能ファイルの存在を確認し、最初に見つからない実行可能ファイル、または見つからないものが見つからない場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7943cf444596e696934b71c4dd7dd0297f1a68fa" translate="yes" xml:space="preserve">
          <source>Check if an object appears to be a valid element object. &lt;em&gt;element&lt;/em&gt; is an element instance. Return &lt;code&gt;True&lt;/code&gt; if this is an element object.</source>
          <target state="translated">オブジェクトが有効な要素オブジェクトであるかどうかを確認してください。&lt;em&gt;element&lt;/em&gt;は要素インスタンスです。これが要素オブジェクトの場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="55eaba83b03a956c13f3391a5007a59ca372d70c" translate="yes" xml:space="preserve">
          <source>Check if child process has terminated. Set and return &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; attribute. Otherwise, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">子プロセスが終了したかどうかを確認します。&lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;属性を設定して返します。それ以外の場合は、 &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c0712d467992f66d9442557ee7ec76f241849b2b" translate="yes" xml:space="preserve">
          <source>Check if the fault handler is enabled.</source>
          <target state="translated">フォルトハンドラが有効になっているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="e84c72c066f9ed7305ec93a1cfb6efa9b2b55d6a" translate="yes" xml:space="preserve">
          <source>Check if there is a breakpoint for &lt;em&gt;lineno&lt;/em&gt; of &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;filenameの&lt;/em&gt;&lt;em&gt;lineno&lt;/em&gt;にブレークポイントがあるかどうかを確認し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="23934a29089fe2d98b054c51d822989b0be514dc" translate="yes" xml:space="preserve">
          <source>Check the HTTP server&amp;rsquo;s log files. (&lt;code&gt;tail -f logfile&lt;/code&gt; in a separate window may be useful!)</source>
          <target state="translated">HTTPサーバーのログファイルを確認してください。（別のウィンドウで &lt;code&gt;tail -f logfile&lt;/code&gt; が役立つかもしれません！）</target>
        </trans-unit>
        <trans-unit id="f80ad831f2151d2e00855180685c13a492c69b1d" translate="yes" xml:space="preserve">
          <source>Check the cache for validity. Use this function if files in the cache may have changed on disk, and you require the updated version. If &lt;em&gt;filename&lt;/em&gt; is omitted, it will check all the entries in the cache.</source>
          <target state="translated">キャッシュの有効性を確認してください。キャッシュ内のファイルがディスク上で変更された可能性があり、更新されたバージョンが必要な場合は、この関数を使用します。場合は&lt;em&gt;、ファイル名が&lt;/em&gt;省略され、それがキャッシュ内のすべてのエントリをチェックします。</target>
        </trans-unit>
        <trans-unit id="43a3f0ef33be472946d15e16602b802e1ad456b8" translate="yes" xml:space="preserve">
          <source>Check the installation instructions above.</source>
          <target state="translated">上記のインストール方法を確認してください。</target>
        </trans-unit>
        <trans-unit id="46dda6ccd623911741f8bc126a4c6de4d3708cf2" translate="yes" xml:space="preserve">
          <source>Check the syntax of the module currently open in the Editor window. If the module has not been saved IDLE will either prompt the user to save or autosave, as selected in the General tab of the Idle Settings dialog. If there is a syntax error, the approximate location is indicated in the Editor window.</source>
          <target state="translated">エディタウィンドウで現在開いているモジュールの構文を確認します。モジュールが保存されていない場合、アイドル設定ダイアログの一般タブで選択されているように、IDLEはユーザーに保存を促すか、自動保存を行います。構文エラーがある場合、おおよその位置がエディタ・ウィンドウに表示されます。</target>
        </trans-unit>
        <trans-unit id="6f56ecd56a94503c6e69a9dfc2c9b397df916745" translate="yes" xml:space="preserve">
          <source>Check the validity of an address on this server using SMTP &lt;code&gt;VRFY&lt;/code&gt;. Returns a tuple consisting of code 250 and a full &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; address (including human name) if the user address is valid. Otherwise returns an SMTP error code of 400 or greater and an error string.</source>
          <target state="translated">SMTP &lt;code&gt;VRFY&lt;/code&gt; を使用して、このサーバーのアドレスの有効性を確認してください。ユーザーアドレスが有効な場合、コード250と完全な&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;アドレス（人の名前を含む）で構成されるタプルを返します。それ以外の場合は、400以上のSMTPエラーコードとエラー文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4dbcd0e433593b55be57673e617ea920d3630924" translate="yes" xml:space="preserve">
          <source>Check whether &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. This means that you can customize the behavior of &lt;code&gt;issubclass&lt;/code&gt; further without the need to call &lt;a href=&quot;#abc.ABCMeta.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; on every class you want to consider a subclass of the ABC. (This class method is called from the &lt;code&gt;__subclasscheck__()&lt;/code&gt; method of the ABC.)</source>
          <target state="translated">サブクラスがこのABCの&lt;em&gt;サブクラス&lt;/em&gt;と見なされるかどうかを確認してください。つまり、ABCのサブクラスと見なしたいすべてのクラスで&lt;a href=&quot;#abc.ABCMeta.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;を呼び出す必要なく、 &lt;code&gt;issubclass&lt;/code&gt; の動作をさらにカスタマイズできます。（このクラスメソッドは、ABCの &lt;code&gt;__subclasscheck__()&lt;/code&gt; メソッドから呼び出されます。）</target>
        </trans-unit>
        <trans-unit id="4bbc973f550662033410c4a11c6ed5b6eae695b1" translate="yes" xml:space="preserve">
          <source>Check whether we should break here, depending on the way the breakpoint &lt;em&gt;b&lt;/em&gt; was set.</source>
          <target state="translated">ブレークポイント&lt;em&gt;bの&lt;/em&gt;設定方法に応じて、ここでブレークするかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="99418ed53754c477564d846e242001c0d19dcc8a" translate="yes" xml:space="preserve">
          <source>Checking &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; detects classes that are registered as &lt;a href=&quot;#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; or that have an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method, but it does not detect classes that iterate with the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. The only reliable way to determine whether an object is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; is to call &lt;code&gt;iter(obj)&lt;/code&gt;.</source>
          <target state="translated">チェック &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; として登録されているクラスを検出する&lt;a href=&quot;#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;か持って&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;メソッドを、それがその反復を持つクラスを検出しない&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;メソッド。オブジェクトが&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;かどうかを判断する唯一の信頼できる方法は、 &lt;code&gt;iter(obj)&lt;/code&gt; を呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="2dfe36b1961d60687a3d13b0c81484ac9e92796e" translate="yes" xml:space="preserve">
          <source>Checking a password is usually done by passing the plain-text password as &lt;em&gt;word&lt;/em&gt; and the full results of a previous &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt()&lt;/code&gt;&lt;/a&gt; call, which should be the same as the results of this call.</source>
          <target state="translated">パスワードのチェックは通常、プレーンテキストのパスワードを&lt;em&gt;ワード&lt;/em&gt;として渡し、前の&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt()&lt;/code&gt; &lt;/a&gt;呼び出しの完全な結果を渡すことによって行われます。これは、この呼び出しの結果と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="770c82b5a4c4a7f96ddd79e7e6610cbd680a79ae" translate="yes" xml:space="preserve">
          <source>Checking examples in docstrings.</source>
          <target state="translated">docstringsで例をチェックしています。</target>
        </trans-unit>
        <trans-unit id="c20f4941d04f4e4d9b4f519a56849d7fe2ed63bf" translate="yes" xml:space="preserve">
          <source>Checking for a Pair</source>
          <target state="translated">ペアのチェック</target>
        </trans-unit>
        <trans-unit id="cf05a79c49715aff0b97839ee1149bc84d317bac" translate="yes" xml:space="preserve">
          <source>Checking if a module can be imported</source>
          <target state="translated">モジュールをインポートできるかどうかの確認</target>
        </trans-unit>
        <trans-unit id="7ecb621d869ae58352896620fc71f13cae4fc7e0" translate="yes" xml:space="preserve">
          <source>Checking multiple calls with mock</source>
          <target state="translated">モックで複数の通話を確認する</target>
        </trans-unit>
        <trans-unit id="4ba8ccbcef578531fba8afe7d60d9d863915123f" translate="yes" xml:space="preserve">
          <source>Checkpoint mailbox on server.</source>
          <target state="translated">サーバー上のメールボックスをチェックポイントにします。</target>
        </trans-unit>
        <trans-unit id="a50c8a7b535fdd63163079f311f573e64ac86b0b" translate="yes" xml:space="preserve">
          <source>Checks for ASCII any printable character except space.</source>
          <target state="translated">スペース以外の印刷可能な文字がASCIIであるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="2e8e13dea2bdaa8179c95d8290ae2b14dcc59aab" translate="yes" xml:space="preserve">
          <source>Checks for ASCII white-space characters; space, line feed, carriage return, form feed, horizontal tab, vertical tab.</source>
          <target state="translated">ASCII の空白文字(スペース、改行、改行、キャリッジリターン、フォームフィード、水平タブ、垂直タブ)をチェックします。</target>
        </trans-unit>
        <trans-unit id="0c426fca78da2d4087d0c5d45267524797869ed7" translate="yes" xml:space="preserve">
          <source>Checks for a character value that fits in the 7-bit ASCII set.</source>
          <target state="translated">7 ビット ASCII セットに収まる文字値をチェックします。</target>
        </trans-unit>
        <trans-unit id="d7cfa4770d32e6893e8f2c4a0e698e841259c353" translate="yes" xml:space="preserve">
          <source>Checks for a non-ASCII character (ordinal values 0x80 and above).</source>
          <target state="translated">非 ASCII 文字 (序数値 0x80 以上)をチェックします。</target>
        </trans-unit>
        <trans-unit id="68b367e7809261a0005e66291eed0c1cf11e75f6" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII alphabetic character; it is equivalent to &lt;code&gt;isupper(c) or
islower(c)&lt;/code&gt;.</source>
          <target state="translated">ASCIIアルファベット文字をチェックします。 &lt;code&gt;isupper(c) or islower(c)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="e082174a7d3b99ac0950d4b67971c9ff513dbefd" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII alphanumeric character; it is equivalent to &lt;code&gt;isalpha(c) or
isdigit(c)&lt;/code&gt;.</source>
          <target state="translated">ASCII英数字かどうかをチェックします。 &lt;code&gt;isalpha(c) or isdigit(c)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="184ef8ba37bc7bc05aef137b47e5b55808a1eff0" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII control character (in the range 0x00 to 0x1f or 0x7f).</source>
          <target state="translated">ASCII 制御文字 (0x00 から 0x1f または 0x7f の範囲)をチェックします。</target>
        </trans-unit>
        <trans-unit id="a1143d7d4de709822eb925678fb09d5a30bc314e" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII control character (ordinal values 0 to 31).</source>
          <target state="translated">ASCII 制御文字(序数値 0 ~ 31)をチェックします。</target>
        </trans-unit>
        <trans-unit id="9948020e9e1c4527fc1eadf2a61359ef7ae24081" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII decimal digit, &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt;. This is equivalent to &lt;code&gt;c in string.digits&lt;/code&gt;.</source>
          <target state="translated">ASCII 10進数、 &lt;code&gt;'0'&lt;/code&gt; から &lt;code&gt;'9'&lt;/code&gt; までをチェックします。これは &lt;code&gt;c in string.digits&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="9ed52c2fc78805e535882f795a920d7efe8d62e4" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII hexadecimal digit. This is equivalent to &lt;code&gt;c in
string.hexdigits&lt;/code&gt;.</source>
          <target state="translated">ASCII 16進数をチェックします。これは &lt;code&gt;c in string.hexdigits&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="0142a361c62cc534bc11a55d9cb879e4ca7b164e" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII lower-case character.</source>
          <target state="translated">ASCII の小文字をチェックします。</target>
        </trans-unit>
        <trans-unit id="9606c5bcd28699aee7059ce73e632d4785cc1596" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII uppercase letter.</source>
          <target state="translated">ASCII の大文字かどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="670f3c11d53db0f8621ecb94fe13e60a352e2633" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII whitespace character; space or horizontal tab.</source>
          <target state="translated">ASCII の空白文字(スペースまたは水平タブ)をチェックします。</target>
        </trans-unit>
        <trans-unit id="0c47a1c59fc7cbad54a98337fa9f17c2b8329fb7" translate="yes" xml:space="preserve">
          <source>Checks for any ASCII printable character including space.</source>
          <target state="translated">スペースを含むASCII印刷可能な文字をチェックします。</target>
        </trans-unit>
        <trans-unit id="b1af863acbf04a72f3e1bb9d7d5a9d830a57b7c4" translate="yes" xml:space="preserve">
          <source>Checks for any printable ASCII character which is not a space or an alphanumeric character.</source>
          <target state="translated">スペースや英数字ではない印刷可能なASCII文字をチェックします。</target>
        </trans-unit>
        <trans-unit id="2bab43b31c3c05956b489889cb73e31b66dfe5e7" translate="yes" xml:space="preserve">
          <source>Checks for buffer full or a record at the &lt;em&gt;flushLevel&lt;/em&gt; or higher.</source>
          <target state="translated">バッファーがいっぱいか、&lt;em&gt;flushLevel&lt;/em&gt;以上のレコードをチェックします。</target>
        </trans-unit>
        <trans-unit id="5755f42c8c1bc9d74a65eb07df3bacffc7e77290" translate="yes" xml:space="preserve">
          <source>Checks that</source>
          <target state="translated">それをチェックします。</target>
        </trans-unit>
        <trans-unit id="773af1d672530d6e774e2caee9abe5a931430e72" translate="yes" xml:space="preserve">
          <source>Checks to see if the file has changed. If it has, the existing stream is flushed and closed and the file opened again, typically as a precursor to outputting the record to the file.</source>
          <target state="translated">ファイルが変更されたかどうかをチェックします。変更があった場合、既存のストリームがフラッシュされて閉じられ、ファイルが再び開かれます。</target>
        </trans-unit>
        <trans-unit id="2cb6184d1ccbcf5b73046565c4911768a96dc999" translate="yes" xml:space="preserve">
          <source>Checks to see if this logger has any handlers configured. This is done by looking for handlers in this logger and its parents in the logger hierarchy. Returns &lt;code&gt;True&lt;/code&gt; if a handler was found, else &lt;code&gt;False&lt;/code&gt;. The method stops searching up the hierarchy whenever a logger with the &amp;lsquo;propagate&amp;rsquo; attribute set to false is found - that will be the last logger which is checked for the existence of handlers.</source>
          <target state="translated">このロガーにハンドラーが構成されているかどうかを確認します。これは、このロガー内のハンドラーとロガー階層内のその親を探すことによって行われます。ハンドラが見つかった場合は &lt;code&gt;True&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。このメソッドは、 'propagate'属性がfalseに設定されたロガーが見つかると、階層の検索を停止します。これは、ハンドラーの存在が確認される最後のロガーになります。</target>
        </trans-unit>
        <trans-unit id="6d1a9e9deb3d91d99897c01ea23bc95014cadf6d" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;__annotations__&lt;/code&gt; is defined in &lt;code&gt;locals()&lt;/code&gt;, if not it is set up to an empty &lt;code&gt;dict&lt;/code&gt;. This opcode is only emitted if a class or module body contains &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;variable annotations&lt;/a&gt; statically.</source>
          <target state="translated">&lt;code&gt;__annotations__&lt;/code&gt; が &lt;code&gt;locals()&lt;/code&gt; で定義されているかどうかを確認します。定義されていない場合は、空の &lt;code&gt;dict&lt;/code&gt; に設定されます。このオペコードは、クラスまたはモジュールの本体に&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;変数アノテーションが&lt;/a&gt;静的に含まれている場合にのみ発行されます。</target>
        </trans-unit>
        <trans-unit id="0c4c18349ecd0287371be1eb0aa9c1c43b7b7d53" translate="yes" xml:space="preserve">
          <source>ChildProcessError</source>
          <target state="translated">ChildProcessError</target>
        </trans-unit>
        <trans-unit id="98c6cd781584b898b1283038c6189e4de2602599" translate="yes" xml:space="preserve">
          <source>Children are nested, and we can access specific child nodes by index:</source>
          <target state="translated">子は入れ子になっており、特定の子ノードにインデックスでアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="f00ff5d98a3701813881597372a21475919195e7" translate="yes" xml:space="preserve">
          <source>Children present in &lt;em&gt;item&lt;/em&gt; that are not present in &lt;em&gt;newchildren&lt;/em&gt; are detached from the tree. No items in &lt;em&gt;newchildren&lt;/em&gt; may be an ancestor of &lt;em&gt;item&lt;/em&gt;. Note that not specifying &lt;em&gt;newchildren&lt;/em&gt; results in detaching &lt;em&gt;item&lt;/em&gt;&amp;rsquo;s children.</source>
          <target state="translated">存在する子供&lt;em&gt;の項目&lt;/em&gt;に存在しない&lt;em&gt;newchildrenが&lt;/em&gt;木から切り離されています。&lt;em&gt;newchildrenの&lt;/em&gt;アイテムは、&lt;em&gt;アイテムの&lt;/em&gt;祖先になることはできません。&lt;em&gt;newchildren&lt;/em&gt;を指定しないと、&lt;em&gt;アイテム&lt;/em&gt;の子が&lt;em&gt;切り離さ&lt;/em&gt;れることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e1db63cafcfdc67096bcfdd9d91b0fbb6521c793" translate="yes" xml:space="preserve">
          <source>Chunk ID</source>
          <target state="translated">チャンクID</target>
        </trans-unit>
        <trans-unit id="736a8e0f6e2fa7d4d46a8ed97a66aa91c94e8db9" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding has been added to the HTTP protocol version 1.1. Unless the HTTP server is known to handle HTTP 1.1, the caller must either specify the Content-Length, or must pass a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or bytes-like object that is not also a file as the body representation.</source>
          <target state="translated">チャンク転送エンコーディングがHTTPプロトコルバージョン1.1に追加されました。HTTPサーバーがHTTP 1.1を処理することがわかっている場合を除いて、呼び出し元はContent-Lengthを指定するか、ボディ表現としてファイルではない&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;またはbytes-likeオブジェクトを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="00e39bd1891e39150546d8429f33f852994f7095" translate="yes" xml:space="preserve">
          <source>Cipher selection</source>
          <target state="translated">暗号の選択</target>
        </trans-unit>
        <trans-unit id="fd328df32af47ff4f34212c8adf3d3fbaf1aea24" translate="yes" xml:space="preserve">
          <source>Citations</source>
          <target state="translated">Citations</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="5011f28b30cdf7dcd4371bf2deb0312a91a12745" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; is the implementation; its methods &lt;a href=&quot;#fileinput.filename&quot;&gt;&lt;code&gt;filename()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.lineno&quot;&gt;&lt;code&gt;lineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.filelineno&quot;&gt;&lt;code&gt;filelineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isfirstline&quot;&gt;&lt;code&gt;isfirstline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isstdin&quot;&gt;&lt;code&gt;isstdin()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.nextfile&quot;&gt;&lt;code&gt;nextfile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fileinput.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; correspond to the functions of the same name in the module. In addition it has a &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method which returns the next input line, and a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method which implements the sequence behavior. The sequence must be accessed in strictly sequential order; random access and &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; cannot be mixed.</source>
          <target state="translated">クラス&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;は実装です。そのメソッド&lt;a href=&quot;#fileinput.filename&quot;&gt; &lt;code&gt;filename()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.lineno&quot;&gt; &lt;code&gt;lineno()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.filelineno&quot;&gt; &lt;code&gt;filelineno()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.isfirstline&quot;&gt; &lt;code&gt;isfirstline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.isstdin&quot;&gt; &lt;code&gt;isstdin()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#fileinput.nextfile&quot;&gt; &lt;code&gt;nextfile()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#fileinput.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;は、モジュール内の同じ名前の関数に対応しています。さらに、次の入力行を返す&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;メソッドと、シーケンスの動作を実装する&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;メソッドがあります。シーケンスは厳密に連続した順序でアクセスする必要があります。ランダムアクセスと&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;を混在させることはできません。</target>
        </trans-unit>
        <trans-unit id="60c75dc29cb5dadfc3fedd4fb63015bb910bb221" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;#random.Random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; can also be subclassed if you want to use a different basic generator of your own devising: in that case, override the &lt;code&gt;random()&lt;/code&gt;, &lt;code&gt;seed()&lt;/code&gt;, &lt;code&gt;getstate()&lt;/code&gt;, and &lt;code&gt;setstate()&lt;/code&gt; methods. Optionally, a new generator can supply a &lt;code&gt;getrandbits()&lt;/code&gt; method &amp;mdash; this allows &lt;a href=&quot;#random.randrange&quot;&gt;&lt;code&gt;randrange()&lt;/code&gt;&lt;/a&gt; to produce selections over an arbitrarily large range.</source>
          <target state="translated">独自に考案した別の基本的なジェネレータを使用する場合は、クラス&lt;a href=&quot;#random.Random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;をサブクラス化することもできます。その場合は、 &lt;code&gt;random()&lt;/code&gt; 、 &lt;code&gt;seed()&lt;/code&gt; 、 &lt;code&gt;getstate()&lt;/code&gt; 、および &lt;code&gt;setstate()&lt;/code&gt; メソッドをオーバーライドします。必要に応じて、新しいジェネレーターが &lt;code&gt;getrandbits()&lt;/code&gt; メソッドを提供できます&amp;mdash;これにより、&lt;a href=&quot;#random.randrange&quot;&gt; &lt;code&gt;randrange()&lt;/code&gt; &lt;/a&gt;が任意の大きな範囲で選択を生成できます。</target>
        </trans-unit>
        <trans-unit id="929c674a0aba4baa2142b122f4bf21b8a7c20cff" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Class&lt;/code&gt; instances describe classes defined by class statements. They have the same attributes as Functions and two more.</source>
          <target state="translated">クラス &lt;code&gt;Class&lt;/code&gt; インスタンスは、クラスステートメントによって定義されたクラスを記述します。それらは関数と同じ属性を持ち、さらに2つあります。</target>
        </trans-unit>
        <trans-unit id="ae764b5296fc4ee23661da5abd333bdf15c69b0f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Function&lt;/code&gt; instances describe functions defined by def statements. They have the following attributes:</source>
          <target state="translated">クラス &lt;code&gt;Function&lt;/code&gt; インスタンスは、defステートメントで定義された関数を記述します。それらには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="a65de4fb115cca5521706213a476fe868597cb0a" translate="yes" xml:space="preserve">
          <source>Class Browser</source>
          <target state="translated">クラスブラウザ</target>
        </trans-unit>
        <trans-unit id="23e735f2e42f0ee01fd065b66b276180dd776b09" translate="yes" xml:space="preserve">
          <source>Class Name</source>
          <target state="translated">クラス名</target>
        </trans-unit>
        <trans-unit id="dd00b8af96e772329c75a53f24777288884aafe8" translate="yes" xml:space="preserve">
          <source>Class Objects</source>
          <target state="translated">クラスオブジェクト</target>
        </trans-unit>
        <trans-unit id="fbf93c1794c41014003615a139ea922fcbfbcc01" translate="yes" xml:space="preserve">
          <source>Class and Module Fixtures</source>
          <target state="translated">クラスとモジュールの固定具</target>
        </trans-unit>
        <trans-unit id="ed1ad1730d3490d1d25d07f58153e7b7a339349a" translate="yes" xml:space="preserve">
          <source>Class and module level fixtures are implemented in &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;. When the test suite encounters a test from a new class then &lt;code&gt;tearDownClass()&lt;/code&gt; from the previous class (if there is one) is called, followed by &lt;code&gt;setUpClass()&lt;/code&gt; from the new class.</source>
          <target state="translated">クラスおよびモジュールレベルのフィクスチャは&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; に&lt;/a&gt;実装されています。テストスイートが新しいクラスのテストに遭遇すると、前のクラス（存在する場合 &lt;code&gt;tearDownClass()&lt;/code&gt; ）が呼び出され、続いて新しいクラスの &lt;code&gt;setUpClass()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c4fa2a98922d143bffa48b6ed02cb6d321695c93" translate="yes" xml:space="preserve">
          <source>Class attributes:</source>
          <target state="translated">クラスの属性。</target>
        </trans-unit>
        <trans-unit id="7573e284e92d161b68362f0fec9c4e58cc296bad" translate="yes" xml:space="preserve">
          <source>Class commands in Tk correspond to class constructors in Tkinter.</source>
          <target state="translated">TkのクラスコマンドはTkinterのクラスコンストラクタに対応しています。</target>
        </trans-unit>
        <trans-unit id="d55e4e89fb11250e448efed2a0201a533a30baae" translate="yes" xml:space="preserve">
          <source>Class derived from &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. Contains no additional instance variables.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;から派生したクラス。追加のインスタンス変数は含まれていません。</target>
        </trans-unit>
        <trans-unit id="84f7ce2ba664d2ac18f2c8942a569fd5c8e347dc" translate="yes" xml:space="preserve">
          <source>Class for creating ZIP archives containing Python libraries.</source>
          <target state="translated">Pythonライブラリを含むZIPアーカイブを作成するためのクラスです。</target>
        </trans-unit>
        <trans-unit id="68afc50ddb6cb059361134f860e6f3500f7eced4" translate="yes" xml:space="preserve">
          <source>Class for logging support.</source>
          <target state="translated">ロギング対応のクラスです。</target>
        </trans-unit>
        <trans-unit id="3cc5c8ac207507b0210f4399e3c2140a058a8167" translate="yes" xml:space="preserve">
          <source>Class for reading and writing tar archives. Do not use this class directly: use &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; instead. See &lt;a href=&quot;#tarfile-objects&quot;&gt;TarFile Objects&lt;/a&gt;.</source>
          <target state="translated">tarアーカイブを読み書きするためのクラス。このクラスを直接使用しないでください。代わりに&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; を&lt;/a&gt;使用してください。&lt;a href=&quot;#tarfile-objects&quot;&gt;TarFileオブジェクトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f10fb057738041b2149f8fc576536855bf0de57c" translate="yes" xml:space="preserve">
          <source>Class for timing execution speed of small code snippets.</source>
          <target state="translated">小さなコードスニペットの実行速度のタイミングをとるためのクラスです。</target>
        </trans-unit>
        <trans-unit id="7ab6685059f14a604a654e8895ff71c7adf3e7dd" translate="yes" xml:space="preserve">
          <source>Class hierarchy</source>
          <target state="translated">クラス階層</target>
        </trans-unit>
        <trans-unit id="b42af5d790bda920cdf9ae46200399a00dda46ce" translate="yes" xml:space="preserve">
          <source>Class implementing bounded semaphore objects. A bounded semaphore checks to make sure its current value doesn&amp;rsquo;t exceed its initial value. If it does, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. In most situations semaphores are used to guard resources with limited capacity. If the semaphore is released too many times it&amp;rsquo;s a sign of a bug. If not given, &lt;em&gt;value&lt;/em&gt; defaults to 1.</source>
          <target state="translated">バインドされたセマフォオブジェクトを実装するクラス。境界付きセマフォは、現在の値が初期値を超えていないことを確認します。存在する場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。ほとんどの場合、セマフォは容量が限られているリソースを保護するために使用されます。セマフォが何度も解放されている場合は、バグの兆候です。指定しない場合、&lt;em&gt;値の&lt;/em&gt;デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="63012a7db9454f51f53d8b6120ae15eb1cb62e5f" translate="yes" xml:space="preserve">
          <source>Class implementing event objects. An event manages a flag that can be set to true with the &lt;a href=&quot;#threading.Event.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method and reset to false with the &lt;a href=&quot;#threading.Event.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#threading.Event.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method blocks until the flag is true. The flag is initially false.</source>
          <target state="translated">イベントオブジェクトを実装するクラス。イベントは、&lt;a href=&quot;#threading.Event.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;メソッドでtrueに設定し、&lt;a href=&quot;#threading.Event.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドでfalseにリセットできるフラグを管理します。&lt;a href=&quot;#threading.Event.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;メソッドのブロックをフラグがtrueになるまで。フラグは最初はfalseです。</target>
        </trans-unit>
        <trans-unit id="0d2d3e4d7e152f206a093f9b188f21f72f4b58bf" translate="yes" xml:space="preserve">
          <source>Class method</source>
          <target state="translated">クラスメソッド</target>
        </trans-unit>
        <trans-unit id="a2dc4ec5962b45360a31a2d9799c063e1d742f54" translate="yes" xml:space="preserve">
          <source>Class method that attempts to find a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for the module specified by &lt;em&gt;fullname&lt;/em&gt; on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; or, if defined, on &lt;em&gt;path&lt;/em&gt;. For each path entry that is searched, &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; is checked. If a non-false object is found then it is used as the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt; to look for the module being searched for. If no entry is found in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; is searched for a finder for the path entry and, if found, is stored in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; along with being queried about the module. If no finder is ever found then &lt;code&gt;None&lt;/code&gt; is both stored in the cache and returned.</source>
          <target state="translated">試みが見つけることクラスメソッド&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;仕様&lt;/a&gt;によって指定されたモジュールの&lt;em&gt;フルネーム&lt;/em&gt;で&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;に、定義されている場合、または&lt;em&gt;パス&lt;/em&gt;。検索されるパスエントリごとに、&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;がチェックされます。false以外のオブジェクトが見つかった場合、そのオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;パスエントリファインダー&lt;/a&gt;として使用され、検索対象のモジュールを探します。エントリが中に見つからない場合&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;、次いで&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; &lt;/a&gt;経路エントリのファインダを検索して、見つかった場合、に格納され&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;モジュールについて照会されるとともに。ファインダーが見つからない場合は、 &lt;code&gt;None&lt;/code&gt; 両方がキャッシュに格納されて返されます。</target>
        </trans-unit>
        <trans-unit id="ce17c2aad69e08f2bd2dce0baa77af1bf69d3686" translate="yes" xml:space="preserve">
          <source>Class method that makes a new instance from an existing sequence or iterable.</source>
          <target state="translated">既存のシーケンスやイテレート可能なものから新しいインスタンスを作成するクラスメソッドです。</target>
        </trans-unit>
        <trans-unit id="0afe9fa904c125127c594843c18a1060ab5031cd" translate="yes" xml:space="preserve">
          <source>Class method to return the float represented by a hexadecimal string &lt;em&gt;s&lt;/em&gt;. The string &lt;em&gt;s&lt;/em&gt; may have leading and trailing whitespace.</source>
          <target state="translated">16進文字列&lt;em&gt;sで&lt;/em&gt;表されるfloatを返すクラスメソッド。文字列&lt;em&gt;sに&lt;/em&gt;は、先頭と末尾に空白があります。</target>
        </trans-unit>
        <trans-unit id="0dac4289bdb5e3fd67ae254bc6ffb06da5186fed" translate="yes" xml:space="preserve">
          <source>Class methods are different than C++ or Java static methods. If you want those, see &lt;a href=&quot;#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クラスメソッドは、C ++またはJavaの静的メソッドとは異なります。それらが必要な場合は、&lt;a href=&quot;#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a519397a05f90218e172ffc9d40adcc602dabdec" translate="yes" xml:space="preserve">
          <source>Class that implements the default pseudo-random number generator used by the &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;モジュールで使用されるデフォルトの疑似乱数ジェネレータを実装するクラス。</target>
        </trans-unit>
        <trans-unit id="e3162a8d1dcc3a002a055c05198688f57c2497a9" translate="yes" xml:space="preserve">
          <source>Class that simulates a dictionary. The instance&amp;rsquo;s contents are kept in a regular dictionary, which is accessible via the &lt;a href=&quot;#collections.UserDict.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; instances. If &lt;em&gt;initialdata&lt;/em&gt; is provided, &lt;a href=&quot;#collections.UserDict.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; is initialized with its contents; note that a reference to &lt;em&gt;initialdata&lt;/em&gt; will not be kept, allowing it be used for other purposes.</source>
          <target state="translated">辞書をシミュレートするクラス。インスタンスのコンテンツは通常のディクショナリに保持され、&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#collections.UserDict.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性を介してアクセスできます。&lt;em&gt;initialdata&lt;/em&gt;が指定されている場合、&lt;a href=&quot;#collections.UserDict.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;はその内容で初期化されます。&lt;em&gt;initialdata&lt;/em&gt;への参照は&lt;em&gt;保持&lt;/em&gt;されず、他の目的で使用できることに注意してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aaf01aaedd82a869189d9ae17dfb8d0c13f510f4" translate="yes" xml:space="preserve">
          <source>Class that simulates a list. The instance&amp;rsquo;s contents are kept in a regular list, which is accessible via the &lt;a href=&quot;#collections.UserList.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; instances. The instance&amp;rsquo;s contents are initially set to a copy of &lt;em&gt;list&lt;/em&gt;, defaulting to the empty list &lt;code&gt;[]&lt;/code&gt;. &lt;em&gt;list&lt;/em&gt; can be any iterable, for example a real Python list or a &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">リストをシミュレートするクラス。インスタンスの内容は通常のリストに保持され、&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#collections.UserList.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性を介してアクセスできます。インスタンスのコンテンツは最初は&lt;em&gt;listの&lt;/em&gt;コピーに設定され、デフォルトでは空のリスト &lt;code&gt;[]&lt;/code&gt; に設定されます。&lt;em&gt;list&lt;/em&gt;は、実際のP​​ythonリストや&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;オブジェクトなど、任意の反復可能にすることができます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0beab80b9209ba3033d0dbb9a7a263c0fb44532c" translate="yes" xml:space="preserve">
          <source>Class that simulates a string object. The instance&amp;rsquo;s content is kept in a regular string object, which is accessible via the &lt;a href=&quot;#collections.UserString.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; instances. The instance&amp;rsquo;s contents are initially set to a copy of &lt;em&gt;seq&lt;/em&gt;. The &lt;em&gt;seq&lt;/em&gt; argument can be any object which can be converted into a string using the built-in &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">文字列オブジェクトをシミュレートするクラス。インスタンスのコンテンツは通常の文字列オブジェクトに保持され、&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;#collections.UserString.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性を介してアクセスできます。インスタンスのコンテンツは、最初は&lt;em&gt;seqの&lt;/em&gt;コピーに設定されています。&lt;em&gt;配列の&lt;/em&gt;引数が内蔵使用して文字列に変換することができる任意のオブジェクトであることができる&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;関数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79aa0717c2235ad3247845eda135b190657a36a2" translate="yes" xml:space="preserve">
          <source>Class that uses the &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; function for generating random numbers from sources provided by the operating system. Not available on all systems. Does not rely on software state, and sequences are not reproducible. Accordingly, the &lt;a href=&quot;#random.seed&quot;&gt;&lt;code&gt;seed()&lt;/code&gt;&lt;/a&gt; method has no effect and is ignored. The &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#random.setstate&quot;&gt;&lt;code&gt;setstate()&lt;/code&gt;&lt;/a&gt; methods raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if called.</source>
          <target state="translated">オペレーティングシステムによって提供されるソースから乱数を生成するために&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;関数を使用するクラス。すべてのシステムで使用できるわけではありません。ソフトウェアの状態に依存せず、シーケンスを再現できません。したがって、&lt;a href=&quot;#random.seed&quot;&gt; &lt;code&gt;seed()&lt;/code&gt; &lt;/a&gt;メソッドは効果がなく、無視されます。&lt;a href=&quot;#random.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#random.setstate&quot;&gt; &lt;code&gt;setstate()&lt;/code&gt; &lt;/a&gt;メソッドを上げる&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;呼び出した場合。</target>
        </trans-unit>
        <trans-unit id="99025c4a0d0b068c1004d8d4353af512d3661881" translate="yes" xml:space="preserve">
          <source>Class to save and restore signal handlers registered by the Python signal handler.</source>
          <target state="translated">Pythonのシグナルハンドラで登録したシグナルハンドラを保存・復元するためのクラスです。</target>
        </trans-unit>
        <trans-unit id="da06b3b5ee88acf44cece236973efbeb7d6e0e6e" translate="yes" xml:space="preserve">
          <source>Class used to record warnings for unit tests. See documentation of &lt;a href=&quot;#test.support.check_warnings&quot;&gt;&lt;code&gt;check_warnings()&lt;/code&gt;&lt;/a&gt; above for more details.</source>
          <target state="translated">単体テストの警告を記録するために使用されるクラス。詳細については、上の&lt;a href=&quot;#test.support.check_warnings&quot;&gt; &lt;code&gt;check_warnings()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b11d1a5a5c1b42960a442d37efc38f0f7e86a591" translate="yes" xml:space="preserve">
          <source>Class used to represent information about a member of an archive. Instances of this class are returned by the &lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt;&lt;code&gt;getinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt;&lt;code&gt;infolist()&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects. Most users of the &lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module will not need to create these, but only use those created by this module. &lt;em&gt;filename&lt;/em&gt; should be the full name of the archive member, and &lt;em&gt;date_time&lt;/em&gt; should be a tuple containing six fields which describe the time of the last modification to the file; the fields are described in section &lt;a href=&quot;#zipinfo-objects&quot;&gt;ZipInfo Objects&lt;/a&gt;.</source>
          <target state="translated">アーカイブのメンバーに関する情報を表すために使用されるクラス。このクラスのインスタンスは、&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt; &lt;code&gt;getinfo()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt; &lt;code&gt;infolist()&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;モジュールのほとんどのユーザーはこれらを作成する必要はなく、このモジュールで作成されたもののみを使用します。&lt;em&gt;filename&lt;/em&gt;はアーカイブメンバーの完全な名前である必要があり、&lt;em&gt;date_time&lt;/em&gt;は、ファイルの最終変更時刻を説明する6つのフィールドを含むタプルである必要があります。フィールドについては、&lt;a href=&quot;#zipinfo-objects&quot;&gt;ZipInfoオブジェクトの&lt;/a&gt;セクションで説明しています。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b6e043f1a5dded2e806032d1867a90da4a0d268" translate="yes" xml:space="preserve">
          <source>Class used to temporarily set or unset environment variables. Instances can be used as a context manager and have a complete dictionary interface for querying/modifying the underlying &lt;code&gt;os.environ&lt;/code&gt;. After exit from the context manager all changes to environment variables done through this instance will be rolled back.</source>
          <target state="translated">環境変数を一時的に設定または設定解除するために使用されるクラス。インスタンスは、コンテキストマネージャーとして使用でき、基になる &lt;code&gt;os.environ&lt;/code&gt; を照会/変更するための完全な辞書インターフェイスを備えています。コンテキストマネージャを終了すると、このインスタンスを介して行われた環境変数へのすべての変更はロールバックされます。</target>
        </trans-unit>
        <trans-unit id="cf68a12428983b76a7c3f929820378b0b58dd384" translate="yes" xml:space="preserve">
          <source>Class variables</source>
          <target state="translated">クラス変数</target>
        </trans-unit>
        <trans-unit id="eefd33f2c32d1c2aa4c051ca9367a45a1d6e73e7" translate="yes" xml:space="preserve">
          <source>Class which loads shared libraries. &lt;em&gt;dlltype&lt;/em&gt; should be one of the &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.PyDLL&quot;&gt;&lt;code&gt;PyDLL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.WinDLL&quot;&gt;&lt;code&gt;WinDLL&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ctypes.OleDLL&quot;&gt;&lt;code&gt;OleDLL&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">共有ライブラリをロードするクラス。&lt;em&gt;dlltypeは、&lt;/em&gt;のいずれかでなければなりません&lt;a href=&quot;#ctypes.CDLL&quot;&gt; &lt;code&gt;CDLL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ctypes.PyDLL&quot;&gt; &lt;code&gt;PyDLL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ctypes.WinDLL&quot;&gt; &lt;code&gt;WinDLL&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#ctypes.OleDLL&quot;&gt; &lt;code&gt;OleDLL&lt;/code&gt; &lt;/a&gt;種類。</target>
        </trans-unit>
        <trans-unit id="5f091d1eff052d6db88ca025e61c82f66c557c58" translate="yes" xml:space="preserve">
          <source>Class which provides formatting services useful in implementing functions similar to the built-in &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;; size limits for different object types are added to avoid the generation of representations which are excessively long.</source>
          <target state="translated">組み込みの&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;と同様の関数の実装に役立つフォーマットサービスを提供するクラス。さまざまなオブジェクトタイプのサイズ制限が追加され、過度に長い表現が生成されないようにしています。</target>
        </trans-unit>
        <trans-unit id="6c3e508b6adb20492bb381d132f040748de786b4" translate="yes" xml:space="preserve">
          <source>Class which represents a chunk. The &lt;em&gt;file&lt;/em&gt; argument is expected to be a file-like object. An instance of this class is specifically allowed. The only method that is needed is &lt;code&gt;read()&lt;/code&gt;. If the methods &lt;a href=&quot;io#io.IOBase.seek&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#io.IOBase.tell&quot;&gt;&lt;code&gt;tell()&lt;/code&gt;&lt;/a&gt; are present and don&amp;rsquo;t raise an exception, they are also used. If these methods are present and raise an exception, they are expected to not have altered the object. If the optional argument &lt;em&gt;align&lt;/em&gt; is true, chunks are assumed to be aligned on 2-byte boundaries. If &lt;em&gt;align&lt;/em&gt; is false, no alignment is assumed. The default value is true. If the optional argument &lt;em&gt;bigendian&lt;/em&gt; is false, the chunk size is assumed to be in little-endian order. This is needed for WAVE audio files. The default value is true. If the optional argument &lt;em&gt;inclheader&lt;/em&gt; is true, the size given in the chunk header includes the size of the header. The default value is false.</source>
          <target state="translated">チャンクを表すクラス。&lt;em&gt;ファイル&lt;/em&gt;引数は、ファイルのようなオブジェクトであることが予想されます。このクラスのインスタンスは特に許可されています。必要な唯一のメソッドは &lt;code&gt;read()&lt;/code&gt; です。&lt;a href=&quot;io#io.IOBase.seek&quot;&gt; &lt;code&gt;seek()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;io#io.IOBase.tell&quot;&gt; &lt;code&gt;tell()&lt;/code&gt; &lt;/a&gt;メソッドが存在し、例外が発生しない場合は、それらも使用されます。これらのメソッドが存在し、例外が発生する場合は、オブジェクトが変更されていないことが予想されます。オプションの引数&lt;em&gt;align&lt;/em&gt;がtrueの場合、チャンクは2バイト境界で整列されていると想定されます。&lt;em&gt;align&lt;/em&gt;がfalseの場合、配置は想定されません。デフォルト値はtrueです。オプションの引数である&lt;em&gt;ビッグエンディアン&lt;/em&gt;がfalseの場合、チャンクサイズはリトルエンディアン順であると想定されます。これは、WAVEオーディオファイルに必要です。デフォルト値はtrueです。オプションの引数&lt;em&gt;inclheader&lt;/em&gt;がtrueの場合、チャンクヘッダーで指定されたサイズには、ヘッダーのサイズが含まれます。デフォルト値はfalseです。</target>
        </trans-unit>
        <trans-unit id="22f36f193b0e2682506b9013f5368c66f7ec520b" translate="yes" xml:space="preserve">
          <source>Class whose instances are returned upon successful connection. Not instantiated directly by user.</source>
          <target state="translated">接続に成功するとインスタンスが返されるクラス。ユーザが直接インスタンス化することはありません。</target>
        </trans-unit>
        <trans-unit id="d5b11a3da0a23c184586f7a55bfcb03df70886f5" translate="yes" xml:space="preserve">
          <source>Class-based API</source>
          <target state="translated">クラスベースのAPI</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="c926953e6c6cf756e6c05826e0d608074e0232e7" translate="yes" xml:space="preserve">
          <source>Classes and Class Instances</source>
          <target state="translated">クラスとクラスインスタンス</target>
        </trans-unit>
        <trans-unit id="201aa8586bf7f9d0b7672b716def616fdeff681c" translate="yes" xml:space="preserve">
          <source>Classes and functions</source>
          <target state="translated">クラスと機能</target>
        </trans-unit>
        <trans-unit id="06a306f784ae1dcd2fa57b2ffb5561b9999baa42" translate="yes" xml:space="preserve">
          <source>Classes can alter the default behaviour by providing one or several special methods:</source>
          <target state="translated">クラスは、1つまたはいくつかの特別なメソッドを提供することで、デフォルトの動作を変更することができます。</target>
        </trans-unit>
        <trans-unit id="45c5703e790a0c445ec1f77a13923d413a61fe53" translate="yes" xml:space="preserve">
          <source>Classes can be skipped just like methods:</source>
          <target state="translated">クラスはメソッドと同じようにスキップすることができます。</target>
        </trans-unit>
        <trans-unit id="f037dc3e5c5e16357572e66fd729c9cc6339c414" translate="yes" xml:space="preserve">
          <source>Classes can further influence how their instances are pickled; if the class defines the method &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt;, it is called and the returned object is pickled as the contents for the instance, instead of the contents of the instance&amp;rsquo;s dictionary. If the &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; method is absent, the instance&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; is pickled as usual.</source>
          <target state="translated">クラスは、インスタンスがピクルされる方法にさらに影響を与える可能性があります。クラスがメソッド&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;定義している場合、それが呼び出され、返されたオブジェクトは、インスタンスの辞書のコンテンツではなく、インスタンスのコンテンツとしてピクルされます。場合&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;メソッドは存在しないか、インスタンスの&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; は、&lt;/a&gt;いつものように漬けています。</target>
        </trans-unit>
        <trans-unit id="b0eb8d9d4a94f74aebc56c471156afe57fe3fd0d" translate="yes" xml:space="preserve">
          <source>Classes can use the same interfaces to control copying that they use to control pickling. See the description of module &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; for information on these methods. In fact, the &lt;a href=&quot;#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; module uses the registered pickle functions from the &lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">クラスは、酸洗いの制御に使用するのと同じインターフェースを使用して、コピーを制御できます。これらのメソッドについては、モジュール&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;の説明を参照してください。実際、&lt;a href=&quot;#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;モジュールは、&lt;a href=&quot;copyreg#module-copyreg&quot;&gt; &lt;code&gt;copyreg&lt;/code&gt; &lt;/a&gt;モジュールからの登録済みピクル関数を使用します。</target>
        </trans-unit>
        <trans-unit id="c0458bc3ca4b8d35ca2b3e95a5a921d74f3a222a" translate="yes" xml:space="preserve">
          <source>Classes created with a metaclass of &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; have the following method:</source>
          <target state="translated">&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; の&lt;/a&gt;メタクラスで作成されたクラスには、次のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="347f0f5953532108086487f75461a5f1134e472d" translate="yes" xml:space="preserve">
          <source>Classes hierarchy:</source>
          <target state="translated">クラスの階層。</target>
        </trans-unit>
        <trans-unit id="2d2c1284bc22910fcd018ccf95941421d9472b76" translate="yes" xml:space="preserve">
          <source>Classes in the &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module subclasses the classes in the &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;. The former imports the latter, so to use &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; with Tkinter, all you need to do is to import one module. In general, you can just import &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt;, and replace the toplevel call to &lt;a href=&quot;tkinter#tkinter.Tk&quot;&gt;&lt;code&gt;tkinter.Tk&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;tix.Tk&lt;/code&gt;:</source>
          <target state="translated">クラス&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; の&lt;/a&gt;モジュールは、内のクラスをサブクラス&lt;a href=&quot;tkinter#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;。前者は後者をインポートするため、&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;をTkinterで使用するには、1つのモジュールをインポートするだけです。一般的に、あなただけインポートすることができ&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; を&lt;/a&gt;、とにトップレベルのコール置き換える&lt;a href=&quot;tkinter#tkinter.Tk&quot;&gt; &lt;code&gt;tkinter.Tk&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;tix.Tk&lt;/code&gt; を：</target>
        </trans-unit>
        <trans-unit id="7786e11526d95e122a0dba9a661f34e39555405d" translate="yes" xml:space="preserve">
          <source>Classes that simplify writing network servers.</source>
          <target state="translated">ネットワークサーバの書き込みを簡単にするクラスです。</target>
        </trans-unit>
        <trans-unit id="d8daef6bbfcba345ae3a30f57126f486c37f384b" translate="yes" xml:space="preserve">
          <source>Classes, functions, and decorators</source>
          <target state="translated">クラス、関数、デコレータ</target>
        </trans-unit>
        <trans-unit id="667ac5fc3fe2d3172fffb8e93cb105377e53415e" translate="yes" xml:space="preserve">
          <source>Classification functions</source>
          <target state="translated">分類機能</target>
        </trans-unit>
        <trans-unit id="3ff9a76e08400cf68e0675be7bcd6fb22fdee97b" translate="yes" xml:space="preserve">
          <source>Classmethod that converts a float to a decimal number, exactly.</source>
          <target state="translated">floatを正確に10進数に変換するクラスメソッド。</target>
        </trans-unit>
        <trans-unit id="02c151333b853c942dc031c44da9bbdb57ca7105" translate="yes" xml:space="preserve">
          <source>Clean up indentation from docstrings that are indented to line up with blocks of code.</source>
          <target state="translated">コードブロックに合わせてインデントされているdocstringのインデントをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="1611b550c2e2b2942ae77bbd68aa9664acb99baa" translate="yes" xml:space="preserve">
          <source>Clean up the server. May be overridden.</source>
          <target state="translated">サーバーをクリーンアップします。オーバーライドされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8f75f741d1b6021f7c8bfc4d8fc898426ac71f2" translate="yes" xml:space="preserve">
          <source>Cleaning up in an &lt;code&gt;__enter__&lt;/code&gt; implementation</source>
          <target state="translated">&lt;code&gt;__enter__&lt;/code&gt; 実装のクリーンアップ</target>
        </trans-unit>
        <trans-unit id="c2d1cbcd4e0194c698ce529e24b040a50823e5d9" translate="yes" xml:space="preserve">
          <source>Cleans up temporary files that may have been left behind by previous calls to &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前の&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; の&lt;/a&gt;呼び出しによって残された可能性がある一時ファイルをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="86c9b8692ed0240b4cd54401c5aa0ed8ee8b5a31" translate="yes" xml:space="preserve">
          <source>Cleans up the value stack and the block stack. If &lt;em&gt;preserve_tos&lt;/em&gt; is not &lt;code&gt;0&lt;/code&gt; TOS first is popped from the stack and pushed on the stack after performing other stack operations:</source>
          <target state="translated">値スタックとブロックスタックをクリーンアップします。&lt;em&gt;preserve_tos&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; でない場合、最初にTOSがスタックからポップされ、他のスタック操作の実行後にスタックにプッシュされます。</target>
        </trans-unit>
        <trans-unit id="11c1cbf3543371f2ef4c721d6c5a218d99781274" translate="yes" xml:space="preserve">
          <source>Cleanup</source>
          <target state="translated">Cleanup</target>
        </trans-unit>
        <trans-unit id="fcafba6a606eb414f2569aff507bd99fc4b32c60" translate="yes" xml:space="preserve">
          <source>Cleanup up threads not specified in &lt;em&gt;original_values&lt;/em&gt;. Designed to emit a warning if a test leaves running threads in the background.</source>
          <target state="translated">&lt;em&gt;original_valuesで&lt;/em&gt;指定されていないスレッドをクリーンアップします。テストがバックグラウンドで実行中のスレッドを残した場合に警告を発するように設計されています。</target>
        </trans-unit>
        <trans-unit id="7c63150b50f16af146cc7e971cbb08735a7cc16d" translate="yes" xml:space="preserve">
          <source>Clear (unset) the event.</source>
          <target state="translated">イベントをクリア(設定解除)します。</target>
        </trans-unit>
        <trans-unit id="75cb37803c6a35aa45a57ecbe088c1f4f136df4e" translate="yes" xml:space="preserve">
          <source>Clear Breakpoint</source>
          <target state="translated">明確なブレークポイント</target>
        </trans-unit>
        <trans-unit id="dedfdec349ea2da1da9d8c798b7d1928743efb7f" translate="yes" xml:space="preserve">
          <source>Clear all cookies and reload cookies from a saved file.</source>
          <target state="translated">すべてのクッキーをクリアして、保存されたファイルからクッキーを再読み込みします。</target>
        </trans-unit>
        <trans-unit id="0fac3ac6248ff304c4729f7dc75245b4e7267ce5" translate="yes" xml:space="preserve">
          <source>Clear all tabs</source>
          <target state="translated">すべてのタブをクリア</target>
        </trans-unit>
        <trans-unit id="581bded81640a1c3e7541ca4b1df9f69744af55e" translate="yes" xml:space="preserve">
          <source>Clear out the internal cache.</source>
          <target state="translated">内部キャッシュを消去します。</target>
        </trans-unit>
        <trans-unit id="8cbea0dd03d659f6fc0af020526f99576b13aca1" translate="yes" xml:space="preserve">
          <source>Clear screen</source>
          <target state="translated">クリア画面</target>
        </trans-unit>
        <trans-unit id="dad2fa6735efa3ba639976b5afe2aa9b9d6b53f3" translate="yes" xml:space="preserve">
          <source>Clear some cookies.</source>
          <target state="translated">いくつかのクッキーをクリアします。</target>
        </trans-unit>
        <trans-unit id="03896376ba4292fa97e81dbfdb18bab99f3a6795" translate="yes" xml:space="preserve">
          <source>Clear tab</source>
          <target state="translated">タブをクリア</target>
        </trans-unit>
        <trans-unit id="2ddcd2e4ebe86a4f787b58345732c5fba0ae1968" translate="yes" xml:space="preserve">
          <source>Clear the breakpoint on that line.</source>
          <target state="translated">そのラインのブレークポイントをクリアします。</target>
        </trans-unit>
        <trans-unit id="a7a227da5402ae7b6be61b4567993b9a2c65f27e" translate="yes" xml:space="preserve">
          <source>Clear the cache. Use this function if you no longer need lines from files previously read using &lt;a href=&quot;#linecache.getline&quot;&gt;&lt;code&gt;getline()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャッシュをクリアします。以前に&lt;a href=&quot;#linecache.getline&quot;&gt; &lt;code&gt;getline()&lt;/code&gt; &lt;/a&gt;を使用して読み取ったファイルの行が不要になった場合は、この関数を使用します。</target>
        </trans-unit>
        <trans-unit id="5e6a8e5156dddfce503678b4903d07264fd7d7eb" translate="yes" xml:space="preserve">
          <source>Clear the current history. This calls &lt;code&gt;clear_history()&lt;/code&gt; in the underlying library. The Python function only exists if Python was compiled for a version of the library that supports it.</source>
          <target state="translated">現在の履歴をクリアします。これは、基礎となるライブラリの &lt;code&gt;clear_history()&lt;/code&gt; を呼び出します。Python関数は、Pythonがそれをサポートするライブラリのバージョン用にコンパイルされている場合にのみ存在します。</target>
        </trans-unit>
        <trans-unit id="c52ce86aacd7104749aef43e4304317c33ae8665" translate="yes" xml:space="preserve">
          <source>Clear the filecmp cache. This may be useful if a file is compared so quickly after it is modified that it is within the mtime resolution of the underlying filesystem.</source>
          <target state="translated">filecmp キャッシュをクリアします。これは、ファイルが変更された後に素早く比較されて、基礎となるファイルシステムの mtime 分解能の範囲内にある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="03304a0f8856edcb1da2c08e06a3b34f81913a64" translate="yes" xml:space="preserve">
          <source>Clear the internal type cache. The type cache is used to speed up attribute and method lookups. Use the function &lt;em&gt;only&lt;/em&gt; to drop unnecessary references during reference leak debugging.</source>
          <target state="translated">内部タイプのキャッシュをクリアします。タイプキャッシュは、属性とメソッドの検索を高速化するために使用されます。この関数&lt;em&gt;は&lt;/em&gt;、参照リークのデバッグ中に不要な参照を削除する場合に&lt;em&gt;のみ&lt;/em&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="72db18ad4f2e17f642c643bf22ea309056f71634" translate="yes" xml:space="preserve">
          <source>Clear the regular expression cache.</source>
          <target state="translated">正規表現のキャッシュをクリアします。</target>
        </trans-unit>
        <trans-unit id="f53f1ea6ebec9a53b62ddcee16b9b6cee9ae5dfd" translate="yes" xml:space="preserve">
          <source>Clear the window.</source>
          <target state="translated">窓を開けろ</target>
        </trans-unit>
        <trans-unit id="0bfe31c1ff6b636445cd8a0aa23ccda5aad6c80a" translate="yes" xml:space="preserve">
          <source>Clear to end of line</source>
          <target state="translated">行末までクリア</target>
        </trans-unit>
        <trans-unit id="87305dd5841ede45239c271479afe0d03fed7989" translate="yes" xml:space="preserve">
          <source>Clear to end of screen</source>
          <target state="translated">画面の最後までクリア</target>
        </trans-unit>
        <trans-unit id="8dd569946acad0436e918f68ec0e2265678428f8" translate="yes" xml:space="preserve">
          <source>Clear traces of memory blocks allocated by Python.</source>
          <target state="translated">Pythonで割り当てられたメモリブロックの痕跡を消去します。</target>
        </trans-unit>
        <trans-unit id="c8dd821d177243ccce87ed70546d106227784d7c" translate="yes" xml:space="preserve">
          <source>Clears the local variables of all the stack frames in a traceback &lt;em&gt;tb&lt;/em&gt; by calling the &lt;code&gt;clear()&lt;/code&gt; method of each frame object.</source>
          <target state="translated">各フレームオブジェクトの &lt;code&gt;clear()&lt;/code&gt; メソッドを呼び出して、トレースバック&lt;em&gt;tb&lt;/em&gt;内のすべてのスタックフレームのローカル変数をクリアします。</target>
        </trans-unit>
        <trans-unit id="c09677fe0308ac61e788c20d57c48c122de3a163" translate="yes" xml:space="preserve">
          <source>Client side &lt;code&gt;HTTP PUT&lt;/code&gt; requests are very similar to &lt;code&gt;POST&lt;/code&gt; requests. The difference lies only the server side where HTTP server will allow resources to be created via &lt;code&gt;PUT&lt;/code&gt; request. It should be noted that custom HTTP methods +are also handled in &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; by sending the appropriate +method attribute.Here is an example session that shows how to do &lt;code&gt;PUT&lt;/code&gt; request using http.client:</source>
          <target state="translated">クライアント側の &lt;code&gt;HTTP PUT&lt;/code&gt; リクエストは、 &lt;code&gt;POST&lt;/code&gt; リクエストと非常によく似ています。違いは、HTTPサーバーが &lt;code&gt;PUT&lt;/code&gt; リクエストを介してリソースを作成できるサーバー側のみです。カスタムHTTPメソッドは、適切な+ method属性を送信することにより、&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;でも処理されることに注意してください。http.clientを使用して &lt;code&gt;PUT&lt;/code&gt; リクエストを実行する方法を示すセッションの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="bc9176d94ea386ea58725f612548b38d9223700d" translate="yes" xml:space="preserve">
          <source>Client socket example with custom context and IPv4:</source>
          <target state="translated">カスタムコンテキストと IPv4 を使用したクライアントソケットの例。</target>
        </trans-unit>
        <trans-unit id="ae10a05f04d8289121927fd80451d654d1c055a7" translate="yes" xml:space="preserve">
          <source>Client socket example with default context and IPv4/IPv6 dual stack:</source>
          <target state="translated">デフォルトのコンテキストとIPv4/IPv6デュアルスタックを使用したクライアントソケットの例。</target>
        </trans-unit>
        <trans-unit id="a80d51e6031ad37858e506cf50c987470ba60766" translate="yes" xml:space="preserve">
          <source>Client-side certificates are also no longer verified during the initial handshake. A server can request a certificate at any time. Clients process certificate requests while they send or receive application data from the server.</source>
          <target state="translated">クライアント側の証明書も、最初のハンドシェイク中に検証されなくなりました。サーバはいつでも証明書を要求できます。クライアントは、サーバからアプリケーションデータを送受信している間に証明書要求を処理します。</target>
        </trans-unit>
        <trans-unit id="8be506fbb5a5c01d5b09515397ea60546537d6fb" translate="yes" xml:space="preserve">
          <source>Client-side operation</source>
          <target state="translated">クライアント側の操作</target>
        </trans-unit>
        <trans-unit id="c9f9ea1b026f581d71ddd7ce1895b56fda68359f" translate="yes" xml:space="preserve">
          <source>Client:</source>
          <target state="translated">Client:</target>
        </trans-unit>
        <trans-unit id="0a49aca1795ef56e9055a8bf5d95bb17ac94783a" translate="yes" xml:space="preserve">
          <source>Clock ID Constants</source>
          <target state="translated">クロック ID 定数</target>
        </trans-unit>
        <trans-unit id="fe8df0f706f4697338ef434ef46ee5f882a96b73" translate="yes" xml:space="preserve">
          <source>Clock that cannot be set and represents monotonic time since some unspecified starting point.</source>
          <target state="translated">設定できず、不特定の起点からの単調な時間を表す時計。</target>
        </trans-unit>
        <trans-unit id="b4807633920dc2778fbac6657ecc9127c4cdaaac" translate="yes" xml:space="preserve">
          <source>Clock that increments monotonically, tracking the time since an arbitrary point, unaffected by frequency or time adjustments and not incremented while the system is asleep.</source>
          <target state="translated">単調にインクリメントされ、任意のポイントからの時間を追跡し、周波数や時間の調整に影響されず、システムが眠っている間はインクリメントされないクロック。</target>
        </trans-unit>
        <trans-unit id="ff697d4ee62959b75538e58b93b3780c085ec8b0" translate="yes" xml:space="preserve">
          <source>Clone this node. Setting &lt;em&gt;deep&lt;/em&gt; means to clone all child nodes as well. This returns the clone.</source>
          <target state="translated">このノードを複製します。&lt;em&gt;deep&lt;/em&gt;を設定すると、すべての子ノードも複製されます。これはクローンを返します。</target>
        </trans-unit>
        <trans-unit id="bbfa773e5a63a5ea58c9b6207e608ca0120e592a" translate="yes" xml:space="preserve">
          <source>Close</source>
          <target state="translated">Close</target>
        </trans-unit>
        <trans-unit id="2ace0aa0942174ab6fb2c7982698b51bcf9045ba" translate="yes" xml:space="preserve">
          <source>Close a socket file descriptor. This is like &lt;a href=&quot;os#os.close&quot;&gt;&lt;code&gt;os.close()&lt;/code&gt;&lt;/a&gt;, but for sockets. On some platforms (most noticeable Windows) &lt;a href=&quot;os#os.close&quot;&gt;&lt;code&gt;os.close()&lt;/code&gt;&lt;/a&gt; does not work for socket file descriptors.</source>
          <target state="translated">ソケットファイル記述子を閉じます。これは&lt;a href=&quot;os#os.close&quot;&gt; &lt;code&gt;os.close()&lt;/code&gt; &lt;/a&gt;に似ていますが、ソケット用です。一部のプラットフォーム（最も顕著なWindows）&lt;a href=&quot;os#os.close&quot;&gt; &lt;code&gt;os.close()&lt;/code&gt; &lt;/a&gt;はソケットファイル記述子に対して機能しません。</target>
        </trans-unit>
        <trans-unit id="f98c72a00844869e7bb50ed6e382502b5aedb381" translate="yes" xml:space="preserve">
          <source>Close all file descriptors from &lt;em&gt;fd_low&lt;/em&gt; (inclusive) to &lt;em&gt;fd_high&lt;/em&gt; (exclusive), ignoring errors. Equivalent to (but much faster than):</source>
          <target state="translated">エラーを無視して、&lt;em&gt;fd_low&lt;/em&gt;（包括的）から&lt;em&gt;fd_high&lt;/em&gt;（排他的）までのすべてのファイル記述子を閉じます。と同等（ただし、それよりはるかに高速）：</target>
        </trans-unit>
        <trans-unit id="327c78f7bc7e53be685f74bbdce89500cf99de50" translate="yes" xml:space="preserve">
          <source>Close all windows and quit IDLE (ask to save unsaved windows).</source>
          <target state="translated">すべてのウィンドウを閉じて、IDLEを終了します(保存されていないウィンドウを保存するように依頼します)。</target>
        </trans-unit>
        <trans-unit id="7e5d771911d0d3ac01b6556b2197acf22e6e0876" translate="yes" xml:space="preserve">
          <source>Close and send EOF after flushing buffered data.</source>
          <target state="translated">バッファされたデータをフラッシュした後、EOFを閉じて送信します。</target>
        </trans-unit>
        <trans-unit id="f395522ce55a91c8e7cc93acf3c366b63839130b" translate="yes" xml:space="preserve">
          <source>Close and skip to the end of the chunk. This does not close the underlying file.</source>
          <target state="translated">チャンクを閉じて、チャンクの最後までスキップします。これは、下のファイルを閉じることはありません。</target>
        </trans-unit>
        <trans-unit id="2c445782dc5061e881153b84366a5f29fdf29641" translate="yes" xml:space="preserve">
          <source>Close asynchronous generators.</source>
          <target state="translated">非同期発電機を閉じます。</target>
        </trans-unit>
        <trans-unit id="7689d8c6ee2fae9fe051200cb62e0214aab70fac" translate="yes" xml:space="preserve">
          <source>Close connection established in &lt;code&gt;open&lt;/code&gt;. This method is implicitly called by &lt;a href=&quot;#imaplib.IMAP4.logout&quot;&gt;&lt;code&gt;IMAP4.logout()&lt;/code&gt;&lt;/a&gt;. You may override this method.</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; で確立された接続を閉じます。このメソッドは&lt;a href=&quot;#imaplib.IMAP4.logout&quot;&gt; &lt;code&gt;IMAP4.logout()&lt;/code&gt; &lt;/a&gt;によって暗黙的に呼び出されます。このメソッドはオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="91c95d5d479e3cb04af40ce3a06f5e799698e4fc" translate="yes" xml:space="preserve">
          <source>Close currently selected mailbox. Deleted messages are removed from writable mailbox. This is the recommended command before &lt;code&gt;LOGOUT&lt;/code&gt;.</source>
          <target state="translated">現在選択されているメールボックスを閉じます。削除されたメッセージは、書き込み可能なメールボックスから削除されます。これは、 &lt;code&gt;LOGOUT&lt;/code&gt; の前に推奨されるコマンドです。</target>
        </trans-unit>
        <trans-unit id="b8d3ae3588503be729a2c099104bc9fff0f9e083" translate="yes" xml:space="preserve">
          <source>Close file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdを&lt;/em&gt;閉じます。</target>
        </trans-unit>
        <trans-unit id="eb3642f69cdfff0d2b8afe5b4a936ee3f9f1c422" translate="yes" xml:space="preserve">
          <source>Close the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object, releasing all resources associated with it. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the underlying process is still running. Once &lt;a href=&quot;#multiprocessing.Process.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; returns successfully, most other methods and attributes of the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関連付けられているすべてのリソースを解放して、&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;オブジェクトを閉じます。基になるプロセスがまだ実行されている場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。いったん&lt;a href=&quot;#multiprocessing.Process.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;に成功戻り、他のほとんどのメソッドと属性&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;オブジェクトが発生します&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e4d9a00ca14e8f0f389ccfc2583b56e781a1a16" translate="yes" xml:space="preserve">
          <source>Close the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt;. In write mode, two finishing zero blocks are appended to the archive.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; を&lt;/a&gt;閉じます。書き込みモードでは、2つの終了ゼロブロックがアーカイブに追加されます。</target>
        </trans-unit>
        <trans-unit id="6ef4a03fded31475711086c82af03984d63806af" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;dumbdbm&lt;/code&gt; database.</source>
          <target state="translated">&lt;code&gt;dumbdbm&lt;/code&gt; データベースを閉じます。</target>
        </trans-unit>
        <trans-unit id="b02fb978d4328f255effa25deed6b81df796e9b3" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;gdbm&lt;/code&gt; database.</source>
          <target state="translated">&lt;code&gt;gdbm&lt;/code&gt; データベースを閉じます。</target>
        </trans-unit>
        <trans-unit id="36ec640ec3045e65bcbcb0f226f3a6ae0036475f" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;ndbm&lt;/code&gt; database.</source>
          <target state="translated">&lt;code&gt;ndbm&lt;/code&gt; データベースを閉じます。</target>
        </trans-unit>
        <trans-unit id="0e6e27ba97849441fc6e943b260fa72748ee57ce" translate="yes" xml:space="preserve">
          <source>Close the AIFF file. After calling this method, the object can no longer be used.</source>
          <target state="translated">AIFFファイルを閉じます。このメソッドを呼び出すと、そのオブジェクトは使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="ec47579acc9d1c798d92b85e703a99a36767e124" translate="yes" xml:space="preserve">
          <source>Close the AIFF file. The header of the file is updated to reflect the actual size of the audio data. After calling this method, the object can no longer be used.</source>
          <target state="translated">AIFFファイルを閉じます。ファイルのヘッダーは、オーディオデータの実際のサイズを反映するように更新されます。このメソッドを呼び出した後は、そのオブジェクトは使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="014556dde758d0fbcf5b34a3c2ce44a0c26c22ea" translate="yes" xml:space="preserve">
          <source>Close the archive file. You must call &lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; before exiting your program or essential records will not be written.</source>
          <target state="translated">アーカイブファイルを閉じます。プログラムを終了する前に&lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。そうしないと、重要なレコードが書き込まれません。</target>
        </trans-unit>
        <trans-unit id="9e8b64cc8d22aa4e604019ff830dd410a31e096c" translate="yes" xml:space="preserve">
          <source>Close the bound socket or named pipe of the listener object. This is called automatically when the listener is garbage collected. However it is advisable to call it explicitly.</source>
          <target state="translated">リスナーオブジェクトのバインドされたソケットまたは名前付きパイプを閉じます。これはリスナーがガベージコレクションされたときに自動的に呼び出されます。ただし、明示的に呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c222eb42563555dd1f6b2d5528793cbc876cfbf2" translate="yes" xml:space="preserve">
          <source>Close the connection to the server.</source>
          <target state="translated">サーバーへの接続を終了します。</target>
        </trans-unit>
        <trans-unit id="42ffe59d503d9bbe0d777a27f4f3631c16b55216" translate="yes" xml:space="preserve">
          <source>Close the connection unilaterally. This should not be applied to an already closed connection such as after a successful call to &lt;a href=&quot;#ftplib.FTP.quit&quot;&gt;&lt;code&gt;quit()&lt;/code&gt;&lt;/a&gt;. After this call the &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; instance should not be used any more (after a call to &lt;a href=&quot;#ftplib.FTP.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ftplib.FTP.quit&quot;&gt;&lt;code&gt;quit()&lt;/code&gt;&lt;/a&gt; you cannot reopen the connection by issuing another &lt;a href=&quot;#ftplib.FTP.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">一方的に接続を閉じます。これは、&lt;a href=&quot;#ftplib.FTP.quit&quot;&gt; &lt;code&gt;quit()&lt;/code&gt; の&lt;/a&gt;呼び出しが成功した後など、すでに閉じられている接続には適用しないでください。この呼び出しの後、&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;インスタンスは使用できなくなります（&lt;a href=&quot;#ftplib.FTP.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#ftplib.FTP.quit&quot;&gt; &lt;code&gt;quit()&lt;/code&gt; の&lt;/a&gt;呼び出し後は、別の&lt;a href=&quot;#ftplib.FTP.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;メソッドを発行して接続を再開することはできません）。</target>
        </trans-unit>
        <trans-unit id="cc9b8e5dc8a15854c930c6167b1ca7f3ad815c2b" translate="yes" xml:space="preserve">
          <source>Close the connection.</source>
          <target state="translated">接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="36c7521162f5c29ea14bebc3019cba872a419ddd" translate="yes" xml:space="preserve">
          <source>Close the control file descriptor of the epoll object.</source>
          <target state="translated">epoll オブジェクトの制御ファイル記述子を閉じる。</target>
        </trans-unit>
        <trans-unit id="caa2df155ce5abb02454b37ea8fc198a038bc3f4" translate="yes" xml:space="preserve">
          <source>Close the control file descriptor of the kqueue object.</source>
          <target state="translated">kqueueオブジェクトの制御ファイル記述子を閉じます。</target>
        </trans-unit>
        <trans-unit id="432083b095e1e41349b819a780e6ffc901243cb6" translate="yes" xml:space="preserve">
          <source>Close the current file so that the next iteration will read the first line from the next file (if any); lines not read from the file will not count towards the cumulative line count. The filename is not changed until after the first line of the next file has been read. Before the first line has been read, this function has no effect; it cannot be used to skip the first file. After the last line of the last file has been read, this function has no effect.</source>
          <target state="translated">ファイルから読み込まれなかった行は累積行数にカウントされません。ファイルから読み込まれなかった行は累積行数にカウントされません。最初の行が読み込まれる前には、この関数は何の効果もありません。最後のファイルの最終行が読み込まれた後は、この関数は何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="89aa8d1d5eacb2885989e844c4c8b06ea635a421" translate="yes" xml:space="preserve">
          <source>Close the current window (ask to save if unsaved).</source>
          <target state="translated">現在のウィンドウを閉じます(保存されていない場合は保存するように指示します)。</target>
        </trans-unit>
        <trans-unit id="31832114e27977cb5caddf8a68621e0a4bbdb846" translate="yes" xml:space="preserve">
          <source>Close the cursor now (rather than whenever &lt;code&gt;__del__&lt;/code&gt; is called).</source>
          <target state="translated">（ &lt;code&gt;__del__&lt;/code&gt; が呼び出されるたびにではなく）すぐにカーソルを閉じます。</target>
        </trans-unit>
        <trans-unit id="0f66883d05ab33ecfb5efd49b7523317f55293b6" translate="yes" xml:space="preserve">
          <source>Close the database object, through &lt;code&gt;MsiCloseHandle()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MsiCloseHandle()&lt;/code&gt; を使用して、データベースオブジェクトを閉じます。</target>
        </trans-unit>
        <trans-unit id="427969fa9aabb0244e95a29bf1ad1f6e611ae4c3" translate="yes" xml:space="preserve">
          <source>Close the event loop.</source>
          <target state="translated">イベントループを閉じます。</target>
        </trans-unit>
        <trans-unit id="3aa3f1716a52e9590b120fe48ec89481c731dff1" translate="yes" xml:space="preserve">
          <source>Close the file descriptor of the polling object.</source>
          <target state="translated">ポーリングオブジェクトのファイルディスクリプタを閉じます。</target>
        </trans-unit>
        <trans-unit id="a16f5895984b4b83ca8d90a1f7bebb8291de4294" translate="yes" xml:space="preserve">
          <source>Close the iterator and free acquired resources.</source>
          <target state="translated">イテレータを閉じて、取得したリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="b584c19bcc5dc1905678449e583eac6eea66e695" translate="yes" xml:space="preserve">
          <source>Close the selector.</source>
          <target state="translated">セレクターを閉じます。</target>
        </trans-unit>
        <trans-unit id="dcd25f53e7d3b550b90a57b7f9c2f2b41d6e747b" translate="yes" xml:space="preserve">
          <source>Close the sequence.</source>
          <target state="translated">シーケンスを閉じます。</target>
        </trans-unit>
        <trans-unit id="55c44ffa351a3885d35d366ad1217642bf1b10d2" translate="yes" xml:space="preserve">
          <source>Close the socket. All future operations on the socket object will fail. The remote end-point will receive no more data (after queued data is flushed). Sockets are automatically closed when they are garbage-collected.</source>
          <target state="translated">ソケットを閉じます。ソケットオブジェクトに対する今後の操作はすべて失敗します。リモートエンドポイントは(キューに入っているデータがフラッシュされた後に)データを受信しなくなります。ソケットは、ゴミ箱に回収されると自動的にクローズされます。</target>
        </trans-unit>
        <trans-unit id="70b753d53c79533b7e44f1cf490091cdee4925dd" translate="yes" xml:space="preserve">
          <source>Close the stream if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;, and make the instance unusable. This is called automatically on object collection.</source>
          <target state="translated">&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;によって開かれた場合はストリームを閉じ、インスタンスを使用不可にします。これは、オブジェクトコレクションで自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2c7bfd821d8b2954975832325e786e3da05da9c4" translate="yes" xml:space="preserve">
          <source>Close the transport immediately, without waiting for pending operations to complete. Buffered data will be lost. No more data will be received. The protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;protocol.connection_lost()&lt;/code&gt;&lt;/a&gt; method will eventually be called with &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as its argument.</source>
          <target state="translated">保留中の操作が完了するのを待たずに、トランスポートをすぐに閉じます。バッファリングされたデータは失われます。これ以上のデータは受信されません。プロトコルの&lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt; &lt;code&gt;protocol.connection_lost()&lt;/code&gt; &lt;/a&gt;メソッドは、最終的には引数として&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0ed3623bc69e7e8f28e583b14577fd459c88941c" translate="yes" xml:space="preserve">
          <source>Close the transport immediately.</source>
          <target state="translated">すぐに輸送を終了してください。</target>
        </trans-unit>
        <trans-unit id="889ddbb3d484ced0f481e3bad3e2651e9acad250" translate="yes" xml:space="preserve">
          <source>Close the transport.</source>
          <target state="translated">トランスポートを閉じてください。</target>
        </trans-unit>
        <trans-unit id="94fc54422b7bd15454f1050adcf33974c2839e09" translate="yes" xml:space="preserve">
          <source>Close the view, through &lt;code&gt;MsiViewClose()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MsiViewClose()&lt;/code&gt; を使用してビューを閉じます。</target>
        </trans-unit>
        <trans-unit id="7498a46a4940cd39b13f342fadde91d7be17250c" translate="yes" xml:space="preserve">
          <source>Close the watcher.</source>
          <target state="translated">ウォッチャーを閉じる。</target>
        </trans-unit>
        <trans-unit id="6287d3207f53bcfa352b32dcde21d6eef690aa0f" translate="yes" xml:space="preserve">
          <source>Close the write end of the stream after the buffered write data is flushed.</source>
          <target state="translated">バッファリングされた書き込みデータがフラッシュされた後、ストリームの書き込み端を閉じる。</target>
        </trans-unit>
        <trans-unit id="cecdc5266f4bb5f7efb181990d26080bf12ec039" translate="yes" xml:space="preserve">
          <source>Close the write end of the transport after flushing all buffered data. Data may still be received.</source>
          <target state="translated">すべてのバッファリングされたデータをフラッシュした後、トランスポートの書き込み端を閉じる。データはまだ受信できるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6d8d8a240bbf1d82cb82e0723d718e5499d96e0a" translate="yes" xml:space="preserve">
          <source>Closely emulate the behavior of the interactive Python interpreter. This class builds on &lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt;&lt;code&gt;InteractiveInterpreter&lt;/code&gt;&lt;/a&gt; and adds prompting using the familiar &lt;code&gt;sys.ps1&lt;/code&gt; and &lt;code&gt;sys.ps2&lt;/code&gt;, and input buffering.</source>
          <target state="translated">インタラクティブなPythonインタープリターの動作を厳密にエミュレートします。このクラスは&lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt; &lt;code&gt;InteractiveInterpreter&lt;/code&gt; に&lt;/a&gt;基づいて構築され、おなじみの &lt;code&gt;sys.ps1&lt;/code&gt; と &lt;code&gt;sys.ps2&lt;/code&gt; を使用したプロンプト、および入力バッファリングを追加します。</target>
        </trans-unit>
        <trans-unit id="1d2fcf9b6d03723ce487c10efefff1af48f6d7d0" translate="yes" xml:space="preserve">
          <source>Closely emulate the interactive Python console. The optional &lt;em&gt;banner&lt;/em&gt; argument specify the banner to print before the first interaction; by default it prints a banner similar to the one printed by the standard Python interpreter, followed by the class name of the console object in parentheses (so as not to confuse this with the real interpreter &amp;ndash; since it&amp;rsquo;s so close!).</source>
          <target state="translated">インタラクティブなPythonコンソールを厳密にエミュレートします。オプションの&lt;em&gt;バナー&lt;/em&gt;引数は、最初の対話の前に印刷するバナーを指定します。デフォルトでは、標準のPythonインタープリターによって出力されるバナーと同様のバナーを出力し、その後に括弧で囲まれたコンソールオブジェクトのクラス名が続きます（これは実際のインタープリターと混同しないように、非常に近いためです）。</target>
        </trans-unit>
        <trans-unit id="baede6ff1a1aff70f59c292320d2aa913acc709b" translate="yes" xml:space="preserve">
          <source>Closes a previously opened registry key. The &lt;em&gt;hkey&lt;/em&gt; argument specifies a previously opened key.</source>
          <target state="translated">以前に開いたレジストリキーを閉じます。&lt;em&gt;HKEYの&lt;/em&gt;引数は、以前に開かれたキーを指定します。</target>
        </trans-unit>
        <trans-unit id="92587bcf08decd9d747e92a9df758026da1bb4ed" translate="yes" xml:space="preserve">
          <source>Closes access to the shared memory from this instance. In order to ensure proper cleanup of resources, all instances should call &lt;code&gt;close()&lt;/code&gt; once the instance is no longer needed. Note that calling &lt;code&gt;close()&lt;/code&gt; does not cause the shared memory block itself to be destroyed.</source>
          <target state="translated">このインスタンスから共有メモリへのアクセスを閉じます。リソースの適切なクリーンアップを確実にするために、インスタンスが不要になったら、すべてのインスタンスが &lt;code&gt;close()&lt;/code&gt; を呼び出す必要があります。 &lt;code&gt;close()&lt;/code&gt; を呼び出しても、共有メモリブロック自体は破棄されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6b3ce85d2c7b24b597139ca070702f9dd2852876" translate="yes" xml:space="preserve">
          <source>Closes the connection cleanly.</source>
          <target state="translated">接続をきれいに閉じます。</target>
        </trans-unit>
        <trans-unit id="e8f5cd207424d68e8ca560042b14dd651d2669f5" translate="yes" xml:space="preserve">
          <source>Closes the current element. &lt;em&gt;tag&lt;/em&gt; is the element name. Returns the closed element.</source>
          <target state="translated">現在の要素を閉じます。&lt;em&gt;tag&lt;/em&gt;は要素名です。閉じた要素を返します。</target>
        </trans-unit>
        <trans-unit id="c4ff63fa85db450c0b8efcf5dbcdc3cd9880b858" translate="yes" xml:space="preserve">
          <source>Closes the file.</source>
          <target state="translated">ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="18b10fa813eea0054bbf704ccbf36ddbb985d16e" translate="yes" xml:space="preserve">
          <source>Closes the mmap. Subsequent calls to other methods of the object will result in a ValueError exception being raised. This will not close the open file.</source>
          <target state="translated">mmap を閉じます。オブジェクトの他のメソッドをそれ以降に呼び出すと、ValueError 例外が発生します。これは、開いているファイルを閉じることはありません。</target>
        </trans-unit>
        <trans-unit id="51c950a40feba10734d38d7413fd4431b0470375" translate="yes" xml:space="preserve">
          <source>Closes the socket to the remote host.</source>
          <target state="translated">リモートホストへのソケットを閉じます。</target>
        </trans-unit>
        <trans-unit id="d088ba46947a0a90bc08a101b18b61eb57bcdcb7" translate="yes" xml:space="preserve">
          <source>Closes the socket.</source>
          <target state="translated">ソケットを閉じます。</target>
        </trans-unit>
        <trans-unit id="d501d67db803982835d3f46d3ff8fc9f6326ce82" translate="yes" xml:space="preserve">
          <source>Closes the underlying Windows handle.</source>
          <target state="translated">下位のWindowsハンドルを閉じます。</target>
        </trans-unit>
        <trans-unit id="16a82cac41a8aa5fd3dfb375c44458c56239f0c1" translate="yes" xml:space="preserve">
          <source>Closing quotes separate words (&lt;code&gt;&quot;Do&quot;Separate&lt;/code&gt; is parsed as &lt;code&gt;&quot;Do&quot;&lt;/code&gt; and &lt;code&gt;Separate&lt;/code&gt;);</source>
          <target state="translated">単語を区切るには、単語を区切ります（ &lt;code&gt;&quot;Do&quot;Separate&lt;/code&gt; は &lt;code&gt;&quot;Do&quot;&lt;/code&gt; および &lt;code&gt;Separate&lt;/code&gt; として解析されます）。</target>
        </trans-unit>
        <trans-unit id="576222a4a220e0cfdc3be343de2028d193ea51fb" translate="yes" xml:space="preserve">
          <source>Closing the file object returned by &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t close the original socket unless all other file objects have been closed and &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;socket.close()&lt;/code&gt;&lt;/a&gt; has been called on the socket object.</source>
          <target state="translated">&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;によって返されたファイルオブジェクトを閉じても、他のすべてのファイルオブジェクトが閉じられ、socketオブジェクトで&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;socket.close()&lt;/code&gt; &lt;/a&gt;が呼び出されていない限り、元のソケットは閉じられません。</target>
        </trans-unit>
        <trans-unit id="59041b16bccdcf86bae955f7c4768299dc0ae4eb" translate="yes" xml:space="preserve">
          <source>Cmd (command)</source>
          <target state="translated">Cmd(コマンド)</target>
        </trans-unit>
        <trans-unit id="fc73387aa45cd86ab1e03f400c0b709d345476d7" translate="yes" xml:space="preserve">
          <source>Cmd Example</source>
          <target state="translated">Cmdの例</target>
        </trans-unit>
        <trans-unit id="aa09ae2c90376d99398a2860a9c82850c8532db5" translate="yes" xml:space="preserve">
          <source>Cmd Objects</source>
          <target state="translated">Cmd オブジェクト</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="2297bf1dc931d9625f4470ee423e4d3118e0fd87" translate="yes" xml:space="preserve">
          <source>Code Context</source>
          <target state="translated">コードコンテキスト</target>
        </trans-unit>
        <trans-unit id="a2e1e4a612e42b52761b3fe26db80ae6b84824a4" translate="yes" xml:space="preserve">
          <source>Code Objects</source>
          <target state="translated">コードオブジェクト</target>
        </trans-unit>
        <trans-unit id="9e8da9ba1a99eeeaab9d8083b841bddbf845793f" translate="yes" xml:space="preserve">
          <source>Code Objects Bit Flags</source>
          <target state="translated">コードオブジェクト ビットフラグ</target>
        </trans-unit>
        <trans-unit id="d6b8e8c347aed714ee33ee1399cb6594e1e2cb5d" translate="yes" xml:space="preserve">
          <source>Code needing to capture stdout or stderr should use &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">stdoutまたはstderrをキャプチャする必要があるコードは、代わりに&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9d85ce9c0d0f12ee1819a4a575f31cd212557312" translate="yes" xml:space="preserve">
          <source>Code objects are used by the implementation to represent &amp;ldquo;pseudo-compiled&amp;rdquo; executable Python code such as a function body. They differ from function objects because they don&amp;rsquo;t contain a reference to their global execution environment. Code objects are returned by the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function and can be extracted from function objects through their &lt;code&gt;__code__&lt;/code&gt; attribute. See also the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">コードオブジェクトは、実装によって使用され、関数本体などの「疑似コンパイルされた」実行可能なPythonコードを表します。グローバル実行環境への参照が含まれていないため、関数オブジェクトとは異なります。コードオブジェクトは組み込みの&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;関数によって返され、 &lt;code&gt;__code__&lt;/code&gt; 属性を介して関数オブジェクトから抽出できます。&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="be5c5752c503883cee97bc81e60ce7e319b48526" translate="yes" xml:space="preserve">
          <source>Code to display the 10 lines allocating the most memory with a pretty output, ignoring &lt;code&gt;&amp;lt;frozen importlib._bootstrap&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;unknown&amp;gt;&lt;/code&gt; files:</source>
          <target state="translated">&lt;code&gt;&amp;lt;frozen importlib._bootstrap&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;unknown&amp;gt;&lt;/code&gt; ファイルと&amp;lt;unknown&amp;gt;ファイルを無視して、きれいな出力で最大のメモリを割り当てる10行を表示するコード：</target>
        </trans-unit>
        <trans-unit id="6a8a394788e61319d4653b657a2d29ffd888899d" translate="yes" xml:space="preserve">
          <source>Code to display the traceback of the biggest memory block:</source>
          <target state="translated">最大メモリブロックのトレースバックを表示するコード。</target>
        </trans-unit>
        <trans-unit id="a336769a99a5362c65c8108cc91c5daedd4de9c5" translate="yes" xml:space="preserve">
          <source>Codec</source>
          <target state="translated">Codec</target>
        </trans-unit>
        <trans-unit id="b602fc83d422019f525794aaf7d48f339491cafc" translate="yes" xml:space="preserve">
          <source>Codec Base Classes</source>
          <target state="translated">コーデック基底クラス</target>
        </trans-unit>
        <trans-unit id="bbccc3ebba92793551099ce6f8b5a317e001e214" translate="yes" xml:space="preserve">
          <source>Codec details when looking up the codec registry. The constructor arguments are stored in attributes of the same name:</source>
          <target state="translated">コーデックレジストリを検索する際にコーデックの詳細を表示します。コンストラクタの引数は、同名の属性に格納されます。</target>
        </trans-unit>
        <trans-unit id="dcce4ae43bfc2646a7236dcc5bfe2dd49129b1b6" translate="yes" xml:space="preserve">
          <source>Codecs</source>
          <target state="translated">Codecs</target>
        </trans-unit>
        <trans-unit id="4946fe715b8b0bd4a2c887eda9a0efb27185107d" translate="yes" xml:space="preserve">
          <source>Collapse and truncate the given &lt;em&gt;text&lt;/em&gt; to fit in the given &lt;em&gt;width&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;幅&lt;/em&gt;に収まるように、指定された&lt;em&gt;テキスト&lt;/em&gt;を折りたたみ、切り詰め&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6eebbd8606122ee069fe1696bb57e65a6753213a" translate="yes" xml:space="preserve">
          <source>Collections Abstract Base Classes</source>
          <target state="translated">コレクション 抽象基底クラス</target>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="translated">Color</target>
        </trans-unit>
        <trans-unit id="72a8e4e495172a56dc65475730fd8e0f87a52c38" translate="yes" xml:space="preserve">
          <source>Color control</source>
          <target state="translated">カラーコントロール</target>
        </trans-unit>
        <trans-unit id="9810867b1567e9dad8ab88041218bb4cb2280869" translate="yes" xml:space="preserve">
          <source>Colors can be given as the names of X colors in the rgb.txt file, or as strings representing RGB values in 4 bit: &lt;code&gt;&quot;#RGB&quot;&lt;/code&gt;, 8 bit: &lt;code&gt;&quot;#RRGGBB&quot;&lt;/code&gt;, 12 bit&amp;rdquo; &lt;code&gt;&quot;#RRRGGGBBB&quot;&lt;/code&gt;, or 16 bit &lt;code&gt;&quot;#RRRRGGGGBBBB&quot;&lt;/code&gt; ranges, where R,G,B here represent any legal hex digit. See page 160 of Ousterhout&amp;rsquo;s book for details.</source>
          <target state="translated">色は、rgb.txtファイルのX色の名前として、または4ビットのRGB値を表す文字列として指定できます： &lt;code&gt;&quot;#RGB&quot;&lt;/code&gt; 、8ビット： &lt;code&gt;&quot;#RRGGBB&quot;&lt;/code&gt; 、12ビット &quot; &lt;code&gt;&quot;#RRRGGGBBB&quot;&lt;/code&gt; 、または16ビット &lt;code&gt;&quot;#RRRRGGGGBBBB&quot;&lt;/code&gt; 範囲。ここで、R、G、Bは有効な16進数字を表します。詳細については、Ousterhoutの本の160ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="9718ff65a73817dd71e18a41e5b8a04191374e61" translate="yes" xml:space="preserve">
          <source>Column #0 always refers to the tree column, even if show=&amp;rdquo;tree&amp;rdquo; is not specified.</source>
          <target state="translated">show =&amp;rdquo; tree&amp;rdquo;が指定されていなくても、列＃0は常にツリー列を参照します。</target>
        </trans-unit>
        <trans-unit id="c9b64b47c3f334bc51699cba69f239cd60ab2008" translate="yes" xml:space="preserve">
          <source>Column Identifiers</source>
          <target state="translated">カラム識別子</target>
        </trans-unit>
        <trans-unit id="17879ff88c1d5a49629aef6b87d179f9d2d54559" translate="yes" xml:space="preserve">
          <source>Column identifiers take any of the following forms:</source>
          <target state="translated">カラム識別子は、以下のいずれかの形式をとります。</target>
        </trans-unit>
        <trans-unit id="cea8f7b97ab7fba0a5d6cdb48edbcdf540f9260e" translate="yes" xml:space="preserve">
          <source>Column number at which an error occurred.</source>
          <target state="translated">エラーが発生したカラム番号。</target>
        </trans-unit>
        <trans-unit id="5af1dab5551d63f3b3a54aa75cdccbc3c925d834" translate="yes" xml:space="preserve">
          <source>Combination of all locale settings. If this flag is used when the locale is changed, setting the locale for all categories is attempted. If that fails for any category, no category is changed at all. When the locale is retrieved using this flag, a string indicating the setting for all categories is returned. This string can be later used to restore the settings.</source>
          <target state="translated">すべてのロケール設定の組み合わせ。ロケール変更時にこのフラグを使用すると、全カテゴリのロケール設定を試みる。いずれかのカテゴリで失敗した場合、カテゴリは一切変更されない。このフラグを用いてロケールを取得すると、全カテゴリの設定を示す文字列が返される。この文字列は、後に設定を復元する際に使用することができる。</target>
        </trans-unit>
        <trans-unit id="11d19d21cdc98f81c7394802e1d7b8f1e775846a" translate="yes" xml:space="preserve">
          <source>Combinations are emitted in lexicographic sort order. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the combination tuples will be produced in sorted order.</source>
          <target state="translated">組み合わせは辞書式ソート順で出力されます。したがって、入力&lt;em&gt;イテラブル&lt;/em&gt;がソートされている場合、組み合わせタプルはソートされた順序で生成されます。</target>
        </trans-unit>
        <trans-unit id="dfab5a1b3e4bac62a4690435ae65b9002d75e6b3" translate="yes" xml:space="preserve">
          <source>Combine the elements of a tuple as returned by &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; into a complete URL as a string. The &lt;em&gt;parts&lt;/em&gt; argument can be any five-item iterable. This may result in a slightly different, but equivalent URL, if the URL that was parsed originally had unnecessary delimiters (for example, a ? with an empty query; the RFC states that these are equivalent).</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;によって返されるタプルの要素を文字列として完全なURLに結合します。&lt;em&gt;部品の&lt;/em&gt;引数は、任意の5項目の反復可能なことができます。解析されたURLに元々不要な区切り文字が含まれていた場合、これはわずかに異なるが同等のURLになる可能性があります（たとえば、空のクエリを含む？など。</target>
        </trans-unit>
        <trans-unit id="f7a651c3370b3fbb638611f9bc1773b7d75a8cf4" translate="yes" xml:space="preserve">
          <source>Combine the functionality of &lt;a href=&quot;#os.readv&quot;&gt;&lt;code&gt;os.readv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.pread&quot;&gt;&lt;code&gt;os.pread()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.readv&quot;&gt; &lt;code&gt;os.readv()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#os.pread&quot;&gt; &lt;code&gt;os.pread()&lt;/code&gt; &lt;/a&gt;の機能を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="0067bd2007d259250b456ccf688f9aadb6140e64" translate="yes" xml:space="preserve">
          <source>Combine the functionality of &lt;a href=&quot;#os.writev&quot;&gt;&lt;code&gt;os.writev()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.pwrite&quot;&gt;&lt;code&gt;os.pwrite()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.writev&quot;&gt; &lt;code&gt;os.writev()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#os.pwrite&quot;&gt; &lt;code&gt;os.pwrite()&lt;/code&gt; &lt;/a&gt;の機能を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="d5ea432f7cdba803cad695ee269715edd5c13385" translate="yes" xml:space="preserve">
          <source>Combined key and certificate</source>
          <target state="translated">鍵と証明書の組み合わせ</target>
        </trans-unit>
        <trans-unit id="226b7f72744ae9993e72e966cb1ec960f8eaeb9f" translate="yes" xml:space="preserve">
          <source>Combines &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#resource.getrlimit&quot;&gt;&lt;code&gt;getrlimit()&lt;/code&gt;&lt;/a&gt; in one function and supports to get and set the resources limits of an arbitrary process. If &lt;em&gt;pid&lt;/em&gt; is 0, then the call applies to the current process. &lt;em&gt;resource&lt;/em&gt; and &lt;em&gt;limits&lt;/em&gt; have the same meaning as in &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;limits&lt;/em&gt; is optional.</source>
          <target state="translated">&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#resource.getrlimit&quot;&gt; &lt;code&gt;getrlimit()&lt;/code&gt; &lt;/a&gt;を1つの関数に組み合わせ、任意のプロセスのリソース制限の取得と設定をサポートします。&lt;em&gt;pid&lt;/em&gt;が0の場合、呼び出しは現在のプロセスに適用されます。&lt;em&gt;リソース&lt;/em&gt;と&lt;em&gt;制限&lt;/em&gt;は、&lt;em&gt;制限&lt;/em&gt;がオプションであることを除いて、&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; &lt;/a&gt;と同じ意味です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3c8a478fa75e3139e86be829278de8aee3f2d4b" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_READ, &lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt;&lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt;&lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt;&lt;code&gt;KEY_NOTIFY&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">STANDARD_RIGHTS_READ、&lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt; &lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt; &lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt; &lt;code&gt;KEY_NOTIFY&lt;/code&gt; の&lt;/a&gt;値を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="47232f43d2781d56da7de9b5476be62ac7816a9a" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_REQUIRED, &lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt;&lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt;&lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt;&lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt;&lt;code&gt;KEY_NOTIFY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_CREATE_LINK&quot;&gt;&lt;code&gt;KEY_CREATE_LINK&lt;/code&gt;&lt;/a&gt; access rights.</source>
          <target state="translated">STANDARD_RIGHTS_REQUIRED、&lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt; &lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt; &lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt; &lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt; &lt;code&gt;KEY_NOTIFY&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#winreg.KEY_CREATE_LINK&quot;&gt; &lt;code&gt;KEY_CREATE_LINK&lt;/code&gt; の&lt;/a&gt;アクセス権を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="9cdf44f484ecd092a4522bea0f297946a96ebe2c" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_WRITE, &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt;&lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt;&lt;/a&gt; access rights.</source>
          <target state="translated">STANDARD_RIGHTS_WRITE、&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt; &lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt; &lt;/a&gt;アクセス権を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="bb0edc1867f6a563d6bd35c8cf53ff28d2e7abd2" translate="yes" xml:space="preserve">
          <source>Combining SSL protocol handling and network IO usually works well, but there are some cases where it doesn&amp;rsquo;t. An example is async IO frameworks that want to use a different IO multiplexing model than the &amp;ldquo;select/poll on a file descriptor&amp;rdquo; (readiness based) model that is assumed by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; and by the internal OpenSSL socket IO routines. This is mostly relevant for platforms like Windows where this model is not efficient. For this purpose, a reduced scope variant of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; called &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">SSLプロトコル処理とネットワークIOを組み合わせると、通常はうまく機能しますが、そうでない場合もあります。例として、&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;および内部OpenSSLソケットIOルーチンによって想定される「ファイル記述子の選択/ポーリング」（準備に基づく）モデルとは異なるIO多重化モデルを使用する非同期IOフレームワークがあります。これは主に、このモデルが効率的でないWindowsなどのプラットフォームに関連しています。この目的のために、&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;と呼ばれる&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; の&lt;/a&gt;縮小スコープバリアントが提供されています。</target>
        </trans-unit>
        <trans-unit id="50dcdd08f353cf4f5753574fae5a437ac673592c" translate="yes" xml:space="preserve">
          <source>Combining members of &lt;code&gt;Flag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Flag&lt;/code&gt; メンバーを組み合わせる</target>
        </trans-unit>
        <trans-unit id="408fe2dc2870c3ac708d0a454ffd0bb0534395b3" translate="yes" xml:space="preserve">
          <source>Combobox</source>
          <target state="translated">Combobox</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">コマンドラインインタフェース</target>
        </trans-unit>
        <trans-unit id="eeda843072bf94fe708ffa85c9ec6325e4e7944a" translate="yes" xml:space="preserve">
          <source>Command history</source>
          <target state="translated">コマンド履歴</target>
        </trans-unit>
        <trans-unit id="c424c7db6b23b09cdd8593c4d7319bd815622923" translate="yes" xml:space="preserve">
          <source>Command line interface</source>
          <target state="translated">コマンドラインインタフェース</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">コマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="83048ea23faff69386ce98e08a764b0763915bfb" translate="yes" xml:space="preserve">
          <source>Command line usage</source>
          <target state="translated">コマンドラインの使い方</target>
        </trans-unit>
        <trans-unit id="402830ff9d854ddc188e390827477892a4b775da" translate="yes" xml:space="preserve">
          <source>Command that was used to spawn the child process.</source>
          <target state="translated">子プロセスの起動に使用されたコマンド。</target>
        </trans-unit>
        <trans-unit id="86ceab975b39d4ea0e34212f604e47ddbf72c7ee" translate="yes" xml:space="preserve">
          <source>Command to activate virtual environment</source>
          <target state="translated">仮想環境を起動するコマンド</target>
        </trans-unit>
        <trans-unit id="f9408856d6c43a487f24ed6c405a06b71bf79f69" translate="yes" xml:space="preserve">
          <source>Command-Line Interface</source>
          <target state="translated">コマンドラインインタフェース</target>
        </trans-unit>
        <trans-unit id="090ffa187f33d5f4ea1b00a057f6c8cafb5a0039" translate="yes" xml:space="preserve">
          <source>Command-Line Usage</source>
          <target state="translated">コマンドライン使用法</target>
        </trans-unit>
        <trans-unit id="f67e000a046a21604b2818c94a17c7ddab8e2442" translate="yes" xml:space="preserve">
          <source>Command-line options</source>
          <target state="translated">コマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="f5fade6f410b816f6fab771a6ff9476daabb47f9" translate="yes" xml:space="preserve">
          <source>Command-line use</source>
          <target state="translated">コマンドラインでの使用</target>
        </trans-unit>
        <trans-unit id="206bc8fe8db08309162413ed012ae8509a9ed718" translate="yes" xml:space="preserve">
          <source>Commands that the debugger doesn&amp;rsquo;t recognize are assumed to be Python statements and are executed in the context of the program being debugged. Python statements can also be prefixed with an exclamation point (&lt;code&gt;!&lt;/code&gt;). This is a powerful way to inspect the program being debugged; it is even possible to change a variable or call a function. When an exception occurs in such a statement, the exception name is printed but the debugger&amp;rsquo;s state is not changed.</source>
          <target state="translated">デバッガーが認識しないコマンドはPythonステートメントであると想定され、デバッグされているプログラムのコンテキストで実行されます。Pythonステートメントの前に感嘆符（ &lt;code&gt;!&lt;/code&gt; ）を付けることもできます。これは、デバッグ中のプログラムを検査する強力な方法です。変数を変更したり、関数を呼び出したりすることも可能です。このようなステートメントで例外が発生すると、例外名が出力されますが、デバッガーの状態は変更されません。</target>
        </trans-unit>
        <trans-unit id="6a5589f5db82709ebb49f684b93def57c8ee25db" translate="yes" xml:space="preserve">
          <source>Comment Objects</source>
          <target state="translated">どのようにオブジェクトが</target>
        </trans-unit>
        <trans-unit id="c5de5c460d942930fd5a0e13fe4b8d3a825be35a" translate="yes" xml:space="preserve">
          <source>Comment Out Region</source>
          <target state="translated">どのようにアウト地域</target>
        </trans-unit>
        <trans-unit id="d5659747255817bfd36278fbbda4a443d90666d8" translate="yes" xml:space="preserve">
          <source>Comment element factory. This factory function creates a special element that will be serialized as an XML comment by the standard serializer. The comment string can be either a bytestring or a Unicode string. &lt;em&gt;text&lt;/em&gt; is a string containing the comment string. Returns an element instance representing a comment.</source>
          <target state="translated">コメント要素ファクトリ。このファクトリ関数は、標準シリアライザによってXMLコメントとしてシリアル化される特別な要素を作成します。コメント文字列は、バイト文字列またはUnicode文字列のいずれかです。&lt;em&gt;text&lt;/em&gt;はコメント文字列を含む文字列です。コメントを表す要素インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="6a455e414da0e3bd3b3eeba19a1ae5764fb134ed" translate="yes" xml:space="preserve">
          <source>Comment for the individual archive member as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトとしての個々のアーカイブメンバーのコメント。</target>
        </trans-unit>
        <trans-unit id="8627cd52ef9d4527a69414622d03a11b73e36256" translate="yes" xml:space="preserve">
          <source>Comment prefixes are strings that indicate the start of a valid comment within a config file. &lt;em&gt;comment_prefixes&lt;/em&gt; are used only on otherwise empty lines (optionally indented) whereas &lt;em&gt;inline_comment_prefixes&lt;/em&gt; can be used after every valid value (e.g. section names, options and empty lines as well). By default inline comments are disabled and &lt;code&gt;'#'&lt;/code&gt; and &lt;code&gt;';'&lt;/code&gt; are used as prefixes for whole line comments.</source>
          <target state="translated">コメントのプレフィックスは、構成ファイル内の有効なコメントの開始を示す文字列です。&lt;em&gt;comment_prefixes&lt;/em&gt;は空の行（オプションでインデントされている）でのみ使用されますが、&lt;em&gt;inline_comment_prefixes&lt;/em&gt;は有効な値（セクション名、オプション、空行など）の後に使用できます。デフォルトでは、インラインコメントは無効になっており、 &lt;code&gt;'#'&lt;/code&gt; と &lt;code&gt;';'&lt;/code&gt; 行全体のコメントの接頭辞として使用されます。</target>
        </trans-unit>
        <trans-unit id="4dad68038d4b09d4a18175f41c17a74631fc6b10" translate="yes" xml:space="preserve">
          <source>Commit the changes pending in the current transaction, by calling &lt;code&gt;MSIDatabaseCommit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MSIDatabaseCommit()&lt;/code&gt; を呼び出して、現在のトランザクションで保留中の変更をコミットします。</target>
        </trans-unit>
        <trans-unit id="2c8cda04e4526146e746bf5ed1673609f069de0c" translate="yes" xml:space="preserve">
          <source>Common Properties</source>
          <target state="translated">共通物件</target>
        </trans-unit>
        <trans-unit id="f3605d94a032ba689b6c43373c53ddb02378946d" translate="yes" xml:space="preserve">
          <source>Common Sequence Operations</source>
          <target state="translated">共通シーケンス演算</target>
        </trans-unit>
        <trans-unit id="79994170d27f181bf8e7746fce7bf59ab463f166" translate="yes" xml:space="preserve">
          <source>Common base class for the other pickling exceptions. It inherits &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">その他の酸洗い例外の共通基本クラス。&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="6884ffaea27481dfe98c01d803e25dc7e46455c6" translate="yes" xml:space="preserve">
          <source>Common dialogs to allow the user to specify a file to open or save.</source>
          <target state="translated">開くファイルや保存するファイルを指定するための一般的なダイアログ。</target>
        </trans-unit>
        <trans-unit id="dfb1f5dc76f0196e4c2c6e4fe2919e85f3e2d394" translate="yes" xml:space="preserve">
          <source>Common installation tools such as &lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt; work as expected with virtual environments. In other words, when a virtual environment is active, they install Python packages into the virtual environment without needing to be told to do so explicitly.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt;や&lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt;などの一般的なインストールツールは、仮想環境で期待どおりに機能します。つまり、仮想環境がアクティブな場合、明示的に指示する必要なく、Pythonパッケージを仮想環境にインストールします。</target>
        </trans-unit>
        <trans-unit id="5e922a31f8ae91aa33845b5586b849a493fc599e" translate="yes" xml:space="preserve">
          <source>Common instance variables of ctypes data types:</source>
          <target state="translated">データ型ctypesの共通インスタンス変数。</target>
        </trans-unit>
        <trans-unit id="edbc971d96420cb012b0de74d40a7c8b6d1a73dd" translate="yes" xml:space="preserve">
          <source>Common issues</source>
          <target state="translated">共通の問題点</target>
        </trans-unit>
        <trans-unit id="6032de3401ab52521f8e73b8a9f9405564798bdb" translate="yes" xml:space="preserve">
          <source>Common methods of ctypes data types, these are all class methods (to be exact, they are methods of the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-metaclass&quot;&gt;metaclass&lt;/a&gt;):</source>
          <target state="translated">ctypesデータ型の一般的なメソッド、これらはすべてクラスメソッドです（正確には、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-metaclass&quot;&gt;メタクラスの&lt;/a&gt;メソッドです）。</target>
        </trans-unit>
        <trans-unit id="f0aee63db2042ae8c02827391b8452f7e56c021d" translate="yes" xml:space="preserve">
          <source>Common patterns for working with &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;オブジェクトを操作するための一般的なパターン：</target>
        </trans-unit>
        <trans-unit id="66576d7f896060652207fe265bedf170d46acf3d" translate="yes" xml:space="preserve">
          <source>Common problems and solutions</source>
          <target state="translated">共通の問題点と解決策</target>
        </trans-unit>
        <trans-unit id="23a228edf6bdd2474f23d22047e508c520e8615a" translate="yes" xml:space="preserve">
          <source>Commonly used warning filters apply to either all warnings, warnings in a particular category, or warnings raised by particular modules or packages. Some examples:</source>
          <target state="translated">一般的に使用されている警告フィルタは、すべての警告、特定のカテゴリの警告、 特定のモジュールやパッケージで発生した警告のいずれかに適用されます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="62406ed154f5d7c3531ef51179b447e9abc85576" translate="yes" xml:space="preserve">
          <source>Communication error on send</source>
          <target state="translated">送信時の通信エラー</target>
        </trans-unit>
        <trans-unit id="06f308ca8a12b73fd16988a6a17d85dd615ded71" translate="yes" xml:space="preserve">
          <source>Compact encoding:</source>
          <target state="translated">コンパクトなエンコーディング。</target>
        </trans-unit>
        <trans-unit id="e738c2a3431d85dba37cdc62781724c798d412e7" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of bytes objects) using &lt;em&gt;dfunc&lt;/em&gt;; yield a sequence of delta lines (also bytes) in the format returned by &lt;em&gt;dfunc&lt;/em&gt;. &lt;em&gt;dfunc&lt;/em&gt; must be a callable, typically either &lt;a href=&quot;#difflib.unified_diff&quot;&gt;&lt;code&gt;unified_diff()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.context_diff&quot;&gt;&lt;code&gt;context_diff()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較と&lt;em&gt;B&lt;/em&gt;使用（バイトオブジェクトのリスト）&lt;em&gt;dfuncを&lt;/em&gt;。&lt;em&gt;dfunc&lt;/em&gt;によって返された形式で一連のデルタ行（これもバイト）を生成します。&lt;em&gt;dfunc&lt;/em&gt;は呼び出し可能でなければなりません。通常は、&lt;a href=&quot;#difflib.unified_diff&quot;&gt; &lt;code&gt;unified_diff()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#difflib.context_diff&quot;&gt; &lt;code&gt;context_diff()&lt;/code&gt; の&lt;/a&gt;いずれかです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57a3a7d5887a804b4800b8a95897318abbd04d21" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt;-style delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines).</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;（文字列のリスト）を比較&lt;em&gt;し&lt;/em&gt;ます。&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;スタイルのデルタ（デルタラインを生成する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;）を返します。</target>
        </trans-unit>
        <trans-unit id="5980d717a7c70a82a1daf0b56b937a8df7a08b63" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in context diff format.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;（文字列のリスト）を比較&lt;em&gt;し&lt;/em&gt;ます。デルタ（デルタラインを生成する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;）をコンテキストdiff形式で返します。</target>
        </trans-unit>
        <trans-unit id="5d7bf7448102c93954cccf9ee3ae38a2e960355d" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in unified diff format.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;（文字列のリスト）を比較&lt;em&gt;し&lt;/em&gt;ます。デルタ（デルタラインを生成する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;ジェネレータ&lt;/a&gt;）を、統一されたdiff形式で返します。</target>
        </trans-unit>
        <trans-unit id="d1677cd5d2e6923bfd592033bacf964082bed6f5" translate="yes" xml:space="preserve">
          <source>Compare the files in the two directories &lt;em&gt;dir1&lt;/em&gt; and &lt;em&gt;dir2&lt;/em&gt; whose names are given by &lt;em&gt;common&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;common&lt;/em&gt;によって名前が付けられている2つのディレクトリ&lt;em&gt;dir1&lt;/em&gt;および&lt;em&gt;dir2&lt;/em&gt;内のファイルを比較します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db42d138ecc98642a4978a9b9d68d68d1275b6d0" translate="yes" xml:space="preserve">
          <source>Compare the files named &lt;em&gt;f1&lt;/em&gt; and &lt;em&gt;f2&lt;/em&gt;, returning &lt;code&gt;True&lt;/code&gt; if they seem equal, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;f1&lt;/em&gt;と&lt;em&gt;f2&lt;/em&gt;という名前のファイルを比較し、等しいと思われる場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d84c4de5e54bc3420121b0d878b9a242d38423f2" translate="yes" xml:space="preserve">
          <source>Compare the values of two Decimal instances. &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; returns a Decimal instance, and if either operand is a NaN then the result is a NaN:</source>
          <target state="translated">2つのDecimalインスタンスの値を比較します。&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;はDecimalインスタンスを返し、いずれかのオペランドがNaNの場合、結果はNaNになります。</target>
        </trans-unit>
        <trans-unit id="a226fdd7431b1e9a6529ff96f27a98453ab15a4c" translate="yes" xml:space="preserve">
          <source>Compare this network to &lt;em&gt;other&lt;/em&gt;. In this comparison only the network addresses are considered; host bits aren&amp;rsquo;t. Returns either &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">このネットワークを&lt;em&gt;他の&lt;/em&gt;ネットワークと比較してください。この比較では、ネットワークアドレスのみが考慮されます。ホストビットはそうではありません。戻り値のいずれか &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78e691baa477d44771ae45b242964b747b6afab0" translate="yes" xml:space="preserve">
          <source>Compare two operands using their abstract representation rather than their numerical value. Similar to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, but the result gives a total ordering on &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instances. Two &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instances with the same numeric value but different representations compare unequal in this ordering:</source>
          <target state="translated">数値ではなく抽象表現を使用して、2つのオペランドを比較します。&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;メソッドに似ていますが、結果は&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスの全体的な順序を示します。同じ数値で表現が異なる2つの&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスは、次の順序で等しくありません。</target>
        </trans-unit>
        <trans-unit id="20f8e5de30ab07dba7ae9bf5b95938e813252ce1" translate="yes" xml:space="preserve">
          <source>Compare two operands using their abstract representation rather than their value as in &lt;a href=&quot;#decimal.Decimal.compare_total&quot;&gt;&lt;code&gt;compare_total()&lt;/code&gt;&lt;/a&gt;, but ignoring the sign of each operand. &lt;code&gt;x.compare_total_mag(y)&lt;/code&gt; is equivalent to &lt;code&gt;x.copy_abs().compare_total(y.copy_abs())&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.compare_total&quot;&gt; &lt;code&gt;compare_total()&lt;/code&gt; の&lt;/a&gt;ように値ではなく、抽象表現を使用して2つのオペランドを比較しますが、各オペランドの符号は無視します。 &lt;code&gt;x.compare_total_mag(y)&lt;/code&gt; は &lt;code&gt;x.copy_abs().compare_total(y.copy_abs())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2db74bb511106c122af95dcaf7fcfe944fd3e230" translate="yes" xml:space="preserve">
          <source>Compare two sequences of lines, and generate the delta (a sequence of lines).</source>
          <target state="translated">2つの線のシーケンスを比較し、デルタ(線のシーケンス)を生成します。</target>
        </trans-unit>
        <trans-unit id="953a40025f44a8432ec051b9b74e9a3f7ef429e2" translate="yes" xml:space="preserve">
          <source>Compares &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. (4)</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; を&lt;/a&gt;比較します。（4）</target>
        </trans-unit>
        <trans-unit id="8dc038b02cefa714bcf5c17046a5db1e8b3a6c7e" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;fromlines&lt;/em&gt; and &lt;em&gt;tolines&lt;/em&gt; (lists of strings) and returns a string which is a complete HTML file containing a table showing line by line differences with inter-line and intra-line changes highlighted.</source>
          <target state="translated">&lt;em&gt;fromlines&lt;/em&gt;と&lt;em&gt;tolines&lt;/em&gt;（文字列のリスト）を比較し、&lt;em&gt;行間&lt;/em&gt;および&lt;em&gt;行内の&lt;/em&gt;変更が強調表示された行ごとの違いを示すテーブルを含む完全なHTMLファイルである文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6958d67629a2ae94e97852327539538ecb61eb53" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;fromlines&lt;/em&gt; and &lt;em&gt;tolines&lt;/em&gt; (lists of strings) and returns a string which is a complete HTML table showing line by line differences with inter-line and intra-line changes highlighted.</source>
          <target state="translated">&lt;em&gt;fromlines&lt;/em&gt;と&lt;em&gt;tolines&lt;/em&gt;（文字列のリスト）を比較し、&lt;em&gt;行間&lt;/em&gt;および&lt;em&gt;行内の&lt;/em&gt;変更が強調表示された行ごとの違いを示す完全なHTMLテーブルである文字列を返します。</target>
        </trans-unit>
        <trans-unit id="fdec73464d867b795bc0bb2b0167267e3523aede" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; numerically.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;と&lt;em&gt;yを&lt;/em&gt;数値的に比較します。</target>
        </trans-unit>
        <trans-unit id="444703ac8616d8a745a339ea43536fb0ff41fac7" translate="yes" xml:space="preserve">
          <source>Compares the values numerically with their sign ignored.</source>
          <target state="translated">符号を無視して数値で比較します。</target>
        </trans-unit>
        <trans-unit id="525ac3126560a9c0e3826f5ea2686c919b3bb570" translate="yes" xml:space="preserve">
          <source>Compares the values of the two operands numerically.</source>
          <target state="translated">2つのオペランドの値を数値的に比較します。</target>
        </trans-unit>
        <trans-unit id="73d47aca2575e0cc09ea14fb2d8f31f4746ee82d" translate="yes" xml:space="preserve">
          <source>Compares two operands using their abstract representation, ignoring sign.</source>
          <target state="translated">符号を無視して、抽象表現を使用して2つのオペランドを比較します。</target>
        </trans-unit>
        <trans-unit id="c1deea1e8065f7fa1dff18b0b984e1bb244eb5a9" translate="yes" xml:space="preserve">
          <source>Compares two operands using their abstract representation.</source>
          <target state="translated">抽象表現を使用して、2つのオペランドを比較します。</target>
        </trans-unit>
        <trans-unit id="ec7d845ee5f455147d4709a9c5d20c0b1ef64636" translate="yes" xml:space="preserve">
          <source>Compares two strings according to the current &lt;a href=&quot;#locale.LC_COLLATE&quot;&gt;&lt;code&gt;LC_COLLATE&lt;/code&gt;&lt;/a&gt; setting. As any other compare function, returns a negative, or a positive value, or &lt;code&gt;0&lt;/code&gt;, depending on whether &lt;em&gt;string1&lt;/em&gt; collates before or after &lt;em&gt;string2&lt;/em&gt; or is equal to it.</source>
          <target state="translated">現在の&lt;a href=&quot;#locale.LC_COLLATE&quot;&gt; &lt;code&gt;LC_COLLATE&lt;/code&gt; &lt;/a&gt;設定に従って2つの文字列を比較します。他の比較関数と同様に、&lt;em&gt;string1が&lt;/em&gt;&lt;em&gt;string2の&lt;/em&gt;前または後の&lt;em&gt;どちらで&lt;/em&gt;照合するか、またはそれと等しいかどうかに応じて、負の値、正の値、または &lt;code&gt;0&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9069531bcf0ef87ca797eda0607bfeba3543d8bd" translate="yes" xml:space="preserve">
          <source>Compares two values numerically and returns the maximum.</source>
          <target state="translated">2つの値を数値で比較し、最大値を返します。</target>
        </trans-unit>
        <trans-unit id="66a492fe6f467abcbd162852e24ccb12966c30dc" translate="yes" xml:space="preserve">
          <source>Compares two values numerically and returns the minimum.</source>
          <target state="translated">2つの値を数値で比較し、最小値を返します。</target>
        </trans-unit>
        <trans-unit id="e3ba73bc3f1f2b5d12bbe8a9ce4ebb667b72d5d0" translate="yes" xml:space="preserve">
          <source>Comparing finalizers with __del__() methods</source>
          <target state="translated">ファイナライザと __del__()メソッドの比較</target>
        </trans-unit>
        <trans-unit id="5a3feec2309d8aaeadf148adbaa31c64e10db8cf" translate="yes" xml:space="preserve">
          <source>Comparison of UUID objects are made by way of comparing their &lt;a href=&quot;#uuid.UUID.int&quot;&gt;&lt;code&gt;UUID.int&lt;/code&gt;&lt;/a&gt; attributes. Comparison with a non-UUID object raises a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UUIDオブジェクトの比較は、&lt;a href=&quot;#uuid.UUID.int&quot;&gt; &lt;code&gt;UUID.int&lt;/code&gt; &lt;/a&gt;属性を比較することによって行われます。非UUIDオブジェクトと比較すると、&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9461d4c9f916ad7df5538225ed552fb6e7e3284b" translate="yes" xml:space="preserve">
          <source>Comparison operators</source>
          <target state="translated">比較演算子</target>
        </trans-unit>
        <trans-unit id="af17d55480f6d03885487287cd9ef398b62996f2" translate="yes" xml:space="preserve">
          <source>Comparison with &lt;code&gt;json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; との比較</target>
        </trans-unit>
        <trans-unit id="2c6ba62b4d0f4c99710147684caa366e7b542f25" translate="yes" xml:space="preserve">
          <source>Comparison with &lt;code&gt;marshal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;marshal&lt;/code&gt; 比較</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="67d885e68a32de8311c94a6e848303bcb681c43d" translate="yes" xml:space="preserve">
          <source>Comparisons against non-enumeration values will always compare not equal (again, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; was explicitly designed to behave differently, see below):</source>
          <target state="translated">非列挙値との比較は常に等しくありません（ここでも、&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;は異なる動作をするように明示的に設計されています。以下を参照してください）。</target>
        </trans-unit>
        <trans-unit id="6c7da5bd9a1a6cdedc892ebc03906b898414fb61" translate="yes" xml:space="preserve">
          <source>Comparisons of &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects are supported, with some caveats.</source>
          <target state="translated">&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトの比較がサポートされていますが、いくつかの注意点があります。</target>
        </trans-unit>
        <trans-unit id="15625db063c896d7c5f789e985558845c01d7be7" translate="yes" xml:space="preserve">
          <source>Comparisons: &lt;code&gt;__lt__&lt;/code&gt;, &lt;code&gt;__gt__&lt;/code&gt;, &lt;code&gt;__le__&lt;/code&gt;, &lt;code&gt;__ge__&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt; and &lt;code&gt;__ne__&lt;/code&gt;</source>
          <target state="translated">比較： &lt;code&gt;__lt__&lt;/code&gt; 、 &lt;code&gt;__gt__&lt;/code&gt; 、 &lt;code&gt;__le__&lt;/code&gt; 、 &lt;code&gt;__ge__&lt;/code&gt; 、 &lt;code&gt;__eq__&lt;/code&gt; 、 &lt;code&gt;__ne__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0376a0adac094cb8f2e89ac9ad7cf29fb8225cc1" translate="yes" xml:space="preserve">
          <source>Compatibility Options</source>
          <target state="translated">互換性オプション</target>
        </trans-unit>
        <trans-unit id="c9481cbf962c4e1e228b85148143dc709ee41867" translate="yes" xml:space="preserve">
          <source>Compile a regular expression pattern into a &lt;a href=&quot;#re-objects&quot;&gt;regular expression object&lt;/a&gt;, which can be used for matching using its &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; and other methods, described below.</source>
          <target state="translated">正規表現パターンを&lt;a href=&quot;#re-objects&quot;&gt;正規表現オブジェクト&lt;/a&gt;にコンパイルします。正規表現オブジェクトは、以下で説明する&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;およびその他のメソッドを使用した照合に使用できます。</target>
        </trans-unit>
        <trans-unit id="d5b39e3a4a0ff1675e947944087bc4de210f70f7" translate="yes" xml:space="preserve">
          <source>Compile a source file to byte-code and write out the byte-code cache file. The source code is loaded from the file named &lt;em&gt;file&lt;/em&gt;. The byte-code is written to &lt;em&gt;cfile&lt;/em&gt;, which defaults to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; path, ending in &lt;code&gt;.pyc&lt;/code&gt;. For example, if &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;/foo/bar/baz.py&lt;/code&gt;&lt;em&gt;cfile&lt;/em&gt; will default to &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; for Python 3.2. If &lt;em&gt;dfile&lt;/em&gt; is specified, it is used as the name of the source file in error messages when instead of &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is true, a &lt;a href=&quot;#py_compile.PyCompileError&quot;&gt;&lt;code&gt;PyCompileError&lt;/code&gt;&lt;/a&gt; is raised when an error is encountered while compiling &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is false (the default), an error string is written to &lt;code&gt;sys.stderr&lt;/code&gt;, but no exception is raised. This function returns the path to byte-compiled file, i.e. whatever &lt;em&gt;cfile&lt;/em&gt; value was used.</source>
          <target state="translated">ソースファイルをバイトコードにコンパイルし、バイトコードキャッシュファイルを書き出します。ソースコードはfileという名前の&lt;em&gt;ファイル&lt;/em&gt;からロードされ&lt;em&gt;ます&lt;/em&gt;。バイトコードは&lt;em&gt;cfile&lt;/em&gt;に書き込まれ、デフォルトで&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;パスになり、 &lt;code&gt;.pyc&lt;/code&gt; で終わります。たとえば、&lt;em&gt;ファイル&lt;/em&gt;が &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; の場合、Python 3.2の場合、 &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; デフォルトは&lt;em&gt;/foo/bar/__pycache__/baz.cpython-32.pycに&lt;/em&gt;なります。場合&lt;em&gt;DFILEが&lt;/em&gt;指定され、それが代わりのエラーメッセージでソースファイル名として使用されている&lt;em&gt;ファイル&lt;/em&gt;。場合&lt;em&gt;doraiseが&lt;/em&gt;真である、&lt;a href=&quot;#py_compile.PyCompileError&quot;&gt; &lt;code&gt;PyCompileError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;ファイルの&lt;/em&gt;コンパイル中にエラーが発生した場合に発生し&lt;em&gt;ます&lt;/em&gt;。場合&lt;em&gt;doraiseが&lt;/em&gt; false（デフォルト）で、エラー文字列がに書き込まれ &lt;code&gt;sys.stderr&lt;/code&gt; を持ちますが、例外は発生しません。この関数は、バイトコンパイルされたファイルへのパス、つまり使用された&lt;em&gt;cfile&lt;/em&gt;値を&lt;em&gt;返し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9a1ef077b7ae7f410f03416b14fba993f3f8d0cc" translate="yes" xml:space="preserve">
          <source>Compile and run some source in the interpreter. Arguments are the same as for &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the default for &lt;em&gt;filename&lt;/em&gt; is &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;, and for &lt;em&gt;symbol&lt;/em&gt; is &lt;code&gt;'single'&lt;/code&gt;. One several things can happen:</source>
          <target state="translated">インタープリターでソースをコンパイルして実行します。引数は&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;と同じです。&lt;em&gt;ファイル名&lt;/em&gt;のデフォルトは &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; で、&lt;em&gt;シンボル&lt;/em&gt;のデフォルトは &lt;code&gt;'single'&lt;/code&gt; です。いくつかのことが起こり得ます。</target>
        </trans-unit>
        <trans-unit id="6ba2e7df29de845b4fce8b311b542979840b455d" translate="yes" xml:space="preserve">
          <source>Compile several source files. The files named in &lt;em&gt;args&lt;/em&gt; (or on the command line, if &lt;em&gt;args&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;) are compiled and the resulting byte-code is cached in the normal manner. This function does not search a directory structure to locate source files; it only compiles files named explicitly. If &lt;code&gt;'-'&lt;/code&gt; is the only parameter in args, the list of files is taken from standard input.</source>
          <target state="translated">複数のソースファイルをコンパイルします。&lt;em&gt;args&lt;/em&gt;（または&lt;em&gt;args&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合はコマンドライン）で指定されたファイルがコンパイルされ、結果のバイトコードが通常の方法でキャッシュされます。この関数は、ソースファイルを見つけるためにディレクトリ構造を検索しません。明示的に指定されたファイルのみをコンパイルします。 &lt;code&gt;'-'&lt;/code&gt; がargsの唯一のパラメーターである場合、ファイルのリストは標準入力から取得されます。</target>
        </trans-unit>
        <trans-unit id="302ff574d52437e8a73e75a74279e3e5224d3b5e" translate="yes" xml:space="preserve">
          <source>Compile the &lt;em&gt;source&lt;/em&gt; into a code or AST object. Code objects can be executed by &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;source&lt;/em&gt; can either be a normal string, a byte string, or an AST object. Refer to the &lt;a href=&quot;ast#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module documentation for information on how to work with AST objects.</source>
          <target state="translated">&lt;em&gt;ソース&lt;/em&gt;をコードまたはASTオブジェクトにコンパイルします。コードオブジェクトは&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;で実行できます。&lt;em&gt;source&lt;/em&gt;は、通常の文字列、バイト文字列、またはASTオブジェクトのいずれかです。ASTオブジェクトの操作方法については、&lt;a href=&quot;ast#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bccfbe750cf49dab3e0c0f91238beb85a3f90533" translate="yes" xml:space="preserve">
          <source>Compile the file with path &lt;em&gt;fullname&lt;/em&gt;. Return a true value if the file compiled successfully, and a false value otherwise.</source>
          <target state="translated">パス&lt;em&gt;fullnameで&lt;/em&gt;ファイルをコンパイルします。ファイルが正常にコンパイルされた場合はtrue値を返し、それ以外の場合はfalse値を返します。</target>
        </trans-unit>
        <trans-unit id="ec9fb830592720fea18290a9fbcd0a299dbee096" translate="yes" xml:space="preserve">
          <source>Compiled Struct objects support the following methods and attributes:</source>
          <target state="translated">コンパイルされたStructオブジェクトは、以下のメソッドと属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="489558e2136c105c8c1935a105dc275677dcb636" translate="yes" xml:space="preserve">
          <source>Compiled regular expression objects support the following methods and attributes:</source>
          <target state="translated">コンパイルされた正規表現オブジェクトは、以下のメソッドと属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="36486e707892339eda464ff7df67dd5bec7300c3" translate="yes" xml:space="preserve">
          <source>Compiling an ST object may result in exceptions related to compilation; an example would be a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; caused by the parse tree for &lt;code&gt;del f(0)&lt;/code&gt;: this statement is considered legal within the formal grammar for Python but is not a legal language construct. The &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; raised for this condition is actually generated by the Python byte-compiler normally, which is why it can be raised at this point by the &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module. Most causes of compilation failure can be diagnosed programmatically by inspection of the parse tree.</source>
          <target state="translated">STオブジェクトをコンパイルすると、コンパイルに関連する例外が発生する可能性があります。例としては、 &lt;code&gt;del f(0)&lt;/code&gt; の解析ツリーが原因の&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;があります。このステートメントは、Pythonの正式な文法では正当と見なされますが、正当な言語構造ではありません。&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; は、&lt;/a&gt;この状態を上げ、実際にそれがすることで、この時点で上昇させることができる理由である、通常のPythonバイトコンパイラによって生成された&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュール。コンパイル失敗のほとんどの原因は、解析ツリーを検査することにより、プログラムで診断できます。</target>
        </trans-unit>
        <trans-unit id="e68cff625cb1e046e108ecd04fcc4795cb056847" translate="yes" xml:space="preserve">
          <source>Complete the parsing of all previously fed data and return the root message object. It is undefined what happens if &lt;a href=&quot;#email.parser.BytesFeedParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; is called after this method has been called.</source>
          <target state="translated">以前に提供されたすべてのデータの解析を完了し、ルートメッセージオブジェクトを返します。このメソッドが呼び出された後に&lt;a href=&quot;#email.parser.BytesFeedParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt;が呼び出された場合の動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="fb19eda22344fd0640934ac70fa25bfcfd76bbf0" translate="yes" xml:space="preserve">
          <source>Completer Objects</source>
          <target state="translated">コンプリタオブジェクト</target>
        </trans-unit>
        <trans-unit id="03b19db1587dcbefee78bc65c3bcb728cf93bcbf" translate="yes" xml:space="preserve">
          <source>Completer objects have the following method:</source>
          <target state="translated">コンプリタオブジェクトには以下のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="2ff255684a2277f806fcebf3fe338ed27857f350" translate="yes" xml:space="preserve">
          <source>Completion</source>
          <target state="translated">Completion</target>
        </trans-unit>
        <trans-unit id="1edd778907f333f7f36339636d25a8e14334aadb" translate="yes" xml:space="preserve">
          <source>Completions</source>
          <target state="translated">Completions</target>
        </trans-unit>
        <trans-unit id="649bcb49c4b75dec8e9a06cf58af6eac9481eb7f" translate="yes" xml:space="preserve">
          <source>Completions and the &amp;lsquo;Expand Word&amp;rsquo; facility can save a lot of typing!</source>
          <target state="translated">補完機能と「単語の拡張」機能により、入力の手間を大幅に削減できます。</target>
        </trans-unit>
        <trans-unit id="ce3877ac6a4a4f61427184dc092c28755c8b7eac" translate="yes" xml:space="preserve">
          <source>Completions are currently limited to those in the namespaces. Names in an Editor window which are not via &lt;code&gt;__main__&lt;/code&gt; and &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; will not be found. Run the module once with your imports to correct this situation. Note that IDLE itself places quite a few modules in sys.modules, so much can be found by default, e.g. the re module.</source>
          <target state="translated">現在、補完は名前空間の補完に限定されています。 &lt;code&gt;__main__&lt;/code&gt; および&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;を介さないエディターウィンドウの名前は見つかりません。この状況を修正するには、インポートでモジュールを1回実行します。IDLE自体がかなりの数のモジュールをsys.modulesに配置していることに注意してください。デフォルトでは、reモジュールなどの多くのモジュールを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="a17b1def50d26bbf1b1c4d4a7dad947e8e2e3c13" translate="yes" xml:space="preserve">
          <source>Completions are supplied for functions, classes, and attributes of classes, both built-in and user-defined. Completions are also provided for filenames.</source>
          <target state="translated">関数、クラス、およびクラスの属性については、組み込みおよびユーザー定義の両方で補完が提供されます。補完はファイル名に対しても提供されます。</target>
        </trans-unit>
        <trans-unit id="8755d561f79961b30ffc29205eff84ff3ef00ca2" translate="yes" xml:space="preserve">
          <source>Complex number versions of many of these functions.</source>
          <target state="translated">これらの関数の多くの複素数版。</target>
        </trans-unit>
        <trans-unit id="f1ca60ce2746a34e1483fe1cbd8d245ea7a4431b" translate="yes" xml:space="preserve">
          <source>Complex number with zero real part and NaN imaginary part. Equivalent to &lt;code&gt;complex(0.0, float('nan'))&lt;/code&gt;.</source>
          <target state="translated">実数部がゼロで、虚数部がNaNの複素数。 &lt;code&gt;complex(0.0, float('nan'))&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="856a7fdf66abac0aeac1358ce9ed1196e779ca99" translate="yes" xml:space="preserve">
          <source>Complex number with zero real part and positive infinity imaginary part. Equivalent to &lt;code&gt;complex(0.0, float('inf'))&lt;/code&gt;.</source>
          <target state="translated">実数部がゼロで正の虚数部が正の複素数。 &lt;code&gt;complex(0.0, float('inf'))&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="7263286a3d3adc36bd59c0625cd0385f1300dc31" translate="yes" xml:space="preserve">
          <source>Compose a raw device number from the major and minor device numbers.</source>
          <target state="translated">メジャーデバイス番号とマイナーデバイス番号から生のデバイス番号を作成します。</target>
        </trans-unit>
        <trans-unit id="76476be9e1765c3ffe98eb1ebd68c62d6cd7816e" translate="yes" xml:space="preserve">
          <source>Compound shapes</source>
          <target state="translated">複合形状</target>
        </trans-unit>
        <trans-unit id="ef4391ea7c4b5271522992deeedc7a25412bff19" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt; (a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing compressed data for at least part of the input. Some of &lt;em&gt;data&lt;/em&gt; may be buffered internally, for use in later calls to &lt;a href=&quot;#lzma.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#lzma.LZMACompressor.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;. The returned data should be concatenated with the output of any previous calls to &lt;a href=&quot;#lzma.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">圧縮&lt;em&gt;データ&lt;/em&gt;（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクト）を返す&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;入力の少なくとも一部のための圧縮されたデータを含むオブジェクトを。一部の&lt;em&gt;データ&lt;/em&gt;は内部でバッファリングされ、後で&lt;a href=&quot;#lzma.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#lzma.LZMACompressor.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; を&lt;/a&gt;呼び出すときに使用できます。返されたデータは、以前の&lt;a href=&quot;#lzma.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; の&lt;/a&gt;呼び出しの出力と連結する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce6bfddfc40b292958b2d07fee76aba33ff10ea7" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt; (a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), returning the compressed data as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">圧縮&lt;em&gt;データ&lt;/em&gt;（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;として圧縮データを返すオブジェクト）、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="31296bca7725b04daba7fcb5c66023014c8d3031" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt;, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;である&lt;em&gt;dataを&lt;/em&gt;圧縮します。</target>
        </trans-unit>
        <trans-unit id="d2c37054d68291c245420f17393b2410b2e86009" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt;, returning a bytes object containing compressed data for at least part of the data in &lt;em&gt;data&lt;/em&gt;. This data should be concatenated to the output produced by any preceding calls to the &lt;a href=&quot;#zlib.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; method. Some input may be kept in internal buffers for later processing.</source>
          <target state="translated">圧縮&lt;em&gt;データ&lt;/em&gt;内のデータの少なくとも一部のために圧縮されたデータを含むオブジェクトをバイト戻り、&lt;em&gt;データ&lt;/em&gt;。このデータは、&lt;a href=&quot;#zlib.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;メソッドへの先行する呼び出しによって生成された出力に連結する必要があります。一部の入力は、後で処理するために内部バッファーに保持される場合があります。</target>
        </trans-unit>
        <trans-unit id="252b98c1d48fdbd471784cef9923f08179d6b81e" translate="yes" xml:space="preserve">
          <source>Compress files with the deflate method, reducing the size of the output file. By default, files are stored uncompressed in the archive.</source>
          <target state="translated">deflate 方式でファイルを圧縮し、出力ファイルのサイズを縮小します。デフォルトでは、ファイルは圧縮されずにアーカイブに保存されます。</target>
        </trans-unit>
        <trans-unit id="775e5e502fbbb8546aacf868eeb5bd2222854638" translate="yes" xml:space="preserve">
          <source>Compress the &lt;em&gt;data&lt;/em&gt;, returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing the compressed data. &lt;em&gt;compresslevel&lt;/em&gt; and &lt;em&gt;mtime&lt;/em&gt; have the same meaning as in the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; constructor above.</source>
          <target state="translated">&lt;em&gt;データを&lt;/em&gt;圧縮し、圧縮された&lt;em&gt;データ&lt;/em&gt;を含む&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。&lt;em&gt;compresslevel&lt;/em&gt;と&lt;em&gt;mtime&lt;/em&gt;は、上記の&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;コンストラクターと同じ意味です。</target>
        </trans-unit>
        <trans-unit id="f43ac7b0d311bb9c471caadaf3f8773466b680c0" translate="yes" xml:space="preserve">
          <source>Compress the operand using bz2.</source>
          <target state="translated">オペランドをbz2で圧縮します。</target>
        </trans-unit>
        <trans-unit id="5212cd6485bfc60658f3c8a304ed12fc3c4a277e" translate="yes" xml:space="preserve">
          <source>Compress the operand using gzip.</source>
          <target state="translated">オペランドをgzipで圧縮します。</target>
        </trans-unit>
        <trans-unit id="4a45b118e15b6bd6a94d44b0bbee89589ddf4ac4" translate="yes" xml:space="preserve">
          <source>Compresses the bytes in &lt;em&gt;data&lt;/em&gt;, returning a bytes object containing compressed data. &lt;em&gt;level&lt;/em&gt; is an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; controlling the level of compression; &lt;code&gt;1&lt;/code&gt; (Z_BEST_SPEED) is fastest and produces the least compression, &lt;code&gt;9&lt;/code&gt; (Z_BEST_COMPRESSION) is slowest and produces the most. &lt;code&gt;0&lt;/code&gt; (Z_NO_COMPRESSION) is no compression. The default value is &lt;code&gt;-1&lt;/code&gt; (Z_DEFAULT_COMPRESSION). Z_DEFAULT_COMPRESSION represents a default compromise between speed and compression (currently equivalent to level 6). Raises the &lt;a href=&quot;#zlib.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; exception if any error occurs.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt;のバイトを圧縮し、圧縮データを含むbytesオブジェクトを返します。&lt;em&gt;レベルは&lt;/em&gt;整数で &lt;code&gt;0&lt;/code&gt; へ &lt;code&gt;9&lt;/code&gt; 又は &lt;code&gt;-1&lt;/code&gt; 圧縮のレベルを制御します。 &lt;code&gt;1&lt;/code&gt; （Z_BEST_SPEED）が最も速く、圧縮率が最も低く、 &lt;code&gt;9&lt;/code&gt; （Z_BEST_COMPRESSION）が最も遅く、最も圧縮率が高くなります。 &lt;code&gt;0&lt;/code&gt; （Z_NO_COMPRESSION）は圧縮なしです。デフォルト値は &lt;code&gt;-1&lt;/code&gt; （Z_DEFAULT_COMPRESSION）です。 Z_DEFAULT_COMPRESSIONは、速度と圧縮の間のデフォルトの妥協点を表します（現在、レベル6と同等）。エラーが発生した場合、&lt;a href=&quot;#zlib.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="f4057e0a017788c60067ac45c180127e6ca3d7e2" translate="yes" xml:space="preserve">
          <source>Compressing and decompressing data in memory</source>
          <target state="translated">メモリ内のデータの圧縮と解凍</target>
        </trans-unit>
        <trans-unit id="41fd7a221df8ea60c00182c7d5141c64fb744d0b" translate="yes" xml:space="preserve">
          <source>Compressing data in memory:</source>
          <target state="translated">メモリ内のデータを圧縮します。</target>
        </trans-unit>
        <trans-unit id="c9c387b0dc7af1e0e33628071b1a8be3e604b7b0" translate="yes" xml:space="preserve">
          <source>Compression filters support the following options (specified as additional entries in the dictionary representing the filter):</source>
          <target state="translated">圧縮フィルタは以下のオプションに対応しています (フィルタを表す辞書内の追加項目として指定されます)。</target>
        </trans-unit>
        <trans-unit id="56fc1016d3d1b0959e8c0aa5b0c56ae38e78681f" translate="yes" xml:space="preserve">
          <source>Compression filters:</source>
          <target state="translated">圧縮フィルターです。</target>
        </trans-unit>
        <trans-unit id="5065d3322b1cc916797546af2d81f7e0936b267a" translate="yes" xml:space="preserve">
          <source>Compression objects support the following methods:</source>
          <target state="translated">圧縮オブジェクトは以下のメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="bee75b793163ee26ddbfd75ab38847a9a6c431ef" translate="yes" xml:space="preserve">
          <source>Compute CRC-32, the 32-bit checksum of &lt;em&gt;data&lt;/em&gt;, starting with an initial CRC of &lt;em&gt;value&lt;/em&gt;. The default initial CRC is zero. The algorithm is consistent with the ZIP file checksum. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm. Use as follows:</source>
          <target state="translated">&lt;em&gt;valueの&lt;/em&gt;初期CRCで始まる、&lt;em&gt;データの&lt;/em&gt; 32ビットチェックサムであるCRC-32を計算し&lt;em&gt;ます&lt;/em&gt;。デフォルトの初期CRCはゼロです。アルゴリズムは、ZIPファイルのチェックサムと一致しています。このアルゴリズムはチェックサムアルゴリズムとして使用するように設計されているため、一般的なハッシュアルゴリズムとしての使用には適していません。次のように使用します。</target>
        </trans-unit>
        <trans-unit id="45959b181cd66f8b705aa76ed45d3f07ea4400ba" translate="yes" xml:space="preserve">
          <source>Compute a 16-bit CRC value of &lt;em&gt;data&lt;/em&gt;, starting with &lt;em&gt;value&lt;/em&gt; as the initial CRC, and return the result. This uses the CRC-CCITT polynomial &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;16&lt;/sup&gt; + &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;12&lt;/sup&gt; + &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;5&lt;/sup&gt; + 1, often represented as 0x1021. This CRC is used in the binhex4 format.</source>
          <target state="translated">16ビットCRC値の計算&lt;em&gt;データを&lt;/em&gt;用いて出発し、&lt;em&gt;値&lt;/em&gt;初期CRCとして、結果を返します。これはCRC-CCITT多項式&lt;em&gt;x &lt;/em&gt;&lt;sup&gt;16&lt;/sup&gt; + &lt;em&gt;x &lt;/em&gt;&lt;sup&gt;12&lt;/sup&gt; + &lt;em&gt;x &lt;/em&gt;&lt;sup&gt;5&lt;/sup&gt; + 1を使用し、多くの場合0x1021として表されます。このCRCはbinhex4形式で使用されます。</target>
        </trans-unit>
        <trans-unit id="ee0c965933c15363329073644af0d1a4e9c764c0" translate="yes" xml:space="preserve">
          <source>Compute a version of this path relative to the path represented by &lt;em&gt;other&lt;/em&gt;. If it&amp;rsquo;s impossible, ValueError is raised:</source>
          <target state="translated">&lt;em&gt;otherで&lt;/em&gt;表されるパスを基準にして、このパスのバージョンを計算します。それが不可能な場合は、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="11b56abb7eb573ae4aa9d4aedb75919545a4913b" translate="yes" xml:space="preserve">
          <source>Compute differences</source>
          <target state="translated">差分を計算する</target>
        </trans-unit>
        <trans-unit id="bf4dd7208dfd91b35e751b8484eef8491e1f3574" translate="yes" xml:space="preserve">
          <source>Compute the differences between two snapshots to detect memory leaks</source>
          <target state="translated">メモリリークを検出するために、2つのスナップショット間の差分を計算します。</target>
        </trans-unit>
        <trans-unit id="ad89e51e297334951eca71d67d6292566afb4941" translate="yes" xml:space="preserve">
          <source>Compute the differences with an old snapshot. Get statistics as a sorted list of &lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt;&lt;code&gt;StatisticDiff&lt;/code&gt;&lt;/a&gt; instances grouped by &lt;em&gt;key_type&lt;/em&gt;.</source>
          <target state="translated">古いスナップショットとの違いを計算します。&lt;em&gt;key_typeで&lt;/em&gt;グループ化された&lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt; &lt;code&gt;StatisticDiff&lt;/code&gt; &lt;/a&gt;インスタンスのソートされたリストとして統計を取得します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03bdaa6fb2ed530058f92d68943ddb81378bcf09" translate="yes" xml:space="preserve">
          <source>Compute the inverse cumulative distribution function, also known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile_function&quot;&gt;quantile function&lt;/a&gt; or the &lt;a href=&quot;https://www.statisticshowto.datasciencecentral.com/inverse-distribution-function/&quot;&gt;percent-point&lt;/a&gt; function. Mathematically, it is written &lt;code&gt;x : P(X &amp;lt;= x) = p&lt;/code&gt;.</source>
          <target state="translated">逆累積分布関数を計算します。これは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile_function&quot;&gt;変位値関数&lt;/a&gt;または&lt;a href=&quot;https://www.statisticshowto.datasciencecentral.com/inverse-distribution-function/&quot;&gt;パーセントポイント&lt;/a&gt;関数とも呼ばれます。数学的には、 &lt;code&gt;x : P(X &amp;lt;= x) = p&lt;/code&gt; と書きます。</target>
        </trans-unit>
        <trans-unit id="a4cdb8fcb44a7b6604b374ba11f6c8e5c39c5a6b" translate="yes" xml:space="preserve">
          <source>Compute the stack effect of &lt;em&gt;opcode&lt;/em&gt; with argument &lt;em&gt;oparg&lt;/em&gt;.</source>
          <target state="translated">引数&lt;em&gt;oparg&lt;/em&gt;を使用して&lt;em&gt;opcode&lt;/em&gt;のスタック効果を計算します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d70f36ff6cd8e45798fddacbd359094cdd8a3366" translate="yes" xml:space="preserve">
          <source>Computes &lt;em&gt;date2&lt;/em&gt; such that &lt;code&gt;date2 +
timedelta == date1&lt;/code&gt;. (2)</source>
          <target state="translated">&lt;code&gt;date2 + timedelta == date1&lt;/code&gt; &lt;em&gt;date1となる&lt;/em&gt;ようなdate2を計算します。（2）</target>
        </trans-unit>
        <trans-unit id="4f40de672ec578dbb4d04a5bff21135a4b19d5c2" translate="yes" xml:space="preserve">
          <source>Computes a CRC (Cyclic Redundancy Check) checksum of &lt;em&gt;data&lt;/em&gt;. The result is an unsigned 32-bit integer. If &lt;em&gt;value&lt;/em&gt; is present, it is used as the starting value of the checksum; otherwise, a default value of 0 is used. Passing in &lt;em&gt;value&lt;/em&gt; allows computing a running checksum over the concatenation of several inputs. The algorithm is not cryptographically strong, and should not be used for authentication or digital signatures. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm.</source>
          <target state="translated">&lt;em&gt;データの&lt;/em&gt; CRC（巡回冗長検査）チェックサムを計算し&lt;em&gt;ます&lt;/em&gt;。結果は符号なし32ビット整数です。&lt;em&gt;value&lt;/em&gt;が存在する場合、それはチェックサムの開始値として使用されます。それ以外の場合は、デフォルト値0が使用されます。&lt;em&gt;値を&lt;/em&gt;渡すと、複数の入力を連結して実行中のチェックサムを計算できます。このアルゴリズムは暗号的に強力ではないため、認証やデジタル署名には使用しないでください。このアルゴリズムはチェックサムアルゴリズムとして使用するように設計されているため、一般的なハッシュアルゴリズムとしての使用には適していません。</target>
        </trans-unit>
        <trans-unit id="97c7cd77e353400aedb87ee907b81571149d454b" translate="yes" xml:space="preserve">
          <source>Computes an Adler-32 checksum of &lt;em&gt;data&lt;/em&gt;. (An Adler-32 checksum is almost as reliable as a CRC32 but can be computed much more quickly.) The result is an unsigned 32-bit integer. If &lt;em&gt;value&lt;/em&gt; is present, it is used as the starting value of the checksum; otherwise, a default value of 1 is used. Passing in &lt;em&gt;value&lt;/em&gt; allows computing a running checksum over the concatenation of several inputs. The algorithm is not cryptographically strong, and should not be used for authentication or digital signatures. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm.</source>
          <target state="translated">&lt;em&gt;データの&lt;/em&gt; Adler-32チェックサムを計算し&lt;em&gt;ます&lt;/em&gt;。 （Adler-32チェックサムは、CRC32とほぼ同じ信頼性がありますが、はるかに高速に計算できます。）結果は、符号なし32ビット整数になります。&lt;em&gt;value&lt;/em&gt;が存在する場合、それはチェックサムの開始値として使用されます。それ以外の場合は、デフォルト値の1が使用されます。&lt;em&gt;値を&lt;/em&gt;渡すと、複数の入力を連結して実行中のチェックサムを計算できます。このアルゴリズムは暗号的に強力ではないため、認証やデジタル署名には使用しないでください。このアルゴリズムはチェックサムアルゴリズムとして使用するように設計されているため、一般的なハッシュアルゴリズムとしての使用には適していません。</target>
        </trans-unit>
        <trans-unit id="2383286c668d7f469af532ed274616d742c13df5" translate="yes" xml:space="preserve">
          <source>Computes the datetime2 such that datetime2 + timedelta == datetime1. As for addition, the result has the same &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute as the input datetime, and no time zone adjustments are done even if the input is aware.</source>
          <target state="translated">datetime2 + timedelta == datetime1となるように、datetime2を計算します。追加については、結果は入力日時と同じ&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性を持ち、入力が認識されていてもタイムゾーン調整は行われません。</target>
        </trans-unit>
        <trans-unit id="894f7dca9140374b369be4859f46ce98abed4203" translate="yes" xml:space="preserve">
          <source>Computes the network definitions resulting from removing the given &lt;em&gt;network&lt;/em&gt; from this one. Returns an iterator of network objects. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;network&lt;/em&gt; is not completely contained in this network.</source>
          <target state="translated">この&lt;em&gt;ネットワーク&lt;/em&gt;から特定の&lt;em&gt;ネットワーク&lt;/em&gt;を削除した結果のネットワーク定義を計算します。ネットワークオブジェクトのイテレータを返します。発生させます&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;あれば&lt;em&gt;ネットワークが&lt;/em&gt;完全にこのネットワークに含まれていません。</target>
        </trans-unit>
        <trans-unit id="fbdf0eb7498292b72269704004120cb8f8d583cd" translate="yes" xml:space="preserve">
          <source>Computes the quotient and the remainder: &lt;code&gt;q = t1 // t2&lt;/code&gt; (3) and &lt;code&gt;r = t1 % t2&lt;/code&gt;. q is an integer and r is a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">商と剰余を計算します： &lt;code&gt;q = t1 // t2&lt;/code&gt; （3）および &lt;code&gt;r = t1 % t2&lt;/code&gt; 。qは整数で、rは&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="65605a06ef6e73adf6339d86f74f7a7fd3066a7e" translate="yes" xml:space="preserve">
          <source>Concatenate the tokens of the list &lt;em&gt;split_command&lt;/em&gt; and return a string. This function is the inverse of &lt;a href=&quot;#shlex.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リスト&lt;em&gt;split_commandの&lt;/em&gt;トークンを連結して、文字列を返します。この関数は&lt;a href=&quot;#shlex.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="8b2f6fdbd9bc20288f332c0d0c814d0cc5256497" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;count&lt;/em&gt; strings from the stack and pushes the resulting string onto the stack.</source>
          <target state="translated">スタックから&lt;em&gt;count個の&lt;/em&gt;文字列を連結し、結果の文字列をスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="dca475869231efe73f51036d473231b811d45a97" translate="yes" xml:space="preserve">
          <source>Concatenating immutable sequences always results in a new object. This means that building up a sequence by repeated concatenation will have a quadratic runtime cost in the total sequence length. To get a linear runtime cost, you must switch to one of the alternatives below:</source>
          <target state="translated">不変シーケンスを連結すると、常に新しいオブジェクトが生成されます。つまり、連結を繰り返してシーケンスを構築すると、シーケンスの長さの合計で二次的な実行時間コストが発生します。直線的な実行時間コストを得るためには、以下の選択肢のいずれかに切り替える必要があります。</target>
        </trans-unit>
        <trans-unit id="eec037fd21cdbe752cf956ee1da877b809e27461" translate="yes" xml:space="preserve">
          <source>Concatenation</source>
          <target state="translated">Concatenation</target>
        </trans-unit>
        <trans-unit id="f3be8356957ebba679b4e57ebb7aa4c800fcefb2" translate="yes" xml:space="preserve">
          <source>Conceptually, the warnings filter maintains an ordered list of filter specifications; any specific warning is matched against each filter specification in the list in turn until a match is found; the filter determines the disposition of the match. Each entry is a tuple of the form (&lt;em&gt;action&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;, &lt;em&gt;category&lt;/em&gt;, &lt;em&gt;module&lt;/em&gt;, &lt;em&gt;lineno&lt;/em&gt;), where:</source>
          <target state="translated">概念的には、警告フィルターはフィルター仕様の順序付きリストを維持します。特定の警告は、一致が見つかるまで、リスト内の各フィルター仕様に対して順番に照合されます。フィルターは一致の性質を決定します。各エントリは、フォーム（&lt;em&gt;action&lt;/em&gt;、&lt;em&gt;message&lt;/em&gt;、&lt;em&gt;category&lt;/em&gt;、&lt;em&gt;module&lt;/em&gt;、&lt;em&gt;lineno&lt;/em&gt;）のタプル&lt;em&gt;です&lt;/em&gt;。ここで、</target>
        </trans-unit>
        <trans-unit id="e4873f7588ebd67db018e96303a178c6a52381c0" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt;&lt;code&gt;urldefrag()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.DefragResult&quot;&gt;&lt;code&gt;DefragResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt; &lt;code&gt;urldefrag()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;decode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.DefragResult&quot;&gt; &lt;code&gt;DefragResult&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="c86fc848f5d3b30b654b8615eac00d619b08db32" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt;&lt;code&gt;urldefrag()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.DefragResultBytes&quot;&gt;&lt;code&gt;DefragResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt; &lt;code&gt;urldefrag()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;encode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.DefragResultBytes&quot;&gt; &lt;code&gt;DefragResultBytes&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="69f8a8c28157d7a587d893a55f83a6ddbf8e32c0" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.ParseResult&quot;&gt;&lt;code&gt;ParseResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;decode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.ParseResult&quot;&gt; &lt;code&gt;ParseResult&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="ac1dc4e0cac81e1db0265b0ca958236b82bf3662" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.ParseResultBytes&quot;&gt;&lt;code&gt;ParseResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;encode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.ParseResultBytes&quot;&gt; &lt;code&gt;ParseResultBytes&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="3cb583b3889c0e84e2d551a0644ec331655bcad3" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.SplitResult&quot;&gt;&lt;code&gt;SplitResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;decode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.SplitResult&quot;&gt; &lt;code&gt;SplitResult&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="d5d924f57aa0b52a07f9cab528c675436645d210" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.SplitResultBytes&quot;&gt;&lt;code&gt;SplitResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;データを含む&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;結果の具象クラス。 &lt;code&gt;encode()&lt;/code&gt; メソッドを返し&lt;a href=&quot;#urllib.parse.SplitResultBytes&quot;&gt; &lt;code&gt;SplitResultBytes&lt;/code&gt; の&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="3b44036ed302f7b1c88213d4226da4a09ffb53f7" translate="yes" xml:space="preserve">
          <source>Concrete exceptions</source>
          <target state="translated">具体的な例外</target>
        </trans-unit>
        <trans-unit id="aaf99aba10a45a0965c1f5a7485bf8101d4955a1" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.get_code&quot;&gt;&lt;code&gt;InspectLoader.get_code()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.get_code&quot;&gt; &lt;code&gt;InspectLoader.get_code()&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="abb50bb5084c3c7f17688dd977f5d66eaa8b0d23" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.get_source&quot;&gt;&lt;code&gt;InspectLoader.get_source()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.get_source&quot;&gt; &lt;code&gt;InspectLoader.get_source()&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="96e1b2fb89a3d8e1881de532a1f51184d55e1423" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt;&lt;code&gt;InspectLoader.is_package()&lt;/code&gt;&lt;/a&gt;. A module is determined to be a package if its file path (as provided by &lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt;&lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt;&lt;/a&gt;) is a file named &lt;code&gt;__init__&lt;/code&gt; when the file extension is removed &lt;strong&gt;and&lt;/strong&gt; the module name itself does not end in &lt;code&gt;__init__&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt; &lt;code&gt;InspectLoader.is_package()&lt;/code&gt; の&lt;/a&gt;具象実装。モジュールは、そのファイルパス（によって提供される場合、パッケージであると判定された&lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt; &lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt; &lt;/a&gt;）という名前のファイルである &lt;code&gt;__init__&lt;/code&gt; ファイル拡張子が除去されたとき&lt;strong&gt;と&lt;/strong&gt;、モジュール名自体はで終わらない &lt;code&gt;__init__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7125c86451c432ed9435ea6c644d1c4bc3bfd309" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt;&lt;code&gt;Loader.exec_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt; &lt;code&gt;Loader.exec_module()&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="89903f918a68caead5ed1f734d66f571e0639a79" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;Loader.load_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;Loader.load_module()&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="93bc4671379fd14881c93a5aa3dbeb986b31ebad" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt;&lt;/a&gt; where specifying the name of the module to load is optional.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt; の&lt;/a&gt;具象実装。ロードするモジュールの名前の指定はオプションです。</target>
        </trans-unit>
        <trans-unit id="33c676e8b570d87596699db2758d424aeecf6582" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.SourceLoader.path_stats&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader.path_stats()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.SourceLoader.path_stats&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader.path_stats()&lt;/code&gt; の&lt;/a&gt;具体的な実装。</target>
        </trans-unit>
        <trans-unit id="3ca72d7245cb867e41f4d858e1f78cc1d69a143e" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.SourceLoader.set_data&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader.set_data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.SourceLoader.set_data&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader.set_data()&lt;/code&gt; の&lt;/a&gt;具象実装。</target>
        </trans-unit>
        <trans-unit id="44775b14aeb443f280aa734fbd55de0220e8e5fc" translate="yes" xml:space="preserve">
          <source>Concrete paths</source>
          <target state="translated">コンクリートの道</target>
        </trans-unit>
        <trans-unit id="661cb1d399b3ebbdd1ee76a5725b6d6595fcd3d7" translate="yes" xml:space="preserve">
          <source>Concrete paths are subclasses of the pure path classes. In addition to operations provided by the latter, they also provide methods to do system calls on path objects. There are three ways to instantiate concrete paths:</source>
          <target state="translated">具象パスは純粋なパスクラスのサブクラスです。後者で提供される操作に加えて、パスオブジェクトに対してシステムコールを行うメソッドも提供します。具象パスをインスタンス化するには 3 つの方法があります。</target>
        </trans-unit>
        <trans-unit id="98055de3034d1714b7cd78eaeb907e34365e1b70" translate="yes" xml:space="preserve">
          <source>Concrete paths provide the following methods in addition to pure paths methods. Many of these methods can raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if a system call fails (for example because the path doesn&amp;rsquo;t exist).</source>
          <target state="translated">具象パスは、純粋なパスメソッドに加えて、次のメソッドを提供します。これらのメソッドの多くは、システムコールが失敗した場合（たとえば、パスが存在しないため）に&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; を発生さ&lt;/a&gt;せる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9dee390cee100e2fe13f839c77d4fa4ccfbb4cc3" translate="yes" xml:space="preserve">
          <source>Concrete pointer types are created by calling &lt;a href=&quot;#ctypes.POINTER&quot;&gt;&lt;code&gt;POINTER()&lt;/code&gt;&lt;/a&gt; with the type that will be pointed to; this is done automatically by &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具体的なポインター型は、ポイントされる型で&lt;a href=&quot;#ctypes.POINTER&quot;&gt; &lt;code&gt;POINTER()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって作成されます。これは、&lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt;によって自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="8a2f1d2b7a65b5552a28938a7d386232c4f8135a" translate="yes" xml:space="preserve">
          <source>Concrete structure and union types must be created by subclassing one of these types, and at least define a &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; will create &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s which allow reading and writing the fields by direct attribute accesses. These are the</source>
          <target state="translated">具象構造と共用体タイプは、これらのタイプの1つをサブクラス化して作成し、少なくとも&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;クラス変数を定義する必要があります。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;記述子&lt;/a&gt;を作成し、属性への直接アクセスによるフィールドの読み取りと書き込みを可能にします。これらは</target>
        </trans-unit>
        <trans-unit id="fef076506851ed5b5157b122b9b6bbcad9281a68" translate="yes" xml:space="preserve">
          <source>Concurrency and Multithreading</source>
          <target state="translated">並列処理とマルチスレッド</target>
        </trans-unit>
        <trans-unit id="2afb9c42556d70319b603400b52e5fdd21630e4f" translate="yes" xml:space="preserve">
          <source>Concurrent Execution</source>
          <target state="translated">同時実行</target>
        </trans-unit>
        <trans-unit id="2f4979324e03e4571b1d7eba701226670c2ee2da" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condition</target>
        </trans-unit>
        <trans-unit id="c74f6d3be348ed585e083cae56adae9c24b79762" translate="yes" xml:space="preserve">
          <source>Condition Objects</source>
          <target state="translated">条件オブジェクト</target>
        </trans-unit>
        <trans-unit id="4431a5bce2c36a19adda700e11471cea2e9ca290" translate="yes" xml:space="preserve">
          <source>Conditionally emits the specified logging record, depending on filters which may have been added to the handler. Wraps the actual emission of the record with acquisition/release of the I/O thread lock.</source>
          <target state="translated">ハンドラに追加された可能性のあるフィルタに応じて、指定されたロギングレコードを条件付きで放出します。I/Oスレッドロックの取得/解除でレコードの実際の放出をラップします。</target>
        </trans-unit>
        <trans-unit id="c9610887f7e94418f2963f3d5234a00aa9d14b9c" translate="yes" xml:space="preserve">
          <source>Config parsers allow for heavy customization. If you are interested in changing the behaviour outlined by the footnote reference, consult the &lt;a href=&quot;#customizing-parser-behaviour&quot;&gt;Customizing Parser Behaviour&lt;/a&gt; section.</source>
          <target state="translated">構成パーサーは、高度なカスタマイズを可能にします。脚注参照で概説されている動作の変更に興味がある場合は、&lt;a href=&quot;#customizing-parser-behaviour&quot;&gt;パーサー動作&lt;/a&gt;のカスタマイズのセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="482cbc67affff4d99daf732b9cce92f397cd4863" translate="yes" xml:space="preserve">
          <source>Config parsers do not guess datatypes of values in configuration files, always storing them internally as strings. This means that if you need other datatypes, you should convert on your own:</source>
          <target state="translated">コンフィグパーサは設定ファイルの値のデータ型を推測せず、常に内部的に文字列として保存します。つまり、他のデータ型が必要な場合は、自分で変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="bffeedd1762bad5afcfa011bb63e3a6b161ac09b" translate="yes" xml:space="preserve">
          <source>Config parsers provide option value getters that perform type conversion. By default &lt;a href=&quot;#configparser.ConfigParser.getint&quot;&gt;&lt;code&gt;getint()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#configparser.ConfigParser.getfloat&quot;&gt;&lt;code&gt;getfloat()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt;&lt;code&gt;getboolean()&lt;/code&gt;&lt;/a&gt; are implemented. Should other getters be desirable, users may define them in a subclass or pass a dictionary where each key is a name of the converter and each value is a callable implementing said conversion. For instance, passing &lt;code&gt;{'decimal': decimal.Decimal}&lt;/code&gt; would add &lt;code&gt;getdecimal()&lt;/code&gt; on both the parser object and all section proxies. In other words, it will be possible to write both &lt;code&gt;parser_instance.getdecimal('section', 'key', fallback=0)&lt;/code&gt; and &lt;code&gt;parser_instance['section'].getdecimal('key', 0)&lt;/code&gt;.</source>
          <target state="translated">構成パーサーは、型変換を実行するオプション値ゲッターを提供します。デフォルトでは、&lt;a href=&quot;#configparser.ConfigParser.getint&quot;&gt; &lt;code&gt;getint()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#configparser.ConfigParser.getfloat&quot;&gt; &lt;code&gt;getfloat()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt; &lt;code&gt;getboolean()&lt;/code&gt; &lt;/a&gt;が実装されています。他のゲッターが望ましい場合、ユーザーはそれらをサブクラスで定義するか、各キーがコンバーターの名前で、各値が上記の変換を実装する呼び出し可能オブジェクトであるディクショナリーを渡すことができます。たとえば、 &lt;code&gt;{'decimal': decimal.Decimal}&lt;/code&gt; を &lt;code&gt;getdecimal()&lt;/code&gt; と、パーサーオブジェクトとすべてのセクションプロキシの両方にgetdecimal（）が追加されます。つまり、 &lt;code&gt;parser_instance.getdecimal('section', 'key', fallback=0)&lt;/code&gt; と &lt;code&gt;parser_instance['section'].getdecimal('key', 0)&lt;/code&gt; 両方を書き込むことが可能になります。</target>
        </trans-unit>
        <trans-unit id="9396e436287dd450a03e9c851178b9857e9984dc" translate="yes" xml:space="preserve">
          <source>ConfigParser Objects</source>
          <target state="translated">コンフィグパーサオブジェクト</target>
        </trans-unit>
        <trans-unit id="c8e9637a16e578e18429cf4fcff3b081de30f045" translate="yes" xml:space="preserve">
          <source>Configuration API for the logging module.</source>
          <target state="translated">ロギングモジュールの設定API。</target>
        </trans-unit>
        <trans-unit id="4a3159f10e950eb53845a9894d70759e57e06665" translate="yes" xml:space="preserve">
          <source>Configuration dictionary schema</source>
          <target state="translated">設定辞書スキーマ</target>
        </trans-unit>
        <trans-unit id="874045d0b58bea7f4b1890b8d25955443d0b7e5c" translate="yes" xml:space="preserve">
          <source>Configuration file format</source>
          <target state="translated">設定ファイル形式</target>
        </trans-unit>
        <trans-unit id="c7d169a77b6b82590c18ad288dd9476968ff0a9b" translate="yes" xml:space="preserve">
          <source>Configuration files may include comments, prefixed by specific characters (&lt;code&gt;#&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt; by default &lt;a href=&quot;#id14&quot; id=&quot;id7&quot;&gt;1&lt;/a&gt;). Comments may appear on their own on an otherwise empty line, possibly indented. &lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">構成ファイルには、特定の文字（ &lt;code&gt;#&lt;/code&gt; および &lt;code&gt;;&lt;/code&gt; デフォルトでは&lt;a href=&quot;#id14&quot; id=&quot;id7&quot;&gt;1&lt;/a&gt;）が前に付いたコメントが含まれる場合があります。コメントは、空の行にインデントされている可能性があります。&lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f50a84c4acdc41a04d7853b1ada0141fff29a0c8" translate="yes" xml:space="preserve">
          <source>Configuration functions</source>
          <target state="translated">設定機能</target>
        </trans-unit>
        <trans-unit id="38b23d1375544f4a68ea9228188041f47459e054" translate="yes" xml:space="preserve">
          <source>Configuration variables</source>
          <target state="translated">設定変数</target>
        </trans-unit>
        <trans-unit id="b1ccfdfa96eaa74519fd230cf6c07020bda1d4bb" translate="yes" xml:space="preserve">
          <source>Configure IDLE</source>
          <target state="translated">IDLEの設定</target>
        </trans-unit>
        <trans-unit id="aad58884b08fca1d5f2760df3a361217131003ed" translate="yes" xml:space="preserve">
          <source>Configuring Netscape Mail on Unix: Why The Content-Length Format is Bad</source>
          <target state="translated">UnixでNetscapeメールを設定する。なぜ Content-Length 形式は悪いのか</target>
        </trans-unit>
        <trans-unit id="24dbea7a3dbb1c93c581fc08dcbaae936c7b5b98" translate="yes" xml:space="preserve">
          <source>Conformance</source>
          <target state="translated">Conformance</target>
        </trans-unit>
        <trans-unit id="a4375da2cfa7a280c282d1b36b819dcf637bfafd" translate="yes" xml:space="preserve">
          <source>Connect &lt;em&gt;sock&lt;/em&gt; to a remote socket at &lt;em&gt;address&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sock&lt;/em&gt;を&lt;em&gt;アドレスの&lt;/em&gt;リモートソケットに接続し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bb2900aa8459ddf5dfcf514a4ce4e55d988f0ad4" translate="yes" xml:space="preserve">
          <source>Connect a local manager object to a remote manager process:</source>
          <target state="translated">ローカルマネージャオブジェクトをリモートマネージャプロセスに接続します。</target>
        </trans-unit>
        <trans-unit id="cd161fc882f1eb443dd7d8854b732281ce9998a8" translate="yes" xml:space="preserve">
          <source>Connect the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;接続します。</target>
        </trans-unit>
        <trans-unit id="d4fcdc0bc98f6ff6cea4ddb53d0e1a772f9093a6" translate="yes" xml:space="preserve">
          <source>Connect to a TCP service listening on the Internet &lt;em&gt;address&lt;/em&gt; (a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt;), and return the socket object. This is a higher-level function than &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt;: if &lt;em&gt;host&lt;/em&gt; is a non-numeric hostname, it will try to resolve it for both &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;, and then try to connect to all possible addresses in turn until a connection succeeds. This makes it easy to write clients that are compatible to both IPv4 and IPv6.</source>
          <target state="translated">インターネット&lt;em&gt;アドレス&lt;/em&gt;（2タプル &lt;code&gt;(host, port)&lt;/code&gt; ）をリッスンするTCPサービスに接続し、ソケットオブジェクトを返します。これは、&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;socket.connect()&lt;/code&gt; &lt;/a&gt;よりも高レベルの関数です。&lt;em&gt;ホスト&lt;/em&gt;が数値でないホスト名の&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;とAF_INET6の両方について解決を試み、接続が成功するまで可能なすべてのアドレスに順番に接続を試みます。 。これにより、IPv4とIPv6の両方に互換性のあるクライアントを簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="e6f61cc31165b3975363671c13b90453cf950a7d" translate="yes" xml:space="preserve">
          <source>Connect to a host on a given port. The defaults are to connect to the local host at the standard SMTP port (25). If the hostname ends with a colon (&lt;code&gt;':'&lt;/code&gt;) followed by a number, that suffix will be stripped off and the number interpreted as the port number to use. This method is automatically invoked by the constructor if a host is specified during instantiation. Returns a 2-tuple of the response code and message sent by the server in its connection response.</source>
          <target state="translated">指定されたポートのホストに接続します。デフォルトでは、標準のSMTPポート（25）でローカルホストに接続します。ホスト名がコロン（ &lt;code&gt;':'&lt;/code&gt; ）の後に番号が続く場合、そのサフィックスは取り除かれ、番号は使用するポート番号として解釈されます。インスタンス化中にホストが指定された場合、このメソッドはコンストラクターによって自動的に呼び出されます。接続応答でサーバーから送信された応答コードとメッセージの2タプルを返します。</target>
        </trans-unit>
        <trans-unit id="444d26a3fa1bc0bf4b6f4e4099759a9f621441f3" translate="yes" xml:space="preserve">
          <source>Connect to a host. The optional second argument is the port number, which defaults to the standard Telnet port (23). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used).</source>
          <target state="translated">ホストに接続します。オプションの2番目の引数はポート番号で、デフォルトは標準のTelnetポート（23）です。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータは、接続試行などの操作をブロックするためのタイムアウトを秒単位で指定します（指定しない場合、グローバルなデフォルトのタイムアウト設定が使用されます）。</target>
        </trans-unit>
        <trans-unit id="3eab2d2be4e5d1074d243fdd53a134d1e63c9f55" translate="yes" xml:space="preserve">
          <source>Connect to a remote socket at &lt;em&gt;address&lt;/em&gt;. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">&lt;em&gt;アドレスの&lt;/em&gt;リモートソケットに接続し&lt;em&gt;ます&lt;/em&gt;。 （&lt;em&gt;アドレス&lt;/em&gt;の形式は&lt;em&gt;アドレス&lt;/em&gt;ファミリによって異なります。上記を参照してください。）</target>
        </trans-unit>
        <trans-unit id="8b1643fcad85682fb58507af62d69671a99e5155" translate="yes" xml:space="preserve">
          <source>Connect to the given host and port. The default port number is &lt;code&gt;21&lt;/code&gt;, as specified by the FTP protocol specification. It is rarely needed to specify a different port number. This function should be called only once for each instance; it should not be called at all if a host was given when the instance was created. All other methods can only be used after a connection has been made. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt. If no &lt;em&gt;timeout&lt;/em&gt; is passed, the global default timeout setting will be used. &lt;em&gt;source_address&lt;/em&gt; is a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt; for the socket to bind to as its source address before connecting.</source>
          <target state="translated">指定されたホストとポートに接続します。デフォルトのポート番号は &lt;code&gt;21&lt;/code&gt; で、FTPプロトコル仕様で指定されています。別のポート番号を指定する必要はほとんどありません。この関数は、インスタンスごとに1回だけ呼び出す必要があります。インスタンスの作成時にホストが指定されている場合は、まったく呼び出さないでください。他のすべてのメソッドは、接続が確立された後にのみ使用できます。オプションの&lt;em&gt;タイムアウト&lt;/em&gt;パラメータは、接続試行のタイムアウトを秒単位で指定します。&lt;em&gt;タイムアウト&lt;/em&gt;が渡されない場合、グローバルなデフォルトのタイムアウト設定が使用されます。&lt;em&gt;source_address&lt;/em&gt;は、ソケットが接続前に送信元アドレスとしてバインドする2タプル &lt;code&gt;(host, port)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b146bed3a097a025e4795416168a73fc3806496f" translate="yes" xml:space="preserve">
          <source>Connect to the server specified when the object was created. By default, this is called automatically when making a request if the client does not already have a connection.</source>
          <target state="translated">オブジェクトが作成されたときに指定されたサーバーに接続します。デフォルトでは、クライアントがまだ接続していない場合、リクエストを行う際に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0c3e7796e468f44129a6efd9d7ebe023f9e3c4e7" translate="yes" xml:space="preserve">
          <source>Connecting Existing Sockets</source>
          <target state="translated">既存のソケットの接続</target>
        </trans-unit>
        <trans-unit id="aca48106439509e9b50a5fef43d595f5e650540d" translate="yes" xml:space="preserve">
          <source>Connection Callbacks</source>
          <target state="translated">接続コールバック</target>
        </trans-unit>
        <trans-unit id="577a2233533a7bf577842fe0fd8ace8c88f42be1" translate="yes" xml:space="preserve">
          <source>Connection Objects</source>
          <target state="translated">接続オブジェクト</target>
        </trans-unit>
        <trans-unit id="57c2f659e5599986512235ea5e7464dc105b5143" translate="yes" xml:space="preserve">
          <source>Connection callbacks are called on all protocols, exactly once per a successful connection. All other protocol callbacks can only be called between those two methods.</source>
          <target state="translated">接続コールバックは、接続が成功するたびに一度だけ、すべてのプロトコルでコールされます。他のすべてのプロトコルのコールバックは、これらの 2 つのメソッドの間でのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b75c5cd9724dc1313cd9d945da6421ddd86109cc" translate="yes" xml:space="preserve">
          <source>Connection objects allow the sending and receiving of picklable objects or strings. They can be thought of as message oriented connected sockets.</source>
          <target state="translated">接続オブジェクトは、ピック可能なオブジェクトや文字列の送受信を可能にします。これらは、メッセージ指向の接続ソケットと考えることができます。</target>
        </trans-unit>
        <trans-unit id="b203fa071d8e7068e122dd99c7dbeb3e4cbdb6bf" translate="yes" xml:space="preserve">
          <source>Connection objects are usually created using &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt; &amp;ndash; see also &lt;a href=&quot;#multiprocessing-listeners-clients&quot;&gt;Listeners and Clients&lt;/a&gt;.</source>
          <target state="translated">接続オブジェクトは通常、&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;を使用して作成されます。「&lt;a href=&quot;#multiprocessing-listeners-clients&quot;&gt;リスナーとクライアント&lt;/a&gt;」も参照してください。</target>
        </trans-unit>
        <trans-unit id="d681d78d315a3168a67f6fffacf7f3bc57fbcc10" translate="yes" xml:space="preserve">
          <source>Connection objects can be used as context managers that automatically commit or rollback transactions. In the event of an exception, the transaction is rolled back; otherwise, the transaction is committed:</source>
          <target state="translated">接続オブジェクトは、トランザクションを自動的にコミットまたはロールバックするコンテキスト・マネージャとして使用できます。例外が発生した場合、トランザクションはロールバックされ、それ以外の場合はコミットされます。</target>
        </trans-unit>
        <trans-unit id="96f7e671b1e48da4a2700769f8225126847b97cf" translate="yes" xml:space="preserve">
          <source>Connection refused</source>
          <target state="translated">接続拒否</target>
        </trans-unit>
        <trans-unit id="2986a51d253e6221052722aab2efbc181246b417" translate="yes" xml:space="preserve">
          <source>Connection reset by peer</source>
          <target state="translated">ピアによる接続のリセット</target>
        </trans-unit>
        <trans-unit id="52c871ea22dada6554a1363ee61f9567c44efd80" translate="yes" xml:space="preserve">
          <source>Connection timed out</source>
          <target state="translated">接続のタイムアウト</target>
        </trans-unit>
        <trans-unit id="f83f4a2cd4ca5e47b117cc54250e29c4a9a9ce89" translate="yes" xml:space="preserve">
          <source>ConnectionAbortedError</source>
          <target state="translated">ConnectionAbortedError</target>
        </trans-unit>
        <trans-unit id="54c5f681f77ec4523760ad989f74ae402f08fb1c" translate="yes" xml:space="preserve">
          <source>ConnectionError</source>
          <target state="translated">ConnectionError</target>
        </trans-unit>
        <trans-unit id="346d0cb89df3354c71056beb8315f1fd603881a7" translate="yes" xml:space="preserve">
          <source>ConnectionRefusedError</source>
          <target state="translated">ConnectionRefusedError</target>
        </trans-unit>
        <trans-unit id="e8b18c2c476b40a73af1343d07b9aa47bbb0ff8b" translate="yes" xml:space="preserve">
          <source>ConnectionResetError</source>
          <target state="translated">ConnectionResetError</target>
        </trans-unit>
        <trans-unit id="8437d1b9b9cb294d5842a58d446f70385979bc98" translate="yes" xml:space="preserve">
          <source>Consider also using the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; function instead of using lower level functions to manually create and close an event loop.</source>
          <target state="translated">イベントループを手動で作成して閉じるために、低レベルの関数を使用する代わりに&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;関数を使用することも検討してください。</target>
        </trans-unit>
        <trans-unit id="a4b846dc8cd054c0c31ba355c789b0864b7c6d8b" translate="yes" xml:space="preserve">
          <source>Consider signing data with &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; if you need to ensure that it has not been tampered with.</source>
          <target state="translated">データが改ざんされていないことを確認する必要がある場合は、&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; で&lt;/a&gt;データに署名することを検討してください。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">次のような例を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="437f7509cb94cfef1ec9f079bd756fc15feedbab" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; instead which checks types of the values to be stored internally. If you don&amp;rsquo;t want interpolation, you can use &lt;code&gt;ConfigParser(interpolation=None)&lt;/code&gt;.</source>
          <target state="translated">代わりに、内部に保存される値のタイプをチェックする&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; の&lt;/a&gt;使用を検討してください。補間が &lt;code&gt;ConfigParser(interpolation=None)&lt;/code&gt; 場合は、ConfigParser（interpolation = None）を使用できます。</target>
        </trans-unit>
        <trans-unit id="1612e43b06a89c38e657c3b548bbd79567e65cd8" translate="yes" xml:space="preserve">
          <source>Console I/O</source>
          <target state="translated">コンソールI/O</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="7ea52f3e3962df42e43b89832b2dce2a5e5245f8" translate="yes" xml:space="preserve">
          <source>Constant for Qualcomm&amp;rsquo;s IPC router protocol, used to communicate with service providing remote processors.</source>
          <target state="translated">QualcommのIPCルータープロトコルの定数で、リモートプロセッサを提供するサービスとの通信に使用されます。</target>
        </trans-unit>
        <trans-unit id="8bccf31be51924bf346ddec6d14b137594bd8724" translate="yes" xml:space="preserve">
          <source>Constant used to represent the limit for an unlimited resource.</source>
          <target state="translated">無制限のリソースの限界を表すために使用される定数です。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="9fb4a24d5847d19f993e1aa6ec6580ba7e3b040d" translate="yes" xml:space="preserve">
          <source>Constants added by the &lt;code&gt;site&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;site&lt;/code&gt; モジュールによって追加された定数</target>
        </trans-unit>
        <trans-unit id="4aa7814d1493bf6811664d88aa25ff6b32f9aa53" translate="yes" xml:space="preserve">
          <source>Constants added by the site module</source>
          <target state="translated">サイトモジュールで追加された定数</target>
        </trans-unit>
        <trans-unit id="0f608943fc2791d62cf3a394cd1848f744abb9cf" translate="yes" xml:space="preserve">
          <source>Constants for Linux Kernel cryptography.</source>
          <target state="translated">Linuxカーネル暗号のための定数。</target>
        </trans-unit>
        <trans-unit id="0fdabc6c5f9e265d52968cf2f2e05b3a7603f627" translate="yes" xml:space="preserve">
          <source>Constants for Linux host/guest communication.</source>
          <target state="translated">Linuxのホスト/ゲスト通信用の定数です。</target>
        </trans-unit>
        <trans-unit id="f28e7e6317bf212d44ee5253776c344c575ddb18" translate="yes" xml:space="preserve">
          <source>Constants for Windows&amp;rsquo; WSAIoctl(). The constants are used as arguments to the &lt;a href=&quot;#socket.socket.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; method of socket objects.</source>
          <target state="translated">WindowsのWSAIoctl（）の定数。定数は、ソケットオブジェクトの&lt;a href=&quot;#socket.socket.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;メソッドの引数として使用されます。</target>
        </trans-unit>
        <trans-unit id="f206b82b0505070ab8c6aee10e72d0b335e1e464" translate="yes" xml:space="preserve">
          <source>Constants used in the &lt;em&gt;mask&lt;/em&gt; arguments.</source>
          <target state="translated">&lt;em&gt;マスク&lt;/em&gt;引数で使用される定数。</target>
        </trans-unit>
        <trans-unit id="9f021b006e5c78b6f6464ef849d978e24da7fe8f" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; instance from the given traceback, setting &lt;em&gt;current_offset&lt;/em&gt; to the instruction responsible for the exception.</source>
          <target state="translated">指定されたトレースバックから&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;インスタンスを構築し、&lt;em&gt;current_offset&lt;/em&gt;を例外の原因となっている命令に設定します。</target>
        </trans-unit>
        <trans-unit id="53fdaeb01a4647dd9ed8107f075d72a71c546909" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; instance. This constructor understands several keyword parameters. An output stream may be set using the &lt;em&gt;stream&lt;/em&gt; keyword; the only method used on the stream object is the file protocol&amp;rsquo;s &lt;code&gt;write()&lt;/code&gt; method. If not specified, the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; adopts &lt;code&gt;sys.stdout&lt;/code&gt;. The amount of indentation added for each recursive level is specified by &lt;em&gt;indent&lt;/em&gt;; the default is one. Other values can cause output to look a little odd, but can make nesting easier to spot. The number of levels which may be printed is controlled by &lt;em&gt;depth&lt;/em&gt;; if the data structure being printed is too deep, the next contained level is replaced by &lt;code&gt;...&lt;/code&gt;. By default, there is no constraint on the depth of the objects being formatted. The desired output width is constrained using the &lt;em&gt;width&lt;/em&gt; parameter; the default is 80 characters. If a structure cannot be formatted within the constrained width, a best effort will be made. If &lt;em&gt;compact&lt;/em&gt; is false (the default) each item of a long sequence will be formatted on a separate line. If &lt;em&gt;compact&lt;/em&gt; is true, as many items as will fit within the &lt;em&gt;width&lt;/em&gt; will be formatted on each output line. If &lt;em&gt;sort_dicts&lt;/em&gt; is true (the default), dictionaries will be formatted with their keys sorted, otherwise they will display in insertion order.</source>
          <target state="translated">構築&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;インスタンスを。このコンストラクタは、いくつかのキーワードパラメータを理解します。出力ストリームは、&lt;em&gt;stream&lt;/em&gt;キーワードを使用して設定できます。ストリームオブジェクトで使用される唯一のメソッドは、ファイルプロトコルの &lt;code&gt;write()&lt;/code&gt; メソッドです。指定しない場合、&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; は&lt;/a&gt; &lt;code&gt;sys.stdout&lt;/code&gt; を採用します。各再帰レベルに追加されるインデントの量は、&lt;em&gt;indent&lt;/em&gt;によって指定されます。デフォルトは1です。他の値を指定すると、出力が少し奇妙に見える場合がありますが、ネストを見つけやすくなります。印刷できるレベルの数は、&lt;em&gt;深度&lt;/em&gt;によって制御されます。印刷されるデータ構造が深すぎる場合、次に含まれるレベルは &lt;code&gt;...&lt;/code&gt; 。デフォルトでは、フォーマットされるオブジェクトの深さに制約はありません。必要な出力幅は、&lt;em&gt;width&lt;/em&gt;パラメーターを使用して制限されます。デフォルトは80文字です。構造が制約された幅内でフォーマットできない場合、最善の努力がなされます。場合&lt;em&gt;コンパクトが&lt;/em&gt;偽（デフォルト）である長いシーケンスの各項目は別の行にフォーマットされます。&lt;em&gt;compact&lt;/em&gt;がtrueの場合、&lt;em&gt;幅に&lt;/em&gt;収まるだけの数のアイテムが各出力行でフォーマットされます。場合&lt;em&gt;sort_dictsが&lt;/em&gt; true（デフォルト）で、そのキーがソートで、辞書には、そうでない場合は、挿入順に表示されます、フォーマットされます。</target>
        </trans-unit>
        <trans-unit id="97d036024d65baef7f82dc4bb9e931a1d6c84781" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; object from a frame generator (such as is returned by &lt;a href=&quot;#traceback.walk_stack&quot;&gt;&lt;code&gt;walk_stack()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#traceback.walk_tb&quot;&gt;&lt;code&gt;walk_tb()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">構築&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; の&lt;/a&gt;フレーム生成部からのオブジェクトを（例えば、返されるよう&lt;a href=&quot;#traceback.walk_stack&quot;&gt; &lt;code&gt;walk_stack()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#traceback.walk_tb&quot;&gt; &lt;code&gt;walk_tb()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="05c27f7e9052c09901b9a3db205595325bd0cfd5" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; object from a supplied list of &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects or old-style list of tuples. Each tuple should be a 4-tuple with filename, lineno, name, line as the elements.</source>
          <target state="translated">指定された&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; &lt;/a&gt;オブジェクトのリストまたはタプルの古いスタイルのリストから&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;オブジェクトを構築します。各タプルは、ファイル名、lineno、name、lineを要素とする4タプルである必要があります。</target>
        </trans-unit>
        <trans-unit id="e9ea1fdfdf262d43c0f07da2968c3e29a919069b" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; instance for a file on the filesystem, in preparation for adding it to a zip file.</source>
          <target state="translated">構築&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt; zipファイルに追加するための準備として、ファイルシステム上のファイルのインスタンスを。</target>
        </trans-unit>
        <trans-unit id="4d33a0f4716a226ab42d3940127626d6440e8683" translate="yes" xml:space="preserve">
          <source>Construct a Path object from a &lt;code&gt;root&lt;/code&gt; zipfile (which may be a &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; instance or &lt;code&gt;file&lt;/code&gt; suitable for passing to the &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; constructor).</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt; zip &lt;code&gt;file&lt;/code&gt; &lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;インスタンスまたは&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;コンストラクターに渡すのに適したファイル）からPathオブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="3112ec976029a0e729ed6b89fc5274ba79def39b" translate="yes" xml:space="preserve">
          <source>Construct a URL from a tuple as returned by &lt;code&gt;urlparse()&lt;/code&gt;. The &lt;em&gt;parts&lt;/em&gt; argument can be any six-item iterable. This may result in a slightly different, but equivalent URL, if the URL that was parsed originally had unnecessary delimiters (for example, a &lt;code&gt;?&lt;/code&gt; with an empty query; the RFC states that these are equivalent).</source>
          <target state="translated">&lt;code&gt;urlparse()&lt;/code&gt; によって返されるタプルからURLを構築します。&lt;em&gt;部品の&lt;/em&gt;引数は、任意の6項目の反復可能なことができます。解析されたURLに元々不要な区切り文字があった場合、これはわずかに異なるが同等のURLになる可能性があります（たとえば、空のクエリを含む &lt;code&gt;?&lt;/code&gt; 、RFCはこれらが同等であると述べています）。</target>
        </trans-unit>
        <trans-unit id="61682dd1f84451642ed993893fcc334a21383b18" translate="yes" xml:space="preserve">
          <source>Construct a full (&amp;ldquo;absolute&amp;rdquo;) URL by combining a &amp;ldquo;base URL&amp;rdquo; (&lt;em&gt;base&lt;/em&gt;) with another URL (&lt;em&gt;url&lt;/em&gt;). Informally, this uses components of the base URL, in particular the addressing scheme, the network location and (part of) the path, to provide missing components in the relative URL. For example:</source>
          <target state="translated">「ベースURL」（&lt;em&gt;base&lt;/em&gt;）を別のURL（&lt;em&gt;url&lt;/em&gt;）と組み合わせて、完全な（「絶対」）URLを作成します。非公式には、これはベースURLのコンポーネント、特にアドレス指定スキーム、ネットワークの場所、およびパス（の一部）を使用して、相対URLに欠落しているコンポーネントを提供します。例えば：</target>
        </trans-unit>
        <trans-unit id="e9b8abb778020f1da936f0e13fcbd935eb564490" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; object based from &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;valueに&lt;/em&gt;基づいて新しい&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;オブジェクトを構築し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bfc30acbe7554a7092c37a0edb99588f784bfb54" translate="yes" xml:space="preserve">
          <source>Construct a new directory comparison object, to compare the directories &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. &lt;em&gt;ignore&lt;/em&gt; is a list of names to ignore, and defaults to &lt;a href=&quot;#filecmp.DEFAULT_IGNORES&quot;&gt;&lt;code&gt;filecmp.DEFAULT_IGNORES&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;hide&lt;/em&gt; is a list of names to hide, and defaults to &lt;code&gt;[os.curdir, os.pardir]&lt;/code&gt;.</source>
          <target state="translated">新しいディレクトリ比較オブジェクトを作成して、ディレクトリ&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;を比較します。&lt;em&gt;ignore&lt;/em&gt;は&lt;em&gt;無視する&lt;/em&gt;名前のリストで、デフォルトは&lt;a href=&quot;#filecmp.DEFAULT_IGNORES&quot;&gt; &lt;code&gt;filecmp.DEFAULT_IGNORES&lt;/code&gt; &lt;/a&gt;です。&lt;em&gt;hide&lt;/em&gt;は&lt;em&gt;非表示&lt;/em&gt;にする名前のリストで、デフォルトは &lt;code&gt;[os.curdir, os.pardir]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d9fa328893db482aa7f54213a8711654178dc0ba" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 address. An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv4 address.</source>
          <target state="translated">IPv4アドレスを構築します。アン&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; が&lt;/a&gt;あれば発生し&lt;em&gt;たアドレスが&lt;/em&gt;有効なIPv4アドレスではありません。</target>
        </trans-unit>
        <trans-unit id="e7093beeb0aa30879ccc0413587df269b30b2c73" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 interface. The meaning of &lt;em&gt;address&lt;/em&gt; is as in the constructor of &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;, except that arbitrary host addresses are always accepted.</source>
          <target state="translated">IPv4インターフェースを構築します。&lt;em&gt;アドレス&lt;/em&gt;の意味は、任意のホストアドレスが常に受け入れられることを除いて、&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;のコンストラクタと同じです。</target>
        </trans-unit>
        <trans-unit id="fb0670d4a3037aac106afeeeb98b1f559e593b73" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 network definition. &lt;em&gt;address&lt;/em&gt; can be one of the following:</source>
          <target state="translated">IPv4ネットワーク定義を構築します。&lt;em&gt;アドレス&lt;/em&gt;は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f3fa62a8054443db6c10537e3e6854f048379dbd" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 address. An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv6 address.</source>
          <target state="translated">IPv6アドレスを構築します。アン&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; が&lt;/a&gt;あれば発生し&lt;em&gt;たアドレスが&lt;/em&gt;有効なIPv6アドレスではありません。</target>
        </trans-unit>
        <trans-unit id="501bc958ef53a686dd0a31a088072d052c1371cf" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 interface. The meaning of &lt;em&gt;address&lt;/em&gt; is as in the constructor of &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, except that arbitrary host addresses are always accepted.</source>
          <target state="translated">IPv6インターフェースを構築します。&lt;em&gt;アドレス&lt;/em&gt;の意味は、任意のホストアドレスが常に受け入れられることを除いて、&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; &lt;/a&gt;のコンストラクターと同じです。</target>
        </trans-unit>
        <trans-unit id="dcf003c3b90de9f569fe3c885effa28d65dc998a" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 network definition. &lt;em&gt;address&lt;/em&gt; can be one of the following:</source>
          <target state="translated">IPv6ネットワーク定義を構築します。&lt;em&gt;アドレス&lt;/em&gt;は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a72405125d83e1d89b59e520ac689211b626beb7" translate="yes" xml:space="preserve">
          <source>Construct an iterator from those elements of &lt;em&gt;iterable&lt;/em&gt; for which &lt;em&gt;function&lt;/em&gt; returns true. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container which supports iteration, or an iterator. If &lt;em&gt;function&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the identity function is assumed, that is, all elements of &lt;em&gt;iterable&lt;/em&gt; that are false are removed.</source>
          <target state="translated">これらの要素の反復子を構築する&lt;em&gt;反復可能&lt;/em&gt;れる&lt;em&gt;関数は&lt;/em&gt;真を返します。&lt;em&gt;iterable&lt;/em&gt;は、シーケンス、反復をサポートするコンテナ、またはイテレータのいずれかです。場合は&lt;em&gt;機能が&lt;/em&gt;ありません &lt;code&gt;None&lt;/code&gt; 、恒等関数が仮定され、つまり、すべての要素を&lt;em&gt;反復可能な&lt;/em&gt;偽です削除されます。</target>
        </trans-unit>
        <trans-unit id="2df28f6d11a4eedaf7a268857f0a005f2aa2c6e6" translate="yes" xml:space="preserve">
          <source>Construct and return a class to handle creating a &lt;em&gt;name&lt;/em&gt; header.</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;ヘッダーの作成を処理するクラスを作成して返します。</target>
        </trans-unit>
        <trans-unit id="20a61ecd7b21a2c2e37d1144cc5b711e3931eef3" translate="yes" xml:space="preserve">
          <source>Constructor arguments should be passed as keyword arguments only. &lt;em&gt;blocked_domains&lt;/em&gt; is a sequence of domain names that we never accept cookies from, nor return cookies to. &lt;em&gt;allowed_domains&lt;/em&gt; if not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, this is a sequence of the only domains for which we accept and return cookies. &lt;em&gt;secure_protocols&lt;/em&gt; is a sequence of protocols for which secure cookies can be added to. By default &lt;em&gt;https&lt;/em&gt; and &lt;em&gt;wss&lt;/em&gt; (secure websocket) are considered secure protocols. For all other arguments, see the documentation for &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">コンストラクター引数は、キーワード引数としてのみ渡す必要があります。&lt;em&gt;blocked_domains&lt;/em&gt;は、Cookieを受け入れたり、Cookieを返したりすることのない一連のドメイン名です。&lt;em&gt;allowed_domains &lt;/em&gt;&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;でない場合、これは、Cookieを受け入れて返す唯一のドメインのシーケンスです。&lt;em&gt;secure_protocols&lt;/em&gt;は、セキュアなCookieを追加できる一連のプロトコルです。デフォルトでは、&lt;em&gt;https&lt;/em&gt;および&lt;em&gt;wss&lt;/em&gt;（セキュアWebソケット）はセキュアプロトコルと見なされます。他のすべての引数については、&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt;オブジェクトのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4f3bf56e6939c72fbfd140f84c915e6346fc670a" translate="yes" xml:space="preserve">
          <source>Constructor for a</source>
          <target state="translated">のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="28efd605facf2d7d84fc45a32cd1f0fab1dd91ff" translate="yes" xml:space="preserve">
          <source>Constructor for a &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;インスタンスのコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="a4ff7779d24149ce2570f7e9caa7a262f7384f39" translate="yes" xml:space="preserve">
          <source>Constructor for a &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;インスタンスのコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="f359b980d6c4665d81be61bf16c70045857ce60d" translate="yes" xml:space="preserve">
          <source>Constructor for a priority queue. &lt;em&gt;maxsize&lt;/em&gt; is an integer that sets the upperbound limit on the number of items that can be placed in the queue. Insertion will block once this size has been reached, until queue items are consumed. If &lt;em&gt;maxsize&lt;/em&gt; is less than or equal to zero, the queue size is infinite.</source>
          <target state="translated">優先キューのコンストラクタ。&lt;em&gt;maxsize&lt;/em&gt;は、キューに入れることができるアイテム数の上限を設定する整数です。このサイズに達すると、キューアイテムが消費されるまで挿入がブロックされます。&lt;em&gt;maxsize&lt;/em&gt;がゼロ以下の場合、キューのサイズは無限です。</target>
        </trans-unit>
        <trans-unit id="227f22345cb0ec17d03554f24d183cd7e81bc8b8" translate="yes" xml:space="preserve">
          <source>Constructor for an &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;インスタンスのコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="fdc6ac638d1092a5062ed70f81c6856279e96c8d" translate="yes" xml:space="preserve">
          <source>Constructor for an &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;インスタンスのコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="f2578ef9b53c0673fee55ed44b0e07eaaff622ef" translate="yes" xml:space="preserve">
          <source>Constructor for an unbounded</source>
          <target state="translated">拘束されない</target>
        </trans-unit>
        <trans-unit id="4c6a104e78aec776d285729309e0f1d3c43eb73f" translate="yes" xml:space="preserve">
          <source>Constructor for the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, which simulates most of the methods of a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, with the exception of the &lt;code&gt;truncate()&lt;/code&gt; method. At least one of &lt;em&gt;fileobj&lt;/em&gt; and &lt;em&gt;filename&lt;/em&gt; must be given a non-trivial value.</source>
          <target state="translated">&lt;code&gt;truncate()&lt;/code&gt; メソッドを除いて、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクトの&lt;/a&gt;ほとんどのメソッドをシミュレートする&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;クラスのコンストラクター。&lt;em&gt;fileobj&lt;/em&gt;および&lt;em&gt;filenameの&lt;/em&gt;少なくとも1 &lt;em&gt;つには&lt;/em&gt;、重要な値を指定する必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20dee1594dd4f14da9ec57a1a5e5c251fd2f387e" translate="yes" xml:space="preserve">
          <source>Constructor functions also accept the following tree hashing parameters:</source>
          <target state="translated">コンストラクタ関数は、以下のツリーハッシュパラメータも受け付けます。</target>
        </trans-unit>
        <trans-unit id="9d905486f8434a8a2221b1d75e07f65182a417d7" translate="yes" xml:space="preserve">
          <source>Constructor:</source>
          <target state="translated">Constructor:</target>
        </trans-unit>
        <trans-unit id="4df31fe39671b02c2e77738892815c0fa1aeb254" translate="yes" xml:space="preserve">
          <source>Constructors for hash algorithms that are always present in this module are &lt;code&gt;sha1()&lt;/code&gt;, &lt;code&gt;sha224()&lt;/code&gt;, &lt;code&gt;sha256()&lt;/code&gt;, &lt;code&gt;sha384()&lt;/code&gt;, &lt;code&gt;sha512()&lt;/code&gt;, &lt;a href=&quot;#hashlib.blake2b&quot;&gt;&lt;code&gt;blake2b()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#hashlib.blake2s&quot;&gt;&lt;code&gt;blake2s()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;md5()&lt;/code&gt; is normally available as well, though it may be missing if you are using a rare &amp;ldquo;FIPS compliant&amp;rdquo; build of Python. Additional algorithms may also be available depending upon the OpenSSL library that Python uses on your platform. On most platforms the &lt;code&gt;sha3_224()&lt;/code&gt;, &lt;code&gt;sha3_256()&lt;/code&gt;, &lt;code&gt;sha3_384()&lt;/code&gt;, &lt;code&gt;sha3_512()&lt;/code&gt;, &lt;code&gt;shake_128()&lt;/code&gt;, &lt;code&gt;shake_256()&lt;/code&gt; are also available.</source>
          <target state="translated">このモジュールに常に存在するハッシュアルゴリズムのコンストラクターは、 &lt;code&gt;sha1()&lt;/code&gt; 、 &lt;code&gt;sha224()&lt;/code&gt; 、 &lt;code&gt;sha256()&lt;/code&gt; 、 &lt;code&gt;sha384()&lt;/code&gt; 、 &lt;code&gt;sha512()&lt;/code&gt; 、&lt;a href=&quot;#hashlib.blake2b&quot;&gt; &lt;code&gt;blake2b()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#hashlib.blake2s&quot;&gt; &lt;code&gt;blake2s()&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;md5()&lt;/code&gt; も通常使用できますが、Pythonのまれな「FIPS準拠」ビルドを使用している場合は、不足している可能性があります。Pythonがプラットフォームで使用するOpenSSLライブラリによっては、追加のアルゴリズムも利用できる場合があります。ほとんどのプラットフォームでは、 &lt;code&gt;sha3_224()&lt;/code&gt; 、 &lt;code&gt;sha3_256()&lt;/code&gt; 、 &lt;code&gt;sha3_384()&lt;/code&gt; 、 &lt;code&gt;sha3_512()&lt;/code&gt; 、 &lt;code&gt;shake_128()&lt;/code&gt; 、 &lt;code&gt;shake_256()&lt;/code&gt; もご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="cf3231e069aa9f15adbe6d6b92582c2f8c9dbcc8" translate="yes" xml:space="preserve">
          <source>Consult the OSS documentation for a full list of audio formats, and note that most devices support only a subset of these formats. Some older devices only support &lt;code&gt;AFMT_U8&lt;/code&gt;; the most common format used today is &lt;code&gt;AFMT_S16_LE&lt;/code&gt;.</source>
          <target state="translated">オーディオ形式の完全なリストについては、OSSのドキュメントを参照してください。ほとんどのデバイスは、これらの形式のサブセットのみをサポートしています。一部の古いデバイスは &lt;code&gt;AFMT_U8&lt;/code&gt; のみをサポートしています。現在使用されている最も一般的な形式は &lt;code&gt;AFMT_S16_LE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4bcd9df96cd92566c87bd51d1940e1d4bca85577" translate="yes" xml:space="preserve">
          <source>Consult the section &lt;a href=&quot;#sqlite3-types&quot;&gt;SQLite and Python types&lt;/a&gt; of this manual for details.</source>
          <target state="translated">セクションに相談&lt;a href=&quot;#sqlite3-types&quot;&gt;SQLiteのとPythonの種類&lt;/a&gt;の詳細については、このマニュアルのを。</target>
        </trans-unit>
        <trans-unit id="27112b7f4e979d65550a9332b5a4e40651213c04" translate="yes" xml:space="preserve">
          <source>Consumer API</source>
          <target state="translated">コンシューマAPI</target>
        </trans-unit>
        <trans-unit id="58099b987698948a16714c4065cd55521a5a813c" translate="yes" xml:space="preserve">
          <source>Container methods: &lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__setitem__&lt;/code&gt;, &lt;code&gt;__delitem__&lt;/code&gt;, &lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__reversed__&lt;/code&gt; and &lt;code&gt;__missing__&lt;/code&gt;</source>
          <target state="translated">コンテナーメソッド： &lt;code&gt;__getitem__&lt;/code&gt; 、 &lt;code&gt;__setitem__&lt;/code&gt; 、 &lt;code&gt;__delitem__&lt;/code&gt; 、 &lt;code&gt;__contains__&lt;/code&gt; 、 &lt;code&gt;__len__&lt;/code&gt; 、 &lt;code&gt;__iter__&lt;/code&gt; 、 &lt;code&gt;__reversed__&lt;/code&gt; および &lt;code&gt;__missing__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efe80fc56ad539cd9c3e75333c04f0604b709d15" translate="yes" xml:space="preserve">
          <source>Container of extra module-specific data for use during loading (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">ロード中に使用する追加のモジュール固有データのコンテナ（または &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5764510c76ec6c67f2e1aca7d2239891dbfa5c44" translate="yes" xml:space="preserve">
          <source>Containment Test</source>
          <target state="translated">封じ込め試験</target>
        </trans-unit>
        <trans-unit id="3d9b208ee62e39d3dcb533b57a76ca19cc5e1fd1" translate="yes" xml:space="preserve">
          <source>Contains a tuple of the form &lt;code&gt;(host, port)&lt;/code&gt; referring to the client&amp;rsquo;s address.</source>
          <target state="translated">クライアントのアドレスを参照する形式 &lt;code&gt;(host, port)&lt;/code&gt; タプルが含まれています。</target>
        </trans-unit>
        <trans-unit id="3517acc44e6b56dea3b86e99d453db2c78b7c1cd" translate="yes" xml:space="preserve">
          <source>Contains all the information pertinent to the event being logged.</source>
          <target state="translated">記録されるイベントに関連するすべての情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="d7f8102f9bc5f7dc75e04ee808fc5b4604999a9d" translate="yes" xml:space="preserve">
          <source>Contains information about the current hardware profile of the local computer system.</source>
          <target state="translated">ローカルコンピュータシステムの現在のハードウェアプロファイルに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="a34e20d62701496469b0c694ed1bea17bac694e0" translate="yes" xml:space="preserve">
          <source>Contains the Python system version, in a form usable by the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt;&lt;code&gt;version_string&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.server_version&quot;&gt;&lt;code&gt;server_version&lt;/code&gt;&lt;/a&gt; class variable. For example, &lt;code&gt;'Python/1.4'&lt;/code&gt;.</source>
          <target state="translated">Pythonシステムのバージョンが、&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.version_string&quot;&gt; &lt;code&gt;version_string&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.server_version&quot;&gt; &lt;code&gt;server_version&lt;/code&gt; &lt;/a&gt;クラス変数で使用できる形式で含まれています。たとえば、 &lt;code&gt;'Python/1.4'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fce1f15f1e8c63ac3a8a1f92183ba74db9607ee4" translate="yes" xml:space="preserve">
          <source>Contains the command (request type). For example, &lt;code&gt;'GET'&lt;/code&gt;.</source>
          <target state="translated">コマンド（要求タイプ）が含まれています。たとえば、 &lt;code&gt;'GET'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e4d1e1ae5ad16628a75d2a7995052698dc4c25fe" translate="yes" xml:space="preserve">
          <source>Contains the output stream for writing a response back to the client. Proper adherence to the HTTP protocol must be used when writing to this stream in order to achieve successful interoperation with HTTP clients.</source>
          <target state="translated">レスポンスをクライアントに書き戻すための出力ストリームを含みます。HTTP クライアントとの相互運用を成功させるために、このストリームに書き込む際には、HTTP プロトコルに適切に準拠しなければなりません。</target>
        </trans-unit>
        <trans-unit id="46bfaf266767696a029ffc2cc7f8381684c43fd2" translate="yes" xml:space="preserve">
          <source>Contains the request path.</source>
          <target state="translated">リクエストパスを含みます。</target>
        </trans-unit>
        <trans-unit id="9e5cfb9646f71cd822211c80b8933bc24a8e521e" translate="yes" xml:space="preserve">
          <source>Contains the server instance.</source>
          <target state="translated">サーバーのインスタンスが含まれています。</target>
        </trans-unit>
        <trans-unit id="2bc9d65dc1256692a2e937f4213ab404e14c2eaf" translate="yes" xml:space="preserve">
          <source>Contains the string representation of the HTTP request line. The terminating CRLF is stripped. This attribute should be set by &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.handle_one_request&quot;&gt;&lt;code&gt;handle_one_request()&lt;/code&gt;&lt;/a&gt;. If no valid request line was processed, it should be set to the empty string.</source>
          <target state="translated">HTTP要求行の文字列表現が含まれています。終端CRLFは取り除かれます。この属性は、&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.handle_one_request&quot;&gt; &lt;code&gt;handle_one_request()&lt;/code&gt; で&lt;/a&gt;設定する必要があります。有効なリクエスト行が処理されなかった場合は、空の文字列に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="391c873fec203910c609b37198451acfd412fcd4" translate="yes" xml:space="preserve">
          <source>Contains the version string from the request. For example, &lt;code&gt;'HTTP/1.0'&lt;/code&gt;.</source>
          <target state="translated">リクエストからのバージョン文字列が含まれます。たとえば、 &lt;code&gt;'HTTP/1.0'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="af9a353062fadf5addf03db98c0afe5c90ad9ade" translate="yes" xml:space="preserve">
          <source>Content Manager Instances</source>
          <target state="translated">コンテンツ マネージャのインスタンス</target>
        </trans-unit>
        <trans-unit id="57b69d80244d1fbb6860d4de9a9866abac3bae1c" translate="yes" xml:space="preserve">
          <source>Content Model Descriptions</source>
          <target state="translated">コンテンツモデルの説明</target>
        </trans-unit>
        <trans-unit id="79fe296b0f505924e110b508c2717f5b9490f69f" translate="yes" xml:space="preserve">
          <source>Content models are described using nested tuples. Each tuple contains four values: the type, the quantifier, the name, and a tuple of children. Children are simply additional content model descriptions.</source>
          <target state="translated">コンテンツ・モデルは、入れ子になったタプルを使って記述されます。各タプルには、型、量詞、名前、子のタプルの4つの値が含まれています。子は、単にコンテンツモデルの記述を追加したものです。</target>
        </trans-unit>
        <trans-unit id="e110164e48eb2005edaea92ef2259ca469941cda" translate="yes" xml:space="preserve">
          <source>ContentDispositionHeader</source>
          <target state="translated">ContentDispositionHeader</target>
        </trans-unit>
        <trans-unit id="20544962bc8a06022eedb31e2cbb2c15687f82ce" translate="yes" xml:space="preserve">
          <source>ContentHandler Objects</source>
          <target state="translated">ContentHandler オブジェクト</target>
        </trans-unit>
        <trans-unit id="43134b488990a4e70259a7181af7000fecb1c465" translate="yes" xml:space="preserve">
          <source>ContentTransferEncodingHeader</source>
          <target state="translated">ContentTransferEncodingHeader</target>
        </trans-unit>
        <trans-unit id="a8a9036c91aaf09a61a23701a286fd65e6480bec" translate="yes" xml:space="preserve">
          <source>ContentTypeHeader</source>
          <target state="translated">ContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">Contents</target>
        </trans-unit>
        <trans-unit id="e767d9450abcf964d2e9c8f67d11a8f5ae1b8b14" translate="yes" xml:space="preserve">
          <source>Contents of the &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package documentation:</source>
          <target state="translated">&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージドキュメントの内容：</target>
        </trans-unit>
        <trans-unit id="d933dab2e9178877d4ca282570c4c6792c6ce95f" translate="yes" xml:space="preserve">
          <source>Context Manager Types</source>
          <target state="translated">コンテキストマネージャの種類</target>
        </trans-unit>
        <trans-unit id="cc53b668da594be2db4cc51fe1361e9c45ac9417" translate="yes" xml:space="preserve">
          <source>Context Menus</source>
          <target state="translated">コンテキストメニュー</target>
        </trans-unit>
        <trans-unit id="22124f4ed85c933662a52e5eef5122e2c4fae1af" translate="yes" xml:space="preserve">
          <source>Context Variables</source>
          <target state="translated">コンテキスト変数</target>
        </trans-unit>
        <trans-unit id="397e5175f252c7b970e0f466c392f372628f669a" translate="yes" xml:space="preserve">
          <source>Context creation</source>
          <target state="translated">コンテキストの作成</target>
        </trans-unit>
        <trans-unit id="0e94ad3e2857377d2d50a5c75801d5cd96520fa4" translate="yes" xml:space="preserve">
          <source>Context diffs are a compact way of showing just the lines that have changed plus a few lines of context. The changes are shown in a before/after style. The number of context lines is set by &lt;em&gt;n&lt;/em&gt; which defaults to three.</source>
          <target state="translated">コンテキスト差分は、変更された行と数行のコンテキストのみを表示するコンパクトな方法です。変更は、前/後のスタイルで表示されます。コンテキスト行の数は&lt;em&gt;n&lt;/em&gt;によって設定され、デフォルトは3です。</target>
        </trans-unit>
        <trans-unit id="d18c8074be3bbe8efd2bb298227870b1c4ed59e4" translate="yes" xml:space="preserve">
          <source>Context implements the &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;collections.abc.Mapping&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">コンテキストは、&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;collections.abc.Mapping&lt;/code&gt; &lt;/a&gt;インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="fd3657cd49a05775d82ac04c4972bcaa856439d9" translate="yes" xml:space="preserve">
          <source>Context manager catching &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt; exception using &lt;a href=&quot;threading#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;threading#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;例外をキャッチするコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="ff82e6999f9a3d6f985bcee3756517da6279adb3" translate="yes" xml:space="preserve">
          <source>Context manager catching unraisable exception using &lt;a href=&quot;sys#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt;を使用してレイズできない例外をキャッチするコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="008d9f946973bbeb176ac84a088c19afb0475599" translate="yes" xml:space="preserve">
          <source>Context manager for temporarily redirecting &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; to another file or file-like object.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;を一時的に別のファイルまたはファイルのようなオブジェクトにリダイレクトするためのコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="8ed2e8d776e2e5433f325071f76bed95f6e64164" translate="yes" xml:space="preserve">
          <source>Context manager to check that no &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; was raised. You must remove the object which may emit &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; before the end of the context manager.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;が発生していないことを確認するコンテキストマネージャ。コンテキストマネージャが終了する前に、&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; を&lt;/a&gt;発行する可能性のあるオブジェクトを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="95c17dc5762dac4bce543ab0b78f950815d90ce8" translate="yes" xml:space="preserve">
          <source>Context manager to start &lt;em&gt;threads&lt;/em&gt;. It attempts to join the threads upon exit.</source>
          <target state="translated">&lt;em&gt;スレッド&lt;/em&gt;を開始するコンテキストマネージャ。終了時にスレッドを結合しようとします。</target>
        </trans-unit>
        <trans-unit id="190ee645669c1d551389201093d6a29f215600c7" translate="yes" xml:space="preserve">
          <source>Context manager to swap out an attribute with a new object.</source>
          <target state="translated">属性を新しいオブジェクトと入れ替えるためのコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="d5286d84fea2a14e8c4487ecbeed6d32f0d82e36" translate="yes" xml:space="preserve">
          <source>Context manager to swap out an item with a new object.</source>
          <target state="translated">アイテムを新しいオブジェクトと入れ替えるためのコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="664bf7c2a9e4540cca71ed1d0e6f009f8a57b092" translate="yes" xml:space="preserve">
          <source>Context manager to wait until all threads created in the &lt;code&gt;with&lt;/code&gt; statement exit.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; ステートメントで作成されたすべてのスレッドが終了するまで待機するコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="19570c934e3abf52c01663d93c22494a0a1b4ce7" translate="yes" xml:space="preserve">
          <source>Context manager: &lt;code&gt;__enter__&lt;/code&gt;, &lt;code&gt;__exit__&lt;/code&gt;, &lt;code&gt;__aenter__&lt;/code&gt; and &lt;code&gt;__aexit__&lt;/code&gt;</source>
          <target state="translated">コンテキストマネージャ： &lt;code&gt;__enter__&lt;/code&gt; 、 &lt;code&gt;__exit__&lt;/code&gt; 、 &lt;code&gt;__aenter__&lt;/code&gt; および &lt;code&gt;__aexit__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea2bb9ff18ab9d5e7b294f4215464d40282d9eb9" translate="yes" xml:space="preserve">
          <source>Context managers created using &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; are also single use context managers, and will complain about the underlying generator failing to yield if an attempt is made to use them a second time:</source>
          <target state="translated">&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt;を使用して作成されたコンテキストマネージャーも使い捨てのコンテキストマネージャーであり、それらを再度使用しようとすると、基になるジェネレーターが生成に失敗することについて不平を言うでしょう：</target>
        </trans-unit>
        <trans-unit id="f439895d237ef92a50748bf9550cf14bce651d7d" translate="yes" xml:space="preserve">
          <source>Context managers inheriting from &lt;code&gt;ContextDecorator&lt;/code&gt; have to implement &lt;code&gt;__enter__&lt;/code&gt; and &lt;code&gt;__exit__&lt;/code&gt; as normal. &lt;code&gt;__exit__&lt;/code&gt; retains its optional exception handling even when used as a decorator.</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; から継承するコンテキストマネージャは、通常 &lt;code&gt;__enter__&lt;/code&gt; および &lt;code&gt;__exit__&lt;/code&gt; を実装する必要があります。 &lt;code&gt;__exit__&lt;/code&gt; は、デコレータとして使用されている場合でも、オプションの例外処理を保持します。</target>
        </trans-unit>
        <trans-unit id="7cddd75cd76c3b336a566ea561412fa843dd5049" translate="yes" xml:space="preserve">
          <source>Context managers that have state should use Context Variables instead of &lt;a href=&quot;threading#threading.local&quot;&gt;&lt;code&gt;threading.local()&lt;/code&gt;&lt;/a&gt; to prevent their state from bleeding to other code unexpectedly, when used in concurrent code.</source>
          <target state="translated">状態を持つコンテキストマネージャーは、同時実行コードで使用する場合、&lt;a href=&quot;threading#threading.local&quot;&gt; &lt;code&gt;threading.local()&lt;/code&gt; の&lt;/a&gt;代わりにコンテキスト変数を使用して、状態が他のコードに予期せず出血するのを防ぐ必要があります。</target>
        </trans-unit>
        <trans-unit id="ceae12cc6e8c7c7643844dd37f2fc0d81072e5fa" translate="yes" xml:space="preserve">
          <source>Context objects</source>
          <target state="translated">コンテキストオブジェクト</target>
        </trans-unit>
        <trans-unit id="f25494f55e5d59dcc8a1fb49430944421fac35a6" translate="yes" xml:space="preserve">
          <source>Context of reference to group &amp;ldquo;quote&amp;rdquo;</source>
          <target state="translated">グループ「引用」への参照のコンテキスト</target>
        </trans-unit>
        <trans-unit id="35dc236085f7a90a29b47879e8e4ff30179101e8" translate="yes" xml:space="preserve">
          <source>Context variables are natively supported in &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; and are ready to be used without any extra configuration. For example, here is a simple echo server, that uses a context variable to make the address of a remote client available in the Task that handles that client:</source>
          <target state="translated">コンテキスト変数は&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; で&lt;/a&gt;ネイティブにサポートされており、追加の構成なしで使用できます。たとえば、次の簡単なエコーサーバーは、コンテキスト変数を使用して、リモートクライアントのアドレスを、そのクライアントを処理するタスクで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="779b80476d80c11144e76a7d5600da3c912f15b0" translate="yes" xml:space="preserve">
          <source>Contexts also have signal flags for monitoring exceptional conditions encountered during computations. The flags remain set until explicitly cleared, so it is best to clear the flags before each set of monitored computations by using the &lt;code&gt;clear_flags()&lt;/code&gt; method.</source>
          <target state="translated">コンテキストには、計算中に発生した例外的な状態を監視するためのシグナルフラグもあります。フラグは明示的にクリアされるまで設定されたままなので、 &lt;code&gt;clear_flags()&lt;/code&gt; メソッドを使用して、監視される計算の各セットの前にフラグをクリアするのが最善です。</target>
        </trans-unit>
        <trans-unit id="fe615e136147aff42005b2d9cfc3648b903b2067" translate="yes" xml:space="preserve">
          <source>Contexts and start methods</source>
          <target state="translated">コンテキストと開始方法</target>
        </trans-unit>
        <trans-unit id="44bfc5f26016522aa8810ba721358b0e4a986e56" translate="yes" xml:space="preserve">
          <source>Contexts are environments for arithmetic operations. They govern precision, set rules for rounding, determine which signals are treated as exceptions, and limit the range for exponents.</source>
          <target state="translated">コンテキストは算術演算のための環境です。コンテキストは精度を管理し、丸めのルールを設定し、どの信号を例外として扱うかを決定し、指数の範囲を制限します。</target>
        </trans-unit>
        <trans-unit id="20b9653de83c6d0c827f014ff48ecc78a6ea74f5" translate="yes" xml:space="preserve">
          <source>Continue execution until the current function returns.</source>
          <target state="translated">現在の関数が戻るまで実行を続けます。</target>
        </trans-unit>
        <trans-unit id="415875c9f5d435b5ae611748fdb47538e7451f0a" translate="yes" xml:space="preserve">
          <source>Continue execution until the next line in the current function is reached or it returns. (The difference between &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pdbcommand-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; is that &lt;a href=&quot;#pdbcommand-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; stops inside a called function, while &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; executes called functions at (nearly) full speed, only stopping at the next line in the current function.)</source>
          <target state="translated">現在の関数の次の行に到達するか、関数が戻るまで実行を続けます。（差&lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#pdbcommand-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;つまり&lt;a href=&quot;#pdbcommand-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;ながら、呼び出された関数の内部で停止し&lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;実行のみが現在の関数の次の行で停止し、（ほぼ）フルスピードでの機能と呼ばれます。）</target>
        </trans-unit>
        <trans-unit id="bd5719c93a846674c02834107588b76fe14be2cd" translate="yes" xml:space="preserve">
          <source>Continue execution, only stop when a breakpoint is encountered.</source>
          <target state="translated">実行を継続し、ブレークポイントが発生した場合のみ停止します。</target>
        </trans-unit>
        <trans-unit id="513ca2eaff01b820d42f70b8bd82632628de2fab" translate="yes" xml:space="preserve">
          <source>Continuing from the previous example:</source>
          <target state="translated">先ほどの例の続きです。</target>
        </trans-unit>
        <trans-unit id="fbd5b29b5e1625b354ce86283c6a29c4617a1bcf" translate="yes" xml:space="preserve">
          <source>Continuing the example for &lt;a href=&quot;#contextlib.asynccontextmanager&quot;&gt;&lt;code&gt;asynccontextmanager()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#contextlib.asynccontextmanager&quot;&gt; &lt;code&gt;asynccontextmanager()&lt;/code&gt; の&lt;/a&gt;例を続ける：</target>
        </trans-unit>
        <trans-unit id="e4e25c83928ff58aeca88a23eab1e82aab7ce8be" translate="yes" xml:space="preserve">
          <source>Contrast the behavior of &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; with the behavior of &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;. Similar to &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, every type is a subtype of &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;. However, unlike &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, the reverse is not true: &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; a subtype of every other type.</source>
          <target state="translated">&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;の動作を&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;の動作と比較してください。&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;と同様に、すべてのタイプは&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;サブタイプです。ただし、&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;とは異なり、その逆は当てはまりません。&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;は他のすべてのタイプのサブタイプではあり&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ea1d3df298ca84104dbf8b2f6f916c02f6f77c6e" translate="yes" xml:space="preserve">
          <source>Control</source>
          <target state="translated">Control</target>
        </trans-unit>
        <trans-unit id="499039f5c77f863940d3171121ca072e995f28b8" translate="yes" xml:space="preserve">
          <source>Control how the generated byte-code files are invalidated at runtime. The &lt;code&gt;timestamp&lt;/code&gt; value, means that &lt;code&gt;.pyc&lt;/code&gt; files with the source timestamp and size embedded will be generated. The &lt;code&gt;checked-hash&lt;/code&gt; and &lt;code&gt;unchecked-hash&lt;/code&gt; values cause hash-based pycs to be generated. Hash-based pycs embed a hash of the source file contents rather than a timestamp. See &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#pyc-invalidation&quot;&gt;Cached bytecode invalidation&lt;/a&gt; for more information on how Python validates bytecode cache files at runtime. The default is &lt;code&gt;timestamp&lt;/code&gt; if the &lt;code id=&quot;index-1&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is not set, and &lt;code&gt;checked-hash&lt;/code&gt; if the &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set.</source>
          <target state="translated">生成されたバイトコードファイルが実行時に無効化される方法を制御します。 &lt;code&gt;timestamp&lt;/code&gt; 値、ということを意味 &lt;code&gt;.pyc&lt;/code&gt; 埋め込まれたソースのタイムスタンプとサイズのファイルが生成されます。 &lt;code&gt;checked-hash&lt;/code&gt; と &lt;code&gt;unchecked-hash&lt;/code&gt; ハッシュベースpycs原因値が生成されます。ハッシュベースのpycsは、タイムスタンプではなくソースファイルの内容のハッシュを埋め込みます。Pythonが実行時にバイトコードキャッシュファイルを検証する方法の詳細については、&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#pyc-invalidation&quot;&gt;キャッシュされたバイトコードの無効化&lt;/a&gt;をご覧ください。 &lt;code id=&quot;index-1&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 環境変数が設定されていない場合のデフォルトは &lt;code&gt;timestamp&lt;/code&gt; であり、 &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 環境変数が設定されている場合は &lt;code&gt;checked-hash&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90cdc7ffb52b64ce7edd4b0deb00208a2e4a7d2b" translate="yes" xml:space="preserve">
          <source>Control parsing of parameter entities (including the external DTD subset). Possible &lt;em&gt;flag&lt;/em&gt; values are &lt;code&gt;XML_PARAM_ENTITY_PARSING_NEVER&lt;/code&gt;, &lt;code&gt;XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE&lt;/code&gt; and &lt;code&gt;XML_PARAM_ENTITY_PARSING_ALWAYS&lt;/code&gt;. Return true if setting the flag was successful.</source>
          <target state="translated">パラメータエンティティ（外部DTDサブセットを含む）の解析を制御します。可能な&lt;em&gt;フラグ&lt;/em&gt;値は &lt;code&gt;XML_PARAM_ENTITY_PARSING_NEVER&lt;/code&gt; 、 &lt;code&gt;XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE&lt;/code&gt; および &lt;code&gt;XML_PARAM_ENTITY_PARSING_ALWAYS&lt;/code&gt; です。フラグの設定が成功した場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="dcba5ad75ded78eaa161badad582723cb59b207b" translate="yes" xml:space="preserve">
          <source>Control the maximum recursion level for subdirectories. If this is given, then &lt;code&gt;-l&lt;/code&gt; option will not be taken into account. &lt;strong&gt;python -m compileall &amp;lt;directory&amp;gt; -r 0&lt;/strong&gt; is equivalent to &lt;strong&gt;python -m compileall &amp;lt;directory&amp;gt; -l&lt;/strong&gt;.</source>
          <target state="translated">サブディレクトリの最大再帰レベルを制御します。これを指定した場合、 &lt;code&gt;-l&lt;/code&gt; オプションは考慮されません。&lt;strong&gt;python -m compileall &amp;lt;directory&amp;gt; -r 0&lt;/strong&gt;は&lt;strong&gt;python -m compileall &amp;lt;directory&amp;gt; -l&lt;/strong&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="c4908f3ceb6e481e6fb66e13e4bf09b156c657fe" translate="yes" xml:space="preserve">
          <source>Control the number of TLS 1.3 session tickets of a &lt;code&gt;TLS_PROTOCOL_SERVER&lt;/code&gt; context. The setting has no impact on TLS 1.0 to 1.2 connections.</source>
          <target state="translated">&lt;code&gt;TLS_PROTOCOL_SERVER&lt;/code&gt; コンテキストのTLS 1.3セッションチケットの数を制御します。この設定は、TLS 1.0から1.2の接続には影響しません。</target>
        </trans-unit>
        <trans-unit id="0f4283a878a8bd4e87d7c6a6ba9fd09f626f9f39" translate="yes" xml:space="preserve">
          <source>Control what happens when the cursor of a window is moved off the edge of the window or scrolling region, either as a result of a newline action on the bottom line, or typing the last character of the last line. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the cursor is left on the bottom line. If &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the window is scrolled up one line. Note that in order to get the physical scrolling effect on the terminal, it is also necessary to call &lt;a href=&quot;#curses.window.idlok&quot;&gt;&lt;code&gt;idlok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一番下の行での改行アクションの結果として、または最後の行の最後の文字を入力して、ウィンドウのカーソルがウィンドウまたはスクロール領域の端から移動したときに何が起こるかを制御します。場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; 、カーソルは最下行に残されています。場合は&lt;em&gt;フラグが&lt;/em&gt;ある &lt;code&gt;True&lt;/code&gt; 、ウィンドウは1行上にスクロールされます。端末で物理的なスクロール効果を得るには、&lt;a href=&quot;#curses.window.idlok&quot;&gt; &lt;code&gt;idlok()&lt;/code&gt; &lt;/a&gt;を呼び出すことも必要です。</target>
        </trans-unit>
        <trans-unit id="c85ae554bead038054e31026a2c2b6557cbd22fe" translate="yes" xml:space="preserve">
          <source>Control-A</source>
          <target state="translated">Control-A</target>
        </trans-unit>
        <trans-unit id="1f25034a3748e6a662153881d4a3ad106252cae0" translate="yes" xml:space="preserve">
          <source>Control-B</source>
          <target state="translated">Control-B</target>
        </trans-unit>
        <trans-unit id="9ddba1aa2b8740846582df2425d6760f92e3d0f1" translate="yes" xml:space="preserve">
          <source>Control-C</source>
          <target state="translated">Control-C</target>
        </trans-unit>
        <trans-unit id="ba1eeec2c01c8f6e60827d09f9c5bfc96582a1fb" translate="yes" xml:space="preserve">
          <source>Control-D</source>
          <target state="translated">Control-D</target>
        </trans-unit>
        <trans-unit id="a4bce1852922503aa47770c7d86691111b8c0a0d" translate="yes" xml:space="preserve">
          <source>Control-E</source>
          <target state="translated">Control-E</target>
        </trans-unit>
        <trans-unit id="231c60648dcda3212201c0b18697e2924598c5c1" translate="yes" xml:space="preserve">
          <source>Control-F</source>
          <target state="translated">Control-F</target>
        </trans-unit>
        <trans-unit id="b2341251eb66bf15616601201e4ad7a490a81b23" translate="yes" xml:space="preserve">
          <source>Control-G</source>
          <target state="translated">Control-G</target>
        </trans-unit>
        <trans-unit id="b569e22e383138d0d3070050bb6943e412f90719" translate="yes" xml:space="preserve">
          <source>Control-H</source>
          <target state="translated">Control-H</target>
        </trans-unit>
        <trans-unit id="30ac4e7914d41014ec5f540477334e8d18d328bc" translate="yes" xml:space="preserve">
          <source>Control-J</source>
          <target state="translated">Control-J</target>
        </trans-unit>
        <trans-unit id="ca33fbcb15fee93aed33c540c2a7ee453908d79d" translate="yes" xml:space="preserve">
          <source>Control-K</source>
          <target state="translated">Control-K</target>
        </trans-unit>
        <trans-unit id="79eb6bec14117e11d1f3956e29e17fbaf6d72b72" translate="yes" xml:space="preserve">
          <source>Control-L</source>
          <target state="translated">Control-L</target>
        </trans-unit>
        <trans-unit id="b29f8b7f276933699f169072a1ca7e0a2c9398fc" translate="yes" xml:space="preserve">
          <source>Control-N</source>
          <target state="translated">Control-N</target>
        </trans-unit>
        <trans-unit id="e4d6f649c58c3f7b0d2a4d8f9a78da5d9b79598a" translate="yes" xml:space="preserve">
          <source>Control-O</source>
          <target state="translated">Control-O</target>
        </trans-unit>
        <trans-unit id="388f8ba447918f85c9a44844b1e30fdfc5720bde" translate="yes" xml:space="preserve">
          <source>Control-P</source>
          <target state="translated">Control-P</target>
        </trans-unit>
        <trans-unit id="4975b2ebd27dc7bd50339d0201bb8c19c57bafe9" translate="yes" xml:space="preserve">
          <source>Control-Tab</source>
          <target state="translated">Control-Tab</target>
        </trans-unit>
        <trans-unit id="78b7de52efb073fba4ec6bccd0284c1316e452dd" translate="yes" xml:space="preserve">
          <source>Control-h</source>
          <target state="translated">Control-h</target>
        </trans-unit>
        <trans-unit id="9caf7152d0a9a97a7d264aa8a6a55c62cba214cb" translate="yes" xml:space="preserve">
          <source>Controlling Transactions</source>
          <target state="translated">取引の制御</target>
        </trans-unit>
        <trans-unit id="b7a8019f4f9d050d2c3203b1ea700872d1e2c112" translate="yes" xml:space="preserve">
          <source>Controls how instances of &lt;em&gt;quotechar&lt;/em&gt; appearing inside a field should themselves be quoted. When &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the character is doubled. When &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, the &lt;em&gt;escapechar&lt;/em&gt; is used as a prefix to the &lt;em&gt;quotechar&lt;/em&gt;. It defaults to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールド内に表示される&lt;em&gt;quotecharの&lt;/em&gt;インスタンス自体を引用する方法を制御します。とき&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;、文字が2倍になります。場合は&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;、&lt;em&gt;EscapeCharには、&lt;/em&gt;の接頭辞として使用されている&lt;em&gt;quotechar&lt;/em&gt;。デフォルトは&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="91e8ea3cc17cd28c07caf3e5b17a148562f5fa36" translate="yes" xml:space="preserve">
          <source>Controls how the built-in class bindings manage the selection. One of &amp;ldquo;extended&amp;rdquo;, &amp;ldquo;browse&amp;rdquo; or &amp;ldquo;none&amp;rdquo;. If set to &amp;ldquo;extended&amp;rdquo; (the default), multiple items may be selected. If &amp;ldquo;browse&amp;rdquo;, only a single item will be selected at a time. If &amp;ldquo;none&amp;rdquo;, the selection will not be changed.</source>
          <target state="translated">組み込みのクラスバインディングが選択を管理する方法を制御します。「拡張」、「ブラウズ」、「なし」のいずれか。「拡張」（デフォルト）に設定すると、複数のアイテムが選択される場合があります。「参照」の場合は、一度に1つのアイテムのみが選択されます。「なし」の場合、選択は変更されません。</target>
        </trans-unit>
        <trans-unit id="4c571e091afd60915d7f4e20c2ee293c04b25efc" translate="yes" xml:space="preserve">
          <source>Controls the type of Content Transfer Encodings that may be or are required to be used. The possible values are:</source>
          <target state="translated">使用する可能性がある、または使用する必要があるコンテンツ転送エンコードのタイプを制御します。使用可能な値は次のとおりです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
